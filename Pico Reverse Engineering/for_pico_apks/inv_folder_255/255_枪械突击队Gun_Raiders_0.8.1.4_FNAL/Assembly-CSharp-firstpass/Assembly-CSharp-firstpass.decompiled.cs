using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.Globalization;
using System.IO;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Text;
using Ara;
using DarkTonic.MasterAudio;
using Febucci.Attributes;
using Febucci.UI.Core;
using Il2CppDummyDll;
using Microsoft.CodeAnalysis;
using Photon.Pun;
using Photon.Realtime;
using RootMotion.Dynamics;
using Smooth;
using TMPro;
using Timers;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Playables;
using UnityEngine.Rendering;
using UnityEngine.SceneManagement;
using UnityEngine.Scripting;
using UnityEngine.UI;
using UnityEngine.Video;
using VoxelBusters.CoreLibrary;
using VoxelBusters.EssentialKit.NativeUICore;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB070", Offset = "0x8CB070")]
internal sealed class <>f__AnonymousType0<<domainAssembly>j__TPar, <assemblyType>j__TPar>
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x8CD960", Offset = "0x8CD960")]
	private readonly <domainAssembly>j__TPar <domainAssembly>i__Field;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x8CD974", Offset = "0x8CD974")]
	private readonly <assemblyType>j__TPar <assemblyType>i__Field;

	[Token(Token = "0x17000001")]
	public <domainAssembly>j__TPar domainAssembly
	{
		[Token(Token = "0x6000001")]
		get
		{
			return (<domainAssembly>j__TPar)null;
		}
	}

	[Token(Token = "0x17000002")]
	public <assemblyType>j__TPar assemblyType
	{
		[Token(Token = "0x6000002")]
		get
		{
			return (<assemblyType>j__TPar)null;
		}
	}

	[Token(Token = "0x6000003")]
	[DebuggerHidden]
	public <>f__AnonymousType0(<domainAssembly>j__TPar domainAssembly, <assemblyType>j__TPar assemblyType)
	{
	}

	[Token(Token = "0x6000004")]
	[DebuggerHidden]
	public override bool Equals(object value)
	{
		return default(bool);
	}

	[Token(Token = "0x6000005")]
	[DebuggerHidden]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x6000006")]
	[DebuggerHidden]
	public override string ToString()
	{
		return null;
	}
}
namespace Microsoft.CodeAnalysis
{
	[Token(Token = "0x2000003")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB080", Offset = "0x8CB080")]
	[Microsoft.CodeAnalysis.Embedded]
	internal sealed class EmbeddedAttribute : Attribute
	{
		[Token(Token = "0x6000007")]
		[Address(RVA = "0xCC8164", Offset = "0xCC8164", VA = "0xCC8164")]
		public EmbeddedAttribute()
		{
		}
	}
}
namespace System.Runtime.CompilerServices
{
	[Token(Token = "0x2000004")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB0B8", Offset = "0x8CB0B8")]
	[Microsoft.CodeAnalysis.Embedded]
	internal sealed class IsReadOnlyAttribute : Attribute
	{
		[Token(Token = "0x6000008")]
		[Address(RVA = "0xB144E4", Offset = "0xB144E4", VA = "0xB144E4")]
		public IsReadOnlyAttribute()
		{
		}
	}
}
[Token(Token = "0x2000005")]
public class GameObjectSpawner : MonoBehaviour
{
	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] particles;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material[] materials;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color[] cameraColors;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int maxButtons;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool spawnOnAwake;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool showInfo;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string removeTextFromButton;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string removeTextFromMaterialButton;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float autoChangeDelay;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int page;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int pages;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string currentGOInfo;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GameObject currentGO;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Color currentColor;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool isPS;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Material material;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool _active;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private int counter;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int matCounter;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private int colorCounter;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GUIStyle bigStyle;

	[Token(Token = "0x6000009")]
	[Address(RVA = "0x15367CC", Offset = "0x15367CC", VA = "0x15367CC")]
	public void Start()
	{
	}

	[Token(Token = "0x600000A")]
	[Address(RVA = "0x1536B18", Offset = "0x1536B18", VA = "0x1536B18")]
	public void Update()
	{
	}

	[Token(Token = "0x600000B")]
	[Address(RVA = "0x1536E90", Offset = "0x1536E90", VA = "0x1536E90")]
	public void NextModel()
	{
	}

	[Token(Token = "0x600000C")]
	[Address(RVA = "0x1536F2C", Offset = "0x1536F2C", VA = "0x1536F2C")]
	public void OnGUI()
	{
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0x1536A14", Offset = "0x1536A14", VA = "0x1536A14")]
	public void Info(GameObject go, int i)
	{
	}

	[Token(Token = "0x600000E")]
	[Address(RVA = "0x15368D0", Offset = "0x15368D0", VA = "0x15368D0")]
	public void ReplaceGO(GameObject _go)
	{
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0x15376E0", Offset = "0x15376E0", VA = "0x15376E0")]
	public void PlayPS(ParticleSystem _ps, int _nr)
	{
	}

	[Token(Token = "0x6000010")]
	[Address(RVA = "0x15379FC", Offset = "0x15379FC", VA = "0x15379FC")]
	public void InfoGO(GameObject _ps, int _nr)
	{
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0x1537D20", Offset = "0x1537D20", VA = "0x1537D20")]
	public void Instructions()
	{
	}

	[Token(Token = "0x6000012")]
	[Address(RVA = "0x1537718", Offset = "0x1537718", VA = "0x1537718")]
	public void InfoPS(ParticleSystem _ps, int _nr)
	{
	}

	[Token(Token = "0x6000013")]
	[Address(RVA = "0x1537DBC", Offset = "0x1537DBC", VA = "0x1537DBC")]
	public GameObjectSpawner()
	{
	}
}
[Token(Token = "0x2000006")]
public class LookAtCamera : MonoBehaviour
{
	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera lookAtCamera;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool lookOnlyOnAwake;

	[Token(Token = "0x6000014")]
	[Address(RVA = "0xB16958", Offset = "0xB16958", VA = "0xB16958")]
	public void Start()
	{
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0xB16A40", Offset = "0xB16A40", VA = "0xB16A40")]
	public void Update()
	{
	}

	[Token(Token = "0x6000016")]
	[Address(RVA = "0xB169F0", Offset = "0xB169F0", VA = "0xB169F0")]
	public void LookCamera()
	{
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0xB16A50", Offset = "0xB16A50", VA = "0xB16A50")]
	public LookAtCamera()
	{
	}
}
[Token(Token = "0x2000007")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8CB0F0", Offset = "0x8CB0F0")]
public class ThreeDParticlesSmoothCameraOrbit : MonoBehaviour
{
	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 targetOffset;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float distance;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maxDistance;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float minDistance;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float xSpeed;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float ySpeed;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int yMinLimit;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int yMaxLimit;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int zoomRate;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float panSpeed;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float zoomDampening;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float autoRotate;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float autoRotateSpeed;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float xDeg;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float yDeg;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float currentDistance;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float desiredDistance;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Quaternion currentRotation;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Quaternion desiredRotation;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Quaternion rotation;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector3 position;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float idleTimer;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float idleSmooth;

	[Token(Token = "0x6000018")]
	[Address(RVA = "0x1140DA8", Offset = "0x1140DA8", VA = "0x1140DA8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0x11410D0", Offset = "0x11410D0", VA = "0x11410D0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0x1140DAC", Offset = "0x1140DAC", VA = "0x1140DAC")]
	public void Init()
	{
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0x11410D4", Offset = "0x11410D4", VA = "0x11410D4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0x114155C", Offset = "0x114155C", VA = "0x114155C")]
	private static float ClampAngle(float angle, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0x114158C", Offset = "0x114158C", VA = "0x114158C")]
	public ThreeDParticlesSmoothCameraOrbit()
	{
	}
}
[Token(Token = "0x2000008")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8CB128", Offset = "0x8CB128")]
public class BakeTrail : MonoBehaviour
{
	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AraTrail trail;

	[Token(Token = "0x600001E")]
	[Address(RVA = "0xD71EB8", Offset = "0xD71EB8", VA = "0xD71EB8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0xD71F0C", Offset = "0xD71F0C", VA = "0xD71F0C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0xD71F48", Offset = "0xD71F48", VA = "0xD71F48")]
	private void Bake()
	{
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0xD72134", Offset = "0xD72134", VA = "0xD72134")]
	public BakeTrail()
	{
	}
}
[Token(Token = "0x2000009")]
public class WobblePath : MonoBehaviour
{
	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float amplitude;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 offset;

	[Token(Token = "0x6000022")]
	[Address(RVA = "0xC13298", Offset = "0xC13298", VA = "0xC13298")]
	private void Update()
	{
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0xC13350", Offset = "0xC13350", VA = "0xC13350")]
	public WobblePath()
	{
	}
}
[Token(Token = "0x200000A")]
public class Handanimation : MonoBehaviour
{
	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CD988", Offset = "0x8CD988")]
	public Animator anim;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CD9C0", Offset = "0x8CD9C0")]
	public int animationindex;

	[Token(Token = "0x6000024")]
	[Address(RVA = "0x1568A48", Offset = "0x1568A48", VA = "0x1568A48")]
	private void Update()
	{
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0x1568A7C", Offset = "0x1568A7C", VA = "0x1568A7C")]
	private int AnimationIndex()
	{
		return default(int);
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0x1568A90", Offset = "0x1568A90", VA = "0x1568A90")]
	private void SetAnimation()
	{
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0x1568B04", Offset = "0x1568B04", VA = "0x1568B04")]
	public Handanimation()
	{
	}
}
[Token(Token = "0x200000B")]
[AttributeAttribute(Name = "AudioScriptOrder", RVA = "0x8CB188", Offset = "0x8CB188")]
public class ListenerFollower : MonoBehaviour
{
	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform _transToFollow;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject _goToFollow;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform _trans;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject _go;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SphereCollider _collider;

	[Token(Token = "0x17000003")]
	public SphereCollider Trigger
	{
		[Token(Token = "0x600002C")]
		[Address(RVA = "0xB16178", Offset = "0xB16178", VA = "0xB16178")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000004")]
	public GameObject GameObj
	{
		[Token(Token = "0x600002D")]
		[Address(RVA = "0xB168C4", Offset = "0xB168C4", VA = "0xB168C4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000005")]
	public Transform Trans
	{
		[Token(Token = "0x600002E")]
		[Address(RVA = "0xB164A0", Offset = "0xB164A0", VA = "0xB164A0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0xB16100", Offset = "0xB16100", VA = "0xB16100")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000029")]
	[Address(RVA = "0xB16230", Offset = "0xB16230", VA = "0xB16230")]
	public void StartFollowing(Transform transToFollow, float trigRadius)
	{
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0xB16288", Offset = "0xB16288", VA = "0xB16288")]
	public void ManualUpdate()
	{
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0xB1634C", Offset = "0xB1634C", VA = "0xB1634C")]
	private void BatchOcclusionRaycasts()
	{
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0xB16950", Offset = "0xB16950", VA = "0xB16950")]
	public ListenerFollower()
	{
	}
}
[Token(Token = "0x200000C")]
public static class OculusAudioHelper
{
	[Token(Token = "0x6000030")]
	[Address(RVA = "0xC2526C", Offset = "0xC2526C", VA = "0xC2526C")]
	public static bool DarkTonicOculusAudioPackageInstalled()
	{
		return default(bool);
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0xC25274", Offset = "0xC25274", VA = "0xC25274")]
	public static void AddOculusAudioSourceToVariation(SoundGroupVariation variation)
	{
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0xC25278", Offset = "0xC25278", VA = "0xC25278")]
	public static void AddOculusAudioSourceToAllVariations()
	{
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0xC2527C", Offset = "0xC2527C", VA = "0xC2527C")]
	public static void RemoveOculusAudioSourceFromAllVariations()
	{
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0xC25280", Offset = "0xC25280", VA = "0xC25280")]
	public static void CopyOculusAudioSource(DynamicGroupVariation sourceVariation, DynamicGroupVariation destVariation)
	{
	}

	[Token(Token = "0x6000035")]
	[Address(RVA = "0xC25284", Offset = "0xC25284", VA = "0xC25284")]
	public static void CopyOculusAudioSource(DynamicGroupVariation sourceVariation, SoundGroupVariation destVariation)
	{
	}

	[Token(Token = "0x6000036")]
	[Address(RVA = "0xC25288", Offset = "0xC25288", VA = "0xC25288")]
	public static void CopyOculusAudioSource(SoundGroupVariation sourceVariation, DynamicGroupVariation destVariation)
	{
	}
}
[Token(Token = "0x200000D")]
public static class ResonanceAudioHelper
{
	[Token(Token = "0x17000006")]
	public static bool ResonanceAudioOptionExists
	{
		[Token(Token = "0x6000037")]
		[Address(RVA = "0xE5FAE8", Offset = "0xE5FAE8", VA = "0xE5FAE8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0xE5FAF0", Offset = "0xE5FAF0", VA = "0xE5FAF0")]
	public static bool DarkTonicResonanceAudioPackageInstalled()
	{
		return default(bool);
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0xE5FAF8", Offset = "0xE5FAF8", VA = "0xE5FAF8")]
	public static void AddResonanceAudioSourceToVariation(SoundGroupVariation variation)
	{
	}

	[Token(Token = "0x600003A")]
	[Address(RVA = "0xE5FAFC", Offset = "0xE5FAFC", VA = "0xE5FAFC")]
	public static void AddResonanceAudioSourceToAllVariations()
	{
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0xE5FB00", Offset = "0xE5FB00", VA = "0xE5FB00")]
	public static void RemoveResonanceAudioSourceFromAllVariations()
	{
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0xE5FB04", Offset = "0xE5FB04", VA = "0xE5FB04")]
	public static void CopyResonanceAudioSource(DynamicGroupVariation sourceVariation, DynamicGroupVariation destVariation)
	{
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0xE5FB08", Offset = "0xE5FB08", VA = "0xE5FB08")]
	public static void CopyResonanceAudioSource(DynamicGroupVariation sourceVariation, SoundGroupVariation destVariation)
	{
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0xE5FB0C", Offset = "0xE5FB0C", VA = "0xE5FB0C")]
	public static void CopyResonanceAudioSource(SoundGroupVariation sourceVariation, DynamicGroupVariation destVariation)
	{
	}
}
[Token(Token = "0x200000E")]
public class TransformFollower : MonoBehaviour
{
	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CD9F8", Offset = "0x8CD9F8")]
	public Transform RuntimeFollowingTransform;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject _goToFollow;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform _trans;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject _go;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SphereCollider _collider;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string _soundType;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string _variationName;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _willFollowSource;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool _isInsideTrigger;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
	private bool _hasPlayedSound;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float _playVolume;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _positionAtClosestColliderPoint;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private MasterAudio.AmbientSoundExitMode _exitMode;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float _exitFadeTime;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private MasterAudio.AmbientSoundReEnterMode _reEnterMode;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float _reEnterFadeTime;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private readonly List<Collider> _actorColliders;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3 _lastListenerPos;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private readonly Dictionary<Collider, Vector3> _lastPositionByCollider;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private PlaySoundResult playingVariation;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private PlaySoundResult fadingVariation;

	[Token(Token = "0x17000007")]
	public SphereCollider Trigger
	{
		[Token(Token = "0x6000049")]
		[Address(RVA = "0x1146100", Offset = "0x1146100", VA = "0x1146100")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000008")]
	public GameObject GameObj
	{
		[Token(Token = "0x600004A")]
		[Address(RVA = "0x1146CE4", Offset = "0x1146CE4", VA = "0x1146CE4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000009")]
	public Transform Trans
	{
		[Token(Token = "0x600004B")]
		[Address(RVA = "0x11472B4", Offset = "0x11472B4", VA = "0x11472B4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600003F")]
	[Address(RVA = "0x114602C", Offset = "0x114602C", VA = "0x114602C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0x11461B8", Offset = "0x11461B8", VA = "0x11461B8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000041")]
	[Address(RVA = "0x1146374", Offset = "0x1146374", VA = "0x1146374")]
	public void StartFollowing(Transform transToFollow, string soundType, string variationName, float volume, float trigRadius, bool willFollowSource, bool positionAtClosestColliderPoint, bool useTopCollider, bool useChildColliders, MasterAudio.AmbientSoundExitMode exitMode, float exitFadeTime, MasterAudio.AmbientSoundReEnterMode reEnterMode, float reEnterFadeTime)
	{
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0x1146C6C", Offset = "0x1146C6C", VA = "0x1146C6C")]
	private void StopFollowing()
	{
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0x1146D70", Offset = "0x1146D70", VA = "0x1146D70")]
	private void PlaySound()
	{
	}

	[Token(Token = "0x6000044")]
	[Address(RVA = "0x11471C4", Offset = "0x11471C4", VA = "0x11471C4")]
	public void ManualUpdate()
	{
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0x11467D8", Offset = "0x11467D8", VA = "0x11467D8")]
	public bool RecalcClosestColliderPosition(bool forceRecalc = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0x1147340", Offset = "0x1147340", VA = "0x1147340")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000047")]
	[Address(RVA = "0x114745C", Offset = "0x114745C", VA = "0x114745C")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0x1146224", Offset = "0x1146224", VA = "0x1146224")]
	private void PerformTriggerExit()
	{
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0x1147554", Offset = "0x1147554", VA = "0x1147554")]
	public TransformFollower()
	{
	}
}
[Token(Token = "0x200000F")]
public class FG_GameObjectGUIDs : MonoBehaviour
{
	[NonSerialized]
	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool _dirty;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public string[] guids;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public UnityEngine.Object[] objects;

	[Token(Token = "0x600004D")]
	[Address(RVA = "0x1530EE0", Offset = "0x1530EE0", VA = "0x1530EE0")]
	private FG_GameObjectGUIDs()
	{
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0x1530FA0", Offset = "0x1530FA0", VA = "0x1530FA0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0x1531008", Offset = "0x1531008", VA = "0x1531008")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0x1531070", Offset = "0x1531070", VA = "0x1531070")]
	private void OnDestroy()
	{
	}
}
[Token(Token = "0x2000010")]
public class RotateObject : MonoBehaviour
{
	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float x;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float y;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float z;

	[Token(Token = "0x6000052")]
	[Address(RVA = "0xE601C4", Offset = "0xE601C4", VA = "0xE601C4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000053")]
	[Address(RVA = "0xE60250", Offset = "0xE60250", VA = "0xE60250")]
	public RotateObject()
	{
	}
}
[Token(Token = "0x2000011")]
public class ScrollingUVs_Layers : MonoBehaviour
{
	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector2 uvAnimationRate;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string textureName;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector2 uvOffset;

	[Token(Token = "0x6000054")]
	[Address(RVA = "0xE6339C", Offset = "0xE6339C", VA = "0xE6339C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0xE6345C", Offset = "0xE6345C", VA = "0xE6345C")]
	public ScrollingUVs_Layers()
	{
	}
}
[Token(Token = "0x2000012")]
public class PortalsFX2_ActivatonDelay : MonoBehaviour
{
	[Token(Token = "0x2000013")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB19C", Offset = "0x8CB19C")]
	private sealed class <ActivationRoutine>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400005D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400005E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400005F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PortalsFX2_ActivatonDelay <>4__this;

		[Token(Token = "0x1700000A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600005C")]
			[Address(RVA = "0x1906F00", Offset = "0x1906F00", VA = "0x1906F00", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700000B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600005E")]
			[Address(RVA = "0x1906F48", Offset = "0x1906F48", VA = "0x1906F48", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000059")]
		[Address(RVA = "0x1906E10", Offset = "0x1906E10", VA = "0x1906E10")]
		[DebuggerHidden]
		public <ActivationRoutine>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x600005A")]
		[Address(RVA = "0x1906E3C", Offset = "0x1906E3C", VA = "0x1906E3C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600005B")]
		[Address(RVA = "0x1906E40", Offset = "0x1906E40", VA = "0x1906E40", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600005D")]
		[Address(RVA = "0x1906F08", Offset = "0x1906F08", VA = "0x1906F08", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject objectToActivate;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Delay;

	[Token(Token = "0x6000056")]
	[Address(RVA = "0x10A1C3C", Offset = "0x10A1C3C", VA = "0x10A1C3C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000057")]
	[Address(RVA = "0x10A1C68", Offset = "0x10A1C68", VA = "0x10A1C68")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DCA98", Offset = "0x8DCA98")]
	private IEnumerator ActivationRoutine()
	{
		return null;
	}

	[Token(Token = "0x6000058")]
	[Address(RVA = "0x10A1CD4", Offset = "0x10A1CD4", VA = "0x10A1CD4")]
	public PortalsFX2_ActivatonDelay()
	{
	}
}
[Token(Token = "0x2000014")]
public class PortalsFX2_AxisRotateByTime : MonoBehaviour
{
	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 RotateAxis;

	[Token(Token = "0x600005F")]
	[Address(RVA = "0x10A1CDC", Offset = "0x10A1CDC", VA = "0x10A1CDC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0x10A1CE0", Offset = "0x10A1CE0", VA = "0x10A1CE0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000061")]
	[Address(RVA = "0x10A1D48", Offset = "0x10A1D48", VA = "0x10A1D48")]
	public PortalsFX2_AxisRotateByTime()
	{
	}
}
[Token(Token = "0x2000015")]
public class PortalsFX2_DemoGUI : MonoBehaviour
{
	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] Prefabs;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float[] ReactivationTimes;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Light Sun;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ReflectionProbe ReflectionProbe;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Light[] NightLights;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Texture HUETexture;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool isDay;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int currentNomber;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject currentInstance;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GUIStyle guiStyleHeader;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GUIStyle guiStyleHeaderMobile;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float dpiScale;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float colorHUE;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float startSunIntensity;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Quaternion startSunRotation;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Color startAmbientLight;

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float startAmbientIntencity;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float startReflectionIntencity;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private LightShadows startLightShadows;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool isButtonPressed;

	[Token(Token = "0x6000062")]
	[Address(RVA = "0x10A1D58", Offset = "0x10A1D58", VA = "0x10A1D58")]
	private void Start()
	{
	}

	[Token(Token = "0x6000063")]
	[Address(RVA = "0x10A2300", Offset = "0x10A2300", VA = "0x10A2300")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0x10A2088", Offset = "0x10A2088", VA = "0x10A2088")]
	private void ChangeDayNight()
	{
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0x10A1EAC", Offset = "0x10A1EAC", VA = "0x10A1EAC")]
	private void ChangeCurrent(int delta)
	{
	}

	[Token(Token = "0x6000066")]
	[Address(RVA = "0x10A26BC", Offset = "0x10A26BC", VA = "0x10A26BC")]
	private void RemoveClones()
	{
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0x10A27E4", Offset = "0x10A27E4", VA = "0x10A27E4")]
	private void Reactivate()
	{
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0x10A2828", Offset = "0x10A2828", VA = "0x10A2828")]
	public PortalsFX2_DemoGUI()
	{
	}
}
[Token(Token = "0x2000016")]
[ExecuteInEditMode]
public class PortalsFX2_GrvityPoint : MonoBehaviour
{
	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform Target;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Force;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float StopDistance;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ParticleSystem ps;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ParticleSystem.MainModule mainModule;

	[Token(Token = "0x6000069")]
	[Address(RVA = "0x10A28D0", Offset = "0x10A28D0", VA = "0x10A28D0")]
	private void Start()
	{
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0x10A2938", Offset = "0x10A2938", VA = "0x10A2938")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0x10A2C1C", Offset = "0x10A2C1C", VA = "0x10A2C1C")]
	public PortalsFX2_GrvityPoint()
	{
	}
}
[Token(Token = "0x2000017")]
public class PortalsFX2_Light : MonoBehaviour
{
	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve LightCurve;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Gradient LightColor;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float GraphTimeMultiplier;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float GraphIntensityMultiplier;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool IsLoop;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	[HideInInspector]
	public bool canUpdate;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float startTime;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Color startColor;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Light lightSource;

	[Token(Token = "0x600006C")]
	[Address(RVA = "0x10A2C2C", Offset = "0x10A2C2C", VA = "0x10A2C2C")]
	public void SetStartColor(Color color)
	{
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0x10A2C38", Offset = "0x10A2C38", VA = "0x10A2C38")]
	private void Awake()
	{
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0x10A2D50", Offset = "0x10A2D50", VA = "0x10A2D50")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0x10A2E84", Offset = "0x10A2E84", VA = "0x10A2E84")]
	private void Update()
	{
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0x10A2F88", Offset = "0x10A2F88", VA = "0x10A2F88")]
	public PortalsFX2_Light()
	{
	}
}
[Token(Token = "0x2000018")]
public class PortalsFX2_MouseOrbit : MonoBehaviour
{
	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject target;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float distance;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float xSpeed;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float ySpeed;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float yMinLimit;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float yMaxLimit;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float x;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float y;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float prevDistance;

	[Token(Token = "0x6000071")]
	[Address(RVA = "0x10A3010", Offset = "0x10A3010", VA = "0x10A3010")]
	private void Start()
	{
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0x10A3048", Offset = "0x10A3048", VA = "0x10A3048")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0x10A3490", Offset = "0x10A3490", VA = "0x10A3490")]
	private static float ClampAngle(float angle, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0x10A34C0", Offset = "0x10A34C0", VA = "0x10A34C0")]
	public PortalsFX2_MouseOrbit()
	{
	}
}
[Token(Token = "0x2000019")]
public class PortalsFX2_ShaderColorGradient : MonoBehaviour
{
	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PortalsFX2_ShaderProperties ShaderColorProperty;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Gradient Color;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float TimeMultiplier;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool IsLoop;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public float HUE;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[HideInInspector]
	public bool canUpdate;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int propertyID;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float startTime;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Color startColor;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool isInitialized;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string shaderProperty;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private MaterialPropertyBlock props;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Renderer rend;

	[Token(Token = "0x6000075")]
	[Address(RVA = "0x10A34DC", Offset = "0x10A34DC", VA = "0x10A34DC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0x10A363C", Offset = "0x10A363C", VA = "0x10A363C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0x10A373C", Offset = "0x10A373C", VA = "0x10A373C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0x10A3820", Offset = "0x10A3820", VA = "0x10A3820")]
	public PortalsFX2_ShaderColorGradient()
	{
	}
}
[Token(Token = "0x200001A")]
public class PortalsFX2_ShaderFloatCurve : MonoBehaviour
{
	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PortalsFX2_ShaderProperties ShaderFloatProperty;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve FloatCurve;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float GraphTimeMultiplier;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float GraphIntensityMultiplier;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool IsLoop;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool canUpdate;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float startTime;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int propertyID;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string shaderProperty;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool isInitialized;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MaterialPropertyBlock props;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Renderer rend;

	[Token(Token = "0x6000079")]
	[Address(RVA = "0x10A3894", Offset = "0x10A3894", VA = "0x10A3894")]
	private void Awake()
	{
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0x10A39C8", Offset = "0x10A39C8", VA = "0x10A39C8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0x10A3A50", Offset = "0x10A3A50", VA = "0x10A3A50")]
	private void Update()
	{
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0x10A3B1C", Offset = "0x10A3B1C", VA = "0x10A3B1C")]
	public PortalsFX2_ShaderFloatCurve()
	{
	}
}
[Token(Token = "0x200001B")]
public enum PortalsFX2_ShaderProperties
{
	[Token(Token = "0x40000A7")]
	_TintColor,
	[Token(Token = "0x40000A8")]
	_Cutoff,
	[Token(Token = "0x40000A9")]
	_Color,
	[Token(Token = "0x40000AA")]
	_EmissionColor,
	[Token(Token = "0x40000AB")]
	_MaskPow,
	[Token(Token = "0x40000AC")]
	_Cutout,
	[Token(Token = "0x40000AD")]
	_Speed,
	[Token(Token = "0x40000AE")]
	_BumpAmt,
	[Token(Token = "0x40000AF")]
	_MainColor,
	[Token(Token = "0x40000B0")]
	_Distortion,
	[Token(Token = "0x40000B1")]
	_FresnelColor,
	[Token(Token = "0x40000B2")]
	_MaskCutout
}
[Token(Token = "0x200001C")]
public class Skeleton : MonoBehaviour
{
	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator animator;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PuppetMaster puppetMaster;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ConfigurableJoint[] leftLeg;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ConfigurableJoint[] rightLeg;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool leftLegRemoved;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool rightLegRemoved;

	[Token(Token = "0x600007D")]
	[Address(RVA = "0xE65514", Offset = "0xE65514", VA = "0xE65514")]
	private void Start()
	{
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0xE65624", Offset = "0xE65624", VA = "0xE65624")]
	public void OnRebuild()
	{
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0xE656B8", Offset = "0xE656B8", VA = "0xE656B8")]
	private void OnMuscleDisconnected(Muscle m)
	{
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0xE6577C", Offset = "0xE6577C", VA = "0xE6577C")]
	private bool IsLegMuscle(Muscle m, out bool isLeft)
	{
		return default(bool);
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0xE65900", Offset = "0xE65900", VA = "0xE65900")]
	public Skeleton()
	{
	}
}
[Token(Token = "0x200001D")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8CB1BC", Offset = "0x8CB1BC")]
public class RampAsset : ScriptableObject
{
	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Gradient gradient;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int size;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool up;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool overwriteExisting;

	[Token(Token = "0x6000082")]
	[Address(RVA = "0xE5E2D0", Offset = "0xE5E2D0", VA = "0xE5E2D0")]
	public RampAsset()
	{
	}
}
[Token(Token = "0x200001E")]
public class AdjustTimeScale : MonoBehaviour
{
	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TextMeshProUGUI textMesh;

	[Token(Token = "0x6000083")]
	[Address(RVA = "0xD653BC", Offset = "0xD653BC", VA = "0xD653BC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0xD65410", Offset = "0xD65410", VA = "0xD65410")]
	private void Update()
	{
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0xD655E8", Offset = "0xD655E8", VA = "0xD655E8")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0xD65610", Offset = "0xD65610", VA = "0xD65610")]
	public AdjustTimeScale()
	{
	}
}
[Token(Token = "0x200001F")]
public class ProximityActivate : MonoBehaviour
{
	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform distanceActivator;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform lookAtActivator;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float distance;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform activator;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool activeState;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public CanvasGroup target;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool lookAtCamera;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool enableInfoPanel;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject infoIcon;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float alpha;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public CanvasGroup infoPanel;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Quaternion originRotation;

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Quaternion targetRotation;

	[Token(Token = "0x6000087")]
	[Address(RVA = "0x10A9314", Offset = "0x10A9314", VA = "0x10A9314")]
	private void Start()
	{
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0x10A9428", Offset = "0x10A9428", VA = "0x10A9428")]
	private bool IsTargetNear()
	{
		return default(bool);
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0x10A965C", Offset = "0x10A965C", VA = "0x10A965C")]
	private void Update()
	{
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0x10A9904", Offset = "0x10A9904", VA = "0x10A9904")]
	public ProximityActivate()
	{
	}
}
[Token(Token = "0x2000020")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8CB1CC", Offset = "0x8CB1CC")]
public class SimpleCharacterMotor : MonoBehaviour
{
	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CursorLockMode cursorLockMode;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool cursorVisible;

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CDA80", Offset = "0x8CDA80")]
	public float walkSpeed;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float runSpeed;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float gravity;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CDAB8", Offset = "0x8CDAB8")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8CDAB8", Offset = "0x8CDAB8")]
	public Transform cameraPivot;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float lookSpeed;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool invertY;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CDB04", Offset = "0x8CDB04")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8CDB04", Offset = "0x8CDB04")]
	public float movementAcceleration;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private CharacterController controller;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 movement;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Vector3 finalMovement;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float speed;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Quaternion targetRotation;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Quaternion targetPivotRotation;

	[Token(Token = "0x600008B")]
	[Address(RVA = "0xE6466C", Offset = "0xE6466C", VA = "0xE6466C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0xE646F4", Offset = "0xE646F4", VA = "0xE646F4")]
	private void Update()
	{
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0xE648C0", Offset = "0xE648C0", VA = "0xE648C0")]
	private void UpdateLookRotation()
	{
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0xE64718", Offset = "0xE64718", VA = "0xE64718")]
	private void UpdateTranslation()
	{
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0xE64BA4", Offset = "0xE64BA4", VA = "0xE64BA4")]
	public SimpleCharacterMotor()
	{
	}
}
[Token(Token = "0x2000021")]
public class GUI_TimersList : MonoBehaviour
{
	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Timer> Timers;

	[Token(Token = "0x6000090")]
	[Address(RVA = "0x153669C", Offset = "0x153669C", VA = "0x153669C", Slot = "4")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0x1536708", Offset = "0x1536708", VA = "0x1536708")]
	public GUI_TimersList()
	{
	}
}
[Token(Token = "0x2000022")]
public class SmoothSyncExamplePlayerControllerPUN2 : MonoBehaviourPunCallbacks
{
	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody rb;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Rigidbody2D rb2D;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SmoothSyncPUN2 smoothSync;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SmoothSyncPUN2 childSmoothSync;

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float transformMovementSpeed;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float rigidbodyMovementForce;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject childObjectToControl;

	[Token(Token = "0x6000092")]
	[Address(RVA = "0xE66E94", Offset = "0xE66E94", VA = "0xE66E94")]
	private void Start()
	{
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0xE66FF0", Offset = "0xE66FF0", VA = "0xE66FF0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0xE67948", Offset = "0xE67948", VA = "0xE67948")]
	public static bool validateStateOfPlayer(StatePUN2 latestReceivedState, StatePUN2 latestValidatedState)
	{
		return default(bool);
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0xE679C0", Offset = "0xE679C0", VA = "0xE679C0")]
	public SmoothSyncExamplePlayerControllerPUN2()
	{
	}
}
[Token(Token = "0x2000023")]
public class DetectHeadset
{
	[Token(Token = "0x6000096")]
	[Address(RVA = "0xCC2DFC", Offset = "0xCC2DFC", VA = "0xCC2DFC")]
	public static bool CanDetect()
	{
		return default(bool);
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0xCC2E04", Offset = "0xCC2E04", VA = "0xCC2E04")]
	public static bool Detect()
	{
		return default(bool);
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0xCC32B8", Offset = "0xCC32B8", VA = "0xCC32B8")]
	public DetectHeadset()
	{
	}
}
[Token(Token = "0x2000024")]
public class Rotate_self : MonoBehaviour
{
	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float num;

	[Token(Token = "0x6000099")]
	[Address(RVA = "0xE60300", Offset = "0xE60300", VA = "0xE60300")]
	private void Start()
	{
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0xE60304", Offset = "0xE60304", VA = "0xE60304")]
	private void Update()
	{
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0xE60390", Offset = "0xE60390", VA = "0xE60390")]
	public Rotate_self()
	{
	}
}
namespace EasyGameStudio.Jeremy
{
	[Token(Token = "0x2000025")]
	public class Dissolve : MonoBehaviour
	{
		[Token(Token = "0x40000E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CDB50", Offset = "0x8CDB50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8CDB50", Offset = "0x8CDB50")]
		public float speed_show;

		[Token(Token = "0x40000E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CDBA4", Offset = "0x8CDBA4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8CDBA4", Offset = "0x8CDBA4")]
		public float hide_show;

		[Token(Token = "0x40000E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material _material;

		[Token(Token = "0x40000E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool is_showing;

		[Token(Token = "0x40000E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool is_hiding;

		[Token(Token = "0x40000E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float threshold;

		[Token(Token = "0x600009C")]
		[Address(RVA = "0xCC3E6C", Offset = "0xCC3E6C", VA = "0xCC3E6C")]
		private void Start()
		{
		}

		[Token(Token = "0x600009D")]
		[Address(RVA = "0xCC3F48", Offset = "0xCC3F48", VA = "0xCC3F48")]
		private void Update()
		{
		}

		[Token(Token = "0x600009E")]
		[Address(RVA = "0xCC407C", Offset = "0xCC407C", VA = "0xCC407C")]
		public void show()
		{
		}

		[Token(Token = "0x600009F")]
		[Address(RVA = "0xCC40F8", Offset = "0xCC40F8", VA = "0xCC40F8")]
		public void hide()
		{
		}

		[Token(Token = "0x60000A0")]
		[Address(RVA = "0xCC4174", Offset = "0xCC4174", VA = "0xCC4174")]
		public Dissolve()
		{
		}
	}
	[Token(Token = "0x2000026")]
	public class Statue_animation_control : MonoBehaviour
	{
		[Token(Token = "0x40000E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8CDBF8", Offset = "0x8CDBF8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CDBF8", Offset = "0x8CDBF8")]
		public float speed_show;

		[Token(Token = "0x40000EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8CDC4C", Offset = "0x8CDC4C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CDC4C", Offset = "0x8CDC4C")]
		public float speed_hide;

		[Token(Token = "0x40000EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CDCA0", Offset = "0x8CDCA0")]
		public Animator animator;

		[Token(Token = "0x40000EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CDCD8", Offset = "0x8CDCD8")]
		public AudioSource audio_source;

		[Token(Token = "0x40000ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioClip audio_clip_show;

		[Token(Token = "0x40000EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AudioClip audio_clip_hide;

		[Token(Token = "0x40000EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material _material;

		[Token(Token = "0x40000F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool is_showing;

		[Token(Token = "0x40000F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool is_hiding;

		[Token(Token = "0x40000F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float threshold;

		[Token(Token = "0x60000A1")]
		[Address(RVA = "0xE085E8", Offset = "0xE085E8", VA = "0xE085E8")]
		private void Start()
		{
		}

		[Token(Token = "0x60000A2")]
		[Address(RVA = "0xE086C4", Offset = "0xE086C4", VA = "0xE086C4")]
		private void Update()
		{
		}

		[Token(Token = "0x60000A3")]
		[Address(RVA = "0xE08828", Offset = "0xE08828", VA = "0xE08828")]
		public void show()
		{
		}

		[Token(Token = "0x60000A4")]
		[Address(RVA = "0xE088C4", Offset = "0xE088C4", VA = "0xE088C4")]
		public void hide()
		{
		}

		[Token(Token = "0x60000A5")]
		[Address(RVA = "0xE08960", Offset = "0xE08960", VA = "0xE08960")]
		public Statue_animation_control()
		{
		}
	}
	[Token(Token = "0x2000027")]
	public class Statue_base_control : MonoBehaviour
	{
		[Token(Token = "0x40000F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8CDD10", Offset = "0x8CDD10")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CDD10", Offset = "0x8CDD10")]
		public float speed_show;

		[Token(Token = "0x40000F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8CDD64", Offset = "0x8CDD64")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CDD64", Offset = "0x8CDD64")]
		public float speed_hide;

		[Token(Token = "0x40000F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CDDB8", Offset = "0x8CDDB8")]
		public Animator animator;

		[Token(Token = "0x40000F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CDDF0", Offset = "0x8CDDF0")]
		public AudioSource audio_source;

		[Token(Token = "0x40000F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioClip audio_clip_show;

		[Token(Token = "0x40000F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AudioClip audio_clip_hide;

		[Token(Token = "0x40000F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material _material;

		[Token(Token = "0x40000FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool is_showing;

		[Token(Token = "0x40000FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool is_hiding;

		[Token(Token = "0x40000FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float threshold;

		[Token(Token = "0x60000A6")]
		[Address(RVA = "0xE08968", Offset = "0xE08968", VA = "0xE08968")]
		private void Start()
		{
		}

		[Token(Token = "0x60000A7")]
		[Address(RVA = "0xE08A44", Offset = "0xE08A44", VA = "0xE08A44")]
		private void Update()
		{
		}

		[Token(Token = "0x60000A8")]
		[Address(RVA = "0xE08B88", Offset = "0xE08B88", VA = "0xE08B88")]
		public void show()
		{
		}

		[Token(Token = "0x60000A9")]
		[Address(RVA = "0xE08C18", Offset = "0xE08C18", VA = "0xE08C18")]
		public void hide()
		{
		}

		[Token(Token = "0x60000AA")]
		[Address(RVA = "0xE08CAC", Offset = "0xE08CAC", VA = "0xE08CAC")]
		public Statue_base_control()
		{
		}
	}
}
namespace VoxelBusters.EssentialKit.Extensions
{
	[Token(Token = "0x2000028")]
	public static class IAPManager
	{
		[Token(Token = "0x2000029")]
		private enum InternalState
		{
			[Token(Token = "0x4000106")]
			NotInitialized,
			[Token(Token = "0x4000107")]
			Initializing,
			[Token(Token = "0x4000108")]
			Initialized
		}

		[Token(Token = "0x200002A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB22C", Offset = "0x8CB22C")]
		private sealed class <>c__DisplayClass20_0
		{
			[Token(Token = "0x4000109")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string productId;

			[Token(Token = "0x400010A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public EventCallback<IBillingTransaction> callback;

			[Token(Token = "0x400010B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string applicationUsername;

			[Token(Token = "0x60000BD")]
			[Address(RVA = "0x1B37E5C", Offset = "0x1B37E5C", VA = "0x1B37E5C")]
			public <>c__DisplayClass20_0()
			{
			}

			[Token(Token = "0x60000BE")]
			[Address(RVA = "0x1B37E64", Offset = "0x1B37E64", VA = "0x1B37E64")]
			internal void <BuyProduct>b__0(IBillingProduct[] products, Error error)
			{
			}
		}

		[Token(Token = "0x200002B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB23C", Offset = "0x8CB23C")]
		private sealed class <>c__DisplayClass21_0
		{
			[Token(Token = "0x400010C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public EventCallback<IBillingTransaction[]> callback;

			[Token(Token = "0x400010D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string applicationUsername;

			[Token(Token = "0x60000BF")]
			[Address(RVA = "0x1B37F24", Offset = "0x1B37F24", VA = "0x1B37F24")]
			public <>c__DisplayClass21_0()
			{
			}

			[Token(Token = "0x60000C0")]
			[Address(RVA = "0x1B37F2C", Offset = "0x1B37F2C", VA = "0x1B37F2C")]
			internal void <RestorePurchases>b__0(IBillingProduct[] products, Error error)
			{
			}
		}

		[Token(Token = "0x40000FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IBillingProduct[] s_cachedProducts;

		[Token(Token = "0x40000FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Dictionary<string, IBillingProduct> s_cachedProductsMap;

		[Token(Token = "0x40000FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static InternalState s_currentState;

		[Token(Token = "0x4000100")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static bool s_isPurchasing;

		[Token(Token = "0x4000101")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		private static bool s_isRestoring;

		[Token(Token = "0x4000102")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static EventCallback<IBillingProduct[]> s_getProductsObservers;

		[Token(Token = "0x4000103")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static EventCallback<IBillingTransaction> s_buyProductObserver;

		[Token(Token = "0x4000104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static EventCallback<IBillingTransaction[]> s_restorePurchasesObservers;

		[Token(Token = "0x14000001")]
		public static event EventCallback<BillingServicesInitializeStoreResult> OnInitializeStoreComplete
		{
			[Token(Token = "0x60000AB")]
			[Address(RVA = "0x156CC18", Offset = "0x156CC18", VA = "0x156CC18")]
			add
			{
			}
			[Token(Token = "0x60000AC")]
			[Address(RVA = "0x156CC20", Offset = "0x156CC20", VA = "0x156CC20")]
			remove
			{
			}
		}

		[Token(Token = "0x14000002")]
		public static event Callback<BillingServicesTransactionStateChangeResult> OnTransactionStateChange
		{
			[Token(Token = "0x60000AD")]
			[Address(RVA = "0x156CC28", Offset = "0x156CC28", VA = "0x156CC28")]
			add
			{
			}
			[Token(Token = "0x60000AE")]
			[Address(RVA = "0x156CC30", Offset = "0x156CC30", VA = "0x156CC30")]
			remove
			{
			}
		}

		[Token(Token = "0x14000003")]
		public static event EventCallback<BillingServicesRestorePurchasesResult> OnRestorePurchasesComplete
		{
			[Token(Token = "0x60000AF")]
			[Address(RVA = "0x156CC38", Offset = "0x156CC38", VA = "0x156CC38")]
			add
			{
			}
			[Token(Token = "0x60000B0")]
			[Address(RVA = "0x156CC40", Offset = "0x156CC40", VA = "0x156CC40")]
			remove
			{
			}
		}

		[Token(Token = "0x60000B1")]
		[Address(RVA = "0x156CC48", Offset = "0x156CC48", VA = "0x156CC48")]
		static IAPManager()
		{
		}

		[Token(Token = "0x60000B2")]
		[Address(RVA = "0x156CE3C", Offset = "0x156CE3C", VA = "0x156CE3C")]
		public static void SetDirty()
		{
		}

		[Token(Token = "0x60000B3")]
		[Address(RVA = "0x156CECC", Offset = "0x156CECC", VA = "0x156CECC")]
		public static void GetBillingProducts(EventCallback<IBillingProduct[]> callback)
		{
		}

		[Token(Token = "0x60000B4")]
		[Address(RVA = "0x156D144", Offset = "0x156D144", VA = "0x156D144")]
		public static void BuyProduct(string productId, EventCallback<IBillingTransaction> callback, [Optional] string applicationUsername)
		{
		}

		[Token(Token = "0x60000B5")]
		[Address(RVA = "0x156D514", Offset = "0x156D514", VA = "0x156D514")]
		public static void RestorePurchases(EventCallback<IBillingTransaction[]> callback, [Optional] string applicationUsername)
		{
		}

		[Token(Token = "0x60000B6")]
		[Address(RVA = "0x156CCE8", Offset = "0x156CCE8", VA = "0x156CCE8")]
		private static void RegisterForCallbacks()
		{
		}

		[Token(Token = "0x60000B7")]
		[Address(RVA = "0x156D0D8", Offset = "0x156D0D8", VA = "0x156D0D8")]
		private static void InitializeStore()
		{
		}

		[Token(Token = "0x60000B8")]
		[Address(RVA = "0x156D3E4", Offset = "0x156D3E4", VA = "0x156D3E4")]
		private static bool TryInitializeStore(EventCallback<IBillingProduct[]> callback)
		{
			return default(bool);
		}

		[Token(Token = "0x60000B9")]
		[Address(RVA = "0x156D47C", Offset = "0x156D47C", VA = "0x156D47C")]
		private static bool IsStoreAvailable()
		{
			return default(bool);
		}

		[Token(Token = "0x60000BA")]
		[Address(RVA = "0x156D784", Offset = "0x156D784", VA = "0x156D784")]
		private static void HandleOnInitializeStore(BillingServicesInitializeStoreResult result, Error error)
		{
		}

		[Token(Token = "0x60000BB")]
		[Address(RVA = "0x156DA20", Offset = "0x156DA20", VA = "0x156DA20")]
		private static void HandleOnTransactionStateChange(BillingServicesTransactionStateChangeResult result)
		{
		}

		[Token(Token = "0x60000BC")]
		[Address(RVA = "0x156DC40", Offset = "0x156DC40", VA = "0x156DC40")]
		private static void HandleOnRestorePurchasesComplete(BillingServicesRestorePurchasesResult result, Error error)
		{
		}
	}
	[Token(Token = "0x200002C")]
	public class TMP_DatePicker : UnityUIDatePicker
	{
		[Token(Token = "0x400010E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private RectTransform m_dateNode;

		[Token(Token = "0x400010F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private TMP_Dropdown m_dayDropdown;

		[Token(Token = "0x4000110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private TMP_Dropdown m_monthDropdown;

		[Token(Token = "0x4000111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private TMP_Dropdown m_yearDropdown;

		[Token(Token = "0x4000112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private RectTransform m_timeNode;

		[Token(Token = "0x4000113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private TMP_Dropdown m_hourDropdown;

		[Token(Token = "0x4000114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private TMP_Dropdown m_minuteDropdown;

		[Token(Token = "0x60000C1")]
		[Address(RVA = "0xE0D3C0", Offset = "0xE0D3C0", VA = "0xE0D3C0")]
		private static int GetDropdownValue(TMP_Dropdown dropdown)
		{
			return default(int);
		}

		[Token(Token = "0x60000C2")]
		[Address(RVA = "0xE0D448", Offset = "0xE0D448", VA = "0xE0D448")]
		private static void SelectDropdownValue(TMP_Dropdown dropdown, int value)
		{
		}

		[Token(Token = "0x60000C3")]
		[Address(RVA = "0xE0D4E0", Offset = "0xE0D4E0", VA = "0xE0D4E0")]
		private static List<string> ConvertIntegerToStringNames(int startIndex, int count, string format)
		{
			return null;
		}

		[Token(Token = "0x60000C4")]
		[Address(RVA = "0xE0D5CC", Offset = "0xE0D5CC", VA = "0xE0D5CC", Slot = "19")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60000C5")]
		[Address(RVA = "0xE0D5D4", Offset = "0xE0D5D4", VA = "0xE0D5D4", Slot = "20")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60000C6")]
		[Address(RVA = "0xE0D5DC", Offset = "0xE0D5DC", VA = "0xE0D5DC", Slot = "21")]
		public override void Show()
		{
		}

		[Token(Token = "0x60000C7")]
		[Address(RVA = "0xE0D7D8", Offset = "0xE0D7D8", VA = "0xE0D7D8")]
		private void ConfigureYearDropdown()
		{
		}

		[Token(Token = "0x60000C8")]
		[Address(RVA = "0xE0D904", Offset = "0xE0D904", VA = "0xE0D904")]
		private void ConfigureMonthDropdown()
		{
		}

		[Token(Token = "0x60000C9")]
		[Address(RVA = "0xE0D984", Offset = "0xE0D984", VA = "0xE0D984")]
		private void ConfigureDayDropdown(int month, int year)
		{
		}

		[Token(Token = "0x60000CA")]
		[Address(RVA = "0xE0DAFC", Offset = "0xE0DAFC", VA = "0xE0DAFC")]
		private void ConfigureHourDropdown()
		{
		}

		[Token(Token = "0x60000CB")]
		[Address(RVA = "0xE0DB7C", Offset = "0xE0DB7C", VA = "0xE0DB7C")]
		private void ConfigureMinuteDropdown()
		{
		}

		[Token(Token = "0x60000CC")]
		[Address(RVA = "0xE0DBFC", Offset = "0xE0DBFC", VA = "0xE0DBFC")]
		public void OnSubmit()
		{
		}

		[Token(Token = "0x60000CD")]
		[Address(RVA = "0xE0DD2C", Offset = "0xE0DD2C", VA = "0xE0DD2C")]
		public void OnDismiss()
		{
		}

		[Token(Token = "0x60000CE")]
		[Address(RVA = "0xE0DD3C", Offset = "0xE0DD3C", VA = "0xE0DD3C")]
		public void OnDropdownValueChange(Dropdown dropdown)
		{
		}

		[Token(Token = "0x60000CF")]
		[Address(RVA = "0xE0DE20", Offset = "0xE0DE20", VA = "0xE0DE20")]
		public TMP_DatePicker()
		{
		}
	}
	[Token(Token = "0x200002D")]
	public class TMP_DatePickerInputField : Selectable, IPointerClickHandler, IEventSystemHandler, ISubmitHandler, ICancelHandler
	{
		[Token(Token = "0x4000115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private TextMeshProUGUI m_placeholder;

		[Token(Token = "0x4000116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private TextMeshProUGUI m_text;

		[Token(Token = "0x4000117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private DateTimeKind m_kind;

		[Token(Token = "0x4000118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		[SerializeField]
		private DatePickerMode m_mode;

		[Token(Token = "0x4000119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private string m_displayFormat;

		[Token(Token = "0x400011A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private UnityEvent m_onValueChange;

		[Token(Token = "0x400011B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private DateTime? m_minimumDate;

		[Token(Token = "0x400011C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private DateTime? m_maximumDate;

		[Token(Token = "0x400011D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private DateTime? m_initialDate;

		[Token(Token = "0x400011E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private DateTime? m_date;

		[Token(Token = "0x400011F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private bool m_isSelected;

		[Token(Token = "0x1700000C")]
		public DateTimeKind Kind
		{
			[Token(Token = "0x60000D0")]
			[Address(RVA = "0xE0DE28", Offset = "0xE0DE28", VA = "0xE0DE28")]
			get
			{
				return default(DateTimeKind);
			}
			[Token(Token = "0x60000D1")]
			[Address(RVA = "0xE0DE30", Offset = "0xE0DE30", VA = "0xE0DE30")]
			set
			{
			}
		}

		[Token(Token = "0x1700000D")]
		public DatePickerMode Mode
		{
			[Token(Token = "0x60000D2")]
			[Address(RVA = "0xE0DE38", Offset = "0xE0DE38", VA = "0xE0DE38")]
			get
			{
				return default(DatePickerMode);
			}
			[Token(Token = "0x60000D3")]
			[Address(RVA = "0xE0DE40", Offset = "0xE0DE40", VA = "0xE0DE40")]
			set
			{
			}
		}

		[Token(Token = "0x1700000E")]
		public string DisplayFormat
		{
			[Token(Token = "0x60000D4")]
			[Address(RVA = "0xE0DE48", Offset = "0xE0DE48", VA = "0xE0DE48")]
			get
			{
				return null;
			}
			[Token(Token = "0x60000D5")]
			[Address(RVA = "0xE0DE50", Offset = "0xE0DE50", VA = "0xE0DE50")]
			set
			{
			}
		}

		[Token(Token = "0x1700000F")]
		public DateTime? MinimumDate
		{
			[Token(Token = "0x60000D6")]
			[Address(RVA = "0xE0DE58", Offset = "0xE0DE58", VA = "0xE0DE58")]
			get
			{
				return null;
			}
			[Token(Token = "0x60000D7")]
			[Address(RVA = "0xE0DE64", Offset = "0xE0DE64", VA = "0xE0DE64")]
			set
			{
			}
		}

		[Token(Token = "0x17000010")]
		public DateTime? MaximumDate
		{
			[Token(Token = "0x60000D8")]
			[Address(RVA = "0xE0DE6C", Offset = "0xE0DE6C", VA = "0xE0DE6C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60000D9")]
			[Address(RVA = "0xE0DE78", Offset = "0xE0DE78", VA = "0xE0DE78")]
			set
			{
			}
		}

		[Token(Token = "0x17000011")]
		public DateTime? InitialDate
		{
			[Token(Token = "0x60000DA")]
			[Address(RVA = "0xE0DE80", Offset = "0xE0DE80", VA = "0xE0DE80")]
			get
			{
				return null;
			}
			[Token(Token = "0x60000DB")]
			[Address(RVA = "0xE0DE8C", Offset = "0xE0DE8C", VA = "0xE0DE8C")]
			set
			{
			}
		}

		[Token(Token = "0x17000012")]
		public DateTime? Date
		{
			[Token(Token = "0x60000DC")]
			[Address(RVA = "0xE0DE94", Offset = "0xE0DE94", VA = "0xE0DE94")]
			get
			{
				return null;
			}
			[Token(Token = "0x60000DD")]
			[Address(RVA = "0xE0DEA0", Offset = "0xE0DEA0", VA = "0xE0DEA0")]
			set
			{
			}
		}

		[Token(Token = "0x17000013")]
		public UnityEvent OnValueChange
		{
			[Token(Token = "0x60000DE")]
			[Address(RVA = "0xE0E0C4", Offset = "0xE0E0C4", VA = "0xE0E0C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000DF")]
		[Address(RVA = "0xE0E0CC", Offset = "0xE0E0CC", VA = "0xE0E0CC", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60000E0")]
		[Address(RVA = "0xE0E0FC", Offset = "0xE0E0FC", VA = "0xE0E0FC")]
		public void Show()
		{
		}

		[Token(Token = "0x60000E1")]
		[Address(RVA = "0xE0E014", Offset = "0xE0E014", VA = "0xE0E014")]
		private void SetText(string value)
		{
		}

		[Token(Token = "0x60000E2")]
		[Address(RVA = "0xE0E2C8", Offset = "0xE0E2C8", VA = "0xE0E2C8", Slot = "42")]
		public virtual void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60000E3")]
		[Address(RVA = "0xE0E2CC", Offset = "0xE0E2CC", VA = "0xE0E2CC", Slot = "43")]
		public virtual void OnSubmit(BaseEventData eventData)
		{
		}

		[Token(Token = "0x60000E4")]
		[Address(RVA = "0xE0E2D0", Offset = "0xE0E2D0", VA = "0xE0E2D0", Slot = "44")]
		public virtual void OnCancel(BaseEventData eventData)
		{
		}

		[Token(Token = "0x60000E5")]
		[Address(RVA = "0xE0E2D4", Offset = "0xE0E2D4", VA = "0xE0E2D4")]
		private void OnDatePickerClose(DatePickerResult data)
		{
		}

		[Token(Token = "0x60000E6")]
		[Address(RVA = "0xE0E2DC", Offset = "0xE0E2DC", VA = "0xE0E2DC")]
		private void OnDatePickerValueChange(DateTime? dateTime)
		{
		}

		[Token(Token = "0x60000E7")]
		[Address(RVA = "0xE0E2E0", Offset = "0xE0E2E0", VA = "0xE0E2E0")]
		public TMP_DatePickerInputField()
		{
		}
	}
}
namespace VoxelBusters.CoreLibrary.Helpers
{
	[Token(Token = "0x200002E")]
	public class DefaultJsonServiceProvider : IJsonServiceProvider
	{
		[Token(Token = "0x60000E8")]
		[Address(RVA = "0xCC1E98", Offset = "0xCC1E98", VA = "0xCC1E98")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x8DCB48", Offset = "0x8DCB48")]
		private static void OnLoad()
		{
		}

		[Token(Token = "0x60000E9")]
		[Address(RVA = "0xCC1F40", Offset = "0xCC1F40", VA = "0xCC1F40", Slot = "4")]
		public string ToJson(object obj)
		{
			return null;
		}

		[Token(Token = "0x60000EA")]
		[Address(RVA = "0xCC1F4C", Offset = "0xCC1F4C", VA = "0xCC1F4C", Slot = "5")]
		public object FromJson(string jsonString)
		{
			return null;
		}

		[Token(Token = "0x60000EB")]
		[Address(RVA = "0xCC1F38", Offset = "0xCC1F38", VA = "0xCC1F38")]
		public DefaultJsonServiceProvider()
		{
		}
	}
	[Token(Token = "0x200002F")]
	public class DefaultLocalisationServiceProvider : ILocalisationServiceProvider
	{
		[Token(Token = "0x60000EC")]
		[Address(RVA = "0xCC1F58", Offset = "0xCC1F58", VA = "0xCC1F58")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x8DCB5C", Offset = "0x8DCB5C")]
		private static void OnLoad()
		{
		}

		[Token(Token = "0x60000ED")]
		[Address(RVA = "0xCC2000", Offset = "0xCC2000", VA = "0xCC2000", Slot = "4")]
		public string GetLocalisedString(string key, string defaultValue)
		{
			return null;
		}

		[Token(Token = "0x60000EE")]
		[Address(RVA = "0xCC1FF8", Offset = "0xCC1FF8", VA = "0xCC1FF8")]
		public DefaultLocalisationServiceProvider()
		{
		}
	}
	[Token(Token = "0x2000030")]
	public class DefaultSaveServiceProvider : ISaveServiceProvider
	{
		[Token(Token = "0x60000EF")]
		[Address(RVA = "0xCC2008", Offset = "0xCC2008", VA = "0xCC2008")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x8DCB70", Offset = "0x8DCB70")]
		private static void OnLoad()
		{
		}

		[Token(Token = "0x60000F0")]
		[Address(RVA = "0xCC20B0", Offset = "0xCC20B0", VA = "0xCC20B0", Slot = "4")]
		public int GetInt(string key, int defaultValue = 0)
		{
			return default(int);
		}

		[Token(Token = "0x60000F1")]
		[Address(RVA = "0xCC20C0", Offset = "0xCC20C0", VA = "0xCC20C0", Slot = "5")]
		public float GetFloat(string key, float defaultValue = 0f)
		{
			return default(float);
		}

		[Token(Token = "0x60000F2")]
		[Address(RVA = "0xCC20CC", Offset = "0xCC20CC", VA = "0xCC20CC", Slot = "6")]
		public string GetString(string key, [Optional] string defaultValue)
		{
			return null;
		}

		[Token(Token = "0x60000F3")]
		[Address(RVA = "0xCC20DC", Offset = "0xCC20DC", VA = "0xCC20DC", Slot = "7")]
		public string[] GetStringArray(string key, [Optional] string[] defaultValue)
		{
			return null;
		}

		[Token(Token = "0x60000F4")]
		[Address(RVA = "0xCC2444", Offset = "0xCC2444", VA = "0xCC2444", Slot = "8")]
		public void SetInt(string key, int value)
		{
		}

		[Token(Token = "0x60000F5")]
		[Address(RVA = "0xCC2454", Offset = "0xCC2454", VA = "0xCC2454", Slot = "9")]
		public void SetFloat(string key, float value)
		{
		}

		[Token(Token = "0x60000F6")]
		[Address(RVA = "0xCC2460", Offset = "0xCC2460", VA = "0xCC2460", Slot = "10")]
		public void SetString(string key, string value)
		{
		}

		[Token(Token = "0x60000F7")]
		[Address(RVA = "0xCC2470", Offset = "0xCC2470", VA = "0xCC2470", Slot = "11")]
		public void SetStringArray(string key, string[] value)
		{
		}

		[Token(Token = "0x60000F8")]
		[Address(RVA = "0xCC2578", Offset = "0xCC2578", VA = "0xCC2578", Slot = "12")]
		public void RemoveKey(string key)
		{
		}

		[Token(Token = "0x60000F9")]
		[Address(RVA = "0xCC2584", Offset = "0xCC2584", VA = "0xCC2584", Slot = "13")]
		public void Save()
		{
		}

		[Token(Token = "0x60000FA")]
		[Address(RVA = "0xCC20A8", Offset = "0xCC20A8", VA = "0xCC20A8")]
		public DefaultSaveServiceProvider()
		{
		}
	}
}
namespace VRConsole
{
	[Token(Token = "0x2000031")]
	public class VRConsoleConsoleMessage : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x4000120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Image messageIcon_Image;

		[Token(Token = "0x4000121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text messageText_Text;

		[Token(Token = "0x4000122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Button showStackTrace_Button;

		[Token(Token = "0x4000123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Sprite infoSprite;

		[Token(Token = "0x4000124")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Sprite warningSprite;

		[Token(Token = "0x4000125")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Sprite errorSprite;

		[Token(Token = "0x4000126")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Color infoColor;

		[Token(Token = "0x4000127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Color warningColor;

		[Token(Token = "0x4000128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Color errorColor;

		[Token(Token = "0x4000129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public LogType messageLogType;

		[Token(Token = "0x400012A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private string thisMessageStackTrace;

		[Token(Token = "0x400012B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private string wholeMessage;

		[Token(Token = "0x400012C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool hovering;

		[Token(Token = "0x400012D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private float timeHovered;

		[Token(Token = "0x400012E")]
		private const float hoverTimeRequiredToShowWholeMessage = 0.5f;

		[Token(Token = "0x60000FB")]
		[Address(RVA = "0xC0B4E4", Offset = "0xC0B4E4", VA = "0xC0B4E4")]
		private void Update()
		{
		}

		[Token(Token = "0x60000FC")]
		[Address(RVA = "0xC0B670", Offset = "0xC0B670", VA = "0xC0B670")]
		public void SetMessage(string message, string stackTrace, LogType messageType)
		{
		}

		[Token(Token = "0x60000FD")]
		[Address(RVA = "0xC0B850", Offset = "0xC0B850", VA = "0xC0B850")]
		private void ShowStackTraceOnConsole()
		{
		}

		[Token(Token = "0x60000FE")]
		[Address(RVA = "0xC0B8F8", Offset = "0xC0B8F8", VA = "0xC0B8F8", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60000FF")]
		[Address(RVA = "0xC0B904", Offset = "0xC0B904", VA = "0xC0B904", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000100")]
		[Address(RVA = "0xC0B994", Offset = "0xC0B994", VA = "0xC0B994")]
		public VRConsoleConsoleMessage()
		{
		}
	}
	[Token(Token = "0x2000032")]
	public class VRConsoleExampleSceneErrorProducer : MonoBehaviour
	{
		[Token(Token = "0x400012F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LogType logType;

		[Token(Token = "0x6000101")]
		[Address(RVA = "0xC0B99C", Offset = "0xC0B99C", VA = "0xC0B99C")]
		private void OnMouseDown()
		{
		}

		[Token(Token = "0x6000102")]
		[Address(RVA = "0xC0BAC8", Offset = "0xC0BAC8", VA = "0xC0BAC8")]
		public VRConsoleExampleSceneErrorProducer()
		{
		}
	}
	[Token(Token = "0x2000033")]
	[ExecuteInEditMode]
	public class VRConsoleMessageUIResizer : MonoBehaviour
	{
		[Token(Token = "0x4000130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RectTransform RootCanvasRectTransform;

		[Token(Token = "0x4000131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GridLayoutGroup LayoutGroup;

		[Token(Token = "0x4000132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BoxCollider ConsoleMessageBoxCollider;

		[Token(Token = "0x4000133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RectTransform StackTraceTextRectTransform;

		[Token(Token = "0x6000103")]
		[Address(RVA = "0xC0BAD0", Offset = "0xC0BAD0", VA = "0xC0BAD0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000104")]
		[Address(RVA = "0xC0BBA8", Offset = "0xC0BBA8", VA = "0xC0BBA8")]
		public VRConsoleMessageUIResizer()
		{
		}
	}
	[Token(Token = "0x2000034")]
	public class VRConsoleRuntimeConsole : MonoBehaviour
	{
		[Token(Token = "0x2000035")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB25C", Offset = "0x8CB25C")]
		private sealed class <SetStackTraceContentSizeDeltaAfterOneFrame>d__47 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000157")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000158")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000159")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRConsoleRuntimeConsole <>4__this;

			[Token(Token = "0x17000014")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600011E")]
				[Address(RVA = "0x190BB44", Offset = "0x190BB44", VA = "0x190BB44", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000015")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000120")]
				[Address(RVA = "0x190BB8C", Offset = "0x190BB8C", VA = "0x190BB8C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600011B")]
			[Address(RVA = "0x190BA34", Offset = "0x190BA34", VA = "0x190BA34")]
			[DebuggerHidden]
			public <SetStackTraceContentSizeDeltaAfterOneFrame>d__47(int <>1__state)
			{
			}

			[Token(Token = "0x600011C")]
			[Address(RVA = "0x190BA60", Offset = "0x190BA60", VA = "0x190BA60", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600011D")]
			[Address(RVA = "0x190BA64", Offset = "0x190BA64", VA = "0x190BA64", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600011F")]
			[Address(RVA = "0x190BB4C", Offset = "0x190BB4C", VA = "0x190BB4C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000036")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB26C", Offset = "0x8CB26C")]
		private sealed class <SetWholeMessageBackgroundSizeDeltaAfterOneFrame>d__48 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400015A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400015B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400015C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRConsoleRuntimeConsole <>4__this;

			[Token(Token = "0x17000016")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000124")]
				[Address(RVA = "0x190BD0C", Offset = "0x190BD0C", VA = "0x190BD0C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000017")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000126")]
				[Address(RVA = "0x190BD54", Offset = "0x190BD54", VA = "0x190BD54", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000121")]
			[Address(RVA = "0x190BB94", Offset = "0x190BB94", VA = "0x190BB94")]
			[DebuggerHidden]
			public <SetWholeMessageBackgroundSizeDeltaAfterOneFrame>d__48(int <>1__state)
			{
			}

			[Token(Token = "0x6000122")]
			[Address(RVA = "0x190BBC0", Offset = "0x190BBC0", VA = "0x190BBC0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000123")]
			[Address(RVA = "0x190BBC4", Offset = "0x190BBC4", VA = "0x190BBC4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000125")]
			[Address(RVA = "0x190BD14", Offset = "0x190BD14", VA = "0x190BD14", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CDEF8", Offset = "0x8CDEF8")]
		public bool JumpToNewestLog;

		[Token(Token = "0x4000135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8CDF30", Offset = "0x8CDF30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CDF30", Offset = "0x8CDF30")]
		public bool ShowInfos;

		[Token(Token = "0x4000136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool ShowWarnings;

		[Token(Token = "0x4000137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		public bool ShowErrors;

		[Token(Token = "0x4000138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public Transform scrollViewContent;

		[Token(Token = "0x4000139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public GameObject consoleMessagePrefab;

		[Token(Token = "0x400013A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public RectTransform messagesContent_RectTransform;

		[Token(Token = "0x400013B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public Scrollbar MessagesScrollBar;

		[Token(Token = "0x400013C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public RectTransform stackTraceContent_RectTransform;

		[Token(Token = "0x400013D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public RectTransform stackTraceText_RectTransform;

		[Token(Token = "0x400013E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public Text stackTrace_Text;

		[Token(Token = "0x400013F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public Toggle showInfoMessagesToggle;

		[Token(Token = "0x4000140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public Toggle showWarningMessagesToggle;

		[Token(Token = "0x4000141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public Toggle showErrorMessagesToggle;

		[Token(Token = "0x4000142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public Text infoMessagesAmount_Text;

		[Token(Token = "0x4000143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public Text warningMessagesAmount_Text;

		[Token(Token = "0x4000144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public Text errorMessagesAmount_Text;

		[Token(Token = "0x4000145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[HideInInspector]
		public Image infoToggleEnabledOverlay_Image;

		[Token(Token = "0x4000146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[HideInInspector]
		public Image warningToggleEnabledOverlay_Image;

		[Token(Token = "0x4000147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[HideInInspector]
		public Image errorToggleEnabledOverlay_Image;

		[Token(Token = "0x4000148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[HideInInspector]
		public Button messagesUp_Button;

		[Token(Token = "0x4000149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[HideInInspector]
		public Button messagesDown_Button;

		[Token(Token = "0x400014A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[HideInInspector]
		public Button stackTraceUp_Button;

		[Token(Token = "0x400014B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[HideInInspector]
		public Button stackTraceDown_Button;

		[Token(Token = "0x400014C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[HideInInspector]
		public Scrollbar messages_ScrollBar;

		[Token(Token = "0x400014D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[HideInInspector]
		public Scrollbar stackTrace_ScrollBar;

		[Token(Token = "0x400014E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[HideInInspector]
		public Image WholeMessageBackgroundImage;

		[Token(Token = "0x400014F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[HideInInspector]
		public Text WholeMessageText;

		[Token(Token = "0x4000150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private List<string> consoleMessages;

		[Token(Token = "0x4000151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private List<string> messageStackTraces;

		[Token(Token = "0x4000152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private List<LogType> consoleMessageTypes;

		[Token(Token = "0x4000153")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private List<GameObject> instantiatedMessageObjects;

		[Token(Token = "0x4000154")]
		private const float messagesScrollBarIncrement = 0.02f;

		[Token(Token = "0x4000155")]
		private const float scrollViewHeight = 90f;

		[Token(Token = "0x4000156")]
		private const float wholeMessageBackGroundExpandConstant = 5f;

		[Token(Token = "0x6000105")]
		[Address(RVA = "0xC0BBB0", Offset = "0xC0BBB0", VA = "0xC0BBB0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000106")]
		[Address(RVA = "0xC0BF34", Offset = "0xC0BF34", VA = "0xC0BF34")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000107")]
		[Address(RVA = "0xC0BFB0", Offset = "0xC0BFB0", VA = "0xC0BFB0")]
		private void HandleLogMessage(string logString, string stackTrace, LogType type)
		{
		}

		[Token(Token = "0x6000108")]
		[Address(RVA = "0xC0C074", Offset = "0xC0C074", VA = "0xC0C074")]
		private void InstantiateNewMessageToConsole(string message, string messageTrace, LogType logtype)
		{
		}

		[Token(Token = "0x6000109")]
		[Address(RVA = "0xC0BC74", Offset = "0xC0BC74", VA = "0xC0BC74")]
		private void BindListeners()
		{
		}

		[Token(Token = "0x600010A")]
		[Address(RVA = "0xC0C560", Offset = "0xC0C560", VA = "0xC0C560")]
		public void ClearWholeLog()
		{
		}

		[Token(Token = "0x600010B")]
		[Address(RVA = "0xC0C6CC", Offset = "0xC0C6CC", VA = "0xC0C6CC")]
		public void UpdateWholeLog()
		{
		}

		[Token(Token = "0x600010C")]
		[Address(RVA = "0xC0C3D0", Offset = "0xC0C3D0", VA = "0xC0C3D0")]
		private void UpdateConsoleMessageColliders()
		{
		}

		[Token(Token = "0x600010D")]
		[Address(RVA = "0xC0C22C", Offset = "0xC0C22C", VA = "0xC0C22C")]
		public void UpdateLogTextFieldAmounts()
		{
		}

		[Token(Token = "0x600010E")]
		[Address(RVA = "0xC0B8AC", Offset = "0xC0B8AC", VA = "0xC0B8AC")]
		public void SetStackTraceText(string stackTrace)
		{
		}

		[Token(Token = "0x600010F")]
		[Address(RVA = "0xC0B964", Offset = "0xC0B964", VA = "0xC0B964")]
		public void HideWholeMessageTextAndBG()
		{
		}

		[Token(Token = "0x6000110")]
		[Address(RVA = "0xC0B5A8", Offset = "0xC0B5A8", VA = "0xC0B5A8")]
		public void SetAndShowWholeDebugMessage(string wholeMessage, Vector3 messageLocation)
		{
		}

		[Token(Token = "0x6000111")]
		[Address(RVA = "0xC0C820", Offset = "0xC0C820", VA = "0xC0C820")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DCB84", Offset = "0x8DCB84")]
		private IEnumerator SetStackTraceContentSizeDeltaAfterOneFrame()
		{
			return null;
		}

		[Token(Token = "0x6000112")]
		[Address(RVA = "0xC0C88C", Offset = "0xC0C88C", VA = "0xC0C88C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DCBE4", Offset = "0x8DCBE4")]
		private IEnumerator SetWholeMessageBackgroundSizeDeltaAfterOneFrame()
		{
			return null;
		}

		[Token(Token = "0x6000113")]
		[Address(RVA = "0xC0C8F8", Offset = "0xC0C8F8", VA = "0xC0C8F8")]
		public void ShowErrorMessagesToggled(bool isOn)
		{
		}

		[Token(Token = "0x6000114")]
		[Address(RVA = "0xC0C944", Offset = "0xC0C944", VA = "0xC0C944")]
		public void ShowWarningMessagesToggled(bool isOn)
		{
		}

		[Token(Token = "0x6000115")]
		[Address(RVA = "0xC0C990", Offset = "0xC0C990", VA = "0xC0C990")]
		public void ShowInfoMessagesToggled(bool isOn)
		{
		}

		[Token(Token = "0x6000116")]
		[Address(RVA = "0xC0C9DC", Offset = "0xC0C9DC", VA = "0xC0C9DC")]
		public void MoveMessagesUpButtonPressed()
		{
		}

		[Token(Token = "0x6000117")]
		[Address(RVA = "0xC0CA2C", Offset = "0xC0CA2C", VA = "0xC0CA2C")]
		public void MoveMessagesDownButtonPressed()
		{
		}

		[Token(Token = "0x6000118")]
		[Address(RVA = "0xC0CA7C", Offset = "0xC0CA7C", VA = "0xC0CA7C")]
		public void StackTraceUpButtonPressed()
		{
		}

		[Token(Token = "0x6000119")]
		[Address(RVA = "0xC0CACC", Offset = "0xC0CACC", VA = "0xC0CACC")]
		public void StackTraceDownButtonPressed()
		{
		}

		[Token(Token = "0x600011A")]
		[Address(RVA = "0xC0CB1C", Offset = "0xC0CB1C", VA = "0xC0CB1C")]
		public VRConsoleRuntimeConsole()
		{
		}
	}
	[Token(Token = "0x2000037")]
	public class VRConsoleUICollisionInteractor : MonoBehaviour
	{
		[Token(Token = "0x2000038")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB27C", Offset = "0x8CB27C")]
		private sealed class <TickSubmit>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000160")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000161")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000162")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRConsoleUICollisionInteractor <>4__this;

			[Token(Token = "0x4000163")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private PointerEventData <pointData>5__2;

			[Token(Token = "0x17000018")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600012F")]
				[Address(RVA = "0x190BFB4", Offset = "0x190BFB4", VA = "0x190BFB4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000019")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000131")]
				[Address(RVA = "0x190BFFC", Offset = "0x190BFFC", VA = "0x190BFFC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600012C")]
			[Address(RVA = "0x190BD5C", Offset = "0x190BD5C", VA = "0x190BD5C")]
			[DebuggerHidden]
			public <TickSubmit>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x600012D")]
			[Address(RVA = "0x190BD88", Offset = "0x190BD88", VA = "0x190BD88", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600012E")]
			[Address(RVA = "0x190BD8C", Offset = "0x190BD8C", VA = "0x190BD8C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000130")]
			[Address(RVA = "0x190BFBC", Offset = "0x190BFBC", VA = "0x190BFBC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400015D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float submitTickRate;

		[Token(Token = "0x400015E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool tickIfTriggered;

		[Token(Token = "0x400015F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float submitDelaytime;

		[Token(Token = "0x6000127")]
		[Address(RVA = "0xC0CC3C", Offset = "0xC0CC3C", VA = "0xC0CC3C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000128")]
		[Address(RVA = "0xC0CC50", Offset = "0xC0CC50", VA = "0xC0CC50")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000129")]
		[Address(RVA = "0xC0CFB0", Offset = "0xC0CFB0", VA = "0xC0CFB0")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x600012A")]
		[Address(RVA = "0xC0CF44", Offset = "0xC0CF44", VA = "0xC0CF44")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DCCE4", Offset = "0x8DCCE4")]
		private IEnumerator TickSubmit()
		{
			return null;
		}

		[Token(Token = "0x600012B")]
		[Address(RVA = "0xC0D20C", Offset = "0xC0D20C", VA = "0xC0D20C")]
		public VRConsoleUICollisionInteractor()
		{
		}
	}
}
namespace Guirao.UltimateTextDamage
{
	[Token(Token = "0x2000039")]
	public class LookAtCameraTextDamage : MonoBehaviour
	{
		[Token(Token = "0x4000164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform trCamera;

		[Token(Token = "0x6000132")]
		[Address(RVA = "0xB16A58", Offset = "0xB16A58", VA = "0xB16A58")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000133")]
		[Address(RVA = "0xB16B08", Offset = "0xB16B08", VA = "0xB16B08")]
		public LookAtCameraTextDamage()
		{
		}
	}
	[Token(Token = "0x200003A")]
	public class RandomizeOffsetX : MonoBehaviour
	{
		[Token(Token = "0x4000165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string offsetParamName;

		[Token(Token = "0x4000166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Animator animator;

		[Token(Token = "0x6000134")]
		[Address(RVA = "0xE5E344", Offset = "0xE5E344", VA = "0xE5E344")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000135")]
		[Address(RVA = "0xE5E37C", Offset = "0xE5E37C", VA = "0xE5E37C")]
		public RandomizeOffsetX()
		{
		}
	}
	[Token(Token = "0x200003B")]
	public class TextDamageClicker : MonoBehaviour
	{
		[Token(Token = "0x4000167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UltimateTextDamageManager textManager;

		[Token(Token = "0x4000168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform overrideTransform;

		[Token(Token = "0x4000169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool onlyDefault;

		[Token(Token = "0x400016A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string[] optionsToShow;

		[Token(Token = "0x400016B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool autoclicker;

		[Token(Token = "0x400016C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float clickRate;

		[Token(Token = "0x400016D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float lastTimeClick;

		[Token(Token = "0x6000136")]
		[Address(RVA = "0x113FE24", Offset = "0x113FE24", VA = "0x113FE24")]
		private void OnMouseUpAsButton()
		{
		}

		[Token(Token = "0x6000137")]
		[Address(RVA = "0x11400C0", Offset = "0x11400C0", VA = "0x11400C0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000138")]
		[Address(RVA = "0x1140120", Offset = "0x1140120", VA = "0x1140120")]
		public void ForceAdd()
		{
		}

		[Token(Token = "0x6000139")]
		[Address(RVA = "0x1140124", Offset = "0x1140124", VA = "0x1140124")]
		public TextDamageClicker()
		{
		}
	}
	[Token(Token = "0x200003C")]
	public class TextDamageClickerChaotic : MonoBehaviour
	{
		[Token(Token = "0x400016E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UltimateTextDamageManager textManager;

		[Token(Token = "0x400016F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform overrideTransform;

		[Token(Token = "0x4000170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool autoclicker;

		[Token(Token = "0x4000171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float clickRate;

		[Token(Token = "0x4000172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float lastTimeClick;

		[Token(Token = "0x600013A")]
		[Address(RVA = "0x114013C", Offset = "0x114013C", VA = "0x114013C")]
		private void OnMouseUpAsButton()
		{
		}

		[Token(Token = "0x600013B")]
		[Address(RVA = "0x114034C", Offset = "0x114034C", VA = "0x114034C")]
		private void Update()
		{
		}

		[Token(Token = "0x600013C")]
		[Address(RVA = "0x11403AC", Offset = "0x11403AC", VA = "0x11403AC")]
		public TextDamageClickerChaotic()
		{
		}
	}
	[Token(Token = "0x200003D")]
	public class UIDemo : MonoBehaviour
	{
		[Token(Token = "0x4000173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isSceneTextMeshPro;

		[Token(Token = "0x4000174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text labelText;

		[Token(Token = "0x600013D")]
		[Address(RVA = "0x114844C", Offset = "0x114844C", VA = "0x114844C")]
		private void Start()
		{
		}

		[Token(Token = "0x600013E")]
		[Address(RVA = "0x1148450", Offset = "0x1148450", VA = "0x1148450")]
		public UIDemo()
		{
		}
	}
	[Token(Token = "0x200003E")]
	public class ForceLayout : MonoBehaviour
	{
		[Token(Token = "0x600013F")]
		[Address(RVA = "0x1535C0C", Offset = "0x1535C0C", VA = "0x1535C0C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000140")]
		[Address(RVA = "0x1535D4C", Offset = "0x1535D4C", VA = "0x1535D4C")]
		public ForceLayout()
		{
		}
	}
	[Token(Token = "0x200003F")]
	public static class NumberHelper
	{
		[Token(Token = "0x4000175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Dictionary<int, string> numExponentialTable;

		[Token(Token = "0x4000176")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string periodString;

		[Token(Token = "0x4000177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string whiteSpaceString;

		[Token(Token = "0x4000178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static string dashString;

		[Token(Token = "0x4000179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static string zeroString;

		[Token(Token = "0x400017A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static StringBuilder builder;

		[Token(Token = "0x400017B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static string[] optimizedNumberToStringArray;

		[Token(Token = "0x6000141")]
		[Address(RVA = "0xC242E8", Offset = "0xC242E8", VA = "0xC242E8")]
		public static string ToStringScientific(this float number)
		{
			return null;
		}

		[Token(Token = "0x6000142")]
		[Address(RVA = "0xC244FC", Offset = "0xC244FC", VA = "0xC244FC")]
		public static string FormatNumber(float num)
		{
			return null;
		}

		[Token(Token = "0x6000143")]
		[Address(RVA = "0xC24354", Offset = "0xC24354", VA = "0xC24354")]
		private static void InitializeToString()
		{
		}

		[Token(Token = "0x6000144")]
		[Address(RVA = "0xC24EE4", Offset = "0xC24EE4", VA = "0xC24EE4")]
		private static string GetNumberOptimized(int number)
		{
			return null;
		}
	}
	[Token(Token = "0x2000040")]
	public class UITextDamage : MonoBehaviour
	{
		[Token(Token = "0x400017D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CE110", Offset = "0x8CE110")]
		public TextMeshProUGUI labelTMP;

		[Token(Token = "0x400017E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CE148", Offset = "0x8CE148")]
		private bool <autoFaceCameraWorldSpace>k__BackingField;

		[Token(Token = "0x400017F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CE158", Offset = "0x8CE158")]
		private Canvas <Canvas>k__BackingField;

		[Token(Token = "0x4000180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CE168", Offset = "0x8CE168")]
		private float <Offset>k__BackingField;

		[Token(Token = "0x4000181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Camera Cam;

		[Token(Token = "0x4000182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CE178", Offset = "0x8CE178")]
		private bool <followsTarget>k__BackingField;

		[Token(Token = "0x4000183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CE188", Offset = "0x8CE188")]
		private Transform <currentTransformFollow>k__BackingField;

		[Token(Token = "0x4000184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private RectTransform rectTransform;

		[Token(Token = "0x4000185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform toFollow;

		[Token(Token = "0x4000186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 initialPosition;

		[Token(Token = "0x4000187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Quaternion initialRotation;

		[Token(Token = "0x4000188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool firstTime;

		[Token(Token = "0x4000189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Animator myAnimator;

		[Token(Token = "0x400018A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private RectTransform rectTransformCache;

		[Token(Token = "0x1700001A")]
		public TextMeshProUGUI UsedLabel
		{
			[Token(Token = "0x6000148")]
			[Address(RVA = "0x1151294", Offset = "0x1151294", VA = "0x1151294")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001B")]
		public bool autoFaceCameraWorldSpace
		{
			[Token(Token = "0x6000149")]
			[Address(RVA = "0x115129C", Offset = "0x115129C", VA = "0x115129C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DCDC4", Offset = "0x8DCDC4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600014A")]
			[Address(RVA = "0x11512A4", Offset = "0x11512A4", VA = "0x11512A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DCDD4", Offset = "0x8DCDD4")]
			set
			{
			}
		}

		[Token(Token = "0x1700001C")]
		public Canvas Canvas
		{
			[Token(Token = "0x600014B")]
			[Address(RVA = "0x11512B0", Offset = "0x11512B0", VA = "0x11512B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DCDE4", Offset = "0x8DCDE4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600014C")]
			[Address(RVA = "0x11512B8", Offset = "0x11512B8", VA = "0x11512B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DCDF4", Offset = "0x8DCDF4")]
			set
			{
			}
		}

		[Token(Token = "0x1700001D")]
		public float Offset
		{
			[Token(Token = "0x600014D")]
			[Address(RVA = "0x11512C0", Offset = "0x11512C0", VA = "0x11512C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DCE04", Offset = "0x8DCE04")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600014E")]
			[Address(RVA = "0x11512C8", Offset = "0x11512C8", VA = "0x11512C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DCE14", Offset = "0x8DCE14")]
			set
			{
			}
		}

		[Token(Token = "0x1700001E")]
		public bool followsTarget
		{
			[Token(Token = "0x600014F")]
			[Address(RVA = "0x11512D0", Offset = "0x11512D0", VA = "0x11512D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DCE24", Offset = "0x8DCE24")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000150")]
			[Address(RVA = "0x11512D8", Offset = "0x11512D8", VA = "0x11512D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DCE34", Offset = "0x8DCE34")]
			set
			{
			}
		}

		[Token(Token = "0x1700001F")]
		public Transform currentTransformFollow
		{
			[Token(Token = "0x6000151")]
			[Address(RVA = "0x11512E4", Offset = "0x11512E4", VA = "0x11512E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DCE44", Offset = "0x8DCE44")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000152")]
			[Address(RVA = "0x11512EC", Offset = "0x11512EC", VA = "0x11512EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DCE54", Offset = "0x8DCE54")]
			set
			{
			}
		}

		[Token(Token = "0x14000004")]
		public event Action<UITextDamage, Transform> eventOnEnd
		{
			[Token(Token = "0x6000146")]
			[Address(RVA = "0x1151154", Offset = "0x1151154", VA = "0x1151154")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DCDA4", Offset = "0x8DCDA4")]
			add
			{
			}
			[Token(Token = "0x6000147")]
			[Address(RVA = "0x11511F4", Offset = "0x11511F4", VA = "0x11511F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DCDB4", Offset = "0x8DCDB4")]
			remove
			{
			}
		}

		[Token(Token = "0x6000153")]
		[Address(RVA = "0x11512F4", Offset = "0x11512F4", VA = "0x11512F4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000154")]
		[Address(RVA = "0x1151364", Offset = "0x1151364", VA = "0x1151364")]
		public void Show(string text, Transform transform, [Optional] Vector3 viewerPosition)
		{
		}

		[Token(Token = "0x6000155")]
		[Address(RVA = "0x1151A94", Offset = "0x1151A94", VA = "0x1151A94")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000156")]
		[Address(RVA = "0x1151AE8", Offset = "0x1151AE8", VA = "0x1151AE8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000157")]
		[Address(RVA = "0x1151B50", Offset = "0x1151B50", VA = "0x1151B50")]
		public void End()
		{
		}

		[Token(Token = "0x6000158")]
		[Address(RVA = "0x11515C4", Offset = "0x11515C4", VA = "0x11515C4")]
		private void UpdatePosition()
		{
		}

		[Token(Token = "0x6000159")]
		[Address(RVA = "0x1151BD8", Offset = "0x1151BD8", VA = "0x1151BD8")]
		public UITextDamage()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000041")]
	public class TextDamageType
	{
		[Token(Token = "0x400018B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string keyType;

		[Token(Token = "0x400018C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int poolCount;

		[Token(Token = "0x400018D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UITextDamage prefab;

		[Token(Token = "0x600015A")]
		[Address(RVA = "0x11403C4", Offset = "0x11403C4", VA = "0x11403C4")]
		public TextDamageType()
		{
		}
	}
	[Token(Token = "0x2000042")]
	public class UltimateTextDamageManager : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000043")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB29C", Offset = "0x8CB29C")]
		private sealed class <>c
		{
			[Token(Token = "0x400019E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400019F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<GameObject> <>9__25_0;

			[Token(Token = "0x6000168")]
			[Address(RVA = "0x190BA00", Offset = "0x190BA00", VA = "0x190BA00")]
			public <>c()
			{
			}

			[Token(Token = "0x6000169")]
			[Address(RVA = "0x190BA08", Offset = "0x190BA08", VA = "0x190BA08")]
			internal bool <GetTempObject>b__25_0(GameObject o)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400018E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Canvas canvas;

		[Token(Token = "0x400018F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool convertToCamera;

		[Token(Token = "0x4000190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Camera theCamera;

		[Token(Token = "0x4000191")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool autoFaceToCamera;

		[Token(Token = "0x4000192")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool overlaping;

		[Token(Token = "0x4000193")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		public bool followsTarget;

		[Token(Token = "0x4000194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float offsetUnits;

		[Token(Token = "0x4000195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float damping;

		[Token(Token = "0x4000196")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<TextDamageType> textTypes;

		[Token(Token = "0x4000197")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Dictionary<string, List<UITextDamage>> m_dTextTypes;

		[Token(Token = "0x4000198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Dictionary<Transform, List<UITextDamage>> m_instancesInScreen;

		[Token(Token = "0x4000199")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<GameObject> m_tempObjects;

		[Token(Token = "0x400019A")]
		private const int kTempObjectsCount = 30;

		[Token(Token = "0x400019B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<UITextDamage> pooledDamageTexts;

		[Token(Token = "0x400019C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int lastIndex;

		[Token(Token = "0x400019D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private int j;

		[Token(Token = "0x600015B")]
		[Address(RVA = "0xC08C04", Offset = "0xC08C04", VA = "0xC08C04")]
		public void Start()
		{
		}

		[Token(Token = "0x600015C")]
		[Address(RVA = "0xC09090", Offset = "0xC09090", VA = "0xC09090")]
		public void Add(string text, Transform target, string key = "default", [Optional] Vector3 viewerPosition)
		{
		}

		[Token(Token = "0x600015D")]
		[Address(RVA = "0xC095C8", Offset = "0xC095C8", VA = "0xC095C8")]
		public void Add(string text, Vector3 position, string key = "default")
		{
		}

		[Token(Token = "0x600015E")]
		[Address(RVA = "0xC09868", Offset = "0xC09868", VA = "0xC09868")]
		public void Add(string text, Vector3 position, string key = "default", [Optional] Vector3 viewerPosition)
		{
		}

		[Token(Token = "0x600015F")]
		[Address(RVA = "0xC0992C", Offset = "0xC0992C", VA = "0xC0992C")]
		private UITextDamage AllocateOneInstance(TextDamageType text)
		{
			return null;
		}

		[Token(Token = "0x6000160")]
		[Address(RVA = "0xC08EB4", Offset = "0xC08EB4", VA = "0xC08EB4")]
		private void Initialize(TextDamageType text)
		{
		}

		[Token(Token = "0x6000161")]
		[Address(RVA = "0xC09B0C", Offset = "0xC09B0C", VA = "0xC09B0C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000162")]
		[Address(RVA = "0xC09E1C", Offset = "0xC09E1C", VA = "0xC09E1C")]
		private void Label_eventOnEnd(UITextDamage obj, Transform transformFollow)
		{
		}

		[Token(Token = "0x6000163")]
		[Address(RVA = "0xC09288", Offset = "0xC09288", VA = "0xC09288")]
		private UITextDamage GetAvailableText(string keyType)
		{
			return null;
		}

		[Token(Token = "0x6000164")]
		[Address(RVA = "0xC09678", Offset = "0xC09678", VA = "0xC09678")]
		private GameObject GetTempObject()
		{
			return null;
		}

		[Token(Token = "0x6000165")]
		[Address(RVA = "0xC09FE8", Offset = "0xC09FE8", VA = "0xC09FE8")]
		public void SetNewCamera(Camera cam)
		{
		}

		[Token(Token = "0x6000166")]
		[Address(RVA = "0xC0A088", Offset = "0xC0A088", VA = "0xC0A088")]
		public UltimateTextDamageManager()
		{
		}
	}
}
namespace TurnTheGameOn.Timer
{
	[Token(Token = "0x2000044")]
	public enum TimerState
	{
		[Token(Token = "0x40001A1")]
		Disabled,
		[Token(Token = "0x40001A2")]
		Counting
	}
	[Token(Token = "0x2000045")]
	public enum TimerTextType
	{
		[Token(Token = "0x40001A4")]
		DefaultText,
		[Token(Token = "0x40001A5")]
		TextMeshProUGUI,
		[Token(Token = "0x40001A6")]
		TextMeshProArray
	}
	[Token(Token = "0x2000046")]
	public enum TimerType
	{
		[Token(Token = "0x40001A8")]
		CountDown,
		[Token(Token = "0x40001A9")]
		CountUp,
		[Token(Token = "0x40001AA")]
		CountUpInfinite
	}
	[Serializable]
	[Token(Token = "0x2000047")]
	public class DisplayOptions
	{
		[Token(Token = "0x40001AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool milliseconds;

		[Token(Token = "0x40001AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool seconds;

		[Token(Token = "0x40001AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public bool minutes;

		[Token(Token = "0x40001AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
		public bool hours;

		[Token(Token = "0x40001AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool days;

		[Token(Token = "0x600016A")]
		[Address(RVA = "0xCC3E54", Offset = "0xCC3E54", VA = "0xCC3E54")]
		public DisplayOptions()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000048")]
	public class LeadingZero
	{
		[Token(Token = "0x40001B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool seconds;

		[Token(Token = "0x40001B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool minutes;

		[Token(Token = "0x40001B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public bool hours;

		[Token(Token = "0x40001B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
		public bool days;

		[Token(Token = "0x600016B")]
		[Address(RVA = "0xB15DD8", Offset = "0xB15DD8", VA = "0xB15DD8")]
		public LeadingZero()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000049")]
	public class TimeEvent
	{
		[Token(Token = "0x40001B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CE198", Offset = "0x8CE198")]
		public string eventName;

		[Token(Token = "0x40001B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CE1D0", Offset = "0x8CE1D0")]
		public double eventTime;

		[Token(Token = "0x40001B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CE208", Offset = "0x8CE208")]
		public UnityEvent timeEvent;

		[Token(Token = "0x40001B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public bool wasTriggered;

		[Token(Token = "0x600016C")]
		[Address(RVA = "0x11415C8", Offset = "0x11415C8", VA = "0x11415C8")]
		public TimeEvent()
		{
		}
	}
	[Token(Token = "0x200004A")]
	public class Timer : MonoBehaviour
	{
		[Token(Token = "0x40001B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CE250", Offset = "0x8CE250")]
		public TimerState timerState;

		[Token(Token = "0x40001B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CE288", Offset = "0x8CE288")]
		public TimerType timerType;

		[Token(Token = "0x40001BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CE2C0", Offset = "0x8CE2C0")]
		public double startTime;

		[Token(Token = "0x40001BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CE2F8", Offset = "0x8CE2F8")]
		public double finishTime;

		[Token(Token = "0x40001BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8CE330", Offset = "0x8CE330")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CE330", Offset = "0x8CE330")]
		public float timerSpeed;

		[Token(Token = "0x40001BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CE388", Offset = "0x8CE388")]
		public bool loop;

		[Token(Token = "0x40001BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CE3C0", Offset = "0x8CE3C0")]
		public bool useSystemTime;

		[Token(Token = "0x40001BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CE3F8", Offset = "0x8CE3F8")]
		public TimeEvent[] timeEvents;

		[Token(Token = "0x40001C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CE430", Offset = "0x8CE430")]
		public UnityEvent timesUpEvent;

		[Token(Token = "0x40001C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CE468", Offset = "0x8CE468")]
		public bool setZeroTimescale;

		[Token(Token = "0x40001C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CE4A0", Offset = "0x8CE4A0")]
		public TimerTextType textType;

		[Token(Token = "0x40001C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CE4D8", Offset = "0x8CE4D8")]
		public Text timerTextDefault;

		[Token(Token = "0x40001C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CE510", Offset = "0x8CE510")]
		public TextMeshProUGUI timerTextTMPUGUI;

		[Token(Token = "0x40001C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CE548", Offset = "0x8CE548")]
		public DisplayOptions displayOptions;

		[Token(Token = "0x40001C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CE580", Offset = "0x8CE580")]
		public LeadingZero leadingZero;

		[Token(Token = "0x40001C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public TextMeshPro[] timerTextArray;

		[Token(Token = "0x40001C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public string preString;

		[Token(Token = "0x40001C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public string postString;

		[Token(Token = "0x40001CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public int day;

		[Token(Token = "0x40001CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public int hour;

		[Token(Token = "0x40001CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public int minute;

		[Token(Token = "0x40001CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int second;

		[Token(Token = "0x40001CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int millisecond;

		[Token(Token = "0x40001CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public string formattedString;

		[Token(Token = "0x40001D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private double gameTime;

		[Token(Token = "0x40001D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private string ms;

		[Token(Token = "0x40001D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private string s;

		[Token(Token = "0x40001D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private string m;

		[Token(Token = "0x40001D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private string d;

		[Token(Token = "0x40001D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private string h;

		[Token(Token = "0x40001D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private int lastSecond;

		[Token(Token = "0x600016D")]
		[Address(RVA = "0x11419AC", Offset = "0x11419AC", VA = "0x11419AC")]
		private void Start()
		{
		}

		[Token(Token = "0x600016E")]
		[Address(RVA = "0x1141D70", Offset = "0x1141D70", VA = "0x1141D70")]
		private void Update()
		{
		}

		[Token(Token = "0x600016F")]
		[Address(RVA = "0x1142044", Offset = "0x1142044", VA = "0x1142044")]
		private void SetSystemTime()
		{
		}

		[Token(Token = "0x6000170")]
		[Address(RVA = "0x1141F38", Offset = "0x1141F38", VA = "0x1141F38")]
		private void TimeIsUpEvent()
		{
		}

		[Token(Token = "0x6000171")]
		[Address(RVA = "0x1141E80", Offset = "0x1141E80", VA = "0x1141E80")]
		private void CountUpTimeEvents()
		{
		}

		[Token(Token = "0x6000172")]
		[Address(RVA = "0x1141F8C", Offset = "0x1141F8C", VA = "0x1141F8C")]
		private void CountDownTimeEvents()
		{
		}

		[Token(Token = "0x6000173")]
		[Address(RVA = "0x11421E0", Offset = "0x11421E0", VA = "0x11421E0")]
		private string FormatSeconds(double elapsed)
		{
			return null;
		}

		[Token(Token = "0x6000174")]
		[Address(RVA = "0x1142E7C", Offset = "0x1142E7C", VA = "0x1142E7C")]
		private void SetDisplayOptions()
		{
		}

		[Token(Token = "0x6000175")]
		[Address(RVA = "0x1142FB8", Offset = "0x1142FB8", VA = "0x1142FB8")]
		public void AddTime(double value)
		{
		}

		[Token(Token = "0x6000176")]
		[Address(RVA = "0x11419D8", Offset = "0x11419D8", VA = "0x11419D8")]
		public void ClampGameTime()
		{
		}

		[Token(Token = "0x6000177")]
		[Address(RVA = "0x1142FC8", Offset = "0x1142FC8", VA = "0x1142FC8")]
		public double GetTimerValue()
		{
			return default(double);
		}

		[Token(Token = "0x6000178")]
		[Address(RVA = "0x1141B44", Offset = "0x1141B44", VA = "0x1141B44")]
		public void UpdateUIText()
		{
		}

		[Token(Token = "0x6000179")]
		[Address(RVA = "0x1142FD0", Offset = "0x1142FD0", VA = "0x1142FD0")]
		public void SetTimerValue(double _gameTime)
		{
		}

		[Token(Token = "0x600017A")]
		[Address(RVA = "0x1142FD8", Offset = "0x1142FD8", VA = "0x1142FD8")]
		public void StartTimer()
		{
		}

		[Token(Token = "0x600017B")]
		[Address(RVA = "0x1142168", Offset = "0x1142168", VA = "0x1142168")]
		public void StopTimer()
		{
		}

		[Token(Token = "0x600017C")]
		[Address(RVA = "0x1142FE4", Offset = "0x1142FE4", VA = "0x1142FE4")]
		public void ResetTimer()
		{
		}

		[Token(Token = "0x600017D")]
		[Address(RVA = "0x11421B0", Offset = "0x11421B0", VA = "0x11421B0")]
		public void RestartTimer()
		{
		}

		[Token(Token = "0x600017E")]
		[Address(RVA = "0x1143058", Offset = "0x1143058", VA = "0x1143058")]
		public Timer()
		{
		}
	}
	[Token(Token = "0x200004B")]
	public class AnalogClock : MonoBehaviour
	{
		[Token(Token = "0x40001D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool useSystemTime;

		[Token(Token = "0x40001D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8CE5B8", Offset = "0x8CE5B8")]
		public int systemTimeHourOffset;

		[Token(Token = "0x40001D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Timer timer;

		[Token(Token = "0x40001DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform secondHandPivot;

		[Token(Token = "0x40001DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform minuteHandPivot;

		[Token(Token = "0x40001DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform hourHandPivot;

		[Token(Token = "0x40001DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float secondhandRotation;

		[Token(Token = "0x40001DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float minuteRotation;

		[Token(Token = "0x40001DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float hourRotation;

		[Token(Token = "0x40001E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int second;

		[Token(Token = "0x40001E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int minute;

		[Token(Token = "0x40001E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int hour;

		[Token(Token = "0x40001E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private DateTime currentDateTime;

		[Token(Token = "0x600017F")]
		[Address(RVA = "0xD68C9C", Offset = "0xD68C9C", VA = "0xD68C9C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000180")]
		[Address(RVA = "0xD68ECC", Offset = "0xD68ECC", VA = "0xD68ECC")]
		public AnalogClock()
		{
		}
	}
	[Token(Token = "0x200004C")]
	public class AnalogStopwatch : MonoBehaviour
	{
		[Token(Token = "0x40001E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Timer timer;

		[Token(Token = "0x40001E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform secondHandPivot;

		[Token(Token = "0x40001E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform minuteHandPivot;

		[Token(Token = "0x40001E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float secondhandRotation;

		[Token(Token = "0x40001E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float minuteRotation;

		[Token(Token = "0x40001E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int second;

		[Token(Token = "0x40001EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int minute;

		[Token(Token = "0x6000181")]
		[Address(RVA = "0xD68EDC", Offset = "0xD68EDC", VA = "0xD68EDC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000182")]
		[Address(RVA = "0xD6906C", Offset = "0xD6906C", VA = "0xD6906C")]
		public AnalogStopwatch()
		{
		}
	}
	[Token(Token = "0x200004D")]
	public class DestroyObjects : MonoBehaviour
	{
		[Token(Token = "0x40001EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<GameObject> objectsToDestroy;

		[Token(Token = "0x6000183")]
		[Address(RVA = "0xCC2C60", Offset = "0xCC2C60", VA = "0xCC2C60")]
		public void Destroy()
		{
		}

		[Token(Token = "0x6000184")]
		[Address(RVA = "0xCC2D4C", Offset = "0xCC2D4C", VA = "0xCC2D4C")]
		public DestroyObjects()
		{
		}
	}
	[Token(Token = "0x200004E")]
	public class SaveSessionTimer : MonoBehaviour
	{
		[Token(Token = "0x40001EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Timer timer;

		[Token(Token = "0x40001ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private double lastSessionGameTimer;

		[Token(Token = "0x40001EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string saveDataKey;

		[Token(Token = "0x40001EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool showDebugLogs;

		[Token(Token = "0x6000185")]
		[Address(RVA = "0xE62E1C", Offset = "0xE62E1C", VA = "0xE62E1C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000186")]
		[Address(RVA = "0xE62F50", Offset = "0xE62F50", VA = "0xE62F50")]
		public static double PlayerPrefsGetDouble(string key, double defaultValue)
		{
			return default(double);
		}

		[Token(Token = "0x6000187")]
		[Address(RVA = "0xE63058", Offset = "0xE63058", VA = "0xE63058")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6000188")]
		[Address(RVA = "0xE631A4", Offset = "0xE631A4", VA = "0xE631A4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000189")]
		[Address(RVA = "0xE63178", Offset = "0xE63178", VA = "0xE63178")]
		public static void PlayerPrefsSetDouble(string key, double value)
		{
		}

		[Token(Token = "0x600018A")]
		[Address(RVA = "0xE62F80", Offset = "0xE62F80", VA = "0xE62F80")]
		private static string DoubleToString(double target)
		{
			return null;
		}

		[Token(Token = "0x600018B")]
		[Address(RVA = "0xE62FD4", Offset = "0xE62FD4", VA = "0xE62FD4")]
		private static double StringToDouble(string target)
		{
			return default(double);
		}

		[Token(Token = "0x600018C")]
		[Address(RVA = "0xE632C4", Offset = "0xE632C4", VA = "0xE632C4")]
		public void DeleteKeyValue()
		{
		}

		[Token(Token = "0x600018D")]
		[Address(RVA = "0xE632D0", Offset = "0xE632D0", VA = "0xE632D0")]
		public SaveSessionTimer()
		{
		}
	}
	[Token(Token = "0x200004F")]
	public class SceneLoader : MonoBehaviour
	{
		[Token(Token = "0x40001F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string sceneName;

		[Token(Token = "0x600018E")]
		[Address(RVA = "0xE6332C", Offset = "0xE6332C", VA = "0xE6332C")]
		public void LoadScene()
		{
		}

		[Token(Token = "0x600018F")]
		[Address(RVA = "0xE63394", Offset = "0xE63394", VA = "0xE63394")]
		public SceneLoader()
		{
		}
	}
}
namespace Smooth
{
	[Token(Token = "0x2000050")]
	public class MsgType
	{
		[Token(Token = "0x40001F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static short SmoothSyncFromServerToNonOwners;

		[Token(Token = "0x40001F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public static short SmoothSyncFromOwnerToServer;

		[Token(Token = "0x6000190")]
		[Address(RVA = "0xC1C3D4", Offset = "0xC1C3D4", VA = "0xC1C3D4")]
		public MsgType()
		{
		}
	}
	[Token(Token = "0x2000051")]
	public enum SyncMode
	{
		[Token(Token = "0x40001F4")]
		XYZ,
		[Token(Token = "0x40001F5")]
		XY,
		[Token(Token = "0x40001F6")]
		XZ,
		[Token(Token = "0x40001F7")]
		YZ,
		[Token(Token = "0x40001F8")]
		X,
		[Token(Token = "0x40001F9")]
		Y,
		[Token(Token = "0x40001FA")]
		Z,
		[Token(Token = "0x40001FB")]
		NONE
	}
	[Token(Token = "0x2000052")]
	public class SmoothSyncPUN2 : MonoBehaviourPunCallbacks, IPunObservable
	{
		[Token(Token = "0x2000053")]
		public enum ExtrapolationMode
		{
			[Token(Token = "0x400025C")]
			None,
			[Token(Token = "0x400025D")]
			Limited,
			[Token(Token = "0x400025E")]
			Unlimited
		}

		[Token(Token = "0x2000054")]
		public enum WhenToUpdateTransform
		{
			[Token(Token = "0x4000260")]
			Update,
			[Token(Token = "0x4000261")]
			FixedUpdate
		}

		[Token(Token = "0x2000055")]
		public delegate bool validateStateDelegate(StatePUN2 receivedState, StatePUN2 latestVerifiedState);

		[Token(Token = "0x2000056")]
		private enum RestState
		{
			[Token(Token = "0x4000263")]
			AT_REST,
			[Token(Token = "0x4000264")]
			JUST_STARTED_MOVING,
			[Token(Token = "0x4000265")]
			MOVING
		}

		[Token(Token = "0x40001FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float interpolationBackTime;

		[Token(Token = "0x40001FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public ExtrapolationMode extrapolationMode;

		[Token(Token = "0x40001FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool useExtrapolationTimeLimit;

		[Token(Token = "0x40001FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float extrapolationTimeLimit;

		[Token(Token = "0x4000200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool useExtrapolationDistanceLimit;

		[Token(Token = "0x4000201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float extrapolationDistanceLimit;

		[Token(Token = "0x4000202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float sendPositionThreshold;

		[Token(Token = "0x4000203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float sendRotationThreshold;

		[Token(Token = "0x4000204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float sendScaleThreshold;

		[Token(Token = "0x4000205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float sendVelocityThreshold;

		[Token(Token = "0x4000206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float sendAngularVelocityThreshold;

		[Token(Token = "0x4000207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float receivedPositionThreshold;

		[Token(Token = "0x4000208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float receivedRotationThreshold;

		[Token(Token = "0x4000209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float snapPositionThreshold;

		[Token(Token = "0x400020A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float snapRotationThreshold;

		[Token(Token = "0x400020B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float snapScaleThreshold;

		[Token(Token = "0x400020C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8CE5D0", Offset = "0x8CE5D0")]
		public float positionLerpSpeed;

		[Token(Token = "0x400020D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8CE5E8", Offset = "0x8CE5E8")]
		public float rotationLerpSpeed;

		[Token(Token = "0x400020E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8CE600", Offset = "0x8CE600")]
		public float scaleLerpSpeed;

		[Token(Token = "0x400020F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8CE618", Offset = "0x8CE618")]
		public float timeCorrectionSpeed;

		[Token(Token = "0x4000210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float snapTimeThreshold;

		[Token(Token = "0x4000211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public SyncMode syncPosition;

		[Token(Token = "0x4000212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public SyncMode syncRotation;

		[Token(Token = "0x4000213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public SyncMode syncScale;

		[Token(Token = "0x4000214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public SyncMode syncVelocity;

		[Token(Token = "0x4000215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public SyncMode syncAngularVelocity;

		[Token(Token = "0x4000216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool isPositionCompressed;

		[Token(Token = "0x4000217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		public bool isRotationCompressed;

		[Token(Token = "0x4000218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8A")]
		public bool isScaleCompressed;

		[Token(Token = "0x4000219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8B")]
		public bool isVelocityCompressed;

		[Token(Token = "0x400021A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public bool isAngularVelocityCompressed;

		[Token(Token = "0x400021B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8D")]
		public bool automaticallyResetTime;

		[Token(Token = "0x400021C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CE630", Offset = "0x8CE630")]
		private float <localTime>k__BackingField;

		[Token(Token = "0x400021D")]
		private const int maxTimePower = 12;

		[Token(Token = "0x400021E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private readonly float maxLocalTime;

		[Token(Token = "0x400021F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private readonly float minTimePrecision;

		[NonSerialized]
		[Token(Token = "0x4000220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int localTimeResetIndicator;

		[Token(Token = "0x4000221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public WhenToUpdateTransform whenToUpdateTransform;

		[Token(Token = "0x4000222")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public GameObject childObjectToSync;

		[NonSerialized]
		[Token(Token = "0x4000223")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public bool hasChildObject;

		[NonSerialized]
		[Token(Token = "0x4000224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public validateStateDelegate validateStateMethod;

		[Token(Token = "0x4000225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private StatePUN2 latestValidatedState;

		[Token(Token = "0x4000226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public bool setVelocityInsteadOfPositionOnNonOwners;

		[Token(Token = "0x4000227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
		public bool useLocalTransformOnly;

		[Token(Token = "0x4000228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public float maxPositionDifferenceForVelocitySyncing;

		[NonSerialized]
		[Token(Token = "0x4000229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public StatePUN2[] stateBuffer;

		[NonSerialized]
		[Token(Token = "0x400022A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public int stateCount;

		[NonSerialized]
		[Token(Token = "0x400022B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public Rigidbody rb;

		[NonSerialized]
		[Token(Token = "0x400022C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public bool hasRigidbody;

		[NonSerialized]
		[Token(Token = "0x400022D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public Rigidbody2D rb2D;

		[NonSerialized]
		[Token(Token = "0x400022E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public bool hasRigidbody2D;

		[Token(Token = "0x400022F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF9")]
		private bool dontLerp;

		[Token(Token = "0x4000230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		private float firstReceivedMessageZeroTime;

		[NonSerialized]
		[Token(Token = "0x4000231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public float lastTimeStateWasSent;

		[NonSerialized]
		[Token(Token = "0x4000232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		public Vector3 lastPositionWhenStateWasSent;

		[NonSerialized]
		[Token(Token = "0x4000233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public Quaternion lastRotationWhenStateWasSent;

		[NonSerialized]
		[Token(Token = "0x4000234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public Vector3 lastScaleWhenStateWasSent;

		[NonSerialized]
		[Token(Token = "0x4000235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		public Vector3 lastVelocityWhenStateWasSent;

		[NonSerialized]
		[Token(Token = "0x4000236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public Vector3 lastAngularVelocityWhenStateWasSent;

		[NonSerialized]
		[Token(Token = "0x4000237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public GameObject realObjectToSync;

		[NonSerialized]
		[Token(Token = "0x4000238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public int syncIndex;

		[NonSerialized]
		[Token(Token = "0x4000239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public SmoothSyncPUN2[] childObjectSmoothSyncs;

		[NonSerialized]
		[Token(Token = "0x400023A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public bool forceStateSend;

		[NonSerialized]
		[Token(Token = "0x400023B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x161")]
		public bool sendAtPositionalRestMessage;

		[NonSerialized]
		[Token(Token = "0x400023C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x162")]
		public bool sendAtRotationalRestMessage;

		[NonSerialized]
		[Token(Token = "0x400023D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x163")]
		public bool sendPosition;

		[NonSerialized]
		[Token(Token = "0x400023E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		public bool sendRotation;

		[NonSerialized]
		[Token(Token = "0x400023F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x165")]
		public bool sendScale;

		[NonSerialized]
		[Token(Token = "0x4000240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x166")]
		public bool sendVelocity;

		[NonSerialized]
		[Token(Token = "0x4000241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x167")]
		public bool sendAngularVelocity;

		[Token(Token = "0x4000242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private StatePUN2 targetTempState;

		[Token(Token = "0x4000243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private NetworkStatePUN2 sendingTempState;

		[NonSerialized]
		[Token(Token = "0x4000244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public Vector3 latestReceivedVelocity;

		[NonSerialized]
		[Token(Token = "0x4000245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		public Vector3 latestReceivedAngularVelocity;

		[Token(Token = "0x4000246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private float timeSpentExtrapolating;

		[Token(Token = "0x4000247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
		private bool extrapolatedLastFrame;

		[Token(Token = "0x4000248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private Vector3 positionLastAttemptedToSend;

		[Token(Token = "0x4000249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
		private bool changedPositionLastFrame;

		[Token(Token = "0x400024A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private Quaternion rotationLastAttemptedToSend;

		[Token(Token = "0x400024B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private bool changedRotationLastFrame;

		[Token(Token = "0x400024C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
		private int atRestThresholdCount;

		[Token(Token = "0x400024D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private int samePositionCount;

		[Token(Token = "0x400024E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		private int sameRotationCount;

		[Token(Token = "0x400024F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private RestState restStatePosition;

		[Token(Token = "0x4000250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
		private RestState restStateRotation;

		[Token(Token = "0x4000251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private bool hadAuthorityLastFrame;

		[Token(Token = "0x4000252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		private StatePUN2 latestEndStateUsed;

		[Token(Token = "0x4000253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private bool shouldSendNextPUNUpdate;

		[Token(Token = "0x4000254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
		private Vector3 latestTeleportedFromPosition;

		[Token(Token = "0x4000255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private Quaternion latestTeleportedFromRotation;

		[Token(Token = "0x4000256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		private bool triedToExtrapolateTooFar;

		[Token(Token = "0x4000257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
		private float lastTimeAttemptedToSend;

		[Token(Token = "0x4000258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private float _ownerTime;

		[Token(Token = "0x4000259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
		private float lastTimeOwnerTimeWasSet;

		[Token(Token = "0x400025A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		public int receivedStatesCounter;

		[Token(Token = "0x17000020")]
		public float localTime
		{
			[Token(Token = "0x6000192")]
			[Address(RVA = "0xE679D4", Offset = "0xE679D4", VA = "0xE679D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DCE64", Offset = "0x8DCE64")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000193")]
			[Address(RVA = "0xE679DC", Offset = "0xE679DC", VA = "0xE679DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DCE74", Offset = "0x8DCE74")]
			private set
			{
			}
		}

		[Token(Token = "0x17000021")]
		public bool isSyncingXPosition
		{
			[Token(Token = "0x60001BC")]
			[Address(RVA = "0xE6A584", Offset = "0xE6A584", VA = "0xE6A584")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000022")]
		public bool isSyncingYPosition
		{
			[Token(Token = "0x60001BD")]
			[Address(RVA = "0xE6A5AC", Offset = "0xE6A5AC", VA = "0xE6A5AC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000023")]
		public bool isSyncingZPosition
		{
			[Token(Token = "0x60001BE")]
			[Address(RVA = "0xE6A5D8", Offset = "0xE6A5D8", VA = "0xE6A5D8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000024")]
		public bool isSyncingXRotation
		{
			[Token(Token = "0x60001BF")]
			[Address(RVA = "0xE6A71C", Offset = "0xE6A71C", VA = "0xE6A71C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000025")]
		public bool isSyncingYRotation
		{
			[Token(Token = "0x60001C0")]
			[Address(RVA = "0xE6A744", Offset = "0xE6A744", VA = "0xE6A744")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000026")]
		public bool isSyncingZRotation
		{
			[Token(Token = "0x60001C1")]
			[Address(RVA = "0xE6A770", Offset = "0xE6A770", VA = "0xE6A770")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000027")]
		public bool isSyncingXScale
		{
			[Token(Token = "0x60001C2")]
			[Address(RVA = "0xE6A904", Offset = "0xE6A904", VA = "0xE6A904")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000028")]
		public bool isSyncingYScale
		{
			[Token(Token = "0x60001C3")]
			[Address(RVA = "0xE6A92C", Offset = "0xE6A92C", VA = "0xE6A92C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000029")]
		public bool isSyncingZScale
		{
			[Token(Token = "0x60001C4")]
			[Address(RVA = "0xE6A958", Offset = "0xE6A958", VA = "0xE6A958")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700002A")]
		public bool isSyncingXVelocity
		{
			[Token(Token = "0x60001C5")]
			[Address(RVA = "0xE6B4F8", Offset = "0xE6B4F8", VA = "0xE6B4F8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700002B")]
		public bool isSyncingYVelocity
		{
			[Token(Token = "0x60001C6")]
			[Address(RVA = "0xE6B520", Offset = "0xE6B520", VA = "0xE6B520")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700002C")]
		public bool isSyncingZVelocity
		{
			[Token(Token = "0x60001C7")]
			[Address(RVA = "0xE6B54C", Offset = "0xE6B54C", VA = "0xE6B54C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700002D")]
		public bool isSyncingXAngularVelocity
		{
			[Token(Token = "0x60001C8")]
			[Address(RVA = "0xE6B57C", Offset = "0xE6B57C", VA = "0xE6B57C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700002E")]
		public bool isSyncingYAngularVelocity
		{
			[Token(Token = "0x60001C9")]
			[Address(RVA = "0xE6B5A4", Offset = "0xE6B5A4", VA = "0xE6B5A4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700002F")]
		public bool isSyncingZAngularVelocity
		{
			[Token(Token = "0x60001CA")]
			[Address(RVA = "0xE6B5D0", Offset = "0xE6B5D0", VA = "0xE6B5D0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000030")]
		public float approximateNetworkTimeOnOwner
		{
			[Token(Token = "0x60001CC")]
			[Address(RVA = "0xE6909C", Offset = "0xE6909C", VA = "0xE6909C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60001CD")]
			[Address(RVA = "0xE690B4", Offset = "0xE690B4", VA = "0xE690B4")]
			set
			{
			}
		}

		[Token(Token = "0x6000194")]
		[Address(RVA = "0xE679E4", Offset = "0xE679E4", VA = "0xE679E4")]
		public static bool validateState(StatePUN2 latestReceivedState, StatePUN2 latestValidatedState)
		{
			return default(bool);
		}

		[Token(Token = "0x6000195")]
		[Address(RVA = "0xE679EC", Offset = "0xE679EC", VA = "0xE679EC")]
		public void Awake()
		{
		}

		[Token(Token = "0x6000196")]
		[Address(RVA = "0xE67E24", Offset = "0xE67E24", VA = "0xE67E24")]
		private void Update()
		{
		}

		[Token(Token = "0x6000197")]
		[Address(RVA = "0xE67EC0", Offset = "0xE67EC0", VA = "0xE67EC0")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000198")]
		[Address(RVA = "0xE67E34", Offset = "0xE67E34", VA = "0xE67E34")]
		private void SmoothSyncUpdate()
		{
		}

		[Token(Token = "0x6000199")]
		[Address(RVA = "0xE68AE4", Offset = "0xE68AE4", VA = "0xE68AE4", Slot = "28")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x600019A")]
		[Address(RVA = "0xE68EF4", Offset = "0xE68EF4", VA = "0xE68EF4", Slot = "29")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x600019B")]
		[Address(RVA = "0xE68FBC", Offset = "0xE68FBC", VA = "0xE68FBC")]
		public void OnSceneLoaded(Scene scene, LoadSceneMode mode)
		{
		}

		[Token(Token = "0x600019C")]
		[Address(RVA = "0xE67ED4", Offset = "0xE67ED4", VA = "0xE67ED4")]
		public void ResetLocalTime()
		{
		}

		[Token(Token = "0x600019D")]
		[Address(RVA = "0xE68FCC", Offset = "0xE68FCC", VA = "0xE68FCC")]
		public void OnRemoteTimeReset()
		{
		}

		[Token(Token = "0x600019E")]
		[Address(RVA = "0xE690C4", Offset = "0xE690C4", VA = "0xE690C4", Slot = "42")]
		public override void OnPlayerEnteredRoom(Player newPlayer)
		{
		}

		[Token(Token = "0x600019F")]
		[Address(RVA = "0xE693F8", Offset = "0xE693F8", VA = "0xE693F8")]
		private void sendState()
		{
		}

		[Token(Token = "0x60001A0")]
		[Address(RVA = "0xE68100", Offset = "0xE68100", VA = "0xE68100")]
		private void applyInterpolationOrExtrapolation()
		{
		}

		[Token(Token = "0x60001A1")]
		[Address(RVA = "0xE69CE8", Offset = "0xE69CE8", VA = "0xE69CE8")]
		private void interpolate(float interpolationTime)
		{
		}

		[Token(Token = "0x60001A2")]
		[Address(RVA = "0xE69F60", Offset = "0xE69F60", VA = "0xE69F60")]
		private bool extrapolate(float interpolationTime)
		{
			return default(bool);
		}

		[Token(Token = "0x60001A3")]
		[Address(RVA = "0xE6A9DC", Offset = "0xE6A9DC", VA = "0xE6A9DC")]
		private void shouldTeleport(StatePUN2 start, ref StatePUN2 end, float interpolationTime, ref float t)
		{
		}

		[Token(Token = "0x60001A4")]
		[Address(RVA = "0xE69314", Offset = "0xE69314", VA = "0xE69314")]
		public Vector3 getPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60001A5")]
		[Address(RVA = "0xE69370", Offset = "0xE69370", VA = "0xE69370")]
		public Quaternion getRotation()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60001A6")]
		[Address(RVA = "0xE693CC", Offset = "0xE693CC", VA = "0xE693CC")]
		public Vector3 getScale()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60001A7")]
		[Address(RVA = "0xE6A608", Offset = "0xE6A608", VA = "0xE6A608")]
		public void setPosition(Vector3 position, bool isTeleporting)
		{
		}

		[Token(Token = "0x60001A8")]
		[Address(RVA = "0xE6A7A0", Offset = "0xE6A7A0", VA = "0xE6A7A0")]
		public void setRotation(Quaternion rotation, bool isTeleporting)
		{
		}

		[Token(Token = "0x60001A9")]
		[Address(RVA = "0xE6A988", Offset = "0xE6A988", VA = "0xE6A988")]
		public void setScale(Vector3 scale, bool isTeleporting)
		{
		}

		[Token(Token = "0x60001AA")]
		[Address(RVA = "0xE6AB24", Offset = "0xE6AB24", VA = "0xE6AB24")]
		private void resetFlags()
		{
		}

		[Token(Token = "0x60001AB")]
		[Address(RVA = "0xE69798", Offset = "0xE69798", VA = "0xE69798")]
		private bool almostEqual(Vector3 v1, Vector3 v2, float precision)
		{
			return default(bool);
		}

		[Token(Token = "0x60001AC")]
		[Address(RVA = "0xE6AB30", Offset = "0xE6AB30", VA = "0xE6AB30")]
		public void addState(StatePUN2 state)
		{
		}

		[Token(Token = "0x60001AD")]
		[Address(RVA = "0xE69F54", Offset = "0xE69F54", VA = "0xE69F54")]
		public void stopLerping()
		{
		}

		[Token(Token = "0x60001AE")]
		[Address(RVA = "0xE6ACCC", Offset = "0xE6ACCC", VA = "0xE6ACCC")]
		public void clearBuffer()
		{
		}

		[Token(Token = "0x60001AF")]
		[Address(RVA = "0xE6ADD8", Offset = "0xE6ADD8", VA = "0xE6ADD8")]
		[PunRPC]
		public void RpcClearBuffer()
		{
		}

		[Token(Token = "0x60001B0")]
		[Address(RVA = "0xE67938", Offset = "0xE67938", VA = "0xE67938")]
		public void teleport()
		{
		}

		[Token(Token = "0x60001B1")]
		[Address(RVA = "0xE68C3C", Offset = "0xE68C3C", VA = "0xE68C3C")]
		public void teleportOwnedObjectFromOwner()
		{
		}

		[Token(Token = "0x60001B2")]
		[Address(RVA = "0xE6ADEC", Offset = "0xE6ADEC", VA = "0xE6ADEC")]
		public void teleportAnyObject(Vector3 newPosition, Quaternion newRotation, Vector3 newScale)
		{
		}

		[Token(Token = "0x60001B3")]
		[Address(RVA = "0xE6B060", Offset = "0xE6B060", VA = "0xE6B060")]
		[PunRPC]
		public void RpcNonServerOwnedTeleportFromServer(Vector3 newPosition, Vector3 newRotation, Vector3 newScale)
		{
		}

		[Token(Token = "0x60001B4")]
		[Address(RVA = "0xE6B148", Offset = "0xE6B148", VA = "0xE6B148")]
		[PunRPC]
		public void RpcTeleport(Vector3 position, Vector3 rotation, Vector3 scale, float tempOwnerTime)
		{
		}

		[Token(Token = "0x60001B5")]
		[Address(RVA = "0xE6B234", Offset = "0xE6B234", VA = "0xE6B234")]
		private void addTeleportState(StatePUN2 teleportState)
		{
		}

		[Token(Token = "0x60001B6")]
		[Address(RVA = "0xE6793C", Offset = "0xE6793C", VA = "0xE6793C")]
		public void forceStateSendNextOnPhotonSerializeView()
		{
		}

		[Token(Token = "0x60001B7")]
		[Address(RVA = "0xE697C8", Offset = "0xE697C8", VA = "0xE697C8")]
		public bool shouldSendPosition()
		{
			return default(bool);
		}

		[Token(Token = "0x60001B8")]
		[Address(RVA = "0xE69884", Offset = "0xE69884", VA = "0xE69884")]
		public bool shouldSendRotation()
		{
			return default(bool);
		}

		[Token(Token = "0x60001B9")]
		[Address(RVA = "0xE69988", Offset = "0xE69988", VA = "0xE69988")]
		public bool shouldSendScale()
		{
			return default(bool);
		}

		[Token(Token = "0x60001BA")]
		[Address(RVA = "0xE69A44", Offset = "0xE69A44", VA = "0xE69A44")]
		public bool shouldSendVelocity()
		{
			return default(bool);
		}

		[Token(Token = "0x60001BB")]
		[Address(RVA = "0xE69BAC", Offset = "0xE69BAC", VA = "0xE69BAC")]
		public bool shouldSendAngularVelocity()
		{
			return default(bool);
		}

		[Token(Token = "0x60001CB")]
		[Address(RVA = "0xE6B600", Offset = "0xE6B600", VA = "0xE6B600", Slot = "54")]
		public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x60001CE")]
		[Address(RVA = "0xE67F8C", Offset = "0xE67F8C", VA = "0xE67F8C")]
		private void adjustOwnerTime()
		{
		}

		[Token(Token = "0x60001CF")]
		[Address(RVA = "0xE6BA8C", Offset = "0xE6BA8C", VA = "0xE6BA8C")]
		public SmoothSyncPUN2()
		{
		}
	}
	[Token(Token = "0x2000057")]
	public class StatePUN2
	{
		[Token(Token = "0x4000266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float ownerTimestamp;

		[Token(Token = "0x4000267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector3 position;

		[Token(Token = "0x4000268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Quaternion rotation;

		[Token(Token = "0x4000269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 scale;

		[Token(Token = "0x400026A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 velocity;

		[Token(Token = "0x400026B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 angularVelocity;

		[Token(Token = "0x400026C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public bool teleport;

		[Token(Token = "0x400026D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		public bool atPositionalRest;

		[Token(Token = "0x400026E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
		public bool atRotationalRest;

		[Token(Token = "0x400026F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float receivedOnServerTimestamp;

		[Token(Token = "0x4000270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Vector3 reusableRotationVector;

		[Token(Token = "0x4000271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool serverShouldRelayPosition;

		[Token(Token = "0x4000272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		public bool serverShouldRelayRotation;

		[Token(Token = "0x4000273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
		public bool serverShouldRelayScale;

		[Token(Token = "0x4000274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6B")]
		public bool serverShouldRelayVelocity;

		[Token(Token = "0x4000275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public bool serverShouldRelayAngularVelocity;

		[Token(Token = "0x4000276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
		public bool serverShouldRelayTeleport;

		[Token(Token = "0x4000277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float receivedTimestamp;

		[Token(Token = "0x4000278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public int localTimeResetIndicator;

		[Token(Token = "0x60001D4")]
		[Address(RVA = "0xE0824C", Offset = "0xE0824C", VA = "0xE0824C")]
		public StatePUN2()
		{
		}

		[Token(Token = "0x60001D5")]
		[Address(RVA = "0xE08254", Offset = "0xE08254", VA = "0xE08254")]
		public StatePUN2 copyFromState(StatePUN2 state)
		{
			return null;
		}

		[Token(Token = "0x60001D6")]
		[Address(RVA = "0xE082C8", Offset = "0xE082C8", VA = "0xE082C8")]
		public static StatePUN2 Lerp(StatePUN2 targetTempState, StatePUN2 start, StatePUN2 end, float t)
		{
			return null;
		}

		[Token(Token = "0x60001D7")]
		[Address(RVA = "0xE08454", Offset = "0xE08454", VA = "0xE08454")]
		public void resetTheVariables()
		{
		}

		[Token(Token = "0x60001D8")]
		[Address(RVA = "0xE084D0", Offset = "0xE084D0", VA = "0xE084D0")]
		public void copyFromSmoothSync(SmoothSyncPUN2 smoothSyncScript)
		{
		}
	}
	[Token(Token = "0x2000058")]
	public class NetworkStatePUN2
	{
		[Token(Token = "0x4000279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SmoothSyncPUN2 smoothSync;

		[Token(Token = "0x400027A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StatePUN2 state;

		[Token(Token = "0x400027B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private byte positionMask;

		[Token(Token = "0x400027C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private byte rotationMask;

		[Token(Token = "0x400027D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		private byte scaleMask;

		[Token(Token = "0x400027E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
		private byte velocityMask;

		[Token(Token = "0x400027F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private byte angularVelocityMask;

		[Token(Token = "0x4000280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		private byte atPositionalRestMask;

		[Token(Token = "0x4000281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
		private byte atRotationalRestMask;

		[Token(Token = "0x60001D9")]
		[Address(RVA = "0xC21CE8", Offset = "0xC21CE8", VA = "0xC21CE8")]
		public NetworkStatePUN2()
		{
		}

		[Token(Token = "0x60001DA")]
		[Address(RVA = "0xC21D68", Offset = "0xC21D68", VA = "0xC21D68")]
		public NetworkStatePUN2(SmoothSyncPUN2 smoothSyncScript)
		{
		}

		[Token(Token = "0x60001DB")]
		[Address(RVA = "0xC21E10", Offset = "0xC21E10", VA = "0xC21E10")]
		public void copyFromSmoothSync(SmoothSyncPUN2 smoothSyncScript)
		{
		}

		[Token(Token = "0x60001DC")]
		[Address(RVA = "0xC21E34", Offset = "0xC21E34", VA = "0xC21E34")]
		public void Serialize(BinaryWriter writer)
		{
		}

		[Token(Token = "0x60001DD")]
		[Address(RVA = "0xC229F0", Offset = "0xC229F0", VA = "0xC229F0")]
		public void Deserialize(BinaryReader reader, SmoothSyncPUN2 smoothSync)
		{
		}

		[Token(Token = "0x60001DE")]
		[Address(RVA = "0xC22978", Offset = "0xC22978", VA = "0xC22978")]
		private byte encodeSyncInformation(bool sendPosition, bool sendRotation, bool sendScale, bool sendVelocity, bool sendAngularVelocity, bool atPositionalRest, bool atRotationalRest)
		{
			return default(byte);
		}

		[Token(Token = "0x60001DF")]
		[Address(RVA = "0xC238D8", Offset = "0xC238D8", VA = "0xC238D8")]
		private bool shouldSyncPosition(byte syncInformation)
		{
			return default(bool);
		}

		[Token(Token = "0x60001E0")]
		[Address(RVA = "0xC238E8", Offset = "0xC238E8", VA = "0xC238E8")]
		private bool shouldSyncRotation(byte syncInformation)
		{
			return default(bool);
		}

		[Token(Token = "0x60001E1")]
		[Address(RVA = "0xC238F8", Offset = "0xC238F8", VA = "0xC238F8")]
		private bool shouldSyncScale(byte syncInformation)
		{
			return default(bool);
		}

		[Token(Token = "0x60001E2")]
		[Address(RVA = "0xC23908", Offset = "0xC23908", VA = "0xC23908")]
		private bool shouldSyncVelocity(byte syncInformation)
		{
			return default(bool);
		}

		[Token(Token = "0x60001E3")]
		[Address(RVA = "0xC23918", Offset = "0xC23918", VA = "0xC23918")]
		private bool shouldSyncAngularVelocity(byte syncInformation)
		{
			return default(bool);
		}

		[Token(Token = "0x60001E4")]
		[Address(RVA = "0xC23928", Offset = "0xC23928", VA = "0xC23928")]
		private bool shouldBeAtPositionalRest(byte syncInformation)
		{
			return default(bool);
		}

		[Token(Token = "0x60001E5")]
		[Address(RVA = "0xC23938", Offset = "0xC23938", VA = "0xC23938")]
		private bool shouldBeAtRotationalRest(byte syncInformation)
		{
			return default(bool);
		}
	}
}
namespace System
{
	[Serializable]
	[Token(Token = "0x2000059")]
	public struct Half : IComparable, IFormattable, IConvertible, IComparable<Half>, IEquatable<Half>
	{
		[Token(Token = "0x4000282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x8CE640", Offset = "0x8CE640")]
		public ushort internalValue;

		[Token(Token = "0x4000283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Half Epsilon;

		[Token(Token = "0x4000284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public static readonly Half MaxValue;

		[Token(Token = "0x4000285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static readonly Half MinValue;

		[Token(Token = "0x4000286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
		public static readonly Half NaN;

		[Token(Token = "0x4000287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly Half NegativeInfinity;

		[Token(Token = "0x4000288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
		public static readonly Half PositiveInfinity;

		[Token(Token = "0x60001E6")]
		[Address(RVA = "0x15648D4", Offset = "0x15648D4", VA = "0x15648D4")]
		public Half(float value)
		{
		}

		[Token(Token = "0x60001E7")]
		[Address(RVA = "0x1564A50", Offset = "0x1564A50", VA = "0x1564A50")]
		public Half(int value)
		{
		}

		[Token(Token = "0x60001E8")]
		[Address(RVA = "0x1564A58", Offset = "0x1564A58", VA = "0x1564A58")]
		public Half(long value)
		{
		}

		[Token(Token = "0x60001E9")]
		[Address(RVA = "0x1564A60", Offset = "0x1564A60", VA = "0x1564A60")]
		public Half(double value)
		{
		}

		[Token(Token = "0x60001EA")]
		[Address(RVA = "0x1564A68", Offset = "0x1564A68", VA = "0x1564A68")]
		public Half(decimal value)
		{
		}

		[Token(Token = "0x60001EB")]
		[Address(RVA = "0x1564AE8", Offset = "0x1564AE8", VA = "0x1564AE8")]
		public Half(uint value)
		{
		}

		[Token(Token = "0x60001EC")]
		[Address(RVA = "0x1564AF4", Offset = "0x1564AF4", VA = "0x1564AF4")]
		public Half(ulong value)
		{
		}

		[Token(Token = "0x60001ED")]
		[Address(RVA = "0x1564B00", Offset = "0x1564B00", VA = "0x1564B00")]
		public static Half Negate(Half half)
		{
			return default(Half);
		}

		[Token(Token = "0x60001EE")]
		[Address(RVA = "0x1564BD0", Offset = "0x1564BD0", VA = "0x1564BD0")]
		public static Half Add(Half half1, Half half2)
		{
			return default(Half);
		}

		[Token(Token = "0x60001EF")]
		[Address(RVA = "0x1564CE8", Offset = "0x1564CE8", VA = "0x1564CE8")]
		public static Half Subtract(Half half1, Half half2)
		{
			return default(Half);
		}

		[Token(Token = "0x60001F0")]
		[Address(RVA = "0x1564E00", Offset = "0x1564E00", VA = "0x1564E00")]
		public static Half Multiply(Half half1, Half half2)
		{
			return default(Half);
		}

		[Token(Token = "0x60001F1")]
		[Address(RVA = "0x1564F18", Offset = "0x1564F18", VA = "0x1564F18")]
		public static Half Divide(Half half1, Half half2)
		{
			return default(Half);
		}

		[Token(Token = "0x60001F2")]
		[Address(RVA = "0x1565030", Offset = "0x1565030", VA = "0x1565030")]
		public static Half operator +(Half half)
		{
			return default(Half);
		}

		[Token(Token = "0x60001F3")]
		[Address(RVA = "0x1564B68", Offset = "0x1564B68", VA = "0x1564B68")]
		public static Half operator -(Half half)
		{
			return default(Half);
		}

		[Token(Token = "0x60001F4")]
		[Address(RVA = "0x156509C", Offset = "0x156509C", VA = "0x156509C")]
		public static Half operator ++(Half half)
		{
			return default(Half);
		}

		[Token(Token = "0x60001F5")]
		[Address(RVA = "0x15651A8", Offset = "0x15651A8", VA = "0x15651A8")]
		public static Half operator --(Half half)
		{
			return default(Half);
		}

		[Token(Token = "0x60001F6")]
		[Address(RVA = "0x1564C48", Offset = "0x1564C48", VA = "0x1564C48")]
		public static Half operator +(Half half1, Half half2)
		{
			return default(Half);
		}

		[Token(Token = "0x60001F7")]
		[Address(RVA = "0x1564D60", Offset = "0x1564D60", VA = "0x1564D60")]
		public static Half operator -(Half half1, Half half2)
		{
			return default(Half);
		}

		[Token(Token = "0x60001F8")]
		[Address(RVA = "0x1564E78", Offset = "0x1564E78", VA = "0x1564E78")]
		public static Half operator *(Half half1, Half half2)
		{
			return default(Half);
		}

		[Token(Token = "0x60001F9")]
		[Address(RVA = "0x1564F90", Offset = "0x1564F90", VA = "0x1564F90")]
		public static Half operator /(Half half1, Half half2)
		{
			return default(Half);
		}

		[Token(Token = "0x60001FA")]
		[Address(RVA = "0x156522C", Offset = "0x156522C", VA = "0x156522C")]
		public static bool operator ==(Half half1, Half half2)
		{
			return default(bool);
		}

		[Token(Token = "0x60001FB")]
		[Address(RVA = "0x156531C", Offset = "0x156531C", VA = "0x156531C")]
		public static bool operator !=(Half half1, Half half2)
		{
			return default(bool);
		}

		[Token(Token = "0x60001FC")]
		[Address(RVA = "0x156532C", Offset = "0x156532C", VA = "0x156532C")]
		public static bool operator <(Half half1, Half half2)
		{
			return default(bool);
		}

		[Token(Token = "0x60001FD")]
		[Address(RVA = "0x15653B8", Offset = "0x15653B8", VA = "0x15653B8")]
		public static bool operator >(Half half1, Half half2)
		{
			return default(bool);
		}

		[Token(Token = "0x60001FE")]
		[Address(RVA = "0x1565444", Offset = "0x1565444", VA = "0x1565444")]
		public static bool operator <=(Half half1, Half half2)
		{
			return default(bool);
		}

		[Token(Token = "0x60001FF")]
		[Address(RVA = "0x15654F8", Offset = "0x15654F8", VA = "0x15654F8")]
		public static bool operator >=(Half half1, Half half2)
		{
			return default(bool);
		}

		[Token(Token = "0x6000200")]
		[Address(RVA = "0x15655AC", Offset = "0x15655AC", VA = "0x15655AC")]
		public static implicit operator Half(byte value)
		{
			return default(Half);
		}

		[Token(Token = "0x6000201")]
		[Address(RVA = "0x15655DC", Offset = "0x15655DC", VA = "0x15655DC")]
		public static implicit operator Half(short value)
		{
			return default(Half);
		}

		[Token(Token = "0x6000202")]
		[Address(RVA = "0x156560C", Offset = "0x156560C", VA = "0x156560C")]
		public static implicit operator Half(char value)
		{
			return default(Half);
		}

		[Token(Token = "0x6000203")]
		[Address(RVA = "0x156563C", Offset = "0x156563C", VA = "0x156563C")]
		public static implicit operator Half(int value)
		{
			return default(Half);
		}

		[Token(Token = "0x6000204")]
		[Address(RVA = "0x1565668", Offset = "0x1565668", VA = "0x1565668")]
		public static implicit operator Half(long value)
		{
			return default(Half);
		}

		[Token(Token = "0x6000205")]
		[Address(RVA = "0x1565180", Offset = "0x1565180", VA = "0x1565180")]
		public static explicit operator Half(float value)
		{
			return default(Half);
		}

		[Token(Token = "0x6000206")]
		[Address(RVA = "0x1565694", Offset = "0x1565694", VA = "0x1565694")]
		public static explicit operator Half(double value)
		{
			return default(Half);
		}

		[Token(Token = "0x6000207")]
		[Address(RVA = "0x15656C0", Offset = "0x15656C0", VA = "0x15656C0")]
		public static explicit operator Half(decimal value)
		{
			return default(Half);
		}

		[Token(Token = "0x6000208")]
		[Address(RVA = "0x1565748", Offset = "0x1565748", VA = "0x1565748")]
		public static explicit operator byte(Half value)
		{
			return default(byte);
		}

		[Token(Token = "0x6000209")]
		[Address(RVA = "0x15657B8", Offset = "0x15657B8", VA = "0x15657B8")]
		public static explicit operator char(Half value)
		{
			return default(char);
		}

		[Token(Token = "0x600020A")]
		[Address(RVA = "0x1565828", Offset = "0x1565828", VA = "0x1565828")]
		public static explicit operator short(Half value)
		{
			return default(short);
		}

		[Token(Token = "0x600020B")]
		[Address(RVA = "0x15658A8", Offset = "0x15658A8", VA = "0x15658A8")]
		public static explicit operator int(Half value)
		{
			return default(int);
		}

		[Token(Token = "0x600020C")]
		[Address(RVA = "0x1565928", Offset = "0x1565928", VA = "0x1565928")]
		public static explicit operator long(Half value)
		{
			return default(long);
		}

		[Token(Token = "0x600020D")]
		[Address(RVA = "0x1565120", Offset = "0x1565120", VA = "0x1565120")]
		public static implicit operator float(Half value)
		{
			return default(float);
		}

		[Token(Token = "0x600020E")]
		[Address(RVA = "0x1565A80", Offset = "0x1565A80", VA = "0x1565A80")]
		public static implicit operator double(Half value)
		{
			return default(double);
		}

		[Token(Token = "0x600020F")]
		[Address(RVA = "0x1565AE8", Offset = "0x1565AE8", VA = "0x1565AE8")]
		public static explicit operator decimal(Half value)
		{
			return default(decimal);
		}

		[Token(Token = "0x6000210")]
		[Address(RVA = "0x1565B8C", Offset = "0x1565B8C", VA = "0x1565B8C")]
		public static implicit operator Half(sbyte value)
		{
			return default(Half);
		}

		[Token(Token = "0x6000211")]
		[Address(RVA = "0x1565BBC", Offset = "0x1565BBC", VA = "0x1565BBC")]
		public static implicit operator Half(ushort value)
		{
			return default(Half);
		}

		[Token(Token = "0x6000212")]
		[Address(RVA = "0x1565BEC", Offset = "0x1565BEC", VA = "0x1565BEC")]
		public static implicit operator Half(uint value)
		{
			return default(Half);
		}

		[Token(Token = "0x6000213")]
		[Address(RVA = "0x1565C1C", Offset = "0x1565C1C", VA = "0x1565C1C")]
		public static implicit operator Half(ulong value)
		{
			return default(Half);
		}

		[Token(Token = "0x6000214")]
		[Address(RVA = "0x1565C4C", Offset = "0x1565C4C", VA = "0x1565C4C")]
		public static explicit operator sbyte(Half value)
		{
			return default(sbyte);
		}

		[Token(Token = "0x6000215")]
		[Address(RVA = "0x1565CCC", Offset = "0x1565CCC", VA = "0x1565CCC")]
		public static explicit operator ushort(Half value)
		{
			return default(ushort);
		}

		[Token(Token = "0x6000216")]
		[Address(RVA = "0x1565D3C", Offset = "0x1565D3C", VA = "0x1565D3C")]
		public static explicit operator uint(Half value)
		{
			return default(uint);
		}

		[Token(Token = "0x6000217")]
		[Address(RVA = "0x1565DB0", Offset = "0x1565DB0", VA = "0x1565DB0")]
		public static explicit operator ulong(Half value)
		{
			return default(ulong);
		}

		[Token(Token = "0x6000218")]
		[Address(RVA = "0x1565E24", Offset = "0x1565E24", VA = "0x1565E24", Slot = "23")]
		public int CompareTo(Half other)
		{
			return default(int);
		}

		[Token(Token = "0x6000219")]
		[Address(RVA = "0x1565F64", Offset = "0x1565F64", VA = "0x1565F64", Slot = "4")]
		public int CompareTo(object obj)
		{
			return default(int);
		}

		[Token(Token = "0x600021A")]
		[Address(RVA = "0x1566034", Offset = "0x1566034", VA = "0x1566034", Slot = "24")]
		public bool Equals(Half other)
		{
			return default(bool);
		}

		[Token(Token = "0x600021B")]
		[Address(RVA = "0x1566114", Offset = "0x1566114", VA = "0x1566114", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600021C")]
		[Address(RVA = "0x1566210", Offset = "0x1566210", VA = "0x1566210", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x600021D")]
		[Address(RVA = "0x1566218", Offset = "0x1566218", VA = "0x1566218")]
		public TypeCode GetTypeCode()
		{
			return default(TypeCode);
		}

		[Token(Token = "0x600021E")]
		[Address(RVA = "0x1566220", Offset = "0x1566220", VA = "0x1566220")]
		public static byte[] GetBytes(Half value)
		{
			return null;
		}

		[Token(Token = "0x600021F")]
		[Address(RVA = "0x1566284", Offset = "0x1566284", VA = "0x1566284")]
		public static ushort GetBits(Half value)
		{
			return default(ushort);
		}

		[Token(Token = "0x6000220")]
		[Address(RVA = "0x1566288", Offset = "0x1566288", VA = "0x1566288")]
		public static Half ToHalf(byte[] value, int startIndex)
		{
			return default(Half);
		}

		[Token(Token = "0x6000221")]
		[Address(RVA = "0x1566338", Offset = "0x1566338", VA = "0x1566338")]
		public static Half ToHalf(ushort bits)
		{
			return default(Half);
		}

		[Token(Token = "0x6000222")]
		[Address(RVA = "0x1566340", Offset = "0x1566340", VA = "0x1566340")]
		public static int Sign(Half value)
		{
			return default(int);
		}

		[Token(Token = "0x6000223")]
		[Address(RVA = "0x1566498", Offset = "0x1566498", VA = "0x1566498")]
		public static Half Abs(Half value)
		{
			return default(Half);
		}

		[Token(Token = "0x6000224")]
		[Address(RVA = "0x1566560", Offset = "0x1566560", VA = "0x1566560")]
		public static Half Max(Half value1, Half value2)
		{
			return default(Half);
		}

		[Token(Token = "0x6000225")]
		[Address(RVA = "0x15665E0", Offset = "0x15665E0", VA = "0x15665E0")]
		public static Half Min(Half value1, Half value2)
		{
			return default(Half);
		}

		[Token(Token = "0x6000226")]
		[Address(RVA = "0x15652B0", Offset = "0x15652B0", VA = "0x15652B0")]
		public static bool IsNaN(Half half)
		{
			return default(bool);
		}

		[Token(Token = "0x6000227")]
		[Address(RVA = "0x1566674", Offset = "0x1566674", VA = "0x1566674")]
		public static bool IsInfinity(Half half)
		{
			return default(bool);
		}

		[Token(Token = "0x6000228")]
		[Address(RVA = "0x15666F4", Offset = "0x15666F4", VA = "0x15666F4")]
		public static bool IsNegativeInfinity(Half half)
		{
			return default(bool);
		}

		[Token(Token = "0x6000229")]
		[Address(RVA = "0x1566774", Offset = "0x1566774", VA = "0x1566774")]
		public static bool IsPositiveInfinity(Half half)
		{
			return default(bool);
		}

		[Token(Token = "0x600022A")]
		[Address(RVA = "0x15667F4", Offset = "0x15667F4", VA = "0x15667F4")]
		public static Half Parse(string value)
		{
			return default(Half);
		}

		[Token(Token = "0x600022B")]
		[Address(RVA = "0x15668B4", Offset = "0x15668B4", VA = "0x15668B4")]
		public static Half Parse(string value, IFormatProvider provider)
		{
			return default(Half);
		}

		[Token(Token = "0x600022C")]
		[Address(RVA = "0x1566954", Offset = "0x1566954", VA = "0x1566954")]
		public static Half Parse(string value, NumberStyles style)
		{
			return default(Half);
		}

		[Token(Token = "0x600022D")]
		[Address(RVA = "0x1566A2C", Offset = "0x1566A2C", VA = "0x1566A2C")]
		public static Half Parse(string value, NumberStyles style, IFormatProvider provider)
		{
			return default(Half);
		}

		[Token(Token = "0x600022E")]
		[Address(RVA = "0x1566ACC", Offset = "0x1566ACC", VA = "0x1566ACC")]
		public static bool TryParse(string value, out Half result)
		{
			return default(bool);
		}

		[Token(Token = "0x600022F")]
		[Address(RVA = "0x1566B88", Offset = "0x1566B88", VA = "0x1566B88")]
		public static bool TryParse(string value, NumberStyles style, IFormatProvider provider, out Half result)
		{
			return default(bool);
		}

		[Token(Token = "0x6000230")]
		[Address(RVA = "0x1566C5C", Offset = "0x1566C5C", VA = "0x1566C5C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000231")]
		[Address(RVA = "0x1566D18", Offset = "0x1566D18", VA = "0x1566D18")]
		public string ToString(IFormatProvider formatProvider)
		{
			return null;
		}

		[Token(Token = "0x6000232")]
		[Address(RVA = "0x1566DA4", Offset = "0x1566DA4", VA = "0x1566DA4")]
		public string ToString(string format)
		{
			return null;
		}

		[Token(Token = "0x6000233")]
		[Address(RVA = "0x1566E68", Offset = "0x1566E68", VA = "0x1566E68", Slot = "5")]
		public string ToString(string format, IFormatProvider formatProvider)
		{
			return null;
		}

		[Token(Token = "0x6000234")]
		[Address(RVA = "0x1566F04", Offset = "0x1566F04", VA = "0x1566F04", Slot = "17")]
		private float System.IConvertible.ToSingle(IFormatProvider provider)
		{
			return default(float);
		}

		[Token(Token = "0x6000235")]
		[Address(RVA = "0x1566F68", Offset = "0x1566F68", VA = "0x1566F68", Slot = "6")]
		private TypeCode System.IConvertible.GetTypeCode()
		{
			return default(TypeCode);
		}

		[Token(Token = "0x6000236")]
		[Address(RVA = "0x1566F70", Offset = "0x1566F70", VA = "0x1566F70", Slot = "7")]
		private bool System.IConvertible.ToBoolean(IFormatProvider provider)
		{
			return default(bool);
		}

		[Token(Token = "0x6000237")]
		[Address(RVA = "0x1567018", Offset = "0x1567018", VA = "0x1567018", Slot = "10")]
		private byte System.IConvertible.ToByte(IFormatProvider provider)
		{
			return default(byte);
		}

		[Token(Token = "0x6000238")]
		[Address(RVA = "0x15670C0", Offset = "0x15670C0", VA = "0x15670C0", Slot = "8")]
		private char System.IConvertible.ToChar(IFormatProvider provider)
		{
			return default(char);
		}

		[Token(Token = "0x6000239")]
		[Address(RVA = "0x1567194", Offset = "0x1567194", VA = "0x1567194", Slot = "20")]
		private DateTime System.IConvertible.ToDateTime(IFormatProvider provider)
		{
			return default(DateTime);
		}

		[Token(Token = "0x600023A")]
		[Address(RVA = "0x1567268", Offset = "0x1567268", VA = "0x1567268", Slot = "19")]
		private decimal System.IConvertible.ToDecimal(IFormatProvider provider)
		{
			return default(decimal);
		}

		[Token(Token = "0x600023B")]
		[Address(RVA = "0x1567310", Offset = "0x1567310", VA = "0x1567310", Slot = "18")]
		private double System.IConvertible.ToDouble(IFormatProvider provider)
		{
			return default(double);
		}

		[Token(Token = "0x600023C")]
		[Address(RVA = "0x15673B8", Offset = "0x15673B8", VA = "0x15673B8", Slot = "11")]
		private short System.IConvertible.ToInt16(IFormatProvider provider)
		{
			return default(short);
		}

		[Token(Token = "0x600023D")]
		[Address(RVA = "0x1567460", Offset = "0x1567460", VA = "0x1567460", Slot = "13")]
		private int System.IConvertible.ToInt32(IFormatProvider provider)
		{
			return default(int);
		}

		[Token(Token = "0x600023E")]
		[Address(RVA = "0x1567508", Offset = "0x1567508", VA = "0x1567508", Slot = "15")]
		private long System.IConvertible.ToInt64(IFormatProvider provider)
		{
			return default(long);
		}

		[Token(Token = "0x600023F")]
		[Address(RVA = "0x15675B0", Offset = "0x15675B0", VA = "0x15675B0", Slot = "9")]
		private sbyte System.IConvertible.ToSByte(IFormatProvider provider)
		{
			return default(sbyte);
		}

		[Token(Token = "0x6000240")]
		[Address(RVA = "0x1567658", Offset = "0x1567658", VA = "0x1567658", Slot = "21")]
		private string System.IConvertible.ToString(IFormatProvider provider)
		{
			return null;
		}

		[Token(Token = "0x6000241")]
		[Address(RVA = "0x1567740", Offset = "0x1567740", VA = "0x1567740", Slot = "22")]
		private object System.IConvertible.ToType(Type conversionType, IFormatProvider provider)
		{
			return null;
		}

		[Token(Token = "0x6000242")]
		[Address(RVA = "0x156781C", Offset = "0x156781C", VA = "0x156781C", Slot = "12")]
		private ushort System.IConvertible.ToUInt16(IFormatProvider provider)
		{
			return default(ushort);
		}

		[Token(Token = "0x6000243")]
		[Address(RVA = "0x15678C4", Offset = "0x15678C4", VA = "0x15678C4", Slot = "14")]
		private uint System.IConvertible.ToUInt32(IFormatProvider provider)
		{
			return default(uint);
		}

		[Token(Token = "0x6000244")]
		[Address(RVA = "0x156796C", Offset = "0x156796C", VA = "0x156796C", Slot = "16")]
		private ulong System.IConvertible.ToUInt64(IFormatProvider provider)
		{
			return default(ulong);
		}
	}
	[Token(Token = "0x200005A")]
	public static class HalfHelper
	{
		[StructLayout(2)]
		[Token(Token = "0x200005B")]
		private struct UIntFloat
		{
			[Token(Token = "0x400028F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public uint UIntValue;

			[Token(Token = "0x4000290")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float FloatValue;
		}

		[Token(Token = "0x4000289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static uint[] mantissaTable;

		[Token(Token = "0x400028A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static uint[] exponentTable;

		[Token(Token = "0x400028B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static ushort[] offsetTable;

		[Token(Token = "0x400028C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static ushort[] baseTable;

		[Token(Token = "0x400028D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static sbyte[] shiftTable;

		[Token(Token = "0x400028E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static UIntFloat floatToIntConverter;

		[Token(Token = "0x6000246")]
		[Address(RVA = "0x1567AB0", Offset = "0x1567AB0", VA = "0x1567AB0")]
		private static uint FloatToUInt(float v)
		{
			return default(uint);
		}

		[Token(Token = "0x6000247")]
		[Address(RVA = "0x1567B28", Offset = "0x1567B28", VA = "0x1567B28")]
		private static float UIntToFloat(uint v)
		{
			return default(float);
		}

		[Token(Token = "0x6000248")]
		[Address(RVA = "0x1567B98", Offset = "0x1567B98", VA = "0x1567B98")]
		private static uint ConvertMantissa(int i)
		{
			return default(uint);
		}

		[Token(Token = "0x6000249")]
		[Address(RVA = "0x1567BC8", Offset = "0x1567BC8", VA = "0x1567BC8")]
		private static uint[] GenerateMantissaTable()
		{
			return null;
		}

		[Token(Token = "0x600024A")]
		[Address(RVA = "0x1567CE8", Offset = "0x1567CE8", VA = "0x1567CE8")]
		private static uint[] GenerateExponentTable()
		{
			return null;
		}

		[Token(Token = "0x600024B")]
		[Address(RVA = "0x1567DDC", Offset = "0x1567DDC", VA = "0x1567DDC")]
		private static ushort[] GenerateOffsetTable()
		{
			return null;
		}

		[Token(Token = "0x600024C")]
		[Address(RVA = "0x1567EA4", Offset = "0x1567EA4", VA = "0x1567EA4")]
		private static ushort[] GenerateBaseTable()
		{
			return null;
		}

		[Token(Token = "0x600024D")]
		[Address(RVA = "0x1567FF0", Offset = "0x1567FF0", VA = "0x1567FF0")]
		private static sbyte[] GenerateShiftTable()
		{
			return null;
		}

		[Token(Token = "0x600024E")]
		[Address(RVA = "0x15659A8", Offset = "0x15659A8", VA = "0x15659A8")]
		public static float HalfToSingle(Half half)
		{
			return default(float);
		}

		[Token(Token = "0x600024F")]
		[Address(RVA = "0x1564948", Offset = "0x1564948", VA = "0x1564948")]
		public static Half SingleToHalf(float single)
		{
			return default(Half);
		}

		[Token(Token = "0x6000250")]
		[Address(RVA = "0x1568124", Offset = "0x1568124", VA = "0x1568124")]
		public static float Decompress(ushort compressedFloat)
		{
			return default(float);
		}

		[Token(Token = "0x6000251")]
		[Address(RVA = "0x15681FC", Offset = "0x15681FC", VA = "0x15681FC")]
		public static ushort Compress(float uncompressedFloat)
		{
			return default(ushort);
		}

		[Token(Token = "0x6000252")]
		[Address(RVA = "0x1565038", Offset = "0x1565038", VA = "0x1565038")]
		public static Half Negate(Half half)
		{
			return default(Half);
		}

		[Token(Token = "0x6000253")]
		[Address(RVA = "0x1566500", Offset = "0x1566500", VA = "0x1566500")]
		public static Half Abs(Half half)
		{
			return default(Half);
		}

		[Token(Token = "0x6000254")]
		[Address(RVA = "0x1566660", Offset = "0x1566660", VA = "0x1566660")]
		public static bool IsNaN(Half half)
		{
			return default(bool);
		}

		[Token(Token = "0x6000255")]
		[Address(RVA = "0x15666E0", Offset = "0x15666E0", VA = "0x15666E0")]
		public static bool IsInfinity(Half half)
		{
			return default(bool);
		}

		[Token(Token = "0x6000256")]
		[Address(RVA = "0x15667E0", Offset = "0x15667E0", VA = "0x15667E0")]
		public static bool IsPositiveInfinity(Half half)
		{
			return default(bool);
		}

		[Token(Token = "0x6000257")]
		[Address(RVA = "0x1566760", Offset = "0x1566760", VA = "0x1566760")]
		public static bool IsNegativeInfinity(Half half)
		{
			return default(bool);
		}
	}
}
namespace Timers
{
	[Serializable]
	[Token(Token = "0x200005C")]
	public class Timer
	{
		[Token(Token = "0x4000291")]
		public const uint INFINITE = uint.MaxValue;

		[Token(Token = "0x4000292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private float m_Interval;

		[Token(Token = "0x4000293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private bool m_InfiniteLoops;

		[Token(Token = "0x4000294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8CE674", Offset = "0x8CE674")]
		[SerializeField]
		private uint m_LoopsCount;

		[Token(Token = "0x4000295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private UnityEvent m_Event;

		[Token(Token = "0x4000296")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UnityAction m_Delegate;

		[Token(Token = "0x4000297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool m_bIsPaused;

		[Token(Token = "0x4000298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private uint m_CurrentLoopsCount;

		[Token(Token = "0x4000299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float m_ElapsedTime;

		[Token(Token = "0x400029A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float m_CurrentCycleElapsedTime;

		[Token(Token = "0x6000259")]
		[Address(RVA = "0x11415D0", Offset = "0x11415D0", VA = "0x11415D0")]
		internal void UpdateActionFromEvent()
		{
		}

		[Token(Token = "0x600025A")]
		[Address(RVA = "0x1141660", Offset = "0x1141660", VA = "0x1141660")]
		internal void UpdateTimer()
		{
		}

		[Token(Token = "0x600025B")]
		[Address(RVA = "0x1141734", Offset = "0x1141734", VA = "0x1141734")]
		public Timer(float Interval, uint LoopsCount, UnityAction UnityAction)
		{
		}

		[Token(Token = "0x600025C")]
		[Address(RVA = "0x11417EC", Offset = "0x11417EC", VA = "0x11417EC", Slot = "1")]
		~Timer()
		{
		}

		[Token(Token = "0x600025D")]
		[Address(RVA = "0x11417F8", Offset = "0x11417F8", VA = "0x11417F8")]
		public float Interval()
		{
			return default(float);
		}

		[Token(Token = "0x600025E")]
		[Address(RVA = "0x1141800", Offset = "0x1141800", VA = "0x1141800")]
		public uint LoopsCount()
		{
			return default(uint);
		}

		[Token(Token = "0x600025F")]
		[Address(RVA = "0x1141808", Offset = "0x1141808", VA = "0x1141808")]
		public uint CurrentLoopsCount()
		{
			return default(uint);
		}

		[Token(Token = "0x6000260")]
		[Address(RVA = "0x1141810", Offset = "0x1141810", VA = "0x1141810")]
		public uint RemainingLoopsCount()
		{
			return default(uint);
		}

		[Token(Token = "0x6000261")]
		[Address(RVA = "0x1141820", Offset = "0x1141820", VA = "0x1141820")]
		public float Duration()
		{
			return default(float);
		}

		[Token(Token = "0x6000262")]
		[Address(RVA = "0x114184C", Offset = "0x114184C", VA = "0x114184C")]
		public UnityAction Delegate()
		{
			return null;
		}

		[Token(Token = "0x6000263")]
		[Address(RVA = "0x1141854", Offset = "0x1141854", VA = "0x1141854")]
		public float RemainingTime()
		{
			return default(float);
		}

		[Token(Token = "0x6000264")]
		[Address(RVA = "0x1141898", Offset = "0x1141898", VA = "0x1141898")]
		public float ElapsedTime()
		{
			return default(float);
		}

		[Token(Token = "0x6000265")]
		[Address(RVA = "0x11418A0", Offset = "0x11418A0", VA = "0x11418A0")]
		public float CurrentCycleElapsedTime()
		{
			return default(float);
		}

		[Token(Token = "0x6000266")]
		[Address(RVA = "0x11418A8", Offset = "0x11418A8", VA = "0x11418A8")]
		public float CurrentCycleRemainingTime()
		{
			return default(float);
		}

		[Token(Token = "0x6000267")]
		[Address(RVA = "0x11418C0", Offset = "0x11418C0", VA = "0x11418C0")]
		public bool ShouldClear()
		{
			return default(bool);
		}

		[Token(Token = "0x6000268")]
		[Address(RVA = "0x11418EC", Offset = "0x11418EC", VA = "0x11418EC")]
		public bool IsPaused()
		{
			return default(bool);
		}

		[Token(Token = "0x6000269")]
		[Address(RVA = "0x11418F4", Offset = "0x11418F4", VA = "0x11418F4")]
		public void SetPaused(bool bPause)
		{
		}

		[Token(Token = "0x600026A")]
		[Address(RVA = "0x1141900", Offset = "0x1141900", VA = "0x1141900")]
		public static bool operator >(Timer A, Timer B)
		{
			return default(bool);
		}

		[Token(Token = "0x600026B")]
		[Address(RVA = "0x1141924", Offset = "0x1141924", VA = "0x1141924")]
		public static bool operator <(Timer A, Timer B)
		{
			return default(bool);
		}

		[Token(Token = "0x600026C")]
		[Address(RVA = "0x1141948", Offset = "0x1141948", VA = "0x1141948")]
		public static bool operator >=(Timer A, Timer B)
		{
			return default(bool);
		}

		[Token(Token = "0x600026D")]
		[Address(RVA = "0x114196C", Offset = "0x114196C", VA = "0x114196C")]
		public static bool operator <=(Timer A, Timer B)
		{
			return default(bool);
		}

		[Token(Token = "0x600026E")]
		[Address(RVA = "0x1141990", Offset = "0x1141990", VA = "0x1141990")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DCEB4", Offset = "0x8DCEB4")]
		private void <UpdateActionFromEvent>b__10_0()
		{
		}
	}
	[Token(Token = "0x200005D")]
	[DisallowMultipleComponent]
	public class TimersManager : MonoBehaviour
	{
		[Token(Token = "0x400029B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static TimersManager m_instance;

		[Token(Token = "0x400029C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IDictionary<WeakReference, Timer> m_Timers;

		[Token(Token = "0x400029D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static bool m_bPaused;

		[Token(Token = "0x600026F")]
		[Address(RVA = "0x11430B4", Offset = "0x11430B4", VA = "0x11430B4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000270")]
		[Address(RVA = "0x11431E8", Offset = "0x11431E8", VA = "0x11431E8")]
		private static void FindAndRemove(UnityAction UnityAction)
		{
		}

		[Token(Token = "0x6000271")]
		[Address(RVA = "0x11435C4", Offset = "0x11435C4", VA = "0x11435C4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000272")]
		[Address(RVA = "0x1143A44", Offset = "0x1143A44", VA = "0x1143A44")]
		private void OnApplicationPause(bool pauseStatus)
		{
		}

		[Token(Token = "0x6000273")]
		[Address(RVA = "0x1143AB0", Offset = "0x1143AB0", VA = "0x1143AB0")]
		public static void SetTimer(object Owner, Timer timer)
		{
		}

		[Token(Token = "0x6000274")]
		[Address(RVA = "0x1143C80", Offset = "0x1143C80", VA = "0x1143C80")]
		public static void SetTimer(object Owner, float interval, uint LoopsCount, UnityAction unityAction)
		{
		}

		[Token(Token = "0x6000275")]
		[Address(RVA = "0x1143E60", Offset = "0x1143E60", VA = "0x1143E60")]
		public static void SetTimer(object Owner, float interval, UnityAction unityAction)
		{
		}

		[Token(Token = "0x6000276")]
		[Address(RVA = "0x1143FEC", Offset = "0x1143FEC", VA = "0x1143FEC")]
		public static void SetLoopableTimer(object Owner, float interval, UnityAction unityAction)
		{
		}

		[Token(Token = "0x6000277")]
		[Address(RVA = "0x1144178", Offset = "0x1144178", VA = "0x1144178")]
		public static void AddTimers(object Owner, List<Timer> Timers)
		{
		}

		[Token(Token = "0x6000278")]
		[Address(RVA = "0x1143C10", Offset = "0x1143C10", VA = "0x1143C10")]
		public static void ClearTimer(UnityAction UnityAction)
		{
		}

		[Token(Token = "0x6000279")]
		[Address(RVA = "0x11443CC", Offset = "0x11443CC", VA = "0x11443CC")]
		public static Timer GetTimerByName(UnityAction UnityAction)
		{
			return null;
		}

		[Token(Token = "0x600027A")]
		[Address(RVA = "0x1144708", Offset = "0x1144708", VA = "0x1144708")]
		public static float Interval(UnityAction unityAction)
		{
			return default(float);
		}

		[Token(Token = "0x600027B")]
		[Address(RVA = "0x114477C", Offset = "0x114477C", VA = "0x114477C")]
		public static uint LoopsCount(UnityAction unityAction)
		{
			return default(uint);
		}

		[Token(Token = "0x600027C")]
		[Address(RVA = "0x11447E8", Offset = "0x11447E8", VA = "0x11447E8")]
		public static uint CurrentLoopsCount(UnityAction unityAction)
		{
			return default(uint);
		}

		[Token(Token = "0x600027D")]
		[Address(RVA = "0x1144854", Offset = "0x1144854", VA = "0x1144854")]
		public static uint RemainingLoopsCount(UnityAction unityAction)
		{
			return default(uint);
		}

		[Token(Token = "0x600027E")]
		[Address(RVA = "0x11448C8", Offset = "0x11448C8", VA = "0x11448C8")]
		public static float RemainingTime(UnityAction unityAction)
		{
			return default(float);
		}

		[Token(Token = "0x600027F")]
		[Address(RVA = "0x1144940", Offset = "0x1144940", VA = "0x1144940")]
		public static float ElapsedTime(UnityAction unityAction)
		{
			return default(float);
		}

		[Token(Token = "0x6000280")]
		[Address(RVA = "0x11449B4", Offset = "0x11449B4", VA = "0x11449B4")]
		public static float CurrentCycleElapsedTime(UnityAction unityAction)
		{
			return default(float);
		}

		[Token(Token = "0x6000281")]
		[Address(RVA = "0x1144A28", Offset = "0x1144A28", VA = "0x1144A28")]
		public static float CurrentCycleRemainingTime(UnityAction unityAction)
		{
			return default(float);
		}

		[Token(Token = "0x6000282")]
		[Address(RVA = "0x1144AB4", Offset = "0x1144AB4", VA = "0x1144AB4")]
		public static bool IsTimerActive(UnityAction unityAction)
		{
			return default(bool);
		}

		[Token(Token = "0x6000283")]
		[Address(RVA = "0x1144B20", Offset = "0x1144B20", VA = "0x1144B20")]
		public static bool IsTimerPaused(UnityAction unityAction)
		{
			return default(bool);
		}

		[Token(Token = "0x6000284")]
		[Address(RVA = "0x1144B94", Offset = "0x1144B94", VA = "0x1144B94")]
		public static void SetPaused(UnityAction unityAction, bool bPause)
		{
		}

		[Token(Token = "0x6000285")]
		[Address(RVA = "0x1144C10", Offset = "0x1144C10", VA = "0x1144C10")]
		public static float Duration(UnityAction unityAction)
		{
			return default(float);
		}

		[Token(Token = "0x6000286")]
		[Address(RVA = "0x1144CA8", Offset = "0x1144CA8", VA = "0x1144CA8")]
		public TimersManager()
		{
		}
	}
}
namespace UnityTemplateProjects
{
	[Token(Token = "0x200005E")]
	public class SimpleCameraController : MonoBehaviour
	{
		[Token(Token = "0x200005F")]
		private class CameraState
		{
			[Token(Token = "0x40002A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float yaw;

			[Token(Token = "0x40002A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float pitch;

			[Token(Token = "0x40002A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float roll;

			[Token(Token = "0x40002A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float x;

			[Token(Token = "0x40002A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float y;

			[Token(Token = "0x40002AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float z;

			[Token(Token = "0x600028C")]
			[Address(RVA = "0x1909E00", Offset = "0x1909E00", VA = "0x1909E00")]
			public void SetFromTransform(Transform t)
			{
			}

			[Token(Token = "0x600028D")]
			[Address(RVA = "0x1909E88", Offset = "0x1909E88", VA = "0x1909E88")]
			public void Translate(Vector3 translation)
			{
			}

			[Token(Token = "0x600028E")]
			[Address(RVA = "0x1909F04", Offset = "0x1909F04", VA = "0x1909F04")]
			public void LerpTowards(CameraState target, float positionLerpPct, float rotationLerpPct)
			{
			}

			[Token(Token = "0x600028F")]
			[Address(RVA = "0x1909FCC", Offset = "0x1909FCC", VA = "0x1909FCC")]
			public void UpdateTransform(Transform t)
			{
			}

			[Token(Token = "0x6000290")]
			[Address(RVA = "0x190A018", Offset = "0x190A018", VA = "0x190A018")]
			public CameraState()
			{
			}
		}

		[Token(Token = "0x400029E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CameraState m_TargetCameraState;

		[Token(Token = "0x400029F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CameraState m_InterpolatingCameraState;

		[Token(Token = "0x40002A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CE6C8", Offset = "0x8CE6C8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CE6C8", Offset = "0x8CE6C8")]
		public float boost;

		[Token(Token = "0x40002A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8CE728", Offset = "0x8CE728")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CE728", Offset = "0x8CE728")]
		public float positionLerpTime;

		[Token(Token = "0x40002A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CE780", Offset = "0x8CE780")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CE780", Offset = "0x8CE780")]
		public AnimationCurve mouseSensitivityCurve;

		[Token(Token = "0x40002A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8CE7E0", Offset = "0x8CE7E0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CE7E0", Offset = "0x8CE7E0")]
		public float rotationLerpTime;

		[Token(Token = "0x40002A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CE838", Offset = "0x8CE838")]
		public bool invertY;

		[Token(Token = "0x6000288")]
		[Address(RVA = "0xE640E0", Offset = "0xE640E0", VA = "0xE640E0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000289")]
		[Address(RVA = "0xE64140", Offset = "0xE64140", VA = "0xE64140")]
		private Vector3 GetInputTranslationDirection()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600028A")]
		[Address(RVA = "0xE64254", Offset = "0xE64254", VA = "0xE64254")]
		private void Update()
		{
		}

		[Token(Token = "0x600028B")]
		[Address(RVA = "0xE644B8", Offset = "0xE644B8", VA = "0xE644B8")]
		public SimpleCameraController()
		{
		}
	}
}
namespace RootMotion
{
	[Token(Token = "0x2000060")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x8CB2BC", Offset = "0x8CB2BC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8CB2BC", Offset = "0x8CB2BC")]
	public abstract class Baker : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000061")]
		public enum Mode
		{
			[Token(Token = "0x40002BA")]
			AnimationClips,
			[Token(Token = "0x40002BB")]
			AnimationStates,
			[Token(Token = "0x40002BC")]
			PlayableDirector,
			[Token(Token = "0x40002BD")]
			Realtime
		}

		[Token(Token = "0x40002AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CE870", Offset = "0x8CE870")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8CE870", Offset = "0x8CE870")]
		public int frameRate;

		[Token(Token = "0x40002AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8CE8C8", Offset = "0x8CE8C8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CE8C8", Offset = "0x8CE8C8")]
		public float keyReductionError;

		[Token(Token = "0x40002AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CE920", Offset = "0x8CE920")]
		public Mode mode;

		[Token(Token = "0x40002AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CE958", Offset = "0x8CE958")]
		public AnimationClip[] animationClips;

		[Token(Token = "0x40002AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CE990", Offset = "0x8CE990")]
		public string[] animationStates;

		[Token(Token = "0x40002B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CE9C8", Offset = "0x8CE9C8")]
		public bool loop;

		[Token(Token = "0x40002B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CEA00", Offset = "0x8CEA00")]
		public string saveToFolder;

		[Token(Token = "0x40002B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CEA38", Offset = "0x8CEA38")]
		public string appendName;

		[Token(Token = "0x40002B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CEA70", Offset = "0x8CEA70")]
		public string saveName;

		[Token(Token = "0x40002B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CEAA8", Offset = "0x8CEAA8")]
		private bool <isBaking>k__BackingField;

		[Token(Token = "0x40002B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CEAB8", Offset = "0x8CEAB8")]
		private float <bakingProgress>k__BackingField;

		[Token(Token = "0x40002B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[HideInInspector]
		public Animator animator;

		[Token(Token = "0x40002B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		[HideInInspector]
		public PlayableDirector director;

		[Token(Token = "0x40002B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CEB38", Offset = "0x8CEB38")]
		private float <clipLength>k__BackingField;

		[Token(Token = "0x17000031")]
		public bool isBaking
		{
			[Token(Token = "0x6000295")]
			[Address(RVA = "0xD7225C", Offset = "0xD7225C", VA = "0xD7225C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DCFA4", Offset = "0x8DCFA4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000296")]
			[Address(RVA = "0xD72264", Offset = "0xD72264", VA = "0xD72264")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DCFB4", Offset = "0x8DCFB4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000032")]
		public float bakingProgress
		{
			[Token(Token = "0x6000297")]
			[Address(RVA = "0xD72270", Offset = "0xD72270", VA = "0xD72270")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DCFC4", Offset = "0x8DCFC4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000298")]
			[Address(RVA = "0xD72278", Offset = "0xD72278", VA = "0xD72278")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DCFD4", Offset = "0x8DCFD4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000033")]
		protected float clipLength
		{
			[Token(Token = "0x600029E")]
			[Address(RVA = "0xD72280", Offset = "0xD72280", VA = "0xD72280")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DCFE4", Offset = "0x8DCFE4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600029F")]
			[Address(RVA = "0xD72288", Offset = "0xD72288", VA = "0xD72288")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DCFF4", Offset = "0x8DCFF4")]
			private set
			{
			}
		}

		[Token(Token = "0x6000291")]
		[Address(RVA = "0xD7213C", Offset = "0xD7213C", VA = "0xD7213C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DCEC4", Offset = "0x8DCEC4")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x6000292")]
		[Address(RVA = "0xD72184", Offset = "0xD72184", VA = "0xD72184")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DCEFC", Offset = "0x8DCEFC")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000293")]
		[Address(RVA = "0xD721CC", Offset = "0xD721CC", VA = "0xD721CC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DCF34", Offset = "0x8DCF34")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000294")]
		[Address(RVA = "0xD72214", Offset = "0xD72214", VA = "0xD72214")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DCF6C", Offset = "0x8DCF6C")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000299")]
		protected abstract Transform GetCharacterRoot();

		[Token(Token = "0x600029A")]
		protected abstract void OnStartBaking();

		[Token(Token = "0x600029B")]
		protected abstract void OnSetLoopFrame(float time);

		[Token(Token = "0x600029C")]
		protected abstract void OnSetCurves(ref AnimationClip clip);

		[Token(Token = "0x600029D")]
		protected abstract void OnSetKeyframes(float time, bool lastFrame);

		[Token(Token = "0x60002A0")]
		[Address(RVA = "0xD72290", Offset = "0xD72290", VA = "0xD72290")]
		public void BakeClip()
		{
		}

		[Token(Token = "0x60002A1")]
		[Address(RVA = "0xD72294", Offset = "0xD72294", VA = "0xD72294")]
		public void StartBaking()
		{
		}

		[Token(Token = "0x60002A2")]
		[Address(RVA = "0xD72298", Offset = "0xD72298", VA = "0xD72298")]
		public void StopBaking()
		{
		}

		[Token(Token = "0x60002A3")]
		[Address(RVA = "0xD7229C", Offset = "0xD7229C", VA = "0xD7229C")]
		protected Baker()
		{
		}
	}
	[Token(Token = "0x2000062")]
	public class GenericBaker : Baker
	{
		[Token(Token = "0x40002BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CEB48", Offset = "0x8CEB48")]
		public bool markAsLegacy;

		[Token(Token = "0x40002BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CEB80", Offset = "0x8CEB80")]
		public Transform root;

		[Token(Token = "0x40002C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CEBB8", Offset = "0x8CEBB8")]
		public Transform rootNode;

		[Token(Token = "0x40002C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CEBF0", Offset = "0x8CEBF0")]
		public Transform[] ignoreList;

		[Token(Token = "0x40002C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CEC28", Offset = "0x8CEC28")]
		public Transform[] bakePositionList;

		[Token(Token = "0x40002C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BakerTransform[] children;

		[Token(Token = "0x40002C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private BakerTransform rootChild;

		[Token(Token = "0x40002C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private int rootChildIndex;

		[Token(Token = "0x60002A4")]
		[Address(RVA = "0x1537DE0", Offset = "0x1537DE0", VA = "0x1537DE0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60002A5")]
		[Address(RVA = "0x15381D0", Offset = "0x15381D0", VA = "0x15381D0", Slot = "4")]
		protected override Transform GetCharacterRoot()
		{
			return null;
		}

		[Token(Token = "0x60002A6")]
		[Address(RVA = "0x15381D8", Offset = "0x15381D8", VA = "0x15381D8", Slot = "5")]
		protected override void OnStartBaking()
		{
		}

		[Token(Token = "0x60002A7")]
		[Address(RVA = "0x15382E8", Offset = "0x15382E8", VA = "0x15382E8", Slot = "6")]
		protected override void OnSetLoopFrame(float time)
		{
		}

		[Token(Token = "0x60002A8")]
		[Address(RVA = "0x1538364", Offset = "0x1538364", VA = "0x1538364", Slot = "7")]
		protected override void OnSetCurves(ref AnimationClip clip)
		{
		}

		[Token(Token = "0x60002A9")]
		[Address(RVA = "0x15383E0", Offset = "0x15383E0", VA = "0x15383E0", Slot = "8")]
		protected override void OnSetKeyframes(float time, bool lastFrame)
		{
		}

		[Token(Token = "0x60002AA")]
		[Address(RVA = "0x1538028", Offset = "0x1538028", VA = "0x1538028")]
		private bool IsIgnored(Transform t)
		{
			return default(bool);
		}

		[Token(Token = "0x60002AB")]
		[Address(RVA = "0x15380FC", Offset = "0x15380FC", VA = "0x15380FC")]
		private bool BakePosition(Transform t)
		{
			return default(bool);
		}

		[Token(Token = "0x60002AC")]
		[Address(RVA = "0x153845C", Offset = "0x153845C", VA = "0x153845C")]
		public GenericBaker()
		{
		}
	}
	[Token(Token = "0x2000063")]
	public class TQ
	{
		[Token(Token = "0x40002C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 t;

		[Token(Token = "0x40002C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion q;

		[Token(Token = "0x60002AD")]
		[Address(RVA = "0xE0E394", Offset = "0xE0E394", VA = "0xE0E394")]
		public TQ(Vector3 translation, Quaternion rotation)
		{
		}
	}
	[Token(Token = "0x2000064")]
	public class AvatarUtility
	{
		[Token(Token = "0x60002AE")]
		[Address(RVA = "0xD712A8", Offset = "0xD712A8", VA = "0xD712A8")]
		public static Quaternion GetPostRotation(Avatar avatar, AvatarIKGoal avatarIKGoal)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60002AF")]
		[Address(RVA = "0xD71504", Offset = "0xD71504", VA = "0xD71504")]
		public static TQ GetIKGoalTQ(Avatar avatar, float humanScale, AvatarIKGoal avatarIKGoal, TQ bodyPositionRotation, TQ boneTQ)
		{
			return null;
		}

		[Token(Token = "0x60002B0")]
		[Address(RVA = "0xD714E4", Offset = "0xD714E4", VA = "0xD714E4")]
		public static HumanBodyBones HumanIDFromAvatarIKGoal(AvatarIKGoal avatarIKGoal)
		{
			return default(HumanBodyBones);
		}

		[Token(Token = "0x60002B1")]
		[Address(RVA = "0xD71AB0", Offset = "0xD71AB0", VA = "0xD71AB0")]
		public AvatarUtility()
		{
		}
	}
	[Token(Token = "0x2000065")]
	public static class BakerUtilities
	{
		[Token(Token = "0x60002B2")]
		[Address(RVA = "0xD73434", Offset = "0xD73434", VA = "0xD73434")]
		public static void ReduceKeyframes(AnimationCurve curve, float maxError)
		{
		}

		[Token(Token = "0x60002B3")]
		[Address(RVA = "0xD74CEC", Offset = "0xD74CEC", VA = "0xD74CEC")]
		public static Keyframe[] GetReducedKeyframes(AnimationCurve curve, float maxError)
		{
			return null;
		}

		[Token(Token = "0x60002B4")]
		[Address(RVA = "0xD72E88", Offset = "0xD72E88", VA = "0xD72E88")]
		public static void SetLoopFrame(float time, AnimationCurve curve)
		{
		}

		[Token(Token = "0x60002B5")]
		[Address(RVA = "0xD7347C", Offset = "0xD7347C", VA = "0xD7347C")]
		public static void SetTangentMode(AnimationCurve curve)
		{
		}

		[Token(Token = "0x60002B6")]
		[Address(RVA = "0xD729B8", Offset = "0xD729B8", VA = "0xD729B8")]
		public static Quaternion EnsureQuaternionContinuity(Quaternion lastQ, Quaternion q)
		{
			return default(Quaternion);
		}
	}
	[Serializable]
	[Token(Token = "0x2000066")]
	public class BakerHumanoidQT
	{
		[Token(Token = "0x40002C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Transform transform;

		[Token(Token = "0x40002C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string Qx;

		[Token(Token = "0x40002CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string Qy;

		[Token(Token = "0x40002CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string Qz;

		[Token(Token = "0x40002CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string Qw;

		[Token(Token = "0x40002CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string Tx;

		[Token(Token = "0x40002CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string Ty;

		[Token(Token = "0x40002CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string Tz;

		[Token(Token = "0x40002D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AnimationCurve rotX;

		[Token(Token = "0x40002D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AnimationCurve rotY;

		[Token(Token = "0x40002D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public AnimationCurve rotZ;

		[Token(Token = "0x40002D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public AnimationCurve rotW;

		[Token(Token = "0x40002D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public AnimationCurve posX;

		[Token(Token = "0x40002D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public AnimationCurve posY;

		[Token(Token = "0x40002D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public AnimationCurve posZ;

		[Token(Token = "0x40002D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private AvatarIKGoal goal;

		[Token(Token = "0x40002D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Quaternion lastQ;

		[Token(Token = "0x40002D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private bool lastQSet;

		[Token(Token = "0x60002B7")]
		[Address(RVA = "0xD72388", Offset = "0xD72388", VA = "0xD72388")]
		public BakerHumanoidQT(string name)
		{
		}

		[Token(Token = "0x60002B8")]
		[Address(RVA = "0xD725F4", Offset = "0xD725F4", VA = "0xD725F4")]
		public BakerHumanoidQT(Transform transform, AvatarIKGoal goal, string name)
		{
		}

		[Token(Token = "0x60002B9")]
		[Address(RVA = "0xD724EC", Offset = "0xD724EC", VA = "0xD724EC")]
		public void Reset()
		{
		}

		[Token(Token = "0x60002BA")]
		[Address(RVA = "0xD72770", Offset = "0xD72770", VA = "0xD72770")]
		public void SetIKKeyframes(float time, Avatar avatar, float humanScale, Vector3 bodyPosition, Quaternion bodyRotation)
		{
		}

		[Token(Token = "0x60002BB")]
		[Address(RVA = "0xD72C1C", Offset = "0xD72C1C", VA = "0xD72C1C")]
		public void SetKeyframes(float time, Vector3 pos, Quaternion rot)
		{
		}

		[Token(Token = "0x60002BC")]
		[Address(RVA = "0xD72D18", Offset = "0xD72D18", VA = "0xD72D18")]
		public void MoveLastKeyframes(float time)
		{
		}

		[Token(Token = "0x60002BD")]
		[Address(RVA = "0xD72E14", Offset = "0xD72E14", VA = "0xD72E14")]
		public void SetLoopFrame(float time)
		{
		}

		[Token(Token = "0x60002BE")]
		[Address(RVA = "0xD72D8C", Offset = "0xD72D8C", VA = "0xD72D8C")]
		private void MoveLastKeyframe(float time, AnimationCurve curve)
		{
		}

		[Token(Token = "0x60002BF")]
		[Address(RVA = "0xD73080", Offset = "0xD73080", VA = "0xD73080")]
		public void MultiplyLength(AnimationCurve curve, float mlp)
		{
		}

		[Token(Token = "0x60002C0")]
		[Address(RVA = "0xD73134", Offset = "0xD73134", VA = "0xD73134")]
		public void SetCurves(ref AnimationClip clip, float maxError, float lengthMlp)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000067")]
	public class BakerMuscle
	{
		[Token(Token = "0x40002DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AnimationCurve curve;

		[Token(Token = "0x40002DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int muscleIndex;

		[Token(Token = "0x40002DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string propertyName;

		[Token(Token = "0x60002C1")]
		[Address(RVA = "0xD73480", Offset = "0xD73480", VA = "0xD73480")]
		public BakerMuscle(int muscleIndex)
		{
		}

		[Token(Token = "0x60002C2")]
		[Address(RVA = "0xD734F0", Offset = "0xD734F0", VA = "0xD734F0")]
		private string MuscleNameToPropertyName(string n)
		{
			return null;
		}

		[Token(Token = "0x60002C3")]
		[Address(RVA = "0xD73F84", Offset = "0xD73F84", VA = "0xD73F84")]
		public void MultiplyLength(AnimationCurve curve, float mlp)
		{
		}

		[Token(Token = "0x60002C4")]
		[Address(RVA = "0xD74038", Offset = "0xD74038", VA = "0xD74038")]
		public void SetCurves(ref AnimationClip clip, float maxError, float lengthMlp)
		{
		}

		[Token(Token = "0x60002C5")]
		[Address(RVA = "0xD73F28", Offset = "0xD73F28", VA = "0xD73F28")]
		public void Reset()
		{
		}

		[Token(Token = "0x60002C6")]
		[Address(RVA = "0xD74130", Offset = "0xD74130", VA = "0xD74130")]
		public void SetKeyframe(float time, float[] muscles)
		{
		}

		[Token(Token = "0x60002C7")]
		[Address(RVA = "0xD74178", Offset = "0xD74178", VA = "0xD74178")]
		public void SetLoopFrame(float time)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000068")]
	public class BakerTransform
	{
		[Token(Token = "0x40002DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform transform;

		[Token(Token = "0x40002DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimationCurve posX;

		[Token(Token = "0x40002DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve posY;

		[Token(Token = "0x40002E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationCurve posZ;

		[Token(Token = "0x40002E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnimationCurve rotX;

		[Token(Token = "0x40002E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AnimationCurve rotY;

		[Token(Token = "0x40002E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AnimationCurve rotZ;

		[Token(Token = "0x40002E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AnimationCurve rotW;

		[Token(Token = "0x40002E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string relativePath;

		[Token(Token = "0x40002E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool recordPosition;

		[Token(Token = "0x40002E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Vector3 relativePosition;

		[Token(Token = "0x40002E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool isRootNode;

		[Token(Token = "0x40002E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Quaternion relativeRotation;

		[Token(Token = "0x60002C8")]
		[Address(RVA = "0xD74180", Offset = "0xD74180", VA = "0xD74180")]
		public BakerTransform(Transform transform, Transform root, bool recordPosition, bool isRootNode)
		{
		}

		[Token(Token = "0x60002C9")]
		[Address(RVA = "0xD7430C", Offset = "0xD7430C", VA = "0xD7430C")]
		public void SetRelativeSpace(Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x60002CA")]
		[Address(RVA = "0xD74320", Offset = "0xD74320", VA = "0xD74320")]
		public void SetCurves(ref AnimationClip clip)
		{
		}

		[Token(Token = "0x60002CB")]
		[Address(RVA = "0xD7460C", Offset = "0xD7460C", VA = "0xD7460C")]
		private void AddRootMotionCurves(ref AnimationClip clip)
		{
		}

		[Token(Token = "0x60002CC")]
		[Address(RVA = "0xD74218", Offset = "0xD74218", VA = "0xD74218")]
		public void Reset()
		{
		}

		[Token(Token = "0x60002CD")]
		[Address(RVA = "0xD748C0", Offset = "0xD748C0", VA = "0xD748C0")]
		public void ReduceKeyframes(float maxError)
		{
		}

		[Token(Token = "0x60002CE")]
		[Address(RVA = "0xD74934", Offset = "0xD74934", VA = "0xD74934")]
		public void SetKeyframes(float time)
		{
		}

		[Token(Token = "0x60002CF")]
		[Address(RVA = "0xD74AE8", Offset = "0xD74AE8", VA = "0xD74AE8")]
		public void AddLoopFrame(float time)
		{
		}
	}
	[Token(Token = "0x2000069")]
	public class HumanoidBaker : Baker
	{
		[Token(Token = "0x40002EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CEC60", Offset = "0x8CEC60")]
		public bool bakeHandIK;

		[Token(Token = "0x40002EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8CEC98", Offset = "0x8CEC98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CEC98", Offset = "0x8CEC98")]
		public float IKKeyReductionError;

		[Token(Token = "0x40002EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8CECF0", Offset = "0x8CECF0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CECF0", Offset = "0x8CECF0")]
		public int muscleFrameRateDiv;

		[Token(Token = "0x40002ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private BakerMuscle[] bakerMuscles;

		[Token(Token = "0x40002EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private BakerHumanoidQT rootQT;

		[Token(Token = "0x40002EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private BakerHumanoidQT leftFootQT;

		[Token(Token = "0x40002F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BakerHumanoidQT rightFootQT;

		[Token(Token = "0x40002F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private BakerHumanoidQT leftHandQT;

		[Token(Token = "0x40002F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private BakerHumanoidQT rightHandQT;

		[Token(Token = "0x40002F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float[] muscles;

		[Token(Token = "0x40002F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private HumanPose pose;

		[Token(Token = "0x40002F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private HumanPoseHandler handler;

		[Token(Token = "0x40002F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Vector3 bodyPosition;

		[Token(Token = "0x40002F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private Quaternion bodyRotation;

		[Token(Token = "0x40002F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private int mN;

		[Token(Token = "0x40002F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Quaternion lastBodyRotation;

		[Token(Token = "0x60002D0")]
		[Address(RVA = "0x156BF64", Offset = "0x156BF64", VA = "0x156BF64")]
		private void Awake()
		{
		}

		[Token(Token = "0x60002D1")]
		[Address(RVA = "0x156C440", Offset = "0x156C440", VA = "0x156C440", Slot = "4")]
		protected override Transform GetCharacterRoot()
		{
			return null;
		}

		[Token(Token = "0x60002D2")]
		[Address(RVA = "0x156C45C", Offset = "0x156C45C", VA = "0x156C45C", Slot = "5")]
		protected override void OnStartBaking()
		{
		}

		[Token(Token = "0x60002D3")]
		[Address(RVA = "0x156C538", Offset = "0x156C538", VA = "0x156C538", Slot = "6")]
		protected override void OnSetLoopFrame(float time)
		{
		}

		[Token(Token = "0x60002D4")]
		[Address(RVA = "0x156C614", Offset = "0x156C614", VA = "0x156C614", Slot = "7")]
		protected override void OnSetCurves(ref AnimationClip clip)
		{
		}

		[Token(Token = "0x60002D5")]
		[Address(RVA = "0x156C7E4", Offset = "0x156C7E4", VA = "0x156C7E4", Slot = "8")]
		protected override void OnSetKeyframes(float time, bool lastFrame)
		{
		}

		[Token(Token = "0x60002D6")]
		[Address(RVA = "0x156CAAC", Offset = "0x156CAAC", VA = "0x156CAAC")]
		private void UpdateHumanPose()
		{
		}

		[Token(Token = "0x60002D7")]
		[Address(RVA = "0x156CB88", Offset = "0x156CB88", VA = "0x156CB88")]
		public HumanoidBaker()
		{
		}
	}
	[Token(Token = "0x200006A")]
	public class CameraController : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200006B")]
		public enum UpdateMode
		{
			[Token(Token = "0x4000320")]
			Update,
			[Token(Token = "0x4000321")]
			FixedUpdate,
			[Token(Token = "0x4000322")]
			LateUpdate,
			[Token(Token = "0x4000323")]
			FixedLateUpdate
		}

		[Token(Token = "0x40002FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform target;

		[Token(Token = "0x40002FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform rotationSpace;

		[Token(Token = "0x40002FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UpdateMode updateMode;

		[Token(Token = "0x40002FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool lockCursor;

		[Token(Token = "0x40002FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CED44", Offset = "0x8CED44")]
		public bool smoothFollow;

		[Token(Token = "0x40002FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 offset;

		[Token(Token = "0x4000300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float followSpeed;

		[Token(Token = "0x4000301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CED7C", Offset = "0x8CED7C")]
		public float rotationSensitivity;

		[Token(Token = "0x4000302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float yMinLimit;

		[Token(Token = "0x4000303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float yMaxLimit;

		[Token(Token = "0x4000304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool rotateAlways;

		[Token(Token = "0x4000305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		public bool rotateOnLeftButton;

		[Token(Token = "0x4000306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
		public bool rotateOnRightButton;

		[Token(Token = "0x4000307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4F")]
		public bool rotateOnMiddleButton;

		[Token(Token = "0x4000308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CEDB4", Offset = "0x8CEDB4")]
		public float distance;

		[Token(Token = "0x4000309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float minDistance;

		[Token(Token = "0x400030A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float maxDistance;

		[Token(Token = "0x400030B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float zoomSpeed;

		[Token(Token = "0x400030C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float zoomSensitivity;

		[Token(Token = "0x400030D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CEDEC", Offset = "0x8CEDEC")]
		public LayerMask blockingLayers;

		[Token(Token = "0x400030E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float blockingRadius;

		[Token(Token = "0x400030F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float blockingSmoothTime;

		[Token(Token = "0x4000310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8CEE24", Offset = "0x8CEE24")]
		public float blockedOffset;

		[Token(Token = "0x4000311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CEE3C", Offset = "0x8CEE3C")]
		private float <x>k__BackingField;

		[Token(Token = "0x4000312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CEE4C", Offset = "0x8CEE4C")]
		private float <y>k__BackingField;

		[Token(Token = "0x4000313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CEE5C", Offset = "0x8CEE5C")]
		private float <distanceTarget>k__BackingField;

		[Token(Token = "0x4000314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 targetDistance;

		[Token(Token = "0x4000315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Vector3 position;

		[Token(Token = "0x4000316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Quaternion rotation;

		[Token(Token = "0x4000317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector3 smoothPosition;

		[Token(Token = "0x4000318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Camera cam;

		[Token(Token = "0x4000319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool fixedFrame;

		[Token(Token = "0x400031A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private float fixedDeltaTime;

		[Token(Token = "0x400031B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Quaternion r;

		[Token(Token = "0x400031C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Vector3 lastUp;

		[Token(Token = "0x400031D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float blockedDistance;

		[Token(Token = "0x400031E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float blockedDistanceV;

		[Token(Token = "0x17000034")]
		public float x
		{
			[Token(Token = "0x60002D8")]
			[Address(RVA = "0x10766B8", Offset = "0x10766B8", VA = "0x10766B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DD004", Offset = "0x8DD004")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60002D9")]
			[Address(RVA = "0x10766C0", Offset = "0x10766C0", VA = "0x10766C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DD014", Offset = "0x8DD014")]
			private set
			{
			}
		}

		[Token(Token = "0x17000035")]
		public float y
		{
			[Token(Token = "0x60002DA")]
			[Address(RVA = "0x10766C8", Offset = "0x10766C8", VA = "0x10766C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DD024", Offset = "0x8DD024")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60002DB")]
			[Address(RVA = "0x10766D0", Offset = "0x10766D0", VA = "0x10766D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DD034", Offset = "0x8DD034")]
			private set
			{
			}
		}

		[Token(Token = "0x17000036")]
		public float distanceTarget
		{
			[Token(Token = "0x60002DC")]
			[Address(RVA = "0x10766D8", Offset = "0x10766D8", VA = "0x10766D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DD044", Offset = "0x8DD044")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60002DD")]
			[Address(RVA = "0x10766E0", Offset = "0x10766E0", VA = "0x10766E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DD054", Offset = "0x8DD054")]
			private set
			{
			}
		}

		[Token(Token = "0x17000037")]
		private float zoomAdd
		{
			[Token(Token = "0x60002E7")]
			[Address(RVA = "0x1076F68", Offset = "0x1076F68", VA = "0x1076F68")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60002DE")]
		[Address(RVA = "0x10766E8", Offset = "0x10766E8", VA = "0x10766E8")]
		public void SetAngles(Quaternion rotation)
		{
		}

		[Token(Token = "0x60002DF")]
		[Address(RVA = "0x1076724", Offset = "0x1076724", VA = "0x1076724")]
		public void SetAngles(float yaw, float pitch)
		{
		}

		[Token(Token = "0x60002E0")]
		[Address(RVA = "0x107672C", Offset = "0x107672C", VA = "0x107672C", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60002E1")]
		[Address(RVA = "0x1076830", Offset = "0x1076830", VA = "0x1076830", Slot = "5")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x60002E2")]
		[Address(RVA = "0x107688C", Offset = "0x107688C", VA = "0x107688C", Slot = "6")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x60002E3")]
		[Address(RVA = "0x10768F4", Offset = "0x10768F4", VA = "0x10768F4", Slot = "7")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x60002E4")]
		[Address(RVA = "0x1076958", Offset = "0x1076958", VA = "0x1076958")]
		public void UpdateInput()
		{
		}

		[Token(Token = "0x60002E5")]
		[Address(RVA = "0x1076864", Offset = "0x1076864", VA = "0x1076864")]
		public void UpdateTransform()
		{
		}

		[Token(Token = "0x60002E6")]
		[Address(RVA = "0x1076AD8", Offset = "0x1076AD8", VA = "0x1076AD8")]
		public void UpdateTransform(float deltaTime)
		{
		}

		[Token(Token = "0x60002E8")]
		[Address(RVA = "0x1076F38", Offset = "0x1076F38", VA = "0x1076F38")]
		private float ClampAngle(float angle, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x60002E9")]
		[Address(RVA = "0x1076FD8", Offset = "0x1076FD8", VA = "0x1076FD8")]
		public CameraController()
		{
		}
	}
	[Token(Token = "0x200006C")]
	public class CameraControllerFPS : MonoBehaviour
	{
		[Token(Token = "0x4000324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float rotationSensitivity;

		[Token(Token = "0x4000325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float yMinLimit;

		[Token(Token = "0x4000326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float yMaxLimit;

		[Token(Token = "0x4000327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float x;

		[Token(Token = "0x4000328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float y;

		[Token(Token = "0x60002EA")]
		[Address(RVA = "0x107707C", Offset = "0x107707C", VA = "0x107707C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60002EB")]
		[Address(RVA = "0x10770B4", Offset = "0x10770B4", VA = "0x10770B4")]
		public void LateUpdate()
		{
		}

		[Token(Token = "0x60002EC")]
		[Address(RVA = "0x107725C", Offset = "0x107725C", VA = "0x107725C")]
		private float ClampAngle(float angle, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x60002ED")]
		[Address(RVA = "0x107728C", Offset = "0x107728C", VA = "0x107728C")]
		public CameraControllerFPS()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200006D")]
	public enum Axis
	{
		[Token(Token = "0x400032A")]
		X,
		[Token(Token = "0x400032B")]
		Y,
		[Token(Token = "0x400032C")]
		Z
	}
	[Token(Token = "0x200006E")]
	public class AxisTools
	{
		[Token(Token = "0x60002EE")]
		[Address(RVA = "0xD71AB8", Offset = "0xD71AB8", VA = "0xD71AB8")]
		public static Vector3 ToVector3(Axis axis)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60002EF")]
		[Address(RVA = "0xD71ADC", Offset = "0xD71ADC", VA = "0xD71ADC")]
		public static Axis ToAxis(Vector3 v)
		{
			return default(Axis);
		}

		[Token(Token = "0x60002F0")]
		[Address(RVA = "0xD71B14", Offset = "0xD71B14", VA = "0xD71B14")]
		public static Axis GetAxisToPoint(Transform t, Vector3 worldPosition)
		{
			return default(Axis);
		}

		[Token(Token = "0x60002F1")]
		[Address(RVA = "0xD71C04", Offset = "0xD71C04", VA = "0xD71C04")]
		public static Axis GetAxisToDirection(Transform t, Vector3 direction)
		{
			return default(Axis);
		}

		[Token(Token = "0x60002F2")]
		[Address(RVA = "0xD71BAC", Offset = "0xD71BAC", VA = "0xD71BAC")]
		public static Vector3 GetAxisVectorToPoint(Transform t, Vector3 worldPosition)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60002F3")]
		[Address(RVA = "0xD71C9C", Offset = "0xD71C9C", VA = "0xD71C9C")]
		public static Vector3 GetAxisVectorToDirection(Transform t, Vector3 direction)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60002F4")]
		[Address(RVA = "0xD71CE4", Offset = "0xD71CE4", VA = "0xD71CE4")]
		public static Vector3 GetAxisVectorToDirection(Quaternion r, Vector3 direction)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60002F5")]
		[Address(RVA = "0xD71EA8", Offset = "0xD71EA8", VA = "0xD71EA8")]
		public AxisTools()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200006F")]
	public class BipedLimbOrientations
	{
		[Serializable]
		[Token(Token = "0x2000070")]
		public class LimbOrientation
		{
			[Token(Token = "0x4000331")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 upperBoneForwardAxis;

			[Token(Token = "0x4000332")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 lowerBoneForwardAxis;

			[Token(Token = "0x4000333")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 lastBoneLeftAxis;

			[Token(Token = "0x60002F9")]
			[Address(RVA = "0xC163C4", Offset = "0xC163C4", VA = "0xC163C4")]
			public LimbOrientation(Vector3 upperBoneForwardAxis, Vector3 lowerBoneForwardAxis, Vector3 lastBoneLeftAxis)
			{
			}
		}

		[Token(Token = "0x400032D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LimbOrientation leftArm;

		[Token(Token = "0x400032E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LimbOrientation rightArm;

		[Token(Token = "0x400032F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LimbOrientation leftLeg;

		[Token(Token = "0x4000330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LimbOrientation rightLeg;

		[Token(Token = "0x17000038")]
		public static BipedLimbOrientations UMA
		{
			[Token(Token = "0x60002F7")]
			[Address(RVA = "0x1067ACC", Offset = "0x1067ACC", VA = "0x1067ACC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000039")]
		public static BipedLimbOrientations MaxBiped
		{
			[Token(Token = "0x60002F8")]
			[Address(RVA = "0x1067D38", Offset = "0x1067D38", VA = "0x1067D38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002F6")]
		[Address(RVA = "0x1067A80", Offset = "0x1067A80", VA = "0x1067A80")]
		public BipedLimbOrientations(LimbOrientation leftArm, LimbOrientation rightArm, LimbOrientation leftLeg, LimbOrientation rightLeg)
		{
		}
	}
	[Token(Token = "0x2000071")]
	public static class BipedNaming
	{
		[Serializable]
		[Token(Token = "0x2000072")]
		public enum BoneType
		{
			[Token(Token = "0x4000347")]
			Unassigned,
			[Token(Token = "0x4000348")]
			Spine,
			[Token(Token = "0x4000349")]
			Head,
			[Token(Token = "0x400034A")]
			Arm,
			[Token(Token = "0x400034B")]
			Leg,
			[Token(Token = "0x400034C")]
			Tail,
			[Token(Token = "0x400034D")]
			Eye
		}

		[Serializable]
		[Token(Token = "0x2000073")]
		public enum BoneSide
		{
			[Token(Token = "0x400034F")]
			Center,
			[Token(Token = "0x4000350")]
			Left,
			[Token(Token = "0x4000351")]
			Right
		}

		[Token(Token = "0x4000334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string[] typeLeft;

		[Token(Token = "0x4000335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static string[] typeRight;

		[Token(Token = "0x4000336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static string[] typeSpine;

		[Token(Token = "0x4000337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static string[] typeHead;

		[Token(Token = "0x4000338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static string[] typeArm;

		[Token(Token = "0x4000339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static string[] typeLeg;

		[Token(Token = "0x400033A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static string[] typeTail;

		[Token(Token = "0x400033B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static string[] typeEye;

		[Token(Token = "0x400033C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static string[] typeExclude;

		[Token(Token = "0x400033D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static string[] typeExcludeSpine;

		[Token(Token = "0x400033E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static string[] typeExcludeHead;

		[Token(Token = "0x400033F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public static string[] typeExcludeArm;

		[Token(Token = "0x4000340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public static string[] typeExcludeLeg;

		[Token(Token = "0x4000341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public static string[] typeExcludeTail;

		[Token(Token = "0x4000342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public static string[] typeExcludeEye;

		[Token(Token = "0x4000343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public static string[] pelvis;

		[Token(Token = "0x4000344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public static string[] hand;

		[Token(Token = "0x4000345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public static string[] foot;

		[Token(Token = "0x60002FA")]
		[Address(RVA = "0x1067FA4", Offset = "0x1067FA4", VA = "0x1067FA4")]
		public static Transform[] GetBonesOfType(BoneType boneType, Transform[] bones)
		{
			return null;
		}

		[Token(Token = "0x60002FB")]
		[Address(RVA = "0x10682C0", Offset = "0x10682C0", VA = "0x10682C0")]
		public static Transform[] GetBonesOfSide(BoneSide boneSide, Transform[] bones)
		{
			return null;
		}

		[Token(Token = "0x60002FC")]
		[Address(RVA = "0x106852C", Offset = "0x106852C", VA = "0x106852C")]
		public static Transform[] GetBonesOfTypeAndSide(BoneType boneType, BoneSide boneSide, Transform[] bones)
		{
			return null;
		}

		[Token(Token = "0x60002FD")]
		[Address(RVA = "0x10685AC", Offset = "0x10685AC", VA = "0x10685AC")]
		public static Transform GetFirstBoneOfTypeAndSide(BoneType boneType, BoneSide boneSide, Transform[] bones)
		{
			return null;
		}

		[Token(Token = "0x60002FE")]
		[Address(RVA = "0x1068654", Offset = "0x1068654", VA = "0x1068654")]
		public static Transform GetNamingMatch(Transform[] transforms, params string[][] namings)
		{
			return null;
		}

		[Token(Token = "0x60002FF")]
		[Address(RVA = "0x1068174", Offset = "0x1068174", VA = "0x1068174")]
		public static BoneType GetBoneType(string boneName)
		{
			return default(BoneType);
		}

		[Token(Token = "0x6000300")]
		[Address(RVA = "0x1068490", Offset = "0x1068490", VA = "0x1068490")]
		public static BoneSide GetBoneSide(string boneName)
		{
			return default(BoneSide);
		}

		[Token(Token = "0x6000301")]
		[Address(RVA = "0x1068E84", Offset = "0x1068E84", VA = "0x1068E84")]
		public static Transform GetBone(Transform[] transforms, BoneType boneType, BoneSide boneSide = BoneSide.Center, params string[][] namings)
		{
			return null;
		}

		[Token(Token = "0x6000302")]
		[Address(RVA = "0x1068C8C", Offset = "0x1068C8C", VA = "0x1068C8C")]
		private static bool isLeft(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000303")]
		[Address(RVA = "0x1068D88", Offset = "0x1068D88", VA = "0x1068D88")]
		private static bool isRight(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000304")]
		[Address(RVA = "0x106886C", Offset = "0x106886C", VA = "0x106886C")]
		private static bool isSpine(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000305")]
		[Address(RVA = "0x106891C", Offset = "0x106891C", VA = "0x106891C")]
		private static bool isHead(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000306")]
		[Address(RVA = "0x10689CC", Offset = "0x10689CC", VA = "0x10689CC")]
		private static bool isArm(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000307")]
		[Address(RVA = "0x1068A7C", Offset = "0x1068A7C", VA = "0x1068A7C")]
		private static bool isLeg(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000308")]
		[Address(RVA = "0x1068B2C", Offset = "0x1068B2C", VA = "0x1068B2C")]
		private static bool isTail(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000309")]
		[Address(RVA = "0x1068BDC", Offset = "0x1068BDC", VA = "0x1068BDC")]
		private static bool isEye(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x600030A")]
		[Address(RVA = "0x106908C", Offset = "0x106908C", VA = "0x106908C")]
		private static bool isTypeExclude(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x600030B")]
		[Address(RVA = "0x1068784", Offset = "0x1068784", VA = "0x1068784")]
		private static bool matchesNaming(string boneName, string[] namingConvention)
		{
			return default(bool);
		}

		[Token(Token = "0x600030C")]
		[Address(RVA = "0x1068FFC", Offset = "0x1068FFC", VA = "0x1068FFC")]
		private static bool excludesNaming(string boneName, string[] namingConvention)
		{
			return default(bool);
		}

		[Token(Token = "0x600030D")]
		[Address(RVA = "0x10690F8", Offset = "0x10690F8", VA = "0x10690F8")]
		private static bool matchesLastLetter(string boneName, string[] namingConvention)
		{
			return default(bool);
		}

		[Token(Token = "0x600030E")]
		[Address(RVA = "0x10691CC", Offset = "0x10691CC", VA = "0x10691CC")]
		private static bool LastLetterIs(string boneName, string letter)
		{
			return default(bool);
		}

		[Token(Token = "0x600030F")]
		[Address(RVA = "0x1068F84", Offset = "0x1068F84", VA = "0x1068F84")]
		private static string firstLetter(string boneName)
		{
			return null;
		}

		[Token(Token = "0x6000310")]
		[Address(RVA = "0x1068F10", Offset = "0x1068F10", VA = "0x1068F10")]
		private static string lastLetter(string boneName)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000074")]
	public class BipedReferences
	{
		[Token(Token = "0x2000075")]
		public struct AutoDetectParams
		{
			[Token(Token = "0x4000363")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool legsParentInSpine;

			[Token(Token = "0x4000364")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
			public bool includeEyes;

			[Token(Token = "0x1700003C")]
			public static AutoDetectParams Default
			{
				[Token(Token = "0x600032B")]
				[Address(RVA = "0xC16488", Offset = "0xC16488", VA = "0xC16488")]
				get
				{
					return default(AutoDetectParams);
				}
			}

			[Token(Token = "0x600032A")]
			[Address(RVA = "0xC16474", Offset = "0xC16474", VA = "0xC16474")]
			public AutoDetectParams(bool legsParentInSpine, bool includeEyes)
			{
			}
		}

		[Token(Token = "0x4000352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform root;

		[Token(Token = "0x4000353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform pelvis;

		[Token(Token = "0x4000354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform leftThigh;

		[Token(Token = "0x4000355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform leftCalf;

		[Token(Token = "0x4000356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform leftFoot;

		[Token(Token = "0x4000357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform rightThigh;

		[Token(Token = "0x4000358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform rightCalf;

		[Token(Token = "0x4000359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform rightFoot;

		[Token(Token = "0x400035A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform leftUpperArm;

		[Token(Token = "0x400035B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform leftForearm;

		[Token(Token = "0x400035C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform leftHand;

		[Token(Token = "0x400035D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Transform rightUpperArm;

		[Token(Token = "0x400035E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Transform rightForearm;

		[Token(Token = "0x400035F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Transform rightHand;

		[Token(Token = "0x4000360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Transform head;

		[Token(Token = "0x4000361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Transform[] spine;

		[Token(Token = "0x4000362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Transform[] eyes;

		[Token(Token = "0x1700003A")]
		public virtual bool isFilled
		{
			[Token(Token = "0x6000312")]
			[Address(RVA = "0x106F394", Offset = "0x106F394", VA = "0x106F394", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700003B")]
		public bool isEmpty
		{
			[Token(Token = "0x6000313")]
			[Address(RVA = "0x106F77C", Offset = "0x106F77C", VA = "0x106F77C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000314")]
		[Address(RVA = "0x106F78C", Offset = "0x106F78C", VA = "0x106F78C", Slot = "5")]
		public virtual bool IsEmpty(bool includeRoot)
		{
			return default(bool);
		}

		[Token(Token = "0x6000315")]
		[Address(RVA = "0x106FBB4", Offset = "0x106FBB4", VA = "0x106FBB4", Slot = "6")]
		public virtual bool Contains(Transform t, bool ignoreRoot = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000316")]
		[Address(RVA = "0x106FFE8", Offset = "0x106FFE8", VA = "0x106FFE8")]
		public static bool AutoDetectReferences(ref BipedReferences references, Transform root, AutoDetectParams autoDetectParams)
		{
			return default(bool);
		}

		[Token(Token = "0x6000317")]
		[Address(RVA = "0x10705D4", Offset = "0x10705D4", VA = "0x10705D4")]
		public static void DetectReferencesByNaming(ref BipedReferences references, Transform root, AutoDetectParams autoDetectParams)
		{
		}

		[Token(Token = "0x6000318")]
		[Address(RVA = "0x10701FC", Offset = "0x10701FC", VA = "0x10701FC")]
		public static void AssignHumanoidReferences(ref BipedReferences references, Animator animator, AutoDetectParams autoDetectParams)
		{
		}

		[Token(Token = "0x6000319")]
		[Address(RVA = "0x106727C", Offset = "0x106727C", VA = "0x106727C")]
		public static bool SetupError(BipedReferences references, ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x600031A")]
		[Address(RVA = "0x1070DD4", Offset = "0x1070DD4", VA = "0x1070DD4")]
		public static bool SetupWarning(BipedReferences references, ref string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x600031B")]
		[Address(RVA = "0x1071334", Offset = "0x1071334", VA = "0x1071334")]
		private static bool IsNeckBone(Transform bone, Transform leftUpperArm)
		{
			return default(bool);
		}

		[Token(Token = "0x600031C")]
		[Address(RVA = "0x1071128", Offset = "0x1071128", VA = "0x1071128")]
		private static bool AddBoneToEyes(Transform bone, ref BipedReferences references, AutoDetectParams autoDetectParams)
		{
			return default(bool);
		}

		[Token(Token = "0x600031D")]
		[Address(RVA = "0x1070FA4", Offset = "0x1070FA4", VA = "0x1070FA4")]
		private static bool AddBoneToSpine(Transform bone, ref BipedReferences references, AutoDetectParams autoDetectParams)
		{
			return default(bool);
		}

		[Token(Token = "0x600031E")]
		[Address(RVA = "0x1070E74", Offset = "0x1070E74", VA = "0x1070E74")]
		private static void DetectLimb(BipedNaming.BoneType boneType, BipedNaming.BoneSide boneSide, ref Transform firstBone, ref Transform secondBone, ref Transform lastBone, Transform[] transforms)
		{
		}

		[Token(Token = "0x600031F")]
		[Address(RVA = "0x1071234", Offset = "0x1071234", VA = "0x1071234")]
		private static void AddBoneToHierarchy(ref Transform[] bones, Transform transform)
		{
		}

		[Token(Token = "0x6000320")]
		[Address(RVA = "0x107142C", Offset = "0x107142C", VA = "0x107142C")]
		private static bool LimbError(Transform bone1, Transform bone2, Transform bone3, ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000321")]
		[Address(RVA = "0x1071F50", Offset = "0x1071F50", VA = "0x1071F50")]
		private static bool LimbWarning(Transform bone1, Transform bone2, Transform bone3, ref string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000322")]
		[Address(RVA = "0x10719D8", Offset = "0x10719D8", VA = "0x10719D8")]
		private static bool SpineError(BipedReferences references, ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000323")]
		[Address(RVA = "0x10721F8", Offset = "0x10721F8", VA = "0x10721F8")]
		private static bool SpineWarning(BipedReferences references, ref string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000324")]
		[Address(RVA = "0x1071D44", Offset = "0x1071D44", VA = "0x1071D44")]
		private static bool EyesError(BipedReferences references, ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000325")]
		[Address(RVA = "0x1072200", Offset = "0x1072200", VA = "0x1072200")]
		private static bool EyesWarning(BipedReferences references, ref string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000326")]
		[Address(RVA = "0x1072208", Offset = "0x1072208", VA = "0x1072208")]
		private static bool RootHeightWarning(BipedReferences references, ref string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000327")]
		[Address(RVA = "0x10723D0", Offset = "0x10723D0", VA = "0x10723D0")]
		private static bool FacingAxisWarning(BipedReferences references, ref string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000328")]
		[Address(RVA = "0x107258C", Offset = "0x107258C", VA = "0x107258C")]
		private static float GetVerticalOffset(Vector3 p1, Vector3 p2, Quaternion rotation)
		{
			return default(float);
		}

		[Token(Token = "0x6000329")]
		[Address(RVA = "0x10676D8", Offset = "0x10676D8", VA = "0x10676D8")]
		public BipedReferences()
		{
		}
	}
	[Token(Token = "0x2000076")]
	public class Comments : MonoBehaviour
	{
		[Token(Token = "0x4000365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Multiline]
		public string text;

		[Token(Token = "0x600032C")]
		[Address(RVA = "0xCBD69C", Offset = "0xCBD69C", VA = "0xCBD69C")]
		public Comments()
		{
		}
	}
	[Token(Token = "0x2000077")]
	public class DemoGUIMessage : MonoBehaviour
	{
		[Token(Token = "0x4000366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string text;

		[Token(Token = "0x4000367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color color;

		[Token(Token = "0x600032D")]
		[Address(RVA = "0xCC27CC", Offset = "0xCC27CC", VA = "0xCC27CC")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x600032E")]
		[Address(RVA = "0xCC2914", Offset = "0xCC2914", VA = "0xCC2914")]
		public DemoGUIMessage()
		{
		}
	}
	[Token(Token = "0x2000078")]
	public class Hierarchy
	{
		[Token(Token = "0x600032F")]
		[Address(RVA = "0x1568B0C", Offset = "0x1568B0C", VA = "0x1568B0C")]
		public static bool HierarchyIsValid(Transform[] bones)
		{
			return default(bool);
		}

		[Token(Token = "0x6000330")]
		[Address(RVA = "0x1568CF8", Offset = "0x1568CF8", VA = "0x1568CF8")]
		public static UnityEngine.Object ContainsDuplicate(UnityEngine.Object[] objects)
		{
			return null;
		}

		[Token(Token = "0x6000331")]
		[Address(RVA = "0x1568BA4", Offset = "0x1568BA4", VA = "0x1568BA4")]
		public static bool IsAncestor(Transform transform, Transform ancestor)
		{
			return default(bool);
		}

		[Token(Token = "0x6000332")]
		[Address(RVA = "0x1568E18", Offset = "0x1568E18", VA = "0x1568E18")]
		public static bool ContainsChild(Transform transform, Transform child)
		{
			return default(bool);
		}

		[Token(Token = "0x6000333")]
		[Address(RVA = "0x1568F44", Offset = "0x1568F44", VA = "0x1568F44")]
		public static void AddAncestors(Transform transform, Transform blocker, ref Transform[] array)
		{
		}

		[Token(Token = "0x6000334")]
		[Address(RVA = "0x1569190", Offset = "0x1569190", VA = "0x1569190")]
		public static Transform GetAncestor(Transform transform, int minChildCount)
		{
			return null;
		}

		[Token(Token = "0x6000335")]
		[Address(RVA = "0x1569298", Offset = "0x1569298", VA = "0x1569298")]
		public static Transform GetFirstCommonAncestor(Transform t1, Transform t2)
		{
			return null;
		}

		[Token(Token = "0x6000336")]
		[Address(RVA = "0x156940C", Offset = "0x156940C", VA = "0x156940C")]
		public static Transform GetFirstCommonAncestor(Transform[] transforms)
		{
			return null;
		}

		[Token(Token = "0x6000337")]
		[Address(RVA = "0x15697E8", Offset = "0x15697E8", VA = "0x15697E8")]
		public static Transform GetFirstCommonAncestorRecursive(Transform transform, Transform[] transforms)
		{
			return null;
		}

		[Token(Token = "0x6000338")]
		[Address(RVA = "0x15695AC", Offset = "0x15695AC", VA = "0x15695AC")]
		public static bool IsCommonAncestor(Transform transform, Transform[] transforms)
		{
			return default(bool);
		}

		[Token(Token = "0x6000339")]
		[Address(RVA = "0x156999C", Offset = "0x156999C", VA = "0x156999C")]
		public Hierarchy()
		{
		}
	}
	[Token(Token = "0x2000079")]
	public class InspectorComment : PropertyAttribute
	{
		[Token(Token = "0x4000368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4000369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string color;

		[Token(Token = "0x600033A")]
		[Address(RVA = "0xB0BEB4", Offset = "0xB0BEB4", VA = "0xB0BEB4")]
		public InspectorComment(string name)
		{
		}

		[Token(Token = "0x600033B")]
		[Address(RVA = "0xB0BF20", Offset = "0xB0BF20", VA = "0xB0BF20")]
		public InspectorComment(string name, string color)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200007A")]
	public enum InterpolationMode
	{
		[Token(Token = "0x400036B")]
		None,
		[Token(Token = "0x400036C")]
		InOutCubic,
		[Token(Token = "0x400036D")]
		InOutQuintic,
		[Token(Token = "0x400036E")]
		InOutSine,
		[Token(Token = "0x400036F")]
		InQuintic,
		[Token(Token = "0x4000370")]
		InQuartic,
		[Token(Token = "0x4000371")]
		InCubic,
		[Token(Token = "0x4000372")]
		InQuadratic,
		[Token(Token = "0x4000373")]
		InElastic,
		[Token(Token = "0x4000374")]
		InElasticSmall,
		[Token(Token = "0x4000375")]
		InElasticBig,
		[Token(Token = "0x4000376")]
		InSine,
		[Token(Token = "0x4000377")]
		InBack,
		[Token(Token = "0x4000378")]
		OutQuintic,
		[Token(Token = "0x4000379")]
		OutQuartic,
		[Token(Token = "0x400037A")]
		OutCubic,
		[Token(Token = "0x400037B")]
		OutInCubic,
		[Token(Token = "0x400037C")]
		OutInQuartic,
		[Token(Token = "0x400037D")]
		OutElastic,
		[Token(Token = "0x400037E")]
		OutElasticSmall,
		[Token(Token = "0x400037F")]
		OutElasticBig,
		[Token(Token = "0x4000380")]
		OutSine,
		[Token(Token = "0x4000381")]
		OutBack,
		[Token(Token = "0x4000382")]
		OutBackCubic,
		[Token(Token = "0x4000383")]
		OutBackQuartic,
		[Token(Token = "0x4000384")]
		BackInCubic,
		[Token(Token = "0x4000385")]
		BackInQuartic
	}
	[Token(Token = "0x200007B")]
	public class Interp
	{
		[Token(Token = "0x600033C")]
		[Address(RVA = "0xB0EAC4", Offset = "0xB0EAC4", VA = "0xB0EAC4")]
		public static float Float(float t, InterpolationMode mode)
		{
			return default(float);
		}

		[Token(Token = "0x600033D")]
		[Address(RVA = "0xB14314", Offset = "0xB14314", VA = "0xB14314")]
		public static Vector3 V3(Vector3 v1, Vector3 v2, float t, InterpolationMode mode)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600033E")]
		[Address(RVA = "0xB14388", Offset = "0xB14388", VA = "0xB14388")]
		public static float LerpValue(float value, float target, float increaseSpeed, float decreaseSpeed)
		{
			return default(float);
		}

		[Token(Token = "0x600033F")]
		[Address(RVA = "0xB13D7C", Offset = "0xB13D7C", VA = "0xB13D7C")]
		private static float None(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000340")]
		[Address(RVA = "0xB13D88", Offset = "0xB13D88", VA = "0xB13D88")]
		private static float InOutCubic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000341")]
		[Address(RVA = "0xB13DAC", Offset = "0xB13DAC", VA = "0xB13DAC")]
		private static float InOutQuintic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000342")]
		[Address(RVA = "0xB13DE8", Offset = "0xB13DE8", VA = "0xB13DE8")]
		private static float InQuintic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000343")]
		[Address(RVA = "0xB13E00", Offset = "0xB13E00", VA = "0xB13E00")]
		private static float InQuartic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000344")]
		[Address(RVA = "0xB13E14", Offset = "0xB13E14", VA = "0xB13E14")]
		private static float InCubic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000345")]
		[Address(RVA = "0xB13E28", Offset = "0xB13E28", VA = "0xB13E28")]
		private static float InQuadratic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000346")]
		[Address(RVA = "0xB13E38", Offset = "0xB13E38", VA = "0xB13E38")]
		private static float OutQuintic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000347")]
		[Address(RVA = "0xB13E80", Offset = "0xB13E80", VA = "0xB13E80")]
		private static float OutQuartic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000348")]
		[Address(RVA = "0xB13EB8", Offset = "0xB13EB8", VA = "0xB13EB8")]
		private static float OutCubic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000349")]
		[Address(RVA = "0xB13EE0", Offset = "0xB13EE0", VA = "0xB13EE0")]
		private static float OutInCubic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x600034A")]
		[Address(RVA = "0xB14414", Offset = "0xB14414", VA = "0xB14414")]
		private static float OutInQuartic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x600034B")]
		[Address(RVA = "0xB13F14", Offset = "0xB13F14", VA = "0xB13F14")]
		private static float BackInCubic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x600034C")]
		[Address(RVA = "0xB13F3C", Offset = "0xB13F3C", VA = "0xB13F3C")]
		private static float BackInQuartic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x600034D")]
		[Address(RVA = "0xB13F6C", Offset = "0xB13F6C", VA = "0xB13F6C")]
		private static float OutBackCubic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x600034E")]
		[Address(RVA = "0xB13FA0", Offset = "0xB13FA0", VA = "0xB13FA0")]
		private static float OutBackQuartic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x600034F")]
		[Address(RVA = "0xB13FE4", Offset = "0xB13FE4", VA = "0xB13FE4")]
		private static float OutElasticSmall(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000350")]
		[Address(RVA = "0xB14048", Offset = "0xB14048", VA = "0xB14048")]
		private static float OutElasticBig(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000351")]
		[Address(RVA = "0xB140AC", Offset = "0xB140AC", VA = "0xB140AC")]
		private static float InElasticSmall(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000352")]
		[Address(RVA = "0xB14100", Offset = "0xB14100", VA = "0xB14100")]
		private static float InElasticBig(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000353")]
		[Address(RVA = "0xB14154", Offset = "0xB14154", VA = "0xB14154")]
		private static float InSine(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000354")]
		[Address(RVA = "0xB14190", Offset = "0xB14190", VA = "0xB14190")]
		private static float OutSine(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000355")]
		[Address(RVA = "0xB141C8", Offset = "0xB141C8", VA = "0xB141C8")]
		private static float InOutSine(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000356")]
		[Address(RVA = "0xB14448", Offset = "0xB14448", VA = "0xB14448")]
		private static float InElastic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000357")]
		[Address(RVA = "0xB14210", Offset = "0xB14210", VA = "0xB14210")]
		private static float OutElastic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000358")]
		[Address(RVA = "0xB142A4", Offset = "0xB142A4", VA = "0xB142A4")]
		private static float InBack(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000359")]
		[Address(RVA = "0xB142D4", Offset = "0xB142D4", VA = "0xB142D4")]
		private static float OutBack(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x600035A")]
		[Address(RVA = "0xB144DC", Offset = "0xB144DC", VA = "0xB144DC")]
		public Interp()
		{
		}
	}
	[Token(Token = "0x200007C")]
	public class LargeHeader : PropertyAttribute
	{
		[Token(Token = "0x4000386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4000387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string color;

		[Token(Token = "0x600035B")]
		[Address(RVA = "0xB1549C", Offset = "0xB1549C", VA = "0xB1549C")]
		public LargeHeader(string name)
		{
		}

		[Token(Token = "0x600035C")]
		[Address(RVA = "0xB15508", Offset = "0xB15508", VA = "0xB15508")]
		public LargeHeader(string name, string color)
		{
		}
	}
	[Token(Token = "0x200007D")]
	public static class LayerMaskExtensions
	{
		[Token(Token = "0x600035D")]
		[Address(RVA = "0xB15588", Offset = "0xB15588", VA = "0xB15588")]
		public static bool Contains(LayerMask mask, int layer)
		{
			return default(bool);
		}

		[Token(Token = "0x600035E")]
		[Address(RVA = "0xB155E0", Offset = "0xB155E0", VA = "0xB155E0")]
		public static LayerMask Create(params string[] layerNames)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x600035F")]
		[Address(RVA = "0xB156AC", Offset = "0xB156AC", VA = "0xB156AC")]
		public static LayerMask Create(params int[] layerNumbers)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x6000360")]
		[Address(RVA = "0xB155F8", Offset = "0xB155F8", VA = "0xB155F8")]
		public static LayerMask NamesToMask(params string[] layerNames)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x6000361")]
		[Address(RVA = "0xB156C4", Offset = "0xB156C4", VA = "0xB156C4")]
		public static LayerMask LayerNumbersToMask(params int[] layerNumbers)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x6000362")]
		[Address(RVA = "0xB15768", Offset = "0xB15768", VA = "0xB15768")]
		public static LayerMask Inverse(this LayerMask original)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x6000363")]
		[Address(RVA = "0xB15794", Offset = "0xB15794", VA = "0xB15794")]
		public static LayerMask AddToMask(this LayerMask original, params string[] layerNames)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x6000364")]
		[Address(RVA = "0xB157E4", Offset = "0xB157E4", VA = "0xB157E4")]
		public static LayerMask RemoveFromMask(this LayerMask original, params string[] layerNames)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x6000365")]
		[Address(RVA = "0xB15850", Offset = "0xB15850", VA = "0xB15850")]
		public static string[] MaskToNames(this LayerMask original)
		{
			return null;
		}

		[Token(Token = "0x6000366")]
		[Address(RVA = "0xB15964", Offset = "0xB15964", VA = "0xB15964")]
		public static int[] MaskToNumbers(this LayerMask original)
		{
			return null;
		}

		[Token(Token = "0x6000367")]
		[Address(RVA = "0xB15A5C", Offset = "0xB15A5C", VA = "0xB15A5C")]
		public static string MaskToString(this LayerMask original)
		{
			return null;
		}

		[Token(Token = "0x6000368")]
		[Address(RVA = "0xB15AB8", Offset = "0xB15AB8", VA = "0xB15AB8")]
		public static string MaskToString(this LayerMask original, string delimiter)
		{
			return null;
		}
	}
	[Token(Token = "0x200007E")]
	public static class QuaTools
	{
		[Token(Token = "0x6000369")]
		[Address(RVA = "0xE5A7D8", Offset = "0xE5A7D8", VA = "0xE5A7D8")]
		public static Quaternion Lerp(Quaternion fromRotation, Quaternion toRotation, float weight)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600036A")]
		[Address(RVA = "0xE5A828", Offset = "0xE5A828", VA = "0xE5A828")]
		public static Quaternion Slerp(Quaternion fromRotation, Quaternion toRotation, float weight)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600036B")]
		[Address(RVA = "0xE5A878", Offset = "0xE5A878", VA = "0xE5A878")]
		public static Quaternion LinearBlend(Quaternion q, float weight)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600036C")]
		[Address(RVA = "0xE5A920", Offset = "0xE5A920", VA = "0xE5A920")]
		public static Quaternion SphericalBlend(Quaternion q, float weight)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600036D")]
		[Address(RVA = "0xE5A9C8", Offset = "0xE5A9C8", VA = "0xE5A9C8")]
		public static Quaternion FromToAroundAxis(Vector3 fromDirection, Vector3 toDirection, Vector3 axis)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600036E")]
		[Address(RVA = "0xE5AAA8", Offset = "0xE5AAA8", VA = "0xE5AAA8")]
		public static Quaternion RotationToLocalSpace(Quaternion space, Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600036F")]
		[Address(RVA = "0xE5AAFC", Offset = "0xE5AAFC", VA = "0xE5AAFC")]
		public static Quaternion FromToRotation(Quaternion from, Quaternion to)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000370")]
		[Address(RVA = "0xE5ABD0", Offset = "0xE5ABD0", VA = "0xE5ABD0")]
		public static Vector3 GetAxis(Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000371")]
		[Address(RVA = "0xE5ACE0", Offset = "0xE5ACE0", VA = "0xE5ACE0")]
		public static Quaternion ClampRotation(Quaternion rotation, float clampWeight, int clampSmoothing)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000372")]
		[Address(RVA = "0xE5AE70", Offset = "0xE5AE70", VA = "0xE5AE70")]
		public static float ClampAngle(float angle, float clampWeight, int clampSmoothing)
		{
			return default(float);
		}

		[Token(Token = "0x6000373")]
		[Address(RVA = "0xE5AF64", Offset = "0xE5AF64", VA = "0xE5AF64")]
		public static Quaternion MatchRotation(Quaternion targetRotation, Vector3 targetforwardAxis, Vector3 targetUpAxis, Vector3 forwardAxis, Vector3 upAxis)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000374")]
		[Address(RVA = "0xE5B070", Offset = "0xE5B070", VA = "0xE5B070")]
		public static Vector3 ToBiPolar(Vector3 euler)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000375")]
		[Address(RVA = "0xE5B15C", Offset = "0xE5B15C", VA = "0xE5B15C")]
		public static float ToBiPolar(float angle)
		{
			return default(float);
		}
	}
	[Token(Token = "0x200007F")]
	public abstract class Singleton<T> : MonoBehaviour where T : Singleton<T>
	{
		[Token(Token = "0x4000388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static T sInstance;

		[Token(Token = "0x1700003D")]
		public static T instance
		{
			[Token(Token = "0x6000376")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000377")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000378")]
		protected Singleton()
		{
		}
	}
	[Token(Token = "0x2000080")]
	public class SolverManager : MonoBehaviour
	{
		[Token(Token = "0x4000389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CEE7C", Offset = "0x8CEE7C")]
		public bool fixTransforms;

		[Token(Token = "0x400038A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Animator animator;

		[Token(Token = "0x400038B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Animation legacy;

		[Token(Token = "0x400038C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool updateFrame;

		[Token(Token = "0x400038D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool componentInitiated;

		[Token(Token = "0x400038E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		private bool skipSolverUpdate;

		[Token(Token = "0x1700003E")]
		private bool animatePhysics
		{
			[Token(Token = "0x6000380")]
			[Address(RVA = "0xDFF10C", Offset = "0xDFF10C", VA = "0xDFF10C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700003F")]
		private bool isAnimated
		{
			[Token(Token = "0x6000384")]
			[Address(RVA = "0xDFF418", Offset = "0xDFF418", VA = "0xDFF418")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600037A")]
		[Address(RVA = "0xDFEFCC", Offset = "0xDFEFCC", VA = "0xDFEFCC")]
		public void Disable()
		{
		}

		[Token(Token = "0x600037B")]
		[Address(RVA = "0xDFF06C", Offset = "0xDFF06C", VA = "0xDFF06C", Slot = "4")]
		protected virtual void InitiateSolver()
		{
		}

		[Token(Token = "0x600037C")]
		[Address(RVA = "0xDFF070", Offset = "0xDFF070", VA = "0xDFF070", Slot = "5")]
		protected virtual void UpdateSolver()
		{
		}

		[Token(Token = "0x600037D")]
		[Address(RVA = "0xDFF074", Offset = "0xDFF074", VA = "0xDFF074", Slot = "6")]
		protected virtual void FixTransforms()
		{
		}

		[Token(Token = "0x600037E")]
		[Address(RVA = "0xDFF078", Offset = "0xDFF078", VA = "0xDFF078")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600037F")]
		[Address(RVA = "0xDFF108", Offset = "0xDFF108", VA = "0xDFF108")]
		private void Start()
		{
		}

		[Token(Token = "0x6000381")]
		[Address(RVA = "0xDFF0B0", Offset = "0xDFF0B0", VA = "0xDFF0B0")]
		private void Initiate()
		{
		}

		[Token(Token = "0x6000382")]
		[Address(RVA = "0xDFF3CC", Offset = "0xDFF3CC", VA = "0xDFF3CC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000383")]
		[Address(RVA = "0xDFF1F8", Offset = "0xDFF1F8", VA = "0xDFF1F8")]
		private void FindAnimatorRecursive(Transform t, bool findInChildren)
		{
		}

		[Token(Token = "0x6000385")]
		[Address(RVA = "0xDFF4D0", Offset = "0xDFF4D0", VA = "0xDFF4D0")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000386")]
		[Address(RVA = "0xDFF52C", Offset = "0xDFF52C", VA = "0xDFF52C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000387")]
		[Address(RVA = "0xDFF588", Offset = "0xDFF588", VA = "0xDFF588")]
		public void UpdateSolverExternal()
		{
		}

		[Token(Token = "0x6000388")]
		[Address(RVA = "0xDFF5D0", Offset = "0xDFF5D0", VA = "0xDFF5D0")]
		public SolverManager()
		{
		}
	}
	[Token(Token = "0x2000081")]
	public class TriggerEventBroadcaster : MonoBehaviour
	{
		[Token(Token = "0x400038F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject target;

		[Token(Token = "0x6000389")]
		[Address(RVA = "0x114761C", Offset = "0x114761C", VA = "0x114761C")]
		private void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x600038A")]
		[Address(RVA = "0x11476DC", Offset = "0x11476DC", VA = "0x11476DC")]
		private void OnTriggerStay(Collider collider)
		{
		}

		[Token(Token = "0x600038B")]
		[Address(RVA = "0x114779C", Offset = "0x114779C", VA = "0x114779C")]
		private void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x600038C")]
		[Address(RVA = "0x114785C", Offset = "0x114785C", VA = "0x114785C")]
		public TriggerEventBroadcaster()
		{
		}
	}
	[Token(Token = "0x2000082")]
	public static class V3Tools
	{
		[Token(Token = "0x600038D")]
		[Address(RVA = "0xC0ABEC", Offset = "0xC0ABEC", VA = "0xC0ABEC")]
		public static Vector3 Lerp(Vector3 fromVector, Vector3 toVector, float weight)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600038E")]
		[Address(RVA = "0xC0AC8C", Offset = "0xC0AC8C", VA = "0xC0AC8C")]
		public static Vector3 Slerp(Vector3 fromVector, Vector3 toVector, float weight)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600038F")]
		[Address(RVA = "0xC0ACC8", Offset = "0xC0ACC8", VA = "0xC0ACC8")]
		public static Vector3 ExtractVertical(Vector3 v, Vector3 verticalAxis, float weight)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000390")]
		[Address(RVA = "0xC0AD0C", Offset = "0xC0AD0C", VA = "0xC0AD0C")]
		public static Vector3 ExtractHorizontal(Vector3 v, Vector3 normal, float weight)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000391")]
		[Address(RVA = "0xC0ADA8", Offset = "0xC0ADA8", VA = "0xC0ADA8")]
		public static Vector3 ClampDirection(Vector3 direction, Vector3 normalDirection, float clampWeight, int clampSmoothing)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000392")]
		[Address(RVA = "0xC0AF04", Offset = "0xC0AF04", VA = "0xC0AF04")]
		public static Vector3 ClampDirection(Vector3 direction, Vector3 normalDirection, float clampWeight, int clampSmoothing, out bool changed)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000393")]
		[Address(RVA = "0xC0B080", Offset = "0xC0B080", VA = "0xC0B080")]
		public static Vector3 ClampDirection(Vector3 direction, Vector3 normalDirection, float clampWeight, int clampSmoothing, out float clampValue)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000394")]
		[Address(RVA = "0xC0B204", Offset = "0xC0B204", VA = "0xC0B204")]
		public static Vector3 LineToPlane(Vector3 origin, Vector3 direction, Vector3 planeNormal, Vector3 planePoint)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000395")]
		[Address(RVA = "0xC0B2C0", Offset = "0xC0B2C0", VA = "0xC0B2C0")]
		public static Vector3 PointToPlane(Vector3 point, Vector3 planePosition, Vector3 planeNormal)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000396")]
		[Address(RVA = "0xC0B3C0", Offset = "0xC0B3C0", VA = "0xC0B3C0")]
		public static Vector3 TransformPointUnscaled(Transform t, Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000397")]
		[Address(RVA = "0xC0B448", Offset = "0xC0B448", VA = "0xC0B448")]
		public static Vector3 InverseTransformPointUnscaled(Transform t, Vector3 point)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x2000083")]
	public static class Warning
	{
		[Token(Token = "0x2000084")]
		public delegate void Logger(string message);

		[Token(Token = "0x4000390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool logged;

		[Token(Token = "0x6000398")]
		[Address(RVA = "0xC10D98", Offset = "0xC10D98", VA = "0xC10D98")]
		public static void Log(string message, Logger logger, bool logInEditMode = false)
		{
		}

		[Token(Token = "0x6000399")]
		[Address(RVA = "0xC10E30", Offset = "0xC10E30", VA = "0xC10E30")]
		public static void Log(string message, Transform context, bool logInEditMode = false)
		{
		}
	}
}
namespace RootMotion.Dynamics
{
	[Token(Token = "0x2000085")]
	public class AnimationBlocker : MonoBehaviour
	{
		[Token(Token = "0x600039E")]
		[Address(RVA = "0xD69300", Offset = "0xD69300", VA = "0xD69300")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600039F")]
		[Address(RVA = "0xD69368", Offset = "0xD69368", VA = "0xD69368")]
		public AnimationBlocker()
		{
		}
	}
	[Token(Token = "0x2000086")]
	public abstract class BehaviourBase : MonoBehaviour
	{
		[Token(Token = "0x2000087")]
		public delegate void BehaviourDelegate();

		[Token(Token = "0x2000088")]
		public delegate void HitDelegate(MuscleHit hit);

		[Token(Token = "0x2000089")]
		public delegate void CollisionDelegate(MuscleCollision collision);

		[Serializable]
		[Token(Token = "0x200008A")]
		public struct PuppetEvent
		{
			[Token(Token = "0x40003AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CEEE4", Offset = "0x8CEEE4")]
			public string switchToBehaviour;

			[Token(Token = "0x40003B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CEF1C", Offset = "0x8CEF1C")]
			public AnimatorEvent[] animations;

			[Token(Token = "0x40003B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CEF54", Offset = "0x8CEF54")]
			public UnityEvent unityEvent;

			[Token(Token = "0x40003B2")]
			private const string empty = "";

			[Token(Token = "0x17000041")]
			public bool switchBehaviour
			{
				[Token(Token = "0x60003DA")]
				[Address(RVA = "0xC15A68", Offset = "0xC15A68", VA = "0xC15A68")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x60003DB")]
			[Address(RVA = "0xC15AF8", Offset = "0xC15AF8", VA = "0xC15AF8")]
			public void Trigger(PuppetMaster puppetMaster, bool switchBehaviourEnabled = true)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200008B")]
		public class AnimatorEvent
		{
			[Token(Token = "0x40003B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string animationState;

			[Token(Token = "0x40003B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float crossfadeTime;

			[Token(Token = "0x40003B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int layer;

			[Token(Token = "0x40003B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool resetNormalizedTime;

			[Token(Token = "0x40003B7")]
			private const string empty = "";

			[Token(Token = "0x60003DC")]
			[Address(RVA = "0xC14E50", Offset = "0xC14E50", VA = "0xC14E50")]
			public void Activate(Animator animator, Animation animation)
			{
			}

			[Token(Token = "0x60003DD")]
			[Address(RVA = "0xC14F20", Offset = "0xC14F20", VA = "0xC14F20")]
			private void Activate(Animator animator)
			{
			}

			[Token(Token = "0x60003DE")]
			[Address(RVA = "0xC15020", Offset = "0xC15020", VA = "0xC15020")]
			private void Activate(Animation animation)
			{
			}

			[Token(Token = "0x60003DF")]
			[Address(RVA = "0xC150FC", Offset = "0xC150FC", VA = "0xC150FC")]
			public AnimatorEvent()
			{
			}
		}

		[Token(Token = "0x4000391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public PuppetMaster puppetMaster;

		[Token(Token = "0x4000392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BehaviourDelegate OnPreActivate;

		[Token(Token = "0x4000393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BehaviourDelegate OnPreInitiate;

		[Token(Token = "0x4000394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public BehaviourDelegate OnPreFixedUpdate;

		[Token(Token = "0x4000395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public BehaviourDelegate OnPreUpdate;

		[Token(Token = "0x4000396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public BehaviourDelegate OnPreLateUpdate;

		[Token(Token = "0x4000397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public BehaviourDelegate OnPreDeactivate;

		[Token(Token = "0x4000398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public BehaviourDelegate OnPreFixTransforms;

		[Token(Token = "0x4000399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public BehaviourDelegate OnPreRead;

		[Token(Token = "0x400039A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public BehaviourDelegate OnPreWrite;

		[Token(Token = "0x400039B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public HitDelegate OnPreMuscleHit;

		[Token(Token = "0x400039C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public CollisionDelegate OnPreMuscleCollision;

		[Token(Token = "0x400039D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public CollisionDelegate OnPreMuscleCollisionExit;

		[Token(Token = "0x400039E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BehaviourDelegate OnHierarchyChanged;

		[Token(Token = "0x400039F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public BehaviourDelegate OnPostActivate;

		[Token(Token = "0x40003A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public BehaviourDelegate OnPostInitiate;

		[Token(Token = "0x40003A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public BehaviourDelegate OnPostFixedUpdate;

		[Token(Token = "0x40003A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public BehaviourDelegate OnPostUpdate;

		[Token(Token = "0x40003A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public BehaviourDelegate OnPostLateUpdate;

		[Token(Token = "0x40003A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public BehaviourDelegate OnPostDeactivate;

		[Token(Token = "0x40003A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public BehaviourDelegate OnPostDrawGizmos;

		[Token(Token = "0x40003A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public BehaviourDelegate OnPostFixTransforms;

		[Token(Token = "0x40003A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public BehaviourDelegate OnPostRead;

		[Token(Token = "0x40003A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public BehaviourDelegate OnPostWrite;

		[Token(Token = "0x40003A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public HitDelegate OnPostMuscleHit;

		[Token(Token = "0x40003AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public CollisionDelegate OnPostMuscleCollision;

		[Token(Token = "0x40003AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public CollisionDelegate OnPostMuscleCollisionExit;

		[Token(Token = "0x40003AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[HideInInspector]
		public bool deactivated;

		[Token(Token = "0x40003AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CEED4", Offset = "0x8CEED4")]
		private bool <forceActive>k__BackingField;

		[Token(Token = "0x40003AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF2")]
		private bool initiated;

		[Token(Token = "0x17000040")]
		public bool forceActive
		{
			[Token(Token = "0x60003B8")]
			[Address(RVA = "0xD757B4", Offset = "0xD757B4", VA = "0xD757B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DD0D4", Offset = "0x8DD0D4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60003B9")]
			[Address(RVA = "0xD757BC", Offset = "0xD757BC", VA = "0xD757BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DD0E4", Offset = "0x8DD0E4")]
			protected set
			{
			}
		}

		[Token(Token = "0x60003A0")]
		public abstract void OnReactivate();

		[Token(Token = "0x60003A1")]
		[Address(RVA = "0xD75738", Offset = "0xD75738", VA = "0xD75738", Slot = "5")]
		public virtual void Resurrect()
		{
		}

		[Token(Token = "0x60003A2")]
		[Address(RVA = "0xD7573C", Offset = "0xD7573C", VA = "0xD7573C", Slot = "6")]
		public virtual void Freeze()
		{
		}

		[Token(Token = "0x60003A3")]
		[Address(RVA = "0xD75740", Offset = "0xD75740", VA = "0xD75740", Slot = "7")]
		public virtual void Unfreeze()
		{
		}

		[Token(Token = "0x60003A4")]
		[Address(RVA = "0xD75744", Offset = "0xD75744", VA = "0xD75744", Slot = "8")]
		public virtual void KillStart()
		{
		}

		[Token(Token = "0x60003A5")]
		[Address(RVA = "0xD75748", Offset = "0xD75748", VA = "0xD75748", Slot = "9")]
		public virtual void KillEnd()
		{
		}

		[Token(Token = "0x60003A6")]
		[Address(RVA = "0xD7574C", Offset = "0xD7574C", VA = "0xD7574C", Slot = "10")]
		public virtual void OnTeleport(Quaternion deltaRotation, Vector3 deltaPosition, Vector3 pivot, bool moveToTarget)
		{
		}

		[Token(Token = "0x60003A7")]
		[Address(RVA = "0xD75750", Offset = "0xD75750", VA = "0xD75750", Slot = "11")]
		public virtual void OnMuscleDisconnected(Muscle m)
		{
		}

		[Token(Token = "0x60003A8")]
		[Address(RVA = "0xD75754", Offset = "0xD75754", VA = "0xD75754", Slot = "12")]
		public virtual void OnMuscleReconnected(Muscle m)
		{
		}

		[Token(Token = "0x60003A9")]
		[Address(RVA = "0xD75758", Offset = "0xD75758", VA = "0xD75758", Slot = "13")]
		public virtual void OnMuscleAdded(Muscle m)
		{
		}

		[Token(Token = "0x60003AA")]
		[Address(RVA = "0xD7576C", Offset = "0xD7576C", VA = "0xD7576C", Slot = "14")]
		public virtual void OnMuscleRemoved(Muscle m)
		{
		}

		[Token(Token = "0x60003AB")]
		[Address(RVA = "0xD75780", Offset = "0xD75780", VA = "0xD75780", Slot = "15")]
		protected virtual void OnActivate()
		{
		}

		[Token(Token = "0x60003AC")]
		[Address(RVA = "0xD75784", Offset = "0xD75784", VA = "0xD75784", Slot = "16")]
		protected virtual void OnDeactivate()
		{
		}

		[Token(Token = "0x60003AD")]
		[Address(RVA = "0xD75788", Offset = "0xD75788", VA = "0xD75788", Slot = "17")]
		protected virtual void OnInitiate()
		{
		}

		[Token(Token = "0x60003AE")]
		[Address(RVA = "0xD7578C", Offset = "0xD7578C", VA = "0xD7578C", Slot = "18")]
		protected virtual void OnFixedUpdate()
		{
		}

		[Token(Token = "0x60003AF")]
		[Address(RVA = "0xD75790", Offset = "0xD75790", VA = "0xD75790", Slot = "19")]
		protected virtual void OnUpdate()
		{
		}

		[Token(Token = "0x60003B0")]
		[Address(RVA = "0xD75794", Offset = "0xD75794", VA = "0xD75794", Slot = "20")]
		protected virtual void OnLateUpdate()
		{
		}

		[Token(Token = "0x60003B1")]
		[Address(RVA = "0xD75798", Offset = "0xD75798", VA = "0xD75798", Slot = "21")]
		protected virtual void OnDrawGizmosBehaviour()
		{
		}

		[Token(Token = "0x60003B2")]
		[Address(RVA = "0xD7579C", Offset = "0xD7579C", VA = "0xD7579C", Slot = "22")]
		protected virtual void OnFixTransformsBehaviour()
		{
		}

		[Token(Token = "0x60003B3")]
		[Address(RVA = "0xD757A0", Offset = "0xD757A0", VA = "0xD757A0", Slot = "23")]
		protected virtual void OnReadBehaviour()
		{
		}

		[Token(Token = "0x60003B4")]
		[Address(RVA = "0xD757A4", Offset = "0xD757A4", VA = "0xD757A4", Slot = "24")]
		protected virtual void OnWriteBehaviour()
		{
		}

		[Token(Token = "0x60003B5")]
		[Address(RVA = "0xD757A8", Offset = "0xD757A8", VA = "0xD757A8", Slot = "25")]
		protected virtual void OnMuscleHitBehaviour(MuscleHit hit)
		{
		}

		[Token(Token = "0x60003B6")]
		[Address(RVA = "0xD757AC", Offset = "0xD757AC", VA = "0xD757AC", Slot = "26")]
		protected virtual void OnMuscleCollisionBehaviour(MuscleCollision collision)
		{
		}

		[Token(Token = "0x60003B7")]
		[Address(RVA = "0xD757B0", Offset = "0xD757B0", VA = "0xD757B0", Slot = "27")]
		protected virtual void OnMuscleCollisionExitBehaviour(MuscleCollision collision)
		{
		}

		[Token(Token = "0x60003BA")]
		[Address(RVA = "0xD757C8", Offset = "0xD757C8", VA = "0xD757C8")]
		public void Initiate()
		{
		}

		[Token(Token = "0x60003BB")]
		[Address(RVA = "0xD75828", Offset = "0xD75828", VA = "0xD75828")]
		public void OnFixTransforms()
		{
		}

		[Token(Token = "0x60003BC")]
		[Address(RVA = "0xD75894", Offset = "0xD75894", VA = "0xD75894")]
		public void OnRead()
		{
		}

		[Token(Token = "0x60003BD")]
		[Address(RVA = "0xD75900", Offset = "0xD75900", VA = "0xD75900")]
		public void OnWrite()
		{
		}

		[Token(Token = "0x60003BE")]
		[Address(RVA = "0xD7596C", Offset = "0xD7596C", VA = "0xD7596C")]
		public void OnMuscleHit(MuscleHit hit)
		{
		}

		[Token(Token = "0x60003BF")]
		[Address(RVA = "0xD759FC", Offset = "0xD759FC", VA = "0xD759FC")]
		public void OnMuscleCollision(MuscleCollision collision)
		{
		}

		[Token(Token = "0x60003C0")]
		[Address(RVA = "0xD75AAC", Offset = "0xD75AAC", VA = "0xD75AAC")]
		public void OnMuscleCollisionExit(MuscleCollision collision)
		{
		}

		[Token(Token = "0x60003C1")]
		[Address(RVA = "0xD75B5C", Offset = "0xD75B5C", VA = "0xD75B5C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60003C2")]
		[Address(RVA = "0xD75B6C", Offset = "0xD75B6C", VA = "0xD75B6C")]
		public void Activate()
		{
		}

		[Token(Token = "0x60003C3")]
		[Address(RVA = "0xD75C90", Offset = "0xD75C90", VA = "0xD75C90")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60003C4")]
		[Address(RVA = "0xD75CE8", Offset = "0xD75CE8", VA = "0xD75CE8")]
		public void FixedUpdateB()
		{
		}

		[Token(Token = "0x60003C5")]
		[Address(RVA = "0xD75DA0", Offset = "0xD75DA0", VA = "0xD75DA0")]
		public void UpdateB()
		{
		}

		[Token(Token = "0x60003C6")]
		[Address(RVA = "0xD75E58", Offset = "0xD75E58", VA = "0xD75E58")]
		public void LateUpdateB()
		{
		}

		[Token(Token = "0x60003C7")]
		[Address(RVA = "0xD75F10", Offset = "0xD75F10", VA = "0xD75F10", Slot = "28")]
		protected virtual void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60003C8")]
		[Address(RVA = "0xD75F54", Offset = "0xD75F54", VA = "0xD75F54")]
		protected void RotateTargetToRootMuscle()
		{
		}

		[Token(Token = "0x60003C9")]
		[Address(RVA = "0xD76088", Offset = "0xD76088", VA = "0xD76088")]
		protected void TranslateTargetToRootMuscle(float maintainY)
		{
		}

		[Token(Token = "0x60003CA")]
		[Address(RVA = "0xD761BC", Offset = "0xD761BC", VA = "0xD761BC")]
		protected void RemovePropMuscles()
		{
		}

		[Token(Token = "0x60003CB")]
		[Address(RVA = "0xD762F0", Offset = "0xD762F0", VA = "0xD762F0", Slot = "29")]
		protected virtual void GroundTarget(LayerMask layers)
		{
		}

		[Token(Token = "0x60003CC")]
		[Address(RVA = "0xD76268", Offset = "0xD76268", VA = "0xD76268")]
		protected bool ContainsRemovablePropMuscle()
		{
			return default(bool);
		}

		[Token(Token = "0x60003CD")]
		[Address(RVA = "0xD764FC", Offset = "0xD764FC", VA = "0xD764FC")]
		protected BehaviourBase()
		{
		}
	}
	[Token(Token = "0x200008C")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x8CB32C", Offset = "0x8CB32C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8CB32C", Offset = "0x8CB32C")]
	public class BehaviourFall : BehaviourBase
	{
		[Token(Token = "0x200008D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB38C", Offset = "0x8CB38C")]
		private sealed class <SmoothActivate>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40003C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40003C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40003CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public BehaviourFall <>4__this;

			[Token(Token = "0x40003CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <fader>5__2;

			[Token(Token = "0x17000042")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60003F0")]
				[Address(RVA = "0xC15F70", Offset = "0xC15F70", VA = "0xC15F70", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000043")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60003F2")]
				[Address(RVA = "0xC15FB8", Offset = "0xC15FB8", VA = "0xC15FB8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60003ED")]
			[Address(RVA = "0xC15D60", Offset = "0xC15D60", VA = "0xC15D60")]
			[DebuggerHidden]
			public <SmoothActivate>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x60003EE")]
			[Address(RVA = "0xC15D8C", Offset = "0xC15D8C", VA = "0xC15D8C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60003EF")]
			[Address(RVA = "0xC15D90", Offset = "0xC15D90", VA = "0xC15D90", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60003F1")]
			[Address(RVA = "0xC15F78", Offset = "0xC15F78", VA = "0xC15F78", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40003B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CEF8C", Offset = "0x8CEF8C")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x8CEF8C", Offset = "0x8CEF8C")]
		public string stateName;

		[Token(Token = "0x40003B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CEFEC", Offset = "0x8CEFEC")]
		public float transitionDuration;

		[Token(Token = "0x40003BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CF024", Offset = "0x8CF024")]
		public int layer;

		[Token(Token = "0x40003BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CF05C", Offset = "0x8CF05C")]
		public float fixedTime;

		[Token(Token = "0x40003BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x8CF094", Offset = "0x8CF094")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CF094", Offset = "0x8CF094")]
		public LayerMask raycastLayers;

		[Token(Token = "0x40003BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CF0F4", Offset = "0x8CF0F4")]
		public string blendParameter;

		[Token(Token = "0x40003BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CF12C", Offset = "0x8CF12C")]
		public float writheHeight;

		[Token(Token = "0x40003BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CF164", Offset = "0x8CF164")]
		public float writheYVelocity;

		[Token(Token = "0x40003C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CF19C", Offset = "0x8CF19C")]
		public float blendSpeed;

		[Token(Token = "0x40003C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CF1D4", Offset = "0x8CF1D4")]
		public float blendMappingSpeed;

		[Token(Token = "0x40003C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x8CF20C", Offset = "0x8CF20C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CF20C", Offset = "0x8CF20C")]
		public bool canEnd;

		[Token(Token = "0x40003C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CF26C", Offset = "0x8CF26C")]
		public float minTime;

		[Token(Token = "0x40003C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CF2A4", Offset = "0x8CF2A4")]
		public float maxEndVelocity;

		[Token(Token = "0x40003C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CF2DC", Offset = "0x8CF2DC")]
		public PuppetEvent onEnd;

		[Token(Token = "0x40003C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private float timer;

		[Token(Token = "0x40003C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		private bool endTriggered;

		[Token(Token = "0x60003E0")]
		[Address(RVA = "0xD76504", Offset = "0xD76504", VA = "0xD76504")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DD0F4", Offset = "0x8DD0F4")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x60003E1")]
		[Address(RVA = "0xD7654C", Offset = "0xD7654C", VA = "0xD7654C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DD12C", Offset = "0x8DD12C")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x60003E2")]
		[Address(RVA = "0xD76594", Offset = "0xD76594", VA = "0xD76594", Slot = "15")]
		protected override void OnActivate()
		{
		}

		[Token(Token = "0x60003E3")]
		[Address(RVA = "0xD76640", Offset = "0xD76640", VA = "0xD76640", Slot = "16")]
		protected override void OnDeactivate()
		{
		}

		[Token(Token = "0x60003E4")]
		[Address(RVA = "0xD76648", Offset = "0xD76648", VA = "0xD76648", Slot = "4")]
		public override void OnReactivate()
		{
		}

		[Token(Token = "0x60003E5")]
		[Address(RVA = "0xD765D4", Offset = "0xD765D4", VA = "0xD765D4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DD164", Offset = "0x8DD164")]
		private IEnumerator SmoothActivate()
		{
			return null;
		}

		[Token(Token = "0x60003E6")]
		[Address(RVA = "0xD76654", Offset = "0xD76654", VA = "0xD76654", Slot = "18")]
		protected override void OnFixedUpdate()
		{
		}

		[Token(Token = "0x60003E7")]
		[Address(RVA = "0xD76AB8", Offset = "0xD76AB8", VA = "0xD76AB8", Slot = "20")]
		protected override void OnLateUpdate()
		{
		}

		[Token(Token = "0x60003E8")]
		[Address(RVA = "0xD76BC8", Offset = "0xD76BC8", VA = "0xD76BC8", Slot = "5")]
		public override void Resurrect()
		{
		}

		[Token(Token = "0x60003E9")]
		[Address(RVA = "0xD7696C", Offset = "0xD7696C", VA = "0xD7696C")]
		private float GetBlendTarget(float groundHeight)
		{
			return default(float);
		}

		[Token(Token = "0x60003EA")]
		[Address(RVA = "0xD76858", Offset = "0xD76858", VA = "0xD76858")]
		private float GetGroundHeight()
		{
			return default(float);
		}

		[Token(Token = "0x60003EB")]
		[Address(RVA = "0xD76C30", Offset = "0xD76C30", VA = "0xD76C30", Slot = "12")]
		public override void OnMuscleReconnected(Muscle m)
		{
		}

		[Token(Token = "0x60003EC")]
		[Address(RVA = "0xD76C58", Offset = "0xD76C58", VA = "0xD76C58")]
		public BehaviourFall()
		{
		}
	}
	[Token(Token = "0x200008E")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x8CB39C", Offset = "0x8CB39C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8CB39C", Offset = "0x8CB39C")]
	public class BehaviourPuppet : BehaviourBase
	{
		[Serializable]
		[Token(Token = "0x200008F")]
		public enum State
		{
			[Token(Token = "0x4000404")]
			Puppet,
			[Token(Token = "0x4000405")]
			Unpinned,
			[Token(Token = "0x4000406")]
			GetUp
		}

		[Serializable]
		[Token(Token = "0x2000090")]
		public enum NormalMode
		{
			[Token(Token = "0x4000408")]
			Active,
			[Token(Token = "0x4000409")]
			Unmapped,
			[Token(Token = "0x400040A")]
			Kinematic
		}

		[Serializable]
		[Token(Token = "0x2000091")]
		public class MasterProps
		{
			[Token(Token = "0x400040B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public NormalMode normalMode;

			[Token(Token = "0x400040C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float mappingBlendSpeed;

			[Token(Token = "0x400040D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool activateOnStaticCollisions;

			[Token(Token = "0x400040E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float activateOnImpulse;

			[Token(Token = "0x6000426")]
			[Address(RVA = "0xC163B4", Offset = "0xC163B4", VA = "0xC163B4")]
			public MasterProps()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000092")]
		public struct MuscleProps
		{
			[Token(Token = "0x400040F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8CFB64", Offset = "0x8CFB64")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CFB64", Offset = "0x8CFB64")]
			public float unpinParents;

			[Token(Token = "0x4000410")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CFBB8", Offset = "0x8CFBB8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8CFBB8", Offset = "0x8CFBB8")]
			public float unpinChildren;

			[Token(Token = "0x4000411")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CFC0C", Offset = "0x8CFC0C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8CFC0C", Offset = "0x8CFC0C")]
			public float unpinGroup;

			[Token(Token = "0x4000412")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CFC60", Offset = "0x8CFC60")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8CFC60", Offset = "0x8CFC60")]
			public float minMappingWeight;

			[Token(Token = "0x4000413")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CFCB4", Offset = "0x8CFCB4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8CFCB4", Offset = "0x8CFCB4")]
			public float maxMappingWeight;

			[Token(Token = "0x4000414")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CFD08", Offset = "0x8CFD08")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8CFD08", Offset = "0x8CFD08")]
			public float minPinWeight;

			[Token(Token = "0x4000415")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CFD5C", Offset = "0x8CFD5C")]
			public bool disableColliders;

			[Token(Token = "0x4000416")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CFD94", Offset = "0x8CFD94")]
			public float regainPinSpeed;

			[Token(Token = "0x4000417")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CFDCC", Offset = "0x8CFDCC")]
			public float collisionResistance;

			[Token(Token = "0x4000418")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CFE04", Offset = "0x8CFE04")]
			public float knockOutDistance;

			[Token(Token = "0x4000419")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CFE3C", Offset = "0x8CFE3C")]
			public PhysicMaterial puppetMaterial;

			[Token(Token = "0x400041A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CFE74", Offset = "0x8CFE74")]
			public PhysicMaterial unpinnedMaterial;
		}

		[Serializable]
		[Token(Token = "0x2000093")]
		public struct MusclePropsGroup
		{
			[Token(Token = "0x400041B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[HideInInspector]
			public string name;

			[Token(Token = "0x400041C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CFEBC", Offset = "0x8CFEBC")]
			public Muscle.Group[] groups;

			[Token(Token = "0x400041D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CFEF4", Offset = "0x8CFEF4")]
			public MuscleProps props;
		}

		[Serializable]
		[Token(Token = "0x2000094")]
		public struct CollisionResistanceMultiplier
		{
			[Token(Token = "0x400041E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public LayerMask layers;

			[Token(Token = "0x400041F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CFF2C", Offset = "0x8CFF2C")]
			public float multiplier;

			[Token(Token = "0x4000420")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CFF64", Offset = "0x8CFF64")]
			public float collisionThreshold;
		}

		[Token(Token = "0x2000095")]
		public delegate void CollisionImpulseDelegate(MuscleCollision m, float impulse);

		[Token(Token = "0x40003CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x8CF314", Offset = "0x8CF314")]
		public MasterProps masterProps;

		[Token(Token = "0x40003CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CF34C", Offset = "0x8CF34C")]
		public LayerMask groundLayers;

		[Token(Token = "0x40003CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CF384", Offset = "0x8CF384")]
		public LayerMask collisionLayers;

		[Token(Token = "0x40003CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CF3BC", Offset = "0x8CF3BC")]
		public float collisionThreshold;

		[Token(Token = "0x40003D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public Weight collisionResistance;

		[Token(Token = "0x40003D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CF3F4", Offset = "0x8CF3F4")]
		public CollisionResistanceMultiplier[] collisionResistanceMultipliers;

		[Token(Token = "0x40003D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8CF42C", Offset = "0x8CF42C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CF42C", Offset = "0x8CF42C")]
		public int maxCollisions;

		[Token(Token = "0x40003D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CF480", Offset = "0x8CF480")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8CF480", Offset = "0x8CF480")]
		public float regainPinSpeed;

		[Token(Token = "0x40003D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CF4D8", Offset = "0x8CF4D8")]
		public float boostFalloff;

		[Token(Token = "0x40003D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x8CF510", Offset = "0x8CF510")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CF510", Offset = "0x8CF510")]
		public MuscleProps defaults;

		[Token(Token = "0x40003D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CF570", Offset = "0x8CF570")]
		public MusclePropsGroup[] groupOverrides;

		[Token(Token = "0x40003D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8CF5A8", Offset = "0x8CF5A8")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x8CF5A8", Offset = "0x8CF5A8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CF5A8", Offset = "0x8CF5A8")]
		public float knockOutDistance;

		[Token(Token = "0x40003D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CF624", Offset = "0x8CF624")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8CF624", Offset = "0x8CF624")]
		public float unpinnedMuscleWeightMlp;

		[Token(Token = "0x40003D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CF678", Offset = "0x8CF678")]
		public float maxRigidbodyVelocity;

		[Token(Token = "0x40003DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8CF6B0", Offset = "0x8CF6B0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CF6B0", Offset = "0x8CF6B0")]
		public float pinWeightThreshold;

		[Token(Token = "0x40003DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CF704", Offset = "0x8CF704")]
		public bool unpinnedMuscleKnockout;

		[Token(Token = "0x40003DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x181")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CF73C", Offset = "0x8CF73C")]
		public bool dropProps;

		[Token(Token = "0x40003DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x182")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x8CF774", Offset = "0x8CF774")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CF774", Offset = "0x8CF774")]
		public bool canGetUp;

		[Token(Token = "0x40003DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CF7D4", Offset = "0x8CF7D4")]
		public float getUpDelay;

		[Token(Token = "0x40003DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CF80C", Offset = "0x8CF80C")]
		public float blendToAnimationTime;

		[Token(Token = "0x40003E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CF844", Offset = "0x8CF844")]
		public float maxGetUpVelocity;

		[Token(Token = "0x40003E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CF87C", Offset = "0x8CF87C")]
		public float minGetUpDuration;

		[Token(Token = "0x40003E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CF8B4", Offset = "0x8CF8B4")]
		public float getUpCollisionResistanceMlp;

		[Token(Token = "0x40003E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CF8EC", Offset = "0x8CF8EC")]
		public float getUpRegainPinSpeedMlp;

		[Token(Token = "0x40003E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CF924", Offset = "0x8CF924")]
		public float getUpKnockOutDistanceMlp;

		[Token(Token = "0x40003E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CF95C", Offset = "0x8CF95C")]
		public Vector3 getUpOffsetProne;

		[Token(Token = "0x40003E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CF994", Offset = "0x8CF994")]
		public Vector3 getUpOffsetSupine;

		[Token(Token = "0x40003E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CF9CC", Offset = "0x8CF9CC")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x8CF9CC", Offset = "0x8CF9CC")]
		public PuppetEvent onGetUpProne;

		[Token(Token = "0x40003E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CFA2C", Offset = "0x8CFA2C")]
		public PuppetEvent onGetUpSupine;

		[Token(Token = "0x40003E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CFA64", Offset = "0x8CFA64")]
		public PuppetEvent onLoseBalance;

		[Token(Token = "0x40003EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CFA9C", Offset = "0x8CFA9C")]
		public PuppetEvent onLoseBalanceFromPuppet;

		[Token(Token = "0x40003EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CFAD4", Offset = "0x8CFAD4")]
		public PuppetEvent onLoseBalanceFromGetUp;

		[Token(Token = "0x40003EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CFB0C", Offset = "0x8CFB0C")]
		public PuppetEvent onRegainBalance;

		[Token(Token = "0x40003ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		public CollisionDelegate OnCollision;

		[Token(Token = "0x40003EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		public CollisionImpulseDelegate OnCollisionImpulse;

		[Token(Token = "0x40003EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CFB44", Offset = "0x8CFB44")]
		private State <state>k__BackingField;

		[Token(Token = "0x40003F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25C")]
		[HideInInspector]
		public bool canMoveTarget;

		[Token(Token = "0x40003F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		private float unpinnedTimer;

		[Token(Token = "0x40003F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x264")]
		private float getUpTimer;

		[Token(Token = "0x40003F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		private Vector3 hipsForward;

		[Token(Token = "0x40003F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x274")]
		private Vector3 hipsUp;

		[Token(Token = "0x40003F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		private float getupAnimationBlendWeight;

		[Token(Token = "0x40003F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x284")]
		private float getupAnimationBlendWeightV;

		[Token(Token = "0x40003F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		private bool getUpTargetFixed;

		[Token(Token = "0x40003F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28C")]
		private NormalMode lastNormalMode;

		[Token(Token = "0x40003F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		private int collisions;

		[Token(Token = "0x40003FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x294")]
		private bool eventsEnabled;

		[Token(Token = "0x40003FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		private float lastKnockOutDistance;

		[Token(Token = "0x40003FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29C")]
		private float knockOutDistanceSqr;

		[Token(Token = "0x40003FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		private bool getupDisabled;

		[Token(Token = "0x40003FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A1")]
		private bool hasCollidedSinceGetUp;

		[Token(Token = "0x40003FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A2")]
		private bool hasBoosted;

		[Token(Token = "0x4000400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		private MuscleCollisionBroadcaster broadcaster;

		[Token(Token = "0x4000401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		private Vector3 getUpPosition;

		[Token(Token = "0x4000402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2BC")]
		private bool dropPropFlag;

		[Token(Token = "0x17000044")]
		public State state
		{
			[Token(Token = "0x60003F5")]
			[Address(RVA = "0xD76D84", Offset = "0xD76D84", VA = "0xD76D84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DD284", Offset = "0x8DD284")]
			get
			{
				return default(State);
			}
			[Token(Token = "0x60003F6")]
			[Address(RVA = "0xD76D8C", Offset = "0xD76D8C", VA = "0xD76D8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DD294", Offset = "0x8DD294")]
			private set
			{
			}
		}

		[Token(Token = "0x60003F3")]
		[Address(RVA = "0xD76CF4", Offset = "0xD76CF4", VA = "0xD76CF4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DD214", Offset = "0x8DD214")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x60003F4")]
		[Address(RVA = "0xD76D3C", Offset = "0xD76D3C", VA = "0xD76D3C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DD24C", Offset = "0x8DD24C")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x60003F7")]
		[Address(RVA = "0xD76D94", Offset = "0xD76D94", VA = "0xD76D94", Slot = "4")]
		public override void OnReactivate()
		{
		}

		[Token(Token = "0x60003F8")]
		[Address(RVA = "0xD77044", Offset = "0xD77044", VA = "0xD77044")]
		public void Reset(Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x60003F9")]
		[Address(RVA = "0xD770B8", Offset = "0xD770B8", VA = "0xD770B8", Slot = "10")]
		public override void OnTeleport(Quaternion deltaRotation, Vector3 deltaPosition, Vector3 pivot, bool moveToTarget)
		{
		}

		[Token(Token = "0x60003FA")]
		[Address(RVA = "0xD77154", Offset = "0xD77154", VA = "0xD77154", Slot = "17")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x60003FB")]
		[Address(RVA = "0xD776B4", Offset = "0xD776B4", VA = "0xD776B4", Slot = "15")]
		protected override void OnActivate()
		{
		}

		[Token(Token = "0x60003FC")]
		[Address(RVA = "0xD77DB8", Offset = "0xD77DB8", VA = "0xD77DB8", Slot = "8")]
		public override void KillStart()
		{
		}

		[Token(Token = "0x60003FD")]
		[Address(RVA = "0xD77E5C", Offset = "0xD77E5C", VA = "0xD77E5C", Slot = "9")]
		public override void KillEnd()
		{
		}

		[Token(Token = "0x60003FE")]
		[Address(RVA = "0xD77E64", Offset = "0xD77E64", VA = "0xD77E64", Slot = "5")]
		public override void Resurrect()
		{
		}

		[Token(Token = "0x60003FF")]
		[Address(RVA = "0xD77EF0", Offset = "0xD77EF0", VA = "0xD77EF0", Slot = "16")]
		protected override void OnDeactivate()
		{
		}

		[Token(Token = "0x6000400")]
		[Address(RVA = "0xD77EFC", Offset = "0xD77EFC", VA = "0xD77EFC", Slot = "18")]
		protected override void OnFixedUpdate()
		{
		}

		[Token(Token = "0x6000401")]
		[Address(RVA = "0xD78688", Offset = "0xD78688", VA = "0xD78688", Slot = "20")]
		protected override void OnLateUpdate()
		{
		}

		[Token(Token = "0x6000402")]
		[Address(RVA = "0xD78960", Offset = "0xD78960", VA = "0xD78960")]
		private bool SetKinematic()
		{
			return default(bool);
		}

		[Token(Token = "0x6000403")]
		[Address(RVA = "0xD78A48", Offset = "0xD78A48", VA = "0xD78A48", Slot = "23")]
		protected override void OnReadBehaviour()
		{
		}

		[Token(Token = "0x6000404")]
		[Address(RVA = "0xD78818", Offset = "0xD78818", VA = "0xD78818")]
		private void BlendMuscleMapping(int muscleIndex, ref bool to)
		{
		}

		[Token(Token = "0x6000405")]
		[Address(RVA = "0xD78D38", Offset = "0xD78D38", VA = "0xD78D38", Slot = "13")]
		public override void OnMuscleAdded(Muscle m)
		{
		}

		[Token(Token = "0x6000406")]
		[Address(RVA = "0xD78D7C", Offset = "0xD78D7C", VA = "0xD78D7C", Slot = "14")]
		public override void OnMuscleRemoved(Muscle m)
		{
		}

		[Token(Token = "0x6000407")]
		[Address(RVA = "0xD78D00", Offset = "0xD78D00", VA = "0xD78D00")]
		protected void MoveTarget(Vector3 position)
		{
		}

		[Token(Token = "0x6000408")]
		[Address(RVA = "0xD78DB8", Offset = "0xD78DB8", VA = "0xD78DB8")]
		protected void RotateTarget(Quaternion rotation)
		{
		}

		[Token(Token = "0x6000409")]
		[Address(RVA = "0xD78DF0", Offset = "0xD78DF0", VA = "0xD78DF0", Slot = "29")]
		protected override void GroundTarget(LayerMask layers)
		{
		}

		[Token(Token = "0x600040A")]
		[Address(RVA = "0xD78E04", Offset = "0xD78E04", VA = "0xD78E04")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x600040B")]
		[Address(RVA = "0xD79000", Offset = "0xD79000", VA = "0xD79000")]
		public void Boost(float immunity, float impulseMlp)
		{
		}

		[Token(Token = "0x600040C")]
		[Address(RVA = "0xD79090", Offset = "0xD79090", VA = "0xD79090")]
		public void Boost(int muscleIndex, float immunity, float impulseMlp)
		{
		}

		[Token(Token = "0x600040D")]
		[Address(RVA = "0xD791A8", Offset = "0xD791A8", VA = "0xD791A8")]
		public void Boost(int muscleIndex, float immunity, float impulseMlp, float boostParents, float boostChildren)
		{
		}

		[Token(Token = "0x600040E")]
		[Address(RVA = "0xD7936C", Offset = "0xD7936C", VA = "0xD7936C")]
		public void BoostImmunity(float immunity)
		{
		}

		[Token(Token = "0x600040F")]
		[Address(RVA = "0xD790D4", Offset = "0xD790D4", VA = "0xD790D4")]
		public void BoostImmunity(int muscleIndex, float immunity)
		{
		}

		[Token(Token = "0x6000410")]
		[Address(RVA = "0xD793E4", Offset = "0xD793E4", VA = "0xD793E4")]
		public void BoostImmunity(int muscleIndex, float immunity, float boostParents, float boostChildren)
		{
		}

		[Token(Token = "0x6000411")]
		[Address(RVA = "0xD79488", Offset = "0xD79488", VA = "0xD79488")]
		public void BoostImpulseMlp(float impulseMlp)
		{
		}

		[Token(Token = "0x6000412")]
		[Address(RVA = "0xD79140", Offset = "0xD79140", VA = "0xD79140")]
		public void BoostImpulseMlp(int muscleIndex, float impulseMlp)
		{
		}

		[Token(Token = "0x6000413")]
		[Address(RVA = "0xD794F8", Offset = "0xD794F8", VA = "0xD794F8")]
		public void BoostImpulseMlp(int muscleIndex, float impulseMlp, float boostParents, float boostChildren)
		{
		}

		[Token(Token = "0x6000414")]
		[Address(RVA = "0xD7959C", Offset = "0xD7959C", VA = "0xD7959C")]
		public void Unpin()
		{
		}

		[Token(Token = "0x6000415")]
		[Address(RVA = "0xD79620", Offset = "0xD79620", VA = "0xD79620", Slot = "25")]
		protected override void OnMuscleHitBehaviour(MuscleHit hit)
		{
		}

		[Token(Token = "0x6000416")]
		[Address(RVA = "0xD797F8", Offset = "0xD797F8", VA = "0xD797F8", Slot = "26")]
		protected override void OnMuscleCollisionBehaviour(MuscleCollision m)
		{
		}

		[Token(Token = "0x6000417")]
		[Address(RVA = "0xD79C40", Offset = "0xD79C40", VA = "0xD79C40")]
		private float GetImpulse(MuscleCollision m, ref float layerThreshold)
		{
			return default(float);
		}

		[Token(Token = "0x6000418")]
		[Address(RVA = "0xD796FC", Offset = "0xD796FC", VA = "0xD796FC")]
		private void UnPin(int muscleIndex, float unpin)
		{
		}

		[Token(Token = "0x6000419")]
		[Address(RVA = "0xD79F44", Offset = "0xD79F44", VA = "0xD79F44")]
		private void UnPinMuscle(int muscleIndex, float unpin)
		{
		}

		[Token(Token = "0x600041A")]
		[Address(RVA = "0xD79DC8", Offset = "0xD79DC8", VA = "0xD79DC8")]
		private bool Activate(Collision collision, float impulse)
		{
			return default(bool);
		}

		[Token(Token = "0x600041B")]
		[Address(RVA = "0xD7A11C", Offset = "0xD7A11C", VA = "0xD7A11C")]
		public bool IsProne()
		{
			return default(bool);
		}

		[Token(Token = "0x600041C")]
		[Address(RVA = "0xD792C8", Offset = "0xD792C8", VA = "0xD792C8")]
		private float GetFalloff(int i, int muscleIndex, float falloffParents, float falloffChildren)
		{
			return default(float);
		}

		[Token(Token = "0x600041D")]
		[Address(RVA = "0xD79E60", Offset = "0xD79E60", VA = "0xD79E60")]
		private float GetFalloff(int i, int muscleIndex, float falloffParents, float falloffChildren, float falloffGroup)
		{
			return default(float);
		}

		[Token(Token = "0x600041E")]
		[Address(RVA = "0xD7A1DC", Offset = "0xD7A1DC", VA = "0xD7A1DC")]
		private bool InGroup(Muscle.Group group1, Muscle.Group group2)
		{
			return default(bool);
		}

		[Token(Token = "0x600041F")]
		[Address(RVA = "0xD785A0", Offset = "0xD785A0", VA = "0xD785A0")]
		private MuscleProps GetProps(Muscle.Group group)
		{
			return default(MuscleProps);
		}

		[Token(Token = "0x6000420")]
		[Address(RVA = "0xD77768", Offset = "0xD77768", VA = "0xD77768")]
		public void SetState(State newState)
		{
		}

		[Token(Token = "0x6000421")]
		[Address(RVA = "0xD7A2BC", Offset = "0xD7A2BC", VA = "0xD7A2BC")]
		public void SetColliders(bool unpinned)
		{
		}

		[Token(Token = "0x6000422")]
		[Address(RVA = "0xD76E74", Offset = "0xD76E74", VA = "0xD76E74")]
		public void SetColliders(Muscle m, bool unpinned)
		{
		}

		[Token(Token = "0x6000423")]
		[Address(RVA = "0xD7A34C", Offset = "0xD7A34C", VA = "0xD7A34C", Slot = "11")]
		public override void OnMuscleDisconnected(Muscle m)
		{
		}

		[Token(Token = "0x6000424")]
		[Address(RVA = "0xD7A354", Offset = "0xD7A354", VA = "0xD7A354", Slot = "12")]
		public override void OnMuscleReconnected(Muscle m)
		{
		}

		[Token(Token = "0x6000425")]
		[Address(RVA = "0xD7A3F4", Offset = "0xD7A3F4", VA = "0xD7A3F4")]
		public BehaviourPuppet()
		{
		}
	}
	[Token(Token = "0x2000096")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8CB3FC", Offset = "0x8CB3FC")]
	public class BehaviourTemplate : BehaviourBase
	{
		[Token(Token = "0x4000421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public SubBehaviourCOM centerOfMass;

		[Token(Token = "0x4000422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public LayerMask groundLayers;

		[Token(Token = "0x4000423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public PuppetEvent onLoseBalance;

		[Token(Token = "0x4000424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public float loseBalanceAngle;

		[Token(Token = "0x600042B")]
		[Address(RVA = "0x10668CC", Offset = "0x10668CC", VA = "0x10668CC", Slot = "17")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x600042C")]
		[Address(RVA = "0x10668F0", Offset = "0x10668F0", VA = "0x10668F0", Slot = "15")]
		protected override void OnActivate()
		{
		}

		[Token(Token = "0x600042D")]
		[Address(RVA = "0x10668F4", Offset = "0x10668F4", VA = "0x10668F4", Slot = "4")]
		public override void OnReactivate()
		{
		}

		[Token(Token = "0x600042E")]
		[Address(RVA = "0x10668F8", Offset = "0x10668F8", VA = "0x10668F8", Slot = "16")]
		protected override void OnDeactivate()
		{
		}

		[Token(Token = "0x600042F")]
		[Address(RVA = "0x10668FC", Offset = "0x10668FC", VA = "0x10668FC", Slot = "18")]
		protected override void OnFixedUpdate()
		{
		}

		[Token(Token = "0x6000430")]
		[Address(RVA = "0x1066938", Offset = "0x1066938", VA = "0x1066938", Slot = "20")]
		protected override void OnLateUpdate()
		{
		}

		[Token(Token = "0x6000431")]
		[Address(RVA = "0x106693C", Offset = "0x106693C", VA = "0x106693C", Slot = "25")]
		protected override void OnMuscleHitBehaviour(MuscleHit hit)
		{
		}

		[Token(Token = "0x6000432")]
		[Address(RVA = "0x1066944", Offset = "0x1066944", VA = "0x1066944", Slot = "26")]
		protected override void OnMuscleCollisionBehaviour(MuscleCollision m)
		{
		}

		[Token(Token = "0x6000433")]
		[Address(RVA = "0x106694C", Offset = "0x106694C", VA = "0x106694C")]
		public BehaviourTemplate()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000097")]
	public class SubBehaviourBalancer : SubBehaviourBase
	{
		[Serializable]
		[Token(Token = "0x2000098")]
		public class Settings
		{
			[Token(Token = "0x4000432")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CFFFC", Offset = "0x8CFFFC")]
			public float damperForSpring;

			[Token(Token = "0x4000433")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D0034", Offset = "0x8D0034")]
			public float maxForceMlp;

			[Token(Token = "0x4000434")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D006C", Offset = "0x8D006C")]
			public float IMlp;

			[Token(Token = "0x4000435")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D00A4", Offset = "0x8D00A4")]
			public float velocityF;

			[Token(Token = "0x4000436")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D00DC", Offset = "0x8D00DC")]
			public Vector3 copOffset;

			[Token(Token = "0x4000437")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D0114", Offset = "0x8D0114")]
			public float torqueMlp;

			[Token(Token = "0x4000438")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D014C", Offset = "0x8D014C")]
			public float maxTorqueMag;

			[Token(Token = "0x6000443")]
			[Address(RVA = "0x190AC10", Offset = "0x190AC10", VA = "0x190AC10")]
			public Settings()
			{
			}
		}

		[Token(Token = "0x4000425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CFF9C", Offset = "0x8CFF9C")]
		private ConfigurableJoint <joint>k__BackingField;

		[Token(Token = "0x4000426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CFFAC", Offset = "0x8CFFAC")]
		private Vector3 <dir>k__BackingField;

		[Token(Token = "0x4000427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CFFBC", Offset = "0x8CFFBC")]
		private Vector3 <dirVel>k__BackingField;

		[Token(Token = "0x4000428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CFFCC", Offset = "0x8CFFCC")]
		private Vector3 <cop>k__BackingField;

		[Token(Token = "0x4000429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CFFDC", Offset = "0x8CFFDC")]
		private Vector3 <com>k__BackingField;

		[Token(Token = "0x400042A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CFFEC", Offset = "0x8CFFEC")]
		private Vector3 <comV>k__BackingField;

		[Token(Token = "0x400042B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Settings settings;

		[Token(Token = "0x400042C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Rigidbody[] rigidbodies;

		[Token(Token = "0x400042D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Transform[] copPoints;

		[Token(Token = "0x400042E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private PressureSensor pressureSensor;

		[Token(Token = "0x400042F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Rigidbody Ibody;

		[Token(Token = "0x4000430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 I;

		[Token(Token = "0x4000431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private Quaternion toJointSpace;

		[Token(Token = "0x17000045")]
		public ConfigurableJoint joint
		{
			[Token(Token = "0x6000434")]
			[Address(RVA = "0xE08CB4", Offset = "0xE08CB4", VA = "0xE08CB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DD2A4", Offset = "0x8DD2A4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000435")]
			[Address(RVA = "0xE08CBC", Offset = "0xE08CBC", VA = "0xE08CBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DD2B4", Offset = "0x8DD2B4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000046")]
		public Vector3 dir
		{
			[Token(Token = "0x6000436")]
			[Address(RVA = "0xE08CC4", Offset = "0xE08CC4", VA = "0xE08CC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DD2C4", Offset = "0x8DD2C4")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000437")]
			[Address(RVA = "0xE08CD0", Offset = "0xE08CD0", VA = "0xE08CD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DD2D4", Offset = "0x8DD2D4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000047")]
		public Vector3 dirVel
		{
			[Token(Token = "0x6000438")]
			[Address(RVA = "0xE08CDC", Offset = "0xE08CDC", VA = "0xE08CDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DD2E4", Offset = "0x8DD2E4")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000439")]
			[Address(RVA = "0xE08CE8", Offset = "0xE08CE8", VA = "0xE08CE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DD2F4", Offset = "0x8DD2F4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000048")]
		public Vector3 cop
		{
			[Token(Token = "0x600043A")]
			[Address(RVA = "0xE08CF4", Offset = "0xE08CF4", VA = "0xE08CF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DD304", Offset = "0x8DD304")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600043B")]
			[Address(RVA = "0xE08D00", Offset = "0xE08D00", VA = "0xE08D00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DD314", Offset = "0x8DD314")]
			private set
			{
			}
		}

		[Token(Token = "0x17000049")]
		public Vector3 com
		{
			[Token(Token = "0x600043C")]
			[Address(RVA = "0xE08D0C", Offset = "0xE08D0C", VA = "0xE08D0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DD324", Offset = "0x8DD324")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600043D")]
			[Address(RVA = "0xE08D18", Offset = "0xE08D18", VA = "0xE08D18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DD334", Offset = "0x8DD334")]
			private set
			{
			}
		}

		[Token(Token = "0x1700004A")]
		public Vector3 comV
		{
			[Token(Token = "0x600043E")]
			[Address(RVA = "0xE08D24", Offset = "0xE08D24", VA = "0xE08D24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DD344", Offset = "0x8DD344")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600043F")]
			[Address(RVA = "0xE08D30", Offset = "0xE08D30", VA = "0xE08D30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DD354", Offset = "0x8DD354")]
			private set
			{
			}
		}

		[Token(Token = "0x6000440")]
		[Address(RVA = "0xE08D3C", Offset = "0xE08D3C", VA = "0xE08D3C")]
		public void Initiate(BehaviourBase behaviour, Settings settings, Rigidbody Ibody, Rigidbody[] rigidbodies, ConfigurableJoint joint, Transform[] copPoints, PressureSensor pressureSensor)
		{
		}

		[Token(Token = "0x6000441")]
		[Address(RVA = "0xE08E48", Offset = "0xE08E48", VA = "0xE08E48")]
		private void Solve()
		{
		}

		[Token(Token = "0x6000442")]
		[Address(RVA = "0xE09270", Offset = "0xE09270", VA = "0xE09270")]
		public SubBehaviourBalancer()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000099")]
	public abstract class SubBehaviourBase
	{
		[Token(Token = "0x4000439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected BehaviourBase behaviour;

		[Token(Token = "0x6000444")]
		[Address(RVA = "0xE09308", Offset = "0xE09308", VA = "0xE09308")]
		protected static Vector2 XZ(Vector3 v)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000445")]
		[Address(RVA = "0xE09310", Offset = "0xE09310", VA = "0xE09310")]
		protected static Vector3 XYZ(Vector2 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000446")]
		[Address(RVA = "0xE0931C", Offset = "0xE0931C", VA = "0xE0931C")]
		protected static Vector3 Flatten(Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000447")]
		[Address(RVA = "0xE09324", Offset = "0xE09324", VA = "0xE09324")]
		protected static Vector3 SetY(Vector3 v, float y)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000448")]
		[Address(RVA = "0xE09300", Offset = "0xE09300", VA = "0xE09300")]
		protected SubBehaviourBase()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200009A")]
	public class SubBehaviourCOM : SubBehaviourBase
	{
		[Serializable]
		[Token(Token = "0x200009B")]
		public enum Mode
		{
			[Token(Token = "0x400044D")]
			FeetCentroid,
			[Token(Token = "0x400044E")]
			CenterOfPressure
		}

		[Token(Token = "0x400043A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Mode mode;

		[Token(Token = "0x400043B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float velocityDamper;

		[Token(Token = "0x400043C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float velocityLerpSpeed;

		[Token(Token = "0x400043D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float velocityMax;

		[Token(Token = "0x400043E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float centerOfPressureSpeed;

		[Token(Token = "0x400043F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 offset;

		[Token(Token = "0x4000440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D0184", Offset = "0x8D0184")]
		private Vector3 <position>k__BackingField;

		[Token(Token = "0x4000441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D0194", Offset = "0x8D0194")]
		private Vector3 <direction>k__BackingField;

		[Token(Token = "0x4000442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D01A4", Offset = "0x8D01A4")]
		private float <angle>k__BackingField;

		[Token(Token = "0x4000443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D01B4", Offset = "0x8D01B4")]
		private Vector3 <velocity>k__BackingField;

		[Token(Token = "0x4000444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D01C4", Offset = "0x8D01C4")]
		private Vector3 <centerOfPressure>k__BackingField;

		[Token(Token = "0x4000445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D01D4", Offset = "0x8D01D4")]
		private Quaternion <rotation>k__BackingField;

		[Token(Token = "0x4000446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D01E4", Offset = "0x8D01E4")]
		private Quaternion <inverseRotation>k__BackingField;

		[Token(Token = "0x4000447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D01F4", Offset = "0x8D01F4")]
		private bool <isGrounded>k__BackingField;

		[Token(Token = "0x4000448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D0204", Offset = "0x8D0204")]
		private float <lastGroundedTime>k__BackingField;

		[Token(Token = "0x4000449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[HideInInspector]
		public bool[] groundContacts;

		[Token(Token = "0x400044A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[HideInInspector]
		public Vector3[] groundContactPoints;

		[Token(Token = "0x400044B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private LayerMask groundLayers;

		[Token(Token = "0x1700004B")]
		public Vector3 position
		{
			[Token(Token = "0x6000449")]
			[Address(RVA = "0xE0932C", Offset = "0xE0932C", VA = "0xE0932C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DD364", Offset = "0x8DD364")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600044A")]
			[Address(RVA = "0xE09338", Offset = "0xE09338", VA = "0xE09338")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DD374", Offset = "0x8DD374")]
			private set
			{
			}
		}

		[Token(Token = "0x1700004C")]
		public Vector3 direction
		{
			[Token(Token = "0x600044B")]
			[Address(RVA = "0xE09344", Offset = "0xE09344", VA = "0xE09344")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DD384", Offset = "0x8DD384")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600044C")]
			[Address(RVA = "0xE09350", Offset = "0xE09350", VA = "0xE09350")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DD394", Offset = "0x8DD394")]
			private set
			{
			}
		}

		[Token(Token = "0x1700004D")]
		public float angle
		{
			[Token(Token = "0x600044D")]
			[Address(RVA = "0xE0935C", Offset = "0xE0935C", VA = "0xE0935C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DD3A4", Offset = "0x8DD3A4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600044E")]
			[Address(RVA = "0xE09364", Offset = "0xE09364", VA = "0xE09364")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DD3B4", Offset = "0x8DD3B4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700004E")]
		public Vector3 velocity
		{
			[Token(Token = "0x600044F")]
			[Address(RVA = "0xE0936C", Offset = "0xE0936C", VA = "0xE0936C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DD3C4", Offset = "0x8DD3C4")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000450")]
			[Address(RVA = "0xE09378", Offset = "0xE09378", VA = "0xE09378")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DD3D4", Offset = "0x8DD3D4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700004F")]
		public Vector3 centerOfPressure
		{
			[Token(Token = "0x6000451")]
			[Address(RVA = "0xE09384", Offset = "0xE09384", VA = "0xE09384")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DD3E4", Offset = "0x8DD3E4")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000452")]
			[Address(RVA = "0xE09390", Offset = "0xE09390", VA = "0xE09390")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DD3F4", Offset = "0x8DD3F4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000050")]
		public Quaternion rotation
		{
			[Token(Token = "0x6000453")]
			[Address(RVA = "0xE0939C", Offset = "0xE0939C", VA = "0xE0939C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DD404", Offset = "0x8DD404")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6000454")]
			[Address(RVA = "0xE093A8", Offset = "0xE093A8", VA = "0xE093A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DD414", Offset = "0x8DD414")]
			private set
			{
			}
		}

		[Token(Token = "0x17000051")]
		public Quaternion inverseRotation
		{
			[Token(Token = "0x6000455")]
			[Address(RVA = "0xE093B4", Offset = "0xE093B4", VA = "0xE093B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DD424", Offset = "0x8DD424")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6000456")]
			[Address(RVA = "0xE093C0", Offset = "0xE093C0", VA = "0xE093C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DD434", Offset = "0x8DD434")]
			private set
			{
			}
		}

		[Token(Token = "0x17000052")]
		public bool isGrounded
		{
			[Token(Token = "0x6000457")]
			[Address(RVA = "0xE093CC", Offset = "0xE093CC", VA = "0xE093CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DD444", Offset = "0x8DD444")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000458")]
			[Address(RVA = "0xE093D4", Offset = "0xE093D4", VA = "0xE093D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DD454", Offset = "0x8DD454")]
			private set
			{
			}
		}

		[Token(Token = "0x17000053")]
		public float lastGroundedTime
		{
			[Token(Token = "0x6000459")]
			[Address(RVA = "0xE093E0", Offset = "0xE093E0", VA = "0xE093E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DD464", Offset = "0x8DD464")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600045A")]
			[Address(RVA = "0xE093E8", Offset = "0xE093E8", VA = "0xE093E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DD474", Offset = "0x8DD474")]
			private set
			{
			}
		}

		[Token(Token = "0x600045B")]
		[Address(RVA = "0xE093F0", Offset = "0xE093F0", VA = "0xE093F0")]
		public void Initiate(BehaviourBase behaviour, LayerMask groundLayers)
		{
		}

		[Token(Token = "0x600045C")]
		[Address(RVA = "0xE0970C", Offset = "0xE0970C", VA = "0xE0970C")]
		private void OnHierarchyChanged()
		{
		}

		[Token(Token = "0x600045D")]
		[Address(RVA = "0xE097B4", Offset = "0xE097B4", VA = "0xE097B4")]
		private void OnPreMuscleCollision(MuscleCollision c)
		{
		}

		[Token(Token = "0x600045E")]
		[Address(RVA = "0xE09990", Offset = "0xE09990", VA = "0xE09990")]
		private void OnPreMuscleCollisionExit(MuscleCollision c)
		{
		}

		[Token(Token = "0x600045F")]
		[Address(RVA = "0xE09A50", Offset = "0xE09A50", VA = "0xE09A50")]
		private void OnPreActivate()
		{
		}

		[Token(Token = "0x6000460")]
		[Address(RVA = "0xE09CFC", Offset = "0xE09CFC", VA = "0xE09CFC")]
		private void OnPreLateUpdate()
		{
		}

		[Token(Token = "0x6000461")]
		[Address(RVA = "0xE0A218", Offset = "0xE0A218", VA = "0xE0A218")]
		private void OnPreDeactivate()
		{
		}

		[Token(Token = "0x6000462")]
		[Address(RVA = "0xE098AC", Offset = "0xE098AC", VA = "0xE098AC")]
		private Vector3 GetCollisionCOP(Collision collision)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000463")]
		[Address(RVA = "0xE09F60", Offset = "0xE09F60", VA = "0xE09F60")]
		private bool IsGrounded()
		{
			return default(bool);
		}

		[Token(Token = "0x6000464")]
		[Address(RVA = "0xE09AF0", Offset = "0xE09AF0", VA = "0xE09AF0")]
		private Vector3 GetCenterOfMass()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000465")]
		[Address(RVA = "0xE0A08C", Offset = "0xE0A08C", VA = "0xE0A08C")]
		private Vector3 GetCenterOfMassVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000466")]
		[Address(RVA = "0xE0A244", Offset = "0xE0A244", VA = "0xE0A244")]
		private Vector3 GetMomentum()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000467")]
		[Address(RVA = "0xE09FC4", Offset = "0xE09FC4", VA = "0xE09FC4")]
		private Vector3 GetCenterOfPressure()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000468")]
		[Address(RVA = "0xE09C14", Offset = "0xE09C14", VA = "0xE09C14")]
		private Vector3 GetFeetCentroid()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000469")]
		[Address(RVA = "0xE0A368", Offset = "0xE0A368", VA = "0xE0A368")]
		public SubBehaviourCOM()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200009C")]
	public class Booster
	{
		[Token(Token = "0x400044F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D0234", Offset = "0x8D0234")]
		public bool fullBody;

		[Token(Token = "0x4000450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D026C", Offset = "0x8D026C")]
		public ConfigurableJoint[] muscles;

		[Token(Token = "0x4000451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D02A4", Offset = "0x8D02A4")]
		public Muscle.Group[] groups;

		[Token(Token = "0x4000452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D02DC", Offset = "0x8D02DC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D02DC", Offset = "0x8D02DC")]
		public float immunity;

		[Token(Token = "0x4000453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D0330", Offset = "0x8D0330")]
		public float impulseMlp;

		[Token(Token = "0x4000454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D0368", Offset = "0x8D0368")]
		public float boostParents;

		[Token(Token = "0x4000455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D03A0", Offset = "0x8D03A0")]
		public float boostChildren;

		[Token(Token = "0x4000456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D03D8", Offset = "0x8D03D8")]
		public float delay;

		[Token(Token = "0x600046A")]
		[Address(RVA = "0x1072D78", Offset = "0x1072D78", VA = "0x1072D78")]
		public void Boost(BehaviourPuppet puppet)
		{
		}

		[Token(Token = "0x600046B")]
		[Address(RVA = "0x1072F8C", Offset = "0x1072F8C", VA = "0x1072F8C")]
		public Booster()
		{
		}
	}
	[Token(Token = "0x200009D")]
	public class JointBreakBroadcaster : MonoBehaviour
	{
		[Token(Token = "0x4000457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[HideInInspector]
		public PuppetMaster puppetMaster;

		[Token(Token = "0x4000458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[HideInInspector]
		public int muscleIndex;

		[Token(Token = "0x600046C")]
		[Address(RVA = "0xB144EC", Offset = "0xB144EC", VA = "0xB144EC")]
		private void OnJointBreak()
		{
		}

		[Token(Token = "0x600046D")]
		[Address(RVA = "0xB14570", Offset = "0xB14570", VA = "0xB14570")]
		public JointBreakBroadcaster()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200009E")]
	public class Muscle
	{
		[Serializable]
		[Token(Token = "0x200009F")]
		public enum Group
		{
			[Token(Token = "0x40004A6")]
			Hips,
			[Token(Token = "0x40004A7")]
			Spine,
			[Token(Token = "0x40004A8")]
			Head,
			[Token(Token = "0x40004A9")]
			Arm,
			[Token(Token = "0x40004AA")]
			Hand,
			[Token(Token = "0x40004AB")]
			Leg,
			[Token(Token = "0x40004AC")]
			Foot,
			[Token(Token = "0x40004AD")]
			Tail,
			[Token(Token = "0x40004AE")]
			Prop
		}

		[Serializable]
		[Token(Token = "0x20000A0")]
		public class InternalCollisionIgnoreSettings
		{
			[Token(Token = "0x40004AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D0720", Offset = "0x8D0720")]
			public bool ignoreAll;

			[Token(Token = "0x40004B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D0758", Offset = "0x8D0758")]
			public ConfigurableJoint[] muscles;

			[Token(Token = "0x40004B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D0790", Offset = "0x8D0790")]
			public Group[] groups;

			[Token(Token = "0x60004B0")]
			[Address(RVA = "0x19049F0", Offset = "0x19049F0", VA = "0x19049F0")]
			public InternalCollisionIgnoreSettings()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20000A1")]
		public class Props
		{
			[Token(Token = "0x40004B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D07C8", Offset = "0x8D07C8")]
			public Group group;

			[Token(Token = "0x40004B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D0800", Offset = "0x8D0800")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D0800", Offset = "0x8D0800")]
			public float mappingWeight;

			[Token(Token = "0x40004B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D0854", Offset = "0x8D0854")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D0854", Offset = "0x8D0854")]
			public float pinWeight;

			[Token(Token = "0x40004B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D08A8", Offset = "0x8D08A8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D08A8", Offset = "0x8D08A8")]
			public float muscleWeight;

			[Token(Token = "0x40004B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D08FC", Offset = "0x8D08FC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D08FC", Offset = "0x8D08FC")]
			public float muscleDamper;

			[Token(Token = "0x40004B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D0950", Offset = "0x8D0950")]
			public bool mapPosition;

			[Token(Token = "0x40004B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D0988", Offset = "0x8D0988")]
			public InternalCollisionIgnoreSettings internalCollisionIgnores;

			[Token(Token = "0x40004B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D09C0", Offset = "0x8D09C0")]
			public Transform[] animatedTargetChildren;

			[Token(Token = "0x60004B1")]
			[Address(RVA = "0x1904A70", Offset = "0x1904A70", VA = "0x1904A70")]
			public Props()
			{
			}

			[Token(Token = "0x60004B2")]
			[Address(RVA = "0x1904B14", Offset = "0x1904B14", VA = "0x1904B14")]
			public Props(float pinWeight, float muscleWeight, float mappingWeight, float muscleDamper, bool mapPosition, Group group = Group.Hips)
			{
			}

			[Token(Token = "0x60004B3")]
			[Address(RVA = "0x1904BE8", Offset = "0x1904BE8", VA = "0x1904BE8")]
			public void Clamp()
			{
			}
		}

		[Token(Token = "0x20000A2")]
		public struct State
		{
			[Token(Token = "0x40004BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float mappingWeightMlp;

			[Token(Token = "0x40004BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float pinWeightMlp;

			[Token(Token = "0x40004BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float muscleWeightMlp;

			[Token(Token = "0x40004BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float maxForceMlp;

			[Token(Token = "0x40004BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float muscleDamperMlp;

			[Token(Token = "0x40004BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float muscleDamperAdd;

			[Token(Token = "0x40004C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float immunity;

			[Token(Token = "0x40004C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float impulseMlp;

			[Token(Token = "0x40004C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 velocity;

			[Token(Token = "0x40004C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public Vector3 angularVelocity;

			[Token(Token = "0x40004C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public bool isDisconnected;

			[Token(Token = "0x40004C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
			public bool resetFlag;

			[Token(Token = "0x17000066")]
			public static State Default
			{
				[Token(Token = "0x60004B4")]
				[Address(RVA = "0x1904C7C", Offset = "0x1904C7C", VA = "0x1904C7C")]
				get
				{
					return default(State);
				}
			}

			[Token(Token = "0x60004B5")]
			[Address(RVA = "0x1904C9C", Offset = "0x1904C9C", VA = "0x1904C9C")]
			public void Clamp()
			{
			}
		}

		[Token(Token = "0x20000A3")]
		public class TargetChild
		{
			[Token(Token = "0x40004C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform t;

			[Token(Token = "0x40004C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 defaultLocalPosition;

			[Token(Token = "0x40004C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Quaternion defaultLocalRotation;

			[Token(Token = "0x60004B6")]
			[Address(RVA = "0x1904D44", Offset = "0x1904D44", VA = "0x1904D44")]
			public TargetChild(Transform t)
			{
			}

			[Token(Token = "0x60004B7")]
			[Address(RVA = "0x1904DB4", Offset = "0x1904DB4", VA = "0x1904DB4")]
			public void Map()
			{
			}
		}

		[Token(Token = "0x4000459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public string name;

		[Token(Token = "0x400045A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ConfigurableJoint joint;

		[Token(Token = "0x400045B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform target;

		[Token(Token = "0x400045C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Props props;

		[Token(Token = "0x400045D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public State state;

		[Token(Token = "0x400045E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public int[] parentIndexes;

		[Token(Token = "0x400045F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public int[] childIndexes;

		[Token(Token = "0x4000460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public bool[] childFlags;

		[Token(Token = "0x4000461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[HideInInspector]
		public int[] kinshipDegrees;

		[Token(Token = "0x4000462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[HideInInspector]
		public MuscleCollisionBroadcaster broadcaster;

		[Token(Token = "0x4000463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[HideInInspector]
		public JointBreakBroadcaster jointBreakBroadcaster;

		[Token(Token = "0x4000464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[HideInInspector]
		public Vector3 positionOffset;

		[Token(Token = "0x4000465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D0500", Offset = "0x8D0500")]
		private Transform <transform>k__BackingField;

		[Token(Token = "0x4000466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D0510", Offset = "0x8D0510")]
		private Rigidbody <rigidbody>k__BackingField;

		[Token(Token = "0x4000467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D0520", Offset = "0x8D0520")]
		private Transform <connectedBodyTarget>k__BackingField;

		[Token(Token = "0x4000468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D0530", Offset = "0x8D0530")]
		private Vector3 <targetAnimatedPosition>k__BackingField;

		[Token(Token = "0x4000469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D0540", Offset = "0x8D0540")]
		private Quaternion <targetAnimatedWorldRotation>k__BackingField;

		[Token(Token = "0x400046A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D0550", Offset = "0x8D0550")]
		private Vector3 <targetVelocity>k__BackingField;

		[Token(Token = "0x400046B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D0560", Offset = "0x8D0560")]
		private Rigidbody <additionalRigidbody>k__BackingField;

		[Token(Token = "0x400046C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[HideInInspector]
		[SerializeField]
		public ConfigurableJoint additionalPin;

		[Token(Token = "0x400046D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[HideInInspector]
		[SerializeField]
		public Transform additionalPinTarget;

		[Token(Token = "0x400046E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[HideInInspector]
		[SerializeField]
		public float additionalPinWeight;

		[Token(Token = "0x400046F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		[HideInInspector]
		public Vector3 mappedVelocity;

		[Token(Token = "0x4000470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[HideInInspector]
		public Vector3 mappedAngularVelocity;

		[Token(Token = "0x4000471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		[HideInInspector]
		public bool isPropMuscle;

		[Token(Token = "0x4000472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		[HideInInspector]
		public int index;

		[Token(Token = "0x4000473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D0680", Offset = "0x8D0680")]
		private Quaternion <targetRotationRelative>k__BackingField;

		[Token(Token = "0x4000474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D0690", Offset = "0x8D0690")]
		private Rigidbody <rebuildConnectedBody>k__BackingField;

		[Token(Token = "0x4000475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D06A0", Offset = "0x8D06A0")]
		private Transform <rebuildTargetParent>k__BackingField;

		[Token(Token = "0x4000476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D06B0", Offset = "0x8D06B0")]
		private Vector3 <defaultTargetPosRelToMuscle>k__BackingField;

		[Token(Token = "0x4000477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D06C0", Offset = "0x8D06C0")]
		private Quaternion <defaultTargetRotRelToMuscle>k__BackingField;

		[Token(Token = "0x4000478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D06D0", Offset = "0x8D06D0")]
		private Quaternion <defaultMuscleRotRelToTarget>k__BackingField;

		[Token(Token = "0x4000479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private Transform rebuildParent;

		[Token(Token = "0x400047A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private Vector3 rebuildPosition;

		[Token(Token = "0x400047B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
		private Quaternion rebuildRotation;

		[Token(Token = "0x400047C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
		private Vector3 rebuildTargetPosition;

		[Token(Token = "0x400047D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private Quaternion rebuildTargetRotation;

		[Token(Token = "0x400047E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private ConfigurableJointMotion rebuildAngularXMotion;

		[Token(Token = "0x400047F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		private ConfigurableJointMotion rebuildAngularYMotion;

		[Token(Token = "0x4000480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private ConfigurableJointMotion rebuildAngularZMotion;

		[Token(Token = "0x4000481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
		[HideInInspector]
		public Vector3 targetMappedPosition;

		[Token(Token = "0x4000482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		[HideInInspector]
		public Quaternion targetMappedRotation;

		[Token(Token = "0x4000483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		[HideInInspector]
		public Vector3 targetSampledPosition;

		[Token(Token = "0x4000484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
		[HideInInspector]
		public Quaternion targetSampledRotation;

		[Token(Token = "0x4000485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
		private JointDrive slerpDrive;

		[Token(Token = "0x4000486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		private float lastJointDriveRotationWeight;

		[Token(Token = "0x4000487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
		private float lastRotationDamper;

		[Token(Token = "0x4000488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		private Vector3 defaultPosition;

		[Token(Token = "0x4000489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
		private Vector3 defaultTargetLocalPosition;

		[Token(Token = "0x400048A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		private Vector3 lastMappedPosition;

		[Token(Token = "0x400048B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
		private Quaternion defaultLocalRotation;

		[Token(Token = "0x400048C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
		private Quaternion localRotationConvert;

		[Token(Token = "0x400048D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25C")]
		private Quaternion toParentSpace;

		[Token(Token = "0x400048E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26C")]
		private Quaternion toJointSpaceInverse;

		[Token(Token = "0x400048F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27C")]
		private Quaternion toJointSpaceDefault;

		[Token(Token = "0x4000490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28C")]
		private Quaternion targetAnimatedRotation;

		[Token(Token = "0x4000491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29C")]
		private Quaternion defaultRotation;

		[Token(Token = "0x4000492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2AC")]
		private Quaternion rotationRelativeToTarget;

		[Token(Token = "0x4000493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2BC")]
		private Quaternion defaultTargetLocalRotation;

		[Token(Token = "0x4000494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2CC")]
		private Quaternion lastMappedRotation;

		[Token(Token = "0x4000495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
		private Transform targetParent;

		[Token(Token = "0x4000496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
		private Transform connectedBodyTransform;

		[Token(Token = "0x4000497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
		private ConfigurableJointMotion angularXMotionDefault;

		[Token(Token = "0x4000498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F4")]
		private ConfigurableJointMotion angularYMotionDefault;

		[Token(Token = "0x4000499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
		private ConfigurableJointMotion angularZMotionDefault;

		[Token(Token = "0x400049A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2FC")]
		private bool directTargetParent;

		[Token(Token = "0x400049B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2FD")]
		private bool initiated;

		[Token(Token = "0x400049C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
		private Collider[] _colliders;

		[Token(Token = "0x400049D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
		private float lastReadTime;

		[Token(Token = "0x400049E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30C")]
		private float lastWriteTime;

		[Token(Token = "0x400049F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
		private bool[] disabledColliders;

		[Token(Token = "0x40004A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
		private TargetChild[] targetChildren;

		[Token(Token = "0x40004A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
		private Vector3 additionalTargetVelocity;

		[Token(Token = "0x40004A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32C")]
		private Vector3 targetAnimatedCenterOfMass;

		[Token(Token = "0x40004A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
		private Vector3 additionalPinTargetAnimatedCenterOfMass;

		[Token(Token = "0x40004A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x344")]
		private Quaternion defaultTargetRotRelToMuscleInverse;

		[Token(Token = "0x17000054")]
		public Transform transform
		{
			[Token(Token = "0x600046E")]
			[Address(RVA = "0xC1C43C", Offset = "0xC1C43C", VA = "0xC1C43C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DD484", Offset = "0x8DD484")]
			get
			{
				return null;
			}
			[Token(Token = "0x600046F")]
			[Address(RVA = "0xC1C444", Offset = "0xC1C444", VA = "0xC1C444")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DD494", Offset = "0x8DD494")]
			private set
			{
			}
		}

		[Token(Token = "0x17000055")]
		public Rigidbody rigidbody
		{
			[Token(Token = "0x6000470")]
			[Address(RVA = "0xC1C44C", Offset = "0xC1C44C", VA = "0xC1C44C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DD4A4", Offset = "0x8DD4A4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000471")]
			[Address(RVA = "0xC1C454", Offset = "0xC1C454", VA = "0xC1C454")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DD4B4", Offset = "0x8DD4B4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000056")]
		public Transform connectedBodyTarget
		{
			[Token(Token = "0x6000472")]
			[Address(RVA = "0xC1C45C", Offset = "0xC1C45C", VA = "0xC1C45C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DD4C4", Offset = "0x8DD4C4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000473")]
			[Address(RVA = "0xC1C464", Offset = "0xC1C464", VA = "0xC1C464")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DD4D4", Offset = "0x8DD4D4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000057")]
		public Vector3 targetAnimatedPosition
		{
			[Token(Token = "0x6000474")]
			[Address(RVA = "0xC1C46C", Offset = "0xC1C46C", VA = "0xC1C46C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DD4E4", Offset = "0x8DD4E4")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000475")]
			[Address(RVA = "0xC1C478", Offset = "0xC1C478", VA = "0xC1C478")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DD4F4", Offset = "0x8DD4F4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000058")]
		public Quaternion targetAnimatedWorldRotation
		{
			[Token(Token = "0x6000476")]
			[Address(RVA = "0xC1C484", Offset = "0xC1C484", VA = "0xC1C484")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DD504", Offset = "0x8DD504")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6000477")]
			[Address(RVA = "0xC1C490", Offset = "0xC1C490", VA = "0xC1C490")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DD514", Offset = "0x8DD514")]
			private set
			{
			}
		}

		[Token(Token = "0x17000059")]
		public Collider[] colliders
		{
			[Token(Token = "0x6000478")]
			[Address(RVA = "0xC1C49C", Offset = "0xC1C49C", VA = "0xC1C49C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000479")]
			[Address(RVA = "0xC1C4A4", Offset = "0xC1C4A4", VA = "0xC1C4A4")]
			set
			{
			}
		}

		[Token(Token = "0x1700005A")]
		public Vector3 targetVelocity
		{
			[Token(Token = "0x600047A")]
			[Address(RVA = "0xC1C4AC", Offset = "0xC1C4AC", VA = "0xC1C4AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DD524", Offset = "0x8DD524")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600047B")]
			[Address(RVA = "0xC1C4B8", Offset = "0xC1C4B8", VA = "0xC1C4B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DD534", Offset = "0x8DD534")]
			private set
			{
			}
		}

		[Token(Token = "0x1700005B")]
		public Rigidbody additionalRigidbody
		{
			[Token(Token = "0x600047C")]
			[Address(RVA = "0xC1C4C4", Offset = "0xC1C4C4", VA = "0xC1C4C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DD544", Offset = "0x8DD544")]
			get
			{
				return null;
			}
			[Token(Token = "0x600047D")]
			[Address(RVA = "0xC1C4CC", Offset = "0xC1C4CC", VA = "0xC1C4CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DD554", Offset = "0x8DD554")]
			private set
			{
			}
		}

		[Token(Token = "0x1700005C")]
		public Quaternion targetRotationRelative
		{
			[Token(Token = "0x600047E")]
			[Address(RVA = "0xC1C4D4", Offset = "0xC1C4D4", VA = "0xC1C4D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DD564", Offset = "0x8DD564")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x600047F")]
			[Address(RVA = "0xC1C4E8", Offset = "0xC1C4E8", VA = "0xC1C4E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DD574", Offset = "0x8DD574")]
			private set
			{
			}
		}

		[Token(Token = "0x1700005D")]
		public Rigidbody rebuildConnectedBody
		{
			[Token(Token = "0x6000481")]
			[Address(RVA = "0xC1C718", Offset = "0xC1C718", VA = "0xC1C718")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DD584", Offset = "0x8DD584")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000482")]
			[Address(RVA = "0xC1C720", Offset = "0xC1C720", VA = "0xC1C720")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DD594", Offset = "0x8DD594")]
			private set
			{
			}
		}

		[Token(Token = "0x1700005E")]
		public Transform rebuildTargetParent
		{
			[Token(Token = "0x6000483")]
			[Address(RVA = "0xC1C728", Offset = "0xC1C728", VA = "0xC1C728")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DD5A4", Offset = "0x8DD5A4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000484")]
			[Address(RVA = "0xC1C730", Offset = "0xC1C730", VA = "0xC1C730")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DD5B4", Offset = "0x8DD5B4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700005F")]
		public Vector3 defaultTargetPosRelToMuscle
		{
			[Token(Token = "0x6000485")]
			[Address(RVA = "0xC1C738", Offset = "0xC1C738", VA = "0xC1C738")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DD5C4", Offset = "0x8DD5C4")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000486")]
			[Address(RVA = "0xC1C748", Offset = "0xC1C748", VA = "0xC1C748")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DD5D4", Offset = "0x8DD5D4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000060")]
		public Quaternion defaultTargetRotRelToMuscle
		{
			[Token(Token = "0x6000487")]
			[Address(RVA = "0xC1C758", Offset = "0xC1C758", VA = "0xC1C758")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DD5E4", Offset = "0x8DD5E4")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6000488")]
			[Address(RVA = "0xC1C76C", Offset = "0xC1C76C", VA = "0xC1C76C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DD5F4", Offset = "0x8DD5F4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000061")]
		public Quaternion defaultMuscleRotRelToTarget
		{
			[Token(Token = "0x6000489")]
			[Address(RVA = "0xC1C780", Offset = "0xC1C780", VA = "0xC1C780")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DD604", Offset = "0x8DD604")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x600048A")]
			[Address(RVA = "0xC1C794", Offset = "0xC1C794", VA = "0xC1C794")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DD614", Offset = "0x8DD614")]
			private set
			{
			}
		}

		[Token(Token = "0x17000062")]
		private Quaternion localRotation
		{
			[Token(Token = "0x60004A9")]
			[Address(RVA = "0xC1DCC0", Offset = "0xC1DCC0", VA = "0xC1DCC0")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x17000063")]
		private Quaternion parentRotation
		{
			[Token(Token = "0x60004AA")]
			[Address(RVA = "0xC1DDD4", Offset = "0xC1DDD4", VA = "0xC1DDD4")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x17000064")]
		private Quaternion targetParentRotation
		{
			[Token(Token = "0x60004AB")]
			[Address(RVA = "0xC1DD40", Offset = "0xC1DD40", VA = "0xC1DD40")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x17000065")]
		private Quaternion targetLocalRotation
		{
			[Token(Token = "0x60004AC")]
			[Address(RVA = "0xC1DF00", Offset = "0xC1DF00", VA = "0xC1DF00")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x6000480")]
		[Address(RVA = "0xC1C4FC", Offset = "0xC1C4FC", VA = "0xC1C4FC")]
		public bool IsValid(bool log)
		{
			return default(bool);
		}

		[Token(Token = "0x600048B")]
		[Address(RVA = "0xC1C7A8", Offset = "0xC1C7A8", VA = "0xC1C7A8")]
		public void Rebuild()
		{
		}

		[Token(Token = "0x600048C")]
		[Address(RVA = "0xC1C90C", Offset = "0xC1C90C", VA = "0xC1C90C", Slot = "4")]
		public virtual void Initiate(Muscle[] colleagues)
		{
		}

		[Token(Token = "0x600048D")]
		[Address(RVA = "0xC1D94C", Offset = "0xC1D94C", VA = "0xC1D94C")]
		public void InitiateAdditionalPin()
		{
		}

		[Token(Token = "0x600048E")]
		[Address(RVA = "0xC1DB70", Offset = "0xC1DB70", VA = "0xC1DB70")]
		public void UpdateColliders()
		{
		}

		[Token(Token = "0x600048F")]
		[Address(RVA = "0xC1E578", Offset = "0xC1E578", VA = "0xC1E578")]
		public void DisableColliders()
		{
		}

		[Token(Token = "0x6000490")]
		[Address(RVA = "0xC1E680", Offset = "0xC1E680", VA = "0xC1E680")]
		public void EnableColliders()
		{
		}

		[Token(Token = "0x6000491")]
		[Address(RVA = "0xC1E208", Offset = "0xC1E208", VA = "0xC1E208")]
		private void AddColliders(Transform t, ref Collider[] C, bool includeMeshColliders)
		{
		}

		[Token(Token = "0x6000492")]
		[Address(RVA = "0xC1E468", Offset = "0xC1E468", VA = "0xC1E468")]
		private void AddCompoundColliders(Transform t, ref Collider[] colliders)
		{
		}

		[Token(Token = "0x6000493")]
		[Address(RVA = "0xC1E72C", Offset = "0xC1E72C", VA = "0xC1E72C")]
		public void IgnoreInternalCollisions(Muscle m)
		{
		}

		[Token(Token = "0x6000494")]
		[Address(RVA = "0xC1E900", Offset = "0xC1E900", VA = "0xC1E900")]
		public void ResetInternalCollisions(Muscle m, bool useInternalCollisionIgnores)
		{
		}

		[Token(Token = "0x6000495")]
		[Address(RVA = "0xC1EAFC", Offset = "0xC1EAFC", VA = "0xC1EAFC")]
		private bool ForceIgnore(Muscle otherMuscle)
		{
			return default(bool);
		}

		[Token(Token = "0x6000496")]
		[Address(RVA = "0xC1ED64", Offset = "0xC1ED64", VA = "0xC1ED64")]
		public void IgnoreAngularLimits(bool ignore)
		{
		}

		[Token(Token = "0x6000497")]
		[Address(RVA = "0xC1EE04", Offset = "0xC1EE04", VA = "0xC1EE04")]
		public void FixTargetTransforms()
		{
		}

		[Token(Token = "0x6000498")]
		[Address(RVA = "0xC1EE70", Offset = "0xC1EE70", VA = "0xC1EE70")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000499")]
		[Address(RVA = "0xC1F028", Offset = "0xC1F028", VA = "0xC1F028")]
		public void MoveToTarget()
		{
		}

		[Token(Token = "0x600049A")]
		[Address(RVA = "0xC1DAA0", Offset = "0xC1DAA0", VA = "0xC1DAA0")]
		public void SetKinematic(bool to)
		{
		}

		[Token(Token = "0x600049B")]
		[Address(RVA = "0xC1DF98", Offset = "0xC1DF98", VA = "0xC1DF98")]
		public void Read()
		{
		}

		[Token(Token = "0x600049C")]
		[Address(RVA = "0xC1F1A8", Offset = "0xC1F1A8", VA = "0xC1F1A8")]
		public void ClearVelocities()
		{
		}

		[Token(Token = "0x600049D")]
		[Address(RVA = "0xC1F330", Offset = "0xC1F330", VA = "0xC1F330")]
		public void UpdateAnchor(bool supportTranslationAnimation)
		{
		}

		[Token(Token = "0x600049E")]
		[Address(RVA = "0xC1F598", Offset = "0xC1F598", VA = "0xC1F598", Slot = "5")]
		public virtual void Update(float pinWeightMaster, float muscleWeightMaster, float muscleSpring, float muscleDamper, float pinPow, float pinDistanceFalloff, bool rotationTargetChanged, bool angularPinning, float deltaTime)
		{
		}

		[Token(Token = "0x600049F")]
		[Address(RVA = "0xC1FB10", Offset = "0xC1FB10", VA = "0xC1FB10")]
		public void StoreTargetMappedPosition()
		{
		}

		[Token(Token = "0x60004A0")]
		[Address(RVA = "0xC1FB4C", Offset = "0xC1FB4C", VA = "0xC1FB4C")]
		public void StoreTargetMappedRotation()
		{
		}

		[Token(Token = "0x60004A1")]
		[Address(RVA = "0xC1FB8C", Offset = "0xC1FB8C", VA = "0xC1FB8C")]
		public void Map(float mappingWeightMaster)
		{
		}

		[Token(Token = "0x60004A2")]
		[Address(RVA = "0xC1FF34", Offset = "0xC1FF34", VA = "0xC1FF34")]
		public void ResetTargetLocalPosition()
		{
		}

		[Token(Token = "0x60004A3")]
		[Address(RVA = "0xC1FF60", Offset = "0xC1FF60", VA = "0xC1FF60")]
		public void CalculateMappedVelocity()
		{
		}

		[Token(Token = "0x60004A4")]
		[Address(RVA = "0xC200CC", Offset = "0xC200CC", VA = "0xC200CC")]
		public void MapDisconnected()
		{
		}

		[Token(Token = "0x60004A5")]
		[Address(RVA = "0xC1F6C0", Offset = "0xC1F6C0", VA = "0xC1F6C0")]
		private void Pin(float pinWeightMaster, float pinPow, float pinDistanceFalloff, bool angularPinning, float deltaTime)
		{
		}

		[Token(Token = "0x60004A6")]
		[Address(RVA = "0xC201B8", Offset = "0xC201B8", VA = "0xC201B8")]
		private void Pin(Rigidbody r, Vector3 posOffset, Vector3 targetVel, float w, float pinDistanceFalloff, float deltaTime)
		{
		}

		[Token(Token = "0x60004A7")]
		[Address(RVA = "0xC1F950", Offset = "0xC1F950", VA = "0xC1F950")]
		private void MuscleRotation(float muscleWeightMaster, float muscleSpring, float muscleDamper)
		{
		}

		[Token(Token = "0x60004A8")]
		[Address(RVA = "0xC2058C", Offset = "0xC2058C", VA = "0xC2058C")]
		public void SetMuscleRotation(float muscleWeightMaster, float muscleSpring, float muscleDamper)
		{
		}

		[Token(Token = "0x60004AD")]
		[Address(RVA = "0xC2050C", Offset = "0xC2050C", VA = "0xC2050C")]
		private Quaternion LocalToJointSpace(Quaternion localRotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60004AE")]
		[Address(RVA = "0xC1F534", Offset = "0xC1F534", VA = "0xC1F534")]
		private static Vector3 InverseTransformPointUnscaled(Vector3 position, Quaternion rotation, Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60004AF")]
		[Address(RVA = "0xC206F8", Offset = "0xC206F8", VA = "0xC206F8")]
		public Muscle()
		{
		}
	}
	[Token(Token = "0x20000A4")]
	public struct MuscleCollision
	{
		[Token(Token = "0x40004C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int muscleIndex;

		[Token(Token = "0x40004CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Collision collision;

		[Token(Token = "0x40004CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool isStay;

		[Token(Token = "0x60004B8")]
		[Address(RVA = "0xC208F4", Offset = "0xC208F4", VA = "0xC208F4")]
		public MuscleCollision(int muscleIndex, Collision collision, bool isStay = false)
		{
		}
	}
	[Token(Token = "0x20000A5")]
	public struct MuscleHit
	{
		[Token(Token = "0x40004CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int muscleIndex;

		[Token(Token = "0x40004CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float unPin;

		[Token(Token = "0x40004CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector3 force;

		[Token(Token = "0x40004CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector3 position;

		[Token(Token = "0x60004B9")]
		[Address(RVA = "0xC209F4", Offset = "0xC209F4", VA = "0xC209F4")]
		public MuscleHit(int muscleIndex, float unPin, Vector3 force, Vector3 position)
		{
		}
	}
	[Token(Token = "0x20000A6")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8CB434", Offset = "0x8CB434")]
	public class MuscleCollisionBroadcaster : MonoBehaviour
	{
		[Token(Token = "0x40004D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		[SerializeField]
		public PuppetMaster puppetMaster;

		[Token(Token = "0x40004D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[HideInInspector]
		public int muscleIndex;

		[Token(Token = "0x40004D2")]
		private const string onMuscleHit = "OnMuscleHit";

		[Token(Token = "0x40004D3")]
		private const string onMuscleCollision = "OnMuscleCollision";

		[Token(Token = "0x40004D4")]
		private const string onMuscleCollisionExit = "OnMuscleCollisionExit";

		[Token(Token = "0x40004D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private MuscleCollisionBroadcaster otherBroadcaster;

		[Token(Token = "0x60004BA")]
		[Address(RVA = "0xC20908", Offset = "0xC20908", VA = "0xC20908")]
		public void Hit(float unPin, Vector3 force, Vector3 position)
		{
		}

		[Token(Token = "0x60004BB")]
		[Address(RVA = "0xC20A0C", Offset = "0xC20A0C", VA = "0xC20A0C")]
		public MuscleCollisionBroadcaster()
		{
		}
	}
	[Token(Token = "0x20000A7")]
	public static class PhysXTools
	{
		[Token(Token = "0x60004BC")]
		[Address(RVA = "0xC28754", Offset = "0xC28754", VA = "0xC28754")]
		public static void Predict(Rigidbody r, int steps, out Vector3 position, out Quaternion rotation)
		{
		}

		[Token(Token = "0x60004BD")]
		[Address(RVA = "0xC287F0", Offset = "0xC287F0", VA = "0xC287F0")]
		public static void Predict(Rigidbody r, int steps, out Vector3 position, out Quaternion rotation, Vector3 gravity, float drag, float angularDrag)
		{
		}

		[Token(Token = "0x60004BE")]
		[Address(RVA = "0xC288F0", Offset = "0xC288F0", VA = "0xC288F0")]
		public static void Predict(ref Vector3 position, ref Quaternion rotation, ref Vector3 velocity, ref Vector3 angularVelocity, Vector3 gravity, float drag, float angularDrag)
		{
		}

		[Token(Token = "0x60004BF")]
		[Address(RVA = "0xC28A84", Offset = "0xC28A84", VA = "0xC28A84")]
		public static Vector3 GetCenterOfMass(PuppetMaster puppet)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60004C0")]
		[Address(RVA = "0xC28C14", Offset = "0xC28C14", VA = "0xC28C14")]
		public static Vector3 GetCenterOfMass(Rigidbody[] rigidbodies)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60004C1")]
		[Address(RVA = "0xC28D60", Offset = "0xC28D60", VA = "0xC28D60")]
		public static Vector3 GetCenterOfMassVelocity(Rigidbody[] rigidbodies)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60004C2")]
		[Address(RVA = "0xC28EAC", Offset = "0xC28EAC", VA = "0xC28EAC")]
		public static void DivByInertia(ref Vector3 v, Quaternion rotation, Vector3 inertiaTensor)
		{
		}

		[Token(Token = "0x60004C3")]
		[Address(RVA = "0xC28F58", Offset = "0xC28F58", VA = "0xC28F58")]
		public static void ScaleByInertia(ref Vector3 v, Quaternion rotation, Vector3 inertiaTensor)
		{
		}

		[Token(Token = "0x60004C4")]
		[Address(RVA = "0xC28FF4", Offset = "0xC28FF4", VA = "0xC28FF4")]
		public static Vector3 GetFromToAcceleration(Vector3 fromV, Vector3 toV)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60004C5")]
		[Address(RVA = "0xC202CC", Offset = "0xC202CC", VA = "0xC202CC")]
		public static Vector3 GetAngularAcceleration(Quaternion fromR, Quaternion toR)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60004C6")]
		[Address(RVA = "0xC290C0", Offset = "0xC290C0", VA = "0xC290C0")]
		public static void AddFromToTorque(Rigidbody r, Quaternion toR, ForceMode forceMode)
		{
		}

		[Token(Token = "0x60004C7")]
		[Address(RVA = "0xC292A4", Offset = "0xC292A4", VA = "0xC292A4")]
		public static void AddFromToTorque(Rigidbody r, Vector3 fromV, Vector3 toV, ForceMode forceMode)
		{
		}

		[Token(Token = "0x60004C8")]
		[Address(RVA = "0xC29460", Offset = "0xC29460", VA = "0xC29460")]
		public static void AddFromToForce(Rigidbody r, Vector3 fromV, Vector3 toV, ForceMode forceMode)
		{
		}

		[Token(Token = "0x60004C9")]
		[Address(RVA = "0xC295D0", Offset = "0xC295D0", VA = "0xC295D0")]
		public static Vector3 GetLinearAcceleration(Vector3 fromPoint, Vector3 toPoint)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60004CA")]
		[Address(RVA = "0xC29614", Offset = "0xC29614", VA = "0xC29614")]
		public static Quaternion ToJointSpace(ConfigurableJoint joint)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60004CB")]
		[Address(RVA = "0xC1DC8C", Offset = "0xC1DC8C", VA = "0xC1DC8C")]
		public static Vector3 CalculateInertiaTensorCuboid(Vector3 size, float mass)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60004CC")]
		[Address(RVA = "0xC28F48", Offset = "0xC28F48", VA = "0xC28F48")]
		public static Vector3 Div(Vector3 v, Vector3 v2)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x20000A8")]
	public class PressureSensor : MonoBehaviour
	{
		[Token(Token = "0x40004D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool visualize;

		[Token(Token = "0x40004D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public LayerMask layers;

		[Token(Token = "0x40004D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D0A68", Offset = "0x8D0A68")]
		private Vector3 <center>k__BackingField;

		[Token(Token = "0x40004D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D0A78", Offset = "0x8D0A78")]
		private bool <inContact>k__BackingField;

		[Token(Token = "0x40004DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D0A88", Offset = "0x8D0A88")]
		private Vector3 <bottom>k__BackingField;

		[Token(Token = "0x40004DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D0A98", Offset = "0x8D0A98")]
		private Rigidbody <r>k__BackingField;

		[Token(Token = "0x40004DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool fixedFrame;

		[Token(Token = "0x40004DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 P;

		[Token(Token = "0x40004DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int count;

		[Token(Token = "0x17000067")]
		public Vector3 center
		{
			[Token(Token = "0x60004CD")]
			[Address(RVA = "0x10A4B00", Offset = "0x10A4B00", VA = "0x10A4B00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DD624", Offset = "0x8DD624")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60004CE")]
			[Address(RVA = "0x10A4B0C", Offset = "0x10A4B0C", VA = "0x10A4B0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DD634", Offset = "0x8DD634")]
			private set
			{
			}
		}

		[Token(Token = "0x17000068")]
		public bool inContact
		{
			[Token(Token = "0x60004CF")]
			[Address(RVA = "0x10A4B18", Offset = "0x10A4B18", VA = "0x10A4B18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DD644", Offset = "0x8DD644")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60004D0")]
			[Address(RVA = "0x10A4B20", Offset = "0x10A4B20", VA = "0x10A4B20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DD654", Offset = "0x8DD654")]
			private set
			{
			}
		}

		[Token(Token = "0x17000069")]
		public Vector3 bottom
		{
			[Token(Token = "0x60004D1")]
			[Address(RVA = "0x10A4B2C", Offset = "0x10A4B2C", VA = "0x10A4B2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DD664", Offset = "0x8DD664")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60004D2")]
			[Address(RVA = "0x10A4B38", Offset = "0x10A4B38", VA = "0x10A4B38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DD674", Offset = "0x8DD674")]
			private set
			{
			}
		}

		[Token(Token = "0x1700006A")]
		public Rigidbody r
		{
			[Token(Token = "0x60004D3")]
			[Address(RVA = "0x10A4B44", Offset = "0x10A4B44", VA = "0x10A4B44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DD684", Offset = "0x8DD684")]
			get
			{
				return null;
			}
			[Token(Token = "0x60004D4")]
			[Address(RVA = "0x10A4B4C", Offset = "0x10A4B4C", VA = "0x10A4B4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DD694", Offset = "0x8DD694")]
			private set
			{
			}
		}

		[Token(Token = "0x60004D5")]
		[Address(RVA = "0x10A4B54", Offset = "0x10A4B54", VA = "0x10A4B54")]
		private void Awake()
		{
		}

		[Token(Token = "0x60004D6")]
		[Address(RVA = "0x10A4BCC", Offset = "0x10A4BCC", VA = "0x10A4BCC")]
		private void OnCollisionEnter(Collision c)
		{
		}

		[Token(Token = "0x60004D7")]
		[Address(RVA = "0x10A4D34", Offset = "0x10A4D34", VA = "0x10A4D34")]
		private void OnCollisionStay(Collision c)
		{
		}

		[Token(Token = "0x60004D8")]
		[Address(RVA = "0x10A4D38", Offset = "0x10A4D38", VA = "0x10A4D38")]
		private void OnCollisionExit(Collision c)
		{
		}

		[Token(Token = "0x60004D9")]
		[Address(RVA = "0x10A4D40", Offset = "0x10A4D40", VA = "0x10A4D40")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60004DA")]
		[Address(RVA = "0x10A4D90", Offset = "0x10A4D90", VA = "0x10A4D90")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60004DB")]
		[Address(RVA = "0x10A4BD0", Offset = "0x10A4BD0", VA = "0x10A4BD0")]
		private void ProcessCollision(Collision c)
		{
		}

		[Token(Token = "0x60004DC")]
		[Address(RVA = "0x10A4DD0", Offset = "0x10A4DD0", VA = "0x10A4DD0")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60004DD")]
		[Address(RVA = "0x10A4DF4", Offset = "0x10A4DF4", VA = "0x10A4DF4")]
		public PressureSensor()
		{
		}
	}
	[Token(Token = "0x20000A9")]
	public abstract class Prop : MonoBehaviour
	{
		[Token(Token = "0x40004DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D0AA8", Offset = "0x8D0AA8")]
		public int propType;

		[Token(Token = "0x40004E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x8D0AE0", Offset = "0x8D0AE0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D0AE0", Offset = "0x8D0AE0")]
		public ConfigurableJoint muscle;

		[Token(Token = "0x40004E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D0B40", Offset = "0x8D0B40")]
		public Muscle.Props muscleProps;

		[Token(Token = "0x40004E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D0B78", Offset = "0x8D0B78")]
		public bool forceLayers;

		[Token(Token = "0x40004E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x8D0BB0", Offset = "0x8D0BB0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D0BB0", Offset = "0x8D0BB0")]
		public ConfigurableJoint additionalPin;

		[Token(Token = "0x40004E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D0C10", Offset = "0x8D0C10")]
		public Transform additionalPinTarget;

		[Token(Token = "0x40004E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D0C48", Offset = "0x8D0C48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D0C48", Offset = "0x8D0C48")]
		public float additionalPinWeight;

		[Token(Token = "0x40004E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D0C9C", Offset = "0x8D0C9C")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x8D0C9C", Offset = "0x8D0C9C")]
		public PhysicMaterial pickedUpMaterial;

		[Token(Token = "0x40004E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D0CFC", Offset = "0x8D0CFC")]
		public PhysicMaterial droppedMaterial;

		[Token(Token = "0x40004E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D0D34", Offset = "0x8D0D34")]
		private PropRoot <propRoot>k__BackingField;

		[Token(Token = "0x40004E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D0D44", Offset = "0x8D0D44")]
		private bool <initiated>k__BackingField;

		[Token(Token = "0x40004EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private ConfigurableJointMotion xMotion;

		[Token(Token = "0x40004EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private ConfigurableJointMotion yMotion;

		[Token(Token = "0x40004EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private ConfigurableJointMotion zMotion;

		[Token(Token = "0x40004ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private ConfigurableJointMotion angularXMotion;

		[Token(Token = "0x40004EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private ConfigurableJointMotion angularYMotion;

		[Token(Token = "0x40004EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private ConfigurableJointMotion angularZMotion;

		[Token(Token = "0x40004F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Collider[] colliders;

		[Token(Token = "0x1700006B")]
		public bool isPickedUp
		{
			[Token(Token = "0x60004DE")]
			[Address(RVA = "0x10A51AC", Offset = "0x10A51AC", VA = "0x10A51AC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700006C")]
		public PropRoot propRoot
		{
			[Token(Token = "0x60004DF")]
			[Address(RVA = "0x10A5218", Offset = "0x10A5218", VA = "0x10A5218")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DD6A4", Offset = "0x8DD6A4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60004E0")]
			[Address(RVA = "0x10A5220", Offset = "0x10A5220", VA = "0x10A5220")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DD6B4", Offset = "0x8DD6B4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700006D")]
		public bool initiated
		{
			[Token(Token = "0x60004E4")]
			[Address(RVA = "0x10A54E8", Offset = "0x10A54E8", VA = "0x10A54E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DD6C4", Offset = "0x8DD6C4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60004E5")]
			[Address(RVA = "0x10A54F0", Offset = "0x10A54F0", VA = "0x10A54F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DD6D4", Offset = "0x8DD6D4")]
			private set
			{
			}
		}

		[Token(Token = "0x60004E1")]
		[Address(RVA = "0x10A5228", Offset = "0x10A5228", VA = "0x10A5228")]
		public void PickUp(PropRoot propRoot)
		{
		}

		[Token(Token = "0x60004E2")]
		[Address(RVA = "0x10A54AC", Offset = "0x10A54AC", VA = "0x10A54AC")]
		public void Drop()
		{
		}

		[Token(Token = "0x60004E3")]
		[Address(RVA = "0x10A54E0", Offset = "0x10A54E0", VA = "0x10A54E0")]
		public void StartPickedUp(PropRoot propRoot)
		{
		}

		[Token(Token = "0x60004E6")]
		[Address(RVA = "0x10A54FC", Offset = "0x10A54FC", VA = "0x10A54FC", Slot = "4")]
		protected virtual void OnPickUp(PropRoot propRoot)
		{
		}

		[Token(Token = "0x60004E7")]
		[Address(RVA = "0x10A5500", Offset = "0x10A5500", VA = "0x10A5500", Slot = "5")]
		protected virtual void OnDrop()
		{
		}

		[Token(Token = "0x60004E8")]
		[Address(RVA = "0x10A5504", Offset = "0x10A5504", VA = "0x10A5504", Slot = "6")]
		protected virtual void OnStart()
		{
		}

		[Token(Token = "0x60004E9")]
		[Address(RVA = "0x10A5508", Offset = "0x10A5508", VA = "0x10A5508")]
		private void Start()
		{
		}

		[Token(Token = "0x60004EA")]
		[Address(RVA = "0x10A5750", Offset = "0x10A5750", VA = "0x10A5750")]
		private void ReleaseJoint()
		{
		}

		[Token(Token = "0x60004EB")]
		[Address(RVA = "0x10A53D8", Offset = "0x10A53D8", VA = "0x10A53D8")]
		private void SetMaterial(PhysicMaterial material)
		{
		}

		[Token(Token = "0x60004EC")]
		[Address(RVA = "0x10A5858", Offset = "0x10A5858", VA = "0x10A5858")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60004ED")]
		[Address(RVA = "0x10A5A04", Offset = "0x10A5A04", VA = "0x10A5A04")]
		protected Prop()
		{
		}
	}
	[Token(Token = "0x20000AA")]
	public class PropMuscle : MonoBehaviour
	{
		[Token(Token = "0x20000AB")]
		public delegate void PropDelegate(PuppetMasterProp prop);

		[Token(Token = "0x40004F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[HideInInspector]
		public PuppetMaster puppetMaster;

		[Token(Token = "0x40004F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D0D8C", Offset = "0x8D0D8C")]
		public PuppetMasterProp currentProp;

		[Token(Token = "0x40004F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D0DC4", Offset = "0x8D0DC4")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x8D0DC4", Offset = "0x8D0DC4")]
		public Vector3 additionalPinOffset;

		[Token(Token = "0x40004F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D0E24", Offset = "0x8D0E24")]
		private PuppetMasterProp <activeProp>k__BackingField;

		[Token(Token = "0x40004F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public PropDelegate OnPickUpProp;

		[Token(Token = "0x40004F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public PropDelegate OnDropProp;

		[Token(Token = "0x40004F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Muscle _muscle;

		[Token(Token = "0x40004F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private PuppetMasterProp lastProp;

		[Token(Token = "0x40004F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 targetDefaultLocalPos;

		[Token(Token = "0x40004FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 lastAdditionalPinOffset;

		[Token(Token = "0x1700006E")]
		public Muscle muscle
		{
			[Token(Token = "0x60004EE")]
			[Address(RVA = "0x10A5E40", Offset = "0x10A5E40", VA = "0x10A5E40")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006F")]
		public PuppetMasterProp activeProp
		{
			[Token(Token = "0x60004EF")]
			[Address(RVA = "0x10A5F10", Offset = "0x10A5F10", VA = "0x10A5F10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DD6E4", Offset = "0x8DD6E4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60004F0")]
			[Address(RVA = "0x10A5F18", Offset = "0x10A5F18", VA = "0x10A5F18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DD6F4", Offset = "0x8DD6F4")]
			private set
			{
			}
		}

		[Token(Token = "0x60004F1")]
		[Address(RVA = "0x10A5F20", Offset = "0x10A5F20", VA = "0x10A5F20")]
		public bool AddAdditionalPin()
		{
			return default(bool);
		}

		[Token(Token = "0x60004F2")]
		[Address(RVA = "0x10A6398", Offset = "0x10A6398", VA = "0x10A6398")]
		public bool RemoveAdditionalPin()
		{
			return default(bool);
		}

		[Token(Token = "0x60004F3")]
		[Address(RVA = "0x10A6534", Offset = "0x10A6534", VA = "0x10A6534")]
		public void OnInitiate()
		{
		}

		[Token(Token = "0x60004F4")]
		[Address(RVA = "0x10A6794", Offset = "0x10A6794", VA = "0x10A6794")]
		public void TakeOver()
		{
		}

		[Token(Token = "0x60004F5")]
		[Address(RVA = "0x10A67DC", Offset = "0x10A67DC", VA = "0x10A67DC")]
		public void OnUpdate()
		{
		}

		[Token(Token = "0x60004F6")]
		[Address(RVA = "0x10A6FE0", Offset = "0x10A6FE0", VA = "0x10A6FE0")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x60004F7")]
		[Address(RVA = "0x10A7270", Offset = "0x10A7270", VA = "0x10A7270")]
		public PropMuscle()
		{
		}
	}
	[Token(Token = "0x20000AC")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x8CB46C", Offset = "0x8CB46C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8CB46C", Offset = "0x8CB46C")]
	public class PropRoot : MonoBehaviour
	{
		[Token(Token = "0x40004FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D0E34", Offset = "0x8D0E34")]
		public PuppetMaster puppetMaster;

		[Token(Token = "0x40004FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D0E6C", Offset = "0x8D0E6C")]
		public Rigidbody connectTo;

		[Token(Token = "0x40004FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D0EA4", Offset = "0x8D0EA4")]
		public Prop currentProp;

		[Token(Token = "0x40004FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Prop lastProp;

		[Token(Token = "0x40004FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool fixedUpdateCalled;

		[Token(Token = "0x60004FC")]
		[Address(RVA = "0x10A7438", Offset = "0x10A7438", VA = "0x10A7438")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DD704", Offset = "0x8DD704")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x60004FD")]
		[Address(RVA = "0x10A7480", Offset = "0x10A7480", VA = "0x10A7480")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DD73C", Offset = "0x8DD73C")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x60004FE")]
		[Address(RVA = "0x10A74C8", Offset = "0x10A74C8", VA = "0x10A74C8")]
		public void DropImmediate()
		{
		}

		[Token(Token = "0x60004FF")]
		[Address(RVA = "0x10A82C8", Offset = "0x10A82C8", VA = "0x10A82C8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000500")]
		[Address(RVA = "0x10A83B0", Offset = "0x10A83B0", VA = "0x10A83B0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000501")]
		[Address(RVA = "0x10A84E4", Offset = "0x10A84E4", VA = "0x10A84E4")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000502")]
		[Address(RVA = "0x10A86F8", Offset = "0x10A86F8", VA = "0x10A86F8")]
		private void AttachProp(Prop prop)
		{
		}

		[Token(Token = "0x6000503")]
		[Address(RVA = "0x10A92FC", Offset = "0x10A92FC", VA = "0x10A92FC")]
		public PropRoot()
		{
		}
	}
	[Token(Token = "0x20000AD")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x8CB4CC", Offset = "0x8CB4CC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8CB4CC", Offset = "0x8CB4CC")]
	public class PropTemplate : Prop
	{
		[Token(Token = "0x6000504")]
		[Address(RVA = "0x10A9304", Offset = "0x10A9304", VA = "0x10A9304", Slot = "6")]
		protected override void OnStart()
		{
		}

		[Token(Token = "0x6000505")]
		[Address(RVA = "0x10A9308", Offset = "0x10A9308", VA = "0x10A9308", Slot = "4")]
		protected override void OnPickUp(PropRoot propRoot)
		{
		}

		[Token(Token = "0x6000506")]
		[Address(RVA = "0x10A930C", Offset = "0x10A930C", VA = "0x10A930C", Slot = "5")]
		protected override void OnDrop()
		{
		}

		[Token(Token = "0x6000507")]
		[Address(RVA = "0x10A9310", Offset = "0x10A9310", VA = "0x10A9310")]
		public PropTemplate()
		{
		}
	}
	[Token(Token = "0x20000AE")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8CB52C", Offset = "0x8CB52C")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x8CB52C", Offset = "0x8CB52C")]
	public class PuppetMaster : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20000AF")]
		public enum Mode
		{
			[Token(Token = "0x4000556")]
			Active,
			[Token(Token = "0x4000557")]
			Kinematic,
			[Token(Token = "0x4000558")]
			Disabled
		}

		[Token(Token = "0x20000B0")]
		public delegate void UpdateDelegate();

		[Token(Token = "0x20000B1")]
		public delegate void MuscleDelegate(Muscle muscle);

		[Serializable]
		[Token(Token = "0x20000B2")]
		public enum UpdateMode
		{
			[Token(Token = "0x400055A")]
			Normal,
			[Token(Token = "0x400055B")]
			AnimatePhysics,
			[Token(Token = "0x400055C")]
			FixedUpdate
		}

		[Serializable]
		[Token(Token = "0x20000B3")]
		public enum State
		{
			[Token(Token = "0x400055E")]
			Alive,
			[Token(Token = "0x400055F")]
			Dead,
			[Token(Token = "0x4000560")]
			Frozen
		}

		[Serializable]
		[Token(Token = "0x20000B4")]
		public struct StateSettings
		{
			[Token(Token = "0x4000561")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D15E4", Offset = "0x8D15E4")]
			public float killDuration;

			[Token(Token = "0x4000562")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D161C", Offset = "0x8D161C")]
			public float deadMuscleWeight;

			[Token(Token = "0x4000563")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D1654", Offset = "0x8D1654")]
			public float deadMuscleDamper;

			[Token(Token = "0x4000564")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D168C", Offset = "0x8D168C")]
			public float maxFreezeSqrVelocity;

			[Token(Token = "0x4000565")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D16C4", Offset = "0x8D16C4")]
			public bool freezePermanently;

			[Token(Token = "0x4000566")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D16FC", Offset = "0x8D16FC")]
			public bool enableAngularLimitsOnKill;

			[Token(Token = "0x4000567")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D1734", Offset = "0x8D1734")]
			public bool enableInternalCollisionsOnKill;

			[Token(Token = "0x1700007F")]
			public static StateSettings Default
			{
				[Token(Token = "0x60005AB")]
				[Address(RVA = "0x1908BE4", Offset = "0x1908BE4", VA = "0x1908BE4")]
				get
				{
					return default(StateSettings);
				}
			}

			[Token(Token = "0x60005AA")]
			[Address(RVA = "0x1908BC0", Offset = "0x1908BC0", VA = "0x1908BC0")]
			public StateSettings(float killDuration, float deadMuscleWeight = 0.01f, float deadMuscleDamper = 2f, float maxFreezeSqrVelocity = 0.02f, bool freezePermanently = false, bool enableAngularLimitsOnKill = true, bool enableInternalCollisionsOnKill = true)
			{
			}
		}

		[Token(Token = "0x20000B5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB58C", Offset = "0x8CB58C")]
		private sealed class <DisabledToActive>d__174 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000568")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000569")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400056A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PuppetMaster <>4__this;

			[Token(Token = "0x17000080")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60005AF")]
				[Address(RVA = "0x1908564", Offset = "0x1908564", VA = "0x1908564", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000081")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60005B1")]
				[Address(RVA = "0x19085AC", Offset = "0x19085AC", VA = "0x19085AC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60005AC")]
			[Address(RVA = "0x19082E4", Offset = "0x19082E4", VA = "0x19082E4")]
			[DebuggerHidden]
			public <DisabledToActive>d__174(int <>1__state)
			{
			}

			[Token(Token = "0x60005AD")]
			[Address(RVA = "0x1908310", Offset = "0x1908310", VA = "0x1908310", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60005AE")]
			[Address(RVA = "0x1908314", Offset = "0x1908314", VA = "0x1908314", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60005B0")]
			[Address(RVA = "0x190856C", Offset = "0x190856C", VA = "0x190856C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20000B6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB59C", Offset = "0x8CB59C")]
		private sealed class <KinematicToActive>d__176 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400056B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400056C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400056D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PuppetMaster <>4__this;

			[Token(Token = "0x17000082")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60005B5")]
				[Address(RVA = "0x19087BC", Offset = "0x19087BC", VA = "0x19087BC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000083")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60005B7")]
				[Address(RVA = "0x1908804", Offset = "0x1908804", VA = "0x1908804", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60005B2")]
			[Address(RVA = "0x19085B4", Offset = "0x19085B4", VA = "0x19085B4")]
			[DebuggerHidden]
			public <KinematicToActive>d__176(int <>1__state)
			{
			}

			[Token(Token = "0x60005B3")]
			[Address(RVA = "0x19085E0", Offset = "0x19085E0", VA = "0x19085E0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60005B4")]
			[Address(RVA = "0x19085E4", Offset = "0x19085E4", VA = "0x19085E4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60005B6")]
			[Address(RVA = "0x19087C4", Offset = "0x19087C4", VA = "0x19087C4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20000B7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB5AC", Offset = "0x8CB5AC")]
		private sealed class <ActiveToDisabled>d__177 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400056E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400056F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000570")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PuppetMaster <>4__this;

			[Token(Token = "0x17000084")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60005BB")]
				[Address(RVA = "0x1907AD4", Offset = "0x1907AD4", VA = "0x1907AD4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000085")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60005BD")]
				[Address(RVA = "0x1907B1C", Offset = "0x1907B1C", VA = "0x1907B1C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60005B8")]
			[Address(RVA = "0x190796C", Offset = "0x190796C", VA = "0x190796C")]
			[DebuggerHidden]
			public <ActiveToDisabled>d__177(int <>1__state)
			{
			}

			[Token(Token = "0x60005B9")]
			[Address(RVA = "0x1907998", Offset = "0x1907998", VA = "0x1907998", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60005BA")]
			[Address(RVA = "0x190799C", Offset = "0x190799C", VA = "0x190799C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60005BC")]
			[Address(RVA = "0x1907ADC", Offset = "0x1907ADC", VA = "0x1907ADC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20000B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB5BC", Offset = "0x8CB5BC")]
		private sealed class <ActiveToKinematic>d__178 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000571")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000572")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000573")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PuppetMaster <>4__this;

			[Token(Token = "0x17000086")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60005C1")]
				[Address(RVA = "0x1907CC4", Offset = "0x1907CC4", VA = "0x1907CC4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000087")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60005C3")]
				[Address(RVA = "0x1907D0C", Offset = "0x1907D0C", VA = "0x1907D0C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60005BE")]
			[Address(RVA = "0x1907B24", Offset = "0x1907B24", VA = "0x1907B24")]
			[DebuggerHidden]
			public <ActiveToKinematic>d__178(int <>1__state)
			{
			}

			[Token(Token = "0x60005BF")]
			[Address(RVA = "0x1907B50", Offset = "0x1907B50", VA = "0x1907B50", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60005C0")]
			[Address(RVA = "0x1907B54", Offset = "0x1907B54", VA = "0x1907B54", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60005C2")]
			[Address(RVA = "0x1907CCC", Offset = "0x1907CCC", VA = "0x1907CCC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20000B9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB5CC", Offset = "0x8CB5CC")]
		private sealed class <AliveToDead>d__229 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000574")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000575")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000576")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PuppetMaster <>4__this;

			[Token(Token = "0x4000577")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool freeze;

			[Token(Token = "0x4000578")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <range>5__2;

			[Token(Token = "0x4000579")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <mW>5__3;

			[Token(Token = "0x17000088")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60005C7")]
				[Address(RVA = "0x1908294", Offset = "0x1908294", VA = "0x1908294", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000089")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60005C9")]
				[Address(RVA = "0x19082DC", Offset = "0x19082DC", VA = "0x19082DC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60005C4")]
			[Address(RVA = "0x1907D14", Offset = "0x1907D14", VA = "0x1907D14")]
			[DebuggerHidden]
			public <AliveToDead>d__229(int <>1__state)
			{
			}

			[Token(Token = "0x60005C5")]
			[Address(RVA = "0x1907D40", Offset = "0x1907D40", VA = "0x1907D40", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60005C6")]
			[Address(RVA = "0x1907D44", Offset = "0x1907D44", VA = "0x1907D44", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60005C8")]
			[Address(RVA = "0x190829C", Offset = "0x190829C", VA = "0x190829C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D0EDC", Offset = "0x8D0EDC")]
		public PuppetMasterHumanoidConfig humanoidConfig;

		[Token(Token = "0x4000501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform targetRoot;

		[Token(Token = "0x4000502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D0F14", Offset = "0x8D0F14")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x8D0F14", Offset = "0x8D0F14")]
		public State state;

		[Token(Token = "0x4000503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "ContextMenuItemAttribute", RVA = "0x8D0F74", Offset = "0x8D0F74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D0F74", Offset = "0x8D0F74")]
		public StateSettings stateSettings;

		[Token(Token = "0x4000504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D0FF0", Offset = "0x8D0FF0")]
		public Mode mode;

		[Token(Token = "0x4000505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D1028", Offset = "0x8D1028")]
		public float blendTime;

		[Token(Token = "0x4000506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D1060", Offset = "0x8D1060")]
		public bool fixTargetTransforms;

		[Token(Token = "0x4000507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D1098", Offset = "0x8D1098")]
		public int solverIterationCount;

		[Token(Token = "0x4000508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D10D0", Offset = "0x8D10D0")]
		public bool visualizeTargetPose;

		[Token(Token = "0x4000509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x8D1108", Offset = "0x8D1108")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D1108", Offset = "0x8D1108")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D1108", Offset = "0x8D1108")]
		public float mappingWeight;

		[Token(Token = "0x400050A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D1180", Offset = "0x8D1180")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D1180", Offset = "0x8D1180")]
		public float pinWeight;

		[Token(Token = "0x400050B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D11D4", Offset = "0x8D11D4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D11D4", Offset = "0x8D11D4")]
		public float muscleWeight;

		[Token(Token = "0x400050C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x8D1228", Offset = "0x8D1228")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D1228", Offset = "0x8D1228")]
		public float muscleSpring;

		[Token(Token = "0x400050D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D1288", Offset = "0x8D1288")]
		public float muscleDamper;

		[Token(Token = "0x400050E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D12C0", Offset = "0x8D12C0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D12C0", Offset = "0x8D12C0")]
		public float pinPow;

		[Token(Token = "0x400050F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D1314", Offset = "0x8D1314")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D1314", Offset = "0x8D1314")]
		public float pinDistanceFalloff;

		[Token(Token = "0x4000510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D136C", Offset = "0x8D136C")]
		public bool angularPinning;

		[Token(Token = "0x4000511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D13A4", Offset = "0x8D13A4")]
		public bool updateJointAnchors;

		[Token(Token = "0x4000512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D13DC", Offset = "0x8D13DC")]
		public bool supportTranslationAnimation;

		[Token(Token = "0x4000513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x73")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D1414", Offset = "0x8D1414")]
		public bool angularLimits;

		[Token(Token = "0x4000514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D144C", Offset = "0x8D144C")]
		public bool internalCollisions;

		[Token(Token = "0x4000515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x8D1484", Offset = "0x8D1484")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D1484", Offset = "0x8D1484")]
		public Muscle[] muscles;

		[Token(Token = "0x4000516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		[SerializeField]
		public PropMuscle[] propMuscles;

		[Token(Token = "0x4000517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public UpdateDelegate OnPostInitiate;

		[Token(Token = "0x4000518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public UpdateDelegate OnRead;

		[Token(Token = "0x4000519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public UpdateDelegate OnWrite;

		[Token(Token = "0x400051A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public UpdateDelegate OnPostLateUpdate;

		[Token(Token = "0x400051B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public UpdateDelegate OnFixTransforms;

		[Token(Token = "0x400051C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public UpdateDelegate OnHierarchyChanged;

		[Token(Token = "0x400051D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public MuscleDelegate OnMuscleRemoved;

		[Token(Token = "0x400051E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public MuscleDelegate OnMuscleDisconnected;

		[Token(Token = "0x400051F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public MuscleDelegate OnMuscleReconnected;

		[Token(Token = "0x4000520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Animator _targetAnimator;

		[Token(Token = "0x4000521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D151C", Offset = "0x8D151C")]
		private Animation <targetAnimation>k__BackingField;

		[Token(Token = "0x4000522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D152C", Offset = "0x8D152C")]
		private BehaviourBase[] <behaviours>k__BackingField;

		[Token(Token = "0x4000523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D153C", Offset = "0x8D153C")]
		private bool <initiated>k__BackingField;

		[Token(Token = "0x4000524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[HideInInspector]
		public List<SolverManager> solvers;

		[NonSerialized]
		[Token(Token = "0x4000525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[HideInInspector]
		public bool manualInternalCollisionControl;

		[NonSerialized]
		[Token(Token = "0x4000526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF9")]
		[HideInInspector]
		public bool manualAngularLimitControl;

		[Token(Token = "0x4000527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFA")]
		[HideInInspector]
		[SerializeField]
		public bool mapDisconnectedMuscles;

		[Token(Token = "0x4000528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFB")]
		private bool internalCollisionsEnabled;

		[Token(Token = "0x4000529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		private bool angularLimitsEnabled;

		[Token(Token = "0x400052A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFD")]
		private bool fixedFrame;

		[Token(Token = "0x400052B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private int lastSolverIterationCount;

		[Token(Token = "0x400052C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private bool isLegacy;

		[Token(Token = "0x400052D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x105")]
		private bool animatorDisabled;

		[Token(Token = "0x400052E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x106")]
		private bool awakeFailed;

		[Token(Token = "0x400052F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x107")]
		private bool interpolated;

		[Token(Token = "0x4000530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private bool freezeFlag;

		[Token(Token = "0x4000531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x109")]
		private bool hasBeenDisabled;

		[Token(Token = "0x4000532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10A")]
		private bool hierarchyIsFlat;

		[Token(Token = "0x4000533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10B")]
		private bool teleport;

		[Token(Token = "0x4000534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private Vector3 teleportPosition;

		[Token(Token = "0x4000535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Quaternion teleportRotation;

		[Token(Token = "0x4000536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private bool teleportMoveToTarget;

		[Token(Token = "0x4000537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x129")]
		private bool rebuildFlag;

		[Token(Token = "0x4000538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12A")]
		private bool onPostRebuildFlag;

		[Token(Token = "0x4000539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private bool[] disconnectMuscleFlags;

		[Token(Token = "0x400053A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private MuscleDisconnectMode[] muscleDisconnectModes;

		[Token(Token = "0x400053B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private bool[] disconnectDeactivateFlags;

		[Token(Token = "0x400053C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private bool[] reconnectMuscleFlags;

		[Token(Token = "0x400053D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private Muscle[] defaultMuscles;

		[Token(Token = "0x400053E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private Vector3 rebuildPelvisPos;

		[Token(Token = "0x400053F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		private Quaternion rebuildPelvisRot;

		[Token(Token = "0x4000540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		public bool doUpdate;

		[Token(Token = "0x4000541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x175")]
		private bool readInFixedUpdate;

		[Token(Token = "0x4000542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x176")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D15B4", Offset = "0x8D15B4")]
		private bool <isSwitchingMode>k__BackingField;

		[Token(Token = "0x4000543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private Mode activeMode;

		[Token(Token = "0x4000544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		private Mode lastMode;

		[Token(Token = "0x4000545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private float mappingBlend;

		[Token(Token = "0x4000546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D15C4", Offset = "0x8D15C4")]
		private bool <isKilling>k__BackingField;

		[Token(Token = "0x4000547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public UpdateDelegate OnFreeze;

		[Token(Token = "0x4000548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public UpdateDelegate OnUnfreeze;

		[Token(Token = "0x4000549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public UpdateDelegate OnDeath;

		[Token(Token = "0x400054A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public UpdateDelegate OnResurrection;

		[Token(Token = "0x400054B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private State activeState;

		[Token(Token = "0x400054C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		private State lastState;

		[Token(Token = "0x400054D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private bool angularLimitsEnabledOnKill;

		[Token(Token = "0x400054E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B1")]
		private bool internalCollisionsEnabledOnKill;

		[Token(Token = "0x400054F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B2")]
		private bool animationDisabledbyStates;

		[Token(Token = "0x4000550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B3")]
		[HideInInspector]
		public bool storeTargetMappedState;

		[Token(Token = "0x4000551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
		private bool targetMappedStateStored;

		[Token(Token = "0x4000552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B5")]
		private bool targetMappedStateSampled;

		[Token(Token = "0x4000553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B6")]
		private bool sampleTargetMappedState;

		[Token(Token = "0x4000554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B7")]
		private bool hasProp;

		[Token(Token = "0x17000070")]
		public Animator targetAnimator
		{
			[Token(Token = "0x600050F")]
			[Address(RVA = "0x10A9D40", Offset = "0x10A9D40", VA = "0x10A9D40")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000510")]
			[Address(RVA = "0x10A9E90", Offset = "0x10A9E90", VA = "0x10A9E90")]
			set
			{
			}
		}

		[Token(Token = "0x17000071")]
		public Animation targetAnimation
		{
			[Token(Token = "0x6000511")]
			[Address(RVA = "0x10A9E98", Offset = "0x10A9E98", VA = "0x10A9E98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DD8C4", Offset = "0x8DD8C4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000512")]
			[Address(RVA = "0x10A9EA0", Offset = "0x10A9EA0", VA = "0x10A9EA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DD8D4", Offset = "0x8DD8D4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000072")]
		public BehaviourBase[] behaviours
		{
			[Token(Token = "0x6000513")]
			[Address(RVA = "0x10A9EA8", Offset = "0x10A9EA8", VA = "0x10A9EA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DD8E4", Offset = "0x8DD8E4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000514")]
			[Address(RVA = "0x10A9EB0", Offset = "0x10A9EB0", VA = "0x10A9EB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DD8F4", Offset = "0x8DD8F4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000073")]
		public bool isActive
		{
			[Token(Token = "0x6000515")]
			[Address(RVA = "0x10A9EB8", Offset = "0x10A9EB8", VA = "0x10A9EB8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000074")]
		public bool initiated
		{
			[Token(Token = "0x6000516")]
			[Address(RVA = "0x10A9F4C", Offset = "0x10A9F4C", VA = "0x10A9F4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DD904", Offset = "0x8DD904")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000517")]
			[Address(RVA = "0x10A9F54", Offset = "0x10A9F54", VA = "0x10A9F54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DD914", Offset = "0x8DD914")]
			private set
			{
			}
		}

		[Token(Token = "0x17000075")]
		public UpdateMode updateMode
		{
			[Token(Token = "0x6000518")]
			[Address(RVA = "0x10A9F60", Offset = "0x10A9F60", VA = "0x10A9F60")]
			get
			{
				return default(UpdateMode);
			}
		}

		[Token(Token = "0x17000076")]
		public bool controlsAnimator
		{
			[Token(Token = "0x6000519")]
			[Address(RVA = "0x10AA098", Offset = "0x10AA098", VA = "0x10AA098")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000077")]
		public bool isBlending
		{
			[Token(Token = "0x600051A")]
			[Address(RVA = "0x10A9F28", Offset = "0x10A9F28", VA = "0x10A9F28")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000078")]
		private bool autoSimulate
		{
			[Token(Token = "0x600051E")]
			[Address(RVA = "0x10AAA40", Offset = "0x10AAA40", VA = "0x10AAA40")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000079")]
		private AnimatorUpdateMode targetUpdateMode
		{
			[Token(Token = "0x6000532")]
			[Address(RVA = "0x10A9FA0", Offset = "0x10A9FA0", VA = "0x10A9FA0")]
			get
			{
				return default(AnimatorUpdateMode);
			}
		}

		[Token(Token = "0x1700007A")]
		public bool isSwitchingMode
		{
			[Token(Token = "0x600055C")]
			[Address(RVA = "0x10B1D94", Offset = "0x10B1D94", VA = "0x10B1D94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DDA04", Offset = "0x8DDA04")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600055D")]
			[Address(RVA = "0x10B1D9C", Offset = "0x10B1D9C", VA = "0x10B1D9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DDA14", Offset = "0x8DDA14")]
			private set
			{
			}
		}

		[Token(Token = "0x1700007B")]
		public bool isSwitchingState
		{
			[Token(Token = "0x600057D")]
			[Address(RVA = "0x10AA0F8", Offset = "0x10AA0F8", VA = "0x10AA0F8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700007C")]
		public bool isKilling
		{
			[Token(Token = "0x600057E")]
			[Address(RVA = "0x10B56C4", Offset = "0x10B56C4", VA = "0x10B56C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DDBA4", Offset = "0x8DDBA4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600057F")]
			[Address(RVA = "0x10B56CC", Offset = "0x10B56CC", VA = "0x10B56CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DDBB4", Offset = "0x8DDBB4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700007D")]
		public bool isAlive
		{
			[Token(Token = "0x6000580")]
			[Address(RVA = "0x10AF070", Offset = "0x10AF070", VA = "0x10AF070")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700007E")]
		public bool isFrozen
		{
			[Token(Token = "0x6000581")]
			[Address(RVA = "0x10ADD14", Offset = "0x10ADD14", VA = "0x10ADD14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000508")]
		[Address(RVA = "0x10A9B40", Offset = "0x10A9B40", VA = "0x10A9B40")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DD774", Offset = "0x8DD774")]
		private void OpenUserManualSetup()
		{
		}

		[Token(Token = "0x6000509")]
		[Address(RVA = "0x10A9B88", Offset = "0x10A9B88", VA = "0x10A9B88")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DD7AC", Offset = "0x8DD7AC")]
		private void OpenUserManualComponent()
		{
		}

		[Token(Token = "0x600050A")]
		[Address(RVA = "0x10A9BD0", Offset = "0x10A9BD0", VA = "0x10A9BD0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DD7E4", Offset = "0x8DD7E4")]
		private void OpenUserManualPerformance()
		{
		}

		[Token(Token = "0x600050B")]
		[Address(RVA = "0x10A9C18", Offset = "0x10A9C18", VA = "0x10A9C18")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DD81C", Offset = "0x8DD81C")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x600050C")]
		[Address(RVA = "0x10A9C60", Offset = "0x10A9C60", VA = "0x10A9C60")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DD854", Offset = "0x8DD854")]
		private void OpenSetupTutorial()
		{
		}

		[Token(Token = "0x600050D")]
		[Address(RVA = "0x10A9CA8", Offset = "0x10A9CA8", VA = "0x10A9CA8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DD88C", Offset = "0x8DD88C")]
		private void OpenComponentTutorial()
		{
		}

		[Token(Token = "0x600050E")]
		[Address(RVA = "0x10A9CF0", Offset = "0x10A9CF0", VA = "0x10A9CF0")]
		private void ResetStateSettings()
		{
		}

		[Token(Token = "0x600051B")]
		[Address(RVA = "0x10AA10C", Offset = "0x10AA10C", VA = "0x10AA10C")]
		public void Teleport(Vector3 position, Quaternion rotation, bool moveToTarget)
		{
		}

		[Token(Token = "0x600051C")]
		[Address(RVA = "0x10AA8CC", Offset = "0x10AA8CC", VA = "0x10AA8CC")]
		public void SetInternalCollisionsManual(bool collide, bool useInternalCollisionIgnores)
		{
		}

		[Token(Token = "0x600051D")]
		[Address(RVA = "0x10AA9B8", Offset = "0x10AA9B8", VA = "0x10AA9B8")]
		public void SetAngularLimitsManual(bool limited)
		{
		}

		[Token(Token = "0x600051F")]
		[Address(RVA = "0x10AAA48", Offset = "0x10AAA48", VA = "0x10AAA48")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000520")]
		[Address(RVA = "0x10AAAF4", Offset = "0x10AAAF4", VA = "0x10AAAF4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000521")]
		[Address(RVA = "0x10AB228", Offset = "0x10AB228", VA = "0x10AB228")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000522")]
		[Address(RVA = "0x10ABCD0", Offset = "0x10ABCD0", VA = "0x10ABCD0")]
		public void Start()
		{
		}

		[Token(Token = "0x6000523")]
		[Address(RVA = "0x10ABD80", Offset = "0x10ABD80", VA = "0x10ABD80")]
		public Transform FindTargetRootRecursive(Transform t)
		{
			return null;
		}

		[Token(Token = "0x6000524")]
		[Address(RVA = "0x10AB26C", Offset = "0x10AB26C", VA = "0x10AB26C")]
		private void Initiate()
		{
		}

		[Token(Token = "0x6000525")]
		[Address(RVA = "0x10ACF90", Offset = "0x10ACF90", VA = "0x10ACF90")]
		private void ActivateBehaviour(BehaviourBase behaviour)
		{
		}

		[Token(Token = "0x6000526")]
		[Address(RVA = "0x10AD088", Offset = "0x10AD088", VA = "0x10AD088")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000527")]
		[Address(RVA = "0x10AD190", Offset = "0x10AD190", VA = "0x10AD190")]
		private bool IsInterpolated()
		{
			return default(bool);
		}

		[Token(Token = "0x6000528")]
		[Address(RVA = "0x10AD21C", Offset = "0x10AD21C", VA = "0x10AD21C")]
		private void OnRebuild()
		{
		}

		[Token(Token = "0x6000529")]
		[Address(RVA = "0x10AD554", Offset = "0x10AD554", VA = "0x10AD554")]
		public void OnPreSimulate(float deltaTime)
		{
		}

		[Token(Token = "0x600052A")]
		[Address(RVA = "0x10ADE0C", Offset = "0x10ADE0C", VA = "0x10ADE0C")]
		public void OnPostSimulate()
		{
		}

		[Token(Token = "0x600052B")]
		[Address(RVA = "0x10AE578", Offset = "0x10AE578", VA = "0x10AE578", Slot = "4")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x600052C")]
		[Address(RVA = "0x10AEB00", Offset = "0x10AEB00", VA = "0x10AEB00", Slot = "5")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x600052D")]
		[Address(RVA = "0x10AEBE4", Offset = "0x10AEBE4", VA = "0x10AEBE4", Slot = "6")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x600052E")]
		[Address(RVA = "0x10AED78", Offset = "0x10AED78", VA = "0x10AED78", Slot = "7")]
		protected virtual void OnLateUpdate()
		{
		}

		[Token(Token = "0x600052F")]
		[Address(RVA = "0x10AE148", Offset = "0x10AE148", VA = "0x10AE148")]
		private void MoveToTarget()
		{
		}

		[Token(Token = "0x6000530")]
		[Address(RVA = "0x10AA14C", Offset = "0x10AA14C", VA = "0x10AA14C")]
		private void Read()
		{
		}

		[Token(Token = "0x6000531")]
		[Address(RVA = "0x10ADBD0", Offset = "0x10ADBD0", VA = "0x10ADBD0")]
		private void FixTargetTransforms()
		{
		}

		[Token(Token = "0x6000533")]
		[Address(RVA = "0x10AF080", Offset = "0x10AF080", VA = "0x10AF080")]
		private void VisualizeTargetPose()
		{
		}

		[Token(Token = "0x6000534")]
		[Address(RVA = "0x10AF330", Offset = "0x10AF330", VA = "0x10AF330")]
		private void VisualizeHierarchy(Transform t, Color color)
		{
		}

		[Token(Token = "0x6000535")]
		[Address(RVA = "0x10ACE9C", Offset = "0x10ACE9C", VA = "0x10ACE9C")]
		public void FlagInternalCollisionsForUpdate()
		{
		}

		[Token(Token = "0x6000536")]
		[Address(RVA = "0x10ADD24", Offset = "0x10ADD24", VA = "0x10ADD24")]
		private void UpdateInternalCollisions()
		{
		}

		[Token(Token = "0x6000537")]
		[Address(RVA = "0x10AF664", Offset = "0x10AF664", VA = "0x10AF664")]
		public void UpdateInternalCollisions(Muscle m)
		{
		}

		[Token(Token = "0x6000538")]
		[Address(RVA = "0x10AF58C", Offset = "0x10AF58C", VA = "0x10AF58C")]
		private void IgnoreInternalCollisions()
		{
		}

		[Token(Token = "0x6000539")]
		[Address(RVA = "0x10AF71C", Offset = "0x10AF71C", VA = "0x10AF71C")]
		public void IgnoreInternalCollisions(Muscle m)
		{
		}

		[Token(Token = "0x600053A")]
		[Address(RVA = "0x10AF4AC", Offset = "0x10AF4AC", VA = "0x10AF4AC")]
		private void ResetInternalCollisions()
		{
		}

		[Token(Token = "0x600053B")]
		[Address(RVA = "0x10AF7AC", Offset = "0x10AF7AC", VA = "0x10AF7AC")]
		public void ResetInternalCollisions(Muscle m, bool useInternalCollisionIgnores)
		{
		}

		[Token(Token = "0x600053C")]
		[Address(RVA = "0x10ACEB8", Offset = "0x10ACEB8", VA = "0x10ACEB8")]
		public void FlagAngularLimitsForUpdate()
		{
		}

		[Token(Token = "0x600053D")]
		[Address(RVA = "0x10ADD5C", Offset = "0x10ADD5C", VA = "0x10ADD5C")]
		private void UpdateAngularLimits()
		{
		}

		[Token(Token = "0x600053E")]
		[Address(RVA = "0x10AF84C", Offset = "0x10AF84C", VA = "0x10AF84C")]
		public bool AddPropMuscle(ConfigurableJoint addPropMuscleTo, Vector3 position, Quaternion rotation, Vector3 additionalPinOffset, [Optional] Transform targetParent, [Optional] PuppetMasterProp initiateWithProp)
		{
			return default(bool);
		}

		[Token(Token = "0x600053F")]
		[Address(RVA = "0x10A6D58", Offset = "0x10A6D58", VA = "0x10A6D58")]
		public bool IsDisconnecting(int muscleIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6000540")]
		[Address(RVA = "0x10A6D94", Offset = "0x10A6D94", VA = "0x10A6D94")]
		public bool IsReconnecting(int muscleIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6000541")]
		[Address(RVA = "0x10A662C", Offset = "0x10A662C", VA = "0x10A662C")]
		public void DisconnectMuscleRecursive(int index, MuscleDisconnectMode disconnectMode = MuscleDisconnectMode.Sever, bool deactivate = false)
		{
		}

		[Token(Token = "0x6000542")]
		[Address(RVA = "0x10A6DD0", Offset = "0x10A6DD0", VA = "0x10A6DD0")]
		public void ReconnectMuscleRecursive(int index)
		{
		}

		[Token(Token = "0x6000543")]
		[Address(RVA = "0x10A894C", Offset = "0x10A894C", VA = "0x10A894C")]
		public void AddMuscle(ConfigurableJoint joint, Transform target, Rigidbody connectTo, Transform targetParent, [Optional] Muscle.Props muscleProps, bool forceTreeHierarchy = false, bool forceLayers = true)
		{
		}

		[Token(Token = "0x6000544")]
		[Address(RVA = "0x10B0408", Offset = "0x10B0408", VA = "0x10B0408")]
		public void Rebuild()
		{
		}

		[Token(Token = "0x6000545")]
		[Address(RVA = "0x10A7590", Offset = "0x10A7590", VA = "0x10A7590")]
		public void RemoveMuscleRecursive(ConfigurableJoint joint, bool attachTarget, bool blockTargetAnimation = false, MuscleRemoveMode removeMode = MuscleRemoveMode.Sever)
		{
		}

		[Token(Token = "0x6000546")]
		[Address(RVA = "0x10B0758", Offset = "0x10B0758", VA = "0x10B0758")]
		public void ReplaceMuscle(ConfigurableJoint oldJoint, ConfigurableJoint newJoint)
		{
		}

		[Token(Token = "0x6000547")]
		[Address(RVA = "0x10B0800", Offset = "0x10B0800", VA = "0x10B0800")]
		public void SetMuscles(Muscle[] newMuscles)
		{
		}

		[Token(Token = "0x6000548")]
		[Address(RVA = "0x10B08A8", Offset = "0x10B08A8", VA = "0x10B08A8")]
		public void DisableMuscleRecursive(ConfigurableJoint joint)
		{
		}

		[Token(Token = "0x6000549")]
		[Address(RVA = "0x10B0950", Offset = "0x10B0950", VA = "0x10B0950")]
		public void EnableMuscleRecursive(ConfigurableJoint joint)
		{
		}

		[Token(Token = "0x600054A")]
		[Address(RVA = "0x10B09F8", Offset = "0x10B09F8", VA = "0x10B09F8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DD924", Offset = "0x8DD924")]
		public void FlattenHierarchy()
		{
		}

		[Token(Token = "0x600054B")]
		[Address(RVA = "0x10B0B04", Offset = "0x10B0B04", VA = "0x10B0B04")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DD95C", Offset = "0x8DD95C")]
		public void TreeHierarchy()
		{
		}

		[Token(Token = "0x600054C")]
		[Address(RVA = "0x10B0C74", Offset = "0x10B0C74", VA = "0x10B0C74")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DD994", Offset = "0x8DD994")]
		public void FixMusclePositions()
		{
		}

		[Token(Token = "0x600054D")]
		[Address(RVA = "0x10B0DAC", Offset = "0x10B0DAC", VA = "0x10B0DAC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DD9CC", Offset = "0x8DD9CC")]
		public void FixMusclePositionsAndRotations()
		{
		}

		[Token(Token = "0x600054E")]
		[Address(RVA = "0x10ACD90", Offset = "0x10ACD90", VA = "0x10ACD90")]
		public bool HierarchyIsFlat()
		{
			return default(bool);
		}

		[Token(Token = "0x600054F")]
		[Address(RVA = "0x10AFF68", Offset = "0x10AFF68", VA = "0x10AFF68")]
		private int GetHighestDisconnectedParentIndex(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6000550")]
		[Address(RVA = "0x10ADA2C", Offset = "0x10ADA2C", VA = "0x10ADA2C")]
		private void ProcessDisconnects()
		{
		}

		[Token(Token = "0x6000551")]
		[Address(RVA = "0x10ADB28", Offset = "0x10ADB28", VA = "0x10ADB28")]
		private void ProcessReconnects()
		{
		}

		[Token(Token = "0x6000552")]
		[Address(RVA = "0x10B0F1C", Offset = "0x10B0F1C", VA = "0x10B0F1C")]
		private void OnDisconnectMuscleRecursive(int index, MuscleDisconnectMode disconnectMode = MuscleDisconnectMode.Sever, bool deactivate = false)
		{
		}

		[Token(Token = "0x6000553")]
		[Address(RVA = "0x10B1370", Offset = "0x10B1370", VA = "0x10B1370")]
		private void DisconnectMuscle(Muscle m, bool sever, bool deactivate)
		{
		}

		[Token(Token = "0x6000554")]
		[Address(RVA = "0x10B11E0", Offset = "0x10B11E0", VA = "0x10B11E0")]
		private void OnReconnectMuscleRecursive(int index)
		{
		}

		[Token(Token = "0x6000555")]
		[Address(RVA = "0x10B1818", Offset = "0x10B1818", VA = "0x10B1818")]
		private void ReconnectMuscle(Muscle m)
		{
		}

		[Token(Token = "0x6000556")]
		[Address(RVA = "0x10B1C08", Offset = "0x10B1C08", VA = "0x10B1C08")]
		private void AddIndexesRecursive(int index, ref int[] indexes)
		{
		}

		[Token(Token = "0x6000557")]
		[Address(RVA = "0x10B060C", Offset = "0x10B060C", VA = "0x10B060C")]
		private void DisconnectJoint(ConfigurableJoint joint)
		{
		}

		[Token(Token = "0x6000558")]
		[Address(RVA = "0x10B06D4", Offset = "0x10B06D4", VA = "0x10B06D4")]
		private void KillJoint(ConfigurableJoint joint)
		{
		}

		[Token(Token = "0x6000559")]
		[Address(RVA = "0x10B1D74", Offset = "0x10B1D74", VA = "0x10B1D74")]
		public void SwitchToActiveMode()
		{
		}

		[Token(Token = "0x600055A")]
		[Address(RVA = "0x10B1D7C", Offset = "0x10B1D7C", VA = "0x10B1D7C")]
		public void SwitchToKinematicMode()
		{
		}

		[Token(Token = "0x600055B")]
		[Address(RVA = "0x10B1D88", Offset = "0x10B1D88", VA = "0x10B1D88")]
		public void SwitchToDisabledMode()
		{
		}

		[Token(Token = "0x600055E")]
		[Address(RVA = "0x10B1DA8", Offset = "0x10B1DA8", VA = "0x10B1DA8")]
		public void DisableImmediately()
		{
		}

		[Token(Token = "0x600055F")]
		[Address(RVA = "0x10B1E44", Offset = "0x10B1E44", VA = "0x10B1E44", Slot = "8")]
		protected virtual void SwitchModes()
		{
		}

		[Token(Token = "0x6000560")]
		[Address(RVA = "0x10B1FA8", Offset = "0x10B1FA8", VA = "0x10B1FA8")]
		private void DisabledToKinematic()
		{
		}

		[Token(Token = "0x6000561")]
		[Address(RVA = "0x10B2108", Offset = "0x10B2108", VA = "0x10B2108")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DDA24", Offset = "0x8DDA24")]
		private IEnumerator DisabledToActive()
		{
			return null;
		}

		[Token(Token = "0x6000562")]
		[Address(RVA = "0x10B2174", Offset = "0x10B2174", VA = "0x10B2174")]
		private void KinematicToDisabled()
		{
		}

		[Token(Token = "0x6000563")]
		[Address(RVA = "0x10B2218", Offset = "0x10B2218", VA = "0x10B2218")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DDA84", Offset = "0x8DDA84")]
		private IEnumerator KinematicToActive()
		{
			return null;
		}

		[Token(Token = "0x6000564")]
		[Address(RVA = "0x10B2284", Offset = "0x10B2284", VA = "0x10B2284")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DDAE4", Offset = "0x8DDAE4")]
		private IEnumerator ActiveToDisabled()
		{
			return null;
		}

		[Token(Token = "0x6000565")]
		[Address(RVA = "0x10B22F0", Offset = "0x10B22F0", VA = "0x10B22F0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DDB44", Offset = "0x8DDB44")]
		private IEnumerator ActiveToKinematic()
		{
			return null;
		}

		[Token(Token = "0x6000566")]
		[Address(RVA = "0x10B235C", Offset = "0x10B235C", VA = "0x10B235C")]
		public void SetMuscleWeights(Muscle.Group group, float muscleWeight, float pinWeight = 1f, float mappingWeight = 1f, float muscleDamper = 1f)
		{
		}

		[Token(Token = "0x6000567")]
		[Address(RVA = "0x10B242C", Offset = "0x10B242C", VA = "0x10B242C")]
		public void SetMuscleWeights(Transform target, float muscleWeight, float pinWeight = 1f, float mappingWeight = 1f, float muscleDamper = 1f)
		{
		}

		[Token(Token = "0x6000568")]
		[Address(RVA = "0x10B2898", Offset = "0x10B2898", VA = "0x10B2898")]
		public void SetMuscleWeights(HumanBodyBones humanBodyBone, float muscleWeight, float pinWeight = 1f, float mappingWeight = 1f, float muscleDamper = 1f)
		{
		}

		[Token(Token = "0x6000569")]
		[Address(RVA = "0x10B2BA8", Offset = "0x10B2BA8", VA = "0x10B2BA8")]
		public void SetMuscleWeightsRecursive(Transform target, float muscleWeight, float pinWeight = 1f, float mappingWeight = 1f, float muscleDamper = 1f)
		{
		}

		[Token(Token = "0x600056A")]
		[Address(RVA = "0x10B2CD8", Offset = "0x10B2CD8", VA = "0x10B2CD8")]
		public void SetMuscleWeightsRecursive(int muscleIndex, float muscleWeight, float pinWeight = 1f, float mappingWeight = 1f, float muscleDamper = 1f)
		{
		}

		[Token(Token = "0x600056B")]
		[Address(RVA = "0x10B2DC4", Offset = "0x10B2DC4", VA = "0x10B2DC4")]
		public void SetMuscleWeightsRecursive(HumanBodyBones humanBodyBone, float muscleWeight, float pinWeight = 1f, float mappingWeight = 1f, float muscleDamper = 1f)
		{
		}

		[Token(Token = "0x600056C")]
		[Address(RVA = "0x10B26B8", Offset = "0x10B26B8", VA = "0x10B26B8")]
		public void SetMuscleWeights(int muscleIndex, float muscleWeight, float pinWeight, float mappingWeight, float muscleDamper)
		{
		}

		[Token(Token = "0x600056D")]
		[Address(RVA = "0x10B2E4C", Offset = "0x10B2E4C", VA = "0x10B2E4C")]
		public Muscle GetMuscle(Transform target)
		{
			return null;
		}

		[Token(Token = "0x600056E")]
		[Address(RVA = "0x10B0090", Offset = "0x10B0090", VA = "0x10B0090")]
		public Muscle GetMuscle(Rigidbody rigidbody)
		{
			return null;
		}

		[Token(Token = "0x600056F")]
		[Address(RVA = "0x10A5EB4", Offset = "0x10A5EB4", VA = "0x10A5EB4")]
		public Muscle GetMuscle(ConfigurableJoint joint)
		{
			return null;
		}

		[Token(Token = "0x6000570")]
		[Address(RVA = "0x10AD468", Offset = "0x10AD468", VA = "0x10AD468")]
		public bool ContainsJoint(ConfigurableJoint joint)
		{
			return default(bool);
		}

		[Token(Token = "0x6000571")]
		[Address(RVA = "0x10B2920", Offset = "0x10B2920", VA = "0x10B2920")]
		public int GetMuscleIndex(HumanBodyBones humanBodyBone)
		{
			return default(int);
		}

		[Token(Token = "0x6000572")]
		[Address(RVA = "0x10B24B4", Offset = "0x10B24B4", VA = "0x10B24B4")]
		public int GetMuscleIndex(Transform target)
		{
			return default(int);
		}

		[Token(Token = "0x6000573")]
		[Address(RVA = "0x10B2EA8", Offset = "0x10B2EA8", VA = "0x10B2EA8")]
		public int GetMuscleIndex(Rigidbody rigidbody)
		{
			return default(int);
		}

		[Token(Token = "0x6000574")]
		[Address(RVA = "0x10B0414", Offset = "0x10B0414", VA = "0x10B0414")]
		public int GetMuscleIndex(ConfigurableJoint joint)
		{
			return default(int);
		}

		[Token(Token = "0x6000575")]
		[Address(RVA = "0x10B30AC", Offset = "0x10B30AC", VA = "0x10B30AC")]
		public static PuppetMaster SetUp(Transform target, Transform ragdoll, int characterControllerLayer, int ragdollLayer)
		{
			return null;
		}

		[Token(Token = "0x6000576")]
		[Address(RVA = "0x10B3DB8", Offset = "0x10B3DB8", VA = "0x10B3DB8")]
		public static PuppetMaster SetUp(Transform target, int characterControllerLayer, int ragdollLayer)
		{
			return null;
		}

		[Token(Token = "0x6000577")]
		[Address(RVA = "0x10B31A8", Offset = "0x10B31A8", VA = "0x10B31A8")]
		public void SetUpTo(Transform setUpTo, int characterControllerLayer, int ragdollLayer)
		{
		}

		[Token(Token = "0x6000578")]
		[Address(RVA = "0x10B3F2C", Offset = "0x10B3F2C", VA = "0x10B3F2C")]
		public static void RemoveRagdollComponents(Transform target, int characterControllerLayer)
		{
		}

		[Token(Token = "0x6000579")]
		[Address(RVA = "0x10B47B0", Offset = "0x10B47B0", VA = "0x10B47B0")]
		private void SetUpMuscles(Transform setUpTo)
		{
		}

		[Token(Token = "0x600057A")]
		[Address(RVA = "0x10B5220", Offset = "0x10B5220", VA = "0x10B5220")]
		private static Muscle.Group FindGroup(Animator animator, Transform t)
		{
			return default(Muscle.Group);
		}

		[Token(Token = "0x600057B")]
		[Address(RVA = "0x10B4398", Offset = "0x10B4398", VA = "0x10B4398")]
		private void RemoveUnnecessaryBones()
		{
		}

		[Token(Token = "0x600057C")]
		[Address(RVA = "0x10B4F10", Offset = "0x10B4F10", VA = "0x10B4F10")]
		private static bool IsClothCollider(Collider collider, Cloth[] cloths)
		{
			return default(bool);
		}

		[Token(Token = "0x6000582")]
		[Address(RVA = "0x10B56D8", Offset = "0x10B56D8", VA = "0x10B56D8")]
		public void Kill()
		{
		}

		[Token(Token = "0x6000583")]
		[Address(RVA = "0x10B56E4", Offset = "0x10B56E4", VA = "0x10B56E4")]
		public void Kill(StateSettings stateSettings)
		{
		}

		[Token(Token = "0x6000584")]
		[Address(RVA = "0x10B5700", Offset = "0x10B5700", VA = "0x10B5700")]
		public void Freeze()
		{
		}

		[Token(Token = "0x6000585")]
		[Address(RVA = "0x10B570C", Offset = "0x10B570C", VA = "0x10B570C")]
		public void Freeze(StateSettings stateSettings)
		{
		}

		[Token(Token = "0x6000586")]
		[Address(RVA = "0x10B5728", Offset = "0x10B5728", VA = "0x10B5728")]
		public void Resurrect()
		{
		}

		[Token(Token = "0x6000587")]
		[Address(RVA = "0x10B5730", Offset = "0x10B5730", VA = "0x10B5730", Slot = "9")]
		protected virtual void SwitchStates()
		{
		}

		[Token(Token = "0x6000588")]
		[Address(RVA = "0x10B5830", Offset = "0x10B5830", VA = "0x10B5830")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DDBC4", Offset = "0x8DDBC4")]
		private IEnumerator AliveToDead(bool freeze)
		{
			return null;
		}

		[Token(Token = "0x6000589")]
		[Address(RVA = "0x10AE2F8", Offset = "0x10AE2F8", VA = "0x10AE2F8")]
		private void OnFreezeFlag()
		{
		}

		[Token(Token = "0x600058A")]
		[Address(RVA = "0x10B58B0", Offset = "0x10B58B0", VA = "0x10B58B0")]
		private void DeadToAlive()
		{
		}

		[Token(Token = "0x600058B")]
		[Address(RVA = "0x10AAF8C", Offset = "0x10AAF8C", VA = "0x10AAF8C")]
		private void SetAnimationEnabled(bool to)
		{
		}

		[Token(Token = "0x600058C")]
		[Address(RVA = "0x10B59C0", Offset = "0x10B59C0", VA = "0x10B59C0")]
		private void DeadToFrozen()
		{
		}

		[Token(Token = "0x600058D")]
		[Address(RVA = "0x10B59CC", Offset = "0x10B59CC", VA = "0x10B59CC")]
		private void FrozenToAlive()
		{
		}

		[Token(Token = "0x600058E")]
		[Address(RVA = "0x10B5BE8", Offset = "0x10B5BE8", VA = "0x10B5BE8")]
		private void FrozenToDead()
		{
		}

		[Token(Token = "0x600058F")]
		[Address(RVA = "0x10AB088", Offset = "0x10AB088", VA = "0x10AB088")]
		private void ActivateRagdoll(bool kinematic = false)
		{
		}

		[Token(Token = "0x6000590")]
		[Address(RVA = "0x10B5CBC", Offset = "0x10B5CBC", VA = "0x10B5CBC")]
		private bool CanFreeze()
		{
			return default(bool);
		}

		[Token(Token = "0x6000591")]
		[Address(RVA = "0x10B5D78", Offset = "0x10B5D78", VA = "0x10B5D78")]
		public void SampleTargetMappedState()
		{
		}

		[Token(Token = "0x6000592")]
		[Address(RVA = "0x10B5E44", Offset = "0x10B5E44", VA = "0x10B5E44")]
		public void FixTargetToSampledState(float weight)
		{
		}

		[Token(Token = "0x6000593")]
		[Address(RVA = "0x10ACED4", Offset = "0x10ACED4", VA = "0x10ACED4")]
		public void StoreTargetMappedState()
		{
		}

		[Token(Token = "0x6000594")]
		[Address(RVA = "0x10ACAF4", Offset = "0x10ACAF4", VA = "0x10ACAF4")]
		private void UpdateHierarchies()
		{
		}

		[Token(Token = "0x6000595")]
		[Address(RVA = "0x10B65E8", Offset = "0x10B65E8", VA = "0x10B65E8")]
		private bool HasProp()
		{
			return default(bool);
		}

		[Token(Token = "0x6000596")]
		[Address(RVA = "0x10B6480", Offset = "0x10B6480", VA = "0x10B6480")]
		private void UpdateBroadcasterMuscleIndexes()
		{
		}

		[Token(Token = "0x6000597")]
		[Address(RVA = "0x10B6060", Offset = "0x10B6060", VA = "0x10B6060")]
		private void AssignParentAndChildIndexes()
		{
		}

		[Token(Token = "0x6000598")]
		[Address(RVA = "0x10B6660", Offset = "0x10B6660", VA = "0x10B6660")]
		private void AddToParentsRecursive(ConfigurableJoint joint, ref int[] indexes)
		{
		}

		[Token(Token = "0x6000599")]
		[Address(RVA = "0x10B67DC", Offset = "0x10B67DC", VA = "0x10B67DC")]
		private void AddToChildrenRecursive(ConfigurableJoint joint, ref int[] indexes, ref bool[] childFlags)
		{
		}

		[Token(Token = "0x600059A")]
		[Address(RVA = "0x10B6378", Offset = "0x10B6378", VA = "0x10B6378")]
		private void AssignKinshipDegrees()
		{
		}

		[Token(Token = "0x600059B")]
		[Address(RVA = "0x10B6ACC", Offset = "0x10B6ACC", VA = "0x10B6ACC")]
		private void AssignKinshipsDownRecursive(ref int[] kinshipDegrees, int degree, int index)
		{
		}

		[Token(Token = "0x600059C")]
		[Address(RVA = "0x10B6C2C", Offset = "0x10B6C2C", VA = "0x10B6C2C")]
		private void AssignKinshipsUpRecursive(ref int[] kinshipDegrees, int degree, int index)
		{
		}

		[Token(Token = "0x600059D")]
		[Address(RVA = "0x10B69F4", Offset = "0x10B69F4", VA = "0x10B69F4")]
		private int GetMuscleIndexLowLevel(ConfigurableJoint joint)
		{
			return default(int);
		}

		[Token(Token = "0x600059E")]
		[Address(RVA = "0x10AC114", Offset = "0x10AC114", VA = "0x10AC114")]
		public bool IsValid(bool log)
		{
			return default(bool);
		}

		[Token(Token = "0x600059F")]
		[Address(RVA = "0x10B00EC", Offset = "0x10B00EC", VA = "0x10B00EC")]
		private bool CheckMassVariation(float threshold, bool log)
		{
			return default(bool);
		}

		[Token(Token = "0x60005A0")]
		[Address(RVA = "0x10AFFF8", Offset = "0x10AFFF8", VA = "0x10AFFF8")]
		private bool CheckIfInitiated()
		{
			return default(bool);
		}

		[Token(Token = "0x60005A1")]
		[Address(RVA = "0x10B6E8C", Offset = "0x10B6E8C", VA = "0x10B6E8C")]
		public PuppetMaster()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000BA")]
	public enum MuscleRemoveMode
	{
		[Token(Token = "0x400057B")]
		Sever,
		[Token(Token = "0x400057C")]
		Explode,
		[Token(Token = "0x400057D")]
		Numb
	}
	[Serializable]
	[Token(Token = "0x20000BB")]
	public enum MuscleDisconnectMode
	{
		[Token(Token = "0x400057F")]
		Sever,
		[Token(Token = "0x4000580")]
		Explode
	}
	[Token(Token = "0x20000BC")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8CB5DC", Offset = "0x8CB5DC")]
	public class PuppetMasterHumanoidConfig : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x20000BD")]
		public class HumanoidMuscle
		{
			[Token(Token = "0x4000595")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[HideInInspector]
			[SerializeField]
			public string name;

			[Token(Token = "0x4000596")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public HumanBodyBones bone;

			[Token(Token = "0x4000597")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Muscle.Props props;

			[Token(Token = "0x60005CD")]
			[Address(RVA = "0x1908C54", Offset = "0x1908C54", VA = "0x1908C54")]
			public HumanoidMuscle()
			{
			}
		}

		[Token(Token = "0x4000581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x8D176C", Offset = "0x8D176C")]
		public PuppetMaster.State state;

		[Token(Token = "0x4000582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public PuppetMaster.StateSettings stateSettings;

		[Token(Token = "0x4000583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PuppetMaster.Mode mode;

		[Token(Token = "0x4000584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float blendTime;

		[Token(Token = "0x4000585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool fixTargetTransforms;

		[Token(Token = "0x4000586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int solverIterationCount;

		[Token(Token = "0x4000587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool visualizeTargetPose;

		[Token(Token = "0x4000588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x8D17A4", Offset = "0x8D17A4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D17A4", Offset = "0x8D17A4")]
		public float mappingWeight;

		[Token(Token = "0x4000589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D17F8", Offset = "0x8D17F8")]
		public float pinWeight;

		[Token(Token = "0x400058A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D1810", Offset = "0x8D1810")]
		public float muscleWeight;

		[Token(Token = "0x400058B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x8D1828", Offset = "0x8D1828")]
		public float muscleSpring;

		[Token(Token = "0x400058C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float muscleDamper;

		[Token(Token = "0x400058D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D1860", Offset = "0x8D1860")]
		public float pinPow;

		[Token(Token = "0x400058E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D1878", Offset = "0x8D1878")]
		public float pinDistanceFalloff;

		[Token(Token = "0x400058F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool angularPinning;

		[Token(Token = "0x4000590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		public bool updateJointAnchors;

		[Token(Token = "0x4000591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		public bool supportTranslationAnimation;

		[Token(Token = "0x4000592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
		public bool angularLimits;

		[Token(Token = "0x4000593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public bool internalCollisions;

		[Token(Token = "0x4000594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x8D1894", Offset = "0x8D1894")]
		public HumanoidMuscle[] muscles;

		[Token(Token = "0x60005CA")]
		[Address(RVA = "0xE576AC", Offset = "0xE576AC", VA = "0xE576AC")]
		public void ApplyTo(PuppetMaster p)
		{
		}

		[Token(Token = "0x60005CB")]
		[Address(RVA = "0xE57A5C", Offset = "0xE57A5C", VA = "0xE57A5C")]
		private Muscle GetMuscle(HumanBodyBones boneId, Animator animator, PuppetMaster puppetMaster)
		{
			return null;
		}

		[Token(Token = "0x60005CC")]
		[Address(RVA = "0xE57B8C", Offset = "0xE57B8C", VA = "0xE57B8C")]
		public PuppetMasterHumanoidConfig()
		{
		}
	}
	[Token(Token = "0x20000BE")]
	public class PuppetMasterProp : MonoBehaviour
	{
		[Token(Token = "0x4000598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D1904", Offset = "0x8D1904")]
		public Transform meshRoot;

		[Token(Token = "0x4000599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D193C", Offset = "0x8D193C")]
		public Muscle.Props muscleProps;

		[Token(Token = "0x400059A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D1974", Offset = "0x8D1974")]
		public bool forceLayers;

		[Token(Token = "0x400059B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D19AC", Offset = "0x8D19AC")]
		public float mass;

		[Token(Token = "0x400059C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D19E4", Offset = "0x8D19E4")]
		public int propType;

		[Token(Token = "0x400059D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D1A1C", Offset = "0x8D1A1C")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x8D1A1C", Offset = "0x8D1A1C")]
		public PhysicMaterial pickedUpMaterial;

		[Token(Token = "0x400059E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D1A7C", Offset = "0x8D1A7C")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x8D1A7C", Offset = "0x8D1A7C")]
		public Vector3 additionalPinOffsetAdd;

		[Token(Token = "0x400059F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D1ADC", Offset = "0x8D1ADC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D1ADC", Offset = "0x8D1ADC")]
		public float additionalPinWeight;

		[Token(Token = "0x40005A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D1B30", Offset = "0x8D1B30")]
		public float additionalPinMass;

		[Token(Token = "0x40005A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D1B68", Offset = "0x8D1B68")]
		private bool <isPickedUp>k__BackingField;

		[Token(Token = "0x40005A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D1B78", Offset = "0x8D1B78")]
		private Muscle <propMuscle>k__BackingField;

		[Token(Token = "0x40005A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int defaultLayer;

		[Token(Token = "0x40005A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform defaultParent;

		[Token(Token = "0x40005A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Collider[] colliders;

		[Token(Token = "0x40005A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private PhysicMaterial[] droppedMaterials;

		[Token(Token = "0x40005A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Rigidbody r;

		[Token(Token = "0x40005A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float _mass;

		[Token(Token = "0x40005A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float _drag;

		[Token(Token = "0x40005AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float _angularDrag;

		[Token(Token = "0x40005AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private bool _useGravity;

		[Token(Token = "0x40005AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x95")]
		private bool _isKinematic;

		[Token(Token = "0x40005AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private RigidbodyInterpolation _interpolation;

		[Token(Token = "0x40005AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private CollisionDetectionMode _collisionDetectionMode;

		[Token(Token = "0x40005AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RigidbodyConstraints _constraints;

		[Token(Token = "0x40005B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Collider[] emptyColliders;

		[Token(Token = "0x1700008A")]
		public bool isPickedUp
		{
			[Token(Token = "0x60005CE")]
			[Address(RVA = "0xE57C5C", Offset = "0xE57C5C", VA = "0xE57C5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DDDB4", Offset = "0x8DDDB4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60005CF")]
			[Address(RVA = "0xE57C64", Offset = "0xE57C64", VA = "0xE57C64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DDDC4", Offset = "0x8DDDC4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700008B")]
		protected Muscle propMuscle
		{
			[Token(Token = "0x60005D3")]
			[Address(RVA = "0xE57D1C", Offset = "0xE57D1C", VA = "0xE57D1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DDDD4", Offset = "0x8DDDD4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60005D4")]
			[Address(RVA = "0xE57D24", Offset = "0xE57D24", VA = "0xE57D24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DDDE4", Offset = "0x8DDDE4")]
			private set
			{
			}
		}

		[Token(Token = "0x60005D0")]
		[Address(RVA = "0xE57C70", Offset = "0xE57C70", VA = "0xE57C70")]
		public Rigidbody GetRigidbody()
		{
			return null;
		}

		[Token(Token = "0x60005D1")]
		[Address(RVA = "0xE57D14", Offset = "0xE57D14", VA = "0xE57D14", Slot = "4")]
		protected virtual void OnPickUp(PuppetMaster puppetMaster, int propMuscleIndex)
		{
		}

		[Token(Token = "0x60005D2")]
		[Address(RVA = "0xE57D18", Offset = "0xE57D18", VA = "0xE57D18", Slot = "5")]
		protected virtual void OnDrop(PuppetMaster puppetMaster, int propMuscleIndex)
		{
		}

		[Token(Token = "0x60005D5")]
		[Address(RVA = "0xE57D2C", Offset = "0xE57D2C", VA = "0xE57D2C")]
		public void PickUp(PuppetMaster puppetMaster, int propMuscleIndex)
		{
		}

		[Token(Token = "0x60005D6")]
		[Address(RVA = "0xE58244", Offset = "0xE58244", VA = "0xE58244")]
		public void Drop(PuppetMaster puppetMaster, int propMuscleIndex)
		{
		}

		[Token(Token = "0x60005D7")]
		[Address(RVA = "0xE58764", Offset = "0xE58764", VA = "0xE58764", Slot = "6")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60005D8")]
		[Address(RVA = "0xE588C4", Offset = "0xE588C4", VA = "0xE588C4", Slot = "7")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x60005D9")]
		[Address(RVA = "0xE58AF8", Offset = "0xE58AF8", VA = "0xE58AF8", Slot = "8")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x60005DA")]
		[Address(RVA = "0xE580D8", Offset = "0xE580D8", VA = "0xE580D8")]
		private void RemoveRigidbody()
		{
		}

		[Token(Token = "0x60005DB")]
		[Address(RVA = "0xE58618", Offset = "0xE58618", VA = "0xE58618")]
		private void ReattachRigidbody()
		{
		}

		[Token(Token = "0x60005DC")]
		[Address(RVA = "0xE58B74", Offset = "0xE58B74", VA = "0xE58B74")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x60005DD")]
		[Address(RVA = "0xE58CDC", Offset = "0xE58CDC", VA = "0xE58CDC")]
		public PuppetMasterProp()
		{
		}
	}
	[Token(Token = "0x20000BF")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8CB630", Offset = "0x8CB630")]
	public class PuppetMasterSettings : Singleton<PuppetMasterSettings>
	{
		[Serializable]
		[Token(Token = "0x20000C0")]
		public class PuppetUpdateLimit
		{
			[Token(Token = "0x40005BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D1BF0", Offset = "0x8D1BF0")]
			public int puppetsPerFrame;

			[Token(Token = "0x40005BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private int index;

			[Token(Token = "0x60005ED")]
			[Address(RVA = "0x1908DE4", Offset = "0x1908DE4", VA = "0x1908DE4")]
			public PuppetUpdateLimit()
			{
			}

			[Token(Token = "0x60005EE")]
			[Address(RVA = "0x1908E10", Offset = "0x1908E10", VA = "0x1908E10")]
			public void Step(int puppetCount)
			{
			}

			[Token(Token = "0x60005EF")]
			[Address(RVA = "0x1908E2C", Offset = "0x1908E2C", VA = "0x1908E2C")]
			public bool Update(List<PuppetMaster> puppets, PuppetMaster puppetMaster)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40005B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D1B88", Offset = "0x8D1B88")]
		public PuppetUpdateLimit kinematicCollidersUpdateLimit;

		[Token(Token = "0x40005B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PuppetUpdateLimit freeUpdateLimit;

		[Token(Token = "0x40005B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PuppetUpdateLimit fixedUpdateLimit;

		[Token(Token = "0x40005B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool collisionStayMessages;

		[Token(Token = "0x40005B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool collisionExitMessages;

		[Token(Token = "0x40005B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float activePuppetCollisionThresholdMlp;

		[Token(Token = "0x40005B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D1BC0", Offset = "0x8D1BC0")]
		private int <currentlyActivePuppets>k__BackingField;

		[Token(Token = "0x40005B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D1BD0", Offset = "0x8D1BD0")]
		private int <currentlyKinematicPuppets>k__BackingField;

		[Token(Token = "0x40005B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D1BE0", Offset = "0x8D1BE0")]
		private int <currentlyDisabledPuppets>k__BackingField;

		[Token(Token = "0x40005BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<PuppetMaster> _puppets;

		[Token(Token = "0x1700008C")]
		public int currentlyActivePuppets
		{
			[Token(Token = "0x60005DE")]
			[Address(RVA = "0xE58FD0", Offset = "0xE58FD0", VA = "0xE58FD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DDDF4", Offset = "0x8DDDF4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60005DF")]
			[Address(RVA = "0xE58FD8", Offset = "0xE58FD8", VA = "0xE58FD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DDE04", Offset = "0x8DDE04")]
			private set
			{
			}
		}

		[Token(Token = "0x1700008D")]
		public int currentlyKinematicPuppets
		{
			[Token(Token = "0x60005E0")]
			[Address(RVA = "0xE58FE0", Offset = "0xE58FE0", VA = "0xE58FE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DDE14", Offset = "0x8DDE14")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60005E1")]
			[Address(RVA = "0xE58FE8", Offset = "0xE58FE8", VA = "0xE58FE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DDE24", Offset = "0x8DDE24")]
			private set
			{
			}
		}

		[Token(Token = "0x1700008E")]
		public int currentlyDisabledPuppets
		{
			[Token(Token = "0x60005E2")]
			[Address(RVA = "0xE58FF0", Offset = "0xE58FF0", VA = "0xE58FF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DDE34", Offset = "0x8DDE34")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60005E3")]
			[Address(RVA = "0xE58FF8", Offset = "0xE58FF8", VA = "0xE58FF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DDE44", Offset = "0x8DDE44")]
			private set
			{
			}
		}

		[Token(Token = "0x1700008F")]
		public List<PuppetMaster> puppets
		{
			[Token(Token = "0x60005E4")]
			[Address(RVA = "0xE59000", Offset = "0xE59000", VA = "0xE59000")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005E5")]
		[Address(RVA = "0xE59008", Offset = "0xE59008", VA = "0xE59008")]
		public void Register(PuppetMaster puppetMaster)
		{
		}

		[Token(Token = "0x60005E6")]
		[Address(RVA = "0xE590A8", Offset = "0xE590A8", VA = "0xE590A8")]
		public void Unregister(PuppetMaster puppetMaster)
		{
		}

		[Token(Token = "0x60005E7")]
		[Address(RVA = "0xE5910C", Offset = "0xE5910C", VA = "0xE5910C")]
		public bool UpdateMoveToTarget(PuppetMaster puppetMaster)
		{
			return default(bool);
		}

		[Token(Token = "0x60005E8")]
		[Address(RVA = "0xE59134", Offset = "0xE59134", VA = "0xE59134")]
		public bool UpdateFree(PuppetMaster puppetMaster)
		{
			return default(bool);
		}

		[Token(Token = "0x60005E9")]
		[Address(RVA = "0xE5915C", Offset = "0xE5915C", VA = "0xE5915C")]
		public bool UpdateFixed(PuppetMaster puppetMaster)
		{
			return default(bool);
		}

		[Token(Token = "0x60005EA")]
		[Address(RVA = "0xE59184", Offset = "0xE59184", VA = "0xE59184")]
		private void Update()
		{
		}

		[Token(Token = "0x60005EB")]
		[Address(RVA = "0xE59380", Offset = "0xE59380", VA = "0xE59380")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60005EC")]
		[Address(RVA = "0xE593D8", Offset = "0xE593D8", VA = "0xE593D8")]
		public PuppetMasterSettings()
		{
		}
	}
	[Token(Token = "0x20000C1")]
	public static class PuppetMasterTools
	{
		[Token(Token = "0x60005F0")]
		[Address(RVA = "0xE594FC", Offset = "0xE594FC", VA = "0xE594FC")]
		public static void PositionRagdoll(PuppetMaster puppetMaster)
		{
		}

		[Token(Token = "0x60005F1")]
		[Address(RVA = "0xE59ABC", Offset = "0xE59ABC", VA = "0xE59ABC")]
		public static void RealignRagdoll(PuppetMaster puppetMaster)
		{
		}

		[Token(Token = "0x60005F2")]
		[Address(RVA = "0xE5A390", Offset = "0xE5A390", VA = "0xE5A390")]
		private static Vector3 DirectionIntToVector3(int dir)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60005F3")]
		[Address(RVA = "0xE5A3B4", Offset = "0xE5A3B4", VA = "0xE5A3B4")]
		private static int DirectionVector3ToInt(Vector3 dir)
		{
			return default(int);
		}
	}
	[Serializable]
	[Token(Token = "0x20000C2")]
	public class Weight
	{
		[Serializable]
		[Token(Token = "0x20000C3")]
		public enum Mode
		{
			[Token(Token = "0x40005C2")]
			Float,
			[Token(Token = "0x40005C3")]
			Curve
		}

		[Token(Token = "0x40005BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mode mode;

		[Token(Token = "0x40005BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float floatValue;

		[Token(Token = "0x40005BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimationCurve curve;

		[Token(Token = "0x40005C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string tooltip;

		[Token(Token = "0x60005F4")]
		[Address(RVA = "0xC11030", Offset = "0xC11030", VA = "0xC11030")]
		public Weight(float floatValue)
		{
		}

		[Token(Token = "0x60005F5")]
		[Address(RVA = "0xC11098", Offset = "0xC11098", VA = "0xC11098")]
		public Weight(float floatValue, string tooltip)
		{
		}

		[Token(Token = "0x60005F6")]
		[Address(RVA = "0xC11110", Offset = "0xC11110", VA = "0xC11110")]
		public float GetValue(float param)
		{
			return default(float);
		}
	}
	[Token(Token = "0x20000C4")]
	public class InitialVelocity : MonoBehaviour
	{
		[Token(Token = "0x40005C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 initialVelocity;

		[Token(Token = "0x60005F7")]
		[Address(RVA = "0xB0B928", Offset = "0xB0B928", VA = "0xB0B928")]
		private void Start()
		{
		}

		[Token(Token = "0x60005F8")]
		[Address(RVA = "0xB0B98C", Offset = "0xB0B98C", VA = "0xB0B98C")]
		public InitialVelocity()
		{
		}
	}
	[Token(Token = "0x20000C5")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x8CB668", Offset = "0x8CB668")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8CB668", Offset = "0x8CB668")]
	public class BipedRagdollCreator : RagdollCreator
	{
		[Serializable]
		[Token(Token = "0x20000C6")]
		public struct Options
		{
			[Token(Token = "0x40005C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float weight;

			[Token(Token = "0x40005C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D1C0C", Offset = "0x8D1C0C")]
			public bool spine;

			[Token(Token = "0x40005CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
			public bool chest;

			[Token(Token = "0x40005CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
			public bool hands;

			[Token(Token = "0x40005CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7")]
			public bool feet;

			[Token(Token = "0x40005CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D1C44", Offset = "0x8D1C44")]
			public JointType joints;

			[Token(Token = "0x40005CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float jointRange;

			[Token(Token = "0x40005CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D1C7C", Offset = "0x8D1C7C")]
			public float colliderLengthOverlap;

			[Token(Token = "0x40005D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public ColliderType torsoColliders;

			[Token(Token = "0x40005D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ColliderType headCollider;

			[Token(Token = "0x40005D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public ColliderType armColliders;

			[Token(Token = "0x40005D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ColliderType handColliders;

			[Token(Token = "0x40005D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public ColliderType legColliders;

			[Token(Token = "0x40005D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ColliderType footColliders;

			[Token(Token = "0x17000090")]
			public static Options Default
			{
				[Token(Token = "0x600060A")]
				[Address(RVA = "0xC1643C", Offset = "0xC1643C", VA = "0xC1643C")]
				get
				{
					return default(Options);
				}
			}
		}

		[Token(Token = "0x40005C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool canBuild;

		[Token(Token = "0x40005C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BipedRagdollReferences references;

		[Token(Token = "0x40005C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Options options;

		[Token(Token = "0x60005F9")]
		[Address(RVA = "0x106B210", Offset = "0x106B210", VA = "0x106B210")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DDE54", Offset = "0x8DDE54")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x60005FA")]
		[Address(RVA = "0x106B258", Offset = "0x106B258", VA = "0x106B258")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DDE8C", Offset = "0x8DDE8C")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x60005FB")]
		[Address(RVA = "0x106B2A0", Offset = "0x106B2A0", VA = "0x106B2A0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DDEC4", Offset = "0x8DDEC4")]
		private void OpenTutorial()
		{
		}

		[Token(Token = "0x60005FC")]
		[Address(RVA = "0x106B2E8", Offset = "0x106B2E8", VA = "0x106B2E8")]
		public static Options AutodetectOptions(BipedRagdollReferences r)
		{
			return default(Options);
		}

		[Token(Token = "0x60005FD")]
		[Address(RVA = "0x106B590", Offset = "0x106B590", VA = "0x106B590")]
		public static void Create(BipedRagdollReferences r, Options options)
		{
		}

		[Token(Token = "0x60005FE")]
		[Address(RVA = "0x106BEE4", Offset = "0x106BEE4", VA = "0x106BEE4")]
		private static void CreateColliders(BipedRagdollReferences r, Options options)
		{
		}

		[Token(Token = "0x60005FF")]
		[Address(RVA = "0x106D6D4", Offset = "0x106D6D4", VA = "0x106D6D4")]
		private static void CreateHandCollider(Transform hand, Transform lowerArm, Transform root, Options options)
		{
		}

		[Token(Token = "0x6000600")]
		[Address(RVA = "0x106D904", Offset = "0x106D904", VA = "0x106D904")]
		private static void CreateFootCollider(Transform foot, Transform lowerLeg, Transform upperLeg, Transform root, Options options)
		{
		}

		[Token(Token = "0x6000601")]
		[Address(RVA = "0x106DCFC", Offset = "0x106DCFC", VA = "0x106DCFC")]
		private static Vector3 GetChildCentroid(Transform t, Vector3 fallback)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000602")]
		[Address(RVA = "0x106C9C4", Offset = "0x106C9C4", VA = "0x106C9C4")]
		private static void MassDistribution(BipedRagdollReferences r, Options o)
		{
		}

		[Token(Token = "0x6000603")]
		[Address(RVA = "0x106CE30", Offset = "0x106CE30", VA = "0x106CE30")]
		private static void CreateJoints(BipedRagdollReferences r, Options o)
		{
		}

		[Token(Token = "0x6000604")]
		[Address(RVA = "0x106DDDC", Offset = "0x106DDDC", VA = "0x106DDDC")]
		private static void CreateLimbJoints(Transform connectedBone, Transform bone1, Transform bone2, Transform bone3, Transform root, Vector3 defaultWorldDirection, JointType jointType, CreateJointParams.Limits limits1, CreateJointParams.Limits limits2, CreateJointParams.Limits limits3)
		{
		}

		[Token(Token = "0x6000605")]
		[Address(RVA = "0x106E38C", Offset = "0x106E38C", VA = "0x106E38C")]
		public static void ClearBipedRagdoll(BipedRagdollReferences r)
		{
		}

		[Token(Token = "0x6000606")]
		[Address(RVA = "0x106E740", Offset = "0x106E740", VA = "0x106E740")]
		public static bool IsClear(BipedRagdollReferences r)
		{
			return default(bool);
		}

		[Token(Token = "0x6000607")]
		[Address(RVA = "0x106D624", Offset = "0x106D624", VA = "0x106D624")]
		private static Vector3 GetUpperArmToHeadCentroid(BipedRagdollReferences r)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000608")]
		[Address(RVA = "0x106B4F0", Offset = "0x106B4F0", VA = "0x106B4F0")]
		private static Vector3 GetUpperArmCentroid(BipedRagdollReferences r)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000609")]
		[Address(RVA = "0x106E844", Offset = "0x106E844", VA = "0x106E844")]
		public BipedRagdollCreator()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000C7")]
	public struct BipedRagdollReferences
	{
		[Token(Token = "0x40005D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Transform root;

		[Token(Token = "0x40005D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Transform hips;

		[Token(Token = "0x40005D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform spine;

		[Token(Token = "0x40005D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform chest;

		[Token(Token = "0x40005DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform head;

		[Token(Token = "0x40005DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform leftUpperLeg;

		[Token(Token = "0x40005DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform leftLowerLeg;

		[Token(Token = "0x40005DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform leftFoot;

		[Token(Token = "0x40005DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform rightUpperLeg;

		[Token(Token = "0x40005DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform rightLowerLeg;

		[Token(Token = "0x40005E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform rightFoot;

		[Token(Token = "0x40005E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform leftUpperArm;

		[Token(Token = "0x40005E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform leftLowerArm;

		[Token(Token = "0x40005E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Transform leftHand;

		[Token(Token = "0x40005E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Transform rightUpperArm;

		[Token(Token = "0x40005E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Transform rightLowerArm;

		[Token(Token = "0x40005E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Transform rightHand;

		[Token(Token = "0x600060B")]
		[Address(RVA = "0x106B6DC", Offset = "0x106B6DC", VA = "0x106B6DC")]
		public bool IsValid(ref string msg)
		{
			return default(bool);
		}

		[Token(Token = "0x600060C")]
		[Address(RVA = "0x106E8A4", Offset = "0x106E8A4", VA = "0x106E8A4")]
		private bool IsChildRecursive(Transform t, Transform parent)
		{
			return default(bool);
		}

		[Token(Token = "0x600060D")]
		[Address(RVA = "0x106E9A0", Offset = "0x106E9A0", VA = "0x106E9A0")]
		public bool IsEmpty(bool considerRoot)
		{
			return default(bool);
		}

		[Token(Token = "0x600060E")]
		[Address(RVA = "0x106ED38", Offset = "0x106ED38", VA = "0x106ED38")]
		public bool Contains(Transform t, bool ignoreRoot = false)
		{
			return default(bool);
		}

		[Token(Token = "0x600060F")]
		[Address(RVA = "0x106E404", Offset = "0x106E404", VA = "0x106E404")]
		public Transform[] GetRagdollTransforms()
		{
			return null;
		}

		[Token(Token = "0x6000610")]
		[Address(RVA = "0x106F0D4", Offset = "0x106F0D4", VA = "0x106F0D4")]
		public static BipedRagdollReferences FromAvatar(Animator animator)
		{
			return default(BipedRagdollReferences);
		}

		[Token(Token = "0x6000611")]
		[Address(RVA = "0x106F2F0", Offset = "0x106F2F0", VA = "0x106F2F0")]
		public static BipedRagdollReferences FromBipedReferences(BipedReferences biped)
		{
			return default(BipedRagdollReferences);
		}
	}
	[Token(Token = "0x20000C8")]
	public static class JointConverter
	{
		[Token(Token = "0x6000612")]
		[Address(RVA = "0xB14578", Offset = "0xB14578", VA = "0xB14578")]
		public static void ToConfigurable(GameObject root)
		{
		}

		[Token(Token = "0x6000613")]
		[Address(RVA = "0xB14AAC", Offset = "0xB14AAC", VA = "0xB14AAC")]
		public static void HingeToConfigurable(HingeJoint src)
		{
		}

		[Token(Token = "0x6000614")]
		[Address(RVA = "0xB14D80", Offset = "0xB14D80", VA = "0xB14D80")]
		public static void FixedToConfigurable(FixedJoint src)
		{
		}

		[Token(Token = "0x6000615")]
		[Address(RVA = "0xB14EB4", Offset = "0xB14EB4", VA = "0xB14EB4")]
		public static void SpringToConfigurable(SpringJoint src)
		{
		}

		[Token(Token = "0x6000616")]
		[Address(RVA = "0xB14864", Offset = "0xB14864", VA = "0xB14864")]
		public static void CharacterToConfigurable(CharacterJoint src)
		{
		}

		[Token(Token = "0x6000617")]
		[Address(RVA = "0xB15064", Offset = "0xB15064", VA = "0xB15064")]
		private static void ConvertJoint(ref ConfigurableJoint conf, Joint src)
		{
		}

		[Token(Token = "0x6000618")]
		[Address(RVA = "0xB1519C", Offset = "0xB1519C", VA = "0xB1519C")]
		private static SoftJointLimit ConvertToHighSoftJointLimit(JointLimits src, JointSpring spring, bool useSpring)
		{
			return default(SoftJointLimit);
		}

		[Token(Token = "0x6000619")]
		[Address(RVA = "0xB15258", Offset = "0xB15258", VA = "0xB15258")]
		private static SoftJointLimit ConvertToLowSoftJointLimit(JointLimits src, JointSpring spring, bool useSpring)
		{
			return default(SoftJointLimit);
		}

		[Token(Token = "0x600061A")]
		[Address(RVA = "0xB15200", Offset = "0xB15200", VA = "0xB15200")]
		private static SoftJointLimitSpring ConvertToSoftJointLimitSpring(JointLimits src, JointSpring spring, bool useSpring)
		{
			return default(SoftJointLimitSpring);
		}

		[Token(Token = "0x600061B")]
		[Address(RVA = "0xB152BC", Offset = "0xB152BC", VA = "0xB152BC")]
		private static SoftJointLimit CopyLimit(SoftJointLimit src)
		{
			return default(SoftJointLimit);
		}

		[Token(Token = "0x600061C")]
		[Address(RVA = "0xB1531C", Offset = "0xB1531C", VA = "0xB1531C")]
		private static SoftJointLimitSpring CopyLimitSpring(SoftJointLimitSpring src)
		{
			return default(SoftJointLimitSpring);
		}
	}
	[Token(Token = "0x20000C9")]
	public abstract class RagdollCreator : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20000CA")]
		public enum ColliderType
		{
			[Token(Token = "0x40005E8")]
			Box,
			[Token(Token = "0x40005E9")]
			Capsule
		}

		[Serializable]
		[Token(Token = "0x20000CB")]
		public enum JointType
		{
			[Token(Token = "0x40005EB")]
			Configurable,
			[Token(Token = "0x40005EC")]
			Character
		}

		[Serializable]
		[Token(Token = "0x20000CC")]
		public enum Direction
		{
			[Token(Token = "0x40005EE")]
			X,
			[Token(Token = "0x40005EF")]
			Y,
			[Token(Token = "0x40005F0")]
			Z
		}

		[Token(Token = "0x20000CD")]
		public struct CreateJointParams
		{
			[Token(Token = "0x20000CE")]
			public struct Limits
			{
				[Token(Token = "0x40005F7")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public float minSwing;

				[Token(Token = "0x40005F8")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
				public float maxSwing;

				[Token(Token = "0x40005F9")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public float swing2;

				[Token(Token = "0x40005FA")]
				[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
				public float twist;

				[Token(Token = "0x600062D")]
				[Address(RVA = "0x190D9E4", Offset = "0x190D9E4", VA = "0x190D9E4")]
				public Limits(float minSwing, float maxSwing, float swing2, float twist)
				{
				}
			}

			[Token(Token = "0x40005F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Rigidbody rigidbody;

			[Token(Token = "0x40005F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Rigidbody connectedBody;

			[Token(Token = "0x40005F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform child;

			[Token(Token = "0x40005F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 worldSwingAxis;

			[Token(Token = "0x40005F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Limits limits;

			[Token(Token = "0x40005F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public JointType type;

			[Token(Token = "0x600062C")]
			[Address(RVA = "0x1908FA4", Offset = "0x1908FA4", VA = "0x1908FA4")]
			public CreateJointParams(Rigidbody rigidbody, Rigidbody connectedBody, Transform child, Vector3 worldSwingAxis, Limits limits, JointType type)
			{
			}
		}

		[Token(Token = "0x600061D")]
		[Address(RVA = "0xE5BA10", Offset = "0xE5BA10", VA = "0xE5BA10")]
		public static void ClearAll(Transform root)
		{
		}

		[Token(Token = "0x600061E")]
		[Address(RVA = "0xE5BC24", Offset = "0xE5BC24", VA = "0xE5BC24")]
		protected static void ClearTransform(Transform transform)
		{
		}

		[Token(Token = "0x600061F")]
		[Address(RVA = "0xE5BE78", Offset = "0xE5BE78", VA = "0xE5BE78")]
		protected static void CreateCollider(Transform t, Vector3 startPoint, Vector3 endPoint, ColliderType colliderType, float lengthOverlap, float width)
		{
		}

		[Token(Token = "0x6000620")]
		[Address(RVA = "0xE5C260", Offset = "0xE5C260", VA = "0xE5C260")]
		protected static void CreateCollider(Transform t, Vector3 startPoint, Vector3 endPoint, ColliderType colliderType, float lengthOverlap, float width, float proportionAspect, Vector3 widthDirection)
		{
		}

		[Token(Token = "0x6000621")]
		[Address(RVA = "0xE5C174", Offset = "0xE5C174", VA = "0xE5C174")]
		protected static float GetScaleF(Transform t)
		{
			return default(float);
		}

		[Token(Token = "0x6000622")]
		[Address(RVA = "0xE5C584", Offset = "0xE5C584", VA = "0xE5C584")]
		protected static Vector3 Abs(Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000623")]
		[Address(RVA = "0xE5C594", Offset = "0xE5C594", VA = "0xE5C594")]
		protected static void Vector3Abs(ref Vector3 v)
		{
		}

		[Token(Token = "0x6000624")]
		[Address(RVA = "0xE5C5B0", Offset = "0xE5C5B0", VA = "0xE5C5B0")]
		protected static Vector3 DirectionIntToVector3(int dir)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000625")]
		[Address(RVA = "0xE5C5D4", Offset = "0xE5C5D4", VA = "0xE5C5D4")]
		protected static Vector3 DirectionToVector3(Direction dir)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000626")]
		[Address(RVA = "0xE5C1A4", Offset = "0xE5C1A4", VA = "0xE5C1A4")]
		protected static int DirectionVector3ToInt(Vector3 dir)
		{
			return default(int);
		}

		[Token(Token = "0x6000627")]
		[Address(RVA = "0xE5C5F8", Offset = "0xE5C5F8", VA = "0xE5C5F8")]
		protected static Vector3 GetLocalOrthoDirection(Transform transform, Vector3 worldDir)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000628")]
		[Address(RVA = "0xE5C798", Offset = "0xE5C798", VA = "0xE5C798")]
		protected static Rigidbody GetConnectedBody(Transform bone, ref Transform[] bones)
		{
			return null;
		}

		[Token(Token = "0x6000629")]
		[Address(RVA = "0xE5C948", Offset = "0xE5C948", VA = "0xE5C948")]
		protected static void CreateJoint(CreateJointParams p)
		{
		}

		[Token(Token = "0x600062A")]
		[Address(RVA = "0xE5CED4", Offset = "0xE5CED4", VA = "0xE5CED4")]
		private static SoftJointLimit ToSoftJointLimit(float limit)
		{
			return default(SoftJointLimit);
		}

		[Token(Token = "0x600062B")]
		[Address(RVA = "0xE5CF08", Offset = "0xE5CF08", VA = "0xE5CF08")]
		protected RagdollCreator()
		{
		}
	}
	[Token(Token = "0x20000CF")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x8CB6C8", Offset = "0x8CB6C8")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8CB6C8", Offset = "0x8CB6C8")]
	public class RagdollEditor : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20000D0")]
		public enum Mode
		{
			[Token(Token = "0x4000600")]
			Colliders,
			[Token(Token = "0x4000601")]
			Joints
		}

		[Token(Token = "0x40005FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public Rigidbody selectedRigidbody;

		[Token(Token = "0x40005FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public Collider selectedCollider;

		[Token(Token = "0x40005FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public bool symmetry;

		[Token(Token = "0x40005FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[HideInInspector]
		public Mode mode;

		[Token(Token = "0x600062E")]
		[Address(RVA = "0xE5CF10", Offset = "0xE5CF10", VA = "0xE5CF10")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DDEFC", Offset = "0x8DDEFC")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x600062F")]
		[Address(RVA = "0xE5CF58", Offset = "0xE5CF58", VA = "0xE5CF58")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DDF34", Offset = "0x8DDF34")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000630")]
		[Address(RVA = "0xE5CFA0", Offset = "0xE5CFA0", VA = "0xE5CFA0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DDF6C", Offset = "0x8DDF6C")]
		private void OpenTutorial()
		{
		}

		[Token(Token = "0x6000631")]
		[Address(RVA = "0xE5CFE8", Offset = "0xE5CFE8", VA = "0xE5CFE8")]
		public RagdollEditor()
		{
		}
	}
}
namespace RootMotion.FinalIK
{
	[Token(Token = "0x20000D1")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8CB728", Offset = "0x8CB728")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x8CB728", Offset = "0x8CB728")]
	public class BipedIK : SolverManager
	{
		[Token(Token = "0x4000602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public BipedReferences references;

		[Token(Token = "0x4000603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public BipedIKSolvers solvers;

		[Token(Token = "0x6000632")]
		[Address(RVA = "0x106695C", Offset = "0x106695C", VA = "0x106695C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DDFA4", Offset = "0x8DDFA4")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x6000633")]
		[Address(RVA = "0x10669A4", Offset = "0x10669A4", VA = "0x10669A4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DDFDC", Offset = "0x8DDFDC")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000634")]
		[Address(RVA = "0x10669EC", Offset = "0x10669EC", VA = "0x10669EC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DE014", Offset = "0x8DE014")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000635")]
		[Address(RVA = "0x1066A34", Offset = "0x1066A34", VA = "0x1066A34")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DE04C", Offset = "0x8DE04C")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000636")]
		[Address(RVA = "0x1066A7C", Offset = "0x1066A7C", VA = "0x1066A7C")]
		public float GetIKPositionWeight(AvatarIKGoal goal)
		{
			return default(float);
		}

		[Token(Token = "0x6000637")]
		[Address(RVA = "0x1066B18", Offset = "0x1066B18", VA = "0x1066B18")]
		public float GetIKRotationWeight(AvatarIKGoal goal)
		{
			return default(float);
		}

		[Token(Token = "0x6000638")]
		[Address(RVA = "0x1066B38", Offset = "0x1066B38", VA = "0x1066B38")]
		public void SetIKPositionWeight(AvatarIKGoal goal, float weight)
		{
		}

		[Token(Token = "0x6000639")]
		[Address(RVA = "0x1066B68", Offset = "0x1066B68", VA = "0x1066B68")]
		public void SetIKRotationWeight(AvatarIKGoal goal, float weight)
		{
		}

		[Token(Token = "0x600063A")]
		[Address(RVA = "0x1066B98", Offset = "0x1066B98", VA = "0x1066B98")]
		public void SetIKPosition(AvatarIKGoal goal, Vector3 IKPosition)
		{
		}

		[Token(Token = "0x600063B")]
		[Address(RVA = "0x1066BD8", Offset = "0x1066BD8", VA = "0x1066BD8")]
		public void SetIKRotation(AvatarIKGoal goal, Quaternion IKRotation)
		{
		}

		[Token(Token = "0x600063C")]
		[Address(RVA = "0x1066C1C", Offset = "0x1066C1C", VA = "0x1066C1C")]
		public Vector3 GetIKPosition(AvatarIKGoal goal)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600063D")]
		[Address(RVA = "0x1066C40", Offset = "0x1066C40", VA = "0x1066C40")]
		public Quaternion GetIKRotation(AvatarIKGoal goal)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600063E")]
		[Address(RVA = "0x1066C64", Offset = "0x1066C64", VA = "0x1066C64")]
		public void SetLookAtWeight(float weight, float bodyWeight, float headWeight, float eyesWeight, float clampWeight, float clampWeightHead, float clampWeightEyes)
		{
		}

		[Token(Token = "0x600063F")]
		[Address(RVA = "0x1066C8C", Offset = "0x1066C8C", VA = "0x1066C8C")]
		public void SetLookAtPosition(Vector3 lookAtPosition)
		{
		}

		[Token(Token = "0x6000640")]
		[Address(RVA = "0x1066CB8", Offset = "0x1066CB8", VA = "0x1066CB8")]
		public void SetSpinePosition(Vector3 spinePosition)
		{
		}

		[Token(Token = "0x6000641")]
		[Address(RVA = "0x1066CE4", Offset = "0x1066CE4", VA = "0x1066CE4")]
		public void SetSpineWeight(float weight)
		{
		}

		[Token(Token = "0x6000642")]
		[Address(RVA = "0x1066A9C", Offset = "0x1066A9C", VA = "0x1066A9C")]
		public IKSolverLimb GetGoalIK(AvatarIKGoal goal)
		{
			return null;
		}

		[Token(Token = "0x6000643")]
		[Address(RVA = "0x1066D0C", Offset = "0x1066D0C", VA = "0x1066D0C")]
		public void InitiateBipedIK()
		{
		}

		[Token(Token = "0x6000644")]
		[Address(RVA = "0x1066D18", Offset = "0x1066D18", VA = "0x1066D18")]
		public void UpdateBipedIK()
		{
		}

		[Token(Token = "0x6000645")]
		[Address(RVA = "0x1066D24", Offset = "0x1066D24", VA = "0x1066D24")]
		public void SetToDefaults()
		{
		}

		[Token(Token = "0x6000646")]
		[Address(RVA = "0x1067008", Offset = "0x1067008", VA = "0x1067008", Slot = "6")]
		protected override void FixTransforms()
		{
		}

		[Token(Token = "0x6000647")]
		[Address(RVA = "0x10670B0", Offset = "0x10670B0", VA = "0x10670B0", Slot = "4")]
		protected override void InitiateSolver()
		{
		}

		[Token(Token = "0x6000648")]
		[Address(RVA = "0x1067490", Offset = "0x1067490", VA = "0x1067490", Slot = "5")]
		protected override void UpdateSolver()
		{
		}

		[Token(Token = "0x6000649")]
		[Address(RVA = "0x106761C", Offset = "0x106761C", VA = "0x106761C")]
		public void LogWarning(string message)
		{
		}

		[Token(Token = "0x600064A")]
		[Address(RVA = "0x1067650", Offset = "0x1067650", VA = "0x1067650")]
		public BipedIK()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000D2")]
	public class BipedIKSolvers
	{
		[Token(Token = "0x4000604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IKSolverLimb leftFoot;

		[Token(Token = "0x4000605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IKSolverLimb rightFoot;

		[Token(Token = "0x4000606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IKSolverLimb leftHand;

		[Token(Token = "0x4000607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public IKSolverLimb rightHand;

		[Token(Token = "0x4000608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public IKSolverFABRIK spine;

		[Token(Token = "0x4000609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverLookAt lookAt;

		[Token(Token = "0x400060A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public IKSolverAim aim;

		[Token(Token = "0x400060B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Constraints pelvis;

		[Token(Token = "0x400060C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private IKSolverLimb[] _limbs;

		[Token(Token = "0x400060D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private IKSolver[] _ikSolvers;

		[Token(Token = "0x17000091")]
		public IKSolverLimb[] limbs
		{
			[Token(Token = "0x600064B")]
			[Address(RVA = "0x1066EC4", Offset = "0x1066EC4", VA = "0x1066EC4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000092")]
		public IKSolver[] ikSolvers
		{
			[Token(Token = "0x600064C")]
			[Address(RVA = "0x10678B8", Offset = "0x10678B8", VA = "0x10678B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600064D")]
		[Address(RVA = "0x106736C", Offset = "0x106736C", VA = "0x106736C")]
		public void AssignReferences(BipedReferences references)
		{
		}

		[Token(Token = "0x600064E")]
		[Address(RVA = "0x1067744", Offset = "0x1067744", VA = "0x1067744")]
		public BipedIKSolvers()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000D3")]
	public abstract class Constraint
	{
		[Token(Token = "0x400060E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform transform;

		[Token(Token = "0x400060F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float weight;

		[Token(Token = "0x17000093")]
		public bool isValid
		{
			[Token(Token = "0x600064F")]
			[Address(RVA = "0xCBD6A4", Offset = "0xCBD6A4", VA = "0xCBD6A4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000650")]
		public abstract void UpdateConstraint();

		[Token(Token = "0x6000651")]
		[Address(RVA = "0xCBD710", Offset = "0xCBD710", VA = "0xCBD710")]
		protected Constraint()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000D4")]
	public class ConstraintPosition : Constraint
	{
		[Token(Token = "0x4000610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 position;

		[Token(Token = "0x6000652")]
		[Address(RVA = "0xCBD718", Offset = "0xCBD718", VA = "0xCBD718", Slot = "4")]
		public override void UpdateConstraint()
		{
		}

		[Token(Token = "0x6000653")]
		[Address(RVA = "0xCBD7D8", Offset = "0xCBD7D8", VA = "0xCBD7D8")]
		public ConstraintPosition()
		{
		}

		[Token(Token = "0x6000654")]
		[Address(RVA = "0xCBD7E0", Offset = "0xCBD7E0", VA = "0xCBD7E0")]
		public ConstraintPosition(Transform transform)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000D5")]
	public class ConstraintPositionOffset : Constraint
	{
		[Token(Token = "0x4000611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 offset;

		[Token(Token = "0x4000612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 defaultLocalPosition;

		[Token(Token = "0x4000613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 lastLocalPosition;

		[Token(Token = "0x4000614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool initiated;

		[Token(Token = "0x17000094")]
		private bool positionChanged
		{
			[Token(Token = "0x6000658")]
			[Address(RVA = "0xCBD914", Offset = "0xCBD914", VA = "0xCBD914")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000655")]
		[Address(RVA = "0xCBD80C", Offset = "0xCBD80C", VA = "0xCBD80C", Slot = "4")]
		public override void UpdateConstraint()
		{
		}

		[Token(Token = "0x6000656")]
		[Address(RVA = "0xCBD950", Offset = "0xCBD950", VA = "0xCBD950")]
		public ConstraintPositionOffset()
		{
		}

		[Token(Token = "0x6000657")]
		[Address(RVA = "0xCBD958", Offset = "0xCBD958", VA = "0xCBD958")]
		public ConstraintPositionOffset(Transform transform)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000D6")]
	public class ConstraintRotation : Constraint
	{
		[Token(Token = "0x4000615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion rotation;

		[Token(Token = "0x6000659")]
		[Address(RVA = "0xCBD984", Offset = "0xCBD984", VA = "0xCBD984", Slot = "4")]
		public override void UpdateConstraint()
		{
		}

		[Token(Token = "0x600065A")]
		[Address(RVA = "0xCBDA04", Offset = "0xCBDA04", VA = "0xCBDA04")]
		public ConstraintRotation()
		{
		}

		[Token(Token = "0x600065B")]
		[Address(RVA = "0xCBDA0C", Offset = "0xCBDA0C", VA = "0xCBDA0C")]
		public ConstraintRotation(Transform transform)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000D7")]
	public class ConstraintRotationOffset : Constraint
	{
		[Token(Token = "0x4000616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion offset;

		[Token(Token = "0x4000617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Quaternion defaultRotation;

		[Token(Token = "0x4000618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Quaternion defaultLocalRotation;

		[Token(Token = "0x4000619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Quaternion lastLocalRotation;

		[Token(Token = "0x400061A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Quaternion defaultTargetLocalRotation;

		[Token(Token = "0x400061B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool initiated;

		[Token(Token = "0x17000095")]
		private bool rotationChanged
		{
			[Token(Token = "0x600065F")]
			[Address(RVA = "0xCBDB40", Offset = "0xCBDB40", VA = "0xCBDB40")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600065C")]
		[Address(RVA = "0xCBDA38", Offset = "0xCBDA38", VA = "0xCBDA38", Slot = "4")]
		public override void UpdateConstraint()
		{
		}

		[Token(Token = "0x600065D")]
		[Address(RVA = "0xCBDB7C", Offset = "0xCBDB7C", VA = "0xCBDB7C")]
		public ConstraintRotationOffset()
		{
		}

		[Token(Token = "0x600065E")]
		[Address(RVA = "0xCBDB84", Offset = "0xCBDB84", VA = "0xCBDB84")]
		public ConstraintRotationOffset(Transform transform)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000D8")]
	public class Constraints
	{
		[Token(Token = "0x400061C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform transform;

		[Token(Token = "0x400061D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform target;

		[Token(Token = "0x400061E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 positionOffset;

		[Token(Token = "0x400061F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 position;

		[Token(Token = "0x4000620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D1CF4", Offset = "0x8D1CF4")]
		public float positionWeight;

		[Token(Token = "0x4000621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 rotationOffset;

		[Token(Token = "0x4000622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 rotation;

		[Token(Token = "0x4000623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D1D0C", Offset = "0x8D1D0C")]
		public float rotationWeight;

		[Token(Token = "0x6000660")]
		[Address(RVA = "0xCBDBB0", Offset = "0xCBDBB0", VA = "0xCBDBB0")]
		public bool IsValid()
		{
			return default(bool);
		}

		[Token(Token = "0x6000661")]
		[Address(RVA = "0xCBDC1C", Offset = "0xCBDC1C", VA = "0xCBDC1C")]
		public void Initiate(Transform transform)
		{
		}

		[Token(Token = "0x6000662")]
		[Address(RVA = "0xCBDC70", Offset = "0xCBDC70", VA = "0xCBDC70")]
		public void Update()
		{
		}

		[Token(Token = "0x6000663")]
		[Address(RVA = "0xCBDF20", Offset = "0xCBDF20", VA = "0xCBDF20")]
		public Constraints()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000D9")]
	public class Finger
	{
		[Serializable]
		[Token(Token = "0x20000DA")]
		public enum DOF
		{
			[Token(Token = "0x4000636")]
			One,
			[Token(Token = "0x4000637")]
			Three
		}

		[Token(Token = "0x4000624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D1D24", Offset = "0x8D1D24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D1D24", Offset = "0x8D1D24")]
		public float weight;

		[Token(Token = "0x4000625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D1D78", Offset = "0x8D1D78")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D1D78", Offset = "0x8D1D78")]
		public float rotationWeight;

		[Token(Token = "0x4000626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D1DCC", Offset = "0x8D1DCC")]
		public DOF rotationDOF;

		[Token(Token = "0x4000627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D1E04", Offset = "0x8D1E04")]
		public bool fixBone1Twist;

		[Token(Token = "0x4000628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D1E3C", Offset = "0x8D1E3C")]
		public Transform bone1;

		[Token(Token = "0x4000629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D1E74", Offset = "0x8D1E74")]
		public Transform bone2;

		[Token(Token = "0x400062A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D1EAC", Offset = "0x8D1EAC")]
		public Transform bone3;

		[Token(Token = "0x400062B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D1EE4", Offset = "0x8D1EE4")]
		public Transform tip;

		[Token(Token = "0x400062C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D1F1C", Offset = "0x8D1F1C")]
		public Transform target;

		[Token(Token = "0x400062D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D1F54", Offset = "0x8D1F54")]
		private bool <initiated>k__BackingField;

		[Token(Token = "0x400062E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private IKSolverLimb solver;

		[Token(Token = "0x400062F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Quaternion bone3RelativeToTarget;

		[Token(Token = "0x4000630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 bone3DefaultLocalPosition;

		[Token(Token = "0x4000631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Quaternion bone3DefaultLocalRotation;

		[Token(Token = "0x4000632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Vector3 bone1Axis;

		[Token(Token = "0x4000633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3 tipAxis;

		[Token(Token = "0x4000634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Vector3 bone1TwistAxis;

		[Token(Token = "0x17000096")]
		public bool initiated
		{
			[Token(Token = "0x6000664")]
			[Address(RVA = "0x1533CEC", Offset = "0x1533CEC", VA = "0x1533CEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DE084", Offset = "0x8DE084")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000665")]
			[Address(RVA = "0x1533CF4", Offset = "0x1533CF4", VA = "0x1533CF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DE094", Offset = "0x8DE094")]
			private set
			{
			}
		}

		[Token(Token = "0x17000097")]
		public Vector3 IKPosition
		{
			[Token(Token = "0x6000666")]
			[Address(RVA = "0x1533D00", Offset = "0x1533D00", VA = "0x1533D00")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000667")]
			[Address(RVA = "0x1533D20", Offset = "0x1533D20", VA = "0x1533D20")]
			set
			{
			}
		}

		[Token(Token = "0x17000098")]
		public Quaternion IKRotation
		{
			[Token(Token = "0x6000668")]
			[Address(RVA = "0x1533D40", Offset = "0x1533D40", VA = "0x1533D40")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6000669")]
			[Address(RVA = "0x1533D60", Offset = "0x1533D60", VA = "0x1533D60")]
			set
			{
			}
		}

		[Token(Token = "0x600066A")]
		[Address(RVA = "0x1533D80", Offset = "0x1533D80", VA = "0x1533D80")]
		public bool IsValid(ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x600066B")]
		[Address(RVA = "0x1533E88", Offset = "0x1533E88", VA = "0x1533E88")]
		public void Initiate(Transform hand, int index)
		{
		}

		[Token(Token = "0x600066C")]
		[Address(RVA = "0x153432C", Offset = "0x153432C", VA = "0x153432C")]
		public void FixTransforms()
		{
		}

		[Token(Token = "0x600066D")]
		[Address(RVA = "0x1534404", Offset = "0x1534404", VA = "0x1534404")]
		public void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x600066E")]
		[Address(RVA = "0x15344C8", Offset = "0x15344C8", VA = "0x15344C8")]
		public void Update(float masterWeight)
		{
		}

		[Token(Token = "0x600066F")]
		[Address(RVA = "0x1534A10", Offset = "0x1534A10", VA = "0x1534A10")]
		public Finger()
		{
		}
	}
	[Token(Token = "0x20000DB")]
	public class FingerRig : SolverManager
	{
		[Token(Token = "0x4000638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D1F64", Offset = "0x8D1F64")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D1F64", Offset = "0x8D1F64")]
		public float weight;

		[Token(Token = "0x4000639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Finger[] fingers;

		[Token(Token = "0x400063A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D1FB8", Offset = "0x8D1FB8")]
		private bool <initiated>k__BackingField;

		[Token(Token = "0x17000099")]
		public bool initiated
		{
			[Token(Token = "0x6000670")]
			[Address(RVA = "0x1534A20", Offset = "0x1534A20", VA = "0x1534A20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DE0A4", Offset = "0x8DE0A4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000671")]
			[Address(RVA = "0x1534A28", Offset = "0x1534A28", VA = "0x1534A28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DE0B4", Offset = "0x8DE0B4")]
			private set
			{
			}
		}

		[Token(Token = "0x6000672")]
		[Address(RVA = "0x1534A34", Offset = "0x1534A34", VA = "0x1534A34")]
		public bool IsValid(ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000673")]
		[Address(RVA = "0x1534ABC", Offset = "0x1534ABC", VA = "0x1534ABC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DE0C4", Offset = "0x8DE0C4")]
		public void AutoDetect()
		{
		}

		[Token(Token = "0x6000674")]
		[Address(RVA = "0x1534DF4", Offset = "0x1534DF4", VA = "0x1534DF4")]
		public void AddFinger(Transform bone1, Transform bone2, Transform bone3, Transform tip, [Optional] Transform target)
		{
		}

		[Token(Token = "0x6000675")]
		[Address(RVA = "0x1534F6C", Offset = "0x1534F6C", VA = "0x1534F6C")]
		public void RemoveFinger(int index)
		{
		}

		[Token(Token = "0x6000676")]
		[Address(RVA = "0x1534CF8", Offset = "0x1534CF8", VA = "0x1534CF8")]
		private void AddChildrenRecursive(Transform parent, ref Transform[] array)
		{
		}

		[Token(Token = "0x6000677")]
		[Address(RVA = "0x15350DC", Offset = "0x15350DC", VA = "0x15350DC", Slot = "4")]
		protected override void InitiateSolver()
		{
		}

		[Token(Token = "0x6000678")]
		[Address(RVA = "0x153519C", Offset = "0x153519C", VA = "0x153519C")]
		public void UpdateFingerSolvers()
		{
		}

		[Token(Token = "0x6000679")]
		[Address(RVA = "0x1535214", Offset = "0x1535214", VA = "0x1535214")]
		public void FixFingerTransforms()
		{
		}

		[Token(Token = "0x600067A")]
		[Address(RVA = "0x1535288", Offset = "0x1535288", VA = "0x1535288")]
		public void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x600067B")]
		[Address(RVA = "0x15352F0", Offset = "0x15352F0", VA = "0x15352F0", Slot = "5")]
		protected override void UpdateSolver()
		{
		}

		[Token(Token = "0x600067C")]
		[Address(RVA = "0x15352F4", Offset = "0x15352F4", VA = "0x15352F4", Slot = "6")]
		protected override void FixTransforms()
		{
		}

		[Token(Token = "0x600067D")]
		[Address(RVA = "0x1535308", Offset = "0x1535308", VA = "0x1535308")]
		public FingerRig()
		{
		}
	}
	[Token(Token = "0x20000DC")]
	public abstract class Grounder : MonoBehaviour
	{
		[Token(Token = "0x20000DD")]
		public delegate void GrounderDelegate();

		[Token(Token = "0x400063B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D1FC8", Offset = "0x8D1FC8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D1FC8", Offset = "0x8D1FC8")]
		public float weight;

		[Token(Token = "0x400063C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D201C", Offset = "0x8D201C")]
		public Grounding solver;

		[Token(Token = "0x400063D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GrounderDelegate OnPreGrounder;

		[Token(Token = "0x400063E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GrounderDelegate OnPostGrounder;

		[Token(Token = "0x400063F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D2054", Offset = "0x8D2054")]
		private bool <initiated>k__BackingField;

		[Token(Token = "0x1700009A")]
		public bool initiated
		{
			[Token(Token = "0x600067F")]
			[Address(RVA = "0x1538F2C", Offset = "0x1538F2C", VA = "0x1538F2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DE0FC", Offset = "0x8DE0FC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000680")]
			[Address(RVA = "0x1538F34", Offset = "0x1538F34", VA = "0x1538F34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DE10C", Offset = "0x8DE10C")]
			protected set
			{
			}
		}

		[Token(Token = "0x600067E")]
		public abstract void ResetPosition();

		[Token(Token = "0x6000681")]
		[Address(RVA = "0x1538F40", Offset = "0x1538F40", VA = "0x1538F40")]
		protected Vector3 GetSpineOffsetTarget()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000682")]
		[Address(RVA = "0x15390EC", Offset = "0x15390EC", VA = "0x15390EC")]
		protected void LogWarning(string message)
		{
		}

		[Token(Token = "0x6000683")]
		[Address(RVA = "0x1538FEC", Offset = "0x1538FEC", VA = "0x1538FEC")]
		private Vector3 GetLegSpineBendVector(Grounding.Leg leg)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000684")]
		[Address(RVA = "0x1539120", Offset = "0x1539120", VA = "0x1539120")]
		private Vector3 GetLegSpineTangent(Grounding.Leg leg)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000685")]
		protected abstract void OpenUserManual();

		[Token(Token = "0x6000686")]
		protected abstract void OpenScriptReference();

		[Token(Token = "0x6000687")]
		[Address(RVA = "0x153925C", Offset = "0x153925C", VA = "0x153925C")]
		protected Grounder()
		{
		}
	}
	[Token(Token = "0x20000DE")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x8CB788", Offset = "0x8CB788")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8CB788", Offset = "0x8CB788")]
	public class GrounderBipedIK : Grounder
	{
		[Token(Token = "0x4000640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D2064", Offset = "0x8D2064")]
		public BipedIK ik;

		[Token(Token = "0x4000641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D209C", Offset = "0x8D209C")]
		public float spineBend;

		[Token(Token = "0x4000642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D20D4", Offset = "0x8D20D4")]
		public float spineSpeed;

		[Token(Token = "0x4000643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform[] feet;

		[Token(Token = "0x4000644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Quaternion[] footRotations;

		[Token(Token = "0x4000645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 animatedPelvisLocalPosition;

		[Token(Token = "0x4000646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 solvedPelvisLocalPosition;

		[Token(Token = "0x4000647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 spineOffset;

		[Token(Token = "0x4000648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float lastWeight;

		[Token(Token = "0x600068C")]
		[Address(RVA = "0x15392C8", Offset = "0x15392C8", VA = "0x15392C8", Slot = "5")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DE11C", Offset = "0x8DE11C")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x600068D")]
		[Address(RVA = "0x1539310", Offset = "0x1539310", VA = "0x1539310", Slot = "6")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DE154", Offset = "0x8DE154")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x600068E")]
		[Address(RVA = "0x1539358", Offset = "0x1539358", VA = "0x1539358", Slot = "4")]
		public override void ResetPosition()
		{
		}

		[Token(Token = "0x600068F")]
		[Address(RVA = "0x1539398", Offset = "0x1539398", VA = "0x1539398")]
		private bool IsReadyToInitiate()
		{
			return default(bool);
		}

		[Token(Token = "0x6000690")]
		[Address(RVA = "0x1539444", Offset = "0x1539444", VA = "0x1539444")]
		private void Update()
		{
		}

		[Token(Token = "0x6000691")]
		[Address(RVA = "0x15394A4", Offset = "0x15394A4", VA = "0x15394A4")]
		private void Initiate()
		{
		}

		[Token(Token = "0x6000692")]
		[Address(RVA = "0x1539768", Offset = "0x1539768", VA = "0x1539768")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000693")]
		[Address(RVA = "0x15397BC", Offset = "0x15397BC", VA = "0x15397BC")]
		private void OnSolverUpdate()
		{
		}

		[Token(Token = "0x6000694")]
		[Address(RVA = "0x1539BB8", Offset = "0x1539BB8", VA = "0x1539BB8")]
		private void SetLegIK(IKSolverLimb limb, int index)
		{
		}

		[Token(Token = "0x6000695")]
		[Address(RVA = "0x1539C8C", Offset = "0x1539C8C", VA = "0x1539C8C")]
		private void OnPostSolverUpdate()
		{
		}

		[Token(Token = "0x6000696")]
		[Address(RVA = "0x1539DCC", Offset = "0x1539DCC", VA = "0x1539DCC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000697")]
		[Address(RVA = "0x1539F5C", Offset = "0x1539F5C", VA = "0x1539F5C")]
		public GrounderBipedIK()
		{
		}
	}
	[Token(Token = "0x20000DF")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x8CB7E8", Offset = "0x8CB7E8")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8CB7E8", Offset = "0x8CB7E8")]
	public class GrounderFBBIK : Grounder
	{
		[Serializable]
		[Token(Token = "0x20000E0")]
		public class SpineEffector
		{
			[Token(Token = "0x4000650")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D21B4", Offset = "0x8D21B4")]
			public FullBodyBipedEffector effectorType;

			[Token(Token = "0x4000651")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D21EC", Offset = "0x8D21EC")]
			public float horizontalWeight;

			[Token(Token = "0x4000652")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D2224", Offset = "0x8D2224")]
			public float verticalWeight;

			[Token(Token = "0x60006A6")]
			[Address(RVA = "0xC1864C", Offset = "0xC1864C", VA = "0xC1864C")]
			public SpineEffector()
			{
			}

			[Token(Token = "0x60006A7")]
			[Address(RVA = "0xC1865C", Offset = "0xC1865C", VA = "0xC1865C")]
			public SpineEffector(FullBodyBipedEffector effectorType, float horizontalWeight, float verticalWeight)
			{
			}
		}

		[Token(Token = "0x4000649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D210C", Offset = "0x8D210C")]
		public FullBodyBipedIK ik;

		[Token(Token = "0x400064A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D2144", Offset = "0x8D2144")]
		public float spineBend;

		[Token(Token = "0x400064B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D217C", Offset = "0x8D217C")]
		public float spineSpeed;

		[Token(Token = "0x400064C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public SpineEffector[] spine;

		[Token(Token = "0x400064D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform[] feet;

		[Token(Token = "0x400064E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 spineOffset;

		[Token(Token = "0x400064F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool firstSolve;

		[Token(Token = "0x6000698")]
		[Address(RVA = "0x1539FE4", Offset = "0x1539FE4", VA = "0x1539FE4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DE18C", Offset = "0x8DE18C")]
		private void OpenTutorial()
		{
		}

		[Token(Token = "0x6000699")]
		[Address(RVA = "0x153A02C", Offset = "0x153A02C", VA = "0x153A02C", Slot = "5")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DE1C4", Offset = "0x8DE1C4")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x600069A")]
		[Address(RVA = "0x153A074", Offset = "0x153A074", VA = "0x153A074", Slot = "6")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DE1FC", Offset = "0x8DE1FC")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x600069B")]
		[Address(RVA = "0x153A0BC", Offset = "0x153A0BC", VA = "0x153A0BC", Slot = "4")]
		public override void ResetPosition()
		{
		}

		[Token(Token = "0x600069C")]
		[Address(RVA = "0x153A0FC", Offset = "0x153A0FC", VA = "0x153A0FC")]
		private bool IsReadyToInitiate()
		{
			return default(bool);
		}

		[Token(Token = "0x600069D")]
		[Address(RVA = "0x153A190", Offset = "0x153A190", VA = "0x153A190")]
		private void Update()
		{
		}

		[Token(Token = "0x600069E")]
		[Address(RVA = "0x153A410", Offset = "0x153A410", VA = "0x153A410")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600069F")]
		[Address(RVA = "0x153A41C", Offset = "0x153A41C", VA = "0x153A41C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60006A0")]
		[Address(RVA = "0x153A1F8", Offset = "0x153A1F8", VA = "0x153A1F8")]
		private void Initiate()
		{
		}

		[Token(Token = "0x60006A1")]
		[Address(RVA = "0x153A428", Offset = "0x153A428", VA = "0x153A428")]
		private void OnSolverUpdate()
		{
		}

		[Token(Token = "0x60006A2")]
		[Address(RVA = "0x153A748", Offset = "0x153A748", VA = "0x153A748")]
		private void SetLegIK(IKEffector effector, Grounding.Leg leg)
		{
		}

		[Token(Token = "0x60006A3")]
		[Address(RVA = "0x153A858", Offset = "0x153A858", VA = "0x153A858")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x60006A4")]
		[Address(RVA = "0x153A9B0", Offset = "0x153A9B0", VA = "0x153A9B0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60006A5")]
		[Address(RVA = "0x153AAC4", Offset = "0x153AAC4", VA = "0x153AAC4")]
		public GrounderFBBIK()
		{
		}
	}
	[Token(Token = "0x20000E1")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8CB848", Offset = "0x8CB848")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x8CB848", Offset = "0x8CB848")]
	public class GrounderIK : Grounder
	{
		[Token(Token = "0x4000653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public IK[] legs;

		[Token(Token = "0x4000654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D225C", Offset = "0x8D225C")]
		public Transform pelvis;

		[Token(Token = "0x4000655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D2294", Offset = "0x8D2294")]
		public Transform characterRoot;

		[Token(Token = "0x4000656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D22CC", Offset = "0x8D22CC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D22CC", Offset = "0x8D22CC")]
		public float rootRotationWeight;

		[Token(Token = "0x4000657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D2320", Offset = "0x8D2320")]
		public float rootRotationSpeed;

		[Token(Token = "0x4000658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D2358", Offset = "0x8D2358")]
		public float maxRootRotationAngle;

		[Token(Token = "0x4000659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform[] feet;

		[Token(Token = "0x400065A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Quaternion[] footRotations;

		[Token(Token = "0x400065B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 animatedPelvisLocalPosition;

		[Token(Token = "0x400065C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Vector3 solvedPelvisLocalPosition;

		[Token(Token = "0x400065D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int solvedFeet;

		[Token(Token = "0x400065E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private bool solved;

		[Token(Token = "0x400065F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float lastWeight;

		[Token(Token = "0x4000660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Rigidbody characterRootRigidbody;

		[Token(Token = "0x60006A8")]
		[Address(RVA = "0x153AB4C", Offset = "0x153AB4C", VA = "0x153AB4C", Slot = "5")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DE234", Offset = "0x8DE234")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x60006A9")]
		[Address(RVA = "0x153AB94", Offset = "0x153AB94", VA = "0x153AB94", Slot = "6")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DE26C", Offset = "0x8DE26C")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x60006AA")]
		[Address(RVA = "0x153ABDC", Offset = "0x153ABDC", VA = "0x153ABDC", Slot = "4")]
		public override void ResetPosition()
		{
		}

		[Token(Token = "0x60006AB")]
		[Address(RVA = "0x153ABF8", Offset = "0x153ABF8", VA = "0x153ABF8")]
		private bool IsReadyToInitiate()
		{
			return default(bool);
		}

		[Token(Token = "0x60006AC")]
		[Address(RVA = "0x153AE2C", Offset = "0x153AE2C", VA = "0x153AE2C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60006AD")]
		[Address(RVA = "0x153AF28", Offset = "0x153AF28", VA = "0x153AF28")]
		private void Update()
		{
		}

		[Token(Token = "0x60006AE")]
		[Address(RVA = "0x153B374", Offset = "0x153B374", VA = "0x153B374")]
		private void Initiate()
		{
		}

		[Token(Token = "0x60006AF")]
		[Address(RVA = "0x153B780", Offset = "0x153B780", VA = "0x153B780")]
		private void OnSolverUpdate()
		{
		}

		[Token(Token = "0x60006B0")]
		[Address(RVA = "0x153B910", Offset = "0x153B910", VA = "0x153B910")]
		private void SetLegIK(int index)
		{
		}

		[Token(Token = "0x60006B1")]
		[Address(RVA = "0x153BC14", Offset = "0x153BC14", VA = "0x153BC14")]
		private void OnPostSolverUpdate()
		{
		}

		[Token(Token = "0x60006B2")]
		[Address(RVA = "0x153BD60", Offset = "0x153BD60", VA = "0x153BD60")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60006B3")]
		[Address(RVA = "0x153BF48", Offset = "0x153BF48", VA = "0x153BF48")]
		public GrounderIK()
		{
		}
	}
	[Token(Token = "0x20000E2")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x8CB8A8", Offset = "0x8CB8A8")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8CB8A8", Offset = "0x8CB8A8")]
	public class GrounderQuadruped : Grounder
	{
		[Token(Token = "0x20000E3")]
		public struct Foot
		{
			[Token(Token = "0x400067E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IKSolver solver;

			[Token(Token = "0x400067F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Transform transform;

			[Token(Token = "0x4000680")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Quaternion rotation;

			[Token(Token = "0x4000681")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Grounding.Leg leg;

			[Token(Token = "0x60006C6")]
			[Address(RVA = "0xC186A4", Offset = "0xC186A4", VA = "0xC186A4")]
			public Foot(IKSolver solver, Transform transform)
			{
			}
		}

		[Token(Token = "0x4000661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D2390", Offset = "0x8D2390")]
		public Grounding forelegSolver;

		[Token(Token = "0x4000662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D23C8", Offset = "0x8D23C8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D23C8", Offset = "0x8D23C8")]
		public float rootRotationWeight;

		[Token(Token = "0x4000663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D241C", Offset = "0x8D241C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D241C", Offset = "0x8D241C")]
		public float minRootRotation;

		[Token(Token = "0x4000664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D2474", Offset = "0x8D2474")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D2474", Offset = "0x8D2474")]
		public float maxRootRotation;

		[Token(Token = "0x4000665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D24CC", Offset = "0x8D24CC")]
		public float rootRotationSpeed;

		[Token(Token = "0x4000666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D2504", Offset = "0x8D2504")]
		public float maxLegOffset;

		[Token(Token = "0x4000667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D253C", Offset = "0x8D253C")]
		public float maxForeLegOffset;

		[Token(Token = "0x4000668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D2574", Offset = "0x8D2574")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D2574", Offset = "0x8D2574")]
		public float maintainHeadRotationWeight;

		[Token(Token = "0x4000669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D25C8", Offset = "0x8D25C8")]
		public Transform characterRoot;

		[Token(Token = "0x400066A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D2600", Offset = "0x8D2600")]
		public Transform pelvis;

		[Token(Token = "0x400066B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D2638", Offset = "0x8D2638")]
		public Transform lastSpineBone;

		[Token(Token = "0x400066C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D2670", Offset = "0x8D2670")]
		public Transform head;

		[Token(Token = "0x400066D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public IK[] legs;

		[Token(Token = "0x400066E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public IK[] forelegs;

		[Token(Token = "0x400066F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[HideInInspector]
		public Vector3 gravity;

		[Token(Token = "0x4000670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Foot[] feet;

		[Token(Token = "0x4000671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector3 animatedPelvisLocalPosition;

		[Token(Token = "0x4000672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private Quaternion animatedPelvisLocalRotation;

		[Token(Token = "0x4000673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private Quaternion animatedHeadLocalRotation;

		[Token(Token = "0x4000674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private Vector3 solvedPelvisLocalPosition;

		[Token(Token = "0x4000675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Quaternion solvedPelvisLocalRotation;

		[Token(Token = "0x4000676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Quaternion solvedHeadLocalRotation;

		[Token(Token = "0x4000677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private int solvedFeet;

		[Token(Token = "0x4000678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private bool solved;

		[Token(Token = "0x4000679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private float angle;

		[Token(Token = "0x400067A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Transform forefeetRoot;

		[Token(Token = "0x400067B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Quaternion headRotation;

		[Token(Token = "0x400067C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private float lastWeight;

		[Token(Token = "0x400067D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private Rigidbody characterRootRigidbody;

		[Token(Token = "0x60006B4")]
		[Address(RVA = "0x153BFD0", Offset = "0x153BFD0", VA = "0x153BFD0", Slot = "5")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DE2A4", Offset = "0x8DE2A4")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x60006B5")]
		[Address(RVA = "0x153C018", Offset = "0x153C018", VA = "0x153C018", Slot = "6")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DE2DC", Offset = "0x8DE2DC")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x60006B6")]
		[Address(RVA = "0x153C060", Offset = "0x153C060", VA = "0x153C060", Slot = "4")]
		public override void ResetPosition()
		{
		}

		[Token(Token = "0x60006B7")]
		[Address(RVA = "0x153C09C", Offset = "0x153C09C", VA = "0x153C09C")]
		private bool IsReadyToInitiate()
		{
			return default(bool);
		}

		[Token(Token = "0x60006B8")]
		[Address(RVA = "0x153C1C8", Offset = "0x153C1C8", VA = "0x153C1C8")]
		private bool IsReadyToInitiateLegs(IK[] ikComponents)
		{
			return default(bool);
		}

		[Token(Token = "0x60006B9")]
		[Address(RVA = "0x153C3CC", Offset = "0x153C3CC", VA = "0x153C3CC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60006BA")]
		[Address(RVA = "0x153C434", Offset = "0x153C434", VA = "0x153C434")]
		private void Update()
		{
		}

		[Token(Token = "0x60006BB")]
		[Address(RVA = "0x153C498", Offset = "0x153C498", VA = "0x153C498")]
		private void Initiate()
		{
		}

		[Token(Token = "0x60006BC")]
		[Address(RVA = "0x153C7CC", Offset = "0x153C7CC", VA = "0x153C7CC")]
		private Transform[] InitiateFeet(IK[] ikComponents, ref Foot[] f, int indexOffset)
		{
			return null;
		}

		[Token(Token = "0x60006BD")]
		[Address(RVA = "0x153CB10", Offset = "0x153CB10", VA = "0x153CB10")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60006BE")]
		[Address(RVA = "0x153CC08", Offset = "0x153CC08", VA = "0x153CC08")]
		private void RootRotation()
		{
		}

		[Token(Token = "0x60006BF")]
		[Address(RVA = "0x153CFD4", Offset = "0x153CFD4", VA = "0x153CFD4")]
		private void OnSolverUpdate()
		{
		}

		[Token(Token = "0x60006C0")]
		[Address(RVA = "0x153D5F8", Offset = "0x153D5F8", VA = "0x153D5F8")]
		private void UpdateForefeetRoot()
		{
		}

		[Token(Token = "0x60006C1")]
		[Address(RVA = "0x153D7C8", Offset = "0x153D7C8", VA = "0x153D7C8")]
		private void SetFootIK(Foot foot, float maxOffset)
		{
		}

		[Token(Token = "0x60006C2")]
		[Address(RVA = "0x153D8A4", Offset = "0x153D8A4", VA = "0x153D8A4")]
		private void OnPostSolverUpdate()
		{
		}

		[Token(Token = "0x60006C3")]
		[Address(RVA = "0x153DAEC", Offset = "0x153DAEC", VA = "0x153DAEC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60006C4")]
		[Address(RVA = "0x153DB24", Offset = "0x153DB24", VA = "0x153DB24")]
		private void DestroyLegs(IK[] ikComponents)
		{
		}

		[Token(Token = "0x60006C5")]
		[Address(RVA = "0x153DD04", Offset = "0x153DD04", VA = "0x153DD04")]
		public GrounderQuadruped()
		{
		}
	}
	[Token(Token = "0x20000E4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8CB908", Offset = "0x8CB908")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x8CB908", Offset = "0x8CB908")]
	public class GrounderVRIK : Grounder
	{
		[Token(Token = "0x4000682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D26B8", Offset = "0x8D26B8")]
		public VRIK ik;

		[Token(Token = "0x4000683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform[] feet;

		[Token(Token = "0x60006C7")]
		[Address(RVA = "0x1562CF8", Offset = "0x1562CF8", VA = "0x1562CF8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DE314", Offset = "0x8DE314")]
		private void OpenTutorial()
		{
		}

		[Token(Token = "0x60006C8")]
		[Address(RVA = "0x1562D40", Offset = "0x1562D40", VA = "0x1562D40", Slot = "5")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DE34C", Offset = "0x8DE34C")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x60006C9")]
		[Address(RVA = "0x1562D88", Offset = "0x1562D88", VA = "0x1562D88", Slot = "6")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DE384", Offset = "0x8DE384")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x60006CA")]
		[Address(RVA = "0x1562DD0", Offset = "0x1562DD0", VA = "0x1562DD0", Slot = "4")]
		public override void ResetPosition()
		{
		}

		[Token(Token = "0x60006CB")]
		[Address(RVA = "0x1562E74", Offset = "0x1562E74", VA = "0x1562E74")]
		private bool IsReadyToInitiate()
		{
			return default(bool);
		}

		[Token(Token = "0x60006CC")]
		[Address(RVA = "0x1562F08", Offset = "0x1562F08", VA = "0x1562F08")]
		private void Update()
		{
		}

		[Token(Token = "0x60006CD")]
		[Address(RVA = "0x1562F68", Offset = "0x1562F68", VA = "0x1562F68")]
		private void Initiate()
		{
		}

		[Token(Token = "0x60006CE")]
		[Address(RVA = "0x1563410", Offset = "0x1563410", VA = "0x1563410")]
		private void OnSolverUpdate()
		{
		}

		[Token(Token = "0x60006CF")]
		[Address(RVA = "0x1563848", Offset = "0x1563848", VA = "0x1563848")]
		private void SetLegIK(IKSolverVR.PositionOffset positionOffset, Transform bone, Grounding.Leg leg)
		{
		}

		[Token(Token = "0x60006D0")]
		[Address(RVA = "0x15638D8", Offset = "0x15638D8", VA = "0x15638D8")]
		private void OnPostSolverUpdate()
		{
		}

		[Token(Token = "0x60006D1")]
		[Address(RVA = "0x1563A94", Offset = "0x1563A94", VA = "0x1563A94")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x60006D2")]
		[Address(RVA = "0x1563BEC", Offset = "0x1563BEC", VA = "0x1563BEC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60006D3")]
		[Address(RVA = "0x1563D6C", Offset = "0x1563D6C", VA = "0x1563D6C")]
		public GrounderVRIK()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000E5")]
	public class Grounding
	{
		[Serializable]
		[Token(Token = "0x20000E6")]
		public enum Quality
		{
			[Token(Token = "0x400069D")]
			Fastest,
			[Token(Token = "0x400069E")]
			Simple,
			[Token(Token = "0x400069F")]
			Best
		}

		[Token(Token = "0x20000E7")]
		public class Leg
		{
			[Token(Token = "0x40006A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D2B9C", Offset = "0x8D2B9C")]
			private bool <isGrounded>k__BackingField;

			[Token(Token = "0x40006A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D2BAC", Offset = "0x8D2BAC")]
			private Vector3 <IKPosition>k__BackingField;

			[Token(Token = "0x40006A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Quaternion rotationOffset;

			[Token(Token = "0x40006A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D2BBC", Offset = "0x8D2BBC")]
			private bool <initiated>k__BackingField;

			[Token(Token = "0x40006A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D2BCC", Offset = "0x8D2BCC")]
			private float <heightFromGround>k__BackingField;

			[Token(Token = "0x40006A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D2BDC", Offset = "0x8D2BDC")]
			private Vector3 <velocity>k__BackingField;

			[Token(Token = "0x40006A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D2BEC", Offset = "0x8D2BEC")]
			private Transform <transform>k__BackingField;

			[Token(Token = "0x40006A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D2BFC", Offset = "0x8D2BFC")]
			private float <IKOffset>k__BackingField;

			[Token(Token = "0x40006A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public bool invertFootCenter;

			[Token(Token = "0x40006A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D2C0C", Offset = "0x8D2C0C")]
			private RaycastHit <heelHit>k__BackingField;

			[Token(Token = "0x40006AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D2C1C", Offset = "0x8D2C1C")]
			private RaycastHit <capsuleHit>k__BackingField;

			[Token(Token = "0x40006AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			private Grounding grounding;

			[Token(Token = "0x40006AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			private float lastTime;

			[Token(Token = "0x40006AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
			private float deltaTime;

			[Token(Token = "0x40006AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			private Vector3 lastPosition;

			[Token(Token = "0x40006AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
			private Quaternion toHitNormal;

			[Token(Token = "0x40006B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
			private Quaternion r;

			[Token(Token = "0x40006B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
			private Vector3 up;

			[Token(Token = "0x40006B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
			private bool doOverrideFootPosition;

			[Token(Token = "0x40006B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
			private Vector3 overrideFootPosition;

			[Token(Token = "0x40006B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
			private Vector3 transformPosition;

			[Token(Token = "0x170000A3")]
			public bool isGrounded
			{
				[Token(Token = "0x60006EC")]
				[Address(RVA = "0xC186E4", Offset = "0xC186E4", VA = "0xC186E4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DE45C", Offset = "0x8DE45C")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x60006ED")]
				[Address(RVA = "0xC186EC", Offset = "0xC186EC", VA = "0xC186EC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DE46C", Offset = "0x8DE46C")]
				private set
				{
				}
			}

			[Token(Token = "0x170000A4")]
			public Vector3 IKPosition
			{
				[Token(Token = "0x60006EE")]
				[Address(RVA = "0xC186F8", Offset = "0xC186F8", VA = "0xC186F8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DE47C", Offset = "0x8DE47C")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x60006EF")]
				[Address(RVA = "0xC18704", Offset = "0xC18704", VA = "0xC18704")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DE48C", Offset = "0x8DE48C")]
				private set
				{
				}
			}

			[Token(Token = "0x170000A5")]
			public bool initiated
			{
				[Token(Token = "0x60006F0")]
				[Address(RVA = "0xC18710", Offset = "0xC18710", VA = "0xC18710")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DE49C", Offset = "0x8DE49C")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x60006F1")]
				[Address(RVA = "0xC18718", Offset = "0xC18718", VA = "0xC18718")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DE4AC", Offset = "0x8DE4AC")]
				private set
				{
				}
			}

			[Token(Token = "0x170000A6")]
			public float heightFromGround
			{
				[Token(Token = "0x60006F2")]
				[Address(RVA = "0xC18724", Offset = "0xC18724", VA = "0xC18724")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DE4BC", Offset = "0x8DE4BC")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x60006F3")]
				[Address(RVA = "0xC1872C", Offset = "0xC1872C", VA = "0xC1872C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DE4CC", Offset = "0x8DE4CC")]
				private set
				{
				}
			}

			[Token(Token = "0x170000A7")]
			public Vector3 velocity
			{
				[Token(Token = "0x60006F4")]
				[Address(RVA = "0xC18734", Offset = "0xC18734", VA = "0xC18734")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DE4DC", Offset = "0x8DE4DC")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x60006F5")]
				[Address(RVA = "0xC18740", Offset = "0xC18740", VA = "0xC18740")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DE4EC", Offset = "0x8DE4EC")]
				private set
				{
				}
			}

			[Token(Token = "0x170000A8")]
			public Transform transform
			{
				[Token(Token = "0x60006F6")]
				[Address(RVA = "0xC1874C", Offset = "0xC1874C", VA = "0xC1874C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DE4FC", Offset = "0x8DE4FC")]
				get
				{
					return null;
				}
				[Token(Token = "0x60006F7")]
				[Address(RVA = "0xC18754", Offset = "0xC18754", VA = "0xC18754")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DE50C", Offset = "0x8DE50C")]
				private set
				{
				}
			}

			[Token(Token = "0x170000A9")]
			public float IKOffset
			{
				[Token(Token = "0x60006F8")]
				[Address(RVA = "0xC1875C", Offset = "0xC1875C", VA = "0xC1875C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DE51C", Offset = "0x8DE51C")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x60006F9")]
				[Address(RVA = "0xC18764", Offset = "0xC18764", VA = "0xC18764")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DE52C", Offset = "0x8DE52C")]
				private set
				{
				}
			}

			[Token(Token = "0x170000AA")]
			public RaycastHit heelHit
			{
				[Token(Token = "0x60006FA")]
				[Address(RVA = "0xC1876C", Offset = "0xC1876C", VA = "0xC1876C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DE53C", Offset = "0x8DE53C")]
				get
				{
					return default(RaycastHit);
				}
				[Token(Token = "0x60006FB")]
				[Address(RVA = "0xC18784", Offset = "0xC18784", VA = "0xC18784")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DE54C", Offset = "0x8DE54C")]
				private set
				{
				}
			}

			[Token(Token = "0x170000AB")]
			public RaycastHit capsuleHit
			{
				[Token(Token = "0x60006FC")]
				[Address(RVA = "0xC187A4", Offset = "0xC187A4", VA = "0xC187A4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DE55C", Offset = "0x8DE55C")]
				get
				{
					return default(RaycastHit);
				}
				[Token(Token = "0x60006FD")]
				[Address(RVA = "0xC187BC", Offset = "0xC187BC", VA = "0xC187BC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DE56C", Offset = "0x8DE56C")]
				private set
				{
				}
			}

			[Token(Token = "0x170000AC")]
			public RaycastHit GetHitPoint
			{
				[Token(Token = "0x60006FE")]
				[Address(RVA = "0xC187DC", Offset = "0xC187DC", VA = "0xC187DC")]
				get
				{
					return default(RaycastHit);
				}
			}

			[Token(Token = "0x170000AD")]
			public float stepHeightFromGround
			{
				[Token(Token = "0x6000704")]
				[Address(RVA = "0xC197D4", Offset = "0xC197D4", VA = "0xC197D4")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x170000AE")]
			private float rootYOffset
			{
				[Token(Token = "0x600070D")]
				[Address(RVA = "0xC19938", Offset = "0xC19938", VA = "0xC19938")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x60006FF")]
			[Address(RVA = "0xC18824", Offset = "0xC18824", VA = "0xC18824")]
			public void SetFootPosition(Vector3 position)
			{
			}

			[Token(Token = "0x6000700")]
			[Address(RVA = "0xC18838", Offset = "0xC18838", VA = "0xC18838")]
			public void Initiate(Grounding grounding, Transform transform)
			{
			}

			[Token(Token = "0x6000701")]
			[Address(RVA = "0xC188AC", Offset = "0xC188AC", VA = "0xC188AC")]
			public void OnEnable()
			{
			}

			[Token(Token = "0x6000702")]
			[Address(RVA = "0xC188F8", Offset = "0xC188F8", VA = "0xC188F8")]
			public void Reset()
			{
			}

			[Token(Token = "0x6000703")]
			[Address(RVA = "0xC18968", Offset = "0xC18968", VA = "0xC18968")]
			public void Process()
			{
			}

			[Token(Token = "0x6000705")]
			[Address(RVA = "0xC1944C", Offset = "0xC1944C", VA = "0xC1944C")]
			private RaycastHit GetCapsuleHit(Vector3 offsetFromHeel)
			{
				return default(RaycastHit);
			}

			[Token(Token = "0x6000706")]
			[Address(RVA = "0xC18FF0", Offset = "0xC18FF0", VA = "0xC18FF0")]
			private RaycastHit GetRaycastHit(Vector3 offsetFromHeel)
			{
				return default(RaycastHit);
			}

			[Token(Token = "0x6000707")]
			[Address(RVA = "0xC19868", Offset = "0xC19868", VA = "0xC19868")]
			private Vector3 RotateNormal(Vector3 normal)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6000708")]
			[Address(RVA = "0xC1928C", Offset = "0xC1928C", VA = "0xC1928C")]
			private void SetFootToPoint(Vector3 normal, Vector3 point)
			{
			}

			[Token(Token = "0x6000709")]
			[Address(RVA = "0xC19318", Offset = "0xC19318", VA = "0xC19318")]
			private void SetFootToPlane(Vector3 planeNormal, Vector3 planePoint, Vector3 heelHitPoint)
			{
			}

			[Token(Token = "0x600070A")]
			[Address(RVA = "0xC198D8", Offset = "0xC198D8", VA = "0xC198D8")]
			private float GetHeightFromGround(Vector3 hitPoint)
			{
				return default(float);
			}

			[Token(Token = "0x600070B")]
			[Address(RVA = "0xC197FC", Offset = "0xC197FC", VA = "0xC197FC")]
			private void RotateFoot()
			{
			}

			[Token(Token = "0x600070C")]
			[Address(RVA = "0xC199CC", Offset = "0xC199CC", VA = "0xC199CC")]
			private Quaternion GetRotationOffsetTarget()
			{
				return default(Quaternion);
			}

			[Token(Token = "0x600070E")]
			[Address(RVA = "0xC19A58", Offset = "0xC19A58", VA = "0xC19A58")]
			public Leg()
			{
			}
		}

		[Token(Token = "0x20000E8")]
		public class Pelvis
		{
			[Token(Token = "0x40006B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D2C2C", Offset = "0x8D2C2C")]
			private Vector3 <IKOffset>k__BackingField;

			[Token(Token = "0x40006B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D2C3C", Offset = "0x8D2C3C")]
			private float <heightOffset>k__BackingField;

			[Token(Token = "0x40006B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Grounding grounding;

			[Token(Token = "0x40006B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 lastRootPosition;

			[Token(Token = "0x40006B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float damperF;

			[Token(Token = "0x40006BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private bool initiated;

			[Token(Token = "0x40006BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float lastTime;

			[Token(Token = "0x170000AF")]
			public Vector3 IKOffset
			{
				[Token(Token = "0x600070F")]
				[Address(RVA = "0xC19A9C", Offset = "0xC19A9C", VA = "0xC19A9C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DE57C", Offset = "0x8DE57C")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6000710")]
				[Address(RVA = "0xC19AA8", Offset = "0xC19AA8", VA = "0xC19AA8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DE58C", Offset = "0x8DE58C")]
				private set
				{
				}
			}

			[Token(Token = "0x170000B0")]
			public float heightOffset
			{
				[Token(Token = "0x6000711")]
				[Address(RVA = "0xC19AB4", Offset = "0xC19AB4", VA = "0xC19AB4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DE59C", Offset = "0x8DE59C")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6000712")]
				[Address(RVA = "0xC19ABC", Offset = "0xC19ABC", VA = "0xC19ABC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DE5AC", Offset = "0x8DE5AC")]
				private set
				{
				}
			}

			[Token(Token = "0x6000713")]
			[Address(RVA = "0xC19AC4", Offset = "0xC19AC4", VA = "0xC19AC4")]
			public void Initiate(Grounding grounding)
			{
			}

			[Token(Token = "0x6000714")]
			[Address(RVA = "0xC19B34", Offset = "0xC19B34", VA = "0xC19B34")]
			public void Reset()
			{
			}

			[Token(Token = "0x6000715")]
			[Address(RVA = "0xC19AD4", Offset = "0xC19AD4", VA = "0xC19AD4")]
			public void OnEnable()
			{
			}

			[Token(Token = "0x6000716")]
			[Address(RVA = "0xC19BA0", Offset = "0xC19BA0", VA = "0xC19BA0")]
			public void Process(float lowestOffset, float highestOffset, bool isGrounded)
			{
			}

			[Token(Token = "0x6000717")]
			[Address(RVA = "0xC19D40", Offset = "0xC19D40", VA = "0xC19D40")]
			public Pelvis()
			{
			}
		}

		[Token(Token = "0x4000684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D26F0", Offset = "0x8D26F0")]
		public LayerMask layers;

		[Token(Token = "0x4000685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D2728", Offset = "0x8D2728")]
		public float maxStep;

		[Token(Token = "0x4000686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D2760", Offset = "0x8D2760")]
		public float heightOffset;

		[Token(Token = "0x4000687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D2798", Offset = "0x8D2798")]
		public float footSpeed;

		[Token(Token = "0x4000688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D27D0", Offset = "0x8D27D0")]
		public float footRadius;

		[Token(Token = "0x4000689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D2808", Offset = "0x8D2808")]
		[HideInInspector]
		public float footCenterOffset;

		[Token(Token = "0x400068A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D2854", Offset = "0x8D2854")]
		public float prediction;

		[Token(Token = "0x400068B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D288C", Offset = "0x8D288C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D288C", Offset = "0x8D288C")]
		public float footRotationWeight;

		[Token(Token = "0x400068C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D28E0", Offset = "0x8D28E0")]
		public float footRotationSpeed;

		[Token(Token = "0x400068D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D2918", Offset = "0x8D2918")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D2918", Offset = "0x8D2918")]
		public float maxFootRotationAngle;

		[Token(Token = "0x400068E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D2970", Offset = "0x8D2970")]
		public bool rotateSolver;

		[Token(Token = "0x400068F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D29A8", Offset = "0x8D29A8")]
		public float pelvisSpeed;

		[Token(Token = "0x4000690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D29E0", Offset = "0x8D29E0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D29E0", Offset = "0x8D29E0")]
		public float pelvisDamper;

		[Token(Token = "0x4000691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D2A34", Offset = "0x8D2A34")]
		public float lowerPelvisWeight;

		[Token(Token = "0x4000692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D2A6C", Offset = "0x8D2A6C")]
		public float liftPelvisWeight;

		[Token(Token = "0x4000693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D2AA4", Offset = "0x8D2AA4")]
		public float rootSphereCastRadius;

		[Token(Token = "0x4000694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D2ADC", Offset = "0x8D2ADC")]
		public bool overstepFallsDown;

		[Token(Token = "0x4000695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D2B14", Offset = "0x8D2B14")]
		public Quality quality;

		[Token(Token = "0x4000696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D2B4C", Offset = "0x8D2B4C")]
		private Leg[] <legs>k__BackingField;

		[Token(Token = "0x4000697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D2B5C", Offset = "0x8D2B5C")]
		private Pelvis <pelvis>k__BackingField;

		[Token(Token = "0x4000698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D2B6C", Offset = "0x8D2B6C")]
		private bool <isGrounded>k__BackingField;

		[Token(Token = "0x4000699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D2B7C", Offset = "0x8D2B7C")]
		private Transform <root>k__BackingField;

		[Token(Token = "0x400069A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D2B8C", Offset = "0x8D2B8C")]
		private RaycastHit <rootHit>k__BackingField;

		[Token(Token = "0x400069B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool initiated;

		[Token(Token = "0x1700009B")]
		public Leg[] legs
		{
			[Token(Token = "0x60006D4")]
			[Address(RVA = "0x1563DC8", Offset = "0x1563DC8", VA = "0x1563DC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DE3BC", Offset = "0x8DE3BC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60006D5")]
			[Address(RVA = "0x1563DD0", Offset = "0x1563DD0", VA = "0x1563DD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DE3CC", Offset = "0x8DE3CC")]
			private set
			{
			}
		}

		[Token(Token = "0x1700009C")]
		public Pelvis pelvis
		{
			[Token(Token = "0x60006D6")]
			[Address(RVA = "0x1563DD8", Offset = "0x1563DD8", VA = "0x1563DD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DE3DC", Offset = "0x8DE3DC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60006D7")]
			[Address(RVA = "0x1563DE0", Offset = "0x1563DE0", VA = "0x1563DE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DE3EC", Offset = "0x8DE3EC")]
			private set
			{
			}
		}

		[Token(Token = "0x1700009D")]
		public bool isGrounded
		{
			[Token(Token = "0x60006D8")]
			[Address(RVA = "0x1563DE8", Offset = "0x1563DE8", VA = "0x1563DE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DE3FC", Offset = "0x8DE3FC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60006D9")]
			[Address(RVA = "0x1563DF0", Offset = "0x1563DF0", VA = "0x1563DF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DE40C", Offset = "0x8DE40C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700009E")]
		public Transform root
		{
			[Token(Token = "0x60006DA")]
			[Address(RVA = "0x1563DFC", Offset = "0x1563DFC", VA = "0x1563DFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DE41C", Offset = "0x8DE41C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60006DB")]
			[Address(RVA = "0x1563E04", Offset = "0x1563E04", VA = "0x1563E04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DE42C", Offset = "0x8DE42C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700009F")]
		public RaycastHit rootHit
		{
			[Token(Token = "0x60006DC")]
			[Address(RVA = "0x1563E0C", Offset = "0x1563E0C", VA = "0x1563E0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DE43C", Offset = "0x8DE43C")]
			get
			{
				return default(RaycastHit);
			}
			[Token(Token = "0x60006DD")]
			[Address(RVA = "0x1563E24", Offset = "0x1563E24", VA = "0x1563E24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DE44C", Offset = "0x8DE44C")]
			private set
			{
			}
		}

		[Token(Token = "0x170000A0")]
		public bool rootGrounded
		{
			[Token(Token = "0x60006DE")]
			[Address(RVA = "0x1563E44", Offset = "0x1563E44", VA = "0x1563E44")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000A1")]
		public Vector3 up
		{
			[Token(Token = "0x60006E6")]
			[Address(RVA = "0x15640E4", Offset = "0x15640E4", VA = "0x15640E4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170000A2")]
		private bool useRootRotation
		{
			[Token(Token = "0x60006E9")]
			[Address(RVA = "0x15643A8", Offset = "0x15643A8", VA = "0x15643A8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60006DF")]
		[Address(RVA = "0x1563E98", Offset = "0x1563E98", VA = "0x1563E98")]
		public RaycastHit GetRootHit(float maxDistanceMlp = 10f)
		{
			return default(RaycastHit);
		}

		[Token(Token = "0x60006E0")]
		[Address(RVA = "0x1564128", Offset = "0x1564128", VA = "0x1564128")]
		public bool IsValid(ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x60006E1")]
		[Address(RVA = "0x1563188", Offset = "0x1563188", VA = "0x1563188")]
		public void Initiate(Transform root, Transform[] feet)
		{
		}

		[Token(Token = "0x60006E2")]
		[Address(RVA = "0x1563600", Offset = "0x1563600", VA = "0x1563600")]
		public void Update()
		{
		}

		[Token(Token = "0x60006E3")]
		[Address(RVA = "0x1564248", Offset = "0x1564248", VA = "0x1564248")]
		public Vector3 GetLegsPlaneNormal()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60006E4")]
		[Address(RVA = "0x1562DE8", Offset = "0x1562DE8", VA = "0x1562DE8")]
		public void Reset()
		{
		}

		[Token(Token = "0x60006E5")]
		[Address(RVA = "0x1564230", Offset = "0x1564230", VA = "0x1564230")]
		public void LogWarning(string message)
		{
		}

		[Token(Token = "0x60006E7")]
		[Address(RVA = "0x1564428", Offset = "0x1564428", VA = "0x1564428")]
		public float GetVerticalOffset(Vector3 p1, Vector3 p2)
		{
			return default(float);
		}

		[Token(Token = "0x60006E8")]
		[Address(RVA = "0x15644B8", Offset = "0x15644B8", VA = "0x15644B8")]
		public Vector3 Flatten(Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60006EA")]
		[Address(RVA = "0x1564574", Offset = "0x1564574", VA = "0x1564574")]
		public Vector3 GetFootCenterOffset()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60006EB")]
		[Address(RVA = "0x15645F0", Offset = "0x15645F0", VA = "0x15645F0")]
		public Grounding()
		{
		}
	}
	[Token(Token = "0x20000E9")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8CB968", Offset = "0x8CB968")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x8CB968", Offset = "0x8CB968")]
	public class AimIK : IK
	{
		[Token(Token = "0x40006BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverAim solver;

		[Token(Token = "0x6000718")]
		[Address(RVA = "0xD660C0", Offset = "0xD660C0", VA = "0xD660C0", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DE5BC", Offset = "0x8DE5BC")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6000719")]
		[Address(RVA = "0xD66108", Offset = "0xD66108", VA = "0xD66108", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DE5F4", Offset = "0x8DE5F4")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x600071A")]
		[Address(RVA = "0xD66150", Offset = "0xD66150", VA = "0xD66150")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DE62C", Offset = "0x8DE62C")]
		private void OpenSetupTutorial()
		{
		}

		[Token(Token = "0x600071B")]
		[Address(RVA = "0xD66198", Offset = "0xD66198", VA = "0xD66198")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DE664", Offset = "0x8DE664")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x600071C")]
		[Address(RVA = "0xD661E0", Offset = "0xD661E0", VA = "0xD661E0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DE69C", Offset = "0x8DE69C")]
		private void ASThread()
		{
		}

		[Token(Token = "0x600071D")]
		[Address(RVA = "0xD66228", Offset = "0xD66228", VA = "0xD66228", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x600071E")]
		[Address(RVA = "0xD66230", Offset = "0xD66230", VA = "0xD66230")]
		public AimIK()
		{
		}
	}
	[Token(Token = "0x20000EA")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8CB9C8", Offset = "0x8CB9C8")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x8CB9C8", Offset = "0x8CB9C8")]
	public class ArmIK : IK
	{
		[Token(Token = "0x40006BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverArm solver;

		[Token(Token = "0x600071F")]
		[Address(RVA = "0xD6DCEC", Offset = "0xD6DCEC", VA = "0xD6DCEC", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DE6D4", Offset = "0x8DE6D4")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6000720")]
		[Address(RVA = "0xD6DD34", Offset = "0xD6DD34", VA = "0xD6DD34", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DE70C", Offset = "0x8DE70C")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000721")]
		[Address(RVA = "0xD6DD7C", Offset = "0xD6DD7C", VA = "0xD6DD7C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DE744", Offset = "0x8DE744")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000722")]
		[Address(RVA = "0xD6DDC4", Offset = "0xD6DDC4", VA = "0xD6DDC4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DE77C", Offset = "0x8DE77C")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000723")]
		[Address(RVA = "0xD6DE0C", Offset = "0xD6DE0C", VA = "0xD6DE0C", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x6000724")]
		[Address(RVA = "0xD6DE14", Offset = "0xD6DE14", VA = "0xD6DE14")]
		public ArmIK()
		{
		}
	}
	[Token(Token = "0x20000EB")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8CBA28", Offset = "0x8CBA28")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x8CBA28", Offset = "0x8CBA28")]
	public class CCDIK : IK
	{
		[Token(Token = "0x40006BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverCCD solver;

		[Token(Token = "0x6000725")]
		[Address(RVA = "0x107652C", Offset = "0x107652C", VA = "0x107652C", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DE7B4", Offset = "0x8DE7B4")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6000726")]
		[Address(RVA = "0x1076574", Offset = "0x1076574", VA = "0x1076574", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DE7EC", Offset = "0x8DE7EC")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000727")]
		[Address(RVA = "0x10765BC", Offset = "0x10765BC", VA = "0x10765BC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DE824", Offset = "0x8DE824")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000728")]
		[Address(RVA = "0x1076604", Offset = "0x1076604", VA = "0x1076604")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DE85C", Offset = "0x8DE85C")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000729")]
		[Address(RVA = "0x107664C", Offset = "0x107664C", VA = "0x107664C", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x600072A")]
		[Address(RVA = "0x1076654", Offset = "0x1076654", VA = "0x1076654")]
		public CCDIK()
		{
		}
	}
	[Token(Token = "0x20000EC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8CBA88", Offset = "0x8CBA88")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x8CBA88", Offset = "0x8CBA88")]
	public class FABRIK : IK
	{
		[Token(Token = "0x40006BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverFABRIK solver;

		[Token(Token = "0x600072B")]
		[Address(RVA = "0x152B5BC", Offset = "0x152B5BC", VA = "0x152B5BC", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DE894", Offset = "0x8DE894")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x600072C")]
		[Address(RVA = "0x152B604", Offset = "0x152B604", VA = "0x152B604", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DE8CC", Offset = "0x8DE8CC")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x600072D")]
		[Address(RVA = "0x152B64C", Offset = "0x152B64C", VA = "0x152B64C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DE904", Offset = "0x8DE904")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x600072E")]
		[Address(RVA = "0x152B694", Offset = "0x152B694", VA = "0x152B694")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DE93C", Offset = "0x8DE93C")]
		private void ASThread()
		{
		}

		[Token(Token = "0x600072F")]
		[Address(RVA = "0x152B6DC", Offset = "0x152B6DC", VA = "0x152B6DC", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x6000730")]
		[Address(RVA = "0x152B6E4", Offset = "0x152B6E4", VA = "0x152B6E4")]
		public FABRIK()
		{
		}
	}
	[Token(Token = "0x20000ED")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x8CBAE8", Offset = "0x8CBAE8")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8CBAE8", Offset = "0x8CBAE8")]
	public class FABRIKRoot : IK
	{
		[Token(Token = "0x40006C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverFABRIKRoot solver;

		[Token(Token = "0x6000731")]
		[Address(RVA = "0x152BC08", Offset = "0x152BC08", VA = "0x152BC08", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DE974", Offset = "0x8DE974")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6000732")]
		[Address(RVA = "0x152BC50", Offset = "0x152BC50", VA = "0x152BC50", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DE9AC", Offset = "0x8DE9AC")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000733")]
		[Address(RVA = "0x152BC98", Offset = "0x152BC98", VA = "0x152BC98")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DE9E4", Offset = "0x8DE9E4")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000734")]
		[Address(RVA = "0x152BCE0", Offset = "0x152BCE0", VA = "0x152BCE0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DEA1C", Offset = "0x8DEA1C")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000735")]
		[Address(RVA = "0x152BD28", Offset = "0x152BD28", VA = "0x152BD28", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x6000736")]
		[Address(RVA = "0x152BD30", Offset = "0x152BD30", VA = "0x152BD30")]
		public FABRIKRoot()
		{
		}
	}
	[Token(Token = "0x20000EE")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x8CBB48", Offset = "0x8CBB48")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8CBB48", Offset = "0x8CBB48")]
	public class FullBodyBipedIK : IK
	{
		[Token(Token = "0x40006C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public BipedReferences references;

		[Token(Token = "0x40006C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public IKSolverFullBodyBiped solver;

		[Token(Token = "0x6000737")]
		[Address(RVA = "0x1535EC8", Offset = "0x1535EC8", VA = "0x1535EC8", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DEA54", Offset = "0x8DEA54")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6000738")]
		[Address(RVA = "0x1535F10", Offset = "0x1535F10", VA = "0x1535F10", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DEA8C", Offset = "0x8DEA8C")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000739")]
		[Address(RVA = "0x1535F58", Offset = "0x1535F58", VA = "0x1535F58")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DEAC4", Offset = "0x8DEAC4")]
		private void OpenSetupTutorial()
		{
		}

		[Token(Token = "0x600073A")]
		[Address(RVA = "0x1535FA0", Offset = "0x1535FA0", VA = "0x1535FA0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DEAFC", Offset = "0x8DEAFC")]
		private void OpenInspectorTutorial()
		{
		}

		[Token(Token = "0x600073B")]
		[Address(RVA = "0x1535FE8", Offset = "0x1535FE8", VA = "0x1535FE8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DEB34", Offset = "0x8DEB34")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x600073C")]
		[Address(RVA = "0x1536030", Offset = "0x1536030", VA = "0x1536030")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DEB6C", Offset = "0x8DEB6C")]
		private void ASThread()
		{
		}

		[Token(Token = "0x600073D")]
		[Address(RVA = "0x1536078", Offset = "0x1536078", VA = "0x1536078")]
		public void SetReferences(BipedReferences references, Transform rootNode)
		{
		}

		[Token(Token = "0x600073E")]
		[Address(RVA = "0x153609C", Offset = "0x153609C", VA = "0x153609C", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x600073F")]
		[Address(RVA = "0x15360A4", Offset = "0x15360A4", VA = "0x15360A4")]
		public bool ReferencesError(ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000740")]
		[Address(RVA = "0x1536280", Offset = "0x1536280", VA = "0x1536280")]
		public bool ReferencesWarning(ref string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000741")]
		[Address(RVA = "0x1536514", Offset = "0x1536514", VA = "0x1536514")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DEBA4", Offset = "0x8DEBA4")]
		private void Reinitiate()
		{
		}

		[Token(Token = "0x6000742")]
		[Address(RVA = "0x1536534", Offset = "0x1536534", VA = "0x1536534")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DEBDC", Offset = "0x8DEBDC")]
		private void AutoDetectReferences()
		{
		}

		[Token(Token = "0x6000743")]
		[Address(RVA = "0x153660C", Offset = "0x153660C", VA = "0x153660C")]
		public FullBodyBipedIK()
		{
		}
	}
	[Token(Token = "0x20000EF")]
	public abstract class IK : SolverManager
	{
		[Token(Token = "0x6000744")]
		public abstract IKSolver GetIKSolver();

		[Token(Token = "0x6000745")]
		[Address(RVA = "0x156DCF8", Offset = "0x156DCF8", VA = "0x156DCF8", Slot = "5")]
		protected override void UpdateSolver()
		{
		}

		[Token(Token = "0x6000746")]
		[Address(RVA = "0x156DDEC", Offset = "0x156DDEC", VA = "0x156DDEC", Slot = "4")]
		protected override void InitiateSolver()
		{
		}

		[Token(Token = "0x6000747")]
		[Address(RVA = "0x156DFD0", Offset = "0x156DFD0", VA = "0x156DFD0", Slot = "6")]
		protected override void FixTransforms()
		{
		}

		[Token(Token = "0x6000748")]
		protected abstract void OpenUserManual();

		[Token(Token = "0x6000749")]
		protected abstract void OpenScriptReference();

		[Token(Token = "0x600074A")]
		[Address(RVA = "0x156E030", Offset = "0x156E030", VA = "0x156E030")]
		protected IK()
		{
		}
	}
	[Token(Token = "0x20000F0")]
	public class IKExecutionOrder : MonoBehaviour
	{
		[Token(Token = "0x40006C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D2C4C", Offset = "0x8D2C4C")]
		public IK[] IKComponents;

		[Token(Token = "0x40006C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D2C84", Offset = "0x8D2C84")]
		public Animator animator;

		[Token(Token = "0x40006C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool fixedFrame;

		[Token(Token = "0x170000B1")]
		private bool animatePhysics
		{
			[Token(Token = "0x600074B")]
			[Address(RVA = "0x1570554", Offset = "0x1570554", VA = "0x1570554")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600074C")]
		[Address(RVA = "0x15705EC", Offset = "0x15705EC", VA = "0x15705EC")]
		private void Start()
		{
		}

		[Token(Token = "0x600074D")]
		[Address(RVA = "0x157065C", Offset = "0x157065C", VA = "0x157065C")]
		private void Update()
		{
		}

		[Token(Token = "0x600074E")]
		[Address(RVA = "0x1570718", Offset = "0x1570718", VA = "0x1570718")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600074F")]
		[Address(RVA = "0x1570754", Offset = "0x1570754", VA = "0x1570754")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000750")]
		[Address(RVA = "0x1570690", Offset = "0x1570690", VA = "0x1570690")]
		private void FixTransforms()
		{
		}

		[Token(Token = "0x6000751")]
		[Address(RVA = "0x15707E0", Offset = "0x15707E0", VA = "0x15707E0")]
		public IKExecutionOrder()
		{
		}
	}
	[Token(Token = "0x20000F1")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x8CBBA8", Offset = "0x8CBBA8")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8CBBA8", Offset = "0x8CBBA8")]
	public class LegIK : IK
	{
		[Token(Token = "0x40006C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverLeg solver;

		[Token(Token = "0x6000752")]
		[Address(RVA = "0xB15DE8", Offset = "0xB15DE8", VA = "0xB15DE8", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DEC14", Offset = "0x8DEC14")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6000753")]
		[Address(RVA = "0xB15E30", Offset = "0xB15E30", VA = "0xB15E30", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DEC4C", Offset = "0x8DEC4C")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000754")]
		[Address(RVA = "0xB15E78", Offset = "0xB15E78", VA = "0xB15E78")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DEC84", Offset = "0x8DEC84")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000755")]
		[Address(RVA = "0xB15EC0", Offset = "0xB15EC0", VA = "0xB15EC0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DECBC", Offset = "0x8DECBC")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000756")]
		[Address(RVA = "0xB15F08", Offset = "0xB15F08", VA = "0xB15F08", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x6000757")]
		[Address(RVA = "0xB15F10", Offset = "0xB15F10", VA = "0xB15F10")]
		public LegIK()
		{
		}
	}
	[Token(Token = "0x20000F2")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8CBC08", Offset = "0x8CBC08")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x8CBC08", Offset = "0x8CBC08")]
	public class LimbIK : IK
	{
		[Token(Token = "0x40006C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverLimb solver;

		[Token(Token = "0x6000758")]
		[Address(RVA = "0xB15F74", Offset = "0xB15F74", VA = "0xB15F74", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DECF4", Offset = "0x8DECF4")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6000759")]
		[Address(RVA = "0xB15FBC", Offset = "0xB15FBC", VA = "0xB15FBC", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DED2C", Offset = "0x8DED2C")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x600075A")]
		[Address(RVA = "0xB16004", Offset = "0xB16004", VA = "0xB16004")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DED64", Offset = "0x8DED64")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x600075B")]
		[Address(RVA = "0xB1604C", Offset = "0xB1604C", VA = "0xB1604C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DED9C", Offset = "0x8DED9C")]
		private void ASThread()
		{
		}

		[Token(Token = "0x600075C")]
		[Address(RVA = "0xB16094", Offset = "0xB16094", VA = "0xB16094", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x600075D")]
		[Address(RVA = "0xB1609C", Offset = "0xB1609C", VA = "0xB1609C")]
		public LimbIK()
		{
		}
	}
	[Token(Token = "0x20000F3")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x8CBC68", Offset = "0x8CBC68")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8CBC68", Offset = "0x8CBC68")]
	public class LookAtIK : IK
	{
		[Token(Token = "0x40006C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverLookAt solver;

		[Token(Token = "0x600075E")]
		[Address(RVA = "0xB17484", Offset = "0xB17484", VA = "0xB17484", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DEDD4", Offset = "0x8DEDD4")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x600075F")]
		[Address(RVA = "0xB174CC", Offset = "0xB174CC", VA = "0xB174CC", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DEE0C", Offset = "0x8DEE0C")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000760")]
		[Address(RVA = "0xB17514", Offset = "0xB17514", VA = "0xB17514")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DEE44", Offset = "0x8DEE44")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000761")]
		[Address(RVA = "0xB1755C", Offset = "0xB1755C", VA = "0xB1755C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DEE7C", Offset = "0x8DEE7C")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000762")]
		[Address(RVA = "0xB175A4", Offset = "0xB175A4", VA = "0xB175A4", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x6000763")]
		[Address(RVA = "0xB175AC", Offset = "0xB175AC", VA = "0xB175AC")]
		public LookAtIK()
		{
		}
	}
	[Token(Token = "0x20000F4")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x8CBCC8", Offset = "0x8CBCC8")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8CBCC8", Offset = "0x8CBCC8")]
	public class TrigonometricIK : IK
	{
		[Token(Token = "0x40006C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverTrigonometric solver;

		[Token(Token = "0x6000764")]
		[Address(RVA = "0x1147864", Offset = "0x1147864", VA = "0x1147864", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DEEB4", Offset = "0x8DEEB4")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6000765")]
		[Address(RVA = "0x11478AC", Offset = "0x11478AC", VA = "0x11478AC", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DEEEC", Offset = "0x8DEEEC")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000766")]
		[Address(RVA = "0x11478F4", Offset = "0x11478F4", VA = "0x11478F4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DEF24", Offset = "0x8DEF24")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000767")]
		[Address(RVA = "0x114793C", Offset = "0x114793C", VA = "0x114793C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DEF5C", Offset = "0x8DEF5C")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000768")]
		[Address(RVA = "0x1147984", Offset = "0x1147984", VA = "0x1147984", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x6000769")]
		[Address(RVA = "0x114798C", Offset = "0x114798C", VA = "0x114798C")]
		public TrigonometricIK()
		{
		}
	}
	[Token(Token = "0x20000F5")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8CBD28", Offset = "0x8CBD28")]
	public class VRIK : IK
	{
		[Serializable]
		[Token(Token = "0x20000F6")]
		public class References
		{
			[Token(Token = "0x40006CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform root;

			[Token(Token = "0x40006CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform pelvis;

			[Token(Token = "0x40006CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform spine;

			[Token(Token = "0x40006CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D2D68", Offset = "0x8D2D68")]
			public Transform chest;

			[Token(Token = "0x40006D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D2DA0", Offset = "0x8D2DA0")]
			public Transform neck;

			[Token(Token = "0x40006D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Transform head;

			[Token(Token = "0x40006D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D2DD8", Offset = "0x8D2DD8")]
			public Transform leftShoulder;

			[Token(Token = "0x40006D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Transform leftUpperArm;

			[Token(Token = "0x40006D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Transform leftForearm;

			[Token(Token = "0x40006D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public Transform leftHand;

			[Token(Token = "0x40006D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D2E10", Offset = "0x8D2E10")]
			public Transform rightShoulder;

			[Token(Token = "0x40006D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public Transform rightUpperArm;

			[Token(Token = "0x40006D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public Transform rightForearm;

			[Token(Token = "0x40006D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public Transform rightHand;

			[Token(Token = "0x40006DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D2E48", Offset = "0x8D2E48")]
			public Transform leftThigh;

			[Token(Token = "0x40006DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D2E80", Offset = "0x8D2E80")]
			public Transform leftCalf;

			[Token(Token = "0x40006DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D2EB8", Offset = "0x8D2EB8")]
			public Transform leftFoot;

			[Token(Token = "0x40006DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D2EF0", Offset = "0x8D2EF0")]
			public Transform leftToes;

			[Token(Token = "0x40006DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D2F28", Offset = "0x8D2F28")]
			public Transform rightThigh;

			[Token(Token = "0x40006DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D2F60", Offset = "0x8D2F60")]
			public Transform rightCalf;

			[Token(Token = "0x40006E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D2F98", Offset = "0x8D2F98")]
			public Transform rightFoot;

			[Token(Token = "0x40006E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D2FD0", Offset = "0x8D2FD0")]
			public Transform rightToes;

			[Token(Token = "0x170000B2")]
			public bool isFilled
			{
				[Token(Token = "0x6000774")]
				[Address(RVA = "0x190C44C", Offset = "0x190C44C", VA = "0x190C44C")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170000B3")]
			public bool isEmpty
			{
				[Token(Token = "0x6000775")]
				[Address(RVA = "0x190C8C4", Offset = "0x190C8C4", VA = "0x190C8C4")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6000773")]
			[Address(RVA = "0x190C004", Offset = "0x190C004", VA = "0x190C004")]
			public Transform[] GetTransforms()
			{
				return null;
			}

			[Token(Token = "0x6000776")]
			[Address(RVA = "0x190CD3C", Offset = "0x190CD3C", VA = "0x190CD3C")]
			public static bool AutoDetectReferences(Transform root, out References references)
			{
				return default(bool);
			}

			[Token(Token = "0x6000777")]
			[Address(RVA = "0x190D0D8", Offset = "0x190D0D8", VA = "0x190D0D8")]
			public References()
			{
			}
		}

		[Token(Token = "0x40006CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D2CBC", Offset = "0x8D2CBC")]
		[AttributeAttribute(Name = "ContextMenuItemAttribute", RVA = "0x8D2CBC", Offset = "0x8D2CBC")]
		public References references;

		[Token(Token = "0x40006CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D2D30", Offset = "0x8D2D30")]
		public IKSolverVR solver;

		[Token(Token = "0x600076A")]
		[Address(RVA = "0xC0D21C", Offset = "0xC0D21C", VA = "0xC0D21C", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DEF94", Offset = "0x8DEF94")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x600076B")]
		[Address(RVA = "0xC0D264", Offset = "0xC0D264", VA = "0xC0D264", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DEFCC", Offset = "0x8DEFCC")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x600076C")]
		[Address(RVA = "0xC0D2AC", Offset = "0xC0D2AC", VA = "0xC0D2AC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DF004", Offset = "0x8DF004")]
		private void OpenSetupTutorial()
		{
		}

		[Token(Token = "0x600076D")]
		[Address(RVA = "0xC0D2F4", Offset = "0xC0D2F4", VA = "0xC0D2F4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DF03C", Offset = "0x8DF03C")]
		public void AutoDetectReferences()
		{
		}

		[Token(Token = "0x600076E")]
		[Address(RVA = "0xC0D320", Offset = "0xC0D320", VA = "0xC0D320")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DF074", Offset = "0x8DF074")]
		public void GuessHandOrientations()
		{
		}

		[Token(Token = "0x600076F")]
		[Address(RVA = "0xC0D348", Offset = "0xC0D348", VA = "0xC0D348", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x6000770")]
		[Address(RVA = "0xC0D350", Offset = "0xC0D350", VA = "0xC0D350", Slot = "4")]
		protected override void InitiateSolver()
		{
		}

		[Token(Token = "0x6000771")]
		[Address(RVA = "0xC0D3D0", Offset = "0xC0D3D0", VA = "0xC0D3D0", Slot = "5")]
		protected override void UpdateSolver()
		{
		}

		[Token(Token = "0x6000772")]
		[Address(RVA = "0xC0D53C", Offset = "0xC0D53C", VA = "0xC0D53C")]
		public VRIK()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000F7")]
	public class FABRIKChain
	{
		[Token(Token = "0x40006E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FABRIK ik;

		[Token(Token = "0x40006E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D3008", Offset = "0x8D3008")]
		public float pull;

		[Token(Token = "0x40006E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D3020", Offset = "0x8D3020")]
		public float pin;

		[Token(Token = "0x40006E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int[] children;

		[Token(Token = "0x6000778")]
		[Address(RVA = "0x152B748", Offset = "0x152B748", VA = "0x152B748")]
		public bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000779")]
		[Address(RVA = "0x152B818", Offset = "0x152B818", VA = "0x152B818")]
		public void Initiate()
		{
		}

		[Token(Token = "0x600077A")]
		[Address(RVA = "0x152B838", Offset = "0x152B838", VA = "0x152B838")]
		public void Stage1(FABRIKChain[] chain)
		{
		}

		[Token(Token = "0x600077B")]
		[Address(RVA = "0x152BAAC", Offset = "0x152BAAC", VA = "0x152BAAC")]
		public void Stage2(Vector3 rootPosition, FABRIKChain[] chain)
		{
		}

		[Token(Token = "0x600077C")]
		[Address(RVA = "0x152B90C", Offset = "0x152B90C", VA = "0x152B90C")]
		private Vector3 GetCentroid(FABRIKChain[] chain)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600077D")]
		[Address(RVA = "0x152BBA4", Offset = "0x152BBA4", VA = "0x152BBA4")]
		public FABRIKChain()
		{
		}
	}
	[Token(Token = "0x20000F8")]
	public class FBBIKArmBending : MonoBehaviour
	{
		[Token(Token = "0x40006E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FullBodyBipedIK ik;

		[Token(Token = "0x40006E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 bendDirectionOffsetLeft;

		[Token(Token = "0x40006E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 bendDirectionOffsetRight;

		[Token(Token = "0x40006E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 characterSpaceBendOffsetLeft;

		[Token(Token = "0x40006EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Vector3 characterSpaceBendOffsetRight;

		[Token(Token = "0x40006EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion leftHandTargetRotation;

		[Token(Token = "0x40006EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Quaternion rightHandTargetRotation;

		[Token(Token = "0x40006ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool initiated;

		[Token(Token = "0x600077E")]
		[Address(RVA = "0x152BD94", Offset = "0x152BD94", VA = "0x152BD94")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600077F")]
		[Address(RVA = "0x152C1F8", Offset = "0x152C1F8", VA = "0x152C1F8")]
		private void OnPostFBBIK()
		{
		}

		[Token(Token = "0x6000780")]
		[Address(RVA = "0x152C3B4", Offset = "0x152C3B4", VA = "0x152C3B4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000781")]
		[Address(RVA = "0x152C4C0", Offset = "0x152C4C0", VA = "0x152C4C0")]
		public FBBIKArmBending()
		{
		}
	}
	[Token(Token = "0x20000F9")]
	public class FBBIKHeadEffector : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20000FA")]
		public class BendBone
		{
			[Token(Token = "0x400071C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D3678", Offset = "0x8D3678")]
			public Transform transform;

			[Token(Token = "0x400071D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D36B0", Offset = "0x8D36B0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D36B0", Offset = "0x8D36B0")]
			public float weight;

			[Token(Token = "0x400071E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private Quaternion defaultLocalRotation;

			[Token(Token = "0x6000790")]
			[Address(RVA = "0xC17B10", Offset = "0xC17B10", VA = "0xC17B10")]
			public BendBone()
			{
			}

			[Token(Token = "0x6000791")]
			[Address(RVA = "0xC17B4C", Offset = "0xC17B4C", VA = "0xC17B4C")]
			public BendBone(Transform transform, float weight)
			{
			}

			[Token(Token = "0x6000792")]
			[Address(RVA = "0xC17BA4", Offset = "0xC17BA4", VA = "0xC17BA4")]
			public void StoreDefaultLocalState()
			{
			}

			[Token(Token = "0x6000793")]
			[Address(RVA = "0xC17BDC", Offset = "0xC17BDC", VA = "0xC17BDC")]
			public void FixTransforms()
			{
			}
		}

		[Token(Token = "0x40006EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D3038", Offset = "0x8D3038")]
		public FullBodyBipedIK ik;

		[Token(Token = "0x40006EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D3070", Offset = "0x8D3070")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D3070", Offset = "0x8D3070")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x8D3070", Offset = "0x8D3070")]
		public float positionWeight;

		[Token(Token = "0x40006F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D30E8", Offset = "0x8D30E8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D30E8", Offset = "0x8D30E8")]
		public float bodyWeight;

		[Token(Token = "0x40006F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D313C", Offset = "0x8D313C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D313C", Offset = "0x8D313C")]
		public float thighWeight;

		[Token(Token = "0x40006F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D3190", Offset = "0x8D3190")]
		public bool handsPullBody;

		[Token(Token = "0x40006F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x8D31C8", Offset = "0x8D31C8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D31C8", Offset = "0x8D31C8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D31C8", Offset = "0x8D31C8")]
		public float rotationWeight;

		[Token(Token = "0x40006F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D3240", Offset = "0x8D3240")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D3240", Offset = "0x8D3240")]
		public float bodyClampWeight;

		[Token(Token = "0x40006F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D3294", Offset = "0x8D3294")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D3294", Offset = "0x8D3294")]
		public float headClampWeight;

		[Token(Token = "0x40006F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D32E8", Offset = "0x8D32E8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D32E8", Offset = "0x8D32E8")]
		public float bendWeight;

		[Token(Token = "0x40006F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D333C", Offset = "0x8D333C")]
		public BendBone[] bendBones;

		[Token(Token = "0x40006F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D3374", Offset = "0x8D3374")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D3374", Offset = "0x8D3374")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x8D3374", Offset = "0x8D3374")]
		public float CCDWeight;

		[Token(Token = "0x40006F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D33EC", Offset = "0x8D33EC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D33EC", Offset = "0x8D33EC")]
		public float roll;

		[Token(Token = "0x40006FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D3440", Offset = "0x8D3440")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D3440", Offset = "0x8D3440")]
		public float damper;

		[Token(Token = "0x40006FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D3498", Offset = "0x8D3498")]
		public Transform[] CCDBones;

		[Token(Token = "0x40006FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x8D34D0", Offset = "0x8D34D0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D34D0", Offset = "0x8D34D0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D34D0", Offset = "0x8D34D0")]
		public float postStretchWeight;

		[Token(Token = "0x40006FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D3548", Offset = "0x8D3548")]
		public float maxStretch;

		[Token(Token = "0x40006FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D3580", Offset = "0x8D3580")]
		public float stretchDamper;

		[Token(Token = "0x40006FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D35B8", Offset = "0x8D35B8")]
		public bool fixHead;

		[Token(Token = "0x4000700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D35F0", Offset = "0x8D35F0")]
		public Transform[] stretchBones;

		[Token(Token = "0x4000701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x8D3628", Offset = "0x8D3628")]
		public Vector3 chestDirection;

		[Token(Token = "0x4000702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D3660", Offset = "0x8D3660")]
		public float chestDirectionWeight;

		[Token(Token = "0x4000703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Transform[] chestBones;

		[Token(Token = "0x4000704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public IKSolver.UpdateDelegate OnPostHeadEffectorFK;

		[Token(Token = "0x4000705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 offset;

		[Token(Token = "0x4000706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private Vector3 headToBody;

		[Token(Token = "0x4000707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector3 shoulderCenterToHead;

		[Token(Token = "0x4000708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private Vector3 headToLeftThigh;

		[Token(Token = "0x4000709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Vector3 headToRightThigh;

		[Token(Token = "0x400070A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private Vector3 leftShoulderPos;

		[Token(Token = "0x400070B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Vector3 rightShoulderPos;

		[Token(Token = "0x400070C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float shoulderDist;

		[Token(Token = "0x400070D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private float leftShoulderDist;

		[Token(Token = "0x400070E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private float rightShoulderDist;

		[Token(Token = "0x400070F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Quaternion chestRotation;

		[Token(Token = "0x4000710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Quaternion headRotationRelativeToRoot;

		[Token(Token = "0x4000711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Quaternion[] ccdDefaultLocalRotations;

		[Token(Token = "0x4000712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Vector3 headLocalPosition;

		[Token(Token = "0x4000713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		private Quaternion headLocalRotation;

		[Token(Token = "0x4000714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private Vector3[] stretchLocalPositions;

		[Token(Token = "0x4000715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private Quaternion[] stretchLocalRotations;

		[Token(Token = "0x4000716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private Vector3[] chestLocalPositions;

		[Token(Token = "0x4000717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private Quaternion[] chestLocalRotations;

		[Token(Token = "0x4000718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private int bendBonesCount;

		[Token(Token = "0x4000719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		private int ccdBonesCount;

		[Token(Token = "0x400071A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private int stretchBonesCount;

		[Token(Token = "0x400071B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		private int chestBonesCount;

		[Token(Token = "0x6000782")]
		[Address(RVA = "0x152C4C8", Offset = "0x152C4C8", VA = "0x152C4C8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000783")]
		[Address(RVA = "0x152C7FC", Offset = "0x152C7FC", VA = "0x152C7FC")]
		private void OnStoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6000784")]
		[Address(RVA = "0x152CC9C", Offset = "0x152CC9C", VA = "0x152CC9C")]
		private void OnFixTransforms()
		{
		}

		[Token(Token = "0x6000785")]
		[Address(RVA = "0x152D068", Offset = "0x152D068", VA = "0x152D068")]
		private void OnPreRead()
		{
		}

		[Token(Token = "0x6000786")]
		[Address(RVA = "0x152D7F4", Offset = "0x152D7F4", VA = "0x152D7F4")]
		private void SpineBend()
		{
		}

		[Token(Token = "0x6000787")]
		[Address(RVA = "0x152DAD4", Offset = "0x152DAD4", VA = "0x152DAD4")]
		private void CCDPass()
		{
		}

		[Token(Token = "0x6000788")]
		[Address(RVA = "0x152DDD8", Offset = "0x152DDD8", VA = "0x152DDD8")]
		private void Iterate(int iteration)
		{
		}

		[Token(Token = "0x6000789")]
		[Address(RVA = "0x152E5AC", Offset = "0x152E5AC", VA = "0x152E5AC")]
		private void OnPostUpdate()
		{
		}

		[Token(Token = "0x600078A")]
		[Address(RVA = "0x152D5D8", Offset = "0x152D5D8", VA = "0x152D5D8")]
		private void ChestDirection()
		{
		}

		[Token(Token = "0x600078B")]
		[Address(RVA = "0x152E774", Offset = "0x152E774", VA = "0x152E774")]
		private void PostStretching()
		{
		}

		[Token(Token = "0x600078C")]
		[Address(RVA = "0x152E4C4", Offset = "0x152E4C4", VA = "0x152E4C4")]
		private void LerpSolverPosition(IKEffector effector, Vector3 position, float weight, Vector3 offset)
		{
		}

		[Token(Token = "0x600078D")]
		[Address(RVA = "0x152E3F8", Offset = "0x152E3F8", VA = "0x152E3F8")]
		private void Solve(ref Vector3 pos1, ref Vector3 pos2, float nominalDistance)
		{
		}

		[Token(Token = "0x600078E")]
		[Address(RVA = "0x152E9F8", Offset = "0x152E9F8", VA = "0x152E9F8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600078F")]
		[Address(RVA = "0x152ECC8", Offset = "0x152ECC8", VA = "0x152ECC8")]
		public FBBIKHeadEffector()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000FB")]
	public class FBIKChain
	{
		[Serializable]
		[Token(Token = "0x20000FC")]
		public class ChildConstraint
		{
			[Token(Token = "0x4000736")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float pushElasticity;

			[Token(Token = "0x4000737")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float pullElasticity;

			[Token(Token = "0x4000738")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			private Transform bone1;

			[Token(Token = "0x4000739")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			private Transform bone2;

			[Token(Token = "0x400073A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D379C", Offset = "0x8D379C")]
			private float <nominalDistance>k__BackingField;

			[Token(Token = "0x400073B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D37AC", Offset = "0x8D37AC")]
			private bool <isRigid>k__BackingField;

			[Token(Token = "0x400073C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float crossFade;

			[Token(Token = "0x400073D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float inverseCrossFade;

			[Token(Token = "0x400073E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int chain1Index;

			[Token(Token = "0x400073F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private int chain2Index;

			[Token(Token = "0x170000B4")]
			public float nominalDistance
			{
				[Token(Token = "0x60007A8")]
				[Address(RVA = "0xC17C04", Offset = "0xC17C04", VA = "0xC17C04")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF0AC", Offset = "0x8DF0AC")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x60007A9")]
				[Address(RVA = "0xC17C0C", Offset = "0xC17C0C", VA = "0xC17C0C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF0BC", Offset = "0x8DF0BC")]
				private set
				{
				}
			}

			[Token(Token = "0x170000B5")]
			public bool isRigid
			{
				[Token(Token = "0x60007AA")]
				[Address(RVA = "0xC17C14", Offset = "0xC17C14", VA = "0xC17C14")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF0CC", Offset = "0x8DF0CC")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x60007AB")]
				[Address(RVA = "0xC17C1C", Offset = "0xC17C1C", VA = "0xC17C1C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF0DC", Offset = "0x8DF0DC")]
				private set
				{
				}
			}

			[Token(Token = "0x60007AC")]
			[Address(RVA = "0xC17C28", Offset = "0xC17C28", VA = "0xC17C28")]
			public ChildConstraint(Transform bone1, Transform bone2, float pushElasticity = 0f, float pullElasticity = 0f)
			{
			}

			[Token(Token = "0x60007AD")]
			[Address(RVA = "0xC17C74", Offset = "0xC17C74", VA = "0xC17C74")]
			public void Initiate(IKSolverFullBody solver)
			{
			}

			[Token(Token = "0x60007AE")]
			[Address(RVA = "0xC17CCC", Offset = "0xC17CCC", VA = "0xC17CCC")]
			public void OnPreSolve(IKSolverFullBody solver)
			{
			}

			[Token(Token = "0x60007AF")]
			[Address(RVA = "0xC17E70", Offset = "0xC17E70", VA = "0xC17E70")]
			public void Solve(IKSolverFullBody solver)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20000FD")]
		public enum Smoothing
		{
			[Token(Token = "0x4000741")]
			None,
			[Token(Token = "0x4000742")]
			Exponential,
			[Token(Token = "0x4000743")]
			Cubic
		}

		[Token(Token = "0x400071F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D3704", Offset = "0x8D3704")]
		public float pin;

		[Token(Token = "0x4000720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D371C", Offset = "0x8D371C")]
		public float pull;

		[Token(Token = "0x4000721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D3734", Offset = "0x8D3734")]
		public float push;

		[Token(Token = "0x4000722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D374C", Offset = "0x8D374C")]
		public float pushParent;

		[Token(Token = "0x4000723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D3764", Offset = "0x8D3764")]
		public float reach;

		[Token(Token = "0x4000724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Smoothing reachSmoothing;

		[Token(Token = "0x4000725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Smoothing pushSmoothing;

		[Token(Token = "0x4000726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public IKSolver.Node[] nodes;

		[Token(Token = "0x4000727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int[] children;

		[Token(Token = "0x4000728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ChildConstraint[] childConstraints;

		[Token(Token = "0x4000729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public IKConstraintBend bendConstraint;

		[Token(Token = "0x400072A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float rootLength;

		[Token(Token = "0x400072B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private bool initiated;

		[Token(Token = "0x400072C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float length;

		[Token(Token = "0x400072D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float distance;

		[Token(Token = "0x400072E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private IKSolver.Point p;

		[Token(Token = "0x400072F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float reachForce;

		[Token(Token = "0x4000730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float pullParentSum;

		[Token(Token = "0x4000731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float[] crossFades;

		[Token(Token = "0x4000732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float sqrMag1;

		[Token(Token = "0x4000733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float sqrMag2;

		[Token(Token = "0x4000734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float sqrMagDif;

		[Token(Token = "0x4000735")]
		private const float maxLimbLength = 0.99999f;

		[Token(Token = "0x6000794")]
		[Address(RVA = "0x152EE44", Offset = "0x152EE44", VA = "0x152EE44")]
		public FBIKChain()
		{
		}

		[Token(Token = "0x6000795")]
		[Address(RVA = "0x152EF30", Offset = "0x152EF30", VA = "0x152EF30")]
		public FBIKChain(float pin, float pull, params Transform[] nodeTransforms)
		{
		}

		[Token(Token = "0x6000796")]
		[Address(RVA = "0x152F05C", Offset = "0x152F05C", VA = "0x152F05C")]
		public void SetNodes(params Transform[] boneTransforms)
		{
		}

		[Token(Token = "0x6000797")]
		[Address(RVA = "0x152F188", Offset = "0x152F188", VA = "0x152F188")]
		public int GetNodeIndex(Transform boneTransform)
		{
			return default(int);
		}

		[Token(Token = "0x6000798")]
		[Address(RVA = "0x152F260", Offset = "0x152F260", VA = "0x152F260")]
		public bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000799")]
		[Address(RVA = "0x152F378", Offset = "0x152F378", VA = "0x152F378")]
		public void Initiate(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x600079A")]
		[Address(RVA = "0x152F9F4", Offset = "0x152F9F4", VA = "0x152F9F4")]
		public void ReadPose(IKSolverFullBody solver, bool fullBody)
		{
		}

		[Token(Token = "0x600079B")]
		[Address(RVA = "0x152F508", Offset = "0x152F508", VA = "0x152F508")]
		private void CalculateBoneLengths(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x600079C")]
		[Address(RVA = "0x152FDE4", Offset = "0x152FDE4", VA = "0x152FDE4")]
		public void Reach(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x600079D")]
		[Address(RVA = "0x1530044", Offset = "0x1530044", VA = "0x1530044")]
		public Vector3 Push(IKSolverFullBody solver)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600079E")]
		[Address(RVA = "0x15302B0", Offset = "0x15302B0", VA = "0x15302B0")]
		public void SolveTrigonometric(IKSolverFullBody solver, bool calculateBendDirection = false)
		{
		}

		[Token(Token = "0x600079F")]
		[Address(RVA = "0x1530654", Offset = "0x1530654", VA = "0x1530654")]
		public void Stage1(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x60007A0")]
		[Address(RVA = "0x1530AE8", Offset = "0x1530AE8", VA = "0x1530AE8")]
		public void Stage2(IKSolverFullBody solver, Vector3 position)
		{
		}

		[Token(Token = "0x60007A1")]
		[Address(RVA = "0x1530D0C", Offset = "0x1530D0C", VA = "0x1530D0C")]
		public void SolveConstraintSystems(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x60007A2")]
		[Address(RVA = "0x1530A78", Offset = "0x1530A78", VA = "0x1530A78")]
		private Vector3 SolveFABRIKJoint(Vector3 pos1, Vector3 pos2, float length)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60007A3")]
		[Address(RVA = "0x15304E0", Offset = "0x15304E0", VA = "0x15304E0")]
		protected Vector3 GetDirToBendPoint(Vector3 direction, Vector3 bendDirection, float directionMagnitude)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60007A4")]
		[Address(RVA = "0x15309FC", Offset = "0x15309FC", VA = "0x15309FC")]
		private void SolveChildConstraints(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x60007A5")]
		[Address(RVA = "0x1530DF4", Offset = "0x1530DF4", VA = "0x1530DF4")]
		private void SolveLinearConstraint(IKSolver.Node node1, IKSolver.Node node2, float crossFade, float distance)
		{
		}

		[Token(Token = "0x60007A6")]
		[Address(RVA = "0x153091C", Offset = "0x153091C", VA = "0x153091C")]
		public void ForwardReach(Vector3 position)
		{
		}

		[Token(Token = "0x60007A7")]
		[Address(RVA = "0x1530BF4", Offset = "0x1530BF4", VA = "0x1530BF4")]
		private void BackwardReach(Vector3 position)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000FE")]
	public class IKConstraintBend
	{
		[Token(Token = "0x4000744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform bone1;

		[Token(Token = "0x4000745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform bone2;

		[Token(Token = "0x4000746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform bone3;

		[Token(Token = "0x4000747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform bendGoal;

		[Token(Token = "0x4000748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 direction;

		[Token(Token = "0x4000749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Quaternion rotationOffset;

		[Token(Token = "0x400074A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D37BC", Offset = "0x8D37BC")]
		public float weight;

		[Token(Token = "0x400074B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Vector3 defaultLocalDirection;

		[Token(Token = "0x400074C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Vector3 defaultChildDirection;

		[NonSerialized]
		[Token(Token = "0x400074D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float clampF;

		[Token(Token = "0x400074E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private int chainIndex1;

		[Token(Token = "0x400074F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int nodeIndex1;

		[Token(Token = "0x4000750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int chainIndex2;

		[Token(Token = "0x4000751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int nodeIndex2;

		[Token(Token = "0x4000752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int chainIndex3;

		[Token(Token = "0x4000753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int nodeIndex3;

		[Token(Token = "0x4000754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D37D4", Offset = "0x8D37D4")]
		private bool <initiated>k__BackingField;

		[Token(Token = "0x4000755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
		private bool limbOrientationsSet;

		[Token(Token = "0x170000B6")]
		public bool initiated
		{
			[Token(Token = "0x60007B1")]
			[Address(RVA = "0x156E220", Offset = "0x156E220", VA = "0x156E220")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF0EC", Offset = "0x8DF0EC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60007B2")]
			[Address(RVA = "0x156E228", Offset = "0x156E228", VA = "0x156E228")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF0FC", Offset = "0x8DF0FC")]
			private set
			{
			}
		}

		[Token(Token = "0x60007B0")]
		[Address(RVA = "0x156E038", Offset = "0x156E038", VA = "0x156E038")]
		public bool IsValid(IKSolverFullBody solver, Warning.Logger logger)
		{
			return default(bool);
		}

		[Token(Token = "0x60007B3")]
		[Address(RVA = "0x156E234", Offset = "0x156E234", VA = "0x156E234")]
		public IKConstraintBend()
		{
		}

		[Token(Token = "0x60007B4")]
		[Address(RVA = "0x156E274", Offset = "0x156E274", VA = "0x156E274")]
		public IKConstraintBend(Transform bone1, Transform bone2, Transform bone3)
		{
		}

		[Token(Token = "0x60007B5")]
		[Address(RVA = "0x156E2D4", Offset = "0x156E2D4", VA = "0x156E2D4")]
		public void SetBones(Transform bone1, Transform bone2, Transform bone3)
		{
		}

		[Token(Token = "0x60007B6")]
		[Address(RVA = "0x156E2E0", Offset = "0x156E2E0", VA = "0x156E2E0")]
		public void Initiate(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x60007B7")]
		[Address(RVA = "0x156E5F4", Offset = "0x156E5F4", VA = "0x156E5F4")]
		public void SetLimbOrientation(Vector3 upper, Vector3 lower, Vector3 last)
		{
		}

		[Token(Token = "0x60007B8")]
		[Address(RVA = "0x156E7E4", Offset = "0x156E7E4", VA = "0x156E7E4")]
		public void LimitBend(float solverWeight, float positionWeight)
		{
		}

		[Token(Token = "0x60007B9")]
		[Address(RVA = "0x156EB30", Offset = "0x156EB30", VA = "0x156EB30")]
		public Vector3 GetDir(IKSolverFullBody solver)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60007BA")]
		[Address(RVA = "0x156E4A4", Offset = "0x156E4A4", VA = "0x156E4A4")]
		private Vector3 OrthoToLimb(IKSolverFullBody solver, Vector3 tangent)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60007BB")]
		[Address(RVA = "0x156E54C", Offset = "0x156E54C", VA = "0x156E54C")]
		private Vector3 OrthoToBone1(IKSolverFullBody solver, Vector3 tangent)
		{
			return default(Vector3);
		}
	}
	[Serializable]
	[Token(Token = "0x20000FF")]
	public class IKEffector
	{
		[Token(Token = "0x4000756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform bone;

		[Token(Token = "0x4000757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform target;

		[Token(Token = "0x4000758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D37E4", Offset = "0x8D37E4")]
		public float positionWeight;

		[Token(Token = "0x4000759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D37FC", Offset = "0x8D37FC")]
		public float rotationWeight;

		[Token(Token = "0x400075A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 position;

		[Token(Token = "0x400075B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Quaternion rotation;

		[Token(Token = "0x400075C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Vector3 positionOffset;

		[Token(Token = "0x400075D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D3814", Offset = "0x8D3814")]
		private bool <isEndEffector>k__BackingField;

		[Token(Token = "0x400075E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool effectChildNodes;

		[Token(Token = "0x400075F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D3824", Offset = "0x8D3824")]
		public float maintainRelativePositionWeight;

		[Token(Token = "0x4000760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform[] childBones;

		[Token(Token = "0x4000761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform planeBone1;

		[Token(Token = "0x4000762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Transform planeBone2;

		[Token(Token = "0x4000763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Transform planeBone3;

		[Token(Token = "0x4000764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Quaternion planeRotationOffset;

		[Token(Token = "0x4000765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float posW;

		[Token(Token = "0x4000766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float rotW;

		[Token(Token = "0x4000767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3[] localPositions;

		[Token(Token = "0x4000768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool usePlaneNodes;

		[Token(Token = "0x4000769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Quaternion animatedPlaneRotation;

		[Token(Token = "0x400076A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private Vector3 animatedPosition;

		[Token(Token = "0x400076B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private bool firstUpdate;

		[Token(Token = "0x400076C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private int chainIndex;

		[Token(Token = "0x400076D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private int nodeIndex;

		[Token(Token = "0x400076E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private int plane1ChainIndex;

		[Token(Token = "0x400076F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private int plane1NodeIndex;

		[Token(Token = "0x4000770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private int plane2ChainIndex;

		[Token(Token = "0x4000771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private int plane2NodeIndex;

		[Token(Token = "0x4000772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private int plane3ChainIndex;

		[Token(Token = "0x4000773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private int plane3NodeIndex;

		[Token(Token = "0x4000774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private int[] childChainIndexes;

		[Token(Token = "0x4000775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private int[] childNodeIndexes;

		[Token(Token = "0x170000B7")]
		public bool isEndEffector
		{
			[Token(Token = "0x60007BD")]
			[Address(RVA = "0x156EFCC", Offset = "0x156EFCC", VA = "0x156EFCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF10C", Offset = "0x8DF10C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60007BE")]
			[Address(RVA = "0x156EFD4", Offset = "0x156EFD4", VA = "0x156EFD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF11C", Offset = "0x8DF11C")]
			private set
			{
			}
		}

		[Token(Token = "0x60007BC")]
		[Address(RVA = "0x156EF64", Offset = "0x156EF64", VA = "0x156EF64")]
		public IKSolver.Node GetNode(IKSolverFullBody solver)
		{
			return null;
		}

		[Token(Token = "0x60007BF")]
		[Address(RVA = "0x156EFE0", Offset = "0x156EFE0", VA = "0x156EFE0")]
		public void PinToBone(float positionWeight, float rotationWeight)
		{
		}

		[Token(Token = "0x60007C0")]
		[Address(RVA = "0x156F070", Offset = "0x156F070", VA = "0x156F070")]
		public IKEffector()
		{
		}

		[Token(Token = "0x60007C1")]
		[Address(RVA = "0x156F184", Offset = "0x156F184", VA = "0x156F184")]
		public IKEffector(Transform bone, Transform[] childBones)
		{
		}

		[Token(Token = "0x60007C2")]
		[Address(RVA = "0x156F2B4", Offset = "0x156F2B4", VA = "0x156F2B4")]
		public bool IsValid(IKSolver solver, ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x60007C3")]
		[Address(RVA = "0x156F5D0", Offset = "0x156F5D0", VA = "0x156F5D0")]
		public void Initiate(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x60007C4")]
		[Address(RVA = "0x156F864", Offset = "0x156F864", VA = "0x156F864")]
		public void ResetOffset(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x60007C5")]
		[Address(RVA = "0x156F938", Offset = "0x156F938", VA = "0x156F938")]
		public void SetToTarget()
		{
		}

		[Token(Token = "0x60007C6")]
		[Address(RVA = "0x156F9E0", Offset = "0x156F9E0", VA = "0x156F9E0")]
		public void OnPreSolve(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x60007C7")]
		[Address(RVA = "0x156FF1C", Offset = "0x156FF1C", VA = "0x156FF1C")]
		public void OnPostWrite()
		{
		}

		[Token(Token = "0x60007C8")]
		[Address(RVA = "0x156FF48", Offset = "0x156FF48", VA = "0x156FF48")]
		private Quaternion GetPlaneRotation(IKSolverFullBody solver)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60007C9")]
		[Address(RVA = "0x15700A8", Offset = "0x15700A8", VA = "0x15700A8")]
		public void Update(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x60007CA")]
		[Address(RVA = "0x1570334", Offset = "0x1570334", VA = "0x1570334")]
		private Vector3 GetPosition(IKSolverFullBody solver, out Quaternion planeRotationOffset)
		{
			return default(Vector3);
		}
	}
	[Serializable]
	[Token(Token = "0x2000100")]
	public class IKMapping
	{
		[Serializable]
		[Token(Token = "0x2000101")]
		public class BoneMap
		{
			[Token(Token = "0x4000776")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform transform;

			[Token(Token = "0x4000777")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int chainIndex;

			[Token(Token = "0x4000778")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int nodeIndex;

			[Token(Token = "0x4000779")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 defaultLocalPosition;

			[Token(Token = "0x400077A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public Quaternion defaultLocalRotation;

			[Token(Token = "0x400077B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public Vector3 localSwingAxis;

			[Token(Token = "0x400077C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Vector3 localTwistAxis;

			[Token(Token = "0x400077D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public Vector3 planePosition;

			[Token(Token = "0x400077E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public Vector3 ikPosition;

			[Token(Token = "0x400077F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			public Quaternion defaultLocalTargetRotation;

			[Token(Token = "0x4000780")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
			private Quaternion maintainRotation;

			[Token(Token = "0x4000781")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
			public float length;

			[Token(Token = "0x4000782")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public Quaternion animatedRotation;

			[Token(Token = "0x4000783")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			private Transform planeBone1;

			[Token(Token = "0x4000784")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			private Transform planeBone2;

			[Token(Token = "0x4000785")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			private Transform planeBone3;

			[Token(Token = "0x4000786")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			private int plane1ChainIndex;

			[Token(Token = "0x4000787")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
			private int plane1NodeIndex;

			[Token(Token = "0x4000788")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			private int plane2ChainIndex;

			[Token(Token = "0x4000789")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
			private int plane2NodeIndex;

			[Token(Token = "0x400078A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			private int plane3ChainIndex;

			[Token(Token = "0x400078B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
			private int plane3NodeIndex;

			[Token(Token = "0x170000B8")]
			public Vector3 swingDirection
			{
				[Token(Token = "0x60007D1")]
				[Address(RVA = "0x1B38014", Offset = "0x1B38014", VA = "0x1B38014")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x170000B9")]
			public bool isNodeBone
			{
				[Token(Token = "0x60007D4")]
				[Address(RVA = "0x1B380F0", Offset = "0x1B380F0", VA = "0x1B380F0")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170000BA")]
			private Quaternion lastAnimatedTargetRotation
			{
				[Token(Token = "0x60007E8")]
				[Address(RVA = "0x1B38494", Offset = "0x1B38494", VA = "0x1B38494")]
				get
				{
					return default(Quaternion);
				}
			}

			[Token(Token = "0x60007D0")]
			[Address(RVA = "0x1B37FE8", Offset = "0x1B37FE8", VA = "0x1B37FE8")]
			public void Initiate(Transform transform, IKSolverFullBody solver)
			{
			}

			[Token(Token = "0x60007D2")]
			[Address(RVA = "0x1B38050", Offset = "0x1B38050", VA = "0x1B38050")]
			public void StoreDefaultLocalState()
			{
			}

			[Token(Token = "0x60007D3")]
			[Address(RVA = "0x1B380A0", Offset = "0x1B380A0", VA = "0x1B380A0")]
			public void FixTransform(bool position)
			{
			}

			[Token(Token = "0x60007D5")]
			[Address(RVA = "0x1B38100", Offset = "0x1B38100", VA = "0x1B38100")]
			public void SetLength(BoneMap nextBone)
			{
			}

			[Token(Token = "0x60007D6")]
			[Address(RVA = "0x1B38188", Offset = "0x1B38188", VA = "0x1B38188")]
			public void SetLocalSwingAxis(BoneMap swingTarget)
			{
			}

			[Token(Token = "0x60007D7")]
			[Address(RVA = "0x1B38190", Offset = "0x1B38190", VA = "0x1B38190")]
			public void SetLocalSwingAxis(BoneMap bone1, BoneMap bone2)
			{
			}

			[Token(Token = "0x60007D8")]
			[Address(RVA = "0x1B38268", Offset = "0x1B38268", VA = "0x1B38268")]
			public void SetLocalTwistAxis(Vector3 twistDirection, Vector3 normalDirection)
			{
			}

			[Token(Token = "0x60007D9")]
			[Address(RVA = "0x1B382E0", Offset = "0x1B382E0", VA = "0x1B382E0")]
			public void SetPlane(IKSolverFullBody solver, Transform planeBone1, Transform planeBone2, Transform planeBone3)
			{
			}

			[Token(Token = "0x60007DA")]
			[Address(RVA = "0x1B38378", Offset = "0x1B38378", VA = "0x1B38378")]
			public void UpdatePlane(bool rotation, bool position)
			{
			}

			[Token(Token = "0x60007DB")]
			[Address(RVA = "0x1B385D4", Offset = "0x1B385D4", VA = "0x1B385D4")]
			public void SetIKPosition()
			{
			}

			[Token(Token = "0x60007DC")]
			[Address(RVA = "0x1B3860C", Offset = "0x1B3860C", VA = "0x1B3860C")]
			public void MaintainRotation()
			{
			}

			[Token(Token = "0x60007DD")]
			[Address(RVA = "0x1B38644", Offset = "0x1B38644", VA = "0x1B38644")]
			public void SetToIKPosition()
			{
			}

			[Token(Token = "0x60007DE")]
			[Address(RVA = "0x1B3866C", Offset = "0x1B3866C", VA = "0x1B3866C")]
			public void FixToNode(IKSolverFullBody solver, float weight, [Optional] IKSolver.Node fixNode)
			{
			}

			[Token(Token = "0x60007DF")]
			[Address(RVA = "0x1B38758", Offset = "0x1B38758", VA = "0x1B38758")]
			public Vector3 GetPlanePosition(IKSolverFullBody solver)
			{
				return default(Vector3);
			}

			[Token(Token = "0x60007E0")]
			[Address(RVA = "0x1B388E4", Offset = "0x1B388E4", VA = "0x1B388E4")]
			public void PositionToPlane(IKSolverFullBody solver)
			{
			}

			[Token(Token = "0x60007E1")]
			[Address(RVA = "0x1B38914", Offset = "0x1B38914", VA = "0x1B38914")]
			public void RotateToPlane(IKSolverFullBody solver, float weight)
			{
			}

			[Token(Token = "0x60007E2")]
			[Address(RVA = "0x1B389DC", Offset = "0x1B389DC", VA = "0x1B389DC")]
			public void Swing(Vector3 swingTarget, float weight)
			{
			}

			[Token(Token = "0x60007E3")]
			[Address(RVA = "0x1B38A4C", Offset = "0x1B38A4C", VA = "0x1B38A4C")]
			public void Swing(Vector3 pos1, Vector3 pos2, float weight)
			{
			}

			[Token(Token = "0x60007E4")]
			[Address(RVA = "0x1B38B9C", Offset = "0x1B38B9C", VA = "0x1B38B9C")]
			public void Twist(Vector3 twistDirection, Vector3 normalDirection, float weight)
			{
			}

			[Token(Token = "0x60007E5")]
			[Address(RVA = "0x1B38CEC", Offset = "0x1B38CEC", VA = "0x1B38CEC")]
			public void RotateToMaintain(float weight)
			{
			}

			[Token(Token = "0x60007E6")]
			[Address(RVA = "0x1B38D6C", Offset = "0x1B38D6C", VA = "0x1B38D6C")]
			public void RotateToEffector(IKSolverFullBody solver, float weight)
			{
			}

			[Token(Token = "0x60007E7")]
			[Address(RVA = "0x1B387D4", Offset = "0x1B387D4", VA = "0x1B387D4")]
			private Quaternion GetTargetRotation(IKSolverFullBody solver)
			{
				return default(Quaternion);
			}

			[Token(Token = "0x60007E9")]
			[Address(RVA = "0x1B38EA4", Offset = "0x1B38EA4", VA = "0x1B38EA4")]
			public BoneMap()
			{
			}
		}

		[Token(Token = "0x60007CB")]
		[Address(RVA = "0x15707E8", Offset = "0x15707E8", VA = "0x15707E8", Slot = "4")]
		public virtual bool IsValid(IKSolver solver, ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x60007CC")]
		[Address(RVA = "0x15707F0", Offset = "0x15707F0", VA = "0x15707F0", Slot = "5")]
		public virtual void Initiate(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x60007CD")]
		[Address(RVA = "0x15707F4", Offset = "0x15707F4", VA = "0x15707F4")]
		protected bool BoneIsValid(Transform bone, IKSolver solver, ref string message, [Optional] Warning.Logger logger)
		{
			return default(bool);
		}

		[Token(Token = "0x60007CE")]
		[Address(RVA = "0x1570938", Offset = "0x1570938", VA = "0x1570938")]
		protected Vector3 SolveFABRIKJoint(Vector3 pos1, Vector3 pos2, float length)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60007CF")]
		[Address(RVA = "0x15709A8", Offset = "0x15709A8", VA = "0x15709A8")]
		public IKMapping()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000102")]
	public class IKMappingBone : IKMapping
	{
		[Token(Token = "0x400078C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform bone;

		[Token(Token = "0x400078D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D383C", Offset = "0x8D383C")]
		public float maintainRotationWeight;

		[Token(Token = "0x400078E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private BoneMap boneMap;

		[Token(Token = "0x60007EA")]
		[Address(RVA = "0x15709B0", Offset = "0x15709B0", VA = "0x15709B0", Slot = "4")]
		public override bool IsValid(IKSolver solver, ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x60007EB")]
		[Address(RVA = "0x1570A58", Offset = "0x1570A58", VA = "0x1570A58")]
		public IKMappingBone()
		{
		}

		[Token(Token = "0x60007EC")]
		[Address(RVA = "0x1570AC4", Offset = "0x1570AC4", VA = "0x1570AC4")]
		public IKMappingBone(Transform bone)
		{
		}

		[Token(Token = "0x60007ED")]
		[Address(RVA = "0x1570B44", Offset = "0x1570B44", VA = "0x1570B44")]
		public void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x60007EE")]
		[Address(RVA = "0x1570B60", Offset = "0x1570B60", VA = "0x1570B60")]
		public void FixTransforms()
		{
		}

		[Token(Token = "0x60007EF")]
		[Address(RVA = "0x1570B80", Offset = "0x1570B80", VA = "0x1570B80", Slot = "5")]
		public override void Initiate(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x60007F0")]
		[Address(RVA = "0x1570C08", Offset = "0x1570C08", VA = "0x1570C08")]
		public void ReadPose()
		{
		}

		[Token(Token = "0x60007F1")]
		[Address(RVA = "0x1570C24", Offset = "0x1570C24", VA = "0x1570C24")]
		public void WritePose(float solverWeight)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000103")]
	public class IKMappingLimb : IKMapping
	{
		[Serializable]
		[Token(Token = "0x2000104")]
		public enum BoneMapType
		{
			[Token(Token = "0x400079B")]
			Parent,
			[Token(Token = "0x400079C")]
			Bone1,
			[Token(Token = "0x400079D")]
			Bone2,
			[Token(Token = "0x400079E")]
			Bone3
		}

		[Token(Token = "0x400078F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform parentBone;

		[Token(Token = "0x4000790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform bone1;

		[Token(Token = "0x4000791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform bone2;

		[Token(Token = "0x4000792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform bone3;

		[Token(Token = "0x4000793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D3854", Offset = "0x8D3854")]
		public float maintainRotationWeight;

		[Token(Token = "0x4000794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D386C", Offset = "0x8D386C")]
		public float weight;

		[NonSerialized]
		[Token(Token = "0x4000795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool updatePlaneRotations;

		[Token(Token = "0x4000796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private BoneMap boneMapParent;

		[Token(Token = "0x4000797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private BoneMap boneMap1;

		[Token(Token = "0x4000798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private BoneMap boneMap2;

		[Token(Token = "0x4000799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private BoneMap boneMap3;

		[Token(Token = "0x60007F2")]
		[Address(RVA = "0x1570C4C", Offset = "0x1570C4C", VA = "0x1570C4C", Slot = "4")]
		public override bool IsValid(IKSolver solver, ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x60007F3")]
		[Address(RVA = "0x1570CD0", Offset = "0x1570CD0", VA = "0x1570CD0")]
		public BoneMap GetBoneMap(BoneMapType boneMap)
		{
			return null;
		}

		[Token(Token = "0x60007F4")]
		[Address(RVA = "0x1570DAC", Offset = "0x1570DAC", VA = "0x1570DAC")]
		public void SetLimbOrientation(Vector3 upper, Vector3 lower)
		{
		}

		[Token(Token = "0x60007F5")]
		[Address(RVA = "0x1570FD0", Offset = "0x1570FD0", VA = "0x1570FD0")]
		public IKMappingLimb()
		{
		}

		[Token(Token = "0x60007F6")]
		[Address(RVA = "0x1571094", Offset = "0x1571094", VA = "0x1571094")]
		public IKMappingLimb(Transform bone1, Transform bone2, Transform bone3, [Optional] Transform parentBone)
		{
		}

		[Token(Token = "0x60007F7")]
		[Address(RVA = "0x1571184", Offset = "0x1571184", VA = "0x1571184")]
		public void SetBones(Transform bone1, Transform bone2, Transform bone3, [Optional] Transform parentBone)
		{
		}

		[Token(Token = "0x60007F8")]
		[Address(RVA = "0x1571190", Offset = "0x1571190", VA = "0x1571190")]
		public void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x60007F9")]
		[Address(RVA = "0x1571244", Offset = "0x1571244", VA = "0x1571244")]
		public void FixTransforms()
		{
		}

		[Token(Token = "0x60007FA")]
		[Address(RVA = "0x1571308", Offset = "0x1571308", VA = "0x1571308", Slot = "5")]
		public override void Initiate(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x60007FB")]
		[Address(RVA = "0x1571548", Offset = "0x1571548", VA = "0x1571548")]
		public void ReadPose()
		{
		}

		[Token(Token = "0x60007FC")]
		[Address(RVA = "0x15715BC", Offset = "0x15715BC", VA = "0x15715BC")]
		public void WritePose(IKSolverFullBody solver, bool fullBody)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000105")]
	public class IKMappingSpine : IKMapping
	{
		[Token(Token = "0x400079F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform[] spineBones;

		[Token(Token = "0x40007A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform leftUpperArmBone;

		[Token(Token = "0x40007A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform rightUpperArmBone;

		[Token(Token = "0x40007A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform leftThighBone;

		[Token(Token = "0x40007A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform rightThighBone;

		[Token(Token = "0x40007A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D3884", Offset = "0x8D3884")]
		public int iterations;

		[Token(Token = "0x40007A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D389C", Offset = "0x8D389C")]
		public float twistWeight;

		[Token(Token = "0x40007A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int rootNodeIndex;

		[Token(Token = "0x40007A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private BoneMap[] spine;

		[Token(Token = "0x40007A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private BoneMap leftUpperArm;

		[Token(Token = "0x40007A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private BoneMap rightUpperArm;

		[Token(Token = "0x40007AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private BoneMap leftThigh;

		[Token(Token = "0x40007AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private BoneMap rightThigh;

		[Token(Token = "0x40007AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool useFABRIK;

		[Token(Token = "0x60007FD")]
		[Address(RVA = "0x157173C", Offset = "0x157173C", VA = "0x157173C", Slot = "4")]
		public override bool IsValid(IKSolver solver, ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x60007FE")]
		[Address(RVA = "0x1571AA0", Offset = "0x1571AA0", VA = "0x1571AA0")]
		public IKMappingSpine()
		{
		}

		[Token(Token = "0x60007FF")]
		[Address(RVA = "0x1571B84", Offset = "0x1571B84", VA = "0x1571B84")]
		public IKMappingSpine(Transform[] spineBones, Transform leftUpperArmBone, Transform rightUpperArmBone, Transform leftThighBone, Transform rightThighBone)
		{
		}

		[Token(Token = "0x6000800")]
		[Address(RVA = "0x1571C9C", Offset = "0x1571C9C", VA = "0x1571C9C")]
		public void SetBones(Transform[] spineBones, Transform leftUpperArmBone, Transform rightUpperArmBone, Transform leftThighBone, Transform rightThighBone)
		{
		}

		[Token(Token = "0x6000801")]
		[Address(RVA = "0x1571CAC", Offset = "0x1571CAC", VA = "0x1571CAC")]
		public void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6000802")]
		[Address(RVA = "0x1571D18", Offset = "0x1571D18", VA = "0x1571D18")]
		public void FixTransforms()
		{
		}

		[Token(Token = "0x6000803")]
		[Address(RVA = "0x1571D9C", Offset = "0x1571D9C", VA = "0x1571D9C", Slot = "5")]
		public override void Initiate(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x6000804")]
		[Address(RVA = "0x1572374", Offset = "0x1572374", VA = "0x1572374")]
		private bool UseFABRIK()
		{
			return default(bool);
		}

		[Token(Token = "0x6000805")]
		[Address(RVA = "0x15723AC", Offset = "0x15723AC", VA = "0x15723AC")]
		public void ReadPose()
		{
		}

		[Token(Token = "0x6000806")]
		[Address(RVA = "0x1572630", Offset = "0x1572630", VA = "0x1572630")]
		public void WritePose(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x6000807")]
		[Address(RVA = "0x1572938", Offset = "0x1572938", VA = "0x1572938")]
		public void ForwardReach(Vector3 position)
		{
		}

		[Token(Token = "0x6000808")]
		[Address(RVA = "0x1572A24", Offset = "0x1572A24", VA = "0x1572A24")]
		private void BackwardReach(Vector3 position)
		{
		}

		[Token(Token = "0x6000809")]
		[Address(RVA = "0x1572AEC", Offset = "0x1572AEC", VA = "0x1572AEC")]
		private void MapToSolverPositions(IKSolverFullBody solver)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000106")]
	public abstract class IKSolver
	{
		[Serializable]
		[Token(Token = "0x2000107")]
		public class Point
		{
			[Token(Token = "0x40007B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform transform;

			[Token(Token = "0x40007B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D3960", Offset = "0x8D3960")]
			public float weight;

			[Token(Token = "0x40007B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 solverPosition;

			[Token(Token = "0x40007B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Quaternion solverRotation;

			[Token(Token = "0x40007BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Vector3 defaultLocalPosition;

			[Token(Token = "0x40007BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public Quaternion defaultLocalRotation;

			[Token(Token = "0x6000820")]
			[Address(RVA = "0x1B399B0", Offset = "0x1B399B0", VA = "0x1B399B0")]
			public void StoreDefaultLocalState()
			{
			}

			[Token(Token = "0x6000821")]
			[Address(RVA = "0x1B39A00", Offset = "0x1B39A00", VA = "0x1B39A00")]
			public void FixTransform()
			{
			}

			[Token(Token = "0x6000822")]
			[Address(RVA = "0x1B39AA0", Offset = "0x1B39AA0", VA = "0x1B39AA0")]
			public void UpdateSolverPosition()
			{
			}

			[Token(Token = "0x6000823")]
			[Address(RVA = "0x1B39AD8", Offset = "0x1B39AD8", VA = "0x1B39AD8")]
			public void UpdateSolverLocalPosition()
			{
			}

			[Token(Token = "0x6000824")]
			[Address(RVA = "0x1B39B10", Offset = "0x1B39B10", VA = "0x1B39B10")]
			public void UpdateSolverState()
			{
			}

			[Token(Token = "0x6000825")]
			[Address(RVA = "0x1B39B60", Offset = "0x1B39B60", VA = "0x1B39B60")]
			public void UpdateSolverLocalState()
			{
			}

			[Token(Token = "0x6000826")]
			[Address(RVA = "0x1B39590", Offset = "0x1B39590", VA = "0x1B39590")]
			public Point()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000108")]
		public class Bone : Point
		{
			[Token(Token = "0x40007BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public float length;

			[Token(Token = "0x40007BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public float sqrMag;

			[Token(Token = "0x40007BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public Vector3 axis;

			[Token(Token = "0x40007BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private RotationLimit _rotationLimit;

			[Token(Token = "0x40007C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private bool isLimited;

			[Token(Token = "0x170000BC")]
			public RotationLimit rotationLimit
			{
				[Token(Token = "0x6000827")]
				[Address(RVA = "0x1B38EC0", Offset = "0x1B38EC0", VA = "0x1B38EC0")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000828")]
				[Address(RVA = "0x1B38FBC", Offset = "0x1B38FBC", VA = "0x1B38FBC")]
				set
				{
				}
			}

			[Token(Token = "0x6000829")]
			[Address(RVA = "0x1B39040", Offset = "0x1B39040", VA = "0x1B39040")]
			public void Swing(Vector3 swingTarget, float weight = 1f)
			{
			}

			[Token(Token = "0x600082A")]
			[Address(RVA = "0x1B391F0", Offset = "0x1B391F0", VA = "0x1B391F0")]
			public static void SolverSwing(Bone[] bones, int index, Vector3 swingTarget, float weight = 1f)
			{
			}

			[Token(Token = "0x600082B")]
			[Address(RVA = "0x1B393C4", Offset = "0x1B393C4", VA = "0x1B393C4")]
			public void Swing2D(Vector3 swingTarget, float weight = 1f)
			{
			}

			[Token(Token = "0x600082C")]
			[Address(RVA = "0x1B39524", Offset = "0x1B39524", VA = "0x1B39524")]
			public void SetToSolverPosition()
			{
			}

			[Token(Token = "0x600082D")]
			[Address(RVA = "0x1B3954C", Offset = "0x1B3954C", VA = "0x1B3954C")]
			public Bone()
			{
			}

			[Token(Token = "0x600082E")]
			[Address(RVA = "0x1B395CC", Offset = "0x1B395CC", VA = "0x1B395CC")]
			public Bone(Transform transform)
			{
			}

			[Token(Token = "0x600082F")]
			[Address(RVA = "0x1B3961C", Offset = "0x1B3961C", VA = "0x1B3961C")]
			public Bone(Transform transform, float weight)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000109")]
		public class Node : Point
		{
			[Token(Token = "0x40007C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public float length;

			[Token(Token = "0x40007C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public float effectorPositionWeight;

			[Token(Token = "0x40007C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public float effectorRotationWeight;

			[Token(Token = "0x40007C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public Vector3 offset;

			[Token(Token = "0x6000830")]
			[Address(RVA = "0x1B3994C", Offset = "0x1B3994C", VA = "0x1B3994C")]
			public Node()
			{
			}

			[Token(Token = "0x6000831")]
			[Address(RVA = "0x1B39950", Offset = "0x1B39950", VA = "0x1B39950")]
			public Node(Transform transform)
			{
			}

			[Token(Token = "0x6000832")]
			[Address(RVA = "0x1B39978", Offset = "0x1B39978", VA = "0x1B39978")]
			public Node(Transform transform, float weight)
			{
			}
		}

		[Token(Token = "0x200010A")]
		public delegate void UpdateDelegate();

		[Token(Token = "0x200010B")]
		public delegate void IterationDelegate(int i);

		[Token(Token = "0x40007AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public Vector3 IKPosition;

		[Token(Token = "0x40007AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D38C4", Offset = "0x8D38C4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D38C4", Offset = "0x8D38C4")]
		public float IKPositionWeight;

		[Token(Token = "0x40007AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D3918", Offset = "0x8D3918")]
		private bool <initiated>k__BackingField;

		[Token(Token = "0x40007B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UpdateDelegate OnPreInitiate;

		[Token(Token = "0x40007B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UpdateDelegate OnPostInitiate;

		[Token(Token = "0x40007B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UpdateDelegate OnPreUpdate;

		[Token(Token = "0x40007B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UpdateDelegate OnPostUpdate;

		[Token(Token = "0x40007B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected bool firstInitiation;

		[Token(Token = "0x40007B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[HideInInspector]
		protected Transform root;

		[Token(Token = "0x170000BB")]
		public bool initiated
		{
			[Token(Token = "0x6000813")]
			[Address(RVA = "0x1572E24", Offset = "0x1572E24", VA = "0x1572E24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF12C", Offset = "0x8DF12C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000814")]
			[Address(RVA = "0x1572E2C", Offset = "0x1572E2C", VA = "0x1572E2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF13C", Offset = "0x8DF13C")]
			private set
			{
			}
		}

		[Token(Token = "0x600080A")]
		[Address(RVA = "0x1572D54", Offset = "0x1572D54", VA = "0x1572D54")]
		public bool IsValid()
		{
			return default(bool);
		}

		[Token(Token = "0x600080B")]
		public abstract bool IsValid(ref string message);

		[Token(Token = "0x600080C")]
		[Address(RVA = "0x156DE5C", Offset = "0x156DE5C", VA = "0x156DE5C")]
		public void Initiate(Transform root)
		{
		}

		[Token(Token = "0x600080D")]
		[Address(RVA = "0x156DD7C", Offset = "0x156DD7C", VA = "0x156DD7C")]
		public void Update()
		{
		}

		[Token(Token = "0x600080E")]
		[Address(RVA = "0x1572DCC", Offset = "0x1572DCC", VA = "0x1572DCC", Slot = "5")]
		public virtual Vector3 GetIKPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600080F")]
		[Address(RVA = "0x1572DD8", Offset = "0x1572DD8", VA = "0x1572DD8")]
		public void SetIKPosition(Vector3 position)
		{
		}

		[Token(Token = "0x6000810")]
		[Address(RVA = "0x1572DE4", Offset = "0x1572DE4", VA = "0x1572DE4")]
		public float GetIKPositionWeight()
		{
			return default(float);
		}

		[Token(Token = "0x6000811")]
		[Address(RVA = "0x1572DEC", Offset = "0x1572DEC", VA = "0x1572DEC")]
		public void SetIKPositionWeight(float weight)
		{
		}

		[Token(Token = "0x6000812")]
		[Address(RVA = "0x1572E1C", Offset = "0x1572E1C", VA = "0x1572E1C")]
		public Transform GetRoot()
		{
			return null;
		}

		[Token(Token = "0x6000815")]
		public abstract Point[] GetPoints();

		[Token(Token = "0x6000816")]
		public abstract Point GetPoint(Transform transform);

		[Token(Token = "0x6000817")]
		public abstract void FixTransforms();

		[Token(Token = "0x6000818")]
		public abstract void StoreDefaultLocalState();

		[Token(Token = "0x6000819")]
		protected abstract void OnInitiate();

		[Token(Token = "0x600081A")]
		protected abstract void OnUpdate();

		[Token(Token = "0x600081B")]
		[Address(RVA = "0x1572E38", Offset = "0x1572E38", VA = "0x1572E38")]
		protected void LogWarning(string message)
		{
		}

		[Token(Token = "0x600081C")]
		[Address(RVA = "0x1572E50", Offset = "0x1572E50", VA = "0x1572E50")]
		public static Transform ContainsDuplicateBone(Bone[] bones)
		{
			return null;
		}

		[Token(Token = "0x600081D")]
		[Address(RVA = "0x1572F88", Offset = "0x1572F88", VA = "0x1572F88")]
		public static bool HierarchyIsValid(Bone[] bones)
		{
			return default(bool);
		}

		[Token(Token = "0x600081E")]
		[Address(RVA = "0x1573030", Offset = "0x1573030", VA = "0x1573030")]
		protected static float PreSolveBones(ref Bone[] bones)
		{
			return default(float);
		}

		[Token(Token = "0x600081F")]
		[Address(RVA = "0x15732B8", Offset = "0x15732B8", VA = "0x15732B8")]
		protected IKSolver()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200010C")]
	public class IKSolverAim : IKSolverHeuristic
	{
		[Token(Token = "0x40007C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Transform transform;

		[Token(Token = "0x40007C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Vector3 axis;

		[Token(Token = "0x40007C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public Vector3 poleAxis;

		[Token(Token = "0x40007C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Vector3 polePosition;

		[Token(Token = "0x40007C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D3978", Offset = "0x8D3978")]
		public float poleWeight;

		[Token(Token = "0x40007CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Transform poleTarget;

		[Token(Token = "0x40007CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D3990", Offset = "0x8D3990")]
		public float clampWeight;

		[Token(Token = "0x40007CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D39A8", Offset = "0x8D39A8")]
		public int clampSmoothing;

		[Token(Token = "0x40007CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public IterationDelegate OnPreIteration;

		[Token(Token = "0x40007CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float step;

		[Token(Token = "0x40007CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private Vector3 clampedIKPosition;

		[Token(Token = "0x40007D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private RotationLimit transformLimit;

		[Token(Token = "0x40007D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Transform lastTransform;

		[Token(Token = "0x170000BD")]
		public Vector3 transformAxis
		{
			[Token(Token = "0x600083C")]
			[Address(RVA = "0x157334C", Offset = "0x157334C", VA = "0x157334C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170000BE")]
		public Vector3 transformPoleAxis
		{
			[Token(Token = "0x600083D")]
			[Address(RVA = "0x1573388", Offset = "0x1573388", VA = "0x1573388")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170000BF")]
		protected override int minBones
		{
			[Token(Token = "0x6000840")]
			[Address(RVA = "0x1573E18", Offset = "0x1573E18", VA = "0x1573E18", Slot = "12")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000C0")]
		protected override Vector3 localDirection
		{
			[Token(Token = "0x6000844")]
			[Address(RVA = "0x15741FC", Offset = "0x15741FC", VA = "0x15741FC", Slot = "15")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x600083B")]
		[Address(RVA = "0x15732D0", Offset = "0x15732D0", VA = "0x15732D0")]
		public float GetAngle()
		{
			return default(float);
		}

		[Token(Token = "0x600083E")]
		[Address(RVA = "0x15733C4", Offset = "0x15733C4", VA = "0x15733C4", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x600083F")]
		[Address(RVA = "0x15735E4", Offset = "0x15735E4", VA = "0x15735E4", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6000841")]
		[Address(RVA = "0x1573D64", Offset = "0x1573D64", VA = "0x1573D64")]
		private void Solve()
		{
		}

		[Token(Token = "0x6000842")]
		[Address(RVA = "0x1573AF4", Offset = "0x1573AF4", VA = "0x1573AF4")]
		private Vector3 GetClampedIKPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000843")]
		[Address(RVA = "0x1573E20", Offset = "0x1573E20", VA = "0x1573E20")]
		private void RotateToTarget(Vector3 targetPosition, Bone bone, float weight)
		{
		}

		[Token(Token = "0x6000845")]
		[Address(RVA = "0x1574270", Offset = "0x1574270", VA = "0x1574270")]
		public IKSolverAim()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200010D")]
	public class IKSolverArm : IKSolver
	{
		[Token(Token = "0x40007D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D39C0", Offset = "0x8D39C0")]
		public float IKRotationWeight;

		[Token(Token = "0x40007D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Quaternion IKRotation;

		[Token(Token = "0x40007D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Point chest;

		[Token(Token = "0x40007D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Point shoulder;

		[Token(Token = "0x40007D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Point upperArm;

		[Token(Token = "0x40007D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Point forearm;

		[Token(Token = "0x40007D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Point hand;

		[Token(Token = "0x40007D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public bool isLeft;

		[Token(Token = "0x40007DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public IKSolverVR.Arm arm;

		[Token(Token = "0x40007DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector3[] positions;

		[Token(Token = "0x40007DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Quaternion[] rotations;

		[Token(Token = "0x6000846")]
		[Address(RVA = "0x15742C4", Offset = "0x15742C4", VA = "0x15742C4", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000847")]
		[Address(RVA = "0x1574660", Offset = "0x1574660", VA = "0x1574660")]
		public bool SetChain(Transform chest, Transform shoulder, Transform upperArm, Transform forearm, Transform hand, Transform root)
		{
			return default(bool);
		}

		[Token(Token = "0x6000848")]
		[Address(RVA = "0x15746CC", Offset = "0x15746CC", VA = "0x15746CC", Slot = "6")]
		public override Point[] GetPoints()
		{
			return null;
		}

		[Token(Token = "0x6000849")]
		[Address(RVA = "0x1574824", Offset = "0x1574824", VA = "0x1574824", Slot = "7")]
		public override Point GetPoint(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x600084A")]
		[Address(RVA = "0x15749B8", Offset = "0x15749B8", VA = "0x15749B8", Slot = "9")]
		public override void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x600084B")]
		[Address(RVA = "0x1574A14", Offset = "0x1574A14", VA = "0x1574A14", Slot = "8")]
		public override void FixTransforms()
		{
		}

		[Token(Token = "0x600084C")]
		[Address(RVA = "0x1574A84", Offset = "0x1574A84", VA = "0x1574A84", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x600084D")]
		[Address(RVA = "0x1574DF4", Offset = "0x1574DF4", VA = "0x1574DF4", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x600084E")]
		[Address(RVA = "0x1574E20", Offset = "0x1574E20", VA = "0x1574E20")]
		private void Solve()
		{
		}

		[Token(Token = "0x600084F")]
		[Address(RVA = "0x1574AE8", Offset = "0x1574AE8", VA = "0x1574AE8")]
		private void Read()
		{
		}

		[Token(Token = "0x6000850")]
		[Address(RVA = "0x1574E8C", Offset = "0x1574E8C", VA = "0x1574E8C")]
		private void Write()
		{
		}

		[Token(Token = "0x6000851")]
		[Address(RVA = "0x1575018", Offset = "0x1575018", VA = "0x1575018")]
		public IKSolverArm()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200010E")]
	public class IKSolverCCD : IKSolverHeuristic
	{
		[Token(Token = "0x40007DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public IterationDelegate OnPreIteration;

		[Token(Token = "0x6000852")]
		[Address(RVA = "0x157517C", Offset = "0x157517C", VA = "0x157517C")]
		public void FadeOutBoneWeights()
		{
		}

		[Token(Token = "0x6000853")]
		[Address(RVA = "0x157522C", Offset = "0x157522C", VA = "0x157522C", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x6000854")]
		[Address(RVA = "0x15752B0", Offset = "0x15752B0", VA = "0x15752B0", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6000855")]
		[Address(RVA = "0x15754E0", Offset = "0x15754E0", VA = "0x15754E0")]
		protected void Solve(Vector3 targetPosition)
		{
		}

		[Token(Token = "0x6000856")]
		[Address(RVA = "0x1575ABC", Offset = "0x1575ABC", VA = "0x1575ABC")]
		public IKSolverCCD()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200010F")]
	public class IKSolverFABRIK : IKSolverHeuristic
	{
		[Token(Token = "0x40007DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public IterationDelegate OnPreIteration;

		[Token(Token = "0x40007DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool[] limitedBones;

		[Token(Token = "0x40007E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3[] solverLocalPositions;

		[Token(Token = "0x170000C1")]
		protected override bool boneLengthCanBeZero
		{
			[Token(Token = "0x600085C")]
			[Address(RVA = "0x1CB7D74", Offset = "0x1CB7D74", VA = "0x1CB7D74", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000857")]
		[Address(RVA = "0x1CB6668", Offset = "0x1CB6668", VA = "0x1CB6668")]
		public void SolveForward(Vector3 position)
		{
		}

		[Token(Token = "0x6000858")]
		[Address(RVA = "0x1CB6C28", Offset = "0x1CB6C28", VA = "0x1CB6C28")]
		public void SolveBackward(Vector3 position)
		{
		}

		[Token(Token = "0x6000859")]
		[Address(RVA = "0x1CB6D64", Offset = "0x1CB6D64", VA = "0x1CB6D64", Slot = "5")]
		public override Vector3 GetIKPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600085A")]
		[Address(RVA = "0x1CB6DF8", Offset = "0x1CB6DF8", VA = "0x1CB6DF8", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x600085B")]
		[Address(RVA = "0x1CB7748", Offset = "0x1CB7748", VA = "0x1CB7748", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x600085D")]
		[Address(RVA = "0x1CB7D7C", Offset = "0x1CB7D7C", VA = "0x1CB7D7C")]
		private Vector3 SolveJoint(Vector3 pos1, Vector3 pos2, float length)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600085E")]
		[Address(RVA = "0x1CB6740", Offset = "0x1CB6740", VA = "0x1CB6740")]
		private void OnPreSolve()
		{
		}

		[Token(Token = "0x600085F")]
		[Address(RVA = "0x1CB6D10", Offset = "0x1CB6D10", VA = "0x1CB6D10")]
		private void OnPostSolve()
		{
		}

		[Token(Token = "0x6000860")]
		[Address(RVA = "0x1CB7D18", Offset = "0x1CB7D18", VA = "0x1CB7D18")]
		private void Solve(Vector3 targetPosition)
		{
		}

		[Token(Token = "0x6000861")]
		[Address(RVA = "0x1CB6A9C", Offset = "0x1CB6A9C", VA = "0x1CB6A9C")]
		private void ForwardReach(Vector3 position)
		{
		}

		[Token(Token = "0x6000862")]
		[Address(RVA = "0x1CB83CC", Offset = "0x1CB83CC", VA = "0x1CB83CC")]
		private void SolverMove(int index, Vector3 offset)
		{
		}

		[Token(Token = "0x6000863")]
		[Address(RVA = "0x1CB8440", Offset = "0x1CB8440", VA = "0x1CB8440")]
		private void SolverRotate(int index, Quaternion rotation, bool recursive)
		{
		}

		[Token(Token = "0x6000864")]
		[Address(RVA = "0x1CB8508", Offset = "0x1CB8508", VA = "0x1CB8508")]
		private void SolverRotateChildren(int index, Quaternion rotation)
		{
		}

		[Token(Token = "0x6000865")]
		[Address(RVA = "0x1CB85B8", Offset = "0x1CB85B8", VA = "0x1CB85B8")]
		private void SolverMoveChildrenAroundPoint(int index, Quaternion rotation)
		{
		}

		[Token(Token = "0x6000866")]
		[Address(RVA = "0x1CB74F8", Offset = "0x1CB74F8", VA = "0x1CB74F8")]
		private Quaternion GetParentSolverRotation(int index)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000867")]
		[Address(RVA = "0x1CB7620", Offset = "0x1CB7620", VA = "0x1CB7620")]
		private Vector3 GetParentSolverPosition(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000868")]
		[Address(RVA = "0x1CB86BC", Offset = "0x1CB86BC", VA = "0x1CB86BC")]
		private Quaternion GetLimitedRotation(int index, Quaternion q, out bool changed)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000869")]
		[Address(RVA = "0x1CB7F9C", Offset = "0x1CB7F9C", VA = "0x1CB7F9C")]
		private void LimitForward(int rotateBone, int limitBone)
		{
		}

		[Token(Token = "0x600086A")]
		[Address(RVA = "0x1CB6D00", Offset = "0x1CB6D00", VA = "0x1CB6D00")]
		private void BackwardReach(Vector3 position)
		{
		}

		[Token(Token = "0x600086B")]
		[Address(RVA = "0x1CB8C4C", Offset = "0x1CB8C4C", VA = "0x1CB8C4C")]
		private void BackwardReachUnlimited(Vector3 position)
		{
		}

		[Token(Token = "0x600086C")]
		[Address(RVA = "0x1CB8800", Offset = "0x1CB8800", VA = "0x1CB8800")]
		private void BackwardReachLimited(Vector3 position)
		{
		}

		[Token(Token = "0x600086D")]
		[Address(RVA = "0x1CB7DF8", Offset = "0x1CB7DF8", VA = "0x1CB7DF8")]
		private void MapToSolverPositions()
		{
		}

		[Token(Token = "0x600086E")]
		[Address(RVA = "0x1CB7ED8", Offset = "0x1CB7ED8", VA = "0x1CB7ED8")]
		private void MapToSolverPositionsLimited()
		{
		}

		[Token(Token = "0x600086F")]
		[Address(RVA = "0x1CB8D18", Offset = "0x1CB8D18", VA = "0x1CB8D18")]
		public IKSolverFABRIK()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000110")]
	public class IKSolverFABRIKRoot : IKSolver
	{
		[Token(Token = "0x40007E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int iterations;

		[Token(Token = "0x40007E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D39D8", Offset = "0x8D39D8")]
		public float rootPin;

		[Token(Token = "0x40007E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public FABRIKChain[] chains;

		[Token(Token = "0x40007E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool zeroWeightApplied;

		[Token(Token = "0x40007E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool[] isRoot;

		[Token(Token = "0x40007E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 rootDefaultPosition;

		[Token(Token = "0x6000870")]
		[Address(RVA = "0x1CB8E00", Offset = "0x1CB8E00", VA = "0x1CB8E00", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000871")]
		[Address(RVA = "0x1CB9440", Offset = "0x1CB9440", VA = "0x1CB9440", Slot = "9")]
		public override void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6000872")]
		[Address(RVA = "0x1CB94D8", Offset = "0x1CB94D8", VA = "0x1CB94D8", Slot = "8")]
		public override void FixTransforms()
		{
		}

		[Token(Token = "0x6000873")]
		[Address(RVA = "0x1CB9578", Offset = "0x1CB9578", VA = "0x1CB9578", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x6000874")]
		[Address(RVA = "0x1CB9674", Offset = "0x1CB9674", VA = "0x1CB9674")]
		private bool IsRoot(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000875")]
		[Address(RVA = "0x1CB9710", Offset = "0x1CB9710", VA = "0x1CB9710", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6000876")]
		[Address(RVA = "0x1CB9B40", Offset = "0x1CB9B40", VA = "0x1CB9B40", Slot = "6")]
		public override Point[] GetPoints()
		{
			return null;
		}

		[Token(Token = "0x6000877")]
		[Address(RVA = "0x1CB9D38", Offset = "0x1CB9D38", VA = "0x1CB9D38", Slot = "7")]
		public override Point GetPoint(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x6000878")]
		[Address(RVA = "0x1CB9BEC", Offset = "0x1CB9BEC", VA = "0x1CB9BEC")]
		private void AddPointsToArray(ref Point[] array, FABRIKChain chain)
		{
		}

		[Token(Token = "0x6000879")]
		[Address(RVA = "0x1CB98FC", Offset = "0x1CB98FC", VA = "0x1CB98FC")]
		private Vector3 GetCentroid()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600087A")]
		[Address(RVA = "0x1CB9DD0", Offset = "0x1CB9DD0", VA = "0x1CB9DD0")]
		public IKSolverFABRIKRoot()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000111")]
	public class IKSolverFullBody : IKSolver
	{
		[Token(Token = "0x40007E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D39F0", Offset = "0x8D39F0")]
		public int iterations;

		[Token(Token = "0x40007E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public FBIKChain[] chain;

		[Token(Token = "0x40007E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public IKEffector[] effectors;

		[Token(Token = "0x40007EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public IKMappingSpine spineMapping;

		[Token(Token = "0x40007EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public IKMappingBone[] boneMappings;

		[Token(Token = "0x40007EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public IKMappingLimb[] limbMappings;

		[Token(Token = "0x40007ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool FABRIKPass;

		[Token(Token = "0x40007EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public UpdateDelegate OnPreRead;

		[Token(Token = "0x40007EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public UpdateDelegate OnPreSolve;

		[Token(Token = "0x40007F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public IterationDelegate OnPreIteration;

		[Token(Token = "0x40007F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public IterationDelegate OnPostIteration;

		[Token(Token = "0x40007F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public UpdateDelegate OnPreBend;

		[Token(Token = "0x40007F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public UpdateDelegate OnPostSolve;

		[Token(Token = "0x40007F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public UpdateDelegate OnStoreDefaultLocalState;

		[Token(Token = "0x40007F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public UpdateDelegate OnFixTransforms;

		[Token(Token = "0x600087B")]
		[Address(RVA = "0x1CB9E34", Offset = "0x1CB9E34", VA = "0x1CB9E34")]
		public IKEffector GetEffector(Transform t)
		{
			return null;
		}

		[Token(Token = "0x600087C")]
		[Address(RVA = "0x1CB9F24", Offset = "0x1CB9F24", VA = "0x1CB9F24")]
		public FBIKChain GetChain(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x600087D")]
		[Address(RVA = "0x1CB9F80", Offset = "0x1CB9F80", VA = "0x1CB9F80")]
		public int GetChainIndex(Transform transform)
		{
			return default(int);
		}

		[Token(Token = "0x600087E")]
		[Address(RVA = "0x1CBA0B0", Offset = "0x1CBA0B0", VA = "0x1CBA0B0")]
		public Node GetNode(int chainIndex, int nodeIndex)
		{
			return null;
		}

		[Token(Token = "0x600087F")]
		[Address(RVA = "0x1CBA10C", Offset = "0x1CBA10C", VA = "0x1CBA10C")]
		public void GetChainAndNodeIndexes(Transform transform, out int chainIndex, out int nodeIndex)
		{
		}

		[Token(Token = "0x6000880")]
		[Address(RVA = "0x1CBA18C", Offset = "0x1CBA18C", VA = "0x1CBA18C", Slot = "6")]
		public override Point[] GetPoints()
		{
			return null;
		}

		[Token(Token = "0x6000881")]
		[Address(RVA = "0x1CBA330", Offset = "0x1CBA330", VA = "0x1CBA330", Slot = "7")]
		public override Point GetPoint(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x6000882")]
		[Address(RVA = "0x1CBA4A0", Offset = "0x1CBA4A0", VA = "0x1CBA4A0", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000883")]
		[Address(RVA = "0x1CBA6AC", Offset = "0x1CBA6AC", VA = "0x1CBA6AC", Slot = "9")]
		public override void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6000884")]
		[Address(RVA = "0x1CBA784", Offset = "0x1CBA784", VA = "0x1CBA784", Slot = "8")]
		public override void FixTransforms()
		{
		}

		[Token(Token = "0x6000885")]
		[Address(RVA = "0x1CBA870", Offset = "0x1CBA870", VA = "0x1CBA870", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x6000886")]
		[Address(RVA = "0x1CBA9E4", Offset = "0x1CBA9E4", VA = "0x1CBA9E4", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6000887")]
		[Address(RVA = "0x1CBAB3C", Offset = "0x1CBAB3C", VA = "0x1CBAB3C", Slot = "12")]
		protected virtual void ReadPose()
		{
		}

		[Token(Token = "0x6000888")]
		[Address(RVA = "0x1CBAD88", Offset = "0x1CBAD88", VA = "0x1CBAD88", Slot = "13")]
		protected virtual void Solve()
		{
		}

		[Token(Token = "0x6000889")]
		[Address(RVA = "0x1CBB064", Offset = "0x1CBB064", VA = "0x1CBB064", Slot = "14")]
		protected virtual void ApplyBendConstraints()
		{
		}

		[Token(Token = "0x600088A")]
		[Address(RVA = "0x1CBB0A8", Offset = "0x1CBB0A8", VA = "0x1CBB0A8", Slot = "15")]
		protected virtual void WritePose()
		{
		}

		[Token(Token = "0x600088B")]
		[Address(RVA = "0x1CBB198", Offset = "0x1CBB198", VA = "0x1CBB198")]
		public IKSolverFullBody()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000112")]
	public enum FullBodyBipedEffector
	{
		[Token(Token = "0x40007F7")]
		Body,
		[Token(Token = "0x40007F8")]
		LeftShoulder,
		[Token(Token = "0x40007F9")]
		RightShoulder,
		[Token(Token = "0x40007FA")]
		LeftThigh,
		[Token(Token = "0x40007FB")]
		RightThigh,
		[Token(Token = "0x40007FC")]
		LeftHand,
		[Token(Token = "0x40007FD")]
		RightHand,
		[Token(Token = "0x40007FE")]
		LeftFoot,
		[Token(Token = "0x40007FF")]
		RightFoot
	}
	[Serializable]
	[Token(Token = "0x2000113")]
	public enum FullBodyBipedChain
	{
		[Token(Token = "0x4000801")]
		LeftArm,
		[Token(Token = "0x4000802")]
		RightArm,
		[Token(Token = "0x4000803")]
		LeftLeg,
		[Token(Token = "0x4000804")]
		RightLeg
	}
	[Serializable]
	[Token(Token = "0x2000114")]
	public class IKSolverFullBodyBiped : IKSolverFullBody
	{
		[Token(Token = "0x4000805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Transform rootNode;

		[Token(Token = "0x4000806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D3A08", Offset = "0x8D3A08")]
		public float spineStiffness;

		[Token(Token = "0x4000807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D3A20", Offset = "0x8D3A20")]
		public float pullBodyVertical;

		[Token(Token = "0x4000808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D3A38", Offset = "0x8D3A38")]
		public float pullBodyHorizontal;

		[Token(Token = "0x4000809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D3A50", Offset = "0x8D3A50")]
		private Vector3 <pullBodyOffset>k__BackingField;

		[Token(Token = "0x400080A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Vector3 offset;

		[Token(Token = "0x170000C2")]
		public IKEffector bodyEffector
		{
			[Token(Token = "0x600088C")]
			[Address(RVA = "0x1CBB29C", Offset = "0x1CBB29C", VA = "0x1CBB29C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C3")]
		public IKEffector leftShoulderEffector
		{
			[Token(Token = "0x600088D")]
			[Address(RVA = "0x1CBB3E4", Offset = "0x1CBB3E4", VA = "0x1CBB3E4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C4")]
		public IKEffector rightShoulderEffector
		{
			[Token(Token = "0x600088E")]
			[Address(RVA = "0x1CBB3EC", Offset = "0x1CBB3EC", VA = "0x1CBB3EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C5")]
		public IKEffector leftThighEffector
		{
			[Token(Token = "0x600088F")]
			[Address(RVA = "0x1CBB3F4", Offset = "0x1CBB3F4", VA = "0x1CBB3F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C6")]
		public IKEffector rightThighEffector
		{
			[Token(Token = "0x6000890")]
			[Address(RVA = "0x1CBB3FC", Offset = "0x1CBB3FC", VA = "0x1CBB3FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C7")]
		public IKEffector leftHandEffector
		{
			[Token(Token = "0x6000891")]
			[Address(RVA = "0x1CBB404", Offset = "0x1CBB404", VA = "0x1CBB404")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C8")]
		public IKEffector rightHandEffector
		{
			[Token(Token = "0x6000892")]
			[Address(RVA = "0x1CBB40C", Offset = "0x1CBB40C", VA = "0x1CBB40C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C9")]
		public IKEffector leftFootEffector
		{
			[Token(Token = "0x6000893")]
			[Address(RVA = "0x1CBB414", Offset = "0x1CBB414", VA = "0x1CBB414")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CA")]
		public IKEffector rightFootEffector
		{
			[Token(Token = "0x6000894")]
			[Address(RVA = "0x1CBB41C", Offset = "0x1CBB41C", VA = "0x1CBB41C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CB")]
		public FBIKChain leftArmChain
		{
			[Token(Token = "0x6000895")]
			[Address(RVA = "0x1CBB424", Offset = "0x1CBB424", VA = "0x1CBB424")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CC")]
		public FBIKChain rightArmChain
		{
			[Token(Token = "0x6000896")]
			[Address(RVA = "0x1CBB45C", Offset = "0x1CBB45C", VA = "0x1CBB45C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CD")]
		public FBIKChain leftLegChain
		{
			[Token(Token = "0x6000897")]
			[Address(RVA = "0x1CBB494", Offset = "0x1CBB494", VA = "0x1CBB494")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CE")]
		public FBIKChain rightLegChain
		{
			[Token(Token = "0x6000898")]
			[Address(RVA = "0x1CBB4CC", Offset = "0x1CBB4CC", VA = "0x1CBB4CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CF")]
		public IKMappingLimb leftArmMapping
		{
			[Token(Token = "0x6000899")]
			[Address(RVA = "0x1CBB504", Offset = "0x1CBB504", VA = "0x1CBB504")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D0")]
		public IKMappingLimb rightArmMapping
		{
			[Token(Token = "0x600089A")]
			[Address(RVA = "0x1CBB538", Offset = "0x1CBB538", VA = "0x1CBB538")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D1")]
		public IKMappingLimb leftLegMapping
		{
			[Token(Token = "0x600089B")]
			[Address(RVA = "0x1CBB570", Offset = "0x1CBB570", VA = "0x1CBB570")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D2")]
		public IKMappingLimb rightLegMapping
		{
			[Token(Token = "0x600089C")]
			[Address(RVA = "0x1CBB5A8", Offset = "0x1CBB5A8", VA = "0x1CBB5A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D3")]
		public IKMappingBone headMapping
		{
			[Token(Token = "0x600089D")]
			[Address(RVA = "0x1CBB5E0", Offset = "0x1CBB5E0", VA = "0x1CBB5E0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D4")]
		public Vector3 pullBodyOffset
		{
			[Token(Token = "0x60008AD")]
			[Address(RVA = "0x1CBD4A8", Offset = "0x1CBD4A8", VA = "0x1CBD4A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF14C", Offset = "0x8DF14C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60008AE")]
			[Address(RVA = "0x1CBD4B4", Offset = "0x1CBD4B4", VA = "0x1CBD4B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF15C", Offset = "0x8DF15C")]
			private set
			{
			}
		}

		[Token(Token = "0x600089E")]
		[Address(RVA = "0x1CBB614", Offset = "0x1CBB614", VA = "0x1CBB614")]
		public void SetChainWeights(FullBodyBipedChain c, float pull, float reach = 0f)
		{
		}

		[Token(Token = "0x600089F")]
		[Address(RVA = "0x1CBB720", Offset = "0x1CBB720", VA = "0x1CBB720")]
		public void SetEffectorWeights(FullBodyBipedEffector effector, float positionWeight, float rotationWeight)
		{
		}

		[Token(Token = "0x60008A0")]
		[Address(RVA = "0x1CBB668", Offset = "0x1CBB668", VA = "0x1CBB668")]
		public FBIKChain GetChain(FullBodyBipedChain c)
		{
			return null;
		}

		[Token(Token = "0x60008A1")]
		[Address(RVA = "0x1CBB7AC", Offset = "0x1CBB7AC", VA = "0x1CBB7AC")]
		public FBIKChain GetChain(FullBodyBipedEffector effector)
		{
			return null;
		}

		[Token(Token = "0x60008A2")]
		[Address(RVA = "0x1CBB2A4", Offset = "0x1CBB2A4", VA = "0x1CBB2A4")]
		public IKEffector GetEffector(FullBodyBipedEffector effector)
		{
			return null;
		}

		[Token(Token = "0x60008A3")]
		[Address(RVA = "0x1CBB87C", Offset = "0x1CBB87C", VA = "0x1CBB87C")]
		public IKEffector GetEndEffector(FullBodyBipedChain c)
		{
			return null;
		}

		[Token(Token = "0x60008A4")]
		[Address(RVA = "0x1CBB934", Offset = "0x1CBB934", VA = "0x1CBB934")]
		public IKMappingLimb GetLimbMapping(FullBodyBipedChain chain)
		{
			return null;
		}

		[Token(Token = "0x60008A5")]
		[Address(RVA = "0x1CBB9E8", Offset = "0x1CBB9E8", VA = "0x1CBB9E8")]
		public IKMappingLimb GetLimbMapping(FullBodyBipedEffector effector)
		{
			return null;
		}

		[Token(Token = "0x60008A6")]
		[Address(RVA = "0x1CBBA9C", Offset = "0x1CBBA9C", VA = "0x1CBBA9C")]
		public IKMappingSpine GetSpineMapping()
		{
			return null;
		}

		[Token(Token = "0x60008A7")]
		[Address(RVA = "0x1CBBAA4", Offset = "0x1CBBAA4", VA = "0x1CBBAA4")]
		public IKMappingBone GetHeadMapping()
		{
			return null;
		}

		[Token(Token = "0x60008A8")]
		[Address(RVA = "0x1CBBAD8", Offset = "0x1CBBAD8", VA = "0x1CBBAD8")]
		public IKConstraintBend GetBendConstraint(FullBodyBipedChain limb)
		{
			return null;
		}

		[Token(Token = "0x60008A9")]
		[Address(RVA = "0x1CBBBA0", Offset = "0x1CBBBA0", VA = "0x1CBBBA0", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x60008AA")]
		[Address(RVA = "0x1CBBD44", Offset = "0x1CBBD44", VA = "0x1CBBD44")]
		public void SetToReferences(BipedReferences references, [Optional] Transform rootNode)
		{
		}

		[Token(Token = "0x60008AB")]
		[Address(RVA = "0x1CBCF24", Offset = "0x1CBCF24", VA = "0x1CBCF24")]
		public static Transform DetectRootNodeBone(BipedReferences references)
		{
			return null;
		}

		[Token(Token = "0x60008AC")]
		[Address(RVA = "0x1CBD338", Offset = "0x1CBD338", VA = "0x1CBD338")]
		public void SetLimbOrientations(BipedLimbOrientations o)
		{
		}

		[Token(Token = "0x60008AF")]
		[Address(RVA = "0x1CBD398", Offset = "0x1CBD398", VA = "0x1CBD398")]
		private void SetLimbOrientation(FullBodyBipedChain chain, BipedLimbOrientations.LimbOrientation limbOrientation)
		{
		}

		[Token(Token = "0x60008B0")]
		[Address(RVA = "0x1CBD1C0", Offset = "0x1CBD1C0", VA = "0x1CBD1C0")]
		private static Transform GetLeftClavicle(BipedReferences references)
		{
			return null;
		}

		[Token(Token = "0x60008B1")]
		[Address(RVA = "0x1CBD27C", Offset = "0x1CBD27C", VA = "0x1CBD27C")]
		private static Transform GetRightClavicle(BipedReferences references)
		{
			return null;
		}

		[Token(Token = "0x60008B2")]
		[Address(RVA = "0x1CBD4C0", Offset = "0x1CBD4C0", VA = "0x1CBD4C0")]
		private static bool Contains(Transform[] array, Transform transform)
		{
			return default(bool);
		}

		[Token(Token = "0x60008B3")]
		[Address(RVA = "0x1CBD598", Offset = "0x1CBD598", VA = "0x1CBD598", Slot = "12")]
		protected override void ReadPose()
		{
		}

		[Token(Token = "0x60008B4")]
		[Address(RVA = "0x1CBD694", Offset = "0x1CBD694", VA = "0x1CBD694")]
		private void PullBody()
		{
		}

		[Token(Token = "0x60008B5")]
		[Address(RVA = "0x1CBD7BC", Offset = "0x1CBD7BC", VA = "0x1CBD7BC")]
		private Vector3 GetBodyOffset()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60008B6")]
		[Address(RVA = "0x1CBD900", Offset = "0x1CBD900", VA = "0x1CBD900")]
		private Vector3 GetHandBodyPull(IKEffector effector, FBIKChain arm, Vector3 offset)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60008B7")]
		[Address(RVA = "0x1CBDA30", Offset = "0x1CBDA30", VA = "0x1CBDA30", Slot = "14")]
		protected override void ApplyBendConstraints()
		{
		}

		[Token(Token = "0x60008B8")]
		[Address(RVA = "0x1CBDC70", Offset = "0x1CBDC70", VA = "0x1CBDC70", Slot = "15")]
		protected override void WritePose()
		{
		}

		[Token(Token = "0x60008B9")]
		[Address(RVA = "0x1CBDCF4", Offset = "0x1CBDCF4", VA = "0x1CBDCF4")]
		public IKSolverFullBodyBiped()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000115")]
	public class IKSolverHeuristic : IKSolver
	{
		[Token(Token = "0x400080B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform target;

		[Token(Token = "0x400080C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float tolerance;

		[Token(Token = "0x400080D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public int maxIterations;

		[Token(Token = "0x400080E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool useRotationLimits;

		[Token(Token = "0x400080F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		public bool XY;

		[Token(Token = "0x4000810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Bone[] bones;

		[Token(Token = "0x4000811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected Vector3 lastLocalDirection;

		[Token(Token = "0x4000812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		protected float chainLength;

		[Token(Token = "0x170000D5")]
		protected virtual int minBones
		{
			[Token(Token = "0x60008C1")]
			[Address(RVA = "0x1CBE560", Offset = "0x1CBE560", VA = "0x1CBE560", Slot = "12")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000D6")]
		protected virtual bool boneLengthCanBeZero
		{
			[Token(Token = "0x60008C2")]
			[Address(RVA = "0x1CBE568", Offset = "0x1CBE568", VA = "0x1CBE568", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000D7")]
		protected virtual bool allowCommonParent
		{
			[Token(Token = "0x60008C3")]
			[Address(RVA = "0x1CBE570", Offset = "0x1CBE570", VA = "0x1CBE570", Slot = "14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000D8")]
		protected virtual Vector3 localDirection
		{
			[Token(Token = "0x60008C7")]
			[Address(RVA = "0x1CBE580", Offset = "0x1CBE580", VA = "0x1CBE580", Slot = "15")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170000D9")]
		protected float positionOffset
		{
			[Token(Token = "0x60008C8")]
			[Address(RVA = "0x1CB7CC4", Offset = "0x1CB7CC4", VA = "0x1CB7CC4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60008BA")]
		[Address(RVA = "0x1CBDD00", Offset = "0x1CBDD00", VA = "0x1CBDD00")]
		public bool SetChain(Transform[] hierarchy, Transform root)
		{
			return default(bool);
		}

		[Token(Token = "0x60008BB")]
		[Address(RVA = "0x1CBDE9C", Offset = "0x1CBDE9C", VA = "0x1CBDE9C")]
		public void AddBone(Transform bone)
		{
		}

		[Token(Token = "0x60008BC")]
		[Address(RVA = "0x1CBDFD4", Offset = "0x1CBDFD4", VA = "0x1CBDFD4", Slot = "9")]
		public override void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x60008BD")]
		[Address(RVA = "0x1CBE040", Offset = "0x1CBE040", VA = "0x1CBE040", Slot = "8")]
		public override void FixTransforms()
		{
		}

		[Token(Token = "0x60008BE")]
		[Address(RVA = "0x1CBE0C0", Offset = "0x1CBE0C0", VA = "0x1CBE0C0", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x60008BF")]
		[Address(RVA = "0x1CBE468", Offset = "0x1CBE468", VA = "0x1CBE468", Slot = "6")]
		public override Point[] GetPoints()
		{
			return null;
		}

		[Token(Token = "0x60008C0")]
		[Address(RVA = "0x1CBE470", Offset = "0x1CBE470", VA = "0x1CBE470", Slot = "7")]
		public override Point GetPoint(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x60008C4")]
		[Address(RVA = "0x1CBE578", Offset = "0x1CBE578", VA = "0x1CBE578", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x60008C5")]
		[Address(RVA = "0x1CBE57C", Offset = "0x1CBE57C", VA = "0x1CBE57C", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x60008C6")]
		[Address(RVA = "0x1CB7080", Offset = "0x1CB7080", VA = "0x1CB7080")]
		protected void InitiateBones()
		{
		}

		[Token(Token = "0x60008C9")]
		[Address(RVA = "0x1CB79AC", Offset = "0x1CB79AC", VA = "0x1CB79AC")]
		protected Vector3 GetSingularityOffset()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60008CA")]
		[Address(RVA = "0x1CBE648", Offset = "0x1CBE648", VA = "0x1CBE648")]
		private bool SingularityDetected()
		{
			return default(bool);
		}

		[Token(Token = "0x60008CB")]
		[Address(RVA = "0x1CB8D94", Offset = "0x1CB8D94", VA = "0x1CB8D94")]
		public IKSolverHeuristic()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000116")]
	public class IKSolverLeg : IKSolver
	{
		[Token(Token = "0x4000813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D3A60", Offset = "0x8D3A60")]
		public float IKRotationWeight;

		[Token(Token = "0x4000814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Quaternion IKRotation;

		[Token(Token = "0x4000815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Point pelvis;

		[Token(Token = "0x4000816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Point thigh;

		[Token(Token = "0x4000817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Point calf;

		[Token(Token = "0x4000818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Point foot;

		[Token(Token = "0x4000819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Point toe;

		[Token(Token = "0x400081A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public IKSolverVR.Leg leg;

		[Token(Token = "0x400081B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Vector3 heelOffset;

		[Token(Token = "0x400081C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector3[] positions;

		[Token(Token = "0x400081D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Quaternion[] rotations;

		[Token(Token = "0x60008CC")]
		[Address(RVA = "0x1CBE83C", Offset = "0x1CBE83C", VA = "0x1CBE83C", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x60008CD")]
		[Address(RVA = "0x1CBEBDC", Offset = "0x1CBEBDC", VA = "0x1CBEBDC")]
		public bool SetChain(Transform pelvis, Transform thigh, Transform calf, Transform foot, Transform toe, Transform root)
		{
			return default(bool);
		}

		[Token(Token = "0x60008CE")]
		[Address(RVA = "0x1CBEC4C", Offset = "0x1CBEC4C", VA = "0x1CBEC4C", Slot = "6")]
		public override Point[] GetPoints()
		{
			return null;
		}

		[Token(Token = "0x60008CF")]
		[Address(RVA = "0x1CBEDA4", Offset = "0x1CBEDA4", VA = "0x1CBEDA4", Slot = "7")]
		public override Point GetPoint(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x60008D0")]
		[Address(RVA = "0x1CBEF38", Offset = "0x1CBEF38", VA = "0x1CBEF38", Slot = "9")]
		public override void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x60008D1")]
		[Address(RVA = "0x1CBEF94", Offset = "0x1CBEF94", VA = "0x1CBEF94", Slot = "8")]
		public override void FixTransforms()
		{
		}

		[Token(Token = "0x60008D2")]
		[Address(RVA = "0x1CBF004", Offset = "0x1CBF004", VA = "0x1CBF004", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x60008D3")]
		[Address(RVA = "0x1CBF374", Offset = "0x1CBF374", VA = "0x1CBF374", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x60008D4")]
		[Address(RVA = "0x1CBF3A0", Offset = "0x1CBF3A0", VA = "0x1CBF3A0")]
		private void Solve()
		{
		}

		[Token(Token = "0x60008D5")]
		[Address(RVA = "0x1CBF068", Offset = "0x1CBF068", VA = "0x1CBF068")]
		private void Read()
		{
		}

		[Token(Token = "0x60008D6")]
		[Address(RVA = "0x1CBF434", Offset = "0x1CBF434", VA = "0x1CBF434")]
		private void Write()
		{
		}

		[Token(Token = "0x60008D7")]
		[Address(RVA = "0x1CBF5C0", Offset = "0x1CBF5C0", VA = "0x1CBF5C0")]
		public IKSolverLeg()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000117")]
	public class IKSolverLimb : IKSolverTrigonometric
	{
		[Serializable]
		[Token(Token = "0x2000118")]
		public enum BendModifier
		{
			[Token(Token = "0x400082F")]
			Animation,
			[Token(Token = "0x4000830")]
			Target,
			[Token(Token = "0x4000831")]
			Parent,
			[Token(Token = "0x4000832")]
			Arm,
			[Token(Token = "0x4000833")]
			Goal
		}

		[Serializable]
		[Token(Token = "0x2000119")]
		public struct AxisDirection
		{
			[Token(Token = "0x4000834")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 direction;

			[Token(Token = "0x4000835")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 axis;

			[Token(Token = "0x4000836")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float dot;

			[Token(Token = "0x60008E2")]
			[Address(RVA = "0x1B39E04", Offset = "0x1B39E04", VA = "0x1B39E04")]
			public AxisDirection(Vector3 direction, Vector3 axis)
			{
			}
		}

		[Token(Token = "0x400081E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public AvatarIKGoal goal;

		[Token(Token = "0x400081F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public BendModifier bendModifier;

		[Token(Token = "0x4000820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D3A78", Offset = "0x8D3A78")]
		public float maintainRotationWeight;

		[Token(Token = "0x4000821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D3A90", Offset = "0x8D3A90")]
		public float bendModifierWeight;

		[Token(Token = "0x4000822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Transform bendGoal;

		[Token(Token = "0x4000823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool maintainBendFor1Frame;

		[Token(Token = "0x4000824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
		private bool maintainRotationFor1Frame;

		[Token(Token = "0x4000825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private Quaternion defaultRootRotation;

		[Token(Token = "0x4000826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private Quaternion parentDefaultRotation;

		[Token(Token = "0x4000827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private Quaternion bone3RotationBeforeSolve;

		[Token(Token = "0x4000828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private Quaternion maintainRotation;

		[Token(Token = "0x4000829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private Quaternion bone3DefaultRotation;

		[Token(Token = "0x400082A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private Vector3 _bendNormal;

		[Token(Token = "0x400082B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Vector3 animationNormal;

		[Token(Token = "0x400082C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private AxisDirection[] axisDirectionsLeft;

		[Token(Token = "0x400082D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private AxisDirection[] axisDirectionsRight;

		[Token(Token = "0x170000DA")]
		private AxisDirection[] axisDirections
		{
			[Token(Token = "0x60008DF")]
			[Address(RVA = "0x1CC083C", Offset = "0x1CC083C", VA = "0x1CC083C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008D8")]
		[Address(RVA = "0x1CBF718", Offset = "0x1CBF718", VA = "0x1CBF718")]
		public void MaintainRotation()
		{
		}

		[Token(Token = "0x60008D9")]
		[Address(RVA = "0x1CBF768", Offset = "0x1CBF768", VA = "0x1CBF768")]
		public void MaintainBend()
		{
		}

		[Token(Token = "0x60008DA")]
		[Address(RVA = "0x1CBF7B4", Offset = "0x1CBF7B4", VA = "0x1CBF7B4", Slot = "12")]
		protected override void OnInitiateVirtual()
		{
		}

		[Token(Token = "0x60008DB")]
		[Address(RVA = "0x1CBFC88", Offset = "0x1CBFC88", VA = "0x1CBFC88", Slot = "13")]
		protected override void OnUpdateVirtual()
		{
		}

		[Token(Token = "0x60008DC")]
		[Address(RVA = "0x1CC05D0", Offset = "0x1CC05D0", VA = "0x1CC05D0", Slot = "14")]
		protected override void OnPostSolveVirtual()
		{
		}

		[Token(Token = "0x60008DD")]
		[Address(RVA = "0x1CC067C", Offset = "0x1CC067C", VA = "0x1CC067C")]
		public IKSolverLimb()
		{
		}

		[Token(Token = "0x60008DE")]
		[Address(RVA = "0x1CC07B8", Offset = "0x1CC07B8", VA = "0x1CC07B8")]
		public IKSolverLimb(AvatarIKGoal goal)
		{
		}

		[Token(Token = "0x60008E0")]
		[Address(RVA = "0x1CBFAB0", Offset = "0x1CBFAB0", VA = "0x1CBFAB0")]
		private void StoreAxisDirections(ref AxisDirection[] axisDirections)
		{
		}

		[Token(Token = "0x60008E1")]
		[Address(RVA = "0x1CBFD6C", Offset = "0x1CBFD6C", VA = "0x1CBFD6C")]
		private Vector3 GetModifiedBendNormal()
		{
			return default(Vector3);
		}
	}
	[Serializable]
	[Token(Token = "0x200011A")]
	public class IKSolverLookAt : IKSolver
	{
		[Serializable]
		[Token(Token = "0x200011B")]
		public class LookAtBone : Bone
		{
			[Token(Token = "0x4000847")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			public Vector3 baseForwardOffsetEuler;

			[Token(Token = "0x170000E1")]
			public Vector3 forward
			{
				[Token(Token = "0x6000901")]
				[Address(RVA = "0x1B3A090", Offset = "0x1B3A090", VA = "0x1B3A090")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x60008FD")]
			[Address(RVA = "0x1B39E64", Offset = "0x1B39E64", VA = "0x1B39E64")]
			public LookAtBone()
			{
			}

			[Token(Token = "0x60008FE")]
			[Address(RVA = "0x1B39E68", Offset = "0x1B39E68", VA = "0x1B39E68")]
			public LookAtBone(Transform transform)
			{
			}

			[Token(Token = "0x60008FF")]
			[Address(RVA = "0x1B39E90", Offset = "0x1B39E90", VA = "0x1B39E90")]
			public void Initiate(Transform root)
			{
			}

			[Token(Token = "0x6000900")]
			[Address(RVA = "0x1B39F88", Offset = "0x1B39F88", VA = "0x1B39F88")]
			public void LookAt(Vector3 direction, float weight)
			{
			}
		}

		[Token(Token = "0x4000837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform target;

		[Token(Token = "0x4000838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public LookAtBone[] spine;

		[Token(Token = "0x4000839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public LookAtBone head;

		[Token(Token = "0x400083A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public LookAtBone[] eyes;

		[Token(Token = "0x400083B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D3AA8", Offset = "0x8D3AA8")]
		public float bodyWeight;

		[Token(Token = "0x400083C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D3AC0", Offset = "0x8D3AC0")]
		public float headWeight;

		[Token(Token = "0x400083D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D3AD8", Offset = "0x8D3AD8")]
		public float eyesWeight;

		[Token(Token = "0x400083E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D3AF0", Offset = "0x8D3AF0")]
		public float clampWeight;

		[Token(Token = "0x400083F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D3B08", Offset = "0x8D3B08")]
		public float clampWeightHead;

		[Token(Token = "0x4000840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D3B20", Offset = "0x8D3B20")]
		public float clampWeightEyes;

		[Token(Token = "0x4000841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D3B38", Offset = "0x8D3B38")]
		public int clampSmoothing;

		[Token(Token = "0x4000842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public AnimationCurve spineWeightCurve;

		[Token(Token = "0x4000843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Vector3 spineTargetOffset;

		[Token(Token = "0x4000844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected Vector3[] spineForwards;

		[Token(Token = "0x4000845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected Vector3[] headForwards;

		[Token(Token = "0x4000846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected Vector3[] eyeForward;

		[Token(Token = "0x170000DB")]
		protected bool spineIsValid
		{
			[Token(Token = "0x60008F1")]
			[Address(RVA = "0x1CC0FDC", Offset = "0x1CC0FDC", VA = "0x1CC0FDC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000DC")]
		protected bool spineIsEmpty
		{
			[Token(Token = "0x60008F2")]
			[Address(RVA = "0x1CC11AC", Offset = "0x1CC11AC", VA = "0x1CC11AC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000DD")]
		protected bool headIsValid
		{
			[Token(Token = "0x60008F4")]
			[Address(RVA = "0x1CC10BC", Offset = "0x1CC10BC", VA = "0x1CC10BC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000DE")]
		protected bool headIsEmpty
		{
			[Token(Token = "0x60008F5")]
			[Address(RVA = "0x1CC11D0", Offset = "0x1CC11D0", VA = "0x1CC11D0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000DF")]
		protected bool eyesIsValid
		{
			[Token(Token = "0x60008F7")]
			[Address(RVA = "0x1CC10CC", Offset = "0x1CC10CC", VA = "0x1CC10CC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000E0")]
		protected bool eyesIsEmpty
		{
			[Token(Token = "0x60008F8")]
			[Address(RVA = "0x1CC1248", Offset = "0x1CC1248", VA = "0x1CC1248")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60008E3")]
		[Address(RVA = "0x1CC0858", Offset = "0x1CC0858", VA = "0x1CC0858")]
		public void SetLookAtWeight(float weight)
		{
		}

		[Token(Token = "0x60008E4")]
		[Address(RVA = "0x1CC0888", Offset = "0x1CC0888", VA = "0x1CC0888")]
		public void SetLookAtWeight(float weight, float bodyWeight)
		{
		}

		[Token(Token = "0x60008E5")]
		[Address(RVA = "0x1CC08E0", Offset = "0x1CC08E0", VA = "0x1CC08E0")]
		public void SetLookAtWeight(float weight, float bodyWeight, float headWeight)
		{
		}

		[Token(Token = "0x60008E6")]
		[Address(RVA = "0x1CC095C", Offset = "0x1CC095C", VA = "0x1CC095C")]
		public void SetLookAtWeight(float weight, float bodyWeight, float headWeight, float eyesWeight)
		{
		}

		[Token(Token = "0x60008E7")]
		[Address(RVA = "0x1CC09F4", Offset = "0x1CC09F4", VA = "0x1CC09F4")]
		public void SetLookAtWeight(float weight, float bodyWeight, float headWeight, float eyesWeight, float clampWeight)
		{
		}

		[Token(Token = "0x60008E8")]
		[Address(RVA = "0x1CC0AB4", Offset = "0x1CC0AB4", VA = "0x1CC0AB4")]
		public void SetLookAtWeight(float weight, float bodyWeight = 0f, float headWeight = 1f, float eyesWeight = 0.5f, float clampWeight = 0.5f, float clampWeightHead = 0.5f, float clampWeightEyes = 0.3f)
		{
		}

		[Token(Token = "0x60008E9")]
		[Address(RVA = "0x1CC0BB0", Offset = "0x1CC0BB0", VA = "0x1CC0BB0", Slot = "9")]
		public override void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x60008EA")]
		[Address(RVA = "0x1CC0CDC", Offset = "0x1CC0CDC", VA = "0x1CC0CDC", Slot = "8")]
		public override void FixTransforms()
		{
		}

		[Token(Token = "0x60008EB")]
		[Address(RVA = "0x1CC0E1C", Offset = "0x1CC0E1C", VA = "0x1CC0E1C", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x60008EC")]
		[Address(RVA = "0x1CC126C", Offset = "0x1CC126C", VA = "0x1CC126C", Slot = "6")]
		public override Point[] GetPoints()
		{
			return null;
		}

		[Token(Token = "0x60008ED")]
		[Address(RVA = "0x1CC14AC", Offset = "0x1CC14AC", VA = "0x1CC14AC", Slot = "7")]
		public override Point GetPoint(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x60008EE")]
		[Address(RVA = "0x1CC1648", Offset = "0x1CC1648", VA = "0x1CC1648")]
		public bool SetChain(Transform[] spine, Transform head, Transform[] eyes, Transform root)
		{
			return default(bool);
		}

		[Token(Token = "0x60008EF")]
		[Address(RVA = "0x1CC1878", Offset = "0x1CC1878", VA = "0x1CC1878", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x60008F0")]
		[Address(RVA = "0x1CC1B4C", Offset = "0x1CC1B4C", VA = "0x1CC1B4C", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x60008F3")]
		[Address(RVA = "0x1CC1C1C", Offset = "0x1CC1C1C", VA = "0x1CC1C1C")]
		protected void SolveSpine()
		{
		}

		[Token(Token = "0x60008F6")]
		[Address(RVA = "0x1CC1DBC", Offset = "0x1CC1DBC", VA = "0x1CC1DBC")]
		protected void SolveHead()
		{
		}

		[Token(Token = "0x60008F9")]
		[Address(RVA = "0x1CC1FE0", Offset = "0x1CC1FE0", VA = "0x1CC1FE0")]
		protected void SolveEyes()
		{
		}

		[Token(Token = "0x60008FA")]
		[Address(RVA = "0x1CC2394", Offset = "0x1CC2394", VA = "0x1CC2394")]
		protected Vector3[] GetForwards(ref Vector3[] forwards, Vector3 baseForward, Vector3 targetForward, int bones, float clamp)
		{
			return null;
		}

		[Token(Token = "0x60008FB")]
		[Address(RVA = "0x1CC16F4", Offset = "0x1CC16F4", VA = "0x1CC16F4")]
		protected void SetBones(Transform[] array, ref LookAtBone[] bones)
		{
		}

		[Token(Token = "0x60008FC")]
		[Address(RVA = "0x1CC2604", Offset = "0x1CC2604", VA = "0x1CC2604")]
		public IKSolverLookAt()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200011C")]
	public class IKSolverTrigonometric : IKSolver
	{
		[Serializable]
		[Token(Token = "0x200011D")]
		public class TrigonometricBone : Bone
		{
			[Token(Token = "0x4000851")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			private Quaternion targetToLocalSpace;

			[Token(Token = "0x4000852")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			private Vector3 defaultLocalBendNormal;

			[Token(Token = "0x6000919")]
			[Address(RVA = "0x1B3A0CC", Offset = "0x1B3A0CC", VA = "0x1B3A0CC")]
			public void Initiate(Vector3 childPosition, Vector3 bendNormal)
			{
			}

			[Token(Token = "0x600091A")]
			[Address(RVA = "0x1B3A1C8", Offset = "0x1B3A1C8", VA = "0x1B3A1C8")]
			public Quaternion GetRotation(Vector3 direction, Vector3 bendNormal)
			{
				return default(Quaternion);
			}

			[Token(Token = "0x600091B")]
			[Address(RVA = "0x1B3A1F8", Offset = "0x1B3A1F8", VA = "0x1B3A1F8")]
			public Vector3 GetBendNormalFromCurrentRotation()
			{
				return default(Vector3);
			}

			[Token(Token = "0x600091C")]
			[Address(RVA = "0x1B3A234", Offset = "0x1B3A234", VA = "0x1B3A234")]
			public TrigonometricBone()
			{
			}
		}

		[Token(Token = "0x4000848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform target;

		[Token(Token = "0x4000849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D3B50", Offset = "0x8D3B50")]
		public float IKRotationWeight;

		[Token(Token = "0x400084A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public Quaternion IKRotation;

		[Token(Token = "0x400084B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public Vector3 bendNormal;

		[Token(Token = "0x400084C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public TrigonometricBone bone1;

		[Token(Token = "0x400084D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public TrigonometricBone bone2;

		[Token(Token = "0x400084E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public TrigonometricBone bone3;

		[Token(Token = "0x400084F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected Vector3 weightIKPosition;

		[Token(Token = "0x4000850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		protected bool directHierarchy;

		[Token(Token = "0x6000902")]
		[Address(RVA = "0x1CC2810", Offset = "0x1CC2810", VA = "0x1CC2810")]
		public void SetBendGoalPosition(Vector3 goalPosition, float weight)
		{
		}

		[Token(Token = "0x6000903")]
		[Address(RVA = "0x1CC296C", Offset = "0x1CC296C", VA = "0x1CC296C")]
		public void SetBendPlaneToCurrent()
		{
		}

		[Token(Token = "0x6000904")]
		[Address(RVA = "0x1CC2AB0", Offset = "0x1CC2AB0", VA = "0x1CC2AB0")]
		public void SetIKRotation(Quaternion rotation)
		{
		}

		[Token(Token = "0x6000905")]
		[Address(RVA = "0x1CC2ABC", Offset = "0x1CC2ABC", VA = "0x1CC2ABC")]
		public void SetIKRotationWeight(float weight)
		{
		}

		[Token(Token = "0x6000906")]
		[Address(RVA = "0x1CC2AEC", Offset = "0x1CC2AEC", VA = "0x1CC2AEC")]
		public Quaternion GetIKRotation()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000907")]
		[Address(RVA = "0x1CC2AF8", Offset = "0x1CC2AF8", VA = "0x1CC2AF8")]
		public float GetIKRotationWeight()
		{
			return default(float);
		}

		[Token(Token = "0x6000908")]
		[Address(RVA = "0x1CC2B00", Offset = "0x1CC2B00", VA = "0x1CC2B00", Slot = "6")]
		public override Point[] GetPoints()
		{
			return null;
		}

		[Token(Token = "0x6000909")]
		[Address(RVA = "0x1CC2C00", Offset = "0x1CC2C00", VA = "0x1CC2C00", Slot = "7")]
		public override Point GetPoint(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x600090A")]
		[Address(RVA = "0x1CC2D1C", Offset = "0x1CC2D1C", VA = "0x1CC2D1C", Slot = "9")]
		public override void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x600090B")]
		[Address(RVA = "0x1CC2D68", Offset = "0x1CC2D68", VA = "0x1CC2D68", Slot = "8")]
		public override void FixTransforms()
		{
		}

		[Token(Token = "0x600090C")]
		[Address(RVA = "0x1CC2DC8", Offset = "0x1CC2DC8", VA = "0x1CC2DC8", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x600090D")]
		[Address(RVA = "0x1CC3190", Offset = "0x1CC3190", VA = "0x1CC3190")]
		public bool SetChain(Transform bone1, Transform bone2, Transform bone3, Transform root)
		{
			return default(bool);
		}

		[Token(Token = "0x600090E")]
		[Address(RVA = "0x1CC31E8", Offset = "0x1CC31E8", VA = "0x1CC31E8")]
		public static void Solve(Transform bone1, Transform bone2, Transform bone3, Vector3 targetPosition, Vector3 bendNormal, float weight)
		{
		}

		[Token(Token = "0x600090F")]
		[Address(RVA = "0x1CC35A4", Offset = "0x1CC35A4", VA = "0x1CC35A4")]
		private static Vector3 GetDirectionToBendPoint(Vector3 direction, float directionMag, Vector3 bendDirection, float sqrMag1, float sqrMag2)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000910")]
		[Address(RVA = "0x1CC370C", Offset = "0x1CC370C", VA = "0x1CC370C", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x6000911")]
		[Address(RVA = "0x1CC3874", Offset = "0x1CC3874", VA = "0x1CC3874")]
		private bool IsDirectHierarchy()
		{
			return default(bool);
		}

		[Token(Token = "0x6000912")]
		[Address(RVA = "0x1CC37E8", Offset = "0x1CC37E8", VA = "0x1CC37E8")]
		private void InitiateBones()
		{
		}

		[Token(Token = "0x6000913")]
		[Address(RVA = "0x1CC3978", Offset = "0x1CC3978", VA = "0x1CC3978", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6000914")]
		[Address(RVA = "0x1CC414C", Offset = "0x1CC414C", VA = "0x1CC414C", Slot = "12")]
		protected virtual void OnInitiateVirtual()
		{
		}

		[Token(Token = "0x6000915")]
		[Address(RVA = "0x1CC4150", Offset = "0x1CC4150", VA = "0x1CC4150", Slot = "13")]
		protected virtual void OnUpdateVirtual()
		{
		}

		[Token(Token = "0x6000916")]
		[Address(RVA = "0x1CC4154", Offset = "0x1CC4154", VA = "0x1CC4154", Slot = "14")]
		protected virtual void OnPostSolveVirtual()
		{
		}

		[Token(Token = "0x6000917")]
		[Address(RVA = "0x1CC3F64", Offset = "0x1CC3F64", VA = "0x1CC3F64")]
		protected Vector3 GetBendDirection(Vector3 IKPosition, Vector3 bendNormal)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000918")]
		[Address(RVA = "0x1CC06EC", Offset = "0x1CC06EC", VA = "0x1CC06EC")]
		public IKSolverTrigonometric()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200011E")]
	public class IKSolverVR : IKSolver
	{
		[Serializable]
		[Token(Token = "0x200011F")]
		public class Arm : BodyPart
		{
			[Serializable]
			[Token(Token = "0x2000120")]
			public enum ShoulderRotationMode
			{
				[Token(Token = "0x4000895")]
				YawPitch,
				[Token(Token = "0x4000896")]
				FromTo
			}

			[Token(Token = "0x4000877")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D3D54", Offset = "0x8D3D54")]
			public Transform target;

			[Token(Token = "0x4000878")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D3D8C", Offset = "0x8D3D8C")]
			public Transform bendGoal;

			[Token(Token = "0x4000879")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D3DC4", Offset = "0x8D3DC4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D3DC4", Offset = "0x8D3DC4")]
			public float positionWeight;

			[Token(Token = "0x400087A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D3E18", Offset = "0x8D3E18")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D3E18", Offset = "0x8D3E18")]
			public float rotationWeight;

			[Token(Token = "0x400087B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D3E6C", Offset = "0x8D3E6C")]
			public ShoulderRotationMode shoulderRotationMode;

			[Token(Token = "0x400087C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D3EA4", Offset = "0x8D3EA4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D3EA4", Offset = "0x8D3EA4")]
			public float shoulderRotationWeight;

			[Token(Token = "0x400087D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D3EF8", Offset = "0x8D3EF8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D3EF8", Offset = "0x8D3EF8")]
			public float shoulderTwistWeight;

			[Token(Token = "0x400087E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D3F4C", Offset = "0x8D3F4C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D3F4C", Offset = "0x8D3F4C")]
			public float bendGoalWeight;

			[Token(Token = "0x400087F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D3FA0", Offset = "0x8D3FA0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D3FA0", Offset = "0x8D3FA0")]
			public float swivelOffset;

			[Token(Token = "0x4000880")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D3FFC", Offset = "0x8D3FFC")]
			public Vector3 wristToPalmAxis;

			[Token(Token = "0x4000881")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D4034", Offset = "0x8D4034")]
			public Vector3 palmToThumbAxis;

			[Token(Token = "0x4000882")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D406C", Offset = "0x8D406C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D406C", Offset = "0x8D406C")]
			public float armLengthMlp;

			[Token(Token = "0x4000883")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D40C4", Offset = "0x8D40C4")]
			public AnimationCurve stretchCurve;

			[NonSerialized]
			[Token(Token = "0x4000884")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			[HideInInspector]
			public Vector3 IKPosition;

			[NonSerialized]
			[Token(Token = "0x4000885")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
			[HideInInspector]
			public Quaternion IKRotation;

			[NonSerialized]
			[Token(Token = "0x4000886")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
			[HideInInspector]
			public Vector3 bendDirection;

			[NonSerialized]
			[Token(Token = "0x4000887")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			[HideInInspector]
			public Vector3 handPositionOffset;

			[Token(Token = "0x4000888")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D413C", Offset = "0x8D413C")]
			private Vector3 <position>k__BackingField;

			[Token(Token = "0x4000889")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D414C", Offset = "0x8D414C")]
			private Quaternion <rotation>k__BackingField;

			[Token(Token = "0x400088A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
			private bool hasShoulder;

			[Token(Token = "0x400088B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
			private Vector3 chestForwardAxis;

			[Token(Token = "0x400088C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
			private Vector3 chestUpAxis;

			[Token(Token = "0x400088D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
			private Quaternion chestRotation;

			[Token(Token = "0x400088E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
			private Vector3 chestForward;

			[Token(Token = "0x400088F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
			private Vector3 chestUp;

			[Token(Token = "0x4000890")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
			private Quaternion forearmRelToUpperArm;

			[Token(Token = "0x4000891")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
			private Vector3 upperArmBendAxis;

			[Token(Token = "0x4000892")]
			private const float yawOffsetAngle = 45f;

			[Token(Token = "0x4000893")]
			private const float pitchOffsetAngle = -30f;

			[Token(Token = "0x170000E3")]
			public Vector3 position
			{
				[Token(Token = "0x600093B")]
				[Address(RVA = "0x1B3A238", Offset = "0x1B3A238", VA = "0x1B3A238")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF18C", Offset = "0x8DF18C")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x600093C")]
				[Address(RVA = "0x1B3A244", Offset = "0x1B3A244", VA = "0x1B3A244")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF19C", Offset = "0x8DF19C")]
				private set
				{
				}
			}

			[Token(Token = "0x170000E4")]
			public Quaternion rotation
			{
				[Token(Token = "0x600093D")]
				[Address(RVA = "0x1B3A250", Offset = "0x1B3A250", VA = "0x1B3A250")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF1AC", Offset = "0x8DF1AC")]
				get
				{
					return default(Quaternion);
				}
				[Token(Token = "0x600093E")]
				[Address(RVA = "0x1B3A25C", Offset = "0x1B3A25C", VA = "0x1B3A25C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF1BC", Offset = "0x8DF1BC")]
				private set
				{
				}
			}

			[Token(Token = "0x170000E5")]
			private VirtualBone shoulder
			{
				[Token(Token = "0x600093F")]
				[Address(RVA = "0x1B3A268", Offset = "0x1B3A268", VA = "0x1B3A268")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000E6")]
			private VirtualBone upperArm
			{
				[Token(Token = "0x6000940")]
				[Address(RVA = "0x1B3A29C", Offset = "0x1B3A29C", VA = "0x1B3A29C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000E7")]
			private VirtualBone forearm
			{
				[Token(Token = "0x6000941")]
				[Address(RVA = "0x1B3A2DC", Offset = "0x1B3A2DC", VA = "0x1B3A2DC")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000E8")]
			private VirtualBone hand
			{
				[Token(Token = "0x6000942")]
				[Address(RVA = "0x1B3A328", Offset = "0x1B3A328", VA = "0x1B3A328")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000943")]
			[Address(RVA = "0x1B3A374", Offset = "0x1B3A374", VA = "0x1B3A374", Slot = "4")]
			protected override void OnRead(Vector3[] positions, Quaternion[] rotations, bool hasChest, bool hasNeck, bool hasShoulders, bool hasToes, bool hasLegs, int rootIndex, int index)
			{
			}

			[Token(Token = "0x6000944")]
			[Address(RVA = "0x1B3AC54", Offset = "0x1B3AC54", VA = "0x1B3AC54", Slot = "5")]
			public override void PreSolve()
			{
			}

			[Token(Token = "0x6000945")]
			[Address(RVA = "0x1B3AE10", Offset = "0x1B3AE10", VA = "0x1B3AE10", Slot = "7")]
			public override void ApplyOffsets()
			{
			}

			[Token(Token = "0x6000946")]
			[Address(RVA = "0x1B3AE34", Offset = "0x1B3AE34", VA = "0x1B3AE34")]
			private void Stretching()
			{
			}

			[Token(Token = "0x6000947")]
			[Address(RVA = "0x1B3B0D4", Offset = "0x1B3B0D4", VA = "0x1B3B0D4")]
			public void Solve(bool isLeft)
			{
			}

			[Token(Token = "0x6000948")]
			[Address(RVA = "0x1B3CB54", Offset = "0x1B3CB54", VA = "0x1B3CB54", Slot = "8")]
			public override void ResetOffsets()
			{
			}

			[Token(Token = "0x6000949")]
			[Address(RVA = "0x1B3CB80", Offset = "0x1B3CB80", VA = "0x1B3CB80", Slot = "6")]
			public override void Write(ref Vector3[] solvedPositions, ref Quaternion[] solvedRotations)
			{
			}

			[Token(Token = "0x600094A")]
			[Address(RVA = "0x1B3C054", Offset = "0x1B3C054", VA = "0x1B3C054")]
			private float DamperValue(float value, float min, float max, float weight = 1f)
			{
				return default(float);
			}

			[Token(Token = "0x600094B")]
			[Address(RVA = "0x1B3C20C", Offset = "0x1B3C20C", VA = "0x1B3C20C")]
			private Vector3 GetBendNormal(Vector3 dir)
			{
				return default(Vector3);
			}

			[Token(Token = "0x600094C")]
			[Address(RVA = "0x1B3CDA0", Offset = "0x1B3CDA0", VA = "0x1B3CDA0")]
			private void Visualize(VirtualBone bone1, VirtualBone bone2, VirtualBone bone3, Color color)
			{
			}

			[Token(Token = "0x600094D")]
			[Address(RVA = "0x1B3CEC4", Offset = "0x1B3CEC4", VA = "0x1B3CEC4")]
			public Arm()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000121")]
		public abstract class BodyPart
		{
			[Token(Token = "0x4000897")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D415C", Offset = "0x8D415C")]
			private float <sqrMag>k__BackingField;

			[Token(Token = "0x4000898")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D416C", Offset = "0x8D416C")]
			private float <mag>k__BackingField;

			[Token(Token = "0x4000899")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[HideInInspector]
			public VirtualBone[] bones;

			[Token(Token = "0x400089A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			protected bool initiated;

			[Token(Token = "0x400089B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			protected Vector3 rootPosition;

			[Token(Token = "0x400089C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			protected Quaternion rootRotation;

			[Token(Token = "0x400089D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			protected int index;

			[Token(Token = "0x400089E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			protected int LOD;

			[Token(Token = "0x170000E9")]
			public float sqrMag
			{
				[Token(Token = "0x6000953")]
				[Address(RVA = "0x1B3D01C", Offset = "0x1B3D01C", VA = "0x1B3D01C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF1CC", Offset = "0x8DF1CC")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6000954")]
				[Address(RVA = "0x1B3D024", Offset = "0x1B3D024", VA = "0x1B3D024")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF1DC", Offset = "0x8DF1DC")]
				private set
				{
				}
			}

			[Token(Token = "0x170000EA")]
			public float mag
			{
				[Token(Token = "0x6000955")]
				[Address(RVA = "0x1B3D02C", Offset = "0x1B3D02C", VA = "0x1B3D02C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF1EC", Offset = "0x8DF1EC")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6000956")]
				[Address(RVA = "0x1B3D034", Offset = "0x1B3D034", VA = "0x1B3D034")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF1FC", Offset = "0x8DF1FC")]
				private set
				{
				}
			}

			[Token(Token = "0x600094E")]
			protected abstract void OnRead(Vector3[] positions, Quaternion[] rotations, bool hasChest, bool hasNeck, bool hasShoulders, bool hasToes, bool hasLegs, int rootIndex, int index);

			[Token(Token = "0x600094F")]
			public abstract void PreSolve();

			[Token(Token = "0x6000950")]
			public abstract void Write(ref Vector3[] solvedPositions, ref Quaternion[] solvedRotations);

			[Token(Token = "0x6000951")]
			public abstract void ApplyOffsets();

			[Token(Token = "0x6000952")]
			public abstract void ResetOffsets();

			[Token(Token = "0x6000957")]
			[Address(RVA = "0x1B3D03C", Offset = "0x1B3D03C", VA = "0x1B3D03C")]
			public void SetLOD(int LOD)
			{
			}

			[Token(Token = "0x6000958")]
			[Address(RVA = "0x1B3D044", Offset = "0x1B3D044", VA = "0x1B3D044")]
			public void Read(Vector3[] positions, Quaternion[] rotations, bool hasChest, bool hasNeck, bool hasShoulders, bool hasToes, bool hasLegs, int rootIndex, int index)
			{
			}

			[Token(Token = "0x6000959")]
			[Address(RVA = "0x1B3D304", Offset = "0x1B3D304", VA = "0x1B3D304")]
			public void MovePosition(Vector3 position)
			{
			}

			[Token(Token = "0x600095A")]
			[Address(RVA = "0x1B3D398", Offset = "0x1B3D398", VA = "0x1B3D398")]
			public void MoveRotation(Quaternion rotation)
			{
			}

			[Token(Token = "0x600095B")]
			[Address(RVA = "0x1B3D568", Offset = "0x1B3D568", VA = "0x1B3D568")]
			public void Translate(Vector3 position, Quaternion rotation)
			{
			}

			[Token(Token = "0x600095C")]
			[Address(RVA = "0x1B3D5BC", Offset = "0x1B3D5BC", VA = "0x1B3D5BC")]
			public void TranslateRoot(Vector3 newRootPos, Quaternion newRootRot)
			{
			}

			[Token(Token = "0x600095D")]
			[Address(RVA = "0x1B3CA14", Offset = "0x1B3CA14", VA = "0x1B3CA14")]
			public void RotateTo(VirtualBone bone, Quaternion rotation, float weight = 1f)
			{
			}

			[Token(Token = "0x600095E")]
			[Address(RVA = "0x1B3D6F4", Offset = "0x1B3D6F4", VA = "0x1B3D6F4")]
			public void Visualize(Color color)
			{
			}

			[Token(Token = "0x600095F")]
			[Address(RVA = "0x1B3D834", Offset = "0x1B3D834", VA = "0x1B3D834")]
			public void Visualize()
			{
			}

			[Token(Token = "0x6000960")]
			[Address(RVA = "0x1B3CFA8", Offset = "0x1B3CFA8", VA = "0x1B3CFA8")]
			protected BodyPart()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000122")]
		public class Footstep
		{
			[Token(Token = "0x400089F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float stepSpeed;

			[Token(Token = "0x40008A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Vector3 characterSpaceOffset;

			[Token(Token = "0x40008A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 position;

			[Token(Token = "0x40008A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public Quaternion rotation;

			[Token(Token = "0x40008A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public Quaternion stepToRootRot;

			[Token(Token = "0x40008A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public bool isSupportLeg;

			[Token(Token = "0x40008A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D418C", Offset = "0x8D418C")]
			private float <stepProgress>k__BackingField;

			[Token(Token = "0x40008A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public Vector3 stepFrom;

			[Token(Token = "0x40008A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public Vector3 stepTo;

			[Token(Token = "0x40008A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			public Quaternion stepFromRot;

			[Token(Token = "0x40008A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
			public Quaternion stepToRot;

			[Token(Token = "0x40008AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
			private Quaternion footRelativeToRoot;

			[Token(Token = "0x40008AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
			private float supportLegW;

			[Token(Token = "0x40008AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			private float supportLegWV;

			[Token(Token = "0x170000EB")]
			public bool isStepping
			{
				[Token(Token = "0x6000961")]
				[Address(RVA = "0x1B3D85C", Offset = "0x1B3D85C", VA = "0x1B3D85C")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170000EC")]
			public float stepProgress
			{
				[Token(Token = "0x6000962")]
				[Address(RVA = "0x1B3D870", Offset = "0x1B3D870", VA = "0x1B3D870")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF20C", Offset = "0x8DF20C")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6000963")]
				[Address(RVA = "0x1B3D878", Offset = "0x1B3D878", VA = "0x1B3D878")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF21C", Offset = "0x8DF21C")]
				private set
				{
				}
			}

			[Token(Token = "0x6000964")]
			[Address(RVA = "0x1B3D880", Offset = "0x1B3D880", VA = "0x1B3D880")]
			public Footstep(Quaternion rootRotation, Vector3 footPosition, Quaternion footRotation, Vector3 characterSpaceOffset)
			{
			}

			[Token(Token = "0x6000965")]
			[Address(RVA = "0x1B3D9B8", Offset = "0x1B3D9B8", VA = "0x1B3D9B8")]
			public void Reset(Quaternion rootRotation, Vector3 footPosition, Quaternion footRotation)
			{
			}

			[Token(Token = "0x6000966")]
			[Address(RVA = "0x1B3DA00", Offset = "0x1B3DA00", VA = "0x1B3DA00")]
			public void StepTo(Vector3 p, Quaternion rootRotation, float stepThreshold)
			{
			}

			[Token(Token = "0x6000967")]
			[Address(RVA = "0x1B3DBC4", Offset = "0x1B3DBC4", VA = "0x1B3DBC4")]
			public void UpdateStepping(Vector3 p, Quaternion rootRotation, float speed)
			{
			}

			[Token(Token = "0x6000968")]
			[Address(RVA = "0x1B3DD38", Offset = "0x1B3DD38", VA = "0x1B3DD38")]
			public void UpdateStanding(Quaternion rootRotation, float minAngle, float speed)
			{
			}

			[Token(Token = "0x6000969")]
			[Address(RVA = "0x1B3DE90", Offset = "0x1B3DE90", VA = "0x1B3DE90")]
			public void Update(InterpolationMode interpolation, UnityEvent onStep)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000123")]
		public class Leg : BodyPart
		{
			[Token(Token = "0x40008AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D419C", Offset = "0x8D419C")]
			public Transform target;

			[Token(Token = "0x40008AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D41D4", Offset = "0x8D41D4")]
			public Transform bendGoal;

			[Token(Token = "0x40008AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D420C", Offset = "0x8D420C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D420C", Offset = "0x8D420C")]
			public float positionWeight;

			[Token(Token = "0x40008B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D4260", Offset = "0x8D4260")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D4260", Offset = "0x8D4260")]
			public float rotationWeight;

			[Token(Token = "0x40008B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D42B4", Offset = "0x8D42B4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D42B4", Offset = "0x8D42B4")]
			public float bendGoalWeight;

			[Token(Token = "0x40008B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D4308", Offset = "0x8D4308")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D4308", Offset = "0x8D4308")]
			public float swivelOffset;

			[Token(Token = "0x40008B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D4364", Offset = "0x8D4364")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D4364", Offset = "0x8D4364")]
			public float bendToTargetWeight;

			[Token(Token = "0x40008B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D43B8", Offset = "0x8D43B8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D43B8", Offset = "0x8D43B8")]
			public float legLengthMlp;

			[Token(Token = "0x40008B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D4410", Offset = "0x8D4410")]
			public AnimationCurve stretchCurve;

			[NonSerialized]
			[Token(Token = "0x40008B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			[HideInInspector]
			public Vector3 IKPosition;

			[NonSerialized]
			[Token(Token = "0x40008B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			[HideInInspector]
			public Quaternion IKRotation;

			[NonSerialized]
			[Token(Token = "0x40008B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
			[HideInInspector]
			public Vector3 footPositionOffset;

			[NonSerialized]
			[Token(Token = "0x40008B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			[HideInInspector]
			public Vector3 heelPositionOffset;

			[NonSerialized]
			[Token(Token = "0x40008BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
			[HideInInspector]
			public Quaternion footRotationOffset;

			[NonSerialized]
			[Token(Token = "0x40008BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
			[HideInInspector]
			public float currentMag;

			[Token(Token = "0x40008BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			[HideInInspector]
			public bool useAnimatedBendNormal;

			[Token(Token = "0x40008BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D44B8", Offset = "0x8D44B8")]
			private Vector3 <position>k__BackingField;

			[Token(Token = "0x40008BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D44C8", Offset = "0x8D44C8")]
			private Quaternion <rotation>k__BackingField;

			[Token(Token = "0x40008BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D44D8", Offset = "0x8D44D8")]
			private bool <hasToes>k__BackingField;

			[Token(Token = "0x40008C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D44E8", Offset = "0x8D44E8")]
			private Vector3 <thighRelativeToPelvis>k__BackingField;

			[Token(Token = "0x40008C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
			private Vector3 footPosition;

			[Token(Token = "0x40008C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
			private Quaternion footRotation;

			[Token(Token = "0x40008C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
			private Vector3 bendNormal;

			[Token(Token = "0x40008C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
			private Quaternion calfRelToThigh;

			[Token(Token = "0x40008C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
			private Quaternion thighRelToFoot;

			[Token(Token = "0x40008C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
			private Vector3 bendNormalRelToPelvis;

			[Token(Token = "0x40008C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
			private Vector3 bendNormalRelToTarget;

			[Token(Token = "0x170000ED")]
			public Vector3 position
			{
				[Token(Token = "0x600096A")]
				[Address(RVA = "0x1B3DFCC", Offset = "0x1B3DFCC", VA = "0x1B3DFCC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF22C", Offset = "0x8DF22C")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x600096B")]
				[Address(RVA = "0x1B3DFD8", Offset = "0x1B3DFD8", VA = "0x1B3DFD8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF23C", Offset = "0x8DF23C")]
				private set
				{
				}
			}

			[Token(Token = "0x170000EE")]
			public Quaternion rotation
			{
				[Token(Token = "0x600096C")]
				[Address(RVA = "0x1B3DFE4", Offset = "0x1B3DFE4", VA = "0x1B3DFE4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF24C", Offset = "0x8DF24C")]
				get
				{
					return default(Quaternion);
				}
				[Token(Token = "0x600096D")]
				[Address(RVA = "0x1B3DFF0", Offset = "0x1B3DFF0", VA = "0x1B3DFF0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF25C", Offset = "0x8DF25C")]
				private set
				{
				}
			}

			[Token(Token = "0x170000EF")]
			public bool hasToes
			{
				[Token(Token = "0x600096E")]
				[Address(RVA = "0x1B3DFFC", Offset = "0x1B3DFFC", VA = "0x1B3DFFC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF26C", Offset = "0x8DF26C")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x600096F")]
				[Address(RVA = "0x1B3E004", Offset = "0x1B3E004", VA = "0x1B3E004")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF27C", Offset = "0x8DF27C")]
				private set
				{
				}
			}

			[Token(Token = "0x170000F0")]
			public VirtualBone thigh
			{
				[Token(Token = "0x6000970")]
				[Address(RVA = "0x1B3E010", Offset = "0x1B3E010", VA = "0x1B3E010")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000F1")]
			private VirtualBone calf
			{
				[Token(Token = "0x6000971")]
				[Address(RVA = "0x1B3E044", Offset = "0x1B3E044", VA = "0x1B3E044")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000F2")]
			private VirtualBone foot
			{
				[Token(Token = "0x6000972")]
				[Address(RVA = "0x1B3E07C", Offset = "0x1B3E07C", VA = "0x1B3E07C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000F3")]
			private VirtualBone toes
			{
				[Token(Token = "0x6000973")]
				[Address(RVA = "0x1B3E0B4", Offset = "0x1B3E0B4", VA = "0x1B3E0B4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000F4")]
			public VirtualBone lastBone
			{
				[Token(Token = "0x6000974")]
				[Address(RVA = "0x1B3E0EC", Offset = "0x1B3E0EC", VA = "0x1B3E0EC")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000F5")]
			public Vector3 thighRelativeToPelvis
			{
				[Token(Token = "0x6000975")]
				[Address(RVA = "0x1B3E12C", Offset = "0x1B3E12C", VA = "0x1B3E12C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF28C", Offset = "0x8DF28C")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6000976")]
				[Address(RVA = "0x1B3E138", Offset = "0x1B3E138", VA = "0x1B3E138")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF29C", Offset = "0x8DF29C")]
				private set
				{
				}
			}

			[Token(Token = "0x6000977")]
			[Address(RVA = "0x1B3E144", Offset = "0x1B3E144", VA = "0x1B3E144", Slot = "4")]
			protected override void OnRead(Vector3[] positions, Quaternion[] rotations, bool hasChest, bool hasNeck, bool hasShoulders, bool hasToes, bool hasLegs, int rootIndex, int index)
			{
			}

			[Token(Token = "0x6000978")]
			[Address(RVA = "0x1B3E720", Offset = "0x1B3E720", VA = "0x1B3E720", Slot = "5")]
			public override void PreSolve()
			{
			}

			[Token(Token = "0x6000979")]
			[Address(RVA = "0x1B3ECDC", Offset = "0x1B3ECDC", VA = "0x1B3ECDC", Slot = "7")]
			public override void ApplyOffsets()
			{
			}

			[Token(Token = "0x600097A")]
			[Address(RVA = "0x1B3EC8C", Offset = "0x1B3EC8C", VA = "0x1B3EC8C")]
			private void ApplyPositionOffset(Vector3 offset, float weight)
			{
			}

			[Token(Token = "0x600097B")]
			[Address(RVA = "0x1B3EB1C", Offset = "0x1B3EB1C", VA = "0x1B3EB1C")]
			private void ApplyRotationOffset(Quaternion offset, float weight)
			{
			}

			[Token(Token = "0x600097C")]
			[Address(RVA = "0x1B3F0C4", Offset = "0x1B3F0C4", VA = "0x1B3F0C4")]
			public void Solve(bool stretch)
			{
			}

			[Token(Token = "0x600097D")]
			[Address(RVA = "0x1B3F56C", Offset = "0x1B3F56C", VA = "0x1B3F56C")]
			private void FixTwistRotations()
			{
			}

			[Token(Token = "0x600097E")]
			[Address(RVA = "0x1B3F24C", Offset = "0x1B3F24C", VA = "0x1B3F24C")]
			private void Stretching()
			{
			}

			[Token(Token = "0x600097F")]
			[Address(RVA = "0x1B3F864", Offset = "0x1B3F864", VA = "0x1B3F864", Slot = "6")]
			public override void Write(ref Vector3[] solvedPositions, ref Quaternion[] solvedRotations)
			{
			}

			[Token(Token = "0x6000980")]
			[Address(RVA = "0x1B3FA80", Offset = "0x1B3FA80", VA = "0x1B3FA80", Slot = "8")]
			public override void ResetOffsets()
			{
			}

			[Token(Token = "0x6000981")]
			[Address(RVA = "0x1B3FACC", Offset = "0x1B3FACC", VA = "0x1B3FACC")]
			public Leg()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000124")]
		public class Locomotion
		{
			[Token(Token = "0x40008C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D44F8", Offset = "0x8D44F8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D44F8", Offset = "0x8D44F8")]
			public float weight;

			[Token(Token = "0x40008C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D454C", Offset = "0x8D454C")]
			public float footDistance;

			[Token(Token = "0x40008CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D4584", Offset = "0x8D4584")]
			public float stepThreshold;

			[Token(Token = "0x40008CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D45BC", Offset = "0x8D45BC")]
			public float angleThreshold;

			[Token(Token = "0x40008CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D45F4", Offset = "0x8D45F4")]
			public float comAngleMlp;

			[Token(Token = "0x40008CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D462C", Offset = "0x8D462C")]
			public float maxVelocity;

			[Token(Token = "0x40008CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D4664", Offset = "0x8D4664")]
			public float velocityFactor;

			[Token(Token = "0x40008CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D469C", Offset = "0x8D469C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D469C", Offset = "0x8D469C")]
			public float maxLegStretch;

			[Token(Token = "0x40008D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D46F4", Offset = "0x8D46F4")]
			public float rootSpeed;

			[Token(Token = "0x40008D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D472C", Offset = "0x8D472C")]
			public float stepSpeed;

			[Token(Token = "0x40008D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D4764", Offset = "0x8D4764")]
			public AnimationCurve stepHeight;

			[Token(Token = "0x40008D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D479C", Offset = "0x8D479C")]
			public AnimationCurve heelHeight;

			[Token(Token = "0x40008D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D47D4", Offset = "0x8D47D4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D47D4", Offset = "0x8D47D4")]
			public float relaxLegTwistMinAngle;

			[Token(Token = "0x40008D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D482C", Offset = "0x8D482C")]
			public float relaxLegTwistSpeed;

			[Token(Token = "0x40008D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D4864", Offset = "0x8D4864")]
			public InterpolationMode stepInterpolation;

			[Token(Token = "0x40008D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D489C", Offset = "0x8D489C")]
			public Vector3 offset;

			[Token(Token = "0x40008D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[HideInInspector]
			public bool blockingEnabled;

			[Token(Token = "0x40008D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			[HideInInspector]
			public LayerMask blockingLayers;

			[Token(Token = "0x40008DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			[HideInInspector]
			public float raycastRadius;

			[Token(Token = "0x40008DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			[HideInInspector]
			public float raycastHeight;

			[Token(Token = "0x40008DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D4914", Offset = "0x8D4914")]
			public UnityEvent onLeftFootstep;

			[Token(Token = "0x40008DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D494C", Offset = "0x8D494C")]
			public UnityEvent onRightFootstep;

			[Token(Token = "0x40008DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4984", Offset = "0x8D4984")]
			private Vector3 <centerOfMass>k__BackingField;

			[Token(Token = "0x40008DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			private Footstep[] footsteps;

			[Token(Token = "0x40008E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			private Vector3 lastComPosition;

			[Token(Token = "0x40008E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
			private Vector3 comVelocity;

			[Token(Token = "0x40008E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			private int leftFootIndex;

			[Token(Token = "0x40008E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
			private int rightFootIndex;

			[Token(Token = "0x170000F6")]
			public Vector3 centerOfMass
			{
				[Token(Token = "0x6000982")]
				[Address(RVA = "0x1B3FB9C", Offset = "0x1B3FB9C", VA = "0x1B3FB9C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF2AC", Offset = "0x8DF2AC")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6000983")]
				[Address(RVA = "0x1B3FBA8", Offset = "0x1B3FBA8", VA = "0x1B3FBA8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF2BC", Offset = "0x8DF2BC")]
				private set
				{
				}
			}

			[Token(Token = "0x170000F7")]
			public Vector3 leftFootstepPosition
			{
				[Token(Token = "0x6000989")]
				[Address(RVA = "0x1B41694", Offset = "0x1B41694", VA = "0x1B41694")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x170000F8")]
			public Vector3 rightFootstepPosition
			{
				[Token(Token = "0x600098A")]
				[Address(RVA = "0x1B416D4", Offset = "0x1B416D4", VA = "0x1B416D4")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x170000F9")]
			public Quaternion leftFootstepRotation
			{
				[Token(Token = "0x600098B")]
				[Address(RVA = "0x1B41718", Offset = "0x1B41718", VA = "0x1B41718")]
				get
				{
					return default(Quaternion);
				}
			}

			[Token(Token = "0x170000FA")]
			public Quaternion rightFootstepRotation
			{
				[Token(Token = "0x600098C")]
				[Address(RVA = "0x1B41758", Offset = "0x1B41758", VA = "0x1B41758")]
				get
				{
					return default(Quaternion);
				}
			}

			[Token(Token = "0x6000984")]
			[Address(RVA = "0x1B3FBB4", Offset = "0x1B3FBB4", VA = "0x1B3FBB4")]
			public void Initiate(Vector3[] positions, Quaternion[] rotations, bool hasToes)
			{
			}

			[Token(Token = "0x6000985")]
			[Address(RVA = "0x1B3FE54", Offset = "0x1B3FE54", VA = "0x1B3FE54")]
			public void Reset(Vector3[] positions, Quaternion[] rotations)
			{
			}

			[Token(Token = "0x6000986")]
			[Address(RVA = "0x1B40024", Offset = "0x1B40024", VA = "0x1B40024")]
			public void AddDeltaRotation(Quaternion delta, Vector3 pivot)
			{
			}

			[Token(Token = "0x6000987")]
			[Address(RVA = "0x1B4026C", Offset = "0x1B4026C", VA = "0x1B4026C")]
			public void AddDeltaPosition(Vector3 delta)
			{
			}

			[Token(Token = "0x6000988")]
			[Address(RVA = "0x1B40330", Offset = "0x1B40330", VA = "0x1B40330")]
			public void Solve(VirtualBone rootBone, Spine spine, Leg leftLeg, Leg rightLeg, Arm leftArm, Arm rightArm, int supportLegIndex, out Vector3 leftFootPosition, out Vector3 rightFootPosition, out Quaternion leftFootRotation, out Quaternion rightFootRotation, out float leftFootOffset, out float rightFootOffset, out float leftHeelOffset, out float rightHeelOffset)
			{
			}

			[Token(Token = "0x600098D")]
			[Address(RVA = "0x1B4140C", Offset = "0x1B4140C", VA = "0x1B4140C")]
			private bool StepBlocked(Vector3 fromPosition, Vector3 toPosition, Vector3 rootPosition)
			{
				return default(bool);
			}

			[Token(Token = "0x600098E")]
			[Address(RVA = "0x1B41544", Offset = "0x1B41544", VA = "0x1B41544")]
			private bool CanStep()
			{
				return default(bool);
			}

			[Token(Token = "0x600098F")]
			[Address(RVA = "0x1B415C8", Offset = "0x1B415C8", VA = "0x1B415C8")]
			private static bool GetLineSphereCollision(Vector3 lineStart, Vector3 lineEnd, Vector3 sphereCenter, float sphereRadius)
			{
				return default(bool);
			}

			[Token(Token = "0x6000990")]
			[Address(RVA = "0x1B4179C", Offset = "0x1B4179C", VA = "0x1B4179C")]
			public Locomotion()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000125")]
		public class Spine : BodyPart
		{
			[Token(Token = "0x40008E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D4994", Offset = "0x8D4994")]
			public Transform headTarget;

			[Token(Token = "0x40008E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D49CC", Offset = "0x8D49CC")]
			public Transform pelvisTarget;

			[Token(Token = "0x40008E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D4A04", Offset = "0x8D4A04")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D4A04", Offset = "0x8D4A04")]
			public float positionWeight;

			[Token(Token = "0x40008E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D4A58", Offset = "0x8D4A58")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D4A58", Offset = "0x8D4A58")]
			public float rotationWeight;

			[Token(Token = "0x40008E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D4AAC", Offset = "0x8D4AAC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D4AAC", Offset = "0x8D4AAC")]
			public float pelvisPositionWeight;

			[Token(Token = "0x40008E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D4B00", Offset = "0x8D4B00")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D4B00", Offset = "0x8D4B00")]
			public float pelvisRotationWeight;

			[Token(Token = "0x40008EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D4B54", Offset = "0x8D4B54")]
			public Transform chestGoal;

			[Token(Token = "0x40008EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D4B8C", Offset = "0x8D4B8C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D4B8C", Offset = "0x8D4B8C")]
			public float chestGoalWeight;

			[Token(Token = "0x40008EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D4BE0", Offset = "0x8D4BE0")]
			public float minHeadHeight;

			[Token(Token = "0x40008ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D4C18", Offset = "0x8D4C18")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D4C18", Offset = "0x8D4C18")]
			public float bodyPosStiffness;

			[Token(Token = "0x40008EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D4C6C", Offset = "0x8D4C6C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D4C6C", Offset = "0x8D4C6C")]
			public float bodyRotStiffness;

			[Token(Token = "0x40008EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D4CC0", Offset = "0x8D4CC0")]
			[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8D4CC0", Offset = "0x8D4CC0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D4CC0", Offset = "0x8D4CC0")]
			public float neckStiffness;

			[Token(Token = "0x40008F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D4D38", Offset = "0x8D4D38")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D4D38", Offset = "0x8D4D38")]
			public float rotateChestByHands;

			[Token(Token = "0x40008F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D4D8C", Offset = "0x8D4D8C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D4D8C", Offset = "0x8D4D8C")]
			public float chestClampWeight;

			[Token(Token = "0x40008F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D4DE0", Offset = "0x8D4DE0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D4DE0", Offset = "0x8D4DE0")]
			public float headClampWeight;

			[Token(Token = "0x40008F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D4E34", Offset = "0x8D4E34")]
			public float moveBodyBackWhenCrouching;

			[Token(Token = "0x40008F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D4E6C", Offset = "0x8D4E6C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D4E6C", Offset = "0x8D4E6C")]
			public float maintainPelvisPosition;

			[Token(Token = "0x40008F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D4EC0", Offset = "0x8D4EC0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D4EC0", Offset = "0x8D4EC0")]
			public float maxRootAngle;

			[Token(Token = "0x40008F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D4F18", Offset = "0x8D4F18")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D4F18", Offset = "0x8D4F18")]
			public float rootHeadingOffset;

			[NonSerialized]
			[Token(Token = "0x40008F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			[HideInInspector]
			public Vector3 IKPositionHead;

			[NonSerialized]
			[Token(Token = "0x40008F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
			[HideInInspector]
			public Quaternion IKRotationHead;

			[NonSerialized]
			[Token(Token = "0x40008F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
			[HideInInspector]
			public Vector3 IKPositionPelvis;

			[NonSerialized]
			[Token(Token = "0x40008FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			[HideInInspector]
			public Quaternion IKRotationPelvis;

			[NonSerialized]
			[Token(Token = "0x40008FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			[HideInInspector]
			public Vector3 goalPositionChest;

			[NonSerialized]
			[Token(Token = "0x40008FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
			[HideInInspector]
			public Vector3 pelvisPositionOffset;

			[NonSerialized]
			[Token(Token = "0x40008FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
			[HideInInspector]
			public Vector3 chestPositionOffset;

			[NonSerialized]
			[Token(Token = "0x40008FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
			[HideInInspector]
			public Vector3 headPositionOffset;

			[NonSerialized]
			[Token(Token = "0x40008FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
			[HideInInspector]
			public Quaternion pelvisRotationOffset;

			[NonSerialized]
			[Token(Token = "0x4000900")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
			[HideInInspector]
			public Quaternion chestRotationOffset;

			[NonSerialized]
			[Token(Token = "0x4000901")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
			[HideInInspector]
			public Quaternion headRotationOffset;

			[NonSerialized]
			[Token(Token = "0x4000902")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
			[HideInInspector]
			public Vector3 faceDirection;

			[NonSerialized]
			[Token(Token = "0x4000903")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
			[HideInInspector]
			public Vector3 locomotionHeadPositionOffset;

			[NonSerialized]
			[Token(Token = "0x4000904")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
			[HideInInspector]
			public Vector3 headPosition;

			[Token(Token = "0x4000905")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5054", Offset = "0x8D5054")]
			private Quaternion <anchorRotation>k__BackingField;

			[Token(Token = "0x4000906")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5064", Offset = "0x8D5064")]
			private Quaternion <anchorRelativeToHead>k__BackingField;

			[Token(Token = "0x4000907")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
			private Quaternion headRotation;

			[Token(Token = "0x4000908")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
			private Quaternion pelvisRotation;

			[Token(Token = "0x4000909")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
			private Quaternion anchorRelativeToPelvis;

			[Token(Token = "0x400090A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
			private Quaternion pelvisRelativeRotation;

			[Token(Token = "0x400090B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
			private Quaternion chestRelativeRotation;

			[Token(Token = "0x400090C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
			private Vector3 headDeltaPosition;

			[Token(Token = "0x400090D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
			private Quaternion pelvisDeltaRotation;

			[Token(Token = "0x400090E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
			private Quaternion chestTargetRotation;

			[Token(Token = "0x400090F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
			private int pelvisIndex;

			[Token(Token = "0x4000910")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
			private int spineIndex;

			[Token(Token = "0x4000911")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
			private int chestIndex;

			[Token(Token = "0x4000912")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
			private int neckIndex;

			[Token(Token = "0x4000913")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
			private int headIndex;

			[Token(Token = "0x4000914")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
			private float length;

			[Token(Token = "0x4000915")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
			private bool hasChest;

			[Token(Token = "0x4000916")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x211")]
			private bool hasNeck;

			[Token(Token = "0x4000917")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x212")]
			private bool hasLegs;

			[Token(Token = "0x4000918")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
			private float headHeight;

			[Token(Token = "0x4000919")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
			private float sizeMlp;

			[Token(Token = "0x400091A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
			private Vector3 chestForward;

			[Token(Token = "0x170000FB")]
			public VirtualBone pelvis
			{
				[Token(Token = "0x6000991")]
				[Address(RVA = "0x1B4138C", Offset = "0x1B4138C", VA = "0x1B4138C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000FC")]
			public VirtualBone firstSpineBone
			{
				[Token(Token = "0x6000992")]
				[Address(RVA = "0x1B41888", Offset = "0x1B41888", VA = "0x1B41888")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000FD")]
			public VirtualBone chest
			{
				[Token(Token = "0x6000993")]
				[Address(RVA = "0x1B418C8", Offset = "0x1B418C8", VA = "0x1B418C8")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000FE")]
			private VirtualBone neck
			{
				[Token(Token = "0x6000994")]
				[Address(RVA = "0x1B4191C", Offset = "0x1B4191C", VA = "0x1B4191C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000FF")]
			public VirtualBone head
			{
				[Token(Token = "0x6000995")]
				[Address(RVA = "0x1B413CC", Offset = "0x1B413CC", VA = "0x1B413CC")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000100")]
			public Quaternion anchorRotation
			{
				[Token(Token = "0x6000996")]
				[Address(RVA = "0x1B4195C", Offset = "0x1B4195C", VA = "0x1B4195C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF2CC", Offset = "0x8DF2CC")]
				get
				{
					return default(Quaternion);
				}
				[Token(Token = "0x6000997")]
				[Address(RVA = "0x1B41970", Offset = "0x1B41970", VA = "0x1B41970")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF2DC", Offset = "0x8DF2DC")]
				private set
				{
				}
			}

			[Token(Token = "0x17000101")]
			public Quaternion anchorRelativeToHead
			{
				[Token(Token = "0x6000998")]
				[Address(RVA = "0x1B41984", Offset = "0x1B41984", VA = "0x1B41984")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF2EC", Offset = "0x8DF2EC")]
				get
				{
					return default(Quaternion);
				}
				[Token(Token = "0x6000999")]
				[Address(RVA = "0x1B41998", Offset = "0x1B41998", VA = "0x1B41998")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF2FC", Offset = "0x8DF2FC")]
				private set
				{
				}
			}

			[Token(Token = "0x600099A")]
			[Address(RVA = "0x1B419AC", Offset = "0x1B419AC", VA = "0x1B419AC", Slot = "4")]
			protected override void OnRead(Vector3[] positions, Quaternion[] rotations, bool hasChest, bool hasNeck, bool hasShoulders, bool hasToes, bool hasLegs, int rootIndex, int index)
			{
			}

			[Token(Token = "0x600099B")]
			[Address(RVA = "0x1B423B8", Offset = "0x1B423B8", VA = "0x1B423B8", Slot = "5")]
			public override void PreSolve()
			{
			}

			[Token(Token = "0x600099C")]
			[Address(RVA = "0x1B425C4", Offset = "0x1B425C4", VA = "0x1B425C4", Slot = "7")]
			public override void ApplyOffsets()
			{
			}

			[Token(Token = "0x600099D")]
			[Address(RVA = "0x1B42A08", Offset = "0x1B42A08", VA = "0x1B42A08")]
			private void CalculateChestTargetRotation(VirtualBone rootBone, Arm[] arms)
			{
			}

			[Token(Token = "0x600099E")]
			[Address(RVA = "0x1B42E44", Offset = "0x1B42E44", VA = "0x1B42E44")]
			public void Solve(VirtualBone rootBone, Leg[] legs, Arm[] arms)
			{
			}

			[Token(Token = "0x600099F")]
			[Address(RVA = "0x1B43598", Offset = "0x1B43598", VA = "0x1B43598")]
			private void FABRIKPass(Vector3 animatedPelvisPos, Vector3 rootUp, float weight)
			{
			}

			[Token(Token = "0x60009A0")]
			[Address(RVA = "0x1B43C18", Offset = "0x1B43C18", VA = "0x1B43C18")]
			private void SolvePelvis()
			{
			}

			[Token(Token = "0x60009A1")]
			[Address(RVA = "0x1B44218", Offset = "0x1B44218", VA = "0x1B44218", Slot = "6")]
			public override void Write(ref Vector3[] solvedPositions, ref Quaternion[] solvedRotations)
			{
			}

			[Token(Token = "0x60009A2")]
			[Address(RVA = "0x1B443F4", Offset = "0x1B443F4", VA = "0x1B443F4", Slot = "8")]
			public override void ResetOffsets()
			{
			}

			[Token(Token = "0x60009A3")]
			[Address(RVA = "0x1B42BA0", Offset = "0x1B42BA0", VA = "0x1B42BA0")]
			private void AdjustChestByHands(ref Quaternion chestTargetRotation, Arm[] arms)
			{
			}

			[Token(Token = "0x60009A4")]
			[Address(RVA = "0x1B43968", Offset = "0x1B43968", VA = "0x1B43968")]
			public void InverseTranslateToHead(Leg[] legs, bool limited, bool useCurrentLegMag, Vector3 offset, float w)
			{
			}

			[Token(Token = "0x60009A5")]
			[Address(RVA = "0x1B43254", Offset = "0x1B43254", VA = "0x1B43254")]
			private void TranslatePelvis(Leg[] legs, Vector3 deltaPosition, Quaternion deltaRotation)
			{
			}

			[Token(Token = "0x60009A6")]
			[Address(RVA = "0x1B4448C", Offset = "0x1B4448C", VA = "0x1B4448C")]
			private Vector3 LimitPelvisPosition(Leg[] legs, Vector3 pelvisPosition, bool useCurrentLegMag, int it = 2)
			{
				return default(Vector3);
			}

			[Token(Token = "0x60009A7")]
			[Address(RVA = "0x1B43A44", Offset = "0x1B43A44", VA = "0x1B43A44")]
			private void Bend(VirtualBone[] bones, int firstIndex, int lastIndex, Quaternion targetRotation, float clampWeight, bool uniformWeight, float w)
			{
			}

			[Token(Token = "0x60009A8")]
			[Address(RVA = "0x1B43714", Offset = "0x1B43714", VA = "0x1B43714")]
			private void Bend(VirtualBone[] bones, int firstIndex, int lastIndex, Quaternion targetRotation, Quaternion rotationOffset, float clampWeight, bool uniformWeight, float w)
			{
			}

			[Token(Token = "0x60009A9")]
			[Address(RVA = "0x1B44680", Offset = "0x1B44680", VA = "0x1B44680")]
			public Spine()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000126")]
		public enum PositionOffset
		{
			[Token(Token = "0x400091C")]
			Pelvis,
			[Token(Token = "0x400091D")]
			Chest,
			[Token(Token = "0x400091E")]
			Head,
			[Token(Token = "0x400091F")]
			LeftHand,
			[Token(Token = "0x4000920")]
			RightHand,
			[Token(Token = "0x4000921")]
			LeftFoot,
			[Token(Token = "0x4000922")]
			RightFoot,
			[Token(Token = "0x4000923")]
			LeftHeel,
			[Token(Token = "0x4000924")]
			RightHeel
		}

		[Serializable]
		[Token(Token = "0x2000127")]
		public enum RotationOffset
		{
			[Token(Token = "0x4000926")]
			Pelvis,
			[Token(Token = "0x4000927")]
			Chest,
			[Token(Token = "0x4000928")]
			Head
		}

		[Serializable]
		[Token(Token = "0x2000128")]
		public class VirtualBone
		{
			[Token(Token = "0x4000929")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 readPosition;

			[Token(Token = "0x400092A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Quaternion readRotation;

			[Token(Token = "0x400092B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public Vector3 solverPosition;

			[Token(Token = "0x400092C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Quaternion solverRotation;

			[Token(Token = "0x400092D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public float length;

			[Token(Token = "0x400092E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public float sqrMag;

			[Token(Token = "0x400092F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Vector3 axis;

			[Token(Token = "0x60009AA")]
			[Address(RVA = "0x1B3ABB8", Offset = "0x1B3ABB8", VA = "0x1B3ABB8")]
			public VirtualBone(Vector3 position, Quaternion rotation)
			{
			}

			[Token(Token = "0x60009AB")]
			[Address(RVA = "0x1B3AC34", Offset = "0x1B3AC34", VA = "0x1B3AC34")]
			public void Read(Vector3 position, Quaternion rotation)
			{
			}

			[Token(Token = "0x60009AC")]
			[Address(RVA = "0x1B447F0", Offset = "0x1B447F0", VA = "0x1B447F0")]
			public static void SwingRotation(VirtualBone[] bones, int index, Vector3 swingTarget, float weight = 1f)
			{
			}

			[Token(Token = "0x60009AD")]
			[Address(RVA = "0x1B3D114", Offset = "0x1B3D114", VA = "0x1B3D114")]
			public static float PreSolve(ref VirtualBone[] bones)
			{
				return default(float);
			}

			[Token(Token = "0x60009AE")]
			[Address(RVA = "0x1B3D440", Offset = "0x1B3D440", VA = "0x1B3D440")]
			public static void RotateAroundPoint(VirtualBone[] bones, int index, Vector3 point, Quaternion rotation)
			{
			}

			[Token(Token = "0x60009AF")]
			[Address(RVA = "0x1B44974", Offset = "0x1B44974", VA = "0x1B44974")]
			public static void RotateBy(VirtualBone[] bones, int index, Quaternion rotation)
			{
			}

			[Token(Token = "0x60009B0")]
			[Address(RVA = "0x1B3C0D0", Offset = "0x1B3C0D0", VA = "0x1B3C0D0")]
			public static void RotateBy(VirtualBone[] bones, Quaternion rotation)
			{
			}

			[Token(Token = "0x60009B1")]
			[Address(RVA = "0x1B44AD4", Offset = "0x1B44AD4", VA = "0x1B44AD4")]
			public static void RotateTo(VirtualBone[] bones, int index, Quaternion rotation)
			{
			}

			[Token(Token = "0x60009B2")]
			[Address(RVA = "0x1B3C610", Offset = "0x1B3C610", VA = "0x1B3C610")]
			public static void SolveTrigonometric(VirtualBone[] bones, int first, int second, int third, Vector3 targetPosition, Vector3 bendNormal, float weight)
			{
			}

			[Token(Token = "0x60009B3")]
			[Address(RVA = "0x1B44B8C", Offset = "0x1B44B8C", VA = "0x1B44B8C")]
			private static Vector3 GetDirectionToBendPoint(Vector3 direction, float directionMag, Vector3 bendDirection, float sqrMag1, float sqrMag2)
			{
				return default(Vector3);
			}

			[Token(Token = "0x60009B4")]
			[Address(RVA = "0x1B43E88", Offset = "0x1B43E88", VA = "0x1B43E88")]
			public static void SolveFABRIK(VirtualBone[] bones, Vector3 startPosition, Vector3 targetPosition, float weight, float minNormalizedTargetDistance, int iterations, float length, Vector3 startOffset)
			{
			}

			[Token(Token = "0x60009B5")]
			[Address(RVA = "0x1B44CF4", Offset = "0x1B44CF4", VA = "0x1B44CF4")]
			private static Vector3 SolveFABRIKJoint(Vector3 pos1, Vector3 pos2, float length)
			{
				return default(Vector3);
			}

			[Token(Token = "0x60009B6")]
			[Address(RVA = "0x1B44D64", Offset = "0x1B44D64", VA = "0x1B44D64")]
			public static void SolveCCD(VirtualBone[] bones, Vector3 targetPosition, float weight, int iterations)
			{
			}
		}

		[Token(Token = "0x4000853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform[] solverTransforms;

		[Token(Token = "0x4000854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool hasChest;

		[Token(Token = "0x4000855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool hasNeck;

		[Token(Token = "0x4000856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		private bool hasShoulders;

		[Token(Token = "0x4000857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
		private bool hasToes;

		[Token(Token = "0x4000858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool hasLegs;

		[Token(Token = "0x4000859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3[] readPositions;

		[Token(Token = "0x400085A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Quaternion[] readRotations;

		[Token(Token = "0x400085B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3[] solvedPositions;

		[Token(Token = "0x400085C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Quaternion[] solvedRotations;

		[Token(Token = "0x400085D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Quaternion[] defaultLocalRotations;

		[Token(Token = "0x400085E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3[] defaultLocalPositions;

		[Token(Token = "0x400085F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 rootV;

		[Token(Token = "0x4000860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private Vector3 rootVelocity;

		[Token(Token = "0x4000861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector3 bodyOffset;

		[Token(Token = "0x4000862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private int supportLegIndex;

		[Token(Token = "0x4000863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private int lastLOD;

		[Token(Token = "0x4000864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D3B68", Offset = "0x8D3B68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D3B68", Offset = "0x8D3B68")]
		public int LOD;

		[Token(Token = "0x4000865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D3BBC", Offset = "0x8D3BBC")]
		public bool plantFeet;

		[Token(Token = "0x4000866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D3BF4", Offset = "0x8D3BF4")]
		private VirtualBone <rootBone>k__BackingField;

		[Token(Token = "0x4000867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D3C04", Offset = "0x8D3C04")]
		public Spine spine;

		[Token(Token = "0x4000868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D3C3C", Offset = "0x8D3C3C")]
		public Arm leftArm;

		[Token(Token = "0x4000869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D3C74", Offset = "0x8D3C74")]
		public Arm rightArm;

		[Token(Token = "0x400086A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D3CAC", Offset = "0x8D3CAC")]
		public Leg leftLeg;

		[Token(Token = "0x400086B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D3CE4", Offset = "0x8D3CE4")]
		public Leg rightLeg;

		[Token(Token = "0x400086C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D3D1C", Offset = "0x8D3D1C")]
		public Locomotion locomotion;

		[Token(Token = "0x400086D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Leg[] legs;

		[Token(Token = "0x400086E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private Arm[] arms;

		[Token(Token = "0x400086F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Vector3 headPosition;

		[Token(Token = "0x4000870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		private Vector3 headDeltaPosition;

		[Token(Token = "0x4000871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private Vector3 raycastOriginPelvis;

		[Token(Token = "0x4000872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private Vector3 lastOffset;

		[Token(Token = "0x4000873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private Vector3 debugPos1;

		[Token(Token = "0x4000874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		private Vector3 debugPos2;

		[Token(Token = "0x4000875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private Vector3 debugPos3;

		[Token(Token = "0x4000876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		private Vector3 debugPos4;

		[Token(Token = "0x170000E2")]
		[HideInInspector]
		public VirtualBone rootBone
		{
			[Token(Token = "0x6000936")]
			[Address(RVA = "0x1CC7A08", Offset = "0x1CC7A08", VA = "0x1CC7A08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF16C", Offset = "0x8DF16C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000937")]
			[Address(RVA = "0x1CC7A10", Offset = "0x1CC7A10", VA = "0x1CC7A10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF17C", Offset = "0x8DF17C")]
			private set
			{
			}
		}

		[Token(Token = "0x600091D")]
		[Address(RVA = "0x1CC4158", Offset = "0x1CC4158", VA = "0x1CC4158")]
		public void SetToReferences(VRIK.References references)
		{
		}

		[Token(Token = "0x600091E")]
		[Address(RVA = "0x1CC45BC", Offset = "0x1CC45BC", VA = "0x1CC45BC")]
		public void GuessHandOrientations(VRIK.References references, bool onlyIfZero)
		{
		}

		[Token(Token = "0x600091F")]
		[Address(RVA = "0x1CC4468", Offset = "0x1CC4468", VA = "0x1CC4468")]
		public void DefaultAnimationCurves()
		{
		}

		[Token(Token = "0x6000920")]
		[Address(RVA = "0x1CC4D1C", Offset = "0x1CC4D1C", VA = "0x1CC4D1C")]
		public void AddPositionOffset(PositionOffset positionOffset, Vector3 value)
		{
		}

		[Token(Token = "0x6000921")]
		[Address(RVA = "0x1CC4E60", Offset = "0x1CC4E60", VA = "0x1CC4E60")]
		public void AddRotationOffset(RotationOffset rotationOffset, Vector3 value)
		{
		}

		[Token(Token = "0x6000922")]
		[Address(RVA = "0x1CC4E90", Offset = "0x1CC4E90", VA = "0x1CC4E90")]
		public void AddRotationOffset(RotationOffset rotationOffset, Quaternion value)
		{
		}

		[Token(Token = "0x6000923")]
		[Address(RVA = "0x1CC4F40", Offset = "0x1CC4F40", VA = "0x1CC4F40")]
		public void AddPlatformMotion(Vector3 deltaPosition, Quaternion deltaRotation, Vector3 platformPivot)
		{
		}

		[Token(Token = "0x6000924")]
		[Address(RVA = "0x1CC5028", Offset = "0x1CC5028", VA = "0x1CC5028")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000925")]
		[Address(RVA = "0x1CC578C", Offset = "0x1CC578C", VA = "0x1CC578C", Slot = "9")]
		public override void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6000926")]
		[Address(RVA = "0x1CC58FC", Offset = "0x1CC58FC", VA = "0x1CC58FC", Slot = "8")]
		public override void FixTransforms()
		{
		}

		[Token(Token = "0x6000927")]
		[Address(RVA = "0x1CC5B00", Offset = "0x1CC5B00", VA = "0x1CC5B00", Slot = "6")]
		public override Point[] GetPoints()
		{
			return null;
		}

		[Token(Token = "0x6000928")]
		[Address(RVA = "0x1CC5B7C", Offset = "0x1CC5B7C", VA = "0x1CC5B7C", Slot = "7")]
		public override Point GetPoint(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x6000929")]
		[Address(RVA = "0x1CC5BF8", Offset = "0x1CC5BF8", VA = "0x1CC5BF8", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x600092A")]
		[Address(RVA = "0x1CC5DD0", Offset = "0x1CC5DD0", VA = "0x1CC5DD0")]
		private Vector3 GetNormal(Transform[] transforms)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600092B")]
		[Address(RVA = "0x1CC47F0", Offset = "0x1CC47F0", VA = "0x1CC47F0")]
		private Vector3 GuessWristToPalmAxis(Transform hand, Transform forearm)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600092C")]
		[Address(RVA = "0x1CC48E0", Offset = "0x1CC48E0", VA = "0x1CC48E0")]
		private Vector3 GuessPalmToThumbAxis(Transform hand, Transform forearm)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600092D")]
		[Address(RVA = "0x1CC4BFC", Offset = "0x1CC4BFC", VA = "0x1CC4BFC")]
		private static Keyframe[] GetSineKeyframes(float mag)
		{
			return null;
		}

		[Token(Token = "0x600092E")]
		[Address(RVA = "0x1CC511C", Offset = "0x1CC511C", VA = "0x1CC511C")]
		private void UpdateSolverTransforms()
		{
		}

		[Token(Token = "0x600092F")]
		[Address(RVA = "0x1CC5F90", Offset = "0x1CC5F90", VA = "0x1CC5F90", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x6000930")]
		[Address(RVA = "0x1CC5FD8", Offset = "0x1CC5FD8", VA = "0x1CC5FD8", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6000931")]
		[Address(RVA = "0x1CC73F0", Offset = "0x1CC73F0", VA = "0x1CC73F0")]
		private void WriteTransforms()
		{
		}

		[Token(Token = "0x6000932")]
		[Address(RVA = "0x1CC5280", Offset = "0x1CC5280", VA = "0x1CC5280")]
		private void Read(Vector3[] positions, Quaternion[] rotations, bool hasChest, bool hasNeck, bool hasShoulders, bool hasToes, bool hasLegs)
		{
		}

		[Token(Token = "0x6000933")]
		[Address(RVA = "0x1CC634C", Offset = "0x1CC634C", VA = "0x1CC634C")]
		private void Solve()
		{
		}

		[Token(Token = "0x6000934")]
		[Address(RVA = "0x1CC77A0", Offset = "0x1CC77A0", VA = "0x1CC77A0")]
		private Vector3 GetPosition(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000935")]
		[Address(RVA = "0x1CC77E8", Offset = "0x1CC77E8", VA = "0x1CC77E8")]
		private Quaternion GetRotation(int index)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000938")]
		[Address(RVA = "0x1CC72A0", Offset = "0x1CC72A0", VA = "0x1CC72A0")]
		private void Write()
		{
		}

		[Token(Token = "0x6000939")]
		[Address(RVA = "0x1CC782C", Offset = "0x1CC782C", VA = "0x1CC782C")]
		private Vector3 GetPelvisOffset()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600093A")]
		[Address(RVA = "0x1CC7A18", Offset = "0x1CC7A18", VA = "0x1CC7A18")]
		public IKSolverVR()
		{
		}
	}
	[Token(Token = "0x2000129")]
	public class TwistRelaxer : MonoBehaviour
	{
		[Token(Token = "0x4000930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IK ik;

		[Token(Token = "0x4000931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5074", Offset = "0x8D5074")]
		public Transform parent;

		[Token(Token = "0x4000932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D50AC", Offset = "0x8D50AC")]
		public Transform child;

		[Token(Token = "0x4000933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D50E4", Offset = "0x8D50E4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D50E4", Offset = "0x8D50E4")]
		public float weight;

		[Token(Token = "0x4000934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D5138", Offset = "0x8D5138")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5138", Offset = "0x8D5138")]
		public float parentChildCrossfade;

		[Token(Token = "0x4000935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D518C", Offset = "0x8D518C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D518C", Offset = "0x8D518C")]
		public float twistAngleOffset;

		[Token(Token = "0x4000936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 twistAxis;

		[Token(Token = "0x4000937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 axis;

		[Token(Token = "0x4000938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 axisRelativeToParentDefault;

		[Token(Token = "0x4000939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 axisRelativeToChildDefault;

		[Token(Token = "0x60009B7")]
		[Address(RVA = "0x1147B00", Offset = "0x1147B00", VA = "0x1147B00")]
		public void Relax()
		{
		}

		[Token(Token = "0x60009B8")]
		[Address(RVA = "0x1147E1C", Offset = "0x1147E1C", VA = "0x1147E1C")]
		private void Start()
		{
		}

		[Token(Token = "0x60009B9")]
		[Address(RVA = "0x11481DC", Offset = "0x11481DC", VA = "0x11481DC")]
		private void OnPostUpdate()
		{
		}

		[Token(Token = "0x60009BA")]
		[Address(RVA = "0x1148260", Offset = "0x1148260", VA = "0x1148260")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60009BB")]
		[Address(RVA = "0x11482E4", Offset = "0x11482E4", VA = "0x11482E4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60009BC")]
		[Address(RVA = "0x11483FC", Offset = "0x11483FC", VA = "0x11483FC")]
		public TwistRelaxer()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200012A")]
	public class InteractionEffector
	{
		[Token(Token = "0x400093A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D51E8", Offset = "0x8D51E8")]
		private FullBodyBipedEffector <effectorType>k__BackingField;

		[Token(Token = "0x400093B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D51F8", Offset = "0x8D51F8")]
		private bool <isPaused>k__BackingField;

		[Token(Token = "0x400093C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5208", Offset = "0x8D5208")]
		private InteractionObject <interactionObject>k__BackingField;

		[Token(Token = "0x400093D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Poser poser;

		[Token(Token = "0x400093E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private IKEffector effector;

		[Token(Token = "0x400093F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float timer;

		[Token(Token = "0x4000940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float length;

		[Token(Token = "0x4000941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float weight;

		[Token(Token = "0x4000942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float fadeInSpeed;

		[Token(Token = "0x4000943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float defaultPositionWeight;

		[Token(Token = "0x4000944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float defaultRotationWeight;

		[Token(Token = "0x4000945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float defaultPull;

		[Token(Token = "0x4000946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float defaultReach;

		[Token(Token = "0x4000947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float defaultPush;

		[Token(Token = "0x4000948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float defaultPushParent;

		[Token(Token = "0x4000949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float defaultBendGoalWeight;

		[Token(Token = "0x400094A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float resetTimer;

		[Token(Token = "0x400094B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool positionWeightUsed;

		[Token(Token = "0x400094C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool rotationWeightUsed;

		[Token(Token = "0x400094D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		private bool pullUsed;

		[Token(Token = "0x400094E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
		private bool reachUsed;

		[Token(Token = "0x400094F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool pushUsed;

		[Token(Token = "0x4000950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
		private bool pushParentUsed;

		[Token(Token = "0x4000951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x66")]
		private bool bendGoalWeightUsed;

		[Token(Token = "0x4000952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x67")]
		private bool pickedUp;

		[Token(Token = "0x4000953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool defaults;

		[Token(Token = "0x4000954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		private bool pickUpOnPostFBBIK;

		[Token(Token = "0x4000955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 pickUpPosition;

		[Token(Token = "0x4000956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 pausePositionRelative;

		[Token(Token = "0x4000957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Quaternion pickUpRotation;

		[Token(Token = "0x4000958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private Quaternion pauseRotationRelative;

		[Token(Token = "0x4000959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private InteractionTarget interactionTarget;

		[Token(Token = "0x400095A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Transform target;

		[Token(Token = "0x400095B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private List<bool> triggered;

		[Token(Token = "0x400095C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private InteractionSystem interactionSystem;

		[Token(Token = "0x400095D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private bool started;

		[Token(Token = "0x17000102")]
		public FullBodyBipedEffector effectorType
		{
			[Token(Token = "0x60009BD")]
			[Address(RVA = "0xB0BF8C", Offset = "0xB0BF8C", VA = "0xB0BF8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF30C", Offset = "0x8DF30C")]
			get
			{
				return default(FullBodyBipedEffector);
			}
			[Token(Token = "0x60009BE")]
			[Address(RVA = "0xB0BF94", Offset = "0xB0BF94", VA = "0xB0BF94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF31C", Offset = "0x8DF31C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000103")]
		public bool isPaused
		{
			[Token(Token = "0x60009BF")]
			[Address(RVA = "0xB0BF9C", Offset = "0xB0BF9C", VA = "0xB0BF9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF32C", Offset = "0x8DF32C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60009C0")]
			[Address(RVA = "0xB0BFA4", Offset = "0xB0BFA4", VA = "0xB0BFA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF33C", Offset = "0x8DF33C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000104")]
		public InteractionObject interactionObject
		{
			[Token(Token = "0x60009C1")]
			[Address(RVA = "0xB0BFB0", Offset = "0xB0BFB0", VA = "0xB0BFB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF34C", Offset = "0x8DF34C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60009C2")]
			[Address(RVA = "0xB0BFB8", Offset = "0xB0BFB8", VA = "0xB0BFB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF35C", Offset = "0x8DF35C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000105")]
		public bool inInteraction
		{
			[Token(Token = "0x60009C3")]
			[Address(RVA = "0xB0BFC0", Offset = "0xB0BFC0", VA = "0xB0BFC0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000106")]
		public float progress
		{
			[Token(Token = "0x60009CC")]
			[Address(RVA = "0xB0E390", Offset = "0xB0E390", VA = "0xB0E390")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60009C4")]
		[Address(RVA = "0xB0C02C", Offset = "0xB0C02C", VA = "0xB0C02C")]
		public InteractionEffector(FullBodyBipedEffector effectorType)
		{
		}

		[Token(Token = "0x60009C5")]
		[Address(RVA = "0xB0C0B8", Offset = "0xB0C0B8", VA = "0xB0C0B8")]
		public void Initiate(InteractionSystem interactionSystem)
		{
		}

		[Token(Token = "0x60009C6")]
		[Address(RVA = "0xB0C158", Offset = "0xB0C158", VA = "0xB0C158")]
		private void StoreDefaults()
		{
		}

		[Token(Token = "0x60009C7")]
		[Address(RVA = "0xB0C2D0", Offset = "0xB0C2D0", VA = "0xB0C2D0")]
		public bool ResetToDefaults(float speed)
		{
			return default(bool);
		}

		[Token(Token = "0x60009C8")]
		[Address(RVA = "0xB0C634", Offset = "0xB0C634", VA = "0xB0C634")]
		public bool Pause()
		{
			return default(bool);
		}

		[Token(Token = "0x60009C9")]
		[Address(RVA = "0xB0C6F0", Offset = "0xB0C6F0", VA = "0xB0C6F0")]
		public bool Resume()
		{
			return default(bool);
		}

		[Token(Token = "0x60009CA")]
		[Address(RVA = "0xB0C748", Offset = "0xB0C748", VA = "0xB0C748")]
		public bool Start(InteractionObject interactionObject, string tag, float fadeInTime, bool interrupt)
		{
			return default(bool);
		}

		[Token(Token = "0x60009CB")]
		[Address(RVA = "0xB0D138", Offset = "0xB0D138", VA = "0xB0D138")]
		public void Update(Transform root, float speed)
		{
		}

		[Token(Token = "0x60009CD")]
		[Address(RVA = "0xB0DBA0", Offset = "0xB0DBA0", VA = "0xB0DBA0")]
		private void TriggerUntriggeredEvents(bool checkTime, out bool pickUp, out bool pause)
		{
		}

		[Token(Token = "0x60009CE")]
		[Address(RVA = "0xB0DDE4", Offset = "0xB0DDE4", VA = "0xB0DDE4")]
		private void PickUp(Transform root)
		{
		}

		[Token(Token = "0x60009CF")]
		[Address(RVA = "0xB0E23C", Offset = "0xB0E23C", VA = "0xB0E23C")]
		public bool Stop()
		{
			return default(bool);
		}

		[Token(Token = "0x60009D0")]
		[Address(RVA = "0xB0E4F0", Offset = "0xB0E4F0", VA = "0xB0E4F0")]
		public void OnPostFBBIK()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200012B")]
	public class InteractionLookAt
	{
		[Token(Token = "0x400095E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5218", Offset = "0x8D5218")]
		public LookAtIK ik;

		[Token(Token = "0x400095F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5250", Offset = "0x8D5250")]
		public float lerpSpeed;

		[Token(Token = "0x4000960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5288", Offset = "0x8D5288")]
		public float weightSpeed;

		[Token(Token = "0x4000961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public bool isPaused;

		[Token(Token = "0x4000962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform lookAtTarget;

		[Token(Token = "0x4000963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float stopLookTime;

		[Token(Token = "0x4000964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float weight;

		[Token(Token = "0x4000965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool firstFBBIKSolve;

		[Token(Token = "0x60009D1")]
		[Address(RVA = "0xB0E6E0", Offset = "0xB0E6E0", VA = "0xB0E6E0")]
		public void Look(Transform target, float time)
		{
		}

		[Token(Token = "0x60009D2")]
		[Address(RVA = "0xB0E7FC", Offset = "0xB0E7FC", VA = "0xB0E7FC")]
		public void OnFixTransforms()
		{
		}

		[Token(Token = "0x60009D3")]
		[Address(RVA = "0xB0E8A0", Offset = "0xB0E8A0", VA = "0xB0E8A0")]
		public void Update()
		{
		}

		[Token(Token = "0x60009D4")]
		[Address(RVA = "0xB0EED8", Offset = "0xB0EED8", VA = "0xB0EED8")]
		public void SolveSpine()
		{
		}

		[Token(Token = "0x60009D5")]
		[Address(RVA = "0xB0EFCC", Offset = "0xB0EFCC", VA = "0xB0EFCC")]
		public void SolveHead()
		{
		}

		[Token(Token = "0x60009D6")]
		[Address(RVA = "0xB0F094", Offset = "0xB0F094", VA = "0xB0F094")]
		public InteractionLookAt()
		{
		}
	}
	[Token(Token = "0x200012C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8CBD60", Offset = "0x8CBD60")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x8CBD60", Offset = "0x8CBD60")]
	public class InteractionObject : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200012D")]
		public class InteractionEvent
		{
			[Token(Token = "0x400096F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5398", Offset = "0x8D5398")]
			public float time;

			[Token(Token = "0x4000970")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D53D0", Offset = "0x8D53D0")]
			public bool pause;

			[Token(Token = "0x4000971")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5408", Offset = "0x8D5408")]
			public bool pickUp;

			[Token(Token = "0x4000972")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5440", Offset = "0x8D5440")]
			public AnimatorEvent[] animations;

			[Token(Token = "0x4000973")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5478", Offset = "0x8D5478")]
			public Message[] messages;

			[Token(Token = "0x4000974")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D54B0", Offset = "0x8D54B0")]
			public UnityEvent unityEvent;

			[Token(Token = "0x60009F3")]
			[Address(RVA = "0x1B45510", Offset = "0x1B45510", VA = "0x1B45510")]
			public void Activate(Transform t)
			{
			}

			[Token(Token = "0x60009F4")]
			[Address(RVA = "0x1B456E4", Offset = "0x1B456E4", VA = "0x1B456E4")]
			public InteractionEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200012E")]
		public class Message
		{
			[Token(Token = "0x4000975")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D54E8", Offset = "0x8D54E8")]
			public string function;

			[Token(Token = "0x4000976")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5520", Offset = "0x8D5520")]
			public GameObject recipient;

			[Token(Token = "0x4000977")]
			private const string empty = "";

			[Token(Token = "0x60009F5")]
			[Address(RVA = "0x1B455E0", Offset = "0x1B455E0", VA = "0x1B455E0")]
			public void Send(Transform t)
			{
			}

			[Token(Token = "0x60009F6")]
			[Address(RVA = "0x1B456EC", Offset = "0x1B456EC", VA = "0x1B456EC")]
			public Message()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200012F")]
		public class AnimatorEvent
		{
			[Token(Token = "0x4000978")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5558", Offset = "0x8D5558")]
			public Animator animator;

			[Token(Token = "0x4000979")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5590", Offset = "0x8D5590")]
			public Animation animation;

			[Token(Token = "0x400097A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D55C8", Offset = "0x8D55C8")]
			public string animationState;

			[Token(Token = "0x400097B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5600", Offset = "0x8D5600")]
			public float crossfadeTime;

			[Token(Token = "0x400097C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5638", Offset = "0x8D5638")]
			public int layer;

			[Token(Token = "0x400097D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5670", Offset = "0x8D5670")]
			public bool resetNormalizedTime;

			[Token(Token = "0x400097E")]
			private const string empty = "";

			[Token(Token = "0x60009F7")]
			[Address(RVA = "0x1B4527C", Offset = "0x1B4527C", VA = "0x1B4527C")]
			public void Activate(bool pickUp)
			{
			}

			[Token(Token = "0x60009F8")]
			[Address(RVA = "0x1B4536C", Offset = "0x1B4536C", VA = "0x1B4536C")]
			private void Activate(Animator animator)
			{
			}

			[Token(Token = "0x60009F9")]
			[Address(RVA = "0x1B45420", Offset = "0x1B45420", VA = "0x1B45420")]
			private void Activate(Animation animation)
			{
			}

			[Token(Token = "0x60009FA")]
			[Address(RVA = "0x1B454FC", Offset = "0x1B454FC", VA = "0x1B454FC")]
			public AnimatorEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000130")]
		public class WeightCurve
		{
			[Serializable]
			[Token(Token = "0x2000131")]
			public enum Type
			{
				[Token(Token = "0x4000982")]
				PositionWeight,
				[Token(Token = "0x4000983")]
				RotationWeight,
				[Token(Token = "0x4000984")]
				PositionOffsetX,
				[Token(Token = "0x4000985")]
				PositionOffsetY,
				[Token(Token = "0x4000986")]
				PositionOffsetZ,
				[Token(Token = "0x4000987")]
				Pull,
				[Token(Token = "0x4000988")]
				Reach,
				[Token(Token = "0x4000989")]
				RotateBoneWeight,
				[Token(Token = "0x400098A")]
				Push,
				[Token(Token = "0x400098B")]
				PushParent,
				[Token(Token = "0x400098C")]
				PoserWeight,
				[Token(Token = "0x400098D")]
				BendGoalWeight
			}

			[Token(Token = "0x400097F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D56A8", Offset = "0x8D56A8")]
			public Type type;

			[Token(Token = "0x4000980")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D56E0", Offset = "0x8D56E0")]
			public AnimationCurve curve;

			[Token(Token = "0x60009FB")]
			[Address(RVA = "0x1B45730", Offset = "0x1B45730", VA = "0x1B45730")]
			public float GetValue(float timer)
			{
				return default(float);
			}

			[Token(Token = "0x60009FC")]
			[Address(RVA = "0x1B4575C", Offset = "0x1B4575C", VA = "0x1B4575C")]
			public WeightCurve()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000132")]
		public class Multiplier
		{
			[Token(Token = "0x400098E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5718", Offset = "0x8D5718")]
			public WeightCurve.Type curve;

			[Token(Token = "0x400098F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5750", Offset = "0x8D5750")]
			public float multiplier;

			[Token(Token = "0x4000990")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5788", Offset = "0x8D5788")]
			public WeightCurve.Type result;

			[Token(Token = "0x60009FD")]
			[Address(RVA = "0x1B456F4", Offset = "0x1B456F4", VA = "0x1B456F4")]
			public float GetValue(WeightCurve weightCurve, float timer)
			{
				return default(float);
			}

			[Token(Token = "0x60009FE")]
			[Address(RVA = "0x1B4574C", Offset = "0x1B4574C", VA = "0x1B4574C")]
			public Multiplier()
			{
			}
		}

		[Token(Token = "0x4000966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D52D0", Offset = "0x8D52D0")]
		public Transform otherLookAtTarget;

		[Token(Token = "0x4000967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5308", Offset = "0x8D5308")]
		public Transform otherTargetsRoot;

		[Token(Token = "0x4000968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5340", Offset = "0x8D5340")]
		public Transform positionOffsetSpace;

		[Token(Token = "0x4000969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public WeightCurve[] weightCurves;

		[Token(Token = "0x400096A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Multiplier[] multipliers;

		[Token(Token = "0x400096B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public InteractionEvent[] events;

		[Token(Token = "0x400096C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5378", Offset = "0x8D5378")]
		private float <length>k__BackingField;

		[Token(Token = "0x400096D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5388", Offset = "0x8D5388")]
		private InteractionSystem <lastUsedInteractionSystem>k__BackingField;

		[Token(Token = "0x400096E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private InteractionTarget[] targets;

		[Token(Token = "0x17000107")]
		public float length
		{
			[Token(Token = "0x60009DF")]
			[Address(RVA = "0xB0F2E8", Offset = "0xB0F2E8", VA = "0xB0F2E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF52C", Offset = "0x8DF52C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60009E0")]
			[Address(RVA = "0xB0F2F0", Offset = "0xB0F2F0", VA = "0xB0F2F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF53C", Offset = "0x8DF53C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000108")]
		public InteractionSystem lastUsedInteractionSystem
		{
			[Token(Token = "0x60009E1")]
			[Address(RVA = "0xB0F2F8", Offset = "0xB0F2F8", VA = "0xB0F2F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF54C", Offset = "0x8DF54C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60009E2")]
			[Address(RVA = "0xB0F300", Offset = "0xB0F300", VA = "0xB0F300")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF55C", Offset = "0x8DF55C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000109")]
		public Transform lookAtTarget
		{
			[Token(Token = "0x60009E4")]
			[Address(RVA = "0xB0F4C8", Offset = "0xB0F4C8", VA = "0xB0F4C8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010A")]
		public Transform targetsRoot
		{
			[Token(Token = "0x60009EC")]
			[Address(RVA = "0xB0E3CC", Offset = "0xB0E3CC", VA = "0xB0E3CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009D7")]
		[Address(RVA = "0xB0F0A8", Offset = "0xB0F0A8", VA = "0xB0F0A8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DF36C", Offset = "0x8DF36C")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x60009D8")]
		[Address(RVA = "0xB0F0F0", Offset = "0xB0F0F0", VA = "0xB0F0F0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DF3A4", Offset = "0x8DF3A4")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x60009D9")]
		[Address(RVA = "0xB0F138", Offset = "0xB0F138", VA = "0xB0F138")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DF3DC", Offset = "0x8DF3DC")]
		private void OpenTutorial1()
		{
		}

		[Token(Token = "0x60009DA")]
		[Address(RVA = "0xB0F180", Offset = "0xB0F180", VA = "0xB0F180")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DF414", Offset = "0x8DF414")]
		private void OpenTutorial2()
		{
		}

		[Token(Token = "0x60009DB")]
		[Address(RVA = "0xB0F1C8", Offset = "0xB0F1C8", VA = "0xB0F1C8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DF44C", Offset = "0x8DF44C")]
		private void OpenTutorial3()
		{
		}

		[Token(Token = "0x60009DC")]
		[Address(RVA = "0xB0F210", Offset = "0xB0F210", VA = "0xB0F210")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DF484", Offset = "0x8DF484")]
		private void OpenTutorial4()
		{
		}

		[Token(Token = "0x60009DD")]
		[Address(RVA = "0xB0F258", Offset = "0xB0F258", VA = "0xB0F258")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DF4BC", Offset = "0x8DF4BC")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x60009DE")]
		[Address(RVA = "0xB0F2A0", Offset = "0xB0F2A0", VA = "0xB0F2A0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DF4F4", Offset = "0x8DF4F4")]
		private void ASThread()
		{
		}

		[Token(Token = "0x60009E3")]
		[Address(RVA = "0xB0F308", Offset = "0xB0F308", VA = "0xB0F308")]
		public void Initiate()
		{
		}

		[Token(Token = "0x60009E5")]
		[Address(RVA = "0xB0F554", Offset = "0xB0F554", VA = "0xB0F554")]
		public InteractionTarget GetTarget(FullBodyBipedEffector effectorType, InteractionSystem interactionSystem)
		{
			return null;
		}

		[Token(Token = "0x60009E6")]
		[Address(RVA = "0xB0CCB0", Offset = "0xB0CCB0", VA = "0xB0CCB0")]
		public bool CurveUsed(WeightCurve.Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x60009E7")]
		[Address(RVA = "0xB0F6E0", Offset = "0xB0F6E0", VA = "0xB0F6E0")]
		public InteractionTarget[] GetTargets()
		{
			return null;
		}

		[Token(Token = "0x60009E8")]
		[Address(RVA = "0xB0CB5C", Offset = "0xB0CB5C", VA = "0xB0CB5C")]
		public Transform GetTarget(FullBodyBipedEffector effectorType, string tag)
		{
			return null;
		}

		[Token(Token = "0x60009E9")]
		[Address(RVA = "0xB0CCA8", Offset = "0xB0CCA8", VA = "0xB0CCA8")]
		public void OnStartInteraction(InteractionSystem interactionSystem)
		{
		}

		[Token(Token = "0x60009EA")]
		[Address(RVA = "0xB0D744", Offset = "0xB0D744", VA = "0xB0D744")]
		public void Apply(IKSolverFullBodyBiped solver, FullBodyBipedEffector effector, InteractionTarget target, float timer, float weight)
		{
		}

		[Token(Token = "0x60009EB")]
		[Address(RVA = "0xB0E01C", Offset = "0xB0E01C", VA = "0xB0E01C")]
		public float GetValue(WeightCurve.Type weightCurveType, InteractionTarget target, float timer)
		{
			return default(float);
		}

		[Token(Token = "0x60009ED")]
		[Address(RVA = "0xB0FCC4", Offset = "0xB0FCC4", VA = "0xB0FCC4")]
		private void Start()
		{
		}

		[Token(Token = "0x60009EE")]
		[Address(RVA = "0xB0F7C8", Offset = "0xB0F7C8", VA = "0xB0F7C8")]
		private void Apply(IKSolverFullBodyBiped solver, FullBodyBipedEffector effector, WeightCurve.Type type, float value, float weight)
		{
		}

		[Token(Token = "0x60009EF")]
		[Address(RVA = "0xB0F6E8", Offset = "0xB0F6E8", VA = "0xB0F6E8")]
		private Transform GetTarget(FullBodyBipedEffector effectorType)
		{
			return null;
		}

		[Token(Token = "0x60009F0")]
		[Address(RVA = "0xB0FC5C", Offset = "0xB0FC5C", VA = "0xB0FC5C")]
		private int GetWeightCurveIndex(WeightCurve.Type weightCurveType)
		{
			return default(int);
		}

		[Token(Token = "0x60009F1")]
		[Address(RVA = "0xB0FCC8", Offset = "0xB0FCC8", VA = "0xB0FCC8")]
		private int GetMultiplierIndex(WeightCurve.Type weightCurveType)
		{
			return default(int);
		}

		[Token(Token = "0x60009F2")]
		[Address(RVA = "0xB0FD30", Offset = "0xB0FD30", VA = "0xB0FD30")]
		public InteractionObject()
		{
		}
	}
	[Token(Token = "0x2000133")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x8CBDC0", Offset = "0x8CBDC0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8CBDC0", Offset = "0x8CBDC0")]
	public class InteractionSystem : MonoBehaviour
	{
		[Token(Token = "0x2000134")]
		public delegate void InteractionDelegate(FullBodyBipedEffector effectorType, InteractionObject interactionObject);

		[Token(Token = "0x2000135")]
		public delegate void InteractionEventDelegate(FullBodyBipedEffector effectorType, InteractionObject interactionObject, InteractionObject.InteractionEvent interactionEvent);

		[Token(Token = "0x4000991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D57C0", Offset = "0x8D57C0")]
		public string targetTag;

		[Token(Token = "0x4000992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D57F8", Offset = "0x8D57F8")]
		public float fadeInTime;

		[Token(Token = "0x4000993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5830", Offset = "0x8D5830")]
		public float speed;

		[Token(Token = "0x4000994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5868", Offset = "0x8D5868")]
		public float resetToDefaultsSpeed;

		[Token(Token = "0x4000995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D58A0", Offset = "0x8D58A0")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8D58A0", Offset = "0x8D58A0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D58A0", Offset = "0x8D58A0")]
		public Collider characterCollider;

		[Token(Token = "0x4000996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8D5924", Offset = "0x8D5924")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5924", Offset = "0x8D5924")]
		public Transform FPSCamera;

		[Token(Token = "0x4000997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5984", Offset = "0x8D5984")]
		public LayerMask camRaycastLayers;

		[Token(Token = "0x4000998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D59BC", Offset = "0x8D59BC")]
		public float camRaycastDistance;

		[Token(Token = "0x4000999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D59F4", Offset = "0x8D59F4")]
		private List<InteractionTrigger> <triggersInRange>k__BackingField;

		[Token(Token = "0x400099A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<InteractionTrigger> inContact;

		[Token(Token = "0x400099B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<int> bestRangeIndexes;

		[Token(Token = "0x400099C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public InteractionDelegate OnInteractionStart;

		[Token(Token = "0x400099D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public InteractionDelegate OnInteractionPause;

		[Token(Token = "0x400099E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public InteractionDelegate OnInteractionPickUp;

		[Token(Token = "0x400099F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public InteractionDelegate OnInteractionResume;

		[Token(Token = "0x40009A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public InteractionDelegate OnInteractionStop;

		[Token(Token = "0x40009A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public InteractionEventDelegate OnInteractionEvent;

		[Token(Token = "0x40009A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public RaycastHit raycastHit;

		[Token(Token = "0x40009A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8D5A04", Offset = "0x8D5A04")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5A04", Offset = "0x8D5A04")]
		[SerializeField]
		private FullBodyBipedIK fullBody;

		[Token(Token = "0x40009A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5A64", Offset = "0x8D5A64")]
		public InteractionLookAt lookAt;

		[Token(Token = "0x40009A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private InteractionEffector[] interactionEffectors;

		[Token(Token = "0x40009A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool initiated;

		[Token(Token = "0x40009A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Collider lastCollider;

		[Token(Token = "0x40009A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Collider c;

		[Token(Token = "0x1700010B")]
		public bool inInteraction
		{
			[Token(Token = "0x6000A07")]
			[Address(RVA = "0xB0FFCC", Offset = "0xB0FFCC", VA = "0xB0FFCC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700010C")]
		public FullBodyBipedIK ik
		{
			[Token(Token = "0x6000A21")]
			[Address(RVA = "0xB11C78", Offset = "0xB11C78", VA = "0xB11C78")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A22")]
			[Address(RVA = "0xB11C80", Offset = "0xB11C80", VA = "0xB11C80")]
			set
			{
			}
		}

		[Token(Token = "0x1700010D")]
		public List<InteractionTrigger> triggersInRange
		{
			[Token(Token = "0x6000A23")]
			[Address(RVA = "0xB11C88", Offset = "0xB11C88", VA = "0xB11C88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF72C", Offset = "0x8DF72C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A24")]
			[Address(RVA = "0xB11C90", Offset = "0xB11C90", VA = "0xB11C90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF73C", Offset = "0x8DF73C")]
			private set
			{
			}
		}

		[Token(Token = "0x60009FF")]
		[Address(RVA = "0xB0FD8C", Offset = "0xB0FD8C", VA = "0xB0FD8C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DF56C", Offset = "0x8DF56C")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x6000A00")]
		[Address(RVA = "0xB0FDD4", Offset = "0xB0FDD4", VA = "0xB0FDD4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DF5A4", Offset = "0x8DF5A4")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000A01")]
		[Address(RVA = "0xB0FE1C", Offset = "0xB0FE1C", VA = "0xB0FE1C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DF5DC", Offset = "0x8DF5DC")]
		private void OpenTutorial1()
		{
		}

		[Token(Token = "0x6000A02")]
		[Address(RVA = "0xB0FE64", Offset = "0xB0FE64", VA = "0xB0FE64")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DF614", Offset = "0x8DF614")]
		private void OpenTutorial2()
		{
		}

		[Token(Token = "0x6000A03")]
		[Address(RVA = "0xB0FEAC", Offset = "0xB0FEAC", VA = "0xB0FEAC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DF64C", Offset = "0x8DF64C")]
		private void OpenTutorial3()
		{
		}

		[Token(Token = "0x6000A04")]
		[Address(RVA = "0xB0FEF4", Offset = "0xB0FEF4", VA = "0xB0FEF4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DF684", Offset = "0x8DF684")]
		private void OpenTutorial4()
		{
		}

		[Token(Token = "0x6000A05")]
		[Address(RVA = "0xB0FF3C", Offset = "0xB0FF3C", VA = "0xB0FF3C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DF6BC", Offset = "0x8DF6BC")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000A06")]
		[Address(RVA = "0xB0FF84", Offset = "0xB0FF84", VA = "0xB0FF84")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DF6F4", Offset = "0x8DF6F4")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000A08")]
		[Address(RVA = "0xB10170", Offset = "0xB10170", VA = "0xB10170")]
		public bool IsInInteraction(FullBodyBipedEffector effectorType)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A09")]
		[Address(RVA = "0xB1023C", Offset = "0xB1023C", VA = "0xB1023C")]
		public bool IsPaused(FullBodyBipedEffector effectorType)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A0A")]
		[Address(RVA = "0xB10308", Offset = "0xB10308", VA = "0xB10308")]
		public bool IsPaused()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A0B")]
		[Address(RVA = "0xB103B4", Offset = "0xB103B4", VA = "0xB103B4")]
		public bool IsInSync()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A0C")]
		[Address(RVA = "0xB104AC", Offset = "0xB104AC", VA = "0xB104AC")]
		public bool StartInteraction(FullBodyBipedEffector effectorType, InteractionObject interactionObject, bool interrupt)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A0D")]
		[Address(RVA = "0xB105C4", Offset = "0xB105C4", VA = "0xB105C4")]
		public bool PauseInteraction(FullBodyBipedEffector effectorType)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A0E")]
		[Address(RVA = "0xB10654", Offset = "0xB10654", VA = "0xB10654")]
		public bool ResumeInteraction(FullBodyBipedEffector effectorType)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A0F")]
		[Address(RVA = "0xB106E4", Offset = "0xB106E4", VA = "0xB106E4")]
		public bool StopInteraction(FullBodyBipedEffector effectorType)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A10")]
		[Address(RVA = "0xB10774", Offset = "0xB10774", VA = "0xB10774")]
		public void PauseAll()
		{
		}

		[Token(Token = "0x6000A11")]
		[Address(RVA = "0xB107E8", Offset = "0xB107E8", VA = "0xB107E8")]
		public void ResumeAll()
		{
		}

		[Token(Token = "0x6000A12")]
		[Address(RVA = "0xB1085C", Offset = "0xB1085C", VA = "0xB1085C")]
		public void StopAll()
		{
		}

		[Token(Token = "0x6000A13")]
		[Address(RVA = "0xB108C4", Offset = "0xB108C4", VA = "0xB108C4")]
		public InteractionObject GetInteractionObject(FullBodyBipedEffector effectorType)
		{
			return null;
		}

		[Token(Token = "0x6000A14")]
		[Address(RVA = "0xB10950", Offset = "0xB10950", VA = "0xB10950")]
		public float GetProgress(FullBodyBipedEffector effectorType)
		{
			return default(float);
		}

		[Token(Token = "0x6000A15")]
		[Address(RVA = "0xB10A04", Offset = "0xB10A04", VA = "0xB10A04")]
		public float GetMinActiveProgress()
		{
			return default(float);
		}

		[Token(Token = "0x6000A16")]
		[Address(RVA = "0xB10AE8", Offset = "0xB10AE8", VA = "0xB10AE8")]
		public bool TriggerInteraction(int index, bool interrupt)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A17")]
		[Address(RVA = "0xB10DC0", Offset = "0xB10DC0", VA = "0xB10DC0")]
		public bool TriggerInteraction(int index, bool interrupt, out InteractionObject interactionObject)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A18")]
		[Address(RVA = "0xB10FA0", Offset = "0xB10FA0", VA = "0xB10FA0")]
		public bool TriggerInteraction(int index, bool interrupt, out InteractionTarget interactionTarget)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A19")]
		[Address(RVA = "0xB11234", Offset = "0xB11234", VA = "0xB11234")]
		public InteractionTrigger.Range GetClosestInteractionRange()
		{
			return null;
		}

		[Token(Token = "0x6000A1A")]
		[Address(RVA = "0xB1150C", Offset = "0xB1150C", VA = "0xB1150C")]
		public InteractionObject GetClosestInteractionObjectInRange()
		{
			return null;
		}

		[Token(Token = "0x6000A1B")]
		[Address(RVA = "0xB11550", Offset = "0xB11550", VA = "0xB11550")]
		public InteractionTarget GetClosestInteractionTargetInRange()
		{
			return null;
		}

		[Token(Token = "0x6000A1C")]
		[Address(RVA = "0xB115C8", Offset = "0xB115C8", VA = "0xB115C8")]
		public InteractionObject[] GetClosestInteractionObjectsInRange()
		{
			return null;
		}

		[Token(Token = "0x6000A1D")]
		[Address(RVA = "0xB116E4", Offset = "0xB116E4", VA = "0xB116E4")]
		public InteractionTarget[] GetClosestInteractionTargetsInRange()
		{
			return null;
		}

		[Token(Token = "0x6000A1E")]
		[Address(RVA = "0xB11888", Offset = "0xB11888", VA = "0xB11888")]
		public bool TriggerEffectorsReady(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A1F")]
		[Address(RVA = "0xB11B2C", Offset = "0xB11B2C", VA = "0xB11B2C")]
		public InteractionTrigger.Range GetTriggerRange(int index)
		{
			return null;
		}

		[Token(Token = "0x6000A20")]
		[Address(RVA = "0xB11348", Offset = "0xB11348", VA = "0xB11348")]
		public int GetClosestTriggerIndex()
		{
			return default(int);
		}

		[Token(Token = "0x6000A25")]
		[Address(RVA = "0xB11C98", Offset = "0xB11C98", VA = "0xB11C98")]
		public void Start()
		{
		}

		[Token(Token = "0x6000A26")]
		[Address(RVA = "0xB12404", Offset = "0xB12404", VA = "0xB12404")]
		private void InteractionPause(FullBodyBipedEffector effector, InteractionObject interactionObject)
		{
		}

		[Token(Token = "0x6000A27")]
		[Address(RVA = "0xB12424", Offset = "0xB12424", VA = "0xB12424")]
		private void InteractionResume(FullBodyBipedEffector effector, InteractionObject interactionObject)
		{
		}

		[Token(Token = "0x6000A28")]
		[Address(RVA = "0xB12440", Offset = "0xB12440", VA = "0xB12440")]
		private void InteractionStop(FullBodyBipedEffector effector, InteractionObject interactionObject)
		{
		}

		[Token(Token = "0x6000A29")]
		[Address(RVA = "0xB1245C", Offset = "0xB1245C", VA = "0xB1245C")]
		private void LookAtInteraction(FullBodyBipedEffector effector, InteractionObject interactionObject)
		{
		}

		[Token(Token = "0x6000A2A")]
		[Address(RVA = "0xB124BC", Offset = "0xB124BC", VA = "0xB124BC")]
		public void OnTriggerEnter(Collider c)
		{
		}

		[Token(Token = "0x6000A2B")]
		[Address(RVA = "0xB125F8", Offset = "0xB125F8", VA = "0xB125F8")]
		public void OnTriggerExit(Collider c)
		{
		}

		[Token(Token = "0x6000A2C")]
		[Address(RVA = "0xB12708", Offset = "0xB12708", VA = "0xB12708")]
		private bool ContactIsInRange(int index, out int bestRangeIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A2D")]
		[Address(RVA = "0xB12AAC", Offset = "0xB12AAC", VA = "0xB12AAC")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6000A2E")]
		[Address(RVA = "0xB12BAC", Offset = "0xB12BAC", VA = "0xB12BAC")]
		public void Update()
		{
		}

		[Token(Token = "0x6000A2F")]
		[Address(RVA = "0xB12E3C", Offset = "0xB12E3C", VA = "0xB12E3C")]
		private void Raycasting()
		{
		}

		[Token(Token = "0x6000A30")]
		[Address(RVA = "0xB12168", Offset = "0xB12168", VA = "0xB12168")]
		private void UpdateTriggerEventBroadcasting()
		{
		}

		[Token(Token = "0x6000A31")]
		[Address(RVA = "0xB12F78", Offset = "0xB12F78", VA = "0xB12F78")]
		private void UpdateEffectors()
		{
		}

		[Token(Token = "0x6000A32")]
		[Address(RVA = "0xB130A0", Offset = "0xB130A0", VA = "0xB130A0")]
		private void OnPreFBBIK()
		{
		}

		[Token(Token = "0x6000A33")]
		[Address(RVA = "0xB13134", Offset = "0xB13134", VA = "0xB13134")]
		private void OnPostFBBIK()
		{
		}

		[Token(Token = "0x6000A34")]
		[Address(RVA = "0xB13208", Offset = "0xB13208", VA = "0xB13208")]
		private void OnFixTransforms()
		{
		}

		[Token(Token = "0x6000A35")]
		[Address(RVA = "0xB13220", Offset = "0xB13220", VA = "0xB13220")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000A36")]
		[Address(RVA = "0xB10078", Offset = "0xB10078", VA = "0xB10078")]
		private bool IsValid(bool log)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A37")]
		[Address(RVA = "0xB10C90", Offset = "0xB10C90", VA = "0xB10C90")]
		private bool TriggerIndexIsValid(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A38")]
		[Address(RVA = "0xB13588", Offset = "0xB13588", VA = "0xB13588")]
		public InteractionSystem()
		{
		}
	}
	[Token(Token = "0x2000136")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x8CBE20", Offset = "0x8CBE20")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8CBE20", Offset = "0x8CBE20")]
	public class InteractionTarget : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000137")]
		public class Multiplier
		{
			[Token(Token = "0x40009B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5C5C", Offset = "0x8D5C5C")]
			public InteractionObject.WeightCurve.Type curve;

			[Token(Token = "0x40009B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5C94", Offset = "0x8D5C94")]
			public float multiplier;

			[Token(Token = "0x6000A4D")]
			[Address(RVA = "0x1B45DC8", Offset = "0x1B45DC8", VA = "0x1B45DC8")]
			public Multiplier()
			{
			}
		}

		[Token(Token = "0x40009A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5A9C", Offset = "0x8D5A9C")]
		public FullBodyBipedEffector effectorType;

		[Token(Token = "0x40009AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5AD4", Offset = "0x8D5AD4")]
		public Multiplier[] multipliers;

		[Token(Token = "0x40009AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5B0C", Offset = "0x8D5B0C")]
		public float interactionSpeedMlp;

		[Token(Token = "0x40009AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5B44", Offset = "0x8D5B44")]
		public Transform pivot;

		[Token(Token = "0x40009AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5B7C", Offset = "0x8D5B7C")]
		public Vector3 twistAxis;

		[Token(Token = "0x40009AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5BB4", Offset = "0x8D5BB4")]
		public float twistWeight;

		[Token(Token = "0x40009AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5BEC", Offset = "0x8D5BEC")]
		public float swingWeight;

		[Token(Token = "0x40009B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5C24", Offset = "0x8D5C24")]
		public bool rotateOnce;

		[Token(Token = "0x40009B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion defaultLocalRotation;

		[Token(Token = "0x40009B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform lastPivot;

		[Token(Token = "0x6000A41")]
		[Address(RVA = "0xB1392C", Offset = "0xB1392C", VA = "0xB1392C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DF74C", Offset = "0x8DF74C")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x6000A42")]
		[Address(RVA = "0xB13974", Offset = "0xB13974", VA = "0xB13974")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DF784", Offset = "0x8DF784")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000A43")]
		[Address(RVA = "0xB139BC", Offset = "0xB139BC", VA = "0xB139BC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DF7BC", Offset = "0x8DF7BC")]
		private void OpenTutorial1()
		{
		}

		[Token(Token = "0x6000A44")]
		[Address(RVA = "0xB13A04", Offset = "0xB13A04", VA = "0xB13A04")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DF7F4", Offset = "0x8DF7F4")]
		private void OpenTutorial2()
		{
		}

		[Token(Token = "0x6000A45")]
		[Address(RVA = "0xB13A4C", Offset = "0xB13A4C", VA = "0xB13A4C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DF82C", Offset = "0x8DF82C")]
		private void OpenTutorial3()
		{
		}

		[Token(Token = "0x6000A46")]
		[Address(RVA = "0xB13A94", Offset = "0xB13A94", VA = "0xB13A94")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DF864", Offset = "0x8DF864")]
		private void OpenTutorial4()
		{
		}

		[Token(Token = "0x6000A47")]
		[Address(RVA = "0xB13ADC", Offset = "0xB13ADC", VA = "0xB13ADC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DF89C", Offset = "0x8DF89C")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000A48")]
		[Address(RVA = "0xB13B24", Offset = "0xB13B24", VA = "0xB13B24")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DF8D4", Offset = "0x8DF8D4")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000A49")]
		[Address(RVA = "0xB0F758", Offset = "0xB0F758", VA = "0xB0F758")]
		public float GetValue(InteractionObject.WeightCurve.Type curveType)
		{
			return default(float);
		}

		[Token(Token = "0x6000A4A")]
		[Address(RVA = "0xB0E458", Offset = "0xB0E458", VA = "0xB0E458")]
		public void ResetRotation()
		{
		}

		[Token(Token = "0x6000A4B")]
		[Address(RVA = "0xB0CD64", Offset = "0xB0CD64", VA = "0xB0CD64")]
		public void RotateTo(Vector3 position)
		{
		}

		[Token(Token = "0x6000A4C")]
		[Address(RVA = "0xB13B6C", Offset = "0xB13B6C", VA = "0xB13B6C")]
		public InteractionTarget()
		{
		}
	}
	[Token(Token = "0x2000138")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x8CBE80", Offset = "0x8CBE80")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8CBE80", Offset = "0x8CBE80")]
	public class InteractionTrigger : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000139")]
		public class CharacterPosition
		{
			[Token(Token = "0x40009B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5D04", Offset = "0x8D5D04")]
			public bool use;

			[Token(Token = "0x40009B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5D3C", Offset = "0x8D5D3C")]
			public Vector2 offset;

			[Token(Token = "0x40009B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5D74", Offset = "0x8D5D74")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D5D74", Offset = "0x8D5D74")]
			public float angleOffset;

			[Token(Token = "0x40009B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5DD0", Offset = "0x8D5DD0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D5DD0", Offset = "0x8D5DD0")]
			public float maxAngle;

			[Token(Token = "0x40009BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5E28", Offset = "0x8D5E28")]
			public float radius;

			[Token(Token = "0x40009BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5E60", Offset = "0x8D5E60")]
			public bool orbit;

			[Token(Token = "0x40009BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5E98", Offset = "0x8D5E98")]
			public bool fixYAxis;

			[Token(Token = "0x1700010E")]
			public Vector3 offset3D
			{
				[Token(Token = "0x6000A56")]
				[Address(RVA = "0x1B46138", Offset = "0x1B46138", VA = "0x1B46138")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x1700010F")]
			public Vector3 direction3D
			{
				[Token(Token = "0x6000A57")]
				[Address(RVA = "0x1B46144", Offset = "0x1B46144", VA = "0x1B46144")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x6000A58")]
			[Address(RVA = "0x1B461CC", Offset = "0x1B461CC", VA = "0x1B461CC")]
			public bool IsInRange(Transform character, Transform trigger, out float error)
			{
				return default(bool);
			}

			[Token(Token = "0x6000A59")]
			[Address(RVA = "0x1B46610", Offset = "0x1B46610", VA = "0x1B46610")]
			public CharacterPosition()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200013A")]
		public class CameraPosition
		{
			[Token(Token = "0x40009BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5ED0", Offset = "0x8D5ED0")]
			public Collider lookAtTarget;

			[Token(Token = "0x40009BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5F08", Offset = "0x8D5F08")]
			public Vector3 direction;

			[Token(Token = "0x40009BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5F40", Offset = "0x8D5F40")]
			public float maxDistance;

			[Token(Token = "0x40009C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D5F78", Offset = "0x8D5F78")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5F78", Offset = "0x8D5F78")]
			public float maxAngle;

			[Token(Token = "0x40009C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5FD0", Offset = "0x8D5FD0")]
			public bool fixYAxis;

			[Token(Token = "0x6000A5A")]
			[Address(RVA = "0x1B45DD0", Offset = "0x1B45DD0", VA = "0x1B45DD0")]
			public Quaternion GetRotation()
			{
				return default(Quaternion);
			}

			[Token(Token = "0x6000A5B")]
			[Address(RVA = "0x1B45EC4", Offset = "0x1B45EC4", VA = "0x1B45EC4")]
			public bool IsInRange(Transform raycastFrom, RaycastHit hit, Transform trigger, out float error)
			{
				return default(bool);
			}

			[Token(Token = "0x6000A5C")]
			[Address(RVA = "0x1B460EC", Offset = "0x1B460EC", VA = "0x1B460EC")]
			public CameraPosition()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200013B")]
		public class Range
		{
			[Serializable]
			[Token(Token = "0x200013C")]
			public class Interaction
			{
				[Token(Token = "0x40009C7")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D6120", Offset = "0x8D6120")]
				public InteractionObject interactionObject;

				[Token(Token = "0x40009C8")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D6158", Offset = "0x8D6158")]
				public FullBodyBipedEffector[] effectors;

				[Token(Token = "0x6000A5F")]
				[Address(RVA = "0x190D9D4", Offset = "0x190D9D4", VA = "0x190D9D4")]
				public Interaction()
				{
				}
			}

			[Token(Token = "0x40009C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[HideInInspector]
			[SerializeField]
			public string name;

			[Token(Token = "0x40009C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			[HideInInspector]
			public bool show;

			[Token(Token = "0x40009C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D6078", Offset = "0x8D6078")]
			public CharacterPosition characterPosition;

			[Token(Token = "0x40009C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D60B0", Offset = "0x8D60B0")]
			public CameraPosition cameraPosition;

			[Token(Token = "0x40009C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D60E8", Offset = "0x8D60E8")]
			public Interaction[] interactions;

			[Token(Token = "0x6000A5D")]
			[Address(RVA = "0x1B46624", Offset = "0x1B46624", VA = "0x1B46624")]
			public bool IsInRange(Transform character, Transform raycastFrom, RaycastHit raycastHit, Transform trigger, out float maxError)
			{
				return default(bool);
			}

			[Token(Token = "0x6000A5E")]
			[Address(RVA = "0x1B466D8", Offset = "0x1B466D8", VA = "0x1B466D8")]
			public Range()
			{
			}
		}

		[Token(Token = "0x40009B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5CCC", Offset = "0x8D5CCC")]
		public Range[] ranges;

		[Token(Token = "0x6000A4E")]
		[Address(RVA = "0xB13BB4", Offset = "0xB13BB4", VA = "0xB13BB4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DF90C", Offset = "0x8DF90C")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x6000A4F")]
		[Address(RVA = "0xB13BFC", Offset = "0xB13BFC", VA = "0xB13BFC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DF944", Offset = "0x8DF944")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000A50")]
		[Address(RVA = "0xB13C44", Offset = "0xB13C44", VA = "0xB13C44")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DF97C", Offset = "0x8DF97C")]
		private void OpenTutorial4()
		{
		}

		[Token(Token = "0x6000A51")]
		[Address(RVA = "0xB13C8C", Offset = "0xB13C8C", VA = "0xB13C8C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DF9B4", Offset = "0x8DF9B4")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000A52")]
		[Address(RVA = "0xB13CD4", Offset = "0xB13CD4", VA = "0xB13CD4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DF9EC", Offset = "0x8DF9EC")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000A53")]
		[Address(RVA = "0xB13D1C", Offset = "0xB13D1C", VA = "0xB13D1C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A54")]
		[Address(RVA = "0xB128D8", Offset = "0xB128D8", VA = "0xB128D8")]
		public int GetBestRangeIndex(Transform character, Transform raycastFrom, RaycastHit raycastHit)
		{
			return default(int);
		}

		[Token(Token = "0x6000A55")]
		[Address(RVA = "0xB13D20", Offset = "0xB13D20", VA = "0xB13D20")]
		public InteractionTrigger()
		{
		}
	}
	[Token(Token = "0x200013D")]
	public class GenericPoser : Poser
	{
		[Serializable]
		[Token(Token = "0x200013E")]
		public class Map
		{
			[Token(Token = "0x40009CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform bone;

			[Token(Token = "0x40009CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform target;

			[Token(Token = "0x40009CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Vector3 defaultLocalPosition;

			[Token(Token = "0x40009CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private Quaternion defaultLocalRotation;

			[Token(Token = "0x6000A67")]
			[Address(RVA = "0xC181F0", Offset = "0xC181F0", VA = "0xC181F0")]
			public Map(Transform bone, Transform target)
			{
			}

			[Token(Token = "0x6000A68")]
			[Address(RVA = "0xC1822C", Offset = "0xC1822C", VA = "0xC1822C")]
			public void StoreDefaultState()
			{
			}

			[Token(Token = "0x6000A69")]
			[Address(RVA = "0xC1827C", Offset = "0xC1827C", VA = "0xC1827C")]
			public void FixTransform()
			{
			}

			[Token(Token = "0x6000A6A")]
			[Address(RVA = "0xC182C8", Offset = "0xC182C8", VA = "0xC182C8")]
			public void Update(float localRotationWeight, float localPositionWeight)
			{
			}
		}

		[Token(Token = "0x40009C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Map[] maps;

		[Token(Token = "0x6000A60")]
		[Address(RVA = "0x15384C0", Offset = "0x15384C0", VA = "0x15384C0", Slot = "7")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DFA24", Offset = "0x8DFA24")]
		public override void AutoMapping()
		{
		}

		[Token(Token = "0x6000A61")]
		[Address(RVA = "0x153883C", Offset = "0x153883C", VA = "0x153883C", Slot = "8")]
		protected override void InitiatePoser()
		{
		}

		[Token(Token = "0x6000A62")]
		[Address(RVA = "0x1538840", Offset = "0x1538840", VA = "0x1538840", Slot = "9")]
		protected override void UpdatePoser()
		{
		}

		[Token(Token = "0x6000A63")]
		[Address(RVA = "0x1538948", Offset = "0x1538948", VA = "0x1538948", Slot = "10")]
		protected override void FixPoserTransforms()
		{
		}

		[Token(Token = "0x6000A64")]
		[Address(RVA = "0x15387D0", Offset = "0x15387D0", VA = "0x15387D0")]
		private void StoreDefaultState()
		{
		}

		[Token(Token = "0x6000A65")]
		[Address(RVA = "0x1538730", Offset = "0x1538730", VA = "0x1538730")]
		private Transform GetTargetNamed(string tName, Transform[] array)
		{
			return null;
		}

		[Token(Token = "0x6000A66")]
		[Address(RVA = "0x15389B4", Offset = "0x15389B4", VA = "0x15389B4")]
		public GenericPoser()
		{
		}
	}
	[Token(Token = "0x200013F")]
	public class HandPoser : Poser
	{
		[Token(Token = "0x40009CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected Transform[] children;

		[Token(Token = "0x40009CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform _poseRoot;

		[Token(Token = "0x40009D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform[] poseChildren;

		[Token(Token = "0x40009D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3[] defaultLocalPositions;

		[Token(Token = "0x40009D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Quaternion[] defaultLocalRotations;

		[Token(Token = "0x6000A6B")]
		[Address(RVA = "0x1568360", Offset = "0x1568360", VA = "0x1568360", Slot = "7")]
		public override void AutoMapping()
		{
		}

		[Token(Token = "0x6000A6C")]
		[Address(RVA = "0x1568428", Offset = "0x1568428", VA = "0x1568428", Slot = "8")]
		protected override void InitiatePoser()
		{
		}

		[Token(Token = "0x6000A6D")]
		[Address(RVA = "0x15685E4", Offset = "0x15685E4", VA = "0x15685E4", Slot = "10")]
		protected override void FixPoserTransforms()
		{
		}

		[Token(Token = "0x6000A6E")]
		[Address(RVA = "0x15686E0", Offset = "0x15686E0", VA = "0x15686E0", Slot = "9")]
		protected override void UpdatePoser()
		{
		}

		[Token(Token = "0x6000A6F")]
		[Address(RVA = "0x1568480", Offset = "0x1568480", VA = "0x1568480")]
		protected void StoreDefaultState()
		{
		}

		[Token(Token = "0x6000A70")]
		[Address(RVA = "0x1568A40", Offset = "0x1568A40", VA = "0x1568A40")]
		public HandPoser()
		{
		}
	}
	[Token(Token = "0x2000140")]
	public abstract class Poser : SolverManager
	{
		[Token(Token = "0x40009D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform poseRoot;

		[Token(Token = "0x40009D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D6190", Offset = "0x8D6190")]
		public float weight;

		[Token(Token = "0x40009D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D61A8", Offset = "0x8D61A8")]
		public float localRotationWeight;

		[Token(Token = "0x40009D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D61C0", Offset = "0x8D61C0")]
		public float localPositionWeight;

		[Token(Token = "0x40009D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool initiated;

		[Token(Token = "0x6000A71")]
		public abstract void AutoMapping();

		[Token(Token = "0x6000A72")]
		[Address(RVA = "0x10A3B6C", Offset = "0x10A3B6C", VA = "0x10A3B6C")]
		public void UpdateManual()
		{
		}

		[Token(Token = "0x6000A73")]
		protected abstract void InitiatePoser();

		[Token(Token = "0x6000A74")]
		protected abstract void UpdatePoser();

		[Token(Token = "0x6000A75")]
		protected abstract void FixPoserTransforms();

		[Token(Token = "0x6000A76")]
		[Address(RVA = "0x10A3B78", Offset = "0x10A3B78", VA = "0x10A3B78", Slot = "5")]
		protected override void UpdateSolver()
		{
		}

		[Token(Token = "0x6000A77")]
		[Address(RVA = "0x10A3BCC", Offset = "0x10A3BCC", VA = "0x10A3BCC", Slot = "4")]
		protected override void InitiateSolver()
		{
		}

		[Token(Token = "0x6000A78")]
		[Address(RVA = "0x10A3C08", Offset = "0x10A3C08", VA = "0x10A3C08", Slot = "6")]
		protected override void FixTransforms()
		{
		}

		[Token(Token = "0x6000A79")]
		[Address(RVA = "0x10A3C20", Offset = "0x10A3C20", VA = "0x10A3C20")]
		protected Poser()
		{
		}
	}
	[Token(Token = "0x2000141")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8CBEE0", Offset = "0x8CBEE0")]
	public class RagdollUtility : MonoBehaviour
	{
		[Token(Token = "0x2000142")]
		public class Rigidbone
		{
			[Token(Token = "0x40009E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody r;

			[Token(Token = "0x40009E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform t;

			[Token(Token = "0x40009EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Collider collider;

			[Token(Token = "0x40009EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Joint joint;

			[Token(Token = "0x40009EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Rigidbody c;

			[Token(Token = "0x40009ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public bool updateAnchor;

			[Token(Token = "0x40009EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public Vector3 deltaPosition;

			[Token(Token = "0x40009EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Quaternion deltaRotation;

			[Token(Token = "0x40009F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public float deltaTime;

			[Token(Token = "0x40009F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public Vector3 lastPosition;

			[Token(Token = "0x40009F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public Quaternion lastRotation;

			[Token(Token = "0x6000A8C")]
			[Address(RVA = "0x1909420", Offset = "0x1909420", VA = "0x1909420")]
			public Rigidbone(Rigidbody r)
			{
			}

			[Token(Token = "0x6000A8D")]
			[Address(RVA = "0x1909590", Offset = "0x1909590", VA = "0x1909590")]
			public void RecordVelocity()
			{
			}

			[Token(Token = "0x6000A8E")]
			[Address(RVA = "0x1909670", Offset = "0x1909670", VA = "0x1909670")]
			public void WakeUp(float velocityWeight, float angularVelocityWeight)
			{
			}
		}

		[Token(Token = "0x2000143")]
		public class Child
		{
			[Token(Token = "0x40009F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform t;

			[Token(Token = "0x40009F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 localPosition;

			[Token(Token = "0x40009F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Quaternion localRotation;

			[Token(Token = "0x6000A8F")]
			[Address(RVA = "0x1909230", Offset = "0x1909230", VA = "0x1909230")]
			public Child(Transform transform)
			{
			}

			[Token(Token = "0x6000A90")]
			[Address(RVA = "0x1909290", Offset = "0x1909290", VA = "0x1909290")]
			public void FixTransform(float weight)
			{
			}

			[Token(Token = "0x6000A91")]
			[Address(RVA = "0x19093D0", Offset = "0x19093D0", VA = "0x19093D0")]
			public void StoreLocalState()
			{
			}
		}

		[Token(Token = "0x2000144")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CBF40", Offset = "0x8CBF40")]
		private sealed class <DisableRagdollSmooth>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40009F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40009F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40009F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RagdollUtility <>4__this;

			[Token(Token = "0x17000112")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000A95")]
				[Address(RVA = "0x19091E0", Offset = "0x19091E0", VA = "0x19091E0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000113")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000A97")]
				[Address(RVA = "0x1909228", Offset = "0x1909228", VA = "0x1909228", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000A92")]
			[Address(RVA = "0x1908FC4", Offset = "0x1908FC4", VA = "0x1908FC4")]
			[DebuggerHidden]
			public <DisableRagdollSmooth>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6000A93")]
			[Address(RVA = "0x1908FF0", Offset = "0x1908FF0", VA = "0x1908FF0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000A94")]
			[Address(RVA = "0x1908FF4", Offset = "0x1908FF4", VA = "0x1908FF4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000A96")]
			[Address(RVA = "0x19091E8", Offset = "0x19091E8", VA = "0x19091E8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40009D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D61D8", Offset = "0x8D61D8")]
		public IK ik;

		[Token(Token = "0x40009D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D6210", Offset = "0x8D6210")]
		public float ragdollToAnimationTime;

		[Token(Token = "0x40009DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D6248", Offset = "0x8D6248")]
		public bool applyIkOnRagdoll;

		[Token(Token = "0x40009DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D6280", Offset = "0x8D6280")]
		public float applyVelocity;

		[Token(Token = "0x40009DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D62B8", Offset = "0x8D62B8")]
		public float applyAngularVelocity;

		[Token(Token = "0x40009DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Animator animator;

		[Token(Token = "0x40009DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Rigidbone[] rigidbones;

		[Token(Token = "0x40009DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Child[] children;

		[Token(Token = "0x40009E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool enableRagdollFlag;

		[Token(Token = "0x40009E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private AnimatorUpdateMode animatorUpdateMode;

		[Token(Token = "0x40009E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private IK[] allIKComponents;

		[Token(Token = "0x40009E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool[] fixTransforms;

		[Token(Token = "0x40009E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float ragdollWeight;

		[Token(Token = "0x40009E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float ragdollWeightV;

		[Token(Token = "0x40009E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool fixedFrame;

		[Token(Token = "0x40009E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool[] disabledIKComponents;

		[Token(Token = "0x17000110")]
		private bool isRagdoll
		{
			[Token(Token = "0x6000A85")]
			[Address(RVA = "0xE5D030", Offset = "0xE5D030", VA = "0xE5D030")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000111")]
		private bool ikUsed
		{
			[Token(Token = "0x6000A87")]
			[Address(RVA = "0xE5D9B8", Offset = "0xE5D9B8", VA = "0xE5D9B8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000A7A")]
		[Address(RVA = "0xE5CFF8", Offset = "0xE5CFF8", VA = "0xE5CFF8")]
		public void EnableRagdoll()
		{
		}

		[Token(Token = "0x6000A7B")]
		[Address(RVA = "0xE5D0A8", Offset = "0xE5D0A8", VA = "0xE5D0A8")]
		public void DisableRagdoll()
		{
		}

		[Token(Token = "0x6000A7C")]
		[Address(RVA = "0xE5D1D8", Offset = "0xE5D1D8", VA = "0xE5D1D8")]
		public void Start()
		{
		}

		[Token(Token = "0x6000A7D")]
		[Address(RVA = "0xE5D16C", Offset = "0xE5D16C", VA = "0xE5D16C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DFA5C", Offset = "0x8DFA5C")]
		private IEnumerator DisableRagdollSmooth()
		{
			return null;
		}

		[Token(Token = "0x6000A7E")]
		[Address(RVA = "0xE5D5F4", Offset = "0xE5D5F4", VA = "0xE5D5F4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A7F")]
		[Address(RVA = "0xE5D840", Offset = "0xE5D840", VA = "0xE5D840")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000A80")]
		[Address(RVA = "0xE5D8FC", Offset = "0xE5D8FC", VA = "0xE5D8FC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000A81")]
		[Address(RVA = "0xE5DB38", Offset = "0xE5DB38", VA = "0xE5DB38")]
		private void AfterLastIK()
		{
		}

		[Token(Token = "0x6000A82")]
		[Address(RVA = "0xE5D97C", Offset = "0xE5D97C", VA = "0xE5D97C")]
		private void AfterAnimation()
		{
		}

		[Token(Token = "0x6000A83")]
		[Address(RVA = "0xE5DAF4", Offset = "0xE5DAF4", VA = "0xE5DAF4")]
		private void OnFinalPose()
		{
		}

		[Token(Token = "0x6000A84")]
		[Address(RVA = "0xE5DBD8", Offset = "0xE5DBD8", VA = "0xE5DBD8")]
		private void RagdollEnabler()
		{
		}

		[Token(Token = "0x6000A86")]
		[Address(RVA = "0xE5DB6C", Offset = "0xE5DB6C", VA = "0xE5DB6C")]
		private void RecordVelocities()
		{
		}

		[Token(Token = "0x6000A88")]
		[Address(RVA = "0xE5D100", Offset = "0xE5D100", VA = "0xE5D100")]
		private void StoreLocalState()
		{
		}

		[Token(Token = "0x6000A89")]
		[Address(RVA = "0xE5D880", Offset = "0xE5D880", VA = "0xE5D880")]
		private void FixTransforms(float weight)
		{
		}

		[Token(Token = "0x6000A8A")]
		[Address(RVA = "0xE5DE04", Offset = "0xE5DE04", VA = "0xE5DE04")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000A8B")]
		[Address(RVA = "0xE5DF1C", Offset = "0xE5DF1C", VA = "0xE5DF1C")]
		public RagdollUtility()
		{
		}
	}
	[Token(Token = "0x2000145")]
	public abstract class RotationLimit : MonoBehaviour
	{
		[Token(Token = "0x40009F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 axis;

		[Token(Token = "0x40009FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[HideInInspector]
		public Quaternion defaultLocalRotation;

		[Token(Token = "0x40009FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6300", Offset = "0x8D6300")]
		private bool <defaultLocalRotationOverride>k__BackingField;

		[Token(Token = "0x40009FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		private bool initiated;

		[Token(Token = "0x40009FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
		private bool applicationQuit;

		[Token(Token = "0x40009FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x37")]
		private bool defaultLocalRotationSet;

		[Token(Token = "0x17000114")]
		public Vector3 secondaryAxis
		{
			[Token(Token = "0x6000A9D")]
			[Address(RVA = "0xE60AA8", Offset = "0xE60AA8", VA = "0xE60AA8")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000115")]
		public Vector3 crossAxis
		{
			[Token(Token = "0x6000A9E")]
			[Address(RVA = "0xE60AB4", Offset = "0xE60AB4", VA = "0xE60AB4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000116")]
		public bool defaultLocalRotationOverride
		{
			[Token(Token = "0x6000A9F")]
			[Address(RVA = "0xE60AD0", Offset = "0xE60AD0", VA = "0xE60AD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFB0C", Offset = "0x8DFB0C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000AA0")]
			[Address(RVA = "0xE60AD8", Offset = "0xE60AD8", VA = "0xE60AD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFB1C", Offset = "0x8DFB1C")]
			private set
			{
			}
		}

		[Token(Token = "0x6000A98")]
		[Address(RVA = "0xE607A8", Offset = "0xE607A8", VA = "0xE607A8")]
		public void SetDefaultLocalRotation()
		{
		}

		[Token(Token = "0x6000A99")]
		[Address(RVA = "0xE607F0", Offset = "0xE607F0", VA = "0xE607F0")]
		public void SetDefaultLocalRotation(Quaternion localRotation)
		{
		}

		[Token(Token = "0x6000A9A")]
		[Address(RVA = "0xE60808", Offset = "0xE60808", VA = "0xE60808")]
		public Quaternion GetLimitedLocalRotation(Quaternion localRotation, out bool changed)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000A9B")]
		[Address(RVA = "0xE60A00", Offset = "0xE60A00", VA = "0xE60A00")]
		public bool Apply()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A9C")]
		[Address(RVA = "0xE60A70", Offset = "0xE60A70", VA = "0xE60A70")]
		public void Disable()
		{
		}

		[Token(Token = "0x6000AA1")]
		protected abstract Quaternion LimitRotation(Quaternion rotation);

		[Token(Token = "0x6000AA2")]
		[Address(RVA = "0xE60928", Offset = "0xE60928", VA = "0xE60928")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000AA3")]
		[Address(RVA = "0xE60AE4", Offset = "0xE60AE4", VA = "0xE60AE4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000AA4")]
		[Address(RVA = "0xE60AE8", Offset = "0xE60AE8", VA = "0xE60AE8")]
		public void LogWarning(string message)
		{
		}

		[Token(Token = "0x6000AA5")]
		[Address(RVA = "0xE60B1C", Offset = "0xE60B1C", VA = "0xE60B1C")]
		protected static Quaternion Limit1DOF(Quaternion rotation, Vector3 axis)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000AA6")]
		[Address(RVA = "0xE60B98", Offset = "0xE60B98", VA = "0xE60B98")]
		protected static Quaternion LimitTwist(Quaternion rotation, Vector3 axis, Vector3 orthoAxis, float twistLimit)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000AA7")]
		[Address(RVA = "0xE60D2C", Offset = "0xE60D2C", VA = "0xE60D2C")]
		protected static float GetOrthogonalAngle(Vector3 v1, Vector3 v2, Vector3 normal)
		{
			return default(float);
		}

		[Token(Token = "0x6000AA8")]
		[Address(RVA = "0xE60D9C", Offset = "0xE60D9C", VA = "0xE60D9C")]
		protected RotationLimit()
		{
		}
	}
	[Token(Token = "0x2000146")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x8CBF50", Offset = "0x8CBF50")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8CBF50", Offset = "0x8CBF50")]
	public class RotationLimitAngle : RotationLimit
	{
		[Token(Token = "0x40009FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D6310", Offset = "0x8D6310")]
		public float limit;

		[Token(Token = "0x4000A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D632C", Offset = "0x8D632C")]
		public float twistLimit;

		[Token(Token = "0x6000AA9")]
		[Address(RVA = "0xE60DD0", Offset = "0xE60DD0", VA = "0xE60DD0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DFB2C", Offset = "0x8DFB2C")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x6000AAA")]
		[Address(RVA = "0xE60E18", Offset = "0xE60E18", VA = "0xE60E18")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DFB64", Offset = "0x8DFB64")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000AAB")]
		[Address(RVA = "0xE60E60", Offset = "0xE60E60", VA = "0xE60E60")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DFB9C", Offset = "0x8DFB9C")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000AAC")]
		[Address(RVA = "0xE60EA8", Offset = "0xE60EA8", VA = "0xE60EA8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DFBD4", Offset = "0x8DFBD4")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000AAD")]
		[Address(RVA = "0xE60EF0", Offset = "0xE60EF0", VA = "0xE60EF0", Slot = "4")]
		protected override Quaternion LimitRotation(Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000AAE")]
		[Address(RVA = "0xE60F34", Offset = "0xE60F34", VA = "0xE60F34")]
		private Quaternion LimitSwing(Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000AAF")]
		[Address(RVA = "0xE610F4", Offset = "0xE610F4", VA = "0xE610F4")]
		public RotationLimitAngle()
		{
		}
	}
	[Token(Token = "0x2000147")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x8CBFB0", Offset = "0x8CBFB0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8CBFB0", Offset = "0x8CBFB0")]
	public class RotationLimitHinge : RotationLimit
	{
		[Token(Token = "0x4000A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool useLimits;

		[Token(Token = "0x4000A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float min;

		[Token(Token = "0x4000A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float max;

		[Token(Token = "0x4000A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[HideInInspector]
		public float zeroAxisDisplayOffset;

		[Token(Token = "0x4000A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Quaternion lastRotation;

		[Token(Token = "0x4000A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float lastAngle;

		[Token(Token = "0x6000AB0")]
		[Address(RVA = "0xE61134", Offset = "0xE61134", VA = "0xE61134")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DFC0C", Offset = "0x8DFC0C")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x6000AB1")]
		[Address(RVA = "0xE6117C", Offset = "0xE6117C", VA = "0xE6117C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DFC44", Offset = "0x8DFC44")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000AB2")]
		[Address(RVA = "0xE611C4", Offset = "0xE611C4", VA = "0xE611C4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DFC7C", Offset = "0x8DFC7C")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000AB3")]
		[Address(RVA = "0xE6120C", Offset = "0xE6120C", VA = "0xE6120C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DFCB4", Offset = "0x8DFCB4")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000AB4")]
		[Address(RVA = "0xE61254", Offset = "0xE61254", VA = "0xE61254", Slot = "4")]
		protected override Quaternion LimitRotation(Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000AB5")]
		[Address(RVA = "0xE6127C", Offset = "0xE6127C", VA = "0xE6127C")]
		private Quaternion LimitHinge(Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000AB6")]
		[Address(RVA = "0xE61478", Offset = "0xE61478", VA = "0xE61478")]
		public RotationLimitHinge()
		{
		}
	}
	[Token(Token = "0x2000148")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8CC010", Offset = "0x8CC010")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x8CC010", Offset = "0x8CC010")]
	public class RotationLimitPolygonal : RotationLimit
	{
		[Serializable]
		[Token(Token = "0x2000149")]
		public class ReachCone
		{
			[Token(Token = "0x4000A0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3[] tetrahedron;

			[Token(Token = "0x4000A0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float volume;

			[Token(Token = "0x4000A0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 S;

			[Token(Token = "0x4000A0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 B;

			[Token(Token = "0x17000117")]
			public Vector3 o
			{
				[Token(Token = "0x6000AC7")]
				[Address(RVA = "0x1909A78", Offset = "0x1909A78", VA = "0x1909A78")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x17000118")]
			public Vector3 a
			{
				[Token(Token = "0x6000AC8")]
				[Address(RVA = "0x1909AB0", Offset = "0x1909AB0", VA = "0x1909AB0")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x17000119")]
			public Vector3 b
			{
				[Token(Token = "0x6000AC9")]
				[Address(RVA = "0x1909AEC", Offset = "0x1909AEC", VA = "0x1909AEC")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x1700011A")]
			public Vector3 c
			{
				[Token(Token = "0x6000ACA")]
				[Address(RVA = "0x1909B28", Offset = "0x1909B28", VA = "0x1909B28")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x1700011B")]
			public bool isValid
			{
				[Token(Token = "0x6000ACC")]
				[Address(RVA = "0x1909CA0", Offset = "0x1909CA0", VA = "0x1909CA0")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6000ACB")]
			[Address(RVA = "0x1909B64", Offset = "0x1909B64", VA = "0x1909B64")]
			public ReachCone(Vector3 _o, Vector3 _a, Vector3 _b, Vector3 _c)
			{
			}

			[Token(Token = "0x6000ACD")]
			[Address(RVA = "0x1909CB0", Offset = "0x1909CB0", VA = "0x1909CB0")]
			public void Calculate()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200014A")]
		public class LimitPoint
		{
			[Token(Token = "0x4000A10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 point;

			[Token(Token = "0x4000A11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float tangentWeight;

			[Token(Token = "0x6000ACE")]
			[Address(RVA = "0x1909A3C", Offset = "0x1909A3C", VA = "0x1909A3C")]
			public LimitPoint()
			{
			}
		}

		[Token(Token = "0x4000A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D6358", Offset = "0x8D6358")]
		public float twistLimit;

		[Token(Token = "0x4000A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D6374", Offset = "0x8D6374")]
		public int smoothIterations;

		[Token(Token = "0x4000A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[HideInInspector]
		public LimitPoint[] points;

		[Token(Token = "0x4000A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[HideInInspector]
		public Vector3[] P;

		[Token(Token = "0x4000A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[HideInInspector]
		public ReachCone[] reachCones;

		[Token(Token = "0x6000AB7")]
		[Address(RVA = "0xE614D0", Offset = "0xE614D0", VA = "0xE614D0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DFCEC", Offset = "0x8DFCEC")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x6000AB8")]
		[Address(RVA = "0xE61518", Offset = "0xE61518", VA = "0xE61518")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DFD24", Offset = "0x8DFD24")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000AB9")]
		[Address(RVA = "0xE61560", Offset = "0xE61560", VA = "0xE61560")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DFD5C", Offset = "0x8DFD5C")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000ABA")]
		[Address(RVA = "0xE615A8", Offset = "0xE615A8", VA = "0xE615A8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DFD94", Offset = "0x8DFD94")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000ABB")]
		[Address(RVA = "0xE615F0", Offset = "0xE615F0", VA = "0xE615F0")]
		public void SetLimitPoints(LimitPoint[] points)
		{
		}

		[Token(Token = "0x6000ABC")]
		[Address(RVA = "0xE61A90", Offset = "0xE61A90", VA = "0xE61A90", Slot = "4")]
		protected override Quaternion LimitRotation(Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000ABD")]
		[Address(RVA = "0xE61B24", Offset = "0xE61B24", VA = "0xE61B24")]
		private void Start()
		{
		}

		[Token(Token = "0x6000ABE")]
		[Address(RVA = "0xE62050", Offset = "0xE62050", VA = "0xE62050")]
		public void ResetToDefault()
		{
		}

		[Token(Token = "0x6000ABF")]
		[Address(RVA = "0xE6168C", Offset = "0xE6168C", VA = "0xE6168C")]
		public void BuildReachCones()
		{
		}

		[Token(Token = "0x6000AC0")]
		[Address(RVA = "0xE623D0", Offset = "0xE623D0", VA = "0xE623D0")]
		private Vector3[] SmoothPoints()
		{
			return null;
		}

		[Token(Token = "0x6000AC1")]
		[Address(RVA = "0xE627DC", Offset = "0xE627DC", VA = "0xE627DC")]
		private float GetScalar(int k)
		{
			return default(float);
		}

		[Token(Token = "0x6000AC2")]
		[Address(RVA = "0xE62820", Offset = "0xE62820", VA = "0xE62820")]
		private Vector3 PointToTangentPlane(Vector3 p, float r)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000AC3")]
		[Address(RVA = "0xE62880", Offset = "0xE62880", VA = "0xE62880")]
		private Vector3 TangentPointToSphere(Vector3 q, float r)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000AC4")]
		[Address(RVA = "0xE61DE0", Offset = "0xE61DE0", VA = "0xE61DE0")]
		private Quaternion LimitSwing(Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000AC5")]
		[Address(RVA = "0xE628EC", Offset = "0xE628EC", VA = "0xE628EC")]
		private int GetReachCone(Vector3 L)
		{
			return default(int);
		}

		[Token(Token = "0x6000AC6")]
		[Address(RVA = "0xE629C8", Offset = "0xE629C8", VA = "0xE629C8")]
		public RotationLimitPolygonal()
		{
		}
	}
	[Token(Token = "0x200014B")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8CC070", Offset = "0x8CC070")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x8CC070", Offset = "0x8CC070")]
	public class RotationLimitSpline : RotationLimit
	{
		[Token(Token = "0x4000A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D6434", Offset = "0x8D6434")]
		public float twistLimit;

		[Token(Token = "0x4000A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[HideInInspector]
		public AnimationCurve spline;

		[Token(Token = "0x6000ACF")]
		[Address(RVA = "0xE62A3C", Offset = "0xE62A3C", VA = "0xE62A3C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DFDCC", Offset = "0x8DFDCC")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x6000AD0")]
		[Address(RVA = "0xE62A84", Offset = "0xE62A84", VA = "0xE62A84")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DFE04", Offset = "0x8DFE04")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000AD1")]
		[Address(RVA = "0xE62ACC", Offset = "0xE62ACC", VA = "0xE62ACC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DFE3C", Offset = "0x8DFE3C")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000AD2")]
		[Address(RVA = "0xE62B14", Offset = "0xE62B14", VA = "0xE62B14")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DFE74", Offset = "0x8DFE74")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000AD3")]
		[Address(RVA = "0xE62B5C", Offset = "0xE62B5C", VA = "0xE62B5C")]
		public void SetSpline(Keyframe[] keyframes)
		{
		}

		[Token(Token = "0x6000AD4")]
		[Address(RVA = "0xE62B78", Offset = "0xE62B78", VA = "0xE62B78", Slot = "4")]
		protected override Quaternion LimitRotation(Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000AD5")]
		[Address(RVA = "0xE62BBC", Offset = "0xE62BBC", VA = "0xE62BBC")]
		public Quaternion LimitSwing(Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000AD6")]
		[Address(RVA = "0xE62DE0", Offset = "0xE62DE0", VA = "0xE62DE0")]
		public RotationLimitSpline()
		{
		}
	}
	[Token(Token = "0x200014C")]
	public class AimController : MonoBehaviour
	{
		[Token(Token = "0x200014D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CC0D0", Offset = "0x8CC0D0")]
		private sealed class <TurnToTarget>d__33 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000A2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000A30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000A31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AimController <>4__this;

			[Token(Token = "0x1700011D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000AE1")]
				[Address(RVA = "0xC13454", Offset = "0xC13454", VA = "0xC13454", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700011E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000AE3")]
				[Address(RVA = "0xC1349C", Offset = "0xC1349C", VA = "0xC1349C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000ADE")]
			[Address(RVA = "0xC13364", Offset = "0xC13364", VA = "0xC13364")]
			[DebuggerHidden]
			public <TurnToTarget>d__33(int <>1__state)
			{
			}

			[Token(Token = "0x6000ADF")]
			[Address(RVA = "0xC13390", Offset = "0xC13390", VA = "0xC13390", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000AE0")]
			[Address(RVA = "0xC13394", Offset = "0xC13394", VA = "0xC13394", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000AE2")]
			[Address(RVA = "0xC1345C", Offset = "0xC1345C", VA = "0xC1345C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D6488", Offset = "0x8D6488")]
		public AimIK ik;

		[Token(Token = "0x4000A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D64C0", Offset = "0x8D64C0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D64C0", Offset = "0x8D64C0")]
		public float weight;

		[Token(Token = "0x4000A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D6514", Offset = "0x8D6514")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D6514", Offset = "0x8D6514")]
		public Transform target;

		[Token(Token = "0x4000A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D6574", Offset = "0x8D6574")]
		public float targetSwitchSmoothTime;

		[Token(Token = "0x4000A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D65AC", Offset = "0x8D65AC")]
		public float weightSmoothTime;

		[Token(Token = "0x4000A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D65E4", Offset = "0x8D65E4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D65E4", Offset = "0x8D65E4")]
		public bool smoothTurnTowardsTarget;

		[Token(Token = "0x4000A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D6644", Offset = "0x8D6644")]
		public float maxRadiansDelta;

		[Token(Token = "0x4000A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D667C", Offset = "0x8D667C")]
		public float maxMagnitudeDelta;

		[Token(Token = "0x4000A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D66B4", Offset = "0x8D66B4")]
		public float slerpSpeed;

		[Token(Token = "0x4000A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D66EC", Offset = "0x8D66EC")]
		public Vector3 pivotOffsetFromRoot;

		[Token(Token = "0x4000A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D6724", Offset = "0x8D6724")]
		public float minDistance;

		[Token(Token = "0x4000A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D675C", Offset = "0x8D675C")]
		public Vector3 offset;

		[Token(Token = "0x4000A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D6794", Offset = "0x8D6794")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D6794", Offset = "0x8D6794")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D6794", Offset = "0x8D6794")]
		public float maxRootAngle;

		[Token(Token = "0x4000A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D6810", Offset = "0x8D6810")]
		public bool turnToTarget;

		[Token(Token = "0x4000A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D6848", Offset = "0x8D6848")]
		public float turnToTargetTime;

		[Token(Token = "0x4000A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D6880", Offset = "0x8D6880")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D6880", Offset = "0x8D6880")]
		public bool useAnimatedAimDirection;

		[Token(Token = "0x4000A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D68E0", Offset = "0x8D68E0")]
		public Vector3 animatedAimDirection;

		[Token(Token = "0x4000A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Transform lastTarget;

		[Token(Token = "0x4000A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float switchWeight;

		[Token(Token = "0x4000A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float switchWeightV;

		[Token(Token = "0x4000A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float weightV;

		[Token(Token = "0x4000A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private Vector3 lastPosition;

		[Token(Token = "0x4000A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Vector3 dir;

		[Token(Token = "0x4000A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private bool lastSmoothTowardsTarget;

		[Token(Token = "0x4000A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAD")]
		private bool turningToTarget;

		[Token(Token = "0x4000A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float turnToTargetMlp;

		[Token(Token = "0x4000A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private float turnToTargetMlpV;

		[Token(Token = "0x1700011C")]
		private Vector3 pivot
		{
			[Token(Token = "0x6000AD9")]
			[Address(RVA = "0xD656A0", Offset = "0xD656A0", VA = "0xD656A0")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6000AD7")]
		[Address(RVA = "0xD65618", Offset = "0xD65618", VA = "0xD65618")]
		private void Start()
		{
		}

		[Token(Token = "0x6000AD8")]
		[Address(RVA = "0xD65730", Offset = "0xD65730", VA = "0xD65730")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000ADA")]
		[Address(RVA = "0xD65C88", Offset = "0xD65C88", VA = "0xD65C88")]
		private void ApplyMinDistance()
		{
		}

		[Token(Token = "0x6000ADB")]
		[Address(RVA = "0xD65D74", Offset = "0xD65D74", VA = "0xD65D74")]
		private void RootRotation()
		{
		}

		[Token(Token = "0x6000ADC")]
		[Address(RVA = "0xD65FC4", Offset = "0xD65FC4", VA = "0xD65FC4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DFEAC", Offset = "0x8DFEAC")]
		private IEnumerator TurnToTarget()
		{
			return null;
		}

		[Token(Token = "0x6000ADD")]
		[Address(RVA = "0xD66030", Offset = "0xD66030", VA = "0xD66030")]
		public AimController()
		{
		}
	}
	[Token(Token = "0x200014E")]
	public class AimPoser : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200014F")]
		public class Pose
		{
			[Token(Token = "0x4000A34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool visualize;

			[Token(Token = "0x4000A35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string name;

			[Token(Token = "0x4000A36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 direction;

			[Token(Token = "0x4000A37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float yaw;

			[Token(Token = "0x4000A38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float pitch;

			[Token(Token = "0x4000A39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float angleBuffer;

			[Token(Token = "0x6000AE7")]
			[Address(RVA = "0xC134A4", Offset = "0xC134A4", VA = "0xC134A4")]
			public bool IsInDirection(Vector3 d)
			{
				return default(bool);
			}

			[Token(Token = "0x6000AE8")]
			[Address(RVA = "0xC13630", Offset = "0xC13630", VA = "0xC13630")]
			public void SetAngleBuffer(float value)
			{
			}

			[Token(Token = "0x6000AE9")]
			[Address(RVA = "0xC13638", Offset = "0xC13638", VA = "0xC13638")]
			public Pose()
			{
			}
		}

		[Token(Token = "0x4000A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float angleBuffer;

		[Token(Token = "0x4000A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Pose[] poses;

		[Token(Token = "0x6000AE4")]
		[Address(RVA = "0xD66294", Offset = "0xD66294", VA = "0xD66294")]
		public Pose GetPose(Vector3 localDirection)
		{
			return null;
		}

		[Token(Token = "0x6000AE5")]
		[Address(RVA = "0xD66374", Offset = "0xD66374", VA = "0xD66374")]
		public void SetPoseActive(Pose pose)
		{
		}

		[Token(Token = "0x6000AE6")]
		[Address(RVA = "0xD663E0", Offset = "0xD663E0", VA = "0xD663E0")]
		public AimPoser()
		{
		}
	}
	[Token(Token = "0x2000150")]
	public class Amplifier : OffsetModifier
	{
		[Serializable]
		[Token(Token = "0x2000151")]
		public class Body
		{
			[Serializable]
			[Token(Token = "0x2000152")]
			public class EffectorLink
			{
				[Token(Token = "0x4000A44")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D6AA0", Offset = "0x8D6AA0")]
				public FullBodyBipedEffector effector;

				[Token(Token = "0x4000A45")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D6AD8", Offset = "0x8D6AD8")]
				public float weight;

				[Token(Token = "0x6000AEF")]
				[Address(RVA = "0x190D5A4", Offset = "0x190D5A4", VA = "0x190D5A4")]
				public EffectorLink()
				{
				}
			}

			[Token(Token = "0x4000A3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D6950", Offset = "0x8D6950")]
			public Transform transform;

			[Token(Token = "0x4000A3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D6988", Offset = "0x8D6988")]
			public Transform relativeTo;

			[Token(Token = "0x4000A3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D69C0", Offset = "0x8D69C0")]
			public EffectorLink[] effectorLinks;

			[Token(Token = "0x4000A3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D69F8", Offset = "0x8D69F8")]
			public float verticalWeight;

			[Token(Token = "0x4000A3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D6A30", Offset = "0x8D6A30")]
			public float horizontalWeight;

			[Token(Token = "0x4000A40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D6A68", Offset = "0x8D6A68")]
			public float speed;

			[Token(Token = "0x4000A41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Vector3 lastRelativePos;

			[Token(Token = "0x4000A42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Vector3 smoothDelta;

			[Token(Token = "0x4000A43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private bool firstUpdate;

			[Token(Token = "0x6000AEC")]
			[Address(RVA = "0xC13808", Offset = "0xC13808", VA = "0xC13808")]
			public void Update(IKSolverFullBodyBiped solver, float w, float deltaTime)
			{
			}

			[Token(Token = "0x6000AED")]
			[Address(RVA = "0xC13B2C", Offset = "0xC13B2C", VA = "0xC13B2C")]
			private static Vector3 Multiply(Vector3 v1, Vector3 v2)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6000AEE")]
			[Address(RVA = "0xC13B3C", Offset = "0xC13B3C", VA = "0xC13B3C")]
			public Body()
			{
			}
		}

		[Token(Token = "0x4000A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D6918", Offset = "0x8D6918")]
		public Body[] bodies;

		[Token(Token = "0x6000AEA")]
		[Address(RVA = "0xD68B48", Offset = "0xD68B48", VA = "0xD68B48", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x6000AEB")]
		[Address(RVA = "0xD68C94", Offset = "0xD68C94", VA = "0xD68C94")]
		public Amplifier()
		{
		}
	}
	[Token(Token = "0x2000153")]
	public class BodyTilt : OffsetModifier
	{
		[Token(Token = "0x4000A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D6B10", Offset = "0x8D6B10")]
		public float tiltSpeed;

		[Token(Token = "0x4000A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D6B48", Offset = "0x8D6B48")]
		public float tiltSensitivity;

		[Token(Token = "0x4000A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D6B80", Offset = "0x8D6B80")]
		public OffsetPose poseLeft;

		[Token(Token = "0x4000A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D6BB8", Offset = "0x8D6BB8")]
		public OffsetPose poseRight;

		[Token(Token = "0x4000A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float tiltAngle;

		[Token(Token = "0x4000A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 lastForward;

		[Token(Token = "0x6000AF0")]
		[Address(RVA = "0x1072B18", Offset = "0x1072B18", VA = "0x1072B18", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000AF1")]
		[Address(RVA = "0x1072B60", Offset = "0x1072B60", VA = "0x1072B60", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x6000AF2")]
		[Address(RVA = "0x1072D18", Offset = "0x1072D18", VA = "0x1072D18")]
		public BodyTilt()
		{
		}
	}
	[Token(Token = "0x2000154")]
	[ExecuteInEditMode]
	public class EditorIK : MonoBehaviour
	{
		[Token(Token = "0x4000A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private IK ik;

		[Token(Token = "0x6000AF3")]
		[Address(RVA = "0xCC78F4", Offset = "0xCC78F4", VA = "0xCC78F4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000AF4")]
		[Address(RVA = "0xCC7984", Offset = "0xCC7984", VA = "0xCC7984")]
		private void Update()
		{
		}

		[Token(Token = "0x6000AF5")]
		[Address(RVA = "0xCC7A50", Offset = "0xCC7A50", VA = "0xCC7A50")]
		public EditorIK()
		{
		}
	}
	[Token(Token = "0x2000155")]
	public class HitReaction : OffsetModifier
	{
		[Serializable]
		[Token(Token = "0x2000156")]
		public abstract class HitPoint
		{
			[Token(Token = "0x4000A4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D6C60", Offset = "0x8D6C60")]
			public string name;

			[Token(Token = "0x4000A50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D6C98", Offset = "0x8D6C98")]
			public Collider collider;

			[Token(Token = "0x4000A51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D6CD0", Offset = "0x8D6CD0")]
			[SerializeField]
			private float crossFadeTime;

			[Token(Token = "0x4000A52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6D1C", Offset = "0x8D6D1C")]
			private float <crossFader>k__BackingField;

			[Token(Token = "0x4000A53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6D2C", Offset = "0x8D6D2C")]
			private float <timer>k__BackingField;

			[Token(Token = "0x4000A54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6D3C", Offset = "0x8D6D3C")]
			private Vector3 <force>k__BackingField;

			[Token(Token = "0x4000A55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6D4C", Offset = "0x8D6D4C")]
			private Vector3 <point>k__BackingField;

			[Token(Token = "0x4000A56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float length;

			[Token(Token = "0x4000A57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float crossFadeSpeed;

			[Token(Token = "0x4000A58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float lastTime;

			[Token(Token = "0x17000120")]
			public bool inProgress
			{
				[Token(Token = "0x6000AFA")]
				[Address(RVA = "0x1B36AC8", Offset = "0x1B36AC8", VA = "0x1B36AC8")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000121")]
			protected float crossFader
			{
				[Token(Token = "0x6000AFB")]
				[Address(RVA = "0x1B36ADC", Offset = "0x1B36ADC", VA = "0x1B36ADC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFF5C", Offset = "0x8DFF5C")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6000AFC")]
				[Address(RVA = "0x1B36AE4", Offset = "0x1B36AE4", VA = "0x1B36AE4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFF6C", Offset = "0x8DFF6C")]
				private set
				{
				}
			}

			[Token(Token = "0x17000122")]
			protected float timer
			{
				[Token(Token = "0x6000AFD")]
				[Address(RVA = "0x1B36AEC", Offset = "0x1B36AEC", VA = "0x1B36AEC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFF7C", Offset = "0x8DFF7C")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6000AFE")]
				[Address(RVA = "0x1B36AF4", Offset = "0x1B36AF4", VA = "0x1B36AF4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFF8C", Offset = "0x8DFF8C")]
				private set
				{
				}
			}

			[Token(Token = "0x17000123")]
			protected Vector3 force
			{
				[Token(Token = "0x6000AFF")]
				[Address(RVA = "0x1B36AFC", Offset = "0x1B36AFC", VA = "0x1B36AFC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFF9C", Offset = "0x8DFF9C")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6000B00")]
				[Address(RVA = "0x1B36B08", Offset = "0x1B36B08", VA = "0x1B36B08")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFFAC", Offset = "0x8DFFAC")]
				private set
				{
				}
			}

			[Token(Token = "0x17000124")]
			protected Vector3 point
			{
				[Token(Token = "0x6000B01")]
				[Address(RVA = "0x1B36B14", Offset = "0x1B36B14", VA = "0x1B36B14")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFFBC", Offset = "0x8DFFBC")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6000B02")]
				[Address(RVA = "0x1B36B20", Offset = "0x1B36B20", VA = "0x1B36B20")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFFCC", Offset = "0x8DFFCC")]
				private set
				{
				}
			}

			[Token(Token = "0x6000B03")]
			[Address(RVA = "0x1B36B2C", Offset = "0x1B36B2C", VA = "0x1B36B2C")]
			public void Hit(Vector3 force, Vector3 point)
			{
			}

			[Token(Token = "0x6000B04")]
			[Address(RVA = "0x1B36C60", Offset = "0x1B36C60", VA = "0x1B36C60")]
			public void Apply(IKSolverFullBodyBiped solver, float weight)
			{
			}

			[Token(Token = "0x6000B05")]
			protected abstract float GetLength();

			[Token(Token = "0x6000B06")]
			protected abstract void CrossFadeStart();

			[Token(Token = "0x6000B07")]
			protected abstract void OnApply(IKSolverFullBodyBiped solver, float weight);

			[Token(Token = "0x6000B08")]
			[Address(RVA = "0x1B36D34", Offset = "0x1B36D34", VA = "0x1B36D34")]
			protected HitPoint()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000157")]
		public class HitPointEffector : HitPoint
		{
			[Serializable]
			[Token(Token = "0x2000158")]
			public class EffectorLink
			{
				[Token(Token = "0x4000A5C")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D6E04", Offset = "0x8D6E04")]
				public FullBodyBipedEffector effector;

				[Token(Token = "0x4000A5D")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D6E3C", Offset = "0x8D6E3C")]
				public float weight;

				[Token(Token = "0x4000A5E")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private Vector3 lastValue;

				[Token(Token = "0x4000A5F")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
				private Vector3 current;

				[Token(Token = "0x6000B0D")]
				[Address(RVA = "0x190D728", Offset = "0x190D728", VA = "0x190D728")]
				public void Apply(IKSolverFullBodyBiped solver, Vector3 offset, float crossFader)
				{
				}

				[Token(Token = "0x6000B0E")]
				[Address(RVA = "0x190D7D8", Offset = "0x190D7D8", VA = "0x190D7D8")]
				public void CrossFadeStart()
				{
				}

				[Token(Token = "0x6000B0F")]
				[Address(RVA = "0x190D7EC", Offset = "0x190D7EC", VA = "0x190D7EC")]
				public EffectorLink()
				{
				}
			}

			[Token(Token = "0x4000A59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D6D5C", Offset = "0x8D6D5C")]
			public AnimationCurve offsetInForceDirection;

			[Token(Token = "0x4000A5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D6D94", Offset = "0x8D6D94")]
			public AnimationCurve offsetInUpDirection;

			[Token(Token = "0x4000A5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D6DCC", Offset = "0x8D6DCC")]
			public EffectorLink[] effectorLinks;

			[Token(Token = "0x6000B09")]
			[Address(RVA = "0x1B37060", Offset = "0x1B37060", VA = "0x1B37060", Slot = "4")]
			protected override float GetLength()
			{
				return default(float);
			}

			[Token(Token = "0x6000B0A")]
			[Address(RVA = "0x1B37190", Offset = "0x1B37190", VA = "0x1B37190", Slot = "5")]
			protected override void CrossFadeStart()
			{
			}

			[Token(Token = "0x6000B0B")]
			[Address(RVA = "0x1B371FC", Offset = "0x1B371FC", VA = "0x1B371FC", Slot = "6")]
			protected override void OnApply(IKSolverFullBodyBiped solver, float weight)
			{
			}

			[Token(Token = "0x6000B0C")]
			[Address(RVA = "0x1B37364", Offset = "0x1B37364", VA = "0x1B37364")]
			public HitPointEffector()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000159")]
		public class HitPointBone : HitPoint
		{
			[Serializable]
			[Token(Token = "0x200015A")]
			public class BoneLink
			{
				[Token(Token = "0x4000A63")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D6EE4", Offset = "0x8D6EE4")]
				public Transform bone;

				[Token(Token = "0x4000A64")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D6F1C", Offset = "0x8D6F1C")]
				[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D6F1C", Offset = "0x8D6F1C")]
				public float weight;

				[Token(Token = "0x4000A65")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
				private Quaternion lastValue;

				[Token(Token = "0x4000A66")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
				private Quaternion current;

				[Token(Token = "0x6000B14")]
				[Address(RVA = "0x190D5C0", Offset = "0x190D5C0", VA = "0x190D5C0")]
				public void Apply(IKSolverFullBodyBiped solver, Quaternion offset, float crossFader)
				{
				}

				[Token(Token = "0x6000B15")]
				[Address(RVA = "0x190D6D8", Offset = "0x190D6D8", VA = "0x190D6D8")]
				public void CrossFadeStart()
				{
				}

				[Token(Token = "0x6000B16")]
				[Address(RVA = "0x190D6E4", Offset = "0x190D6E4", VA = "0x190D6E4")]
				public BoneLink()
				{
				}
			}

			[Token(Token = "0x4000A60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D6E74", Offset = "0x8D6E74")]
			public AnimationCurve aroundCenterOfMass;

			[Token(Token = "0x4000A61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D6EAC", Offset = "0x8D6EAC")]
			public BoneLink[] boneLinks;

			[Token(Token = "0x4000A62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Rigidbody rigidbody;

			[Token(Token = "0x6000B10")]
			[Address(RVA = "0x1B36D48", Offset = "0x1B36D48", VA = "0x1B36D48", Slot = "4")]
			protected override float GetLength()
			{
				return default(float);
			}

			[Token(Token = "0x6000B11")]
			[Address(RVA = "0x1B36DEC", Offset = "0x1B36DEC", VA = "0x1B36DEC", Slot = "5")]
			protected override void CrossFadeStart()
			{
			}

			[Token(Token = "0x6000B12")]
			[Address(RVA = "0x1B36E58", Offset = "0x1B36E58", VA = "0x1B36E58", Slot = "6")]
			protected override void OnApply(IKSolverFullBodyBiped solver, float weight)
			{
			}

			[Token(Token = "0x6000B13")]
			[Address(RVA = "0x1B3704C", Offset = "0x1B3704C", VA = "0x1B3704C")]
			public HitPointBone()
			{
			}
		}

		[Token(Token = "0x4000A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D6BF0", Offset = "0x8D6BF0")]
		public HitPointEffector[] effectorHitPoints;

		[Token(Token = "0x4000A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D6C28", Offset = "0x8D6C28")]
		public HitPointBone[] boneHitPoints;

		[Token(Token = "0x1700011F")]
		public bool inProgress
		{
			[Token(Token = "0x6000AF6")]
			[Address(RVA = "0x15699A4", Offset = "0x15699A4", VA = "0x15699A4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000AF7")]
		[Address(RVA = "0x1569A74", Offset = "0x1569A74", VA = "0x1569A74", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x6000AF8")]
		[Address(RVA = "0x1569B50", Offset = "0x1569B50", VA = "0x1569B50")]
		public void Hit(Collider collider, Vector3 force, Vector3 point)
		{
		}

		[Token(Token = "0x6000AF9")]
		[Address(RVA = "0x1569DAC", Offset = "0x1569DAC", VA = "0x1569DAC")]
		public HitReaction()
		{
		}
	}
	[Token(Token = "0x200015B")]
	public class HitReactionVRIK : OffsetModifierVRIK
	{
		[Serializable]
		[Token(Token = "0x200015C")]
		public abstract class Offset
		{
			[Token(Token = "0x4000A6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D6FE0", Offset = "0x8D6FE0")]
			public string name;

			[Token(Token = "0x4000A6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7018", Offset = "0x8D7018")]
			public Collider collider;

			[Token(Token = "0x4000A6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7050", Offset = "0x8D7050")]
			private float crossFadeTime;

			[Token(Token = "0x4000A6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D709C", Offset = "0x8D709C")]
			private float <crossFader>k__BackingField;

			[Token(Token = "0x4000A6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D70AC", Offset = "0x8D70AC")]
			private float <timer>k__BackingField;

			[Token(Token = "0x4000A6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D70BC", Offset = "0x8D70BC")]
			private Vector3 <force>k__BackingField;

			[Token(Token = "0x4000A70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D70CC", Offset = "0x8D70CC")]
			private Vector3 <point>k__BackingField;

			[Token(Token = "0x4000A71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float length;

			[Token(Token = "0x4000A72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float crossFadeSpeed;

			[Token(Token = "0x4000A73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float lastTime;

			[Token(Token = "0x17000125")]
			protected float crossFader
			{
				[Token(Token = "0x6000B1A")]
				[Address(RVA = "0x1B37378", Offset = "0x1B37378", VA = "0x1B37378")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFFDC", Offset = "0x8DFFDC")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6000B1B")]
				[Address(RVA = "0x1B37380", Offset = "0x1B37380", VA = "0x1B37380")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFFEC", Offset = "0x8DFFEC")]
				private set
				{
				}
			}

			[Token(Token = "0x17000126")]
			protected float timer
			{
				[Token(Token = "0x6000B1C")]
				[Address(RVA = "0x1B37388", Offset = "0x1B37388", VA = "0x1B37388")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFFFC", Offset = "0x8DFFFC")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6000B1D")]
				[Address(RVA = "0x1B37390", Offset = "0x1B37390", VA = "0x1B37390")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E000C", Offset = "0x8E000C")]
				private set
				{
				}
			}

			[Token(Token = "0x17000127")]
			protected Vector3 force
			{
				[Token(Token = "0x6000B1E")]
				[Address(RVA = "0x1B37398", Offset = "0x1B37398", VA = "0x1B37398")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E001C", Offset = "0x8E001C")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6000B1F")]
				[Address(RVA = "0x1B373A4", Offset = "0x1B373A4", VA = "0x1B373A4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E002C", Offset = "0x8E002C")]
				private set
				{
				}
			}

			[Token(Token = "0x17000128")]
			protected Vector3 point
			{
				[Token(Token = "0x6000B20")]
				[Address(RVA = "0x1B373B0", Offset = "0x1B373B0", VA = "0x1B373B0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E003C", Offset = "0x8E003C")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6000B21")]
				[Address(RVA = "0x1B373BC", Offset = "0x1B373BC", VA = "0x1B373BC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E004C", Offset = "0x8E004C")]
				private set
				{
				}
			}

			[Token(Token = "0x6000B22")]
			[Address(RVA = "0x1B373C8", Offset = "0x1B373C8", VA = "0x1B373C8")]
			public void Hit(Vector3 force, AnimationCurve[] curves, Vector3 point)
			{
			}

			[Token(Token = "0x6000B23")]
			[Address(RVA = "0x1B37510", Offset = "0x1B37510", VA = "0x1B37510")]
			public void Apply(VRIK ik, AnimationCurve[] curves, float weight)
			{
			}

			[Token(Token = "0x6000B24")]
			protected abstract float GetLength(AnimationCurve[] curves);

			[Token(Token = "0x6000B25")]
			protected abstract void CrossFadeStart();

			[Token(Token = "0x6000B26")]
			protected abstract void OnApply(VRIK ik, AnimationCurve[] curves, float weight);

			[Token(Token = "0x6000B27")]
			[Address(RVA = "0x1B375F8", Offset = "0x1B375F8", VA = "0x1B375F8")]
			protected Offset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200015D")]
		public class PositionOffset : Offset
		{
			[Serializable]
			[Token(Token = "0x200015E")]
			public class PositionOffsetLink
			{
				[Token(Token = "0x4000A77")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7184", Offset = "0x8D7184")]
				public IKSolverVR.PositionOffset positionOffset;

				[Token(Token = "0x4000A78")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D71BC", Offset = "0x8D71BC")]
				public float weight;

				[Token(Token = "0x4000A79")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private Vector3 lastValue;

				[Token(Token = "0x4000A7A")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
				private Vector3 current;

				[Token(Token = "0x6000B2C")]
				[Address(RVA = "0x190D7F4", Offset = "0x190D7F4", VA = "0x190D7F4")]
				public void Apply(VRIK ik, Vector3 offset, float crossFader)
				{
				}

				[Token(Token = "0x6000B2D")]
				[Address(RVA = "0x190D884", Offset = "0x190D884", VA = "0x190D884")]
				public void CrossFadeStart()
				{
				}

				[Token(Token = "0x6000B2E")]
				[Address(RVA = "0x190D898", Offset = "0x190D898", VA = "0x190D898")]
				public PositionOffsetLink()
				{
				}
			}

			[Token(Token = "0x4000A74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D70DC", Offset = "0x8D70DC")]
			public int forceDirCurveIndex;

			[Token(Token = "0x4000A75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7114", Offset = "0x8D7114")]
			public int upDirCurveIndex;

			[Token(Token = "0x4000A76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D714C", Offset = "0x8D714C")]
			public PositionOffsetLink[] offsetLinks;

			[Token(Token = "0x6000B28")]
			[Address(RVA = "0x1B3760C", Offset = "0x1B3760C", VA = "0x1B3760C", Slot = "4")]
			protected override float GetLength(AnimationCurve[] curves)
			{
				return default(float);
			}

			[Token(Token = "0x6000B29")]
			[Address(RVA = "0x1B377BC", Offset = "0x1B377BC", VA = "0x1B377BC", Slot = "5")]
			protected override void CrossFadeStart()
			{
			}

			[Token(Token = "0x6000B2A")]
			[Address(RVA = "0x1B37828", Offset = "0x1B37828", VA = "0x1B37828", Slot = "6")]
			protected override void OnApply(VRIK ik, AnimationCurve[] curves, float weight)
			{
			}

			[Token(Token = "0x6000B2B")]
			[Address(RVA = "0x1B379C8", Offset = "0x1B379C8", VA = "0x1B379C8")]
			public PositionOffset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200015F")]
		public class RotationOffset : Offset
		{
			[Serializable]
			[Token(Token = "0x2000160")]
			public class RotationOffsetLink
			{
				[Token(Token = "0x4000A7E")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7264", Offset = "0x8D7264")]
				public IKSolverVR.RotationOffset rotationOffset;

				[Token(Token = "0x4000A7F")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D729C", Offset = "0x8D729C")]
				[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D729C", Offset = "0x8D729C")]
				public float weight;

				[Token(Token = "0x4000A80")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private Quaternion lastValue;

				[Token(Token = "0x4000A81")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				private Quaternion current;

				[Token(Token = "0x6000B33")]
				[Address(RVA = "0x190D8A0", Offset = "0x190D8A0", VA = "0x190D8A0")]
				public void Apply(VRIK ik, Quaternion offset, float crossFader)
				{
				}

				[Token(Token = "0x6000B34")]
				[Address(RVA = "0x190D97C", Offset = "0x190D97C", VA = "0x190D97C")]
				public void CrossFadeStart()
				{
				}

				[Token(Token = "0x6000B35")]
				[Address(RVA = "0x190D988", Offset = "0x190D988", VA = "0x190D988")]
				public RotationOffsetLink()
				{
				}
			}

			[Token(Token = "0x4000A7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D71F4", Offset = "0x8D71F4")]
			public int curveIndex;

			[Token(Token = "0x4000A7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D722C", Offset = "0x8D722C")]
			public RotationOffsetLink[] offsetLinks;

			[Token(Token = "0x4000A7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Rigidbody rigidbody;

			[Token(Token = "0x6000B2F")]
			[Address(RVA = "0x1B379E4", Offset = "0x1B379E4", VA = "0x1B379E4", Slot = "4")]
			protected override float GetLength(AnimationCurve[] curves)
			{
				return default(float);
			}

			[Token(Token = "0x6000B30")]
			[Address(RVA = "0x1B37AC8", Offset = "0x1B37AC8", VA = "0x1B37AC8", Slot = "5")]
			protected override void CrossFadeStart()
			{
			}

			[Token(Token = "0x6000B31")]
			[Address(RVA = "0x1B37B34", Offset = "0x1B37B34", VA = "0x1B37B34", Slot = "6")]
			protected override void OnApply(VRIK ik, AnimationCurve[] curves, float weight)
			{
			}

			[Token(Token = "0x6000B32")]
			[Address(RVA = "0x1B37D7C", Offset = "0x1B37D7C", VA = "0x1B37D7C")]
			public RotationOffset()
			{
			}
		}

		[Token(Token = "0x4000A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnimationCurve[] offsetCurves;

		[Token(Token = "0x4000A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D6F70", Offset = "0x8D6F70")]
		public PositionOffset[] positionOffsets;

		[Token(Token = "0x4000A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D6FA8", Offset = "0x8D6FA8")]
		public RotationOffset[] rotationOffsets;

		[Token(Token = "0x6000B17")]
		[Address(RVA = "0x1569DB4", Offset = "0x1569DB4", VA = "0x1569DB4", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x6000B18")]
		[Address(RVA = "0x1569E88", Offset = "0x1569E88", VA = "0x1569E88")]
		public void Hit(Collider collider, Vector3 force, Vector3 point)
		{
		}

		[Token(Token = "0x6000B19")]
		[Address(RVA = "0x156A0EC", Offset = "0x156A0EC", VA = "0x156A0EC")]
		public HitReactionVRIK()
		{
		}
	}
	[Token(Token = "0x2000161")]
	public class Inertia : OffsetModifier
	{
		[Serializable]
		[Token(Token = "0x2000162")]
		public class Body
		{
			[Serializable]
			[Token(Token = "0x2000163")]
			public class EffectorLink
			{
				[Token(Token = "0x4000A8F")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D74CC", Offset = "0x8D74CC")]
				public FullBodyBipedEffector effector;

				[Token(Token = "0x4000A90")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7504", Offset = "0x8D7504")]
				public float weight;

				[Token(Token = "0x6000B3C")]
				[Address(RVA = "0x190D9CC", Offset = "0x190D9CC", VA = "0x190D9CC")]
				public EffectorLink()
				{
				}
			}

			[Token(Token = "0x4000A84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7360", Offset = "0x8D7360")]
			public Transform transform;

			[Token(Token = "0x4000A85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7398", Offset = "0x8D7398")]
			public EffectorLink[] effectorLinks;

			[Token(Token = "0x4000A86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D73D0", Offset = "0x8D73D0")]
			public float speed;

			[Token(Token = "0x4000A87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7408", Offset = "0x8D7408")]
			public float acceleration;

			[Token(Token = "0x4000A88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D7440", Offset = "0x8D7440")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7440", Offset = "0x8D7440")]
			public float matchVelocity;

			[Token(Token = "0x4000A89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7494", Offset = "0x8D7494")]
			public float gravity;

			[Token(Token = "0x4000A8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3 delta;

			[Token(Token = "0x4000A8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private Vector3 lazyPoint;

			[Token(Token = "0x4000A8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Vector3 direction;

			[Token(Token = "0x4000A8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private Vector3 lastPosition;

			[Token(Token = "0x4000A8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private bool firstUpdate;

			[Token(Token = "0x6000B39")]
			[Address(RVA = "0x1B44EEC", Offset = "0x1B44EEC", VA = "0x1B44EEC")]
			public void Reset()
			{
			}

			[Token(Token = "0x6000B3A")]
			[Address(RVA = "0x1B44FA4", Offset = "0x1B44FA4", VA = "0x1B44FA4")]
			public void Update(IKSolverFullBodyBiped solver, float weight, float deltaTime)
			{
			}

			[Token(Token = "0x6000B3B")]
			[Address(RVA = "0x1B45260", Offset = "0x1B45260", VA = "0x1B45260")]
			public Body()
			{
			}
		}

		[Token(Token = "0x4000A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D72F0", Offset = "0x8D72F0")]
		public Body[] bodies;

		[Token(Token = "0x4000A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7328", Offset = "0x8D7328")]
		public OffsetLimits[] limits;

		[Token(Token = "0x6000B36")]
		[Address(RVA = "0xB0B7E4", Offset = "0xB0B7E4", VA = "0xB0B7E4")]
		public void ResetBodies()
		{
		}

		[Token(Token = "0x6000B37")]
		[Address(RVA = "0xB0B860", Offset = "0xB0B860", VA = "0xB0B860", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x6000B38")]
		[Address(RVA = "0xB0B920", Offset = "0xB0B920", VA = "0xB0B920")]
		public Inertia()
		{
		}
	}
	[Token(Token = "0x2000164")]
	public class LookAtController : MonoBehaviour
	{
		[Token(Token = "0x4000A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LookAtIK ik;

		[Token(Token = "0x4000A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D753C", Offset = "0x8D753C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D753C", Offset = "0x8D753C")]
		public Transform target;

		[Token(Token = "0x4000A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D759C", Offset = "0x8D759C")]
		public float weight;

		[Token(Token = "0x4000A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 offset;

		[Token(Token = "0x4000A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D75B4", Offset = "0x8D75B4")]
		public float targetSwitchSmoothTime;

		[Token(Token = "0x4000A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D75EC", Offset = "0x8D75EC")]
		public float weightSmoothTime;

		[Token(Token = "0x4000A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7624", Offset = "0x8D7624")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D7624", Offset = "0x8D7624")]
		public bool smoothTurnTowardsTarget;

		[Token(Token = "0x4000A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7684", Offset = "0x8D7684")]
		public float maxRadiansDelta;

		[Token(Token = "0x4000A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D76BC", Offset = "0x8D76BC")]
		public float maxMagnitudeDelta;

		[Token(Token = "0x4000A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D76F4", Offset = "0x8D76F4")]
		public float slerpSpeed;

		[Token(Token = "0x4000A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D772C", Offset = "0x8D772C")]
		public Vector3 pivotOffsetFromRoot;

		[Token(Token = "0x4000A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7764", Offset = "0x8D7764")]
		public float minDistance;

		[Token(Token = "0x4000A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D779C", Offset = "0x8D779C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D779C", Offset = "0x8D779C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D779C", Offset = "0x8D779C")]
		public float maxRootAngle;

		[Token(Token = "0x4000A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform lastTarget;

		[Token(Token = "0x4000A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float switchWeight;

		[Token(Token = "0x4000AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float switchWeightV;

		[Token(Token = "0x4000AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float weightV;

		[Token(Token = "0x4000AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Vector3 lastPosition;

		[Token(Token = "0x4000AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 dir;

		[Token(Token = "0x4000AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private bool lastSmoothTowardsTarget;

		[Token(Token = "0x17000129")]
		private Vector3 pivot
		{
			[Token(Token = "0x6000B3F")]
			[Address(RVA = "0xB16B84", Offset = "0xB16B84", VA = "0xB16B84")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6000B3D")]
		[Address(RVA = "0xB16B10", Offset = "0xB16B10", VA = "0xB16B10")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B3E")]
		[Address(RVA = "0xB16C14", Offset = "0xB16C14", VA = "0xB16C14")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000B40")]
		[Address(RVA = "0xB17130", Offset = "0xB17130", VA = "0xB17130")]
		private void ApplyMinDistance()
		{
		}

		[Token(Token = "0x6000B41")]
		[Address(RVA = "0xB1721C", Offset = "0xB1721C", VA = "0xB1721C")]
		private void RootRotation()
		{
		}

		[Token(Token = "0x6000B42")]
		[Address(RVA = "0xB17414", Offset = "0xB17414", VA = "0xB17414")]
		public LookAtController()
		{
		}
	}
	[Token(Token = "0x2000165")]
	public abstract class OffsetModifier : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000166")]
		public class OffsetLimits
		{
			[Token(Token = "0x4000AA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7888", Offset = "0x8D7888")]
			public FullBodyBipedEffector effector;

			[Token(Token = "0x4000AA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D78C0", Offset = "0x8D78C0")]
			public float spring;

			[Token(Token = "0x4000AAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D78F8", Offset = "0x8D78F8")]
			public bool x;

			[Token(Token = "0x4000AAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7930", Offset = "0x8D7930")]
			public bool y;

			[Token(Token = "0x4000AAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7968", Offset = "0x8D7968")]
			public bool z;

			[Token(Token = "0x4000AAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D79A0", Offset = "0x8D79A0")]
			public float minX;

			[Token(Token = "0x4000AAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D79D8", Offset = "0x8D79D8")]
			public float maxX;

			[Token(Token = "0x4000AAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7A10", Offset = "0x8D7A10")]
			public float minY;

			[Token(Token = "0x4000AB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7A48", Offset = "0x8D7A48")]
			public float maxY;

			[Token(Token = "0x4000AB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7A80", Offset = "0x8D7A80")]
			public float minZ;

			[Token(Token = "0x4000AB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7AB8", Offset = "0x8D7AB8")]
			public float maxZ;

			[Token(Token = "0x6000B4B")]
			[Address(RVA = "0x190543C", Offset = "0x190543C", VA = "0x190543C")]
			public void Apply(IKEffector e, Quaternion rootRotation)
			{
			}

			[Token(Token = "0x6000B4C")]
			[Address(RVA = "0x1905594", Offset = "0x1905594", VA = "0x1905594")]
			private float SpringAxis(float value, float min, float max)
			{
				return default(float);
			}

			[Token(Token = "0x6000B4D")]
			[Address(RVA = "0x190560C", Offset = "0x190560C", VA = "0x190560C")]
			private float Spring(float value, float limit, bool negative)
			{
				return default(float);
			}

			[Token(Token = "0x6000B4E")]
			[Address(RVA = "0x1905664", Offset = "0x1905664", VA = "0x1905664")]
			public OffsetLimits()
			{
			}
		}

		[Token(Token = "0x2000167")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CC0F0", Offset = "0x8CC0F0")]
		private sealed class <Initiate>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000AB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000AB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000AB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OffsetModifier <>4__this;

			[Token(Token = "0x1700012B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000B52")]
				[Address(RVA = "0x19053EC", Offset = "0x19053EC", VA = "0x19053EC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700012C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000B54")]
				[Address(RVA = "0x1905434", Offset = "0x1905434", VA = "0x1905434", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000B4F")]
			[Address(RVA = "0x190526C", Offset = "0x190526C", VA = "0x190526C")]
			[DebuggerHidden]
			public <Initiate>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6000B50")]
			[Address(RVA = "0x1905298", Offset = "0x1905298", VA = "0x1905298", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000B51")]
			[Address(RVA = "0x190529C", Offset = "0x190529C", VA = "0x190529C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000B53")]
			[Address(RVA = "0x19053F4", Offset = "0x19053F4", VA = "0x19053F4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7818", Offset = "0x8D7818")]
		public float weight;

		[Token(Token = "0x4000AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7850", Offset = "0x8D7850")]
		public FullBodyBipedIK ik;

		[Token(Token = "0x4000AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected float lastTime;

		[Token(Token = "0x1700012A")]
		protected float deltaTime
		{
			[Token(Token = "0x6000B43")]
			[Address(RVA = "0xC253A4", Offset = "0xC253A4", VA = "0xC253A4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000B44")]
		protected abstract void OnModifyOffset();

		[Token(Token = "0x6000B45")]
		[Address(RVA = "0xC253D0", Offset = "0xC253D0", VA = "0xC253D0", Slot = "5")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6000B46")]
		[Address(RVA = "0xC253FC", Offset = "0xC253FC", VA = "0xC253FC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E005C", Offset = "0x8E005C")]
		private IEnumerator Initiate()
		{
			return null;
		}

		[Token(Token = "0x6000B47")]
		[Address(RVA = "0xC25468", Offset = "0xC25468", VA = "0xC25468")]
		private void ModifyOffset()
		{
		}

		[Token(Token = "0x6000B48")]
		[Address(RVA = "0xC25544", Offset = "0xC25544", VA = "0xC25544")]
		protected void ApplyLimits(OffsetLimits[] limits)
		{
		}

		[Token(Token = "0x6000B49")]
		[Address(RVA = "0xC25604", Offset = "0xC25604", VA = "0xC25604", Slot = "6")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6000B4A")]
		[Address(RVA = "0xC25710", Offset = "0xC25710", VA = "0xC25710")]
		protected OffsetModifier()
		{
		}
	}
	[Token(Token = "0x2000168")]
	public abstract class OffsetModifierVRIK : MonoBehaviour
	{
		[Token(Token = "0x2000169")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CC100", Offset = "0x8CC100")]
		private sealed class <Initiate>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000AB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000ABA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000ABB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OffsetModifierVRIK <>4__this;

			[Token(Token = "0x1700012E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000B5F")]
				[Address(RVA = "0x19057EC", Offset = "0x19057EC", VA = "0x19057EC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700012F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000B61")]
				[Address(RVA = "0x1905834", Offset = "0x1905834", VA = "0x1905834", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000B5C")]
			[Address(RVA = "0x190566C", Offset = "0x190566C", VA = "0x190566C")]
			[DebuggerHidden]
			public <Initiate>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6000B5D")]
			[Address(RVA = "0x1905698", Offset = "0x1905698", VA = "0x1905698", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000B5E")]
			[Address(RVA = "0x190569C", Offset = "0x190569C", VA = "0x190569C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000B60")]
			[Address(RVA = "0x19057F4", Offset = "0x19057F4", VA = "0x19057F4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7AF0", Offset = "0x8D7AF0")]
		public float weight;

		[Token(Token = "0x4000AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7B28", Offset = "0x8D7B28")]
		public VRIK ik;

		[Token(Token = "0x4000AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float lastTime;

		[Token(Token = "0x1700012D")]
		protected float deltaTime
		{
			[Token(Token = "0x6000B55")]
			[Address(RVA = "0xC25720", Offset = "0xC25720", VA = "0xC25720")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000B56")]
		protected abstract void OnModifyOffset();

		[Token(Token = "0x6000B57")]
		[Address(RVA = "0xC2574C", Offset = "0xC2574C", VA = "0xC2574C", Slot = "5")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6000B58")]
		[Address(RVA = "0xC25778", Offset = "0xC25778", VA = "0xC25778")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E010C", Offset = "0x8E010C")]
		private IEnumerator Initiate()
		{
			return null;
		}

		[Token(Token = "0x6000B59")]
		[Address(RVA = "0xC257E4", Offset = "0xC257E4", VA = "0xC257E4")]
		private void ModifyOffset()
		{
		}

		[Token(Token = "0x6000B5A")]
		[Address(RVA = "0xC258C0", Offset = "0xC258C0", VA = "0xC258C0", Slot = "6")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6000B5B")]
		[Address(RVA = "0xC259CC", Offset = "0xC259CC", VA = "0xC259CC")]
		protected OffsetModifierVRIK()
		{
		}
	}
	[Token(Token = "0x200016A")]
	public class OffsetPose : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200016B")]
		public class EffectorLink
		{
			[Token(Token = "0x4000ABD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FullBodyBipedEffector effector;

			[Token(Token = "0x4000ABE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Vector3 offset;

			[Token(Token = "0x4000ABF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 pin;

			[Token(Token = "0x4000AC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public Vector3 pinWeight;

			[Token(Token = "0x6000B65")]
			[Address(RVA = "0x190583C", Offset = "0x190583C", VA = "0x190583C")]
			public void Apply(IKSolverFullBodyBiped solver, float weight, Quaternion rotation)
			{
			}

			[Token(Token = "0x6000B66")]
			[Address(RVA = "0x1905A58", Offset = "0x1905A58", VA = "0x1905A58")]
			public EffectorLink()
			{
			}
		}

		[Token(Token = "0x4000ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EffectorLink[] effectorLinks;

		[Token(Token = "0x6000B62")]
		[Address(RVA = "0xC259DC", Offset = "0xC259DC", VA = "0xC259DC")]
		public void Apply(IKSolverFullBodyBiped solver, float weight)
		{
		}

		[Token(Token = "0x6000B63")]
		[Address(RVA = "0xC25AA0", Offset = "0xC25AA0", VA = "0xC25AA0")]
		public void Apply(IKSolverFullBodyBiped solver, float weight, Quaternion rotation)
		{
		}

		[Token(Token = "0x6000B64")]
		[Address(RVA = "0xC25B5C", Offset = "0xC25B5C", VA = "0xC25B5C")]
		public OffsetPose()
		{
		}
	}
	[Token(Token = "0x200016C")]
	public class PenetrationAvoidance : OffsetModifier
	{
		[Serializable]
		[Token(Token = "0x200016D")]
		public class Avoider
		{
			[Serializable]
			[Token(Token = "0x200016E")]
			public class EffectorLink
			{
				[Token(Token = "0x4000ACC")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7D3C", Offset = "0x8D7D3C")]
				public FullBodyBipedEffector effector;

				[Token(Token = "0x4000ACD")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7D74", Offset = "0x8D7D74")]
				public float weight;

				[Token(Token = "0x6000B6D")]
				[Address(RVA = "0x190D9DC", Offset = "0x190D9DC", VA = "0x190D9DC")]
				public EffectorLink()
				{
				}
			}

			[Token(Token = "0x4000AC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7B98", Offset = "0x8D7B98")]
			public Transform[] raycastFrom;

			[Token(Token = "0x4000AC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7BD0", Offset = "0x8D7BD0")]
			public Transform raycastTo;

			[Token(Token = "0x4000AC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D7C08", Offset = "0x8D7C08")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7C08", Offset = "0x8D7C08")]
			public float raycastRadius;

			[Token(Token = "0x4000AC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7C5C", Offset = "0x8D7C5C")]
			public EffectorLink[] effectors;

			[Token(Token = "0x4000AC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7C94", Offset = "0x8D7C94")]
			public float smoothTimeIn;

			[Token(Token = "0x4000AC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7CCC", Offset = "0x8D7CCC")]
			public float smoothTimeOut;

			[Token(Token = "0x4000AC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7D04", Offset = "0x8D7D04")]
			public LayerMask layers;

			[Token(Token = "0x4000AC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private Vector3 offset;

			[Token(Token = "0x4000ACA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Vector3 offsetTarget;

			[Token(Token = "0x4000ACB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private Vector3 offsetV;

			[Token(Token = "0x6000B69")]
			[Address(RVA = "0x1905A60", Offset = "0x1905A60", VA = "0x1905A60")]
			public void Solve(IKSolverFullBodyBiped solver, float weight)
			{
			}

			[Token(Token = "0x6000B6A")]
			[Address(RVA = "0x1905BA4", Offset = "0x1905BA4", VA = "0x1905BA4")]
			private Vector3 GetOffsetTarget(IKSolverFullBodyBiped solver)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6000B6B")]
			[Address(RVA = "0x1905C9C", Offset = "0x1905C9C", VA = "0x1905C9C")]
			private Vector3 Raycast(Vector3 from, Vector3 to)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6000B6C")]
			[Address(RVA = "0x1905E6C", Offset = "0x1905E6C", VA = "0x1905E6C")]
			public Avoider()
			{
			}
		}

		[Token(Token = "0x4000AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7B60", Offset = "0x8D7B60")]
		public Avoider[] avoiders;

		[Token(Token = "0x6000B67")]
		[Address(RVA = "0xC25FB8", Offset = "0xC25FB8", VA = "0xC25FB8", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x6000B68")]
		[Address(RVA = "0xC26040", Offset = "0xC26040", VA = "0xC26040")]
		public PenetrationAvoidance()
		{
		}
	}
	[Token(Token = "0x200016F")]
	public class Recoil : OffsetModifier
	{
		[Serializable]
		[Token(Token = "0x2000170")]
		public class RecoilOffset
		{
			[Serializable]
			[Token(Token = "0x2000171")]
			public class EffectorLink
			{
				[Token(Token = "0x4000AEB")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8100", Offset = "0x8D8100")]
				public FullBodyBipedEffector effector;

				[Token(Token = "0x4000AEC")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8138", Offset = "0x8D8138")]
				public float weight;

				[Token(Token = "0x6000B7D")]
				[Address(RVA = "0x190D9F0", Offset = "0x190D9F0", VA = "0x190D9F0")]
				public EffectorLink()
				{
				}
			}

			[Token(Token = "0x4000AE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8004", Offset = "0x8D8004")]
			public Vector3 offset;

			[Token(Token = "0x4000AE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D803C", Offset = "0x8D803C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D803C", Offset = "0x8D803C")]
			public float additivity;

			[Token(Token = "0x4000AE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8090", Offset = "0x8D8090")]
			public float maxAdditiveOffsetMag;

			[Token(Token = "0x4000AE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D80C8", Offset = "0x8D80C8")]
			public EffectorLink[] effectorLinks;

			[Token(Token = "0x4000AE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3 additiveOffset;

			[Token(Token = "0x4000AEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private Vector3 lastOffset;

			[Token(Token = "0x6000B7A")]
			[Address(RVA = "0x1909814", Offset = "0x1909814", VA = "0x1909814")]
			public void Start()
			{
			}

			[Token(Token = "0x6000B7B")]
			[Address(RVA = "0x1909864", Offset = "0x1909864", VA = "0x1909864")]
			public void Apply(IKSolverFullBodyBiped solver, Quaternion rotation, float masterWeight, float length, float timeLeft)
			{
			}

			[Token(Token = "0x6000B7C")]
			[Address(RVA = "0x1909A28", Offset = "0x1909A28", VA = "0x1909A28")]
			public RecoilOffset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000172")]
		public enum Handedness
		{
			[Token(Token = "0x4000AEE")]
			Right,
			[Token(Token = "0x4000AEF")]
			Left
		}

		[Token(Token = "0x4000ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7DAC", Offset = "0x8D7DAC")]
		public AimIK aimIK;

		[Token(Token = "0x4000ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7DE4", Offset = "0x8D7DE4")]
		public bool aimIKSolvedLast;

		[Token(Token = "0x4000AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7E1C", Offset = "0x8D7E1C")]
		public Handedness handedness;

		[Token(Token = "0x4000AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7E54", Offset = "0x8D7E54")]
		public bool twoHanded;

		[Token(Token = "0x4000AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7E8C", Offset = "0x8D7E8C")]
		public AnimationCurve recoilWeight;

		[Token(Token = "0x4000AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7EC4", Offset = "0x8D7EC4")]
		public float magnitudeRandom;

		[Token(Token = "0x4000AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7EFC", Offset = "0x8D7EFC")]
		public Vector3 rotationRandom;

		[Token(Token = "0x4000AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7F34", Offset = "0x8D7F34")]
		public Vector3 handRotationOffset;

		[Token(Token = "0x4000AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7F6C", Offset = "0x8D7F6C")]
		public float blendTime;

		[Token(Token = "0x4000AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7FA4", Offset = "0x8D7FA4")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8D7FA4", Offset = "0x8D7FA4")]
		public RecoilOffset[] offsets;

		[Token(Token = "0x4000AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public Quaternion rotationOffset;

		[Token(Token = "0x4000AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float magnitudeMlp;

		[Token(Token = "0x4000ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float endTime;

		[Token(Token = "0x4000ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Quaternion handRotation;

		[Token(Token = "0x4000ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Quaternion secondaryHandRelativeRotation;

		[Token(Token = "0x4000ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Quaternion randomRotation;

		[Token(Token = "0x4000ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float length;

		[Token(Token = "0x4000ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private bool initiated;

		[Token(Token = "0x4000AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private float blendWeight;

		[Token(Token = "0x4000AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private float w;

		[Token(Token = "0x4000AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Quaternion primaryHandRotation;

		[Token(Token = "0x4000AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool handRotationsSet;

		[Token(Token = "0x4000AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private Vector3 aimIKAxis;

		[Token(Token = "0x17000130")]
		public bool isFinished
		{
			[Token(Token = "0x6000B6E")]
			[Address(RVA = "0xE5ECC8", Offset = "0xE5ECC8", VA = "0xE5ECC8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000131")]
		private IKEffector primaryHandEffector
		{
			[Token(Token = "0x6000B74")]
			[Address(RVA = "0xE5F740", Offset = "0xE5F740", VA = "0xE5F740")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000132")]
		private IKEffector secondaryHandEffector
		{
			[Token(Token = "0x6000B75")]
			[Address(RVA = "0xE5F780", Offset = "0xE5F780", VA = "0xE5F780")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000133")]
		private Transform primaryHand
		{
			[Token(Token = "0x6000B76")]
			[Address(RVA = "0xE5F700", Offset = "0xE5F700", VA = "0xE5F700")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000134")]
		private Transform secondaryHand
		{
			[Token(Token = "0x6000B77")]
			[Address(RVA = "0xE5F720", Offset = "0xE5F720", VA = "0xE5F720")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B6F")]
		[Address(RVA = "0xE5ECF8", Offset = "0xE5ECF8", VA = "0xE5ECF8")]
		public void SetHandRotations(Quaternion leftHandRotation, Quaternion rightHandRotation)
		{
		}

		[Token(Token = "0x6000B70")]
		[Address(RVA = "0xE5ED24", Offset = "0xE5ED24", VA = "0xE5ED24")]
		public void Fire(float magnitude)
		{
		}

		[Token(Token = "0x6000B71")]
		[Address(RVA = "0xE5EE6C", Offset = "0xE5EE6C", VA = "0xE5EE6C", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x6000B72")]
		[Address(RVA = "0xE5F7C0", Offset = "0xE5F7C0", VA = "0xE5F7C0")]
		private void AfterFBBIK()
		{
		}

		[Token(Token = "0x6000B73")]
		[Address(RVA = "0xE5F874", Offset = "0xE5F874", VA = "0xE5F874")]
		private void AfterAimIK()
		{
		}

		[Token(Token = "0x6000B78")]
		[Address(RVA = "0xE5F8B0", Offset = "0xE5F8B0", VA = "0xE5F8B0", Slot = "6")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6000B79")]
		[Address(RVA = "0xE5FA6C", Offset = "0xE5FA6C", VA = "0xE5FA6C")]
		public Recoil()
		{
		}
	}
	[Token(Token = "0x2000173")]
	public class ShoulderRotator : MonoBehaviour
	{
		[Token(Token = "0x4000AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8170", Offset = "0x8D8170")]
		public float weight;

		[Token(Token = "0x4000AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D81A8", Offset = "0x8D81A8")]
		public float offset;

		[Token(Token = "0x4000AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private FullBodyBipedIK ik;

		[Token(Token = "0x4000AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool skip;

		[Token(Token = "0x6000B7E")]
		[Address(RVA = "0xE63A64", Offset = "0xE63A64", VA = "0xE63A64")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B7F")]
		[Address(RVA = "0xE63B4C", Offset = "0xE63B4C", VA = "0xE63B4C")]
		private void RotateShoulders()
		{
		}

		[Token(Token = "0x6000B80")]
		[Address(RVA = "0xE63C34", Offset = "0xE63C34", VA = "0xE63C34")]
		private void RotateShoulder(FullBodyBipedChain chain, float weight, float offset)
		{
		}

		[Token(Token = "0x6000B81")]
		[Address(RVA = "0xE63F88", Offset = "0xE63F88", VA = "0xE63F88")]
		private IKMapping.BoneMap GetParentBoneMap(FullBodyBipedChain chain)
		{
			return null;
		}

		[Token(Token = "0x6000B82")]
		[Address(RVA = "0xE63FC0", Offset = "0xE63FC0", VA = "0xE63FC0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000B83")]
		[Address(RVA = "0xE640CC", Offset = "0xE640CC", VA = "0xE640CC")]
		public ShoulderRotator()
		{
		}
	}
	[Token(Token = "0x2000174")]
	public static class VRIKCalibrator
	{
		[Serializable]
		[Token(Token = "0x2000175")]
		public class Settings
		{
			[Token(Token = "0x4000AF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D81E0", Offset = "0x8D81E0")]
			public float scaleMlp;

			[Token(Token = "0x4000AF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8218", Offset = "0x8D8218")]
			public Vector3 headTrackerForward;

			[Token(Token = "0x4000AF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8250", Offset = "0x8D8250")]
			public Vector3 headTrackerUp;

			[Token(Token = "0x4000AF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8288", Offset = "0x8D8288")]
			public Vector3 bodyTrackerForward;

			[Token(Token = "0x4000AF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D82C0", Offset = "0x8D82C0")]
			public Vector3 bodyTrackerUp;

			[Token(Token = "0x4000AF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D82F8", Offset = "0x8D82F8")]
			public Vector3 handTrackerForward;

			[Token(Token = "0x4000AFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8330", Offset = "0x8D8330")]
			public Vector3 handTrackerUp;

			[Token(Token = "0x4000AFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8368", Offset = "0x8D8368")]
			public Vector3 footTrackerForward;

			[Token(Token = "0x4000AFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D83A0", Offset = "0x8D83A0")]
			public Vector3 footTrackerUp;

			[Token(Token = "0x4000AFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8D83D8", Offset = "0x8D83D8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D83D8", Offset = "0x8D83D8")]
			public Vector3 headOffset;

			[Token(Token = "0x4000AFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8428", Offset = "0x8D8428")]
			public Vector3 handOffset;

			[Token(Token = "0x4000AFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8460", Offset = "0x8D8460")]
			public float footForwardOffset;

			[Token(Token = "0x4000B00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8498", Offset = "0x8D8498")]
			public float footInwardOffset;

			[Token(Token = "0x4000B01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D84D0", Offset = "0x8D84D0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D84D0", Offset = "0x8D84D0")]
			public float footHeadingOffset;

			[Token(Token = "0x4000B02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D852C", Offset = "0x8D852C")]
			public float pelvisPositionWeight;

			[Token(Token = "0x4000B03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D8544", Offset = "0x8D8544")]
			public float pelvisRotationWeight;

			[Token(Token = "0x6000B89")]
			[Address(RVA = "0x190D0E8", Offset = "0x190D0E8", VA = "0x190D0E8")]
			public Settings()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000176")]
		public class CalibrationData
		{
			[Serializable]
			[Token(Token = "0x2000177")]
			public class Target
			{
				[Token(Token = "0x4000B10")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public bool used;

				[Token(Token = "0x4000B11")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				public Vector3 localPosition;

				[Token(Token = "0x4000B12")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public Quaternion localRotation;

				[Token(Token = "0x6000B8B")]
				[Address(RVA = "0x190D9F8", Offset = "0x190D9F8", VA = "0x190D9F8")]
				public Target(Transform t)
				{
				}

				[Token(Token = "0x6000B8C")]
				[Address(RVA = "0x190DAB8", Offset = "0x190DAB8", VA = "0x190DAB8")]
				public void SetTo(Transform t)
				{
				}
			}

			[Token(Token = "0x4000B04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float scale;

			[Token(Token = "0x4000B05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Target head;

			[Token(Token = "0x4000B06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Target leftHand;

			[Token(Token = "0x4000B07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Target rightHand;

			[Token(Token = "0x4000B08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Target pelvis;

			[Token(Token = "0x4000B09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Target leftFoot;

			[Token(Token = "0x4000B0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Target rightFoot;

			[Token(Token = "0x4000B0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Target leftLegGoal;

			[Token(Token = "0x4000B0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Target rightLegGoal;

			[Token(Token = "0x4000B0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public Vector3 pelvisTargetRight;

			[Token(Token = "0x4000B0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			public float pelvisPositionWeight;

			[Token(Token = "0x4000B0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public float pelvisRotationWeight;

			[Token(Token = "0x6000B8A")]
			[Address(RVA = "0x190D0E0", Offset = "0x190D0E0", VA = "0x190D0E0")]
			public CalibrationData()
			{
			}
		}

		[Token(Token = "0x6000B84")]
		[Address(RVA = "0xC0D5CC", Offset = "0xC0D5CC", VA = "0xC0D5CC")]
		public static void RecalibrateScale(VRIK ik, Settings settings)
		{
		}

		[Token(Token = "0x6000B85")]
		[Address(RVA = "0xC0D6C4", Offset = "0xC0D6C4", VA = "0xC0D6C4")]
		public static CalibrationData Calibrate(VRIK ik, Settings settings, Transform headTracker, [Optional] Transform bodyTracker, [Optional] Transform leftHandTracker, [Optional] Transform rightHandTracker, [Optional] Transform leftFootTracker, [Optional] Transform rightFootTracker)
		{
			return null;
		}

		[Token(Token = "0x6000B86")]
		[Address(RVA = "0xC0E8D0", Offset = "0xC0E8D0", VA = "0xC0E8D0")]
		private static void CalibrateLeg(Settings settings, Transform tracker, IKSolverVR.Leg leg, Transform lastBone, Vector3 rootForward, bool isLeft)
		{
		}

		[Token(Token = "0x6000B87")]
		[Address(RVA = "0xC0F0BC", Offset = "0xC0F0BC", VA = "0xC0F0BC")]
		public static void Calibrate(VRIK ik, CalibrationData data, Transform headTracker, [Optional] Transform bodyTracker, [Optional] Transform leftHandTracker, [Optional] Transform rightHandTracker, [Optional] Transform leftFootTracker, [Optional] Transform rightFootTracker)
		{
		}

		[Token(Token = "0x6000B88")]
		[Address(RVA = "0xC0FB9C", Offset = "0xC0FB9C", VA = "0xC0FB9C")]
		private static void CalibrateLeg(CalibrationData data, Transform tracker, IKSolverVR.Leg leg, Transform lastBone, Vector3 rootForward, bool isLeft)
		{
		}
	}
	[Token(Token = "0x2000178")]
	public class VRIKLODController : MonoBehaviour
	{
		[Token(Token = "0x4000B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Renderer LODRenderer;

		[Token(Token = "0x4000B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float LODDistance;

		[Token(Token = "0x4000B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool allowCulled;

		[Token(Token = "0x4000B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private VRIK ik;

		[Token(Token = "0x6000B8D")]
		[Address(RVA = "0xC0FF90", Offset = "0xC0FF90", VA = "0xC0FF90")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B8E")]
		[Address(RVA = "0xC0FFE4", Offset = "0xC0FFE4", VA = "0xC0FFE4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B8F")]
		[Address(RVA = "0xC10018", Offset = "0xC10018", VA = "0xC10018")]
		private int GetLODLevel()
		{
			return default(int);
		}

		[Token(Token = "0x6000B90")]
		[Address(RVA = "0xC10154", Offset = "0xC10154", VA = "0xC10154")]
		public VRIKLODController()
		{
		}
	}
	[Token(Token = "0x2000179")]
	public class VRIKRootController : MonoBehaviour
	{
		[Token(Token = "0x4000B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D855C", Offset = "0x8D855C")]
		private Vector3 <pelvisTargetRight>k__BackingField;

		[Token(Token = "0x4000B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform pelvisTarget;

		[Token(Token = "0x4000B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform leftFootTarget;

		[Token(Token = "0x4000B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform rightFootTarget;

		[Token(Token = "0x4000B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private VRIK ik;

		[Token(Token = "0x17000135")]
		public Vector3 pelvisTargetRight
		{
			[Token(Token = "0x6000B91")]
			[Address(RVA = "0xC1016C", Offset = "0xC1016C", VA = "0xC1016C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E01BC", Offset = "0x8E01BC")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000B92")]
			[Address(RVA = "0xC10178", Offset = "0xC10178", VA = "0xC10178")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E01CC", Offset = "0x8E01CC")]
			private set
			{
			}
		}

		[Token(Token = "0x6000B93")]
		[Address(RVA = "0xC10184", Offset = "0xC10184", VA = "0xC10184")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B94")]
		[Address(RVA = "0xC0EEC4", Offset = "0xC0EEC4", VA = "0xC0EEC4")]
		public void Calibrate()
		{
		}

		[Token(Token = "0x6000B95")]
		[Address(RVA = "0xC0FE0C", Offset = "0xC0FE0C", VA = "0xC0FE0C")]
		public void Calibrate(VRIKCalibrator.CalibrationData data)
		{
		}

		[Token(Token = "0x6000B96")]
		[Address(RVA = "0xC10270", Offset = "0xC10270", VA = "0xC10270")]
		private void OnPreUpdate()
		{
		}

		[Token(Token = "0x6000B97")]
		[Address(RVA = "0xC1068C", Offset = "0xC1068C", VA = "0xC1068C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000B98")]
		[Address(RVA = "0xC10798", Offset = "0xC10798", VA = "0xC10798")]
		public VRIKRootController()
		{
		}
	}
}
namespace RootMotion.Demos
{
	[Token(Token = "0x200017A")]
	public class FKOffset : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200017B")]
		public class Offset
		{
			[Token(Token = "0x4000B1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			[HideInInspector]
			public string name;

			[Token(Token = "0x4000B1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public HumanBodyBones bone;

			[Token(Token = "0x4000B20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 rotationOffset;

			[Token(Token = "0x4000B21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Transform t;

			[Token(Token = "0x6000B9D")]
			[Address(RVA = "0xC18088", Offset = "0xC18088", VA = "0xC18088")]
			public void Apply(Animator animator)
			{
			}

			[Token(Token = "0x6000B9E")]
			[Address(RVA = "0xC181E8", Offset = "0xC181E8", VA = "0xC181E8")]
			public Offset()
			{
			}
		}

		[Token(Token = "0x4000B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Offset[] offsets;

		[Token(Token = "0x4000B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Animator animator;

		[Token(Token = "0x6000B99")]
		[Address(RVA = "0x1531128", Offset = "0x1531128", VA = "0x1531128")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B9A")]
		[Address(RVA = "0x153117C", Offset = "0x153117C", VA = "0x153117C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000B9B")]
		[Address(RVA = "0x15311F8", Offset = "0x15311F8", VA = "0x15311F8")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6000B9C")]
		[Address(RVA = "0x15312D0", Offset = "0x15312D0", VA = "0x15312D0")]
		public FKOffset()
		{
		}
	}
	[Token(Token = "0x200017C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8CC110", Offset = "0x8CC110")]
	public class AnimatorIKDemo : MonoBehaviour
	{
		[Token(Token = "0x4000B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform leftHandIKTarget;

		[Token(Token = "0x4000B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Animator animator;

		[Token(Token = "0x6000B9F")]
		[Address(RVA = "0xD69370", Offset = "0xD69370", VA = "0xD69370")]
		private void Start()
		{
		}

		[Token(Token = "0x6000BA0")]
		[Address(RVA = "0xD693C4", Offset = "0xD693C4", VA = "0xD693C4")]
		private void OnAnimatorIK(int layer)
		{
		}

		[Token(Token = "0x6000BA1")]
		[Address(RVA = "0xD69420", Offset = "0xD69420", VA = "0xD69420")]
		public AnimatorIKDemo()
		{
		}
	}
	[Token(Token = "0x200017D")]
	public class BallShooter : MonoBehaviour
	{
		[Token(Token = "0x4000B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public KeyCode keyCode;

		[Token(Token = "0x4000B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject ball;

		[Token(Token = "0x4000B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 spawnOffset;

		[Token(Token = "0x4000B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 force;

		[Token(Token = "0x4000B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float mass;

		[Token(Token = "0x6000BA2")]
		[Address(RVA = "0xD750BC", Offset = "0xD750BC", VA = "0xD750BC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BA3")]
		[Address(RVA = "0xD752E4", Offset = "0xD752E4", VA = "0xD752E4")]
		public BallShooter()
		{
		}
	}
	[Token(Token = "0x200017E")]
	public class BoardController : MonoBehaviour
	{
		[Token(Token = "0x4000B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int groundLayer;

		[Token(Token = "0x4000B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform rotationTarget;

		[Token(Token = "0x4000B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float torque;

		[Token(Token = "0x4000B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float skidDrag;

		[Token(Token = "0x4000B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float turnSensitivity;

		[Token(Token = "0x4000B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Rigidbody r;

		[Token(Token = "0x4000B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool isGrounded;

		[Token(Token = "0x6000BA4")]
		[Address(RVA = "0x10725F8", Offset = "0x10725F8", VA = "0x10725F8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000BA5")]
		[Address(RVA = "0x107264C", Offset = "0x107264C", VA = "0x107264C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BA6")]
		[Address(RVA = "0x10727A4", Offset = "0x10727A4", VA = "0x10727A4")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000BA7")]
		[Address(RVA = "0x10729E4", Offset = "0x10729E4", VA = "0x10729E4")]
		private void OnCollisionEnter(Collision c)
		{
		}

		[Token(Token = "0x6000BA8")]
		[Address(RVA = "0x1072A40", Offset = "0x1072A40", VA = "0x1072A40")]
		private void OnCollisionStay(Collision c)
		{
		}

		[Token(Token = "0x6000BA9")]
		[Address(RVA = "0x1072A9C", Offset = "0x1072A9C", VA = "0x1072A9C")]
		private void OnCollisionExit(Collision c)
		{
		}

		[Token(Token = "0x6000BAA")]
		[Address(RVA = "0x1072AF4", Offset = "0x1072AF4", VA = "0x1072AF4")]
		public BoardController()
		{
		}
	}
	[Token(Token = "0x200017F")]
	public class CharacterAnimationMeleeDemo : CharacterAnimationThirdPerson
	{
		[Token(Token = "0x17000136")]
		private CharacterMeleeDemo melee
		{
			[Token(Token = "0x6000BAB")]
			[Address(RVA = "0x1077B98", Offset = "0x1077B98", VA = "0x1077B98")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BAC")]
		[Address(RVA = "0x1077C18", Offset = "0x1077C18", VA = "0x1077C18", Slot = "9")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6000BAD")]
		[Address(RVA = "0x1078124", Offset = "0x1078124", VA = "0x1078124")]
		public CharacterAnimationMeleeDemo()
		{
		}
	}
	[Token(Token = "0x2000180")]
	public class CharacterMeleeDemo : CharacterPuppet
	{
		[Serializable]
		[Token(Token = "0x2000181")]
		public class Action
		{
			[Serializable]
			[Token(Token = "0x2000182")]
			public class Anim
			{
				[Token(Token = "0x4000B3B")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public string stateName;

				[Token(Token = "0x4000B3C")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public int layer;

				[Token(Token = "0x4000B3D")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
				public float transitionDuration;

				[Token(Token = "0x4000B3E")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public float fixedTime;

				[Token(Token = "0x6000BB4")]
				[Address(RVA = "0x190D5AC", Offset = "0x190D5AC", VA = "0x190D5AC")]
				public Anim()
				{
				}
			}

			[Token(Token = "0x4000B34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string name;

			[Token(Token = "0x4000B35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int inputActionIndex;

			[Token(Token = "0x4000B36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float duration;

			[Token(Token = "0x4000B37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float minFrequency;

			[Token(Token = "0x4000B38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Anim anim;

			[Token(Token = "0x4000B39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int[] requiredPropTypes;

			[Token(Token = "0x4000B3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Booster[] boosters;

			[Token(Token = "0x6000BB3")]
			[Address(RVA = "0xC16490", Offset = "0xC16490", VA = "0xC16490")]
			public Action()
			{
			}
		}

		[Token(Token = "0x4000B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D85A4", Offset = "0x8D85A4")]
		public Action[] actions;

		[Token(Token = "0x4000B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		[HideInInspector]
		public int currentActionIndex;

		[Token(Token = "0x4000B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
		[HideInInspector]
		public float lastActionTime;

		[Token(Token = "0x4000B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private float lastActionMoveMag;

		[Token(Token = "0x17000137")]
		public Action currentAction
		{
			[Token(Token = "0x6000BAF")]
			[Address(RVA = "0x10780D8", Offset = "0x10780D8", VA = "0x10780D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BAE")]
		[Address(RVA = "0x1078E84", Offset = "0x1078E84", VA = "0x1078E84", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000BB0")]
		[Address(RVA = "0x1078F0C", Offset = "0x1078F0C", VA = "0x1078F0C", Slot = "7")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6000BB1")]
		[Address(RVA = "0x1079130", Offset = "0x1079130", VA = "0x1079130")]
		private bool StartAction(Action action)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BB2")]
		[Address(RVA = "0x10792C8", Offset = "0x10792C8", VA = "0x10792C8")]
		public CharacterMeleeDemo()
		{
		}
	}
	[Token(Token = "0x2000183")]
	public class CharacterPuppet : CharacterThirdPerson
	{
		[Token(Token = "0x4000B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D85FC", Offset = "0x8D85FC")]
		public PropMuscle propMuscle;

		[Token(Token = "0x4000B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D8634", Offset = "0x8D8634")]
		private BehaviourPuppet <puppet>k__BackingField;

		[Token(Token = "0x17000138")]
		public BehaviourPuppet puppet
		{
			[Token(Token = "0x6000BB5")]
			[Address(RVA = "0x10792E0", Offset = "0x10792E0", VA = "0x10792E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E01DC", Offset = "0x8E01DC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BB6")]
			[Address(RVA = "0x10792E8", Offset = "0x10792E8", VA = "0x10792E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E01EC", Offset = "0x8E01EC")]
			private set
			{
			}
		}

		[Token(Token = "0x6000BB7")]
		[Address(RVA = "0x1078E90", Offset = "0x1078E90", VA = "0x1078E90", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000BB8")]
		[Address(RVA = "0x10792F0", Offset = "0x10792F0", VA = "0x10792F0", Slot = "4")]
		public override void Move(Vector3 deltaPosition, Quaternion deltaRotation)
		{
		}

		[Token(Token = "0x6000BB9")]
		[Address(RVA = "0x1079344", Offset = "0x1079344", VA = "0x1079344", Slot = "9")]
		protected override void Rotate()
		{
		}

		[Token(Token = "0x6000BBA")]
		[Address(RVA = "0x1079500", Offset = "0x1079500", VA = "0x1079500", Slot = "10")]
		protected override bool Jump()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BBB")]
		[Address(RVA = "0x10792D8", Offset = "0x10792D8", VA = "0x10792D8")]
		public CharacterPuppet()
		{
		}
	}
	[Token(Token = "0x2000184")]
	public class CreatePuppetInRuntime : MonoBehaviour
	{
		[Token(Token = "0x4000B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8644", Offset = "0x8D8644")]
		public Transform ragdollPrefab;

		[Token(Token = "0x4000B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D867C", Offset = "0x8D867C")]
		public string instanceName;

		[Token(Token = "0x4000B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D86B4", Offset = "0x8D86B4")]
		public int characterControllerLayer;

		[Token(Token = "0x4000B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D86EC", Offset = "0x8D86EC")]
		public int ragdollLayer;

		[Token(Token = "0x6000BBC")]
		[Address(RVA = "0xCBF4DC", Offset = "0xCBF4DC", VA = "0xCBF4DC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000BBD")]
		[Address(RVA = "0xCBF654", Offset = "0xCBF654", VA = "0xCBF654")]
		public CreatePuppetInRuntime()
		{
		}
	}
	[Token(Token = "0x2000185")]
	public class CreateRagdollInRuntime : MonoBehaviour
	{
		[Token(Token = "0x4000B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8724", Offset = "0x8D8724")]
		public GameObject prefab;

		[Token(Token = "0x6000BBE")]
		[Address(RVA = "0xCBF6A8", Offset = "0xCBF6A8", VA = "0xCBF6A8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000BBF")]
		[Address(RVA = "0xCBF84C", Offset = "0xCBF84C", VA = "0xCBF84C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BC0")]
		[Address(RVA = "0xCBF850", Offset = "0xCBF850", VA = "0xCBF850")]
		public CreateRagdollInRuntime()
		{
		}
	}
	[Token(Token = "0x2000186")]
	public class DeathBaker : MonoBehaviour
	{
		[Token(Token = "0x2000187")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CC170", Offset = "0x8CC170")]
		private sealed class <Bake>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000B50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000B51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000B52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DeathBaker <>4__this;

			[Token(Token = "0x17000139")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000BCA")]
				[Address(RVA = "0xC16C1C", Offset = "0xC16C1C", VA = "0xC16C1C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700013A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000BCC")]
				[Address(RVA = "0xC16C64", Offset = "0xC16C64", VA = "0xC16C64", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000BC7")]
			[Address(RVA = "0xC16B20", Offset = "0xC16B20", VA = "0xC16B20")]
			[DebuggerHidden]
			public <Bake>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6000BC8")]
			[Address(RVA = "0xC16B4C", Offset = "0xC16B4C", VA = "0xC16B4C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000BC9")]
			[Address(RVA = "0xC16B50", Offset = "0xC16B50", VA = "0xC16B50", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000BCB")]
			[Address(RVA = "0xC16C24", Offset = "0xC16C24", VA = "0xC16C24", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000188")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CC180", Offset = "0x8CC180")]
		private sealed class <FadeOutPinWeight>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000B53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000B54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000B55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DeathBaker <>4__this;

			[Token(Token = "0x1700013B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000BD0")]
				[Address(RVA = "0xC16E50", Offset = "0xC16E50", VA = "0xC16E50", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700013C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000BD2")]
				[Address(RVA = "0xC16E98", Offset = "0xC16E98", VA = "0xC16E98", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000BCD")]
			[Address(RVA = "0xC16D88", Offset = "0xC16D88", VA = "0xC16D88")]
			[DebuggerHidden]
			public <FadeOutPinWeight>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6000BCE")]
			[Address(RVA = "0xC16DB4", Offset = "0xC16DB4", VA = "0xC16DB4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000BCF")]
			[Address(RVA = "0xC16DB8", Offset = "0xC16DB8", VA = "0xC16DB8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000BD1")]
			[Address(RVA = "0xC16E58", Offset = "0xC16E58", VA = "0xC16E58", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000189")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CC190", Offset = "0x8CC190")]
		private sealed class <FadeOutMuscleWeight>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000B56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000B57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000B58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DeathBaker <>4__this;

			[Token(Token = "0x1700013D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000BD6")]
				[Address(RVA = "0xC16D38", Offset = "0xC16D38", VA = "0xC16D38", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700013E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000BD8")]
				[Address(RVA = "0xC16D80", Offset = "0xC16D80", VA = "0xC16D80", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000BD3")]
			[Address(RVA = "0xC16C6C", Offset = "0xC16C6C", VA = "0xC16C6C")]
			[DebuggerHidden]
			public <FadeOutMuscleWeight>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x6000BD4")]
			[Address(RVA = "0xC16C98", Offset = "0xC16C98", VA = "0xC16C98", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000BD5")]
			[Address(RVA = "0xC16C9C", Offset = "0xC16C9C", VA = "0xC16C9C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000BD7")]
			[Address(RVA = "0xC16D40", Offset = "0xC16D40", VA = "0xC16D40", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D875C", Offset = "0x8D875C")]
		public HumanoidBaker baker;

		[Token(Token = "0x4000B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8794", Offset = "0x8D8794")]
		public float bakeTime;

		[Token(Token = "0x4000B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D87CC", Offset = "0x8D87CC")]
		public PuppetMaster puppetMaster;

		[Token(Token = "0x4000B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8804", Offset = "0x8D8804")]
		public float fadeOutPinWeightSpeed;

		[Token(Token = "0x4000B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D883C", Offset = "0x8D883C")]
		public float fadeOutMuscleWeightSpeed;

		[Token(Token = "0x4000B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8874", Offset = "0x8D8874")]
		public float deadMuscleWeight;

		[Token(Token = "0x4000B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Animator animator;

		[Token(Token = "0x4000B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 defaultPosition;

		[Token(Token = "0x4000B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Quaternion defaultRotation;

		[Token(Token = "0x4000B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool isDead;

		[Token(Token = "0x6000BC1")]
		[Address(RVA = "0xCC1258", Offset = "0xCC1258", VA = "0xCC1258")]
		private void Start()
		{
		}

		[Token(Token = "0x6000BC2")]
		[Address(RVA = "0xCC12F0", Offset = "0xCC12F0", VA = "0xCC12F0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BC3")]
		[Address(RVA = "0xCC15E8", Offset = "0xCC15E8", VA = "0xCC15E8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E01FC", Offset = "0x8E01FC")]
		private IEnumerator Bake()
		{
			return null;
		}

		[Token(Token = "0x6000BC4")]
		[Address(RVA = "0xCC1510", Offset = "0xCC1510", VA = "0xCC1510")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E025C", Offset = "0x8E025C")]
		private IEnumerator FadeOutPinWeight()
		{
			return null;
		}

		[Token(Token = "0x6000BC5")]
		[Address(RVA = "0xCC157C", Offset = "0xCC157C", VA = "0xCC157C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E02BC", Offset = "0x8E02BC")]
		private IEnumerator FadeOutMuscleWeight()
		{
			return null;
		}

		[Token(Token = "0x6000BC6")]
		[Address(RVA = "0xCC1654", Offset = "0xCC1654", VA = "0xCC1654")]
		public DeathBaker()
		{
		}
	}
	[Token(Token = "0x200018A")]
	public class Destructor : MonoBehaviour
	{
		[Token(Token = "0x200018B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CC1A0", Offset = "0x8CC1A0")]
		private sealed class <Destruct>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000B5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000B5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000B5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Destructor <>4__this;

			[Token(Token = "0x1700013F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000BDF")]
				[Address(RVA = "0xC1717C", Offset = "0xC1717C", VA = "0xC1717C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000140")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000BE1")]
				[Address(RVA = "0xC171C4", Offset = "0xC171C4", VA = "0xC171C4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000BDC")]
			[Address(RVA = "0xC17058", Offset = "0xC17058", VA = "0xC17058")]
			[DebuggerHidden]
			public <Destruct>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x6000BDD")]
			[Address(RVA = "0xC17084", Offset = "0xC17084", VA = "0xC17084", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000BDE")]
			[Address(RVA = "0xC17088", Offset = "0xC17088", VA = "0xC17088", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000BE0")]
			[Address(RVA = "0xC17184", Offset = "0xC17184", VA = "0xC17184", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float delay;

		[Token(Token = "0x6000BD9")]
		[Address(RVA = "0xCC2D54", Offset = "0xCC2D54", VA = "0xCC2D54")]
		private void Start()
		{
		}

		[Token(Token = "0x6000BDA")]
		[Address(RVA = "0xCC2D80", Offset = "0xCC2D80", VA = "0xCC2D80")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E040C", Offset = "0x8E040C")]
		private IEnumerator Destruct()
		{
			return null;
		}

		[Token(Token = "0x6000BDB")]
		[Address(RVA = "0xCC2DEC", Offset = "0xCC2DEC", VA = "0xCC2DEC")]
		public Destructor()
		{
		}
	}
	[Token(Token = "0x200018C")]
	public class Dying : MonoBehaviour
	{
		[Token(Token = "0x200018D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CC1B0", Offset = "0x8CC1B0")]
		private sealed class <FadeOutPinWeight>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000B65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000B66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000B67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Dying <>4__this;

			[Token(Token = "0x17000141")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000BEA")]
				[Address(RVA = "0xC17450", Offset = "0xC17450", VA = "0xC17450", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000142")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000BEC")]
				[Address(RVA = "0xC17498", Offset = "0xC17498", VA = "0xC17498", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000BE7")]
			[Address(RVA = "0xC17388", Offset = "0xC17388", VA = "0xC17388")]
			[DebuggerHidden]
			public <FadeOutPinWeight>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6000BE8")]
			[Address(RVA = "0xC173B4", Offset = "0xC173B4", VA = "0xC173B4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000BE9")]
			[Address(RVA = "0xC173B8", Offset = "0xC173B8", VA = "0xC173B8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000BEB")]
			[Address(RVA = "0xC17458", Offset = "0xC17458", VA = "0xC17458", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200018E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CC1C0", Offset = "0x8CC1C0")]
		private sealed class <FadeOutMuscleWeight>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000B68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000B69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000B6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Dying <>4__this;

			[Token(Token = "0x17000143")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000BF0")]
				[Address(RVA = "0xC17338", Offset = "0xC17338", VA = "0xC17338", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000144")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000BF2")]
				[Address(RVA = "0xC17380", Offset = "0xC17380", VA = "0xC17380", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000BED")]
			[Address(RVA = "0xC1726C", Offset = "0xC1726C", VA = "0xC1726C")]
			[DebuggerHidden]
			public <FadeOutMuscleWeight>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6000BEE")]
			[Address(RVA = "0xC17298", Offset = "0xC17298", VA = "0xC17298", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000BEF")]
			[Address(RVA = "0xC1729C", Offset = "0xC1729C", VA = "0xC1729C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000BF1")]
			[Address(RVA = "0xC17340", Offset = "0xC17340", VA = "0xC17340", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D88AC", Offset = "0x8D88AC")]
		public PuppetMaster puppetMaster;

		[Token(Token = "0x4000B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D88E4", Offset = "0x8D88E4")]
		public float fadeOutPinWeightSpeed;

		[Token(Token = "0x4000B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D891C", Offset = "0x8D891C")]
		public float fadeOutMuscleWeightSpeed;

		[Token(Token = "0x4000B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8954", Offset = "0x8D8954")]
		public float deadMuscleWeight;

		[Token(Token = "0x4000B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Animator animator;

		[Token(Token = "0x4000B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 defaultPosition;

		[Token(Token = "0x4000B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Quaternion defaultRotation;

		[Token(Token = "0x4000B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private bool isDead;

		[Token(Token = "0x6000BE2")]
		[Address(RVA = "0xCC5164", Offset = "0xCC5164", VA = "0xCC5164")]
		private void Start()
		{
		}

		[Token(Token = "0x6000BE3")]
		[Address(RVA = "0xCC51FC", Offset = "0xCC51FC", VA = "0xCC51FC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BE4")]
		[Address(RVA = "0xCC53EC", Offset = "0xCC53EC", VA = "0xCC53EC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E04BC", Offset = "0x8E04BC")]
		private IEnumerator FadeOutPinWeight()
		{
			return null;
		}

		[Token(Token = "0x6000BE5")]
		[Address(RVA = "0xCC5458", Offset = "0xCC5458", VA = "0xCC5458")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E051C", Offset = "0x8E051C")]
		private IEnumerator FadeOutMuscleWeight()
		{
			return null;
		}

		[Token(Token = "0x6000BE6")]
		[Address(RVA = "0xCC54C4", Offset = "0xCC54C4", VA = "0xCC54C4")]
		public Dying()
		{
		}
	}
	[Token(Token = "0x200018F")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8CC1D0", Offset = "0x8CC1D0")]
	public class FXCollisionBlood : MonoBehaviour
	{
		[Token(Token = "0x4000B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BehaviourPuppet puppet;

		[Token(Token = "0x4000B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float minCollisionImpulse;

		[Token(Token = "0x4000B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int emission;

		[Token(Token = "0x4000B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float emissionImpulseAdd;

		[Token(Token = "0x4000B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int maxEmission;

		[Token(Token = "0x4000B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ParticleSystem particles;

		[Token(Token = "0x6000BF3")]
		[Address(RVA = "0x15312D8", Offset = "0x15312D8", VA = "0x15312D8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000BF4")]
		[Address(RVA = "0x15313BC", Offset = "0x15313BC", VA = "0x15313BC")]
		private void OnCollisionImpulse(MuscleCollision m, float impulse)
		{
		}

		[Token(Token = "0x6000BF5")]
		[Address(RVA = "0x1531628", Offset = "0x1531628", VA = "0x1531628")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000BF6")]
		[Address(RVA = "0x153172C", Offset = "0x153172C", VA = "0x153172C")]
		public FXCollisionBlood()
		{
		}
	}
	[Token(Token = "0x2000190")]
	public class Grab : MonoBehaviour
	{
		[Token(Token = "0x4000B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D898C", Offset = "0x8D898C")]
		public PuppetMaster puppetMaster;

		[Token(Token = "0x4000B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D89C4", Offset = "0x8D89C4")]
		public UserControlMelee userControl;

		[Token(Token = "0x4000B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D89FC", Offset = "0x8D89FC")]
		public int grabLayer;

		[Token(Token = "0x4000B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool grabbed;

		[Token(Token = "0x4000B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Rigidbody r;

		[Token(Token = "0x4000B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Collider c;

		[Token(Token = "0x4000B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private BehaviourPuppet otherPuppet;

		[Token(Token = "0x4000B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Collider otherCollider;

		[Token(Token = "0x4000B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private ConfigurableJoint joint;

		[Token(Token = "0x4000B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float nextGrabTime;

		[Token(Token = "0x4000B7B")]
		private const float massMlp = 5f;

		[Token(Token = "0x4000B7C")]
		private const int solverIterationMlp = 10;

		[Token(Token = "0x6000BF7")]
		[Address(RVA = "0x15389BC", Offset = "0x15389BC", VA = "0x15389BC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000BF8")]
		[Address(RVA = "0x1538A34", Offset = "0x1538A34", VA = "0x1538A34")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6000BF9")]
		[Address(RVA = "0x1538DFC", Offset = "0x1538DFC", VA = "0x1538DFC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BFA")]
		[Address(RVA = "0x1538F24", Offset = "0x1538F24", VA = "0x1538F24")]
		public Grab()
		{
		}
	}
	[Token(Token = "0x2000191")]
	public class Killing : MonoBehaviour
	{
		[Token(Token = "0x4000B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8A34", Offset = "0x8D8A34")]
		public PuppetMaster puppetMaster;

		[Token(Token = "0x4000B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8A6C", Offset = "0x8D8A6C")]
		public PuppetMaster.StateSettings stateSettings;

		[Token(Token = "0x6000BFB")]
		[Address(RVA = "0xB15370", Offset = "0xB15370", VA = "0xB15370")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BFC")]
		[Address(RVA = "0xB15440", Offset = "0xB15440", VA = "0xB15440")]
		public Killing()
		{
		}
	}
	[Token(Token = "0x2000192")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8CC230", Offset = "0x8CC230")]
	public class LayerSetup : MonoBehaviour
	{
		[Token(Token = "0x4000B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8AA4", Offset = "0x8D8AA4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D8AA4", Offset = "0x8D8AA4")]
		public Transform characterController;

		[Token(Token = "0x4000B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D8B04", Offset = "0x8D8B04")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8B04", Offset = "0x8D8B04")]
		public int characterControllerLayer;

		[Token(Token = "0x4000B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8B64", Offset = "0x8D8B64")]
		public int ragdollLayer;

		[Token(Token = "0x4000B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8B9C", Offset = "0x8D8B9C")]
		public LayerMask ignoreCollisionWithCharacterController;

		[Token(Token = "0x4000B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8BD4", Offset = "0x8D8BD4")]
		public LayerMask ignoreCollisionWithRagdoll;

		[Token(Token = "0x4000B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private PuppetMaster puppetMaster;

		[Token(Token = "0x6000BFD")]
		[Address(RVA = "0xB15BD4", Offset = "0xB15BD4", VA = "0xB15BD4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000BFE")]
		[Address(RVA = "0xB15DD0", Offset = "0xB15DD0", VA = "0xB15DD0")]
		public LayerSetup()
		{
		}
	}
	[Token(Token = "0x2000193")]
	public class NavMeshPuppet : MonoBehaviour
	{
		[Token(Token = "0x4000B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BehaviourPuppet puppet;

		[Token(Token = "0x4000B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NavMeshAgent agent;

		[Token(Token = "0x4000B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform target;

		[Token(Token = "0x4000B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Animator animator;

		[Token(Token = "0x6000BFF")]
		[Address(RVA = "0xC21344", Offset = "0xC21344", VA = "0xC21344")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C00")]
		[Address(RVA = "0xC2143C", Offset = "0xC2143C", VA = "0xC2143C")]
		public NavMeshPuppet()
		{
		}
	}
	[Token(Token = "0x2000194")]
	public class Planet : MonoBehaviour
	{
		[Token(Token = "0x4000B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float mass;

		[Token(Token = "0x6000C01")]
		[Address(RVA = "0xC296DC", Offset = "0xC296DC", VA = "0xC296DC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C02")]
		[Address(RVA = "0xC297D8", Offset = "0xC297D8", VA = "0xC297D8")]
		public Planet()
		{
		}
	}
	[Token(Token = "0x2000195")]
	public class PlanetaryGravity : MonoBehaviour
	{
		[Token(Token = "0x4000B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Planet planet;

		[Token(Token = "0x4000B8B")]
		private const float G = 6.672E-11f;

		[Token(Token = "0x4000B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Rigidbody _r;

		[Token(Token = "0x17000145")]
		private Rigidbody r
		{
			[Token(Token = "0x6000C03")]
			[Address(RVA = "0xC297E8", Offset = "0xC297E8", VA = "0xC297E8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C04")]
		[Address(RVA = "0xC29888", Offset = "0xC29888", VA = "0xC29888")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000C05")]
		[Address(RVA = "0xC29964", Offset = "0xC29964", VA = "0xC29964")]
		private void ApplyGravity(Rigidbody r)
		{
		}

		[Token(Token = "0x6000C06")]
		[Address(RVA = "0xC29A98", Offset = "0xC29A98", VA = "0xC29A98")]
		public PlanetaryGravity()
		{
		}
	}
	[Token(Token = "0x2000196")]
	public class PropDemo : MonoBehaviour
	{
		[Token(Token = "0x4000B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8C0C", Offset = "0x8D8C0C")]
		public PuppetMasterProp prop;

		[Token(Token = "0x4000B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8C44", Offset = "0x8D8C44")]
		public PropMuscle propMuscleLeft;

		[Token(Token = "0x4000B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8C7C", Offset = "0x8D8C7C")]
		public PropMuscle propMuscleRight;

		[Token(Token = "0x4000B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8CB4", Offset = "0x8D8CB4")]
		public bool pickUpOnAwake;

		[Token(Token = "0x4000B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool right;

		[Token(Token = "0x17000146")]
		private PropMuscle connectTo
		{
			[Token(Token = "0x6000C09")]
			[Address(RVA = "0x10A5AD8", Offset = "0x10A5AD8", VA = "0x10A5AD8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C07")]
		[Address(RVA = "0x10A5A9C", Offset = "0x10A5A9C", VA = "0x10A5A9C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C08")]
		[Address(RVA = "0x10A5AF4", Offset = "0x10A5AF4", VA = "0x10A5AF4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C0A")]
		[Address(RVA = "0x10A5BB4", Offset = "0x10A5BB4", VA = "0x10A5BB4")]
		public PropDemo()
		{
		}
	}
	[Token(Token = "0x2000197")]
	public class PropMelee : Prop
	{
		[Token(Token = "0x2000198")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CC290", Offset = "0x8CC290")]
		private sealed class <Action>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000B9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000B9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000B9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PropMelee <>4__this;

			[Token(Token = "0x4000B9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float duration;

			[Token(Token = "0x4000BA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <additionalPinMuscleIndex>5__2;

			[Token(Token = "0x17000147")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000C14")]
				[Address(RVA = "0x1907568", Offset = "0x1907568", VA = "0x1907568", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000148")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000C16")]
				[Address(RVA = "0x19075B0", Offset = "0x19075B0", VA = "0x19075B0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000C11")]
			[Address(RVA = "0x190730C", Offset = "0x190730C", VA = "0x190730C")]
			[DebuggerHidden]
			public <Action>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6000C12")]
			[Address(RVA = "0x1907338", Offset = "0x1907338", VA = "0x1907338", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000C13")]
			[Address(RVA = "0x190733C", Offset = "0x190733C", VA = "0x190733C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000C15")]
			[Address(RVA = "0x1907570", Offset = "0x1907570", VA = "0x1907570", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x8D8CEC", Offset = "0x8D8CEC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8CEC", Offset = "0x8D8CEC")]
		public CapsuleCollider capsuleCollider;

		[Token(Token = "0x4000B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8D4C", Offset = "0x8D8D4C")]
		public BoxCollider boxCollider;

		[Token(Token = "0x4000B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8D84", Offset = "0x8D8D84")]
		public float actionColliderRadiusMlp;

		[Token(Token = "0x4000B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8DBC", Offset = "0x8D8DBC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D8DBC", Offset = "0x8D8DBC")]
		public float actionAdditionalPinWeight;

		[Token(Token = "0x4000B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8E10", Offset = "0x8D8E10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D8E10", Offset = "0x8D8E10")]
		public float actionMassMlp;

		[Token(Token = "0x4000B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8E68", Offset = "0x8D8E68")]
		public Vector3 COMOffset;

		[Token(Token = "0x4000B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float defaultColliderRadius;

		[Token(Token = "0x4000B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private float defaultMass;

		[Token(Token = "0x4000B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float defaultAddMass;

		[Token(Token = "0x4000B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Rigidbody r;

		[Token(Token = "0x6000C0B")]
		[Address(RVA = "0x10A5BC4", Offset = "0x10A5BC4", VA = "0x10A5BC4")]
		public void StartAction(float duration)
		{
		}

		[Token(Token = "0x6000C0C")]
		[Address(RVA = "0x10A5C0C", Offset = "0x10A5C0C", VA = "0x10A5C0C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E061C", Offset = "0x8E061C")]
		public IEnumerator Action(float duration)
		{
			return null;
		}

		[Token(Token = "0x6000C0D")]
		[Address(RVA = "0x10A5C88", Offset = "0x10A5C88", VA = "0x10A5C88", Slot = "6")]
		protected override void OnStart()
		{
		}

		[Token(Token = "0x6000C0E")]
		[Address(RVA = "0x10A5D3C", Offset = "0x10A5D3C", VA = "0x10A5D3C", Slot = "4")]
		protected override void OnPickUp(PropRoot propRoot)
		{
		}

		[Token(Token = "0x6000C0F")]
		[Address(RVA = "0x10A5DB4", Offset = "0x10A5DB4", VA = "0x10A5DB4", Slot = "5")]
		protected override void OnDrop()
		{
		}

		[Token(Token = "0x6000C10")]
		[Address(RVA = "0x10A5E2C", Offset = "0x10A5E2C", VA = "0x10A5E2C")]
		public PropMelee()
		{
		}
	}
	[Token(Token = "0x2000199")]
	public class PropPickUpTrigger : MonoBehaviour
	{
		[Token(Token = "0x4000BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PuppetMasterProp prop;

		[Token(Token = "0x4000BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LayerMask characterLayers;

		[Token(Token = "0x4000BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CharacterPuppet characterPuppet;

		[Token(Token = "0x6000C17")]
		[Address(RVA = "0x10A72A4", Offset = "0x10A72A4", VA = "0x10A72A4")]
		private void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x6000C18")]
		[Address(RVA = "0x10A7430", Offset = "0x10A7430", VA = "0x10A7430")]
		public PropPickUpTrigger()
		{
		}
	}
	[Token(Token = "0x200019A")]
	public class PuppetBoard : MonoBehaviour
	{
		[Token(Token = "0x4000BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8EA0", Offset = "0x8D8EA0")]
		public Rigidbody target;

		[Token(Token = "0x4000BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8ED8", Offset = "0x8D8ED8")]
		public Transform bodyTargetPivot;

		[Token(Token = "0x4000BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8F10", Offset = "0x8D8F10")]
		public Transform bodyTarget;

		[Token(Token = "0x4000BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Rigidbody r;

		[Token(Token = "0x6000C19")]
		[Address(RVA = "0x10A9914", Offset = "0x10A9914", VA = "0x10A9914")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C1A")]
		[Address(RVA = "0x10A99B8", Offset = "0x10A99B8", VA = "0x10A99B8")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000C1B")]
		[Address(RVA = "0x10A9B38", Offset = "0x10A9B38", VA = "0x10A9B38")]
		public PuppetBoard()
		{
		}
	}
	[Token(Token = "0x200019B")]
	public class PuppetMasterPropMelee : PuppetMasterProp
	{
		[Token(Token = "0x200019C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CC2A0", Offset = "0x8CC2A0")]
		private sealed class <Action>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000BB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000BB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000BB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PuppetMasterPropMelee <>4__this;

			[Token(Token = "0x4000BB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float duration;

			[Token(Token = "0x17000149")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000C25")]
				[Address(RVA = "0x1908D94", Offset = "0x1908D94", VA = "0x1908D94", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700014A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000C27")]
				[Address(RVA = "0x1908DDC", Offset = "0x1908DDC", VA = "0x1908DDC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000C22")]
			[Address(RVA = "0x1908C5C", Offset = "0x1908C5C", VA = "0x1908C5C")]
			[DebuggerHidden]
			public <Action>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6000C23")]
			[Address(RVA = "0x1908C88", Offset = "0x1908C88", VA = "0x1908C88", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000C24")]
			[Address(RVA = "0x1908C8C", Offset = "0x1908C8C", VA = "0x1908C8C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000C26")]
			[Address(RVA = "0x1908D9C", Offset = "0x1908D9C", VA = "0x1908D9C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8F48", Offset = "0x8D8F48")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x8D8F48", Offset = "0x8D8F48")]
		public CapsuleCollider capsuleCollider;

		[Token(Token = "0x4000BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8FA8", Offset = "0x8D8FA8")]
		public BoxCollider boxCollider;

		[Token(Token = "0x4000BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8FE0", Offset = "0x8D8FE0")]
		public float actionColliderRadiusMlp;

		[Token(Token = "0x4000BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D9018", Offset = "0x8D9018")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D9018", Offset = "0x8D9018")]
		public float actionAdditionalPinWeight;

		[Token(Token = "0x4000BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D906C", Offset = "0x8D906C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D906C", Offset = "0x8D906C")]
		public float actionMassMlp;

		[Token(Token = "0x4000BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D90C0", Offset = "0x8D90C0")]
		public Vector3 COMOffset;

		[Token(Token = "0x4000BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private float defaultColliderRadius;

		[Token(Token = "0x4000BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private float defaultMass;

		[Token(Token = "0x4000BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private float defaultAdditionalPinWeight;

		[Token(Token = "0x6000C1C")]
		[Address(RVA = "0xE58D84", Offset = "0xE58D84", VA = "0xE58D84")]
		public void StartAction(float duration)
		{
		}

		[Token(Token = "0x6000C1D")]
		[Address(RVA = "0xE58DCC", Offset = "0xE58DCC", VA = "0xE58DCC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E06CC", Offset = "0x8E06CC")]
		public IEnumerator Action(float duration)
		{
			return null;
		}

		[Token(Token = "0x6000C1E")]
		[Address(RVA = "0xE58E48", Offset = "0xE58E48", VA = "0xE58E48", Slot = "7")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000C1F")]
		[Address(RVA = "0xE58EB0", Offset = "0xE58EB0", VA = "0xE58EB0", Slot = "4")]
		protected override void OnPickUp(PuppetMaster puppetMaster, int propMuscleIndex)
		{
		}

		[Token(Token = "0x6000C20")]
		[Address(RVA = "0xE58F58", Offset = "0xE58F58", VA = "0xE58F58", Slot = "5")]
		protected override void OnDrop(PuppetMaster puppetMaster, int propMuscleIndex)
		{
		}

		[Token(Token = "0x6000C21")]
		[Address(RVA = "0xE58FBC", Offset = "0xE58FBC", VA = "0xE58FBC")]
		public PuppetMasterPropMelee()
		{
		}
	}
	[Token(Token = "0x200019D")]
	public class PuppetScaling : MonoBehaviour
	{
		[Token(Token = "0x4000BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PuppetMaster puppetMaster;

		[Token(Token = "0x4000BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D90F8", Offset = "0x8D90F8")]
		public float masterScale;

		[Token(Token = "0x4000BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int muscleIndex;

		[Token(Token = "0x4000BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D9114", Offset = "0x8D9114")]
		public float muscleScale;

		[Token(Token = "0x4000BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float defaultMuscleSpring;

		[Token(Token = "0x6000C28")]
		[Address(RVA = "0xE5A470", Offset = "0xE5A470", VA = "0xE5A470")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C29")]
		[Address(RVA = "0xE5A4B0", Offset = "0xE5A4B0", VA = "0xE5A4B0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C2A")]
		[Address(RVA = "0xE5A7C4", Offset = "0xE5A7C4", VA = "0xE5A7C4")]
		public PuppetScaling()
		{
		}
	}
	[Token(Token = "0x200019E")]
	public class RaycastShooter : MonoBehaviour
	{
		[Token(Token = "0x4000BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LayerMask layers;

		[Token(Token = "0x4000BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float unpin;

		[Token(Token = "0x4000BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float force;

		[Token(Token = "0x4000BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ParticleSystem blood;

		[Token(Token = "0x6000C2B")]
		[Address(RVA = "0xE5EA58", Offset = "0xE5EA58", VA = "0xE5EA58")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C2C")]
		[Address(RVA = "0xE5ECB8", Offset = "0xE5ECB8", VA = "0xE5ECB8")]
		public RaycastShooter()
		{
		}
	}
	[Token(Token = "0x200019F")]
	public class Respawning : MonoBehaviour
	{
		[Token(Token = "0x4000BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D9130", Offset = "0x8D9130")]
		public Transform pool;

		[Token(Token = "0x4000BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D9168", Offset = "0x8D9168")]
		public BehaviourPuppet puppet;

		[Token(Token = "0x4000BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D91A0", Offset = "0x8D91A0")]
		public string idleAnimation;

		[Token(Token = "0x4000BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform puppetRoot;

		[Token(Token = "0x1700014B")]
		private bool isPooled
		{
			[Token(Token = "0x6000C2D")]
			[Address(RVA = "0xE5FB10", Offset = "0xE5FB10", VA = "0xE5FB10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000C2E")]
		[Address(RVA = "0xE5FBA4", Offset = "0xE5FBA4", VA = "0xE5FBA4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C2F")]
		[Address(RVA = "0xE5FC04", Offset = "0xE5FC04", VA = "0xE5FC04")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C30")]
		[Address(RVA = "0xE5FD38", Offset = "0xE5FD38", VA = "0xE5FD38")]
		private void Pool()
		{
		}

		[Token(Token = "0x6000C31")]
		[Address(RVA = "0xE5FD5C", Offset = "0xE5FD5C", VA = "0xE5FD5C")]
		private void Respawn(Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x6000C32")]
		[Address(RVA = "0xE5FE8C", Offset = "0xE5FE8C", VA = "0xE5FE8C")]
		public Respawning()
		{
		}
	}
	[Token(Token = "0x20001A0")]
	public class RotateShoulderToTarget : MonoBehaviour
	{
		[Token(Token = "0x4000BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform shoulder;

		[Token(Token = "0x4000BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 euler;

		[Token(Token = "0x6000C33")]
		[Address(RVA = "0xE60260", Offset = "0xE60260", VA = "0xE60260")]
		private void OnPuppetMasterRead()
		{
		}

		[Token(Token = "0x6000C34")]
		[Address(RVA = "0xE602F8", Offset = "0xE602F8", VA = "0xE602F8")]
		public RotateShoulderToTarget()
		{
		}
	}
	[Token(Token = "0x20001A1")]
	public class SkeletonDisconnector : MonoBehaviour
	{
		[Token(Token = "0x4000BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BehaviourPuppet puppet;

		[Token(Token = "0x4000BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Skeleton skeleton;

		[Token(Token = "0x4000BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MuscleDisconnectMode disconnectMuscleMode;

		[Token(Token = "0x4000BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public LayerMask layers;

		[Token(Token = "0x4000BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float unpin;

		[Token(Token = "0x4000BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float force;

		[Token(Token = "0x4000BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ParticleSystem particles;

		[Token(Token = "0x4000BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public PropMuscle propMuscle;

		[Token(Token = "0x4000BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public PuppetMasterProp prop;

		[Token(Token = "0x6000C35")]
		[Address(RVA = "0xE65908", Offset = "0xE65908", VA = "0xE65908")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C36")]
		[Address(RVA = "0xE65CD0", Offset = "0xE65CD0", VA = "0xE65CD0")]
		public SkeletonDisconnector()
		{
		}
	}
	[Token(Token = "0x20001A2")]
	public class SkeletonShooter : MonoBehaviour
	{
		[Token(Token = "0x4000BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PuppetMaster puppetMaster;

		[Token(Token = "0x4000BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Skeleton skeleton;

		[Token(Token = "0x4000BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MuscleRemoveMode removeMuscleMode;

		[Token(Token = "0x4000BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public LayerMask layers;

		[Token(Token = "0x4000BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float unpin;

		[Token(Token = "0x4000BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float force;

		[Token(Token = "0x4000BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ParticleSystem particles;

		[Token(Token = "0x6000C37")]
		[Address(RVA = "0xE65CE0", Offset = "0xE65CE0", VA = "0xE65CE0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C38")]
		[Address(RVA = "0xE6602C", Offset = "0xE6602C", VA = "0xE6602C")]
		public SkeletonShooter()
		{
		}
	}
	[Token(Token = "0x20001A3")]
	public class UserControlAIMelee : UserControlThirdPerson
	{
		[Token(Token = "0x4000BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public BehaviourPuppet targetPuppet;

		[Token(Token = "0x4000BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float stoppingDistance;

		[Token(Token = "0x4000BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float stoppingThreshold;

		[Token(Token = "0x4000BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool isAttacking;

		[Token(Token = "0x4000BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float attackTimer;

		[Token(Token = "0x1700014C")]
		private Transform moveTarget
		{
			[Token(Token = "0x6000C39")]
			[Address(RVA = "0xC0A46C", Offset = "0xC0A46C", VA = "0xC0A46C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C3A")]
		[Address(RVA = "0xC0A4C0", Offset = "0xC0A4C0", VA = "0xC0A4C0", Slot = "5")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6000C3B")]
		[Address(RVA = "0xC0A670", Offset = "0xC0A670", VA = "0xC0A670")]
		private bool CanAttack()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C3C")]
		[Address(RVA = "0xC0A78C", Offset = "0xC0A78C", VA = "0xC0A78C")]
		public UserControlAIMelee()
		{
		}
	}
	[Token(Token = "0x20001A4")]
	public class UserControlMelee : UserControlThirdPerson
	{
		[Token(Token = "0x4000BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public KeyCode hitKey;

		[Token(Token = "0x6000C3D")]
		[Address(RVA = "0xC0A7A8", Offset = "0xC0A7A8", VA = "0xC0A7A8", Slot = "5")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6000C3E")]
		[Address(RVA = "0xC0AA78", Offset = "0xC0AA78", VA = "0xC0AA78")]
		public UserControlMelee()
		{
		}
	}
	[Token(Token = "0x20001A5")]
	public abstract class CharacterAnimationBase : MonoBehaviour
	{
		[Token(Token = "0x4000BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool smoothFollow;

		[Token(Token = "0x4000BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float smoothFollowSpeed;

		[Token(Token = "0x4000BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected bool animatePhysics;

		[Token(Token = "0x4000BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 lastPosition;

		[Token(Token = "0x4000BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 localPosition;

		[Token(Token = "0x4000BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Quaternion localRotation;

		[Token(Token = "0x4000BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Quaternion lastRotation;

		[Token(Token = "0x1700014D")]
		public virtual bool animationGrounded
		{
			[Token(Token = "0x6000C40")]
			[Address(RVA = "0x1077748", Offset = "0x1077748", VA = "0x1077748", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000C3F")]
		[Address(RVA = "0x1077724", Offset = "0x1077724", VA = "0x1077724", Slot = "4")]
		public virtual Vector3 GetPivotPoint()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C41")]
		[Address(RVA = "0x1077750", Offset = "0x1077750", VA = "0x1077750")]
		public float GetAngleFromForward(Vector3 worldDirection)
		{
			return default(float);
		}

		[Token(Token = "0x6000C42")]
		[Address(RVA = "0x10777B4", Offset = "0x10777B4", VA = "0x10777B4", Slot = "6")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6000C43")]
		[Address(RVA = "0x107794C", Offset = "0x107794C", VA = "0x107794C", Slot = "7")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x6000C44")]
		[Address(RVA = "0x1077B70", Offset = "0x1077B70", VA = "0x1077B70", Slot = "8")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6000C45")]
		[Address(RVA = "0x107795C", Offset = "0x107795C", VA = "0x107795C")]
		private void SmoothFollow()
		{
		}

		[Token(Token = "0x6000C46")]
		[Address(RVA = "0x1077B80", Offset = "0x1077B80", VA = "0x1077B80")]
		protected CharacterAnimationBase()
		{
		}
	}
	[Token(Token = "0x20001A6")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8CC2B0", Offset = "0x8CC2B0")]
	public class CharacterAnimationSimple : CharacterAnimationBase
	{
		[Token(Token = "0x4000BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public CharacterThirdPerson characterController;

		[Token(Token = "0x4000BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float pivotOffset;

		[Token(Token = "0x4000BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public AnimationCurve moveSpeed;

		[Token(Token = "0x4000BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Animator animator;

		[Token(Token = "0x6000C47")]
		[Address(RVA = "0x107816C", Offset = "0x107816C", VA = "0x107816C", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000C48")]
		[Address(RVA = "0x10781C8", Offset = "0x10781C8", VA = "0x10781C8", Slot = "4")]
		public override Vector3 GetPivotPoint()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C49")]
		[Address(RVA = "0x1078264", Offset = "0x1078264", VA = "0x1078264")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C4A")]
		[Address(RVA = "0x107837C", Offset = "0x107837C", VA = "0x107837C")]
		public CharacterAnimationSimple()
		{
		}
	}
	[Token(Token = "0x20001A7")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8CC310", Offset = "0x8CC310")]
	public class CharacterAnimationThirdPerson : CharacterAnimationBase
	{
		[Token(Token = "0x4000BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public CharacterThirdPerson characterController;

		[Token(Token = "0x4000BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float turnSensitivity;

		[Token(Token = "0x4000BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		private float turnSpeed;

		[Token(Token = "0x4000BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private float runCycleLegOffset;

		[Token(Token = "0x4000BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D9208", Offset = "0x8D9208")]
		[SerializeField]
		private float animSpeedMultiplier;

		[Token(Token = "0x4000BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected Animator animator;

		[Token(Token = "0x4000BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 lastForward;

		[Token(Token = "0x4000BEC")]
		private const string groundedDirectional = "Grounded Directional";

		[Token(Token = "0x4000BED")]
		private const string groundedStrafe = "Grounded Strafe";

		[Token(Token = "0x4000BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float deltaAngle;

		[Token(Token = "0x1700014E")]
		public override bool animationGrounded
		{
			[Token(Token = "0x6000C4D")]
			[Address(RVA = "0x1078430", Offset = "0x1078430", VA = "0x1078430", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000C4B")]
		[Address(RVA = "0x1078394", Offset = "0x1078394", VA = "0x1078394", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000C4C")]
		[Address(RVA = "0x1078414", Offset = "0x1078414", VA = "0x1078414", Slot = "4")]
		public override Vector3 GetPivotPoint()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C4E")]
		[Address(RVA = "0x1077D10", Offset = "0x1077D10", VA = "0x1077D10", Slot = "9")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000C4F")]
		[Address(RVA = "0x1078528", Offset = "0x1078528", VA = "0x1078528")]
		private void OnAnimatorMove()
		{
		}

		[Token(Token = "0x6000C50")]
		[Address(RVA = "0x1078148", Offset = "0x1078148", VA = "0x1078148")]
		public CharacterAnimationThirdPerson()
		{
		}
	}
	[Token(Token = "0x20001A8")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8CC370", Offset = "0x8CC370")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8CC370", Offset = "0x8CC370")]
	public abstract class CharacterBase : MonoBehaviour
	{
		[Token(Token = "0x4000BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D924C", Offset = "0x8D924C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D924C", Offset = "0x8D924C")]
		public Transform gravityTarget;

		[Token(Token = "0x4000BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D92AC", Offset = "0x8D92AC")]
		public float gravityMultiplier;

		[Token(Token = "0x4000BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float airborneThreshold;

		[Token(Token = "0x4000BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float slopeStartAngle;

		[Token(Token = "0x4000BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float slopeEndAngle;

		[Token(Token = "0x4000BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float spherecastRadius;

		[Token(Token = "0x4000BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public LayerMask groundLayers;

		[Token(Token = "0x4000BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private PhysicMaterial zeroFrictionMaterial;

		[Token(Token = "0x4000BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private PhysicMaterial highFrictionMaterial;

		[Token(Token = "0x4000BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected Rigidbody r;

		[Token(Token = "0x4000BF9")]
		protected const float half = 0.5f;

		[Token(Token = "0x4000BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected float originalHeight;

		[Token(Token = "0x4000BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		protected Vector3 originalCenter;

		[Token(Token = "0x4000BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected CapsuleCollider capsule;

		[Token(Token = "0x6000C51")]
		public abstract void Move(Vector3 deltaPosition, Quaternion deltaRotation);

		[Token(Token = "0x6000C52")]
		[Address(RVA = "0x1078630", Offset = "0x1078630", VA = "0x1078630")]
		protected Vector3 GetGravity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C53")]
		[Address(RVA = "0x1078760", Offset = "0x1078760", VA = "0x1078760", Slot = "5")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6000C54")]
		[Address(RVA = "0x1078918", Offset = "0x1078918", VA = "0x1078918", Slot = "6")]
		protected virtual RaycastHit GetSpherecastHit()
		{
			return default(RaycastHit);
		}

		[Token(Token = "0x6000C55")]
		[Address(RVA = "0x1078AC8", Offset = "0x1078AC8", VA = "0x1078AC8")]
		public float GetAngleFromForward(Vector3 worldDirection)
		{
			return default(float);
		}

		[Token(Token = "0x6000C56")]
		[Address(RVA = "0x1078B2C", Offset = "0x1078B2C", VA = "0x1078B2C")]
		protected void RigidbodyRotateAround(Vector3 point, Vector3 axis, float angle)
		{
		}

		[Token(Token = "0x6000C57")]
		[Address(RVA = "0x1078C4C", Offset = "0x1078C4C", VA = "0x1078C4C")]
		protected void ScaleCapsule(float mlp)
		{
		}

		[Token(Token = "0x6000C58")]
		[Address(RVA = "0x1078D70", Offset = "0x1078D70", VA = "0x1078D70")]
		protected void HighFriction()
		{
		}

		[Token(Token = "0x6000C59")]
		[Address(RVA = "0x1078D94", Offset = "0x1078D94", VA = "0x1078D94")]
		protected void ZeroFriction()
		{
		}

		[Token(Token = "0x6000C5A")]
		[Address(RVA = "0x1078DB8", Offset = "0x1078DB8", VA = "0x1078DB8")]
		protected float GetSlopeDamper(Vector3 velocity, Vector3 groundNormal)
		{
			return default(float);
		}

		[Token(Token = "0x6000C5B")]
		[Address(RVA = "0x1078E18", Offset = "0x1078E18", VA = "0x1078E18")]
		protected CharacterBase()
		{
		}
	}
	[Token(Token = "0x20001A9")]
	public class CharacterThirdPerson : CharacterBase
	{
		[Serializable]
		[Token(Token = "0x20001AA")]
		public enum MoveMode
		{
			[Token(Token = "0x4000C36")]
			Directional,
			[Token(Token = "0x4000C37")]
			Strafe
		}

		[Token(Token = "0x20001AB")]
		public struct AnimState
		{
			[Token(Token = "0x4000C38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 moveDirection;

			[Token(Token = "0x4000C39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public bool jump;

			[Token(Token = "0x4000C3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
			public bool crouch;

			[Token(Token = "0x4000C3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
			public bool onGround;

			[Token(Token = "0x4000C3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF")]
			public bool isStrafing;

			[Token(Token = "0x4000C3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float yVelocity;

			[Token(Token = "0x4000C3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public bool doubleJump;
		}

		[Token(Token = "0x20001AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CC404", Offset = "0x8CC404")]
		private sealed class <JumpSmooth>d__74 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000C3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000C40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000C41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CharacterThirdPerson <>4__this;

			[Token(Token = "0x4000C42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 jumpVelocity;

			[Token(Token = "0x4000C43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private int <steps>5__2;

			[Token(Token = "0x4000C44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <stepsToTake>5__3;

			[Token(Token = "0x17000150")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000C71")]
				[Address(RVA = "0xC165C4", Offset = "0xC165C4", VA = "0xC165C4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000151")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000C73")]
				[Address(RVA = "0xC1660C", Offset = "0xC1660C", VA = "0xC1660C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000C6E")]
			[Address(RVA = "0xC164A0", Offset = "0xC164A0", VA = "0xC164A0")]
			[DebuggerHidden]
			public <JumpSmooth>d__74(int <>1__state)
			{
			}

			[Token(Token = "0x6000C6F")]
			[Address(RVA = "0xC164CC", Offset = "0xC164CC", VA = "0xC164CC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000C70")]
			[Address(RVA = "0xC164D0", Offset = "0xC164D0", VA = "0xC164D0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000C72")]
			[Address(RVA = "0xC165CC", Offset = "0xC165CC", VA = "0xC165CC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D92E4", Offset = "0x8D92E4")]
		public CharacterAnimationBase characterAnimation;

		[Token(Token = "0x4000BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public UserControlThirdPerson userControl;

		[Token(Token = "0x4000BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public CameraController cam;

		[Token(Token = "0x4000C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D931C", Offset = "0x8D931C")]
		public MoveMode moveMode;

		[Token(Token = "0x4000C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public bool smoothPhysics;

		[Token(Token = "0x4000C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float smoothAccelerationTime;

		[Token(Token = "0x4000C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float linearAccelerationSpeed;

		[Token(Token = "0x4000C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float platformFriction;

		[Token(Token = "0x4000C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float groundStickyEffect;

		[Token(Token = "0x4000C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float maxVerticalVelocityOnGround;

		[Token(Token = "0x4000C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public float velocityToGroundTangentWeight;

		[Token(Token = "0x4000C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D9354", Offset = "0x8D9354")]
		public bool lookInCameraDirection;

		[Token(Token = "0x4000C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public float turnSpeed;

		[Token(Token = "0x4000C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public float stationaryTurnSpeedMlp;

		[Token(Token = "0x4000C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D938C", Offset = "0x8D938C")]
		public bool smoothJump;

		[Token(Token = "0x4000C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public float airSpeed;

		[Token(Token = "0x4000C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public float airControl;

		[Token(Token = "0x4000C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public float jumpPower;

		[Token(Token = "0x4000C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public float jumpRepeatDelayTime;

		[Token(Token = "0x4000C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public bool doubleJumpEnabled;

		[Token(Token = "0x4000C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public float doubleJumpPowerMlp;

		[Token(Token = "0x4000C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D93C4", Offset = "0x8D93C4")]
		public LayerMask wallRunLayers;

		[Token(Token = "0x4000C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public float wallRunMaxLength;

		[Token(Token = "0x4000C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public float wallRunMinMoveMag;

		[Token(Token = "0x4000C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		public float wallRunMinVelocityY;

		[Token(Token = "0x4000C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public float wallRunRotationSpeed;

		[Token(Token = "0x4000C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public float wallRunMaxRotationAngle;

		[Token(Token = "0x4000C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public float wallRunWeightSpeed;

		[Token(Token = "0x4000C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D93FC", Offset = "0x8D93FC")]
		public float crouchCapsuleScaleMlp;

		[Token(Token = "0x4000C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D9434", Offset = "0x8D9434")]
		private bool <onGround>k__BackingField;

		[Token(Token = "0x4000C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		public AnimState animState;

		[Token(Token = "0x4000C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		protected Vector3 moveDirection;

		[Token(Token = "0x4000C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private Animator animator;

		[Token(Token = "0x4000C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Vector3 normal;

		[Token(Token = "0x4000C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		private Vector3 platformVelocity;

		[Token(Token = "0x4000C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private Vector3 platformAngularVelocity;

		[Token(Token = "0x4000C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private RaycastHit hit;

		[Token(Token = "0x4000C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private float jumpLeg;

		[Token(Token = "0x4000C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		private float jumpEndTime;

		[Token(Token = "0x4000C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private float forwardMlp;

		[Token(Token = "0x4000C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		private float groundDistance;

		[Token(Token = "0x4000C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private float lastAirTime;

		[Token(Token = "0x4000C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		private float stickyForce;

		[Token(Token = "0x4000C28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private Vector3 wallNormal;

		[Token(Token = "0x4000C29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		private Vector3 moveDirectionVelocity;

		[Token(Token = "0x4000C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private float wallRunWeight;

		[Token(Token = "0x4000C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
		private float lastWallRunWeight;

		[Token(Token = "0x4000C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private Vector3 fixedDeltaPosition;

		[Token(Token = "0x4000C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		private Quaternion fixedDeltaRotation;

		[Token(Token = "0x4000C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
		private bool fixedFrame;

		[Token(Token = "0x4000C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private float wallRunEndTime;

		[Token(Token = "0x4000C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		private Vector3 gravity;

		[Token(Token = "0x4000C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private Vector3 verticalVelocity;

		[Token(Token = "0x4000C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
		private float velocityY;

		[Token(Token = "0x4000C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private bool doubleJumped;

		[Token(Token = "0x4000C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E1")]
		private bool jumpReleased;

		[Token(Token = "0x1700014F")]
		public bool onGround
		{
			[Token(Token = "0x6000C5C")]
			[Address(RVA = "0xCBB4BC", Offset = "0xCBB4BC", VA = "0xCBB4BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E077C", Offset = "0x8E077C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C5D")]
			[Address(RVA = "0xCBB4C4", Offset = "0xCBB4C4", VA = "0xCBB4C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E078C", Offset = "0x8E078C")]
			private set
			{
			}
		}

		[Token(Token = "0x6000C5E")]
		[Address(RVA = "0xCBB4D0", Offset = "0xCBB4D0", VA = "0xCBB4D0", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000C5F")]
		[Address(RVA = "0xCBB614", Offset = "0xCBB614", VA = "0xCBB614")]
		private void OnAnimatorMove()
		{
		}

		[Token(Token = "0x6000C60")]
		[Address(RVA = "0xCBB6A4", Offset = "0xCBB6A4", VA = "0xCBB6A4", Slot = "4")]
		public override void Move(Vector3 deltaPosition, Quaternion deltaRotation)
		{
		}

		[Token(Token = "0x6000C61")]
		[Address(RVA = "0xCBB720", Offset = "0xCBB720", VA = "0xCBB720")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000C62")]
		[Address(RVA = "0xCBC31C", Offset = "0xCBC31C", VA = "0xCBC31C", Slot = "7")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000C63")]
		[Address(RVA = "0xCBC574", Offset = "0xCBC574", VA = "0xCBC574", Slot = "8")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x6000C64")]
		[Address(RVA = "0xCBBC24", Offset = "0xCBBC24", VA = "0xCBBC24")]
		private void MoveFixed(Vector3 deltaPosition)
		{
		}

		[Token(Token = "0x6000C65")]
		[Address(RVA = "0xCBC658", Offset = "0xCBC658", VA = "0xCBC658")]
		private void WallRun()
		{
		}

		[Token(Token = "0x6000C66")]
		[Address(RVA = "0xCBCB00", Offset = "0xCBCB00", VA = "0xCBCB00")]
		private bool CanWallRun()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C67")]
		[Address(RVA = "0xCBC3A4", Offset = "0xCBC3A4", VA = "0xCBC3A4")]
		private Vector3 GetMoveDirection()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C68")]
		[Address(RVA = "0xCBCBA0", Offset = "0xCBCBA0", VA = "0xCBCBA0", Slot = "9")]
		protected virtual void Rotate()
		{
		}

		[Token(Token = "0x6000C69")]
		[Address(RVA = "0xCBCEE0", Offset = "0xCBCEE0", VA = "0xCBCEE0")]
		private Vector3 GetForwardDirection()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C6A")]
		[Address(RVA = "0xCBCFD0", Offset = "0xCBCFD0", VA = "0xCBCFD0", Slot = "10")]
		protected virtual bool Jump()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C6B")]
		[Address(RVA = "0xCBD130", Offset = "0xCBD130", VA = "0xCBD130")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E079C", Offset = "0x8E079C")]
		private IEnumerator JumpSmooth(Vector3 jumpVelocity)
		{
			return null;
		}

		[Token(Token = "0x6000C6C")]
		[Address(RVA = "0xCBBF74", Offset = "0xCBBF74", VA = "0xCBBF74")]
		private void GroundCheck()
		{
		}

		[Token(Token = "0x6000C6D")]
		[Address(RVA = "0xCBD1C0", Offset = "0xCBD1C0", VA = "0xCBD1C0")]
		public CharacterThirdPerson()
		{
		}
	}
	[Token(Token = "0x20001AD")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8CC414", Offset = "0x8CC414")]
	public class SimpleLocomotion : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20001AE")]
		public enum RotationMode
		{
			[Token(Token = "0x4000C53")]
			Smooth,
			[Token(Token = "0x4000C54")]
			Linear
		}

		[Token(Token = "0x4000C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D9444", Offset = "0x8D9444")]
		public CameraController cameraController;

		[Token(Token = "0x4000C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D947C", Offset = "0x8D947C")]
		public float accelerationTime;

		[Token(Token = "0x4000C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D94B4", Offset = "0x8D94B4")]
		public float turnTime;

		[Token(Token = "0x4000C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D94EC", Offset = "0x8D94EC")]
		public bool walkByDefault;

		[Token(Token = "0x4000C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D9524", Offset = "0x8D9524")]
		public RotationMode rotationMode;

		[Token(Token = "0x4000C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D955C", Offset = "0x8D955C")]
		public float moveSpeed;

		[Token(Token = "0x4000C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D9594", Offset = "0x8D9594")]
		private bool <isGrounded>k__BackingField;

		[Token(Token = "0x4000C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Animator animator;

		[Token(Token = "0x4000C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float speed;

		[Token(Token = "0x4000C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float angleVel;

		[Token(Token = "0x4000C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float speedVel;

		[Token(Token = "0x4000C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 linearTargetDirection;

		[Token(Token = "0x4000C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private CharacterController characterController;

		[Token(Token = "0x17000152")]
		public bool isGrounded
		{
			[Token(Token = "0x6000C74")]
			[Address(RVA = "0xE64BE0", Offset = "0xE64BE0", VA = "0xE64BE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E084C", Offset = "0x8E084C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C75")]
			[Address(RVA = "0xE64BE8", Offset = "0xE64BE8", VA = "0xE64BE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E085C", Offset = "0x8E085C")]
			private set
			{
			}
		}

		[Token(Token = "0x6000C76")]
		[Address(RVA = "0xE64BF4", Offset = "0xE64BF4", VA = "0xE64BF4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C77")]
		[Address(RVA = "0xE64C84", Offset = "0xE64C84", VA = "0xE64C84")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C78")]
		[Address(RVA = "0xE65144", Offset = "0xE65144", VA = "0xE65144")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000C79")]
		[Address(RVA = "0xE64CD8", Offset = "0xE64CD8", VA = "0xE64CD8")]
		private void Rotate()
		{
		}

		[Token(Token = "0x6000C7A")]
		[Address(RVA = "0xE64F58", Offset = "0xE64F58", VA = "0xE64F58")]
		private void Move()
		{
		}

		[Token(Token = "0x6000C7B")]
		[Address(RVA = "0xE65180", Offset = "0xE65180", VA = "0xE65180")]
		private Vector3 GetInputVector()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C7C")]
		[Address(RVA = "0xE6521C", Offset = "0xE6521C", VA = "0xE6521C")]
		private Vector3 GetInputVectorRaw()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C7D")]
		[Address(RVA = "0xE652A0", Offset = "0xE652A0", VA = "0xE652A0")]
		public SimpleLocomotion()
		{
		}
	}
	[Token(Token = "0x20001AF")]
	public class UserControlAI : UserControlThirdPerson
	{
		[Token(Token = "0x4000C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform moveTarget;

		[Token(Token = "0x4000C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float stoppingDistance;

		[Token(Token = "0x4000C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float stoppingThreshold;

		[Token(Token = "0x4000C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Navigator navigator;

		[Token(Token = "0x6000C7E")]
		[Address(RVA = "0xC0A1D8", Offset = "0xC0A1D8", VA = "0xC0A1D8", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000C7F")]
		[Address(RVA = "0xC0A254", Offset = "0xC0A254", VA = "0xC0A254", Slot = "5")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6000C80")]
		[Address(RVA = "0xC0A418", Offset = "0xC0A418", VA = "0xC0A418")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6000C81")]
		[Address(RVA = "0xC0A440", Offset = "0xC0A440", VA = "0xC0A440")]
		public UserControlAI()
		{
		}
	}
	[Token(Token = "0x20001B0")]
	public class UserControlThirdPerson : MonoBehaviour
	{
		[Token(Token = "0x20001B1")]
		public struct State
		{
			[Token(Token = "0x4000C5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 move;

			[Token(Token = "0x4000C5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 lookPos;

			[Token(Token = "0x4000C60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool crouch;

			[Token(Token = "0x4000C61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
			public bool jump;

			[Token(Token = "0x4000C62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int actionIndex;
		}

		[Token(Token = "0x4000C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool walkByDefault;

		[Token(Token = "0x4000C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool canCrouch;

		[Token(Token = "0x4000C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool canJump;

		[Token(Token = "0x4000C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public State state;

		[Token(Token = "0x4000C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected Transform cam;

		[Token(Token = "0x6000C82")]
		[Address(RVA = "0xC0A21C", Offset = "0xC0A21C", VA = "0xC0A21C", Slot = "4")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6000C83")]
		[Address(RVA = "0xC0A7DC", Offset = "0xC0A7DC", VA = "0xC0A7DC", Slot = "5")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000C84")]
		[Address(RVA = "0xC0A45C", Offset = "0xC0A45C", VA = "0xC0A45C")]
		public UserControlThirdPerson()
		{
		}
	}
	[Token(Token = "0x20001B2")]
	public class ApplicationQuit : MonoBehaviour
	{
		[Token(Token = "0x6000C85")]
		[Address(RVA = "0xD694F8", Offset = "0xD694F8", VA = "0xD694F8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C86")]
		[Address(RVA = "0xD69534", Offset = "0xD69534", VA = "0xD69534")]
		public ApplicationQuit()
		{
		}
	}
	[Token(Token = "0x20001B3")]
	public class SlowMo : MonoBehaviour
	{
		[Token(Token = "0x4000C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public KeyCode[] keyCodes;

		[Token(Token = "0x4000C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool mouse0;

		[Token(Token = "0x4000C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool mouse1;

		[Token(Token = "0x4000C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float slowMoTimeScale;

		[Token(Token = "0x6000C87")]
		[Address(RVA = "0xE66D9C", Offset = "0xE66D9C", VA = "0xE66D9C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C88")]
		[Address(RVA = "0xE66DD0", Offset = "0xE66DD0", VA = "0xE66DD0")]
		private bool IsSlowMotion()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C89")]
		[Address(RVA = "0xE66E80", Offset = "0xE66E80", VA = "0xE66E80")]
		public SlowMo()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001B4")]
	public class Navigator
	{
		[Token(Token = "0x20001B5")]
		public enum State
		{
			[Token(Token = "0x4000C76")]
			Idle,
			[Token(Token = "0x4000C77")]
			Seeking,
			[Token(Token = "0x4000C78")]
			OnPath
		}

		[Token(Token = "0x4000C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D95A4", Offset = "0x8D95A4")]
		public bool activeTargetSeeking;

		[Token(Token = "0x4000C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D95DC", Offset = "0x8D95DC")]
		public float cornerRadius;

		[Token(Token = "0x4000C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D9614", Offset = "0x8D9614")]
		public float recalculateOnPathDistance;

		[Token(Token = "0x4000C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D964C", Offset = "0x8D964C")]
		public float maxSampleDistance;

		[Token(Token = "0x4000C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D9684", Offset = "0x8D9684")]
		public float nextPathInterval;

		[Token(Token = "0x4000C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D96BC", Offset = "0x8D96BC")]
		private Vector3 <normalizedDeltaPosition>k__BackingField;

		[Token(Token = "0x4000C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D96CC", Offset = "0x8D96CC")]
		private State <state>k__BackingField;

		[Token(Token = "0x4000C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform transform;

		[Token(Token = "0x4000C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int cornerIndex;

		[Token(Token = "0x4000C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3[] corners;

		[Token(Token = "0x4000C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private NavMeshPath path;

		[Token(Token = "0x4000C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 lastTargetPosition;

		[Token(Token = "0x4000C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool initiated;

		[Token(Token = "0x4000C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float nextPathTime;

		[Token(Token = "0x17000153")]
		public Vector3 normalizedDeltaPosition
		{
			[Token(Token = "0x6000C8A")]
			[Address(RVA = "0xC21444", Offset = "0xC21444", VA = "0xC21444")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E086C", Offset = "0x8E086C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000C8B")]
			[Address(RVA = "0xC21450", Offset = "0xC21450", VA = "0xC21450")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E087C", Offset = "0x8E087C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000154")]
		public State state
		{
			[Token(Token = "0x6000C8C")]
			[Address(RVA = "0xC2145C", Offset = "0xC2145C", VA = "0xC2145C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E088C", Offset = "0x8E088C")]
			get
			{
				return default(State);
			}
			[Token(Token = "0x6000C8D")]
			[Address(RVA = "0xC21464", Offset = "0xC21464", VA = "0xC21464")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E089C", Offset = "0x8E089C")]
			private set
			{
			}
		}

		[Token(Token = "0x6000C8E")]
		[Address(RVA = "0xC2146C", Offset = "0xC2146C", VA = "0xC2146C")]
		public void Initiate(Transform transform)
		{
		}

		[Token(Token = "0x6000C8F")]
		[Address(RVA = "0xC2151C", Offset = "0xC2151C", VA = "0xC2151C")]
		public void Update(Vector3 targetPosition)
		{
		}

		[Token(Token = "0x6000C90")]
		[Address(RVA = "0xC21908", Offset = "0xC21908", VA = "0xC21908")]
		private void CalculatePath(Vector3 targetPosition)
		{
		}

		[Token(Token = "0x6000C91")]
		[Address(RVA = "0xC21984", Offset = "0xC21984", VA = "0xC21984")]
		private bool Find(Vector3 targetPosition)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C92")]
		[Address(RVA = "0xC218C4", Offset = "0xC218C4", VA = "0xC218C4")]
		private void Stop()
		{
		}

		[Token(Token = "0x6000C93")]
		[Address(RVA = "0xC218F4", Offset = "0xC218F4", VA = "0xC218F4")]
		private float HorDistance(Vector3 p1, Vector3 p2)
		{
			return default(float);
		}

		[Token(Token = "0x6000C94")]
		[Address(RVA = "0xC21AD0", Offset = "0xC21AD0", VA = "0xC21AD0")]
		public void Visualize()
		{
		}

		[Token(Token = "0x6000C95")]
		[Address(RVA = "0xC21C80", Offset = "0xC21C80", VA = "0xC21C80")]
		public Navigator()
		{
		}
	}
}
namespace RelationsInspector.Backend.AutoBackend
{
	[Token(Token = "0x20001B6")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x8CC474", Offset = "0x8CC474")]
	public class AutoBackendAttribute : Attribute
	{
		[Token(Token = "0x6000C96")]
		[Address(RVA = "0xD712A0", Offset = "0xD712A0", VA = "0xD712A0")]
		public AutoBackendAttribute()
		{
		}
	}
	[Token(Token = "0x20001B7")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x8CC488", Offset = "0x8CC488")]
	public class RelatedAttribute : Attribute
	{
		[Token(Token = "0x6000C97")]
		[Address(RVA = "0xE5FAD8", Offset = "0xE5FAD8", VA = "0xE5FAD8")]
		public RelatedAttribute()
		{
		}
	}
	[Token(Token = "0x20001B8")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x8CC49C", Offset = "0x8CC49C")]
	public class RelatingAttribute : Attribute
	{
		[Token(Token = "0x6000C98")]
		[Address(RVA = "0xE5FAE0", Offset = "0xE5FAE0", VA = "0xE5FAE0")]
		public RelatingAttribute()
		{
		}
	}
}
namespace Pixelplacement
{
	[Token(Token = "0x20001B9")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8CC4B0", Offset = "0x8CC4B0")]
	public class DisplayObject : MonoBehaviour
	{
		[Token(Token = "0x4000C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _activated;

		[Token(Token = "0x17000155")]
		public bool ActiveSelf
		{
			[Token(Token = "0x6000C99")]
			[Address(RVA = "0xCC3458", Offset = "0xCC3458", VA = "0xCC3458")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C9A")]
			[Address(RVA = "0xCC347C", Offset = "0xCC347C", VA = "0xCC347C")]
			set
			{
			}
		}

		[Token(Token = "0x6000C9B")]
		[Address(RVA = "0xCC34C0", Offset = "0xCC34C0", VA = "0xCC34C0")]
		public void Register()
		{
		}

		[Token(Token = "0x6000C9C")]
		[Address(RVA = "0xCC3484", Offset = "0xCC3484", VA = "0xCC3484")]
		public void SetActive(bool value)
		{
		}

		[Token(Token = "0x6000C9D")]
		[Address(RVA = "0xCC3500", Offset = "0xCC3500", VA = "0xCC3500")]
		public void Solo()
		{
		}

		[Token(Token = "0x6000C9E")]
		[Address(RVA = "0xCC39F0", Offset = "0xCC39F0", VA = "0xCC39F0")]
		public void HideAll()
		{
		}

		[Token(Token = "0x6000C9F")]
		[Address(RVA = "0xCC3E4C", Offset = "0xCC3E4C", VA = "0xCC3E4C")]
		public DisplayObject()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001BA")]
	public class GameObjectEvent : UnityEvent<GameObject>
	{
		[Token(Token = "0x6000CA0")]
		[Address(RVA = "0x1536780", Offset = "0x1536780", VA = "0x1536780")]
		public GameObjectEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001BB")]
	public class BoolEvent : UnityEvent<bool>
	{
		[Token(Token = "0x6000CA1")]
		[Address(RVA = "0x1072D2C", Offset = "0x1072D2C", VA = "0x1072D2C")]
		public BoolEvent()
		{
		}
	}
	[Token(Token = "0x20001BC")]
	public class State : MonoBehaviour
	{
		[Token(Token = "0x4000C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private StateMachine _stateMachine;

		[Token(Token = "0x17000156")]
		public bool IsFirst
		{
			[Token(Token = "0x6000CA2")]
			[Address(RVA = "0xE070AC", Offset = "0xE070AC", VA = "0xE070AC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000157")]
		public bool IsLast
		{
			[Token(Token = "0x6000CA3")]
			[Address(RVA = "0xE070DC", Offset = "0xE070DC", VA = "0xE070DC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000158")]
		public StateMachine StateMachine
		{
			[Token(Token = "0x6000CA4")]
			[Address(RVA = "0xE07144", Offset = "0xE07144", VA = "0xE07144")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CA5")]
		[Address(RVA = "0xE07288", Offset = "0xE07288", VA = "0xE07288")]
		public void ChangeState(int childIndex)
		{
		}

		[Token(Token = "0x6000CA6")]
		[Address(RVA = "0xE073BC", Offset = "0xE073BC", VA = "0xE073BC")]
		public void ChangeState(GameObject state)
		{
		}

		[Token(Token = "0x6000CA7")]
		[Address(RVA = "0xE07640", Offset = "0xE07640", VA = "0xE07640")]
		public void ChangeState(string state)
		{
		}

		[Token(Token = "0x6000CA8")]
		[Address(RVA = "0xE0766C", Offset = "0xE0766C", VA = "0xE0766C")]
		public GameObject Next(bool exitIfLast = false)
		{
			return null;
		}

		[Token(Token = "0x6000CA9")]
		[Address(RVA = "0xE0779C", Offset = "0xE0779C", VA = "0xE0779C")]
		public GameObject Previous(bool exitIfFirst = false)
		{
			return null;
		}

		[Token(Token = "0x6000CAA")]
		[Address(RVA = "0xE078A8", Offset = "0xE078A8", VA = "0xE078A8")]
		public void Exit()
		{
		}

		[Token(Token = "0x6000CAB")]
		[Address(RVA = "0xE07A50", Offset = "0xE07A50", VA = "0xE07A50")]
		protected Coroutine StartCoroutineIfActive(IEnumerator coroutine)
		{
			return null;
		}

		[Token(Token = "0x6000CAC")]
		[Address(RVA = "0xE07AA8", Offset = "0xE07AA8", VA = "0xE07AA8")]
		public State()
		{
		}
	}
	[Token(Token = "0x20001BD")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8CC510", Offset = "0x8CC510")]
	public class StateMachine : MonoBehaviour
	{
		[Token(Token = "0x4000C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject defaultState;

		[Token(Token = "0x4000C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject currentState;

		[Token(Token = "0x4000C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool _unityEventsFolded;

		[Token(Token = "0x4000C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D96DC", Offset = "0x8D96DC")]
		public bool verbose;

		[Token(Token = "0x4000C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D9714", Offset = "0x8D9714")]
		public bool allowReentry;

		[Token(Token = "0x4000C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D974C", Offset = "0x8D974C")]
		public bool returnToDefaultOnDisable;

		[Token(Token = "0x4000C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObjectEvent OnStateExited;

		[Token(Token = "0x4000C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObjectEvent OnStateEntered;

		[Token(Token = "0x4000C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UnityEvent OnFirstStateEntered;

		[Token(Token = "0x4000C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public UnityEvent OnFirstStateExited;

		[Token(Token = "0x4000C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public UnityEvent OnLastStateEntered;

		[Token(Token = "0x4000C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public UnityEvent OnLastStateExited;

		[Token(Token = "0x4000C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D9784", Offset = "0x8D9784")]
		private bool <CleanSetup>k__BackingField;

		[Token(Token = "0x4000C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool _initialized;

		[Token(Token = "0x4000C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		private bool _atFirst;

		[Token(Token = "0x4000C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
		private bool _atLast;

		[Token(Token = "0x17000159")]
		public bool CleanSetup
		{
			[Token(Token = "0x6000CAD")]
			[Address(RVA = "0xE07AB0", Offset = "0xE07AB0", VA = "0xE07AB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E08AC", Offset = "0x8E08AC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000CAE")]
			[Address(RVA = "0xE07AB8", Offset = "0xE07AB8", VA = "0xE07AB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E08BC", Offset = "0x8E08BC")]
			private set
			{
			}
		}

		[Token(Token = "0x1700015A")]
		public bool AtFirst
		{
			[Token(Token = "0x6000CAF")]
			[Address(RVA = "0xE07AC4", Offset = "0xE07AC4", VA = "0xE07AC4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000CB0")]
			[Address(RVA = "0xE07ACC", Offset = "0xE07ACC", VA = "0xE07ACC")]
			private set
			{
			}
		}

		[Token(Token = "0x1700015B")]
		public bool AtLast
		{
			[Token(Token = "0x6000CB1")]
			[Address(RVA = "0xE07B00", Offset = "0xE07B00", VA = "0xE07B00")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000CB2")]
			[Address(RVA = "0xE07B08", Offset = "0xE07B08", VA = "0xE07B08")]
			private set
			{
			}
		}

		[Token(Token = "0x6000CB3")]
		[Address(RVA = "0xE07698", Offset = "0xE07698", VA = "0xE07698")]
		public GameObject Next(bool exitIfLast = false)
		{
			return null;
		}

		[Token(Token = "0x6000CB4")]
		[Address(RVA = "0xE077C8", Offset = "0xE077C8", VA = "0xE077C8")]
		public GameObject Previous(bool exitIfFirst = false)
		{
			return null;
		}

		[Token(Token = "0x6000CB5")]
		[Address(RVA = "0xE078C4", Offset = "0xE078C4", VA = "0xE078C4")]
		public void Exit()
		{
		}

		[Token(Token = "0x6000CB6")]
		[Address(RVA = "0xE072B4", Offset = "0xE072B4", VA = "0xE072B4")]
		public GameObject ChangeState(int childIndex)
		{
			return null;
		}

		[Token(Token = "0x6000CB7")]
		[Address(RVA = "0xE07BDC", Offset = "0xE07BDC", VA = "0xE07BDC")]
		public GameObject ChangeState(GameObject state)
		{
			return null;
		}

		[Token(Token = "0x6000CB8")]
		[Address(RVA = "0xE07400", Offset = "0xE07400", VA = "0xE07400")]
		public GameObject ChangeState(string state)
		{
			return null;
		}

		[Token(Token = "0x6000CB9")]
		[Address(RVA = "0xE08108", Offset = "0xE08108", VA = "0xE08108")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6000CBA")]
		[Address(RVA = "0xE08194", Offset = "0xE08194", VA = "0xE08194")]
		public void StartMachine()
		{
		}

		[Token(Token = "0x6000CBB")]
		[Address(RVA = "0xE07FC0", Offset = "0xE07FC0", VA = "0xE07FC0")]
		private void Enter(GameObject state)
		{
		}

		[Token(Token = "0x6000CBC")]
		[Address(RVA = "0xE07B3C", Offset = "0xE07B3C", VA = "0xE07B3C")]
		private void Log(string message)
		{
		}

		[Token(Token = "0x6000CBD")]
		[Address(RVA = "0xE0823C", Offset = "0xE0823C", VA = "0xE0823C")]
		public StateMachine()
		{
		}
	}
	[Token(Token = "0x20001BE")]
	public class Initialization : MonoBehaviour
	{
		[Token(Token = "0x4000C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private StateMachine _stateMachine;

		[Token(Token = "0x4000C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private DisplayObject _displayObject;

		[Token(Token = "0x6000CBE")]
		[Address(RVA = "0xB0B994", Offset = "0xB0B994", VA = "0xB0B994")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000CBF")]
		[Address(RVA = "0xB0BCBC", Offset = "0xB0BCBC", VA = "0xB0BCBC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CC0")]
		[Address(RVA = "0xB0BD4C", Offset = "0xB0BD4C", VA = "0xB0BD4C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000CC1")]
		[Address(RVA = "0xB0BAC0", Offset = "0xB0BAC0", VA = "0xB0BAC0")]
		private void InitializeSingleton()
		{
		}

		[Token(Token = "0x6000CC2")]
		[Address(RVA = "0xB0BEAC", Offset = "0xB0BEAC", VA = "0xB0BEAC")]
		public Initialization()
		{
		}
	}
	[Token(Token = "0x20001BF")]
	public class LayerMaskHelper
	{
		[Token(Token = "0x6000CC3")]
		[Address(RVA = "0xB15AE8", Offset = "0xB15AE8", VA = "0xB15AE8")]
		public static int OnlyIncluding(params int[] layers)
		{
			return default(int);
		}

		[Token(Token = "0x6000CC4")]
		[Address(RVA = "0xB15B60", Offset = "0xB15B60", VA = "0xB15B60")]
		public static int Everything()
		{
			return default(int);
		}

		[Token(Token = "0x6000CC5")]
		[Address(RVA = "0xB15B68", Offset = "0xB15B68", VA = "0xB15B68")]
		public static int Default()
		{
			return default(int);
		}

		[Token(Token = "0x6000CC6")]
		[Address(RVA = "0xB15B70", Offset = "0xB15B70", VA = "0xB15B70")]
		public static int Nothing()
		{
			return default(int);
		}

		[Token(Token = "0x6000CC7")]
		[Address(RVA = "0xB15B78", Offset = "0xB15B78", VA = "0xB15B78")]
		public static int EverythingBut(params int[] layers)
		{
			return default(int);
		}

		[Token(Token = "0x6000CC8")]
		[Address(RVA = "0xB15B90", Offset = "0xB15B90", VA = "0xB15B90")]
		public static bool ContainsLayer(LayerMask layerMask, int layer)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CC9")]
		[Address(RVA = "0xB15AEC", Offset = "0xB15AEC", VA = "0xB15AEC")]
		private static int MakeMask(params int[] layers)
		{
			return default(int);
		}

		[Token(Token = "0x6000CCA")]
		[Address(RVA = "0xB15BCC", Offset = "0xB15BCC", VA = "0xB15BCC")]
		public LayerMaskHelper()
		{
		}
	}
	[Token(Token = "0x20001C0")]
	public static class CoreMath
	{
		[Token(Token = "0x6000CCB")]
		[Address(RVA = "0xCBF1B8", Offset = "0xCBF1B8", VA = "0xCBF1B8")]
		public static float LinearInterpolate(float from, float to, float percentage)
		{
			return default(float);
		}

		[Token(Token = "0x6000CCC")]
		[Address(RVA = "0xCBF1C8", Offset = "0xCBF1C8", VA = "0xCBF1C8")]
		public static Vector2 LinearInterpolate(Vector2 from, Vector2 to, float percentage)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000CCD")]
		[Address(RVA = "0xCBF1E4", Offset = "0xCBF1E4", VA = "0xCBF1E4")]
		public static Vector3 LinearInterpolate(Vector3 from, Vector3 to, float percentage)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000CCE")]
		[Address(RVA = "0xCBF20C", Offset = "0xCBF20C", VA = "0xCBF20C")]
		public static Vector4 LinearInterpolate(Vector4 from, Vector4 to, float percentage)
		{
			return default(Vector4);
		}

		[Token(Token = "0x6000CCF")]
		[Address(RVA = "0xCBF270", Offset = "0xCBF270", VA = "0xCBF270")]
		public static Rect LinearInterpolate(Rect from, Rect to, float percentage)
		{
			return default(Rect);
		}

		[Token(Token = "0x6000CD0")]
		[Address(RVA = "0xCBF378", Offset = "0xCBF378", VA = "0xCBF378")]
		public static Color LinearInterpolate(Color from, Color to, float percentage)
		{
			return default(Color);
		}

		[Token(Token = "0x6000CD1")]
		[Address(RVA = "0xCBF3DC", Offset = "0xCBF3DC", VA = "0xCBF3DC")]
		public static float EvaluateCurve(AnimationCurve curve, float percentage)
		{
			return default(float);
		}
	}
}
namespace Photon.Pun.UtilityScripts
{
	[Token(Token = "0x20001C1")]
	public class PhotonStatsGui : MonoBehaviour
	{
		[Token(Token = "0x4000C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool statsWindowOn;

		[Token(Token = "0x4000C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool statsOn;

		[Token(Token = "0x4000C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool healthStatsVisible;

		[Token(Token = "0x4000C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		public bool trafficStatsOn;

		[Token(Token = "0x4000C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool buttonsOn;

		[Token(Token = "0x4000C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Rect statsRect;

		[Token(Token = "0x4000C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int WindowId;

		[Token(Token = "0x6000CD2")]
		[Address(RVA = "0xC270C0", Offset = "0xC270C0", VA = "0xC270C0")]
		public void Start()
		{
		}

		[Token(Token = "0x6000CD3")]
		[Address(RVA = "0xC27124", Offset = "0xC27124", VA = "0xC27124")]
		public void Update()
		{
		}

		[Token(Token = "0x6000CD4")]
		[Address(RVA = "0xC27174", Offset = "0xC27174", VA = "0xC27174")]
		public void OnGUI()
		{
		}

		[Token(Token = "0x6000CD5")]
		[Address(RVA = "0xC27394", Offset = "0xC27394", VA = "0xC27394")]
		public void TrafficStatsWindow(int windowID)
		{
		}

		[Token(Token = "0x6000CD6")]
		[Address(RVA = "0xC286E0", Offset = "0xC286E0", VA = "0xC286E0")]
		public PhotonStatsGui()
		{
		}
	}
}
namespace UnityEngine.UI.Michsky.UI.ModernUIPack
{
	[Token(Token = "0x20001C2")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8CC570", Offset = "0x8CC570")]
	public class UIGradient : BaseMeshEffect
	{
		[Token(Token = "0x20001C3")]
		public enum Type
		{
			[Token(Token = "0x4000C9B")]
			Horizontal,
			[Token(Token = "0x4000C9C")]
			Vertical,
			[Token(Token = "0x4000C9D")]
			Diamond
		}

		[Token(Token = "0x20001C4")]
		public enum Blend
		{
			[Token(Token = "0x4000C9F")]
			Override,
			[Token(Token = "0x4000CA0")]
			Add,
			[Token(Token = "0x4000CA1")]
			Multiply
		}

		[Serializable]
		[Token(Token = "0x20001C5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CC5A8", Offset = "0x8CC5A8")]
		private sealed class <>c
		{
			[Token(Token = "0x4000CA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000CA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<UIVertex, float> <>9__26_0;

			[Token(Token = "0x4000CA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<UIVertex, float> <>9__26_1;

			[Token(Token = "0x6000CEC")]
			[Address(RVA = "0x190B988", Offset = "0x190B988", VA = "0x190B988")]
			public <>c()
			{
			}

			[Token(Token = "0x6000CED")]
			[Address(RVA = "0x190B990", Offset = "0x190B990", VA = "0x190B990")]
			internal float <ModifyMesh>b__26_0(UIVertex v)
			{
				return default(float);
			}

			[Token(Token = "0x6000CEE")]
			[Address(RVA = "0x190B998", Offset = "0x190B998", VA = "0x190B998")]
			internal float <ModifyMesh>b__26_1(UIVertex v)
			{
				return default(float);
			}
		}

		[Token(Token = "0x4000C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Type _gradientType;

		[Token(Token = "0x4000C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private Blend _blendMode;

		[Token(Token = "0x4000C96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool _modifyVertices;

		[Token(Token = "0x4000C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D97C4", Offset = "0x8D97C4")]
		private float _offset;

		[Token(Token = "0x4000C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D9804", Offset = "0x8D9804")]
		private float _zoom;

		[Token(Token = "0x4000C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Gradient _effectGradient;

		[Token(Token = "0x1700015C")]
		public Blend BlendMode
		{
			[Token(Token = "0x6000CD7")]
			[Address(RVA = "0x114848C", Offset = "0x114848C", VA = "0x114848C")]
			get
			{
				return default(Blend);
			}
			[Token(Token = "0x6000CD8")]
			[Address(RVA = "0x1148494", Offset = "0x1148494", VA = "0x1148494")]
			set
			{
			}
		}

		[Token(Token = "0x1700015D")]
		public Gradient EffectGradient
		{
			[Token(Token = "0x6000CD9")]
			[Address(RVA = "0x11484C4", Offset = "0x11484C4", VA = "0x11484C4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CDA")]
			[Address(RVA = "0x11484CC", Offset = "0x11484CC", VA = "0x11484CC")]
			set
			{
			}
		}

		[Token(Token = "0x1700015E")]
		public Type GradientType
		{
			[Token(Token = "0x6000CDB")]
			[Address(RVA = "0x11484FC", Offset = "0x11484FC", VA = "0x11484FC")]
			get
			{
				return default(Type);
			}
			[Token(Token = "0x6000CDC")]
			[Address(RVA = "0x1148504", Offset = "0x1148504", VA = "0x1148504")]
			set
			{
			}
		}

		[Token(Token = "0x1700015F")]
		public bool ModifyVertices
		{
			[Token(Token = "0x6000CDD")]
			[Address(RVA = "0x1148534", Offset = "0x1148534", VA = "0x1148534")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000CDE")]
			[Address(RVA = "0x114853C", Offset = "0x114853C", VA = "0x114853C")]
			set
			{
			}
		}

		[Token(Token = "0x17000160")]
		public float Offset
		{
			[Token(Token = "0x6000CDF")]
			[Address(RVA = "0x1148570", Offset = "0x1148570", VA = "0x1148570")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000CE0")]
			[Address(RVA = "0x1148578", Offset = "0x1148578", VA = "0x1148578")]
			set
			{
			}
		}

		[Token(Token = "0x17000161")]
		public float Zoom
		{
			[Token(Token = "0x6000CE1")]
			[Address(RVA = "0x11485C8", Offset = "0x11485C8", VA = "0x11485C8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000CE2")]
			[Address(RVA = "0x11485D0", Offset = "0x11485D0", VA = "0x11485D0")]
			set
			{
			}
		}

		[Token(Token = "0x6000CE3")]
		[Address(RVA = "0x1148624", Offset = "0x1148624", VA = "0x1148624", Slot = "20")]
		public override void ModifyMesh(VertexHelper helper)
		{
		}

		[Token(Token = "0x6000CE4")]
		[Address(RVA = "0x1148E24", Offset = "0x1148E24", VA = "0x1148E24")]
		private Rect GetBounds(List<UIVertex> vertices)
		{
			return default(Rect);
		}

		[Token(Token = "0x6000CE5")]
		[Address(RVA = "0x1148FE4", Offset = "0x1148FE4", VA = "0x1148FE4")]
		private void SplitTrianglesAtGradientStops(List<UIVertex> _vertexList, Rect bounds, float zoomOffset, VertexHelper helper)
		{
		}

		[Token(Token = "0x6000CE6")]
		[Address(RVA = "0x114A40C", Offset = "0x114A40C", VA = "0x114A40C")]
		private float[] GetPositions(List<UIVertex> _vertexList, int index)
		{
			return null;
		}

		[Token(Token = "0x6000CE7")]
		[Address(RVA = "0x114A080", Offset = "0x114A080", VA = "0x114A080")]
		private List<float> FindStops(float zoomOffset, Rect bounds)
		{
			return null;
		}

		[Token(Token = "0x6000CE8")]
		[Address(RVA = "0x114A5E0", Offset = "0x114A5E0", VA = "0x114A5E0")]
		private UIVertex CreateSplitVertex(UIVertex vertex1, UIVertex vertex2, float stop)
		{
			return default(UIVertex);
		}

		[Token(Token = "0x6000CE9")]
		[Address(RVA = "0x114A028", Offset = "0x114A028", VA = "0x114A028")]
		private Color BlendColor(Color colorA, Color colorB)
		{
			return default(Color);
		}

		[Token(Token = "0x6000CEA")]
		[Address(RVA = "0x114A734", Offset = "0x114A734", VA = "0x114A734")]
		public UIGradient()
		{
		}
	}
}
namespace Michsky.UI.ModernUIPack
{
	[Token(Token = "0x20001C6")]
	public class AnimatedIconHandler : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x20001C7")]
		public enum PlayType
		{
			[Token(Token = "0x4000CAA")]
			CLICK,
			[Token(Token = "0x4000CAB")]
			ON_POINTER_ENTER
		}

		[Token(Token = "0x4000CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D9858", Offset = "0x8D9858")]
		public PlayType playType;

		[Token(Token = "0x4000CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Animator iconAnimator;

		[Token(Token = "0x4000CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Button eventButton;

		[Token(Token = "0x4000CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool isClicked;

		[Token(Token = "0x6000CEF")]
		[Address(RVA = "0xD69074", Offset = "0xD69074", VA = "0xD69074")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CF0")]
		[Address(RVA = "0xD69184", Offset = "0xD69184", VA = "0xD69184")]
		public void ClickEvent()
		{
		}

		[Token(Token = "0x6000CF1")]
		[Address(RVA = "0xD69218", Offset = "0xD69218", VA = "0xD69218", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000CF2")]
		[Address(RVA = "0xD69288", Offset = "0xD69288", VA = "0xD69288", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000CF3")]
		[Address(RVA = "0xD692F8", Offset = "0xD692F8", VA = "0xD692F8")]
		public AnimatedIconHandler()
		{
		}
	}
	[Token(Token = "0x20001C8")]
	public class ButtonManager : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler, IPointerDownHandler
	{
		[Token(Token = "0x4000CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string buttonText;

		[Token(Token = "0x4000CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent clickEvent;

		[Token(Token = "0x4000CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent hoverEvent;

		[Token(Token = "0x4000CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioClip hoverSound;

		[Token(Token = "0x4000CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AudioClip clickSound;

		[Token(Token = "0x4000CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Button buttonVar;

		[Token(Token = "0x4000CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public TextMeshProUGUI normalText;

		[Token(Token = "0x4000CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public TextMeshProUGUI highlightedText;

		[Token(Token = "0x4000CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AudioSource soundSource;

		[Token(Token = "0x4000CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject rippleParent;

		[Token(Token = "0x4000CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool useCustomContent;

		[Token(Token = "0x4000CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		public bool enableButtonSounds;

		[Token(Token = "0x4000CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
		public bool useHoverSound;

		[Token(Token = "0x4000CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6B")]
		public bool useClickSound;

		[Token(Token = "0x4000CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public bool useRipple;

		[Token(Token = "0x4000CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Sprite rippleShape;

		[Token(Token = "0x4000CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D9890", Offset = "0x8D9890")]
		public float speed;

		[Token(Token = "0x4000CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D98AC", Offset = "0x8D98AC")]
		public float maxSize;

		[Token(Token = "0x4000CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Color startColor;

		[Token(Token = "0x4000CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Color transitionColor;

		[Token(Token = "0x4000CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public bool renderOnTop;

		[Token(Token = "0x4000CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		public bool centered;

		[Token(Token = "0x4000CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA2")]
		private bool isPointerOn;

		[Token(Token = "0x6000CF4")]
		[Address(RVA = "0x1073B00", Offset = "0x1073B00", VA = "0x1073B00")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CF5")]
		[Address(RVA = "0x1073D60", Offset = "0x1073D60", VA = "0x1073D60")]
		public void UpdateUI()
		{
		}

		[Token(Token = "0x6000CF6")]
		[Address(RVA = "0x1073DB4", Offset = "0x1073DB4", VA = "0x1073DB4")]
		public void CreateRipple(Vector2 pos)
		{
		}

		[Token(Token = "0x6000CF7")]
		[Address(RVA = "0x1074038", Offset = "0x1074038", VA = "0x1074038", Slot = "6")]
		public void OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000CF8")]
		[Address(RVA = "0x1074094", Offset = "0x1074094", VA = "0x1074094", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000CF9")]
		[Address(RVA = "0x1074100", Offset = "0x1074100", VA = "0x1074100", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000CFA")]
		[Address(RVA = "0x1074108", Offset = "0x1074108", VA = "0x1074108")]
		public ButtonManager()
		{
		}

		[Token(Token = "0x6000CFB")]
		[Address(RVA = "0x10741E0", Offset = "0x10741E0", VA = "0x10741E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E08CC", Offset = "0x8E08CC")]
		private void <Start>b__23_0()
		{
		}

		[Token(Token = "0x6000CFC")]
		[Address(RVA = "0x10741FC", Offset = "0x10741FC", VA = "0x10741FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E08DC", Offset = "0x8E08DC")]
		private void <Start>b__23_1()
		{
		}
	}
	[Token(Token = "0x20001C9")]
	public class ButtonManagerBasic : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler, IPointerDownHandler
	{
		[Token(Token = "0x4000CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string buttonText;

		[Token(Token = "0x4000CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent clickEvent;

		[Token(Token = "0x4000CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent hoverEvent;

		[Token(Token = "0x4000CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioClip hoverSound;

		[Token(Token = "0x4000CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AudioClip clickSound;

		[Token(Token = "0x4000CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Button buttonVar;

		[Token(Token = "0x4000CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public TextMeshProUGUI normalText;

		[Token(Token = "0x4000CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AudioSource soundSource;

		[Token(Token = "0x4000CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GameObject rippleParent;

		[Token(Token = "0x4000CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool useCustomContent;

		[Token(Token = "0x4000CCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		public bool enableButtonSounds;

		[Token(Token = "0x4000CCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		public bool useHoverSound;

		[Token(Token = "0x4000CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
		public bool useClickSound;

		[Token(Token = "0x4000CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public bool useRipple;

		[Token(Token = "0x4000CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Sprite rippleShape;

		[Token(Token = "0x4000CD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D98C4", Offset = "0x8D98C4")]
		public float speed;

		[Token(Token = "0x4000CD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D98E0", Offset = "0x8D98E0")]
		public float maxSize;

		[Token(Token = "0x4000CD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Color startColor;

		[Token(Token = "0x4000CD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Color transitionColor;

		[Token(Token = "0x4000CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public bool renderOnTop;

		[Token(Token = "0x4000CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		public bool centered;

		[Token(Token = "0x4000CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9A")]
		private bool isPointerOn;

		[Token(Token = "0x6000CFD")]
		[Address(RVA = "0x1074220", Offset = "0x1074220", VA = "0x1074220")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CFE")]
		[Address(RVA = "0x1074494", Offset = "0x1074494", VA = "0x1074494")]
		public void UpdateUI()
		{
		}

		[Token(Token = "0x6000CFF")]
		[Address(RVA = "0x10744C0", Offset = "0x10744C0", VA = "0x10744C0")]
		public void CreateRipple(Vector2 pos)
		{
		}

		[Token(Token = "0x6000D00")]
		[Address(RVA = "0x1074744", Offset = "0x1074744", VA = "0x1074744", Slot = "6")]
		public void OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000D01")]
		[Address(RVA = "0x10747A0", Offset = "0x10747A0", VA = "0x10747A0", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000D02")]
		[Address(RVA = "0x107480C", Offset = "0x107480C", VA = "0x107480C", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000D03")]
		[Address(RVA = "0x1074814", Offset = "0x1074814", VA = "0x1074814")]
		public ButtonManagerBasic()
		{
		}

		[Token(Token = "0x6000D04")]
		[Address(RVA = "0x10748EC", Offset = "0x10748EC", VA = "0x10748EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E08EC", Offset = "0x8E08EC")]
		private void <Start>b__22_0()
		{
		}

		[Token(Token = "0x6000D05")]
		[Address(RVA = "0x1074908", Offset = "0x1074908", VA = "0x1074908")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E08FC", Offset = "0x8E08FC")]
		private void <Start>b__22_1()
		{
		}
	}
	[Token(Token = "0x20001CA")]
	public class ButtonManagerBasicIcon : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler, IPointerDownHandler
	{
		[Token(Token = "0x4000CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Sprite buttonIcon;

		[Token(Token = "0x4000CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent clickEvent;

		[Token(Token = "0x4000CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent hoverEvent;

		[Token(Token = "0x4000CDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioClip hoverSound;

		[Token(Token = "0x4000CDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AudioClip clickSound;

		[Token(Token = "0x4000CDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Button buttonVar;

		[Token(Token = "0x4000CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Image normalIcon;

		[Token(Token = "0x4000CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AudioSource soundSource;

		[Token(Token = "0x4000CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GameObject rippleParent;

		[Token(Token = "0x4000CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool useCustomContent;

		[Token(Token = "0x4000CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		public bool enableButtonSounds;

		[Token(Token = "0x4000CE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		public bool useHoverSound;

		[Token(Token = "0x4000CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
		public bool useClickSound;

		[Token(Token = "0x4000CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public bool useRipple;

		[Token(Token = "0x4000CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Sprite rippleShape;

		[Token(Token = "0x4000CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D98F8", Offset = "0x8D98F8")]
		public float speed;

		[Token(Token = "0x4000CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D9914", Offset = "0x8D9914")]
		public float maxSize;

		[Token(Token = "0x4000CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Color startColor;

		[Token(Token = "0x4000CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Color transitionColor;

		[Token(Token = "0x4000CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public bool renderOnTop;

		[Token(Token = "0x4000CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		public bool centered;

		[Token(Token = "0x4000CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9A")]
		private bool isPointerOn;

		[Token(Token = "0x6000D06")]
		[Address(RVA = "0x107492C", Offset = "0x107492C", VA = "0x107492C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D07")]
		[Address(RVA = "0x1074B8C", Offset = "0x1074B8C", VA = "0x1074B8C")]
		public void UpdateUI()
		{
		}

		[Token(Token = "0x6000D08")]
		[Address(RVA = "0x1074BB0", Offset = "0x1074BB0", VA = "0x1074BB0")]
		public void CreateRipple(Vector2 pos)
		{
		}

		[Token(Token = "0x6000D09")]
		[Address(RVA = "0x1074E34", Offset = "0x1074E34", VA = "0x1074E34", Slot = "6")]
		public void OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000D0A")]
		[Address(RVA = "0x1074E90", Offset = "0x1074E90", VA = "0x1074E90", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000D0B")]
		[Address(RVA = "0x1074EFC", Offset = "0x1074EFC", VA = "0x1074EFC", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000D0C")]
		[Address(RVA = "0x1074F04", Offset = "0x1074F04", VA = "0x1074F04")]
		public ButtonManagerBasicIcon()
		{
		}

		[Token(Token = "0x6000D0D")]
		[Address(RVA = "0x1074FAC", Offset = "0x1074FAC", VA = "0x1074FAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E090C", Offset = "0x8E090C")]
		private void <Start>b__22_0()
		{
		}

		[Token(Token = "0x6000D0E")]
		[Address(RVA = "0x1074FC8", Offset = "0x1074FC8", VA = "0x1074FC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E091C", Offset = "0x8E091C")]
		private void <Start>b__22_1()
		{
		}
	}
	[Token(Token = "0x20001CB")]
	public class ButtonManagerBasicWithIcon : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler, IPointerDownHandler
	{
		[Token(Token = "0x4000CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Sprite buttonIcon;

		[Token(Token = "0x4000CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string buttonText;

		[Token(Token = "0x4000CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent clickEvent;

		[Token(Token = "0x4000CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEvent hoverEvent;

		[Token(Token = "0x4000CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AudioClip hoverSound;

		[Token(Token = "0x4000CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AudioClip clickSound;

		[Token(Token = "0x4000CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Button buttonVar;

		[Token(Token = "0x4000CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Image normalImage;

		[Token(Token = "0x4000CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public TextMeshProUGUI normalText;

		[Token(Token = "0x4000CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public AudioSource soundSource;

		[Token(Token = "0x4000CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public GameObject rippleParent;

		[Token(Token = "0x4000CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool useCustomContent;

		[Token(Token = "0x4000CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		public bool enableButtonSounds;

		[Token(Token = "0x4000CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
		public bool useHoverSound;

		[Token(Token = "0x4000CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x73")]
		public bool useClickSound;

		[Token(Token = "0x4000CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public bool useRipple;

		[Token(Token = "0x4000CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Sprite rippleShape;

		[Token(Token = "0x4000D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D992C", Offset = "0x8D992C")]
		public float speed;

		[Token(Token = "0x4000D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D9948", Offset = "0x8D9948")]
		public float maxSize;

		[Token(Token = "0x4000D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Color startColor;

		[Token(Token = "0x4000D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Color transitionColor;

		[Token(Token = "0x4000D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public bool renderOnTop;

		[Token(Token = "0x4000D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
		public bool centered;

		[Token(Token = "0x4000D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAA")]
		private bool isPointerOn;

		[Token(Token = "0x6000D0F")]
		[Address(RVA = "0x1074FEC", Offset = "0x1074FEC", VA = "0x1074FEC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D10")]
		[Address(RVA = "0x107524C", Offset = "0x107524C", VA = "0x107524C")]
		public void UpdateUI()
		{
		}

		[Token(Token = "0x6000D11")]
		[Address(RVA = "0x1075298", Offset = "0x1075298", VA = "0x1075298")]
		public void CreateRipple(Vector2 pos)
		{
		}

		[Token(Token = "0x6000D12")]
		[Address(RVA = "0x107551C", Offset = "0x107551C", VA = "0x107551C", Slot = "6")]
		public void OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000D13")]
		[Address(RVA = "0x1075578", Offset = "0x1075578", VA = "0x1075578", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000D14")]
		[Address(RVA = "0x10755E4", Offset = "0x10755E4", VA = "0x10755E4", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000D15")]
		[Address(RVA = "0x10755EC", Offset = "0x10755EC", VA = "0x10755EC")]
		public ButtonManagerBasicWithIcon()
		{
		}

		[Token(Token = "0x6000D16")]
		[Address(RVA = "0x10756C4", Offset = "0x10756C4", VA = "0x10756C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E092C", Offset = "0x8E092C")]
		private void <Start>b__24_0()
		{
		}

		[Token(Token = "0x6000D17")]
		[Address(RVA = "0x10756E0", Offset = "0x10756E0", VA = "0x10756E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E093C", Offset = "0x8E093C")]
		private void <Start>b__24_1()
		{
		}
	}
	[Token(Token = "0x20001CC")]
	public class ButtonManagerIcon : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler, IPointerDownHandler
	{
		[Token(Token = "0x4000D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Sprite buttonIcon;

		[Token(Token = "0x4000D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent clickEvent;

		[Token(Token = "0x4000D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent hoverEvent;

		[Token(Token = "0x4000D0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioClip hoverSound;

		[Token(Token = "0x4000D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AudioClip clickSound;

		[Token(Token = "0x4000D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Button buttonVar;

		[Token(Token = "0x4000D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Image normalIcon;

		[Token(Token = "0x4000D0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Image highlightedIcon;

		[Token(Token = "0x4000D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AudioSource soundSource;

		[Token(Token = "0x4000D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject rippleParent;

		[Token(Token = "0x4000D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool useCustomContent;

		[Token(Token = "0x4000D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		public bool enableButtonSounds;

		[Token(Token = "0x4000D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
		public bool useHoverSound;

		[Token(Token = "0x4000D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6B")]
		public bool useClickSound;

		[Token(Token = "0x4000D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public bool useRipple;

		[Token(Token = "0x4000D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Sprite rippleShape;

		[Token(Token = "0x4000D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D9960", Offset = "0x8D9960")]
		public float speed;

		[Token(Token = "0x4000D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D997C", Offset = "0x8D997C")]
		public float maxSize;

		[Token(Token = "0x4000D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Color startColor;

		[Token(Token = "0x4000D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Color transitionColor;

		[Token(Token = "0x4000D1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public bool renderOnTop;

		[Token(Token = "0x4000D1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		public bool centered;

		[Token(Token = "0x4000D1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA2")]
		private bool isPointerOn;

		[Token(Token = "0x6000D18")]
		[Address(RVA = "0x1075704", Offset = "0x1075704", VA = "0x1075704")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D19")]
		[Address(RVA = "0x1075964", Offset = "0x1075964", VA = "0x1075964")]
		public void UpdateUI()
		{
		}

		[Token(Token = "0x6000D1A")]
		[Address(RVA = "0x10759A8", Offset = "0x10759A8", VA = "0x10759A8")]
		public void CreateRipple(Vector2 pos)
		{
		}

		[Token(Token = "0x6000D1B")]
		[Address(RVA = "0x1075C2C", Offset = "0x1075C2C", VA = "0x1075C2C", Slot = "6")]
		public void OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000D1C")]
		[Address(RVA = "0x1075C88", Offset = "0x1075C88", VA = "0x1075C88", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000D1D")]
		[Address(RVA = "0x1075CF4", Offset = "0x1075CF4", VA = "0x1075CF4", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000D1E")]
		[Address(RVA = "0x1075CFC", Offset = "0x1075CFC", VA = "0x1075CFC")]
		public ButtonManagerIcon()
		{
		}

		[Token(Token = "0x6000D1F")]
		[Address(RVA = "0x1075DA4", Offset = "0x1075DA4", VA = "0x1075DA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E094C", Offset = "0x8E094C")]
		private void <Start>b__23_0()
		{
		}

		[Token(Token = "0x6000D20")]
		[Address(RVA = "0x1075DC0", Offset = "0x1075DC0", VA = "0x1075DC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E095C", Offset = "0x8E095C")]
		private void <Start>b__23_1()
		{
		}
	}
	[Token(Token = "0x20001CD")]
	public class ButtonManagerWithIcon : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler, IPointerDownHandler
	{
		[Token(Token = "0x4000D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Sprite buttonIcon;

		[Token(Token = "0x4000D1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string buttonText;

		[Token(Token = "0x4000D20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent clickEvent;

		[Token(Token = "0x4000D21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEvent hoverEvent;

		[Token(Token = "0x4000D22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AudioClip hoverSound;

		[Token(Token = "0x4000D23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AudioClip clickSound;

		[Token(Token = "0x4000D24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Button buttonVar;

		[Token(Token = "0x4000D25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Image normalIcon;

		[Token(Token = "0x4000D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Image highlightedIcon;

		[Token(Token = "0x4000D27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public TextMeshProUGUI normalText;

		[Token(Token = "0x4000D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public TextMeshProUGUI highlightedText;

		[Token(Token = "0x4000D29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public AudioSource soundSource;

		[Token(Token = "0x4000D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public GameObject rippleParent;

		[Token(Token = "0x4000D2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public bool useCustomContent;

		[Token(Token = "0x4000D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
		public bool enableButtonSounds;

		[Token(Token = "0x4000D2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
		public bool useHoverSound;

		[Token(Token = "0x4000D2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x83")]
		public bool useClickSound;

		[Token(Token = "0x4000D2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public bool useRipple;

		[Token(Token = "0x4000D30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Sprite rippleShape;

		[Token(Token = "0x4000D31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D9994", Offset = "0x8D9994")]
		public float speed;

		[Token(Token = "0x4000D32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D99B0", Offset = "0x8D99B0")]
		public float maxSize;

		[Token(Token = "0x4000D33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Color startColor;

		[Token(Token = "0x4000D34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Color transitionColor;

		[Token(Token = "0x4000D35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public bool renderOnTop;

		[Token(Token = "0x4000D36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
		public bool centered;

		[Token(Token = "0x4000D37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBA")]
		private bool isPointerOn;

		[Token(Token = "0x6000D21")]
		[Address(RVA = "0x1075DE4", Offset = "0x1075DE4", VA = "0x1075DE4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D22")]
		[Address(RVA = "0x1076044", Offset = "0x1076044", VA = "0x1076044")]
		public void UpdateUI()
		{
		}

		[Token(Token = "0x6000D23")]
		[Address(RVA = "0x10760C0", Offset = "0x10760C0", VA = "0x10760C0")]
		public void CreateRipple(Vector2 pos)
		{
		}

		[Token(Token = "0x6000D24")]
		[Address(RVA = "0x1076344", Offset = "0x1076344", VA = "0x1076344", Slot = "6")]
		public void OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000D25")]
		[Address(RVA = "0x10763A0", Offset = "0x10763A0", VA = "0x10763A0", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000D26")]
		[Address(RVA = "0x107640C", Offset = "0x107640C", VA = "0x107640C", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000D27")]
		[Address(RVA = "0x1076414", Offset = "0x1076414", VA = "0x1076414")]
		public ButtonManagerWithIcon()
		{
		}

		[Token(Token = "0x6000D28")]
		[Address(RVA = "0x10764EC", Offset = "0x10764EC", VA = "0x10764EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E096C", Offset = "0x8E096C")]
		private void <Start>b__26_0()
		{
		}

		[Token(Token = "0x6000D29")]
		[Address(RVA = "0x1076508", Offset = "0x1076508", VA = "0x1076508")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E097C", Offset = "0x8E097C")]
		private void <Start>b__26_1()
		{
		}
	}
	[Token(Token = "0x20001CE")]
	public class ContextMenuContent : MonoBehaviour, IPointerClickHandler, IEventSystemHandler
	{
		[Serializable]
		[Token(Token = "0x20001CF")]
		public class ContextItem
		{
			[Token(Token = "0x4000D41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string itemText;

			[Token(Token = "0x4000D42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Sprite itemIcon;

			[Token(Token = "0x4000D43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ContextItemType contextItemType;

			[Token(Token = "0x4000D44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public UnityEvent onClickEvents;

			[Token(Token = "0x6000D2F")]
			[Address(RVA = "0xC167C4", Offset = "0xC167C4", VA = "0xC167C4")]
			public ContextItem()
			{
			}
		}

		[Token(Token = "0x20001D0")]
		public enum ContextItemType
		{
			[Token(Token = "0x4000D46")]
			BUTTON
		}

		[Token(Token = "0x20001D1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CC5B8", Offset = "0x8CC5B8")]
		private sealed class <ExecuteAfterTime>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000D49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float time;

			[Token(Token = "0x4000D4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ContextMenuContent <>4__this;

			[Token(Token = "0x17000162")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D33")]
				[Address(RVA = "0xC16774", Offset = "0xC16774", VA = "0xC16774", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000163")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D35")]
				[Address(RVA = "0xC167BC", Offset = "0xC167BC", VA = "0xC167BC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D30")]
			[Address(RVA = "0xC16614", Offset = "0xC16614", VA = "0xC16614")]
			[DebuggerHidden]
			public <ExecuteAfterTime>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6000D31")]
			[Address(RVA = "0xC16640", Offset = "0xC16640", VA = "0xC16640", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D32")]
			[Address(RVA = "0xC16644", Offset = "0xC16644", VA = "0xC16644", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D34")]
			[Address(RVA = "0xC1677C", Offset = "0xC1677C", VA = "0xC1677C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000D38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D99C8", Offset = "0x8D99C8")]
		public ContextMenuManager contextManager;

		[Token(Token = "0x4000D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform itemParent;

		[Token(Token = "0x4000D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D9A00", Offset = "0x8D9A00")]
		public List<ContextItem> contexItems;

		[Token(Token = "0x4000D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Animator contextAnimator;

		[Token(Token = "0x4000D3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject selectedItem;

		[Token(Token = "0x4000D3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Image setItemImage;

		[Token(Token = "0x4000D3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private TextMeshProUGUI setItemText;

		[Token(Token = "0x4000D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Sprite imageHelper;

		[Token(Token = "0x4000D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private string textHelper;

		[Token(Token = "0x6000D2A")]
		[Address(RVA = "0xCBDF28", Offset = "0xCBDF28", VA = "0xCBDF28")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D2B")]
		[Address(RVA = "0xCBE3A0", Offset = "0xCBE3A0", VA = "0xCBE3A0", Slot = "4")]
		public void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000D2C")]
		[Address(RVA = "0xCBEA7C", Offset = "0xCBEA7C", VA = "0xCBEA7C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E098C", Offset = "0x8E098C")]
		private IEnumerator ExecuteAfterTime(float time)
		{
			return null;
		}

		[Token(Token = "0x6000D2D")]
		[Address(RVA = "0xCBEC94", Offset = "0xCBEC94", VA = "0xCBEC94")]
		public void CloseOnClick()
		{
		}

		[Token(Token = "0x6000D2E")]
		[Address(RVA = "0xCBECFC", Offset = "0xCBECFC", VA = "0xCBECFC")]
		public ContextMenuContent()
		{
		}
	}
	[Token(Token = "0x20001D2")]
	public class ContextMenuManager : MonoBehaviour
	{
		[Token(Token = "0x4000D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public Canvas mainCanvas;

		[Token(Token = "0x4000D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject contextButton;

		[Token(Token = "0x4000D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject contextContent;

		[Token(Token = "0x4000D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Animator contextAnimator;

		[Token(Token = "0x4000D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public bool isContextMenuOn;

		[Token(Token = "0x4000D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D9A58", Offset = "0x8D9A58")]
		public int vBorderTop;

		[Token(Token = "0x4000D51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D9A78", Offset = "0x8D9A78")]
		public int vBorderBottom;

		[Token(Token = "0x4000D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D9A98", Offset = "0x8D9A98")]
		public int hBorderLeft;

		[Token(Token = "0x4000D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D9AB8", Offset = "0x8D9AB8")]
		public int hBorderRight;

		[Token(Token = "0x4000D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector2 uiPos;

		[Token(Token = "0x4000D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 cursorPos;

		[Token(Token = "0x4000D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 contentPos;

		[Token(Token = "0x4000D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 contextVelocity;

		[Token(Token = "0x4000D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private RectTransform contextRect;

		[Token(Token = "0x6000D36")]
		[Address(RVA = "0xCBED74", Offset = "0xCBED74", VA = "0xCBED74")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D37")]
		[Address(RVA = "0xCBEEEC", Offset = "0xCBEEEC", VA = "0xCBEEEC")]
		public void CheckForBounds()
		{
		}

		[Token(Token = "0x6000D38")]
		[Address(RVA = "0xCBEAF8", Offset = "0xCBEAF8", VA = "0xCBEAF8")]
		public void SetContextMenuPosition()
		{
		}

		[Token(Token = "0x6000D39")]
		[Address(RVA = "0xCBF110", Offset = "0xCBF110", VA = "0xCBF110")]
		public void CloseOnClick()
		{
		}

		[Token(Token = "0x6000D3A")]
		[Address(RVA = "0xCBF170", Offset = "0xCBF170", VA = "0xCBF170")]
		public ContextMenuManager()
		{
		}
	}
	[Token(Token = "0x20001D3")]
	public class DemoListShadow : MonoBehaviour
	{
		[Token(Token = "0x4000D59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Scrollbar listScrollbar;

		[Token(Token = "0x4000D5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool isTop;

		[Token(Token = "0x4000D5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool enableAnim;

		[Token(Token = "0x4000D5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Animator shadowAnimator;

		[Token(Token = "0x6000D3B")]
		[Address(RVA = "0xCC2948", Offset = "0xCC2948", VA = "0xCC2948")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D3C")]
		[Address(RVA = "0xCC2A08", Offset = "0xCC2A08", VA = "0xCC2A08")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D3D")]
		[Address(RVA = "0xCC2C40", Offset = "0xCC2C40", VA = "0xCC2C40")]
		public void ScrollUp()
		{
		}

		[Token(Token = "0x6000D3E")]
		[Address(RVA = "0xCC2C4C", Offset = "0xCC2C4C", VA = "0xCC2C4C")]
		public void ScrollDown()
		{
		}

		[Token(Token = "0x6000D3F")]
		[Address(RVA = "0xCC2C58", Offset = "0xCC2C58", VA = "0xCC2C58")]
		public DemoListShadow()
		{
		}
	}
	[Token(Token = "0x20001D4")]
	public class LaunchURL : MonoBehaviour
	{
		[Token(Token = "0x4000D5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string URL;

		[Token(Token = "0x6000D40")]
		[Address(RVA = "0xB15574", Offset = "0xB15574", VA = "0xB15574")]
		public void urlLinkOrWeb()
		{
		}

		[Token(Token = "0x6000D41")]
		[Address(RVA = "0xB15580", Offset = "0xB15580", VA = "0xB15580")]
		public LaunchURL()
		{
		}
	}
	[Token(Token = "0x20001D5")]
	public class CustomDropdown : MonoBehaviour, IPointerExitHandler, IEventSystemHandler, IPointerEnterHandler, IPointerClickHandler
	{
		[Serializable]
		[Token(Token = "0x20001D6")]
		public class DropdownEvent : UnityEvent<int>
		{
			[Token(Token = "0x6000D4F")]
			[Address(RVA = "0xC16A54", Offset = "0xC16A54", VA = "0xC16A54")]
			public DropdownEvent()
			{
			}
		}

		[Token(Token = "0x20001D7")]
		public enum AnimationType
		{
			[Token(Token = "0x4000D83")]
			FADING,
			[Token(Token = "0x4000D84")]
			SLIDING,
			[Token(Token = "0x4000D85")]
			STYLISH
		}

		[Serializable]
		[Token(Token = "0x20001D8")]
		public class Item
		{
			[Token(Token = "0x4000D86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string itemName;

			[Token(Token = "0x4000D87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Sprite itemIcon;

			[Token(Token = "0x4000D88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UnityEvent OnItemSelection;

			[Token(Token = "0x6000D50")]
			[Address(RVA = "0xC16AA0", Offset = "0xC16AA0", VA = "0xC16AA0")]
			public Item()
			{
			}
		}

		[Token(Token = "0x20001D9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CC5C8", Offset = "0x8CC5C8")]
		private sealed class <>c__DisplayClass40_0
		{
			[Token(Token = "0x4000D89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject go;

			[Token(Token = "0x4000D8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public CustomDropdown <>4__this;

			[Token(Token = "0x6000D51")]
			[Address(RVA = "0xC16910", Offset = "0xC16910", VA = "0xC16910")]
			public <>c__DisplayClass40_0()
			{
			}

			[Token(Token = "0x6000D52")]
			[Address(RVA = "0xC16918", Offset = "0xC16918", VA = "0xC16918")]
			internal void <SetupDropdown>b__0()
			{
			}
		}

		[Token(Token = "0x4000D5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Animator dropdownAnimator;

		[Token(Token = "0x4000D5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject triggerObject;

		[Token(Token = "0x4000D60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextMeshProUGUI selectedText;

		[Token(Token = "0x4000D61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Image selectedImage;

		[Token(Token = "0x4000D62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform itemParent;

		[Token(Token = "0x4000D63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject itemObject;

		[Token(Token = "0x4000D64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject scrollbar;

		[Token(Token = "0x4000D65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public VerticalLayoutGroup itemList;

		[Token(Token = "0x4000D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public Transform currentListParent;

		[Token(Token = "0x4000D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform listParent;

		[Token(Token = "0x4000D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public AudioSource soundSource;

		[Token(Token = "0x4000D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool enableIcon;

		[Token(Token = "0x4000D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		public bool enableTrigger;

		[Token(Token = "0x4000D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
		public bool enableScrollbar;

		[Token(Token = "0x4000D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x73")]
		public bool setHighPriorty;

		[Token(Token = "0x4000D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public bool outOnPointerExit;

		[Token(Token = "0x4000D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
		public bool isListItem;

		[Token(Token = "0x4000D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x76")]
		public bool invokeAtStart;

		[Token(Token = "0x4000D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public AnimationType animationType;

		[Token(Token = "0x4000D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public int selectedItemIndex;

		[Token(Token = "0x4000D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public bool enableDropdownSounds;

		[Token(Token = "0x4000D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
		public bool useHoverSound;

		[Token(Token = "0x4000D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
		public bool useClickSound;

		[Token(Token = "0x4000D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x83")]
		public bool saveSelected;

		[Token(Token = "0x4000D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public string dropdownTag;

		[Token(Token = "0x4000D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		public List<Item> dropdownItems;

		[Token(Token = "0x4000D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8D9AF8", Offset = "0x8D9AF8")]
		public DropdownEvent dropdownEvent;

		[Token(Token = "0x4000D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public AudioClip hoverSound;

		[Token(Token = "0x4000D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public AudioClip clickSound;

		[Token(Token = "0x4000D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[HideInInspector]
		public bool isOn;

		[Token(Token = "0x4000D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[HideInInspector]
		public int index;

		[Token(Token = "0x4000D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[HideInInspector]
		public int siblingIndex;

		[Token(Token = "0x4000D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[HideInInspector]
		public TextMeshProUGUI[] setItemText;

		[Token(Token = "0x4000D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[HideInInspector]
		public Image setItemImage;

		[Token(Token = "0x4000D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Sprite imageHelper;

		[Token(Token = "0x4000D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private string textHelper;

		[Token(Token = "0x6000D42")]
		[Address(RVA = "0xCBF858", Offset = "0xCBF858", VA = "0xCBF858")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D43")]
		[Address(RVA = "0xCBFB20", Offset = "0xCBFB20", VA = "0xCBFB20")]
		public void SetupDropdown()
		{
		}

		[Token(Token = "0x6000D44")]
		[Address(RVA = "0xCC0260", Offset = "0xCC0260", VA = "0xCC0260")]
		public void ChangeDropdownInfo(int itemIndex)
		{
		}

		[Token(Token = "0x6000D45")]
		[Address(RVA = "0xCC03E0", Offset = "0xCC03E0", VA = "0xCC03E0")]
		public void Animate()
		{
		}

		[Token(Token = "0x6000D46")]
		[Address(RVA = "0xCC0648", Offset = "0xCC0648", VA = "0xCC0648", Slot = "4")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000D47")]
		[Address(RVA = "0xCC06C0", Offset = "0xCC06C0", VA = "0xCC06C0")]
		public void UpdateValues()
		{
		}

		[Token(Token = "0x6000D48")]
		[Address(RVA = "0xCC07D8", Offset = "0xCC07D8", VA = "0xCC07D8", Slot = "6")]
		public void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000D49")]
		[Address(RVA = "0xCC0810", Offset = "0xCC0810", VA = "0xCC0810", Slot = "5")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000D4A")]
		[Address(RVA = "0xCC0848", Offset = "0xCC0848", VA = "0xCC0848")]
		public void CreateNewItem(string title, Sprite icon)
		{
		}

		[Token(Token = "0x6000D4B")]
		[Address(RVA = "0xCC08E8", Offset = "0xCC08E8", VA = "0xCC08E8")]
		public void CreateNewItemFast(string title, Sprite icon)
		{
		}

		[Token(Token = "0x6000D4C")]
		[Address(RVA = "0xCC0980", Offset = "0xCC0980", VA = "0xCC0980")]
		public void AddNewItem()
		{
		}

		[Token(Token = "0x6000D4D")]
		[Address(RVA = "0xCC0A00", Offset = "0xCC0A00", VA = "0xCC0A00")]
		public void CloseDropdown()
		{
		}

		[Token(Token = "0x6000D4E")]
		[Address(RVA = "0xCC0ADC", Offset = "0xCC0ADC", VA = "0xCC0ADC")]
		public CustomDropdown()
		{
		}
	}
	[Token(Token = "0x20001DA")]
	public class DropdownMultiSelect : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20001DB")]
		public class ToggleEvent : UnityEvent<bool>
		{
			[Token(Token = "0x6000D5E")]
			[Address(RVA = "0xC17220", Offset = "0xC17220", VA = "0xC17220")]
			public ToggleEvent()
			{
			}
		}

		[Token(Token = "0x20001DC")]
		public enum AnimationType
		{
			[Token(Token = "0x4000DA6")]
			FADING,
			[Token(Token = "0x4000DA7")]
			SLIDING,
			[Token(Token = "0x4000DA8")]
			STYLISH
		}

		[Serializable]
		[Token(Token = "0x20001DD")]
		public class Item
		{
			[Token(Token = "0x4000DA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string itemName;

			[Token(Token = "0x4000DAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool isOn;

			[Token(Token = "0x4000DAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			public ToggleEvent toggleEvents;

			[Token(Token = "0x6000D5F")]
			[Address(RVA = "0xC171CC", Offset = "0xC171CC", VA = "0xC171CC")]
			public Item()
			{
			}
		}

		[Token(Token = "0x4000D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject triggerObject;

		[Token(Token = "0x4000D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform itemParent;

		[Token(Token = "0x4000D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject itemObject;

		[Token(Token = "0x4000D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject scrollbar;

		[Token(Token = "0x4000D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private VerticalLayoutGroup itemList;

		[Token(Token = "0x4000D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform currentListParent;

		[Token(Token = "0x4000D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform listParent;

		[Token(Token = "0x4000D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Animator dropdownAnimator;

		[Token(Token = "0x4000D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public TextMeshProUGUI setItemText;

		[Token(Token = "0x4000D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool enableIcon;

		[Token(Token = "0x4000D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		public bool enableTrigger;

		[Token(Token = "0x4000D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		public bool enableScrollbar;

		[Token(Token = "0x4000D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
		public bool setHighPriorty;

		[Token(Token = "0x4000D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public bool outOnPointerExit;

		[Token(Token = "0x4000D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
		public bool isListItem;

		[Token(Token = "0x4000D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public AnimationType animationType;

		[Token(Token = "0x4000D9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public bool saveSelected;

		[Token(Token = "0x4000D9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
		public bool invokeAtStart;

		[Token(Token = "0x4000D9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public string toggleTag;

		[Token(Token = "0x4000D9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		public List<Item> dropdownItems;

		[Token(Token = "0x4000D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private string textHelper;

		[Token(Token = "0x4000DA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private string newItemTitle;

		[Token(Token = "0x4000DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Sprite newItemIcon;

		[Token(Token = "0x4000DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool isOn;

		[Token(Token = "0x4000DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int iHelper;

		[Token(Token = "0x4000DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public int siblingIndex;

		[Token(Token = "0x6000D53")]
		[Address(RVA = "0xCC417C", Offset = "0xCC417C", VA = "0xCC417C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D54")]
		[Address(RVA = "0xCC43CC", Offset = "0xCC43CC", VA = "0xCC43CC")]
		public void SetupDropdown()
		{
		}

		[Token(Token = "0x6000D55")]
		[Address(RVA = "0xCC4B68", Offset = "0xCC4B68", VA = "0xCC4B68")]
		public void UpdateToggle(bool isOn)
		{
		}

		[Token(Token = "0x6000D56")]
		[Address(RVA = "0xCC4B6C", Offset = "0xCC4B6C", VA = "0xCC4B6C")]
		public void SaveToggle(bool isOn)
		{
		}

		[Token(Token = "0x6000D57")]
		[Address(RVA = "0xCC4BF4", Offset = "0xCC4BF4", VA = "0xCC4BF4")]
		public void Animate()
		{
		}

		[Token(Token = "0x6000D58")]
		[Address(RVA = "0xCC4E5C", Offset = "0xCC4E5C", VA = "0xCC4E5C")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000D59")]
		[Address(RVA = "0xCC4ED4", Offset = "0xCC4ED4", VA = "0xCC4ED4")]
		public void UpdateValues()
		{
		}

		[Token(Token = "0x6000D5A")]
		[Address(RVA = "0xCC4F44", Offset = "0xCC4F44", VA = "0xCC4F44")]
		public void CreateNewItem()
		{
		}

		[Token(Token = "0x6000D5B")]
		[Address(RVA = "0xCC4FD8", Offset = "0xCC4FD8", VA = "0xCC4FD8")]
		public void SetItemTitle(string title)
		{
		}

		[Token(Token = "0x6000D5C")]
		[Address(RVA = "0xCC4FE0", Offset = "0xCC4FE0", VA = "0xCC4FE0")]
		public void AddNewItem()
		{
		}

		[Token(Token = "0x6000D5D")]
		[Address(RVA = "0xCC5060", Offset = "0xCC5060", VA = "0xCC5060")]
		public DropdownMultiSelect()
		{
		}
	}
	[Token(Token = "0x20001DE")]
	public class UIElementInFront : MonoBehaviour
	{
		[Token(Token = "0x6000D60")]
		[Address(RVA = "0x1148460", Offset = "0x1148460", VA = "0x1148460")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D61")]
		[Address(RVA = "0x1148484", Offset = "0x1148484", VA = "0x1148484")]
		public UIElementInFront()
		{
		}
	}
	[Token(Token = "0x20001DF")]
	public class HorizontalSelector : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20001E0")]
		public class SelectorEvent : UnityEvent<int>
		{
			[Token(Token = "0x6000D6A")]
			[Address(RVA = "0x1B37E10", Offset = "0x1B37E10", VA = "0x1B37E10")]
			public SelectorEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20001E1")]
		public class Item
		{
			[Token(Token = "0x4000DBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string itemTitle;

			[Token(Token = "0x4000DBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public UnityEvent onValueChanged;

			[Token(Token = "0x6000D6B")]
			[Address(RVA = "0x1B37D90", Offset = "0x1B37D90", VA = "0x1B37D90")]
			public Item()
			{
			}
		}

		[Token(Token = "0x4000DAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextMeshProUGUI label;

		[Token(Token = "0x4000DAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshProUGUI labelHelper;

		[Token(Token = "0x4000DAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform indicatorParent;

		[Token(Token = "0x4000DAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject indicatorObject;

		[Token(Token = "0x4000DB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Animator selectorAnimator;

		[Token(Token = "0x4000DB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string newItemTitle;

		[Token(Token = "0x4000DB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool saveValue;

		[Token(Token = "0x4000DB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string selectorTag;

		[Token(Token = "0x4000DB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool enableIndicators;

		[Token(Token = "0x4000DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		public bool invokeAtStart;

		[Token(Token = "0x4000DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		public bool invertAnimation;

		[Token(Token = "0x4000DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
		public bool loopSelection;

		[Token(Token = "0x4000DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int defaultIndex;

		[Token(Token = "0x4000DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public int index;

		[Token(Token = "0x4000DBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public List<Item> itemList;

		[Token(Token = "0x4000DBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8D9B8C", Offset = "0x8D9B8C")]
		public SelectorEvent selectorEvent;

		[Token(Token = "0x6000D62")]
		[Address(RVA = "0x156A408", Offset = "0x156A408", VA = "0x156A408")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D63")]
		[Address(RVA = "0x156A768", Offset = "0x156A768", VA = "0x156A768")]
		public void SetupSelector()
		{
		}

		[Token(Token = "0x6000D64")]
		[Address(RVA = "0x156AD98", Offset = "0x156AD98", VA = "0x156AD98")]
		public void PreviousClick()
		{
		}

		[Token(Token = "0x6000D65")]
		[Address(RVA = "0x156B30C", Offset = "0x156B30C", VA = "0x156B30C")]
		public void ForwardClick()
		{
		}

		[Token(Token = "0x6000D66")]
		[Address(RVA = "0x156B87C", Offset = "0x156B87C", VA = "0x156B87C")]
		public void CreateNewItem(string title)
		{
		}

		[Token(Token = "0x6000D67")]
		[Address(RVA = "0x156B914", Offset = "0x156B914", VA = "0x156B914")]
		public void AddNewItem()
		{
		}

		[Token(Token = "0x6000D68")]
		[Address(RVA = "0x156B994", Offset = "0x156B994", VA = "0x156B994")]
		public void UpdateUI()
		{
		}

		[Token(Token = "0x6000D69")]
		[Address(RVA = "0x156BEC8", Offset = "0x156BEC8", VA = "0x156BEC8")]
		public HorizontalSelector()
		{
		}
	}
	[Token(Token = "0x20001E2")]
	public class CustomInputField : MonoBehaviour, IPointerClickHandler, IEventSystemHandler
	{
		[Token(Token = "0x4000DBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D9BA0", Offset = "0x8D9BA0")]
		public GameObject fieldTrigger;

		[Token(Token = "0x4000DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public TMP_InputField inputText;

		[Token(Token = "0x4000DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public Animator inputFieldAnimator;

		[Token(Token = "0x4000DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public bool isEmpty;

		[Token(Token = "0x4000DC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[HideInInspector]
		public bool isClicked;

		[Token(Token = "0x4000DC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public string inAnim;

		[Token(Token = "0x4000DC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public string outAnim;

		[Token(Token = "0x6000D6C")]
		[Address(RVA = "0xCC0C6C", Offset = "0xCC0C6C", VA = "0xCC0C6C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D6D")]
		[Address(RVA = "0xCC0D44", Offset = "0xCC0D44", VA = "0xCC0D44")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D6E")]
		[Address(RVA = "0xCC0DAC", Offset = "0xCC0DAC", VA = "0xCC0DAC")]
		public void Animate()
		{
		}

		[Token(Token = "0x6000D6F")]
		[Address(RVA = "0xCC0DF8", Offset = "0xCC0DF8", VA = "0xCC0DF8")]
		public void FieldTrigger()
		{
		}

		[Token(Token = "0x6000D70")]
		[Address(RVA = "0xCC0E4C", Offset = "0xCC0E4C", VA = "0xCC0E4C", Slot = "4")]
		public void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000D71")]
		[Address(RVA = "0xCC0E50", Offset = "0xCC0E50", VA = "0xCC0E50")]
		public CustomInputField()
		{
		}
	}
	[Token(Token = "0x20001E3")]
	public class ModalWindowManager : MonoBehaviour
	{
		[Token(Token = "0x4000DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Image windowIcon;

		[Token(Token = "0x4000DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshProUGUI windowTitle;

		[Token(Token = "0x4000DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextMeshProUGUI windowDescription;

		[Token(Token = "0x4000DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Button confirmButton;

		[Token(Token = "0x4000DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Button cancelButton;

		[Token(Token = "0x4000DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Animator mwAnimator;

		[Token(Token = "0x4000DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Sprite icon;

		[Token(Token = "0x4000DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string titleText;

		[Token(Token = "0x4000DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x8D9C38", Offset = "0x8D9C38")]
		public string descriptionText;

		[Token(Token = "0x4000DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public UnityEvent onConfirm;

		[Token(Token = "0x4000DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public UnityEvent onCancel;

		[Token(Token = "0x4000DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool sharpAnimations;

		[Token(Token = "0x4000DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		public bool useCustomValues;

		[Token(Token = "0x4000DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
		public bool isOn;

		[Token(Token = "0x6000D72")]
		[Address(RVA = "0xC1BE60", Offset = "0xC1BE60", VA = "0xC1BE60")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D73")]
		[Address(RVA = "0xC1C050", Offset = "0xC1C050", VA = "0xC1C050")]
		public void UpdateUI()
		{
		}

		[Token(Token = "0x6000D74")]
		[Address(RVA = "0xC1C190", Offset = "0xC1C190", VA = "0xC1C190")]
		public void OpenWindow()
		{
		}

		[Token(Token = "0x6000D75")]
		[Address(RVA = "0xC1C218", Offset = "0xC1C218", VA = "0xC1C218")]
		public void CloseWindow()
		{
		}

		[Token(Token = "0x6000D76")]
		[Address(RVA = "0xC1C29C", Offset = "0xC1C29C", VA = "0xC1C29C")]
		public void AnimateWindow()
		{
		}

		[Token(Token = "0x6000D77")]
		[Address(RVA = "0xC1C364", Offset = "0xC1C364", VA = "0xC1C364")]
		public ModalWindowManager()
		{
		}
	}
	[Token(Token = "0x20001E4")]
	public class NotificationManager : MonoBehaviour
	{
		[Token(Token = "0x20001E5")]
		public enum NotificationStyle
		{
			[Token(Token = "0x4000DE0")]
			FADING,
			[Token(Token = "0x4000DE1")]
			POPUP,
			[Token(Token = "0x4000DE2")]
			SLIDING
		}

		[Token(Token = "0x20001E6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CC5D8", Offset = "0x8CC5D8")]
		private sealed class <StartTimer>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000DE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000DE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000DE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NotificationManager <>4__this;

			[Token(Token = "0x17000164")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D81")]
				[Address(RVA = "0x1904FF8", Offset = "0x1904FF8", VA = "0x1904FF8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000165")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D83")]
				[Address(RVA = "0x1905040", Offset = "0x1905040", VA = "0x1905040", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D7E")]
			[Address(RVA = "0x1904ED0", Offset = "0x1904ED0", VA = "0x1904ED0")]
			[DebuggerHidden]
			public <StartTimer>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x6000D7F")]
			[Address(RVA = "0x1904EFC", Offset = "0x1904EFC", VA = "0x1904EFC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D80")]
			[Address(RVA = "0x1904F00", Offset = "0x1904F00", VA = "0x1904F00", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D82")]
			[Address(RVA = "0x1905000", Offset = "0x1905000", VA = "0x1905000", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Sprite icon;

		[Token(Token = "0x4000DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string title;

		[Token(Token = "0x4000DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x8D9C48", Offset = "0x8D9C48")]
		public string description;

		[Token(Token = "0x4000DD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Animator notificationAnimator;

		[Token(Token = "0x4000DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Image iconObj;

		[Token(Token = "0x4000DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public TextMeshProUGUI titleObj;

		[Token(Token = "0x4000DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public TextMeshProUGUI descriptionObj;

		[Token(Token = "0x4000DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool enableTimer;

		[Token(Token = "0x4000DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float timer;

		[Token(Token = "0x4000DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool useCustomContent;

		[Token(Token = "0x4000DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		public bool useStacking;

		[Token(Token = "0x4000DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public NotificationStyle notificationStyle;

		[Token(Token = "0x6000D78")]
		[Address(RVA = "0xC23950", Offset = "0xC23950", VA = "0xC23950")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D79")]
		[Address(RVA = "0xC23C48", Offset = "0xC23C48", VA = "0xC23C48")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E0A3C", Offset = "0x8E0A3C")]
		private IEnumerator StartTimer()
		{
			return null;
		}

		[Token(Token = "0x6000D7A")]
		[Address(RVA = "0xC23CB4", Offset = "0xC23CB4", VA = "0xC23CB4")]
		public void OpenNotification()
		{
		}

		[Token(Token = "0x6000D7B")]
		[Address(RVA = "0xC23D44", Offset = "0xC23D44", VA = "0xC23D44")]
		public void CloseNotification()
		{
		}

		[Token(Token = "0x6000D7C")]
		[Address(RVA = "0xC23D9C", Offset = "0xC23D9C", VA = "0xC23D9C")]
		public void UpdateUI()
		{
		}

		[Token(Token = "0x6000D7D")]
		[Address(RVA = "0xC23EDC", Offset = "0xC23EDC", VA = "0xC23EDC")]
		public NotificationManager()
		{
		}
	}
	[Token(Token = "0x20001E7")]
	public class NotificationStacking : MonoBehaviour
	{
		[Token(Token = "0x20001E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CC5E8", Offset = "0x8CC5E8")]
		private sealed class <StartNotification>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000DEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000DEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000DEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NotificationStacking <>4__this;

			[Token(Token = "0x17000166")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D8A")]
				[Address(RVA = "0x190521C", Offset = "0x190521C", VA = "0x190521C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000167")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D8C")]
				[Address(RVA = "0x1905264", Offset = "0x1905264", VA = "0x1905264", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D87")]
			[Address(RVA = "0x1905048", Offset = "0x1905048", VA = "0x1905048")]
			[DebuggerHidden]
			public <StartNotification>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x6000D88")]
			[Address(RVA = "0x1905074", Offset = "0x1905074", VA = "0x1905074", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D89")]
			[Address(RVA = "0x1905078", Offset = "0x1905078", VA = "0x1905078", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D8B")]
			[Address(RVA = "0x1905224", Offset = "0x1905224", VA = "0x1905224", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<NotificationManager> notifications;

		[Token(Token = "0x4000DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public bool enableUpdating;

		[Token(Token = "0x4000DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D9C68", Offset = "0x8D9C68")]
		public float delay;

		[Token(Token = "0x4000DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int currentNotification;

		[Token(Token = "0x6000D84")]
		[Address(RVA = "0xC23F5C", Offset = "0xC23F5C", VA = "0xC23F5C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D85")]
		[Address(RVA = "0xC241FC", Offset = "0xC241FC", VA = "0xC241FC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E0AEC", Offset = "0x8E0AEC")]
		private IEnumerator StartNotification()
		{
			return null;
		}

		[Token(Token = "0x6000D86")]
		[Address(RVA = "0xC24268", Offset = "0xC24268", VA = "0xC24268")]
		public NotificationStacking()
		{
		}
	}
	[Token(Token = "0x20001E9")]
	public class PBFilled : MonoBehaviour
	{
		[Token(Token = "0x4000DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D9CA0", Offset = "0x8D9CA0")]
		public TextMeshProUGUI minLabel;

		[Token(Token = "0x4000DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshProUGUI maxLabel;

		[Token(Token = "0x4000DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D9CD8", Offset = "0x8D9CD8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D9CD8", Offset = "0x8D9CD8")]
		public int transitionAfter;

		[Token(Token = "0x4000DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Color minColor;

		[Token(Token = "0x4000DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Color maxColor;

		[Token(Token = "0x4000DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private ProgressBar progressBar;

		[Token(Token = "0x4000DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Animator barAnimatior;

		[Token(Token = "0x6000D8D")]
		[Address(RVA = "0xC25BB8", Offset = "0xC25BB8", VA = "0xC25BB8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D8E")]
		[Address(RVA = "0xC25C8C", Offset = "0xC25C8C", VA = "0xC25C8C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D8F")]
		[Address(RVA = "0xC25D7C", Offset = "0xC25D7C", VA = "0xC25D7C")]
		public PBFilled()
		{
		}
	}
	[Token(Token = "0x20001EA")]
	public class ProgressBar : MonoBehaviour
	{
		[Token(Token = "0x4000DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float currentPercent;

		[Token(Token = "0x4000DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D9D30", Offset = "0x8D9D30")]
		public int speed;

		[Token(Token = "0x4000DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float maxValue;

		[Token(Token = "0x4000DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Image loadingBar;

		[Token(Token = "0x4000DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TextMeshProUGUI textPercent;

		[Token(Token = "0x4000DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool isOn;

		[Token(Token = "0x4000DFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool restart;

		[Token(Token = "0x4000DFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		public bool invert;

		[Token(Token = "0x4000DFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
		public bool isPercent;

		[Token(Token = "0x6000D90")]
		[Address(RVA = "0x10A4DFC", Offset = "0x10A4DFC", VA = "0x10A4DFC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D91")]
		[Address(RVA = "0x10A4EE8", Offset = "0x10A4EE8", VA = "0x10A4EE8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D92")]
		[Address(RVA = "0x10A50B0", Offset = "0x10A50B0", VA = "0x10A50B0")]
		public void UpdateUI()
		{
		}

		[Token(Token = "0x6000D93")]
		[Address(RVA = "0x10A5194", Offset = "0x10A5194", VA = "0x10A5194")]
		public ProgressBar()
		{
		}
	}
	[Token(Token = "0x20001EB")]
	public class Ripple : MonoBehaviour
	{
		[Token(Token = "0x4000DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float speed;

		[Token(Token = "0x4000DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float maxSize;

		[Token(Token = "0x4000DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color startColor;

		[Token(Token = "0x4000E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color transitionColor;

		[Token(Token = "0x6000D94")]
		[Address(RVA = "0xE5FE94", Offset = "0xE5FE94", VA = "0xE5FE94")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D95")]
		[Address(RVA = "0xE5FF50", Offset = "0xE5FF50", VA = "0xE5FF50")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D96")]
		[Address(RVA = "0xE601BC", Offset = "0xE601BC", VA = "0xE601BC")]
		public Ripple()
		{
		}
	}
	[Token(Token = "0x20001EC")]
	public class RadialSlider : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler, IDragHandler, IPointerEnterHandler, IPointerExitHandler
	{
		[Serializable]
		[Token(Token = "0x20001ED")]
		public class SliderEvent : UnityEvent<float>
		{
			[Token(Token = "0x6000DAA")]
			[Address(RVA = "0x1908F58", Offset = "0x1908F58", VA = "0x1908F58")]
			public SliderEvent()
			{
			}
		}

		[Token(Token = "0x4000E01")]
		private const string PREFS_UI_SAVE_NAME = "Radial";

		[Token(Token = "0x4000E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float currentValue;

		[Token(Token = "0x4000E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Image sliderImage;

		[Token(Token = "0x4000E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform indicatorPivot;

		[Token(Token = "0x4000E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TextMeshProUGUI valueText;

		[Token(Token = "0x4000E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float maxValue;

		[Token(Token = "0x4000E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D9D4C", Offset = "0x8D9D4C")]
		public int decimals;

		[Token(Token = "0x4000E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool isPercent;

		[Token(Token = "0x4000E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public bool rememberValue;

		[Token(Token = "0x4000E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string sliderTag;

		[Token(Token = "0x4000E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private SliderEvent onValueChanged;

		[Token(Token = "0x4000E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public UnityEvent onPointerEnter;

		[Token(Token = "0x4000E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public UnityEvent onPointerExit;

		[Token(Token = "0x4000E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GraphicRaycaster graphicRaycaster;

		[Token(Token = "0x4000E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private RectTransform hitRectTransform;

		[Token(Token = "0x4000E10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool isPointerDown;

		[Token(Token = "0x4000E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float currentAngle;

		[Token(Token = "0x4000E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float currentAngleOnPointerDown;

		[Token(Token = "0x4000E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float valueDisplayPrecision;

		[Token(Token = "0x17000168")]
		public float SliderAngle
		{
			[Token(Token = "0x6000D97")]
			[Address(RVA = "0xE5B1B8", Offset = "0xE5B1B8", VA = "0xE5B1B8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D98")]
			[Address(RVA = "0xE5B1C0", Offset = "0xE5B1C0", VA = "0xE5B1C0")]
			set
			{
			}
		}

		[Token(Token = "0x17000169")]
		public float SliderValue
		{
			[Token(Token = "0x6000D99")]
			[Address(RVA = "0xE5B1F4", Offset = "0xE5B1F4", VA = "0xE5B1F4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D9A")]
			[Address(RVA = "0xE5B258", Offset = "0xE5B258", VA = "0xE5B258")]
			set
			{
			}
		}

		[Token(Token = "0x1700016A")]
		public float SliderValueRaw
		{
			[Token(Token = "0x6000D9B")]
			[Address(RVA = "0xE5B23C", Offset = "0xE5B23C", VA = "0xE5B23C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D9C")]
			[Address(RVA = "0xE5B298", Offset = "0xE5B298", VA = "0xE5B298")]
			set
			{
			}
		}

		[Token(Token = "0x6000D9D")]
		[Address(RVA = "0xE5B2D8", Offset = "0xE5B2D8", VA = "0xE5B2D8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D9E")]
		[Address(RVA = "0xE5B430", Offset = "0xE5B430", VA = "0xE5B430")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D9F")]
		[Address(RVA = "0xE5B6A4", Offset = "0xE5B6A4", VA = "0xE5B6A4", Slot = "4")]
		public void OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000DA0")]
		[Address(RVA = "0xE5B8A4", Offset = "0xE5B8A4", VA = "0xE5B8A4", Slot = "5")]
		public void OnPointerUp(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000DA1")]
		[Address(RVA = "0xE5B95C", Offset = "0xE5B95C", VA = "0xE5B95C", Slot = "6")]
		public void OnDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000DA2")]
		[Address(RVA = "0xE5B964", Offset = "0xE5B964", VA = "0xE5B964", Slot = "7")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000DA3")]
		[Address(RVA = "0xE5B980", Offset = "0xE5B980", VA = "0xE5B980", Slot = "8")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000DA4")]
		[Address(RVA = "0xE5B494", Offset = "0xE5B494", VA = "0xE5B494")]
		public void LoadState()
		{
		}

		[Token(Token = "0x6000DA5")]
		[Address(RVA = "0xE5B8EC", Offset = "0xE5B8EC", VA = "0xE5B8EC")]
		public void SaveState()
		{
		}

		[Token(Token = "0x6000DA6")]
		[Address(RVA = "0xE5B4FC", Offset = "0xE5B4FC", VA = "0xE5B4FC")]
		public void UpdateUI()
		{
		}

		[Token(Token = "0x6000DA7")]
		[Address(RVA = "0xE5B8DC", Offset = "0xE5B8DC", VA = "0xE5B8DC")]
		private bool HasValueChanged()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DA8")]
		[Address(RVA = "0xE5B72C", Offset = "0xE5B72C", VA = "0xE5B72C")]
		private void HandleSliderMouseInput(PointerEventData eventData, bool allowValueWrap)
		{
		}

		[Token(Token = "0x6000DA9")]
		[Address(RVA = "0xE5B99C", Offset = "0xE5B99C", VA = "0xE5B99C")]
		public RadialSlider()
		{
		}
	}
	[Token(Token = "0x20001EE")]
	public class RangeMaxSlider : Slider
	{
		[Token(Token = "0x4000E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public RangeMinSlider minSlider;

		[Token(Token = "0x4000E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public TextMeshProUGUI label;

		[Token(Token = "0x4000E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public string numberFormat;

		[Token(Token = "0x4000E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public float realValue;

		[Token(Token = "0x4000E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		private bool assignedRealValue;

		[Token(Token = "0x6000DAB")]
		[Address(RVA = "0xE5E3D0", Offset = "0xE5E3D0", VA = "0xE5E3D0", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000DAC")]
		[Address(RVA = "0xE5E3E0", Offset = "0xE5E3E0", VA = "0xE5E3E0", Slot = "53")]
		protected override void Set(float input, bool sendCallback)
		{
		}

		[Token(Token = "0x6000DAD")]
		[Address(RVA = "0xE5E628", Offset = "0xE5E628", VA = "0xE5E628")]
		public void Refresh(float input)
		{
		}

		[Token(Token = "0x6000DAE")]
		[Address(RVA = "0xE5E63C", Offset = "0xE5E63C", VA = "0xE5E63C")]
		public RangeMaxSlider()
		{
		}
	}
	[Token(Token = "0x20001EF")]
	public class RangeMinSlider : Slider
	{
		[Token(Token = "0x4000E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D9D74", Offset = "0x8D9D74")]
		public RangeMaxSlider maxSlider;

		[Token(Token = "0x4000E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public TextMeshProUGUI label;

		[Token(Token = "0x4000E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public string numberFormat;

		[Token(Token = "0x6000DAF")]
		[Address(RVA = "0xE5E644", Offset = "0xE5E644", VA = "0xE5E644", Slot = "53")]
		protected override void Set(float input, bool sendCallback)
		{
		}

		[Token(Token = "0x6000DB0")]
		[Address(RVA = "0xE5E858", Offset = "0xE5E858", VA = "0xE5E858")]
		public void Refresh(float input)
		{
		}

		[Token(Token = "0x6000DB1")]
		[Address(RVA = "0xE5E86C", Offset = "0xE5E86C", VA = "0xE5E86C")]
		public RangeMinSlider()
		{
		}
	}
	[Token(Token = "0x20001F0")]
	public class RangeSlider : MonoBehaviour
	{
		[Token(Token = "0x4000E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D9DAC", Offset = "0x8D9DAC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D9DAC", Offset = "0x8D9DAC")]
		public int DecimalPlaces;

		[Token(Token = "0x4000E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float minValue;

		[Token(Token = "0x4000E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float maxValue;

		[Token(Token = "0x4000E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool useWholeNumbers;

		[Token(Token = "0x4000E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool showLabels;

		[Token(Token = "0x4000E21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D9E00", Offset = "0x8D9E00")]
		public RangeMinSlider minSlider;

		[Token(Token = "0x4000E22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TextMeshProUGUI minSliderLabel;

		[Token(Token = "0x4000E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D9E38", Offset = "0x8D9E38")]
		public RangeMaxSlider maxSlider;

		[Token(Token = "0x4000E24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public TextMeshProUGUI maxSliderLabel;

		[Token(Token = "0x1700016B")]
		public float CurrentLowerValue
		{
			[Token(Token = "0x6000DB2")]
			[Address(RVA = "0xE5E874", Offset = "0xE5E874", VA = "0xE5E874")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700016C")]
		public float CurrentUpperValue
		{
			[Token(Token = "0x6000DB3")]
			[Address(RVA = "0xE5E898", Offset = "0xE5E898", VA = "0xE5E898")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000DB4")]
		[Address(RVA = "0xE5E8B4", Offset = "0xE5E8B4", VA = "0xE5E8B4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000DB5")]
		[Address(RVA = "0xE5EA40", Offset = "0xE5EA40", VA = "0xE5EA40")]
		public RangeSlider()
		{
		}
	}
	[Token(Token = "0x20001F1")]
	public class SliderManager : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Serializable]
		[Token(Token = "0x20001F2")]
		public class SliderEvent : UnityEvent<float>
		{
			[Token(Token = "0x6000DBD")]
			[Address(RVA = "0x190A020", Offset = "0x190A020", VA = "0x190A020")]
			public SliderEvent()
			{
			}
		}

		[Token(Token = "0x4000E25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Slider mainSlider;

		[Token(Token = "0x4000E26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshProUGUI valueText;

		[Token(Token = "0x4000E27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextMeshProUGUI popupValueText;

		[Token(Token = "0x4000E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool enableSaving;

		[Token(Token = "0x4000E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string sliderTag;

		[Token(Token = "0x4000E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool usePercent;

		[Token(Token = "0x4000E2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public bool showValue;

		[Token(Token = "0x4000E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		public bool showPopupValue;

		[Token(Token = "0x4000E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
		public bool useRoundValue;

		[Token(Token = "0x4000E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		public SliderEvent onValueChanged;

		[Token(Token = "0x4000E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8D9E80", Offset = "0x8D9E80")]
		public SliderEvent sliderEvent;

		[Token(Token = "0x4000E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public Animator sliderAnimator;

		[Token(Token = "0x4000E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public float saveValue;

		[Token(Token = "0x6000DB6")]
		[Address(RVA = "0xE66210", Offset = "0xE66210", VA = "0xE66210")]
		private void Start()
		{
		}

		[Token(Token = "0x6000DB7")]
		[Address(RVA = "0xE66518", Offset = "0xE66518", VA = "0xE66518")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DB8")]
		[Address(RVA = "0xE66B50", Offset = "0xE66B50", VA = "0xE66B50", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000DB9")]
		[Address(RVA = "0xE66BBC", Offset = "0xE66BBC", VA = "0xE66BBC", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000DBA")]
		[Address(RVA = "0xE66C28", Offset = "0xE66C28", VA = "0xE66C28")]
		public SliderManager()
		{
		}

		[Token(Token = "0x6000DBB")]
		[Address(RVA = "0xE66CB0", Offset = "0xE66CB0", VA = "0xE66CB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E0B9C", Offset = "0x8E0B9C")]
		private void <Start>b__14_0(float <p0>)
		{
		}

		[Token(Token = "0x6000DBC")]
		[Address(RVA = "0xE66D2C", Offset = "0xE66D2C", VA = "0xE66D2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E0BAC", Offset = "0x8E0BAC")]
		private void <Start>b__14_1(float <p0>)
		{
		}
	}
	[Token(Token = "0x20001F3")]
	public class SwitchManager : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler
	{
		[Token(Token = "0x4000E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent OnEvents;

		[Token(Token = "0x4000E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent OffEvents;

		[Token(Token = "0x4000E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool saveValue;

		[Token(Token = "0x4000E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string switchTag;

		[Token(Token = "0x4000E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool isOn;

		[Token(Token = "0x4000E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool invokeAtStart;

		[Token(Token = "0x4000E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		public bool enableSwitchSounds;

		[Token(Token = "0x4000E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
		public bool useHoverSound;

		[Token(Token = "0x4000E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool useClickSound;

		[Token(Token = "0x4000E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Animator switchAnimator;

		[Token(Token = "0x4000E3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Button switchButton;

		[Token(Token = "0x4000E3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AudioSource soundSource;

		[Token(Token = "0x4000E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AudioClip hoverSound;

		[Token(Token = "0x4000E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public AudioClip clickSound;

		[Token(Token = "0x6000DBE")]
		[Address(RVA = "0xE0A474", Offset = "0xE0A474", VA = "0xE0A474")]
		private void Start()
		{
		}

		[Token(Token = "0x6000DBF")]
		[Address(RVA = "0xE0A948", Offset = "0xE0A948", VA = "0xE0A948")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000DC0")]
		[Address(RVA = "0xE0ABC0", Offset = "0xE0ABC0", VA = "0xE0ABC0")]
		public void AnimateSwitch()
		{
		}

		[Token(Token = "0x6000DC1")]
		[Address(RVA = "0xE0ACFC", Offset = "0xE0ACFC", VA = "0xE0ACFC", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000DC2")]
		[Address(RVA = "0xE0AD4C", Offset = "0xE0AD4C", VA = "0xE0AD4C")]
		public SwitchManager()
		{
		}

		[Token(Token = "0x6000DC3")]
		[Address(RVA = "0xE0ADB4", Offset = "0xE0ADB4", VA = "0xE0ADB4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E0BBC", Offset = "0x8E0BBC")]
		private void <Start>b__14_0()
		{
		}
	}
	[Token(Token = "0x20001F4")]
	public class ToggleAnim : MonoBehaviour
	{
		[Token(Token = "0x4000E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public Toggle toggleObject;

		[Token(Token = "0x4000E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public Animator toggleAnimator;

		[Token(Token = "0x6000DC4")]
		[Address(RVA = "0x1145168", Offset = "0x1145168", VA = "0x1145168")]
		private void Start()
		{
		}

		[Token(Token = "0x6000DC5")]
		[Address(RVA = "0x11452DC", Offset = "0x11452DC", VA = "0x11452DC")]
		private void TaskOnClick(bool value)
		{
		}

		[Token(Token = "0x6000DC6")]
		[Address(RVA = "0x114535C", Offset = "0x114535C", VA = "0x114535C")]
		public ToggleAnim()
		{
		}
	}
	[Token(Token = "0x20001F5")]
	public class TooltipContent : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x4000E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D9ED4", Offset = "0x8D9ED4")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x8D9ED4", Offset = "0x8D9ED4")]
		public string description;

		[Token(Token = "0x4000E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D9F20", Offset = "0x8D9F20")]
		public GameObject tooltipRect;

		[Token(Token = "0x4000E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextMeshProUGUI descriptionText;

		[Token(Token = "0x4000E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TooltipManager tpManager;

		[Token(Token = "0x4000E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public Animator tooltipAnimator;

		[Token(Token = "0x6000DC7")]
		[Address(RVA = "0x1145364", Offset = "0x1145364", VA = "0x1145364")]
		private void Start()
		{
		}

		[Token(Token = "0x6000DC8")]
		[Address(RVA = "0x11455C0", Offset = "0x11455C0", VA = "0x11455C0", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000DC9")]
		[Address(RVA = "0x11456D4", Offset = "0x11456D4", VA = "0x11456D4", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000DCA")]
		[Address(RVA = "0x1145780", Offset = "0x1145780", VA = "0x1145780")]
		public TooltipContent()
		{
		}
	}
	[Token(Token = "0x20001F6")]
	public class TooltipManager : MonoBehaviour
	{
		[Token(Token = "0x4000E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Canvas mainCanvas;

		[Token(Token = "0x4000E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject tooltipObject;

		[Token(Token = "0x4000E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject tooltipContent;

		[Token(Token = "0x4000E4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D9F68", Offset = "0x8D9F68")]
		public float tooltipSmoothness;

		[Token(Token = "0x4000E4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool allowUpdating;

		[Token(Token = "0x4000E4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int vBorderTop;

		[Token(Token = "0x4000E4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int vBorderBottom;

		[Token(Token = "0x4000E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int hBorderLeft;

		[Token(Token = "0x4000E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int hBorderRight;

		[Token(Token = "0x4000E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector2 uiPos;

		[Token(Token = "0x4000E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 cursorPos;

		[Token(Token = "0x4000E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private RectTransform tooltipRect;

		[Token(Token = "0x4000E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private RectTransform tooltipZHelper;

		[Token(Token = "0x4000E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 contentPos;

		[Token(Token = "0x4000E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Vector3 tooltipVelocity;

		[Token(Token = "0x6000DCB")]
		[Address(RVA = "0x1145788", Offset = "0x1145788", VA = "0x1145788")]
		private void Start()
		{
		}

		[Token(Token = "0x6000DCC")]
		[Address(RVA = "0x114595C", Offset = "0x114595C", VA = "0x114595C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DCD")]
		[Address(RVA = "0x1145B2C", Offset = "0x1145B2C", VA = "0x1145B2C")]
		public void CheckForBounds()
		{
		}

		[Token(Token = "0x6000DCE")]
		[Address(RVA = "0x1145D50", Offset = "0x1145D50", VA = "0x1145D50")]
		public TooltipManager()
		{
		}
	}
	[Token(Token = "0x20001F7")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8CC5F8", Offset = "0x8CC5F8")]
	public class UIManager : ScriptableObject
	{
		[Token(Token = "0x20001F8")]
		public enum ButtonThemeType
		{
			[Token(Token = "0x4000EAC")]
			BASIC,
			[Token(Token = "0x4000EAD")]
			CUSTOM
		}

		[Token(Token = "0x20001F9")]
		public enum DropdownThemeType
		{
			[Token(Token = "0x4000EAF")]
			BASIC,
			[Token(Token = "0x4000EB0")]
			CUSTOM
		}

		[Token(Token = "0x20001FA")]
		public enum DropdownAnimationType
		{
			[Token(Token = "0x4000EB2")]
			FADING,
			[Token(Token = "0x4000EB3")]
			SLIDING,
			[Token(Token = "0x4000EB4")]
			STYLISH
		}

		[Token(Token = "0x20001FB")]
		public enum ModalWindowThemeType
		{
			[Token(Token = "0x4000EB6")]
			BASIC,
			[Token(Token = "0x4000EB7")]
			CUSTOM
		}

		[Token(Token = "0x20001FC")]
		public enum NotificationThemeType
		{
			[Token(Token = "0x4000EB9")]
			BASIC,
			[Token(Token = "0x4000EBA")]
			CUSTOM
		}

		[Token(Token = "0x20001FD")]
		public enum SliderThemeType
		{
			[Token(Token = "0x4000EBC")]
			BASIC,
			[Token(Token = "0x4000EBD")]
			CUSTOM
		}

		[Token(Token = "0x20001FE")]
		public enum ToggleThemeType
		{
			[Token(Token = "0x4000EBF")]
			BASIC,
			[Token(Token = "0x4000EC0")]
			CUSTOM
		}

		[Token(Token = "0x4000E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public bool enableDynamicUpdate;

		[Token(Token = "0x4000E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[HideInInspector]
		public bool enableExtendedColorPicker;

		[Token(Token = "0x4000E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[HideInInspector]
		public bool editorHints;

		[Token(Token = "0x4000E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Color animatedIconColor;

		[Token(Token = "0x4000E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Color contextBackgroundColor;

		[Token(Token = "0x4000E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public ButtonThemeType buttonThemeType;

		[Token(Token = "0x4000E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public TMP_FontAsset buttonFont;

		[Token(Token = "0x4000E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float buttonFontSize;

		[Token(Token = "0x4000E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Color buttonBorderColor;

		[Token(Token = "0x4000E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Color buttonFilledColor;

		[Token(Token = "0x4000E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public Color buttonTextBasicColor;

		[Token(Token = "0x4000E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public Color buttonTextColor;

		[Token(Token = "0x4000E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public Color buttonTextHighlightedColor;

		[Token(Token = "0x4000E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public Color buttonIconBasicColor;

		[Token(Token = "0x4000E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public Color buttonIconColor;

		[Token(Token = "0x4000E65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public Color buttonIconHighlightedColor;

		[Token(Token = "0x4000E66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public TMP_FontAsset dropdownItemFont;

		[Token(Token = "0x4000E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public float dropdownItemFontSize;

		[Token(Token = "0x4000E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public DropdownThemeType dropdownThemeType;

		[Token(Token = "0x4000E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public DropdownAnimationType dropdownAnimationType;

		[Token(Token = "0x4000E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public TMP_FontAsset dropdownFont;

		[Token(Token = "0x4000E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public float dropdownFontSize;

		[Token(Token = "0x4000E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		public Color dropdownColor;

		[Token(Token = "0x4000E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		public Color dropdownTextColor;

		[Token(Token = "0x4000E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		public Color dropdownIconColor;

		[Token(Token = "0x4000E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		public Color dropdownItemColor;

		[Token(Token = "0x4000E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		public Color dropdownItemTextColor;

		[Token(Token = "0x4000E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		public Color dropdownItemIconColor;

		[Token(Token = "0x4000E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public TMP_FontAsset selectorFont;

		[Token(Token = "0x4000E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public float hSelectorFontSize;

		[Token(Token = "0x4000E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		public Color selectorColor;

		[Token(Token = "0x4000E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		public Color selectorHighlightedColor;

		[Token(Token = "0x4000E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		public bool hSelectorInvertAnimation;

		[Token(Token = "0x4000E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x185")]
		public bool hSelectorLoopSelection;

		[Token(Token = "0x4000E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public TMP_FontAsset inputFieldFont;

		[Token(Token = "0x4000E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public float inputFieldFontSize;

		[Token(Token = "0x4000E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
		public Color inputFieldColor;

		[Token(Token = "0x4000E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public TMP_FontAsset modalWindowTitleFont;

		[Token(Token = "0x4000E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		public TMP_FontAsset modalWindowContentFont;

		[Token(Token = "0x4000E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		public DropdownThemeType modalThemeType;

		[Token(Token = "0x4000E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
		public Color modalWindowTitleColor;

		[Token(Token = "0x4000E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
		public Color modalWindowDescriptionColor;

		[Token(Token = "0x4000E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
		public Color modalWindowIconColor;

		[Token(Token = "0x4000E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
		public Color modalWindowBackgroundColor;

		[Token(Token = "0x4000E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
		public Color modalWindowContentPanelColor;

		[Token(Token = "0x4000E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		public TMP_FontAsset notificationTitleFont;

		[Token(Token = "0x4000E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		public float notificationTitleFontSize;

		[Token(Token = "0x4000E85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		public TMP_FontAsset notificationDescriptionFont;

		[Token(Token = "0x4000E86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		public float notificationDescriptionFontSize;

		[Token(Token = "0x4000E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
		public NotificationThemeType notificationThemeType;

		[Token(Token = "0x4000E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		public Color notificationBackgroundColor;

		[Token(Token = "0x4000E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		public Color notificationTitleColor;

		[Token(Token = "0x4000E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		public Color notificationDescriptionColor;

		[Token(Token = "0x4000E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		public Color notificationIconColor;

		[Token(Token = "0x4000E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		public TMP_FontAsset progressBarLabelFont;

		[Token(Token = "0x4000E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		public float progressBarLabelFontSize;

		[Token(Token = "0x4000E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27C")]
		public Color progressBarColor;

		[Token(Token = "0x4000E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28C")]
		public Color progressBarBackgroundColor;

		[Token(Token = "0x4000E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29C")]
		public Color progressBarLoopBackgroundColor;

		[Token(Token = "0x4000E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2AC")]
		public Color progressBarLabelColor;

		[Token(Token = "0x4000E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2BC")]
		public Color scrollbarColor;

		[Token(Token = "0x4000E93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2CC")]
		public Color scrollbarBackgroundColor;

		[Token(Token = "0x4000E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
		public TMP_FontAsset sliderLabelFont;

		[Token(Token = "0x4000E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
		public float sliderLabelFontSize;

		[Token(Token = "0x4000E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2EC")]
		public SliderThemeType sliderThemeType;

		[Token(Token = "0x4000E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
		public Color sliderColor;

		[Token(Token = "0x4000E98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
		public Color sliderBackgroundColor;

		[Token(Token = "0x4000E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
		public Color sliderLabelColor;

		[Token(Token = "0x4000E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
		public Color sliderPopupLabelColor;

		[Token(Token = "0x4000E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
		public Color sliderHandleColor;

		[Token(Token = "0x4000E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
		public Color switchBorderColor;

		[Token(Token = "0x4000E9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
		public Color switchBackgroundColor;

		[Token(Token = "0x4000E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
		public Color switchHandleOnColor;

		[Token(Token = "0x4000E9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
		public Color switchHandleOffColor;

		[Token(Token = "0x4000EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
		public TMP_FontAsset toggleFont;

		[Token(Token = "0x4000EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
		public float toggleFontSize;

		[Token(Token = "0x4000EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38C")]
		public ToggleThemeType toggleThemeType;

		[Token(Token = "0x4000EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
		public Color toggleTextColor;

		[Token(Token = "0x4000EA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
		public Color toggleBorderColor;

		[Token(Token = "0x4000EA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
		public Color toggleBackgroundColor;

		[Token(Token = "0x4000EA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C0")]
		public Color toggleCheckColor;

		[Token(Token = "0x4000EA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D0")]
		public TMP_FontAsset tooltipFont;

		[Token(Token = "0x4000EA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D8")]
		public float tooltipFontSize;

		[Token(Token = "0x4000EA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3DC")]
		public Color tooltipTextColor;

		[Token(Token = "0x4000EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3EC")]
		public Color tooltipBackgroundColor;

		[Token(Token = "0x6000DCF")]
		[Address(RVA = "0x114A8A4", Offset = "0x114A8A4", VA = "0x114A8A4")]
		public UIManager()
		{
		}
	}
	[Token(Token = "0x20001FF")]
	[ExecuteInEditMode]
	public class UIManagerAnimatedIcon : MonoBehaviour
	{
		[Token(Token = "0x4000EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D9FB4", Offset = "0x8D9FB4")]
		public UIManager UIManagerAsset;

		[Token(Token = "0x4000EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D9FEC", Offset = "0x8D9FEC")]
		public List<GameObject> images;

		[Token(Token = "0x4000EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<GameObject> imagesWithAlpha;

		[Token(Token = "0x4000EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool dynamicUpdateEnabled;

		[Token(Token = "0x6000DD0")]
		[Address(RVA = "0x114B170", Offset = "0x114B170", VA = "0x114B170")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000DD1")]
		[Address(RVA = "0x114B2E0", Offset = "0x114B2E0", VA = "0x114B2E0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000DD2")]
		[Address(RVA = "0x114B4BC", Offset = "0x114B4BC", VA = "0x114B4BC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000DD3")]
		[Address(RVA = "0x114B318", Offset = "0x114B318", VA = "0x114B318")]
		private void UpdateAnimatedIcon()
		{
		}

		[Token(Token = "0x6000DD4")]
		[Address(RVA = "0x114B56C", Offset = "0x114B56C", VA = "0x114B56C")]
		public UIManagerAnimatedIcon()
		{
		}
	}
	[Token(Token = "0x2000200")]
	[ExecuteInEditMode]
	public class UIManagerButton : MonoBehaviour
	{
		[Token(Token = "0x2000201")]
		public enum ButtonType
		{
			[Token(Token = "0x4000EEA")]
			BASIC,
			[Token(Token = "0x4000EEB")]
			BASIC_ONLY_ICON,
			[Token(Token = "0x4000EEC")]
			BASIC_WITH_ICON,
			[Token(Token = "0x4000EED")]
			BASIC_OUTLINE,
			[Token(Token = "0x4000EEE")]
			BASIC_OUTLINE_ONLY_ICON,
			[Token(Token = "0x4000EEF")]
			BASIC_OUTLINE_WITH_ICON,
			[Token(Token = "0x4000EF0")]
			RADIAL_ONLY_ICON,
			[Token(Token = "0x4000EF1")]
			RADIAL_OUTLINE_ONLY_ICON,
			[Token(Token = "0x4000EF2")]
			ROUNDED,
			[Token(Token = "0x4000EF3")]
			ROUNDED_OUTLINE
		}

		[Token(Token = "0x4000EC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DA024", Offset = "0x8DA024")]
		public UIManager UIManagerAsset;

		[Token(Token = "0x4000EC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ButtonType buttonType;

		[Token(Token = "0x4000EC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool dynamicUpdateEnabled;

		[Token(Token = "0x4000EC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public Image basicFilled;

		[Token(Token = "0x4000EC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public TextMeshProUGUI basicText;

		[Token(Token = "0x4000ECA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public Image basicOnlyIconFilled;

		[Token(Token = "0x4000ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public Image basicOnlyIconIcon;

		[Token(Token = "0x4000ECC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public Image basicWithIconFilled;

		[Token(Token = "0x4000ECD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public Image basicWithIconIcon;

		[Token(Token = "0x4000ECE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public TextMeshProUGUI basicWithIconText;

		[Token(Token = "0x4000ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public Image basicOutlineBorder;

		[Token(Token = "0x4000ED0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public Image basicOutlineFilled;

		[Token(Token = "0x4000ED1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public TextMeshProUGUI basicOutlineText;

		[Token(Token = "0x4000ED2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public TextMeshProUGUI basicOutlineTextHighligted;

		[Token(Token = "0x4000ED3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public Image basicOutlineOOBorder;

		[Token(Token = "0x4000ED4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[HideInInspector]
		public Image basicOutlineOOFilled;

		[Token(Token = "0x4000ED5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[HideInInspector]
		public Image basicOutlineOOIcon;

		[Token(Token = "0x4000ED6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[HideInInspector]
		public Image basicOutlineOOIconHighlighted;

		[Token(Token = "0x4000ED7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[HideInInspector]
		public Image basicOutlineWOBorder;

		[Token(Token = "0x4000ED8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[HideInInspector]
		public Image basicOutlineWOFilled;

		[Token(Token = "0x4000ED9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[HideInInspector]
		public Image basicOutlineWOIcon;

		[Token(Token = "0x4000EDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[HideInInspector]
		public Image basicOutlineWOIconHighlighted;

		[Token(Token = "0x4000EDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[HideInInspector]
		public TextMeshProUGUI basicOutlineWOText;

		[Token(Token = "0x4000EDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[HideInInspector]
		public TextMeshProUGUI basicOutlineWOTextHighligted;

		[Token(Token = "0x4000EDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[HideInInspector]
		public Image radialOOBackground;

		[Token(Token = "0x4000EDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[HideInInspector]
		public Image radialOOIcon;

		[Token(Token = "0x4000EDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[HideInInspector]
		public Image radialOutlineOOBorder;

		[Token(Token = "0x4000EE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[HideInInspector]
		public Image radialOutlineOOFilled;

		[Token(Token = "0x4000EE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[HideInInspector]
		public Image radialOutlineOOIcon;

		[Token(Token = "0x4000EE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[HideInInspector]
		public Image radialOutlineOOIconHighlighted;

		[Token(Token = "0x4000EE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[HideInInspector]
		public Image roundedBackground;

		[Token(Token = "0x4000EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[HideInInspector]
		public TextMeshProUGUI roundedText;

		[Token(Token = "0x4000EE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[HideInInspector]
		public Image roundedOutlineBorder;

		[Token(Token = "0x4000EE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[HideInInspector]
		public Image roundedOutlineFilled;

		[Token(Token = "0x4000EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[HideInInspector]
		public TextMeshProUGUI roundedOutlineText;

		[Token(Token = "0x4000EE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[HideInInspector]
		public TextMeshProUGUI roundedOutlineTextHighligted;

		[Token(Token = "0x6000DD5")]
		[Address(RVA = "0x114B604", Offset = "0x114B604", VA = "0x114B604")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000DD6")]
		[Address(RVA = "0x114B774", Offset = "0x114B774", VA = "0x114B774")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000DD7")]
		[Address(RVA = "0x114CC44", Offset = "0x114CC44", VA = "0x114CC44")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000DD8")]
		[Address(RVA = "0x114B7AC", Offset = "0x114B7AC", VA = "0x114B7AC")]
		private void UpdateButton()
		{
		}

		[Token(Token = "0x6000DD9")]
		[Address(RVA = "0x114CCF4", Offset = "0x114CCF4", VA = "0x114CCF4")]
		public UIManagerButton()
		{
		}
	}
	[Token(Token = "0x2000202")]
	[ExecuteInEditMode]
	public class UIManagerContextMenu : MonoBehaviour
	{
		[Token(Token = "0x4000EF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DA26C", Offset = "0x8DA26C")]
		public UIManager UIManagerAsset;

		[Token(Token = "0x4000EF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DA2A4", Offset = "0x8DA2A4")]
		public Image backgroundImage;

		[Token(Token = "0x4000EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool dynamicUpdateEnabled;

		[Token(Token = "0x6000DDA")]
		[Address(RVA = "0x114CCFC", Offset = "0x114CCFC", VA = "0x114CCFC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000DDB")]
		[Address(RVA = "0x114CE6C", Offset = "0x114CE6C", VA = "0x114CE6C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000DDC")]
		[Address(RVA = "0x114CEDC", Offset = "0x114CEDC", VA = "0x114CEDC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000DDD")]
		[Address(RVA = "0x114CEA4", Offset = "0x114CEA4", VA = "0x114CEA4")]
		private void UpdateContextMenu()
		{
		}

		[Token(Token = "0x6000DDE")]
		[Address(RVA = "0x114CF8C", Offset = "0x114CF8C", VA = "0x114CF8C")]
		public UIManagerContextMenu()
		{
		}
	}
	[Token(Token = "0x2000203")]
	[ExecuteInEditMode]
	public class UIManagerDropdown : MonoBehaviour
	{
		[Token(Token = "0x4000EF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DA2DC", Offset = "0x8DA2DC")]
		public UIManager UIManagerAsset;

		[Token(Token = "0x4000EF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DA314", Offset = "0x8DA314")]
		public Image background;

		[Token(Token = "0x4000EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Image contentBackground;

		[Token(Token = "0x4000EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Image mainIcon;

		[Token(Token = "0x4000EFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TextMeshProUGUI mainText;

		[Token(Token = "0x4000EFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Image expandIcon;

		[Token(Token = "0x4000EFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Image itemBackground;

		[Token(Token = "0x4000EFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Image itemIcon;

		[Token(Token = "0x4000EFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public TextMeshProUGUI itemText;

		[Token(Token = "0x4000F00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool dynamicUpdateEnabled;

		[Token(Token = "0x4000F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private CustomDropdown dropdownMain;

		[Token(Token = "0x4000F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private DropdownMultiSelect dropdownMulti;

		[Token(Token = "0x6000DDF")]
		[Address(RVA = "0x114CF94", Offset = "0x114CF94", VA = "0x114CF94")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000DE0")]
		[Address(RVA = "0x114D21C", Offset = "0x114D21C", VA = "0x114D21C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000DE1")]
		[Address(RVA = "0x114D9AC", Offset = "0x114D9AC", VA = "0x114D9AC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000DE2")]
		[Address(RVA = "0x114D254", Offset = "0x114D254", VA = "0x114D254")]
		private void UpdateDropdown()
		{
		}

		[Token(Token = "0x6000DE3")]
		[Address(RVA = "0x114DA5C", Offset = "0x114DA5C", VA = "0x114DA5C")]
		public UIManagerDropdown()
		{
		}
	}
	[Token(Token = "0x2000204")]
	[ExecuteInEditMode]
	public class UIManagerHSelector : MonoBehaviour
	{
		[Token(Token = "0x4000F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DA34C", Offset = "0x8DA34C")]
		public UIManager UIManagerAsset;

		[Token(Token = "0x4000F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DA384", Offset = "0x8DA384")]
		public List<GameObject> images;

		[Token(Token = "0x4000F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<GameObject> imagesHighlighted;

		[Token(Token = "0x4000F06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<GameObject> texts;

		[Token(Token = "0x4000F07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool dynamicUpdateEnabled;

		[Token(Token = "0x4000F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private HorizontalSelector hSelector;

		[Token(Token = "0x6000DE4")]
		[Address(RVA = "0x114DA64", Offset = "0x114DA64", VA = "0x114DA64")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000DE5")]
		[Address(RVA = "0x114DC78", Offset = "0x114DC78", VA = "0x114DC78")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000DE6")]
		[Address(RVA = "0x114DFE0", Offset = "0x114DFE0", VA = "0x114DFE0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000DE7")]
		[Address(RVA = "0x114DCB0", Offset = "0x114DCB0", VA = "0x114DCB0")]
		private void UpdateSelector()
		{
		}

		[Token(Token = "0x6000DE8")]
		[Address(RVA = "0x114E090", Offset = "0x114E090", VA = "0x114E090")]
		public UIManagerHSelector()
		{
		}
	}
	[Token(Token = "0x2000205")]
	[ExecuteInEditMode]
	public class UIManagerInputField : MonoBehaviour
	{
		[Token(Token = "0x4000F09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DA3BC", Offset = "0x8DA3BC")]
		public UIManager UIManagerAsset;

		[Token(Token = "0x4000F0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DA3F4", Offset = "0x8DA3F4")]
		public List<GameObject> images;

		[Token(Token = "0x4000F0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<GameObject> texts;

		[Token(Token = "0x4000F0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool dynamicUpdateEnabled;

		[Token(Token = "0x6000DE9")]
		[Address(RVA = "0x114E140", Offset = "0x114E140", VA = "0x114E140")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000DEA")]
		[Address(RVA = "0x114E2B0", Offset = "0x114E2B0", VA = "0x114E2B0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000DEB")]
		[Address(RVA = "0x114E518", Offset = "0x114E518", VA = "0x114E518")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000DEC")]
		[Address(RVA = "0x114E2E8", Offset = "0x114E2E8", VA = "0x114E2E8")]
		private void UpdateInputField()
		{
		}

		[Token(Token = "0x6000DED")]
		[Address(RVA = "0x114E5BC", Offset = "0x114E5BC", VA = "0x114E5BC")]
		public UIManagerInputField()
		{
		}
	}
	[Token(Token = "0x2000206")]
	[ExecuteInEditMode]
	public class UIManagerModalWindow : MonoBehaviour
	{
		[Token(Token = "0x4000F0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DA42C", Offset = "0x8DA42C")]
		public UIManager UIManagerAsset;

		[Token(Token = "0x4000F0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DA464", Offset = "0x8DA464")]
		public Image background;

		[Token(Token = "0x4000F0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Image contentBackground;

		[Token(Token = "0x4000F10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Image icon;

		[Token(Token = "0x4000F11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TextMeshProUGUI title;

		[Token(Token = "0x4000F12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public TextMeshProUGUI description;

		[Token(Token = "0x4000F13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool dynamicUpdateEnabled;

		[Token(Token = "0x6000DEE")]
		[Address(RVA = "0x114E654", Offset = "0x114E654", VA = "0x114E654")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000DEF")]
		[Address(RVA = "0x114E7C4", Offset = "0x114E7C4", VA = "0x114E7C4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000DF0")]
		[Address(RVA = "0x114EA20", Offset = "0x114EA20", VA = "0x114EA20")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000DF1")]
		[Address(RVA = "0x114E7FC", Offset = "0x114E7FC", VA = "0x114E7FC")]
		private void UpdateModalWindow()
		{
		}

		[Token(Token = "0x6000DF2")]
		[Address(RVA = "0x114EAD0", Offset = "0x114EAD0", VA = "0x114EAD0")]
		public UIManagerModalWindow()
		{
		}
	}
	[Token(Token = "0x2000207")]
	[ExecuteInEditMode]
	public class UIManagerNotification : MonoBehaviour
	{
		[Token(Token = "0x4000F14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DA49C", Offset = "0x8DA49C")]
		public UIManager UIManagerAsset;

		[Token(Token = "0x4000F15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DA4D4", Offset = "0x8DA4D4")]
		public Image background;

		[Token(Token = "0x4000F16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Image icon;

		[Token(Token = "0x4000F17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TextMeshProUGUI title;

		[Token(Token = "0x4000F18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TextMeshProUGUI description;

		[Token(Token = "0x4000F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool dynamicUpdateEnabled;

		[Token(Token = "0x6000DF3")]
		[Address(RVA = "0x114EAD8", Offset = "0x114EAD8", VA = "0x114EAD8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000DF4")]
		[Address(RVA = "0x114EC48", Offset = "0x114EC48", VA = "0x114EC48")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000DF5")]
		[Address(RVA = "0x114EEBC", Offset = "0x114EEBC", VA = "0x114EEBC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000DF6")]
		[Address(RVA = "0x114EC80", Offset = "0x114EC80", VA = "0x114EC80")]
		private void UpdateNotification()
		{
		}

		[Token(Token = "0x6000DF7")]
		[Address(RVA = "0x114EF6C", Offset = "0x114EF6C", VA = "0x114EF6C")]
		public UIManagerNotification()
		{
		}
	}
	[Token(Token = "0x2000208")]
	[ExecuteInEditMode]
	public class UIManagerProgressBar : MonoBehaviour
	{
		[Token(Token = "0x4000F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DA50C", Offset = "0x8DA50C")]
		public UIManager UIManagerAsset;

		[Token(Token = "0x4000F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DA544", Offset = "0x8DA544")]
		public Image bar;

		[Token(Token = "0x4000F1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Image background;

		[Token(Token = "0x4000F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TextMeshProUGUI label;

		[Token(Token = "0x4000F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool dynamicUpdateEnabled;

		[Token(Token = "0x6000DF8")]
		[Address(RVA = "0x114EF74", Offset = "0x114EF74", VA = "0x114EF74")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000DF9")]
		[Address(RVA = "0x114F0E4", Offset = "0x114F0E4", VA = "0x114F0E4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000DFA")]
		[Address(RVA = "0x114F2C0", Offset = "0x114F2C0", VA = "0x114F2C0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000DFB")]
		[Address(RVA = "0x114F11C", Offset = "0x114F11C", VA = "0x114F11C")]
		private void UpdateProgressBar()
		{
		}

		[Token(Token = "0x6000DFC")]
		[Address(RVA = "0x114F370", Offset = "0x114F370", VA = "0x114F370")]
		public UIManagerProgressBar()
		{
		}
	}
	[Token(Token = "0x2000209")]
	[ExecuteInEditMode]
	public class UIManagerProgressBarLoop : MonoBehaviour
	{
		[Token(Token = "0x4000F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DA57C", Offset = "0x8DA57C")]
		public UIManager UIManagerAsset;

		[Token(Token = "0x4000F20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool hasBackground;

		[Token(Token = "0x4000F21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool useRegularBackground;

		[Token(Token = "0x4000F22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DA5B4", Offset = "0x8DA5B4")]
		public Image bar;

		[Token(Token = "0x4000F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public Image background;

		[Token(Token = "0x4000F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool dynamicUpdateEnabled;

		[Token(Token = "0x6000DFD")]
		[Address(RVA = "0x114F378", Offset = "0x114F378", VA = "0x114F378")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000DFE")]
		[Address(RVA = "0x114F4E8", Offset = "0x114F4E8", VA = "0x114F4E8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000DFF")]
		[Address(RVA = "0x114F678", Offset = "0x114F678", VA = "0x114F678")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000E00")]
		[Address(RVA = "0x114F520", Offset = "0x114F520", VA = "0x114F520")]
		private void UpdateProgressBar()
		{
		}

		[Token(Token = "0x6000E01")]
		[Address(RVA = "0x114F750", Offset = "0x114F750", VA = "0x114F750")]
		public UIManagerProgressBarLoop()
		{
		}
	}
	[Token(Token = "0x200020A")]
	[ExecuteInEditMode]
	public class UIManagerScrollbar : MonoBehaviour
	{
		[Token(Token = "0x4000F25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DA5FC", Offset = "0x8DA5FC")]
		public UIManager UIManagerAsset;

		[Token(Token = "0x4000F26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DA634", Offset = "0x8DA634")]
		public Image background;

		[Token(Token = "0x4000F27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Image bar;

		[Token(Token = "0x4000F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool dynamicUpdateEnabled;

		[Token(Token = "0x6000E02")]
		[Address(RVA = "0x114F758", Offset = "0x114F758", VA = "0x114F758")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000E03")]
		[Address(RVA = "0x114F8C8", Offset = "0x114F8C8", VA = "0x114F8C8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E04")]
		[Address(RVA = "0x114FA0C", Offset = "0x114FA0C", VA = "0x114FA0C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000E05")]
		[Address(RVA = "0x114F900", Offset = "0x114F900", VA = "0x114F900")]
		private void UpdateScrollbar()
		{
		}

		[Token(Token = "0x6000E06")]
		[Address(RVA = "0x114FAE4", Offset = "0x114FAE4", VA = "0x114FAE4")]
		public UIManagerScrollbar()
		{
		}
	}
	[Token(Token = "0x200020B")]
	[ExecuteInEditMode]
	public class UIManagerSlider : MonoBehaviour
	{
		[Token(Token = "0x4000F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DA66C", Offset = "0x8DA66C")]
		public UIManager UIManagerAsset;

		[Token(Token = "0x4000F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool hasLabel;

		[Token(Token = "0x4000F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool hasPopupLabel;

		[Token(Token = "0x4000F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DA6A4", Offset = "0x8DA6A4")]
		public Image background;

		[Token(Token = "0x4000F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Image bar;

		[Token(Token = "0x4000F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Image handle;

		[Token(Token = "0x4000F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public TextMeshProUGUI label;

		[Token(Token = "0x4000F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public TextMeshProUGUI popupLabel;

		[Token(Token = "0x4000F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool dynamicUpdateEnabled;

		[Token(Token = "0x6000E07")]
		[Address(RVA = "0x114FAEC", Offset = "0x114FAEC", VA = "0x114FAEC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000E08")]
		[Address(RVA = "0x114FC5C", Offset = "0x114FC5C", VA = "0x114FC5C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E09")]
		[Address(RVA = "0x11501E0", Offset = "0x11501E0", VA = "0x11501E0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000E0A")]
		[Address(RVA = "0x114FC94", Offset = "0x114FC94", VA = "0x114FC94")]
		private void UpdateSlider()
		{
		}

		[Token(Token = "0x6000E0B")]
		[Address(RVA = "0x11502B8", Offset = "0x11502B8", VA = "0x11502B8")]
		public UIManagerSlider()
		{
		}
	}
	[Token(Token = "0x200020C")]
	[ExecuteInEditMode]
	public class UIManagerSwitch : MonoBehaviour
	{
		[Token(Token = "0x4000F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DA6FC", Offset = "0x8DA6FC")]
		public UIManager UIManagerAsset;

		[Token(Token = "0x4000F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DA734", Offset = "0x8DA734")]
		public Image border;

		[Token(Token = "0x4000F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Image background;

		[Token(Token = "0x4000F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Image handleOn;

		[Token(Token = "0x4000F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Image handleOff;

		[Token(Token = "0x4000F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool dynamicUpdateEnabled;

		[Token(Token = "0x6000E0C")]
		[Address(RVA = "0x11502C0", Offset = "0x11502C0", VA = "0x11502C0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000E0D")]
		[Address(RVA = "0x1150430", Offset = "0x1150430", VA = "0x1150430")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E0E")]
		[Address(RVA = "0x1150708", Offset = "0x1150708", VA = "0x1150708")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000E0F")]
		[Address(RVA = "0x1150468", Offset = "0x1150468", VA = "0x1150468")]
		private void UpdateSwitch()
		{
		}

		[Token(Token = "0x6000E10")]
		[Address(RVA = "0x11507E0", Offset = "0x11507E0", VA = "0x11507E0")]
		public UIManagerSwitch()
		{
		}
	}
	[Token(Token = "0x200020D")]
	[ExecuteInEditMode]
	public class UIManagerToggle : MonoBehaviour
	{
		[Token(Token = "0x4000F38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DA76C", Offset = "0x8DA76C")]
		public UIManager UIManagerAsset;

		[Token(Token = "0x4000F39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DA7A4", Offset = "0x8DA7A4")]
		public Image border;

		[Token(Token = "0x4000F3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Image background;

		[Token(Token = "0x4000F3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Image check;

		[Token(Token = "0x4000F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TextMeshProUGUI onLabel;

		[Token(Token = "0x4000F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public TextMeshProUGUI offLabel;

		[Token(Token = "0x4000F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool dynamicUpdateEnabled;

		[Token(Token = "0x6000E11")]
		[Address(RVA = "0x11507E8", Offset = "0x11507E8", VA = "0x11507E8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000E12")]
		[Address(RVA = "0x1150958", Offset = "0x1150958", VA = "0x1150958")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E13")]
		[Address(RVA = "0x1150C88", Offset = "0x1150C88", VA = "0x1150C88")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000E14")]
		[Address(RVA = "0x1150968", Offset = "0x1150968", VA = "0x1150968")]
		private void UpdateToggle()
		{
		}

		[Token(Token = "0x6000E15")]
		[Address(RVA = "0x1150D60", Offset = "0x1150D60", VA = "0x1150D60")]
		public UIManagerToggle()
		{
		}
	}
	[Token(Token = "0x200020E")]
	[ExecuteInEditMode]
	public class UIManagerTooltip : MonoBehaviour
	{
		[Token(Token = "0x4000F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DA7DC", Offset = "0x8DA7DC")]
		public UIManager UIManagerAsset;

		[Token(Token = "0x4000F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DA814", Offset = "0x8DA814")]
		public Image background;

		[Token(Token = "0x4000F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextMeshProUGUI text;

		[Token(Token = "0x4000F42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool dynamicUpdateEnabled;

		[Token(Token = "0x6000E16")]
		[Address(RVA = "0x1150D68", Offset = "0x1150D68", VA = "0x1150D68")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000E17")]
		[Address(RVA = "0x1150ED8", Offset = "0x1150ED8", VA = "0x1150ED8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E18")]
		[Address(RVA = "0x1151074", Offset = "0x1151074", VA = "0x1151074")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000E19")]
		[Address(RVA = "0x1150F10", Offset = "0x1150F10", VA = "0x1150F10")]
		private void UpdateTooltip()
		{
		}

		[Token(Token = "0x6000E1A")]
		[Address(RVA = "0x115114C", Offset = "0x115114C", VA = "0x115114C")]
		public UIManagerTooltip()
		{
		}
	}
	[Token(Token = "0x200020F")]
	public class WindowDragger : UIBehaviour, IBeginDragHandler, IEventSystemHandler, IDragHandler
	{
		[Token(Token = "0x4000F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DA84C", Offset = "0x8DA84C")]
		public RectTransform dragArea;

		[Token(Token = "0x4000F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RectTransform dragObject;

		[Token(Token = "0x4000F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DA884", Offset = "0x8DA884")]
		public bool topOnClick;

		[Token(Token = "0x4000F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector2 originalLocalPointerPosition;

		[Token(Token = "0x4000F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 originalPanelLocalPosition;

		[Token(Token = "0x1700016D")]
		private RectTransform DragObjectInternal
		{
			[Token(Token = "0x6000E1C")]
			[Address(RVA = "0xC117F8", Offset = "0xC117F8", VA = "0xC117F8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016E")]
		private RectTransform DragAreaInternal
		{
			[Token(Token = "0x6000E1D")]
			[Address(RVA = "0xC118A8", Offset = "0xC118A8", VA = "0xC118A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E1B")]
		[Address(RVA = "0xC115BC", Offset = "0xC115BC", VA = "0xC115BC")]
		public new void Start()
		{
		}

		[Token(Token = "0x6000E1E")]
		[Address(RVA = "0xC119E4", Offset = "0xC119E4", VA = "0xC119E4", Slot = "17")]
		public void OnBeginDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x6000E1F")]
		[Address(RVA = "0xC11B10", Offset = "0xC11B10", VA = "0xC11B10", Slot = "18")]
		public void OnDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x6000E20")]
		[Address(RVA = "0xC11C10", Offset = "0xC11C10", VA = "0xC11C10")]
		private void ClampToArea()
		{
		}

		[Token(Token = "0x6000E21")]
		[Address(RVA = "0xC11DB8", Offset = "0xC11DB8", VA = "0xC11DB8")]
		public WindowDragger()
		{
		}
	}
	[Token(Token = "0x2000210")]
	public class WindowManager : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000211")]
		public class WindowItem
		{
			[Token(Token = "0x4000F59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string windowName;

			[Token(Token = "0x4000F5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameObject windowObject;

			[Token(Token = "0x4000F5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameObject buttonObject;

			[Token(Token = "0x6000E2A")]
			[Address(RVA = "0x190D550", Offset = "0x190D550", VA = "0x190D550")]
			public WindowItem()
			{
			}
		}

		[Token(Token = "0x4000F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<WindowItem> windows;

		[Token(Token = "0x4000F49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int currentWindowIndex;

		[Token(Token = "0x4000F4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int currentButtonIndex;

		[Token(Token = "0x4000F4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int newWindowIndex;

		[Token(Token = "0x4000F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string windowFadeIn;

		[Token(Token = "0x4000F4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string windowFadeOut;

		[Token(Token = "0x4000F4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string buttonFadeIn;

		[Token(Token = "0x4000F4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string buttonFadeOut;

		[Token(Token = "0x4000F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool isFirstTime;

		[Token(Token = "0x4000F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GameObject currentWindow;

		[Token(Token = "0x4000F52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private GameObject nextWindow;

		[Token(Token = "0x4000F53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject currentButton;

		[Token(Token = "0x4000F54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject nextButton;

		[Token(Token = "0x4000F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Animator currentWindowAnimator;

		[Token(Token = "0x4000F56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Animator nextWindowAnimator;

		[Token(Token = "0x4000F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Animator currentButtonAnimator;

		[Token(Token = "0x4000F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Animator nextButtonAnimator;

		[Token(Token = "0x6000E22")]
		[Address(RVA = "0xC11DC8", Offset = "0xC11DC8", VA = "0xC11DC8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E23")]
		[Address(RVA = "0xC11F70", Offset = "0xC11F70", VA = "0xC11F70")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000E24")]
		[Address(RVA = "0xC12080", Offset = "0xC12080", VA = "0xC12080")]
		public void OpenFirstTab()
		{
		}

		[Token(Token = "0x6000E25")]
		[Address(RVA = "0xC12494", Offset = "0xC12494", VA = "0xC12494")]
		public void OpenPanel(string newPanel)
		{
		}

		[Token(Token = "0x6000E26")]
		[Address(RVA = "0xC12818", Offset = "0xC12818", VA = "0xC12818")]
		public void NextPage()
		{
		}

		[Token(Token = "0x6000E27")]
		[Address(RVA = "0xC12B38", Offset = "0xC12B38", VA = "0xC12B38")]
		public void PrevPage()
		{
		}

		[Token(Token = "0x6000E28")]
		[Address(RVA = "0xC12E48", Offset = "0xC12E48", VA = "0xC12E48")]
		public void AddNewItem()
		{
		}

		[Token(Token = "0x6000E29")]
		[Address(RVA = "0xC12EC8", Offset = "0xC12EC8", VA = "0xC12EC8")]
		public WindowManager()
		{
		}
	}
	[Token(Token = "0x2000212")]
	public class WindowManagerButton : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x4000F5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Animator buttonAnimator;

		[Token(Token = "0x6000E2B")]
		[Address(RVA = "0xC12FB8", Offset = "0xC12FB8", VA = "0xC12FB8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000E2C")]
		[Address(RVA = "0xC13060", Offset = "0xC13060", VA = "0xC13060", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000E2D")]
		[Address(RVA = "0xC13178", Offset = "0xC13178", VA = "0xC13178", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000E2E")]
		[Address(RVA = "0xC13290", Offset = "0xC13290", VA = "0xC13290")]
		public WindowManagerButton()
		{
		}
	}
}
namespace Febucci.Attributes
{
	[Token(Token = "0x2000213")]
	public class CharsDisplayTimeAttribute : PropertyAttribute
	{
		[Token(Token = "0x6000E2F")]
		[Address(RVA = "0xCBD278", Offset = "0xCBD278", VA = "0xCBD278")]
		public CharsDisplayTimeAttribute()
		{
		}
	}
	[Token(Token = "0x2000214")]
	public class MinValueAttribute : PropertyAttribute
	{
		[Token(Token = "0x4000F5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float min;

		[Token(Token = "0x6000E30")]
		[Address(RVA = "0xC1BE2C", Offset = "0xC1BE2C", VA = "0xC1BE2C")]
		public MinValueAttribute(float min)
		{
		}
	}
	[Token(Token = "0x2000215")]
	public class NotZeroAttribute : PropertyAttribute
	{
		[Token(Token = "0x6000E31")]
		[Address(RVA = "0xC23948", Offset = "0xC23948", VA = "0xC23948")]
		public NotZeroAttribute()
		{
		}
	}
	[Token(Token = "0x2000216")]
	public class PositiveValueAttribute : PropertyAttribute
	{
		[Token(Token = "0x6000E32")]
		[Address(RVA = "0x10A3C30", Offset = "0x10A3C30", VA = "0x10A3C30")]
		public PositiveValueAttribute()
		{
		}
	}
}
namespace Febucci.UI
{
	[Token(Token = "0x2000217")]
	public static class TAnimTags
	{
		[Token(Token = "0x4000F5E")]
		public const string bh_Shake = "shake";

		[Token(Token = "0x4000F5F")]
		public const string bh_Rot = "rot";

		[Token(Token = "0x4000F60")]
		public const string bh_Wiggle = "wiggle";

		[Token(Token = "0x4000F61")]
		public const string bh_Wave = "wave";

		[Token(Token = "0x4000F62")]
		public const string bh_Swing = "swing";

		[Token(Token = "0x4000F63")]
		public const string bh_Incr = "incr";

		[Token(Token = "0x4000F64")]
		public const string bh_Slide = "slide";

		[Token(Token = "0x4000F65")]
		public const string bh_Bounce = "bounce";

		[Token(Token = "0x4000F66")]
		public const string bh_Fade = "fade";

		[Token(Token = "0x4000F67")]
		public const string bh_Rainb = "rainb";

		[Token(Token = "0x4000F68")]
		public const string bh_Dangle = "dangle";

		[Token(Token = "0x4000F69")]
		public const string bh_Pendulum = "pend";

		[Token(Token = "0x4000F6A")]
		public const string ap_Size = "size";

		[Token(Token = "0x4000F6B")]
		public const string ap_Fade = "fade";

		[Token(Token = "0x4000F6C")]
		public const string ap_Offset = "offset";

		[Token(Token = "0x4000F6D")]
		public const string ap_VertExp = "vertexp";

		[Token(Token = "0x4000F6E")]
		public const string ap_HoriExp = "horiexp";

		[Token(Token = "0x4000F6F")]
		public const string ap_DiagExp = "diagexp";

		[Token(Token = "0x4000F70")]
		public const string ap_Rot = "rot";

		[Token(Token = "0x4000F71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string[] defaultBehaviors;

		[Token(Token = "0x4000F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly string[] defaultAppearances;
	}
	[Token(Token = "0x2000218")]
	public struct TypewriterAction
	{
		[Token(Token = "0x4000F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string actionID;

		[Token(Token = "0x4000F74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public List<string> parameters;
	}
	[Token(Token = "0x2000219")]
	[DisallowMultipleComponent]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8CC734", Offset = "0x8CC734")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x8CC734", Offset = "0x8CC734")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8CC734", Offset = "0x8CC734")]
	public class TextAnimator : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200021A")]
		public struct TimeData
		{
			[Token(Token = "0x4000FA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DAA90", Offset = "0x8DAA90")]
			private float <timeSinceStart>k__BackingField;

			[Token(Token = "0x4000FA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DAAA0", Offset = "0x8DAAA0")]
			private float <deltaTime>k__BackingField;

			[Token(Token = "0x17000179")]
			public float timeSinceStart
			{
				[Token(Token = "0x6000E6A")]
				[Address(RVA = "0x190B7E0", Offset = "0x190B7E0", VA = "0x190B7E0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E0CC4", Offset = "0x8E0CC4")]
				readonly get
				{
					return default(float);
				}
				[Token(Token = "0x6000E6B")]
				[Address(RVA = "0x190B7E8", Offset = "0x190B7E8", VA = "0x190B7E8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E0CFC", Offset = "0x8E0CFC")]
				private set
				{
				}
			}

			[Token(Token = "0x1700017A")]
			public float deltaTime
			{
				[Token(Token = "0x6000E6C")]
				[Address(RVA = "0x190B7F0", Offset = "0x190B7F0", VA = "0x190B7F0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E0D0C", Offset = "0x8E0D0C")]
				readonly get
				{
					return default(float);
				}
				[Token(Token = "0x6000E6D")]
				[Address(RVA = "0x190B7F8", Offset = "0x190B7F8", VA = "0x190B7F8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E0D44", Offset = "0x8E0D44")]
				private set
				{
				}
			}

			[Token(Token = "0x6000E6E")]
			[Address(RVA = "0x190B800", Offset = "0x190B800", VA = "0x190B800")]
			internal void ResetData()
			{
			}

			[Token(Token = "0x6000E6F")]
			[Address(RVA = "0x190B808", Offset = "0x190B808", VA = "0x190B808")]
			internal void IncreaseTime()
			{
			}

			[Token(Token = "0x6000E70")]
			[Address(RVA = "0x190B818", Offset = "0x190B818", VA = "0x190B818")]
			internal void UpdateDeltaTime(TimeScale timeScale)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200021B")]
		private class AppearancesContainer
		{
			[Token(Token = "0x4000FA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			public string[] tags;

			[Token(Token = "0x4000FAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public AppearanceDefaultValues values;

			[Token(Token = "0x6000E71")]
			[Address(RVA = "0x190B33C", Offset = "0x190B33C", VA = "0x190B33C")]
			public AppearancesContainer()
			{
			}
		}

		[Token(Token = "0x200021C")]
		internal struct InternalAction
		{
			[Token(Token = "0x4000FAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public TypewriterAction action;

			[Token(Token = "0x4000FAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int charIndex;

			[Token(Token = "0x4000FAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public bool triggered;

			[Token(Token = "0x4000FAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int internalOrder;
		}

		[Token(Token = "0x200021D")]
		private enum ShowTextMode : byte
		{
			[Token(Token = "0x4000FB0")]
			Hidden,
			[Token(Token = "0x4000FB1")]
			Shown,
			[Token(Token = "0x4000FB2")]
			UserTyping
		}

		[Token(Token = "0x200021E")]
		public enum TimeScale
		{
			[Token(Token = "0x4000FB4")]
			Scaled,
			[Token(Token = "0x4000FB5")]
			Unscaled
		}

		[Token(Token = "0x200021F")]
		public delegate void MessageEvent(string message);

		[StructLayout(3)]
		[Token(Token = "0x2000220")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CC7EC", Offset = "0x8CC7EC")]
		private struct <>c__DisplayClass102_0
		{
			[Token(Token = "0x4000FB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public StringBuilder temp_realText;

			[Token(Token = "0x4000FB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string text;

			[Token(Token = "0x4000FB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string entireTag;
		}

		[StructLayout(3)]
		[Token(Token = "0x2000221")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CC7FC", Offset = "0x8CC7FC")]
		private struct <>c__DisplayClass102_1
		{
			[Token(Token = "0x4000FB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int i;

			[Token(Token = "0x4000FBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int realTextIndex;
		}

		[StructLayout(3)]
		[Token(Token = "0x2000222")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CC80C", Offset = "0x8CC80C")]
		private struct <>c__DisplayClass103_0
		{
			[Token(Token = "0x4000FBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int i;
		}

		[Token(Token = "0x4000F75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Renderer renderer;

		[Token(Token = "0x4000F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TAnimPlayerBase _tAnimPlayer;

		[Token(Token = "0x4000F77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DA8BC", Offset = "0x8DA8BC")]
		private bool triggerAnimPlayerOnChange;

		[Token(Token = "0x4000F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float effectIntensityMultiplier;

		[Token(Token = "0x4000F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8DA918", Offset = "0x8DA918")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DA918", Offset = "0x8DA918")]
		[SerializeField]
		private AppearancesContainer appearancesContainer;

		[Token(Token = "0x4000F7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private string[] tags_fallbackBehaviors;

		[Token(Token = "0x4000F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private BehaviorDefaultValues behaviorValues;

		[Token(Token = "0x4000F7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private BuiltinBehaviorsDataScriptable scriptable_globalBehaviorsValues;

		[Token(Token = "0x4000F7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private BuiltinAppearancesDataScriptable scriptable_globalAppearancesValues;

		[Token(Token = "0x4000F7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DA9C8", Offset = "0x8DA9C8")]
		[SerializeField]
		private bool useDynamicScaling;

		[Token(Token = "0x4000F7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DAA14", Offset = "0x8DAA14")]
		private float referenceFontSize;

		[Token(Token = "0x4000F80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private TMP_Text _tmproText;

		[Token(Token = "0x4000F81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public TimeScale timeScale;

		[Token(Token = "0x4000F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private string latestText;

		[Token(Token = "0x4000F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DAA70", Offset = "0x8DAA70")]
		private TMP_CharacterInfo <latestCharacterShown>k__BackingField;

		[Token(Token = "0x4000F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		private TimeData m_time;

		[Token(Token = "0x4000F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		private bool forceMeshRefresh;

		[Token(Token = "0x4000F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x201")]
		private bool skipAppearanceEffects;

		[Token(Token = "0x4000F88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x202")]
		private bool hasParentCanvas;

		[Token(Token = "0x4000F89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private Canvas parentCanvas;

		[Token(Token = "0x4000F8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		private bool autoSize;

		[Token(Token = "0x4000F8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
		private Rect sourceRect;

		[Token(Token = "0x4000F8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
		private Color sourceColor;

		[Token(Token = "0x4000F8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
		private int visibleCharacters;

		[Token(Token = "0x4000F8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		private bool hasText;

		[Token(Token = "0x4000F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x239")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DAA80", Offset = "0x8DAA80")]
		private bool <hasActions>k__BackingField;

		[Token(Token = "0x4000F90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
		private int latestTriggeredEvent;

		[Token(Token = "0x4000F91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		private int latestTriggeredAction;

		[Token(Token = "0x4000F92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		private TMP_TextInfo textInfo;

		[Token(Token = "0x4000F93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		private Character[] characters;

		[Token(Token = "0x4000F94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		private List<BehaviorBase> behaviorEffects;

		[Token(Token = "0x4000F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		private List<AppearanceBase> appearanceEffects;

		[Token(Token = "0x4000F96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		private AppearanceBase[] fallbackAppearanceEffects;

		[Token(Token = "0x4000F97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		private BehaviorBase[] fallbackBehaviorEffects;

		[Token(Token = "0x4000F98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		private List<InternalAction> typewriterActions;

		[Token(Token = "0x4000F99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		private List<EventMarker> eventMarkers;

		[Token(Token = "0x4000F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool enabled_globalAppearances;

		[Token(Token = "0x4000F9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		private static bool enabled_globalBehaviors;

		[Token(Token = "0x4000F9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		private bool enabled_localBehaviors;

		[Token(Token = "0x4000F9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x289")]
		private bool enabled_localAppearances;

		[Token(Token = "0x4000F9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28A")]
		private bool databaseBuilt;

		[Token(Token = "0x4000F9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		private Dictionary<string, Type> localBehaviors;

		[Token(Token = "0x4000FA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		private Dictionary<string, Type> localAppearances;

		[Token(Token = "0x4000FA1")]
		private const char m_closureSymbol = '/';

		[Token(Token = "0x4000FA2")]
		private const char m_eventSymbol = '?';

		[Token(Token = "0x4000FA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		private bool noparseEnabled;

		[Token(Token = "0x4000FA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A4")]
		private int internalEventActionIndex;

		[Token(Token = "0x4000FA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		private List<int> temp_effectsToApply;

		[Token(Token = "0x4000FA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		private int tmpFirstVisibleCharacter;

		[Token(Token = "0x1700016F")]
		private TAnimPlayerBase tAnimPlayer
		{
			[Token(Token = "0x6000E35")]
			[Address(RVA = "0xE0E63C", Offset = "0xE0E63C", VA = "0xE0E63C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000170")]
		public TMP_Text tmproText
		{
			[Token(Token = "0x6000E36")]
			[Address(RVA = "0xE0E544", Offset = "0xE0E544", VA = "0xE0E544")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E37")]
			[Address(RVA = "0xE0E76C", Offset = "0xE0E76C", VA = "0xE0E76C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000171")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8E1E50", Offset = "0x8E1E50")]
		public float deltaTime
		{
			[Token(Token = "0x6000E38")]
			[Address(RVA = "0xE0E774", Offset = "0xE0E774", VA = "0xE0E774")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000172")]
		public string text
		{
			[Token(Token = "0x6000E3B")]
			[Address(RVA = "0xE0E8BC", Offset = "0xE0E8BC", VA = "0xE0E8BC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E3C")]
			[Address(RVA = "0xE0E8C4", Offset = "0xE0E8C4", VA = "0xE0E8C4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000173")]
		public bool allLettersShown
		{
			[Token(Token = "0x6000E3D")]
			[Address(RVA = "0xE0E8CC", Offset = "0xE0E8CC", VA = "0xE0E8CC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000174")]
		public TMP_CharacterInfo latestCharacterShown
		{
			[Token(Token = "0x6000E3E")]
			[Address(RVA = "0xE0E908", Offset = "0xE0E908", VA = "0xE0E908")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E0BEC", Offset = "0x8E0BEC")]
			get
			{
				return default(TMP_CharacterInfo);
			}
			[Token(Token = "0x6000E3F")]
			[Address(RVA = "0xE0E918", Offset = "0xE0E918", VA = "0xE0E918")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E0BFC", Offset = "0x8E0BFC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000175")]
		public TimeData time
		{
			[Token(Token = "0x6000E40")]
			[Address(RVA = "0xE0E934", Offset = "0xE0E934", VA = "0xE0E934")]
			get
			{
				return default(TimeData);
			}
		}

		[Token(Token = "0x17000176")]
		internal bool hasActions
		{
			[Token(Token = "0x6000E41")]
			[Address(RVA = "0xE0E940", Offset = "0xE0E940", VA = "0xE0E940")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E0C0C", Offset = "0x8E0C0C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E42")]
			[Address(RVA = "0xE0E948", Offset = "0xE0E948", VA = "0xE0E948")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E0C1C", Offset = "0x8E0C1C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000177")]
		public static bool effectsBehaviorsEnabled
		{
			[Token(Token = "0x6000E4B")]
			[Address(RVA = "0xE0FE68", Offset = "0xE0FE68", VA = "0xE0FE68")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000178")]
		public static bool effectsAppearancesEnabled
		{
			[Token(Token = "0x6000E4C")]
			[Address(RVA = "0xE0FECC", Offset = "0xE0FECC", VA = "0xE0FECC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x14000005")]
		public event MessageEvent onEvent
		{
			[Token(Token = "0x6000E39")]
			[Address(RVA = "0xE0E77C", Offset = "0xE0E77C", VA = "0xE0E77C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E0BCC", Offset = "0x8E0BCC")]
			add
			{
			}
			[Token(Token = "0x6000E3A")]
			[Address(RVA = "0xE0E81C", Offset = "0xE0E81C", VA = "0xE0E81C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E0BDC", Offset = "0x8E0BDC")]
			remove
			{
			}
		}

		[Token(Token = "0x6000E34")]
		[Address(RVA = "0xE0E404", Offset = "0xE0E404", VA = "0xE0E404")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E43")]
		[Address(RVA = "0xE0CA80", Offset = "0xE0CA80", VA = "0xE0CA80")]
		public void SetText(string text, bool hideText)
		{
		}

		[Token(Token = "0x6000E44")]
		[Address(RVA = "0xE0EC40", Offset = "0xE0EC40", VA = "0xE0EC40")]
		public void AppendText(string text, bool hideText)
		{
		}

		[Token(Token = "0x6000E45")]
		[Address(RVA = "0xE0F874", Offset = "0xE0F874", VA = "0xE0F874")]
		public bool TryGetNextCharacter(out TMP_CharacterInfo result)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E46")]
		[Address(RVA = "0xE0F8F4", Offset = "0xE0F8F4", VA = "0xE0F8F4")]
		public char IncreaseVisibleChars()
		{
			return default(char);
		}

		[Token(Token = "0x6000E47")]
		[Address(RVA = "0xE0FCF8", Offset = "0xE0FCF8", VA = "0xE0FCF8")]
		public void ShowAllCharacters(bool skipAppearanceEffects)
		{
		}

		[Token(Token = "0x6000E48")]
		[Address(RVA = "0xE0FD20", Offset = "0xE0FD20", VA = "0xE0FD20")]
		public void TriggerRemainingEvents()
		{
		}

		[Token(Token = "0x6000E49")]
		[Address(RVA = "0xE0FE54", Offset = "0xE0FE54", VA = "0xE0FE54")]
		public void ForceMeshRefresh()
		{
		}

		[Token(Token = "0x6000E4A")]
		[Address(RVA = "0xE0FE60", Offset = "0xE0FE60", VA = "0xE0FE60")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8E0C2C", Offset = "0x8E0C2C")]
		public void SyncText(string text, bool hideText)
		{
		}

		[Token(Token = "0x6000E4D")]
		[Address(RVA = "0xE0FF30", Offset = "0xE0FF30", VA = "0xE0FF30")]
		public static void EnableAllEffects(bool enabled)
		{
		}

		[Token(Token = "0x6000E4E")]
		[Address(RVA = "0xE10020", Offset = "0xE10020", VA = "0xE10020")]
		public static void EnableAppearances(bool enabled)
		{
		}

		[Token(Token = "0x6000E4F")]
		[Address(RVA = "0xE1008C", Offset = "0xE1008C", VA = "0xE1008C")]
		public static void EnableBehaviors(bool enabled)
		{
		}

		[Token(Token = "0x6000E50")]
		[Address(RVA = "0xE100F8", Offset = "0xE100F8", VA = "0xE100F8")]
		public void EnableBehaviorsLocally(bool value)
		{
		}

		[Token(Token = "0x6000E51")]
		[Address(RVA = "0xE10104", Offset = "0xE10104", VA = "0xE10104")]
		public void EnableAppearancesLocally(bool value)
		{
		}

		[Token(Token = "0x6000E52")]
		[Address(RVA = "0xE10110", Offset = "0xE10110", VA = "0xE10110")]
		private void BuildTagsDatabase()
		{
		}

		[Token(Token = "0x6000E53")]
		[Address(RVA = "0xE108C0", Offset = "0xE108C0", VA = "0xE108C0")]
		private bool TryGetBehaviorClassFromTag(string tag, string entireRichTextTag, int regionStartIndex, out BehaviorBase effectBase)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E54")]
		[Address(RVA = "0xE107B4", Offset = "0xE107B4", VA = "0xE107B4")]
		private bool TryGetAppearingClassFromTag(string tag, string entireRichTextTag, int startIndex, out AppearanceBase effectBase)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E55")]
		[Address(RVA = "0xE109E4", Offset = "0xE109E4", VA = "0xE109E4")]
		private bool TryProcessingAppearanceTag(string richTextTag, int realTextIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E56")]
		[Address(RVA = "0xE10B88", Offset = "0xE10B88", VA = "0xE10B88")]
		private bool TryProcessingBehaviorTag(string richTextTag, int realTextIndex, ref int internalEventActionIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E57")]
		[Address(RVA = "0xE10F44", Offset = "0xE10F44", VA = "0xE10F44")]
		private bool TryProcessingActionTag(string entireTag, int realTextIndex, ref int internalEventActionIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E58")]
		[Address(RVA = "0xE0E954", Offset = "0xE0E954", VA = "0xE0E954")]
		private void _SetText(string text, ShowTextMode showTextMode)
		{
		}

		[Token(Token = "0x6000E59")]
		[Address(RVA = "0xE0ECE8", Offset = "0xE0ECE8", VA = "0xE0ECE8")]
		private string _FormatText(string text, int startCharacterIndex)
		{
			return null;
		}

		[Token(Token = "0x6000E5A")]
		[Address(RVA = "0xE0F038", Offset = "0xE0F038", VA = "0xE0F038")]
		private void _ApplyTextToCharacters(string text)
		{
		}

		[Token(Token = "0x6000E5B")]
		[Address(RVA = "0xE0FA9C", Offset = "0xE0FA9C", VA = "0xE0FA9C")]
		private void TryTriggeringEvent(int maxInternalOrder)
		{
		}

		[Token(Token = "0x6000E5C")]
		[Address(RVA = "0xE1188C", Offset = "0xE1188C", VA = "0xE1188C")]
		internal bool TryGetAction(out TypewriterAction action)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E5D")]
		[Address(RVA = "0xE114B0", Offset = "0xE114B0", VA = "0xE114B0")]
		private void SetupEffectsIntensity()
		{
		}

		[Token(Token = "0x6000E5E")]
		[Address(RVA = "0xE115E0", Offset = "0xE115E0", VA = "0xE115E0")]
		private void CopyMeshSources()
		{
		}

		[Token(Token = "0x6000E5F")]
		[Address(RVA = "0xE11AA8", Offset = "0xE11AA8", VA = "0xE11AA8")]
		private void UpdateMesh()
		{
		}

		[Token(Token = "0x6000E60")]
		[Address(RVA = "0xE11CE0", Offset = "0xE11CE0", VA = "0xE11CE0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E61")]
		[Address(RVA = "0xE124FC", Offset = "0xE124FC", VA = "0xE124FC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000E62")]
		[Address(RVA = "0xE12508", Offset = "0xE12508", VA = "0xE12508")]
		public TextAnimator()
		{
		}

		[Token(Token = "0x6000E64")]
		[Address(RVA = "0xE11198", Offset = "0xE11198", VA = "0xE11198")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E0C64", Offset = "0x8E0C64")]
		private void <_SetText>g__HideAllCharacters|101_0()
		{
		}

		[Token(Token = "0x6000E65")]
		[Address(RVA = "0xE1123C", Offset = "0xE1123C", VA = "0xE1123C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E0C74", Offset = "0x8E0C74")]
		private void <_SetText>g__ShowAllCharacters|101_1()
		{
		}

		[Token(Token = "0x6000E66")]
		[Address(RVA = "0xE11454", Offset = "0xE11454", VA = "0xE11454")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E0C84", Offset = "0x8E0C84")]
		internal static void <_FormatText>g__AppendCurrentCharacterToText|102_0(ref <>c__DisplayClass102_0 P_0, ref <>c__DisplayClass102_1 P_1)
		{
		}

		[Token(Token = "0x6000E67")]
		[Address(RVA = "0xE112A8", Offset = "0xE112A8", VA = "0xE112A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E0C94", Offset = "0x8E0C94")]
		internal static bool <_FormatText>g__TryGetClosingCharacter|102_1(out char _closingCharacter, ref <>c__DisplayClass102_0 P_1, ref <>c__DisplayClass102_1 P_2)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E68")]
		[Address(RVA = "0xE11404", Offset = "0xE11404", VA = "0xE11404")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E0CA4", Offset = "0x8E0CA4")]
		internal static void <_FormatText>g__AppendCurrentTagToText|102_2(ref <>c__DisplayClass102_0 P_0, ref <>c__DisplayClass102_1 P_1)
		{
		}

		[Token(Token = "0x6000E69")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E0CB4", Offset = "0x8E0CB4")]
		private void <_ApplyTextToCharacters>g__SetEffectsDependency|103_0<T>(ref int[] indexes, List<T> effects, int fallbackEffectsCount, ref <>c__DisplayClass103_0 P_3) where T : EffectsBase
		{
		}
	}
	[Token(Token = "0x2000223")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x8CC81C", Offset = "0x8CC81C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8CC81C", Offset = "0x8CC81C")]
	public class TextAnimatorPlayer : TAnimPlayerBase
	{
		[Token(Token = "0x2000224")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CC87C", Offset = "0x8CC87C")]
		private sealed class <WaitInput>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000FC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000FC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x1700017B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E7D")]
				[Address(RVA = "0x190B8D8", Offset = "0x190B8D8", VA = "0x190B8D8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700017C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E7F")]
				[Address(RVA = "0x190B920", Offset = "0x190B920", VA = "0x190B920", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E7A")]
			[Address(RVA = "0x190B858", Offset = "0x190B858", VA = "0x190B858")]
			[DebuggerHidden]
			public <WaitInput>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6000E7B")]
			[Address(RVA = "0x190B884", Offset = "0x190B884", VA = "0x190B884", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E7C")]
			[Address(RVA = "0x190B888", Offset = "0x190B888", VA = "0x190B888", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E7E")]
			[Address(RVA = "0x190B8E0", Offset = "0x190B8E0", VA = "0x190B8E0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000FBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[CharsDisplayTime]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DAAC0", Offset = "0x8DAAC0")]
		public float waitForNormalChars;

		[Token(Token = "0x4000FBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		[CharsDisplayTime]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DAB1C", Offset = "0x8DAB1C")]
		public float waitLong;

		[Token(Token = "0x4000FBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[CharsDisplayTime]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DAB78", Offset = "0x8DAB78")]
		public float waitMiddle;

		[Token(Token = "0x4000FBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DABD4", Offset = "0x8DABD4")]
		private bool avoidMultiplePunctuactionWait;

		[Token(Token = "0x4000FC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DAC20", Offset = "0x8DAC20")]
		private bool waitForNewLines;

		[Token(Token = "0x4000FC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DAC6C", Offset = "0x8DAC6C")]
		private bool waitForLastCharacter;

		[Token(Token = "0x6000E76")]
		[Address(RVA = "0x113FBBC", Offset = "0x113FBBC", VA = "0x113FBBC", Slot = "5")]
		protected override float WaitTimeOf(char character)
		{
			return default(float);
		}

		[Token(Token = "0x6000E77")]
		[Address(RVA = "0x113FDA0", Offset = "0x113FDA0", VA = "0x113FDA0", Slot = "4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E0D54", Offset = "0x8E0D54")]
		protected override IEnumerator WaitInput()
		{
			return null;
		}

		[Token(Token = "0x6000E78")]
		[Address(RVA = "0x113FDFC", Offset = "0x113FDFC", VA = "0x113FDFC")]
		public TextAnimatorPlayer()
		{
		}

		[Token(Token = "0x6000E79")]
		[Address(RVA = "0x113FD88", Offset = "0x113FD88", VA = "0x113FD88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E0DB4", Offset = "0x8E0DB4")]
		internal static bool <WaitTimeOf>g__IsUnicodeNewLine|6_0(ulong unicode)
		{
			return default(bool);
		}
	}
}
namespace Febucci.UI.Examples
{
	[Token(Token = "0x2000225")]
	[AttributeAttribute(Name = "EffectInfoAttribute", RVA = "0x8CC88C", Offset = "0x8CC88C")]
	public class AppearanceTemplate : AppearanceBase
	{
		[Token(Token = "0x4000FC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 vert;

		[Token(Token = "0x4000FC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float pct;

		[Token(Token = "0x6000E80")]
		[Address(RVA = "0xD694DC", Offset = "0xD694DC", VA = "0xD694DC", Slot = "7")]
		public override void SetDefaultValues(AppearanceDefaultValues data)
		{
		}

		[Token(Token = "0x6000E81")]
		[Address(RVA = "0xD694E0", Offset = "0xD694E0", VA = "0xD694E0", Slot = "6")]
		public override void ApplyEffect(ref CharacterData data, int charIndex)
		{
		}

		[Token(Token = "0x6000E82")]
		[Address(RVA = "0xD694E4", Offset = "0xD694E4", VA = "0xD694E4")]
		public AppearanceTemplate()
		{
		}
	}
	[Token(Token = "0x2000226")]
	[AttributeAttribute(Name = "EffectInfoAttribute", RVA = "0x8CC8C4", Offset = "0x8CC8C4")]
	public class BehaviorTemplate : BehaviorBase
	{
		[Token(Token = "0x6000E83")]
		[Address(RVA = "0xD75724", Offset = "0xD75724", VA = "0xD75724", Slot = "7")]
		public override void SetDefaultValues(BehaviorDefaultValues data)
		{
		}

		[Token(Token = "0x6000E84")]
		[Address(RVA = "0xD75728", Offset = "0xD75728", VA = "0xD75728", Slot = "8")]
		public override void SetModifier(string modifierName, string modifierValue)
		{
		}

		[Token(Token = "0x6000E85")]
		[Address(RVA = "0xD7572C", Offset = "0xD7572C", VA = "0xD7572C", Slot = "6")]
		public override void ApplyEffect(ref CharacterData data, int charIndex)
		{
		}

		[Token(Token = "0x6000E86")]
		[Address(RVA = "0xD75730", Offset = "0xD75730", VA = "0xD75730")]
		public BehaviorTemplate()
		{
		}
	}
	[Token(Token = "0x2000227")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8CC8FC", Offset = "0x8CC8FC")]
	public class DefaultEffectsExample : MonoBehaviour
	{
		[Token(Token = "0x4000FC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextAnimatorPlayer textAnimatorPlayer;

		[Token(Token = "0x6000E87")]
		[Address(RVA = "0xCC16A4", Offset = "0xCC16A4", VA = "0xCC16A4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E88")]
		[Address(RVA = "0xCC16A8", Offset = "0xCC16A8", VA = "0xCC16A8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E89")]
		[Address(RVA = "0xCC1E90", Offset = "0xCC1E90", VA = "0xCC1E90")]
		public DefaultEffectsExample()
		{
		}
	}
	[Token(Token = "0x2000228")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8CC934", Offset = "0x8CC934")]
	public class EffectsTesting : MonoBehaviour
	{
		[Token(Token = "0x4000FC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextAnimatorPlayer textAnimatorPlayer;

		[Token(Token = "0x6000E8A")]
		[Address(RVA = "0xCC7B74", Offset = "0xCC7B74", VA = "0xCC7B74")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E8B")]
		[Address(RVA = "0xCC7BD0", Offset = "0xCC7BD0", VA = "0xCC7BD0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E8C")]
		[Address(RVA = "0xCC1AA0", Offset = "0xCC1AA0", VA = "0xCC1AA0")]
		public static string AddEffect(string tag)
		{
			return null;
		}

		[Token(Token = "0x6000E8D")]
		[Address(RVA = "0xCC1C98", Offset = "0xCC1C98", VA = "0xCC1C98")]
		public static string AddAppearanceEffect(string tag)
		{
			return null;
		}

		[Token(Token = "0x6000E8E")]
		[Address(RVA = "0xCC7BD4", Offset = "0xCC7BD4", VA = "0xCC7BD4")]
		public void ShowText()
		{
		}

		[Token(Token = "0x6000E8F")]
		[Address(RVA = "0xCC7D58", Offset = "0xCC7D58", VA = "0xCC7D58")]
		public EffectsTesting()
		{
		}
	}
	[Token(Token = "0x2000229")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8CC96C", Offset = "0x8CC96C")]
	public class EventExample : MonoBehaviour
	{
		[Token(Token = "0x4000FC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextAnimatorPlayer textAnimatorPlayer;

		[Token(Token = "0x4000FC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Camera cam;

		[Token(Token = "0x4000FCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int lastBGIndex;

		[Token(Token = "0x4000FCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color[] bgColors;

		[Token(Token = "0x6000E90")]
		[Address(RVA = "0xCC8514", Offset = "0xCC8514", VA = "0xCC8514")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E91")]
		[Address(RVA = "0xCC85BC", Offset = "0xCC85BC", VA = "0xCC85BC")]
		private void OnEvent(string message)
		{
		}

		[Token(Token = "0x6000E92")]
		[Address(RVA = "0xCC868C", Offset = "0xCC868C", VA = "0xCC868C")]
		public EventExample()
		{
		}
	}
	[Token(Token = "0x200022A")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8CC9A4", Offset = "0x8CC9A4")]
	public class UsageExample : MonoBehaviour
	{
		[Token(Token = "0x4000FCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextAnimatorPlayer textAnimatorPlayer;

		[Token(Token = "0x4000FCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x8DACB8", Offset = "0x8DACB8")]
		[SerializeField]
		private string textToShow;

		[Token(Token = "0x6000E93")]
		[Address(RVA = "0xC0A158", Offset = "0xC0A158", VA = "0xC0A158")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E94")]
		[Address(RVA = "0xC0A15C", Offset = "0xC0A15C", VA = "0xC0A15C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E95")]
		[Address(RVA = "0xC0A160", Offset = "0xC0A160", VA = "0xC0A160")]
		public void ShowText()
		{
		}

		[Token(Token = "0x6000E96")]
		[Address(RVA = "0xC0A184", Offset = "0xC0A184", VA = "0xC0A184")]
		public UsageExample()
		{
		}
	}
	[Token(Token = "0x200022B")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8CC9DC", Offset = "0x8CC9DC")]
	public class SetTextOnEnable : MonoBehaviour
	{
		[Token(Token = "0x4000FCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextAnimatorPlayer tanimPlayer;

		[Token(Token = "0x4000FCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string textToSet;

		[Token(Token = "0x6000E97")]
		[Address(RVA = "0xE634C8", Offset = "0xE634C8", VA = "0xE634C8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E98")]
		[Address(RVA = "0xE63558", Offset = "0xE63558", VA = "0xE63558")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000E99")]
		[Address(RVA = "0xE6357C", Offset = "0xE6357C", VA = "0xE6357C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000E9A")]
		[Address(RVA = "0xE63634", Offset = "0xE63634", VA = "0xE63634")]
		public SetTextOnEnable()
		{
		}
	}
}
namespace Febucci.UI.Core
{
	[Token(Token = "0x200022C")]
	internal struct Character
	{
		[Token(Token = "0x4000FD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal bool initialized;

		[Token(Token = "0x4000FD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int[] indexBehaviorEffects;

		[Token(Token = "0x4000FD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int[] indexAppearanceEffects;

		[Token(Token = "0x4000FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CharacterSourceData sources;

		[Token(Token = "0x4000FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CharacterData data;

		[Token(Token = "0x6000E9B")]
		[Address(RVA = "0x10775A4", Offset = "0x10775A4", VA = "0x10775A4")]
		public void ResetVertices()
		{
		}

		[Token(Token = "0x6000E9C")]
		[Address(RVA = "0x1077628", Offset = "0x1077628", VA = "0x1077628")]
		public void ResetColors()
		{
		}

		[Token(Token = "0x6000E9D")]
		[Address(RVA = "0x107769C", Offset = "0x107769C", VA = "0x107769C")]
		public void Hide()
		{
		}
	}
	[Token(Token = "0x200022D")]
	internal struct CharacterSourceData
	{
		[Token(Token = "0x4000FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Color32[] colors;

		[Token(Token = "0x4000FD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector3[] vertices;
	}
	[Token(Token = "0x200022E")]
	public struct CharacterData
	{
		[Token(Token = "0x4000FD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float passedTime;

		[Token(Token = "0x4000FD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Color32[] colors;

		[Token(Token = "0x4000FD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3[] vertices;

		[Token(Token = "0x4000FDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TMP_CharacterInfo tmp_CharInfo;
	}
	[Token(Token = "0x200022F")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x8CCA14", Offset = "0x8CCA14")]
	public sealed class EffectInfoAttribute : Attribute
	{
		[Token(Token = "0x4000FDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string tag;

		[Token(Token = "0x6000E9E")]
		[Address(RVA = "0xCC7A58", Offset = "0xCC7A58", VA = "0xCC7A58")]
		public EffectInfoAttribute(string tag)
		{
		}
	}
	[Token(Token = "0x2000230")]
	public abstract class EffectsBase
	{
		[Token(Token = "0x2000231")]
		internal class RegionManager
		{
			[Token(Token = "0x2000232")]
			private struct TextRegion
			{
				[Token(Token = "0x4000FE1")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public int startIndex;

				[Token(Token = "0x4000FE2")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
				public int endIndex;

				[Token(Token = "0x6000EAE")]
				[Address(RVA = "0x190D5B4", Offset = "0x190D5B4", VA = "0x190D5B4")]
				public TextRegion(int startIndex)
				{
				}
			}

			[Token(Token = "0x4000FDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string entireRichTextTag;

			[Token(Token = "0x4000FE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private List<TextRegion> textRegions;

			[Token(Token = "0x6000EA8")]
			[Address(RVA = "0xC174FC", Offset = "0xC174FC", VA = "0xC174FC")]
			internal bool IsLastRegionClosed()
			{
				return default(bool);
			}

			[Token(Token = "0x6000EA9")]
			[Address(RVA = "0xC1757C", Offset = "0xC1757C", VA = "0xC1757C")]
			internal void AddRegion(int startIndex)
			{
			}

			[Token(Token = "0x6000EAA")]
			[Address(RVA = "0xC175FC", Offset = "0xC175FC", VA = "0xC175FC")]
			internal bool TryReutilizingWithTag(string richTextTag, int indexNewRegionStart)
			{
				return default(bool);
			}

			[Token(Token = "0x6000EAB")]
			[Address(RVA = "0xC17658", Offset = "0xC17658", VA = "0xC17658")]
			internal void CloseEffect(int index)
			{
			}

			[Token(Token = "0x6000EAC")]
			[Address(RVA = "0xC17708", Offset = "0xC17708", VA = "0xC17708")]
			internal bool IsCharInsideRegion(int charIndex)
			{
				return default(bool);
			}

			[Token(Token = "0x6000EAD")]
			[Address(RVA = "0xC17858", Offset = "0xC17858", VA = "0xC17858")]
			public RegionManager()
			{
			}
		}

		[Token(Token = "0x4000FDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DACF8", Offset = "0x8DACF8")]
		private string <effectTag>k__BackingField;

		[Token(Token = "0x4000FDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float uniformIntensity;

		[Token(Token = "0x4000FDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal RegionManager regionManager;

		[Token(Token = "0x1700017D")]
		public string effectTag
		{
			[Token(Token = "0x6000E9F")]
			[Address(RVA = "0xCC7A84", Offset = "0xCC7A84", VA = "0xCC7A84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E0E14", Offset = "0x8E0E14")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000EA0")]
			[Address(RVA = "0xCC7A8C", Offset = "0xCC7A8C", VA = "0xCC7A8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E0E24", Offset = "0x8E0E24")]
			private set
			{
			}
		}

		[Token(Token = "0x1700017E")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8E1E88", Offset = "0x8E1E88")]
		public float effectIntensity
		{
			[Token(Token = "0x6000EA1")]
			[Address(RVA = "0xCC7A94", Offset = "0xCC7A94", VA = "0xCC7A94")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000EA2")]
		[Address(RVA = "0xCC7A9C", Offset = "0xCC7A9C", VA = "0xCC7A9C")]
		internal void _Initialize(string effectTag, string entireRichTextTag)
		{
		}

		[Token(Token = "0x6000EA3")]
		[Address(RVA = "0xCC7ABC", Offset = "0xCC7ABC", VA = "0xCC7ABC")]
		protected void ApplyModifierTo(ref float value, string modifierValue)
		{
		}

		[Token(Token = "0x6000EA4")]
		[Address(RVA = "0xCC7B00", Offset = "0xCC7B00", VA = "0xCC7B00", Slot = "4")]
		public virtual void Initialize(int charactersCount)
		{
		}

		[Token(Token = "0x6000EA5")]
		[Address(RVA = "0xCC7B04", Offset = "0xCC7B04", VA = "0xCC7B04", Slot = "5")]
		public virtual void Calculate()
		{
		}

		[Token(Token = "0x6000EA6")]
		public abstract void ApplyEffect(ref CharacterData data, int charIndex);

		[Token(Token = "0x6000EA7")]
		[Address(RVA = "0xCC7B08", Offset = "0xCC7B08", VA = "0xCC7B08")]
		protected EffectsBase()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000233")]
	public class AppearanceDefaultValues
	{
		[Serializable]
		[Token(Token = "0x2000234")]
		public class Defaults
		{
			[Token(Token = "0x4000FE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[PositiveValue]
			public float sizeDuration;

			[Token(Token = "0x4000FE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "MinValueAttribute", RVA = "0x8DADB0", Offset = "0x8DADB0")]
			public float sizeAmplitude;

			[Token(Token = "0x4000FE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[PositiveValue]
			public float fadeDuration;

			[Token(Token = "0x4000FE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[PositiveValue]
			public float verticalExpandDuration;

			[Token(Token = "0x4000FEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool verticalFromBottom;

			[Token(Token = "0x4000FEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[PositiveValue]
			public float horizontalExpandDuration;

			[Token(Token = "0x4000FEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[SerializeField]
			internal HorizontalExpandAppearance.ExpType horizontalExpandStart;

			[Token(Token = "0x4000FED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[PositiveValue]
			public float diagonalExpandDuration;

			[Token(Token = "0x4000FEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool diagonalFromBttmLeft;

			[Token(Token = "0x4000FEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			[NotZero]
			public Vector2 offsetDir;

			[Token(Token = "0x4000FF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			[PositiveValue]
			public float offsetDuration;

			[Token(Token = "0x4000FF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[NotZero]
			public float offsetAmplitude;

			[Token(Token = "0x4000FF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			[PositiveValue]
			public float rotationDuration;

			[Token(Token = "0x4000FF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public float rotationStartAngle;

			[Token(Token = "0x6000EB0")]
			[Address(RVA = "0xC13B54", Offset = "0xC13B54", VA = "0xC13B54")]
			public Defaults()
			{
			}
		}

		[Token(Token = "0x4000FE3")]
		private const float defDuration = 0.3f;

		[Token(Token = "0x4000FE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DAD08", Offset = "0x8DAD08")]
		public Defaults defaults;

		[Token(Token = "0x4000FE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DAD54", Offset = "0x8DAD54")]
		[SerializeField]
		internal PresetAppearanceValues[] presets;

		[Token(Token = "0x6000EAF")]
		[Address(RVA = "0xD69454", Offset = "0xD69454", VA = "0xD69454")]
		public AppearanceDefaultValues()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000235")]
	public class BehaviorDefaultValues
	{
		[Serializable]
		[Token(Token = "0x2000236")]
		public class Defaults
		{
			[Token(Token = "0x4000FF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[NotZero]
			public float wiggleAmplitude;

			[Token(Token = "0x4000FF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[NotZero]
			public float wiggleFrequency;

			[Token(Token = "0x4000FF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[NotZero]
			public float waveFrequency;

			[Token(Token = "0x4000FF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[NotZero]
			public float waveAmplitude;

			[Token(Token = "0x4000FFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float waveWaveSize;

			[Token(Token = "0x4000FFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[NotZero]
			public float angleSpeed;

			[Token(Token = "0x4000FFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float angleDiffBetweenChars;

			[Token(Token = "0x4000FFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[NotZero]
			public float swingAmplitude;

			[Token(Token = "0x4000FFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[NotZero]
			public float swingFrequency;

			[Token(Token = "0x4000FFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float swingWaveSize;

			[Token(Token = "0x4001000")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[NotZero]
			public float shakeStrength;

			[Token(Token = "0x4001001")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			[PositiveValue]
			public float shakeDelay;

			[Token(Token = "0x4001002")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public float sizeAmplitude;

			[Token(Token = "0x4001003")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			[NotZero]
			public float sizeFrequency;

			[Token(Token = "0x4001004")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public float sizeWaveSize;

			[Token(Token = "0x4001005")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			[NotZero]
			public float slideAmplitude;

			[Token(Token = "0x4001006")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[NotZero]
			public float slideFrequency;

			[Token(Token = "0x4001007")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public float slideWaveSize;

			[Token(Token = "0x4001008")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[NotZero]
			public float bounceAmplitude;

			[Token(Token = "0x4001009")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			[NotZero]
			public float bounceFrequency;

			[Token(Token = "0x400100A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public float bounceWaveSize;

			[Token(Token = "0x400100B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			[NotZero]
			public float hueShiftSpeed;

			[Token(Token = "0x400100C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public float hueShiftWaveSize;

			[Token(Token = "0x400100D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			[PositiveValue]
			public float fadeDelay;

			[Token(Token = "0x400100E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			[NotZero]
			public float dangleAmplitude;

			[Token(Token = "0x400100F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			[NotZero]
			public float dangleFrequency;

			[Token(Token = "0x4001010")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public float dangleWaveSize;

			[Token(Token = "0x4001011")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
			public bool dangleAnchorBottom;

			[Token(Token = "0x4001012")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			[NotZero]
			public float pendAmplitude;

			[Token(Token = "0x4001013")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			[NotZero]
			public float pendFrequency;

			[Token(Token = "0x4001014")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public float pendWaveSize;

			[Token(Token = "0x4001015")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
			public bool pendInverted;

			[Token(Token = "0x6000EB2")]
			[Address(RVA = "0xC14DCC", Offset = "0xC14DCC", VA = "0xC14DCC")]
			public Defaults()
			{
			}
		}

		[Token(Token = "0x4000FF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DAE54", Offset = "0x8DAE54")]
		public Defaults defaults;

		[Token(Token = "0x4000FF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DAEA0", Offset = "0x8DAEA0")]
		internal PresetBehaviorValues[] presets;

		[Token(Token = "0x6000EB1")]
		[Address(RVA = "0xD75344", Offset = "0xD75344", VA = "0xD75344")]
		public BehaviorDefaultValues()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000237")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8CCA48", Offset = "0x8CCA48")]
	public class BuiltinAppearancesDataScriptable : BuiltinDataScriptableBase<AppearanceDefaultValues.Defaults>
	{
		[Token(Token = "0x6000EB3")]
		[Address(RVA = "0x10731AC", Offset = "0x10731AC", VA = "0x10731AC")]
		public BuiltinAppearancesDataScriptable()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000238")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8CCA94", Offset = "0x8CCA94")]
	public class BuiltinBehaviorsDataScriptable : BuiltinDataScriptableBase<BehaviorDefaultValues.Defaults>
	{
		[Token(Token = "0x6000EB4")]
		[Address(RVA = "0x10731F8", Offset = "0x10731F8", VA = "0x10731F8")]
		public BuiltinBehaviorsDataScriptable()
		{
		}
	}
	[Token(Token = "0x2000239")]
	public class BuiltinDataScriptableBase<T> : ScriptableObject where T : new()
	{
		[Token(Token = "0x4001016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		internal T effectValues;

		[Token(Token = "0x6000EB5")]
		public BuiltinDataScriptableBase()
		{
		}
	}
	[Token(Token = "0x200023A")]
	internal struct EventMarker
	{
		[Token(Token = "0x4001017")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int charIndex;

		[Token(Token = "0x4001018")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string eventMessage;

		[Token(Token = "0x4001019")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool triggered;

		[Token(Token = "0x400101A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int internalOrder;
	}
	[Token(Token = "0x200023B")]
	public static class TAnimBuilder
	{
		[Serializable]
		[Token(Token = "0x200023C")]
		internal struct TagFormatting
		{
			[Token(Token = "0x4001024")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public char charOpeningTag;

			[Token(Token = "0x4001025")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
			public char charClosingTag;

			[Token(Token = "0x6000EC6")]
			[Address(RVA = "0x190AC94", Offset = "0x190AC94", VA = "0x190AC94")]
			public TagFormatting(char openingChar, char closingChar)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200023D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCAE0", Offset = "0x8CCAE0")]
		private sealed class <>c
		{
			[Token(Token = "0x4001026")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x6000EC8")]
			[Address(RVA = "0x190AC8C", Offset = "0x190AC8C", VA = "0x190AC8C")]
			public <>c()
			{
			}

			[Token(Token = "0x6000EC9")]
			internal IEnumerable<Type> <InitializeGlobalDatabase>b__14_2<T>(Assembly domainAssembly) where T : EffectsBase
			{
				return null;
			}

			[Token(Token = "0x6000ECA")]
			internal <>f__AnonymousType0<Assembly, Type> <InitializeGlobalDatabase>b__14_3<T>(Assembly domainAssembly, Type assemblyType) where T : EffectsBase
			{
				return null;
			}

			[Token(Token = "0x6000ECB")]
			internal bool <InitializeGlobalDatabase>b__14_4<T>(<>f__AnonymousType0<Assembly, Type> <>h__TransparentIdentifier0) where T : EffectsBase
			{
				return default(bool);
			}

			[Token(Token = "0x6000ECC")]
			internal bool <InitializeGlobalDatabase>b__14_5<T>(<>f__AnonymousType0<Assembly, Type> <>h__TransparentIdentifier0) where T : EffectsBase
			{
				return default(bool);
			}

			[Token(Token = "0x6000ECD")]
			internal Type <InitializeGlobalDatabase>b__14_6<T>(<>f__AnonymousType0<Assembly, Type> <>h__TransparentIdentifier0) where T : EffectsBase
			{
				return null;
			}
		}

		[Token(Token = "0x400101B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static TagFormatting tag_behaviors;

		[Token(Token = "0x400101C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal static TagFormatting tag_appearances;

		[Token(Token = "0x400101D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static TAnimGlobalDataScriptable _data;

		[Token(Token = "0x400101E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static bool hasData;

		[Token(Token = "0x400101F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Dictionary<string, Type> behaviorsData;

		[Token(Token = "0x4001020")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static Dictionary<string, Type> appearancesData;

		[Token(Token = "0x4001021")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static HashSet<string> globalDefaultActions;

		[Token(Token = "0x4001022")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static HashSet<string> globalCustomActions;

		[Token(Token = "0x4001023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static bool globalDatabaseInitialized;

		[Token(Token = "0x1700017F")]
		internal static TAnimGlobalDataScriptable data
		{
			[Token(Token = "0x6000EB6")]
			[Address(RVA = "0xE0ADD8", Offset = "0xE0ADD8", VA = "0xE0ADD8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EB7")]
		[Address(RVA = "0xE0AE3C", Offset = "0xE0AE3C", VA = "0xE0AE3C")]
		internal static string[] GetAllBehaviorsTags()
		{
			return null;
		}

		[Token(Token = "0x6000EB8")]
		[Address(RVA = "0xE0AFD8", Offset = "0xE0AFD8", VA = "0xE0AFD8")]
		internal static string[] GetAllApppearancesTags()
		{
			return null;
		}

		[Token(Token = "0x6000EB9")]
		[Address(RVA = "0xE0B174", Offset = "0xE0B174", VA = "0xE0B174")]
		public static void InitializeGlobalDatabase()
		{
		}

		[Token(Token = "0x6000EBA")]
		[Address(RVA = "0xE0BFA0", Offset = "0xE0BFA0", VA = "0xE0BFA0")]
		internal static bool TryGetGlobalPresetBehavior(string tag, out PresetBehaviorValues result)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EBB")]
		[Address(RVA = "0xE0C0B4", Offset = "0xE0C0B4", VA = "0xE0C0B4")]
		internal static bool TryGetGlobalPresetAppearance(string tag, out PresetAppearanceValues result)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EBC")]
		internal static bool GetPresetFromArray<T>(string tag, T[] presets, out T result) where T : PresetBaseValues
		{
			return default(bool);
		}

		[Token(Token = "0x6000EBD")]
		[Address(RVA = "0xE0C1C8", Offset = "0xE0C1C8", VA = "0xE0C1C8")]
		internal static bool IsDefaultAction(string tag)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EBE")]
		[Address(RVA = "0xE0C2A8", Offset = "0xE0C2A8", VA = "0xE0C2A8")]
		internal static bool IsCustomAction(string tag)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EBF")]
		[Address(RVA = "0xE0C388", Offset = "0xE0C388", VA = "0xE0C388")]
		internal static bool TryGetGlobalBehaviorFromTag(string effectTag, string entireRichTextTag, out BehaviorBase effectClass)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EC0")]
		[Address(RVA = "0xE0C424", Offset = "0xE0C424", VA = "0xE0C424")]
		internal static bool TryGetGlobalAppearanceFromTag(string effectTag, string entireRichTextTag, out AppearanceBase effectClass)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EC1")]
		internal static bool TryGetEffectClassFromTag<T>(Dictionary<string, Type> dictionary, string effectTag, string entireRichTextTag, out T effectClass) where T : EffectsBase
		{
			return default(bool);
		}

		[Token(Token = "0x6000EC2")]
		[Address(RVA = "0xE0BDDC", Offset = "0xE0BDDC", VA = "0xE0BDDC")]
		internal static void TryAddingPresetToDictionary(ref Dictionary<string, Type> database, string tag, Type type)
		{
		}

		[Token(Token = "0x6000EC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E0E34", Offset = "0x8E0E34")]
		internal static void <InitializeGlobalDatabase>g__PopulateEffectsFromAssembly|14_0<T>(ref Dictionary<string, Type> effectsList) where T : EffectsBase
		{
		}

		[Token(Token = "0x6000EC5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E0E44", Offset = "0x8E0E44")]
		internal static List<Type> <InitializeGlobalDatabase>g__GetAssemblyClasses|14_1<T>() where T : EffectsBase
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x200023E")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8CCAF0", Offset = "0x8CCAF0")]
	public class TAnimGlobalDataScriptable : ScriptableObject
	{
		[Token(Token = "0x4001027")]
		public const string resourcesPath = "TextAnimator GlobalData";

		[Token(Token = "0x4001028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		internal PresetBehaviorValues[] globalBehaviorPresets;

		[Token(Token = "0x4001029")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		internal PresetAppearanceValues[] globalAppearancePresets;

		[Token(Token = "0x400102A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		internal string[] customActions;

		[Token(Token = "0x400102B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		internal bool customTagsFormatting;

		[Token(Token = "0x400102C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		[SerializeField]
		internal TAnimBuilder.TagFormatting tagInfo_behaviors;

		[Token(Token = "0x400102D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
		[SerializeField]
		internal TAnimBuilder.TagFormatting tagInfo_appearances;

		[Token(Token = "0x6000ECE")]
		[Address(RVA = "0xE0C630", Offset = "0xE0C630", VA = "0xE0C630")]
		public TAnimGlobalDataScriptable()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200023F")]
	public class CharacterEvent : UnityEvent<char>
	{
		[Token(Token = "0x6000ECF")]
		[Address(RVA = "0x1078E38", Offset = "0x1078E38", VA = "0x1078E38")]
		public CharacterEvent()
		{
		}
	}
	[Token(Token = "0x2000240")]
	[DisallowMultipleComponent]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8CCB3C", Offset = "0x8CCB3C")]
	public abstract class TAnimPlayerBase : MonoBehaviour
	{
		[Token(Token = "0x2000241")]
		[Flags]
		private enum StartTypewriterMode
		{
			[Token(Token = "0x400103D")]
			FromScriptOnly = 0,
			[Token(Token = "0x400103E")]
			OnEnable = 1,
			[Token(Token = "0x400103F")]
			OnShowText = 2,
			[Token(Token = "0x4001040")]
			AutomaticallyFromAllEvents = 3
		}

		[StructLayout(3)]
		[Token(Token = "0x2000242")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCBBC", Offset = "0x8CCBBC")]
		private struct <>c__DisplayClass19_0
		{
			[Token(Token = "0x4001041")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float deltaTime;

			[Token(Token = "0x4001042")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float typewriterTagsSpeed;
		}

		[Token(Token = "0x2000243")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCBCC", Offset = "0x8CCBCC")]
		private sealed class <ShowRemainingCharacters>d__19 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001043")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001044")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001045")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TAnimPlayerBase <>4__this;

			[Token(Token = "0x4001046")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private <>c__DisplayClass19_0 <>8__1;

			[Token(Token = "0x4001047")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <timeToWait>5__2;

			[Token(Token = "0x4001048")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <timePassed>5__3;

			[Token(Token = "0x17000182")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000EE5")]
				[Address(RVA = "0x190B2EC", Offset = "0x190B2EC", VA = "0x190B2EC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000183")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000EE7")]
				[Address(RVA = "0x190B334", Offset = "0x190B334", VA = "0x190B334", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000EE2")]
			[Address(RVA = "0x190ADEC", Offset = "0x190ADEC", VA = "0x190ADEC")]
			[DebuggerHidden]
			public <ShowRemainingCharacters>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x6000EE3")]
			[Address(RVA = "0x190AE18", Offset = "0x190AE18", VA = "0x190AE18", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000EE4")]
			[Address(RVA = "0x190AE1C", Offset = "0x190AE1C", VA = "0x190AE1C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000EE6")]
			[Address(RVA = "0x190B2F4", Offset = "0x190B2F4", VA = "0x190B2F4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000244")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCBDC", Offset = "0x8CCBDC")]
		private sealed class <<ShowRemainingCharacters>g__WaitTime|19_0>d : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001049")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400104A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400104B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float time;

			[Token(Token = "0x400104C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TAnimPlayerBase <>4__this;

			[Token(Token = "0x400104D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <t>5__2;

			[Token(Token = "0x17000184")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000EEB")]
				[Address(RVA = "0x190AD9C", Offset = "0x190AD9C", VA = "0x190AD9C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000185")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000EED")]
				[Address(RVA = "0x190ADE4", Offset = "0x190ADE4", VA = "0x190ADE4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000EE8")]
			[Address(RVA = "0x190ACA0", Offset = "0x190ACA0", VA = "0x190ACA0")]
			[DebuggerHidden]
			public <<ShowRemainingCharacters>g__WaitTime|19_0>d(int <>1__state)
			{
			}

			[Token(Token = "0x6000EE9")]
			[Address(RVA = "0x190ACCC", Offset = "0x190ACCC", VA = "0x190ACCC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000EEA")]
			[Address(RVA = "0x190ACD0", Offset = "0x190ACD0", VA = "0x190ACD0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000EEC")]
			[Address(RVA = "0x190ADA4", Offset = "0x190ADA4", VA = "0x190ADA4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400102E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string textToShow;

		[Token(Token = "0x400102F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextAnimator _textAnimator;

		[Token(Token = "0x4001030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool isInsideRoutine;

		[Token(Token = "0x4001031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		protected bool wantsToSkip;

		[Token(Token = "0x4001032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DB09C", Offset = "0x8DB09C")]
		public bool useTypeWriter;

		[Token(Token = "0x4001033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DB0E8", Offset = "0x8DB0E8")]
		[SerializeField]
		private StartTypewriterMode startTypewriterMode;

		[Token(Token = "0x4001034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool canSkipTypewriter;

		[Token(Token = "0x4001035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[SerializeField]
		private bool hideAppearancesOnSkip;

		[Token(Token = "0x4001036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DB154", Offset = "0x8DB154")]
		private bool triggerEventsOnSkip;

		[Token(Token = "0x4001037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DB1A0", Offset = "0x8DB1A0")]
		private bool resetTypingSpeedAtStartup;

		[Token(Token = "0x4001038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		protected float typewriterPlayerSpeed;

		[Token(Token = "0x4001039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UnityEvent onTextShowed;

		[Token(Token = "0x400103A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UnityEvent onTypewriterStart;

		[Token(Token = "0x400103B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public CharacterEvent onCharacterVisible;

		[Token(Token = "0x17000180")]
		public TextAnimator textAnimator
		{
			[Token(Token = "0x6000ED0")]
			[Address(RVA = "0xE0C720", Offset = "0xE0C720", VA = "0xE0C720")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000181")]
		protected bool isBaseInsideRoutine
		{
			[Token(Token = "0x6000ED1")]
			[Address(RVA = "0xE0C850", Offset = "0xE0C850", VA = "0xE0C850")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000ED2")]
		[Address(RVA = "0xE0C858", Offset = "0xE0C858", VA = "0xE0C858")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E0E54", Offset = "0x8E0E54")]
		private IEnumerator ShowRemainingCharacters()
		{
			return null;
		}

		[Token(Token = "0x6000ED3")]
		[Address(RVA = "0xE0C8C4", Offset = "0xE0C8C4", VA = "0xE0C8C4")]
		public void ShowText(string text)
		{
		}

		[Token(Token = "0x6000ED4")]
		[Address(RVA = "0xE0CA9C", Offset = "0xE0CA9C", VA = "0xE0CA9C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E0EB4", Offset = "0x8E0EB4")]
		public void StartShowingText()
		{
		}

		[Token(Token = "0x6000ED5")]
		[Address(RVA = "0xE0CBA8", Offset = "0xE0CBA8", VA = "0xE0CBA8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E0EEC", Offset = "0x8E0EEC")]
		public void SkipTypewriter()
		{
		}

		[Token(Token = "0x6000ED6")]
		[Address(RVA = "0xE0CA14", Offset = "0xE0CA14", VA = "0xE0CA14")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E0F24", Offset = "0x8E0F24")]
		public void StopShowingText()
		{
		}

		[Token(Token = "0x6000ED7")]
		[Address(RVA = "0xE0CBB4", Offset = "0xE0CBB4", VA = "0xE0CBB4")]
		public void SetTypewriterSpeed(float value)
		{
		}

		[Token(Token = "0x6000ED8")]
		protected abstract IEnumerator WaitInput();

		[Token(Token = "0x6000ED9")]
		protected abstract float WaitTimeOf(char character);

		[Token(Token = "0x6000EDA")]
		[Address(RVA = "0xE0CBE8", Offset = "0xE0CBE8", VA = "0xE0CBE8", Slot = "6")]
		protected virtual IEnumerator DoCustomAction(TypewriterAction action)
		{
			return null;
		}

		[Token(Token = "0x6000EDB")]
		[Address(RVA = "0xE0CC64", Offset = "0xE0CC64", VA = "0xE0CC64", Slot = "7")]
		protected virtual void OnTypewriterCharDelay()
		{
		}

		[Token(Token = "0x6000EDC")]
		[Address(RVA = "0xE0CC68", Offset = "0xE0CC68", VA = "0xE0CC68", Slot = "8")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000EDD")]
		[Address(RVA = "0xE0CC70", Offset = "0xE0CC70", VA = "0xE0CC70", Slot = "9")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000EDE")]
		[Address(RVA = "0xE0CD14", Offset = "0xE0CD14", VA = "0xE0CD14")]
		protected TAnimPlayerBase()
		{
		}

		[Token(Token = "0x6000EDF")]
		[Address(RVA = "0xE0CD90", Offset = "0xE0CD90", VA = "0xE0CD90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E0F5C", Offset = "0x8E0F5C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E0F5C", Offset = "0x8E0F5C")]
		private IEnumerator <ShowRemainingCharacters>g__WaitTime|19_0(float time)
		{
			return null;
		}

		[Token(Token = "0x6000EE0")]
		[Address(RVA = "0xE0CE0C", Offset = "0xE0CE0C", VA = "0xE0CE0C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E0FCC", Offset = "0x8E0FCC")]
		private bool <ShowRemainingCharacters>g__HasSkipped|19_1()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EE1")]
		[Address(RVA = "0xE0CE2C", Offset = "0xE0CE2C", VA = "0xE0CE2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E0FDC", Offset = "0x8E0FDC")]
		private void <ShowRemainingCharacters>g__UpdateDeltaTime|19_2(ref <>c__DisplayClass19_0 P_0)
		{
		}
	}
	[Token(Token = "0x2000245")]
	public static class FormatUtils
	{
		[Token(Token = "0x6000EEE")]
		[Address(RVA = "0x1535D54", Offset = "0x1535D54", VA = "0x1535D54")]
		public static bool TryGetFloat(List<string> attributes, int index, float defValue, out float result)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EEF")]
		[Address(RVA = "0x1535E04", Offset = "0x1535E04", VA = "0x1535E04")]
		public static bool TryGetFloat(string attribute, float defValue, out float result)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EF0")]
		[Address(RVA = "0x1535E44", Offset = "0x1535E44", VA = "0x1535E44")]
		public static bool ParseFloat(string value, out float result)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000246")]
	internal static class TAnimExtensions
	{
		[Token(Token = "0x6000EF1")]
		internal static int GetIndexOfEffect<T>(this List<T> effects, string tag) where T : EffectsBase
		{
			return default(int);
		}

		[Token(Token = "0x6000EF2")]
		internal static bool CloseElement<T>(this List<T> effects, int listIndex, int realTextIndex) where T : EffectsBase
		{
			return default(bool);
		}

		[Token(Token = "0x6000EF3")]
		internal static bool CloseRegionNamed<T>(this List<T> effects, string endTag, int realTextIndex) where T : EffectsBase
		{
			return default(bool);
		}

		[Token(Token = "0x6000EF4")]
		internal static bool TryAddingNewRegion<T>(this List<T> effects, T region) where T : EffectsBase
		{
			return default(bool);
		}

		[Token(Token = "0x6000EF5")]
		internal static bool CloseSingleOrAllEffects<T>(this List<T> effects, string closureTag, int realTextIndex) where T : EffectsBase
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000247")]
	public static class TextUtilities
	{
		[Token(Token = "0x400104E")]
		public const int verticesPerChar = 4;

		[Token(Token = "0x400104F")]
		internal const int fakeRandomsCount = 25;

		[Token(Token = "0x4001050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static Vector3[] fakeRandoms;

		[Token(Token = "0x4001051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static bool initialized;

		[Token(Token = "0x6000EF6")]
		[Address(RVA = "0x11403D4", Offset = "0x11403D4", VA = "0x11403D4")]
		internal static void Initialize()
		{
		}

		[Token(Token = "0x6000EF7")]
		[Address(RVA = "0x11406A4", Offset = "0x11406A4", VA = "0x11406A4")]
		public static Vector3 RotateAround(this Vector3 vec, Vector2 center, float rotDegrees)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000EF8")]
		[Address(RVA = "0x1140740", Offset = "0x1140740", VA = "0x1140740")]
		public static void MoveChar(this Vector3[] vec, Vector3 dir)
		{
		}

		[Token(Token = "0x6000EF9")]
		[Address(RVA = "0x11407B4", Offset = "0x11407B4", VA = "0x11407B4")]
		public static void SetChar(this Vector3[] vec, Vector3 pos)
		{
		}

		[Token(Token = "0x6000EFA")]
		[Address(RVA = "0x1140814", Offset = "0x1140814", VA = "0x1140814")]
		public static void LerpUnclamped(this Vector3[] vec, Vector3 target, float pct)
		{
		}

		[Token(Token = "0x6000EFB")]
		[Address(RVA = "0x114089C", Offset = "0x114089C", VA = "0x114089C")]
		public static Vector3 GetMiddlePos(this Vector3[] vec)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000EFC")]
		[Address(RVA = "0x11408FC", Offset = "0x11408FC", VA = "0x11408FC")]
		public static void RotateChar(this Vector3[] vec, float angle)
		{
		}

		[Token(Token = "0x6000EFD")]
		[Address(RVA = "0x1140A90", Offset = "0x1140A90", VA = "0x1140A90")]
		public static void RotateChar(this Vector3[] vec, float angle, Vector3 pivot)
		{
		}

		[Token(Token = "0x6000EFE")]
		[Address(RVA = "0x1140C04", Offset = "0x1140C04", VA = "0x1140C04")]
		public static void SetColor(this Color32[] col, Color32 target)
		{
		}

		[Token(Token = "0x6000EFF")]
		[Address(RVA = "0x1140C58", Offset = "0x1140C58", VA = "0x1140C58")]
		public static void LerpUnclamped(this Color32[] col, Color32 target, float pct)
		{
		}

		[Token(Token = "0x6000F00")]
		[Address(RVA = "0x1140CF0", Offset = "0x1140CF0", VA = "0x1140CF0")]
		public static float CalculateCurveDuration(this AnimationCurve curve)
		{
			return default(float);
		}

		[Token(Token = "0x6000F01")]
		[Address(RVA = "0x1140D84", Offset = "0x1140D84", VA = "0x1140D84")]
		public static bool IsTagLongEnough(string tag)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000248")]
	public static class Tween
	{
		[Token(Token = "0x6000F03")]
		[Address(RVA = "0x11479F0", Offset = "0x11479F0", VA = "0x11479F0")]
		public static float EaseIn(float t)
		{
			return default(float);
		}

		[Token(Token = "0x6000F04")]
		[Address(RVA = "0x11479F8", Offset = "0x11479F8", VA = "0x11479F8")]
		public static float Flip(float x)
		{
			return default(float);
		}

		[Token(Token = "0x6000F05")]
		[Address(RVA = "0x1147A04", Offset = "0x1147A04", VA = "0x1147A04")]
		public static float Square(float t)
		{
			return default(float);
		}

		[Token(Token = "0x6000F06")]
		[Address(RVA = "0x1147A0C", Offset = "0x1147A0C", VA = "0x1147A0C")]
		public static float EaseOut(float t)
		{
			return default(float);
		}

		[Token(Token = "0x6000F07")]
		[Address(RVA = "0x1147A20", Offset = "0x1147A20", VA = "0x1147A20")]
		public static float EaseInOut(float t)
		{
			return default(float);
		}

		[Token(Token = "0x6000F08")]
		[Address(RVA = "0x1147A40", Offset = "0x1147A40", VA = "0x1147A40")]
		public static float BounceOut(float t)
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000249")]
	public abstract class AppearanceBase : EffectsBase
	{
		[Token(Token = "0x4001052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float effectDuration;

		[Token(Token = "0x17000186")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8E1EC0", Offset = "0x8E1EC0")]
		protected float showDuration
		{
			[Token(Token = "0x6000F09")]
			[Address(RVA = "0xD69428", Offset = "0xD69428", VA = "0xD69428")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000F0A")]
		public abstract void SetDefaultValues(AppearanceDefaultValues data);

		[Token(Token = "0x6000F0B")]
		[Address(RVA = "0xD69430", Offset = "0xD69430", VA = "0xD69430", Slot = "8")]
		public virtual bool CanShowAppearanceOn(float timePassed)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F0C")]
		[Address(RVA = "0xD69440", Offset = "0xD69440", VA = "0xD69440")]
		protected AppearanceBase()
		{
		}
	}
	[Token(Token = "0x200024A")]
	[Preserve]
	[AttributeAttribute(Name = "EffectInfoAttribute", RVA = "0x8CCC0C", Offset = "0x8CCC0C")]
	internal class DiagonalExpandAppearance : AppearanceBase
	{
		[Token(Token = "0x4001053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int targetA;

		[Token(Token = "0x4001054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int targetB;

		[Token(Token = "0x4001055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 middlePos;

		[Token(Token = "0x4001056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float pct;

		[Token(Token = "0x6000F0D")]
		[Address(RVA = "0xCC32C0", Offset = "0xCC32C0", VA = "0xCC32C0", Slot = "7")]
		public override void SetDefaultValues(AppearanceDefaultValues data)
		{
		}

		[Token(Token = "0x6000F0E")]
		[Address(RVA = "0xCC3308", Offset = "0xCC3308", VA = "0xCC3308", Slot = "6")]
		public override void ApplyEffect(ref CharacterData data, int charIndex)
		{
		}

		[Token(Token = "0x6000F0F")]
		[Address(RVA = "0xCC3450", Offset = "0xCC3450", VA = "0xCC3450")]
		public DiagonalExpandAppearance()
		{
		}
	}
	[Token(Token = "0x200024B")]
	[Preserve]
	[AttributeAttribute(Name = "EffectInfoAttribute", RVA = "0x8CCC58", Offset = "0x8CCC58")]
	internal class FadeAppearance : AppearanceBase
	{
		[Token(Token = "0x6000F10")]
		[Address(RVA = "0x153174C", Offset = "0x153174C", VA = "0x153174C", Slot = "7")]
		public override void SetDefaultValues(AppearanceDefaultValues data)
		{
		}

		[Token(Token = "0x6000F11")]
		[Address(RVA = "0x1531774", Offset = "0x1531774", VA = "0x1531774", Slot = "6")]
		public override void ApplyEffect(ref CharacterData data, int charIndex)
		{
		}

		[Token(Token = "0x6000F12")]
		[Address(RVA = "0x153182C", Offset = "0x153182C", VA = "0x153182C")]
		public FadeAppearance()
		{
		}
	}
	[Token(Token = "0x200024C")]
	[Preserve]
	[AttributeAttribute(Name = "EffectInfoAttribute", RVA = "0x8CCCA4", Offset = "0x8CCCA4")]
	internal class HorizontalExpandAppearance : AppearanceBase
	{
		[Token(Token = "0x200024D")]
		public enum ExpType
		{
			[Token(Token = "0x400105C")]
			Left,
			[Token(Token = "0x400105D")]
			Middle,
			[Token(Token = "0x400105E")]
			Right
		}

		[Token(Token = "0x4001057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private ExpType type;

		[Token(Token = "0x4001058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector2 startTop;

		[Token(Token = "0x4001059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector2 startBot;

		[Token(Token = "0x400105A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float pct;

		[Token(Token = "0x6000F13")]
		[Address(RVA = "0x156A0F4", Offset = "0x156A0F4", VA = "0x156A0F4", Slot = "7")]
		public override void SetDefaultValues(AppearanceDefaultValues data)
		{
		}

		[Token(Token = "0x6000F14")]
		[Address(RVA = "0x156A12C", Offset = "0x156A12C", VA = "0x156A12C", Slot = "6")]
		public override void ApplyEffect(ref CharacterData data, int charIndex)
		{
		}

		[Token(Token = "0x6000F15")]
		[Address(RVA = "0x156A400", Offset = "0x156A400", VA = "0x156A400")]
		public HorizontalExpandAppearance()
		{
		}
	}
	[Token(Token = "0x200024E")]
	[Preserve]
	[AttributeAttribute(Name = "EffectInfoAttribute", RVA = "0x8CCCF0", Offset = "0x8CCCF0")]
	internal class OffsetAppearance : AppearanceBase
	{
		[Token(Token = "0x400105F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float amount;

		[Token(Token = "0x4001060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector2 direction;

		[Token(Token = "0x6000F16")]
		[Address(RVA = "0xC2528C", Offset = "0xC2528C", VA = "0xC2528C", Slot = "7")]
		public override void SetDefaultValues(AppearanceDefaultValues data)
		{
		}

		[Token(Token = "0x6000F17")]
		[Address(RVA = "0xC252DC", Offset = "0xC252DC", VA = "0xC252DC", Slot = "6")]
		public override void ApplyEffect(ref CharacterData data, int charIndex)
		{
		}

		[Token(Token = "0x6000F18")]
		[Address(RVA = "0xC2539C", Offset = "0xC2539C", VA = "0xC2539C")]
		public OffsetAppearance()
		{
		}
	}
	[Token(Token = "0x200024F")]
	[Preserve]
	[AttributeAttribute(Name = "EffectInfoAttribute", RVA = "0x8CCD3C", Offset = "0x8CCD3C")]
	internal class RotatingAppearance : AppearanceBase
	{
		[Token(Token = "0x4001061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float targetAngle;

		[Token(Token = "0x6000F19")]
		[Address(RVA = "0xE60398", Offset = "0xE60398", VA = "0xE60398", Slot = "7")]
		public override void SetDefaultValues(AppearanceDefaultValues data)
		{
		}

		[Token(Token = "0x6000F1A")]
		[Address(RVA = "0xE603D0", Offset = "0xE603D0", VA = "0xE603D0", Slot = "6")]
		public override void ApplyEffect(ref CharacterData data, int charIndex)
		{
		}

		[Token(Token = "0x6000F1B")]
		[Address(RVA = "0xE6047C", Offset = "0xE6047C", VA = "0xE6047C")]
		public RotatingAppearance()
		{
		}
	}
	[Token(Token = "0x2000250")]
	[Preserve]
	[AttributeAttribute(Name = "EffectInfoAttribute", RVA = "0x8CCD88", Offset = "0x8CCD88")]
	internal class SizeAppearance : AppearanceBase
	{
		[Token(Token = "0x4001062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float amplitude;

		[Token(Token = "0x6000F1C")]
		[Address(RVA = "0xE652C8", Offset = "0xE652C8", VA = "0xE652C8", Slot = "7")]
		public override void SetDefaultValues(AppearanceDefaultValues data)
		{
		}

		[Token(Token = "0x6000F1D")]
		[Address(RVA = "0xE65308", Offset = "0xE65308", VA = "0xE65308", Slot = "6")]
		public override void ApplyEffect(ref CharacterData data, int charIndex)
		{
		}

		[Token(Token = "0x6000F1E")]
		[Address(RVA = "0xE653D4", Offset = "0xE653D4", VA = "0xE653D4")]
		public SizeAppearance()
		{
		}
	}
	[Token(Token = "0x2000251")]
	[Preserve]
	[AttributeAttribute(Name = "EffectInfoAttribute", RVA = "0x8CCDD4", Offset = "0x8CCDD4")]
	internal class VerticalExpandAppearance : AppearanceBase
	{
		[Token(Token = "0x4001063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int startA;

		[Token(Token = "0x4001064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int targetA;

		[Token(Token = "0x4001065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int startB;

		[Token(Token = "0x4001066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int targetB;

		[Token(Token = "0x4001067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float pct;

		[Token(Token = "0x6000F1F")]
		[Address(RVA = "0xC107A0", Offset = "0xC107A0", VA = "0xC107A0", Slot = "7")]
		public override void SetDefaultValues(AppearanceDefaultValues data)
		{
		}

		[Token(Token = "0x6000F20")]
		[Address(RVA = "0xC107F0", Offset = "0xC107F0", VA = "0xC107F0", Slot = "6")]
		public override void ApplyEffect(ref CharacterData data, int charIndex)
		{
		}

		[Token(Token = "0x6000F21")]
		[Address(RVA = "0xC10904", Offset = "0xC10904", VA = "0xC10904")]
		public VerticalExpandAppearance()
		{
		}
	}
	[Token(Token = "0x2000252")]
	[AttributeAttribute(Name = "EffectInfoAttribute", RVA = "0x8CCE20", Offset = "0x8CCE20")]
	[Preserve]
	internal class PresetAppearance : AppearanceBase
	{
		[Token(Token = "0x2000253")]
		internal abstract class Effector
		{
			[Token(Token = "0x6000F27")]
			protected abstract Vector3 _EvaluateEffect(float passedTime, int charInde);

			[Token(Token = "0x6000F28")]
			[Address(RVA = "0x1906F50", Offset = "0x1906F50", VA = "0x1906F50")]
			public Vector3 EvaluateEffect(float passedTime, int charIndex)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6000F29")]
			[Address(RVA = "0x1906F5C", Offset = "0x1906F5C", VA = "0x1906F5C")]
			protected Effector()
			{
			}
		}

		[Token(Token = "0x2000254")]
		internal sealed class ThreeAxisEffector : Effector
		{
			[Token(Token = "0x4001073")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private EffectEvaluator x;

			[Token(Token = "0x4001074")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private EffectEvaluator y;

			[Token(Token = "0x4001075")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private EffectEvaluator z;

			[Token(Token = "0x6000F2A")]
			[Address(RVA = "0x1906F64", Offset = "0x1906F64", VA = "0x1906F64")]
			public ThreeAxisEffector(EffectEvaluator x, EffectEvaluator y, EffectEvaluator z)
			{
			}

			[Token(Token = "0x6000F2B")]
			[Address(RVA = "0x1906FA4", Offset = "0x1906FA4", VA = "0x1906FA4", Slot = "4")]
			protected override Vector3 _EvaluateEffect(float passedTime, int charIndex)
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x2000255")]
		internal sealed class TwoAxisEffector : Effector
		{
			[Token(Token = "0x4001076")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private EffectEvaluator x;

			[Token(Token = "0x4001077")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private EffectEvaluator y;

			[Token(Token = "0x6000F2C")]
			[Address(RVA = "0x190717C", Offset = "0x190717C", VA = "0x190717C")]
			public TwoAxisEffector(EffectEvaluator x, EffectEvaluator y)
			{
			}

			[Token(Token = "0x6000F2D")]
			[Address(RVA = "0x19071B4", Offset = "0x19071B4", VA = "0x19071B4", Slot = "4")]
			protected override Vector3 _EvaluateEffect(float passedTime, int charIndex)
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x4001068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool enabled;

		[Token(Token = "0x4001069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Matrix4x4 matrix;

		[Token(Token = "0x400106A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 offset;

		[Token(Token = "0x400106B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Quaternion rotationQua;

		[Token(Token = "0x400106C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool hasTransformEffects;

		[Token(Token = "0x400106D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private ThreeAxisEffector movement;

		[Token(Token = "0x400106E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private ThreeAxisEffector rotation;

		[Token(Token = "0x400106F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private TwoAxisEffector scale;

		[Token(Token = "0x4001070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private bool setColor;

		[Token(Token = "0x4001071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private Color32 color;

		[Token(Token = "0x4001072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private ColorCurve colorCurve;

		[Token(Token = "0x6000F22")]
		[Address(RVA = "0x10A3C38", Offset = "0x10A3C38", VA = "0x10A3C38", Slot = "7")]
		public override void SetDefaultValues(AppearanceDefaultValues data)
		{
		}

		[Token(Token = "0x6000F23")]
		public static bool SetPreset<T>(bool isAppearance, T values, ref ThreeAxisEffector movement, ref float showDuration, ref ThreeAxisEffector rotation, ref TwoAxisEffector scale, ref Quaternion rotationQua, ref bool hasTransformEffects, ref bool setColor, ref ColorCurve colorCurve) where T : PresetBaseValues
		{
			return default(bool);
		}

		[Token(Token = "0x6000F24")]
		[Address(RVA = "0x10A3DC4", Offset = "0x10A3DC4", VA = "0x10A3DC4", Slot = "6")]
		public override void ApplyEffect(ref CharacterData data, int charIndex)
		{
		}

		[Token(Token = "0x6000F25")]
		[Address(RVA = "0x10A40E0", Offset = "0x10A40E0", VA = "0x10A40E0")]
		public PresetAppearance()
		{
		}

		[Token(Token = "0x6000F26")]
		[Address(RVA = "0x10A3D2C", Offset = "0x10A3D2C", VA = "0x10A3D2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E117C", Offset = "0x8E117C")]
		private void <SetDefaultValues>g__AssignValues|11_0(PresetAppearanceValues result)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000256")]
	internal class PresetAppearanceValues : PresetBaseValues
	{
		[Token(Token = "0x6000F2E")]
		[Address(RVA = "0x10A40E8", Offset = "0x10A40E8", VA = "0x10A40E8")]
		public PresetAppearanceValues()
		{
		}
	}
	[Token(Token = "0x2000257")]
	public abstract class BehaviorBase : EffectsBase
	{
		[Token(Token = "0x4001078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DB1EC", Offset = "0x8DB1EC")]
		private TextAnimator.TimeData <time>k__BackingField;

		[Token(Token = "0x17000187")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8E1EF8", Offset = "0x8E1EF8")]
		public float animatorTime
		{
			[Token(Token = "0x6000F31")]
			[Address(RVA = "0xD75310", Offset = "0xD75310", VA = "0xD75310")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000188")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8E1F30", Offset = "0x8E1F30")]
		public float animatorDeltaTime
		{
			[Token(Token = "0x6000F32")]
			[Address(RVA = "0xD75318", Offset = "0xD75318", VA = "0xD75318")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000189")]
		public TextAnimator.TimeData time
		{
			[Token(Token = "0x6000F33")]
			[Address(RVA = "0xD75320", Offset = "0xD75320", VA = "0xD75320")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E118C", Offset = "0x8E118C")]
			get
			{
				return default(TextAnimator.TimeData);
			}
			[Token(Token = "0x6000F34")]
			[Address(RVA = "0xD75328", Offset = "0xD75328", VA = "0xD75328")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E119C", Offset = "0x8E119C")]
			private set
			{
			}
		}

		[Token(Token = "0x6000F2F")]
		public abstract void SetDefaultValues(BehaviorDefaultValues data);

		[Token(Token = "0x6000F30")]
		public abstract void SetModifier(string modifierName, string modifierValue);

		[Token(Token = "0x6000F35")]
		[Address(RVA = "0xD75330", Offset = "0xD75330", VA = "0xD75330")]
		internal void SetAnimatorData(in TextAnimator.TimeData time)
		{
		}

		[Token(Token = "0x6000F36")]
		[Address(RVA = "0xD7533C", Offset = "0xD7533C", VA = "0xD7533C")]
		protected BehaviorBase()
		{
		}
	}
	[Token(Token = "0x2000258")]
	public abstract class BehaviorSine : BehaviorBase
	{
		[Token(Token = "0x4001079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected float amplitude;

		[Token(Token = "0x400107A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		protected float frequency;

		[Token(Token = "0x400107B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected float waveSize;

		[Token(Token = "0x6000F37")]
		[Address(RVA = "0xD753CC", Offset = "0xD753CC", VA = "0xD753CC", Slot = "8")]
		public override void SetModifier(string modifierName, string modifierValue)
		{
		}

		[Token(Token = "0x6000F38")]
		[Address(RVA = "0xD754B8", Offset = "0xD754B8", VA = "0xD754B8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000F39")]
		[Address(RVA = "0xD75708", Offset = "0xD75708", VA = "0xD75708")]
		protected BehaviorSine()
		{
		}
	}
	[Token(Token = "0x2000259")]
	[AttributeAttribute(Name = "EffectInfoAttribute", RVA = "0x8CCE6C", Offset = "0x8CCE6C")]
	[Preserve]
	internal class BounceBehavior : BehaviorSine
	{
		[Token(Token = "0x6000F3A")]
		[Address(RVA = "0x107300C", Offset = "0x107300C", VA = "0x107300C", Slot = "7")]
		public override void SetDefaultValues(BehaviorDefaultValues data)
		{
		}

		[Token(Token = "0x6000F3B")]
		[Address(RVA = "0x1073054", Offset = "0x1073054", VA = "0x1073054", Slot = "6")]
		public override void ApplyEffect(ref CharacterData data, int charIndex)
		{
		}

		[Token(Token = "0x6000F3C")]
		[Address(RVA = "0x10731A4", Offset = "0x10731A4", VA = "0x10731A4")]
		public BounceBehavior()
		{
		}

		[Token(Token = "0x6000F3D")]
		[Address(RVA = "0x1073144", Offset = "0x1073144", VA = "0x1073144")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E11AC", Offset = "0x8E11AC")]
		internal static float <ApplyEffect>g__BounceTween|1_0(float t)
		{
			return default(float);
		}
	}
	[Token(Token = "0x200025A")]
	[AttributeAttribute(Name = "EffectInfoAttribute", RVA = "0x8CCEB8", Offset = "0x8CCEB8")]
	[Preserve]
	internal class DangleBehavior : BehaviorSine
	{
		[Token(Token = "0x400107C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float sin;

		[Token(Token = "0x400107D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int targetIndex1;

		[Token(Token = "0x400107E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int targetIndex2;

		[Token(Token = "0x6000F3E")]
		[Address(RVA = "0xCC10DC", Offset = "0xCC10DC", VA = "0xCC10DC", Slot = "7")]
		public override void SetDefaultValues(BehaviorDefaultValues data)
		{
		}

		[Token(Token = "0x6000F3F")]
		[Address(RVA = "0xCC1140", Offset = "0xCC1140", VA = "0xCC1140", Slot = "6")]
		public override void ApplyEffect(ref CharacterData data, int charIndex)
		{
		}

		[Token(Token = "0x6000F40")]
		[Address(RVA = "0xCC1250", Offset = "0xCC1250", VA = "0xCC1250")]
		public DangleBehavior()
		{
		}
	}
	[Token(Token = "0x200025B")]
	[AttributeAttribute(Name = "EffectInfoAttribute", RVA = "0x8CCF04", Offset = "0x8CCF04")]
	[Preserve]
	internal class FadeBehavior : BehaviorBase
	{
		[Token(Token = "0x400107F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float delay;

		[Token(Token = "0x4001080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float[] charPCTs;

		[Token(Token = "0x6000F41")]
		[Address(RVA = "0x1531834", Offset = "0x1531834", VA = "0x1531834", Slot = "7")]
		public override void SetDefaultValues(BehaviorDefaultValues data)
		{
		}

		[Token(Token = "0x6000F42")]
		[Address(RVA = "0x153185C", Offset = "0x153185C", VA = "0x153185C", Slot = "4")]
		public override void Initialize(int charactersCount)
		{
		}

		[Token(Token = "0x6000F43")]
		[Address(RVA = "0x15318CC", Offset = "0x15318CC", VA = "0x15318CC", Slot = "8")]
		public override void SetModifier(string modifierName, string modifierValue)
		{
		}

		[Token(Token = "0x6000F44")]
		[Address(RVA = "0x1531958", Offset = "0x1531958", VA = "0x1531958", Slot = "6")]
		public override void ApplyEffect(ref CharacterData data, int charIndex)
		{
		}

		[Token(Token = "0x6000F45")]
		[Address(RVA = "0x1531B04", Offset = "0x1531B04", VA = "0x1531B04", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000F46")]
		[Address(RVA = "0x1531BC4", Offset = "0x1531BC4", VA = "0x1531BC4")]
		public FadeBehavior()
		{
		}
	}
	[Token(Token = "0x200025C")]
	[AttributeAttribute(Name = "EffectInfoAttribute", RVA = "0x8CCF50", Offset = "0x8CCF50")]
	[Preserve]
	internal class PendulumBehavior : BehaviorSine
	{
		[Token(Token = "0x4001081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int targetVertex1;

		[Token(Token = "0x4001082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int targetVertex2;

		[Token(Token = "0x6000F47")]
		[Address(RVA = "0xC25E14", Offset = "0xC25E14", VA = "0xC25E14", Slot = "7")]
		public override void SetDefaultValues(BehaviorDefaultValues data)
		{
		}

		[Token(Token = "0x6000F48")]
		[Address(RVA = "0xC25E7C", Offset = "0xC25E7C", VA = "0xC25E7C", Slot = "6")]
		public override void ApplyEffect(ref CharacterData data, int charIndex)
		{
		}

		[Token(Token = "0x6000F49")]
		[Address(RVA = "0xC25FB0", Offset = "0xC25FB0", VA = "0xC25FB0")]
		public PendulumBehavior()
		{
		}
	}
	[Token(Token = "0x200025D")]
	[AttributeAttribute(Name = "EffectInfoAttribute", RVA = "0x8CCF9C", Offset = "0x8CCF9C")]
	[Preserve]
	internal class RainbowBehavior : BehaviorBase
	{
		[Token(Token = "0x4001083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float hueShiftSpeed;

		[Token(Token = "0x4001084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float hueShiftWaveSize;

		[Token(Token = "0x6000F4A")]
		[Address(RVA = "0xE5E008", Offset = "0xE5E008", VA = "0xE5E008", Slot = "7")]
		public override void SetDefaultValues(BehaviorDefaultValues data)
		{
		}

		[Token(Token = "0x6000F4B")]
		[Address(RVA = "0xE5E040", Offset = "0xE5E040", VA = "0xE5E040", Slot = "8")]
		public override void SetModifier(string modifierName, string modifierValue)
		{
		}

		[Token(Token = "0x6000F4C")]
		[Address(RVA = "0xE5E0FC", Offset = "0xE5E0FC", VA = "0xE5E0FC", Slot = "6")]
		public override void ApplyEffect(ref CharacterData data, int charIndex)
		{
		}

		[Token(Token = "0x6000F4D")]
		[Address(RVA = "0xE5E1B8", Offset = "0xE5E1B8", VA = "0xE5E1B8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000F4E")]
		[Address(RVA = "0xE5E2BC", Offset = "0xE5E2BC", VA = "0xE5E2BC")]
		public RainbowBehavior()
		{
		}
	}
	[Token(Token = "0x200025E")]
	[AttributeAttribute(Name = "EffectInfoAttribute", RVA = "0x8CCFE8", Offset = "0x8CCFE8")]
	[Preserve]
	internal class RotationBehavior : BehaviorBase
	{
		[Token(Token = "0x4001085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float angleSpeed;

		[Token(Token = "0x4001086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float angleDiffBetweenChars;

		[Token(Token = "0x6000F4F")]
		[Address(RVA = "0xE604FC", Offset = "0xE604FC", VA = "0xE604FC", Slot = "7")]
		public override void SetDefaultValues(BehaviorDefaultValues data)
		{
		}

		[Token(Token = "0x6000F50")]
		[Address(RVA = "0xE60534", Offset = "0xE60534", VA = "0xE60534", Slot = "8")]
		public override void SetModifier(string modifierName, string modifierValue)
		{
		}

		[Token(Token = "0x6000F51")]
		[Address(RVA = "0xE605F0", Offset = "0xE605F0", VA = "0xE605F0", Slot = "6")]
		public override void ApplyEffect(ref CharacterData data, int charIndex)
		{
		}

		[Token(Token = "0x6000F52")]
		[Address(RVA = "0xE60690", Offset = "0xE60690", VA = "0xE60690", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000F53")]
		[Address(RVA = "0xE60794", Offset = "0xE60794", VA = "0xE60794")]
		public RotationBehavior()
		{
		}
	}
	[Token(Token = "0x200025F")]
	[Preserve]
	[AttributeAttribute(Name = "EffectInfoAttribute", RVA = "0x8CD034", Offset = "0x8CD034")]
	internal class ShakeBehavior : BehaviorBase
	{
		[Token(Token = "0x4001087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float shakeStrength;

		[Token(Token = "0x4001088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float shakeDelay;

		[Token(Token = "0x4001089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float timePassed;

		[Token(Token = "0x400108A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int randIndex;

		[Token(Token = "0x400108B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int lastRandomIndex;

		[Token(Token = "0x6000F54")]
		[Address(RVA = "0xE6363C", Offset = "0xE6363C", VA = "0xE6363C", Slot = "7")]
		public override void SetDefaultValues(BehaviorDefaultValues data)
		{
		}

		[Token(Token = "0x6000F55")]
		[Address(RVA = "0xE6369C", Offset = "0xE6369C", VA = "0xE6369C")]
		private void ClampValues()
		{
		}

		[Token(Token = "0x6000F56")]
		[Address(RVA = "0xE636D8", Offset = "0xE636D8", VA = "0xE636D8", Slot = "4")]
		public override void Initialize(int charactersCount)
		{
		}

		[Token(Token = "0x6000F57")]
		[Address(RVA = "0xE63710", Offset = "0xE63710", VA = "0xE63710", Slot = "8")]
		public override void SetModifier(string modifierName, string modifierValue)
		{
		}

		[Token(Token = "0x6000F58")]
		[Address(RVA = "0xE637E0", Offset = "0xE637E0", VA = "0xE637E0", Slot = "5")]
		public override void Calculate()
		{
		}

		[Token(Token = "0x6000F59")]
		[Address(RVA = "0xE6384C", Offset = "0xE6384C", VA = "0xE6384C", Slot = "6")]
		public override void ApplyEffect(ref CharacterData data, int charIndex)
		{
		}

		[Token(Token = "0x6000F5A")]
		[Address(RVA = "0xE63958", Offset = "0xE63958", VA = "0xE63958", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000F5B")]
		[Address(RVA = "0xE63A5C", Offset = "0xE63A5C", VA = "0xE63A5C")]
		public ShakeBehavior()
		{
		}
	}
	[Token(Token = "0x2000260")]
	[Preserve]
	[AttributeAttribute(Name = "EffectInfoAttribute", RVA = "0x8CD080", Offset = "0x8CD080")]
	internal sealed class SizeBehavior : BehaviorSine
	{
		[Token(Token = "0x6000F5C")]
		[Address(RVA = "0xE653DC", Offset = "0xE653DC", VA = "0xE653DC", Slot = "7")]
		public override void SetDefaultValues(BehaviorDefaultValues data)
		{
		}

		[Token(Token = "0x6000F5D")]
		[Address(RVA = "0xE6542C", Offset = "0xE6542C", VA = "0xE6542C", Slot = "6")]
		public override void ApplyEffect(ref CharacterData data, int charIndex)
		{
		}

		[Token(Token = "0x6000F5E")]
		[Address(RVA = "0xE6550C", Offset = "0xE6550C", VA = "0xE6550C")]
		public SizeBehavior()
		{
		}
	}
	[Token(Token = "0x2000261")]
	[Preserve]
	[AttributeAttribute(Name = "EffectInfoAttribute", RVA = "0x8CD0CC", Offset = "0x8CD0CC")]
	internal class SlideBehavior : BehaviorSine
	{
		[Token(Token = "0x400108C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float sin;

		[Token(Token = "0x6000F5F")]
		[Address(RVA = "0xE6603C", Offset = "0xE6603C", VA = "0xE6603C", Slot = "7")]
		public override void SetDefaultValues(BehaviorDefaultValues data)
		{
		}

		[Token(Token = "0x6000F60")]
		[Address(RVA = "0xE66084", Offset = "0xE66084", VA = "0xE66084", Slot = "6")]
		public override void ApplyEffect(ref CharacterData data, int charIndex)
		{
		}

		[Token(Token = "0x6000F61")]
		[Address(RVA = "0xE66208", Offset = "0xE66208", VA = "0xE66208")]
		public SlideBehavior()
		{
		}
	}
	[Token(Token = "0x2000262")]
	[Preserve]
	[AttributeAttribute(Name = "EffectInfoAttribute", RVA = "0x8CD118", Offset = "0x8CD118")]
	internal class SwingBehavior : BehaviorSine
	{
		[Token(Token = "0x6000F62")]
		[Address(RVA = "0xE0A37C", Offset = "0xE0A37C", VA = "0xE0A37C", Slot = "7")]
		public override void SetDefaultValues(BehaviorDefaultValues data)
		{
		}

		[Token(Token = "0x6000F63")]
		[Address(RVA = "0xE0A3C4", Offset = "0xE0A3C4", VA = "0xE0A3C4", Slot = "6")]
		public override void ApplyEffect(ref CharacterData data, int charIndex)
		{
		}

		[Token(Token = "0x6000F64")]
		[Address(RVA = "0xE0A46C", Offset = "0xE0A46C", VA = "0xE0A46C")]
		public SwingBehavior()
		{
		}
	}
	[Token(Token = "0x2000263")]
	[Preserve]
	[AttributeAttribute(Name = "EffectInfoAttribute", RVA = "0x8CD164", Offset = "0x8CD164")]
	internal class WaveBehavior : BehaviorSine
	{
		[Token(Token = "0x6000F65")]
		[Address(RVA = "0xC10EF0", Offset = "0xC10EF0", VA = "0xC10EF0", Slot = "7")]
		public override void SetDefaultValues(BehaviorDefaultValues data)
		{
		}

		[Token(Token = "0x6000F66")]
		[Address(RVA = "0xC10F38", Offset = "0xC10F38", VA = "0xC10F38", Slot = "6")]
		public override void ApplyEffect(ref CharacterData data, int charIndex)
		{
		}

		[Token(Token = "0x6000F67")]
		[Address(RVA = "0xC11028", Offset = "0xC11028", VA = "0xC11028")]
		public WaveBehavior()
		{
		}
	}
	[Token(Token = "0x2000264")]
	[AttributeAttribute(Name = "EffectInfoAttribute", RVA = "0x8CD1B0", Offset = "0x8CD1B0")]
	[Preserve]
	internal class WiggleBehavior : BehaviorBase
	{
		[Token(Token = "0x400108D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float amplitude;

		[Token(Token = "0x400108E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float frequency;

		[Token(Token = "0x400108F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3[] directions;

		[Token(Token = "0x6000F68")]
		[Address(RVA = "0xC11140", Offset = "0xC11140", VA = "0xC11140", Slot = "7")]
		public override void SetDefaultValues(BehaviorDefaultValues data)
		{
		}

		[Token(Token = "0x6000F69")]
		[Address(RVA = "0xC11178", Offset = "0xC11178", VA = "0xC11178", Slot = "4")]
		public override void Initialize(int charactersCount)
		{
		}

		[Token(Token = "0x6000F6A")]
		[Address(RVA = "0xC112E0", Offset = "0xC112E0", VA = "0xC112E0", Slot = "8")]
		public override void SetModifier(string modifierName, string modifierValue)
		{
		}

		[Token(Token = "0x6000F6B")]
		[Address(RVA = "0xC1139C", Offset = "0xC1139C", VA = "0xC1139C", Slot = "6")]
		public override void ApplyEffect(ref CharacterData data, int charIndex)
		{
		}

		[Token(Token = "0x6000F6C")]
		[Address(RVA = "0xC114A4", Offset = "0xC114A4", VA = "0xC114A4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000F6D")]
		[Address(RVA = "0xC115A8", Offset = "0xC115A8", VA = "0xC115A8")]
		public WiggleBehavior()
		{
		}
	}
	[Token(Token = "0x2000265")]
	[Preserve]
	[AttributeAttribute(Name = "EffectInfoAttribute", RVA = "0x8CD1FC", Offset = "0x8CD1FC")]
	internal class PresetBehavior : BehaviorBase
	{
		[Token(Token = "0x4001090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool enabled;

		[Token(Token = "0x4001091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float timeSpeed;

		[Token(Token = "0x4001092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float weightMult;

		[Token(Token = "0x4001093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Matrix4x4 matrix;

		[Token(Token = "0x4001094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Vector3 offset;

		[Token(Token = "0x4001095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Quaternion rotationQua;

		[Token(Token = "0x4001096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float uniformEffectTime;

		[Token(Token = "0x4001097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private bool hasTransformEffects;

		[Token(Token = "0x4001098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9D")]
		private bool isOnOneCharacter;

		[Token(Token = "0x4001099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float weight;

		[Token(Token = "0x400109A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private EmissionControl emissionControl;

		[Token(Token = "0x400109B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private PresetAppearance.ThreeAxisEffector movement;

		[Token(Token = "0x400109C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private PresetAppearance.ThreeAxisEffector rotation;

		[Token(Token = "0x400109D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private PresetAppearance.TwoAxisEffector scale;

		[Token(Token = "0x400109E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private bool setColor;

		[Token(Token = "0x400109F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private Color32 color;

		[Token(Token = "0x40010A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private ColorCurve colorCurve;

		[Token(Token = "0x6000F6E")]
		[Address(RVA = "0x10A441C", Offset = "0x10A441C", VA = "0x10A441C", Slot = "7")]
		public override void SetDefaultValues(BehaviorDefaultValues data)
		{
		}

		[Token(Token = "0x6000F6F")]
		[Address(RVA = "0x10A45F0", Offset = "0x10A45F0", VA = "0x10A45F0", Slot = "8")]
		public override void SetModifier(string modifierName, string modifierValue)
		{
		}

		[Token(Token = "0x6000F70")]
		[Address(RVA = "0x10A46AC", Offset = "0x10A46AC", VA = "0x10A46AC", Slot = "5")]
		public override void Calculate()
		{
		}

		[Token(Token = "0x6000F71")]
		[Address(RVA = "0x10A46EC", Offset = "0x10A46EC", VA = "0x10A46EC", Slot = "6")]
		public override void ApplyEffect(ref CharacterData data, int charIndex)
		{
		}

		[Token(Token = "0x6000F72")]
		[Address(RVA = "0x10A4AB0", Offset = "0x10A4AB0", VA = "0x10A4AB0")]
		public PresetBehavior()
		{
		}

		[Token(Token = "0x6000F73")]
		[Address(RVA = "0x10A4520", Offset = "0x10A4520", VA = "0x10A4520")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E11BC", Offset = "0x8E11BC")]
		private void <SetDefaultValues>g__AssignValues|17_0(PresetBehaviorValues result)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000266")]
	internal class PresetBehaviorValues : PresetBaseValues
	{
		[Token(Token = "0x40010A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		public EmissionControl emission;

		[Token(Token = "0x6000F74")]
		[Address(RVA = "0x10A4AC0", Offset = "0x10A4AC0", VA = "0x10A4AC0", Slot = "4")]
		public override void Initialize(bool isAppearance)
		{
		}

		[Token(Token = "0x6000F75")]
		[Address(RVA = "0x10A4AF8", Offset = "0x10A4AF8", VA = "0x10A4AF8")]
		public PresetBehaviorValues()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000267")]
	internal class ColorCurve
	{
		[Token(Token = "0x40010A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public bool enabled;

		[Token(Token = "0x40010A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Gradient gradient;

		[Token(Token = "0x40010A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "MinValueAttribute", RVA = "0x8DB22C", Offset = "0x8DB22C")]
		protected float duration;

		[Token(Token = "0x40010A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DB26C", Offset = "0x8DB26C")]
		protected float charsTimeOffset;

		[Token(Token = "0x40010A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool isAppearance;

		[Token(Token = "0x6000F76")]
		[Address(RVA = "0xCBD280", Offset = "0xCBD280", VA = "0xCBD280")]
		public float GetDuration()
		{
			return default(float);
		}

		[Token(Token = "0x6000F77")]
		[Address(RVA = "0xCBD288", Offset = "0xCBD288", VA = "0xCBD288")]
		public void Initialize(bool isAppearance)
		{
		}

		[Token(Token = "0x6000F78")]
		[Address(RVA = "0xCBD2B4", Offset = "0xCBD2B4", VA = "0xCBD2B4")]
		public Color32 GetColor(float time, int characterIndex)
		{
			return default(Color32);
		}

		[Token(Token = "0x6000F79")]
		[Address(RVA = "0xCBD350", Offset = "0xCBD350", VA = "0xCBD350")]
		public ColorCurve()
		{
		}
	}
	[Token(Token = "0x2000268")]
	internal interface EffectEvaluator
	{
		[Token(Token = "0x1700018A")]
		bool isEnabled
		{
			[Token(Token = "0x6000F7B")]
			get;
		}

		[Token(Token = "0x6000F7A")]
		void Initialize(int type);

		[Token(Token = "0x6000F7C")]
		float Evaluate(float time, int characterIndex);

		[Token(Token = "0x6000F7D")]
		float GetDuration();
	}
	[Serializable]
	[Token(Token = "0x2000269")]
	internal struct EmissionControl
	{
		[Token(Token = "0x40010A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "MinValueAttribute", RVA = "0x8DB2B0", Offset = "0x8DB2B0")]
		private int cycles;

		[Token(Token = "0x40010A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		private AnimationCurve attackCurve;

		[Token(Token = "0x40010A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		[AttributeAttribute(Name = "MinValueAttribute", RVA = "0x8DB2FC", Offset = "0x8DB2FC")]
		private float overrideDuration;

		[Token(Token = "0x40010AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private bool continueForever;

		[Token(Token = "0x40010AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AnimationCurve decayCurve;

		[NonSerialized]
		[Token(Token = "0x40010AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float maxDuration;

		[NonSerialized]
		[Token(Token = "0x40010AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AnimationCurve intensityOverDuration;

		[NonSerialized]
		[Token(Token = "0x40010AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float passedTime;

		[NonSerialized]
		[Token(Token = "0x40010AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float cycleDuration;

		[NonSerialized]
		[Token(Token = "0x40010B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float effectWeigth;

		[Token(Token = "0x6000F7E")]
		[Address(RVA = "0xCC816C", Offset = "0xCC816C", VA = "0xCC816C")]
		public void Initialize(float effectsMaxDuration)
		{
		}

		[Token(Token = "0x6000F7F")]
		[Address(RVA = "0xCC8474", Offset = "0xCC8474", VA = "0xCC8474")]
		public float IncreaseEffectTime(float deltaTime)
		{
			return default(float);
		}
	}
	[Serializable]
	[Token(Token = "0x200026A")]
	internal class FloatCurve : EffectEvaluator
	{
		[Token(Token = "0x40010B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool enabled;

		[Token(Token = "0x40010B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		protected float amplitude;

		[Token(Token = "0x40010B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected AnimationCurve curve;

		[Token(Token = "0x40010B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		[SerializeField]
		protected float defaultReturn;

		[Token(Token = "0x40010B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DB3B0", Offset = "0x8DB3B0")]
		protected float charsTimeOffset;

		[NonSerialized]
		[Token(Token = "0x40010B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float calculatedDuration;

		[Token(Token = "0x40010B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool isAppearance;

		[Token(Token = "0x1700018B")]
		public bool isEnabled
		{
			[Token(Token = "0x6000F80")]
			[Address(RVA = "0x153536C", Offset = "0x153536C", VA = "0x153536C", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000F81")]
		[Address(RVA = "0x1535374", Offset = "0x1535374", VA = "0x1535374", Slot = "7")]
		public float GetDuration()
		{
			return default(float);
		}

		[Token(Token = "0x6000F82")]
		[Address(RVA = "0x153537C", Offset = "0x153537C", VA = "0x153537C", Slot = "4")]
		public void Initialize(int type)
		{
		}

		[Token(Token = "0x6000F83")]
		[Address(RVA = "0x1535424", Offset = "0x1535424", VA = "0x1535424", Slot = "6")]
		public float Evaluate(float time, int characterIndex)
		{
			return default(float);
		}

		[Token(Token = "0x6000F84")]
		[Address(RVA = "0x1535504", Offset = "0x1535504", VA = "0x1535504")]
		public FloatCurve()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200026B")]
	internal class PresetBaseValues
	{
		[Token(Token = "0x40010B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string effectTag;

		[Token(Token = "0x40010B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public FloatCurve movementX;

		[Token(Token = "0x40010BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public FloatCurve movementY;

		[Token(Token = "0x40010BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public FloatCurve movementZ;

		[Token(Token = "0x40010BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public FloatCurve scaleX;

		[Token(Token = "0x40010BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		public FloatCurve scaleY;

		[Token(Token = "0x40010BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		public FloatCurve rotX;

		[Token(Token = "0x40010BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		public FloatCurve rotY;

		[Token(Token = "0x40010C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		public FloatCurve rotZ;

		[Token(Token = "0x40010C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		public ColorCurve color;

		[Token(Token = "0x6000F85")]
		[Address(RVA = "0x10A40F8", Offset = "0x10A40F8", VA = "0x10A40F8")]
		public float GetMaxDuration()
		{
			return default(float);
		}

		[Token(Token = "0x6000F86")]
		[Address(RVA = "0x10A432C", Offset = "0x10A432C", VA = "0x10A432C", Slot = "4")]
		public virtual void Initialize(bool isAppearance)
		{
		}

		[Token(Token = "0x6000F87")]
		[Address(RVA = "0x10A40F0", Offset = "0x10A40F0", VA = "0x10A40F0")]
		public PresetBaseValues()
		{
		}

		[Token(Token = "0x6000F88")]
		[Address(RVA = "0x10A4208", Offset = "0x10A4208", VA = "0x10A4208")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E11CC", Offset = "0x8E11CC")]
		internal static float <GetMaxDuration>g__GetEffectEvaluatorDuration|10_0(EffectEvaluator effect)
		{
			return default(float);
		}
	}
}
namespace DarkTonic.MasterAudio
{
	[Token(Token = "0x200026C")]
	[AttributeAttribute(Name = "AudioScriptOrder", RVA = "0x8CD248", Offset = "0x8CD248")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8CD248", Offset = "0x8CD248")]
	public class AmbientSound : MonoBehaviour
	{
		[Token(Token = "0x200026D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD298", Offset = "0x8CD298")]
		private sealed class <DelayStart>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40010D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40010D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40010D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AmbientSound <>4__this;

			[Token(Token = "0x1700018E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F9A")]
				[Address(RVA = "0xC13778", Offset = "0xC13778", VA = "0xC13778", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700018F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F9C")]
				[Address(RVA = "0xC137C0", Offset = "0xC137C0", VA = "0xC137C0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F97")]
			[Address(RVA = "0xC13654", Offset = "0xC13654", VA = "0xC13654")]
			[DebuggerHidden]
			public <DelayStart>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6000F98")]
			[Address(RVA = "0xC13680", Offset = "0xC13680", VA = "0xC13680", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F99")]
			[Address(RVA = "0xC13684", Offset = "0xC13684", VA = "0xC13684", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F9B")]
			[Address(RVA = "0xC13780", Offset = "0xC13780", VA = "0xC13780", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40010C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SoundGroup]
		public string AmbientSoundGroup;

		[Token(Token = "0x40010C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EventSounds.VariationType variationType;

		[Token(Token = "0x40010C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string variationName;

		[Token(Token = "0x40010C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float playVolume;

		[Token(Token = "0x40010C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public MasterAudio.AmbientSoundExitMode exitMode;

		[Token(Token = "0x40010C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float exitFadeTime;

		[Token(Token = "0x40010C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public MasterAudio.AmbientSoundReEnterMode reEnterMode;

		[Token(Token = "0x40010C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float reEnterFadeTime;

		[Token(Token = "0x40010CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DB494", Offset = "0x8DB494")]
		public bool FollowCaller;

		[Token(Token = "0x40010CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DB4CC", Offset = "0x8DB4CC")]
		public bool UseClosestColliderPosition;

		[Token(Token = "0x40010CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
		public bool UseTopCollider;

		[Token(Token = "0x40010CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x47")]
		public bool IncludeChildColliders;

		[Token(Token = "0x40010CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DB504", Offset = "0x8DB504")]
		public Transform RuntimeFollower;

		[Token(Token = "0x40010CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform _trans;

		[Token(Token = "0x40010D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float colliderMaxDistance;

		[Token(Token = "0x40010D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public long lastTimeMaxDistanceCalced;

		[Token(Token = "0x1700018C")]
		public bool IsValidSoundGroup
		{
			[Token(Token = "0x6000F94")]
			[Address(RVA = "0xD66638", Offset = "0xD66638", VA = "0xD66638")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700018D")]
		public Transform Trans
		{
			[Token(Token = "0x6000F95")]
			[Address(RVA = "0xD6682C", Offset = "0xD6682C", VA = "0xD6682C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F89")]
		[Address(RVA = "0xD66444", Offset = "0xD66444", VA = "0xD66444")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F8A")]
		[Address(RVA = "0xD664DC", Offset = "0xD664DC", VA = "0xD664DC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000F8B")]
		[Address(RVA = "0xD66470", Offset = "0xD66470", VA = "0xD66470")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E11DC", Offset = "0x8E11DC")]
		private IEnumerator DelayStart()
		{
			return null;
		}

		[Token(Token = "0x6000F8C")]
		[Address(RVA = "0xD664E0", Offset = "0xD664E0", VA = "0xD664E0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000F8D")]
		[Address(RVA = "0xD666CC", Offset = "0xD666CC", VA = "0xD666CC")]
		private void StopTrackers()
		{
		}

		[Token(Token = "0x6000F8E")]
		[Address(RVA = "0xD668B8", Offset = "0xD668B8", VA = "0xD668B8")]
		public void CalculateRadius()
		{
		}

		[Token(Token = "0x6000F8F")]
		[Address(RVA = "0xD669AC", Offset = "0xD669AC", VA = "0xD669AC")]
		public AudioSource GetNamedOrFirstAudioSource()
		{
			return null;
		}

		[Token(Token = "0x6000F90")]
		[Address(RVA = "0xD66B94", Offset = "0xD66B94", VA = "0xD66B94")]
		public List<AudioSource> GetAllVariationAudioSources()
		{
			return null;
		}

		[Token(Token = "0x6000F91")]
		[Address(RVA = "0xD66DC4", Offset = "0xD66DC4", VA = "0xD66DC4")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6000F92")]
		[Address(RVA = "0xD67044", Offset = "0xD67044", VA = "0xD67044")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6000F93")]
		[Address(RVA = "0xD672C4", Offset = "0xD672C4", VA = "0xD672C4")]
		public void StartTrackers()
		{
		}

		[Token(Token = "0x6000F96")]
		[Address(RVA = "0xD67F00", Offset = "0xD67F00", VA = "0xD67F00")]
		public AmbientSound()
		{
		}
	}
	[Token(Token = "0x200026E")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8CD2A8", Offset = "0x8CD2A8")]
	public class ButtonClicker : MonoBehaviour
	{
		[Token(Token = "0x40010D5")]
		public const float SmallSizeMultiplier = 0.9f;

		[Token(Token = "0x40010D6")]
		public const float LargeSizeMultiplier = 1.1f;

		[Token(Token = "0x40010D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool resizeOnClick;

		[Token(Token = "0x40010D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool resizeClickAllSiblings;

		[Token(Token = "0x40010D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool resizeOnHover;

		[Token(Token = "0x40010DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		public bool resizeHoverAllSiblings;

		[Token(Token = "0x40010DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string mouseDownSound;

		[Token(Token = "0x40010DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string mouseUpSound;

		[Token(Token = "0x40010DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string mouseClickSound;

		[Token(Token = "0x40010DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string mouseOverSound;

		[Token(Token = "0x40010DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string mouseOutSound;

		[Token(Token = "0x40010E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 _originalSize;

		[Token(Token = "0x40010E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 _smallerSize;

		[Token(Token = "0x40010E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 _largerSize;

		[Token(Token = "0x40010E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Transform _trans;

		[Token(Token = "0x40010E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private readonly Dictionary<Transform, Vector3> _siblingClickScaleByTransform;

		[Token(Token = "0x40010E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private readonly Dictionary<Transform, Vector3> _siblingHoverScaleByTransform;

		[Token(Token = "0x6000F9D")]
		[Address(RVA = "0x1073264", Offset = "0x1073264", VA = "0x1073264")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F9E")]
		[Address(RVA = "0x10734C8", Offset = "0x10734C8", VA = "0x10734C8")]
		private void OnPress(bool isDown)
		{
		}

		[Token(Token = "0x6000F9F")]
		[Address(RVA = "0x107371C", Offset = "0x107371C", VA = "0x107371C")]
		private void OnClick()
		{
		}

		[Token(Token = "0x6000FA0")]
		[Address(RVA = "0x10737B8", Offset = "0x10737B8", VA = "0x10737B8")]
		private void OnHover(bool isOver)
		{
		}

		[Token(Token = "0x6000FA1")]
		[Address(RVA = "0x1073A0C", Offset = "0x1073A0C", VA = "0x1073A0C")]
		public ButtonClicker()
		{
		}
	}
	[Token(Token = "0x200026F")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8CD2E0", Offset = "0x8CD2E0")]
	[AttributeAttribute(Name = "AudioScriptOrder", RVA = "0x8CD2E0", Offset = "0x8CD2E0")]
	public class EventSounds : MonoBehaviour, ICustomEventReceiver
	{
		[Token(Token = "0x2000270")]
		public enum UnityUIVersion
		{
			[Token(Token = "0x4001162")]
			Legacy,
			[Token(Token = "0x4001163")]
			uGUI
		}

		[Token(Token = "0x2000271")]
		public enum EventType
		{
			[Token(Token = "0x4001165")]
			OnStart,
			[Token(Token = "0x4001166")]
			OnVisible,
			[Token(Token = "0x4001167")]
			OnInvisible,
			[Token(Token = "0x4001168")]
			OnCollision,
			[Token(Token = "0x4001169")]
			OnTriggerEnter,
			[Token(Token = "0x400116A")]
			OnTriggerExit,
			[Token(Token = "0x400116B")]
			OnMouseEnter,
			[Token(Token = "0x400116C")]
			OnMouseClick,
			[Token(Token = "0x400116D")]
			OnSpawned,
			[Token(Token = "0x400116E")]
			OnDespawned,
			[Token(Token = "0x400116F")]
			OnEnable,
			[Token(Token = "0x4001170")]
			OnDisable,
			[Token(Token = "0x4001171")]
			OnCollision2D,
			[Token(Token = "0x4001172")]
			OnTriggerEnter2D,
			[Token(Token = "0x4001173")]
			OnTriggerExit2D,
			[Token(Token = "0x4001174")]
			OnParticleCollision,
			[Token(Token = "0x4001175")]
			UserDefinedEvent,
			[Token(Token = "0x4001176")]
			OnCollisionExit,
			[Token(Token = "0x4001177")]
			OnCollisionExit2D,
			[Token(Token = "0x4001178")]
			OnMouseUp,
			[Token(Token = "0x4001179")]
			OnMouseExit,
			[Token(Token = "0x400117A")]
			OnMouseDrag,
			[Token(Token = "0x400117B")]
			NGUIOnClick,
			[Token(Token = "0x400117C")]
			NGUIMouseDown,
			[Token(Token = "0x400117D")]
			NGUIMouseUp,
			[Token(Token = "0x400117E")]
			NGUIMouseEnter,
			[Token(Token = "0x400117F")]
			NGUIMouseExit,
			[Token(Token = "0x4001180")]
			MechanimStateChanged,
			[Token(Token = "0x4001181")]
			UnitySliderChanged,
			[Token(Token = "0x4001182")]
			UnityButtonClicked,
			[Token(Token = "0x4001183")]
			UnityPointerDown,
			[Token(Token = "0x4001184")]
			UnityPointerUp,
			[Token(Token = "0x4001185")]
			UnityPointerEnter,
			[Token(Token = "0x4001186")]
			UnityPointerExit,
			[Token(Token = "0x4001187")]
			UnityDrag,
			[Token(Token = "0x4001188")]
			UnityDrop,
			[Token(Token = "0x4001189")]
			UnityScroll,
			[Token(Token = "0x400118A")]
			UnityUpdateSelected,
			[Token(Token = "0x400118B")]
			UnitySelect,
			[Token(Token = "0x400118C")]
			UnityDeselect,
			[Token(Token = "0x400118D")]
			UnityMove,
			[Token(Token = "0x400118E")]
			UnityInitializePotentialDrag,
			[Token(Token = "0x400118F")]
			UnityBeginDrag,
			[Token(Token = "0x4001190")]
			UnityEndDrag,
			[Token(Token = "0x4001191")]
			UnitySubmit,
			[Token(Token = "0x4001192")]
			UnityCancel,
			[Token(Token = "0x4001193")]
			UnityToggle,
			[Token(Token = "0x4001194")]
			OnTriggerStay,
			[Token(Token = "0x4001195")]
			OnTriggerStay2D,
			[Token(Token = "0x4001196")]
			CodeTriggeredEvent1,
			[Token(Token = "0x4001197")]
			CodeTriggeredEvent2
		}

		[Token(Token = "0x2000272")]
		public enum GlidePitchType
		{
			[Token(Token = "0x4001199")]
			None,
			[Token(Token = "0x400119A")]
			RaisePitch,
			[Token(Token = "0x400119B")]
			LowerPitch
		}

		[Token(Token = "0x2000273")]
		public enum VariationType
		{
			[Token(Token = "0x400119D")]
			PlaySpecific,
			[Token(Token = "0x400119E")]
			PlayRandom
		}

		[Token(Token = "0x2000274")]
		public enum PreviousSoundStopMode
		{
			[Token(Token = "0x40011A0")]
			None,
			[Token(Token = "0x40011A1")]
			Stop,
			[Token(Token = "0x40011A2")]
			FadeOut
		}

		[Token(Token = "0x2000275")]
		public enum RetriggerLimMode
		{
			[Token(Token = "0x40011A4")]
			None,
			[Token(Token = "0x40011A5")]
			FrameBased,
			[Token(Token = "0x40011A6")]
			TimeBased
		}

		[Token(Token = "0x2000276")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD330", Offset = "0x8CD330")]
		private sealed class <CoUpdate>d__131 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40011A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40011A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40011A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public EventSounds <>4__this;

			[Token(Token = "0x17000193")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000FE9")]
				[Address(RVA = "0xC17AC0", Offset = "0xC17AC0", VA = "0xC17AC0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000194")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000FEB")]
				[Address(RVA = "0xC17B08", Offset = "0xC17B08", VA = "0xC17B08", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000FE6")]
			[Address(RVA = "0xC178FC", Offset = "0xC178FC", VA = "0xC178FC")]
			[DebuggerHidden]
			public <CoUpdate>d__131(int <>1__state)
			{
			}

			[Token(Token = "0x6000FE7")]
			[Address(RVA = "0xC17928", Offset = "0xC17928", VA = "0xC17928", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000FE8")]
			[Address(RVA = "0xC1792C", Offset = "0xC1792C", VA = "0xC1792C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000FEA")]
			[Address(RVA = "0xC17AC8", Offset = "0xC17AC8", VA = "0xC17AC8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000277")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD340", Offset = "0x8CD340")]
		private sealed class <>c__DisplayClass180_0
		{
			[Token(Token = "0x40011AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string stateName;

			[Token(Token = "0x6000FEC")]
			[Address(RVA = "0xC178D0", Offset = "0xC178D0", VA = "0xC178D0")]
			public <>c__DisplayClass180_0()
			{
			}

			[Token(Token = "0x6000FED")]
			[Address(RVA = "0xC178D8", Offset = "0xC178D8", VA = "0xC178D8")]
			internal bool <GetMechanimAudioEventGroup>b__0(AudioEventGroup grp)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40010E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool showGizmo;

		[Token(Token = "0x40010E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public MasterAudio.SoundSpawnLocationMode soundSpawnMode;

		[Token(Token = "0x40010E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool disableSounds;

		[Token(Token = "0x40010E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool showPoolManager;

		[Token(Token = "0x40010EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		public bool showNGUI;

		[Token(Token = "0x40010EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
		public bool multiplayerBroadcast;

		[Token(Token = "0x40010EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioEvent eventToGizmo;

		[Token(Token = "0x40010ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityUIVersion unityUIMode;

		[Token(Token = "0x40010EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool logMissingEvents;

		[Token(Token = "0x40010EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly List<EventType> DisallowedMultBroadcastEventType;

		[Token(Token = "0x40010F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static List<MasterAudio.EventSoundFunctionType> CommandTypesExcludedFromMultiplayerBroadcast;

		[Token(Token = "0x40010F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static List<string> LayerTagFilterEvents;

		[Token(Token = "0x40010F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static List<MasterAudio.PlaylistCommand> PlaylistCommandsWithAll;

		[Token(Token = "0x40010F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AudioEventGroup startSound;

		[Token(Token = "0x40010F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AudioEventGroup visibleSound;

		[Token(Token = "0x40010F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AudioEventGroup invisibleSound;

		[Token(Token = "0x40010F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AudioEventGroup collisionSound;

		[Token(Token = "0x40010F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AudioEventGroup collisionExitSound;

		[Token(Token = "0x40010F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public AudioEventGroup triggerSound;

		[Token(Token = "0x40010F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public AudioEventGroup triggerExitSound;

		[Token(Token = "0x40010FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public AudioEventGroup triggerStaySound;

		[Token(Token = "0x40010FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public AudioEventGroup mouseEnterSound;

		[Token(Token = "0x40010FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public AudioEventGroup mouseExitSound;

		[Token(Token = "0x40010FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public AudioEventGroup mouseClickSound;

		[Token(Token = "0x40010FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public AudioEventGroup mouseUpSound;

		[Token(Token = "0x40010FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public AudioEventGroup mouseDragSound;

		[Token(Token = "0x4001100")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public AudioEventGroup spawnedSound;

		[Token(Token = "0x4001101")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public AudioEventGroup despawnedSound;

		[Token(Token = "0x4001102")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public AudioEventGroup enableSound;

		[Token(Token = "0x4001103")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public AudioEventGroup disableSound;

		[Token(Token = "0x4001104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public AudioEventGroup collision2dSound;

		[Token(Token = "0x4001105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public AudioEventGroup collisionExit2dSound;

		[Token(Token = "0x4001106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public AudioEventGroup triggerEnter2dSound;

		[Token(Token = "0x4001107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public AudioEventGroup triggerStay2dSound;

		[Token(Token = "0x4001108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public AudioEventGroup triggerExit2dSound;

		[Token(Token = "0x4001109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public AudioEventGroup particleCollisionSound;

		[Token(Token = "0x400110A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public AudioEventGroup nguiOnClickSound;

		[Token(Token = "0x400110B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public AudioEventGroup nguiMouseDownSound;

		[Token(Token = "0x400110C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public AudioEventGroup nguiMouseUpSound;

		[Token(Token = "0x400110D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public AudioEventGroup nguiMouseEnterSound;

		[Token(Token = "0x400110E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public AudioEventGroup nguiMouseExitSound;

		[Token(Token = "0x400110F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public AudioEventGroup codeTriggeredEvent1Sound;

		[Token(Token = "0x4001110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public AudioEventGroup codeTriggeredEvent2Sound;

		[Token(Token = "0x4001111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public AudioEventGroup unitySliderChangedSound;

		[Token(Token = "0x4001112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public AudioEventGroup unityButtonClickedSound;

		[Token(Token = "0x4001113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public AudioEventGroup unityPointerDownSound;

		[Token(Token = "0x4001114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public AudioEventGroup unityDragSound;

		[Token(Token = "0x4001115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public AudioEventGroup unityPointerUpSound;

		[Token(Token = "0x4001116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public AudioEventGroup unityPointerEnterSound;

		[Token(Token = "0x4001117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public AudioEventGroup unityPointerExitSound;

		[Token(Token = "0x4001118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public AudioEventGroup unityDropSound;

		[Token(Token = "0x4001119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public AudioEventGroup unityScrollSound;

		[Token(Token = "0x400111A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public AudioEventGroup unityUpdateSelectedSound;

		[Token(Token = "0x400111B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public AudioEventGroup unitySelectSound;

		[Token(Token = "0x400111C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public AudioEventGroup unityDeselectSound;

		[Token(Token = "0x400111D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public AudioEventGroup unityMoveSound;

		[Token(Token = "0x400111E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public AudioEventGroup unityInitializePotentialDragSound;

		[Token(Token = "0x400111F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public AudioEventGroup unityBeginDragSound;

		[Token(Token = "0x4001120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public AudioEventGroup unityEndDragSound;

		[Token(Token = "0x4001121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public AudioEventGroup unitySubmitSound;

		[Token(Token = "0x4001122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		public AudioEventGroup unityCancelSound;

		[Token(Token = "0x4001123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		public AudioEventGroup unityToggleSound;

		[Token(Token = "0x4001124")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		public List<AudioEventGroup> userDefinedSounds;

		[Token(Token = "0x4001125")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		public List<AudioEventGroup> mechanimStateChangedSounds;

		[Token(Token = "0x4001126")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		public bool useStartSound;

		[Token(Token = "0x4001127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D1")]
		public bool useVisibleSound;

		[Token(Token = "0x4001128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D2")]
		public bool useInvisibleSound;

		[Token(Token = "0x4001129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D3")]
		public bool useCollisionSound;

		[Token(Token = "0x400112A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
		public bool useCollisionExitSound;

		[Token(Token = "0x400112B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D5")]
		public bool useTriggerEnterSound;

		[Token(Token = "0x400112C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D6")]
		public bool useTriggerExitSound;

		[Token(Token = "0x400112D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D7")]
		public bool useTriggerStaySound;

		[Token(Token = "0x400112E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		public bool useMouseEnterSound;

		[Token(Token = "0x400112F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D9")]
		public bool useMouseExitSound;

		[Token(Token = "0x4001130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DA")]
		public bool useMouseClickSound;

		[Token(Token = "0x4001131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DB")]
		public bool useMouseUpSound;

		[Token(Token = "0x4001132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
		public bool useMouseDragSound;

		[Token(Token = "0x4001133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DD")]
		public bool useSpawnedSound;

		[Token(Token = "0x4001134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DE")]
		public bool useDespawnedSound;

		[Token(Token = "0x4001135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DF")]
		public bool useEnableSound;

		[Token(Token = "0x4001136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		public bool useDisableSound;

		[Token(Token = "0x4001137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E1")]
		public bool useCollision2dSound;

		[Token(Token = "0x4001138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E2")]
		public bool useCollisionExit2dSound;

		[Token(Token = "0x4001139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E3")]
		public bool useTriggerEnter2dSound;

		[Token(Token = "0x400113A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
		public bool useTriggerStay2dSound;

		[Token(Token = "0x400113B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E5")]
		public bool useTriggerExit2dSound;

		[Token(Token = "0x400113C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E6")]
		public bool useParticleCollisionSound;

		[Token(Token = "0x400113D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E7")]
		public bool useNguiOnClickSound;

		[Token(Token = "0x400113E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		public bool useNguiMouseDownSound;

		[Token(Token = "0x400113F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E9")]
		public bool useNguiMouseUpSound;

		[Token(Token = "0x4001140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EA")]
		public bool useNguiMouseEnterSound;

		[Token(Token = "0x4001141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EB")]
		public bool useNguiMouseExitSound;

		[Token(Token = "0x4001142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
		public bool useCodeTriggeredEvent1Sound;

		[Token(Token = "0x4001143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1ED")]
		public bool useCodeTriggeredEvent2Sound;

		[Token(Token = "0x4001144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EE")]
		public bool useUnitySliderChangedSound;

		[Token(Token = "0x4001145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EF")]
		public bool useUnityButtonClickedSound;

		[Token(Token = "0x4001146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		public bool useUnityPointerDownSound;

		[Token(Token = "0x4001147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F1")]
		public bool useUnityDragSound;

		[Token(Token = "0x4001148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F2")]
		public bool useUnityPointerUpSound;

		[Token(Token = "0x4001149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F3")]
		public bool useUnityPointerEnterSound;

		[Token(Token = "0x400114A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
		public bool useUnityPointerExitSound;

		[Token(Token = "0x400114B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F5")]
		public bool useUnityDropSound;

		[Token(Token = "0x400114C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F6")]
		public bool useUnityScrollSound;

		[Token(Token = "0x400114D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F7")]
		public bool useUnityUpdateSelectedSound;

		[Token(Token = "0x400114E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		public bool useUnitySelectSound;

		[Token(Token = "0x400114F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F9")]
		public bool useUnityDeselectSound;

		[Token(Token = "0x4001150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FA")]
		public bool useUnityMoveSound;

		[Token(Token = "0x4001151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FB")]
		public bool useUnityInitializePotentialDragSound;

		[Token(Token = "0x4001152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
		public bool useUnityBeginDragSound;

		[Token(Token = "0x4001153")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FD")]
		public bool useUnityEndDragSound;

		[Token(Token = "0x4001154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FE")]
		public bool useUnitySubmitSound;

		[Token(Token = "0x4001155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FF")]
		public bool useUnityCancelSound;

		[Token(Token = "0x4001156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		public bool useUnityToggleSound;

		[Token(Token = "0x4001157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private Slider _slider;

		[Token(Token = "0x4001158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		private Toggle _toggle;

		[Token(Token = "0x4001159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		private Button _button;

		[Token(Token = "0x400115A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		private bool _isVisible;

		[Token(Token = "0x400115B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x221")]
		private bool _needsCoroutine;

		[Token(Token = "0x400115C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
		private float? _triggerEnterTime;

		[Token(Token = "0x400115D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
		private float? _triggerEnter2dTime;

		[Token(Token = "0x400115E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		private Transform _tran;

		[Token(Token = "0x400115F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		private readonly List<AudioEventGroup> _validMechanimStateChangedSounds;

		[Token(Token = "0x4001160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		private Animator _anim;

		[Token(Token = "0x17000190")]
		private bool IsSetToUGUI
		{
			[Token(Token = "0x6000FC7")]
			[Address(RVA = "0xCC8770", Offset = "0xCC8770", VA = "0xCC8770")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000191")]
		private bool IsSetToLegacyUI
		{
			[Token(Token = "0x6000FC8")]
			[Address(RVA = "0xCCA6AC", Offset = "0xCCA6AC", VA = "0xCCA6AC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000192")]
		private Transform Trans
		{
			[Token(Token = "0x6000FE3")]
			[Address(RVA = "0xCCE4EC", Offset = "0xCCE4EC", VA = "0xCCE4EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FA2")]
		[Address(RVA = "0xCC8694", Offset = "0xCC8694", VA = "0xCC8694")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000FA3")]
		[Address(RVA = "0xCC89EC", Offset = "0xCC89EC", VA = "0xCC89EC", Slot = "10")]
		protected virtual void SpawnedOrAwake()
		{
		}

		[Token(Token = "0x6000FA4")]
		[Address(RVA = "0xCC8B4C", Offset = "0xCC8B4C", VA = "0xCC8B4C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E128C", Offset = "0x8E128C")]
		private IEnumerator CoUpdate()
		{
			return null;
		}

		[Token(Token = "0x6000FA5")]
		[Address(RVA = "0xCC8BB8", Offset = "0xCC8BB8", VA = "0xCC8BB8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000FA6")]
		[Address(RVA = "0xCC929C", Offset = "0xCC929C", VA = "0xCC929C")]
		private void OnBecameVisible()
		{
		}

		[Token(Token = "0x6000FA7")]
		[Address(RVA = "0xCC92C4", Offset = "0xCC92C4", VA = "0xCC92C4")]
		private void OnBecameInvisible()
		{
		}

		[Token(Token = "0x6000FA8")]
		[Address(RVA = "0xCC92E0", Offset = "0xCC92E0", VA = "0xCC92E0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000FA9")]
		[Address(RVA = "0xCC959C", Offset = "0xCC959C", VA = "0xCC959C")]
		private void RestorePersistentSliders()
		{
		}

		[Token(Token = "0x6000FAA")]
		[Address(RVA = "0xCC9938", Offset = "0xCC9938", VA = "0xCC9938")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000FAB")]
		[Address(RVA = "0xCC9D84", Offset = "0xCC9D84", VA = "0xCC9D84")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6000FAC")]
		[Address(RVA = "0xCC9EA0", Offset = "0xCC9EA0", VA = "0xCC9EA0")]
		private void OnCollisionExit(Collision collision)
		{
		}

		[Token(Token = "0x6000FAD")]
		[Address(RVA = "0xCC9FBC", Offset = "0xCC9FBC", VA = "0xCC9FBC")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000FAE")]
		[Address(RVA = "0xCCA104", Offset = "0xCCA104", VA = "0xCCA104")]
		private void OnTriggerStay(Collider other)
		{
		}

		[Token(Token = "0x6000FAF")]
		[Address(RVA = "0xCCA200", Offset = "0xCCA200", VA = "0xCCA200")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6000FB0")]
		[Address(RVA = "0xCCA324", Offset = "0xCCA324", VA = "0xCCA324")]
		private void OnParticleCollision(GameObject other)
		{
		}

		[Token(Token = "0x6000FB1")]
		[Address(RVA = "0xCCA440", Offset = "0xCCA440", VA = "0xCCA440")]
		public void OnPointerEnter(PointerEventData data)
		{
		}

		[Token(Token = "0x6000FB2")]
		[Address(RVA = "0xCCA460", Offset = "0xCCA460", VA = "0xCCA460")]
		public void OnPointerExit(PointerEventData data)
		{
		}

		[Token(Token = "0x6000FB3")]
		[Address(RVA = "0xCCA480", Offset = "0xCCA480", VA = "0xCCA480")]
		public void OnPointerDown(PointerEventData data)
		{
		}

		[Token(Token = "0x6000FB4")]
		[Address(RVA = "0xCCA4A0", Offset = "0xCCA4A0", VA = "0xCCA4A0")]
		public void OnPointerUp(PointerEventData data)
		{
		}

		[Token(Token = "0x6000FB5")]
		[Address(RVA = "0xCCA4C0", Offset = "0xCCA4C0", VA = "0xCCA4C0")]
		private void OnDrag(Vector2 delta)
		{
		}

		[Token(Token = "0x6000FB6")]
		[Address(RVA = "0xCCA4C4", Offset = "0xCCA4C4", VA = "0xCCA4C4")]
		public void OnDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x6000FB7")]
		[Address(RVA = "0xCCA4E4", Offset = "0xCCA4E4", VA = "0xCCA4E4")]
		private void OnDrop(GameObject go)
		{
		}

		[Token(Token = "0x6000FB8")]
		[Address(RVA = "0xCCA4E8", Offset = "0xCCA4E8", VA = "0xCCA4E8")]
		public void OnDrop(PointerEventData data)
		{
		}

		[Token(Token = "0x6000FB9")]
		[Address(RVA = "0xCCA508", Offset = "0xCCA508", VA = "0xCCA508")]
		public void OnScroll(PointerEventData data)
		{
		}

		[Token(Token = "0x6000FBA")]
		[Address(RVA = "0xCCA528", Offset = "0xCCA528", VA = "0xCCA528")]
		public void OnUpdateSelected(BaseEventData data)
		{
		}

		[Token(Token = "0x6000FBB")]
		[Address(RVA = "0xCCA548", Offset = "0xCCA548", VA = "0xCCA548")]
		private void OnSelect(bool isSelected)
		{
		}

		[Token(Token = "0x6000FBC")]
		[Address(RVA = "0xCCA54C", Offset = "0xCCA54C", VA = "0xCCA54C")]
		public void OnSelect(BaseEventData data)
		{
		}

		[Token(Token = "0x6000FBD")]
		[Address(RVA = "0xCCA56C", Offset = "0xCCA56C", VA = "0xCCA56C")]
		public void OnDeselect(BaseEventData data)
		{
		}

		[Token(Token = "0x6000FBE")]
		[Address(RVA = "0xCCA58C", Offset = "0xCCA58C", VA = "0xCCA58C")]
		public void OnMove(AxisEventData data)
		{
		}

		[Token(Token = "0x6000FBF")]
		[Address(RVA = "0xCCA5AC", Offset = "0xCCA5AC", VA = "0xCCA5AC")]
		public void OnInitializePotentialDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x6000FC0")]
		[Address(RVA = "0xCCA5CC", Offset = "0xCCA5CC", VA = "0xCCA5CC")]
		public void OnBeginDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x6000FC1")]
		[Address(RVA = "0xCCA5EC", Offset = "0xCCA5EC", VA = "0xCCA5EC")]
		public void OnEndDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x6000FC2")]
		[Address(RVA = "0xCCA60C", Offset = "0xCCA60C", VA = "0xCCA60C")]
		public void OnSubmit(BaseEventData data)
		{
		}

		[Token(Token = "0x6000FC3")]
		[Address(RVA = "0xCCA62C", Offset = "0xCCA62C", VA = "0xCCA62C")]
		public void OnCancel(BaseEventData data)
		{
		}

		[Token(Token = "0x6000FC4")]
		[Address(RVA = "0xCCA64C", Offset = "0xCCA64C", VA = "0xCCA64C")]
		private void SliderChanged(float newValue)
		{
		}

		[Token(Token = "0x6000FC5")]
		[Address(RVA = "0xCCA67C", Offset = "0xCCA67C", VA = "0xCCA67C")]
		private void ToggleChanged(bool newValue)
		{
		}

		[Token(Token = "0x6000FC6")]
		[Address(RVA = "0xCCA694", Offset = "0xCCA694", VA = "0xCCA694")]
		private void ButtonClicked()
		{
		}

		[Token(Token = "0x6000FC9")]
		[Address(RVA = "0xCCA6BC", Offset = "0xCCA6BC", VA = "0xCCA6BC")]
		private void OnPress(bool isDown)
		{
		}

		[Token(Token = "0x6000FCA")]
		[Address(RVA = "0xCCA6F4", Offset = "0xCCA6F4", VA = "0xCCA6F4")]
		private void OnClick()
		{
		}

		[Token(Token = "0x6000FCB")]
		[Address(RVA = "0xCCA714", Offset = "0xCCA714", VA = "0xCCA714")]
		private void OnHover(bool isOver)
		{
		}

		[Token(Token = "0x6000FCC")]
		[Address(RVA = "0xCCA74C", Offset = "0xCCA74C", VA = "0xCCA74C")]
		private void OnSpawned()
		{
		}

		[Token(Token = "0x6000FCD")]
		[Address(RVA = "0xCCA79C", Offset = "0xCCA79C", VA = "0xCCA79C")]
		private void OnDespawned()
		{
		}

		[Token(Token = "0x6000FCE")]
		[Address(RVA = "0xCCA7BC", Offset = "0xCCA7BC", VA = "0xCCA7BC")]
		public void ActivateCodeTriggeredEvent1()
		{
		}

		[Token(Token = "0x6000FCF")]
		[Address(RVA = "0xCCA7D4", Offset = "0xCCA7D4", VA = "0xCCA7D4")]
		public void ActivateCodeTriggeredEvent2()
		{
		}

		[Token(Token = "0x6000FD0")]
		[Address(RVA = "0xCCA7EC", Offset = "0xCCA7EC", VA = "0xCCA7EC")]
		public void CalculateRadius(AudioEvent anEvent)
		{
		}

		[Token(Token = "0x6000FD1")]
		[Address(RVA = "0xCCA894", Offset = "0xCCA894", VA = "0xCCA894")]
		public AudioSource GetNamedOrFirstAudioSource(AudioEvent anEvent)
		{
			return null;
		}

		[Token(Token = "0x6000FD2")]
		[Address(RVA = "0xCCAA80", Offset = "0xCCAA80", VA = "0xCCAA80")]
		public List<AudioSource> GetAllVariationAudioSources(AudioEvent anEvent)
		{
			return null;
		}

		[Token(Token = "0x6000FD3")]
		[Address(RVA = "0xCCACB4", Offset = "0xCCACB4", VA = "0xCCACB4")]
		public AudioEventGroup GetMechanimAudioEventGroup(string stateName)
		{
			return null;
		}

		[Token(Token = "0x6000FD4")]
		[Address(RVA = "0xCC9030", Offset = "0xCC9030", VA = "0xCC9030")]
		public bool PlaySounds(AudioEventGroup eventGrp, EventType eType)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FD5")]
		[Address(RVA = "0xCCE02C", Offset = "0xCCE02C", VA = "0xCCE02C")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6000FD6")]
		[Address(RVA = "0xCCE224", Offset = "0xCCE224", VA = "0xCCE224")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6000FD7")]
		[Address(RVA = "0xCCADA4", Offset = "0xCCADA4", VA = "0xCCADA4")]
		private static bool CheckForRetriggerLimit(AudioEventGroup grp)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FD8")]
		[Address(RVA = "0xCCE41C", Offset = "0xCCE41C", VA = "0xCCE41C")]
		private bool AllPlayersShouldHearAction(AudioEventGroup grp, EventType eType)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FD9")]
		[Address(RVA = "0xCCAE3C", Offset = "0xCCAE3C", VA = "0xCCAE3C")]
		private void PerformSingleAction(AudioEventGroup grp, AudioEvent aEvent, EventType eType)
		{
		}

		[Token(Token = "0x6000FDA")]
		[Address(RVA = "0xCCE578", Offset = "0xCCE578", VA = "0xCCE578")]
		private void LogIfCustomEventMissing(AudioEventGroup eventGroup)
		{
		}

		[Token(Token = "0x6000FDB")]
		[Address(RVA = "0xCC8BF8", Offset = "0xCC8BF8", VA = "0xCC8BF8", Slot = "4")]
		public void CheckForIllegalCustomEvents()
		{
		}

		[Token(Token = "0x6000FDC")]
		[Address(RVA = "0xCCE838", Offset = "0xCCE838", VA = "0xCCE838", Slot = "5")]
		public void ReceiveEvent(string customEventName, Vector3 originPoint)
		{
		}

		[Token(Token = "0x6000FDD")]
		[Address(RVA = "0xCCE914", Offset = "0xCCE914", VA = "0xCCE914", Slot = "6")]
		public bool SubscribesToEvent(string customEventName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FDE")]
		[Address(RVA = "0xCC9890", Offset = "0xCC9890", VA = "0xCC9890", Slot = "7")]
		public void RegisterReceiver()
		{
		}

		[Token(Token = "0x6000FDF")]
		[Address(RVA = "0xCC9CF0", Offset = "0xCC9CF0", VA = "0xCC9CF0", Slot = "8")]
		public void UnregisterReceiver()
		{
		}

		[Token(Token = "0x6000FE0")]
		[Address(RVA = "0xCCE9EC", Offset = "0xCCE9EC", VA = "0xCCE9EC", Slot = "9")]
		public IList<AudioEventGroup> GetAllEvents()
		{
			return null;
		}

		[Token(Token = "0x6000FE1")]
		[Address(RVA = "0xCC8780", Offset = "0xCC8780", VA = "0xCC8780")]
		private void AddUGUIComponents()
		{
		}

		[Token(Token = "0x6000FE2")]
		private void AddUGUIHandler<T>(bool useSound) where T : EventSoundsUGUIHandler
		{
		}

		[Token(Token = "0x6000FE4")]
		[Address(RVA = "0xCCEA40", Offset = "0xCCEA40", VA = "0xCCEA40")]
		public EventSounds()
		{
		}
	}
	[Token(Token = "0x2000278")]
	public class EventSoundsUGUIHandler : MonoBehaviour
	{
		[Token(Token = "0x40011AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DB53C", Offset = "0x8DB53C")]
		private EventSounds <eventSounds>k__BackingField;

		[Token(Token = "0x17000195")]
		public EventSounds eventSounds
		{
			[Token(Token = "0x6000FEE")]
			[Address(RVA = "0x152B500", Offset = "0x152B500", VA = "0x152B500")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E133C", Offset = "0x8E133C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FEF")]
			[Address(RVA = "0x152B508", Offset = "0x152B508", VA = "0x152B508")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E134C", Offset = "0x8E134C")]
			set
			{
			}
		}

		[Token(Token = "0x6000FF0")]
		[Address(RVA = "0x152AB90", Offset = "0x152AB90", VA = "0x152AB90")]
		public EventSoundsUGUIHandler()
		{
		}
	}
	[Token(Token = "0x2000279")]
	public class EventSoundsPointerEnterHandler : EventSoundsUGUIHandler, IPointerEnterHandler, IEventSystemHandler
	{
		[Token(Token = "0x6000FF1")]
		[Address(RVA = "0x152B0F8", Offset = "0x152B0F8", VA = "0x152B0F8", Slot = "4")]
		public void OnPointerEnter(PointerEventData data)
		{
		}

		[Token(Token = "0x6000FF2")]
		[Address(RVA = "0x152B19C", Offset = "0x152B19C", VA = "0x152B19C")]
		public EventSoundsPointerEnterHandler()
		{
		}
	}
	[Token(Token = "0x200027A")]
	public class EventSoundsPointerExitHandler : EventSoundsUGUIHandler, IPointerExitHandler, IEventSystemHandler
	{
		[Token(Token = "0x6000FF3")]
		[Address(RVA = "0x152B1A4", Offset = "0x152B1A4", VA = "0x152B1A4", Slot = "4")]
		public void OnPointerExit(PointerEventData data)
		{
		}

		[Token(Token = "0x6000FF4")]
		[Address(RVA = "0x152B248", Offset = "0x152B248", VA = "0x152B248")]
		public EventSoundsPointerExitHandler()
		{
		}
	}
	[Token(Token = "0x200027B")]
	public class EventSoundsPointerDownHandler : EventSoundsUGUIHandler, IPointerDownHandler, IEventSystemHandler
	{
		[Token(Token = "0x6000FF5")]
		[Address(RVA = "0x152B04C", Offset = "0x152B04C", VA = "0x152B04C", Slot = "4")]
		public void OnPointerDown(PointerEventData data)
		{
		}

		[Token(Token = "0x6000FF6")]
		[Address(RVA = "0x152B0F0", Offset = "0x152B0F0", VA = "0x152B0F0")]
		public EventSoundsPointerDownHandler()
		{
		}
	}
	[Token(Token = "0x200027C")]
	public class EventSoundsPointerUpHandler : EventSoundsUGUIHandler, IPointerUpHandler, IEventSystemHandler
	{
		[Token(Token = "0x6000FF7")]
		[Address(RVA = "0x152B250", Offset = "0x152B250", VA = "0x152B250", Slot = "4")]
		public void OnPointerUp(PointerEventData data)
		{
		}

		[Token(Token = "0x6000FF8")]
		[Address(RVA = "0x152B2F4", Offset = "0x152B2F4", VA = "0x152B2F4")]
		public EventSoundsPointerUpHandler()
		{
		}
	}
	[Token(Token = "0x200027D")]
	public class EventSoundsDragHandler : EventSoundsUGUIHandler, IDragHandler, IEventSystemHandler
	{
		[Token(Token = "0x6000FF9")]
		[Address(RVA = "0x152ACF0", Offset = "0x152ACF0", VA = "0x152ACF0", Slot = "4")]
		public void OnDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x6000FFA")]
		[Address(RVA = "0x152AD94", Offset = "0x152AD94", VA = "0x152AD94")]
		public EventSoundsDragHandler()
		{
		}
	}
	[Token(Token = "0x200027E")]
	public class EventSoundsDropHandler : EventSoundsUGUIHandler, IDropHandler, IEventSystemHandler
	{
		[Token(Token = "0x6000FFB")]
		[Address(RVA = "0x152AD9C", Offset = "0x152AD9C", VA = "0x152AD9C", Slot = "4")]
		public void OnDrop(PointerEventData data)
		{
		}

		[Token(Token = "0x6000FFC")]
		[Address(RVA = "0x152AE40", Offset = "0x152AE40", VA = "0x152AE40")]
		public EventSoundsDropHandler()
		{
		}
	}
	[Token(Token = "0x200027F")]
	public class EventSoundsScrollHandler : EventSoundsUGUIHandler, IScrollHandler, IEventSystemHandler
	{
		[Token(Token = "0x6000FFD")]
		[Address(RVA = "0x152B2FC", Offset = "0x152B2FC", VA = "0x152B2FC", Slot = "4")]
		public void OnScroll(PointerEventData data)
		{
		}

		[Token(Token = "0x6000FFE")]
		[Address(RVA = "0x152B3A0", Offset = "0x152B3A0", VA = "0x152B3A0")]
		public EventSoundsScrollHandler()
		{
		}
	}
	[Token(Token = "0x2000280")]
	public class EventSoundsUpdateSelectedHandler : EventSoundsUGUIHandler, IUpdateSelectedHandler, IEventSystemHandler
	{
		[Token(Token = "0x6000FFF")]
		[Address(RVA = "0x152B510", Offset = "0x152B510", VA = "0x152B510", Slot = "4")]
		public void OnUpdateSelected(BaseEventData data)
		{
		}

		[Token(Token = "0x6001000")]
		[Address(RVA = "0x152B5B4", Offset = "0x152B5B4", VA = "0x152B5B4")]
		public EventSoundsUpdateSelectedHandler()
		{
		}
	}
	[Token(Token = "0x2000281")]
	public class EventSoundsSelectHandler : EventSoundsUGUIHandler, ISelectHandler, IEventSystemHandler
	{
		[Token(Token = "0x6001001")]
		[Address(RVA = "0x152B3A8", Offset = "0x152B3A8", VA = "0x152B3A8", Slot = "4")]
		public void OnSelect(BaseEventData data)
		{
		}

		[Token(Token = "0x6001002")]
		[Address(RVA = "0x152B44C", Offset = "0x152B44C", VA = "0x152B44C")]
		public EventSoundsSelectHandler()
		{
		}
	}
	[Token(Token = "0x2000282")]
	public class EventSoundsDeselectHandler : EventSoundsUGUIHandler, IDeselectHandler, IEventSystemHandler
	{
		[Token(Token = "0x6001003")]
		[Address(RVA = "0x152AC44", Offset = "0x152AC44", VA = "0x152AC44", Slot = "4")]
		public void OnDeselect(BaseEventData data)
		{
		}

		[Token(Token = "0x6001004")]
		[Address(RVA = "0x152ACE8", Offset = "0x152ACE8", VA = "0x152ACE8")]
		public EventSoundsDeselectHandler()
		{
		}
	}
	[Token(Token = "0x2000283")]
	public class EventSoundsMoveHandler : EventSoundsUGUIHandler, IMoveHandler, IEventSystemHandler
	{
		[Token(Token = "0x6001005")]
		[Address(RVA = "0x152AFA0", Offset = "0x152AFA0", VA = "0x152AFA0", Slot = "4")]
		public void OnMove(AxisEventData data)
		{
		}

		[Token(Token = "0x6001006")]
		[Address(RVA = "0x152B044", Offset = "0x152B044", VA = "0x152B044")]
		public EventSoundsMoveHandler()
		{
		}
	}
	[Token(Token = "0x2000284")]
	public class EventSoundsInitializePotentialDragHandler : EventSoundsUGUIHandler, IInitializePotentialDragHandler, IEventSystemHandler
	{
		[Token(Token = "0x6001007")]
		[Address(RVA = "0x152AEF4", Offset = "0x152AEF4", VA = "0x152AEF4", Slot = "4")]
		public void OnInitializePotentialDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x6001008")]
		[Address(RVA = "0x152AF98", Offset = "0x152AF98", VA = "0x152AF98")]
		public EventSoundsInitializePotentialDragHandler()
		{
		}
	}
	[Token(Token = "0x2000285")]
	public class EventSoundsBeginDragHandler : EventSoundsUGUIHandler, IBeginDragHandler, IEventSystemHandler
	{
		[Token(Token = "0x6001009")]
		[Address(RVA = "0x152AAE4", Offset = "0x152AAE4", VA = "0x152AAE4", Slot = "4")]
		public void OnBeginDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x600100A")]
		[Address(RVA = "0x152AB88", Offset = "0x152AB88", VA = "0x152AB88")]
		public EventSoundsBeginDragHandler()
		{
		}
	}
	[Token(Token = "0x2000286")]
	public class EventSoundsEndDragHandler : EventSoundsUGUIHandler, IEndDragHandler, IEventSystemHandler
	{
		[Token(Token = "0x600100B")]
		[Address(RVA = "0x152AE48", Offset = "0x152AE48", VA = "0x152AE48", Slot = "4")]
		public void OnEndDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x600100C")]
		[Address(RVA = "0x152AEEC", Offset = "0x152AEEC", VA = "0x152AEEC")]
		public EventSoundsEndDragHandler()
		{
		}
	}
	[Token(Token = "0x2000287")]
	public class EventSoundsSubmitHandler : EventSoundsUGUIHandler, ISubmitHandler, IEventSystemHandler
	{
		[Token(Token = "0x600100D")]
		[Address(RVA = "0x152B454", Offset = "0x152B454", VA = "0x152B454", Slot = "4")]
		public void OnSubmit(BaseEventData data)
		{
		}

		[Token(Token = "0x600100E")]
		[Address(RVA = "0x152B4F8", Offset = "0x152B4F8", VA = "0x152B4F8")]
		public EventSoundsSubmitHandler()
		{
		}
	}
	[Token(Token = "0x2000288")]
	public class EventSoundsCancelHandler : EventSoundsUGUIHandler, ICancelHandler, IEventSystemHandler
	{
		[Token(Token = "0x600100F")]
		[Address(RVA = "0x152AB98", Offset = "0x152AB98", VA = "0x152AB98", Slot = "4")]
		public void OnCancel(BaseEventData data)
		{
		}

		[Token(Token = "0x6001010")]
		[Address(RVA = "0x152AC3C", Offset = "0x152AC3C", VA = "0x152AC3C")]
		public EventSoundsCancelHandler()
		{
		}
	}
	[Token(Token = "0x2000289")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8CD350", Offset = "0x8CD350")]
	public class FootstepSounds : MonoBehaviour
	{
		[Token(Token = "0x200028A")]
		public enum FootstepTriggerMode
		{
			[Token(Token = "0x40011B6")]
			None,
			[Token(Token = "0x40011B7")]
			OnCollision,
			[Token(Token = "0x40011B8")]
			OnTriggerEnter,
			[Token(Token = "0x40011B9")]
			OnCollision2D,
			[Token(Token = "0x40011BA")]
			OnTriggerEnter2D
		}

		[Token(Token = "0x40011AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MasterAudio.SoundSpawnLocationMode soundSpawnMode;

		[Token(Token = "0x40011AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public FootstepTriggerMode footstepEvent;

		[Token(Token = "0x40011AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<FootstepGroup> footstepGroups;

		[Token(Token = "0x40011AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public EventSounds.RetriggerLimMode retriggerLimitMode;

		[Token(Token = "0x40011B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int limitPerXFrm;

		[Token(Token = "0x40011B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float limitPerXSec;

		[Token(Token = "0x40011B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int triggeredLastFrame;

		[Token(Token = "0x40011B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float triggeredLastTime;

		[Token(Token = "0x40011B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform _trans;

		[Token(Token = "0x17000196")]
		private Transform Trans
		{
			[Token(Token = "0x6001015")]
			[Address(RVA = "0x1535AF0", Offset = "0x1535AF0", VA = "0x1535AF0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001011")]
		[Address(RVA = "0x1535688", Offset = "0x1535688", VA = "0x1535688")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001012")]
		[Address(RVA = "0x1535A10", Offset = "0x1535A10", VA = "0x1535A10")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6001013")]
		[Address(RVA = "0x1535A60", Offset = "0x1535A60", VA = "0x1535A60")]
		private bool CheckForRetriggerLimit()
		{
			return default(bool);
		}

		[Token(Token = "0x6001014")]
		[Address(RVA = "0x15356D8", Offset = "0x15356D8", VA = "0x15356D8")]
		private void PlaySoundsIfMatch(GameObject go)
		{
		}

		[Token(Token = "0x6001016")]
		[Address(RVA = "0x1535B7C", Offset = "0x1535B7C", VA = "0x1535B7C")]
		public FootstepSounds()
		{
		}
	}
	[Token(Token = "0x200028B")]
	public class MechanimStateCustomEvents : StateMachineBehaviour
	{
		[Token(Token = "0x40011BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DB54C", Offset = "0x8DB54C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DB54C", Offset = "0x8DB54C")]
		public bool RetriggerWhenStateLoops;

		[Token(Token = "0x40011BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DB5AC", Offset = "0x8DB5AC")]
		public bool MultiplayerBroadcast;

		[Token(Token = "0x40011BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DB5E4", Offset = "0x8DB5E4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DB5E4", Offset = "0x8DB5E4")]
		public bool fireEnterEvent;

		[Token(Token = "0x40011BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[MasterCustomEvent]
		public string enterCustomEvent;

		[Token(Token = "0x40011BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DB654", Offset = "0x8DB654")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DB654", Offset = "0x8DB654")]
		public bool fireExitEvent;

		[Token(Token = "0x40011C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[MasterCustomEvent]
		public string exitCustomEvent;

		[Token(Token = "0x40011C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DB6C4", Offset = "0x8DB6C4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DB6C4", Offset = "0x8DB6C4")]
		public bool fireAnimTimeEvent;

		[Token(Token = "0x40011C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DB724", Offset = "0x8DB724")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DB724", Offset = "0x8DB724")]
		public float whenToFireEvent;

		[Token(Token = "0x40011C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[MasterCustomEvent]
		public string timedCustomEvent;

		[Token(Token = "0x40011C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DB788", Offset = "0x8DB788")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DB788", Offset = "0x8DB788")]
		public bool fireMultiAnimTimeEvent;

		[Token(Token = "0x40011C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DB7E8", Offset = "0x8DB7E8")]
		public int numOfMultiEventsToFire;

		[Token(Token = "0x40011C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DB800", Offset = "0x8DB800")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DB800", Offset = "0x8DB800")]
		public float whenToFireMultiEvent1;

		[Token(Token = "0x40011C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DB854", Offset = "0x8DB854")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DB854", Offset = "0x8DB854")]
		public float whenToFireMultiEvent2;

		[Token(Token = "0x40011C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DB8A8", Offset = "0x8DB8A8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DB8A8", Offset = "0x8DB8A8")]
		public float whenToFireMultiEvent3;

		[Token(Token = "0x40011C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DB8FC", Offset = "0x8DB8FC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DB8FC", Offset = "0x8DB8FC")]
		public float whenToFireMultiEvent4;

		[Token(Token = "0x40011CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[MasterCustomEvent]
		public string MultiTimedEvent;

		[Token(Token = "0x40011CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool _playMultiEvent1;

		[Token(Token = "0x40011CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		private bool _playMultiEvent2;

		[Token(Token = "0x40011CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
		private bool _playMultiEvent3;

		[Token(Token = "0x40011CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6B")]
		private bool _playMultiEvent4;

		[Token(Token = "0x40011CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool _fireTimedEvent;

		[Token(Token = "0x40011D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Transform _actorTrans;

		[Token(Token = "0x40011D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int _lastRepetition;

		[Token(Token = "0x17000197")]
		private bool CanTransmitToOtherPlayers
		{
			[Token(Token = "0x600101B")]
			[Address(RVA = "0xC1AC40", Offset = "0xC1AC40", VA = "0xC1AC40")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001017")]
		[Address(RVA = "0xC1AABC", Offset = "0xC1AABC", VA = "0xC1AABC", Slot = "4")]
		public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x6001018")]
		[Address(RVA = "0xC1AC48", Offset = "0xC1AC48", VA = "0xC1AC48", Slot = "5")]
		public override void OnStateUpdate(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x6001019")]
		[Address(RVA = "0xC1AF70", Offset = "0xC1AF70", VA = "0xC1AF70", Slot = "6")]
		public override void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x600101A")]
		[Address(RVA = "0xC1ABA0", Offset = "0xC1ABA0", VA = "0xC1ABA0")]
		private Transform ActorTrans(Animator anim)
		{
			return null;
		}

		[Token(Token = "0x600101C")]
		[Address(RVA = "0xC1B050", Offset = "0xC1B050", VA = "0xC1B050")]
		public MechanimStateCustomEvents()
		{
		}
	}
	[Token(Token = "0x200028C")]
	public class MechanimStateSounds : StateMachineBehaviour
	{
		[Token(Token = "0x40011D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DB960", Offset = "0x8DB960")]
		public bool SoundFollowsObject;

		[Token(Token = "0x40011D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DB998", Offset = "0x8DB998")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DB998", Offset = "0x8DB998")]
		public bool RetriggerWhenStateLoops;

		[Token(Token = "0x40011D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DB9F8", Offset = "0x8DB9F8")]
		public bool MultiplayerBroadcast;

		[Token(Token = "0x40011D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DBA30", Offset = "0x8DBA30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DBA30", Offset = "0x8DBA30")]
		public bool playEnterSound;

		[Token(Token = "0x40011D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool stopEnterSoundOnExit;

		[Token(Token = "0x40011D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SoundGroup]
		public string enterSoundGroup;

		[Token(Token = "0x40011D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DBAA0", Offset = "0x8DBAA0")]
		public string enterVariationName;

		[Token(Token = "0x40011D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool wasEnterSoundPlayed;

		[Token(Token = "0x40011DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DBAD8", Offset = "0x8DBAD8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DBAD8", Offset = "0x8DBAD8")]
		public bool playExitSound;

		[Token(Token = "0x40011DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SoundGroup]
		public string exitSoundGroup;

		[Token(Token = "0x40011DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DBB48", Offset = "0x8DBB48")]
		public string exitVariationName;

		[Token(Token = "0x40011DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DBB80", Offset = "0x8DBB80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DBB80", Offset = "0x8DBB80")]
		public bool playAnimTimeSound;

		[Token(Token = "0x40011DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		public bool stopAnimTimeSoundOnExit;

		[Token(Token = "0x40011DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DBBE0", Offset = "0x8DBBE0")]
		public bool useStopTime;

		[Token(Token = "0x40011E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DBC18", Offset = "0x8DBC18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DBC18", Offset = "0x8DBC18")]
		public float whenToStartSound;

		[Token(Token = "0x40011E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DBC6C", Offset = "0x8DBC6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DBC6C", Offset = "0x8DBC6C")]
		public float whenToStopSound;

		[Token(Token = "0x40011E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SoundGroup]
		public string TimedSoundGroup;

		[Token(Token = "0x40011E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DBCD0", Offset = "0x8DBCD0")]
		public string timedVariationName;

		[Token(Token = "0x40011E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool playSoundStart;

		[Token(Token = "0x40011E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		private bool playSoundStop;

		[Token(Token = "0x40011E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DBD08", Offset = "0x8DBD08")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DBD08", Offset = "0x8DBD08")]
		public bool playMultiAnimTimeSounds;

		[Token(Token = "0x40011E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6B")]
		public bool StopMultiAnimTimeSoundsOnExit;

		[Token(Token = "0x40011E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DBD68", Offset = "0x8DBD68")]
		public int numOfMultiSoundsToPlay;

		[Token(Token = "0x40011E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DBD80", Offset = "0x8DBD80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DBD80", Offset = "0x8DBD80")]
		public float whenToStartMultiSound1;

		[Token(Token = "0x40011EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DBDD4", Offset = "0x8DBDD4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DBDD4", Offset = "0x8DBDD4")]
		public float whenToStartMultiSound2;

		[Token(Token = "0x40011EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DBE28", Offset = "0x8DBE28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DBE28", Offset = "0x8DBE28")]
		public float whenToStartMultiSound3;

		[Token(Token = "0x40011EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DBE7C", Offset = "0x8DBE7C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DBE7C", Offset = "0x8DBE7C")]
		public float whenToStartMultiSound4;

		[Token(Token = "0x40011ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SoundGroup]
		public string MultiSoundsTimedGroup;

		[Token(Token = "0x40011EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DBEE0", Offset = "0x8DBEE0")]
		public string multiTimedVariationName;

		[Token(Token = "0x40011EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool _playMultiSound1;

		[Token(Token = "0x40011F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		private bool _playMultiSound2;

		[Token(Token = "0x40011F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x92")]
		private bool _playMultiSound3;

		[Token(Token = "0x40011F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x93")]
		private bool _playMultiSound4;

		[Token(Token = "0x40011F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Transform _actorTrans;

		[Token(Token = "0x40011F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private int _lastRepetition;

		[Token(Token = "0x17000198")]
		private bool CanTransmitToOtherPlayers
		{
			[Token(Token = "0x6001021")]
			[Address(RVA = "0xC1B374", Offset = "0xC1B374", VA = "0xC1B374")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600101D")]
		[Address(RVA = "0xC1B0C8", Offset = "0xC1B0C8", VA = "0xC1B0C8", Slot = "4")]
		public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x600101E")]
		[Address(RVA = "0xC1B37C", Offset = "0xC1B37C", VA = "0xC1B37C", Slot = "5")]
		public override void OnStateUpdate(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x600101F")]
		[Address(RVA = "0xC1BB34", Offset = "0xC1BB34", VA = "0xC1BB34", Slot = "6")]
		public override void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x6001020")]
		[Address(RVA = "0xC1B27C", Offset = "0xC1B27C", VA = "0xC1B27C")]
		private Transform ActorTrans(Animator anim)
		{
			return null;
		}

		[Token(Token = "0x6001022")]
		[Address(RVA = "0xC1B31C", Offset = "0xC1B31C", VA = "0xC1B31C")]
		private static string GetVariationName(string varName)
		{
			return null;
		}

		[Token(Token = "0x6001023")]
		[Address(RVA = "0xC1BDB4", Offset = "0xC1BDB4", VA = "0xC1BDB4")]
		public MechanimStateSounds()
		{
		}
	}
	[Token(Token = "0x200028D")]
	[SerializeField]
	public class PlaySoundResult
	{
		[Token(Token = "0x40011F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DBF18", Offset = "0x8DBF18")]
		private bool <SoundPlayed>k__BackingField;

		[Token(Token = "0x40011F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DBF28", Offset = "0x8DBF28")]
		private bool <SoundScheduled>k__BackingField;

		[Token(Token = "0x40011F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DBF38", Offset = "0x8DBF38")]
		private SoundGroupVariation <ActingVariation>k__BackingField;

		[Token(Token = "0x17000199")]
		public bool SoundPlayed
		{
			[Token(Token = "0x6001025")]
			[Address(RVA = "0xC29ACC", Offset = "0xC29ACC", VA = "0xC29ACC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E135C", Offset = "0x8E135C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001026")]
			[Address(RVA = "0xC29AD4", Offset = "0xC29AD4", VA = "0xC29AD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E136C", Offset = "0x8E136C")]
			set
			{
			}
		}

		[Token(Token = "0x1700019A")]
		public bool SoundScheduled
		{
			[Token(Token = "0x6001027")]
			[Address(RVA = "0xC29AE0", Offset = "0xC29AE0", VA = "0xC29AE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E137C", Offset = "0x8E137C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001028")]
			[Address(RVA = "0xC29AE8", Offset = "0xC29AE8", VA = "0xC29AE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E138C", Offset = "0x8E138C")]
			set
			{
			}
		}

		[Token(Token = "0x1700019B")]
		public SoundGroupVariation ActingVariation
		{
			[Token(Token = "0x6001029")]
			[Address(RVA = "0xC29AF4", Offset = "0xC29AF4", VA = "0xC29AF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E139C", Offset = "0x8E139C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600102A")]
			[Address(RVA = "0xC29AFC", Offset = "0xC29AFC", VA = "0xC29AFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E13AC", Offset = "0x8E13AC")]
			set
			{
			}
		}

		[Token(Token = "0x6001024")]
		[Address(RVA = "0xC29AA0", Offset = "0xC29AA0", VA = "0xC29AA0")]
		public PlaySoundResult()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200028E")]
	public class AmbientSoundToTriggerInfo
	{
		[Token(Token = "0x40011F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int frameToTrigger;

		[Token(Token = "0x40011F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AmbientSound ambient;

		[Token(Token = "0x600102B")]
		[Address(RVA = "0xD67F98", Offset = "0xD67F98", VA = "0xD67F98")]
		public AmbientSoundToTriggerInfo()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200028F")]
	public class AudioEvent
	{
		[Token(Token = "0x2000290")]
		public enum TargetVolumeMode
		{
			[Token(Token = "0x4001223")]
			UseSliderValue,
			[Token(Token = "0x4001224")]
			UseSpecificValue
		}

		[Serializable]
		[Token(Token = "0x2000291")]
		public class MA_SnapshotInfo
		{
			[Token(Token = "0x4001225")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AudioMixerSnapshot snapshot;

			[Token(Token = "0x4001226")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float weight;

			[Token(Token = "0x600102E")]
			[Address(RVA = "0xC14124", Offset = "0xC14124", VA = "0xC14124")]
			public MA_SnapshotInfo(AudioMixerSnapshot snap, float wt)
			{
			}
		}

		[Token(Token = "0x40011FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string actionName;

		[Token(Token = "0x40011FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isExpanded;

		[Token(Token = "0x40011FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string soundType;

		[Token(Token = "0x40011FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool allPlaylistControllersForGroupCmd;

		[Token(Token = "0x40011FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool allSoundTypesForGroupCmd;

		[Token(Token = "0x40011FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public bool allSoundTypesForBusCmd;

		[Token(Token = "0x4001200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float volume;

		[Token(Token = "0x4001201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool useFixedPitch;

		[Token(Token = "0x4001202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float pitch;

		[Token(Token = "0x4001203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public EventSounds.GlidePitchType glidePitchType;

		[Token(Token = "0x4001204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float targetGlidePitch;

		[Token(Token = "0x4001205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float pitchGlideTime;

		[Token(Token = "0x4001206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float delaySound;

		[Token(Token = "0x4001207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public MasterAudio.EventSoundFunctionType currentSoundFunctionType;

		[Token(Token = "0x4001208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public MasterAudio.PlaylistCommand currentPlaylistCommand;

		[Token(Token = "0x4001209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public MasterAudio.SoundGroupCommand currentSoundGroupCommand;

		[Token(Token = "0x400120A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public MasterAudio.BusCommand currentBusCommand;

		[Token(Token = "0x400120B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public MasterAudio.CustomEventCommand currentCustomEventCommand;

		[Token(Token = "0x400120C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public MasterAudio.GlobalCommand currentGlobalCommand;

		[Token(Token = "0x400120D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public MasterAudio.UnityMixerCommand currentMixerCommand;

		[Token(Token = "0x400120E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public AudioMixerSnapshot snapshotToTransitionTo;

		[Token(Token = "0x400120F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float snapshotTransitionTime;

		[Token(Token = "0x4001210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public List<MA_SnapshotInfo> snapshotsToBlend;

		[Token(Token = "0x4001211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public MasterAudio.PersistentSettingsCommand currentPersistentSettingsCommand;

		[Token(Token = "0x4001212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public string busName;

		[Token(Token = "0x4001213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public string playlistName;

		[Token(Token = "0x4001214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public string playlistControllerName;

		[Token(Token = "0x4001215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public bool startPlaylist;

		[Token(Token = "0x4001216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public float fadeVolume;

		[Token(Token = "0x4001217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public float fadeTime;

		[Token(Token = "0x4001218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public float minAge;

		[Token(Token = "0x4001219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public bool stopAfterFade;

		[Token(Token = "0x400121A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
		public bool restoreVolumeAfterFade;

		[Token(Token = "0x400121B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public TargetVolumeMode targetVolMode;

		[Token(Token = "0x400121C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public string clipName;

		[Token(Token = "0x400121D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public EventSounds.VariationType variationType;

		[Token(Token = "0x400121E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public string variationName;

		[Token(Token = "0x400121F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public float colliderMaxDistance;

		[Token(Token = "0x4001220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		public bool showSphereGizmo;

		[Token(Token = "0x4001221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public string theCustomEventName;

		[Token(Token = "0x1700019C")]
		public bool IsFadeCommand
		{
			[Token(Token = "0x600102C")]
			[Address(RVA = "0xD6E028", Offset = "0xD6E028", VA = "0xD6E028")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600102D")]
		[Address(RVA = "0xD6E090", Offset = "0xD6E090", VA = "0xD6E090")]
		public AudioEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000292")]
	public class AudioEventGroup
	{
		[Token(Token = "0x4001227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool isExpanded;

		[Token(Token = "0x4001228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool multiplayerBroadcast;

		[Token(Token = "0x4001229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public bool useLayerFilter;

		[Token(Token = "0x400122A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
		public bool useTagFilter;

		[Token(Token = "0x400122B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<int> matchingLayers;

		[Token(Token = "0x400122C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<string> matchingTags;

		[Token(Token = "0x400122D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool customSoundActive;

		[Token(Token = "0x400122E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool isCustomEvent;

		[Token(Token = "0x400122F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string customEventName;

		[Token(Token = "0x4001230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool mechanimEventActive;

		[Token(Token = "0x4001231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool isMechanimStateCheckEvent;

		[Token(Token = "0x4001232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string mechanimStateName;

		[Token(Token = "0x4001233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool mechEventPlayedForState;

		[Token(Token = "0x4001234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public List<AudioEvent> SoundEvents;

		[Token(Token = "0x4001235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public EventSounds.PreviousSoundStopMode mouseDragStopMode;

		[Token(Token = "0x4001236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float mouseDragFadeOutTime;

		[Token(Token = "0x4001237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public EventSounds.RetriggerLimMode retriggerLimitMode;

		[Token(Token = "0x4001238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public int limitPerXFrm;

		[Token(Token = "0x4001239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float limitPerXSec;

		[Token(Token = "0x400123A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public int triggeredLastFrame;

		[Token(Token = "0x400123B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float triggeredLastTime;

		[Token(Token = "0x400123C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float triggerStayForTime;

		[Token(Token = "0x400123D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool doesTriggerStayRepeat;

		[Token(Token = "0x400123E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float sliderValue;

		[Token(Token = "0x600102F")]
		[Address(RVA = "0xD6E23C", Offset = "0xD6E23C", VA = "0xD6E23C")]
		public AudioEventGroup()
		{
		}
	}
	[Token(Token = "0x2000293")]
	public class AudioScriptOrder : Attribute
	{
		[Token(Token = "0x400123F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Order;

		[Token(Token = "0x6001030")]
		[Address(RVA = "0xD70300", Offset = "0xD70300", VA = "0xD70300")]
		public AudioScriptOrder(int order)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000294")]
	public class BusFadeInfo
	{
		[Token(Token = "0x4001240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string NameOfBus;

		[Token(Token = "0x4001241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GroupBus ActingBus;

		[Token(Token = "0x4001242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float StartVolume;

		[Token(Token = "0x4001243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float TargetVolume;

		[Token(Token = "0x4001244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float StartTime;

		[Token(Token = "0x4001245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float CompletionTime;

		[Token(Token = "0x4001246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool IsActive;

		[Token(Token = "0x4001247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool WillStopGroupAfterFade;

		[Token(Token = "0x4001248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		public bool WillResetVolumeAfterFade;

		[Token(Token = "0x4001249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action completionAction;

		[Token(Token = "0x6001031")]
		[Address(RVA = "0x1073244", Offset = "0x1073244", VA = "0x1073244")]
		public BusFadeInfo()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000295")]
	public class BusPitchGlideInfo
	{
		[Token(Token = "0x400124A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string NameOfBus;

		[Token(Token = "0x400124B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float CompletionTime;

		[Token(Token = "0x400124C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool IsActive;

		[Token(Token = "0x400124D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<SoundGroupVariation> GlidingVariations;

		[Token(Token = "0x400124E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action completionAction;

		[Token(Token = "0x6001032")]
		[Address(RVA = "0x1073254", Offset = "0x1073254", VA = "0x1073254")]
		public BusPitchGlideInfo()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000296")]
	public class CustomEvent
	{
		[Token(Token = "0x400124F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string EventName;

		[Token(Token = "0x4001250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string ProspectiveName;

		[Token(Token = "0x4001251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool IsEditing;

		[Token(Token = "0x4001252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool eventExpanded;

		[Token(Token = "0x4001253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public MasterAudio.CustomEventReceiveMode eventReceiveMode;

		[Token(Token = "0x4001254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float distanceThreshold;

		[Token(Token = "0x4001255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public MasterAudio.EventReceiveFilter eventRcvFilterMode;

		[Token(Token = "0x4001256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int filterModeQty;

		[Token(Token = "0x4001257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool isTemporary;

		[Token(Token = "0x4001258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int frameLastFired;

		[Token(Token = "0x4001259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string categoryName;

		[Token(Token = "0x6001033")]
		[Address(RVA = "0xCC0B80", Offset = "0xCC0B80", VA = "0xCC0B80")]
		public CustomEvent(string eventName)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000297")]
	public class CustomEventCategory
	{
		[Token(Token = "0x400125A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string CatName;

		[Token(Token = "0x400125B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool IsExpanded;

		[Token(Token = "0x400125C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool IsEditing;

		[Token(Token = "0x400125D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool IsTemporary;

		[Token(Token = "0x400125E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string ProspectiveName;

		[Token(Token = "0x6001034")]
		[Address(RVA = "0xCC0C04", Offset = "0xCC0C04", VA = "0xCC0C04")]
		public CustomEventCategory()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000298")]
	public class CustomEventToFireInfo
	{
		[Token(Token = "0x400125F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string eventName;

		[Token(Token = "0x4001260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform eventOrigin;

		[Token(Token = "0x6001035")]
		[Address(RVA = "0xCC0C64", Offset = "0xCC0C64", VA = "0xCC0C64")]
		public CustomEventToFireInfo()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000299")]
	public class DuckGroupInfo
	{
		[Token(Token = "0x4001261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string soundType;

		[Token(Token = "0x4001262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float riseVolStart;

		[Token(Token = "0x4001263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float unduckTime;

		[Token(Token = "0x4001264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float duckedVolumeCut;

		[Token(Token = "0x4001265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool isTemporary;

		[Token(Token = "0x6001036")]
		[Address(RVA = "0xCC50FC", Offset = "0xCC50FC", VA = "0xCC50FC")]
		public DuckGroupInfo()
		{
		}
	}
	[Token(Token = "0x200029A")]
	public class DynamicGroupVariation : MonoBehaviour
	{
		[Token(Token = "0x4001266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DBF48", Offset = "0x8DBF48")]
		public int probabilityToPlay;

		[Token(Token = "0x4001267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DBF60", Offset = "0x8DBF60")]
		public int importance;

		[Token(Token = "0x4001268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool isUninterruptible;

		[Token(Token = "0x4001269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool useLocalization;

		[Token(Token = "0x400126A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		public bool useRandomPitch;

		[Token(Token = "0x400126B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public SoundGroupVariation.RandomPitchMode randomPitchMode;

		[Token(Token = "0x400126C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float randomPitchMin;

		[Token(Token = "0x400126D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float randomPitchMax;

		[Token(Token = "0x400126E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool useRandomVolume;

		[Token(Token = "0x400126F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public SoundGroupVariation.RandomVolumeMode randomVolumeMode;

		[Token(Token = "0x4001270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float randomVolumeMin;

		[Token(Token = "0x4001271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float randomVolumeMax;

		[Token(Token = "0x4001272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int weight;

		[Token(Token = "0x4001273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public MasterAudio.AudioLocation audLocation;

		[Token(Token = "0x4001274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string resourceFileName;

		[Token(Token = "0x4001275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool isExpanded;

		[Token(Token = "0x4001276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool isChecked;

		[Token(Token = "0x4001277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		public bool useFades;

		[Token(Token = "0x4001278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float fadeInTime;

		[Token(Token = "0x4001279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float fadeOutTime;

		[Token(Token = "0x400127A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public bool useCustomLooping;

		[Token(Token = "0x400127B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int minCustomLoops;

		[Token(Token = "0x400127C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public int maxCustomLoops;

		[Token(Token = "0x400127D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool useIntroSilence;

		[Token(Token = "0x400127E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float introSilenceMin;

		[Token(Token = "0x400127F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float introSilenceMax;

		[Token(Token = "0x4001280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public bool useRandomStartTime;

		[Token(Token = "0x4001281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float randomStartMinPercent;

		[Token(Token = "0x4001282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float randomStartMaxPercent;

		[Token(Token = "0x4001283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float randomEndPercent;

		[Token(Token = "0x4001284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private AudioDistortionFilter _distFilter;

		[Token(Token = "0x4001285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private AudioEchoFilter _echoFilter;

		[Token(Token = "0x4001286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private AudioHighPassFilter _hpFilter;

		[Token(Token = "0x4001287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private AudioLowPassFilter _lpFilter;

		[Token(Token = "0x4001288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private AudioReverbFilter _reverbFilter;

		[Token(Token = "0x4001289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private AudioChorusFilter _chorusFilter;

		[Token(Token = "0x400128A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private DynamicSoundGroup _parentGroupScript;

		[Token(Token = "0x400128B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Transform _trans;

		[Token(Token = "0x400128C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private AudioSource _aud;

		[Token(Token = "0x1700019D")]
		public AudioDistortionFilter DistortionFilter
		{
			[Token(Token = "0x6001037")]
			[Address(RVA = "0xCC550C", Offset = "0xCC550C", VA = "0xCC550C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019E")]
		public AudioReverbFilter ReverbFilter
		{
			[Token(Token = "0x6001038")]
			[Address(RVA = "0xCC55AC", Offset = "0xCC55AC", VA = "0xCC55AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019F")]
		public AudioChorusFilter ChorusFilter
		{
			[Token(Token = "0x6001039")]
			[Address(RVA = "0xCC564C", Offset = "0xCC564C", VA = "0xCC564C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A0")]
		public AudioEchoFilter EchoFilter
		{
			[Token(Token = "0x600103A")]
			[Address(RVA = "0xCC56EC", Offset = "0xCC56EC", VA = "0xCC56EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A1")]
		public AudioLowPassFilter LowPassFilter
		{
			[Token(Token = "0x600103B")]
			[Address(RVA = "0xCC578C", Offset = "0xCC578C", VA = "0xCC578C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A2")]
		public AudioHighPassFilter HighPassFilter
		{
			[Token(Token = "0x600103C")]
			[Address(RVA = "0xCC582C", Offset = "0xCC582C", VA = "0xCC582C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A3")]
		public DynamicSoundGroup ParentGroup
		{
			[Token(Token = "0x600103D")]
			[Address(RVA = "0xCC58CC", Offset = "0xCC58CC", VA = "0xCC58CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A4")]
		public Transform Trans
		{
			[Token(Token = "0x600103E")]
			[Address(RVA = "0xCC5A4C", Offset = "0xCC5A4C", VA = "0xCC5A4C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A5")]
		public bool HasActiveFXFilter
		{
			[Token(Token = "0x600103F")]
			[Address(RVA = "0xCC5AD8", Offset = "0xCC5AD8", VA = "0xCC5AD8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001A6")]
		public AudioSource VarAudio
		{
			[Token(Token = "0x6001040")]
			[Address(RVA = "0xCC5D2C", Offset = "0xCC5D2C", VA = "0xCC5D2C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001041")]
		[Address(RVA = "0xCC5DCC", Offset = "0xCC5DCC", VA = "0xCC5DCC")]
		public DynamicGroupVariation()
		{
		}
	}
	[Token(Token = "0x200029B")]
	public class DynamicSoundGroup : MonoBehaviour
	{
		[Token(Token = "0x400128D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject variationTemplate;

		[Token(Token = "0x400128E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool alwaysHighestPriority;

		[Token(Token = "0x400128F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float groupMasterVolume;

		[Token(Token = "0x4001290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int retriggerPercentage;

		[Token(Token = "0x4001291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public MasterAudioGroup.VariationSequence curVariationSequence;

		[Token(Token = "0x4001292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool useNoRepeatRefill;

		[Token(Token = "0x4001293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool useInactivePeriodPoolRefill;

		[Token(Token = "0x4001294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float inactivePeriodSeconds;

		[Token(Token = "0x4001295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public MasterAudioGroup.VariationMode curVariationMode;

		[Token(Token = "0x4001296")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public MasterAudio.AudioLocation bulkVariationMode;

		[Token(Token = "0x4001297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float chainLoopDelayMin;

		[Token(Token = "0x4001298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float chainLoopDelayMax;

		[Token(Token = "0x4001299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public MasterAudioGroup.ChainedLoopLoopMode chainLoopMode;

		[Token(Token = "0x400129A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int chainLoopNumLoops;

		[Token(Token = "0x400129B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool useDialogFadeOut;

		[Token(Token = "0x400129C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float dialogFadeOutTime;

		[Token(Token = "0x400129D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string comments;

		[Token(Token = "0x400129E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool logSound;

		[Token(Token = "0x400129F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		public bool soundPlayedEventActive;

		[Token(Token = "0x40012A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public string soundPlayedCustomEvent;

		[Token(Token = "0x40012A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public int busIndex;

		[Token(Token = "0x40012A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DBF78", Offset = "0x8DBF78")]
		public int importance;

		[Token(Token = "0x40012A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool isUninterruptible;

		[Token(Token = "0x40012A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public MasterAudio.ItemSpatialBlendType spatialBlendType;

		[Token(Token = "0x40012A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float spatialBlend;

		[Token(Token = "0x40012A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public MasterAudio.DefaultGroupPlayType groupPlayType;

		[Token(Token = "0x40012A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public string busName;

		[Token(Token = "0x40012A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public bool isExistingBus;

		[Token(Token = "0x40012A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		public bool isCopiedFromDGSC;

		[Token(Token = "0x40012AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public MasterAudioGroup.LimitMode limitMode;

		[Token(Token = "0x40012AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int limitPerXFrames;

		[Token(Token = "0x40012AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public float minimumTimeBetween;

		[Token(Token = "0x40012AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public bool limitPolyphony;

		[Token(Token = "0x40012AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public int voiceLimitCount;

		[Token(Token = "0x40012AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public MasterAudioGroup.TargetDespawnedBehavior targetDespawnedBehavior;

		[Token(Token = "0x40012B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public float despawnFadeTime;

		[Token(Token = "0x40012B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public bool isUsingOcclusion;

		[Token(Token = "0x40012B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
		public bool willOcclusionOverrideRaycastOffset;

		[Token(Token = "0x40012B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public float occlusionRayCastOffset;

		[Token(Token = "0x40012B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public bool willOcclusionOverrideFrequencies;

		[Token(Token = "0x40012B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public float occlusionMaxCutoffFreq;

		[Token(Token = "0x40012B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public float occlusionMinCutoffFreq;

		[Token(Token = "0x40012B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public bool copySettingsExpanded;

		[Token(Token = "0x40012B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC5")]
		public bool expandLinkedGroups;

		[Token(Token = "0x40012B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public List<string> childSoundGroups;

		[Token(Token = "0x40012BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public List<string> endLinkedGroups;

		[Token(Token = "0x40012BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public MasterAudio.LinkedGroupSelectionType linkedStartGroupSelectionType;

		[Token(Token = "0x40012BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public MasterAudio.LinkedGroupSelectionType linkedStopGroupSelectionType;

		[Token(Token = "0x40012BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public List<DynamicGroupVariation> groupVariations;

		[Token(Token = "0x6001042")]
		[Address(RVA = "0xCC5E08", Offset = "0xCC5E08", VA = "0xCC5E08")]
		public DynamicSoundGroup()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200029C")]
	public class FootstepGroup
	{
		[Token(Token = "0x40012BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool isExpanded;

		[Token(Token = "0x40012BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool useLayerFilter;

		[Token(Token = "0x40012C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public bool useTagFilter;

		[Token(Token = "0x40012C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<int> matchingLayers;

		[Token(Token = "0x40012C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<string> matchingTags;

		[Token(Token = "0x40012C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string soundType;

		[Token(Token = "0x40012C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public EventSounds.VariationType variationType;

		[Token(Token = "0x40012C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string variationName;

		[Token(Token = "0x40012C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float volume;

		[Token(Token = "0x40012C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool useFixedPitch;

		[Token(Token = "0x40012C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float pitch;

		[Token(Token = "0x40012C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float delaySound;

		[Token(Token = "0x6001043")]
		[Address(RVA = "0x153550C", Offset = "0x153550C", VA = "0x153550C")]
		public FootstepGroup()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200029D")]
	public class GroupBus
	{
		[Token(Token = "0x40012CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string busName;

		[Token(Token = "0x40012CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float volume;

		[Token(Token = "0x40012CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool isSoloed;

		[Token(Token = "0x40012CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		public bool isMuted;

		[Token(Token = "0x40012CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int voiceLimit;

		[Token(Token = "0x40012CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool isExisting;

		[Token(Token = "0x40012D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool isTemporary;

		[Token(Token = "0x40012D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
		public bool isUsingOcclusion;

		[Token(Token = "0x40012D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MasterAudio.BusVoiceLimitExceededMode busVoiceLimitExceededMode;

		[Token(Token = "0x40012D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Color busColor;

		[Token(Token = "0x40012D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AudioMixerGroup mixerChannel;

		[Token(Token = "0x40012D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool forceTo2D;

		[Token(Token = "0x40012D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly List<int> _activeAudioSourcesIds;

		[Token(Token = "0x40012D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float _originalVolume;

		[Token(Token = "0x170001A7")]
		public int ActiveVoices
		{
			[Token(Token = "0x6001046")]
			[Address(RVA = "0x1564748", Offset = "0x1564748", VA = "0x1564748")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001A8")]
		public bool BusVoiceLimitReached
		{
			[Token(Token = "0x6001047")]
			[Address(RVA = "0x1564794", Offset = "0x1564794", VA = "0x1564794")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001A9")]
		public float OriginalVolume
		{
			[Token(Token = "0x6001048")]
			[Address(RVA = "0x15647FC", Offset = "0x15647FC", VA = "0x15647FC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001049")]
			[Address(RVA = "0x1564804", Offset = "0x1564804", VA = "0x1564804")]
			set
			{
			}
		}

		[Token(Token = "0x6001044")]
		[Address(RVA = "0x1564644", Offset = "0x1564644", VA = "0x1564644")]
		public void AddActiveAudioSourceId(int id)
		{
		}

		[Token(Token = "0x6001045")]
		[Address(RVA = "0x15646E4", Offset = "0x15646E4", VA = "0x15646E4")]
		public void RemoveActiveAudioSourceId(int id)
		{
		}

		[Token(Token = "0x600104A")]
		[Address(RVA = "0x156480C", Offset = "0x156480C", VA = "0x156480C")]
		public GroupBus()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200029E")]
	public class GroupFadeInfo
	{
		[Token(Token = "0x40012D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MasterAudioGroup ActingGroup;

		[Token(Token = "0x40012D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string NameOfGroup;

		[Token(Token = "0x40012DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float StartVolume;

		[Token(Token = "0x40012DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float TargetVolume;

		[Token(Token = "0x40012DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float StartTime;

		[Token(Token = "0x40012DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float CompletionTime;

		[Token(Token = "0x40012DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool IsActive;

		[Token(Token = "0x40012DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool WillStopGroupAfterFade;

		[Token(Token = "0x40012E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		public bool WillResetVolumeAfterFade;

		[Token(Token = "0x40012E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action completionAction;

		[Token(Token = "0x600104B")]
		[Address(RVA = "0x15648B4", Offset = "0x15648B4", VA = "0x15648B4")]
		public GroupFadeInfo()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200029F")]
	public class GroupPitchGlideInfo
	{
		[Token(Token = "0x40012E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MasterAudioGroup ActingGroup;

		[Token(Token = "0x40012E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string NameOfGroup;

		[Token(Token = "0x40012E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float CompletionTime;

		[Token(Token = "0x40012E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool IsActive;

		[Token(Token = "0x40012E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<SoundGroupVariation> GlidingVariations;

		[Token(Token = "0x40012E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action completionAction;

		[Token(Token = "0x600104C")]
		[Address(RVA = "0x15648C4", Offset = "0x15648C4", VA = "0x15648C4")]
		public GroupPitchGlideInfo()
		{
		}
	}
	[Token(Token = "0x20002A0")]
	public interface ICustomEventReceiver
	{
		[Token(Token = "0x600104D")]
		void CheckForIllegalCustomEvents();

		[Token(Token = "0x600104E")]
		void ReceiveEvent(string customEventName, Vector3 originPoint);

		[Token(Token = "0x600104F")]
		bool SubscribesToEvent(string customEventName);

		[Token(Token = "0x6001050")]
		void RegisterReceiver();

		[Token(Token = "0x6001051")]
		void UnregisterReceiver();

		[Token(Token = "0x6001052")]
		IList<AudioEventGroup> GetAllEvents();
	}
	[Token(Token = "0x20002A1")]
	public class MasterAudioGroup : MonoBehaviour
	{
		[Token(Token = "0x20002A2")]
		public enum TargetDespawnedBehavior
		{
			[Token(Token = "0x4001326")]
			None,
			[Token(Token = "0x4001327")]
			Stop,
			[Token(Token = "0x4001328")]
			FadeOut
		}

		[Token(Token = "0x20002A3")]
		public enum VariationSequence
		{
			[Token(Token = "0x400132A")]
			Randomized,
			[Token(Token = "0x400132B")]
			TopToBottom
		}

		[Token(Token = "0x20002A4")]
		public enum VariationMode
		{
			[Token(Token = "0x400132D")]
			Normal,
			[Token(Token = "0x400132E")]
			LoopedChain,
			[Token(Token = "0x400132F")]
			Dialog
		}

		[Token(Token = "0x20002A5")]
		public enum ChainedLoopLoopMode
		{
			[Token(Token = "0x4001331")]
			Endless,
			[Token(Token = "0x4001332")]
			NumberOfLoops
		}

		[Token(Token = "0x20002A6")]
		public enum LimitMode
		{
			[Token(Token = "0x4001334")]
			None,
			[Token(Token = "0x4001335")]
			FrameBased,
			[Token(Token = "0x4001336")]
			TimeBased
		}

		[Token(Token = "0x40012E8")]
		public const float UseCurveSpatialBlend = -99f;

		[Token(Token = "0x40012E9")]
		public const string NoBus = "[NO BUS]";

		[Token(Token = "0x40012EA")]
		public const int MinNoRepeatVariations = 3;

		[Token(Token = "0x40012EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int busIndex;

		[Token(Token = "0x40012EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public MasterAudio.ItemSpatialBlendType spatialBlendType;

		[Token(Token = "0x40012ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float spatialBlend;

		[Token(Token = "0x40012EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public MasterAudio.DefaultGroupPlayType groupPlayType;

		[Token(Token = "0x40012EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool isSelected;

		[Token(Token = "0x40012F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool isExpanded;

		[Token(Token = "0x40012F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float groupMasterVolume;

		[Token(Token = "0x40012F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int retriggerPercentage;

		[Token(Token = "0x40012F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public VariationMode curVariationMode;

		[Token(Token = "0x40012F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool alwaysHighestPriority;

		[Token(Token = "0x40012F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DBF90", Offset = "0x8DBF90")]
		public int importance;

		[Token(Token = "0x40012F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool isUninterruptible;

		[Token(Token = "0x40012F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float chainLoopDelayMin;

		[Token(Token = "0x40012F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float chainLoopDelayMax;

		[Token(Token = "0x40012F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public ChainedLoopLoopMode chainLoopMode;

		[Token(Token = "0x40012FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int chainLoopNumLoops;

		[Token(Token = "0x40012FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public bool useDialogFadeOut;

		[Token(Token = "0x40012FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float dialogFadeOutTime;

		[Token(Token = "0x40012FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public VariationSequence curVariationSequence;

		[Token(Token = "0x40012FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool useNoRepeatRefill;

		[Token(Token = "0x40012FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		public bool useInactivePeriodPoolRefill;

		[Token(Token = "0x4001300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float inactivePeriodSeconds;

		[Token(Token = "0x4001301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public List<SoundGroupVariation> groupVariations;

		[Token(Token = "0x4001302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public MasterAudio.AudioLocation bulkVariationMode;

		[Token(Token = "0x4001303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public string comments;

		[Token(Token = "0x4001304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public bool logSound;

		[Token(Token = "0x4001305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
		public bool copySettingsExpanded;

		[Token(Token = "0x4001306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
		public bool expandLinkedGroups;

		[Token(Token = "0x4001307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public List<string> childSoundGroups;

		[Token(Token = "0x4001308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public List<string> endLinkedGroups;

		[Token(Token = "0x4001309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public MasterAudio.LinkedGroupSelectionType linkedStartGroupSelectionType;

		[Token(Token = "0x400130A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public MasterAudio.LinkedGroupSelectionType linkedStopGroupSelectionType;

		[Token(Token = "0x400130B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public LimitMode limitMode;

		[Token(Token = "0x400130C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public int limitPerXFrames;

		[Token(Token = "0x400130D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public float minimumTimeBetween;

		[Token(Token = "0x400130E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public bool useClipAgePriority;

		[Token(Token = "0x400130F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAD")]
		public bool limitPolyphony;

		[Token(Token = "0x4001310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public int voiceLimitCount;

		[Token(Token = "0x4001311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public TargetDespawnedBehavior targetDespawnedBehavior;

		[Token(Token = "0x4001312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public float despawnFadeTime;

		[Token(Token = "0x4001313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public bool isUsingOcclusion;

		[Token(Token = "0x4001314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBD")]
		public bool willOcclusionOverrideRaycastOffset;

		[Token(Token = "0x4001315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public float occlusionRayCastOffset;

		[Token(Token = "0x4001316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public bool willOcclusionOverrideFrequencies;

		[Token(Token = "0x4001317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public float occlusionMaxCutoffFreq;

		[Token(Token = "0x4001318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public float occlusionMinCutoffFreq;

		[Token(Token = "0x4001319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public bool isSoloed;

		[Token(Token = "0x400131A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
		public bool isMuted;

		[Token(Token = "0x400131B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD2")]
		public bool soundPlayedEventActive;

		[Token(Token = "0x400131C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public string soundPlayedCustomEvent;

		[Token(Token = "0x400131D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public bool willCleanUpDelegatesAfterStop;

		[Token(Token = "0x400131F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public int frames;

		[Token(Token = "0x4001320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private List<int> _activeAudioSourcesIds;

		[Token(Token = "0x4001321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private string _objectName;

		[Token(Token = "0x4001322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Transform _trans;

		[Token(Token = "0x4001323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private float _originalVolume;

		[Token(Token = "0x4001324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DBFB8", Offset = "0x8DBFB8")]
		private int <ChainLoopCount>k__BackingField;

		[Token(Token = "0x170001AA")]
		public float SpatialBlendForGroup
		{
			[Token(Token = "0x6001058")]
			[Address(RVA = "0xC1A308", Offset = "0xC1A308", VA = "0xC1A308")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001AB")]
		public int ActiveVoices
		{
			[Token(Token = "0x6001059")]
			[Address(RVA = "0xC1A3F4", Offset = "0xC1A3F4", VA = "0xC1A3F4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001AC")]
		public int TotalVoices
		{
			[Token(Token = "0x600105A")]
			[Address(RVA = "0xC1A444", Offset = "0xC1A444", VA = "0xC1A444")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001AD")]
		public bool WillCleanUpDelegatesAfterStop
		{
			[Token(Token = "0x600105B")]
			[Address(RVA = "0xC1A468", Offset = "0xC1A468", VA = "0xC1A468")]
			set
			{
			}
		}

		[Token(Token = "0x170001AE")]
		public GroupBus BusForGroup
		{
			[Token(Token = "0x600105C")]
			[Address(RVA = "0xC1A18C", Offset = "0xC1A18C", VA = "0xC1A18C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AF")]
		public float OriginalVolume
		{
			[Token(Token = "0x600105D")]
			[Address(RVA = "0xC1A474", Offset = "0xC1A474", VA = "0xC1A474")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600105E")]
			[Address(RVA = "0xC1A47C", Offset = "0xC1A47C", VA = "0xC1A47C")]
			set
			{
			}
		}

		[Token(Token = "0x170001B0")]
		public bool LoggingEnabledForGroup
		{
			[Token(Token = "0x600105F")]
			[Address(RVA = "0xC1A484", Offset = "0xC1A484", VA = "0xC1A484")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001B1")]
		public int ChainLoopCount
		{
			[Token(Token = "0x6001063")]
			[Address(RVA = "0xC1A520", Offset = "0xC1A520", VA = "0xC1A520")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E13DC", Offset = "0x8E13DC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001064")]
			[Address(RVA = "0xC1A528", Offset = "0xC1A528", VA = "0xC1A528")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E13EC", Offset = "0x8E13EC")]
			set
			{
			}
		}

		[Token(Token = "0x170001B2")]
		public string GameObjectName
		{
			[Token(Token = "0x6001065")]
			[Address(RVA = "0xC1A530", Offset = "0xC1A530", VA = "0xC1A530")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B3")]
		public MasterAudio.GroupPlayType GroupPlayType
		{
			[Token(Token = "0x6001066")]
			[Address(RVA = "0xC1A574", Offset = "0xC1A574", VA = "0xC1A574")]
			get
			{
				return default(MasterAudio.GroupPlayType);
			}
		}

		[Token(Token = "0x170001B4")]
		public bool UsesNoRepeat
		{
			[Token(Token = "0x6001067")]
			[Address(RVA = "0xC1A6C0", Offset = "0xC1A6C0", VA = "0xC1A6C0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001B5")]
		private Transform Trans
		{
			[Token(Token = "0x6001068")]
			[Address(RVA = "0xC1A040", Offset = "0xC1A040", VA = "0xC1A040")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B6")]
		private List<int> ActiveAudioSourceIds
		{
			[Token(Token = "0x6001069")]
			[Address(RVA = "0xC19F98", Offset = "0xC19F98", VA = "0xC19F98")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000006")]
		public event Action LastVariationFinishedPlay
		{
			[Token(Token = "0x6001053")]
			[Address(RVA = "0xC19D48", Offset = "0xC19D48", VA = "0xC19D48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E13BC", Offset = "0x8E13BC")]
			add
			{
			}
			[Token(Token = "0x6001054")]
			[Address(RVA = "0xC19DE8", Offset = "0xC19DE8", VA = "0xC19DE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E13CC", Offset = "0x8E13CC")]
			remove
			{
			}
		}

		[Token(Token = "0x6001055")]
		[Address(RVA = "0xC19E88", Offset = "0xC19E88", VA = "0xC19E88")]
		private void Start()
		{
		}

		[Token(Token = "0x6001056")]
		[Address(RVA = "0xC1A0CC", Offset = "0xC1A0CC", VA = "0xC1A0CC")]
		public void AddActiveAudioSourceId(int varInstanceId)
		{
		}

		[Token(Token = "0x6001057")]
		[Address(RVA = "0xC1A278", Offset = "0xC1A278", VA = "0xC1A278")]
		public void RemoveActiveAudioSourceId(int varInstanceId)
		{
		}

		[Token(Token = "0x6001060")]
		[Address(RVA = "0xC1A4FC", Offset = "0xC1A4FC", VA = "0xC1A4FC")]
		public void FireLastVariationFinishedPlay()
		{
		}

		[Token(Token = "0x6001061")]
		[Address(RVA = "0xC1A510", Offset = "0xC1A510", VA = "0xC1A510")]
		public void SubscribeToLastVariationFinishedPlay(Action finishedCallback)
		{
		}

		[Token(Token = "0x6001062")]
		[Address(RVA = "0xC1A518", Offset = "0xC1A518", VA = "0xC1A518")]
		public void UnsubscribeFromLastVariationFinishedPlay()
		{
		}

		[Token(Token = "0x600106A")]
		[Address(RVA = "0xC1A730", Offset = "0xC1A730", VA = "0xC1A730")]
		public MasterAudioGroup()
		{
		}
	}
	[Token(Token = "0x20002A7")]
	public class MasterCustomEventAttribute : PropertyAttribute
	{
		[Token(Token = "0x600106B")]
		[Address(RVA = "0xC1AAB4", Offset = "0xC1AAB4", VA = "0xC1AAB4")]
		public MasterCustomEventAttribute()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002A8")]
	public class MusicSetting
	{
		[Token(Token = "0x20002A9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD398", Offset = "0x8CD398")]
		private sealed class <>c__DisplayClass32_0
		{
			[Token(Token = "0x4001350")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SongMetadataStringValue valToClone;

			[Token(Token = "0x6001071")]
			[Address(RVA = "0x1904E00", Offset = "0x1904E00", VA = "0x1904E00")]
			public <>c__DisplayClass32_0()
			{
			}

			[Token(Token = "0x6001072")]
			[Address(RVA = "0x1904E08", Offset = "0x1904E08", VA = "0x1904E08")]
			internal bool <Clone>b__0(SongMetadataProperty p)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20002AA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD3A8", Offset = "0x8CD3A8")]
		private sealed class <>c__DisplayClass32_1
		{
			[Token(Token = "0x4001351")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SongMetadataFloatValue valToClone;

			[Token(Token = "0x6001073")]
			[Address(RVA = "0x1904E34", Offset = "0x1904E34", VA = "0x1904E34")]
			public <>c__DisplayClass32_1()
			{
			}

			[Token(Token = "0x6001074")]
			[Address(RVA = "0x1904E3C", Offset = "0x1904E3C", VA = "0x1904E3C")]
			internal bool <Clone>b__1(SongMetadataProperty p)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20002AB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD3B8", Offset = "0x8CD3B8")]
		private sealed class <>c__DisplayClass32_2
		{
			[Token(Token = "0x4001352")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SongMetadataBoolValue valToClone;

			[Token(Token = "0x6001075")]
			[Address(RVA = "0x1904E68", Offset = "0x1904E68", VA = "0x1904E68")]
			public <>c__DisplayClass32_2()
			{
			}

			[Token(Token = "0x6001076")]
			[Address(RVA = "0x1904E70", Offset = "0x1904E70", VA = "0x1904E70")]
			internal bool <Clone>b__2(SongMetadataProperty p)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20002AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD3C8", Offset = "0x8CD3C8")]
		private sealed class <>c__DisplayClass32_3
		{
			[Token(Token = "0x4001353")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SongMetadataIntValue valToClone;

			[Token(Token = "0x6001077")]
			[Address(RVA = "0x1904E9C", Offset = "0x1904E9C", VA = "0x1904E9C")]
			public <>c__DisplayClass32_3()
			{
			}

			[Token(Token = "0x6001078")]
			[Address(RVA = "0x1904EA4", Offset = "0x1904EA4", VA = "0x1904EA4")]
			internal bool <Clone>b__3(SongMetadataProperty p)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string alias;

		[Token(Token = "0x4001338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MasterAudio.AudioLocation audLocation;

		[Token(Token = "0x4001339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioClip clip;

		[Token(Token = "0x400133A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string songName;

		[Token(Token = "0x400133B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string resourceFileName;

		[Token(Token = "0x400133C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float volume;

		[Token(Token = "0x400133D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float pitch;

		[Token(Token = "0x400133E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool isExpanded;

		[Token(Token = "0x400133F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public bool isLoop;

		[Token(Token = "0x4001340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		public bool isChecked;

		[Token(Token = "0x4001341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<SongMetadataStringValue> metadataStringValues;

		[Token(Token = "0x4001342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public List<SongMetadataBoolValue> metadataBoolValues;

		[Token(Token = "0x4001343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public List<SongMetadataIntValue> metadataIntValues;

		[Token(Token = "0x4001344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<SongMetadataFloatValue> metadataFloatValues;

		[Token(Token = "0x4001345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool metadataExpanded;

		[Token(Token = "0x4001346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public MasterAudio.CustomSongStartTimeMode songStartTimeMode;

		[Token(Token = "0x4001347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float customStartTime;

		[Token(Token = "0x4001348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float customStartTimeMax;

		[Token(Token = "0x4001349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public int lastKnownTimePoint;

		[Token(Token = "0x400134A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public bool wasLastKnownTimePointSet;

		[Token(Token = "0x400134B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public int songIndex;

		[Token(Token = "0x400134C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public bool songStartedEventExpanded;

		[Token(Token = "0x400134D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public string songStartedCustomEvent;

		[Token(Token = "0x400134E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public bool songChangedEventExpanded;

		[Token(Token = "0x400134F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public string songChangedCustomEvent;

		[Token(Token = "0x170001B7")]
		public bool HasMetadataProperties
		{
			[Token(Token = "0x600106D")]
			[Address(RVA = "0xC20BCC", Offset = "0xC20BCC", VA = "0xC20BCC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001B8")]
		public int MetadataPropertyCount
		{
			[Token(Token = "0x600106E")]
			[Address(RVA = "0xC20BE8", Offset = "0xC20BE8", VA = "0xC20BE8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001B9")]
		public float SongStartTime
		{
			[Token(Token = "0x600106F")]
			[Address(RVA = "0xC20C88", Offset = "0xC20C88", VA = "0xC20C88")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600106C")]
		[Address(RVA = "0xC20A14", Offset = "0xC20A14", VA = "0xC20A14")]
		public MusicSetting()
		{
		}

		[Token(Token = "0x6001070")]
		[Address(RVA = "0xC20CB4", Offset = "0xC20CB4", VA = "0xC20CB4")]
		public static MusicSetting Clone(MusicSetting mus, MasterAudio.Playlist aList)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x20002AD")]
	public class OcclusionFreqChangeInfo
	{
		[Token(Token = "0x4001354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SoundGroupVariation ActingVariation;

		[Token(Token = "0x4001355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float StartFrequency;

		[Token(Token = "0x4001356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float TargetFrequency;

		[Token(Token = "0x4001357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float StartTime;

		[Token(Token = "0x4001358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float CompletionTime;

		[Token(Token = "0x4001359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool IsActive;

		[Token(Token = "0x6001079")]
		[Address(RVA = "0xC2525C", Offset = "0xC2525C", VA = "0xC2525C")]
		public OcclusionFreqChangeInfo()
		{
		}
	}
	[Token(Token = "0x20002AE")]
	public class PlaylistAttribute : PropertyAttribute
	{
		[Token(Token = "0x600107A")]
		[Address(RVA = "0xC29B04", Offset = "0xC29B04", VA = "0xC29B04")]
		public PlaylistAttribute()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002AF")]
	public class SongMetadataBoolValue
	{
		[Token(Token = "0x400135A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string PropertyName;

		[Token(Token = "0x400135B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool Value;

		[Token(Token = "0x600107B")]
		[Address(RVA = "0xDFF5E0", Offset = "0xDFF5E0", VA = "0xDFF5E0")]
		public SongMetadataBoolValue(SongMetadataProperty prop)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002B0")]
	public class SongMetadataFloatValue
	{
		[Token(Token = "0x400135C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string PropertyName;

		[Token(Token = "0x400135D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float Value;

		[Token(Token = "0x600107C")]
		[Address(RVA = "0xDFF614", Offset = "0xDFF614", VA = "0xDFF614")]
		public SongMetadataFloatValue(SongMetadataProperty prop)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002B1")]
	public class SongMetadataIntValue
	{
		[Token(Token = "0x400135E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string PropertyName;

		[Token(Token = "0x400135F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int Value;

		[Token(Token = "0x600107D")]
		[Address(RVA = "0xDFF648", Offset = "0xDFF648", VA = "0xDFF648")]
		public SongMetadataIntValue(SongMetadataProperty prop)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002B2")]
	public class SongMetadataProperty
	{
		[Token(Token = "0x20002B3")]
		public enum MetadataPropertyType
		{
			[Token(Token = "0x4001368")]
			Boolean,
			[Token(Token = "0x4001369")]
			String,
			[Token(Token = "0x400136A")]
			Integer,
			[Token(Token = "0x400136B")]
			Float
		}

		[Token(Token = "0x4001360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MetadataPropertyType PropertyType;

		[Token(Token = "0x4001361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string PropertyName;

		[Token(Token = "0x4001362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string ProspectiveName;

		[Token(Token = "0x4001363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool IsEditing;

		[Token(Token = "0x4001364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool PropertyExpanded;

		[Token(Token = "0x4001365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public bool AllSongsMustContain;

		[Token(Token = "0x4001366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
		public bool CanSongHaveMultiple;

		[Token(Token = "0x600107E")]
		[Address(RVA = "0xDFF67C", Offset = "0xDFF67C", VA = "0xDFF67C")]
		public SongMetadataProperty(string propertyName, MetadataPropertyType propertyType, bool allSongsMustContain, bool canSongHaveMultiple)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002B4")]
	public class SongMetadataStringValue
	{
		[Token(Token = "0x400136C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string PropertyName;

		[Token(Token = "0x400136D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Value;

		[Token(Token = "0x600107F")]
		[Address(RVA = "0xDFF6E0", Offset = "0xDFF6E0", VA = "0xDFF6E0")]
		public SongMetadataStringValue(SongMetadataProperty prop)
		{
		}
	}
	[Token(Token = "0x20002B5")]
	public class SoundGroupAttribute : PropertyAttribute
	{
		[Token(Token = "0x6001080")]
		[Address(RVA = "0xDFF714", Offset = "0xDFF714", VA = "0xDFF714")]
		public SoundGroupAttribute()
		{
		}
	}
	[Token(Token = "0x20002B6")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8CD3D8", Offset = "0x8CD3D8")]
	[AttributeAttribute(Name = "AudioScriptOrder", RVA = "0x8CD3D8", Offset = "0x8CD3D8")]
	public class SoundGroupVariation : MonoBehaviour
	{
		[Token(Token = "0x20002B7")]
		public delegate void SoundFinishedEventHandler();

		[Token(Token = "0x20002B8")]
		public delegate void SoundLoopedEventHandler(int loopNumberStarted);

		[Token(Token = "0x20002B9")]
		public class PlaySoundParams
		{
			[Token(Token = "0x40013B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string SoundType;

			[Token(Token = "0x40013B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float VolumePercentage;

			[Token(Token = "0x40013B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float? Pitch;

			[Token(Token = "0x40013B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public double? TimeToSchedulePlay;

			[Token(Token = "0x40013B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Transform SourceTrans;

			[Token(Token = "0x40013B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public bool AttachToSource;

			[Token(Token = "0x40013BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public float DelaySoundTime;

			[Token(Token = "0x40013BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public bool IsChainLoop;

			[Token(Token = "0x40013BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
			public bool IsSingleSubscribedPlay;

			[Token(Token = "0x40013BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public float GroupCalcVolume;

			[Token(Token = "0x40013BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public bool IsPlaying;

			[Token(Token = "0x60010DB")]
			[Address(RVA = "0x190A644", Offset = "0x190A644", VA = "0x190A644")]
			public PlaySoundParams(string soundType, float volPercent, float groupCalcVolume, float? pitch, Transform sourceTrans, bool attach, float delaySoundTime, double? timeToSchedulePlay, bool isChainLoop, bool isSingleSubscribedPlay)
			{
			}
		}

		[Token(Token = "0x20002BA")]
		public enum PitchMode
		{
			[Token(Token = "0x40013C0")]
			None,
			[Token(Token = "0x40013C1")]
			Gliding
		}

		[Token(Token = "0x20002BB")]
		public enum FadeMode
		{
			[Token(Token = "0x40013C3")]
			None,
			[Token(Token = "0x40013C4")]
			FadeInOut,
			[Token(Token = "0x40013C5")]
			FadeOutEarly,
			[Token(Token = "0x40013C6")]
			GradualFade
		}

		[Token(Token = "0x20002BC")]
		public enum RandomPitchMode
		{
			[Token(Token = "0x40013C8")]
			AddToClipPitch,
			[Token(Token = "0x40013C9")]
			IgnoreClipPitch
		}

		[Token(Token = "0x20002BD")]
		public enum RandomVolumeMode
		{
			[Token(Token = "0x40013CB")]
			AddToClipVolume,
			[Token(Token = "0x40013CC")]
			IgnoreClipVolume
		}

		[Token(Token = "0x20002BE")]
		public enum DetectEndMode
		{
			[Token(Token = "0x40013CE")]
			None,
			[Token(Token = "0x40013CF")]
			DetectEnd
		}

		[Token(Token = "0x20002BF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD44C", Offset = "0x8CD44C")]
		private sealed class <WaitForLoadToUnloadClipAndDeactivate>d__110 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40013D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundGroupVariation <>4__this;

			[Token(Token = "0x170001DA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60010DF")]
				[Address(RVA = "0x190A5F4", Offset = "0x190A5F4", VA = "0x190A5F4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001DB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60010E1")]
				[Address(RVA = "0x190A63C", Offset = "0x190A63C", VA = "0x190A63C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60010DC")]
			[Address(RVA = "0x190A4F4", Offset = "0x190A4F4", VA = "0x190A4F4")]
			[DebuggerHidden]
			public <WaitForLoadToUnloadClipAndDeactivate>d__110(int <>1__state)
			{
			}

			[Token(Token = "0x60010DD")]
			[Address(RVA = "0x190A520", Offset = "0x190A520", VA = "0x190A520", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60010DE")]
			[Address(RVA = "0x190A524", Offset = "0x190A524", VA = "0x190A524", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60010E0")]
			[Address(RVA = "0x190A5FC", Offset = "0x190A5FC", VA = "0x190A5FC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400136E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int weight;

		[Token(Token = "0x400136F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DBFC8", Offset = "0x8DBFC8")]
		public int probabilityToPlay;

		[Token(Token = "0x4001370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DBFE0", Offset = "0x8DBFE0")]
		public int importance;

		[Token(Token = "0x4001371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool isUninterruptible;

		[Token(Token = "0x4001372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool useLocalization;

		[Token(Token = "0x4001373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
		public bool useRandomPitch;

		[Token(Token = "0x4001374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RandomPitchMode randomPitchMode;

		[Token(Token = "0x4001375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float randomPitchMin;

		[Token(Token = "0x4001376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float randomPitchMax;

		[Token(Token = "0x4001377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool useRandomVolume;

		[Token(Token = "0x4001378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public RandomVolumeMode randomVolumeMode;

		[Token(Token = "0x4001379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float randomVolumeMin;

		[Token(Token = "0x400137A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float randomVolumeMax;

		[Token(Token = "0x400137B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public MasterAudio.AudioLocation audLocation;

		[Token(Token = "0x400137C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string resourceFileName;

		[Token(Token = "0x400137D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float original_pitch;

		[Token(Token = "0x400137E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float original_volume;

		[Token(Token = "0x400137F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool isExpanded;

		[Token(Token = "0x4001380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		public bool isChecked;

		[Token(Token = "0x4001381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		public bool useFades;

		[Token(Token = "0x4001382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float fadeInTime;

		[Token(Token = "0x4001383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float fadeOutTime;

		[Token(Token = "0x4001384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public bool useCustomLooping;

		[Token(Token = "0x4001385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int minCustomLoops;

		[Token(Token = "0x4001386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public int maxCustomLoops;

		[Token(Token = "0x4001387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool useRandomStartTime;

		[Token(Token = "0x4001388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float randomStartMinPercent;

		[Token(Token = "0x4001389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float randomStartMaxPercent;

		[Token(Token = "0x400138A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float randomEndPercent;

		[Token(Token = "0x400138B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public bool useIntroSilence;

		[Token(Token = "0x400138C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float introSilenceMin;

		[Token(Token = "0x400138D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float introSilenceMax;

		[Token(Token = "0x400138E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float fadeMaxVolume;

		[Token(Token = "0x400138F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public FadeMode curFadeMode;

		[Token(Token = "0x4001390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public PitchMode curPitchMode;

		[Token(Token = "0x4001391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public DetectEndMode curDetectEndMode;

		[Token(Token = "0x4001392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int frames;

		[Token(Token = "0x4001393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private AudioSource _audioSource;

		[Token(Token = "0x4001394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private readonly PlaySoundParams _playSndParam;

		[Token(Token = "0x4001395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private AudioDistortionFilter _distFilter;

		[Token(Token = "0x4001396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private AudioEchoFilter _echoFilter;

		[Token(Token = "0x4001397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private AudioHighPassFilter _hpFilter;

		[Token(Token = "0x4001398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private AudioLowPassFilter _lpFilter;

		[Token(Token = "0x4001399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private AudioReverbFilter _reverbFilter;

		[Token(Token = "0x400139A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private AudioChorusFilter _chorusFilter;

		[Token(Token = "0x400139B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private float _maxVol;

		[Token(Token = "0x400139C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private int _instanceId;

		[Token(Token = "0x400139D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private bool? _audioLoops;

		[Token(Token = "0x400139E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private int _maxLoops;

		[Token(Token = "0x400139F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private SoundGroupVariationUpdater _varUpdater;

		[Token(Token = "0x40013A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private int _previousSoundFinishedFrame;

		[Token(Token = "0x40013A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private string _soundGroupName;

		[Token(Token = "0x40013A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private MasterAudio.VariationLoadStatus _loadStatus;

		[Token(Token = "0x40013A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private bool _isStopRequested;

		[Token(Token = "0x40013A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10D")]
		private bool _isPaused;

		[Token(Token = "0x40013A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10E")]
		private bool _isWarmingPlay;

		[Token(Token = "0x40013A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Transform _trans;

		[Token(Token = "0x40013A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private GameObject _go;

		[Token(Token = "0x40013AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private Transform _objectToFollow;

		[Token(Token = "0x40013AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private Transform _objectToTriggerFrom;

		[Token(Token = "0x40013AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private MasterAudioGroup _parentGroupScript;

		[Token(Token = "0x40013AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private bool _attachToSource;

		[Token(Token = "0x40013AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private string _resFileName;

		[Token(Token = "0x40013AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private bool _hasStartedEndLinkedGroups;

		[Token(Token = "0x40013B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private Coroutine _loadResourceFileCoroutine;

		[Token(Token = "0x40013B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private Coroutine _loadAddressableCoroutine;

		[Token(Token = "0x40013B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private bool _isUnloadAddressableCoroutineRunning;

		[Token(Token = "0x40013B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DC018", Offset = "0x8DC018")]
		private float <LastTimePlayed>k__BackingField;

		[Token(Token = "0x170001BA")]
		public AudioDistortionFilter DistortionFilter
		{
			[Token(Token = "0x60010A8")]
			[Address(RVA = "0xE04188", Offset = "0xE04188", VA = "0xE04188")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BB")]
		public AudioReverbFilter ReverbFilter
		{
			[Token(Token = "0x60010A9")]
			[Address(RVA = "0xE04228", Offset = "0xE04228", VA = "0xE04228")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BC")]
		public AudioChorusFilter ChorusFilter
		{
			[Token(Token = "0x60010AA")]
			[Address(RVA = "0xE042C8", Offset = "0xE042C8", VA = "0xE042C8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BD")]
		public AudioEchoFilter EchoFilter
		{
			[Token(Token = "0x60010AB")]
			[Address(RVA = "0xE04368", Offset = "0xE04368", VA = "0xE04368")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BE")]
		public AudioLowPassFilter LowPassFilter
		{
			[Token(Token = "0x60010AC")]
			[Address(RVA = "0xE04408", Offset = "0xE04408", VA = "0xE04408")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010AD")]
			[Address(RVA = "0xE04410", Offset = "0xE04410", VA = "0xE04410")]
			set
			{
			}
		}

		[Token(Token = "0x170001BF")]
		public AudioHighPassFilter HighPassFilter
		{
			[Token(Token = "0x60010AE")]
			[Address(RVA = "0xE04418", Offset = "0xE04418", VA = "0xE04418")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C0")]
		public Transform ObjectToFollow
		{
			[Token(Token = "0x60010AF")]
			[Address(RVA = "0xE044B8", Offset = "0xE044B8", VA = "0xE044B8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010B0")]
			[Address(RVA = "0xE044C0", Offset = "0xE044C0", VA = "0xE044C0")]
			set
			{
			}
		}

		[Token(Token = "0x170001C1")]
		public Transform ObjectToTriggerFrom
		{
			[Token(Token = "0x60010B1")]
			[Address(RVA = "0xE0460C", Offset = "0xE0460C", VA = "0xE0460C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010B2")]
			[Address(RVA = "0xE04614", Offset = "0xE04614", VA = "0xE04614")]
			set
			{
			}
		}

		[Token(Token = "0x170001C2")]
		public bool HasActiveFXFilter
		{
			[Token(Token = "0x60010B4")]
			[Address(RVA = "0xE0461C", Offset = "0xE0461C", VA = "0xE0461C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001C3")]
		public MasterAudioGroup ParentGroup
		{
			[Token(Token = "0x60010B5")]
			[Address(RVA = "0xE005B4", Offset = "0xE005B4", VA = "0xE005B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C4")]
		public float OriginalPitch
		{
			[Token(Token = "0x60010B6")]
			[Address(RVA = "0xE01978", Offset = "0xE01978", VA = "0xE01978")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001C5")]
		public float OriginalVolume
		{
			[Token(Token = "0x60010B7")]
			[Address(RVA = "0xE04860", Offset = "0xE04860", VA = "0xE04860")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001C6")]
		public string SoundGroupName
		{
			[Token(Token = "0x60010B8")]
			[Address(RVA = "0xE048A0", Offset = "0xE048A0", VA = "0xE048A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C7")]
		public bool IsAvailableToPlay
		{
			[Token(Token = "0x60010B9")]
			[Address(RVA = "0xE048E0", Offset = "0xE048E0", VA = "0xE048E0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001C8")]
		public float LastTimePlayed
		{
			[Token(Token = "0x60010BA")]
			[Address(RVA = "0xE04988", Offset = "0xE04988", VA = "0xE04988")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E149C", Offset = "0x8E149C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60010BB")]
			[Address(RVA = "0xE04990", Offset = "0xE04990", VA = "0xE04990")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E14AC", Offset = "0x8E14AC")]
			set
			{
			}
		}

		[Token(Token = "0x170001C9")]
		public bool ClipIsLoaded
		{
			[Token(Token = "0x60010BC")]
			[Address(RVA = "0xE04998", Offset = "0xE04998", VA = "0xE04998")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001CA")]
		public bool IsPlaying
		{
			[Token(Token = "0x60010BD")]
			[Address(RVA = "0xE02988", Offset = "0xE02988", VA = "0xE02988")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001CB")]
		public MasterAudio.VariationLoadStatus LoadStatus
		{
			[Token(Token = "0x60010BE")]
			[Address(RVA = "0xE049A8", Offset = "0xE049A8", VA = "0xE049A8")]
			get
			{
				return default(MasterAudio.VariationLoadStatus);
			}
			[Token(Token = "0x60010BF")]
			[Address(RVA = "0xE01854", Offset = "0xE01854", VA = "0xE01854")]
			set
			{
			}
		}

		[Token(Token = "0x170001CC")]
		public int InstanceId
		{
			[Token(Token = "0x60010C0")]
			[Address(RVA = "0xE020A4", Offset = "0xE020A4", VA = "0xE020A4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001CD")]
		public bool IsStopRequested
		{
			[Token(Token = "0x60010C1")]
			[Address(RVA = "0xE049B0", Offset = "0xE049B0", VA = "0xE049B0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001CE")]
		public Transform Trans
		{
			[Token(Token = "0x60010C2")]
			[Address(RVA = "0xE03594", Offset = "0xE03594", VA = "0xE03594")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CF")]
		public GameObject GameObj
		{
			[Token(Token = "0x60010C3")]
			[Address(RVA = "0xDFFED4", Offset = "0xDFFED4", VA = "0xDFFED4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D0")]
		public AudioSource VarAudio
		{
			[Token(Token = "0x60010C4")]
			[Address(RVA = "0xDFFE34", Offset = "0xDFFE34", VA = "0xDFFE34")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D1")]
		public bool AudioLoops
		{
			[Token(Token = "0x60010C5")]
			[Address(RVA = "0xE01FE8", Offset = "0xE01FE8", VA = "0xE01FE8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001D2")]
		public string ResFileName
		{
			[Token(Token = "0x60010C6")]
			[Address(RVA = "0xE01CEC", Offset = "0xE01CEC", VA = "0xE01CEC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D3")]
		public SoundGroupVariationUpdater VariationUpdater
		{
			[Token(Token = "0x60010C7")]
			[Address(RVA = "0xE00C70", Offset = "0xE00C70", VA = "0xE00C70")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D4")]
		public PlaySoundParams PlaySoundParm
		{
			[Token(Token = "0x60010C8")]
			[Address(RVA = "0xE049B8", Offset = "0xE049B8", VA = "0xE049B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D5")]
		public float SetGroupVolume
		{
			[Token(Token = "0x60010C9")]
			[Address(RVA = "0xE049C0", Offset = "0xE049C0", VA = "0xE049C0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60010CA")]
			[Address(RVA = "0xE049DC", Offset = "0xE049DC", VA = "0xE049DC")]
			set
			{
			}
		}

		[Token(Token = "0x170001D6")]
		public int MaxLoops
		{
			[Token(Token = "0x60010CB")]
			[Address(RVA = "0xE049F8", Offset = "0xE049F8", VA = "0xE049F8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001D7")]
		private bool Is2D
		{
			[Token(Token = "0x60010CC")]
			[Address(RVA = "0xE04A00", Offset = "0xE04A00", VA = "0xE04A00")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001D8")]
		public bool UsesOcclusion
		{
			[Token(Token = "0x60010CD")]
			[Address(RVA = "0xE00E10", Offset = "0xE00E10", VA = "0xE00E10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001D9")]
		public bool IsPaused
		{
			[Token(Token = "0x60010CE")]
			[Address(RVA = "0xE04A2C", Offset = "0xE04A2C", VA = "0xE04A2C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x14000007")]
		public event SoundFinishedEventHandler SoundFinished
		{
			[Token(Token = "0x6001081")]
			[Address(RVA = "0xDFF9B8", Offset = "0xDFF9B8", VA = "0xDFF9B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E13FC", Offset = "0x8E13FC")]
			add
			{
			}
			[Token(Token = "0x6001082")]
			[Address(RVA = "0xDFFA5C", Offset = "0xDFFA5C", VA = "0xDFFA5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E140C", Offset = "0x8E140C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000008")]
		public event SoundLoopedEventHandler SoundLooped
		{
			[Token(Token = "0x6001083")]
			[Address(RVA = "0xDFFB00", Offset = "0xDFFB00", VA = "0xDFFB00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E141C", Offset = "0x8E141C")]
			add
			{
			}
			[Token(Token = "0x6001084")]
			[Address(RVA = "0xDFFBA4", Offset = "0xDFFBA4", VA = "0xDFFBA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E142C", Offset = "0x8E142C")]
			remove
			{
			}
		}

		[Token(Token = "0x6001085")]
		[Address(RVA = "0xDFFC48", Offset = "0xDFFC48", VA = "0xDFFC48")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001086")]
		[Address(RVA = "0xDFFF60", Offset = "0xDFFF60", VA = "0xDFFF60")]
		private void Start()
		{
		}

		[Token(Token = "0x6001087")]
		[Address(RVA = "0xE00784", Offset = "0xE00784", VA = "0xE00784")]
		public void SetMixerGroup()
		{
		}

		[Token(Token = "0x6001088")]
		[Address(RVA = "0xE007DC", Offset = "0xE007DC", VA = "0xE007DC")]
		public void SetSpatialBlend()
		{
		}

		[Token(Token = "0x6001089")]
		[Address(RVA = "0xE009C8", Offset = "0xE009C8", VA = "0xE009C8")]
		private void SetOcclusion()
		{
		}

		[Token(Token = "0x600108A")]
		[Address(RVA = "0xE0091C", Offset = "0xE0091C", VA = "0xE0091C")]
		private void SetPriority()
		{
		}

		[Token(Token = "0x600108B")]
		[Address(RVA = "0xE01010", Offset = "0xE01010", VA = "0xE01010")]
		public void DisableUpdater()
		{
		}

		[Token(Token = "0x600108C")]
		[Address(RVA = "0xE010B4", Offset = "0xE010B4", VA = "0xE010B4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600108D")]
		[Address(RVA = "0xE01180", Offset = "0xE01180", VA = "0xE01180")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600108E")]
		[Address(RVA = "0xE010B8", Offset = "0xE010B8", VA = "0xE010B8")]
		private void StopSoundEarly()
		{
		}

		[Token(Token = "0x600108F")]
		[Address(RVA = "0xE01514", Offset = "0xE01514", VA = "0xE01514")]
		public void Play(float? pitch, float maxVolume, string gameObjectName, float volPercent, float targetVol, float? targetPitch, Transform sourceTrans, bool attach, float delayTime, double? timeToSchedulePlay, bool isChaining, bool isSingleSubscribedPlay)
		{
		}

		[Token(Token = "0x6001090")]
		[Address(RVA = "0xE0189C", Offset = "0xE0189C", VA = "0xE0189C")]
		public void SetPlaySoundParams(string gameObjectName, float volPercent, float targetVol, float? targetPitch, Transform sourceTrans, bool attach, float delayTime, double? timeToSchedulePlay, bool isChaining, bool isSingleSubscribedPlay)
		{
		}

		[Token(Token = "0x6001091")]
		[Address(RVA = "0xE01868", Offset = "0xE01868", VA = "0xE01868")]
		private void MaybeCleanupFinishedDelegate()
		{
		}

		[Token(Token = "0x6001092")]
		[Address(RVA = "0xE01D90", Offset = "0xE01D90", VA = "0xE01D90")]
		private void ResourceFailedToLoad()
		{
		}

		[Token(Token = "0x6001093")]
		[Address(RVA = "0xE019B8", Offset = "0xE019B8", VA = "0xE019B8")]
		private void FinishSetupToPlay()
		{
		}

		[Token(Token = "0x6001094")]
		[Address(RVA = "0xE021A0", Offset = "0xE021A0", VA = "0xE021A0")]
		public void JumpToTime(float timeToJumpTo)
		{
		}

		[Token(Token = "0x6001095")]
		[Address(RVA = "0xE021EC", Offset = "0xE021EC", VA = "0xE021EC")]
		public void GlideByPitch(float pitchAddition, float glideTime, [Optional] Action completionCallback)
		{
		}

		[Token(Token = "0x6001096")]
		[Address(RVA = "0xE024F8", Offset = "0xE024F8", VA = "0xE024F8")]
		public void AdjustVolume(float volumePercentage)
		{
		}

		[Token(Token = "0x6001097")]
		[Address(RVA = "0xE02684", Offset = "0xE02684", VA = "0xE02684")]
		public void Pause()
		{
		}

		[Token(Token = "0x6001098")]
		[Address(RVA = "0xE02804", Offset = "0xE02804", VA = "0xE02804")]
		public void PlayVideo()
		{
		}

		[Token(Token = "0x6001099")]
		[Address(RVA = "0xE02854", Offset = "0xE02854", VA = "0xE02854")]
		public void StopVideo()
		{
		}

		[Token(Token = "0x600109A")]
		[Address(RVA = "0xE028A4", Offset = "0xE028A4", VA = "0xE028A4")]
		public void Unpause()
		{
		}

		[Token(Token = "0x600109B")]
		[Address(RVA = "0xE02AA0", Offset = "0xE02AA0", VA = "0xE02AA0")]
		public void DoNextChain(float volumePercentage, float? pitch, Transform transActor, bool attach)
		{
		}

		[Token(Token = "0x600109C")]
		[Address(RVA = "0xE02EA8", Offset = "0xE02EA8", VA = "0xE02EA8")]
		public void PlayEndLinkedGroups([Optional] double? timeToPlayClip)
		{
		}

		[Token(Token = "0x600109D")]
		[Address(RVA = "0xE01DB0", Offset = "0xE01DB0", VA = "0xE01DB0")]
		private void EnableUpdater(bool waitForSoundFinish = true)
		{
		}

		[Token(Token = "0x600109E")]
		[Address(RVA = "0xE03460", Offset = "0xE03460", VA = "0xE03460")]
		private void MaybeUnloadClip()
		{
		}

		[Token(Token = "0x600109F")]
		[Address(RVA = "0xE03144", Offset = "0xE03144", VA = "0xE03144")]
		private void PlayEndLinkedGroup(string sType, [Optional] double? timeToPlayClip)
		{
		}

		[Token(Token = "0x60010A0")]
		[Address(RVA = "0xE01184", Offset = "0xE01184", VA = "0xE01184")]
		public void Stop(bool stopEndDetection = false, bool skipLinked = false)
		{
		}

		[Token(Token = "0x60010A1")]
		[Address(RVA = "0xE036A4", Offset = "0xE036A4", VA = "0xE036A4")]
		private void StopEndCleanup()
		{
		}

		[Token(Token = "0x60010A2")]
		[Address(RVA = "0xE036E8", Offset = "0xE036E8", VA = "0xE036E8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E143C", Offset = "0x8E143C")]
		private IEnumerator WaitForLoadToUnloadClipAndDeactivate()
		{
			return null;
		}

		[Token(Token = "0x60010A3")]
		[Address(RVA = "0xE03754", Offset = "0xE03754", VA = "0xE03754")]
		public void FadeToVolume(float newVolume, float fadeTime, [Optional] Action completionCallback)
		{
		}

		[Token(Token = "0x60010A4")]
		[Address(RVA = "0xE03B90", Offset = "0xE03B90", VA = "0xE03B90")]
		public void FadeOutNowAndStop([Optional] Action completionCallback)
		{
		}

		[Token(Token = "0x60010A5")]
		[Address(RVA = "0xE03E78", Offset = "0xE03E78", VA = "0xE03E78")]
		public void FadeOutNowAndStop(float fadeTime, [Optional] Action completionCallback)
		{
		}

		[Token(Token = "0x60010A6")]
		[Address(RVA = "0xE03FC0", Offset = "0xE03FC0", VA = "0xE03FC0")]
		public bool WasTriggeredFromTransform(Transform trans)
		{
			return default(bool);
		}

		[Token(Token = "0x60010A7")]
		[Address(RVA = "0xE0407C", Offset = "0xE0407C", VA = "0xE0407C")]
		public bool WasTriggeredFromAnyOfTransformMap(HashSet<Transform> transMap)
		{
			return default(bool);
		}

		[Token(Token = "0x60010B3")]
		[Address(RVA = "0xE044C8", Offset = "0xE044C8", VA = "0xE044C8")]
		public void UpdateTransformTracker(Transform sourceTrans)
		{
		}

		[Token(Token = "0x60010CF")]
		[Address(RVA = "0xE04A34", Offset = "0xE04A34", VA = "0xE04A34")]
		public void SoundLoopStarted(int numberOfLoops)
		{
		}

		[Token(Token = "0x60010D0")]
		[Address(RVA = "0xE01D88", Offset = "0xE01D88", VA = "0xE01D88")]
		public void ClearSubscribers()
		{
		}

		[Token(Token = "0x60010D1")]
		[Address(RVA = "0xE04A48", Offset = "0xE04A48", VA = "0xE04A48")]
		public SoundGroupVariation()
		{
		}

		[Token(Token = "0x60010D2")]
		[Address(RVA = "0xE04B98", Offset = "0xE04B98", VA = "0xE04B98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E14BC", Offset = "0x8E14BC")]
		private bool <Start>b__82_0(VideoPlayer vid)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20002C0")]
	[AttributeAttribute(Name = "AudioScriptOrder", RVA = "0x8CD45C", Offset = "0x8CD45C")]
	public class SoundGroupVariationUpdater : MonoBehaviour
	{
		[Token(Token = "0x20002C1")]
		private enum WaitForSoundFinishMode
		{
			[Token(Token = "0x400140A")]
			None,
			[Token(Token = "0x400140B")]
			Play,
			[Token(Token = "0x400140C")]
			WaitForEnd,
			[Token(Token = "0x400140D")]
			StopOrRepeat
		}

		[Token(Token = "0x40013D3")]
		private const float TimeEarlyToScheduleNextClip = 0.1f;

		[Token(Token = "0x40013D4")]
		private const float FakeNegativeFloatValue = -10f;

		[Token(Token = "0x40013D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Transform _objectToFollow;

		[Token(Token = "0x40013D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject _objectToFollowGo;

		[Token(Token = "0x40013D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _isFollowing;

		[Token(Token = "0x40013D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private SoundGroupVariation _variation;

		[Token(Token = "0x40013D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _priorityLastUpdated;

		[Token(Token = "0x40013DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private bool _useClipAgePriority;

		[Token(Token = "0x40013DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private WaitForSoundFinishMode _waitMode;

		[Token(Token = "0x40013DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private AudioSource _varAudio;

		[Token(Token = "0x40013DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private MasterAudioGroup _parentGrp;

		[Token(Token = "0x40013DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform _trans;

		[Token(Token = "0x40013DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int _frameNum;

		[Token(Token = "0x40013E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool _inited;

		[Token(Token = "0x40013E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float _fadeOutStartTime;

		[Token(Token = "0x40013E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool _fadeInOutWillFadeOut;

		[Token(Token = "0x40013E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
		private bool _hasFadeInOutSetMaxVolume;

		[Token(Token = "0x40013E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float _fadeInOutInFactor;

		[Token(Token = "0x40013E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float _fadeInOutOutFactor;

		[Token(Token = "0x40013E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Action _fadeOutEarlyCompletionCallback;

		[Token(Token = "0x40013E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _fadeOutEarlyTotalFrames;

		[Token(Token = "0x40013E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float _fadeOutEarlyFrameVolChange;

		[Token(Token = "0x40013E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int _fadeOutEarlyFrameNumber;

		[Token(Token = "0x40013EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float _fadeOutEarlyOrigVol;

		[Token(Token = "0x40013EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float _fadeToTargetFrameVolChange;

		[Token(Token = "0x40013EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private int _fadeToTargetFrameNumber;

		[Token(Token = "0x40013ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float _fadeToTargetOrigVol;

		[Token(Token = "0x40013EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Action _fadeToTargetCompletionCallback;

		[Token(Token = "0x40013EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private int _fadeToTargetTotalFrames;

		[Token(Token = "0x40013F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private float _fadeToTargetVolume;

		[Token(Token = "0x40013F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool _fadeOutStarted;

		[Token(Token = "0x40013F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private float _lastFrameClipTime;

		[Token(Token = "0x40013F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private bool _isPlayingBackward;

		[Token(Token = "0x40013F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private int _pitchGlideToTargetTotalFrames;

		[Token(Token = "0x40013F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float _pitchGlideToTargetFramePitchChange;

		[Token(Token = "0x40013F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private int _pitchGlideToTargetFrameNumber;

		[Token(Token = "0x40013F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private float _glideToTargetPitch;

		[Token(Token = "0x40013F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private float _glideToTargetOrigPitch;

		[Token(Token = "0x40013F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Action _glideToPitchCompletionCallback;

		[Token(Token = "0x40013FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool _hasStartedNextInChain;

		[Token(Token = "0x40013FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD9")]
		private bool _isWaitingForQueuedOcclusionRay;

		[Token(Token = "0x40013FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private int _framesPlayed;

		[Token(Token = "0x40013FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private float? _clipStartPosition;

		[Token(Token = "0x40013FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float? _clipEndPosition;

		[Token(Token = "0x40013FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private double? _clipSchedEndTime;

		[Token(Token = "0x4001400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private bool _hasScheduledNextClip;

		[Token(Token = "0x4001401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x101")]
		private bool _hasScheduledEndLinkedGroups;

		[Token(Token = "0x4001402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private int _lastFrameClipPosition;

		[Token(Token = "0x4001403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private int _timesLooped;

		[Token(Token = "0x4001404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private bool _isPaused;

		[Token(Token = "0x4001405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private double _pauseTime;

		[Token(Token = "0x4001406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _maCachedFromFrame;

		[Token(Token = "0x4001407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static MasterAudio _maThisFrame;

		[Token(Token = "0x4001408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Transform _listenerThisFrame;

		[Token(Token = "0x170001DC")]
		public float ClipStartPosition
		{
			[Token(Token = "0x60010FF")]
			[Address(RVA = "0xE06038", Offset = "0xE06038", VA = "0xE06038")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001DD")]
		public float ClipEndPosition
		{
			[Token(Token = "0x6001100")]
			[Address(RVA = "0xE04D18", Offset = "0xE04D18", VA = "0xE04D18")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001DE")]
		public int FramesPlayed
		{
			[Token(Token = "0x6001101")]
			[Address(RVA = "0xE06D18", Offset = "0xE06D18", VA = "0xE06D18")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001DF")]
		public MasterAudio MAThisFrame
		{
			[Token(Token = "0x6001102")]
			[Address(RVA = "0xE06D20", Offset = "0xE06D20", VA = "0xE06D20")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E0")]
		public float MaxOcclusionFreq
		{
			[Token(Token = "0x6001103")]
			[Address(RVA = "0xE06D84", Offset = "0xE06D84", VA = "0xE06D84")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001E1")]
		public float MinOcclusionFreq
		{
			[Token(Token = "0x6001104")]
			[Address(RVA = "0xE06E38", Offset = "0xE06E38", VA = "0xE06E38")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001E2")]
		private Transform Trans
		{
			[Token(Token = "0x6001105")]
			[Address(RVA = "0xE053C0", Offset = "0xE053C0", VA = "0xE053C0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E3")]
		private AudioSource VarAudio
		{
			[Token(Token = "0x6001106")]
			[Address(RVA = "0xE04C84", Offset = "0xE04C84", VA = "0xE04C84")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E4")]
		private MasterAudioGroup ParentGroup
		{
			[Token(Token = "0x6001107")]
			[Address(RVA = "0xE05454", Offset = "0xE05454", VA = "0xE05454")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E5")]
		private SoundGroupVariation GrpVariation
		{
			[Token(Token = "0x6001108")]
			[Address(RVA = "0xE04BE4", Offset = "0xE04BE4", VA = "0xE04BE4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E6")]
		private float RayCastOriginOffset
		{
			[Token(Token = "0x6001109")]
			[Address(RVA = "0xE05F84", Offset = "0xE05F84", VA = "0xE05F84")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001E7")]
		private bool IsOcclusionMeasuringPaused
		{
			[Token(Token = "0x600110A")]
			[Address(RVA = "0xE056F4", Offset = "0xE056F4", VA = "0xE056F4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001E8")]
		private bool HasEndLinkedGroups
		{
			[Token(Token = "0x600110B")]
			[Address(RVA = "0xE06CB0", Offset = "0xE06CB0", VA = "0xE06CB0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60010E2")]
		[Address(RVA = "0xE02438", Offset = "0xE02438", VA = "0xE02438")]
		public void GlidePitch(float targetPitch, float glideTime, [Optional] Action completionCallback)
		{
		}

		[Token(Token = "0x60010E3")]
		[Address(RVA = "0xE039F8", Offset = "0xE039F8", VA = "0xE039F8")]
		public void FadeOverTimeToVolume(float targetVolume, float fadeTime, [Optional] Action completionCallback)
		{
		}

		[Token(Token = "0x60010E4")]
		[Address(RVA = "0xE03CD0", Offset = "0xE03CD0", VA = "0xE03CD0")]
		public void FadeOutEarly(float fadeTime, [Optional] Action completionCallback)
		{
		}

		[Token(Token = "0x60010E5")]
		[Address(RVA = "0xE033A4", Offset = "0xE033A4", VA = "0xE033A4")]
		public void Initialize()
		{
		}

		[Token(Token = "0x60010E6")]
		[Address(RVA = "0xE01EBC", Offset = "0xE01EBC", VA = "0xE01EBC")]
		public void FadeInOut()
		{
		}

		[Token(Token = "0x60010E7")]
		[Address(RVA = "0xE020D8", Offset = "0xE020D8", VA = "0xE020D8")]
		public void FollowObject(bool follow, Transform objToFollow, bool clipAgePriority)
		{
		}

		[Token(Token = "0x60010E8")]
		[Address(RVA = "0xE033E0", Offset = "0xE033E0", VA = "0xE033E0")]
		public void WaitForSoundFinish()
		{
		}

		[Token(Token = "0x60010E9")]
		[Address(RVA = "0xE03660", Offset = "0xE03660", VA = "0xE03660")]
		public void StopPitchGliding()
		{
		}

		[Token(Token = "0x60010EA")]
		[Address(RVA = "0xE03630", Offset = "0xE03630", VA = "0xE03630")]
		public void StopFading()
		{
		}

		[Token(Token = "0x60010EB")]
		[Address(RVA = "0xE02E74", Offset = "0xE02E74", VA = "0xE02E74")]
		public void StopWaitingForFinish()
		{
		}

		[Token(Token = "0x60010EC")]
		[Address(RVA = "0xE03620", Offset = "0xE03620", VA = "0xE03620")]
		public void StopFollowing()
		{
		}

		[Token(Token = "0x60010ED")]
		[Address(RVA = "0xE05344", Offset = "0xE05344", VA = "0xE05344")]
		private void DisableIfFinished()
		{
		}

		[Token(Token = "0x60010EE")]
		[Address(RVA = "0xE04E5C", Offset = "0xE04E5C", VA = "0xE04E5C")]
		private void UpdateAudioLocationAndPriority(bool rePrioritize)
		{
		}

		[Token(Token = "0x60010EF")]
		[Address(RVA = "0xE054E8", Offset = "0xE054E8", VA = "0xE054E8")]
		private void ResetToNonOcclusionSetting()
		{
		}

		[Token(Token = "0x60010F0")]
		[Address(RVA = "0xE05590", Offset = "0xE05590", VA = "0xE05590")]
		private void UpdateOcclusion()
		{
		}

		[Token(Token = "0x60010F1")]
		[Address(RVA = "0xE05780", Offset = "0xE05780", VA = "0xE05780")]
		private void DoneWithOcclusion()
		{
		}

		[Token(Token = "0x60010F2")]
		[Address(RVA = "0xE057F8", Offset = "0xE057F8", VA = "0xE057F8")]
		public bool RayCastForOcclusion()
		{
			return default(bool);
		}

		[Token(Token = "0x60010F3")]
		[Address(RVA = "0xE04FEC", Offset = "0xE04FEC", VA = "0xE04FEC")]
		private void PlaySoundAndWait()
		{
		}

		[Token(Token = "0x60010F4")]
		[Address(RVA = "0xE06188", Offset = "0xE06188", VA = "0xE06188")]
		private void DuckIfNotSilent()
		{
		}

		[Token(Token = "0x60010F5")]
		[Address(RVA = "0xE06300", Offset = "0xE06300", VA = "0xE06300")]
		private void StopOrChain()
		{
		}

		[Token(Token = "0x60010F6")]
		[Address(RVA = "0xE0278C", Offset = "0xE0278C", VA = "0xE0278C")]
		public void Pause()
		{
		}

		[Token(Token = "0x60010F7")]
		[Address(RVA = "0xE029A4", Offset = "0xE029A4", VA = "0xE029A4")]
		public void Unpause()
		{
		}

		[Token(Token = "0x60010F8")]
		[Address(RVA = "0xE02B54", Offset = "0xE02B54", VA = "0xE02B54")]
		public void MaybeChain()
		{
		}

		[Token(Token = "0x60010F9")]
		[Address(RVA = "0xE0639C", Offset = "0xE0639C", VA = "0xE0639C")]
		private void UpdatePitch()
		{
		}

		[Token(Token = "0x60010FA")]
		[Address(RVA = "0xE06460", Offset = "0xE06460", VA = "0xE06460")]
		private void PerformFading()
		{
		}

		[Token(Token = "0x60010FB")]
		[Address(RVA = "0xE06744", Offset = "0xE06744", VA = "0xE06744")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60010FC")]
		[Address(RVA = "0xE067CC", Offset = "0xE067CC", VA = "0xE067CC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60010FD")]
		[Address(RVA = "0xE00D10", Offset = "0xE00D10", VA = "0xE00D10")]
		public void UpdateCachedObjects()
		{
		}

		[Token(Token = "0x60010FE")]
		[Address(RVA = "0xE068B4", Offset = "0xE068B4", VA = "0xE068B4")]
		public void ManualUpdate()
		{
		}

		[Token(Token = "0x600110C")]
		[Address(RVA = "0xE06EEC", Offset = "0xE06EEC", VA = "0xE06EEC")]
		public SoundGroupVariationUpdater()
		{
		}
	}
	[Token(Token = "0x20002C2")]
	public static class AudioLoaderOptimizer
	{
		[Token(Token = "0x400140E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Dictionary<string, List<GameObject>> PlayingGameObjectsByClipName;

		[Token(Token = "0x600110E")]
		[Address(RVA = "0xD6E3F4", Offset = "0xD6E3F4", VA = "0xD6E3F4")]
		public static void AddNonPreloadedPlayingClip(AudioClip clip, GameObject maHolderGameObject)
		{
		}

		[Token(Token = "0x600110F")]
		[Address(RVA = "0xD6E644", Offset = "0xD6E644", VA = "0xD6E644")]
		public static void RemoveNonPreloadedPlayingClip(AudioClip clip, GameObject maHolderGameObject)
		{
		}

		[Token(Token = "0x6001110")]
		[Address(RVA = "0xD6E814", Offset = "0xD6E814", VA = "0xD6E814")]
		public static bool IsAnyOfNonPreloadedClipPlaying(AudioClip clip)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20002C3")]
	public static class AudioPrioritizer
	{
		[Token(Token = "0x400140F")]
		private const int MaxPriority = 0;

		[Token(Token = "0x4001410")]
		private const int HighestPriority = 16;

		[Token(Token = "0x4001411")]
		private const int LowestPriority = 128;

		[Token(Token = "0x6001112")]
		[Address(RVA = "0xD6EA00", Offset = "0xD6EA00", VA = "0xD6EA00")]
		public static void Set2DSoundPriority(AudioSource audio)
		{
		}

		[Token(Token = "0x6001113")]
		[Address(RVA = "0xD6EA1C", Offset = "0xD6EA1C", VA = "0xD6EA1C")]
		public static void SetSoundGroupInitialPriority(AudioSource audio)
		{
		}

		[Token(Token = "0x6001114")]
		[Address(RVA = "0xD6EA38", Offset = "0xD6EA38", VA = "0xD6EA38")]
		public static void SetPreviewPriority(AudioSource audio)
		{
		}

		[Token(Token = "0x6001115")]
		[Address(RVA = "0xD6EA54", Offset = "0xD6EA54", VA = "0xD6EA54")]
		public static void Set3DPriority(SoundGroupVariation variation, bool useClipAgePriority)
		{
		}
	}
	[Token(Token = "0x20002C4")]
	public static class AudioResourceOptimizer
	{
		[Token(Token = "0x20002C5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD470", Offset = "0x8CD470")]
		private sealed class <PopulateResourceSongToPlaylistControllerAsync>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001416")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001417")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001418")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string songResourceName;

			[Token(Token = "0x4001419")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string playlistName;

			[Token(Token = "0x400141A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public PlaylistController controller;

			[Token(Token = "0x400141B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public MusicSetting songSetting;

			[Token(Token = "0x400141C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public PlaylistController.AudioPlayType playType;

			[Token(Token = "0x400141D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private ResourceRequest <asyncRes>5__2;

			[Token(Token = "0x170001E9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001126")]
				[Address(RVA = "0xC146CC", Offset = "0xC146CC", VA = "0xC146CC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001EA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001128")]
				[Address(RVA = "0xC14714", Offset = "0xC14714", VA = "0xC14714", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001123")]
			[Address(RVA = "0xC14160", Offset = "0xC14160", VA = "0xC14160")]
			[DebuggerHidden]
			public <PopulateResourceSongToPlaylistControllerAsync>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6001124")]
			[Address(RVA = "0xC1418C", Offset = "0xC1418C", VA = "0xC1418C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001125")]
			[Address(RVA = "0xC14190", Offset = "0xC14190", VA = "0xC14190", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001127")]
			[Address(RVA = "0xC146D4", Offset = "0xC146D4", VA = "0xC146D4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002C6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD480", Offset = "0x8CD480")]
		private sealed class <PopulateSourcesWithResourceClipAsync>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400141E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400141F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001420")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string clipName;

			[Token(Token = "0x4001421")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action successAction;

			[Token(Token = "0x4001422")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action failureAction;

			[Token(Token = "0x4001423")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public SoundGroupVariation variation;

			[Token(Token = "0x4001424")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private ResourceRequest <asyncRes>5__2;

			[Token(Token = "0x170001EB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600112C")]
				[Address(RVA = "0xC14D7C", Offset = "0xC14D7C", VA = "0xC14D7C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001EC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600112E")]
				[Address(RVA = "0xC14DC4", Offset = "0xC14DC4", VA = "0xC14DC4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001129")]
			[Address(RVA = "0xC1471C", Offset = "0xC1471C", VA = "0xC1471C")]
			[DebuggerHidden]
			public <PopulateSourcesWithResourceClipAsync>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x600112A")]
			[Address(RVA = "0xC14748", Offset = "0xC14748", VA = "0xC14748", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600112B")]
			[Address(RVA = "0xC1474C", Offset = "0xC1474C", VA = "0xC1474C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600112D")]
			[Address(RVA = "0xC14D84", Offset = "0xC14D84", VA = "0xC14D84", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Dictionary<string, List<AudioSource>> AudioResourceTargetsByName;

		[Token(Token = "0x4001413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly Dictionary<string, AudioClip> AudioClipsByName;

		[Token(Token = "0x4001414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly Dictionary<string, List<AudioClip>> PlaylistClipsByPlaylistName;

		[Token(Token = "0x4001415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static string _supportedLanguageFolder;

		[Token(Token = "0x6001116")]
		[Address(RVA = "0xD6EE30", Offset = "0xD6EE30", VA = "0xD6EE30")]
		public static void ClearAudioClips()
		{
		}

		[Token(Token = "0x6001117")]
		[Address(RVA = "0xD6EEE0", Offset = "0xD6EEE0", VA = "0xD6EEE0")]
		public static string GetLocalizedDynamicSoundGroupFileName(SystemLanguage localLanguage, bool useLocalization, string resourceFileName)
		{
			return null;
		}

		[Token(Token = "0x6001118")]
		[Address(RVA = "0xD6F060", Offset = "0xD6F060", VA = "0xD6F060")]
		public static string GetLocalizedFileName(bool useLocalization, string resourceFileName)
		{
			return null;
		}

		[Token(Token = "0x6001119")]
		[Address(RVA = "0xD6F400", Offset = "0xD6F400", VA = "0xD6F400")]
		public static void AddTargetForClip(string clipName, AudioSource source)
		{
		}

		[Token(Token = "0x600111A")]
		[Address(RVA = "0xD6F104", Offset = "0xD6F104", VA = "0xD6F104")]
		private static string SupportedLanguageFolder()
		{
			return null;
		}

		[Token(Token = "0x600111B")]
		[Address(RVA = "0xD6F6C4", Offset = "0xD6F6C4", VA = "0xD6F6C4")]
		public static void ClearSupportLanguageFolder()
		{
		}

		[Token(Token = "0x600111C")]
		[Address(RVA = "0xD6F748", Offset = "0xD6F748", VA = "0xD6F748")]
		private static void FinishRecordingPlaylistClip(string controllerName, AudioClip resAudioClip)
		{
		}

		[Token(Token = "0x600111D")]
		[Address(RVA = "0xD6F8EC", Offset = "0xD6F8EC", VA = "0xD6F8EC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E151C", Offset = "0x8E151C")]
		public static IEnumerator PopulateResourceSongToPlaylistControllerAsync(MusicSetting songSetting, string songResourceName, string playlistName, PlaylistController controller, PlaylistController.AudioPlayType playType)
		{
			return null;
		}

		[Token(Token = "0x600111E")]
		[Address(RVA = "0xD6F980", Offset = "0xD6F980", VA = "0xD6F980")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E157C", Offset = "0x8E157C")]
		public static IEnumerator PopulateSourcesWithResourceClipAsync(string clipName, SoundGroupVariation variation, Action successAction, Action failureAction)
		{
			return null;
		}

		[Token(Token = "0x600111F")]
		[Address(RVA = "0xD6FA0C", Offset = "0xD6FA0C", VA = "0xD6FA0C")]
		public static void UnloadPlaylistSongIfUnused(string controllerName, AudioClip clipToRemove)
		{
		}

		[Token(Token = "0x6001120")]
		[Address(RVA = "0xD6FBB0", Offset = "0xD6FBB0", VA = "0xD6FBB0")]
		public static void DeleteAudioSourceFromList(string clipName, AudioSource source)
		{
		}

		[Token(Token = "0x6001121")]
		[Address(RVA = "0xD6FDB0", Offset = "0xD6FDB0", VA = "0xD6FDB0")]
		public static void UnloadClipIfUnused(string clipName)
		{
		}
	}
	[Token(Token = "0x20002C7")]
	[AttributeAttribute(Name = "AudioScriptOrder", RVA = "0x8CD490", Offset = "0x8CD490")]
	public class MasterAudio : MonoBehaviour
	{
		[Token(Token = "0x20002C8")]
		public enum BusVoiceLimitExceededMode
		{
			[Token(Token = "0x40014E1")]
			DoNotPlayNewSound,
			[Token(Token = "0x40014E2")]
			StopOldestSound,
			[Token(Token = "0x40014E3")]
			StopFarthestSound,
			[Token(Token = "0x40014E4")]
			StopLeastImportantSound
		}

		[Token(Token = "0x20002C9")]
		public enum AmbientSoundExitMode
		{
			[Token(Token = "0x40014E6")]
			StopSound,
			[Token(Token = "0x40014E7")]
			FadeSound
		}

		[Token(Token = "0x20002CA")]
		public enum AmbientSoundReEnterMode
		{
			[Token(Token = "0x40014E9")]
			StopExistingSound,
			[Token(Token = "0x40014EA")]
			FadeInSameSound
		}

		[Token(Token = "0x20002CB")]
		public enum VariationFollowerType
		{
			[Token(Token = "0x40014EC")]
			LateUpdate,
			[Token(Token = "0x40014ED")]
			FixedUpdate
		}

		[Token(Token = "0x20002CC")]
		public enum LinkedGroupSelectionType
		{
			[Token(Token = "0x40014EF")]
			All,
			[Token(Token = "0x40014F0")]
			OneAtRandom
		}

		[Token(Token = "0x20002CD")]
		public enum OcclusionSelectionType
		{
			[Token(Token = "0x40014F2")]
			AllGroups,
			[Token(Token = "0x40014F3")]
			TurnOnPerBusOrGroup
		}

		[Token(Token = "0x20002CE")]
		public enum RaycastMode
		{
			[Token(Token = "0x40014F5")]
			Physics3D,
			[Token(Token = "0x40014F6")]
			Physics2D
		}

		[Token(Token = "0x20002CF")]
		public enum AllMusicSpatialBlendType
		{
			[Token(Token = "0x40014F8")]
			ForceAllTo2D,
			[Token(Token = "0x40014F9")]
			ForceAllTo3D,
			[Token(Token = "0x40014FA")]
			ForceAllToCustom,
			[Token(Token = "0x40014FB")]
			AllowDifferentPerController
		}

		[Token(Token = "0x20002D0")]
		public enum AllMixerSpatialBlendType
		{
			[Token(Token = "0x40014FD")]
			ForceAllTo2D,
			[Token(Token = "0x40014FE")]
			ForceAllTo3D,
			[Token(Token = "0x40014FF")]
			ForceAllToCustom,
			[Token(Token = "0x4001500")]
			AllowDifferentPerGroup
		}

		[Token(Token = "0x20002D1")]
		public enum ItemSpatialBlendType
		{
			[Token(Token = "0x4001502")]
			ForceTo2D,
			[Token(Token = "0x4001503")]
			ForceTo3D,
			[Token(Token = "0x4001504")]
			ForceToCustom,
			[Token(Token = "0x4001505")]
			UseCurveFromAudioSource
		}

		[Token(Token = "0x20002D2")]
		public enum GroupPlayType
		{
			[Token(Token = "0x4001507")]
			Always,
			[Token(Token = "0x4001508")]
			WhenActorInAudibleRange,
			[Token(Token = "0x4001509")]
			AllowDifferentPerGroup
		}

		[Token(Token = "0x20002D3")]
		public enum DefaultGroupPlayType
		{
			[Token(Token = "0x400150B")]
			Always,
			[Token(Token = "0x400150C")]
			WhenActorInAudibleRange
		}

		[Token(Token = "0x20002D4")]
		public enum MixerWidthMode
		{
			[Token(Token = "0x400150E")]
			Narrow,
			[Token(Token = "0x400150F")]
			Normal,
			[Token(Token = "0x4001510")]
			Wide
		}

		[Token(Token = "0x20002D5")]
		public enum CustomEventReceiveMode
		{
			[Token(Token = "0x4001512")]
			Always,
			[Token(Token = "0x4001513")]
			WhenDistanceLessThan,
			[Token(Token = "0x4001514")]
			WhenDistanceMoreThan,
			[Token(Token = "0x4001515")]
			Never,
			[Token(Token = "0x4001516")]
			OnSameGameObject,
			[Token(Token = "0x4001517")]
			OnChildGameObject,
			[Token(Token = "0x4001518")]
			OnParentGameObject,
			[Token(Token = "0x4001519")]
			OnSameOrChildGameObject,
			[Token(Token = "0x400151A")]
			OnSameOrParentGameObject
		}

		[Token(Token = "0x20002D6")]
		public enum EventReceiveFilter
		{
			[Token(Token = "0x400151C")]
			All,
			[Token(Token = "0x400151D")]
			Closest,
			[Token(Token = "0x400151E")]
			Random
		}

		[Token(Token = "0x20002D7")]
		public enum VariationLoadStatus
		{
			[Token(Token = "0x4001520")]
			None,
			[Token(Token = "0x4001521")]
			Loading,
			[Token(Token = "0x4001522")]
			Loaded,
			[Token(Token = "0x4001523")]
			LoadFailed
		}

		[Token(Token = "0x20002D8")]
		public enum AudioLocation
		{
			[Token(Token = "0x4001525")]
			Clip,
			[Token(Token = "0x4001526")]
			ResourceFile
		}

		[Token(Token = "0x20002D9")]
		public enum CustomSongStartTimeMode
		{
			[Token(Token = "0x4001528")]
			Beginning,
			[Token(Token = "0x4001529")]
			SpecificTime,
			[Token(Token = "0x400152A")]
			RandomTime
		}

		[Token(Token = "0x20002DA")]
		public enum BusCommand
		{
			[Token(Token = "0x400152C")]
			None,
			[Token(Token = "0x400152D")]
			FadeToVolume,
			[Token(Token = "0x400152E")]
			Mute,
			[Token(Token = "0x400152F")]
			Pause,
			[Token(Token = "0x4001530")]
			Solo,
			[Token(Token = "0x4001531")]
			Unmute,
			[Token(Token = "0x4001532")]
			Unpause,
			[Token(Token = "0x4001533")]
			Unsolo,
			[Token(Token = "0x4001534")]
			Stop,
			[Token(Token = "0x4001535")]
			ChangePitch,
			[Token(Token = "0x4001536")]
			ToggleMute,
			[Token(Token = "0x4001537")]
			StopBusOfTransform,
			[Token(Token = "0x4001538")]
			PauseBusOfTransform,
			[Token(Token = "0x4001539")]
			UnpauseBusOfTransform,
			[Token(Token = "0x400153A")]
			GlideByPitch,
			[Token(Token = "0x400153B")]
			StopOldBusVoices,
			[Token(Token = "0x400153C")]
			FadeOutOldBusVoices
		}

		[Token(Token = "0x20002DB")]
		public enum DragGroupMode
		{
			[Token(Token = "0x400153E")]
			OneGroupPerClip,
			[Token(Token = "0x400153F")]
			OneGroupWithVariations
		}

		[Token(Token = "0x20002DC")]
		public enum EventSoundFunctionType
		{
			[Token(Token = "0x4001541")]
			PlaySound,
			[Token(Token = "0x4001542")]
			GroupControl,
			[Token(Token = "0x4001543")]
			BusControl,
			[Token(Token = "0x4001544")]
			PlaylistControl,
			[Token(Token = "0x4001545")]
			CustomEventControl,
			[Token(Token = "0x4001546")]
			GlobalControl,
			[Token(Token = "0x4001547")]
			UnityMixerControl,
			[Token(Token = "0x4001548")]
			PersistentSettingsControl
		}

		[Token(Token = "0x20002DD")]
		public enum LanguageMode
		{
			[Token(Token = "0x400154A")]
			UseDeviceSetting,
			[Token(Token = "0x400154B")]
			SpecificLanguage,
			[Token(Token = "0x400154C")]
			DynamicallySet
		}

		[Token(Token = "0x20002DE")]
		public enum UnityMixerCommand
		{
			[Token(Token = "0x400154E")]
			None,
			[Token(Token = "0x400154F")]
			TransitionToSnapshot,
			[Token(Token = "0x4001550")]
			TransitionToSnapshotBlend
		}

		[Token(Token = "0x20002DF")]
		public enum PlaylistCommand
		{
			[Token(Token = "0x4001552")]
			None,
			[Token(Token = "0x4001553")]
			ChangePlaylist,
			[Token(Token = "0x4001554")]
			FadeToVolume,
			[Token(Token = "0x4001555")]
			PlaySong,
			[Token(Token = "0x4001556")]
			PlayRandomSong,
			[Token(Token = "0x4001557")]
			PlayNextSong,
			[Token(Token = "0x4001558")]
			Pause,
			[Token(Token = "0x4001559")]
			Resume,
			[Token(Token = "0x400155A")]
			Stop,
			[Token(Token = "0x400155B")]
			Mute,
			[Token(Token = "0x400155C")]
			Unmute,
			[Token(Token = "0x400155D")]
			ToggleMute,
			[Token(Token = "0x400155E")]
			Restart,
			[Token(Token = "0x400155F")]
			Start,
			[Token(Token = "0x4001560")]
			StopLoopingCurrentSong,
			[Token(Token = "0x4001561")]
			StopPlaylistAfterCurrentSong,
			[Token(Token = "0x4001562")]
			AddSongToQueue
		}

		[Token(Token = "0x20002E0")]
		public enum CustomEventCommand
		{
			[Token(Token = "0x4001564")]
			None,
			[Token(Token = "0x4001565")]
			FireEvent
		}

		[Token(Token = "0x20002E1")]
		public enum GlobalCommand
		{
			[Token(Token = "0x4001567")]
			None,
			[Token(Token = "0x4001568")]
			PauseMixer,
			[Token(Token = "0x4001569")]
			UnpauseMixer,
			[Token(Token = "0x400156A")]
			StopMixer,
			[Token(Token = "0x400156B")]
			StopEverything,
			[Token(Token = "0x400156C")]
			PauseEverything,
			[Token(Token = "0x400156D")]
			UnpauseEverything,
			[Token(Token = "0x400156E")]
			MuteEverything,
			[Token(Token = "0x400156F")]
			UnmuteEverything,
			[Token(Token = "0x4001570")]
			SetMasterMixerVolume,
			[Token(Token = "0x4001571")]
			SetMasterPlaylistVolume
		}

		[Token(Token = "0x20002E2")]
		public enum SoundGroupCommand
		{
			[Token(Token = "0x4001573")]
			None,
			[Token(Token = "0x4001574")]
			FadeToVolume,
			[Token(Token = "0x4001575")]
			FadeOutAllOfSound,
			[Token(Token = "0x4001576")]
			Mute,
			[Token(Token = "0x4001577")]
			Pause,
			[Token(Token = "0x4001578")]
			Solo,
			[Token(Token = "0x4001579")]
			StopAllOfSound,
			[Token(Token = "0x400157A")]
			Unmute,
			[Token(Token = "0x400157B")]
			Unpause,
			[Token(Token = "0x400157C")]
			Unsolo,
			[Token(Token = "0x400157D")]
			StopAllSoundsOfTransform,
			[Token(Token = "0x400157E")]
			PauseAllSoundsOfTransform,
			[Token(Token = "0x400157F")]
			UnpauseAllSoundsOfTransform,
			[Token(Token = "0x4001580")]
			StopSoundGroupOfTransform,
			[Token(Token = "0x4001581")]
			PauseSoundGroupOfTransform,
			[Token(Token = "0x4001582")]
			UnpauseSoundGroupOfTransform,
			[Token(Token = "0x4001583")]
			FadeOutSoundGroupOfTransform,
			[Token(Token = "0x4001584")]
			RefillSoundGroupPool,
			[Token(Token = "0x4001585")]
			RouteToBus,
			[Token(Token = "0x4001586")]
			GlideByPitch,
			[Token(Token = "0x4001587")]
			ToggleSoundGroup,
			[Token(Token = "0x4001588")]
			ToggleSoundGroupOfTransform,
			[Token(Token = "0x4001589")]
			FadeOutAllSoundsOfTransform,
			[Token(Token = "0x400158A")]
			StopOldSoundGroupVoices,
			[Token(Token = "0x400158B")]
			FadeOutOldSoundGroupVoices
		}

		[Token(Token = "0x20002E3")]
		public enum PersistentSettingsCommand
		{
			[Token(Token = "0x400158D")]
			None,
			[Token(Token = "0x400158E")]
			SetBusVolume,
			[Token(Token = "0x400158F")]
			SetGroupVolume,
			[Token(Token = "0x4001590")]
			SetMixerVolume,
			[Token(Token = "0x4001591")]
			SetMusicVolume,
			[Token(Token = "0x4001592")]
			MixerMuteToggle,
			[Token(Token = "0x4001593")]
			MusicMuteToggle
		}

		[Token(Token = "0x20002E4")]
		public enum SongFadeInPosition
		{
			[Token(Token = "0x4001595")]
			NewClipFromBeginning = 1,
			[Token(Token = "0x4001596")]
			NewClipFromLastKnownPosition = 3,
			[Token(Token = "0x4001597")]
			SynchronizeClips = 5
		}

		[Token(Token = "0x20002E5")]
		public enum SoundSpawnLocationMode
		{
			[Token(Token = "0x4001599")]
			MasterAudioLocation,
			[Token(Token = "0x400159A")]
			CallerLocation,
			[Token(Token = "0x400159B")]
			AttachToCaller
		}

		[Token(Token = "0x20002E6")]
		public enum VariationCommand
		{
			[Token(Token = "0x400159D")]
			None,
			[Token(Token = "0x400159E")]
			Stop,
			[Token(Token = "0x400159F")]
			Pause,
			[Token(Token = "0x40015A0")]
			Unpause
		}

		[Serializable]
		[Token(Token = "0x20002E7")]
		public struct CustomEventCandidate
		{
			[Token(Token = "0x40015A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float DistanceAway;

			[Token(Token = "0x40015A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public ICustomEventReceiver Receiver;

			[Token(Token = "0x40015A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform Trans;

			[Token(Token = "0x40015A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int RandomId;

			[Token(Token = "0x6001273")]
			[Address(RVA = "0x1904890", Offset = "0x1904890", VA = "0x1904890")]
			public CustomEventCandidate(float distance, ICustomEventReceiver rec, Transform trans, int randomId)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20002E8")]
		public class AudioGroupInfo
		{
			[Token(Token = "0x40015A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<AudioInfo> Sources;

			[Token(Token = "0x40015A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int LastFramePlayed;

			[Token(Token = "0x40015A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float LastTimePlayed;

			[Token(Token = "0x40015A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MasterAudioGroup Group;

			[Token(Token = "0x40015A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool PlayedForWarming;

			[Token(Token = "0x6001274")]
			[Address(RVA = "0x19047EC", Offset = "0x19047EC", VA = "0x19047EC")]
			public AudioGroupInfo(List<AudioInfo> sources, MasterAudioGroup groupScript)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20002E9")]
		public class AudioInfo
		{
			[Token(Token = "0x40015AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AudioSource Source;

			[Token(Token = "0x40015AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float OriginalVolume;

			[Token(Token = "0x40015AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float LastPercentageVolume;

			[Token(Token = "0x40015AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float LastRandomVolume;

			[Token(Token = "0x40015AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SoundGroupVariation Variation;

			[Token(Token = "0x6001275")]
			[Address(RVA = "0x1904838", Offset = "0x1904838", VA = "0x1904838")]
			public AudioInfo(SoundGroupVariation variation, AudioSource source, float origVol)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20002EA")]
		public class Playlist
		{
			[Token(Token = "0x20002EB")]
			public enum CrossfadeTimeMode
			{
				[Token(Token = "0x40015C1")]
				UseMasterSetting,
				[Token(Token = "0x40015C2")]
				Override
			}

			[Token(Token = "0x40015AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool isExpanded;

			[Token(Token = "0x40015B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string playlistName;

			[Token(Token = "0x40015B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SongFadeInPosition songTransitionType;

			[Token(Token = "0x40015B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public List<MusicSetting> MusicSettings;

			[Token(Token = "0x40015B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public AudioLocation bulkLocationMode;

			[Token(Token = "0x40015B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public CrossfadeTimeMode crossfadeMode;

			[Token(Token = "0x40015B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float crossFadeTime;

			[Token(Token = "0x40015B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public bool fadeInFirstSong;

			[Token(Token = "0x40015B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
			public bool fadeOutLastSong;

			[Token(Token = "0x40015B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
			public bool bulkEditMode;

			[Token(Token = "0x40015B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3F")]
			public bool isTemporary;

			[Token(Token = "0x40015BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public bool showMetadata;

			[Token(Token = "0x40015BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public List<SongMetadataProperty> songMetadataProps;

			[Token(Token = "0x40015BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public string newMetadataPropName;

			[Token(Token = "0x40015BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public SongMetadataProperty.MetadataPropertyType newMetadataPropType;

			[Token(Token = "0x40015BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public bool newMetadataPropRequired;

			[Token(Token = "0x40015BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
			public bool newMetadataPropCanHaveMult;

			[Token(Token = "0x6001276")]
			[Address(RVA = "0x19048A0", Offset = "0x19048A0", VA = "0x19048A0")]
			public Playlist()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20002EC")]
		public class SoundGroupRefillInfo
		{
			[Token(Token = "0x40015C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float LastTimePlayed;

			[Token(Token = "0x40015C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float InactivePeriodSeconds;

			[Token(Token = "0x6001277")]
			[Address(RVA = "0x19049B8", Offset = "0x19049B8", VA = "0x19049B8")]
			public SoundGroupRefillInfo(float lastTimePlayed, float inactivePeriodSeconds)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20002ED")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD4A4", Offset = "0x8CD4A4")]
		private sealed class <>c
		{
			[Token(Token = "0x40015C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40015C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<OcclusionFreqChangeInfo> <>9__239_0;

			[Token(Token = "0x40015C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Predicate<BusFadeInfo> <>9__240_0;

			[Token(Token = "0x40015C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Predicate<GroupFadeInfo> <>9__241_0;

			[Token(Token = "0x40015C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Predicate<AmbientSoundToTriggerInfo> <>9__242_0;

			[Token(Token = "0x40015CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Predicate<GroupPitchGlideInfo> <>9__243_0;

			[Token(Token = "0x40015CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Predicate<BusPitchGlideInfo> <>9__244_0;

			[Token(Token = "0x40015CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public static Predicate<AudioInfo> <>9__260_0;

			[Token(Token = "0x40015CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public static Comparison<CustomEventCandidate> <>9__465_0;

			[Token(Token = "0x40015CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public static Comparison<CustomEventCandidate> <>9__465_1;

			[Token(Token = "0x6001279")]
			[Address(RVA = "0x1B46748", Offset = "0x1B46748", VA = "0x1B46748")]
			public <>c()
			{
			}

			[Token(Token = "0x600127A")]
			[Address(RVA = "0x1B46750", Offset = "0x1B46750", VA = "0x1B46750")]
			internal bool <PerformOcclusionFrequencyChanges>b__239_0(OcclusionFreqChangeInfo obj)
			{
				return default(bool);
			}

			[Token(Token = "0x600127B")]
			[Address(RVA = "0x1B46770", Offset = "0x1B46770", VA = "0x1B46770")]
			internal bool <PerformBusFades>b__240_0(BusFadeInfo obj)
			{
				return default(bool);
			}

			[Token(Token = "0x600127C")]
			[Address(RVA = "0x1B46790", Offset = "0x1B46790", VA = "0x1B46790")]
			internal bool <PerformGroupFades>b__241_0(GroupFadeInfo obj)
			{
				return default(bool);
			}

			[Token(Token = "0x600127D")]
			[Address(RVA = "0x1B467B0", Offset = "0x1B467B0", VA = "0x1B467B0")]
			internal bool <PerformDelayedAmbientTriggers>b__242_0(AmbientSoundToTriggerInfo obj)
			{
				return default(bool);
			}

			[Token(Token = "0x600127E")]
			[Address(RVA = "0x1B467E8", Offset = "0x1B467E8", VA = "0x1B467E8")]
			internal bool <PerformGroupPitchGlides>b__243_0(GroupPitchGlideInfo obj)
			{
				return default(bool);
			}

			[Token(Token = "0x600127F")]
			[Address(RVA = "0x1B46808", Offset = "0x1B46808", VA = "0x1B46808")]
			internal bool <PerformBusPitchGlides>b__244_0(BusPitchGlideInfo obj)
			{
				return default(bool);
			}

			[Token(Token = "0x6001280")]
			[Address(RVA = "0x1B46828", Offset = "0x1B46828", VA = "0x1B46828")]
			internal bool <CanPlayDialogBasedOnImportanceOrIsNotDialog>b__260_0(AudioInfo info)
			{
				return default(bool);
			}

			[Token(Token = "0x6001281")]
			[Address(RVA = "0x1B4684C", Offset = "0x1B4684C", VA = "0x1B4684C")]
			internal int <FireCustomEvent>b__465_0(CustomEventCandidate x, CustomEventCandidate y)
			{
				return default(int);
			}

			[Token(Token = "0x6001282")]
			[Address(RVA = "0x1B4685C", Offset = "0x1B4685C", VA = "0x1B4685C")]
			internal int <FireCustomEvent>b__465_1(CustomEventCandidate x, CustomEventCandidate y)
			{
				return default(int);
			}
		}

		[Token(Token = "0x20002EE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD4B4", Offset = "0x8CD4B4")]
		private sealed class <>c__DisplayClass254_0
		{
			[Token(Token = "0x40015CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool done;

			[Token(Token = "0x6001283")]
			[Address(RVA = "0x1B46870", Offset = "0x1B46870", VA = "0x1B46870")]
			public <>c__DisplayClass254_0()
			{
			}

			[Token(Token = "0x6001284")]
			[Address(RVA = "0x1B46878", Offset = "0x1B46878", VA = "0x1B46878")]
			internal void <PlaySoundAndWaitUntilFinished>b__0()
			{
			}
		}

		[Token(Token = "0x20002EF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD4C4", Offset = "0x8CD4C4")]
		private sealed class <PlaySoundAndWaitUntilFinished>d__254 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40015D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40015D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40015D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string sType;

			[Token(Token = "0x40015D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float volumePercentage;

			[Token(Token = "0x40015D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float? pitch;

			[Token(Token = "0x40015D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float delaySoundTime;

			[Token(Token = "0x40015D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string variationName;

			[Token(Token = "0x40015D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private <>c__DisplayClass254_0 <>8__1;

			[Token(Token = "0x40015D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Action completedAction;

			[Token(Token = "0x17000212")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001288")]
				[Address(RVA = "0x190479C", Offset = "0x190479C", VA = "0x190479C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000213")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600128A")]
				[Address(RVA = "0x19047E4", Offset = "0x19047E4", VA = "0x19047E4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001285")]
			[Address(RVA = "0x1904498", Offset = "0x1904498", VA = "0x1904498")]
			[DebuggerHidden]
			public <PlaySoundAndWaitUntilFinished>d__254(int <>1__state)
			{
			}

			[Token(Token = "0x6001286")]
			[Address(RVA = "0x19044C4", Offset = "0x19044C4", VA = "0x19044C4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001287")]
			[Address(RVA = "0x19044C8", Offset = "0x19044C8", VA = "0x19044C8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001289")]
			[Address(RVA = "0x19047A4", Offset = "0x19047A4", VA = "0x19047A4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD4D4", Offset = "0x8CD4D4")]
		private sealed class <>c__DisplayClass255_0
		{
			[Token(Token = "0x40015D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool done;

			[Token(Token = "0x600128B")]
			[Address(RVA = "0x1B46884", Offset = "0x1B46884", VA = "0x1B46884")]
			public <>c__DisplayClass255_0()
			{
			}

			[Token(Token = "0x600128C")]
			[Address(RVA = "0x1B4688C", Offset = "0x1B4688C", VA = "0x1B4688C")]
			internal void <PlaySound3DAtTransformAndWaitUntilFinished>b__0()
			{
			}
		}

		[Token(Token = "0x20002F1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD4E4", Offset = "0x8CD4E4")]
		private sealed class <PlaySound3DAtTransformAndWaitUntilFinished>d__255 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40015DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40015DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40015DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string sType;

			[Token(Token = "0x40015DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Transform sourceTrans;

			[Token(Token = "0x40015DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float volumePercentage;

			[Token(Token = "0x40015DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float? pitch;

			[Token(Token = "0x40015E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public float delaySoundTime;

			[Token(Token = "0x40015E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public string variationName;

			[Token(Token = "0x40015E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public double? timeToSchedulePlay;

			[Token(Token = "0x40015E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private <>c__DisplayClass255_0 <>8__1;

			[Token(Token = "0x40015E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public Action completedAction;

			[Token(Token = "0x17000214")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001290")]
				[Address(RVA = "0x1B471B8", Offset = "0x1B471B8", VA = "0x1B471B8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000215")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001292")]
				[Address(RVA = "0x1B47200", Offset = "0x1B47200", VA = "0x1B47200", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600128D")]
			[Address(RVA = "0x1B46E94", Offset = "0x1B46E94", VA = "0x1B46E94")]
			[DebuggerHidden]
			public <PlaySound3DAtTransformAndWaitUntilFinished>d__255(int <>1__state)
			{
			}

			[Token(Token = "0x600128E")]
			[Address(RVA = "0x1B46EC0", Offset = "0x1B46EC0", VA = "0x1B46EC0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600128F")]
			[Address(RVA = "0x1B46EC4", Offset = "0x1B46EC4", VA = "0x1B46EC4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001291")]
			[Address(RVA = "0x1B471C0", Offset = "0x1B471C0", VA = "0x1B471C0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002F2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD4F4", Offset = "0x8CD4F4")]
		private sealed class <>c__DisplayClass256_0
		{
			[Token(Token = "0x40015E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool done;

			[Token(Token = "0x6001293")]
			[Address(RVA = "0x1B46898", Offset = "0x1B46898", VA = "0x1B46898")]
			public <>c__DisplayClass256_0()
			{
			}

			[Token(Token = "0x6001294")]
			[Address(RVA = "0x1B468A0", Offset = "0x1B468A0", VA = "0x1B468A0")]
			internal void <PlaySound3DFollowTransformAndWaitUntilFinished>b__0()
			{
			}
		}

		[Token(Token = "0x20002F3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD504", Offset = "0x8CD504")]
		private sealed class <PlaySound3DFollowTransformAndWaitUntilFinished>d__256 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40015E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40015E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40015E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string sType;

			[Token(Token = "0x40015E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Transform sourceTrans;

			[Token(Token = "0x40015EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float volumePercentage;

			[Token(Token = "0x40015EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float? pitch;

			[Token(Token = "0x40015EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public float delaySoundTime;

			[Token(Token = "0x40015ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public string variationName;

			[Token(Token = "0x40015EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public double? timeToSchedulePlay;

			[Token(Token = "0x40015EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private <>c__DisplayClass256_0 <>8__1;

			[Token(Token = "0x40015F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public Action completedAction;

			[Token(Token = "0x17000216")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001298")]
				[Address(RVA = "0x1904448", Offset = "0x1904448", VA = "0x1904448", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000217")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600129A")]
				[Address(RVA = "0x1904490", Offset = "0x1904490", VA = "0x1904490", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001295")]
			[Address(RVA = "0x1904118", Offset = "0x1904118", VA = "0x1904118")]
			[DebuggerHidden]
			public <PlaySound3DFollowTransformAndWaitUntilFinished>d__256(int <>1__state)
			{
			}

			[Token(Token = "0x6001296")]
			[Address(RVA = "0x1904144", Offset = "0x1904144", VA = "0x1904144", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001297")]
			[Address(RVA = "0x1904148", Offset = "0x1904148", VA = "0x1904148", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001299")]
			[Address(RVA = "0x1904450", Offset = "0x1904450", VA = "0x1904450", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD514", Offset = "0x8CD514")]
		private sealed class <>c__DisplayClass270_0
		{
			[Token(Token = "0x40015F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MasterAudioGroup maGroup;

			[Token(Token = "0x40015F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string variationName;

			[Token(Token = "0x600129B")]
			[Address(RVA = "0x1B468AC", Offset = "0x1B468AC", VA = "0x1B468AC")]
			public <>c__DisplayClass270_0()
			{
			}

			[Token(Token = "0x600129C")]
			[Address(RVA = "0x1B468B4", Offset = "0x1B468B4", VA = "0x1B468B4")]
			internal bool <FindRetriggerableVariationInGroup>b__0(AudioInfo info)
			{
				return default(bool);
			}

			[Token(Token = "0x600129D")]
			[Address(RVA = "0x1B46930", Offset = "0x1B46930", VA = "0x1B46930")]
			internal bool <FindRetriggerableVariationInGroup>b__1(AudioInfo info)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20002F5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD524", Offset = "0x8CD524")]
		private sealed class <>c__DisplayClass308_0
		{
			[Token(Token = "0x40015F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string busName;

			[Token(Token = "0x600129E")]
			[Address(RVA = "0x1B469CC", Offset = "0x1B469CC", VA = "0x1B469CC")]
			public <>c__DisplayClass308_0()
			{
			}

			[Token(Token = "0x600129F")]
			[Address(RVA = "0x1B469D4", Offset = "0x1B469D4", VA = "0x1B469D4")]
			internal bool <RouteGroupToBus>b__1(GroupBus x)
			{
				return default(bool);
			}

			[Token(Token = "0x60012A0")]
			[Address(RVA = "0x1B469F8", Offset = "0x1B469F8", VA = "0x1B469F8")]
			internal bool <RouteGroupToBus>b__0(GroupBus x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20002F6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD534", Offset = "0x8CD534")]
		private sealed class <>c__DisplayClass316_0
		{
			[Token(Token = "0x40015F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string sType;

			[Token(Token = "0x60012A1")]
			[Address(RVA = "0x1B46A1C", Offset = "0x1B46A1C", VA = "0x1B46A1C")]
			public <>c__DisplayClass316_0()
			{
			}

			[Token(Token = "0x60012A2")]
			[Address(RVA = "0x1B46A24", Offset = "0x1B46A24", VA = "0x1B46A24")]
			internal bool <FadeSoundGroupToVolume>b__0(GroupFadeInfo obj)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20002F7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD544", Offset = "0x8CD544")]
		private sealed class <>c__DisplayClass319_0
		{
			[Token(Token = "0x40015F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string sType;

			[Token(Token = "0x60012A3")]
			[Address(RVA = "0x1B46A48", Offset = "0x1B46A48", VA = "0x1B46A48")]
			public <>c__DisplayClass319_0()
			{
			}

			[Token(Token = "0x60012A4")]
			[Address(RVA = "0x1B46A50", Offset = "0x1B46A50", VA = "0x1B46A50")]
			internal bool <GlideSoundGroupByPitch>b__0(GroupPitchGlideInfo obj)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20002F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD554", Offset = "0x8CD554")]
		private sealed class <>c__DisplayClass373_0
		{
			[Token(Token = "0x40015F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string busName;

			[Token(Token = "0x60012A5")]
			[Address(RVA = "0x1B46A74", Offset = "0x1B46A74", VA = "0x1B46A74")]
			public <>c__DisplayClass373_0()
			{
			}

			[Token(Token = "0x60012A6")]
			[Address(RVA = "0x1B46A7C", Offset = "0x1B46A7C", VA = "0x1B46A7C")]
			internal bool <CreateBus>b__0(GroupBus obj)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20002F9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD564", Offset = "0x8CD564")]
		private sealed class <>c__DisplayClass377_0
		{
			[Token(Token = "0x40015F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string busName;

			[Token(Token = "0x60012A7")]
			[Address(RVA = "0x1B46AA0", Offset = "0x1B46AA0", VA = "0x1B46AA0")]
			public <>c__DisplayClass377_0()
			{
			}

			[Token(Token = "0x60012A8")]
			[Address(RVA = "0x1B46AA8", Offset = "0x1B46AA8", VA = "0x1B46AA8")]
			internal bool <FadeBusToVolume>b__0(BusFadeInfo obj)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20002FA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD574", Offset = "0x8CD574")]
		private sealed class <>c__DisplayClass380_0
		{
			[Token(Token = "0x40015F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string busName;

			[Token(Token = "0x60012A9")]
			[Address(RVA = "0x1B46ACC", Offset = "0x1B46ACC", VA = "0x1B46ACC")]
			public <>c__DisplayClass380_0()
			{
			}

			[Token(Token = "0x60012AA")]
			[Address(RVA = "0x1B46AD4", Offset = "0x1B46AD4", VA = "0x1B46AD4")]
			internal bool <GlideBusByPitch>b__0(BusPitchGlideInfo obj)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20002FB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD584", Offset = "0x8CD584")]
		private sealed class <>c__DisplayClass461_0
		{
			[Token(Token = "0x40015F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string categoryName;

			[Token(Token = "0x60012AB")]
			[Address(RVA = "0x1B46AF8", Offset = "0x1B46AF8", VA = "0x1B46AF8")]
			public <>c__DisplayClass461_0()
			{
			}

			[Token(Token = "0x60012AC")]
			[Address(RVA = "0x1B46B00", Offset = "0x1B46B00", VA = "0x1B46B00")]
			internal bool <CreateCustomEventCategoryIfNotThere>b__0(CustomEventCategory cat)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20002FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD594", Offset = "0x8CD594")]
		private sealed class <>c__DisplayClass462_0
		{
			[Token(Token = "0x40015FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string customEventName;

			[Token(Token = "0x60012AD")]
			[Address(RVA = "0x1B46B24", Offset = "0x1B46B24", VA = "0x1B46B24")]
			public <>c__DisplayClass462_0()
			{
			}

			[Token(Token = "0x60012AE")]
			[Address(RVA = "0x1B46B2C", Offset = "0x1B46B2C", VA = "0x1B46B2C")]
			internal bool <CreateCustomEvent>b__0(CustomEvent obj)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20002FD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD5A4", Offset = "0x8CD5A4")]
		private sealed class <>c__DisplayClass463_0
		{
			[Token(Token = "0x40015FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string customEventName;

			[Token(Token = "0x60012AF")]
			[Address(RVA = "0x1B46B50", Offset = "0x1B46B50", VA = "0x1B46B50")]
			public <>c__DisplayClass463_0()
			{
			}

			[Token(Token = "0x60012B0")]
			[Address(RVA = "0x1B46B58", Offset = "0x1B46B58", VA = "0x1B46B58")]
			internal bool <DeleteCustomEvent>b__0(CustomEvent obj)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20002FE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD5B4", Offset = "0x8CD5B4")]
		private sealed class <>c__DisplayClass464_0
		{
			[Token(Token = "0x40015FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string customEventName;

			[Token(Token = "0x60012B1")]
			[Address(RVA = "0x1B46B7C", Offset = "0x1B46B7C", VA = "0x1B46B7C")]
			public <>c__DisplayClass464_0()
			{
			}

			[Token(Token = "0x60012B2")]
			[Address(RVA = "0x1B46B84", Offset = "0x1B46B84", VA = "0x1B46B84")]
			internal bool <GetCustomEventByName>b__0(CustomEvent obj)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20002FF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD5C4", Offset = "0x8CD5C4")]
		private sealed class <>c__DisplayClass466_0
		{
			[Token(Token = "0x40015FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string customEventName;

			[Token(Token = "0x60012B3")]
			[Address(RVA = "0x1B46BA8", Offset = "0x1B46BA8", VA = "0x1B46BA8")]
			public <>c__DisplayClass466_0()
			{
			}

			[Token(Token = "0x60012B4")]
			[Address(RVA = "0x1B46BB0", Offset = "0x1B46BB0", VA = "0x1B46BB0")]
			internal bool <CustomEventExists>b__0(CustomEvent obj)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000300")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD5D4", Offset = "0x8CD5D4")]
		private sealed class <>c__DisplayClass467_0
		{
			[Token(Token = "0x40015FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string eventName;

			[Token(Token = "0x60012B5")]
			[Address(RVA = "0x1B46BD4", Offset = "0x1B46BD4", VA = "0x1B46BD4")]
			public <>c__DisplayClass467_0()
			{
			}

			[Token(Token = "0x60012B6")]
			[Address(RVA = "0x1B46BDC", Offset = "0x1B46BDC", VA = "0x1B46BDC")]
			internal bool <GetChildReceivers>b__0(ICustomEventReceiver rec)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000301")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD5E4", Offset = "0x8CD5E4")]
		private sealed class <>c__DisplayClass468_0
		{
			[Token(Token = "0x40015FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string eventName;

			[Token(Token = "0x60012B7")]
			[Address(RVA = "0x1B46CA8", Offset = "0x1B46CA8", VA = "0x1B46CA8")]
			public <>c__DisplayClass468_0()
			{
			}

			[Token(Token = "0x60012B8")]
			[Address(RVA = "0x1B46CB0", Offset = "0x1B46CB0", VA = "0x1B46CB0")]
			internal bool <GetParentReceivers>b__0(ICustomEventReceiver rec)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000302")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD5F4", Offset = "0x8CD5F4")]
		private sealed class <>c__DisplayClass483_0
		{
			[Token(Token = "0x4001600")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AmbientSound ambient;

			[Token(Token = "0x60012B9")]
			[Address(RVA = "0x1B46D7C", Offset = "0x1B46D7C", VA = "0x1B46D7C")]
			public <>c__DisplayClass483_0()
			{
			}

			[Token(Token = "0x60012BA")]
			[Address(RVA = "0x1B46D84", Offset = "0x1B46D84", VA = "0x1B46D84")]
			internal bool <SetupAmbientNextFrame>b__0(AmbientSoundToTriggerInfo obj)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000303")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD604", Offset = "0x8CD604")]
		private sealed class <>c__DisplayClass484_0
		{
			[Token(Token = "0x4001601")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AmbientSound ambient;

			[Token(Token = "0x60012BB")]
			[Address(RVA = "0x1B46E08", Offset = "0x1B46E08", VA = "0x1B46E08")]
			public <>c__DisplayClass484_0()
			{
			}

			[Token(Token = "0x60012BC")]
			[Address(RVA = "0x1B46E10", Offset = "0x1B46E10", VA = "0x1B46E10")]
			internal bool <RemoveDelayedAmbient>b__0(AmbientSoundToTriggerInfo obj)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001425")]
		public const string VideoPlayersSoundGroupSelectedError = "Can't use specially named Sound Group for Video Players. Please select another.";

		[Token(Token = "0x4001426")]
		public const string VideoPlayerSoundGroupName = "_VideoPlayers";

		[Token(Token = "0x4001427")]
		public const string VideoPlayerBusName = "_VideoPlayers";

		[Token(Token = "0x4001428")]
		public const string MasterAudioDefaultFolder = "Assets/Plugins/DarkTonic/MasterAudio";

		[Token(Token = "0x4001429")]
		public const string PreviewText = "Random delay, custom fading & start/end position settings are ignored by preview in edit mode.";

		[Token(Token = "0x400142A")]
		public const string LoopDisabledLoopedChain = "Loop Clip is always OFF for Looped Chain Groups";

		[Token(Token = "0x400142B")]
		public const string LoopDisabledCustomEnd = "Loop Clip is always OFF when using Custom End Position";

		[Token(Token = "0x400142C")]
		public const string DragAudioTip = "Drag Audio clips or a folder containing some here";

		[Token(Token = "0x400142D")]
		public const string NoCategory = "[Uncategorized]";

		[Token(Token = "0x400142E")]
		public const float SemiTonePitchFactor = 1.05946f;

		[Token(Token = "0x400142F")]
		public const float SpatialBlend_2DValue = 0f;

		[Token(Token = "0x4001430")]
		public const float SpatialBlend_3DValue = 1f;

		[Token(Token = "0x4001431")]
		public const float MaxCrossFadeTimeSeconds = 120f;

		[Token(Token = "0x4001432")]
		public const float DefaultDuckVolCut = -6f;

		[Token(Token = "0x4001433")]
		public const int ERROR_MA_LAYER_COLLISIONS_DISABLED = 1;

		[Token(Token = "0x4001434")]
		public const int PHYSICS_DISABLED = 2;

		[Token(Token = "0x4001435")]
		public const string StoredLanguageNameKey = "~MA_Language_Key~";

		[Token(Token = "0x4001436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly YieldInstruction EndOfFrameDelay;

		[Token(Token = "0x4001437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly List<string> ExemptChildNames;

		[Token(Token = "0x4001438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly HashSet<int> ErrorNumbersLogged;

		[Token(Token = "0x4001439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static List<string> ImportanceChoices;

		[Token(Token = "0x400143A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Action NumberOfAudioSourcesChanged;

		[Token(Token = "0x400143B")]
		public const int HardCodedBusOptions = 2;

		[Token(Token = "0x400143C")]
		public const string AllBusesName = "[All]";

		[Token(Token = "0x400143D")]
		public const string NoGroupName = "[None]";

		[Token(Token = "0x400143E")]
		public const string DynamicGroupName = "[Type In]";

		[Token(Token = "0x400143F")]
		public const string NoPlaylistName = "[No Playlist]";

		[Token(Token = "0x4001440")]
		public const string NoVoiceLimitName = "[NO LMT]";

		[Token(Token = "0x4001441")]
		public const string OnlyPlaylistControllerName = "~only~";

		[Token(Token = "0x4001442")]
		public const float InnerLoopCheckInterval = 0.1f;

		[Token(Token = "0x4001443")]
		private const int MaxComponents = 20;

		[Token(Token = "0x4001444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioLocation bulkLocationMode;

		[Token(Token = "0x4001445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string groupTemplateName;

		[Token(Token = "0x4001446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string audioSourceTemplateName;

		[Token(Token = "0x4001447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool showGroupCreation;

		[Token(Token = "0x4001448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool useGroupTemplates;

		[Token(Token = "0x4001449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public DragGroupMode curDragGroupMode;

		[Token(Token = "0x400144A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<GameObject> groupTemplates;

		[Token(Token = "0x400144B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<GameObject> audioSourceTemplates;

		[Token(Token = "0x400144C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool mixerMuted;

		[Token(Token = "0x400144D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		public bool playlistsMuted;

		[Token(Token = "0x400144E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public LanguageMode langMode;

		[Token(Token = "0x400144F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public SystemLanguage testLanguage;

		[Token(Token = "0x4001450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public SystemLanguage defaultLanguage;

		[Token(Token = "0x4001451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public List<SystemLanguage> supportedLanguages;

		[Token(Token = "0x4001452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public string busFilter;

		[Token(Token = "0x4001453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool useTextGroupFilter;

		[Token(Token = "0x4001454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public string textGroupFilter;

		[Token(Token = "0x4001455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool resourceClipsPauseDoNotUnload;

		[Token(Token = "0x4001456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Transform playlistControllerPrefab;

		[Token(Token = "0x4001457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool persistBetweenScenes;

		[Token(Token = "0x4001458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		public bool shouldLogDestroys;

		[Token(Token = "0x4001459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8A")]
		public bool showBusColors;

		[Token(Token = "0x400145A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8B")]
		public bool showGroupImportance;

		[Token(Token = "0x400145B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public bool areGroupsExpanded;

		[Token(Token = "0x400145C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Transform soundGroupTemplate;

		[Token(Token = "0x400145D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Transform soundGroupVariationTemplate;

		[Token(Token = "0x400145E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public List<GroupBus> groupBuses;

		[Token(Token = "0x400145F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public bool groupByBus;

		[Token(Token = "0x4001460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
		public bool sortAlpha;

		[Token(Token = "0x4001461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAA")]
		public bool showRangeSoundGizmos;

		[Token(Token = "0x4001462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAB")]
		public bool showSelectedRangeSoundGizmos;

		[Token(Token = "0x4001463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public Color rangeGizmoColor;

		[Token(Token = "0x4001464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public Color selectedRangeGizmoColor;

		[Token(Token = "0x4001465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public bool showAdvancedSettings;

		[Token(Token = "0x4001466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
		public bool showLocalization;

		[Token(Token = "0x4001467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCE")]
		public bool showVideoPlayerSettings;

		[Token(Token = "0x4001468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public List<VideoPlayer> videoPlayers;

		[Token(Token = "0x4001469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public bool playListExpanded;

		[Token(Token = "0x400146A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD9")]
		public bool playlistsExpanded;

		[Token(Token = "0x400146B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public AllMusicSpatialBlendType musicSpatialBlendType;

		[Token(Token = "0x400146C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public float musicSpatialBlend;

		[Token(Token = "0x400146D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		public AllMixerSpatialBlendType mixerSpatialBlendType;

		[Token(Token = "0x400146E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public float mixerSpatialBlend;

		[Token(Token = "0x400146F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		public GroupPlayType groupPlayType;

		[Token(Token = "0x4001470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public DefaultGroupPlayType defaultGroupPlayType;

		[Token(Token = "0x4001471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		public ItemSpatialBlendType newGroupSpatialType;

		[Token(Token = "0x4001472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public float newGroupSpatialBlend;

		[Token(Token = "0x4001473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public List<Playlist> musicPlaylists;

		[Token(Token = "0x4001474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public float _masterAudioVolume;

		[Token(Token = "0x4001475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		public bool vrSettingsExpanded;

		[Token(Token = "0x4001476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10D")]
		public bool useSpatializer;

		[Token(Token = "0x4001477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10E")]
		public bool useSpatializerPostFX;

		[Token(Token = "0x4001478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10F")]
		public bool addOculusAudioSources;

		[Token(Token = "0x4001479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public bool addResonanceAudioSources;

		[Token(Token = "0x400147A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x111")]
		public bool ignoreTimeScale;

		[Token(Token = "0x400147B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x112")]
		public bool useGaplessPlaylists;

		[Token(Token = "0x400147C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x113")]
		public bool useGaplessAutoReschedule;

		[Token(Token = "0x400147D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		public bool saveRuntimeChanges;

		[Token(Token = "0x400147E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x115")]
		public bool prioritizeOnDistance;

		[Token(Token = "0x400147F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public int rePrioritizeEverySecIndex;

		[Token(Token = "0x4001480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		public bool useOcclusion;

		[Token(Token = "0x4001481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public float occlusionMaxCutoffFreq;

		[Token(Token = "0x4001482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		public float occlusionMinCutoffFreq;

		[Token(Token = "0x4001483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public float occlusionFreqChangeSeconds;

		[Token(Token = "0x4001484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		public OcclusionSelectionType occlusionSelectType;

		[Token(Token = "0x4001485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public int occlusionMaxRayCastsPerFrame;

		[Token(Token = "0x4001486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		public float occlusionRayCastOffset;

		[Token(Token = "0x4001487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public bool occlusionUseLayerMask;

		[Token(Token = "0x4001488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		public LayerMask occlusionLayerMask;

		[Token(Token = "0x4001489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public bool occlusionShowRaycasts;

		[Token(Token = "0x400148A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x141")]
		public bool occlusionShowCategories;

		[Token(Token = "0x400148B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		public RaycastMode occlusionRaycastMode;

		[Token(Token = "0x400148C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public bool occlusionIncludeStartRaycast2DCollider;

		[Token(Token = "0x400148D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x149")]
		public bool occlusionRaycastsHitTriggers;

		[Token(Token = "0x400148E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14A")]
		public bool ambientAdvancedExpanded;

		[Token(Token = "0x400148F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		public int ambientMaxRecalcsPerFrame;

		[Token(Token = "0x4001490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public bool visualAdvancedExpanded;

		[Token(Token = "0x4001491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x151")]
		public bool logAdvancedExpanded;

		[Token(Token = "0x4001492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x152")]
		public bool listenerAdvancedExpanded;

		[Token(Token = "0x4001493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x153")]
		public bool listenerFollowerHasRigidBody;

		[Token(Token = "0x4001494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		public VariationFollowerType variationFollowerType;

		[Token(Token = "0x4001495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public bool showFadingSettings;

		[Token(Token = "0x4001496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x159")]
		public bool stopZeroVolumeGroups;

		[Token(Token = "0x4001497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15A")]
		public bool stopZeroVolumeBuses;

		[Token(Token = "0x4001498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15B")]
		public bool stopZeroVolumePlaylists;

		[Token(Token = "0x4001499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		public float stopOldestBusFadeTime;

		[Token(Token = "0x400149A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public bool resourceAdvancedExpanded;

		[Token(Token = "0x400149B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x161")]
		public bool useClipAgePriority;

		[Token(Token = "0x400149C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x162")]
		public bool logOutOfVoices;

		[Token(Token = "0x400149D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x163")]
		public bool LogSounds;

		[Token(Token = "0x400149E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		public bool logCustomEvents;

		[Token(Token = "0x400149F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x165")]
		public bool disableLogging;

		[Token(Token = "0x40014A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x166")]
		public bool showMusicDucking;

		[Token(Token = "0x40014A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x167")]
		public bool enableMusicDucking;

		[Token(Token = "0x40014A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public List<DuckGroupInfo> musicDuckingSounds;

		[Token(Token = "0x40014A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public float defaultRiseVolStart;

		[Token(Token = "0x40014A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		public float defaultUnduckTime;

		[Token(Token = "0x40014A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public float defaultDuckedVolumeCut;

		[Token(Token = "0x40014A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		public float crossFadeTime;

		[Token(Token = "0x40014A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public float _masterPlaylistVolume;

		[Token(Token = "0x40014A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		public bool showGroupSelect;

		[Token(Token = "0x40014A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x185")]
		public bool hideGroupsWithNoActiveVars;

		[Token(Token = "0x40014AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x186")]
		public bool logPerfExpanded;

		[Token(Token = "0x40014AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x187")]
		public bool willWarm;

		[Token(Token = "0x40014AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public string newEventName;

		[Token(Token = "0x40014AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public bool showCustomEvents;

		[Token(Token = "0x40014AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public string newCustomEventCategoryName;

		[Token(Token = "0x40014AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public string addToCustomEventCategoryName;

		[Token(Token = "0x40014B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public List<CustomEvent> customEvents;

		[Token(Token = "0x40014B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		public List<CustomEventCategory> customEventCategories;

		[Token(Token = "0x40014B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		public Dictionary<string, DuckGroupInfo> duckingBySoundType;

		[Token(Token = "0x40014B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		public int frames;

		[Token(Token = "0x40014B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		public bool showUnityMixerGroupAssignment;

		[Token(Token = "0x40014B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static readonly PlaySoundResult AndForgetSuccessResult;

		[Token(Token = "0x40014B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static readonly PlaySoundResult failedResultDuringInit;

		[Token(Token = "0x40014B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private readonly Dictionary<string, AudioGroupInfo> AudioSourcesBySoundType;

		[Token(Token = "0x40014B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private Dictionary<string, List<int>> _randomizer;

		[Token(Token = "0x40014B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		private Dictionary<string, List<int>> _randomizerOrigin;

		[Token(Token = "0x40014BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private Dictionary<string, List<int>> _randomizerLeftovers;

		[Token(Token = "0x40014BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private Dictionary<string, List<int>> _clipsPlayedBySoundTypeOldestFirst;

		[Token(Token = "0x40014BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private readonly List<SoundGroupVariationUpdater> ActiveVariationUpdaters;

		[Token(Token = "0x40014BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		private readonly List<SoundGroupVariationUpdater> ActiveUpdatersToRemove;

		[Token(Token = "0x40014BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		private readonly List<CustomEventCandidate> ValidReceivers;

		[Token(Token = "0x40014BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private readonly List<MasterAudioGroup> SoloedGroups;

		[Token(Token = "0x40014C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		private readonly List<AmbientSoundToTriggerInfo> AmbientsToDelayedTrigger;

		[Token(Token = "0x40014C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		private readonly Queue<CustomEventToFireInfo> CustomEventsToFire;

		[Token(Token = "0x40014C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		private readonly Queue<TransformFollower> TransFollowerColliderPositionRecalcs;

		[Token(Token = "0x40014C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		private readonly List<TransformFollower> ProcessedColliderPositionRecalcs;

		[Token(Token = "0x40014C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		private readonly List<BusFadeInfo> BusFades;

		[Token(Token = "0x40014C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		private readonly List<GroupFadeInfo> GroupFades;

		[Token(Token = "0x40014C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		private readonly List<GroupPitchGlideInfo> GroupPitchGlides;

		[Token(Token = "0x40014C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		private readonly List<BusPitchGlideInfo> BusPitchGlides;

		[Token(Token = "0x40014C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		private readonly List<OcclusionFreqChangeInfo> VariationOcclusionFreqChanges;

		[Token(Token = "0x40014C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		private readonly List<AudioSource> AllAudioSources;

		[Token(Token = "0x40014CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		private readonly Dictionary<string, Dictionary<ICustomEventReceiver, Transform>> ReceiversByEventName;

		[Token(Token = "0x40014CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		private readonly Dictionary<string, PlaylistController> PlaylistControllersByName;

		[Token(Token = "0x40014CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		private readonly Dictionary<string, SoundGroupRefillInfo> LastTimeSoundGroupPlayed;

		[Token(Token = "0x40014CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		private readonly List<GameObject> OcclusionSourcesInRange;

		[Token(Token = "0x40014CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		private readonly List<GameObject> OcclusionSourcesOutOfRange;

		[Token(Token = "0x40014CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		private readonly List<GameObject> OcclusionSourcesBlocked;

		[Token(Token = "0x40014D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		private readonly Queue<SoundGroupVariationUpdater> QueuedOcclusionRays;

		[Token(Token = "0x40014D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		private readonly List<VideoPlayerTracker> VideoPlayerTrackers;

		[Token(Token = "0x40014D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		private readonly List<SoundGroupVariation> VariationsStartedDuringMultiStop;

		[Token(Token = "0x40014D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		private bool _isStoppingMultiple;

		[Token(Token = "0x40014D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2AC")]
		private float _repriTime;

		[Token(Token = "0x40014D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		private List<string> _groupsToRemove;

		[Token(Token = "0x40014D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
		private bool _mustRescanGroups;

		[Token(Token = "0x40014D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
		private Transform _trans;

		[Token(Token = "0x40014D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
		private bool _soundsLoaded;

		[Token(Token = "0x40014D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C9")]
		private bool _warming;

		[Token(Token = "0x40014DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static MasterAudio _instance;

		[Token(Token = "0x40014DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static string _prospectiveMAFolder;

		[Token(Token = "0x40014DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static Transform _listenerTrans;

		[Token(Token = "0x40014DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static readonly List<SoundGroupCommand> GroupCommandsWithNoGroupSelector;

		[Token(Token = "0x40014DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public static readonly List<SoundGroupCommand> GroupCommandsWithNoAllGroupSelector;

		[Token(Token = "0x40014DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DC028", Offset = "0x8DC028")]
		private static bool <AppIsShuttingDown>k__BackingField;

		[Token(Token = "0x170001ED")]
		public static float PlaylistMasterVolume
		{
			[Token(Token = "0x6001216")]
			[Address(RVA = "0xB3901C", Offset = "0xB3901C", VA = "0xB3901C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001217")]
			[Address(RVA = "0xB39084", Offset = "0xB39084", VA = "0xB39084")]
			set
			{
			}
		}

		[Token(Token = "0x170001EE")]
		public static bool LogSoundsEnabled
		{
			[Token(Token = "0x6001228")]
			[Address(RVA = "0xB3A770", Offset = "0xB3A770", VA = "0xB3A770")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001229")]
			[Address(RVA = "0xB3A7D8", Offset = "0xB3A7D8", VA = "0xB3A7D8")]
			set
			{
			}
		}

		[Token(Token = "0x170001EF")]
		public static bool LogOutOfVoices
		{
			[Token(Token = "0x600122A")]
			[Address(RVA = "0xB230E0", Offset = "0xB230E0", VA = "0xB230E0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600122B")]
			[Address(RVA = "0xB3A848", Offset = "0xB3A848", VA = "0xB3A848")]
			set
			{
			}
		}

		[Token(Token = "0x170001F0")]
		public static Transform VideoPlayerSoundGroupTransform
		{
			[Token(Token = "0x6001240")]
			[Address(RVA = "0xB1CF54", Offset = "0xB1CF54", VA = "0xB1CF54")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F1")]
		public static List<AudioSource> MasterAudioSources
		{
			[Token(Token = "0x6001241")]
			[Address(RVA = "0xB3BEA8", Offset = "0xB3BEA8", VA = "0xB3BEA8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F2")]
		public static Transform ListenerTrans
		{
			[Token(Token = "0x6001243")]
			[Address(RVA = "0xB1C9EC", Offset = "0xB1C9EC", VA = "0xB1C9EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F3")]
		public static PlaylistController OnlyPlaylistController
		{
			[Token(Token = "0x6001244")]
			[Address(RVA = "0xB3C008", Offset = "0xB3C008", VA = "0xB3C008")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F4")]
		public static bool IsWarming
		{
			[Token(Token = "0x6001245")]
			[Address(RVA = "0xB22A24", Offset = "0xB22A24", VA = "0xB22A24")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001F5")]
		public static bool MixerMuted
		{
			[Token(Token = "0x6001246")]
			[Address(RVA = "0xB3C0C0", Offset = "0xB3C0C0", VA = "0xB3C0C0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001247")]
			[Address(RVA = "0xB31AE8", Offset = "0xB31AE8", VA = "0xB31AE8")]
			set
			{
			}
		}

		[Token(Token = "0x170001F6")]
		public static bool PlaylistsMuted
		{
			[Token(Token = "0x6001248")]
			[Address(RVA = "0xB3C128", Offset = "0xB3C128", VA = "0xB3C128")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001249")]
			[Address(RVA = "0xB35874", Offset = "0xB35874", VA = "0xB35874")]
			set
			{
			}
		}

		[Token(Token = "0x170001F7")]
		public bool EnableMusicDucking
		{
			[Token(Token = "0x600124A")]
			[Address(RVA = "0xB3C190", Offset = "0xB3C190", VA = "0xB3C190")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600124B")]
			[Address(RVA = "0xB3C198", Offset = "0xB3C198", VA = "0xB3C198")]
			set
			{
			}
		}

		[Token(Token = "0x170001F8")]
		public float MasterCrossFadeTime
		{
			[Token(Token = "0x600124C")]
			[Address(RVA = "0xB3C1A4", Offset = "0xB3C1A4", VA = "0xB3C1A4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001F9")]
		public static List<Playlist> MusicPlaylists
		{
			[Token(Token = "0x600124D")]
			[Address(RVA = "0xB352AC", Offset = "0xB352AC", VA = "0xB352AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FA")]
		public static List<GroupBus> GroupBuses
		{
			[Token(Token = "0x600124E")]
			[Address(RVA = "0xB2BF18", Offset = "0xB2BF18", VA = "0xB2BF18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FB")]
		public static List<string> RuntimeSoundGroupNames
		{
			[Token(Token = "0x600124F")]
			[Address(RVA = "0xB3C1AC", Offset = "0xB3C1AC", VA = "0xB3C1AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FC")]
		public static List<string> RuntimeBusNames
		{
			[Token(Token = "0x6001250")]
			[Address(RVA = "0xB3C2C0", Offset = "0xB3C2C0", VA = "0xB3C2C0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FD")]
		public static MasterAudio SafeInstance
		{
			[Token(Token = "0x6001251")]
			[Address(RVA = "0xB19838", Offset = "0xB19838", VA = "0xB19838")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FE")]
		public static MasterAudio Instance
		{
			[Token(Token = "0x6001252")]
			[Address(RVA = "0xB1652C", Offset = "0xB1652C", VA = "0xB1652C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001253")]
			[Address(RVA = "0xB3C434", Offset = "0xB3C434", VA = "0xB3C434")]
			set
			{
			}
		}

		[Token(Token = "0x170001FF")]
		public static bool SoundsReady
		{
			[Token(Token = "0x6001254")]
			[Address(RVA = "0xB20D80", Offset = "0xB20D80", VA = "0xB20D80")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000200")]
		public static bool AppIsShuttingDown
		{
			[Token(Token = "0x6001255")]
			[Address(RVA = "0xB3C498", Offset = "0xB3C498", VA = "0xB3C498")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E17B0", Offset = "0x8E17B0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001256")]
			[Address(RVA = "0xB3C4FC", Offset = "0xB3C4FC", VA = "0xB3C4FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E17C0", Offset = "0x8E17C0")]
			set
			{
			}
		}

		[Token(Token = "0x17000201")]
		public List<string> GroupNames
		{
			[Token(Token = "0x6001257")]
			[Address(RVA = "0xB3C568", Offset = "0xB3C568", VA = "0xB3C568")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000202")]
		public static List<string> SoundGroupHardCodedNames
		{
			[Token(Token = "0x6001258")]
			[Address(RVA = "0xB3C928", Offset = "0xB3C928", VA = "0xB3C928")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000203")]
		public List<string> BusNames
		{
			[Token(Token = "0x6001259")]
			[Address(RVA = "0xB3C9F8", Offset = "0xB3C9F8", VA = "0xB3C9F8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000204")]
		public List<string> PlaylistNames
		{
			[Token(Token = "0x600125A")]
			[Address(RVA = "0xB3CB48", Offset = "0xB3CB48", VA = "0xB3CB48")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000205")]
		public List<string> PlaylistNamesOnly
		{
			[Token(Token = "0x600125B")]
			[Address(RVA = "0xB3CC98", Offset = "0xB3CC98", VA = "0xB3CC98")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000206")]
		public Transform Trans
		{
			[Token(Token = "0x600125C")]
			[Address(RVA = "0xB1CBF0", Offset = "0xB1CBF0", VA = "0xB1CBF0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000207")]
		public bool ShouldShowUnityAudioMixerGroupAssignments
		{
			[Token(Token = "0x600125D")]
			[Address(RVA = "0xB3CDB0", Offset = "0xB3CDB0", VA = "0xB3CDB0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000208")]
		public List<string> CustomEventNames
		{
			[Token(Token = "0x600125E")]
			[Address(RVA = "0xB3CDB8", Offset = "0xB3CDB8", VA = "0xB3CDB8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000209")]
		public List<string> CustomEventNamesOnly
		{
			[Token(Token = "0x600125F")]
			[Address(RVA = "0xB3CF88", Offset = "0xB3CF88", VA = "0xB3CF88")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020A")]
		public static List<string> CustomEventHardCodedNames
		{
			[Token(Token = "0x6001260")]
			[Address(RVA = "0xB3CEB8", Offset = "0xB3CEB8", VA = "0xB3CEB8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020B")]
		public static float MasterVolumeLevel
		{
			[Token(Token = "0x6001261")]
			[Address(RVA = "0xB3D0D0", Offset = "0xB3D0D0", VA = "0xB3D0D0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001262")]
			[Address(RVA = "0xB3D138", Offset = "0xB3D138", VA = "0xB3D138")]
			set
			{
			}
		}

		[Token(Token = "0x1700020C")]
		private static bool SceneHasMasterAudio
		{
			[Token(Token = "0x6001263")]
			[Address(RVA = "0xB20CE4", Offset = "0xB20CE4", VA = "0xB20CE4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700020D")]
		public static bool IgnoreTimeScale
		{
			[Token(Token = "0x6001264")]
			[Address(RVA = "0xB3D2AC", Offset = "0xB3D2AC", VA = "0xB3D2AC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700020E")]
		public static SystemLanguage DynamicLanguage
		{
			[Token(Token = "0x6001265")]
			[Address(RVA = "0xB3D314", Offset = "0xB3D314", VA = "0xB3D314")]
			get
			{
				return default(SystemLanguage);
			}
			[Token(Token = "0x6001266")]
			[Address(RVA = "0xB3D4C4", Offset = "0xB3D4C4", VA = "0xB3D4C4")]
			set
			{
			}
		}

		[Token(Token = "0x1700020F")]
		public static float ReprioritizeTime
		{
			[Token(Token = "0x6001267")]
			[Address(RVA = "0xB3D5A0", Offset = "0xB3D5A0", VA = "0xB3D5A0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000210")]
		public static bool ShouldRescanGroups
		{
			[Token(Token = "0x600126A")]
			[Address(RVA = "0xB3D6E4", Offset = "0xB3D6E4", VA = "0xB3D6E4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000211")]
		public static string ProspectiveMAPath
		{
			[Token(Token = "0x600126B")]
			[Address(RVA = "0xB3D7C0", Offset = "0xB3D7C0", VA = "0xB3D7C0")]
			get
			{
				return null;
			}
			[Token(Token = "0x600126C")]
			[Address(RVA = "0xB3D824", Offset = "0xB3D824", VA = "0xB3D824")]
			set
			{
			}
		}

		[Token(Token = "0x600112F")]
		[Address(RVA = "0xB1A9F4", Offset = "0xB1A9F4", VA = "0xB1A9F4")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x8E167C", Offset = "0x8E167C")]
		private static void Init()
		{
		}

		[Token(Token = "0x6001130")]
		[Address(RVA = "0xB1AA90", Offset = "0xB1AA90", VA = "0xB1AA90")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001131")]
		[Address(RVA = "0xB1D60C", Offset = "0xB1D60C", VA = "0xB1D60C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001132")]
		[Address(RVA = "0xB1D7B4", Offset = "0xB1D7B4", VA = "0xB1D7B4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001133")]
		[Address(RVA = "0xB1DAA0", Offset = "0xB1DAA0", VA = "0xB1DAA0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001134")]
		[Address(RVA = "0xB1F2F0", Offset = "0xB1F2F0", VA = "0xB1F2F0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001135")]
		[Address(RVA = "0xB1F398", Offset = "0xB1F398", VA = "0xB1F398")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001136")]
		[Address(RVA = "0xB1F300", Offset = "0xB1F300", VA = "0xB1F300")]
		private void ManualUpdate()
		{
		}

		[Token(Token = "0x6001137")]
		[Address(RVA = "0xB1D0E4", Offset = "0xB1D0E4", VA = "0xB1D0E4")]
		public string SoundGroupForWarming()
		{
			return null;
		}

		[Token(Token = "0x6001138")]
		[Address(RVA = "0xB1F8A0", Offset = "0xB1F8A0", VA = "0xB1F8A0")]
		public static void RegisterUpdaterForUpdates(SoundGroupVariationUpdater updater)
		{
		}

		[Token(Token = "0x6001139")]
		[Address(RVA = "0xB1F984", Offset = "0xB1F984", VA = "0xB1F984")]
		public static void UnregisterUpdaterForUpdates(SoundGroupVariationUpdater updater)
		{
		}

		[Token(Token = "0x600113A")]
		[Address(RVA = "0xB1F6E0", Offset = "0xB1F6E0", VA = "0xB1F6E0")]
		private void UpdateActiveVariations()
		{
		}

		[Token(Token = "0x600113B")]
		[Address(RVA = "0xB1FA10", Offset = "0xB1FA10", VA = "0xB1FA10")]
		private static void UpdateRefillTime(string sType, float inactivePeriodSeconds)
		{
		}

		[Token(Token = "0x600113C")]
		[Address(RVA = "0xB1F3AC", Offset = "0xB1F3AC", VA = "0xB1F3AC")]
		private static void RecalcClosestColliderPositions()
		{
		}

		[Token(Token = "0x600113D")]
		[Address(RVA = "0xB1F16C", Offset = "0xB1F16C", VA = "0xB1F16C")]
		private static void TrackVideoPlayers()
		{
		}

		[Token(Token = "0x600113E")]
		[Address(RVA = "0xB1F08C", Offset = "0xB1F08C", VA = "0xB1F08C")]
		private static void FireCustomEventsWaiting()
		{
		}

		[Token(Token = "0x600113F")]
		[Address(RVA = "0xB1ED68", Offset = "0xB1ED68", VA = "0xB1ED68")]
		private static void RefillInactiveGroupPools()
		{
		}

		[Token(Token = "0x6001140")]
		[Address(RVA = "0xB1DB38", Offset = "0xB1DB38", VA = "0xB1DB38")]
		private static void PerformOcclusionFrequencyChanges()
		{
		}

		[Token(Token = "0x6001141")]
		[Address(RVA = "0xB1DE9C", Offset = "0xB1DE9C", VA = "0xB1DE9C")]
		private void PerformBusFades()
		{
		}

		[Token(Token = "0x6001142")]
		[Address(RVA = "0xB1E3F4", Offset = "0xB1E3F4", VA = "0xB1E3F4")]
		private void PerformGroupFades()
		{
		}

		[Token(Token = "0x6001143")]
		[Address(RVA = "0xB1E9B0", Offset = "0xB1E9B0", VA = "0xB1E9B0")]
		public static void PerformDelayedAmbientTriggers()
		{
		}

		[Token(Token = "0x6001144")]
		[Address(RVA = "0xB1E7B0", Offset = "0xB1E7B0", VA = "0xB1E7B0")]
		private void PerformGroupPitchGlides()
		{
		}

		[Token(Token = "0x6001145")]
		[Address(RVA = "0xB1E1F8", Offset = "0xB1E1F8", VA = "0xB1E1F8")]
		private void PerformBusPitchGlides()
		{
		}

		[Token(Token = "0x6001146")]
		[Address(RVA = "0xB20A78", Offset = "0xB20A78", VA = "0xB20A78")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6001147")]
		[Address(RVA = "0xB20B18", Offset = "0xB20B18", VA = "0xB20B18")]
		public static bool PlaySoundAndForget(string sType, float volumePercentage = 1f, [Optional] float? pitch, float delaySoundTime = 0f, [Optional] string variationName, [Optional] double? timeToSchedulePlay)
		{
			return default(bool);
		}

		[Token(Token = "0x6001148")]
		[Address(RVA = "0xB21A04", Offset = "0xB21A04", VA = "0xB21A04")]
		public static PlaySoundResult PlaySound(string sType, float volumePercentage = 1f, [Optional] float? pitch, float delaySoundTime = 0f, [Optional] string variationName, [Optional] double? timeToSchedulePlay, bool isChaining = false, bool isSingleSubscribedPlay = false)
		{
			return null;
		}

		[Token(Token = "0x6001149")]
		[Address(RVA = "0xB21C10", Offset = "0xB21C10", VA = "0xB21C10")]
		public static bool PlaySound3DAtVector3AndForget(string sType, Vector3 sourcePosition, float volumePercentage = 1f, [Optional] float? pitch, float delaySoundTime = 0f, [Optional] string variationName, [Optional] double? timeToSchedulePlay)
		{
			return default(bool);
		}

		[Token(Token = "0x600114A")]
		[Address(RVA = "0xB21DD4", Offset = "0xB21DD4", VA = "0xB21DD4")]
		public static PlaySoundResult PlaySound3DAtVector3(string sType, Vector3 sourcePosition, float volumePercentage = 1f, [Optional] float? pitch, float delaySoundTime = 0f, [Optional] string variationName, [Optional] double? timeToSchedulePlay)
		{
			return null;
		}

		[Token(Token = "0x600114B")]
		[Address(RVA = "0xB21FC0", Offset = "0xB21FC0", VA = "0xB21FC0")]
		public static bool PlaySound3DAtTransformAndForget(string sType, Transform sourceTrans, float volumePercentage = 1f, [Optional] float? pitch, float delaySoundTime = 0f, [Optional] string variationName, [Optional] double? timeToSchedulePlay)
		{
			return default(bool);
		}

		[Token(Token = "0x600114C")]
		[Address(RVA = "0xB19224", Offset = "0xB19224", VA = "0xB19224")]
		public static PlaySoundResult PlaySound3DAtTransform(string sType, Transform sourceTrans, float volumePercentage = 1f, [Optional] float? pitch, float delaySoundTime = 0f, [Optional] string variationName, [Optional] double? timeToSchedulePlay, bool isChaining = false, bool isSingleSubscribedPlay = false)
		{
			return null;
		}

		[Token(Token = "0x600114D")]
		[Address(RVA = "0xB22198", Offset = "0xB22198", VA = "0xB22198")]
		public static bool PlaySound3DFollowTransformAndForget(string sType, Transform sourceTrans, float volumePercentage = 1f, [Optional] float? pitch, float delaySoundTime = 0f, [Optional] string variationName, [Optional] double? timeToSchedulePlay)
		{
			return default(bool);
		}

		[Token(Token = "0x600114E")]
		[Address(RVA = "0xB1D2A8", Offset = "0xB1D2A8", VA = "0xB1D2A8")]
		public static PlaySoundResult PlaySound3DFollowTransform(string sType, Transform sourceTrans, float volumePercentage = 1f, [Optional] float? pitch, float delaySoundTime = 0f, [Optional] string variationName, [Optional] double? timeToSchedulePlay, bool isChaining = false, bool isSingleSubscribedPlay = false)
		{
			return null;
		}

		[Token(Token = "0x600114F")]
		[Address(RVA = "0xB22370", Offset = "0xB22370", VA = "0xB22370")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E1690", Offset = "0x8E1690")]
		public static IEnumerator PlaySoundAndWaitUntilFinished(string sType, float volumePercentage = 1f, [Optional] float? pitch, float delaySoundTime = 0f, [Optional] string variationName, [Optional] Action completedAction)
		{
			return null;
		}

		[Token(Token = "0x6001150")]
		[Address(RVA = "0xB2241C", Offset = "0xB2241C", VA = "0xB2241C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E16F0", Offset = "0x8E16F0")]
		public static IEnumerator PlaySound3DAtTransformAndWaitUntilFinished(string sType, Transform sourceTrans, float volumePercentage = 1f, [Optional] float? pitch, float delaySoundTime = 0f, [Optional] string variationName, [Optional] double? timeToSchedulePlay, [Optional] Action completedAction)
		{
			return null;
		}

		[Token(Token = "0x6001151")]
		[Address(RVA = "0xB224E0", Offset = "0xB224E0", VA = "0xB224E0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E1750", Offset = "0x8E1750")]
		public static IEnumerator PlaySound3DFollowTransformAndWaitUntilFinished(string sType, Transform sourceTrans, float volumePercentage = 1f, [Optional] float? pitch, float delaySoundTime = 0f, [Optional] string variationName, [Optional] double? timeToSchedulePlay, [Optional] Action completedAction)
		{
			return null;
		}

		[Token(Token = "0x6001152")]
		[Address(RVA = "0xB219E0", Offset = "0xB219E0", VA = "0xB219E0")]
		public static bool PSRAsSuccessBool(PlaySoundResult psr)
		{
			return default(bool);
		}

		[Token(Token = "0x6001153")]
		[Address(RVA = "0xB20E5C", Offset = "0xB20E5C", VA = "0xB20E5C")]
		private static PlaySoundResult PlaySoundAtVolume(string sType, float volumePercentage, Vector3 sourcePosition, double? timeToSchedulePlay, [Optional] float? pitch, [Optional] Transform sourceTrans, [Optional] string variationName, bool attachToSource = false, float delaySoundTime = 0f, bool useVector3 = false, bool makePlaySoundResult = false, bool isChaining = false, bool isSingleSubscribedPlay = false, bool triggeredAsChildGroup = false)
		{
			return null;
		}

		[Token(Token = "0x6001154")]
		[Address(RVA = "0xB249CC", Offset = "0xB249CC", VA = "0xB249CC")]
		private static PlaySoundResult TryPlayVariationOrOtherMatches(string sType, float volumePercentage, Vector3 sourcePosition, double? timeToSchedulePlay, float? pitch, Transform sourceTrans, bool attachToSource, float delaySoundTime, bool useVector3, bool makePlaySoundResult, bool isChaining, bool isSingleSubscribedPlay, AudioInfo randomSource, SoundGroupVariation busVoiceToStop, GroupBus groupBus, bool canUseBusVoiceToStop, bool forgetSoundPlayedOrScheduled, AudioGroupInfo group, bool isNonSpecific, int? randomIndex, List<int> choices, int pickedChoice, bool loggingEnabledForGrp, bool isSingleVarLoop, List<int> otherChoices, bool hasRefilledPool, List<AudioInfo> sources, out bool soundSuccess)
		{
			return null;
		}

		[Token(Token = "0x6001155")]
		[Address(RVA = "0xB245CC", Offset = "0xB245CC", VA = "0xB245CC")]
		private static bool CanPlayDialogBasedOnImportanceOrIsNotDialog(string sType, AudioGroupInfo group, bool loggingEnabledForGrp, AudioInfo randomSource)
		{
			return default(bool);
		}

		[Token(Token = "0x6001156")]
		[Address(RVA = "0xB23748", Offset = "0xB23748", VA = "0xB23748")]
		private static AudioInfo UseOnlyVariationIfOnlyOne(string sType, List<AudioInfo> sources, bool loggingEnabledForGrp, AudioInfo randomSource, MasterAudioGroup maGroup, ref bool isSingleVarLoop)
		{
			return null;
		}

		[Token(Token = "0x6001157")]
		[Address(RVA = "0xB242FC", Offset = "0xB242FC", VA = "0xB242FC")]
		private static bool IsActorTooFarAwayToPlay(string sType, Transform sourceTrans, AudioGroupInfo group, AudioInfo randomSource, bool loggingEnabledForGrp)
		{
			return default(bool);
		}

		[Token(Token = "0x6001158")]
		[Address(RVA = "0xB2417C", Offset = "0xB2417C", VA = "0xB2417C")]
		private static bool VariationPassesProbabilityToPlayCheck(string sType, float volumePercentage, float? pitch, Transform sourceTrans, bool attachToSource, bool isChaining, AudioInfo randomSource, bool loggingEnabledForGrp, AudioGroupInfo group, bool isNonSpecific, int? randomIndex, List<int> choices, int pickedChoice)
		{
			return default(bool);
		}

		[Token(Token = "0x6001159")]
		[Address(RVA = "0xB23F84", Offset = "0xB23F84", VA = "0xB23F84")]
		private static bool IsNoClipSilentPlay(string sType, float volumePercentage, float? pitch, Transform sourceTrans, bool attachToSource, bool isChaining, AudioInfo randomSource, bool loggingEnabledForGrp, AudioGroupInfo group, bool isNonSpecific, int? randomIndex, List<int> choices, int pickedChoice)
		{
			return default(bool);
		}

		[Token(Token = "0x600115A")]
		[Address(RVA = "0xB23DF0", Offset = "0xB23DF0", VA = "0xB23DF0")]
		private static bool VariationIsUsable(AudioInfo randomSource)
		{
			return default(bool);
		}

		[Token(Token = "0x600115B")]
		[Address(RVA = "0xB23870", Offset = "0xB23870", VA = "0xB23870")]
		private static bool CanFindVariationToPlay(string sType, string variationName, bool isNonSpecific, bool canUseBusVoiceToStop, List<AudioInfo> sources, bool loggingEnabledForGrp, SoundGroupVariation busVoiceToStop, ref AudioInfo randomSource, ref List<int> choices, ref int? randomIndex, ref int pickedChoice, ref List<int> otherChoices)
		{
			return default(bool);
		}

		[Token(Token = "0x600115C")]
		[Address(RVA = "0xB233A4", Offset = "0xB233A4", VA = "0xB233A4")]
		private static SoundGroupVariation FindBusVoiceToStop(GroupBus groupBus, MasterAudioGroup group)
		{
			return null;
		}

		[Token(Token = "0x600115D")]
		[Address(RVA = "0xB2328C", Offset = "0xB2328C", VA = "0xB2328C")]
		private static bool CanStopLimitedBusVoice(GroupBus groupBus, bool loggingEnabledForGrp, AudioGroupInfo group)
		{
			return default(bool);
		}

		[Token(Token = "0x600115E")]
		[Address(RVA = "0xB23260", Offset = "0xB23260", VA = "0xB23260")]
		private static bool IsBusVoiceLimited(GroupBus groupBus)
		{
			return default(bool);
		}

		[Token(Token = "0x600115F")]
		[Address(RVA = "0xB22EF8", Offset = "0xB22EF8", VA = "0xB22EF8")]
		private static AudioInfo FindRetriggerableVariationInGroup(string variationName, bool isNonSpecific, List<AudioInfo> sources, MasterAudioGroup maGroup)
		{
			return null;
		}

		[Token(Token = "0x6001160")]
		[Address(RVA = "0xB22E94", Offset = "0xB22E94", VA = "0xB22E94")]
		private static bool IsGroupPolyphonyLimited(MasterAudioGroup maGroup, AudioGroupInfo group)
		{
			return default(bool);
		}

		[Token(Token = "0x6001161")]
		[Address(RVA = "0xB22D18", Offset = "0xB22D18", VA = "0xB22D18")]
		private static bool IsReplayLimited(string sType, MasterAudioGroup maGroup, AudioGroupInfo group, bool loggingEnabledForGrp)
		{
			return default(bool);
		}

		[Token(Token = "0x6001162")]
		[Address(RVA = "0xB22B00", Offset = "0xB22B00", VA = "0xB22B00")]
		private static void LogIfSilentPlay(string sType, bool loggingEnabledForGrp, MasterAudioGroup maGroup)
		{
		}

		[Token(Token = "0x6001163")]
		[Address(RVA = "0xB22940", Offset = "0xB22940", VA = "0xB22940")]
		private static bool SoundGroupHasVariations(string sType, List<AudioInfo> sources, bool loggingEnabledForGrp)
		{
			return default(bool);
		}

		[Token(Token = "0x6001164")]
		[Address(RVA = "0xB225A4", Offset = "0xB225A4", VA = "0xB225A4")]
		private static bool IsSoundGroupValidAndReady(string sType, Transform sourceTrans)
		{
			return default(bool);
		}

		[Token(Token = "0x6001165")]
		[Address(RVA = "0xB25BC0", Offset = "0xB25BC0", VA = "0xB25BC0")]
		private static void MaybeChainNextVar(bool isChaining, SoundGroupVariation variation, float volumePercentage, float? pitch, Transform sourceTrans, bool attachToSource)
		{
		}

		[Token(Token = "0x6001166")]
		[Address(RVA = "0xB24F98", Offset = "0xB24F98", VA = "0xB24F98")]
		private static void SetLastPlayed(AudioGroupInfo grp)
		{
		}

		[Token(Token = "0x6001167")]
		[Address(RVA = "0xB256E0", Offset = "0xB256E0", VA = "0xB256E0")]
		private static void RemoveClipAndRefillIfEmpty(AudioGroupInfo grp, bool isNonSpecific, int? randomIndex, List<int> choices, string sType, int pickedChoice, bool loggingEnabledForGrp, bool isSingleVarLoop)
		{
		}

		[Token(Token = "0x6001168")]
		[Address(RVA = "0xB24FD4", Offset = "0xB24FD4", VA = "0xB24FD4")]
		private static PlaySoundResult PlaySoundIfAvailable(AudioInfo info, Vector3 sourcePosition, float volumePercentage, SoundGroupVariation busVoiceToStop, GroupBus groupBus, bool canUseBusVoiceToStop, ref bool forgetSoundPlayed, [Optional] float? pitch, [Optional] AudioGroupInfo audioGroup, [Optional] Transform sourceTrans, bool attachToSource = false, float delaySoundTime = 0f, bool useVector3 = false, bool makePlaySoundResult = false, [Optional] double? timeToSchedulePlay, bool isChaining = false, bool isSingleSubscribedPlay = false)
		{
			return null;
		}

		[Token(Token = "0x6001169")]
		[Address(RVA = "0xB266B4", Offset = "0xB266B4", VA = "0xB266B4")]
		private static void FadeOldestOrFarthestBusVoice(SoundGroupVariation busVoiceToStop, GroupBus groupBus)
		{
		}

		[Token(Token = "0x600116A")]
		[Address(RVA = "0xB267A0", Offset = "0xB267A0", VA = "0xB267A0")]
		public static void EndDucking(SoundGroupVariationUpdater actorUpdater)
		{
		}

		[Token(Token = "0x600116B")]
		[Address(RVA = "0xB26850", Offset = "0xB26850", VA = "0xB26850")]
		public static void DuckSoundGroup(string soundGroupName, AudioSource aSource, SoundGroupVariationUpdater actorUpdater)
		{
		}

		[Token(Token = "0x600116C")]
		[Address(RVA = "0xB26A48", Offset = "0xB26A48", VA = "0xB26A48")]
		private static void StopPauseOrUnpauseSoundsOfTransform(Transform trans, List<AudioInfo> varList, VariationCommand varCmd)
		{
		}

		[Token(Token = "0x600116D")]
		[Address(RVA = "0xB26EE8", Offset = "0xB26EE8", VA = "0xB26EE8")]
		public static void StopAllSoundsOfTransform(Transform sourceTrans)
		{
		}

		[Token(Token = "0x600116E")]
		[Address(RVA = "0xB271A0", Offset = "0xB271A0", VA = "0xB271A0")]
		public static void StopSoundGroupOfTransform(Transform sourceTrans, string sType)
		{
		}

		[Token(Token = "0x600116F")]
		[Address(RVA = "0xB27390", Offset = "0xB27390", VA = "0xB27390")]
		public static void PauseAllSoundsOfTransform(Transform sourceTrans)
		{
		}

		[Token(Token = "0x6001170")]
		[Address(RVA = "0xB275E8", Offset = "0xB275E8", VA = "0xB275E8")]
		public static void PauseSoundGroupOfTransform(Transform sourceTrans, string sType)
		{
		}

		[Token(Token = "0x6001171")]
		[Address(RVA = "0xB277D8", Offset = "0xB277D8", VA = "0xB277D8")]
		public static void UnpauseAllSoundsOfTransform(Transform sourceTrans)
		{
		}

		[Token(Token = "0x6001172")]
		[Address(RVA = "0xB27A30", Offset = "0xB27A30", VA = "0xB27A30")]
		public static void UnpauseSoundGroupOfTransform(Transform sourceTrans, string sType)
		{
		}

		[Token(Token = "0x6001173")]
		[Address(RVA = "0xB27C20", Offset = "0xB27C20", VA = "0xB27C20")]
		public static void FadeOutAllSoundsOfTransform(Transform sourceTrans, float fadeTime)
		{
		}

		[Token(Token = "0x6001174")]
		[Address(RVA = "0xB281A4", Offset = "0xB281A4", VA = "0xB281A4")]
		public static void FadeOutSoundGroupOfTransform(Transform sourceTrans, string sType, float fadeTime)
		{
		}

		[Token(Token = "0x6001175")]
		[Address(RVA = "0xB2053C", Offset = "0xB2053C", VA = "0xB2053C")]
		public static void StopAllOfSound(string sType)
		{
		}

		[Token(Token = "0x6001176")]
		[Address(RVA = "0xB25938", Offset = "0xB25938", VA = "0xB25938")]
		public static void FadeOutAllOfSound(string sType, float fadeTime)
		{
		}

		[Token(Token = "0x6001177")]
		[Address(RVA = "0xB284DC", Offset = "0xB284DC", VA = "0xB284DC")]
		public static List<SoundGroupVariation> GetAllPlayingVariations()
		{
			return null;
		}

		[Token(Token = "0x6001178")]
		[Address(RVA = "0xB27E3C", Offset = "0xB27E3C", VA = "0xB27E3C")]
		public static List<SoundGroupVariation> GetAllPlayingVariationsOfTransform(Transform sourceTrans)
		{
			return null;
		}

		[Token(Token = "0x6001179")]
		[Address(RVA = "0xB287D4", Offset = "0xB287D4", VA = "0xB287D4")]
		public static List<SoundGroupVariation> GetAllPlayingVariationsOfTransformList(List<Transform> sourceTransList)
		{
			return null;
		}

		[Token(Token = "0x600117A")]
		[Address(RVA = "0xB28BB4", Offset = "0xB28BB4", VA = "0xB28BB4")]
		public static List<SoundGroupVariation> GetAllPlayingVariationsInBus(string busName)
		{
			return null;
		}

		[Token(Token = "0x600117B")]
		[Address(RVA = "0xB28DEC", Offset = "0xB28DEC", VA = "0xB28DEC")]
		public static void DeleteGroupVariation(string sType, string variationName)
		{
		}

		[Token(Token = "0x600117C")]
		[Address(RVA = "0xB29C2C", Offset = "0xB29C2C", VA = "0xB29C2C")]
		public static void CreateGroupVariationFromClip(string sType, AudioClip clip, string variationName, float volume = 1f, float pitch = 1f)
		{
		}

		[Token(Token = "0x600117D")]
		[Address(RVA = "0xB2A2F4", Offset = "0xB2A2F4", VA = "0xB2A2F4")]
		public static void ChangeVariationPitch(string sType, bool changeAllVariations, string variationName, float pitch)
		{
		}

		[Token(Token = "0x600117E")]
		[Address(RVA = "0xB2A6B8", Offset = "0xB2A6B8", VA = "0xB2A6B8")]
		public static void ChangeVariationVolume(string sType, bool changeAllVariations, string variationName, float volume)
		{
		}

		[Token(Token = "0x600117F")]
		[Address(RVA = "0xB2AA08", Offset = "0xB2AA08", VA = "0xB2AA08")]
		public static void ChangeVariationClipFromResources(string sType, bool changeAllVariations, string variationName, string resourceFileName)
		{
		}

		[Token(Token = "0x6001180")]
		[Address(RVA = "0xB2ABFC", Offset = "0xB2ABFC", VA = "0xB2ABFC")]
		public static void ChangeVariationClip(string sType, bool changeAllVariations, string variationName, AudioClip clip)
		{
		}

		[Token(Token = "0x6001181")]
		[Address(RVA = "0xB2AED0", Offset = "0xB2AED0", VA = "0xB2AED0")]
		public static void GradualOcclusionFreqChange(SoundGroupVariation variation, float fadeTime, float newCutoffFreq)
		{
		}

		[Token(Token = "0x6001182")]
		[Address(RVA = "0xB2B1D4", Offset = "0xB2B1D4", VA = "0xB2B1D4")]
		public static AudioSource GetNextVariationForSoundGroup(string sType)
		{
			return null;
		}

		[Token(Token = "0x6001183")]
		[Address(RVA = "0xB2B52C", Offset = "0xB2B52C", VA = "0xB2B52C")]
		public static bool IsSoundGroupPlaying(string sType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001184")]
		[Address(RVA = "0xB2B668", Offset = "0xB2B668", VA = "0xB2B668")]
		public static bool IsTransformPlayingSoundGroup(string sType, Transform sourceTrans)
		{
			return default(bool);
		}

		[Token(Token = "0x6001185")]
		[Address(RVA = "0xB2B878", Offset = "0xB2B878", VA = "0xB2B878")]
		public static void RouteGroupToBus(string sType, string busName)
		{
		}

		[Token(Token = "0x6001186")]
		[Address(RVA = "0xB2C428", Offset = "0xB2C428", VA = "0xB2C428")]
		public static float GetVariationLength(string sType, string variationName)
		{
			return default(float);
		}

		[Token(Token = "0x6001187")]
		[Address(RVA = "0xB1FBB0", Offset = "0xB1FBB0", VA = "0xB1FBB0")]
		public static void RefillSoundGroupPool(string sType)
		{
		}

		[Token(Token = "0x6001188")]
		[Address(RVA = "0xB2CB34", Offset = "0xB2CB34", VA = "0xB2CB34")]
		public static bool SoundGroupExists(string sType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001189")]
		[Address(RVA = "0xB2CBDC", Offset = "0xB2CBDC", VA = "0xB2CBDC")]
		public static void PauseSoundGroup(string sType)
		{
		}

		[Token(Token = "0x600118A")]
		[Address(RVA = "0xB2CD88", Offset = "0xB2CD88", VA = "0xB2CD88")]
		public static void SetGroupSpatialBlend(string sType)
		{
		}

		[Token(Token = "0x600118B")]
		[Address(RVA = "0xB2CF00", Offset = "0xB2CF00", VA = "0xB2CF00")]
		public static void RouteGroupToUnityMixerGroup(string sType, AudioMixerGroup mixerGroup)
		{
		}

		[Token(Token = "0x600118C")]
		[Address(RVA = "0xB2D098", Offset = "0xB2D098", VA = "0xB2D098")]
		public static void UnpauseSoundGroup(string sType)
		{
		}

		[Token(Token = "0x600118D")]
		[Address(RVA = "0xB2D244", Offset = "0xB2D244", VA = "0xB2D244")]
		public static void FadeSoundGroupToVolume(string sType, float newVolume, float fadeTime, [Optional] Action completionCallback, bool willStopAfterFade = false, bool willResetVolumeAfterFade = false)
		{
		}

		[Token(Token = "0x600118E")]
		[Address(RVA = "0xB2D628", Offset = "0xB2D628", VA = "0xB2D628")]
		public static void FadeOutOldSoundGroupVoices(string sType, float minimumPlayTime, float fadeTime)
		{
		}

		[Token(Token = "0x600118F")]
		[Address(RVA = "0xB2D808", Offset = "0xB2D808", VA = "0xB2D808")]
		public static void StopOldSoundGroupVoices(string sType, float minimumPlayTime)
		{
		}

		[Token(Token = "0x6001190")]
		[Address(RVA = "0xB2D9C8", Offset = "0xB2D9C8", VA = "0xB2D9C8")]
		public static void GlideSoundGroupByPitch(string sType, float pitchAddition, float glideTime, [Optional] Action completionCallback)
		{
		}

		[Token(Token = "0x6001191")]
		[Address(RVA = "0xB2DF34", Offset = "0xB2DF34", VA = "0xB2DF34")]
		public static void DeleteSoundGroup(string sType)
		{
		}

		[Token(Token = "0x6001192")]
		[Address(RVA = "0xB2E5AC", Offset = "0xB2E5AC", VA = "0xB2E5AC")]
		public static Transform CreateSoundGroup(DynamicSoundGroup aGroup, string creatorObjectName, bool errorOnExisting = true)
		{
			return null;
		}

		[Token(Token = "0x6001193")]
		[Address(RVA = "0xB2F7D0", Offset = "0xB2F7D0", VA = "0xB2F7D0")]
		public static float GetGroupVolume(string sType)
		{
			return default(float);
		}

		[Token(Token = "0x6001194")]
		[Address(RVA = "0xB20268", Offset = "0xB20268", VA = "0xB20268")]
		public static void SetGroupVolume(string sType, float volumeLevel)
		{
		}

		[Token(Token = "0x6001195")]
		[Address(RVA = "0xB1D4C0", Offset = "0xB1D4C0", VA = "0xB1D4C0")]
		public static void MuteGroup(string sType, bool shouldCheckMuteStatus = true)
		{
		}

		[Token(Token = "0x6001196")]
		[Address(RVA = "0xB2F9B4", Offset = "0xB2F9B4", VA = "0xB2F9B4")]
		public static void UnmuteGroup(string sType, bool shouldCheckMuteStatus = true)
		{
		}

		[Token(Token = "0x6001197")]
		[Address(RVA = "0xB1CC90", Offset = "0xB1CC90", VA = "0xB1CC90")]
		private static void AddRuntimeGroupInfo(string groupName, AudioGroupInfo groupInfo)
		{
		}

		[Token(Token = "0x6001198")]
		[Address(RVA = "0xB2FC4C", Offset = "0xB2FC4C", VA = "0xB2FC4C")]
		private static void FireAudioSourcesNumberChangedEvent()
		{
		}

		[Token(Token = "0x6001199")]
		[Address(RVA = "0xB2FAC4", Offset = "0xB2FAC4", VA = "0xB2FAC4")]
		public static void TrackRuntimeAudioSources(List<AudioSource> sources)
		{
		}

		[Token(Token = "0x600119A")]
		[Address(RVA = "0xB1D858", Offset = "0xB1D858", VA = "0xB1D858")]
		public static void StopTrackingRuntimeAudioSources(List<AudioSource> sources)
		{
		}

		[Token(Token = "0x600119B")]
		[Address(RVA = "0xB2E330", Offset = "0xB2E330", VA = "0xB2E330")]
		private static void RemoveRuntimeGroupInfo(string groupName)
		{
		}

		[Token(Token = "0x600119C")]
		[Address(RVA = "0xB2FCF0", Offset = "0xB2FCF0", VA = "0xB2FCF0")]
		private static void RescanChildren(MasterAudioGroup group)
		{
		}

		[Token(Token = "0x600119D")]
		[Address(RVA = "0xB2F890", Offset = "0xB2F890", VA = "0xB2F890")]
		private static void SetGroupMuteStatus(MasterAudioGroup aGroup, string sType, bool isMute)
		{
		}

		[Token(Token = "0x600119E")]
		[Address(RVA = "0xB2C028", Offset = "0xB2C028", VA = "0xB2C028")]
		public static void SoloGroup(string sType, bool shouldCheckMuteStatus = true)
		{
		}

		[Token(Token = "0x600119F")]
		[Address(RVA = "0xB2C370", Offset = "0xB2C370", VA = "0xB2C370")]
		public static void SilenceOrUnsilenceGroupsFromSoloChange()
		{
		}

		[Token(Token = "0x60011A0")]
		[Address(RVA = "0xB30084", Offset = "0xB30084", VA = "0xB30084")]
		private static void UnsilenceNonSoloedGroups()
		{
		}

		[Token(Token = "0x60011A1")]
		[Address(RVA = "0xB30234", Offset = "0xB30234", VA = "0xB30234")]
		private static void UnsilenceGroup(string sType)
		{
		}

		[Token(Token = "0x60011A2")]
		[Address(RVA = "0xB2FECC", Offset = "0xB2FECC", VA = "0xB2FECC")]
		private static void SilenceNonSoloedGroups()
		{
		}

		[Token(Token = "0x60011A3")]
		[Address(RVA = "0xB30390", Offset = "0xB30390", VA = "0xB30390")]
		private static void SilenceGroup(string sType)
		{
		}

		[Token(Token = "0x60011A4")]
		[Address(RVA = "0xB304EC", Offset = "0xB304EC", VA = "0xB304EC")]
		public static void UnsoloGroup(string sType, bool shouldCheckMuteStatus = true)
		{
		}

		[Token(Token = "0x60011A5")]
		[Address(RVA = "0xB26C40", Offset = "0xB26C40", VA = "0xB26C40")]
		public static MasterAudioGroup GrabGroup(string sType, bool logIfMissing = true)
		{
			return null;
		}

		[Token(Token = "0x60011A6")]
		[Address(RVA = "0xB30628", Offset = "0xB30628", VA = "0xB30628")]
		public static int VoicesForGroup(string sType)
		{
			return default(int);
		}

		[Token(Token = "0x60011A7")]
		[Address(RVA = "0xB30728", Offset = "0xB30728", VA = "0xB30728")]
		public static Transform FindGroupTransform(string sType)
		{
			return null;
		}

		[Token(Token = "0x60011A8")]
		[Address(RVA = "0xB30940", Offset = "0xB30940", VA = "0xB30940")]
		public static List<AudioInfo> GetAllVariationsOfGroup(string sType, bool logIfMissing = true)
		{
			return null;
		}

		[Token(Token = "0x60011A9")]
		[Address(RVA = "0xB30AB8", Offset = "0xB30AB8", VA = "0xB30AB8")]
		public static AudioGroupInfo GetGroupInfo(string sType)
		{
			return null;
		}

		[Token(Token = "0x60011AA")]
		[Address(RVA = "0xB30B9C", Offset = "0xB30B9C", VA = "0xB30B9C")]
		public static void SubscribeToLastVariationPlayed(string sType, Action finishedCallback)
		{
		}

		[Token(Token = "0x60011AB")]
		[Address(RVA = "0xB30D20", Offset = "0xB30D20", VA = "0xB30D20")]
		public static void UnsubscribeFromLastVariationPlayed(string sType)
		{
		}

		[Token(Token = "0x60011AC")]
		[Address(RVA = "0xB30E18", Offset = "0xB30E18", VA = "0xB30E18")]
		public void SetSpatialBlendForMixer()
		{
		}

		[Token(Token = "0x60011AD")]
		[Address(RVA = "0xB30F78", Offset = "0xB30F78", VA = "0xB30F78")]
		public static void PauseMixer()
		{
		}

		[Token(Token = "0x60011AE")]
		[Address(RVA = "0xB31170", Offset = "0xB31170", VA = "0xB31170")]
		public static void UnpauseMixer()
		{
		}

		[Token(Token = "0x60011AF")]
		[Address(RVA = "0xB31368", Offset = "0xB31368", VA = "0xB31368")]
		public static void StopMixer()
		{
		}

		[Token(Token = "0x60011B0")]
		[Address(RVA = "0xB315C0", Offset = "0xB315C0", VA = "0xB315C0")]
		public static void UnsubscribeFromAllVariations()
		{
		}

		[Token(Token = "0x60011B1")]
		[Address(RVA = "0xB31830", Offset = "0xB31830", VA = "0xB31830")]
		public static void StopEverything()
		{
		}

		[Token(Token = "0x60011B2")]
		[Address(RVA = "0xB318F8", Offset = "0xB318F8", VA = "0xB318F8")]
		public static void PauseEverything()
		{
		}

		[Token(Token = "0x60011B3")]
		[Address(RVA = "0xB319C0", Offset = "0xB319C0", VA = "0xB319C0")]
		public static void UnpauseEverything()
		{
		}

		[Token(Token = "0x60011B4")]
		[Address(RVA = "0xB31A88", Offset = "0xB31A88", VA = "0xB31A88")]
		public static void MuteEverything()
		{
		}

		[Token(Token = "0x60011B5")]
		[Address(RVA = "0xB31F40", Offset = "0xB31F40", VA = "0xB31F40")]
		public static void UnmuteEverything()
		{
		}

		[Token(Token = "0x60011B6")]
		[Address(RVA = "0xB3200C", Offset = "0xB3200C", VA = "0xB3200C")]
		public static List<string> ListOfAudioClipsInGroupsEditTime()
		{
			return null;
		}

		[Token(Token = "0x60011B7")]
		[Address(RVA = "0xB208DC", Offset = "0xB208DC", VA = "0xB208DC")]
		private static int GetBusIndex(string busName, bool alertMissing)
		{
			return default(int);
		}

		[Token(Token = "0x60011B8")]
		[Address(RVA = "0xB2BF80", Offset = "0xB2BF80", VA = "0xB2BF80")]
		private static GroupBus GetBusByIndex(int busIndex)
		{
			return null;
		}

		[Token(Token = "0x60011B9")]
		[Address(RVA = "0xB322D8", Offset = "0xB322D8", VA = "0xB322D8")]
		public static void ChangeBusPitch(string busName, float pitch)
		{
		}

		[Token(Token = "0x60011BA")]
		[Address(RVA = "0xB3248C", Offset = "0xB3248C", VA = "0xB3248C")]
		public static void MuteBus(string busName)
		{
		}

		[Token(Token = "0x60011BB")]
		[Address(RVA = "0xB32820", Offset = "0xB32820", VA = "0xB32820")]
		public static void UnmuteBus(string busName, bool shouldCheckMuteStatus = true)
		{
		}

		[Token(Token = "0x60011BC")]
		[Address(RVA = "0xB329C8", Offset = "0xB329C8", VA = "0xB329C8")]
		public static void ToggleMuteBus(string busName)
		{
		}

		[Token(Token = "0x60011BD")]
		[Address(RVA = "0xB32AB4", Offset = "0xB32AB4", VA = "0xB32AB4")]
		public static void PauseBus(string busName)
		{
		}

		[Token(Token = "0x60011BE")]
		[Address(RVA = "0xB32C3C", Offset = "0xB32C3C", VA = "0xB32C3C")]
		public static void SoloBus(string busName)
		{
		}

		[Token(Token = "0x60011BF")]
		[Address(RVA = "0xB32678", Offset = "0xB32678", VA = "0xB32678")]
		public static void UnsoloBus(string busName, bool shouldCheckMuteStatus = true)
		{
		}

		[Token(Token = "0x60011C0")]
		[Address(RVA = "0xB32E28", Offset = "0xB32E28", VA = "0xB32E28")]
		public static void RouteBusToUnityMixerGroup(string busName, AudioMixerGroup mixerGroup)
		{
		}

		[Token(Token = "0x60011C1")]
		[Address(RVA = "0xB261A4", Offset = "0xB261A4", VA = "0xB261A4")]
		private static SoundGroupVariation FindLeastImportantSoundOnBus(GroupBus bus, MasterAudioGroup group)
		{
			return null;
		}

		[Token(Token = "0x60011C2")]
		[Address(RVA = "0xB25E74", Offset = "0xB25E74", VA = "0xB25E74")]
		private static SoundGroupVariation FindFarthestSoundOnBus(GroupBus bus)
		{
			return null;
		}

		[Token(Token = "0x60011C3")]
		[Address(RVA = "0xB25BF4", Offset = "0xB25BF4", VA = "0xB25BF4")]
		private static SoundGroupVariation FindOldestSoundOnBus(GroupBus bus)
		{
			return null;
		}

		[Token(Token = "0x60011C4")]
		[Address(RVA = "0xB20078", Offset = "0xB20078", VA = "0xB20078")]
		public static void StopBus(string busName)
		{
		}

		[Token(Token = "0x60011C5")]
		[Address(RVA = "0xB32FAC", Offset = "0xB32FAC", VA = "0xB32FAC")]
		public static void UnpauseBus(string busName)
		{
		}

		[Token(Token = "0x60011C6")]
		[Address(RVA = "0xB33114", Offset = "0xB33114", VA = "0xB33114")]
		public static bool CreateBus(string busName, bool errorOnExisting = true, bool isTemporary = false)
		{
			return default(bool);
		}

		[Token(Token = "0x60011C7")]
		[Address(RVA = "0xB333D8", Offset = "0xB333D8", VA = "0xB333D8")]
		public static void DeleteBusByName(string busName)
		{
		}

		[Token(Token = "0x60011C8")]
		[Address(RVA = "0xB33474", Offset = "0xB33474", VA = "0xB33474")]
		public static void DeleteBusByIndex(int busIndex)
		{
		}

		[Token(Token = "0x60011C9")]
		[Address(RVA = "0xB265F4", Offset = "0xB265F4", VA = "0xB265F4")]
		public static float GetBusVolume(MasterAudioGroup maGroup)
		{
			return default(float);
		}

		[Token(Token = "0x60011CA")]
		[Address(RVA = "0xB33964", Offset = "0xB33964", VA = "0xB33964")]
		public static void FadeBusToVolume(string busName, float newVolume, float fadeTime, [Optional] Action completionCallback, bool willStopAfterFade = false, bool willResetVolumeAfterFade = false)
		{
		}

		[Token(Token = "0x60011CB")]
		[Address(RVA = "0xB33D74", Offset = "0xB33D74", VA = "0xB33D74")]
		public static void FadeOutOldBusVoices(string busName, float minimumPlayTime, float fadeTime)
		{
		}

		[Token(Token = "0x60011CC")]
		[Address(RVA = "0xB33FA4", Offset = "0xB33FA4", VA = "0xB33FA4")]
		public static void StopOldBusVoices(string busName, float minimumPlayTime)
		{
		}

		[Token(Token = "0x60011CD")]
		[Address(RVA = "0xB341B4", Offset = "0xB341B4", VA = "0xB341B4")]
		public static void GlideBusByPitch(string busName, float pitchAddition, float glideTime, [Optional] Action completionCallback)
		{
		}

		[Token(Token = "0x60011CE")]
		[Address(RVA = "0xB1CE28", Offset = "0xB1CE28", VA = "0xB1CE28")]
		public static void SetBusVolumeByName(string busName, float newVolume)
		{
		}

		[Token(Token = "0x60011CF")]
		[Address(RVA = "0xB3378C", Offset = "0xB3378C", VA = "0xB3378C")]
		private static void RecalculateGroupVolumes(AudioGroupInfo aGroup, GroupBus bus)
		{
		}

		[Token(Token = "0x60011D0")]
		[Address(RVA = "0xB2C178", Offset = "0xB2C178", VA = "0xB2C178")]
		private static void SetBusVolume(GroupBus bus, float newVolume)
		{
		}

		[Token(Token = "0x60011D1")]
		[Address(RVA = "0xB1CFE0", Offset = "0xB1CFE0", VA = "0xB1CFE0")]
		public static GroupBus GrabBusByName(string busName)
		{
			return null;
		}

		[Token(Token = "0x60011D2")]
		[Address(RVA = "0xB34884", Offset = "0xB34884", VA = "0xB34884")]
		public static void PauseBusOfTransform(Transform sourceTrans, string busName)
		{
		}

		[Token(Token = "0x60011D3")]
		[Address(RVA = "0xB34A5C", Offset = "0xB34A5C", VA = "0xB34A5C")]
		public static void UnpauseBusOfTransform(Transform sourceTrans, string busName)
		{
		}

		[Token(Token = "0x60011D4")]
		[Address(RVA = "0xB34C34", Offset = "0xB34C34", VA = "0xB34C34")]
		public static void StopBusOfTransform(Transform sourceTrans, string busName)
		{
		}

		[Token(Token = "0x60011D5")]
		[Address(RVA = "0xB34E6C", Offset = "0xB34E6C", VA = "0xB34E6C")]
		public static void AddSoundGroupToDuckList(string sType, float riseVolumeStart, float duckedVolCut, float unduckTime, bool isTemporary = false)
		{
		}

		[Token(Token = "0x60011D6")]
		[Address(RVA = "0xB34FD4", Offset = "0xB34FD4", VA = "0xB34FD4")]
		public static void RemoveSoundGroupFromDuckList(string sType)
		{
		}

		[Token(Token = "0x60011D7")]
		[Address(RVA = "0xB350F0", Offset = "0xB350F0", VA = "0xB350F0")]
		public static Playlist GrabPlaylist(string playlistName, bool logErrorIfNotFound = true)
		{
			return null;
		}

		[Token(Token = "0x60011D8")]
		[Address(RVA = "0xB35314", Offset = "0xB35314", VA = "0xB35314")]
		public static void ChangePlaylistPitch(string playlistName, float pitch, [Optional] string songName)
		{
		}

		[Token(Token = "0x60011D9")]
		[Address(RVA = "0xB35444", Offset = "0xB35444", VA = "0xB35444")]
		public static void MutePlaylist()
		{
		}

		[Token(Token = "0x60011DA")]
		[Address(RVA = "0xB354B4", Offset = "0xB354B4", VA = "0xB354B4")]
		public static void MutePlaylist(string playlistControllerName)
		{
		}

		[Token(Token = "0x60011DB")]
		[Address(RVA = "0xB31ED4", Offset = "0xB31ED4", VA = "0xB31ED4")]
		public static void MuteAllPlaylists()
		{
		}

		[Token(Token = "0x60011DC")]
		[Address(RVA = "0xB3578C", Offset = "0xB3578C", VA = "0xB3578C")]
		private static void MutePlaylists(List<PlaylistController> playlists)
		{
		}

		[Token(Token = "0x60011DD")]
		[Address(RVA = "0xB35968", Offset = "0xB35968", VA = "0xB35968")]
		public static void UnmutePlaylist()
		{
		}

		[Token(Token = "0x60011DE")]
		[Address(RVA = "0xB359D8", Offset = "0xB359D8", VA = "0xB359D8")]
		public static void UnmutePlaylist(string playlistControllerName)
		{
		}

		[Token(Token = "0x60011DF")]
		[Address(RVA = "0xB31FA0", Offset = "0xB31FA0", VA = "0xB31FA0")]
		public static void UnmuteAllPlaylists()
		{
		}

		[Token(Token = "0x60011E0")]
		[Address(RVA = "0xB35BCC", Offset = "0xB35BCC", VA = "0xB35BCC")]
		private static void UnmutePlaylists(List<PlaylistController> playlists)
		{
		}

		[Token(Token = "0x60011E1")]
		[Address(RVA = "0xB35CB4", Offset = "0xB35CB4", VA = "0xB35CB4")]
		public static void ToggleMutePlaylist()
		{
		}

		[Token(Token = "0x60011E2")]
		[Address(RVA = "0xB35D24", Offset = "0xB35D24", VA = "0xB35D24")]
		public static void ToggleMutePlaylist(string playlistControllerName)
		{
		}

		[Token(Token = "0x60011E3")]
		[Address(RVA = "0xB35FB0", Offset = "0xB35FB0", VA = "0xB35FB0")]
		public static void ToggleMuteAllPlaylists()
		{
		}

		[Token(Token = "0x60011E4")]
		[Address(RVA = "0xB35F18", Offset = "0xB35F18", VA = "0xB35F18")]
		private static void ToggleMutePlaylists(List<PlaylistController> playlists)
		{
		}

		[Token(Token = "0x60011E5")]
		[Address(RVA = "0xB3601C", Offset = "0xB3601C", VA = "0xB3601C")]
		public static void PausePlaylist()
		{
		}

		[Token(Token = "0x60011E6")]
		[Address(RVA = "0xB3608C", Offset = "0xB3608C", VA = "0xB3608C")]
		public static void PausePlaylist(string playlistControllerName)
		{
		}

		[Token(Token = "0x60011E7")]
		[Address(RVA = "0xB31954", Offset = "0xB31954", VA = "0xB31954")]
		public static void PauseAllPlaylists()
		{
		}

		[Token(Token = "0x60011E8")]
		[Address(RVA = "0xB36280", Offset = "0xB36280", VA = "0xB36280")]
		private static void PausePlaylists(List<PlaylistController> playlists)
		{
		}

		[Token(Token = "0x60011E9")]
		[Address(RVA = "0xB36318", Offset = "0xB36318", VA = "0xB36318")]
		public static void UnpausePlaylist()
		{
		}

		[Token(Token = "0x60011EA")]
		[Address(RVA = "0xB36388", Offset = "0xB36388", VA = "0xB36388")]
		public static void UnpausePlaylist(string playlistControllerName)
		{
		}

		[Token(Token = "0x60011EB")]
		[Address(RVA = "0xB31A1C", Offset = "0xB31A1C", VA = "0xB31A1C")]
		public static void UnpauseAllPlaylists()
		{
		}

		[Token(Token = "0x60011EC")]
		[Address(RVA = "0xB3657C", Offset = "0xB3657C", VA = "0xB3657C")]
		private static void UnpausePlaylists(List<PlaylistController> controllers)
		{
		}

		[Token(Token = "0x60011ED")]
		[Address(RVA = "0xB36614", Offset = "0xB36614", VA = "0xB36614")]
		public static void StopPlaylist()
		{
		}

		[Token(Token = "0x60011EE")]
		[Address(RVA = "0xB36684", Offset = "0xB36684", VA = "0xB36684")]
		public static void StopPlaylist(string playlistControllerName)
		{
		}

		[Token(Token = "0x60011EF")]
		[Address(RVA = "0xB3188C", Offset = "0xB3188C", VA = "0xB3188C")]
		public static void StopAllPlaylists()
		{
		}

		[Token(Token = "0x60011F0")]
		[Address(RVA = "0xB36878", Offset = "0xB36878", VA = "0xB36878")]
		private static void StopPlaylists(List<PlaylistController> playlists)
		{
		}

		[Token(Token = "0x60011F1")]
		[Address(RVA = "0xB36914", Offset = "0xB36914", VA = "0xB36914")]
		public static void TriggerNextPlaylistClip()
		{
		}

		[Token(Token = "0x60011F2")]
		[Address(RVA = "0xB36984", Offset = "0xB36984", VA = "0xB36984")]
		public static void TriggerNextPlaylistClip(string playlistControllerName)
		{
		}

		[Token(Token = "0x60011F3")]
		[Address(RVA = "0xB36C10", Offset = "0xB36C10", VA = "0xB36C10")]
		public static void TriggerNextClipAllPlaylists()
		{
		}

		[Token(Token = "0x60011F4")]
		[Address(RVA = "0xB36B78", Offset = "0xB36B78", VA = "0xB36B78")]
		private static void NextPlaylistClips(List<PlaylistController> playlists)
		{
		}

		[Token(Token = "0x60011F5")]
		[Address(RVA = "0xB36C7C", Offset = "0xB36C7C", VA = "0xB36C7C")]
		public static void TriggerRandomPlaylistClip()
		{
		}

		[Token(Token = "0x60011F6")]
		[Address(RVA = "0xB36CEC", Offset = "0xB36CEC", VA = "0xB36CEC")]
		public static void TriggerRandomPlaylistClip(string playlistControllerName)
		{
		}

		[Token(Token = "0x60011F7")]
		[Address(RVA = "0xB36F78", Offset = "0xB36F78", VA = "0xB36F78")]
		public static void TriggerRandomClipAllPlaylists()
		{
		}

		[Token(Token = "0x60011F8")]
		[Address(RVA = "0xB36EE0", Offset = "0xB36EE0", VA = "0xB36EE0")]
		private static void RandomPlaylistClips(List<PlaylistController> playlists)
		{
		}

		[Token(Token = "0x60011F9")]
		[Address(RVA = "0xB36FE4", Offset = "0xB36FE4", VA = "0xB36FE4")]
		public static void RestartPlaylist()
		{
		}

		[Token(Token = "0x60011FA")]
		[Address(RVA = "0xB37054", Offset = "0xB37054", VA = "0xB37054")]
		public static void RestartPlaylist(string playlistControllerName)
		{
		}

		[Token(Token = "0x60011FB")]
		[Address(RVA = "0xB372F4", Offset = "0xB372F4", VA = "0xB372F4")]
		public static void RestartAllPlaylists()
		{
		}

		[Token(Token = "0x60011FC")]
		[Address(RVA = "0xB37258", Offset = "0xB37258", VA = "0xB37258")]
		private static void RestartPlaylists(List<PlaylistController> playlists)
		{
		}

		[Token(Token = "0x60011FD")]
		[Address(RVA = "0xB37360", Offset = "0xB37360", VA = "0xB37360")]
		public static void StartPlaylist(string playlistName)
		{
		}

		[Token(Token = "0x60011FE")]
		[Address(RVA = "0xB37610", Offset = "0xB37610", VA = "0xB37610")]
		public static void StartPlaylistOnClip(string playlistName, string clipName)
		{
		}

		[Token(Token = "0x60011FF")]
		[Address(RVA = "0xB373DC", Offset = "0xB373DC", VA = "0xB373DC")]
		public static void StartPlaylist(string playlistControllerName, string playlistName, [Optional] string clipName)
		{
		}

		[Token(Token = "0x6001200")]
		[Address(RVA = "0xB37698", Offset = "0xB37698", VA = "0xB37698")]
		public static void StopLoopingAllCurrentSongs()
		{
		}

		[Token(Token = "0x6001201")]
		[Address(RVA = "0xB3779C", Offset = "0xB3779C", VA = "0xB3779C")]
		public static void StopLoopingCurrentSong()
		{
		}

		[Token(Token = "0x6001202")]
		[Address(RVA = "0xB3780C", Offset = "0xB3780C", VA = "0xB3780C")]
		public static void StopLoopingCurrentSong(string playlistControllerName)
		{
		}

		[Token(Token = "0x6001203")]
		[Address(RVA = "0xB37704", Offset = "0xB37704", VA = "0xB37704")]
		private static void StopLoopingCurrentSongs(List<PlaylistController> playlistControllers)
		{
		}

		[Token(Token = "0x6001204")]
		[Address(RVA = "0xB37A10", Offset = "0xB37A10", VA = "0xB37A10")]
		public static void StopAllPlaylistsAfterCurrentSongs()
		{
		}

		[Token(Token = "0x6001205")]
		[Address(RVA = "0xB37B14", Offset = "0xB37B14", VA = "0xB37B14")]
		public static void StopPlaylistAfterCurrentSong()
		{
		}

		[Token(Token = "0x6001206")]
		[Address(RVA = "0xB37B84", Offset = "0xB37B84", VA = "0xB37B84")]
		public static void StopPlaylistAfterCurrentSong(string playlistControllerName)
		{
		}

		[Token(Token = "0x6001207")]
		[Address(RVA = "0xB37A7C", Offset = "0xB37A7C", VA = "0xB37A7C")]
		private static void StopPlaylistAfterCurrentSongs(List<PlaylistController> playlistControllers)
		{
		}

		[Token(Token = "0x6001208")]
		[Address(RVA = "0xB37D88", Offset = "0xB37D88", VA = "0xB37D88")]
		public static void QueuePlaylistClip(string clipName)
		{
		}

		[Token(Token = "0x6001209")]
		[Address(RVA = "0xB37E00", Offset = "0xB37E00", VA = "0xB37E00")]
		public static void QueuePlaylistClip(string playlistControllerName, string clipName)
		{
		}

		[Token(Token = "0x600120A")]
		[Address(RVA = "0xB37FA0", Offset = "0xB37FA0", VA = "0xB37FA0")]
		public static bool TriggerPlaylistClip(string clipName)
		{
			return default(bool);
		}

		[Token(Token = "0x600120B")]
		[Address(RVA = "0xB38018", Offset = "0xB38018", VA = "0xB38018")]
		public static bool TriggerPlaylistClip(string playlistControllerName, string clipName)
		{
			return default(bool);
		}

		[Token(Token = "0x600120C")]
		[Address(RVA = "0xB381B8", Offset = "0xB381B8", VA = "0xB381B8")]
		public static void ChangePlaylistByName(string playlistName, bool playFirstClip = true)
		{
		}

		[Token(Token = "0x600120D")]
		[Address(RVA = "0xB38240", Offset = "0xB38240", VA = "0xB38240")]
		public static void ChangePlaylistByName(string playlistControllerName, string playlistName, bool playFirstClip = true)
		{
		}

		[Token(Token = "0x600120E")]
		[Address(RVA = "0xB383E8", Offset = "0xB383E8", VA = "0xB383E8")]
		public static void FadePlaylistToVolume(float targetVolume, float fadeTime)
		{
		}

		[Token(Token = "0x600120F")]
		[Address(RVA = "0xB38470", Offset = "0xB38470", VA = "0xB38470")]
		public static void FadePlaylistToVolume(string playlistControllerName, float targetVolume, float fadeTime)
		{
		}

		[Token(Token = "0x6001210")]
		[Address(RVA = "0xB387E4", Offset = "0xB387E4", VA = "0xB387E4")]
		public static void FadeAllPlaylistsToVolume(float targetVolume, float fadeTime)
		{
		}

		[Token(Token = "0x6001211")]
		[Address(RVA = "0xB38680", Offset = "0xB38680", VA = "0xB38680")]
		private static void FadePlaylists(List<PlaylistController> playlists, float targetVolume, float fadeTime)
		{
		}

		[Token(Token = "0x6001212")]
		[Address(RVA = "0xB38868", Offset = "0xB38868", VA = "0xB38868")]
		public static void CreatePlaylist(Playlist playlist, bool errorOnDuplicate)
		{
		}

		[Token(Token = "0x6001213")]
		[Address(RVA = "0xB389C4", Offset = "0xB389C4", VA = "0xB389C4")]
		public static void DeletePlaylist(string playlistName)
		{
		}

		[Token(Token = "0x6001214")]
		[Address(RVA = "0xB38BA4", Offset = "0xB38BA4", VA = "0xB38BA4")]
		public static void AddSongToPlaylist(string playlistName, AudioClip song, bool loopSong = false, float songPitch = 1f, float songVolume = 1f, [Optional] string alias)
		{
		}

		[Token(Token = "0x6001215")]
		[Address(RVA = "0xB38C80", Offset = "0xB38C80", VA = "0xB38C80")]
		public static void AddSongToPlaylist(string playlistName, MusicSetting newSong)
		{
		}

		[Token(Token = "0x6001218")]
		[Address(RVA = "0xB39168", Offset = "0xB39168", VA = "0xB39168")]
		public static void AudioListenerChanged(AudioListener listener)
		{
		}

		[Token(Token = "0x6001219")]
		[Address(RVA = "0xB392BC", Offset = "0xB392BC", VA = "0xB392BC")]
		public static void FireCustomEventNextFrame(string customEventName, Transform eventOrigin)
		{
		}

		[Token(Token = "0x600121A")]
		[Address(RVA = "0xB19DCC", Offset = "0xB19DCC", VA = "0xB19DCC")]
		public static void AddCustomEventReceiver(ICustomEventReceiver receiver, Transform receiverTrans)
		{
		}

		[Token(Token = "0x600121B")]
		[Address(RVA = "0xB1A260", Offset = "0xB1A260", VA = "0xB1A260")]
		public static void RemoveCustomEventReceiver(ICustomEventReceiver receiver)
		{
		}

		[Token(Token = "0x600121C")]
		[Address(RVA = "0xB394FC", Offset = "0xB394FC", VA = "0xB394FC")]
		public static List<Transform> ReceiversForEvent(string customEventName)
		{
			return null;
		}

		[Token(Token = "0x600121D")]
		[Address(RVA = "0xB39814", Offset = "0xB39814", VA = "0xB39814")]
		public static CustomEventCategory CreateCustomEventCategoryIfNotThere(string categoryName, bool isTemporary)
		{
			return null;
		}

		[Token(Token = "0x600121E")]
		[Address(RVA = "0xB39A54", Offset = "0xB39A54", VA = "0xB39A54")]
		public static void CreateCustomEvent(string customEventName, CustomEventReceiveMode eventReceiveMode, float distanceThreshold, EventReceiveFilter receiveFilter, int filterModeQty, string categoryName = "", bool isTemporary = false, bool errorOnDuplicate = true)
		{
		}

		[Token(Token = "0x600121F")]
		[Address(RVA = "0xB39DDC", Offset = "0xB39DDC", VA = "0xB39DDC")]
		public static void DeleteCustomEvent(string customEventName)
		{
		}

		[Token(Token = "0x6001220")]
		[Address(RVA = "0xB39FCC", Offset = "0xB39FCC", VA = "0xB39FCC")]
		public static CustomEvent GetCustomEventByName(string customEventName)
		{
			return null;
		}

		[Token(Token = "0x6001221")]
		[Address(RVA = "0xB18398", Offset = "0xB18398", VA = "0xB18398")]
		public static void FireCustomEvent(string customEventName, Transform originObject, bool logDupe = true)
		{
		}

		[Token(Token = "0x6001222")]
		[Address(RVA = "0xB19A54", Offset = "0xB19A54", VA = "0xB19A54")]
		public static bool CustomEventExists(string customEventName)
		{
			return default(bool);
		}

		[Token(Token = "0x6001223")]
		[Address(RVA = "0xB3A128", Offset = "0xB3A128", VA = "0xB3A128")]
		private static List<ICustomEventReceiver> GetChildReceivers(Transform origin, string eventName, bool includeSelf)
		{
			return null;
		}

		[Token(Token = "0x6001224")]
		[Address(RVA = "0xB3A2BC", Offset = "0xB3A2BC", VA = "0xB3A2BC")]
		private static List<ICustomEventReceiver> GetParentReceivers(Transform origin, string eventName, bool includeSelf)
		{
			return null;
		}

		[Token(Token = "0x6001225")]
		[Address(RVA = "0xB3A450", Offset = "0xB3A450", VA = "0xB3A450")]
		private static List<ICustomEventReceiver> FilterOutSelf(List<ICustomEventReceiver> sourceList, Transform origin)
		{
			return null;
		}

		[Token(Token = "0x6001226")]
		[Address(RVA = "0xB22828", Offset = "0xB22828", VA = "0xB22828")]
		private static bool LoggingEnabledForGroup(MasterAudioGroup grp)
		{
			return default(bool);
		}

		[Token(Token = "0x6001227")]
		[Address(RVA = "0xB23148", Offset = "0xB23148", VA = "0xB23148")]
		private static void LogMessage(string message)
		{
		}

		[Token(Token = "0x600122C")]
		[Address(RVA = "0xB26544", Offset = "0xB26544", VA = "0xB26544")]
		public static void LogWarning(string msg)
		{
		}

		[Token(Token = "0x600122D")]
		[Address(RVA = "0xB3A8B8", Offset = "0xB3A8B8", VA = "0xB3A8B8")]
		public static void LogWarningIfNeverLogged(string msg, int errorNumber)
		{
		}

		[Token(Token = "0x600122E")]
		[Address(RVA = "0xB26494", Offset = "0xB26494", VA = "0xB26494")]
		public static void LogError(string msg)
		{
		}

		[Token(Token = "0x600122F")]
		[Address(RVA = "0xB3A9E4", Offset = "0xB3A9E4", VA = "0xB3A9E4")]
		public static void LogNoPlaylist(string playlistControllerName, string methodName)
		{
		}

		[Token(Token = "0x6001230")]
		[Address(RVA = "0xB356A8", Offset = "0xB356A8", VA = "0xB356A8")]
		private static bool IsOkToCallOnlyPlaylistMethod(List<PlaylistController> pcs, string methodName)
		{
			return default(bool);
		}

		[Token(Token = "0x6001231")]
		[Address(RVA = "0xB3ABB4", Offset = "0xB3ABB4", VA = "0xB3ABB4")]
		public static void SetupAmbientNextFrame(AmbientSound ambient)
		{
		}

		[Token(Token = "0x6001232")]
		[Address(RVA = "0xB3AE1C", Offset = "0xB3AE1C", VA = "0xB3AE1C")]
		public static void RemoveDelayedAmbient(AmbientSound ambient)
		{
		}

		[Token(Token = "0x6001233")]
		[Address(RVA = "0xB3AFF0", Offset = "0xB3AFF0", VA = "0xB3AFF0")]
		public static void QueueTransformFollowerForColliderPositionRecalc(TransformFollower follower)
		{
		}

		[Token(Token = "0x6001234")]
		[Address(RVA = "0xB3B24C", Offset = "0xB3B24C", VA = "0xB3B24C")]
		public static void AddToQueuedOcclusionRays(SoundGroupVariationUpdater updater)
		{
		}

		[Token(Token = "0x6001235")]
		[Address(RVA = "0xB3B4A8", Offset = "0xB3B4A8", VA = "0xB3B4A8")]
		public static void AddToOcclusionInRangeSources(GameObject src)
		{
		}

		[Token(Token = "0x6001236")]
		[Address(RVA = "0xB3B6B0", Offset = "0xB3B6B0", VA = "0xB3B6B0")]
		public static void AddToOcclusionOutOfRangeSources(GameObject src)
		{
		}

		[Token(Token = "0x6001237")]
		[Address(RVA = "0xB3BA60", Offset = "0xB3BA60", VA = "0xB3BA60")]
		public static void AddToBlockedOcclusionSources(GameObject src)
		{
		}

		[Token(Token = "0x6001238")]
		[Address(RVA = "0xB1674C", Offset = "0xB1674C", VA = "0xB1674C")]
		public static bool HasQueuedOcclusionRays()
		{
			return default(bool);
		}

		[Token(Token = "0x6001239")]
		[Address(RVA = "0xB167D0", Offset = "0xB167D0", VA = "0xB167D0")]
		public static SoundGroupVariationUpdater OldestQueuedOcclusionRay()
		{
			return null;
		}

		[Token(Token = "0x600123A")]
		[Address(RVA = "0xB2B08C", Offset = "0xB2B08C", VA = "0xB2B08C")]
		public static bool IsOcclusionFreqencyTransitioning(SoundGroupVariation variation)
		{
			return default(bool);
		}

		[Token(Token = "0x600123B")]
		[Address(RVA = "0xB29A94", Offset = "0xB29A94", VA = "0xB29A94")]
		public static void RemoveFromOcclusionFrequencyTransitioning(SoundGroupVariation variation)
		{
		}

		[Token(Token = "0x600123C")]
		[Address(RVA = "0xB3B8D8", Offset = "0xB3B8D8", VA = "0xB3B8D8")]
		public static void RemoveFromBlockedOcclusionSources(GameObject src)
		{
		}

		[Token(Token = "0x600123D")]
		[Address(RVA = "0xB3BBE8", Offset = "0xB3BBE8", VA = "0xB3BBE8")]
		public static void StopTrackingOcclusionForSource(GameObject src)
		{
		}

		[Token(Token = "0x600123E")]
		[Address(RVA = "0xB3BE58", Offset = "0xB3BE58", VA = "0xB3BE58")]
		public static bool IsVideoPlayersGroup(string groupName)
		{
			return default(bool);
		}

		[Token(Token = "0x600123F")]
		[Address(RVA = "0xB28418", Offset = "0xB28418", VA = "0xB28418")]
		private static bool IsLinkedGroupPlay(SoundGroupVariation variation)
		{
			return default(bool);
		}

		[Token(Token = "0x6001242")]
		[Address(RVA = "0xB3BF10", Offset = "0xB3BF10", VA = "0xB3BF10")]
		public static int RemainingClipsInGroup(string sType)
		{
			return default(int);
		}

		[Token(Token = "0x6001268")]
		[Address(RVA = "0xB2E540", Offset = "0xB2E540", VA = "0xB2E540")]
		public static void RescanGroupsNow()
		{
		}

		[Token(Token = "0x6001269")]
		[Address(RVA = "0xB3D67C", Offset = "0xB3D67C", VA = "0xB3D67C")]
		public static void DoneRescanningGroups()
		{
		}

		[Token(Token = "0x600126D")]
		[Address(RVA = "0xB3D88C", Offset = "0xB3D88C", VA = "0xB3D88C")]
		public static GameObject CreateMasterAudio()
		{
			return null;
		}

		[Token(Token = "0x600126E")]
		[Address(RVA = "0xB3DA48", Offset = "0xB3DA48", VA = "0xB3DA48")]
		public static GameObject CreatePlaylistController()
		{
			return null;
		}

		[Token(Token = "0x600126F")]
		[Address(RVA = "0xB3DC04", Offset = "0xB3DC04", VA = "0xB3DC04")]
		public static GameObject CreateDynamicSoundGroupCreator()
		{
			return null;
		}

		[Token(Token = "0x6001270")]
		[Address(RVA = "0xB3DDC0", Offset = "0xB3DDC0", VA = "0xB3DDC0")]
		public static GameObject CreateSoundGroupOrganizer()
		{
			return null;
		}

		[Token(Token = "0x6001271")]
		[Address(RVA = "0xB3DF7C", Offset = "0xB3DF7C", VA = "0xB3DF7C")]
		public MasterAudio()
		{
		}
	}
	[Token(Token = "0x2000304")]
	public static class PersistentAudioSettings
	{
		[Token(Token = "0x4001602")]
		public const string SfxVolKey = "MA_sfxVolume";

		[Token(Token = "0x4001603")]
		public const string MusicVolKey = "MA_musicVolume";

		[Token(Token = "0x4001604")]
		public const string SfxMuteKey = "MA_sfxMute";

		[Token(Token = "0x4001605")]
		public const string MusicMuteKey = "MA_musicMute";

		[Token(Token = "0x4001606")]
		public const string BusVolKey = "MA_BusVolume_";

		[Token(Token = "0x4001607")]
		public const string GroupVolKey = "MA_GroupVolume_";

		[Token(Token = "0x4001608")]
		public const string BusKeysKey = "MA_BusKeys";

		[Token(Token = "0x4001609")]
		public const string GroupKeysKey = "MA_GroupsKeys";

		[Token(Token = "0x400160A")]
		public const string Separator = ";";

		[Token(Token = "0x17000218")]
		public static string BusesUpdatedKeys
		{
			[Token(Token = "0x60012BE")]
			[Address(RVA = "0xC26238", Offset = "0xC26238", VA = "0xC26238")]
			get
			{
				return null;
			}
			[Token(Token = "0x60012BF")]
			[Address(RVA = "0xC262B4", Offset = "0xC262B4", VA = "0xC262B4")]
			set
			{
			}
		}

		[Token(Token = "0x17000219")]
		public static string GroupsUpdatedKeys
		{
			[Token(Token = "0x60012C3")]
			[Address(RVA = "0xC263E4", Offset = "0xC263E4", VA = "0xC263E4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60012C4")]
			[Address(RVA = "0xC26460", Offset = "0xC26460", VA = "0xC26460")]
			set
			{
			}
		}

		[Token(Token = "0x1700021A")]
		public static bool? MixerMuted
		{
			[Token(Token = "0x60012C7")]
			[Address(RVA = "0xC2670C", Offset = "0xC2670C", VA = "0xC2670C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60012C8")]
			[Address(RVA = "0xC267A4", Offset = "0xC267A4", VA = "0xC267A4")]
			set
			{
			}
		}

		[Token(Token = "0x1700021B")]
		public static float? MixerVolume
		{
			[Token(Token = "0x60012C9")]
			[Address(RVA = "0xC26904", Offset = "0xC26904", VA = "0xC26904")]
			get
			{
				return null;
			}
			[Token(Token = "0x60012CA")]
			[Address(RVA = "0xC26994", Offset = "0xC26994", VA = "0xC26994")]
			set
			{
			}
		}

		[Token(Token = "0x1700021C")]
		public static bool? MusicMuted
		{
			[Token(Token = "0x60012CB")]
			[Address(RVA = "0xC26AE8", Offset = "0xC26AE8", VA = "0xC26AE8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60012CC")]
			[Address(RVA = "0xC26B80", Offset = "0xC26B80", VA = "0xC26B80")]
			set
			{
			}
		}

		[Token(Token = "0x1700021D")]
		public static float? MusicVolume
		{
			[Token(Token = "0x60012CD")]
			[Address(RVA = "0xC26CE0", Offset = "0xC26CE0", VA = "0xC26CE0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60012CE")]
			[Address(RVA = "0xC26D70", Offset = "0xC26D70", VA = "0xC26D70")]
			set
			{
			}
		}

		[Token(Token = "0x60012BD")]
		[Address(RVA = "0xC26050", Offset = "0xC26050", VA = "0xC26050")]
		public static void SetBusVolume(string busName, float vol)
		{
		}

		[Token(Token = "0x60012C0")]
		[Address(RVA = "0xC261E8", Offset = "0xC261E8", VA = "0xC261E8")]
		public static string MakeBusKey(string busName)
		{
			return null;
		}

		[Token(Token = "0x60012C1")]
		[Address(RVA = "0xC26304", Offset = "0xC26304", VA = "0xC26304")]
		public static float? GetBusVolume(string busName)
		{
			return null;
		}

		[Token(Token = "0x60012C2")]
		[Address(RVA = "0xC26394", Offset = "0xC26394", VA = "0xC26394")]
		public static string GetGroupKey(string groupName)
		{
			return null;
		}

		[Token(Token = "0x60012C5")]
		[Address(RVA = "0xC264B0", Offset = "0xC264B0", VA = "0xC264B0")]
		public static void SetGroupVolume(string grpName, float vol)
		{
		}

		[Token(Token = "0x60012C6")]
		[Address(RVA = "0xC2667C", Offset = "0xC2667C", VA = "0xC2667C")]
		public static float? GetGroupVolume(string grpName)
		{
			return null;
		}

		[Token(Token = "0x60012CF")]
		[Address(RVA = "0xC26EC4", Offset = "0xC26EC4", VA = "0xC26EC4")]
		public static void RestoreMasterSettings()
		{
		}
	}
	[Token(Token = "0x2000305")]
	public class SoundGroupOrganizer : MonoBehaviour
	{
		[Token(Token = "0x2000306")]
		public class CustomEventSelection
		{
			[Token(Token = "0x4001621")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CustomEvent Event;

			[Token(Token = "0x4001622")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool IsSelected;

			[Token(Token = "0x60012D2")]
			[Address(RVA = "0x190A474", Offset = "0x190A474", VA = "0x190A474")]
			public CustomEventSelection(CustomEvent cEvent, bool isSelected)
			{
			}
		}

		[Token(Token = "0x2000307")]
		public class SoundGroupSelection
		{
			[Token(Token = "0x4001623")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject Go;

			[Token(Token = "0x4001624")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool IsSelected;

			[Token(Token = "0x60012D3")]
			[Address(RVA = "0x190A4B4", Offset = "0x190A4B4", VA = "0x190A4B4")]
			public SoundGroupSelection(GameObject go, bool isSelected)
			{
			}
		}

		[Token(Token = "0x2000308")]
		public enum MAItemType
		{
			[Token(Token = "0x4001626")]
			SoundGroups,
			[Token(Token = "0x4001627")]
			CustomEvents
		}

		[Token(Token = "0x2000309")]
		public enum TransferMode
		{
			[Token(Token = "0x4001629")]
			None,
			[Token(Token = "0x400162A")]
			Import,
			[Token(Token = "0x400162B")]
			Export
		}

		[Token(Token = "0x400160B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject dynGroupTemplate;

		[Token(Token = "0x400160C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject dynVariationTemplate;

		[Token(Token = "0x400160D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject maGroupTemplate;

		[Token(Token = "0x400160E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject maVariationTemplate;

		[Token(Token = "0x400160F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public MasterAudio.DragGroupMode curDragGroupMode;

		[Token(Token = "0x4001610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public MasterAudio.AudioLocation bulkVariationMode;

		[Token(Token = "0x4001611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public SystemLanguage previewLanguage;

		[Token(Token = "0x4001612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool useTextGroupFilter;

		[Token(Token = "0x4001613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string textGroupFilter;

		[Token(Token = "0x4001614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public TransferMode transMode;

		[Token(Token = "0x4001615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GameObject sourceObject;

		[Token(Token = "0x4001616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<SoundGroupSelection> selectedSourceSoundGroups;

		[Token(Token = "0x4001617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public GameObject destObject;

		[Token(Token = "0x4001618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public List<SoundGroupSelection> selectedDestSoundGroups;

		[Token(Token = "0x4001619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public MAItemType itemType;

		[Token(Token = "0x400161A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public List<CustomEventSelection> selectedSourceCustomEvents;

		[Token(Token = "0x400161B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public List<CustomEventSelection> selectedDestCustomEvents;

		[Token(Token = "0x400161C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public List<CustomEvent> customEvents;

		[Token(Token = "0x400161D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public List<CustomEventCategory> customEventCategories;

		[Token(Token = "0x400161E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public string newEventName;

		[Token(Token = "0x400161F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public string newCustomEventCategoryName;

		[Token(Token = "0x4001620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public string addToCustomEventCategoryName;

		[Token(Token = "0x60012D0")]
		[Address(RVA = "0xDFF71C", Offset = "0xDFF71C", VA = "0xDFF71C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60012D1")]
		[Address(RVA = "0xDFF790", Offset = "0xDFF790", VA = "0xDFF790")]
		public SoundGroupOrganizer()
		{
		}
	}
	[Token(Token = "0x200030A")]
	public static class AmbientUtil
	{
		[Token(Token = "0x200030B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD614", Offset = "0x8CD614")]
		private sealed class <>c__DisplayClass11_0
		{
			[Token(Token = "0x4001634")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string variationName;

			[Token(Token = "0x60012DF")]
			[Address(RVA = "0xC137C8", Offset = "0xC137C8", VA = "0xC137C8")]
			public <>c__DisplayClass11_0()
			{
			}

			[Token(Token = "0x60012E0")]
			[Address(RVA = "0xC137D0", Offset = "0xC137D0", VA = "0xC137D0")]
			internal bool <InitAudioSourceFollower>b__0(SoundGroupVariation v)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400162C")]
		public const string FollowerHolderName = "_Followers";

		[Token(Token = "0x400162D")]
		public const string ListenerFollowerName = "~ListenerFollower~";

		[Token(Token = "0x400162E")]
		public const float ListenerFollowerTrigRadius = 0.01f;

		[Token(Token = "0x400162F")]
		public const int IgnoreRaycastLayerNumber = 2;

		[Token(Token = "0x4001630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Transform _followerHolder;

		[Token(Token = "0x4001631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static ListenerFollower _listenerFollower;

		[Token(Token = "0x4001632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Rigidbody _listenerFollowerRB;

		[Token(Token = "0x4001633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static List<TransformFollower> _transformFollowers;

		[Token(Token = "0x1700021E")]
		public static ListenerFollower ListenerFollower
		{
			[Token(Token = "0x60012D8")]
			[Address(RVA = "0xD6834C", Offset = "0xD6834C", VA = "0xD6834C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021F")]
		public static Transform FollowerHolder
		{
			[Token(Token = "0x60012D9")]
			[Address(RVA = "0xD68058", Offset = "0xD68058", VA = "0xD68058")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000220")]
		public static bool HasListenerFollower
		{
			[Token(Token = "0x60012DC")]
			[Address(RVA = "0xD68A20", Offset = "0xD68A20", VA = "0xD68A20")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000221")]
		public static bool HasListenerFolowerRigidBody
		{
			[Token(Token = "0x60012DD")]
			[Address(RVA = "0xD67874", Offset = "0xD67874", VA = "0xD67874")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60012D4")]
		[Address(RVA = "0xD67FA0", Offset = "0xD67FA0", VA = "0xD67FA0")]
		public static void InitFollowerHolder()
		{
		}

		[Token(Token = "0x60012D5")]
		[Address(RVA = "0xD6773C", Offset = "0xD6773C", VA = "0xD6773C")]
		public static bool InitListenerFollower()
		{
			return default(bool);
		}

		[Token(Token = "0x60012D6")]
		[Address(RVA = "0xD687A0", Offset = "0xD687A0", VA = "0xD687A0")]
		public static void RemoveTransformFollower(TransformFollower follower)
		{
		}

		[Token(Token = "0x60012D7")]
		[Address(RVA = "0xD67914", Offset = "0xD67914", VA = "0xD67914")]
		public static Transform InitAudioSourceFollower(Transform transToFollow, string followerName, string soundGroupName, string variationName, float volume, bool willFollowSource, bool willPositionOnClosestColliderPoint, bool useTopCollider, bool useChildColliders, MasterAudio.AmbientSoundExitMode exitMode, float exitFadeTime, MasterAudio.AmbientSoundReEnterMode reEnterMode, float reEnterFadeTime)
		{
			return null;
		}

		[Token(Token = "0x60012DA")]
		[Address(RVA = "0xD6882C", Offset = "0xD6882C", VA = "0xD6882C")]
		public static void ManualUpdate()
		{
		}

		[Token(Token = "0x60012DB")]
		[Address(RVA = "0xD6893C", Offset = "0xD6893C", VA = "0xD6893C")]
		private static void UpdateListenerFollower()
		{
		}
	}
	[Token(Token = "0x200030C")]
	public static class ArrayListUtil
	{
		[Token(Token = "0x60012E1")]
		[Address(RVA = "0xD6DE78", Offset = "0xD6DE78", VA = "0xD6DE78")]
		public static void SortIntArray(ref List<int> list)
		{
		}

		[Token(Token = "0x60012E2")]
		[Address(RVA = "0xD6DF9C", Offset = "0xD6DF9C", VA = "0xD6DF9C")]
		public static bool IsExcludedChildName(string name)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200030D")]
	public static class AudioTransformExtensions
	{
		[Token(Token = "0x60012E3")]
		[Address(RVA = "0xD7032C", Offset = "0xD7032C", VA = "0xD7032C")]
		public static void FadeOutSoundGroupOfTransform(this Transform sourceTrans, string sType, float fadeTime)
		{
		}

		[Token(Token = "0x60012E4")]
		[Address(RVA = "0xD703B0", Offset = "0xD703B0", VA = "0xD703B0")]
		public static List<SoundGroupVariation> GetAllPlayingVariationsOfTransform(this Transform sourceTrans)
		{
			return null;
		}

		[Token(Token = "0x60012E5")]
		[Address(RVA = "0xD70414", Offset = "0xD70414", VA = "0xD70414")]
		public static bool PlaySound3DAtTransformAndForget(this Transform sourceTrans, string sType, float volumePercentage = 1f, [Optional] float? pitch, float delaySoundTime = 0f, [Optional] string variationName)
		{
			return default(bool);
		}

		[Token(Token = "0x60012E6")]
		[Address(RVA = "0xD704C0", Offset = "0xD704C0", VA = "0xD704C0")]
		public static PlaySoundResult PlaySound3DAtTransform(this Transform sourceTrans, string sType, float volumePercentage = 1f, [Optional] float? pitch, float delaySoundTime = 0f, [Optional] string variationName)
		{
			return null;
		}

		[Token(Token = "0x60012E7")]
		[Address(RVA = "0xD70580", Offset = "0xD70580", VA = "0xD70580")]
		public static bool PlaySound3DFollowTransformAndForget(this Transform sourceTrans, string sType, float volumePercentage = 1f, [Optional] float? pitch, float delaySoundTime = 0f, [Optional] string variationName)
		{
			return default(bool);
		}

		[Token(Token = "0x60012E8")]
		[Address(RVA = "0xD7062C", Offset = "0xD7062C", VA = "0xD7062C")]
		public static PlaySoundResult PlaySound3DFollowTransform(this Transform sourceTrans, string sType, float volumePercentage = 1f, [Optional] float? pitch, float delaySoundTime = 0f, [Optional] string variationName)
		{
			return null;
		}

		[Token(Token = "0x60012E9")]
		[Address(RVA = "0xD706EC", Offset = "0xD706EC", VA = "0xD706EC")]
		public static IEnumerator PlaySound3DAtTransformAndWaitUntilFinished(this Transform sourceTrans, string sType, float volumePercentage = 1f, [Optional] float? pitch, float delaySoundTime = 0f, [Optional] string variationName, [Optional] double? timeToSchedulePlay, [Optional] Action completedAction)
		{
			return null;
		}

		[Token(Token = "0x60012EA")]
		[Address(RVA = "0xD707B0", Offset = "0xD707B0", VA = "0xD707B0")]
		public static IEnumerator PlaySound3DFollowTransformAndWaitUntilFinished(this Transform sourceTrans, string sType, float volumePercentage = 1f, [Optional] float? pitch, float delaySoundTime = 0f, [Optional] string variationName, [Optional] double? timeToSchedulePlay, [Optional] Action completedAction)
		{
			return null;
		}

		[Token(Token = "0x60012EB")]
		[Address(RVA = "0xD70874", Offset = "0xD70874", VA = "0xD70874")]
		public static void PauseAllSoundsOfTransform(Transform sourceTrans)
		{
		}

		[Token(Token = "0x60012EC")]
		[Address(RVA = "0xD708D8", Offset = "0xD708D8", VA = "0xD708D8")]
		public static void PauseBusOfTransform(this Transform sourceTrans, string busName)
		{
		}

		[Token(Token = "0x60012ED")]
		[Address(RVA = "0xD7094C", Offset = "0xD7094C", VA = "0xD7094C")]
		public static void PauseSoundGroupOfTransform(this Transform sourceTrans, string sType)
		{
		}

		[Token(Token = "0x60012EE")]
		[Address(RVA = "0xD709C0", Offset = "0xD709C0", VA = "0xD709C0")]
		public static void StopAllSoundsOfTransform(this Transform sourceTrans)
		{
		}

		[Token(Token = "0x60012EF")]
		[Address(RVA = "0xD70A24", Offset = "0xD70A24", VA = "0xD70A24")]
		public static void StopBusOfTransform(this Transform sourceTrans, string busName)
		{
		}

		[Token(Token = "0x60012F0")]
		[Address(RVA = "0xD70A98", Offset = "0xD70A98", VA = "0xD70A98")]
		public static void StopSoundGroupOfTransform(this Transform sourceTrans, string sType)
		{
		}

		[Token(Token = "0x60012F1")]
		[Address(RVA = "0xD70B0C", Offset = "0xD70B0C", VA = "0xD70B0C")]
		public static void UnpauseAllSoundsOfTransform(this Transform sourceTrans)
		{
		}

		[Token(Token = "0x60012F2")]
		[Address(RVA = "0xD70B70", Offset = "0xD70B70", VA = "0xD70B70")]
		public static void UnpauseBusOfTransform(this Transform sourceTrans, string busName)
		{
		}

		[Token(Token = "0x60012F3")]
		[Address(RVA = "0xD70BE4", Offset = "0xD70BE4", VA = "0xD70BE4")]
		public static void UnpauseSoundGroupOfTransform(this Transform sourceTrans, string sType)
		{
		}

		[Token(Token = "0x60012F4")]
		[Address(RVA = "0xD70C58", Offset = "0xD70C58", VA = "0xD70C58")]
		public static bool IsTransformPlayingSoundGroup(this Transform sourceTrans, string sType)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200030E")]
	public class AudioTransformTracker : MonoBehaviour
	{
		[Token(Token = "0x4001635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int _frames;

		[Token(Token = "0x4001636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform _trans;

		[Token(Token = "0x17000222")]
		public Transform Trans
		{
			[Token(Token = "0x60012F5")]
			[Address(RVA = "0xD70CCC", Offset = "0xD70CCC", VA = "0xD70CCC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012F6")]
		[Address(RVA = "0xD70D58", Offset = "0xD70D58", VA = "0xD70D58")]
		private void Update()
		{
		}

		[Token(Token = "0x60012F7")]
		[Address(RVA = "0xD70D68", Offset = "0xD70D68", VA = "0xD70D68")]
		public AudioTransformTracker()
		{
		}
	}
	[Token(Token = "0x200030F")]
	public static class AudioUtil
	{
		[Token(Token = "0x4001637")]
		public const float DefaultMinOcclusionCutoffFrequency = 22000f;

		[Token(Token = "0x4001638")]
		public const float DefaultMaxOcclusionCutoffFrequency = 0f;

		[Token(Token = "0x4001639")]
		private const float SemitonePitchChangeAmt = 1.0594635f;

		[Token(Token = "0x17000223")]
		public static float FixedDeltaTime
		{
			[Token(Token = "0x60012FB")]
			[Address(RVA = "0xD70DE8", Offset = "0xD70DE8", VA = "0xD70DE8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000224")]
		public static float FrameTime
		{
			[Token(Token = "0x60012FC")]
			[Address(RVA = "0xD70DF0", Offset = "0xD70DF0", VA = "0xD70DF0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000225")]
		public static float Time
		{
			[Token(Token = "0x60012FD")]
			[Address(RVA = "0xD70DF8", Offset = "0xD70DF8", VA = "0xD70DF8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000226")]
		public static int FrameCount
		{
			[Token(Token = "0x60012FE")]
			[Address(RVA = "0xD70E00", Offset = "0xD70E00", VA = "0xD70E00")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60012F8")]
		[Address(RVA = "0xD70D70", Offset = "0xD70D70", VA = "0xD70D70")]
		private static float CutoffRange(SoundGroupVariationUpdater updater)
		{
			return default(float);
		}

		[Token(Token = "0x60012F9")]
		[Address(RVA = "0xD70DB8", Offset = "0xD70DB8", VA = "0xD70DB8")]
		private static float MaxCutoffFreq(SoundGroupVariationUpdater updater)
		{
			return default(float);
		}

		[Token(Token = "0x60012FA")]
		[Address(RVA = "0xD70DD0", Offset = "0xD70DD0", VA = "0xD70DD0")]
		public static float MinCutoffFreq(SoundGroupVariationUpdater updater)
		{
			return default(float);
		}

		[Token(Token = "0x60012FF")]
		[Address(RVA = "0xD70E08", Offset = "0xD70E08", VA = "0xD70E08")]
		public static float GetOcclusionCutoffFrequencyByDistanceRatio(float distRatio, SoundGroupVariationUpdater updater)
		{
			return default(float);
		}

		[Token(Token = "0x6001300")]
		[Address(RVA = "0xD70E54", Offset = "0xD70E54", VA = "0xD70E54")]
		public static float GetSemitonesFromPitch(float pitch)
		{
			return default(float);
		}

		[Token(Token = "0x6001301")]
		[Address(RVA = "0xD70EA0", Offset = "0xD70EA0", VA = "0xD70EA0")]
		public static float GetPitchFromSemitones(float semitones)
		{
			return default(float);
		}

		[Token(Token = "0x6001302")]
		[Address(RVA = "0xD70EE0", Offset = "0xD70EE0", VA = "0xD70EE0")]
		public static float GetDbFromFloatVolume(float vol)
		{
			return default(float);
		}

		[Token(Token = "0x6001303")]
		[Address(RVA = "0xD70EFC", Offset = "0xD70EFC", VA = "0xD70EFC")]
		public static float GetFloatVolumeFromDb(float db)
		{
			return default(float);
		}

		[Token(Token = "0x6001304")]
		[Address(RVA = "0xD6ED48", Offset = "0xD6ED48", VA = "0xD6ED48")]
		public static float GetAudioPlayedPercentage(AudioSource source)
		{
			return default(float);
		}

		[Token(Token = "0x6001305")]
		[Address(RVA = "0xD70F0C", Offset = "0xD70F0C", VA = "0xD70F0C")]
		public static bool IsClipPaused(AudioSource source)
		{
			return default(bool);
		}

		[Token(Token = "0x6001306")]
		[Address(RVA = "0xD70F54", Offset = "0xD70F54", VA = "0xD70F54")]
		public static void ClipPlayed(AudioClip clip, GameObject actor)
		{
		}

		[Token(Token = "0x6001307")]
		[Address(RVA = "0xD71070", Offset = "0xD71070", VA = "0xD71070")]
		public static void UnloadNonPreloadedAudioData(AudioClip clip, GameObject actor)
		{
		}

		[Token(Token = "0x6001308")]
		[Address(RVA = "0xD70FE0", Offset = "0xD70FE0", VA = "0xD70FE0")]
		public static bool AudioClipWillPreload(AudioClip clip)
		{
			return default(bool);
		}

		[Token(Token = "0x6001309")]
		[Address(RVA = "0xD7115C", Offset = "0xD7115C", VA = "0xD7115C")]
		public static bool IsClipReadyToPlay(this AudioClip clip)
		{
			return default(bool);
		}

		[Token(Token = "0x600130A")]
		[Address(RVA = "0xD711F0", Offset = "0xD711F0", VA = "0xD711F0")]
		private static float GetPositiveUsablePitch(AudioSource source)
		{
			return default(float);
		}

		[Token(Token = "0x600130B")]
		[Address(RVA = "0xD7121C", Offset = "0xD7121C", VA = "0xD7121C")]
		private static float GetPositiveUsablePitch(float pitch)
		{
			return default(float);
		}

		[Token(Token = "0x600130C")]
		[Address(RVA = "0xD7122C", Offset = "0xD7122C", VA = "0xD7122C")]
		public static float AdjustAudioClipDurationForPitch(float duration, AudioSource sourceWithPitch)
		{
			return default(float);
		}

		[Token(Token = "0x600130D")]
		[Address(RVA = "0xD71268", Offset = "0xD71268", VA = "0xD71268")]
		public static float AdjustAudioClipDurationForPitch(float duration, float pitch)
		{
			return default(float);
		}

		[Token(Token = "0x600130E")]
		[Address(RVA = "0xD7127C", Offset = "0xD7127C", VA = "0xD7127C")]
		public static float AdjustEndLeadTimeForPitch(float duration, AudioSource sourceWithPitch)
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000310")]
	public static class CoroutineHelper
	{
		[Token(Token = "0x2000311")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD644", Offset = "0x8CD644")]
		private sealed class <WaitForActualSeconds>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400163A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400163B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400163C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float time;

			[Token(Token = "0x400163D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private float <start>5__2;

			[Token(Token = "0x17000227")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001313")]
				[Address(RVA = "0xC168C0", Offset = "0xC168C0", VA = "0xC168C0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000228")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001315")]
				[Address(RVA = "0xC16908", Offset = "0xC16908", VA = "0xC16908", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001310")]
			[Address(RVA = "0xC167CC", Offset = "0xC167CC", VA = "0xC167CC")]
			[DebuggerHidden]
			public <WaitForActualSeconds>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x6001311")]
			[Address(RVA = "0xC167F8", Offset = "0xC167F8", VA = "0xC167F8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001312")]
			[Address(RVA = "0xC167FC", Offset = "0xC167FC", VA = "0xC167FC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001314")]
			[Address(RVA = "0xC168C8", Offset = "0xC168C8", VA = "0xC168C8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x600130F")]
		[Address(RVA = "0xCBF468", Offset = "0xCBF468", VA = "0xCBF468")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E19E0", Offset = "0x8E19E0")]
		public static IEnumerator WaitForActualSeconds(float time)
		{
			return null;
		}
	}
	[Token(Token = "0x2000312")]
	public static class DTMonoHelper
	{
		[Token(Token = "0x6001316")]
		[Address(RVA = "0xCC0EC8", Offset = "0xCC0EC8", VA = "0xCC0EC8")]
		public static Transform GetChildTransform(this Transform transParent, string childName)
		{
			return null;
		}

		[Token(Token = "0x6001317")]
		[Address(RVA = "0xCC0EE0", Offset = "0xCC0EE0", VA = "0xCC0EE0")]
		public static bool IsActive(GameObject go)
		{
			return default(bool);
		}

		[Token(Token = "0x6001318")]
		[Address(RVA = "0xCC0EF8", Offset = "0xCC0EF8", VA = "0xCC0EF8")]
		public static void SetActive(GameObject go, bool isActive)
		{
		}

		[Token(Token = "0x6001319")]
		[Address(RVA = "0xCC0F14", Offset = "0xCC0F14", VA = "0xCC0F14")]
		public static void DestroyAllChildren(this Transform tran)
		{
		}
	}
	[Token(Token = "0x2000313")]
	public class DelayBetweenSongs : MonoBehaviour
	{
		[Token(Token = "0x2000314")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD664", Offset = "0x8CD664")]
		private sealed class <PlaySongWithDelay>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001642")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001643")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001644")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DelayBetweenSongs <>4__this;

			[Token(Token = "0x17000229")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001322")]
				[Address(RVA = "0xC17008", Offset = "0xC17008", VA = "0xC17008", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700022A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001324")]
				[Address(RVA = "0xC17050", Offset = "0xC17050", VA = "0xC17050", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600131F")]
			[Address(RVA = "0xC16EA0", Offset = "0xC16EA0", VA = "0xC16EA0")]
			[DebuggerHidden]
			public <PlaySongWithDelay>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6001320")]
			[Address(RVA = "0xC16ECC", Offset = "0xC16ECC", VA = "0xC16ECC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001321")]
			[Address(RVA = "0xC16ED0", Offset = "0xC16ED0", VA = "0xC16ED0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001323")]
			[Address(RVA = "0xC17010", Offset = "0xC17010", VA = "0xC17010", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400163E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float minTimeToWait;

		[Token(Token = "0x400163F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float maxTimeToWait;

		[Token(Token = "0x4001640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string playlistControllerName;

		[Token(Token = "0x4001641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private PlaylistController _controller;

		[Token(Token = "0x600131A")]
		[Address(RVA = "0xCC258C", Offset = "0xCC258C", VA = "0xCC258C")]
		private void Start()
		{
		}

		[Token(Token = "0x600131B")]
		[Address(RVA = "0xCC2634", Offset = "0xCC2634", VA = "0xCC2634")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600131C")]
		[Address(RVA = "0xCC26C8", Offset = "0xCC26C8", VA = "0xCC26C8")]
		private void SongEnded(string songName)
		{
		}

		[Token(Token = "0x600131D")]
		[Address(RVA = "0xCC2700", Offset = "0xCC2700", VA = "0xCC2700")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E1AB0", Offset = "0x8E1AB0")]
		private IEnumerator PlaySongWithDelay()
		{
			return null;
		}

		[Token(Token = "0x600131E")]
		[Address(RVA = "0xCC276C", Offset = "0xCC276C", VA = "0xCC276C")]
		public DelayBetweenSongs()
		{
		}
	}
	[Token(Token = "0x2000315")]
	[AttributeAttribute(Name = "AudioScriptOrder", RVA = "0x8CD674", Offset = "0x8CD674")]
	public class DynamicSoundGroupCreator : MonoBehaviour
	{
		[Token(Token = "0x2000316")]
		public enum CreateItemsWhen
		{
			[Token(Token = "0x4001667")]
			FirstEnableOnly,
			[Token(Token = "0x4001668")]
			EveryEnable
		}

		[Token(Token = "0x2000317")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD688", Offset = "0x8CD688")]
		private sealed class <>c__DisplayClass39_0
		{
			[Token(Token = "0x4001669")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CustomEventCategory aCat;

			[Token(Token = "0x6001332")]
			[Address(RVA = "0xC174A0", Offset = "0xC174A0", VA = "0xC174A0")]
			public <>c__DisplayClass39_0()
			{
			}

			[Token(Token = "0x6001333")]
			[Address(RVA = "0xC174A8", Offset = "0xC174A8", VA = "0xC174A8")]
			internal bool <RemoveItems>b__0(CustomEventCategory cat)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001645")]
		public const int ExtraHardCodedBusOptions = 1;

		[Token(Token = "0x4001646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SystemLanguage previewLanguage;

		[Token(Token = "0x4001647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public MasterAudio.DragGroupMode curDragGroupMode;

		[Token(Token = "0x4001648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject groupTemplate;

		[Token(Token = "0x4001649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject variationTemplate;

		[Token(Token = "0x400164A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool errorOnDuplicates;

		[Token(Token = "0x400164B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool createOnAwake;

		[Token(Token = "0x400164C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		public bool soundGroupsAreExpanded;

		[Token(Token = "0x400164D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
		public bool removeGroupsOnSceneChange;

		[Token(Token = "0x400164E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public CreateItemsWhen reUseMode;

		[Token(Token = "0x400164F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool showCustomEvents;

		[Token(Token = "0x4001650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public MasterAudio.AudioLocation bulkVariationMode;

		[Token(Token = "0x4001651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<CustomEvent> customEventsToCreate;

		[Token(Token = "0x4001652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<CustomEventCategory> customEventCategories;

		[Token(Token = "0x4001653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string newEventName;

		[Token(Token = "0x4001654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string newCustomEventCategoryName;

		[Token(Token = "0x4001655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public string addToCustomEventCategoryName;

		[Token(Token = "0x4001656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool showMusicDucking;

		[Token(Token = "0x4001657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public List<DuckGroupInfo> musicDuckingSounds;

		[Token(Token = "0x4001658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public List<GroupBus> groupBuses;

		[Token(Token = "0x4001659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public bool playListExpanded;

		[Token(Token = "0x400165A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
		public bool playlistEditorExp;

		[Token(Token = "0x400165B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public List<MasterAudio.Playlist> musicPlaylists;

		[Token(Token = "0x400165C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public List<GameObject> audioSourceTemplates;

		[Token(Token = "0x400165D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public string audioSourceTemplateName;

		[Token(Token = "0x400165E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public bool groupByBus;

		[Token(Token = "0x400165F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		public bool itemsCreatedEventExpanded;

		[Token(Token = "0x4001660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public string itemsCreatedCustomEvent;

		[Token(Token = "0x4001661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public bool showUnityMixerGroupAssignment;

		[Token(Token = "0x4001662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
		private bool _hasCreated;

		[Token(Token = "0x4001663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private readonly List<Transform> _groupsToRemove;

		[Token(Token = "0x4001664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Transform _trans;

		[Token(Token = "0x4001665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private readonly List<DynamicSoundGroup> _groupsToCreate;

		[Token(Token = "0x1700022B")]
		public static int HardCodedBusOptions
		{
			[Token(Token = "0x600132E")]
			[Address(RVA = "0xCC7538", Offset = "0xCC7538", VA = "0xCC7538")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700022C")]
		public List<DynamicSoundGroup> GroupsToCreate
		{
			[Token(Token = "0x600132F")]
			[Address(RVA = "0xCC75B0", Offset = "0xCC75B0", VA = "0xCC75B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022D")]
		public bool ShouldShowUnityAudioMixerGroupAssignments
		{
			[Token(Token = "0x6001330")]
			[Address(RVA = "0xCC75B8", Offset = "0xCC75B8", VA = "0xCC75B8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001325")]
		[Address(RVA = "0xCC5F80", Offset = "0xCC5F80", VA = "0xCC5F80")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001326")]
		[Address(RVA = "0xCC6058", Offset = "0xCC6058", VA = "0xCC6058")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001327")]
		[Address(RVA = "0xCC6158", Offset = "0xCC6158", VA = "0xCC6158")]
		private void Start()
		{
		}

		[Token(Token = "0x6001328")]
		[Address(RVA = "0xCC615C", Offset = "0xCC615C", VA = "0xCC615C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001329")]
		[Address(RVA = "0xCC605C", Offset = "0xCC605C", VA = "0xCC605C")]
		private void CreateItemsIfReady()
		{
		}

		[Token(Token = "0x600132A")]
		[Address(RVA = "0xCC6288", Offset = "0xCC6288", VA = "0xCC6288")]
		public void RemoveItems()
		{
		}

		[Token(Token = "0x600132B")]
		[Address(RVA = "0xCC66B8", Offset = "0xCC66B8", VA = "0xCC66B8")]
		public void CreateItems()
		{
		}

		[Token(Token = "0x600132C")]
		[Address(RVA = "0xCC7540", Offset = "0xCC7540", VA = "0xCC7540")]
		private void FireEvents()
		{
		}

		[Token(Token = "0x600132D")]
		[Address(RVA = "0xCC72B8", Offset = "0xCC72B8", VA = "0xCC72B8")]
		public void PopulateGroupData()
		{
		}

		[Token(Token = "0x6001331")]
		[Address(RVA = "0xCC75C0", Offset = "0xCC75C0", VA = "0xCC75C0")]
		public DynamicSoundGroupCreator()
		{
		}
	}
	[Token(Token = "0x2000318")]
	public static class FilePlayerPrefs
	{
		[Token(Token = "0x400166A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Hashtable PlayerPrefsHashtable;

		[Token(Token = "0x400166B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static bool _hashTableChanged;

		[Token(Token = "0x400166C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string _serializedOutput;

		[Token(Token = "0x400166D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly string SerializedInput;

		[Token(Token = "0x400166E")]
		private const string ParametersSeperator = ";";

		[Token(Token = "0x400166F")]
		private const string KeyValueSeperator = ":";

		[Token(Token = "0x4001670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static readonly string FileName;

		[Token(Token = "0x6001334")]
		[Address(RVA = "0x1531BD8", Offset = "0x1531BD8", VA = "0x1531BD8")]
		static FilePlayerPrefs()
		{
		}

		[Token(Token = "0x6001335")]
		[Address(RVA = "0x1532030", Offset = "0x1532030", VA = "0x1532030")]
		public static bool HasKey(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001336")]
		[Address(RVA = "0x15320B0", Offset = "0x15320B0", VA = "0x15320B0")]
		public static void SetString(string key, string value)
		{
		}

		[Token(Token = "0x6001337")]
		[Address(RVA = "0x15321E4", Offset = "0x15321E4", VA = "0x15321E4")]
		public static void SetInt(string key, int value)
		{
		}

		[Token(Token = "0x6001338")]
		[Address(RVA = "0x1532364", Offset = "0x1532364", VA = "0x1532364")]
		public static void SetFloat(string key, float value)
		{
		}

		[Token(Token = "0x6001339")]
		[Address(RVA = "0x15324EC", Offset = "0x15324EC", VA = "0x15324EC")]
		public static void SetBool(string key, bool value)
		{
		}

		[Token(Token = "0x600133A")]
		[Address(RVA = "0x1532670", Offset = "0x1532670", VA = "0x1532670")]
		public static string GetString(string key)
		{
			return null;
		}

		[Token(Token = "0x600133B")]
		[Address(RVA = "0x1532750", Offset = "0x1532750", VA = "0x1532750")]
		public static string GetString(string key, string defaultValue)
		{
			return null;
		}

		[Token(Token = "0x600133C")]
		[Address(RVA = "0x1532890", Offset = "0x1532890", VA = "0x1532890")]
		public static int GetInt(string key)
		{
			return default(int);
		}

		[Token(Token = "0x600133D")]
		[Address(RVA = "0x1532A38", Offset = "0x1532A38", VA = "0x1532A38")]
		public static int GetInt(string key, int defaultValue)
		{
			return default(int);
		}

		[Token(Token = "0x600133E")]
		[Address(RVA = "0x1532BC0", Offset = "0x1532BC0", VA = "0x1532BC0")]
		public static float GetFloat(string key)
		{
			return default(float);
		}

		[Token(Token = "0x600133F")]
		[Address(RVA = "0x1532D68", Offset = "0x1532D68", VA = "0x1532D68")]
		public static float GetFloat(string key, float defaultValue)
		{
			return default(float);
		}

		[Token(Token = "0x6001340")]
		[Address(RVA = "0x1532EF8", Offset = "0x1532EF8", VA = "0x1532EF8")]
		public static bool GetBool(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001341")]
		[Address(RVA = "0x1533008", Offset = "0x1533008", VA = "0x1533008")]
		public static bool GetBool(string key, bool defaultValue)
		{
			return default(bool);
		}

		[Token(Token = "0x6001342")]
		[Address(RVA = "0x153319C", Offset = "0x153319C", VA = "0x153319C")]
		public static void DeleteKey(string key)
		{
		}

		[Token(Token = "0x6001343")]
		[Address(RVA = "0x153321C", Offset = "0x153321C", VA = "0x153321C")]
		public static void DeleteAll()
		{
		}

		[Token(Token = "0x6001344")]
		[Address(RVA = "0x1533294", Offset = "0x1533294", VA = "0x1533294")]
		public static void Flush()
		{
		}

		[Token(Token = "0x6001345")]
		[Address(RVA = "0x1533430", Offset = "0x1533430", VA = "0x1533430")]
		private static void Serialize()
		{
		}

		[Token(Token = "0x6001346")]
		[Address(RVA = "0x1531D48", Offset = "0x1531D48", VA = "0x1531D48")]
		private static void Deserialize()
		{
		}

		[Token(Token = "0x6001347")]
		[Address(RVA = "0x1533938", Offset = "0x1533938", VA = "0x1533938")]
		private static string EscapeNonSeperators(string inputToEscape)
		{
			return null;
		}

		[Token(Token = "0x6001348")]
		[Address(RVA = "0x15339E4", Offset = "0x15339E4", VA = "0x15339E4")]
		private static string DeEscapeNonSeperators(string inputToDeEscape)
		{
			return null;
		}

		[Token(Token = "0x6001349")]
		[Address(RVA = "0x1533A90", Offset = "0x1533A90", VA = "0x1533A90")]
		public static object GetTypeValue(string typeName, string value)
		{
			return null;
		}
	}
	[Token(Token = "0x2000319")]
	[AttributeAttribute(Name = "AudioScriptOrder", RVA = "0x8CD698", Offset = "0x8CD698")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8CD698", Offset = "0x8CD698")]
	public class PlaylistController : MonoBehaviour
	{
		[Token(Token = "0x200031A")]
		public enum AudioPlayType
		{
			[Token(Token = "0x40016CF")]
			PlayNow,
			[Token(Token = "0x40016D0")]
			Schedule,
			[Token(Token = "0x40016D1")]
			AlreadyScheduled
		}

		[Token(Token = "0x200031B")]
		public enum PlaylistStates
		{
			[Token(Token = "0x40016D3")]
			NotInScene,
			[Token(Token = "0x40016D4")]
			Stopped,
			[Token(Token = "0x40016D5")]
			Playing,
			[Token(Token = "0x40016D6")]
			Paused,
			[Token(Token = "0x40016D7")]
			Crossfading
		}

		[Token(Token = "0x200031C")]
		public enum FadeMode
		{
			[Token(Token = "0x40016D9")]
			None,
			[Token(Token = "0x40016DA")]
			GradualFade
		}

		[Token(Token = "0x200031D")]
		public enum AudioDuckingMode
		{
			[Token(Token = "0x40016DC")]
			NotDucking,
			[Token(Token = "0x40016DD")]
			SetToDuck,
			[Token(Token = "0x40016DE")]
			Ducked,
			[Token(Token = "0x40016DF")]
			Unducking
		}

		[Token(Token = "0x200031E")]
		public delegate void SongChangedEventHandler(string newSongName, MusicSetting song);

		[Token(Token = "0x200031F")]
		public delegate void SongEndedEventHandler(string songName);

		[Token(Token = "0x2000320")]
		public delegate void SongLoopedEventHandler(string songName);

		[Token(Token = "0x2000321")]
		public delegate void PlaylistEndedEventHandler();

		[Token(Token = "0x2000322")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD70C", Offset = "0x8CD70C")]
		private sealed class <>c__DisplayClass110_0
		{
			[Token(Token = "0x40016E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string clipName;

			[Token(Token = "0x60013C6")]
			[Address(RVA = "0x1905E80", Offset = "0x1905E80", VA = "0x1905E80")]
			public <>c__DisplayClass110_0()
			{
			}

			[Token(Token = "0x60013C7")]
			[Address(RVA = "0x1905E88", Offset = "0x1905E88", VA = "0x1905E88")]
			internal bool <FindSongByAliasOrName>b__0(MusicSetting obj)
			{
				return default(bool);
			}

			[Token(Token = "0x60013C8")]
			[Address(RVA = "0x1905EAC", Offset = "0x1905EAC", VA = "0x1905EAC")]
			internal bool <FindSongByAliasOrName>b__1(MusicSetting obj)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000323")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD71C", Offset = "0x8CD71C")]
		private sealed class <>c__DisplayClass120_0
		{
			[Token(Token = "0x40016E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string playlistControllerName;

			[Token(Token = "0x60013C9")]
			[Address(RVA = "0x1905F78", Offset = "0x1905F78", VA = "0x1905F78")]
			public <>c__DisplayClass120_0()
			{
			}

			[Token(Token = "0x60013CA")]
			[Address(RVA = "0x1905F80", Offset = "0x1905F80", VA = "0x1905F80")]
			internal bool <InstanceByName>b__0(PlaylistController obj)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000324")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD72C", Offset = "0x8CD72C")]
		private sealed class <>c__DisplayClass151_0
		{
			[Token(Token = "0x40016E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PlaylistController <>4__this;

			[Token(Token = "0x40016E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float volumeBeforeFade;

			[Token(Token = "0x60013CB")]
			[Address(RVA = "0x190602C", Offset = "0x190602C", VA = "0x190602C")]
			public <>c__DisplayClass151_0()
			{
			}

			[Token(Token = "0x60013CC")]
			[Address(RVA = "0x1906034", Offset = "0x1906034", VA = "0x1906034")]
			internal void <FadeOutPlaylist>b__0()
			{
			}
		}

		[Token(Token = "0x4001671")]
		public const float ScheduledSongMinBadOffset = 0.5f;

		[Token(Token = "0x4001672")]
		public const int FramesEarlyToTrigger = 2;

		[Token(Token = "0x4001673")]
		public const int FramesEarlyToBeSyncable = 10;

		[Token(Token = "0x4001674")]
		private const int NextScheduleTimeRecalcConsecutiveFrameCount = 5;

		[Token(Token = "0x4001675")]
		private const string NotReadyMessage = "Playlist Controller is not initialized yet. It must call its own Awake & Start method before any other methods are called. If you have a script with an Awake or Start event that needs to call it, make sure PlaylistController.cs is set to execute first (Script Execution Order window in Unity). Awake event is still not guaranteed to work, so use Start where possible.";

		[Token(Token = "0x4001676")]
		private const float MinSongLength = 0.5f;

		[Token(Token = "0x4001677")]
		private const float SlowestFrameTimeForCalc = 0.3f;

		[Token(Token = "0x4001678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool startPlaylistOnAwake;

		[Token(Token = "0x4001679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool isShuffle;

		[Token(Token = "0x400167A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool isAutoAdvance;

		[Token(Token = "0x400167B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		public bool loopPlaylist;

		[Token(Token = "0x400167C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float _playlistVolume;

		[Token(Token = "0x400167D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool isMuted;

		[Token(Token = "0x400167E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string startPlaylistName;

		[Token(Token = "0x400167F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int syncGroupNum;

		[Token(Token = "0x4001680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AudioMixerGroup mixerChannel;

		[Token(Token = "0x4001681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public MasterAudio.ItemSpatialBlendType spatialBlendType;

		[Token(Token = "0x4001682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float spatialBlend;

		[Token(Token = "0x4001683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool initializedEventExpanded;

		[Token(Token = "0x4001684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string initializedCustomEvent;

		[Token(Token = "0x4001685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool crossfadeStartedExpanded;

		[Token(Token = "0x4001686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public string crossfadeStartedCustomEvent;

		[Token(Token = "0x4001687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool songChangedEventExpanded;

		[Token(Token = "0x4001688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public string songChangedCustomEvent;

		[Token(Token = "0x4001689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool songEndedEventExpanded;

		[Token(Token = "0x400168A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public string songEndedCustomEvent;

		[Token(Token = "0x400168B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool songLoopedEventExpanded;

		[Token(Token = "0x400168C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public string songLoopedCustomEvent;

		[Token(Token = "0x400168D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public bool playlistStartedEventExpanded;

		[Token(Token = "0x400168E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public string playlistStartedCustomEvent;

		[Token(Token = "0x400168F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public bool playlistEndedEventExpanded;

		[Token(Token = "0x4001690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public string playlistEndedCustomEvent;

		[Token(Token = "0x4001691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private AudioSource _activeAudio;

		[Token(Token = "0x4001692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private AudioSource _transitioningAudio;

		[Token(Token = "0x4001693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private float _activeAudioEndVolume;

		[Token(Token = "0x4001694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private float _transitioningAudioStartVolume;

		[Token(Token = "0x4001695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float _crossFadeStartTime;

		[Token(Token = "0x4001696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private readonly List<int> _clipsRemaining;

		[Token(Token = "0x4001697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private int _currentSequentialClipIndex;

		[Token(Token = "0x4001698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private AudioDuckingMode _duckingMode;

		[Token(Token = "0x4001699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float _timeToStartUnducking;

		[Token(Token = "0x400169A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float _timeToFinishUnducking;

		[Token(Token = "0x400169B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private float _originalMusicVolume;

		[Token(Token = "0x400169C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private float _initialDuckVolume;

		[Token(Token = "0x400169D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private float _duckRange;

		[Token(Token = "0x400169E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private SoundGroupVariationUpdater _actorUpdater;

		[Token(Token = "0x400169F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private float _unduckTime;

		[Token(Token = "0x40016A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private MusicSetting _currentSong;

		[Token(Token = "0x40016A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private GameObject _go;

		[Token(Token = "0x40016A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private string _name;

		[Token(Token = "0x40016A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private FadeMode _curFadeMode;

		[Token(Token = "0x40016A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		private float _slowFadeStartTime;

		[Token(Token = "0x40016A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private float _slowFadeCompletionTime;

		[Token(Token = "0x40016A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		private float _slowFadeStartVolume;

		[Token(Token = "0x40016A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private float _slowFadeTargetVolume;

		[Token(Token = "0x40016A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private MasterAudio.Playlist _currentPlaylist;

		[Token(Token = "0x40016A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private float _lastTimeMissingPlaylistLogged;

		[Token(Token = "0x40016AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private Action _fadeCompleteCallback;

		[Token(Token = "0x40016AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private readonly List<MusicSetting> _queuedSongs;

		[Token(Token = "0x40016AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private bool _lostFocus;

		[Token(Token = "0x40016AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x161")]
		private bool _autoStartedPlaylist;

		[Token(Token = "0x40016AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private AudioSource _audioClip;

		[Token(Token = "0x40016AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private AudioSource _transClip;

		[Token(Token = "0x40016B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private MusicSetting _newSongSetting;

		[Token(Token = "0x40016B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private bool _nextSongRequested;

		[Token(Token = "0x40016B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x181")]
		private bool _nextSongScheduled;

		[Token(Token = "0x40016B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		private int _lastRandomClipIndex;

		[Token(Token = "0x40016B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private float _lastTimeSongRequested;

		[Token(Token = "0x40016B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		private float _currentDuckVolCut;

		[Token(Token = "0x40016B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private int? _lastSongPosition;

		[Token(Token = "0x40016B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private double? _currentSchedSongDspStartTime;

		[Token(Token = "0x40016B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private double? _currentSchedSongDspEndTime;

		[Token(Token = "0x40016B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private int _lastFrameSongPosition;

		[Token(Token = "0x40016BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
		private int _nextScheduleTimeRecalcDifferentFirstFrameNum;

		[Token(Token = "0x40016BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private double? _nextScheduledTimeRecalcStart;

		[Token(Token = "0x40016BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private readonly Dictionary<AudioSource, double> _scheduledSongOffsetByAudioSource;

		[Token(Token = "0x40016BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		public int _frames;

		[Token(Token = "0x40016BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<PlaylistController> _instances;

		[Token(Token = "0x40016BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private Coroutine _resourceCoroutine;

		[Token(Token = "0x40016C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private int _songsPlayedFromPlaylist;

		[Token(Token = "0x40016C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private AudioSource _audio1;

		[Token(Token = "0x40016C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		private AudioSource _audio2;

		[Token(Token = "0x40016C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		private string _activeSongAlias;

		[Token(Token = "0x40016C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private Transform _trans;

		[Token(Token = "0x40016C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		private bool _willPersist;

		[Token(Token = "0x40016C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		private double? _songPauseTime;

		[Token(Token = "0x40016C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		private int framesOfSongPlayed;

		[Token(Token = "0x40016CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DC078", Offset = "0x8DC078")]
		private bool <ControllerIsReady>k__BackingField;

		[Token(Token = "0x40016CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x251")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DC088", Offset = "0x8DC088")]
		private bool <IsCrossFading>k__BackingField;

		[Token(Token = "0x1700022E")]
		private bool SongIsNonAdvancible
		{
			[Token(Token = "0x6001391")]
			[Address(RVA = "0xC30D94", Offset = "0xC30D94", VA = "0xC30D94")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700022F")]
		public bool ControllerIsReady
		{
			[Token(Token = "0x6001393")]
			[Address(RVA = "0xC30DEC", Offset = "0xC30DEC", VA = "0xC30DEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1BE0", Offset = "0x8E1BE0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001394")]
			[Address(RVA = "0xC30DF4", Offset = "0xC30DF4", VA = "0xC30DF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1BF0", Offset = "0x8E1BF0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000230")]
		public PlaylistStates PlaylistState
		{
			[Token(Token = "0x6001395")]
			[Address(RVA = "0xC2C9A4", Offset = "0xC2C9A4", VA = "0xC2C9A4")]
			get
			{
				return default(PlaylistStates);
			}
		}

		[Token(Token = "0x17000231")]
		public AudioSource ActiveAudioSource
		{
			[Token(Token = "0x6001396")]
			[Address(RVA = "0xC2BBC4", Offset = "0xC2BBC4", VA = "0xC2BBC4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000232")]
		public static List<PlaylistController> Instances
		{
			[Token(Token = "0x6001397")]
			[Address(RVA = "0xC2CE7C", Offset = "0xC2CE7C", VA = "0xC2CE7C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001398")]
			[Address(RVA = "0xC30E00", Offset = "0xC30E00", VA = "0xC30E00")]
			set
			{
			}
		}

		[Token(Token = "0x17000233")]
		public GameObject PlaylistControllerGameObject
		{
			[Token(Token = "0x6001399")]
			[Address(RVA = "0xC30E50", Offset = "0xC30E50", VA = "0xC30E50")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000234")]
		public AudioSource CurrentPlaylistSource
		{
			[Token(Token = "0x600139A")]
			[Address(RVA = "0xC30E58", Offset = "0xC30E58", VA = "0xC30E58")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000235")]
		public AudioClip CurrentPlaylistClip
		{
			[Token(Token = "0x600139B")]
			[Address(RVA = "0xC30E60", Offset = "0xC30E60", VA = "0xC30E60")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000236")]
		public AudioClip FadingPlaylistClip
		{
			[Token(Token = "0x600139C")]
			[Address(RVA = "0xC30EF4", Offset = "0xC30EF4", VA = "0xC30EF4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000237")]
		public AudioSource FadingSource
		{
			[Token(Token = "0x600139D")]
			[Address(RVA = "0xC30F90", Offset = "0xC30F90", VA = "0xC30F90")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000238")]
		public bool IsCrossFading
		{
			[Token(Token = "0x600139E")]
			[Address(RVA = "0xC30FA8", Offset = "0xC30FA8", VA = "0xC30FA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1C00", Offset = "0x8E1C00")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600139F")]
			[Address(RVA = "0xC30FB0", Offset = "0xC30FB0", VA = "0xC30FB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1C10", Offset = "0x8E1C10")]
			private set
			{
			}
		}

		[Token(Token = "0x17000239")]
		public bool IsFading
		{
			[Token(Token = "0x60013A0")]
			[Address(RVA = "0xC30FBC", Offset = "0xC30FBC", VA = "0xC30FBC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700023A")]
		public float PlaylistVolume
		{
			[Token(Token = "0x60013A1")]
			[Address(RVA = "0xC2F854", Offset = "0xC2F854", VA = "0xC2F854")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60013A2")]
			[Address(RVA = "0xC30FDC", Offset = "0xC30FDC", VA = "0xC30FDC")]
			set
			{
			}
		}

		[Token(Token = "0x1700023B")]
		public MasterAudio.Playlist CurrentPlaylist
		{
			[Token(Token = "0x60013A4")]
			[Address(RVA = "0xC2FE24", Offset = "0xC2FE24", VA = "0xC2FE24")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023C")]
		public bool HasPlaylist
		{
			[Token(Token = "0x60013A5")]
			[Address(RVA = "0xC2D1A4", Offset = "0xC2D1A4", VA = "0xC2D1A4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700023D")]
		public string PlaylistName
		{
			[Token(Token = "0x60013A6")]
			[Address(RVA = "0xC31028", Offset = "0xC31028", VA = "0xC31028")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023E")]
		public MusicSetting CurrentSong
		{
			[Token(Token = "0x60013A7")]
			[Address(RVA = "0xC3109C", Offset = "0xC3109C", VA = "0xC3109C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023F")]
		private bool IsMuted
		{
			[Token(Token = "0x60013A8")]
			[Address(RVA = "0xC310A4", Offset = "0xC310A4", VA = "0xC310A4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000240")]
		private bool PlaylistIsMuted
		{
			[Token(Token = "0x60013A9")]
			[Address(RVA = "0xC2D320", Offset = "0xC2D320", VA = "0xC2D320")]
			set
			{
			}
		}

		[Token(Token = "0x17000241")]
		private float CrossFadeTime
		{
			[Token(Token = "0x60013AA")]
			[Address(RVA = "0xC2C7B8", Offset = "0xC2C7B8", VA = "0xC2C7B8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000242")]
		private bool IsAutoAdvance
		{
			[Token(Token = "0x60013AB")]
			[Address(RVA = "0xC2C844", Offset = "0xC2C844", VA = "0xC2C844")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000243")]
		public GameObject GameObj
		{
			[Token(Token = "0x60013AC")]
			[Address(RVA = "0xC2DBB4", Offset = "0xC2DBB4", VA = "0xC2DBB4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000244")]
		public string ControllerName
		{
			[Token(Token = "0x60013AD")]
			[Address(RVA = "0xC2A5C0", Offset = "0xC2A5C0", VA = "0xC2A5C0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000245")]
		public bool CanSchedule
		{
			[Token(Token = "0x60013AE")]
			[Address(RVA = "0xC2AB70", Offset = "0xC2AB70", VA = "0xC2AB70")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000246")]
		private bool IsFrameFastEnough
		{
			[Token(Token = "0x60013AF")]
			[Address(RVA = "0xC2B2C8", Offset = "0xC2B2C8", VA = "0xC2B2C8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000247")]
		private bool ShouldNotSwitchEarly
		{
			[Token(Token = "0x60013B0")]
			[Address(RVA = "0xC2C968", Offset = "0xC2C968", VA = "0xC2C968")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000248")]
		private Transform Trans
		{
			[Token(Token = "0x60013B1")]
			[Address(RVA = "0xC2B1D4", Offset = "0xC2B1D4", VA = "0xC2B1D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000249")]
		public int ClipsRemainingInCurrentPlaylist
		{
			[Token(Token = "0x60013B2")]
			[Address(RVA = "0xC310AC", Offset = "0xC310AC", VA = "0xC310AC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x14000009")]
		public event SongChangedEventHandler SongChanged
		{
			[Token(Token = "0x600134A")]
			[Address(RVA = "0xC29B0C", Offset = "0xC29B0C", VA = "0xC29B0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1B60", Offset = "0x8E1B60")]
			add
			{
			}
			[Token(Token = "0x600134B")]
			[Address(RVA = "0xC29BB0", Offset = "0xC29BB0", VA = "0xC29BB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1B70", Offset = "0x8E1B70")]
			remove
			{
			}
		}

		[Token(Token = "0x1400000A")]
		public event SongEndedEventHandler SongEnded
		{
			[Token(Token = "0x600134C")]
			[Address(RVA = "0xC29C54", Offset = "0xC29C54", VA = "0xC29C54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1B80", Offset = "0x8E1B80")]
			add
			{
			}
			[Token(Token = "0x600134D")]
			[Address(RVA = "0xC29CF8", Offset = "0xC29CF8", VA = "0xC29CF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1B90", Offset = "0x8E1B90")]
			remove
			{
			}
		}

		[Token(Token = "0x1400000B")]
		public event SongLoopedEventHandler SongLooped
		{
			[Token(Token = "0x600134E")]
			[Address(RVA = "0xC29D9C", Offset = "0xC29D9C", VA = "0xC29D9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1BA0", Offset = "0x8E1BA0")]
			add
			{
			}
			[Token(Token = "0x600134F")]
			[Address(RVA = "0xC29E40", Offset = "0xC29E40", VA = "0xC29E40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1BB0", Offset = "0x8E1BB0")]
			remove
			{
			}
		}

		[Token(Token = "0x1400000C")]
		public event PlaylistEndedEventHandler PlaylistEnded
		{
			[Token(Token = "0x6001350")]
			[Address(RVA = "0xC29EE4", Offset = "0xC29EE4", VA = "0xC29EE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1BC0", Offset = "0x8E1BC0")]
			add
			{
			}
			[Token(Token = "0x6001351")]
			[Address(RVA = "0xC29F88", Offset = "0xC29F88", VA = "0xC29F88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1BD0", Offset = "0x8E1BD0")]
			remove
			{
			}
		}

		[Token(Token = "0x6001352")]
		[Address(RVA = "0xC2A02C", Offset = "0xC2A02C", VA = "0xC2A02C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001353")]
		[Address(RVA = "0xC2A600", Offset = "0xC2A600", VA = "0xC2A600")]
		public void SetSpatialBlend()
		{
		}

		[Token(Token = "0x6001354")]
		[Address(RVA = "0xC2A81C", Offset = "0xC2A81C", VA = "0xC2A81C")]
		private void DetectAndRescheduleNextGaplessSongIfOff()
		{
		}

		[Token(Token = "0x6001355")]
		[Address(RVA = "0xC2AD8C", Offset = "0xC2AD8C", VA = "0xC2AD8C")]
		private MusicSetting FindSongByAliasOrName(string clipName)
		{
			return null;
		}

		[Token(Token = "0x6001356")]
		[Address(RVA = "0xC2AF00", Offset = "0xC2AF00", VA = "0xC2AF00")]
		private void SetAudiosIfEmpty()
		{
		}

		[Token(Token = "0x6001357")]
		[Address(RVA = "0xC2A76C", Offset = "0xC2A76C", VA = "0xC2A76C")]
		private void SetAudioSpatialBlend(float blend)
		{
		}

		[Token(Token = "0x6001358")]
		[Address(RVA = "0xC2AF88", Offset = "0xC2AF88", VA = "0xC2AF88")]
		private void Start()
		{
		}

		[Token(Token = "0x6001359")]
		[Address(RVA = "0xC2B260", Offset = "0xC2B260", VA = "0xC2B260")]
		private void AutoStartPlaylist()
		{
		}

		[Token(Token = "0x600135A")]
		[Address(RVA = "0xC2B398", Offset = "0xC2B398", VA = "0xC2B398")]
		private void CoUpdate()
		{
		}

		[Token(Token = "0x600135B")]
		[Address(RVA = "0xC2B84C", Offset = "0xC2B84C", VA = "0xC2B84C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600135C")]
		[Address(RVA = "0xC2B950", Offset = "0xC2B950", VA = "0xC2B950")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600135D")]
		[Address(RVA = "0xC2BC98", Offset = "0xC2BC98", VA = "0xC2BC98")]
		private void OnApplicationPause(bool pauseStatus)
		{
		}

		[Token(Token = "0x600135E")]
		[Address(RVA = "0xC2BCA4", Offset = "0xC2BCA4", VA = "0xC2BCA4")]
		private void Update()
		{
		}

		[Token(Token = "0x600135F")]
		[Address(RVA = "0xC2CCA8", Offset = "0xC2CCA8", VA = "0xC2CCA8")]
		public static PlaylistController InstanceByName(string playlistControllerName, bool errorIfNotFound = true)
		{
			return null;
		}

		[Token(Token = "0x6001360")]
		[Address(RVA = "0xC2D06C", Offset = "0xC2D06C", VA = "0xC2D06C")]
		public bool IsSongPlaying(string songName)
		{
			return default(bool);
		}

		[Token(Token = "0x6001361")]
		[Address(RVA = "0xC2D1B4", Offset = "0xC2D1B4", VA = "0xC2D1B4")]
		public void ClearQueue()
		{
		}

		[Token(Token = "0x6001362")]
		[Address(RVA = "0xC2D264", Offset = "0xC2D264", VA = "0xC2D264")]
		public void ToggleMutePlaylist()
		{
		}

		[Token(Token = "0x6001363")]
		[Address(RVA = "0xC2B2C0", Offset = "0xC2B2C0", VA = "0xC2B2C0")]
		public void MutePlaylist()
		{
		}

		[Token(Token = "0x6001364")]
		[Address(RVA = "0xC2D318", Offset = "0xC2D318", VA = "0xC2D318")]
		public void UnmutePlaylist()
		{
		}

		[Token(Token = "0x6001365")]
		[Address(RVA = "0xC2D490", Offset = "0xC2D490", VA = "0xC2D490")]
		public void PausePlaylist()
		{
		}

		[Token(Token = "0x6001366")]
		[Address(RVA = "0xC2D6A0", Offset = "0xC2D6A0", VA = "0xC2D6A0")]
		public bool UnpausePlaylist()
		{
			return default(bool);
		}

		[Token(Token = "0x6001367")]
		[Address(RVA = "0xC2B718", Offset = "0xC2B718", VA = "0xC2B718")]
		public void StopPlaylist(bool onlyFadingClip = false)
		{
		}

		[Token(Token = "0x6001368")]
		[Address(RVA = "0xC2DC40", Offset = "0xC2DC40", VA = "0xC2DC40")]
		public void FadeToVolume(float targetVolume, float fadeTime, [Optional] Action callback)
		{
		}

		[Token(Token = "0x6001369")]
		[Address(RVA = "0xC2DD6C", Offset = "0xC2DD6C", VA = "0xC2DD6C")]
		public void PlayRandomSong()
		{
		}

		[Token(Token = "0x600136A")]
		[Address(RVA = "0xC2DE00", Offset = "0xC2DE00", VA = "0xC2DE00")]
		public void PlayARandomSong(AudioPlayType playType)
		{
		}

		[Token(Token = "0x600136B")]
		[Address(RVA = "0xC2DFFC", Offset = "0xC2DFFC", VA = "0xC2DFFC")]
		private void RemoveRandomClip(int randIndex)
		{
		}

		[Token(Token = "0x600136C")]
		[Address(RVA = "0xC2E814", Offset = "0xC2E814", VA = "0xC2E814")]
		private void PlayFirstQueuedSong(AudioPlayType playType)
		{
		}

		[Token(Token = "0x600136D")]
		[Address(RVA = "0xC2E950", Offset = "0xC2E950", VA = "0xC2E950")]
		public void PlayNextSong()
		{
		}

		[Token(Token = "0x600136E")]
		[Address(RVA = "0xC2E9E4", Offset = "0xC2E9E4", VA = "0xC2E9E4")]
		public void PlayTheNextSong(AudioPlayType playType)
		{
		}

		[Token(Token = "0x600136F")]
		[Address(RVA = "0xC2EB90", Offset = "0xC2EB90", VA = "0xC2EB90")]
		private void AdvanceSongCounter()
		{
		}

		[Token(Token = "0x6001370")]
		[Address(RVA = "0xC2EC04", Offset = "0xC2EC04", VA = "0xC2EC04")]
		public void StopPlaylistAfterCurrentSong()
		{
		}

		[Token(Token = "0x6001371")]
		[Address(RVA = "0xC2EE00", Offset = "0xC2EE00", VA = "0xC2EE00")]
		public void StopLoopingCurrentSong()
		{
		}

		[Token(Token = "0x6001372")]
		[Address(RVA = "0xC2EFB4", Offset = "0xC2EFB4", VA = "0xC2EFB4")]
		public void QueuePlaylistClip(string clipName, bool scheduleNow = true)
		{
		}

		[Token(Token = "0x6001373")]
		[Address(RVA = "0xC2F314", Offset = "0xC2F314", VA = "0xC2F314")]
		public bool TriggerPlaylistClip(string clipName)
		{
			return default(bool);
		}

		[Token(Token = "0x6001374")]
		[Address(RVA = "0xC2F5E8", Offset = "0xC2F5E8", VA = "0xC2F5E8")]
		public void EndDucking(SoundGroupVariationUpdater actorUpdater)
		{
		}

		[Token(Token = "0x6001375")]
		[Address(RVA = "0xC2F688", Offset = "0xC2F688", VA = "0xC2F688")]
		public void DuckMusicForTime(SoundGroupVariationUpdater actorUpdater, float duckLength, float unduckTime, float pitch, float duckedTimePercentage, float duckedVolCut)
		{
		}

		[Token(Token = "0x6001376")]
		[Address(RVA = "0xC2F824", Offset = "0xC2F824", VA = "0xC2F824")]
		private void InitControllerIfNot()
		{
		}

		[Token(Token = "0x6001377")]
		[Address(RVA = "0xC2B5E8", Offset = "0xC2B5E8", VA = "0xC2B5E8")]
		public void UpdateMasterVolume()
		{
		}

		[Token(Token = "0x6001378")]
		[Address(RVA = "0xC2F8C0", Offset = "0xC2F8C0", VA = "0xC2F8C0")]
		public void StartPlaylist(string playlistName, [Optional] string clipName)
		{
		}

		[Token(Token = "0x6001379")]
		[Address(RVA = "0xC2FA4C", Offset = "0xC2FA4C", VA = "0xC2FA4C")]
		public void ChangePlaylist(string playlistName, bool playFirstClip = true, [Optional] string clipName)
		{
		}

		[Token(Token = "0x600137A")]
		[Address(RVA = "0xC2DAAC", Offset = "0xC2DAAC", VA = "0xC2DAAC")]
		private void FinishPlaylistInit(bool playFirstClip = true, [Optional] string clipName)
		{
		}

		[Token(Token = "0x600137B")]
		[Address(RVA = "0xC2F9A4", Offset = "0xC2F9A4", VA = "0xC2F9A4")]
		public void RestartPlaylist([Optional] string clipName)
		{
		}

		[Token(Token = "0x600137C")]
		[Address(RVA = "0xC2FBB0", Offset = "0xC2FBB0", VA = "0xC2FBB0")]
		private void CheckIfPlaylistStarted()
		{
		}

		[Token(Token = "0x600137D")]
		[Address(RVA = "0xC2FCA8", Offset = "0xC2FCA8", VA = "0xC2FCA8")]
		private PlaylistController FindOtherControllerInSameSyncGroup()
		{
			return null;
		}

		[Token(Token = "0x600137E")]
		[Address(RVA = "0xC2CAAC", Offset = "0xC2CAAC", VA = "0xC2CAAC")]
		private void FadeOutPlaylist()
		{
		}

		[Token(Token = "0x600137F")]
		[Address(RVA = "0xC2B1A0", Offset = "0xC2B1A0", VA = "0xC2B1A0")]
		private void InitializePlaylist()
		{
		}

		[Token(Token = "0x6001380")]
		[Address(RVA = "0xC2B2F0", Offset = "0xC2B2F0", VA = "0xC2B2F0")]
		private void PlayNextOrRandom(AudioPlayType playType)
		{
		}

		[Token(Token = "0x6001381")]
		[Address(RVA = "0xC2C87C", Offset = "0xC2C87C", VA = "0xC2C87C")]
		private void FirePlaylistEndedEventIfAny()
		{
		}

		[Token(Token = "0x6001382")]
		[Address(RVA = "0xC2E64C", Offset = "0xC2E64C", VA = "0xC2E64C")]
		private void FillClips()
		{
		}

		[Token(Token = "0x6001383")]
		[Address(RVA = "0xC2E09C", Offset = "0xC2E09C", VA = "0xC2E09C")]
		private void PlaySong(MusicSetting setting, AudioPlayType playType)
		{
		}

		[Token(Token = "0x6001384")]
		[Address(RVA = "0xC30990", Offset = "0xC30990", VA = "0xC30990")]
		public double? ScheduledGaplessNextSongStartTime()
		{
			return null;
		}

		[Token(Token = "0x6001385")]
		[Address(RVA = "0xC2FED4", Offset = "0xC2FED4", VA = "0xC2FED4")]
		public void FinishLoadingNewSong(MusicSetting songSetting, AudioClip clipToPlay, AudioPlayType playType)
		{
		}

		[Token(Token = "0x6001386")]
		[Address(RVA = "0xC30C64", Offset = "0xC30C64", VA = "0xC30C64")]
		private void RemoveScheduledClip()
		{
		}

		[Token(Token = "0x6001387")]
		[Address(RVA = "0xC2EFAC", Offset = "0xC2EFAC", VA = "0xC2EFAC")]
		private void ScheduleNextSong()
		{
		}

		[Token(Token = "0x6001388")]
		[Address(RVA = "0xC2CBA8", Offset = "0xC2CBA8", VA = "0xC2CBA8")]
		private void FadeInScheduledSong()
		{
		}

		[Token(Token = "0x6001389")]
		[Address(RVA = "0xC30A50", Offset = "0xC30A50", VA = "0xC30A50")]
		private double CalculateNextTrackStartTimeOffset()
		{
			return default(double);
		}

		[Token(Token = "0x600138A")]
		[Address(RVA = "0xC30D0C", Offset = "0xC30D0C", VA = "0xC30D0C")]
		private double GetClipDuration(AudioSource src)
		{
			return default(double);
		}

		[Token(Token = "0x600138B")]
		[Address(RVA = "0xC2AC04", Offset = "0xC2AC04", VA = "0xC2AC04")]
		private void ScheduleClipPlay(double scheduledPlayTimeOffset, AudioSource source, bool calledAfterPause, bool addDspTime = true)
		{
		}

		[Token(Token = "0x600138C")]
		[Address(RVA = "0xC30B34", Offset = "0xC30B34", VA = "0xC30B34")]
		private void CrossFadeNow(AudioSource audioClip)
		{
		}

		[Token(Token = "0x600138D")]
		[Address(RVA = "0xC2C340", Offset = "0xC2C340", VA = "0xC2C340")]
		private void CeaseAudioSource(AudioSource source)
		{
		}

		[Token(Token = "0x600138E")]
		[Address(RVA = "0xC2C6D4", Offset = "0xC2C6D4", VA = "0xC2C6D4")]
		private void SetDuckProperties()
		{
		}

		[Token(Token = "0x600138F")]
		[Address(RVA = "0xC2CBB0", Offset = "0xC2CBB0", VA = "0xC2CBB0")]
		private void AudioDucking()
		{
		}

		[Token(Token = "0x6001390")]
		[Address(RVA = "0xC30D88", Offset = "0xC30D88", VA = "0xC30D88")]
		private void ResetDuckingState()
		{
		}

		[Token(Token = "0x6001392")]
		[Address(RVA = "0xC2FD98", Offset = "0xC2FD98", VA = "0xC2FD98")]
		private bool SongShouldLoop(MusicSetting setting)
		{
			return default(bool);
		}

		[Token(Token = "0x60013A3")]
		[Address(RVA = "0xC30FE4", Offset = "0xC30FE4", VA = "0xC30FE4")]
		public void RouteToMixerChannel(AudioMixerGroup group)
		{
		}

		[Token(Token = "0x60013B3")]
		[Address(RVA = "0xC310F8", Offset = "0xC310F8", VA = "0xC310F8")]
		public PlaylistController()
		{
		}

		[Token(Token = "0x60013B4")]
		[Address(RVA = "0xC312B8", Offset = "0xC312B8", VA = "0xC312B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1C20", Offset = "0x8E1C20")]
		private bool <FindOtherControllerInSameSyncGroup>b__150_0(PlaylistController obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60013B5")]
		[Address(RVA = "0xC313AC", Offset = "0xC313AC", VA = "0xC313AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1C30", Offset = "0x8E1C30")]
		private bool <FinishLoadingNewSong>b__158_0(MusicSetting obj)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000325")]
	public static class SpatializerHelper
	{
		[Token(Token = "0x40016E4")]
		private const string OculusSpatializer = "OculusSpatializer";

		[Token(Token = "0x40016E5")]
		private const string ResonanceAudioSpatializer = "Resonance Audio";

		[Token(Token = "0x1700024A")]
		public static bool IsSupportedSpatializer
		{
			[Token(Token = "0x60013CD")]
			[Address(RVA = "0xE06F68", Offset = "0xE06F68", VA = "0xE06F68")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700024B")]
		public static bool IsOculusAudioSpatializer
		{
			[Token(Token = "0x60013CE")]
			[Address(RVA = "0xE07004", Offset = "0xE07004", VA = "0xE07004")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700024C")]
		public static bool IsResonanceAudioSpatializer
		{
			[Token(Token = "0x60013CF")]
			[Address(RVA = "0xE07054", Offset = "0xE07054", VA = "0xE07054")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700024D")]
		public static string SelectedSpatializer
		{
			[Token(Token = "0x60013D0")]
			[Address(RVA = "0xE06FFC", Offset = "0xE06FFC", VA = "0xE06FFC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700024E")]
		public static bool SpatializerOptionExists
		{
			[Token(Token = "0x60013D1")]
			[Address(RVA = "0xE070A4", Offset = "0xE070A4", VA = "0xE070A4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60013D2")]
		[Address(RVA = "0xE00B24", Offset = "0xE00B24", VA = "0xE00B24")]
		public static void TurnOnSpatializerIfEnabled(AudioSource source)
		{
		}
	}
	[Token(Token = "0x2000326")]
	public static class UtilStrings
	{
		[Token(Token = "0x60013D3")]
		[Address(RVA = "0xC0AA88", Offset = "0xC0AA88", VA = "0xC0AA88")]
		public static string TrimSpace(string untrimmed)
		{
			return null;
		}

		[Token(Token = "0x60013D4")]
		[Address(RVA = "0xC0AB04", Offset = "0xC0AB04", VA = "0xC0AB04")]
		public static string ReplaceUnsafeChars(string source)
		{
			return null;
		}
	}
	[Token(Token = "0x2000327")]
	public class VideoPlayerTracker
	{
		[Token(Token = "0x40016E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DC098", Offset = "0x8DC098")]
		private readonly VideoPlayer <Player>k__BackingField;

		[Token(Token = "0x40016E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DC0A8", Offset = "0x8DC0A8")]
		private bool <IsPlaying>k__BackingField;

		[Token(Token = "0x40016E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DC0B8", Offset = "0x8DC0B8")]
		private readonly SoundGroupVariation <Variation>k__BackingField;

		[Token(Token = "0x1700024F")]
		public VideoPlayer Player
		{
			[Token(Token = "0x60013D7")]
			[Address(RVA = "0xC10950", Offset = "0xC10950", VA = "0xC10950")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1C40", Offset = "0x8E1C40")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000250")]
		public bool IsPlaying
		{
			[Token(Token = "0x60013D8")]
			[Address(RVA = "0xC10958", Offset = "0xC10958", VA = "0xC10958")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1C50", Offset = "0x8E1C50")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013D9")]
			[Address(RVA = "0xC10960", Offset = "0xC10960", VA = "0xC10960")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1C60", Offset = "0x8E1C60")]
			private set
			{
			}
		}

		[Token(Token = "0x17000251")]
		public SoundGroupVariation Variation
		{
			[Token(Token = "0x60013DA")]
			[Address(RVA = "0xC1096C", Offset = "0xC1096C", VA = "0xC1096C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1C70", Offset = "0x8E1C70")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013D5")]
		[Address(RVA = "0xC1090C", Offset = "0xC1090C", VA = "0xC1090C")]
		private VideoPlayerTracker()
		{
		}

		[Token(Token = "0x60013D6")]
		[Address(RVA = "0xC10914", Offset = "0xC10914", VA = "0xC10914")]
		public VideoPlayerTracker(VideoPlayer player, SoundGroupVariation variation)
		{
		}

		[Token(Token = "0x60013DB")]
		[Address(RVA = "0xC10974", Offset = "0xC10974", VA = "0xC10974")]
		public void StartedPlaying()
		{
		}

		[Token(Token = "0x60013DC")]
		[Address(RVA = "0xC10980", Offset = "0xC10980", VA = "0xC10980")]
		public void StoppedPlayings()
		{
		}
	}
}
namespace DarkTonic.MasterAudio.Multiplayer
{
	[Token(Token = "0x2000328")]
	public class MasterAudioMultiplayerAdapter : MonoBehaviour
	{
		[Token(Token = "0x17000252")]
		public static bool CanSendRPCs
		{
			[Token(Token = "0x6001436")]
			[Address(RVA = "0xC1AAA4", Offset = "0xC1AAA4", VA = "0xC1AAA4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60013DD")]
		[Address(RVA = "0xC1A8C0", Offset = "0xC1A8C0", VA = "0xC1A8C0")]
		public void Awake()
		{
		}

		[Token(Token = "0x60013DE")]
		[Address(RVA = "0xC1A934", Offset = "0xC1A934", VA = "0xC1A934")]
		public static void FireCustomEvent(string enterCustomEvent, Transform _actorTrans)
		{
		}

		[Token(Token = "0x60013DF")]
		[Address(RVA = "0xC1A938", Offset = "0xC1A938", VA = "0xC1A938")]
		public static void StopSoundGroupOfTransform(Transform _actorTrans, string timedSoundGroup)
		{
		}

		[Token(Token = "0x60013E0")]
		[Address(RVA = "0xC1A93C", Offset = "0xC1A93C", VA = "0xC1A93C")]
		public static void PlaySound3DFollowTransformAndForget(string enterSoundGroup, Transform _actorTrans)
		{
		}

		[Token(Token = "0x60013E1")]
		[Address(RVA = "0xC1A940", Offset = "0xC1A940", VA = "0xC1A940")]
		public static void PlaySound3DFollowTransformAndForget(string enterSoundGroup, Transform _actorTrans, float volume, float? pitch, float delay, string varName)
		{
		}

		[Token(Token = "0x60013E2")]
		[Address(RVA = "0xC1A944", Offset = "0xC1A944", VA = "0xC1A944")]
		public static void PlaySound3DAtTransformAndForget(string enterSoundGroup, Transform _actorTrans)
		{
		}

		[Token(Token = "0x60013E3")]
		[Address(RVA = "0xC1A948", Offset = "0xC1A948", VA = "0xC1A948")]
		public static void PlaySound3DAtTransformAndForget(string enterSoundGroup, Transform _actorTrans, float volume, float? pitch, float delay, string varName)
		{
		}

		[Token(Token = "0x60013E4")]
		[Address(RVA = "0xC1A94C", Offset = "0xC1A94C", VA = "0xC1A94C")]
		public static PlaySoundResult PlaySound3DAtTransform(string sType, Transform trans, float volume, float? pitch, float delay, string variationName)
		{
			return null;
		}

		[Token(Token = "0x60013E5")]
		[Address(RVA = "0xC1A954", Offset = "0xC1A954", VA = "0xC1A954")]
		public static PlaySoundResult PlaySound3DFollowTransform(string sType, Transform trans, float volume, float? pitch, float delay, string variationName)
		{
			return null;
		}

		[Token(Token = "0x60013E6")]
		[Address(RVA = "0xC1A95C", Offset = "0xC1A95C", VA = "0xC1A95C")]
		public static PlaySoundResult PlaySound(Transform trans, string sType, float volume, float? pitch, float delay, string variationName)
		{
			return null;
		}

		[Token(Token = "0x60013E7")]
		[Address(RVA = "0xC1A964", Offset = "0xC1A964", VA = "0xC1A964")]
		public static void FadeOutAllOfSound(Transform trans, string soundType, float fadeTime)
		{
		}

		[Token(Token = "0x60013E8")]
		[Address(RVA = "0xC1A968", Offset = "0xC1A968", VA = "0xC1A968")]
		public static void PlaySound3DAtTransformAndForget(string sType, Transform trans, float volume, float? pitch, float delaySound)
		{
		}

		[Token(Token = "0x60013E9")]
		[Address(RVA = "0xC1A96C", Offset = "0xC1A96C", VA = "0xC1A96C")]
		public static void PlaySound3DFollowTransformAndForget(string sType, Transform trans, float volume, float? pitch, float delaySound)
		{
		}

		[Token(Token = "0x60013EA")]
		[Address(RVA = "0xC1A970", Offset = "0xC1A970", VA = "0xC1A970")]
		public static void PlaySoundAndForget(Transform trans, string sType, float volume, float? pitch, float delaySound)
		{
		}

		[Token(Token = "0x60013EB")]
		[Address(RVA = "0xC1A974", Offset = "0xC1A974", VA = "0xC1A974")]
		public static void PlaySoundAndForget(Transform trans, string sType, float volume, float? pitch, float delay, string variationName)
		{
		}

		[Token(Token = "0x60013EC")]
		[Address(RVA = "0xC1A978", Offset = "0xC1A978", VA = "0xC1A978")]
		public static void FadeOutSoundGroupOfTransform(Transform trans, string soundType, float fadeTime)
		{
		}

		[Token(Token = "0x60013ED")]
		[Address(RVA = "0xC1A97C", Offset = "0xC1A97C", VA = "0xC1A97C")]
		public static void RefillSoundGroupPool(Transform trans, string soundType)
		{
		}

		[Token(Token = "0x60013EE")]
		[Address(RVA = "0xC1A980", Offset = "0xC1A980", VA = "0xC1A980")]
		public static void FadeSoundGroupToVolume(Transform trans, string soundType, float targetVol, float fadeTime, Action completionCallback, bool stopAfterFade, bool restoreVolumeAfterFade)
		{
		}

		[Token(Token = "0x60013EF")]
		[Address(RVA = "0xC1A984", Offset = "0xC1A984", VA = "0xC1A984")]
		public static void MuteGroup(Transform trans, string soundType)
		{
		}

		[Token(Token = "0x60013F0")]
		[Address(RVA = "0xC1A988", Offset = "0xC1A988", VA = "0xC1A988")]
		public static void PauseSoundGroup(Transform trans, string soundType)
		{
		}

		[Token(Token = "0x60013F1")]
		[Address(RVA = "0xC1A98C", Offset = "0xC1A98C", VA = "0xC1A98C")]
		public static void SoloGroup(Transform trans, string soundType)
		{
		}

		[Token(Token = "0x60013F2")]
		[Address(RVA = "0xC1A990", Offset = "0xC1A990", VA = "0xC1A990")]
		public static void StopAllOfSound(Transform trans, string soundType)
		{
		}

		[Token(Token = "0x60013F3")]
		[Address(RVA = "0xC1A994", Offset = "0xC1A994", VA = "0xC1A994")]
		public static void UnmuteGroup(Transform trans, string soundType)
		{
		}

		[Token(Token = "0x60013F4")]
		[Address(RVA = "0xC1A998", Offset = "0xC1A998", VA = "0xC1A998")]
		public static void UnpauseSoundGroup(Transform trans, string soundType)
		{
		}

		[Token(Token = "0x60013F5")]
		[Address(RVA = "0xC1A99C", Offset = "0xC1A99C", VA = "0xC1A99C")]
		public static void UnsoloGroup(Transform trans, string soundType)
		{
		}

		[Token(Token = "0x60013F6")]
		[Address(RVA = "0xC1A9A0", Offset = "0xC1A9A0", VA = "0xC1A9A0")]
		public static void StopAllSoundsOfTransform(Transform trans)
		{
		}

		[Token(Token = "0x60013F7")]
		[Address(RVA = "0xC1A9A4", Offset = "0xC1A9A4", VA = "0xC1A9A4")]
		public static void PauseAllSoundsOfTransform(Transform trans)
		{
		}

		[Token(Token = "0x60013F8")]
		[Address(RVA = "0xC1A9A8", Offset = "0xC1A9A8", VA = "0xC1A9A8")]
		public static void PauseSoundGroupOfTransform(Transform trans, string soundType)
		{
		}

		[Token(Token = "0x60013F9")]
		[Address(RVA = "0xC1A9AC", Offset = "0xC1A9AC", VA = "0xC1A9AC")]
		public static void UnpauseAllSoundsOfTransform(Transform trans)
		{
		}

		[Token(Token = "0x60013FA")]
		[Address(RVA = "0xC1A9B0", Offset = "0xC1A9B0", VA = "0xC1A9B0")]
		public static void UnpauseSoundGroupOfTransform(Transform trans, string soundType)
		{
		}

		[Token(Token = "0x60013FB")]
		[Address(RVA = "0xC1A9B4", Offset = "0xC1A9B4", VA = "0xC1A9B4")]
		public static void FadeOutAllSoundsOfTransform(Transform trans, float fadeTime)
		{
		}

		[Token(Token = "0x60013FC")]
		[Address(RVA = "0xC1A9B8", Offset = "0xC1A9B8", VA = "0xC1A9B8")]
		public static void RouteGroupToBus(Transform trans, string soundType, string busName)
		{
		}

		[Token(Token = "0x60013FD")]
		[Address(RVA = "0xC1A9BC", Offset = "0xC1A9BC", VA = "0xC1A9BC")]
		public static void GlideSoundGroupByPitch(Transform trans, string soundType, float targetGlidePitch, float pitchGlideTime)
		{
		}

		[Token(Token = "0x60013FE")]
		[Address(RVA = "0xC1A9C0", Offset = "0xC1A9C0", VA = "0xC1A9C0")]
		public static void StopOldSoundGroupVoices(Transform trans, string soundType, float minAge)
		{
		}

		[Token(Token = "0x60013FF")]
		[Address(RVA = "0xC1A9C4", Offset = "0xC1A9C4", VA = "0xC1A9C4")]
		public static void FadeOutOldSoundGroupVoices(Transform trans, string soundType, float minAge, float fadeTime)
		{
		}

		[Token(Token = "0x6001400")]
		[Address(RVA = "0xC1A9C8", Offset = "0xC1A9C8", VA = "0xC1A9C8")]
		public static void FadeBusToVolume(Transform trans, string busName, float targetVol, float fadeTime, Action completionCallback, bool stopAfterFade, bool restoreVolumeAfterFade)
		{
		}

		[Token(Token = "0x6001401")]
		[Address(RVA = "0xC1A9CC", Offset = "0xC1A9CC", VA = "0xC1A9CC")]
		public static void GlideBusByPitch(Transform trans, string busName, float targetGlidePitch, float pitchGlideTime)
		{
		}

		[Token(Token = "0x6001402")]
		[Address(RVA = "0xC1A9D0", Offset = "0xC1A9D0", VA = "0xC1A9D0")]
		public static void PauseBus(Transform trans, string busName)
		{
		}

		[Token(Token = "0x6001403")]
		[Address(RVA = "0xC1A9D4", Offset = "0xC1A9D4", VA = "0xC1A9D4")]
		public static void StopBus(Transform trans, string busName)
		{
		}

		[Token(Token = "0x6001404")]
		[Address(RVA = "0xC1A9D8", Offset = "0xC1A9D8", VA = "0xC1A9D8")]
		public static void UnpauseBus(Transform trans, string busName)
		{
		}

		[Token(Token = "0x6001405")]
		[Address(RVA = "0xC1A9DC", Offset = "0xC1A9DC", VA = "0xC1A9DC")]
		public static void MuteBus(Transform trans, string busName)
		{
		}

		[Token(Token = "0x6001406")]
		[Address(RVA = "0xC1A9E0", Offset = "0xC1A9E0", VA = "0xC1A9E0")]
		public static void UnmuteBus(Transform trans, string busName)
		{
		}

		[Token(Token = "0x6001407")]
		[Address(RVA = "0xC1A9E4", Offset = "0xC1A9E4", VA = "0xC1A9E4")]
		public static void ToggleMuteBus(Transform trans, string busName)
		{
		}

		[Token(Token = "0x6001408")]
		[Address(RVA = "0xC1A9E8", Offset = "0xC1A9E8", VA = "0xC1A9E8")]
		public static void SoloBus(Transform trans, string busName)
		{
		}

		[Token(Token = "0x6001409")]
		[Address(RVA = "0xC1A9EC", Offset = "0xC1A9EC", VA = "0xC1A9EC")]
		public static void UnsoloBus(Transform trans, string busName)
		{
		}

		[Token(Token = "0x600140A")]
		[Address(RVA = "0xC1A9F0", Offset = "0xC1A9F0", VA = "0xC1A9F0")]
		public static void ChangeBusPitch(Transform trans, string busName, float pitch)
		{
		}

		[Token(Token = "0x600140B")]
		[Address(RVA = "0xC1A9F4", Offset = "0xC1A9F4", VA = "0xC1A9F4")]
		public static void PauseBusOfTransform(Transform trans, string busName)
		{
		}

		[Token(Token = "0x600140C")]
		[Address(RVA = "0xC1A9F8", Offset = "0xC1A9F8", VA = "0xC1A9F8")]
		public static void UnpauseBusOfTransform(Transform trans, string busName)
		{
		}

		[Token(Token = "0x600140D")]
		[Address(RVA = "0xC1A9FC", Offset = "0xC1A9FC", VA = "0xC1A9FC")]
		public static void RestartAllPlaylists(Transform trans)
		{
		}

		[Token(Token = "0x600140E")]
		[Address(RVA = "0xC1AA00", Offset = "0xC1AA00", VA = "0xC1AA00")]
		public static void StopBusOfTransform(Transform trans, string busName)
		{
		}

		[Token(Token = "0x600140F")]
		[Address(RVA = "0xC1AA04", Offset = "0xC1AA04", VA = "0xC1AA04")]
		public static void StopOldBusVoices(Transform trans, string busName, float minAge)
		{
		}

		[Token(Token = "0x6001410")]
		[Address(RVA = "0xC1AA08", Offset = "0xC1AA08", VA = "0xC1AA08")]
		public static void FadeOutOldBusVoices(Transform trans, string busName, float minAge, float fadeTime)
		{
		}

		[Token(Token = "0x6001411")]
		[Address(RVA = "0xC1AA0C", Offset = "0xC1AA0C", VA = "0xC1AA0C")]
		public static void SetMasterMixerVolume(Transform trans, float targetVol)
		{
		}

		[Token(Token = "0x6001412")]
		[Address(RVA = "0xC1AA10", Offset = "0xC1AA10", VA = "0xC1AA10")]
		public static void SetPlaylistMasterVolume(Transform trans, float tgtVol)
		{
		}

		[Token(Token = "0x6001413")]
		[Address(RVA = "0xC1AA14", Offset = "0xC1AA14", VA = "0xC1AA14")]
		public static void PauseMixer(Transform trans)
		{
		}

		[Token(Token = "0x6001414")]
		[Address(RVA = "0xC1AA18", Offset = "0xC1AA18", VA = "0xC1AA18")]
		public static void UnpauseMixer(Transform trans)
		{
		}

		[Token(Token = "0x6001415")]
		[Address(RVA = "0xC1AA1C", Offset = "0xC1AA1C", VA = "0xC1AA1C")]
		public static void StopMixer(Transform trans)
		{
		}

		[Token(Token = "0x6001416")]
		[Address(RVA = "0xC1AA20", Offset = "0xC1AA20", VA = "0xC1AA20")]
		public static void MuteEverything(Transform trans)
		{
		}

		[Token(Token = "0x6001417")]
		[Address(RVA = "0xC1AA24", Offset = "0xC1AA24", VA = "0xC1AA24")]
		public static void UnmuteEverything(Transform trans)
		{
		}

		[Token(Token = "0x6001418")]
		[Address(RVA = "0xC1AA28", Offset = "0xC1AA28", VA = "0xC1AA28")]
		public static void PauseEverything(Transform trans)
		{
		}

		[Token(Token = "0x6001419")]
		[Address(RVA = "0xC1AA2C", Offset = "0xC1AA2C", VA = "0xC1AA2C")]
		public static void UnpauseEverything(Transform trans)
		{
		}

		[Token(Token = "0x600141A")]
		[Address(RVA = "0xC1AA30", Offset = "0xC1AA30", VA = "0xC1AA30")]
		public static void StopEverything(Transform trans)
		{
		}

		[Token(Token = "0x600141B")]
		[Address(RVA = "0xC1AA34", Offset = "0xC1AA34", VA = "0xC1AA34")]
		public static void RestartPlaylist(Transform trans, string playlistControllerName)
		{
		}

		[Token(Token = "0x600141C")]
		[Address(RVA = "0xC1AA38", Offset = "0xC1AA38", VA = "0xC1AA38")]
		public static void StartPlaylist(Transform trans, string playlistControllerName, string playlistName)
		{
		}

		[Token(Token = "0x600141D")]
		[Address(RVA = "0xC1AA3C", Offset = "0xC1AA3C", VA = "0xC1AA3C")]
		public static void ChangePlaylistByName(Transform trans, string playlistControllerName, string playlistName, bool startPlaylist)
		{
		}

		[Token(Token = "0x600141E")]
		[Address(RVA = "0xC1AA40", Offset = "0xC1AA40", VA = "0xC1AA40")]
		public static void StopLoopingAllCurrentSongs(Transform trans)
		{
		}

		[Token(Token = "0x600141F")]
		[Address(RVA = "0xC1AA44", Offset = "0xC1AA44", VA = "0xC1AA44")]
		public static void StopLoopingCurrentSong(Transform trans, string playlistControllerName)
		{
		}

		[Token(Token = "0x6001420")]
		[Address(RVA = "0xC1AA48", Offset = "0xC1AA48", VA = "0xC1AA48")]
		public static void StopAllPlaylistsAfterCurrentSongs(Transform trans)
		{
		}

		[Token(Token = "0x6001421")]
		[Address(RVA = "0xC1AA4C", Offset = "0xC1AA4C", VA = "0xC1AA4C")]
		public static void StopPlaylistAfterCurrentSong(Transform trans, string playlistControllerName)
		{
		}

		[Token(Token = "0x6001422")]
		[Address(RVA = "0xC1AA50", Offset = "0xC1AA50", VA = "0xC1AA50")]
		public static void FadeAllPlaylistsToVolume(Transform trans, float targetVol, float fadeTime)
		{
		}

		[Token(Token = "0x6001423")]
		[Address(RVA = "0xC1AA54", Offset = "0xC1AA54", VA = "0xC1AA54")]
		public static void FadePlaylistToVolume(Transform trans, string playlistControllerName, float targetVol, float fadeTime)
		{
		}

		[Token(Token = "0x6001424")]
		[Address(RVA = "0xC1AA58", Offset = "0xC1AA58", VA = "0xC1AA58")]
		public static void MuteAllPlaylists(Transform trans)
		{
		}

		[Token(Token = "0x6001425")]
		[Address(RVA = "0xC1AA5C", Offset = "0xC1AA5C", VA = "0xC1AA5C")]
		public static void MutePlaylist(Transform trans, string playlistControllerName)
		{
		}

		[Token(Token = "0x6001426")]
		[Address(RVA = "0xC1AA60", Offset = "0xC1AA60", VA = "0xC1AA60")]
		public static void UnmuteAllPlaylists(Transform trans)
		{
		}

		[Token(Token = "0x6001427")]
		[Address(RVA = "0xC1AA64", Offset = "0xC1AA64", VA = "0xC1AA64")]
		public static void UnmutePlaylist(Transform trans, string playlistControllerName)
		{
		}

		[Token(Token = "0x6001428")]
		[Address(RVA = "0xC1AA68", Offset = "0xC1AA68", VA = "0xC1AA68")]
		public static void ToggleMuteAllPlaylists(Transform trans)
		{
		}

		[Token(Token = "0x6001429")]
		[Address(RVA = "0xC1AA6C", Offset = "0xC1AA6C", VA = "0xC1AA6C")]
		public static void ToggleMutePlaylist(Transform trans, string playlistControllerName)
		{
		}

		[Token(Token = "0x600142A")]
		[Address(RVA = "0xC1AA70", Offset = "0xC1AA70", VA = "0xC1AA70")]
		public static bool TriggerPlaylistClip(Transform trans, string playlistControllerName, string clipName)
		{
			return default(bool);
		}

		[Token(Token = "0x600142B")]
		[Address(RVA = "0xC1AA78", Offset = "0xC1AA78", VA = "0xC1AA78")]
		public static void QueuePlaylistClip(Transform trans, string playlistControllerName, string clipName)
		{
		}

		[Token(Token = "0x600142C")]
		[Address(RVA = "0xC1AA7C", Offset = "0xC1AA7C", VA = "0xC1AA7C")]
		public static void TriggerRandomClipAllPlaylists(Transform trans)
		{
		}

		[Token(Token = "0x600142D")]
		[Address(RVA = "0xC1AA80", Offset = "0xC1AA80", VA = "0xC1AA80")]
		public static void TriggerRandomPlaylistClip(Transform trans, string playlistControllerName)
		{
		}

		[Token(Token = "0x600142E")]
		[Address(RVA = "0xC1AA84", Offset = "0xC1AA84", VA = "0xC1AA84")]
		public static void TriggerNextClipAllPlaylists(Transform trans)
		{
		}

		[Token(Token = "0x600142F")]
		[Address(RVA = "0xC1AA88", Offset = "0xC1AA88", VA = "0xC1AA88")]
		public static void TriggerNextPlaylistClip(Transform trans, string playlistControllerName)
		{
		}

		[Token(Token = "0x6001430")]
		[Address(RVA = "0xC1AA8C", Offset = "0xC1AA8C", VA = "0xC1AA8C")]
		public static void PauseAllPlaylists(Transform trans)
		{
		}

		[Token(Token = "0x6001431")]
		[Address(RVA = "0xC1AA90", Offset = "0xC1AA90", VA = "0xC1AA90")]
		public static void PausePlaylist(Transform trans, string playlistControllerName)
		{
		}

		[Token(Token = "0x6001432")]
		[Address(RVA = "0xC1AA94", Offset = "0xC1AA94", VA = "0xC1AA94")]
		public static void StopAllPlaylists(Transform trans)
		{
		}

		[Token(Token = "0x6001433")]
		[Address(RVA = "0xC1AA98", Offset = "0xC1AA98", VA = "0xC1AA98")]
		public static void StopPlaylist(Transform trans, string playlistControllerName)
		{
		}

		[Token(Token = "0x6001434")]
		[Address(RVA = "0xC1AA9C", Offset = "0xC1AA9C", VA = "0xC1AA9C")]
		public static void UnpauseAllPlaylists(Transform trans)
		{
		}

		[Token(Token = "0x6001435")]
		[Address(RVA = "0xC1AAA0", Offset = "0xC1AAA0", VA = "0xC1AAA0")]
		public static void UnpausePlaylist(Transform trans, string playlistControllerName)
		{
		}

		[Token(Token = "0x6001437")]
		[Address(RVA = "0xC1AAAC", Offset = "0xC1AAAC", VA = "0xC1AAAC")]
		public MasterAudioMultiplayerAdapter()
		{
		}
	}
}
namespace DarkTonic.MasterAudio.Examples
{
	[Token(Token = "0x2000329")]
	public class MA_Bootstrapper : MonoBehaviour
	{
		[Token(Token = "0x6001438")]
		[Address(RVA = "0xB17610", Offset = "0xB17610", VA = "0xB17610")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001439")]
		[Address(RVA = "0xB17614", Offset = "0xB17614", VA = "0xB17614")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x600143A")]
		[Address(RVA = "0xB17754", Offset = "0xB17754", VA = "0xB17754")]
		public MA_Bootstrapper()
		{
		}
	}
	[Token(Token = "0x200032A")]
	public class MA_DestroyFinishedParticle : MonoBehaviour
	{
		[Token(Token = "0x40016E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ParticleSystem particles;

		[Token(Token = "0x600143B")]
		[Address(RVA = "0xB1775C", Offset = "0xB1775C", VA = "0xB1775C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600143C")]
		[Address(RVA = "0xB177C0", Offset = "0xB177C0", VA = "0xB177C0")]
		private void Update()
		{
		}

		[Token(Token = "0x600143D")]
		[Address(RVA = "0xB1785C", Offset = "0xB1785C", VA = "0xB1785C")]
		public MA_DestroyFinishedParticle()
		{
		}
	}
	[Token(Token = "0x200032B")]
	public class MA_EnemyOne : MonoBehaviour
	{
		[Token(Token = "0x40016EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject ExplosionParticlePrefab;

		[Token(Token = "0x40016EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform _trans;

		[Token(Token = "0x40016EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float _speed;

		[Token(Token = "0x40016ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float _horizSpeed;

		[Token(Token = "0x600143E")]
		[Address(RVA = "0xB17864", Offset = "0xB17864", VA = "0xB17864")]
		private void Awake()
		{
		}

		[Token(Token = "0x600143F")]
		[Address(RVA = "0xB178EC", Offset = "0xB178EC", VA = "0xB178EC")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6001440")]
		[Address(RVA = "0xB179DC", Offset = "0xB179DC", VA = "0xB179DC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001441")]
		[Address(RVA = "0xB17B18", Offset = "0xB17B18", VA = "0xB17B18")]
		public MA_EnemyOne()
		{
		}
	}
	[Token(Token = "0x200032C")]
	public class MA_EnemySpawner : MonoBehaviour
	{
		[Token(Token = "0x40016EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject Enemy;

		[Token(Token = "0x40016EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool spawnerEnabled;

		[Token(Token = "0x40016F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform trans;

		[Token(Token = "0x40016F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float nextSpawnTime;

		[Token(Token = "0x6001442")]
		[Address(RVA = "0xB17B20", Offset = "0xB17B20", VA = "0xB17B20")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001443")]
		[Address(RVA = "0xB17B8C", Offset = "0xB17B8C", VA = "0xB17B8C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001444")]
		[Address(RVA = "0xB17D34", Offset = "0xB17D34", VA = "0xB17D34")]
		public MA_EnemySpawner()
		{
		}
	}
	[Token(Token = "0x200032D")]
	public class MA_GameScene : MonoBehaviour
	{
		[Token(Token = "0x6001445")]
		[Address(RVA = "0xB17D3C", Offset = "0xB17D3C", VA = "0xB17D3C")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001446")]
		[Address(RVA = "0xB17DF0", Offset = "0xB17DF0", VA = "0xB17DF0")]
		public MA_GameScene()
		{
		}
	}
	[Token(Token = "0x200032E")]
	public class MA_Laser : MonoBehaviour
	{
		[Token(Token = "0x40016F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Transform _trans;

		[Token(Token = "0x6001447")]
		[Address(RVA = "0xB17DF8", Offset = "0xB17DF8", VA = "0xB17DF8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001448")]
		[Address(RVA = "0xB17E30", Offset = "0xB17E30", VA = "0xB17E30")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6001449")]
		[Address(RVA = "0xB17F20", Offset = "0xB17F20", VA = "0xB17F20")]
		private void Update()
		{
		}

		[Token(Token = "0x600144A")]
		[Address(RVA = "0xB18008", Offset = "0xB18008", VA = "0xB18008")]
		public MA_Laser()
		{
		}
	}
	[Token(Token = "0x200032F")]
	public class MA_LocalizationUI : MonoBehaviour
	{
		[Token(Token = "0x600144B")]
		[Address(RVA = "0xB18010", Offset = "0xB18010", VA = "0xB18010")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x600144C")]
		[Address(RVA = "0xB180C4", Offset = "0xB180C4", VA = "0xB180C4")]
		public MA_LocalizationUI()
		{
		}
	}
	[Token(Token = "0x2000330")]
	public class MA_PlayerControl : MonoBehaviour
	{
		[Token(Token = "0x40016F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject ProjectilePrefab;

		[Token(Token = "0x40016F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool canShoot;

		[Token(Token = "0x40016F5")]
		private const float MoveSpeed = 10f;

		[Token(Token = "0x40016F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform _trans;

		[Token(Token = "0x40016F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float _lastMoveAmt;

		[Token(Token = "0x600144D")]
		[Address(RVA = "0xB180CC", Offset = "0xB180CC", VA = "0xB180CC")]
		private void Awake()
		{
		}

		[Token(Token = "0x600144E")]
		[Address(RVA = "0xB18104", Offset = "0xB18104", VA = "0xB18104")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x600144F")]
		[Address(RVA = "0xB181B0", Offset = "0xB181B0", VA = "0xB181B0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001450")]
		[Address(RVA = "0xB181B4", Offset = "0xB181B4", VA = "0xB181B4")]
		private void OnBecameInvisible()
		{
		}

		[Token(Token = "0x6001451")]
		[Address(RVA = "0xB181B8", Offset = "0xB181B8", VA = "0xB181B8")]
		private void OnBecameVisible()
		{
		}

		[Token(Token = "0x6001452")]
		[Address(RVA = "0xB181BC", Offset = "0xB181BC", VA = "0xB181BC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001453")]
		[Address(RVA = "0xB1943C", Offset = "0xB1943C", VA = "0xB1943C")]
		public MA_PlayerControl()
		{
		}
	}
	[Token(Token = "0x2000331")]
	public class MA_PlayerSpawnerControl : MonoBehaviour
	{
		[Token(Token = "0x40016F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject Player;

		[Token(Token = "0x40016F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float nextSpawnTime;

		[Token(Token = "0x17000253")]
		private bool PlayerActive
		{
			[Token(Token = "0x6001455")]
			[Address(RVA = "0xB1947C", Offset = "0xB1947C", VA = "0xB1947C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001454")]
		[Address(RVA = "0xB1944C", Offset = "0xB1944C", VA = "0xB1944C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001456")]
		[Address(RVA = "0xB19498", Offset = "0xB19498", VA = "0xB19498")]
		private void Update()
		{
		}

		[Token(Token = "0x6001457")]
		[Address(RVA = "0xB1951C", Offset = "0xB1951C", VA = "0xB1951C")]
		public MA_PlayerSpawnerControl()
		{
		}
	}
	[Token(Token = "0x2000332")]
	public class MA_SampleICustomEventReceiver : MonoBehaviour, ICustomEventReceiver
	{
		[Token(Token = "0x40016FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly List<string> _eventsSubscribedTo;

		[Token(Token = "0x6001458")]
		[Address(RVA = "0xB19524", Offset = "0xB19524", VA = "0xB19524")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001459")]
		[Address(RVA = "0xB19528", Offset = "0xB19528", VA = "0xB19528")]
		private void Start()
		{
		}

		[Token(Token = "0x600145A")]
		[Address(RVA = "0xB19698", Offset = "0xB19698", VA = "0xB19698")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600145B")]
		[Address(RVA = "0xB19714", Offset = "0xB19714", VA = "0xB19714")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600145C")]
		[Address(RVA = "0xB1952C", Offset = "0xB1952C", VA = "0xB1952C", Slot = "4")]
		public void CheckForIllegalCustomEvents()
		{
		}

		[Token(Token = "0x600145D")]
		[Address(RVA = "0xB19BF8", Offset = "0xB19BF8", VA = "0xB19BF8", Slot = "5")]
		public void ReceiveEvent(string customEventName, Vector3 originPoint)
		{
		}

		[Token(Token = "0x600145E")]
		[Address(RVA = "0xB19D44", Offset = "0xB19D44", VA = "0xB19D44", Slot = "6")]
		public bool SubscribesToEvent(string customEventName)
		{
			return default(bool);
		}

		[Token(Token = "0x600145F")]
		[Address(RVA = "0xB1969C", Offset = "0xB1969C", VA = "0xB1969C", Slot = "7")]
		public void RegisterReceiver()
		{
		}

		[Token(Token = "0x6001460")]
		[Address(RVA = "0xB199F4", Offset = "0xB199F4", VA = "0xB199F4", Slot = "8")]
		public void UnregisterReceiver()
		{
		}

		[Token(Token = "0x6001461")]
		[Address(RVA = "0xB1A70C", Offset = "0xB1A70C", VA = "0xB1A70C", Slot = "9")]
		public IList<AudioEventGroup> GetAllEvents()
		{
			return null;
		}

		[Token(Token = "0x6001462")]
		[Address(RVA = "0xB1A854", Offset = "0xB1A854", VA = "0xB1A854")]
		public MA_SampleICustomEventReceiver()
		{
		}
	}
	[Token(Token = "0x2000333")]
	public class MA_TestUI : MonoBehaviour
	{
		[Token(Token = "0x6001463")]
		[Address(RVA = "0xB1A938", Offset = "0xB1A938", VA = "0xB1A938")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001464")]
		[Address(RVA = "0xB1A9EC", Offset = "0xB1A9EC", VA = "0xB1A9EC")]
		public MA_TestUI()
		{
		}
	}
}
namespace AraSamples
{
	[Serializable]
	[Token(Token = "0x2000334")]
	public class AxleInfo
	{
		[Token(Token = "0x40016FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WheelCollider leftWheel;

		[Token(Token = "0x40016FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public WheelCollider rightWheel;

		[Token(Token = "0x40016FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool motor;

		[Token(Token = "0x40016FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool steering;

		[Token(Token = "0x6001465")]
		[Address(RVA = "0xD71EB0", Offset = "0xD71EB0", VA = "0xD71EB0")]
		public AxleInfo()
		{
		}
	}
	[Token(Token = "0x2000335")]
	public class CarController : MonoBehaviour
	{
		[Token(Token = "0x40016FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<AxleInfo> axleInfos;

		[Token(Token = "0x4001700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float maxMotorTorque;

		[Token(Token = "0x4001701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float maxSteeringAngle;

		[Token(Token = "0x6001466")]
		[Address(RVA = "0x10772A8", Offset = "0x10772A8", VA = "0x10772A8")]
		public void ApplyLocalPositionToVisuals(WheelCollider collider)
		{
		}

		[Token(Token = "0x6001467")]
		[Address(RVA = "0x1077374", Offset = "0x1077374", VA = "0x1077374")]
		public void FixedUpdate()
		{
		}

		[Token(Token = "0x6001468")]
		[Address(RVA = "0x107759C", Offset = "0x107759C", VA = "0x107759C")]
		public CarController()
		{
		}
	}
	[Token(Token = "0x2000336")]
	public class ObjectDragger : MonoBehaviour
	{
		[Token(Token = "0x4001702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector3 screenPoint;

		[Token(Token = "0x4001703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 offset;

		[Token(Token = "0x6001469")]
		[Address(RVA = "0xC250C4", Offset = "0xC250C4", VA = "0xC250C4")]
		private void OnMouseDown()
		{
		}

		[Token(Token = "0x600146A")]
		[Address(RVA = "0xC251B8", Offset = "0xC251B8", VA = "0xC251B8")]
		private void OnMouseDrag()
		{
		}

		[Token(Token = "0x600146B")]
		[Address(RVA = "0xC25254", Offset = "0xC25254", VA = "0xC25254")]
		public ObjectDragger()
		{
		}
	}
	[Token(Token = "0x2000337")]
	public class Rotation : MonoBehaviour
	{
		[Token(Token = "0x4001704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float speed;

		[Token(Token = "0x4001705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 axis;

		[Token(Token = "0x600146C")]
		[Address(RVA = "0xE60484", Offset = "0xE60484", VA = "0xE60484")]
		private void Update()
		{
		}

		[Token(Token = "0x600146D")]
		[Address(RVA = "0xE604EC", Offset = "0xE604EC", VA = "0xE604EC")]
		public Rotation()
		{
		}
	}
	[Token(Token = "0x2000338")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8CD73C", Offset = "0x8CD73C")]
	public class WallPlayerController : MonoBehaviour
	{
		[Token(Token = "0x4001706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float speed;

		[Token(Token = "0x4001707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int boardSize;

		[Token(Token = "0x4001708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int maxTrailLenght;

		[Token(Token = "0x4001709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color[] colors;

		[Token(Token = "0x400170A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int coordX;

		[Token(Token = "0x400170B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int coordZ;

		[Token(Token = "0x400170C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AraTrail trail;

		[Token(Token = "0x600146E")]
		[Address(RVA = "0xC10988", Offset = "0xC10988", VA = "0xC10988")]
		private void Awake()
		{
		}

		[Token(Token = "0x600146F")]
		[Address(RVA = "0xC109DC", Offset = "0xC109DC", VA = "0xC109DC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001470")]
		[Address(RVA = "0xC10D28", Offset = "0xC10D28", VA = "0xC10D28")]
		public WallPlayerController()
		{
		}
	}
}
namespace Ara
{
	[Token(Token = "0x2000339")]
	[ExecuteInEditMode]
	public class AraTrail : MonoBehaviour
	{
		[Token(Token = "0x200033A")]
		public enum TrailAlignment
		{
			[Token(Token = "0x400174B")]
			View,
			[Token(Token = "0x400174C")]
			Velocity,
			[Token(Token = "0x400174D")]
			Local
		}

		[Token(Token = "0x200033B")]
		public enum TrailSpace
		{
			[Token(Token = "0x400174F")]
			World,
			[Token(Token = "0x4001750")]
			Self,
			[Token(Token = "0x4001751")]
			Custom
		}

		[Token(Token = "0x200033C")]
		public enum TrailSorting
		{
			[Token(Token = "0x4001753")]
			OlderOnTop,
			[Token(Token = "0x4001754")]
			NewerOnTop
		}

		[Token(Token = "0x200033D")]
		public enum Timescale
		{
			[Token(Token = "0x4001756")]
			Normal,
			[Token(Token = "0x4001757")]
			Unscaled
		}

		[Token(Token = "0x200033E")]
		public enum TextureMode
		{
			[Token(Token = "0x4001759")]
			Stretch,
			[Token(Token = "0x400175A")]
			Tile,
			[Token(Token = "0x400175B")]
			WorldTile
		}

		[Token(Token = "0x200033F")]
		public struct CurveFrame
		{
			[Token(Token = "0x400175C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 position;

			[Token(Token = "0x400175D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 normal;

			[Token(Token = "0x400175E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 bitangent;

			[Token(Token = "0x400175F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Vector3 tangent;

			[Token(Token = "0x6001494")]
			[Address(RVA = "0xC13BAC", Offset = "0xC13BAC", VA = "0xC13BAC")]
			public CurveFrame(Vector3 position, Vector3 normal, Vector3 bitangent, Vector3 tangent)
			{
			}

			[Token(Token = "0x6001495")]
			[Address(RVA = "0xC13BDC", Offset = "0xC13BDC", VA = "0xC13BDC")]
			public Vector3 Transport(Vector3 newTangent, Vector3 newPosition)
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x2000340")]
		public struct Point
		{
			[Token(Token = "0x4001760")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 position;

			[Token(Token = "0x4001761")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 velocity;

			[Token(Token = "0x4001762")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 tangent;

			[Token(Token = "0x4001763")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Vector3 normal;

			[Token(Token = "0x4001764")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Color color;

			[Token(Token = "0x4001765")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public float thickness;

			[Token(Token = "0x4001766")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public float life;

			[Token(Token = "0x4001767")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public float texcoord;

			[Token(Token = "0x4001768")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public bool discontinuous;

			[Token(Token = "0x6001496")]
			[Address(RVA = "0xC13D78", Offset = "0xC13D78", VA = "0xC13D78")]
			public Point(Vector3 position, Vector3 velocity, Vector3 tangent, Vector3 normal, Color color, float thickness, float texcoord, float lifetime)
			{
			}

			[Token(Token = "0x6001497")]
			[Address(RVA = "0xC13DC8", Offset = "0xC13DC8", VA = "0xC13DC8")]
			public static float CatmullRom(float p0, float p1, float p2, float p3, float t)
			{
				return default(float);
			}

			[Token(Token = "0x6001498")]
			[Address(RVA = "0xC13E34", Offset = "0xC13E34", VA = "0xC13E34")]
			public static Point operator +(Point p1, Point p2)
			{
				return default(Point);
			}

			[Token(Token = "0x6001499")]
			[Address(RVA = "0xC13FAC", Offset = "0xC13FAC", VA = "0xC13FAC")]
			public static Point operator -(Point p1, Point p2)
			{
				return default(Point);
			}
		}

		[Token(Token = "0x400170D")]
		public const float epsilon = 1E-05f;

		[Token(Token = "0x400170E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DC0C8", Offset = "0x8DC0C8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DC0C8", Offset = "0x8DC0C8")]
		public TrailSection section;

		[Token(Token = "0x400170F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DC128", Offset = "0x8DC128")]
		public TrailSpace space;

		[Token(Token = "0x4001710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DC160", Offset = "0x8DC160")]
		public Transform customSpace;

		[Token(Token = "0x4001711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DC198", Offset = "0x8DC198")]
		public Timescale timescale;

		[Token(Token = "0x4001712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DC1D0", Offset = "0x8DC1D0")]
		public TrailAlignment alignment;

		[Token(Token = "0x4001713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DC208", Offset = "0x8DC208")]
		public TrailSorting sorting;

		[Token(Token = "0x4001714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DC240", Offset = "0x8DC240")]
		public float thickness;

		[Token(Token = "0x4001715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DC278", Offset = "0x8DC278")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DC278", Offset = "0x8DC278")]
		public int smoothness;

		[Token(Token = "0x4001716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DC2CC", Offset = "0x8DC2CC")]
		public bool highQualityCorners;

		[Token(Token = "0x4001717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DC304", Offset = "0x8DC304")]
		public int cornerRoundness;

		[Token(Token = "0x4001718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DC31C", Offset = "0x8DC31C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DC31C", Offset = "0x8DC31C")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8DC31C", Offset = "0x8DC31C")]
		public AnimationCurve thicknessOverLength;

		[Token(Token = "0x4001719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8DC3A0", Offset = "0x8DC3A0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DC3A0", Offset = "0x8DC3A0")]
		public Gradient colorOverLength;

		[Token(Token = "0x400171A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DC400", Offset = "0x8DC400")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DC400", Offset = "0x8DC400")]
		public AnimationCurve thicknessOverTime;

		[Token(Token = "0x400171B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DC460", Offset = "0x8DC460")]
		public Gradient colorOverTime;

		[Token(Token = "0x400171C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DC498", Offset = "0x8DC498")]
		public bool emit;

		[Token(Token = "0x400171D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DC4D0", Offset = "0x8DC4D0")]
		public float initialThickness;

		[Token(Token = "0x400171E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DC508", Offset = "0x8DC508")]
		public Color initialColor;

		[Token(Token = "0x400171F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DC540", Offset = "0x8DC540")]
		public Vector3 initialVelocity;

		[Token(Token = "0x4001720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DC578", Offset = "0x8DC578")]
		public float timeInterval;

		[Token(Token = "0x4001721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DC5B0", Offset = "0x8DC5B0")]
		public float minDistance;

		[Token(Token = "0x4001722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DC5E8", Offset = "0x8DC5E8")]
		public float time;

		[Token(Token = "0x4001723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DC620", Offset = "0x8DC620")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DC620", Offset = "0x8DC620")]
		public bool enablePhysics;

		[Token(Token = "0x4001724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DC680", Offset = "0x8DC680")]
		public float warmup;

		[Token(Token = "0x4001725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DC6B8", Offset = "0x8DC6B8")]
		public Vector3 gravity;

		[Token(Token = "0x4001726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DC6F0", Offset = "0x8DC6F0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DC6F0", Offset = "0x8DC6F0")]
		public float inertia;

		[Token(Token = "0x4001727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DC744", Offset = "0x8DC744")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DC744", Offset = "0x8DC744")]
		public float velocitySmoothing;

		[Token(Token = "0x4001728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DC798", Offset = "0x8DC798")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DC798", Offset = "0x8DC798")]
		public float damping;

		[Token(Token = "0x4001729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DC7EC", Offset = "0x8DC7EC")]
		public Material[] materials;

		[Token(Token = "0x400172A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public ShadowCastingMode castShadows;

		[Token(Token = "0x400172B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public bool receiveShadows;

		[Token(Token = "0x400172C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
		public bool useLightProbes;

		[Token(Token = "0x400172D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCE")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DC824", Offset = "0x8DC824")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DC824", Offset = "0x8DC824")]
		public bool quadMapping;

		[Token(Token = "0x400172E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DC884", Offset = "0x8DC884")]
		public TextureMode textureMode;

		[Token(Token = "0x400172F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DC8BC", Offset = "0x8DC8BC")]
		public float uvFactor;

		[Token(Token = "0x4001730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DC8F4", Offset = "0x8DC8F4")]
		public float uvWidthFactor;

		[Token(Token = "0x4001731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DC92C", Offset = "0x8DC92C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DC92C", Offset = "0x8DC92C")]
		public float tileAnchor;

		[Token(Token = "0x4001733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[HideInInspector]
		public ElasticArray<Point> points;

		[Token(Token = "0x4001734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private ElasticArray<Point> renderablePoints;

		[Token(Token = "0x4001735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private List<int> discontinuities;

		[Token(Token = "0x4001736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Mesh mesh_;

		[Token(Token = "0x4001737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Vector3 velocity;

		[Token(Token = "0x4001738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private Vector3 prevPosition;

		[Token(Token = "0x4001739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private float accumTime;

		[Token(Token = "0x400173A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private List<Vector3> vertices;

		[Token(Token = "0x400173B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private List<Vector3> normals;

		[Token(Token = "0x400173C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private List<Vector4> tangents;

		[Token(Token = "0x400173D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private List<Vector4> uvs;

		[Token(Token = "0x400173E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private List<Color> vertColors;

		[Token(Token = "0x400173F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private List<int> tris;

		[Token(Token = "0x4001740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private Vector3 nextV;

		[Token(Token = "0x4001741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		private Vector3 prevV;

		[Token(Token = "0x4001742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private Vector3 vertex;

		[Token(Token = "0x4001743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		private Vector3 normal;

		[Token(Token = "0x4001744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private Vector3 bitangent;

		[Token(Token = "0x4001745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
		private Vector4 tangent;

		[Token(Token = "0x4001746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
		private Vector4 texTangent;

		[Token(Token = "0x4001747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
		private Vector4 uv;

		[Token(Token = "0x4001748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		private Color color;

		[Token(Token = "0x4001749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		private Action<ScriptableRenderContext, Camera> renderCallback;

		[Token(Token = "0x17000254")]
		public Vector3 Velocity
		{
			[Token(Token = "0x6001473")]
			[Address(RVA = "0xD6967C", Offset = "0xD6967C", VA = "0xD6967C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000255")]
		private float DeltaTime
		{
			[Token(Token = "0x6001474")]
			[Address(RVA = "0xD6968C", Offset = "0xD6968C", VA = "0xD6968C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000256")]
		private float FixedDeltaTime
		{
			[Token(Token = "0x6001475")]
			[Address(RVA = "0xD696A8", Offset = "0xD696A8", VA = "0xD696A8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000257")]
		public Mesh mesh
		{
			[Token(Token = "0x6001476")]
			[Address(RVA = "0xD696C4", Offset = "0xD696C4", VA = "0xD696C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000258")]
		public Matrix4x4 worldToTrail
		{
			[Token(Token = "0x6001477")]
			[Address(RVA = "0xD696CC", Offset = "0xD696CC", VA = "0xD696CC")]
			get
			{
				return default(Matrix4x4);
			}
		}

		[Token(Token = "0x1400000D")]
		public event Action onUpdatePoints
		{
			[Token(Token = "0x6001471")]
			[Address(RVA = "0xD6953C", Offset = "0xD6953C", VA = "0xD6953C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1C80", Offset = "0x8E1C80")]
			add
			{
			}
			[Token(Token = "0x6001472")]
			[Address(RVA = "0xD695DC", Offset = "0xD695DC", VA = "0xD695DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1C90", Offset = "0x8E1C90")]
			remove
			{
			}
		}

		[Token(Token = "0x6001478")]
		[Address(RVA = "0xD697B0", Offset = "0xD697B0", VA = "0xD697B0")]
		public void OnValidate()
		{
		}

		[Token(Token = "0x6001479")]
		[Address(RVA = "0xD697F8", Offset = "0xD697F8", VA = "0xD697F8")]
		public void Awake()
		{
		}

		[Token(Token = "0x600147A")]
		[Address(RVA = "0xD698F8", Offset = "0xD698F8", VA = "0xD698F8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600147B")]
		[Address(RVA = "0xD69B38", Offset = "0xD69B38", VA = "0xD69B38")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600147C")]
		[Address(RVA = "0xD699CC", Offset = "0xD699CC", VA = "0xD699CC")]
		private void AttachToCameraRendering()
		{
		}

		[Token(Token = "0x600147D")]
		[Address(RVA = "0xD69BA8", Offset = "0xD69BA8", VA = "0xD69BA8")]
		private void DetachFromCameraRendering()
		{
		}

		[Token(Token = "0x600147E")]
		[Address(RVA = "0xD69CBC", Offset = "0xD69CBC", VA = "0xD69CBC")]
		public void Clear()
		{
		}

		[Token(Token = "0x600147F")]
		[Address(RVA = "0xD69D10", Offset = "0xD69D10", VA = "0xD69D10")]
		private void UpdateVelocity()
		{
		}

		[Token(Token = "0x6001480")]
		[Address(RVA = "0xD69E1C", Offset = "0xD69E1C", VA = "0xD69E1C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001481")]
		[Address(RVA = "0xD69E8C", Offset = "0xD69E8C", VA = "0xD69E8C")]
		private void EmissionStep(float time)
		{
		}

		[Token(Token = "0x6001482")]
		[Address(RVA = "0xD697FC", Offset = "0xD697FC", VA = "0xD697FC")]
		private void Warmup()
		{
		}

		[Token(Token = "0x6001483")]
		[Address(RVA = "0xD6A6D8", Offset = "0xD6A6D8", VA = "0xD6A6D8")]
		private void PhysicsStep(float timestep)
		{
		}

		[Token(Token = "0x6001484")]
		[Address(RVA = "0xD6A8A0", Offset = "0xD6A8A0", VA = "0xD6A8A0")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001485")]
		[Address(RVA = "0xD6A4A8", Offset = "0xD6A4A8", VA = "0xD6A4A8")]
		public void EmitPoint(Vector3 position)
		{
		}

		[Token(Token = "0x6001486")]
		[Address(RVA = "0xD69FC8", Offset = "0xD69FC8", VA = "0xD69FC8")]
		private void SnapLastPointToTransform()
		{
		}

		[Token(Token = "0x6001487")]
		[Address(RVA = "0xD6A278", Offset = "0xD6A278", VA = "0xD6A278")]
		private void UpdatePointsLifecycle()
		{
		}

		[Token(Token = "0x6001488")]
		[Address(RVA = "0xD6A8EC", Offset = "0xD6A8EC", VA = "0xD6A8EC")]
		private void ClearMeshData()
		{
		}

		[Token(Token = "0x6001489")]
		[Address(RVA = "0xD6A9DC", Offset = "0xD6A9DC", VA = "0xD6A9DC")]
		private void CommitMeshData()
		{
		}

		[Token(Token = "0x600148A")]
		[Address(RVA = "0xD6AA7C", Offset = "0xD6AA7C", VA = "0xD6AA7C")]
		private void RenderMesh(Camera cam)
		{
		}

		[Token(Token = "0x600148B")]
		[Address(RVA = "0xD6AC1C", Offset = "0xD6AC1C", VA = "0xD6AC1C")]
		public float GetLenght(ElasticArray<Point> input)
		{
			return default(float);
		}

		[Token(Token = "0x600148C")]
		[Address(RVA = "0xD6AD1C", Offset = "0xD6AD1C", VA = "0xD6AD1C")]
		private ElasticArray<Point> GetRenderablePoints(int start, int end)
		{
			return null;
		}

		[Token(Token = "0x600148D")]
		[Address(RVA = "0xD6BD00", Offset = "0xD6BD00", VA = "0xD6BD00")]
		private CurveFrame InitializeCurveFrame(Vector3 point, Vector3 nextPoint)
		{
			return default(CurveFrame);
		}

		[Token(Token = "0x600148E")]
		[Address(RVA = "0xD6BE90", Offset = "0xD6BE90", VA = "0xD6BE90")]
		private void UpdateTrailMesh(Camera cam)
		{
		}

		[Token(Token = "0x600148F")]
		[Address(RVA = "0xD6C10C", Offset = "0xD6C10C", VA = "0xD6C10C")]
		private void UpdateSegmentMesh(int start, int end, Vector3 localCamPosition)
		{
		}

		[Token(Token = "0x6001490")]
		[Address(RVA = "0xD6C88C", Offset = "0xD6C88C", VA = "0xD6C88C")]
		private void AppendSection(Point[] data, ref CurveFrame frame, int i, int count, float sectionThickness, float vCoord)
		{
		}

		[Token(Token = "0x6001491")]
		[Address(RVA = "0xD6CD94", Offset = "0xD6CD94", VA = "0xD6CD94")]
		private void AppendFlatTrail(Point[] data, ref CurveFrame frame, int i, int count, float sectionThickness, float vCoord, ref int va, ref int vb)
		{
		}

		[Token(Token = "0x6001492")]
		[Address(RVA = "0xD6D8E0", Offset = "0xD6D8E0", VA = "0xD6D8E0")]
		public AraTrail()
		{
		}

		[Token(Token = "0x6001493")]
		[Address(RVA = "0xD6DCE4", Offset = "0xD6DCE4", VA = "0xD6DCE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1CA0", Offset = "0x8E1CA0")]
		private void <AttachToCameraRendering>b__84_0(ScriptableRenderContext cntxt, Camera cam)
		{
		}
	}
	[Token(Token = "0x2000341")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x8CD7AC", Offset = "0x8CD7AC")]
	public class ElasticArray<T> : IList<T>, ICollection<T>, IEnumerable<T>, IEnumerable
	{
		[Token(Token = "0x2000342")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD7E4", Offset = "0x8CD7E4")]
		private sealed class <GetEnumerator>d__2 : IEnumerator<T>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400176B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x400176C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private T <>2__current;

			[Token(Token = "0x400176D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ElasticArray<T> <>4__this;

			[Token(Token = "0x400176E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <i>5__2;

			[Token(Token = "0x1700025D")]
			private T System.Collections.Generic.IEnumerator<T>.Current
			{
				[Token(Token = "0x60014B0")]
				[DebuggerHidden]
				get
				{
					return (T)null;
				}
			}

			[Token(Token = "0x1700025E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60014B2")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60014AD")]
			[DebuggerHidden]
			public <GetEnumerator>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x60014AE")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60014AF")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60014B1")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T[] data;

		[Token(Token = "0x400176A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int count;

		[Token(Token = "0x17000259")]
		public int Count
		{
			[Token(Token = "0x60014A1")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700025A")]
		public bool IsReadOnly
		{
			[Token(Token = "0x60014A2")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700025B")]
		public T Item
		{
			[Token(Token = "0x60014A6")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x60014A7")]
			set
			{
			}
		}

		[Token(Token = "0x1700025C")]
		public T[] Data
		{
			[Token(Token = "0x60014A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600149A")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E1CB0", Offset = "0x8E1CB0")]
		public IEnumerator<T> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x600149B")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x600149C")]
		public void Add(T item)
		{
		}

		[Token(Token = "0x600149D")]
		public void Clear()
		{
		}

		[Token(Token = "0x600149E")]
		public bool Contains(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x600149F")]
		public void CopyTo(T[] array, int arrayIndex)
		{
		}

		[Token(Token = "0x60014A0")]
		public bool Remove(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x60014A3")]
		public int IndexOf(T item)
		{
			return default(int);
		}

		[Token(Token = "0x60014A4")]
		public void Insert(int index, T item)
		{
		}

		[Token(Token = "0x60014A5")]
		public void RemoveAt(int index)
		{
		}

		[Token(Token = "0x60014A9")]
		public void SetCount(int count)
		{
		}

		[Token(Token = "0x60014AA")]
		public void EnsureCapacity(int capacity)
		{
		}

		[Token(Token = "0x60014AB")]
		public void Reverse()
		{
		}

		[Token(Token = "0x60014AC")]
		public ElasticArray()
		{
		}
	}
	[Token(Token = "0x2000343")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8CD7F4", Offset = "0x8CD7F4")]
	public class ColorFromSpeed : MonoBehaviour
	{
		[Token(Token = "0x400176F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private AraTrail trail;

		[Token(Token = "0x4001770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DC9A0", Offset = "0x8DC9A0")]
		public Gradient colorFromSpeed;

		[Token(Token = "0x4001771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DC9D8", Offset = "0x8DC9D8")]
		public float minSpeed;

		[Token(Token = "0x4001772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DCA10", Offset = "0x8DCA10")]
		public float maxSpeed;

		[Token(Token = "0x60014B3")]
		[Address(RVA = "0xCBD358", Offset = "0xCBD358", VA = "0xCBD358")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60014B4")]
		[Address(RVA = "0xCBD410", Offset = "0xCBD410", VA = "0xCBD410")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60014B5")]
		[Address(RVA = "0xCBD4A4", Offset = "0xCBD4A4", VA = "0xCBD4A4")]
		private void SetColorFromSpeed()
		{
		}

		[Token(Token = "0x60014B6")]
		[Address(RVA = "0xCBD630", Offset = "0xCBD630", VA = "0xCBD630")]
		public ColorFromSpeed()
		{
		}
	}
	[Token(Token = "0x2000344")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8CD854", Offset = "0x8CD854")]
	public class ElectricalArc : MonoBehaviour
	{
		[Token(Token = "0x4001773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private AraTrail trail;

		[Token(Token = "0x4001774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform source;

		[Token(Token = "0x4001775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform target;

		[Token(Token = "0x4001776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int points;

		[Token(Token = "0x4001777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float burstInterval;

		[Token(Token = "0x4001778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float burstRandom;

		[Token(Token = "0x4001779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float speedRandom;

		[Token(Token = "0x400177A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float positionRandom;

		[Token(Token = "0x400177B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float accum;

		[Token(Token = "0x60014B7")]
		[Address(RVA = "0xCC7D60", Offset = "0xCC7D60", VA = "0xCC7D60")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60014B8")]
		[Address(RVA = "0xCC7DC0", Offset = "0xCC7DC0", VA = "0xCC7DC0")]
		private void Update()
		{
		}

		[Token(Token = "0x60014B9")]
		[Address(RVA = "0xCC7E28", Offset = "0xCC7E28", VA = "0xCC7E28")]
		private void ChangeArc()
		{
		}

		[Token(Token = "0x60014BA")]
		[Address(RVA = "0xCC8148", Offset = "0xCC8148", VA = "0xCC8148")]
		public ElectricalArc()
		{
		}
	}
	[Token(Token = "0x2000345")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8CD8B4", Offset = "0x8CD8B4")]
	public class TireTrack : MonoBehaviour
	{
		[Token(Token = "0x400177C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private AraTrail trail;

		[Token(Token = "0x400177D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float offset;

		[Token(Token = "0x400177E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float maxDist;

		[Token(Token = "0x60014BB")]
		[Address(RVA = "0x1144D4C", Offset = "0x1144D4C", VA = "0x1144D4C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60014BC")]
		[Address(RVA = "0x1144E04", Offset = "0x1144E04", VA = "0x1144E04")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60014BD")]
		[Address(RVA = "0x1144E98", Offset = "0x1144E98", VA = "0x1144E98")]
		private void ProjectToGround()
		{
		}

		[Token(Token = "0x60014BE")]
		[Address(RVA = "0x1145154", Offset = "0x1145154", VA = "0x1145154")]
		public TireTrack()
		{
		}
	}
	[Token(Token = "0x2000346")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8CD914", Offset = "0x8CD914")]
	public class TrailSection : ScriptableObject
	{
		[Token(Token = "0x400177F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public List<Vector2> vertices;

		[Token(Token = "0x4001780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int snapX;

		[Token(Token = "0x4001781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int snapY;

		[Token(Token = "0x1700025F")]
		public int Segments
		{
			[Token(Token = "0x60014BF")]
			[Address(RVA = "0x1145DA4", Offset = "0x1145DA4", VA = "0x1145DA4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60014C0")]
		[Address(RVA = "0x1145DF4", Offset = "0x1145DF4", VA = "0x1145DF4")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x60014C1")]
		[Address(RVA = "0x1145E80", Offset = "0x1145E80", VA = "0x1145E80")]
		public void CirclePreset(int segments)
		{
		}

		[Token(Token = "0x60014C2")]
		[Address(RVA = "0x1145FA0", Offset = "0x1145FA0", VA = "0x1145FA0")]
		public static int SnapTo(float val, int snapInterval, int threshold)
		{
			return default(int);
		}

		[Token(Token = "0x60014C3")]
		[Address(RVA = "0x1146024", Offset = "0x1146024", VA = "0x1146024")]
		public TrailSection()
		{
		}
	}
}
