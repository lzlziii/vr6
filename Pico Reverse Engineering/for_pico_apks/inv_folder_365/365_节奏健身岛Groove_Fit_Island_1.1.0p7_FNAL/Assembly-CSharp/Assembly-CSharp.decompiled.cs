using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.Diagnostics;
using System.IO;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using Cinemachine;
using Cysharp.Threading.Tasks;
using Cysharp.Threading.Tasks.CompilerServices;
using DG.Tweening;
using Fusion;
using Fusion.CodeGen;
using Fusion.Fluid;
using Fusion.Internal;
using Fusion.Sockets;
using Fusion.StatsInternal;
using Il2CppDummyDll;
using Imacreate.GrooveFitIsland;
using Imacreate.GrooveFitIsland.Core;
using Imacreate.GrooveFitIsland.Core.Achievement;
using Imacreate.GrooveFitIsland.Core.DataManagement;
using Imacreate.GrooveFitIsland.Core.FirebaseCoreLibrary;
using Imacreate.GrooveFitIsland.Core.GFIAvatarSystem;
using Imacreate.GrooveFitIsland.Core.Photon;
using Imacreate.GrooveFitIsland.Core.SceneChange;
using Imacreate.GrooveFitIsland.Firebase.Dto;
using Imacreate.GrooveFitIsland.Firebase.FirebaseFunctions;
using Imacreate.GrooveFitIsland.Firebase.Firestore;
using Imacreate.GrooveFitIsland.FirebaseFunctions;
using Imacreate.GrooveFitIsland.M1_Lobby;
using Imacreate.GrooveFitIsland.MedleyGame;
using Imacreate.GrooveFitIsland._99_ORGANIZE_LATER.Nishizawa.MedleyGame.Scripts.ItemPad;
using Imacreate.GrooveFitIsland.__Production__.Core.LanguageSelectProtein;
using Imacreate_AvatarSystem.VRMAvatarSystem;
using JetBrains.Annotations;
using MessagePipe;
using Microsoft.MixedReality.GraphicsTools;
using Obi;
using Photon.Voice.Fusion;
using Pico.Platform.Models;
using RootMotion.FinalIK;
using TMPro;
using Twity.DataModels.Core;
using Twity.DataModels.Entities;
using Twity.DataModels.Errors;
using Twity.DataModels.Trends;
using UniRx;
using Unity.XR.PXR;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Networking;
using UnityEngine.SceneManagement;
using UnityEngine.Serialization;
using UnityEngine.UI;
using UnityEngine.VFX;
using UnityEngine.Video;
using UnityEngine.XR;
using VRM;
using Zenject;
using __Imacreate__.Furuyama.Scripts.FirebaseGrooveFitIsland.FirebaseFunctions;
using __Imacreate__.__Production__.Core;
using __Imacreate__.__Production__.Core.Buttons;
using __Imacreate__.__Production__.Core.Character;
using __Imacreate__.__Production__.Core.DeviceType;
using __Imacreate__.__Production__.Core.Firebase;
using __Imacreate__.__Production__.Core.MedleyIsland;
using __Imacreate__.__Production__.Core.RestrictedString;
using __Imacreate__.__Production__.Core.SaveGameState;
using __Imacreate__.__Production__.Core.ThirdViewCamera;
using __Imacreate__.__Production__.Core.TouchPanel;
using __Imacreate__.__Production__.Core.TwitterPostingSystem.Domain.Twitter.Application;
using __Imacreate__.__Production__.Core.TwitterPostingSystem.View;
using __Imacreate__.__Production__.GrooveFitGames.Core;
using __Imacreate__.__Production__.GrooveFitGames.Core.AudioControll;
using __Imacreate__.__Production__.GrooveFitGames.Core.Calorie;
using __Imacreate__.__Production__.GrooveFitGames.Core.ComboAndScore;
using __Imacreate__.__Production__.GrooveFitGames.Core.CsvLog;
using __Imacreate__.__Production__.GrooveFitGames.Core.Endless;
using __Imacreate__.__Production__.GrooveFitGames.Core.FitPattern;
using __Imacreate__.__Production__.GrooveFitGames.Core.GameDirectionLogics;
using __Imacreate__.__Production__.GrooveFitGames.Core.Parameters;
using __Imacreate__.__Production__.GrooveFitGames.Core.PracticeAssist;
using __Imacreate__.__Production__.GrooveFitGames.Core.Result;
using __Imacreate__.__Production__.GrooveFitGames.Core.Score;
using __Imacreate__.__Production__.GrooveFitGames.GF0_Tennis;
using __Imacreate__.__Production__.GrooveFitGames.GF10_Fishing;
using __Imacreate__.__Production__.GrooveFitGames.GF11_Rugby;
using __Imacreate__.__Production__.GrooveFitGames.GF18_SilverMan.FitPattern;
using __Imacreate__.__Production__.GrooveFitGames.GF18_SilverMan.PlayerInput;
using __Imacreate__.__Production__.GrooveFitGames.GF1_Boxing;
using __Imacreate__.__Production__.GrooveFitGames.GF23_Golf;
using __Imacreate__.__Production__.GrooveFitGames.GF24_Baseball;
using __Imacreate__.__Production__.GrooveFitGames.GF4_WoodChopper.PlayerInput;
using __Imacreate__.__Production__.S2_Opening;
using __Imacreate__.__Production__.S3_GameSelect;
using __Imacreate__.__Production__.S3_GameSelect.FitSphere;
using __Imacreate__.__Production__.S3_GameSelect.MessagePipe;
using __Production__.Core.AssistUI;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000003")]
public class BasicFluidInteractorWithPause : BaseFluidInteractor
{
	[Token(Token = "0x17000003")]
	[Inject]
	private ISubscriber<OnPause> OnPauseMessage
	{
		[Token(Token = "0x6000007")]
		[Address(RVA = "0x197F6A4", Offset = "0x197F6A4", VA = "0x197F6A4")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000008")]
		[Address(RVA = "0x197F6AC", Offset = "0x197F6AC", VA = "0x197F6AC")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x6000009")]
	[Address(RVA = "0x197F6B4", Offset = "0x197F6B4", VA = "0x197F6B4", Slot = "5")]
	public override void Start()
	{
	}

	[Token(Token = "0x600000A")]
	[Address(RVA = "0x197F7EC", Offset = "0x197F7EC", VA = "0x197F7EC", Slot = "4")]
	public override void FluidUpdate()
	{
	}

	[Token(Token = "0x600000B")]
	[Address(RVA = "0x197FA98", Offset = "0x197FA98", VA = "0x197FA98")]
	public BasicFluidInteractorWithPause()
	{
	}
}
[Token(Token = "0x2000004")]
[AddComponentMenu("FusionWater/_Examples/BoatController")]
public class BoatController : MonoBehaviour
{
	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float moveSpeed;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float turnSpeed;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Range(0.5f, 5f)]
	public float accelerationTime;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float accTime;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve accelerationCurve;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform boatMotor;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 startRotation;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Rigidbody rb;

	[Token(Token = "0x600000D")]
	[Address(RVA = "0x197FB18", Offset = "0x197FB18", VA = "0x197FB18")]
	private void Awake()
	{
	}

	[Token(Token = "0x600000E")]
	[Address(RVA = "0x197FB94", Offset = "0x197FB94", VA = "0x197FB94")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0x197FD48", Offset = "0x197FD48", VA = "0x197FD48")]
	public BoatController()
	{
	}
}
[Token(Token = "0x2000005")]
[AddComponentMenu("FusionWater/_Examples/DampedFollow")]
public class DampedFollow : MonoBehaviour
{
	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform followTransform;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float smoothTime;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float angleSmooth;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 velocity;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 angVel;

	[Token(Token = "0x6000010")]
	[Address(RVA = "0x197FD60", Offset = "0x197FD60", VA = "0x197FD60")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0x197FFB8", Offset = "0x197FFB8", VA = "0x197FFB8")]
	public DampedFollow()
	{
	}
}
[Token(Token = "0x2000006")]
public class GrabbableActionTest : GrabbableObject
{
	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	[SerializeField]
	private Renderer _renderer;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	[SerializeField]
	private TextMeshPro _text;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private Sequence _sequence;

	[Token(Token = "0x6000012")]
	[Address(RVA = "0x1980038", Offset = "0x1980038", VA = "0x1980038", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000013")]
	[Address(RVA = "0x19800C0", Offset = "0x19800C0", VA = "0x19800C0", Slot = "9")]
	public override void OnHovered(VRHand.HandType hand)
	{
	}

	[Token(Token = "0x6000014")]
	[Address(RVA = "0x19802DC", Offset = "0x19802DC", VA = "0x19802DC", Slot = "10")]
	protected override void OnUnHoveredWithoutGrab(VRHand.HandType hand)
	{
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0x198044C", Offset = "0x198044C", VA = "0x198044C", Slot = "11")]
	protected override void OnUnHoveredWithGrab(VRHand.HandType unHoveredHand, VRHand.HandType grabHand)
	{
	}

	[Token(Token = "0x6000016")]
	[Address(RVA = "0x19805D4", Offset = "0x19805D4", VA = "0x19805D4", Slot = "6")]
	public override void OnGrab(GameObject handObj, GameObject parentObj, VRHand.HandType hand)
	{
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0x1980764", Offset = "0x1980764", VA = "0x1980764", Slot = "7")]
	public override void OnRelease(GameObject handObj, VRHand.HandType hand)
	{
	}

	[Token(Token = "0x6000018")]
	[Address(RVA = "0x198088C", Offset = "0x198088C", VA = "0x198088C")]
	public GrabbableActionTest()
	{
	}
}
[Token(Token = "0x2000007")]
[RequireComponent(typeof(AudioSource))]
public class PhysicsPauseTest : MonoBehaviour
{
	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Inject]
	private InputProvider _inputProvider;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioClip _pause;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioClip _unpause;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private SnareDrumButtonManager _snareDrum;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _isPause;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private AudioSource _audio;

	[Token(Token = "0x6000019")]
	[Address(RVA = "0x1980894", Offset = "0x1980894", VA = "0x1980894")]
	private void Start()
	{
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0x19808F0", Offset = "0x19808F0", VA = "0x19808F0")]
	private void Update()
	{
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0x1980B3C", Offset = "0x1980B3C", VA = "0x1980B3C")]
	public PhysicsPauseTest()
	{
	}
}
[Token(Token = "0x2000008")]
public class CenterEyeCameraSettings : MonoBehaviour
{
	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Clipping Planes")]
	public float _near;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float _far;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Camera _centerEyeCamera;

	[Token(Token = "0x600001C")]
	[Address(RVA = "0x1980B44", Offset = "0x1980B44", VA = "0x1980B44")]
	public void SaveCenterEyeCamera(Camera cam)
	{
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0x1980B4C", Offset = "0x1980B4C", VA = "0x1980B4C")]
	public void SetClipping(float near, float far)
	{
	}

	[Token(Token = "0x600001E")]
	[Address(RVA = "0x1980C38", Offset = "0x1980C38", VA = "0x1980C38")]
	public Camera PlayerCamera()
	{
		return null;
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0x1980C40", Offset = "0x1980C40", VA = "0x1980C40")]
	public CenterEyeCameraSettings()
	{
	}
}
[Token(Token = "0x2000009")]
public class FadePanelManager : MonoBehaviour
{
	[Token(Token = "0x200000A")]
	public enum StartType
	{
		[Token(Token = "0x4000023")]
		None,
		[Token(Token = "0x4000024")]
		FadeIn,
		[Token(Token = "0x4000025")]
		Black
	}

	[StructLayout(3)]
	[Token(Token = "0x200000B")]
	[CompilerGenerated]
	private struct <FadeOut>d__7 : IAsyncStateMachine
	{
		[Token(Token = "0x4000026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncUniTaskMethodBuilder <>t__builder;

		[Token(Token = "0x4000028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FadePanelManager <>4__this;

		[Token(Token = "0x4000029")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x400002A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private DOTweenAsyncExtensions.TweenAwaiter <>u__1;

		[Token(Token = "0x6000026")]
		[Address(RVA = "0x19811F4", Offset = "0x19811F4", VA = "0x19811F4", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000027")]
		[Address(RVA = "0x1981540", Offset = "0x1981540", VA = "0x1981540", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x200000C")]
	[CompilerGenerated]
	private struct <FadeIn>d__8 : IAsyncStateMachine
	{
		[Token(Token = "0x400002B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x400002C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncUniTaskMethodBuilder <>t__builder;

		[Token(Token = "0x400002D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FadePanelManager <>4__this;

		[Token(Token = "0x400002E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x400002F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Ease ease;

		[Token(Token = "0x4000030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private DOTweenAsyncExtensions.TweenAwaiter <>u__1;

		[Token(Token = "0x6000028")]
		[Address(RVA = "0x198154C", Offset = "0x198154C", VA = "0x198154C", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000029")]
		[Address(RVA = "0x19818BC", Offset = "0x19818BC", VA = "0x19818BC", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x200000D")]
	[CompilerGenerated]
	private struct <OnSceneChange>d__10 : IAsyncStateMachine
	{
		[Token(Token = "0x4000031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x4000033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public StartType startType;

		[Token(Token = "0x4000034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public FadePanelManager <>4__this;

		[Token(Token = "0x4000035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float startWaitTime;

		[Token(Token = "0x4000036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private UniTask.Awaiter <>u__1;

		[Token(Token = "0x600002A")]
		[Address(RVA = "0x19818C8", Offset = "0x19818C8", VA = "0x19818C8", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x600002B")]
		[Address(RVA = "0x1981CB4", Offset = "0x1981CB4", VA = "0x1981CB4", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public StartType _startType;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float _startWaitTime;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Renderer _fadePanel;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Tweener _tweener;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static FadePanelManager instance;

	[Token(Token = "0x6000020")]
	[Address(RVA = "0x1980C54", Offset = "0x1980C54", VA = "0x1980C54")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0x1980E94", Offset = "0x1980E94", VA = "0x1980E94")]
	[AsyncStateMachine(typeof(<FadeOut>d__7))]
	public UniTask FadeOut(float time)
	{
		return default(UniTask);
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0x1981000", Offset = "0x1981000", VA = "0x1981000")]
	[AsyncStateMachine(typeof(<FadeIn>d__8))]
	public UniTask FadeIn(float time, Ease ease = Ease.InQuad)
	{
		return default(UniTask);
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0x1981174", Offset = "0x1981174", VA = "0x1981174")]
	public void SetFadePanelAlpha(float alpha)
	{
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0x1980DC0", Offset = "0x1980DC0", VA = "0x1980DC0")]
	[AsyncStateMachine(typeof(<OnSceneChange>d__10))]
	public void OnSceneChange(StartType startType, float startWaitTime)
	{
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0x19811EC", Offset = "0x19811EC", VA = "0x19811EC")]
	public FadePanelManager()
	{
	}
}
[Serializable]
[Token(Token = "0x200000E")]
public class GrabUtils
{
	[Token(Token = "0x200000F")]
	public enum Status
	{
		[Token(Token = "0x4000038")]
		Hover,
		[Token(Token = "0x4000039")]
		UnHover,
		[Token(Token = "0x400003A")]
		Grab,
		[Token(Token = "0x400003B")]
		Release
	}

	[Token(Token = "0x2000010")]
	public class Param
	{
		[Token(Token = "0x400003C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Status GrabStatus;

		[Token(Token = "0x400003D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public VRHand.HandType Hand;

		[Token(Token = "0x600002D")]
		[Address(RVA = "0x1981CC8", Offset = "0x1981CC8", VA = "0x1981CC8")]
		public Param()
		{
		}
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0x1981CC0", Offset = "0x1981CC0", VA = "0x1981CC0")]
	public GrabUtils()
	{
	}
}
[Token(Token = "0x2000011")]
public static class HandShapeUtils
{
	[Token(Token = "0x2000012")]
	public enum HandShapeKey
	{
		[Token(Token = "0x4000042")]
		Default,
		[Token(Token = "0x4000043")]
		IndexPointer,
		[Token(Token = "0x4000044")]
		GrabFitSphere,
		[Token(Token = "0x4000045")]
		GrabProtein,
		[Token(Token = "0x4000046")]
		GrabJewel,
		[Token(Token = "0x4000047")]
		GrabMallet,
		[Token(Token = "0x4000048")]
		GrabRacket,
		[Token(Token = "0x4000049")]
		GrabLeverSwitch,
		[Token(Token = "0x400004A")]
		GrabEndlessLeverSwitch,
		[Token(Token = "0x400004B")]
		GrabAxe,
		[Token(Token = "0x400004C")]
		GrabRod,
		[Token(Token = "0x400004D")]
		GrabClubTop,
		[Token(Token = "0x400004E")]
		GrabClubUnder,
		[Token(Token = "0x400004F")]
		GrabBat,
		[Token(Token = "0x4000050")]
		GrabClub
	}

	[StructLayout(3)]
	[Token(Token = "0x2000013")]
	[CompilerGenerated]
	private struct <SetHandShapeList>d__4 : IAsyncStateMachine
	{
		[Token(Token = "0x4000051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncUniTaskMethodBuilder <>t__builder;

		[Token(Token = "0x4000053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int <length>5__2;

		[Token(Token = "0x4000054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int <i>5__3;

		[Token(Token = "0x4000055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<float>[] <>7__wrap3;

		[Token(Token = "0x4000056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <>7__wrap4;

		[Token(Token = "0x4000057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UniTask<List<float>>.Awaiter <>u__1;

		[Token(Token = "0x6000032")]
		[Address(RVA = "0x19820EC", Offset = "0x19820EC", VA = "0x19820EC", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000033")]
		[Address(RVA = "0x1982714", Offset = "0x1982714", VA = "0x1982714", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x2000014")]
	[CompilerGenerated]
	private struct <ReadFile>d__7 : IAsyncStateMachine
	{
		[Token(Token = "0x4000058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncUniTaskMethodBuilder<List<float>> <>t__builder;

		[Token(Token = "0x400005A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandShapeKey key;

		[Token(Token = "0x400005B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UnityAsyncExtensions.ResourceRequestAwaiter <>u__1;

		[Token(Token = "0x6000034")]
		[Address(RVA = "0x1982720", Offset = "0x1982720", VA = "0x1982720", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000035")]
		[Address(RVA = "0x1982C0C", Offset = "0x1982C0C", VA = "0x1982C0C", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<float>[] _handShapeList;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool _initializeOneTime;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
	public static bool _initialized;

	[Token(Token = "0x600002E")]
	[Address(RVA = "0x1981CD0", Offset = "0x1981CD0", VA = "0x1981CD0")]
	[AsyncStateMachine(typeof(<SetHandShapeList>d__4))]
	public static UniTask SetHandShapeList()
	{
		return default(UniTask);
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0x1981E1C", Offset = "0x1981E1C", VA = "0x1981E1C")]
	public static void SetShape(HandShapeKey key, GameObject[] bones)
	{
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0x1981E8C", Offset = "0x1981E8C", VA = "0x1981E8C")]
	private static void GetPosRotFromList(HandShapeKey key, GameObject obj, int lineNum)
	{
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0x1982020", Offset = "0x1982020", VA = "0x1982020")]
	[AsyncStateMachine(typeof(<ReadFile>d__7))]
	private static UniTask<List<float>> ReadFile(HandShapeKey key)
	{
		return default(UniTask<List<float>>);
	}
}
[Token(Token = "0x2000015")]
public class PlayHandShape : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000016")]
	public class HandShapeEvent : UnityEvent<HandShapeUtils.HandShapeKey>
	{
		[Token(Token = "0x600003D")]
		[Address(RVA = "0x198347C", Offset = "0x198347C", VA = "0x198347C")]
		public HandShapeEvent()
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x2000018")]
	[CompilerGenerated]
	private struct <Awake>d__24 : IAsyncStateMachine
	{
		[Token(Token = "0x4000075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x4000077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PlayHandShape <>4__this;

		[Token(Token = "0x4000078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UniTask.Awaiter <>u__1;

		[Token(Token = "0x6000041")]
		[Address(RVA = "0x1983584", Offset = "0x1983584", VA = "0x1983584", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000042")]
		[Address(RVA = "0x1983BF8", Offset = "0x1983BF8", VA = "0x1983BF8", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("General Setting")]
	[SerializeField]
	private VRHand.HandType _handType;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform _rayForTouch;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly LayerMask _layerMask;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Header("Bone Setting")]
	[SerializeField]
	private GameObject _b_index1;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject _b_index2;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject _b_index3;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject _b_middle1;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject _b_middle2;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject _b_middle3;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private GameObject _b_pinky0;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private GameObject _b_pinky1;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private GameObject _b_pinky2;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private GameObject _b_pinky3;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private GameObject _b_ring1;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private GameObject _b_ring2;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private GameObject _b_ring3;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private GameObject _b_thumb0;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private GameObject _b_thumb1;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private GameObject _b_thumb2;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private GameObject _b_thumb3;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private HandShapeUtils.HandShapeKey? _nowShape;

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool[] _isShapeActive;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public HandShapeEvent OnShapeChanged;

	[Token(Token = "0x6000036")]
	[Address(RVA = "0x1982C64", Offset = "0x1982C64", VA = "0x1982C64")]
	[AsyncStateMachine(typeof(<Awake>d__24))]
	private void Awake()
	{
	}

	[Token(Token = "0x6000037")]
	[Address(RVA = "0x1982D18", Offset = "0x1982D18", VA = "0x1982D18")]
	public void SetHandShape(HandShapeUtils.HandShapeKey targetShape)
	{
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0x1983240", Offset = "0x1983240", VA = "0x1983240")]
	public void RemoveHandShape(HandShapeUtils.HandShapeKey targetShape)
	{
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0x1982D4C", Offset = "0x1982D4C", VA = "0x1982D4C")]
	private void SetShape(HandShapeUtils.HandShapeKey targetShape)
	{
	}

	[Token(Token = "0x600003A")]
	[Address(RVA = "0x1983274", Offset = "0x1983274", VA = "0x1983274")]
	public HandShapeUtils.HandShapeKey GetHandShape()
	{
		return default(HandShapeUtils.HandShapeKey);
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0x19832B0", Offset = "0x19832B0", VA = "0x19832B0")]
	private void Update()
	{
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0x1983454", Offset = "0x1983454", VA = "0x1983454")]
	public PlayHandShape()
	{
	}
}
[Token(Token = "0x2000019")]
[RequireComponent(typeof(AudioSource))]
public class RecordHandShape : MonoBehaviour
{
	[Token(Token = "0x200001A")]
	private enum HandType
	{
		[Token(Token = "0x400008F")]
		Left,
		[Token(Token = "0x4000090")]
		Right
	}

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("General Setting")]
	[SerializeField]
	private HandType _handType;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string _savePath;

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioClip _startRecordAudio;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AudioSource _audio;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Header("Bone Setting")]
	[SerializeField]
	private GameObject _b_index1;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject _b_index2;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject _b_index3;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject _b_middle1;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject _b_middle2;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private GameObject _b_middle3;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private GameObject _b_pinky0;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private GameObject _b_pinky1;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private GameObject _b_pinky2;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private GameObject _b_pinky3;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private GameObject _b_ring1;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private GameObject _b_ring2;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private GameObject _b_ring3;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private GameObject _b_thumb0;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private GameObject _b_thumb1;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private GameObject _b_thumb2;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private GameObject _b_thumb3;

	[Token(Token = "0x6000043")]
	[Address(RVA = "0x1983C04", Offset = "0x1983C04", VA = "0x1983C04")]
	private void Start()
	{
	}

	[Token(Token = "0x6000044")]
	[Address(RVA = "0x1983C5C", Offset = "0x1983C5C", VA = "0x1983C5C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0x1983C88", Offset = "0x1983C88", VA = "0x1983C88")]
	private void Record()
	{
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0x1984340", Offset = "0x1984340", VA = "0x1984340")]
	private void WritePosRotItem(GameObject obj, StreamWriter sw)
	{
	}

	[Token(Token = "0x6000047")]
	[Address(RVA = "0x19842C0", Offset = "0x19842C0", VA = "0x19842C0")]
	private string GetRecordFileDirectory()
	{
		return null;
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0x198467C", Offset = "0x198467C", VA = "0x198467C")]
	public void SetHandTransform()
	{
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0x1984B50", Offset = "0x1984B50", VA = "0x1984B50")]
	public RecordHandShape()
	{
	}
}
[Token(Token = "0x200001B")]
public class ObjectCollisionDisabler : MonoBehaviour
{
	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool TriggersOnly;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool IncludeTriggers;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Transform> Transforms;

	[Token(Token = "0x600004A")]
	[Address(RVA = "0x1984BA8", Offset = "0x1984BA8", VA = "0x1984BA8")]
	private void Start()
	{
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0x19856B8", Offset = "0x19856B8", VA = "0x19856B8")]
	public ObjectCollisionDisabler()
	{
	}
}
[Token(Token = "0x200001E")]
public class CircularBuffer<T> : IEnumerable<T>, IEnumerable
{
	[Token(Token = "0x200001F")]
	[CompilerGenerated]
	private sealed class <GetEnumerator>d__24 : IEnumerator<T>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400009F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x40000A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T <>2__current;

		[Token(Token = "0x40000A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public CircularBuffer<T> <>4__this;

		[Token(Token = "0x40000A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ArraySegment<T>[] <>7__wrap1;

		[Token(Token = "0x40000A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>7__wrap2;

		[Token(Token = "0x40000A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ArraySegment<T> <segment>5__4;

		[Token(Token = "0x40000A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <i>5__5;

		[Token(Token = "0x17000009")]
		private T System.Collections.Generic.IEnumerator<T>.Current
		{
			[Token(Token = "0x600006E")]
			[DebuggerHidden]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x1700000A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000070")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600006B")]
		[DebuggerHidden]
		public <GetEnumerator>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x600006C")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600006D")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600006F")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private readonly T[] _buffer;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int _start;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int _end;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int _size;

	[Token(Token = "0x17000004")]
	public int Capacity
	{
		[Token(Token = "0x6000056")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000005")]
	public bool IsFull
	{
		[Token(Token = "0x6000057")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000006")]
	public bool IsEmpty
	{
		[Token(Token = "0x6000058")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000007")]
	public int Size
	{
		[Token(Token = "0x6000059")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000008")]
	public T this[int index]
	{
		[Token(Token = "0x600005C")]
		get
		{
			return (T)null;
		}
		[Token(Token = "0x600005D")]
		set
		{
		}
	}

	[Token(Token = "0x6000054")]
	public CircularBuffer(int capacity)
	{
	}

	[Token(Token = "0x6000055")]
	public CircularBuffer(int capacity, T[] items)
	{
	}

	[Token(Token = "0x600005A")]
	public T Front()
	{
		return (T)null;
	}

	[Token(Token = "0x600005B")]
	public T Back()
	{
		return (T)null;
	}

	[Token(Token = "0x600005E")]
	public void Dequeue(T item)
	{
	}

	[Token(Token = "0x600005F")]
	public void Enqueue(T item)
	{
	}

	[Token(Token = "0x6000060")]
	public void PopBack()
	{
	}

	[Token(Token = "0x6000061")]
	public void PopFront()
	{
	}

	[Token(Token = "0x6000062")]
	public T[] ToArray()
	{
		return null;
	}

	[Token(Token = "0x6000063")]
	[IteratorStateMachine(typeof(CircularBuffer<>.<GetEnumerator>d__24))]
	public IEnumerator<T> GetEnumerator()
	{
		return null;
	}

	[Token(Token = "0x6000064")]
	private IEnumerator System.Collections.IEnumerable.GetEnumerator()
	{
		return null;
	}

	[Token(Token = "0x6000065")]
	private void ThrowIfEmpty(string message = "Cannot access an empty buffer.")
	{
	}

	[Token(Token = "0x6000066")]
	private void Increment(ref int index)
	{
	}

	[Token(Token = "0x6000067")]
	private void Decrement(ref int index)
	{
	}

	[Token(Token = "0x6000068")]
	private int InternalIndex(int index)
	{
		return default(int);
	}

	[Token(Token = "0x6000069")]
	private ArraySegment<T> ArrayOne()
	{
		return default(ArraySegment<T>);
	}

	[Token(Token = "0x600006A")]
	private ArraySegment<T> ArrayTwo()
	{
		return default(ArraySegment<T>);
	}
}
[Token(Token = "0x2000020")]
public class CollisionDisablerWithHand : SingletonMonoBehaviour<CollisionDisablerWithHand>
{
	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly bool _dontDestroyOnLoad;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject _leftHandParent;

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject _rightHandParent;

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Collider[] _leftHandColliders;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Collider[] _rigthHandColliders;

	[Token(Token = "0x1700000B")]
	protected override bool dontDestroyOnLoad
	{
		[Token(Token = "0x6000071")]
		[Address(RVA = "0x19858A4", Offset = "0x19858A4", VA = "0x19858A4", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0x19858AC", Offset = "0x19858AC", VA = "0x19858AC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0x1985930", Offset = "0x1985930", VA = "0x1985930")]
	public void SetActiveCollisionWithHand(bool active, VRHand.HandType hand, GameObject targetObject)
	{
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0x19859E8", Offset = "0x19859E8", VA = "0x19859E8")]
	private void SetCollision(bool active, Collider[] cols, Collider[] otherCols)
	{
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0x1985AA4", Offset = "0x1985AA4", VA = "0x1985AA4")]
	public CollisionDisablerWithHand()
	{
	}
}
[Token(Token = "0x2000021")]
public class HandColliderDetector : MonoBehaviour
{
	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VRHand.HandType _targetHand;

	[Token(Token = "0x6000076")]
	[Address(RVA = "0x1985AEC", Offset = "0x1985AEC", VA = "0x1985AEC")]
	public HandColliderDetector()
	{
	}
}
[Token(Token = "0x2000022")]
public class PhysicsHandMove : MonoBehaviour
{
	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private VRHand.HandType _hand;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform _target;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Rigidbody _parentRigidBody;

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private ConfigurableJoint _joint;

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float _penetrationThreshold;

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 _previousControllerPosition;

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Quaternion _previousRotation;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Rigidbody _thisRigidbody;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool _isPhysics;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool _isEnableMove;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float time;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Transform _handTransform;

	[Token(Token = "0x6000077")]
	[Address(RVA = "0x1985AF4", Offset = "0x1985AF4", VA = "0x1985AF4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0x1985B4C", Offset = "0x1985B4C", VA = "0x1985B4C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0x1985E4C", Offset = "0x1985E4C", VA = "0x1985E4C")]
	private void Update()
	{
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0x1985B64", Offset = "0x1985B64", VA = "0x1985B64")]
	private void SmoothCalcurate()
	{
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0x1986180", Offset = "0x1986180", VA = "0x1986180")]
	public void SetActiveHandPhysics(bool active)
	{
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0x198621C", Offset = "0x198621C", VA = "0x198621C")]
	public void SetActiveHandMove(bool active)
	{
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0x1986050", Offset = "0x1986050", VA = "0x1986050")]
	private Vector3 AngularVelocity(Quaternion current, Quaternion previous)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0x198624C", Offset = "0x198624C", VA = "0x198624C")]
	public PhysicsHandMove()
	{
	}
}
[Token(Token = "0x2000023")]
public static class ProjectEnvironmentParams
{
	[Token(Token = "0x2000024")]
	public enum Environment
	{
		[Token(Token = "0x40000BD")]
		Development,
		[Token(Token = "0x40000BE")]
		Staging,
		[Token(Token = "0x40000BF")]
		Production,
		[Token(Token = "0x40000C0")]
		None
	}

	[Token(Token = "0x2000025")]
	public enum NetworkMode
	{
		[Token(Token = "0x40000C2")]
		Online,
		[Token(Token = "0x40000C3")]
		Offline
	}

	[Token(Token = "0x40000B8")]
	public const Environment Env = Environment.Production;

	[Token(Token = "0x40000B9")]
	public const string FirebaseProjectId = "groovefitisland";

	[Token(Token = "0x40000BA")]
	public const string FirebaseApiKey = "AIzaSyCWI6SbL3lqayEEWAL96fdVTZhVeEnDnCI";

	[Token(Token = "0x40000BB")]
	public const NetworkMode NMode = NetworkMode.Online;

	[Token(Token = "0x600007F")]
	[Address(RVA = "0x1986268", Offset = "0x1986268", VA = "0x1986268")]
	public static string PicoAppID(Environment env)
	{
		return null;
	}
}
[Token(Token = "0x2000026")]
public class CameraRigComponent : MonoBehaviour
{
	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public XRReleasePlatformSettings.ReleasePlatform mode;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject head;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject leftHand;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject rightHand;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Camera _centerEyeCamera;

	[Token(Token = "0x6000080")]
	[Address(RVA = "0x198630C", Offset = "0x198630C", VA = "0x198630C")]
	public CameraRigComponent()
	{
	}
}
[Token(Token = "0x2000027")]
public class RootCameraRigManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000028")]
	private class ChildParam
	{
		[Token(Token = "0x40000D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform child;

		[Token(Token = "0x40000DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 localPos;

		[Token(Token = "0x40000DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Quaternion localRot;

		[Token(Token = "0x40000DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 localScale;

		[Token(Token = "0x600008E")]
		[Address(RVA = "0x198710C", Offset = "0x198710C", VA = "0x198710C")]
		public ChildParam()
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x200002A")]
	[CompilerGenerated]
	private struct <AdjustSteamControllers>d__28 : IAsyncStateMachine
	{
		[Token(Token = "0x40000DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x40000E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x40000E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RootCameraRigManager <>4__this;

		[Token(Token = "0x40000E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UniTask.Awaiter <>u__1;

		[Token(Token = "0x6000092")]
		[Address(RVA = "0x198779C", Offset = "0x198779C", VA = "0x198779C", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000093")]
		[Address(RVA = "0x1987D7C", Offset = "0x1987D7C", VA = "0x1987D7C", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("General")]
	public GameObject _head;

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject _leftHand;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject _rightHand;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public FadePanelManager _fadePanel;

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public CenterEyeCameraSettings _centerEyeCameraSettings;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Header("ItemsRoot")]
	public Transform _itemsRootHead;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform _itemsRootLeftHand;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform _itemsRootRightHand;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Header("TouchUI")]
	public TouchUIJudge _touchUIJudgeLeft;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TouchUIJudge _touchUIJudgeRight;

	[NonSerialized]
	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool _useTouchUI;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[Header("Physics & Shape Hand")]
	public GameObject _customHandL;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject _customHandR;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[Header("Dark Area Detector")]
	public DarkAreaDetector _darkAreaDetector;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[Header("CameraRig settings for each platform")]
	[SerializeField]
	private EachPlatformCameraRigSettings _eachPlatformCameraRigSettings;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static RootCameraRigManager instance;

	[Token(Token = "0x6000081")]
	[Address(RVA = "0x1986314", Offset = "0x1986314", VA = "0x1986314")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0x198652C", Offset = "0x198652C", VA = "0x198652C")]
	private void SwapChildren(Transform destroyRoot, Transform instanceRoot)
	{
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0x1986DC4", Offset = "0x1986DC4", VA = "0x1986DC4")]
	private void FadePanelAwake(RootCameraRigManager destroyRoot, RootCameraRigManager instanceRoot)
	{
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0x1986D98", Offset = "0x1986D98", VA = "0x1986D98")]
	private void SetCameraSettings(RootCameraRigManager destroyRoot, RootCameraRigManager instanceRoot)
	{
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0x1987114", Offset = "0x1987114", VA = "0x1987114")]
	public void SetHandShape(VRHand.HandType hand, HandShapeUtils.HandShapeKey targetShape)
	{
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0x19871A8", Offset = "0x19871A8", VA = "0x19871A8")]
	public void SetActiveHandPhysics(bool active)
	{
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0x1987298", Offset = "0x1987298", VA = "0x1987298")]
	public void SetActiveHandMove(VRHand.HandType hand, bool active)
	{
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0x198732C", Offset = "0x198732C", VA = "0x198732C")]
	public void SetActiveHandGrab(VRHand.HandType hand, bool active)
	{
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0x1987464", Offset = "0x1987464", VA = "0x1987464")]
	public void SetHandFade(bool active)
	{
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0x1986DF4", Offset = "0x1986DF4", VA = "0x1986DF4")]
	private void InitializeCameraRig(GameObject rootCameraRig)
	{
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0x1987540", Offset = "0x1987540", VA = "0x1987540")]
	private (GameObject, Vector3, Vector3) InstantiateCameraRigPrefab(Transform tf)
	{
		return default((GameObject, Vector3, Vector3));
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0x1987620", Offset = "0x1987620", VA = "0x1987620")]
	[AsyncStateMachine(typeof(<AdjustSteamControllers>d__28))]
	private void AdjustSteamControllers()
	{
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0x19876D4", Offset = "0x19876D4", VA = "0x19876D4")]
	public RootCameraRigManager()
	{
	}
}
[Token(Token = "0x200002B")]
public static class XRReleasePlatformSettings
{
	[Token(Token = "0x200002C")]
	public enum ReleasePlatform
	{
		[Token(Token = "0x40000E4")]
		MetaQuest,
		[Token(Token = "0x40000E5")]
		AppLab,
		[Token(Token = "0x40000E6")]
		Rift,
		[Token(Token = "0x40000E7")]
		SteamVR,
		[Token(Token = "0x40000E8")]
		Pico,
		[Token(Token = "0x40000E9")]
		PicoChinaStore
	}

	[Token(Token = "0x200002D")]
	public static class Params
	{
		[Token(Token = "0x40000EA")]
		public const ReleasePlatform CurrentPlatform = ReleasePlatform.PicoChinaStore;
	}
}
[Token(Token = "0x200002E")]
public class TouchUIInputModule : PointerInputModule
{
	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Inject]
	private InputProvider _inputProvider;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float MaxDistance;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[Tooltip("Canvases for UI pointer interaction.")]
	public List<Canvas> UICanvases;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[Tooltip("Angle the pointer has to move before a drag starts, too low and click events on a scroll rect will not execute")]
	public float AngleDragThreshold;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public TouchUIManager _TouchUIManager;

	[Token(Token = "0x1700000C")]
	public static TouchUIInputModule Instance
	{
		[Token(Token = "0x6000094")]
		[Address(RVA = "0x1987D88", Offset = "0x1987D88", VA = "0x1987D88")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000095")]
		[Address(RVA = "0x1987DD0", Offset = "0x1987DD0", VA = "0x1987DD0")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700000D")]
	public List<TouchUIPointer> Pointers
	{
		[Token(Token = "0x6000096")]
		[Address(RVA = "0x1987E28", Offset = "0x1987E28", VA = "0x1987E28")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000097")]
		[Address(RVA = "0x1987E30", Offset = "0x1987E30", VA = "0x1987E30")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0x1987E38", Offset = "0x1987E38", VA = "0x1987E38", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0x1988164", Offset = "0x1988164", VA = "0x1988164")]
	public void AddPointer(TouchUIPointer pointer)
	{
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0x19882F8", Offset = "0x19882F8", VA = "0x19882F8")]
	public void AddCanvas(Canvas canvas)
	{
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0x19883E0", Offset = "0x19883E0", VA = "0x19883E0")]
	public void RemoveCanvas(Canvas canvas)
	{
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0x1988470", Offset = "0x1988470", VA = "0x1988470", Slot = "17")]
	public override void Process()
	{
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0x19893F0", Offset = "0x19893F0", VA = "0x19893F0")]
	private static void ProcessScroll(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0x19889DC", Offset = "0x19889DC", VA = "0x19889DC")]
	protected bool SendUpdateEventToSelectedObject()
	{
		return default(bool);
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0x198956C", Offset = "0x198956C", VA = "0x198956C", Slot = "30")]
	protected override void ProcessDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0x19897D4", Offset = "0x19897D4", VA = "0x19897D4")]
	private bool ShouldStartDrag(PointerEventData eventData)
	{
		return default(bool);
	}

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0x1988C9C", Offset = "0x1988C9C", VA = "0x1988C9C")]
	private void ProcessPress(TouchUIPointer pointer)
	{
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0x1989004", Offset = "0x1989004", VA = "0x1989004")]
	private void ProcessRelease(TouchUIPointer pointer)
	{
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0x1989A3C", Offset = "0x1989A3C", VA = "0x1989A3C")]
	public TouchUIInputModule()
	{
	}
}
[Token(Token = "0x200002F")]
public class TouchUIJudge : MonoBehaviour
{
	[NonSerialized]
	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool _isActive;

	[NonSerialized]
	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool _isJustActivated;

	[NonSerialized]
	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool _isJustDeactivated;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	private bool isCurrentFrame;

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0x1989AD4", Offset = "0x1989AD4", VA = "0x1989AD4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0x1989B50", Offset = "0x1989B50", VA = "0x1989B50")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0x1989BC8", Offset = "0x1989BC8", VA = "0x1989BC8")]
	private void Update()
	{
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0x1989BE0", Offset = "0x1989BE0", VA = "0x1989BE0")]
	public TouchUIJudge()
	{
	}
}
[Token(Token = "0x2000030")]
public class TouchUIManager : MonoBehaviour
{
	[Token(Token = "0x2000031")]
	public class TouchState
	{
		[Token(Token = "0x40000F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool _isActive;

		[Token(Token = "0x40000F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool _isJustActivated;

		[Token(Token = "0x40000F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public bool _isJustDeactivated;

		[Token(Token = "0x60000AB")]
		[Address(RVA = "0x1989C40", Offset = "0x1989C40", VA = "0x1989C40")]
		public TouchState()
		{
		}
	}

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Inject]
	private InputProvider _inputProvider;

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0x1989BE8", Offset = "0x1989BE8", VA = "0x1989BE8")]
	private void Start()
	{
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0x1988B24", Offset = "0x1988B24", VA = "0x1988B24")]
	public TouchState GetTouchState(VRHand.HandType hand)
	{
		return null;
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0x1989D08", Offset = "0x1989D08", VA = "0x1989D08")]
	public TouchUIManager()
	{
	}
}
[Token(Token = "0x2000032")]
[RequireComponent(typeof(Camera))]
public class TouchUIPointer : MonoBehaviour
{
	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VRHand.HandType _handType;

	[NonSerialized]
	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject CurrentUIElement;

	[Token(Token = "0x1700000E")]
	public Camera Camera
	{
		[Token(Token = "0x60000AC")]
		[Address(RVA = "0x1989D10", Offset = "0x1989D10", VA = "0x1989D10")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60000AD")]
		[Address(RVA = "0x1989D18", Offset = "0x1989D18", VA = "0x1989D18")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700000F")]
	public PointerEventData PointerEventData
	{
		[Token(Token = "0x60000AE")]
		[Address(RVA = "0x1989D20", Offset = "0x1989D20", VA = "0x1989D20")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60000AF")]
		[Address(RVA = "0x1989D28", Offset = "0x1989D28", VA = "0x1989D28")]
		[CompilerGenerated]
		internal set
		{
		}
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0x1989D30", Offset = "0x1989D30", VA = "0x1989D30")]
	private void Start()
	{
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0x19888D8", Offset = "0x19888D8", VA = "0x19888D8")]
	internal void Process()
	{
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0x1989D88", Offset = "0x1989D88", VA = "0x1989D88")]
	public TouchUIPointer()
	{
	}
}
[Token(Token = "0x2000033")]
public class InputProvider : MonoBehaviour, IVRInteractionSupplier
{
	[StructLayout(3)]
	[Token(Token = "0x2000034")]
	[CompilerGenerated]
	private struct <FadeOut>d__7 : IAsyncStateMachine
	{
		[Token(Token = "0x40000FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000100")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncUniTaskMethodBuilder <>t__builder;

		[Token(Token = "0x4000101")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float time;

		[Token(Token = "0x4000102")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private UniTask.Awaiter <>u__1;

		[Token(Token = "0x60000DB")]
		[Address(RVA = "0x198B544", Offset = "0x198B544", VA = "0x198B544", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x60000DC")]
		[Address(RVA = "0x198B934", Offset = "0x198B934", VA = "0x198B934", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x2000035")]
	[CompilerGenerated]
	private struct <FadeIn>d__8 : IAsyncStateMachine
	{
		[Token(Token = "0x4000103")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncUniTaskMethodBuilder <>t__builder;

		[Token(Token = "0x4000105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float time;

		[Token(Token = "0x4000106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Ease ease;

		[Token(Token = "0x4000107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private UniTask.Awaiter <>u__1;

		[Token(Token = "0x60000DD")]
		[Address(RVA = "0x198B940", Offset = "0x198B940", VA = "0x198B940", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x60000DE")]
		[Address(RVA = "0x198BD34", Offset = "0x198BD34", VA = "0x198BD34", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Inject]
	private IVRInteractionSupplier _vrInput;

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0x1989D90", Offset = "0x1989D90", VA = "0x1989D90")]
	public Transform Head()
	{
		return null;
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0x1989DEC", Offset = "0x1989DEC", VA = "0x1989DEC")]
	public Transform CameraRigRoot()
	{
		return null;
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0x1989E40", Offset = "0x1989E40", VA = "0x1989E40")]
	public Camera PlayerCamera()
	{
		return null;
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0x1989E9C", Offset = "0x1989E9C", VA = "0x1989E9C")]
	public Transform Hand(VRHand.HandType hand)
	{
		return null;
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0x1989F64", Offset = "0x1989F64", VA = "0x1989F64")]
	public Transform HeadItemsRoot()
	{
		return null;
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0x1989FC0", Offset = "0x1989FC0", VA = "0x1989FC0")]
	public Transform HandItemsRoot(VRHand.HandType hand)
	{
		return null;
	}

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0x198A088", Offset = "0x198A088", VA = "0x198A088")]
	[AsyncStateMachine(typeof(<FadeOut>d__7))]
	public UniTask FadeOut(float time)
	{
		return default(UniTask);
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0x198A1E0", Offset = "0x198A1E0", VA = "0x198A1E0")]
	[AsyncStateMachine(typeof(<FadeIn>d__8))]
	public UniTask FadeIn(float time, Ease ease = Ease.InQuad)
	{
		return default(UniTask);
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0x198A340", Offset = "0x198A340", VA = "0x198A340")]
	public void SetFadePanelAlpha(float alpha)
	{
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0x198A3A8", Offset = "0x198A3A8", VA = "0x198A3A8")]
	public void SetActiveDarkAreaDetector(bool active)
	{
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0x1989C48", Offset = "0x1989C48", VA = "0x1989C48")]
	public TouchUIJudge GetTouchUIJudge(VRHand.HandType hand)
	{
		return null;
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0x198A40C", Offset = "0x198A40C", VA = "0x198A40C")]
	public void SetTouchInteractionActive(bool active)
	{
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0x198A468", Offset = "0x198A468", VA = "0x198A468")]
	public void SetHandShape(HandShapeUtils.HandShapeKey shape, VRHand.HandType targetHand)
	{
	}

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0x198A550", Offset = "0x198A550", VA = "0x198A550")]
	public void RemoveHandShape(HandShapeUtils.HandShapeKey shape, VRHand.HandType targetHand)
	{
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0x198A638", Offset = "0x198A638", VA = "0x198A638")]
	public HandShapeUtils.HandShapeKey GetHandShape(VRHand.HandType targetHand)
	{
		return default(HandShapeUtils.HandShapeKey);
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0x198A744", Offset = "0x198A744", VA = "0x198A744")]
	public void SetActiveHandPhysics(bool active)
	{
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0x198A7EC", Offset = "0x198A7EC", VA = "0x198A7EC")]
	public void SetActiveHandMove(VRHand.HandType hand, bool active)
	{
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0x198A89C", Offset = "0x198A89C", VA = "0x198A89C")]
	public void SetActiveHandGrab(VRHand.HandType hand, bool active)
	{
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0x198A94C", Offset = "0x198A94C", VA = "0x198A94C")]
	public void SetHandFade(bool active)
	{
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0x198A9F4", Offset = "0x198A9F4", VA = "0x198A9F4", Slot = "4")]
	public bool GetTrigger(VRHand.HandType hand)
	{
		return default(bool);
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0x198AA9C", Offset = "0x198AA9C", VA = "0x198AA9C", Slot = "5")]
	public bool GetTriggerDown(VRHand.HandType hand)
	{
		return default(bool);
	}

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0x198AB48", Offset = "0x198AB48", VA = "0x198AB48", Slot = "6")]
	public bool GetTriggerUp(VRHand.HandType hand)
	{
		return default(bool);
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0x198ABF4", Offset = "0x198ABF4", VA = "0x198ABF4", Slot = "7")]
	public bool GetHold(VRHand.HandType hand)
	{
		return default(bool);
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0x198ACA0", Offset = "0x198ACA0", VA = "0x198ACA0", Slot = "8")]
	public bool GetHoldDown(VRHand.HandType hand)
	{
		return default(bool);
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0x198AD4C", Offset = "0x198AD4C", VA = "0x198AD4C", Slot = "9")]
	public bool GetHoldUp(VRHand.HandType hand)
	{
		return default(bool);
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0x198ADF8", Offset = "0x198ADF8", VA = "0x198ADF8", Slot = "10")]
	public bool GetStick(VRHand.HandType hand)
	{
		return default(bool);
	}

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0x198AEA4", Offset = "0x198AEA4", VA = "0x198AEA4", Slot = "11")]
	public bool GetStickDown(VRHand.HandType hand)
	{
		return default(bool);
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0x198AF50", Offset = "0x198AF50", VA = "0x198AF50", Slot = "12")]
	public bool GetStickUp(VRHand.HandType hand)
	{
		return default(bool);
	}

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0x198AFFC", Offset = "0x198AFFC", VA = "0x198AFFC", Slot = "13")]
	public bool GetAButton()
	{
		return default(bool);
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0x198B0A0", Offset = "0x198B0A0", VA = "0x198B0A0", Slot = "14")]
	public bool GetAButtonDown()
	{
		return default(bool);
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0x1980A98", Offset = "0x1980A98", VA = "0x1980A98", Slot = "15")]
	public bool GetBButtonDown()
	{
		return default(bool);
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0x198B144", Offset = "0x198B144", VA = "0x198B144", Slot = "16")]
	public bool GetXButtonDown()
	{
		return default(bool);
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0x198B1E8", Offset = "0x198B1E8", VA = "0x198B1E8", Slot = "17")]
	public bool GetYButtonDown()
	{
		return default(bool);
	}

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0x19809EC", Offset = "0x19809EC", VA = "0x19809EC", Slot = "18")]
	public bool GetMenuButtonDown(VRHand.HandType hand)
	{
		return default(bool);
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0x198B28C", Offset = "0x198B28C", VA = "0x198B28C", Slot = "19")]
	public bool GetControllerTracked(VRHand.HandType hand)
	{
		return default(bool);
	}

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0x198B338", Offset = "0x198B338", VA = "0x198B338", Slot = "20")]
	public float RawAxis1DTrigger(VRHand.HandType hand)
	{
		return default(float);
	}

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0x198B3E4", Offset = "0x198B3E4", VA = "0x198B3E4", Slot = "21")]
	public float RawAxis1DHold(VRHand.HandType hand)
	{
		return default(float);
	}

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0x198B490", Offset = "0x198B490", VA = "0x198B490", Slot = "22")]
	public Vector2 RawAxis2DStick(VRHand.HandType hand)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0x1988BD8", Offset = "0x1988BD8", VA = "0x1988BD8", Slot = "23")]
	public void SetControllerVibration(float strength, float time, VRHand.HandType hand)
	{
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0x198B53C", Offset = "0x198B53C", VA = "0x198B53C")]
	public InputProvider()
	{
	}
}
[Token(Token = "0x2000036")]
public interface IVRInteractionSupplier
{
	[Token(Token = "0x60000DF")]
	bool GetTrigger(VRHand.HandType hand);

	[Token(Token = "0x60000E0")]
	bool GetTriggerDown(VRHand.HandType hand);

	[Token(Token = "0x60000E1")]
	bool GetTriggerUp(VRHand.HandType hand);

	[Token(Token = "0x60000E2")]
	bool GetHold(VRHand.HandType hand);

	[Token(Token = "0x60000E3")]
	bool GetHoldDown(VRHand.HandType hand);

	[Token(Token = "0x60000E4")]
	bool GetHoldUp(VRHand.HandType hand);

	[Token(Token = "0x60000E5")]
	bool GetStick(VRHand.HandType hand);

	[Token(Token = "0x60000E6")]
	bool GetStickDown(VRHand.HandType hand);

	[Token(Token = "0x60000E7")]
	bool GetStickUp(VRHand.HandType hand);

	[Token(Token = "0x60000E8")]
	bool GetAButton();

	[Token(Token = "0x60000E9")]
	bool GetAButtonDown();

	[Token(Token = "0x60000EA")]
	bool GetBButtonDown();

	[Token(Token = "0x60000EB")]
	bool GetXButtonDown();

	[Token(Token = "0x60000EC")]
	bool GetYButtonDown();

	[Token(Token = "0x60000ED")]
	bool GetMenuButtonDown(VRHand.HandType hand);

	[Token(Token = "0x60000EE")]
	bool GetControllerTracked(VRHand.HandType hand);

	[Token(Token = "0x60000EF")]
	float RawAxis1DTrigger(VRHand.HandType hand);

	[Token(Token = "0x60000F0")]
	float RawAxis1DHold(VRHand.HandType hand);

	[Token(Token = "0x60000F1")]
	Vector2 RawAxis2DStick(VRHand.HandType hand);

	[Token(Token = "0x60000F2")]
	void SetControllerVibration(float strength, float time, VRHand.HandType hand);
}
[Token(Token = "0x2000037")]
public class PicoInteractionSupplier : MonoBehaviour, IVRInteractionSupplier
{
	[Token(Token = "0x2000038")]
	private class PicoController
	{
		[Token(Token = "0x4000109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public InputDevice controller;

		[Token(Token = "0x400010A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly ButtonStatus trigger;

		[Token(Token = "0x400010B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ButtonStatus hold;

		[Token(Token = "0x400010C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly ButtonStatus primaryButton;

		[Token(Token = "0x400010D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly ButtonStatus secondaryButton;

		[Token(Token = "0x400010E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly ButtonStatus joystick;

		[Token(Token = "0x400010F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public readonly ButtonStatus menu;

		[Token(Token = "0x6000110")]
		[Address(RVA = "0x198C26C", Offset = "0x198C26C", VA = "0x198C26C")]
		public PicoController(InputDevice inputDevice)
		{
		}

		[Token(Token = "0x6000111")]
		[Address(RVA = "0x198C04C", Offset = "0x198C04C", VA = "0x198C04C")]
		public void UpdateButtonStatus()
		{
		}
	}

	[Token(Token = "0x2000039")]
	private class ButtonStatus
	{
		[Token(Token = "0x4000110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly InputFeatureUsage<bool> usage;

		[Token(Token = "0x4000111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isPressed;

		[Token(Token = "0x4000112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool isDown;

		[Token(Token = "0x4000113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool isUp;

		[Token(Token = "0x6000112")]
		[Address(RVA = "0x198D428", Offset = "0x198D428", VA = "0x198D428")]
		public ButtonStatus(InputFeatureUsage<bool> usage)
		{
		}

		[Token(Token = "0x6000113")]
		[Address(RVA = "0x198D464", Offset = "0x198D464", VA = "0x198D464")]
		public void UpdateStatus(bool newIsPressed)
		{
		}
	}

	[Token(Token = "0x200003A")]
	private enum InputType
	{
		[Token(Token = "0x4000115")]
		trigger,
		[Token(Token = "0x4000116")]
		hold,
		[Token(Token = "0x4000117")]
		primaryButton,
		[Token(Token = "0x4000118")]
		secondaryButton,
		[Token(Token = "0x4000119")]
		joystick,
		[Token(Token = "0x400011A")]
		menu
	}

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PicoController[] _controllers;

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0x198BD40", Offset = "0x198BD40", VA = "0x198BD40")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0x198BFC8", Offset = "0x198BFC8", VA = "0x198BFC8")]
	private void Update()
	{
	}

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0x198BD44", Offset = "0x198BD44", VA = "0x198BD44")]
	private void ConnectControllers()
	{
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0x198C4C4", Offset = "0x198C4C4", VA = "0x198C4C4")]
	private bool Get(PicoController controller, InputType inputType)
	{
		return default(bool);
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0x198C568", Offset = "0x198C568", VA = "0x198C568")]
	private bool GetDown(PicoController controller, InputType inputType)
	{
		return default(bool);
	}

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0x198C60C", Offset = "0x198C60C", VA = "0x198C60C")]
	private bool GetUp(PicoController controller, InputType inputType)
	{
		return default(bool);
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0x198C6B0", Offset = "0x198C6B0", VA = "0x198C6B0")]
	private bool GetBase(VRHand.HandType hand, InputType inputType, Func<PicoController, InputType, bool> func)
	{
		return default(bool);
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0x198C768", Offset = "0x198C768", VA = "0x198C768", Slot = "4")]
	public bool GetTrigger(VRHand.HandType hand)
	{
		return default(bool);
	}

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0x198C7FC", Offset = "0x198C7FC", VA = "0x198C7FC", Slot = "5")]
	public bool GetTriggerDown(VRHand.HandType hand)
	{
		return default(bool);
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0x198C890", Offset = "0x198C890", VA = "0x198C890", Slot = "6")]
	public bool GetTriggerUp(VRHand.HandType hand)
	{
		return default(bool);
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0x198C924", Offset = "0x198C924", VA = "0x198C924", Slot = "7")]
	public bool GetHold(VRHand.HandType hand)
	{
		return default(bool);
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0x198C9B8", Offset = "0x198C9B8", VA = "0x198C9B8", Slot = "8")]
	public bool GetHoldDown(VRHand.HandType hand)
	{
		return default(bool);
	}

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0x198CA4C", Offset = "0x198CA4C", VA = "0x198CA4C", Slot = "9")]
	public bool GetHoldUp(VRHand.HandType hand)
	{
		return default(bool);
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0x198CAE0", Offset = "0x198CAE0", VA = "0x198CAE0", Slot = "10")]
	public bool GetStick(VRHand.HandType hand)
	{
		return default(bool);
	}

	[Token(Token = "0x6000101")]
	[Address(RVA = "0x198CB74", Offset = "0x198CB74", VA = "0x198CB74", Slot = "11")]
	public bool GetStickDown(VRHand.HandType hand)
	{
		return default(bool);
	}

	[Token(Token = "0x6000102")]
	[Address(RVA = "0x198CC08", Offset = "0x198CC08", VA = "0x198CC08", Slot = "12")]
	public bool GetStickUp(VRHand.HandType hand)
	{
		return default(bool);
	}

	[Token(Token = "0x6000103")]
	[Address(RVA = "0x198CC9C", Offset = "0x198CC9C", VA = "0x198CC9C", Slot = "13")]
	public bool GetAButton()
	{
		return default(bool);
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0x198CD24", Offset = "0x198CD24", VA = "0x198CD24", Slot = "14")]
	public bool GetAButtonDown()
	{
		return default(bool);
	}

	[Token(Token = "0x6000105")]
	[Address(RVA = "0x198CDAC", Offset = "0x198CDAC", VA = "0x198CDAC", Slot = "15")]
	public bool GetBButtonDown()
	{
		return default(bool);
	}

	[Token(Token = "0x6000106")]
	[Address(RVA = "0x198CE34", Offset = "0x198CE34", VA = "0x198CE34", Slot = "16")]
	public bool GetXButtonDown()
	{
		return default(bool);
	}

	[Token(Token = "0x6000107")]
	[Address(RVA = "0x198CEBC", Offset = "0x198CEBC", VA = "0x198CEBC", Slot = "17")]
	public bool GetYButtonDown()
	{
		return default(bool);
	}

	[Token(Token = "0x6000108")]
	[Address(RVA = "0x198CF44", Offset = "0x198CF44", VA = "0x198CF44", Slot = "18")]
	public bool GetMenuButtonDown(VRHand.HandType hand)
	{
		return default(bool);
	}

	[Token(Token = "0x6000109")]
	[Address(RVA = "0x198CFD8", Offset = "0x198CFD8", VA = "0x198CFD8", Slot = "19")]
	public bool GetControllerTracked(VRHand.HandType hand)
	{
		return default(bool);
	}

	[Token(Token = "0x600010A")]
	[Address(RVA = "0x198D078", Offset = "0x198D078", VA = "0x198D078")]
	private float RawAxis1DBase(VRHand.HandType hand, InputFeatureUsage<float> usage)
	{
		return default(float);
	}

	[Token(Token = "0x600010B")]
	[Address(RVA = "0x198D11C", Offset = "0x198D11C", VA = "0x198D11C", Slot = "20")]
	public float RawAxis1DTrigger(VRHand.HandType hand)
	{
		return default(float);
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0x198D18C", Offset = "0x198D18C", VA = "0x198D18C", Slot = "21")]
	public float RawAxis1DHold(VRHand.HandType hand)
	{
		return default(float);
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0x198D1FC", Offset = "0x198D1FC", VA = "0x198D1FC", Slot = "22")]
	public Vector2 RawAxis2DStick(VRHand.HandType hand)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600010E")]
	[Address(RVA = "0x198D308", Offset = "0x198D308", VA = "0x198D308", Slot = "23")]
	public void SetControllerVibration(float strength, float time, VRHand.HandType hand)
	{
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0x198D420", Offset = "0x198D420", VA = "0x198D420")]
	public PicoInteractionSupplier()
	{
	}
}
[Token(Token = "0x200003B")]
public class VRHand
{
	[Token(Token = "0x200003C")]
	public enum HandType
	{
		[Token(Token = "0x400011C")]
		Left,
		[Token(Token = "0x400011D")]
		Right,
		[Token(Token = "0x400011E")]
		Either,
		[Token(Token = "0x400011F")]
		None
	}

	[Token(Token = "0x6000114")]
	[Address(RVA = "0x198D490", Offset = "0x198D490", VA = "0x198D490")]
	public VRHand()
	{
	}
}
[Token(Token = "0x200003D")]
public class VRInteractionInstaller : MonoInstaller
{
	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject _oculusInteractionPrefab;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject _steamInteractionPrefab;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject _picoInteractionPrefab;

	[Token(Token = "0x6000115")]
	[Address(RVA = "0x198D498", Offset = "0x198D498", VA = "0x198D498", Slot = "8")]
	public override void InstallBindings()
	{
	}

	[Token(Token = "0x6000116")]
	[Address(RVA = "0x198D524", Offset = "0x198D524", VA = "0x198D524")]
	public VRInteractionInstaller()
	{
	}
}
[Token(Token = "0x200003E")]
public abstract class EventBlock : MonoBehaviour
{
	[Token(Token = "0x6000117")]
	public abstract UniTask<bool> SetEvent(CancellationToken token);

	[Token(Token = "0x6000118")]
	[Address(RVA = "0x198D52C", Offset = "0x198D52C", VA = "0x198D52C")]
	protected EventBlock()
	{
	}
}
[Token(Token = "0x200003F")]
public class EventBlockDirector : EventDirector
{
	[StructLayout(3)]
	[Token(Token = "0x2000041")]
	[CompilerGenerated]
	private struct <StartEvents>d__3 : IAsyncStateMachine
	{
		[Token(Token = "0x4000127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncUniTaskMethodBuilder <>t__builder;

		[Token(Token = "0x4000129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CancellationToken token;

		[Token(Token = "0x400012A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EventBlockDirector <>4__this;

		[Token(Token = "0x400012B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UniTask.Awaiter <>u__1;

		[Token(Token = "0x400012C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Cysharp.Threading.Tasks.YieldAwaitable.Awaiter <>u__2;

		[Token(Token = "0x400012D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private UniTask<bool>.Awaiter <>u__3;

		[Token(Token = "0x600011F")]
		[Address(RVA = "0x198D7D0", Offset = "0x198D7D0", VA = "0x198D7D0", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000120")]
		[Address(RVA = "0x198E220", Offset = "0x198E220", VA = "0x198E220", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private EventBlock[] _eventBlockObjects;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int _eventNum;

	[Token(Token = "0x6000119")]
	[Address(RVA = "0x198D534", Offset = "0x198D534", VA = "0x198D534", Slot = "4")]
	public override void StandBy()
	{
	}

	[Token(Token = "0x600011A")]
	[Address(RVA = "0x198D5AC", Offset = "0x198D5AC", VA = "0x198D5AC", Slot = "5")]
	[AsyncStateMachine(typeof(<StartEvents>d__3))]
	public override UniTask StartEvents(CancellationToken token)
	{
		return default(UniTask);
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0x198D72C", Offset = "0x198D72C", VA = "0x198D72C")]
	public EventBlockDirector()
	{
	}
}
[Token(Token = "0x2000042")]
public abstract class EventDirector : MonoBehaviour
{
	[Token(Token = "0x6000121")]
	public abstract void StandBy();

	[Token(Token = "0x6000122")]
	public abstract UniTask StartEvents(CancellationToken token);

	[Token(Token = "0x6000123")]
	[Address(RVA = "0x198D734", Offset = "0x198D734", VA = "0x198D734")]
	protected EventDirector()
	{
	}
}
[Token(Token = "0x2000043")]
public class CancelEventsTest : MonoBehaviour
{
	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private EventDirector _eventConductor;

	[Token(Token = "0x6000124")]
	[Address(RVA = "0x198E22C", Offset = "0x198E22C", VA = "0x198E22C")]
	public CancelEventsTest()
	{
	}
}
[Token(Token = "0x2000044")]
public class SampleEventBlock : EventBlock
{
	[StructLayout(3)]
	[Token(Token = "0x2000046")]
	[CompilerGenerated]
	private struct <SetEvent>d__2 : IAsyncStateMachine
	{
		[Token(Token = "0x4000133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncUniTaskMethodBuilder<bool> <>t__builder;

		[Token(Token = "0x4000135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SampleEventBlock <>4__this;

		[Token(Token = "0x4000136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CancellationToken token;

		[Token(Token = "0x4000137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UniTask.Awaiter <>u__1;

		[Token(Token = "0x600012B")]
		[Address(RVA = "0x198E51C", Offset = "0x198E51C", VA = "0x198E51C", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x600012C")]
		[Address(RVA = "0x198EC64", Offset = "0x198EC64", VA = "0x198EC64", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x2000047")]
	[CompilerGenerated]
	private struct <CountDown>d__3 : IAsyncStateMachine
	{
		[Token(Token = "0x4000138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncUniTaskMethodBuilder <>t__builder;

		[Token(Token = "0x400013A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SampleEventBlock <>4__this;

		[Token(Token = "0x400013B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x400013C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CancellationToken token;

		[Token(Token = "0x400013D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UniTask.Awaiter <>u__1;

		[Token(Token = "0x600012D")]
		[Address(RVA = "0x198ECBC", Offset = "0x198ECBC", VA = "0x198ECBC", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x600012E")]
		[Address(RVA = "0x198F154", Offset = "0x198F154", VA = "0x198F154", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float _time;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Text _text;

	[Token(Token = "0x6000125")]
	[Address(RVA = "0x198E234", Offset = "0x198E234", VA = "0x198E234", Slot = "4")]
	[AsyncStateMachine(typeof(<SetEvent>d__2))]
	public override UniTask<bool> SetEvent(CancellationToken token)
	{
		return default(UniTask<bool>);
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0x198E310", Offset = "0x198E310", VA = "0x198E310")]
	[AsyncStateMachine(typeof(<CountDown>d__3))]
	private UniTask CountDown(float time, CancellationToken token)
	{
		return default(UniTask);
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0x198E490", Offset = "0x198E490", VA = "0x198E490")]
	public SampleEventBlock()
	{
	}
}
[Token(Token = "0x2000048")]
public class PlayAssistMotion : MonoBehaviour
{
	[StructLayout(3)]
	[Token(Token = "0x2000049")]
	[CompilerGenerated]
	private struct <Awake>d__19 : IAsyncStateMachine
	{
		[Token(Token = "0x400014E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x400014F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x4000150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PlayAssistMotion <>4__this;

		[Token(Token = "0x4000151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string <text>5__2;

		[Token(Token = "0x4000152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SwitchToThreadPoolAwaitable.Awaiter <>u__1;

		[Token(Token = "0x4000153")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private SwitchToMainThreadAwaitable.Awaiter <>u__2;

		[Token(Token = "0x6000138")]
		[Address(RVA = "0x198FBC4", Offset = "0x198FBC4", VA = "0x198FBC4", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000139")]
		[Address(RVA = "0x19901D8", Offset = "0x19901D8", VA = "0x19901D8", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject[] _playAssistItems;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool _isLocalPlayPos;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject _targetObj;

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int numFileLine;

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<string> _list;

	[Token(Token = "0x4000143")]
	private const int NumDataOfLine = 8;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int numLineOfFrame;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private TextAsset _useMotionCSVFile;

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private readonly CompositeDisposable _compositeDisposable;

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float _beatSave;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private IDisposable _disposable;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private TextAsset _musicSheet;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private SheetData _sheetData;

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float _maxBeat;

	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[SerializeField]
	private bool _isLongTeacherCsv;

	[Token(Token = "0x17000010")]
	[Inject]
	private ISubscriber<BeatData> OnBeat
	{
		[Token(Token = "0x600012F")]
		[Address(RVA = "0x198F160", Offset = "0x198F160", VA = "0x198F160")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000130")]
		[Address(RVA = "0x198F168", Offset = "0x198F168", VA = "0x198F168")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x6000131")]
	[Address(RVA = "0x198F170", Offset = "0x198F170", VA = "0x198F170")]
	[AsyncStateMachine(typeof(<Awake>d__19))]
	private void Awake()
	{
	}

	[Token(Token = "0x6000132")]
	[Address(RVA = "0x198F228", Offset = "0x198F228", VA = "0x198F228")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000133")]
	[Address(RVA = "0x198F2DC", Offset = "0x198F2DC", VA = "0x198F2DC")]
	public void SetAssistItemsActive(bool active)
	{
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0x198F334", Offset = "0x198F334", VA = "0x198F334")]
	private void SetHandPosAndRot(GameObject hand)
	{
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0x198F8FC", Offset = "0x198F8FC", VA = "0x198F8FC")]
	private void SkipToNextNumFileLineBasedOnFrameTime(float beat)
	{
	}

	[Token(Token = "0x6000136")]
	[Address(RVA = "0x198F9CC", Offset = "0x198F9CC", VA = "0x198F9CC")]
	public PlayAssistMotion()
	{
	}
}
[Token(Token = "0x200004A")]
public class RecordAssistMotion : MonoBehaviour
{
	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject[] _recordAssistItems;

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool _isPositionFromTargetObj;

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject _targetObj;

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AudioSource _audioSource;

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private AudioClip _startRecordAudio;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private AudioClip _endRecordAudio;

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private StreamWriter _sw;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string _recordMotionName;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private float _recordBeat;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[SerializeField]
	private int _recordFps;

	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private bool _isRecordNextPractice;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	private bool _isRecord;

	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
	private bool _isOneTime;

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float _time;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int _recordCnt;

	[Token(Token = "0x17000011")]
	[Inject]
	private ISubscriber<BeatData> OnBeat
	{
		[Token(Token = "0x600013A")]
		[Address(RVA = "0x19901E4", Offset = "0x19901E4", VA = "0x19901E4")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x600013B")]
		[Address(RVA = "0x19901EC", Offset = "0x19901EC", VA = "0x19901EC")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0x19901F4", Offset = "0x19901F4", VA = "0x19901F4")]
	private void Start()
	{
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0x1990354", Offset = "0x1990354", VA = "0x1990354")]
	private string SerializeItem(GameObject obj, float beat)
	{
		return null;
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0x199068C", Offset = "0x199068C", VA = "0x199068C")]
	private void GetPosAndRot(GameObject obj, out Vector3 pos, out Quaternion rot)
	{
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0x1990820", Offset = "0x1990820", VA = "0x1990820")]
	private void RecordOnOff()
	{
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0x1990ACC", Offset = "0x1990ACC", VA = "0x1990ACC")]
	private string GetRecordFileDirectory()
	{
		return null;
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0x1990BEC", Offset = "0x1990BEC", VA = "0x1990BEC")]
	public RecordAssistMotion()
	{
	}
}
[Token(Token = "0x200004B")]
public sealed class RecordCsvInfo
{
	[Token(Token = "0x17000012")]
	public int NumDataOfLine
	{
		[Token(Token = "0x6000143")]
		[Address(RVA = "0x1990D40", Offset = "0x1990D40", VA = "0x1990D40")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000013")]
	public int NumLineOfFrame
	{
		[Token(Token = "0x6000144")]
		[Address(RVA = "0x1990D48", Offset = "0x1990D48", VA = "0x1990D48")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000014")]
	public int TimeColumnOffset
	{
		[Token(Token = "0x6000145")]
		[Address(RVA = "0x1990D50", Offset = "0x1990D50", VA = "0x1990D50")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000015")]
	public int Step
	{
		[Token(Token = "0x6000146")]
		[Address(RVA = "0x1990D58", Offset = "0x1990D58", VA = "0x1990D58")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0x1990D60", Offset = "0x1990D60", VA = "0x1990D60")]
	public RecordCsvInfo(int numDataOfLine, int numLineOfFrame, int timeColumnOffset)
	{
	}
}
[Token(Token = "0x200004C")]
internal static class RecordCsvUtils
{
	[Token(Token = "0x6000148")]
	[Address(RVA = "0x1990DA0", Offset = "0x1990DA0", VA = "0x1990DA0")]
	public static List<float> ReadAsFloatList(this TextReader sr)
	{
		return null;
	}

	[Token(Token = "0x6000149")]
	[Address(RVA = "0x1990F78", Offset = "0x1990F78", VA = "0x1990F78")]
	public static List<float> ReadAsFloatList(string TextLines)
	{
		return null;
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0x19900FC", Offset = "0x19900FC", VA = "0x19900FC")]
	public static List<string> ReadAsStringList(string TextLines)
	{
		return null;
	}

	[Token(Token = "0x600014B")]
	[Address(RVA = "0x198F734", Offset = "0x198F734", VA = "0x198F734")]
	public static Vector3 ReadAsVector3(this List<string> list, ref int numFileLine)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600014C")]
	[Address(RVA = "0x199110C", Offset = "0x199110C", VA = "0x199110C")]
	public static Vector3 ReadAsVector3(this List<float> list, ref int numFileLine)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600014D")]
	[Address(RVA = "0x19911C0", Offset = "0x19911C0", VA = "0x19911C0")]
	public static Quaternion ReadAsQuaternion(this List<float> list, ref int numFileLine)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600014E")]
	[Address(RVA = "0x198F800", Offset = "0x198F800", VA = "0x198F800")]
	public static Quaternion ReadAsQuaternion(this List<string> list, ref int numFileLine)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600014F")]
	[Address(RVA = "0x199129C", Offset = "0x199129C", VA = "0x199129C")]
	public static void AddXYZ(this IList<float> list, Vector3 vector3)
	{
	}

	[Token(Token = "0x6000150")]
	[Address(RVA = "0x199141C", Offset = "0x199141C", VA = "0x199141C")]
	public static void AddXYZW(this IList<float> list, Quaternion quaternion)
	{
	}

	[Token(Token = "0x6000151")]
	public static void SetActive<T>(this T objs, bool active) where T : IEnumerable<GameObject>
	{
	}
}
[Token(Token = "0x200004D")]
public class ReadOnlyAttribute : UnityEngine.PropertyAttribute
{
	[Token(Token = "0x6000152")]
	[Address(RVA = "0x1991600", Offset = "0x1991600", VA = "0x1991600")]
	public ReadOnlyAttribute()
	{
	}
}
[Token(Token = "0x200004E")]
public static class LanguageSetting
{
	[Token(Token = "0x200004F")]
	public enum Language
	{
		[Token(Token = "0x400016B")]
		en,
		[Token(Token = "0x400016C")]
		ja,
		[Token(Token = "0x400016D")]
		fr,
		[Token(Token = "0x400016E")]
		de,
		[Token(Token = "0x400016F")]
		es,
		[Token(Token = "0x4000170")]
		ko,
		[Token(Token = "0x4000171")]
		zh_cn
	}

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Language currentLanguage;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly Dictionary<Language, string> LanguageText;

	[Token(Token = "0x6000153")]
	[Address(RVA = "0x1991608", Offset = "0x1991608", VA = "0x1991608")]
	public static Language GetSystemLanguage()
	{
		return default(Language);
	}
}
[Serializable]
[Token(Token = "0x2000050")]
public class MultilingualJsonData
{
	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public MultilingualJsonItem[] items;

	[Token(Token = "0x6000155")]
	[Address(RVA = "0x1991878", Offset = "0x1991878", VA = "0x1991878")]
	public MultilingualJsonData()
	{
	}
}
[Serializable]
[Token(Token = "0x2000051")]
public class MultilingualJsonItem
{
	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string key;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string value;

	[Token(Token = "0x6000156")]
	[Address(RVA = "0x1991880", Offset = "0x1991880", VA = "0x1991880")]
	public MultilingualJsonItem()
	{
	}
}
[Token(Token = "0x2000052")]
public class MultilingualTextManager : MonoBehaviour
{
	[Token(Token = "0x2000053")]
	public enum MaterialPreset
	{
		[Token(Token = "0x400017D")]
		Default,
		[Token(Token = "0x400017E")]
		OutlineBlack,
		[Token(Token = "0x400017F")]
		OutlineWhite,
		[Token(Token = "0x4000180")]
		ShadowWhite
	}

	[StructLayout(3)]
	[Token(Token = "0x2000054")]
	[CompilerGenerated]
	private struct <Awake>d__7 : IAsyncStateMachine
	{
		[Token(Token = "0x4000181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x4000183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MultilingualTextManager <>4__this;

		[Token(Token = "0x4000184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UniTask.Awaiter <>u__1;

		[Token(Token = "0x600015E")]
		[Address(RVA = "0x1991E4C", Offset = "0x1991E4C", VA = "0x1991E4C", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x600015F")]
		[Address(RVA = "0x1992420", Offset = "0x1992420", VA = "0x1992420", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x2000055")]
	[CompilerGenerated]
	private struct <SetMultilingualTexts>d__8 : IAsyncStateMachine
	{
		[Token(Token = "0x4000185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncUniTaskMethodBuilder <>t__builder;

		[Token(Token = "0x4000187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LanguageSetting.Language language;

		[Token(Token = "0x4000188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MultilingualTextManager <>4__this;

		[Token(Token = "0x4000189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool save;

		[Token(Token = "0x400018A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private LanguageSetting.Language <oldLanguage>5__2;

		[Token(Token = "0x400018B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UniTask.Awaiter <>u__1;

		[Token(Token = "0x6000160")]
		[Address(RVA = "0x199242C", Offset = "0x199242C", VA = "0x199242C", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000161")]
		[Address(RVA = "0x1992B1C", Offset = "0x1992B1C", VA = "0x1992B1C", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MultilingualTextManagerSettings _settings;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool _setTargetLanguage;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private LanguageSetting.Language _targetLanguage;

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool _awakeDone;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<string, string> multilingualJson;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public readonly BoolReactiveProperty onUpdateMultilingualLanguage;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public readonly BoolReactiveProperty onChangeMultilingualLanuage;

	[Token(Token = "0x6000157")]
	[Address(RVA = "0x1991888", Offset = "0x1991888", VA = "0x1991888")]
	[AsyncStateMachine(typeof(<Awake>d__7))]
	private void Awake()
	{
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0x199193C", Offset = "0x199193C", VA = "0x199193C")]
	[AsyncStateMachine(typeof(<SetMultilingualTexts>d__8))]
	public UniTask SetMultilingualTexts(LanguageSetting.Language language, bool save = true)
	{
		return default(UniTask);
	}

	[Token(Token = "0x6000159")]
	[Address(RVA = "0x1991AB4", Offset = "0x1991AB4", VA = "0x1991AB4")]
	public string GetValueFromKey(string key)
	{
		return null;
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0x1991BB8", Offset = "0x1991BB8", VA = "0x1991BB8")]
	public TMP_FontAsset GetFont()
	{
		return null;
	}

	[Token(Token = "0x600015B")]
	[Address(RVA = "0x1991C48", Offset = "0x1991C48", VA = "0x1991C48")]
	public Material GetMaterial(MaterialPreset preset)
	{
		return null;
	}

	[Token(Token = "0x600015C")]
	[Address(RVA = "0x1991DA0", Offset = "0x1991DA0", VA = "0x1991DA0")]
	public MultilingualTextManager()
	{
	}
}
[Token(Token = "0x2000056")]
[CreateAssetMenu(fileName = "MultilingualTextManagerSettings", menuName = "ScriptableObjects/MultilingualTextManagerSettings", order = 1)]
public class MultilingualTextManagerSettings : ScriptableObject
{
	[Serializable]
	[Token(Token = "0x2000057")]
	public class LanguageComponent
	{
		[Serializable]
		[Token(Token = "0x2000058")]
		public struct AdditionalMaterialSetting
		{
			[Token(Token = "0x4000193")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Material _outlineBlack;

			[Token(Token = "0x4000194")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Material _outlineWhite;

			[Token(Token = "0x4000195")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Material _shadowWhite;
		}

		[Token(Token = "0x400018E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string _name;

		[Token(Token = "0x400018F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TMP_FontAsset _font;

		[Token(Token = "0x4000190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AdditionalMaterialSetting _additionalMaterials;

		[Token(Token = "0x4000191")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float _sizeRatio;

		[Token(Token = "0x4000192")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public TextAsset _textCsv;

		[Token(Token = "0x6000163")]
		[Address(RVA = "0x1992B30", Offset = "0x1992B30", VA = "0x1992B30")]
		public LanguageComponent()
		{
		}
	}

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextAsset _keyListTxt;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LanguageComponent[] _languageList;

	[Token(Token = "0x6000162")]
	[Address(RVA = "0x1992B28", Offset = "0x1992B28", VA = "0x1992B28")]
	public MultilingualTextManagerSettings()
	{
	}
}
[Token(Token = "0x2000059")]
public class MultilingualTextMeshPro : MonoBehaviour
{
	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string _key;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool _changeLangSubscribe;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private MultilingualTextManager.MaterialPreset _materialPreset;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private TextMeshPro _textMeshPro;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private TextMeshProUGUI _textMeshProUGUI;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float _defaultFontSize;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Inject]
	private MultilingualTextManager _multilingualTextManager;

	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool _isFirst;

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string _rawTextSave;

	[Token(Token = "0x6000164")]
	[Address(RVA = "0x1992B40", Offset = "0x1992B40", VA = "0x1992B40")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000165")]
	[Address(RVA = "0x1992C90", Offset = "0x1992C90", VA = "0x1992C90")]
	public void SetCurrentLanguageText([Optional] string key)
	{
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0x1993194", Offset = "0x1993194", VA = "0x1993194")]
	public void SetRawText(string text)
	{
	}

	[Token(Token = "0x6000167")]
	[Address(RVA = "0x1992DDC", Offset = "0x1992DDC", VA = "0x1992DDC")]
	private void SetTextMeshPro()
	{
	}

	[Token(Token = "0x6000168")]
	[Address(RVA = "0x1992FB8", Offset = "0x1992FB8", VA = "0x1992FB8")]
	private void SetTextMeshProUGUI()
	{
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0x1993308", Offset = "0x1993308", VA = "0x1993308")]
	public MultilingualTextMeshPro()
	{
	}
}
[Token(Token = "0x200005A")]
public static class MultilingualTextUtils
{
	[Serializable]
	[Token(Token = "0x200005B")]
	public class TextKeyData
	{
		[Token(Token = "0x40001A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string[] key;

		[Token(Token = "0x6000170")]
		[Address(RVA = "0x19938B8", Offset = "0x19938B8", VA = "0x19938B8")]
		public TextKeyData()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200005C")]
	public class MultilingualTextJson
	{
		[Token(Token = "0x40001A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<MultilingualTextData> items;

		[Token(Token = "0x6000171")]
		[Address(RVA = "0x19938C0", Offset = "0x19938C0", VA = "0x19938C0")]
		public MultilingualTextJson()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200005D")]
	public class MultilingualTextData
	{
		[Token(Token = "0x40001A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string key;

		[Token(Token = "0x40001A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string value;

		[Token(Token = "0x6000172")]
		[Address(RVA = "0x19938C8", Offset = "0x19938C8", VA = "0x19938C8")]
		public MultilingualTextData()
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x200005E")]
	[CompilerGenerated]
	private struct <SaveMultilingualTextTxt>d__3 : IAsyncStateMachine
	{
		[Token(Token = "0x40001A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x40001A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncUniTaskMethodBuilder <>t__builder;

		[Token(Token = "0x40001A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string resourcesPath;

		[Token(Token = "0x40001A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LanguageSetting.Language language;

		[Token(Token = "0x40001A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string[] keys;

		[Token(Token = "0x40001A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string[] values;

		[Token(Token = "0x40001AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private StreamWriter <sw>5__2;

		[Token(Token = "0x40001AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int <i>5__3;

		[Token(Token = "0x40001AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private TaskAwaiter <>u__1;

		[Token(Token = "0x6000173")]
		[Address(RVA = "0x19938D0", Offset = "0x19938D0", VA = "0x19938D0", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000174")]
		[Address(RVA = "0x1993DC8", Offset = "0x1993DC8", VA = "0x1993DC8", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x200005F")]
	[CompilerGenerated]
	private struct <SaveKeysToTxt>d__5 : IAsyncStateMachine
	{
		[Token(Token = "0x40001AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x40001AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncUniTaskMethodBuilder <>t__builder;

		[Token(Token = "0x40001AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string[] keys;

		[Token(Token = "0x40001B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private StreamWriter <sw>5__2;

		[Token(Token = "0x40001B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__3;

		[Token(Token = "0x40001B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TaskAwaiter <>u__1;

		[Token(Token = "0x6000175")]
		[Address(RVA = "0x1993DD4", Offset = "0x1993DD4", VA = "0x1993DD4", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000176")]
		[Address(RVA = "0x199422C", Offset = "0x199422C", VA = "0x199422C", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x400019F")]
	private const string KeysTxtPath = "Assets/Imacreate_MultilingualTextSystem/Editor/Multilingual_Text_Keys.txt";

	[Token(Token = "0x600016B")]
	[Address(RVA = "0x19929A4", Offset = "0x19929A4", VA = "0x19929A4")]
	public static Dictionary<string, string> LoadMultilingualDictionary(LanguageSetting.Language language, MultilingualTextManagerSettings settings)
	{
		return null;
	}

	[Token(Token = "0x600016C")]
	[Address(RVA = "0x1993370", Offset = "0x1993370", VA = "0x1993370")]
	private static string MultilingualTxtPath(LanguageSetting.Language language)
	{
		return null;
	}

	[Token(Token = "0x600016D")]
	[Address(RVA = "0x1993434", Offset = "0x1993434", VA = "0x1993434")]
	[AsyncStateMachine(typeof(<SaveMultilingualTextTxt>d__3))]
	public static UniTask SaveMultilingualTextTxt(LanguageSetting.Language language, string[] keys, string[] values, string resourcesPath)
	{
		return default(UniTask);
	}

	[Token(Token = "0x600016E")]
	[Address(RVA = "0x19935D8", Offset = "0x19935D8", VA = "0x19935D8")]
	public static string[] LoadKeys(TextAsset keyListTxt)
	{
		return null;
	}

	[Token(Token = "0x600016F")]
	[Address(RVA = "0x1993758", Offset = "0x1993758", VA = "0x1993758")]
	[AsyncStateMachine(typeof(<SaveKeysToTxt>d__5))]
	public static UniTask SaveKeysToTxt(string[] keys)
	{
		return default(UniTask);
	}
}
[Token(Token = "0x2000060")]
public struct CalibrateSetting
{
	[Token(Token = "0x17000016")]
	public readonly Transform parent
	{
		[Token(Token = "0x6000177")]
		[Address(RVA = "0x1994238", Offset = "0x1994238", VA = "0x1994238")]
		[CompilerGenerated]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000017")]
	public readonly Vector3 position
	{
		[Token(Token = "0x6000178")]
		[Address(RVA = "0x1994240", Offset = "0x1994240", VA = "0x1994240")]
		[CompilerGenerated]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000018")]
	public readonly Quaternion rotation
	{
		[Token(Token = "0x6000179")]
		[Address(RVA = "0x199424C", Offset = "0x199424C", VA = "0x199424C")]
		[CompilerGenerated]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x600017A")]
	[Address(RVA = "0x1994258", Offset = "0x1994258", VA = "0x1994258")]
	public CalibrateSetting(Transform parent, Vector3 position, Quaternion rotation)
	{
	}
}
[Token(Token = "0x2000061")]
public class GameObjectIKTargetRepository : IKTargetRepositoryInterface
{
	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private GameObject head;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject pelvis;

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject leftHand;

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject leftElbow;

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject rightHand;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject rightElbow;

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject leftKnee;

	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject leftLeg;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject rightKnee;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameObject rightLeg;

	[Token(Token = "0x600017B")]
	[Address(RVA = "0x19942BC", Offset = "0x19942BC", VA = "0x19942BC")]
	public GameObjectIKTargetRepository()
	{
	}

	[Token(Token = "0x600017C")]
	[Address(RVA = "0x1994588", Offset = "0x1994588", VA = "0x1994588", Slot = "4")]
	public Transform getHead()
	{
		return null;
	}

	[Token(Token = "0x600017D")]
	[Address(RVA = "0x19945A4", Offset = "0x19945A4", VA = "0x19945A4", Slot = "5")]
	public Transform getPelvis()
	{
		return null;
	}

	[Token(Token = "0x600017E")]
	[Address(RVA = "0x19945C0", Offset = "0x19945C0", VA = "0x19945C0", Slot = "6")]
	public Transform getLeftHand()
	{
		return null;
	}

	[Token(Token = "0x600017F")]
	[Address(RVA = "0x19945DC", Offset = "0x19945DC", VA = "0x19945DC", Slot = "7")]
	public Transform getLeftElbow()
	{
		return null;
	}

	[Token(Token = "0x6000180")]
	[Address(RVA = "0x19945F8", Offset = "0x19945F8", VA = "0x19945F8", Slot = "8")]
	public Transform getRightHand()
	{
		return null;
	}

	[Token(Token = "0x6000181")]
	[Address(RVA = "0x1994614", Offset = "0x1994614", VA = "0x1994614", Slot = "9")]
	public Transform getRightElbow()
	{
		return null;
	}

	[Token(Token = "0x6000182")]
	[Address(RVA = "0x1994630", Offset = "0x1994630", VA = "0x1994630", Slot = "10")]
	public Transform getLeftKnee()
	{
		return null;
	}

	[Token(Token = "0x6000183")]
	[Address(RVA = "0x199464C", Offset = "0x199464C", VA = "0x199464C", Slot = "11")]
	public Transform getLeftLeg()
	{
		return null;
	}

	[Token(Token = "0x6000184")]
	[Address(RVA = "0x1994668", Offset = "0x1994668", VA = "0x1994668", Slot = "12")]
	public Transform getRightKnee()
	{
		return null;
	}

	[Token(Token = "0x6000185")]
	[Address(RVA = "0x1994684", Offset = "0x1994684", VA = "0x1994684", Slot = "13")]
	public Transform getRightLeg()
	{
		return null;
	}
}
[Token(Token = "0x2000062")]
public interface IKTargetRepositoryInterface
{
	[Token(Token = "0x6000186")]
	Transform getHead();

	[Token(Token = "0x6000187")]
	Transform getPelvis();

	[Token(Token = "0x6000188")]
	Transform getLeftHand();

	[Token(Token = "0x6000189")]
	Transform getLeftElbow();

	[Token(Token = "0x600018A")]
	Transform getRightHand();

	[Token(Token = "0x600018B")]
	Transform getRightElbow();

	[Token(Token = "0x600018C")]
	Transform getLeftKnee();

	[Token(Token = "0x600018D")]
	Transform getLeftLeg();

	[Token(Token = "0x600018E")]
	Transform getRightKnee();

	[Token(Token = "0x600018F")]
	Transform getRightLeg();
}
[Token(Token = "0x2000063")]
public class KotauchiPositionReplacer : MonoBehaviour
{
	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform tracker01;

	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform tracker02;

	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform tracker03;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform tracker04;

	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform tracker05;

	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform tracker06;

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform tracker07;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform tracker08;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform tracker09;

	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform tracker10;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform origin;

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public KotauchiTrackerDetectController detector;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Transform target;

	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Transform[] transformTargets;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private GameObject[] gameObjects;

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private GameObject transformOrigin;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float rotY;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private bool init;

	[Token(Token = "0x6000190")]
	[Address(RVA = "0x19946A0", Offset = "0x19946A0", VA = "0x19946A0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000191")]
	[Address(RVA = "0x1994A20", Offset = "0x1994A20", VA = "0x1994A20")]
	private void Update()
	{
	}

	[Token(Token = "0x6000192")]
	[Address(RVA = "0x1995254", Offset = "0x1995254", VA = "0x1995254")]
	public KotauchiPositionReplacer()
	{
	}
}
[Token(Token = "0x2000065")]
public class KotauchiTrackerDetectController : MonoBehaviour
{
	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public KotauchiVRIKController controller;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform tracker01;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform tracker02;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform tracker03;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform tracker04;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform tracker05;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform tracker06;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform tracker07;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform tracker08;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform tracker09;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform tracker10;

	[Token(Token = "0x6000196")]
	[Address(RVA = "0x19952F8", Offset = "0x19952F8", VA = "0x19952F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000197")]
	[Address(RVA = "0x19952FC", Offset = "0x19952FC", VA = "0x19952FC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0x1996068", Offset = "0x1996068", VA = "0x1996068")]
	public KotauchiTrackerDetectController()
	{
	}
}
[Token(Token = "0x2000066")]
public class KotauchiTrackerDetector
{
	[Token(Token = "0x6000199")]
	[Address(RVA = "0x1996070", Offset = "0x1996070", VA = "0x1996070")]
	public static TransformSetting detectTransformSetting(Transform[] trackers, Vector3 center, Vector3 leftVec)
	{
		return null;
	}

	[Token(Token = "0x600019A")]
	[Address(RVA = "0x1995680", Offset = "0x1995680", VA = "0x1995680")]
	public static TrackerSettings Detect(Transform[] trackers)
	{
		return null;
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0x19961FC", Offset = "0x19961FC", VA = "0x19961FC")]
	public KotauchiTrackerDetector()
	{
	}
}
[Token(Token = "0x200006A")]
public static class KotauchiVRIKCalibrator
{
	[Token(Token = "0x60001A3")]
	[Address(RVA = "0x19963C8", Offset = "0x19963C8", VA = "0x19963C8")]
	public static CalibrateSetting CalibrateRoot(Vector3 rootPosition, Vector3 headTrackerForward, Vector3 headTrackerUp, Vector3 headOffset, Transform headTracker)
	{
		return default(CalibrateSetting);
	}

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0x1996588", Offset = "0x1996588", VA = "0x1996588")]
	public static CalibrateSetting CalibrateHead(Quaternion rotation, Vector3 forward, Vector3 up, Vector3 offset, Transform tracker)
	{
		return default(CalibrateSetting);
	}

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0x1996724", Offset = "0x1996724", VA = "0x1996724")]
	public static CalibrateSetting CalibratePelvis(Vector3 position, Quaternion rotation, Transform tracker)
	{
		return default(CalibrateSetting);
	}

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0x199679C", Offset = "0x199679C", VA = "0x199679C")]
	public static CalibrateSetting CalibrateLeftHand(Vector3 wristToPalmAxis, Vector3 palmToThumbAxis, Vector3 forward, Vector3 up, Vector3 offset, Transform tracker)
	{
		return default(CalibrateSetting);
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0x1996A80", Offset = "0x1996A80", VA = "0x1996A80")]
	public static CalibrateSetting CalibrateRightHand(Vector3 wristToPalmAxis, Vector3 palmToThumbAxis, Vector3 forward, Vector3 up, Vector3 offset, Transform tracker)
	{
		return default(CalibrateSetting);
	}

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0x1996D70", Offset = "0x1996D70", VA = "0x1996D70")]
	public static CalibrateSetting CalibrateElbow(Vector3 wristToPalmAxis, Vector3 palmToThumbAxis, Vector3 forward, Vector3 up, Vector3 offset, Transform tracker)
	{
		return default(CalibrateSetting);
	}

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0x1997054", Offset = "0x1997054", VA = "0x1997054")]
	public static CalibrateSetting CalibrateLeftKnee(Vector3 position, Quaternion rotation, Transform tracker)
	{
		return default(CalibrateSetting);
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0x19970CC", Offset = "0x19970CC", VA = "0x19970CC")]
	public static CalibrateSetting CalibrateRightKnee(Vector3 position, Quaternion rotation, Transform tracker)
	{
		return default(CalibrateSetting);
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0x1997144", Offset = "0x1997144", VA = "0x1997144")]
	private static Vector3 CalibrateFootTrackerSpaceForward(Transform tracker, Vector3 footTrackerForward, Vector3 footTrackerUp)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0x199728C", Offset = "0x199728C", VA = "0x199728C")]
	private static CalibrateSetting CalibrateLeg(Transform tracker, Transform lastBone, Vector3 rootForward, Vector3 footTrackerForward, Vector3 footTrackerUp, float footForwardOffset, float inwardOffset, float headingOffset)
	{
		return default(CalibrateSetting);
	}

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0x1997570", Offset = "0x1997570", VA = "0x1997570")]
	public static void Calibrate(IKTargetRepositoryInterface repository, VRIK ik, VRIKCalibrator.Settings settings, Transform headTracker, [Optional] Transform bodyTracker, [Optional] Transform leftHandTracker, [Optional] Transform leftElbowTracker, [Optional] Transform rightHandTracker, [Optional] Transform rightElbowTracker, [Optional] Transform leftKneeTracker, [Optional] Transform leftFootTracker, [Optional] Transform rightKneeTracker, [Optional] Transform rightFootTracker)
	{
	}
}
[Token(Token = "0x200006B")]
public class KotauchiVRIKController : MonoBehaviour
{
	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private IKTargetRepositoryInterface repository;

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VRIK ik;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VRIKCalibrator.Settings settings;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform headTracker;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform bodyTracker;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform leftHandTracker;

	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform leftElbowTracker;

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform rightHandTracker;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform rightElbowTracker;

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform leftFootTracker;

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform leftKneeTracker;

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform rightFootTracker;

	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform rightKneeTracker;

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0x199879C", Offset = "0x199879C", VA = "0x199879C")]
	private void Start()
	{
	}

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0x1998804", Offset = "0x1998804", VA = "0x1998804")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0x1998858", Offset = "0x1998858", VA = "0x1998858")]
	public KotauchiVRIKController()
	{
	}
}
[Token(Token = "0x200006C")]
public class TrackerSettings
{
	[Token(Token = "0x17000019")]
	public Transform headTracker
	{
		[Token(Token = "0x60001B1")]
		[Address(RVA = "0x1998860", Offset = "0x1998860", VA = "0x1998860")]
		[CompilerGenerated]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700001A")]
	public Transform bodyTracker
	{
		[Token(Token = "0x60001B2")]
		[Address(RVA = "0x1998868", Offset = "0x1998868", VA = "0x1998868")]
		[CompilerGenerated]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700001B")]
	public Transform leftHandTracker
	{
		[Token(Token = "0x60001B3")]
		[Address(RVA = "0x1998870", Offset = "0x1998870", VA = "0x1998870")]
		[CompilerGenerated]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700001C")]
	public Transform leftElbowTracker
	{
		[Token(Token = "0x60001B4")]
		[Address(RVA = "0x1998878", Offset = "0x1998878", VA = "0x1998878")]
		[CompilerGenerated]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700001D")]
	public Transform rightHandTracker
	{
		[Token(Token = "0x60001B5")]
		[Address(RVA = "0x1998880", Offset = "0x1998880", VA = "0x1998880")]
		[CompilerGenerated]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700001E")]
	public Transform rightElbowTracker
	{
		[Token(Token = "0x60001B6")]
		[Address(RVA = "0x1998888", Offset = "0x1998888", VA = "0x1998888")]
		[CompilerGenerated]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700001F")]
	public Transform leftFootTracker
	{
		[Token(Token = "0x60001B7")]
		[Address(RVA = "0x1998890", Offset = "0x1998890", VA = "0x1998890")]
		[CompilerGenerated]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000020")]
	public Transform leftKneeTracker
	{
		[Token(Token = "0x60001B8")]
		[Address(RVA = "0x1998898", Offset = "0x1998898", VA = "0x1998898")]
		[CompilerGenerated]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000021")]
	public Transform rightFootTracker
	{
		[Token(Token = "0x60001B9")]
		[Address(RVA = "0x19988A0", Offset = "0x19988A0", VA = "0x19988A0")]
		[CompilerGenerated]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000022")]
	public Transform rightKneeTracker
	{
		[Token(Token = "0x60001BA")]
		[Address(RVA = "0x19988A8", Offset = "0x19988A8", VA = "0x19988A8")]
		[CompilerGenerated]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0x19988B0", Offset = "0x19988B0", VA = "0x19988B0")]
	public TrackerSettings(Transform headTracker, Transform bodyTracker, Transform leftHandTracker, Transform leftElbowTracker, Transform rightHandTracker, Transform rightElbowTracker, Transform leftFootTracker, Transform leftKneeTracker, Transform rightFootTracker, Transform rightKneeTracker)
	{
	}
}
[Token(Token = "0x200006D")]
public class TransformSetting
{
	[Token(Token = "0x17000023")]
	public Transform right
	{
		[Token(Token = "0x60001BC")]
		[Address(RVA = "0x19989B0", Offset = "0x19989B0", VA = "0x19989B0")]
		[CompilerGenerated]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000024")]
	public Transform left
	{
		[Token(Token = "0x60001BD")]
		[Address(RVA = "0x19989B8", Offset = "0x19989B8", VA = "0x19989B8")]
		[CompilerGenerated]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0x19989C0", Offset = "0x19989C0", VA = "0x19989C0")]
	public TransformSetting(Transform right, Transform left)
	{
	}
}
[Token(Token = "0x200006E")]
public class VRIKTargetRepository : IKTargetRepositoryInterface
{
	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private VRIK ik;

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0x1998A04", Offset = "0x1998A04", VA = "0x1998A04")]
	public VRIKTargetRepository(VRIK ik)
	{
	}

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0x1998A34", Offset = "0x1998A34", VA = "0x1998A34", Slot = "4")]
	public Transform getHead()
	{
		return null;
	}

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0x1998A60", Offset = "0x1998A60", VA = "0x1998A60", Slot = "5")]
	public Transform getPelvis()
	{
		return null;
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0x1998A8C", Offset = "0x1998A8C", VA = "0x1998A8C", Slot = "6")]
	public Transform getLeftHand()
	{
		return null;
	}

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0x1998AB8", Offset = "0x1998AB8", VA = "0x1998AB8", Slot = "7")]
	public Transform getLeftElbow()
	{
		return null;
	}

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0x1998AE4", Offset = "0x1998AE4", VA = "0x1998AE4", Slot = "8")]
	public Transform getRightHand()
	{
		return null;
	}

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0x1998B10", Offset = "0x1998B10", VA = "0x1998B10", Slot = "9")]
	public Transform getRightElbow()
	{
		return null;
	}

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0x1998B3C", Offset = "0x1998B3C", VA = "0x1998B3C", Slot = "10")]
	public Transform getLeftKnee()
	{
		return null;
	}

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0x1998B68", Offset = "0x1998B68", VA = "0x1998B68", Slot = "11")]
	public Transform getLeftLeg()
	{
		return null;
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0x1998B94", Offset = "0x1998B94", VA = "0x1998B94", Slot = "12")]
	public Transform getRightKnee()
	{
		return null;
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0x1998BC0", Offset = "0x1998BC0", VA = "0x1998BC0", Slot = "13")]
	public Transform getRightLeg()
	{
		return null;
	}
}
[Token(Token = "0x200006F")]
[ExecuteInEditMode]
public class Mirror : MonoBehaviour
{
	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Camera ReflectionCamera;

	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform Specular;

	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float Size;

	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Header("Debug Target Camera")]
	[SerializeField]
	private Camera _debugTargetCamera;

	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Inject]
	private InputProvider _inputProvider;

	[Token(Token = "0x17000025")]
	private Camera TrackingCamera
	{
		[Token(Token = "0x60001CC")]
		[Address(RVA = "0x1998BF4", Offset = "0x1998BF4", VA = "0x1998BF4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0x1998BEC", Offset = "0x1998BEC", VA = "0x1998BEC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0x1998BF0", Offset = "0x1998BF0", VA = "0x1998BF0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0x1998C7C", Offset = "0x1998C7C", VA = "0x1998C7C")]
	private void Reset()
	{
	}

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0x1998CD4", Offset = "0x1998CD4", VA = "0x1998CD4")]
	private void Update()
	{
	}

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0x1998CD8", Offset = "0x1998CD8", VA = "0x1998CD8")]
	private void UpdateMirror()
	{
	}

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0x199917C", Offset = "0x199917C", VA = "0x199917C")]
	public Mirror()
	{
	}
}
[Token(Token = "0x2000070")]
public class DebugUIBuilder : MonoBehaviour
{
	[Token(Token = "0x2000071")]
	public delegate void OnClick();

	[Token(Token = "0x2000072")]
	public delegate void OnToggleValueChange(Toggle t);

	[Token(Token = "0x2000073")]
	public delegate void OnSlider(float f);

	[Token(Token = "0x2000074")]
	public delegate bool ActiveUpdate();

	[Token(Token = "0x4000204")]
	public const int DEBUG_PANE_CENTER = 0;

	[Token(Token = "0x4000205")]
	public const int DEBUG_PANE_RIGHT = 1;

	[Token(Token = "0x4000206")]
	public const int DEBUG_PANE_LEFT = 2;

	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform buttonPrefab;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform[] additionalButtonPrefab;

	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RectTransform labelPrefab;

	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private RectTransform sliderPrefab;

	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private RectTransform dividerPrefab;

	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private RectTransform togglePrefab;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private RectTransform radioPrefab;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private RectTransform textPrefab;

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject uiHelpersToInstantiate;

	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Transform[] targetContentPanels;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool[] reEnable;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private List<GameObject> toEnable;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private List<GameObject> toDisable;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DebugUIBuilder instance;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float elementSpacing;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float marginH;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float marginV;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector2[] insertPositions;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private List<RectTransform>[] insertedElements;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3 menuOffset;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private OVRCameraRig rig;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Dictionary<string, ToggleGroup> radioGroups;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private LaserPointer lp;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private LineRenderer lr;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public LaserPointer.LaserBeamBehavior laserBeamBehavior;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public bool isHorizontal;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5")]
	public bool usePanelCentricRelayout;

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0x199918C", Offset = "0x199918C", VA = "0x199918C")]
	public void Awake()
	{
	}

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0x19996F8", Offset = "0x19996F8", VA = "0x19996F8")]
	public void Show()
	{
	}

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0x1999A74", Offset = "0x1999A74", VA = "0x1999A74")]
	public void Hide()
	{
	}

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0x1999BF0", Offset = "0x1999BF0", VA = "0x1999BF0")]
	private void StackedRelayout()
	{
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0x1999E08", Offset = "0x1999E08", VA = "0x1999E08")]
	private void PanelCentricRelayout()
	{
	}

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0x1999A64", Offset = "0x1999A64", VA = "0x1999A64")]
	private void Relayout()
	{
	}

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0x199A0FC", Offset = "0x199A0FC", VA = "0x199A0FC")]
	private void AddRect(RectTransform r, int targetCanvas)
	{
	}

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0x199A478", Offset = "0x199A478", VA = "0x199A478")]
	public RectTransform AddButton(string label, [Optional] OnClick handler, int buttonIndex = -1, int targetCanvas = 0, bool highResolutionText = false)
	{
		return null;
	}

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0x199A828", Offset = "0x199A828", VA = "0x199A828")]
	public RectTransform AddLabel(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0x199A920", Offset = "0x199A920", VA = "0x199A920")]
	public RectTransform AddSlider(string label, float min, float max, OnSlider onValueChanged, bool wholeNumbersOnly = false, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0x199AAF0", Offset = "0x199AAF0", VA = "0x199AAF0")]
	public RectTransform AddDivider(int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0x199AB88", Offset = "0x199AB88", VA = "0x199AB88")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0x199AD64", Offset = "0x199AD64", VA = "0x199AD64")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, bool defaultValue, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0x199AF60", Offset = "0x199AF60", VA = "0x199AF60")]
	public RectTransform AddRadio(string label, string group, OnToggleValueChange handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0x199B258", Offset = "0x199B258", VA = "0x199B258")]
	public RectTransform AddTextField(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0x199B348", Offset = "0x199B348", VA = "0x199B348")]
	public void ToggleLaserPointer(bool isOn)
	{
	}

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0x199B3DC", Offset = "0x199B3DC", VA = "0x199B3DC")]
	public DebugUIBuilder()
	{
	}
}
[Token(Token = "0x200007A")]
public class HandedInputSelector : MonoBehaviour
{
	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRCameraRig m_CameraRig;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVRInputModule m_InputModule;

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0x199BA5C", Offset = "0x199BA5C", VA = "0x199BA5C")]
	private void Start()
	{
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0x199BB00", Offset = "0x199BB00", VA = "0x199BB00")]
	private void Update()
	{
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0x199BB9C", Offset = "0x199BB9C", VA = "0x199BB9C")]
	private void SetActiveController(OVRInput.Controller c)
	{
	}

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0x199BBD4", Offset = "0x199BBD4", VA = "0x199BBD4")]
	public HandedInputSelector()
	{
	}
}
[Token(Token = "0x200007B")]
public class LaserPointer : OVRCursor
{
	[Token(Token = "0x200007C")]
	public enum LaserBeamBehavior
	{
		[Token(Token = "0x4000236")]
		On,
		[Token(Token = "0x4000237")]
		Off,
		[Token(Token = "0x4000238")]
		OnWhenHitTarget
	}

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cursorVisual;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxLength;

	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private LaserBeamBehavior _laserBeamBehavior;

	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_restoreOnInputAcquired;

	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 _startPoint;

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 _forward;

	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 _endPoint;

	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _hitTarget;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x17000026")]
	public LaserBeamBehavior laserBeamBehavior
	{
		[Token(Token = "0x6000201")]
		[Address(RVA = "0x199BBDC", Offset = "0x199BBDC", VA = "0x199BBDC")]
		get
		{
			return default(LaserBeamBehavior);
		}
		[Token(Token = "0x6000200")]
		[Address(RVA = "0x19996B8", Offset = "0x19996B8", VA = "0x19996B8")]
		set
		{
		}
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0x199BBE4", Offset = "0x199BBE4", VA = "0x199BBE4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000203")]
	[Address(RVA = "0x199BC3C", Offset = "0x199BC3C", VA = "0x199BC3C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0x199BD74", Offset = "0x199BD74", VA = "0x199BD74", Slot = "5")]
	public override void SetCursorStartDest(Vector3 start, Vector3 dest, Vector3 normal)
	{
	}

	[Token(Token = "0x6000205")]
	[Address(RVA = "0x199BD90", Offset = "0x199BD90", VA = "0x199BD90", Slot = "4")]
	public override void SetCursorRay(Transform t)
	{
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0x199BDE0", Offset = "0x199BDE0", VA = "0x199BDE0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0x199BF80", Offset = "0x199BF80", VA = "0x199BF80")]
	private void UpdateLaserBeam(Vector3 start, Vector3 end)
	{
	}

	[Token(Token = "0x6000208")]
	[Address(RVA = "0x199C090", Offset = "0x199C090", VA = "0x199C090")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0x199C114", Offset = "0x199C114", VA = "0x199C114")]
	public void OnInputFocusLost()
	{
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0x199C1D4", Offset = "0x199C1D4", VA = "0x199C1D4")]
	public void OnInputFocusAcquired()
	{
	}

	[Token(Token = "0x600020B")]
	[Address(RVA = "0x199C27C", Offset = "0x199C27C", VA = "0x199C27C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600020C")]
	[Address(RVA = "0x199C368", Offset = "0x199C368", VA = "0x199C368")]
	public LaserPointer()
	{
	}
}
[Token(Token = "0x200007D")]
public class CharacterCameraConstraint : MonoBehaviour
{
	[Token(Token = "0x4000239")]
	private const float FADE_RAY_LENGTH = 0.25f;

	[Token(Token = "0x400023A")]
	private const float FADE_OVERLAP_MAXIMUM = 0.1f;

	[Token(Token = "0x400023B")]
	private const float FADE_AMOUNT_MAXIMUM = 1f;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("This should be a reference to the OVRCameraRig that is usually a child of the PlayerController.")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("Collision layers to be used for the purposes of fading out the screen when the HMD is inside world geometry and adjusting the capsule height.")]
	public LayerMask CollideLayers;

	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Tooltip("Offset is added to camera's real world height, effectively treating it as though the player was taller/standing higher.")]
	public float HeightOffset;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("Minimum height that the character capsule can shrink to.  To disable, set to capsule's height.")]
	public float MinimumHeight;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Tooltip("Maximum height that the character capsule can grow to.  To disable, set to capsule's height.")]
	public float MaximumHeight;

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CapsuleCollider _character;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SimpleCapsuleWithStickMovement _simplePlayerController;

	[Token(Token = "0x600020D")]
	[Address(RVA = "0x199C378", Offset = "0x199C378", VA = "0x199C378")]
	private CharacterCameraConstraint()
	{
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0x199C380", Offset = "0x199C380", VA = "0x199C380")]
	private void Awake()
	{
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0x199C410", Offset = "0x199C410", VA = "0x199C410")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000210")]
	[Address(RVA = "0x199C534", Offset = "0x199C534", VA = "0x199C534")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0x199C658", Offset = "0x199C658", VA = "0x199C658")]
	private void CameraUpdate()
	{
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0x199C978", Offset = "0x199C978", VA = "0x199C978")]
	private bool CheckCameraOverlapped()
	{
		return default(bool);
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0x199CBD8", Offset = "0x199CBD8", VA = "0x199CBD8")]
	private bool CheckCameraNearClipping(out float result)
	{
		return default(bool);
	}
}
[Token(Token = "0x200007E")]
public class LocomotionController : MonoBehaviour
{
	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CapsuleCollider CharacterController;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimpleCapsuleWithStickMovement PlayerController;

	[Token(Token = "0x6000214")]
	[Address(RVA = "0x199D330", Offset = "0x199D330", VA = "0x199D330")]
	private void Start()
	{
	}

	[Token(Token = "0x6000215")]
	[Address(RVA = "0x199D3DC", Offset = "0x199D3DC", VA = "0x199D3DC")]
	public LocomotionController()
	{
	}
}
[Token(Token = "0x200007F")]
public class LocomotionTeleport : MonoBehaviour
{
	[Token(Token = "0x2000080")]
	public enum States
	{
		[Token(Token = "0x4000269")]
		Ready,
		[Token(Token = "0x400026A")]
		Aim,
		[Token(Token = "0x400026B")]
		CancelAim,
		[Token(Token = "0x400026C")]
		PreTeleport,
		[Token(Token = "0x400026D")]
		CancelTeleport,
		[Token(Token = "0x400026E")]
		Teleporting,
		[Token(Token = "0x400026F")]
		PostTeleport
	}

	[Token(Token = "0x2000081")]
	public enum TeleportIntentions
	{
		[Token(Token = "0x4000271")]
		None,
		[Token(Token = "0x4000272")]
		Aim,
		[Token(Token = "0x4000273")]
		PreTeleport,
		[Token(Token = "0x4000274")]
		Teleport
	}

	[Token(Token = "0x2000082")]
	public enum AimCollisionTypes
	{
		[Token(Token = "0x4000276")]
		Point,
		[Token(Token = "0x4000277")]
		Sphere,
		[Token(Token = "0x4000278")]
		Capsule
	}

	[Token(Token = "0x2000083")]
	public class AimData
	{
		[Token(Token = "0x4000279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RaycastHit TargetHitInfo;

		[Token(Token = "0x400027A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool TargetValid;

		[Token(Token = "0x400027B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3? Destination;

		[Token(Token = "0x400027C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float Radius;

		[Token(Token = "0x1700002A")]
		public List<Vector3> Points
		{
			[Token(Token = "0x600024B")]
			[Address(RVA = "0x199F11C", Offset = "0x199F11C", VA = "0x199F11C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600024C")]
			[Address(RVA = "0x199F124", Offset = "0x199F124", VA = "0x199F124")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x600024A")]
		[Address(RVA = "0x199F094", Offset = "0x199F094", VA = "0x199F094")]
		public AimData()
		{
		}

		[Token(Token = "0x600024D")]
		[Address(RVA = "0x199F12C", Offset = "0x199F12C", VA = "0x199F12C")]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000084")]
	[CompilerGenerated]
	private sealed class <ReadyStateCoroutine>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400027E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400027F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700002B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000251")]
			[Address(RVA = "0x199F294", Offset = "0x199F294", VA = "0x199F294", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000253")]
			[Address(RVA = "0x199F2DC", Offset = "0x199F2DC", VA = "0x199F2DC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600024E")]
		[Address(RVA = "0x199DDE8", Offset = "0x199DDE8", VA = "0x199DDE8")]
		[DebuggerHidden]
		public <ReadyStateCoroutine>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x600024F")]
		[Address(RVA = "0x199F184", Offset = "0x199F184", VA = "0x199F184", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000250")]
		[Address(RVA = "0x199F188", Offset = "0x199F188", VA = "0x199F188", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000252")]
		[Address(RVA = "0x199F29C", Offset = "0x199F29C", VA = "0x199F29C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000085")]
	[CompilerGenerated]
	private sealed class <AimStateCoroutine>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700002D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000257")]
			[Address(RVA = "0x199F440", Offset = "0x199F440", VA = "0x199F440", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000259")]
			[Address(RVA = "0x199F488", Offset = "0x199F488", VA = "0x199F488", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000254")]
		[Address(RVA = "0x199E270", Offset = "0x199E270", VA = "0x199E270")]
		[DebuggerHidden]
		public <AimStateCoroutine>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x6000255")]
		[Address(RVA = "0x199F2E4", Offset = "0x199F2E4", VA = "0x199F2E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000256")]
		[Address(RVA = "0x199F2E8", Offset = "0x199F2E8", VA = "0x199F2E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000258")]
		[Address(RVA = "0x199F448", Offset = "0x199F448", VA = "0x199F448", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000086")]
	[CompilerGenerated]
	private sealed class <CancelAimStateCoroutine>d__68 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700002F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600025D")]
			[Address(RVA = "0x199F540", Offset = "0x199F540", VA = "0x199F540", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000030")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600025F")]
			[Address(RVA = "0x199F588", Offset = "0x199F588", VA = "0x199F588", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600025A")]
		[Address(RVA = "0x199E444", Offset = "0x199E444", VA = "0x199E444")]
		[DebuggerHidden]
		public <CancelAimStateCoroutine>d__68(int <>1__state)
		{
		}

		[Token(Token = "0x600025B")]
		[Address(RVA = "0x199F490", Offset = "0x199F490", VA = "0x199F490", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600025C")]
		[Address(RVA = "0x199F494", Offset = "0x199F494", VA = "0x199F494", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600025E")]
		[Address(RVA = "0x199F548", Offset = "0x199F548", VA = "0x199F548", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000087")]
	[CompilerGenerated]
	private sealed class <PreTeleportStateCoroutine>d__72 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000031")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000263")]
			[Address(RVA = "0x199F678", Offset = "0x199F678", VA = "0x199F678", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000032")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000265")]
			[Address(RVA = "0x199F6C0", Offset = "0x199F6C0", VA = "0x199F6C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000260")]
		[Address(RVA = "0x199E618", Offset = "0x199E618", VA = "0x199E618")]
		[DebuggerHidden]
		public <PreTeleportStateCoroutine>d__72(int <>1__state)
		{
		}

		[Token(Token = "0x6000261")]
		[Address(RVA = "0x199F590", Offset = "0x199F590", VA = "0x199F590", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000262")]
		[Address(RVA = "0x199F594", Offset = "0x199F594", VA = "0x199F594", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000264")]
		[Address(RVA = "0x199F680", Offset = "0x199F680", VA = "0x199F680", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000088")]
	[CompilerGenerated]
	private sealed class <CancelTeleportStateCoroutine>d__76 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400028A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400028B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400028C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000033")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000269")]
			[Address(RVA = "0x199F778", Offset = "0x199F778", VA = "0x199F778", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000034")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600026B")]
			[Address(RVA = "0x199F7C0", Offset = "0x199F7C0", VA = "0x199F7C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000266")]
		[Address(RVA = "0x199E7EC", Offset = "0x199E7EC", VA = "0x199E7EC")]
		[DebuggerHidden]
		public <CancelTeleportStateCoroutine>d__76(int <>1__state)
		{
		}

		[Token(Token = "0x6000267")]
		[Address(RVA = "0x199F6C8", Offset = "0x199F6C8", VA = "0x199F6C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000268")]
		[Address(RVA = "0x199F6CC", Offset = "0x199F6CC", VA = "0x199F6CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600026A")]
		[Address(RVA = "0x199F780", Offset = "0x199F780", VA = "0x199F780", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000089")]
	[CompilerGenerated]
	private sealed class <TeleportingStateCoroutine>d__80 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400028D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400028E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400028F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000035")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600026F")]
			[Address(RVA = "0x199F8AC", Offset = "0x199F8AC", VA = "0x199F8AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000036")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000271")]
			[Address(RVA = "0x199F8F4", Offset = "0x199F8F4", VA = "0x199F8F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600026C")]
		[Address(RVA = "0x199E9C0", Offset = "0x199E9C0", VA = "0x199E9C0")]
		[DebuggerHidden]
		public <TeleportingStateCoroutine>d__80(int <>1__state)
		{
		}

		[Token(Token = "0x600026D")]
		[Address(RVA = "0x199F7C8", Offset = "0x199F7C8", VA = "0x199F7C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600026E")]
		[Address(RVA = "0x199F7CC", Offset = "0x199F7CC", VA = "0x199F7CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000270")]
		[Address(RVA = "0x199F8B4", Offset = "0x199F8B4", VA = "0x199F8B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200008A")]
	[CompilerGenerated]
	private sealed class <PostTeleportStateCoroutine>d__84 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000037")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000275")]
			[Address(RVA = "0x199F9FC", Offset = "0x199F9FC", VA = "0x199F9FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000038")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000277")]
			[Address(RVA = "0x199FA44", Offset = "0x199FA44", VA = "0x199FA44", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000272")]
		[Address(RVA = "0x199EB94", Offset = "0x199EB94", VA = "0x199EB94")]
		[DebuggerHidden]
		public <PostTeleportStateCoroutine>d__84(int <>1__state)
		{
		}

		[Token(Token = "0x6000273")]
		[Address(RVA = "0x199F8FC", Offset = "0x199F8FC", VA = "0x199F8FC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000274")]
		[Address(RVA = "0x199F900", Offset = "0x199F900", VA = "0x199F900", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000276")]
		[Address(RVA = "0x199FA04", Offset = "0x199FA04", VA = "0x199FA04", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("Allow linear movement prior to the teleport system being activated.")]
	public bool EnableMovementDuringReady;

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[Tooltip("Allow linear movement while the teleport system is in the process of aiming for a teleport target.")]
	public bool EnableMovementDuringAim;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[Tooltip("Allow linear movement while the teleport system is in the process of configuring the landing orientation.")]
	public bool EnableMovementDuringPreTeleport;

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[Tooltip("Allow linear movement after the teleport has occurred but before the system has returned to the ready state.")]
	public bool EnableMovementDuringPostTeleport;

	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Tooltip("Allow rotation prior to the teleport system being activated.")]
	public bool EnableRotationDuringReady;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[Tooltip("Allow rotation while the teleport system is in the process of aiming for a teleport target.")]
	public bool EnableRotationDuringAim;

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	[Tooltip("Allow rotation while the teleport system is in the process of configuring the landing orientation.")]
	public bool EnableRotationDuringPreTeleport;

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	[Tooltip("Allow rotation after the teleport has occurred but before the system has returned to the ready state.")]
	public bool EnableRotationDuringPostTeleport;

	[NonSerialized]
	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TeleportAimHandler AimHandler;

	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Tooltip("This prefab will be instantiated as needed and updated to match the current aim target.")]
	public TeleportDestination TeleportDestinationPrefab;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Tooltip("TeleportDestinationPrefab will be instantiated into this layer.")]
	public int TeleportDestinationLayer;

	[NonSerialized]
	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TeleportInputHandler InputHandler;

	[NonSerialized]
	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TeleportIntentions CurrentIntention;

	[NonSerialized]
	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool IsPreTeleportRequested;

	[NonSerialized]
	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool IsTransitioning;

	[NonSerialized]
	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	public bool IsPostTeleportRequested;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TeleportDestination _teleportDestination;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[Tooltip("When aiming at possible destinations, the aim collision type determines which shape to use for collision tests.")]
	public AimCollisionTypes AimCollisionType;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[Tooltip("Use the character collision radius/height/skinwidth for sphere/capsule collision tests.")]
	public bool UseCharacterCollisionData;

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[Tooltip("Radius of the sphere or capsule used for collision testing when aiming to possible teleport destinations. Ignored if UseCharacterCollisionData is true.")]
	public float AimCollisionRadius;

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[Tooltip("Height of the capsule used for collision testing when aiming to possible teleport destinations. Ignored if UseCharacterCollisionData is true.")]
	public float AimCollisionHeight;

	[Token(Token = "0x17000027")]
	public States CurrentState
	{
		[Token(Token = "0x6000218")]
		[Address(RVA = "0x199D42C", Offset = "0x199D42C", VA = "0x199D42C")]
		[CompilerGenerated]
		get
		{
			return default(States);
		}
		[Token(Token = "0x6000219")]
		[Address(RVA = "0x199D434", Offset = "0x199D434", VA = "0x199D434")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000028")]
	public Quaternion DestinationRotation
	{
		[Token(Token = "0x600021D")]
		[Address(RVA = "0x199D604", Offset = "0x199D604", VA = "0x199D604")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x17000029")]
	public LocomotionController LocomotionController
	{
		[Token(Token = "0x600021E")]
		[Address(RVA = "0x199D628", Offset = "0x199D628", VA = "0x199D628")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x600021F")]
		[Address(RVA = "0x199D630", Offset = "0x199D630", VA = "0x199D630")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x14000001")]
	public event Action<bool, Vector3?, Quaternion?, Quaternion?> UpdateTeleportDestination
	{
		[Token(Token = "0x600021A")]
		[Address(RVA = "0x199D43C", Offset = "0x199D43C", VA = "0x199D43C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600021B")]
		[Address(RVA = "0x199D4EC", Offset = "0x199D4EC", VA = "0x199D4EC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000002")]
	public event Action EnterStateReady
	{
		[Token(Token = "0x6000229")]
		[Address(RVA = "0x199DCB0", Offset = "0x199DCB0", VA = "0x199DCB0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600022A")]
		[Address(RVA = "0x199DD4C", Offset = "0x199DD4C", VA = "0x199DD4C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000003")]
	public event Action EnterStateAim
	{
		[Token(Token = "0x600022C")]
		[Address(RVA = "0x199DE10", Offset = "0x199DE10", VA = "0x199DE10")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600022D")]
		[Address(RVA = "0x199DEAC", Offset = "0x199DEAC", VA = "0x199DEAC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public event Action<AimData> UpdateAimData
	{
		[Token(Token = "0x600022E")]
		[Address(RVA = "0x199DF48", Offset = "0x199DF48", VA = "0x199DF48")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600022F")]
		[Address(RVA = "0x199DFF8", Offset = "0x199DFF8", VA = "0x199DFF8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public event Action ExitStateAim
	{
		[Token(Token = "0x6000231")]
		[Address(RVA = "0x199E0C4", Offset = "0x199E0C4", VA = "0x199E0C4")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000232")]
		[Address(RVA = "0x199E160", Offset = "0x199E160", VA = "0x199E160")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000006")]
	public event Action EnterStateCancelAim
	{
		[Token(Token = "0x6000234")]
		[Address(RVA = "0x199E298", Offset = "0x199E298", VA = "0x199E298")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000235")]
		[Address(RVA = "0x199E334", Offset = "0x199E334", VA = "0x199E334")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public event Action EnterStatePreTeleport
	{
		[Token(Token = "0x6000237")]
		[Address(RVA = "0x199E46C", Offset = "0x199E46C", VA = "0x199E46C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000238")]
		[Address(RVA = "0x199E508", Offset = "0x199E508", VA = "0x199E508")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public event Action EnterStateCancelTeleport
	{
		[Token(Token = "0x600023A")]
		[Address(RVA = "0x199E640", Offset = "0x199E640", VA = "0x199E640")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600023B")]
		[Address(RVA = "0x199E6DC", Offset = "0x199E6DC", VA = "0x199E6DC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public event Action EnterStateTeleporting
	{
		[Token(Token = "0x600023D")]
		[Address(RVA = "0x199E814", Offset = "0x199E814", VA = "0x199E814")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600023E")]
		[Address(RVA = "0x199E8B0", Offset = "0x199E8B0", VA = "0x199E8B0")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public event Action EnterStatePostTeleport
	{
		[Token(Token = "0x6000240")]
		[Address(RVA = "0x199E9E8", Offset = "0x199E9E8", VA = "0x199E9E8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000241")]
		[Address(RVA = "0x199EA84", Offset = "0x199EA84", VA = "0x199EA84")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public event Action<Transform, Vector3, Quaternion> Teleported
	{
		[Token(Token = "0x6000243")]
		[Address(RVA = "0x199EBBC", Offset = "0x199EBBC", VA = "0x199EBBC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000244")]
		[Address(RVA = "0x199EC6C", Offset = "0x199EC6C", VA = "0x199EC6C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000216")]
	[Address(RVA = "0x199D3E4", Offset = "0x199D3E4", VA = "0x199D3E4")]
	public void EnableMovement(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x6000217")]
	[Address(RVA = "0x199D408", Offset = "0x199D408", VA = "0x199D408")]
	public void EnableRotation(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0x199D59C", Offset = "0x199D59C", VA = "0x199D59C")]
	public void OnUpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0x199D638", Offset = "0x199D638", VA = "0x199D638")]
	public bool AimCollisionTest(Vector3 start, Vector3 end, LayerMask aimCollisionLayerMask, out RaycastHit hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x6000221")]
	[Address(RVA = "0x199D900", Offset = "0x199D900", VA = "0x199D900")]
	[Conditional("DEBUG_TELEPORT_STATES")]
	protected void LogState(string msg)
	{
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0x199D9A8", Offset = "0x199D9A8", VA = "0x199D9A8")]
	protected void CreateNewTeleportDestination()
	{
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0x199DA94", Offset = "0x199DA94", VA = "0x199DA94")]
	private void DeactivateDestination()
	{
	}

	[Token(Token = "0x6000224")]
	[Address(RVA = "0x199DAD0", Offset = "0x199DAD0", VA = "0x199DAD0")]
	public void RecycleTeleportDestination(TeleportDestination oldDestination)
	{
	}

	[Token(Token = "0x6000225")]
	[Address(RVA = "0x199DB80", Offset = "0x199DB80", VA = "0x199DB80")]
	private void EnableMotion(bool enableLinear, bool enableRotation)
	{
	}

	[Token(Token = "0x6000226")]
	[Address(RVA = "0x199DBB0", Offset = "0x199DBB0", VA = "0x199DBB0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000227")]
	[Address(RVA = "0x199DC10", Offset = "0x199DC10", VA = "0x199DC10", Slot = "4")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0x199DCA8", Offset = "0x199DCA8", VA = "0x199DCA8", Slot = "5")]
	public virtual void OnDisable()
	{
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0x199DC34", Offset = "0x199DC34", VA = "0x199DC34")]
	[IteratorStateMachine(typeof(<ReadyStateCoroutine>d__52))]
	protected IEnumerator ReadyStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0x199E0A8", Offset = "0x199E0A8", VA = "0x199E0A8")]
	public void OnUpdateAimData(AimData aimData)
	{
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0x199E1FC", Offset = "0x199E1FC", VA = "0x199E1FC")]
	[IteratorStateMachine(typeof(<AimStateCoroutine>d__64))]
	protected IEnumerator AimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0x199E3D0", Offset = "0x199E3D0", VA = "0x199E3D0")]
	[IteratorStateMachine(typeof(<CancelAimStateCoroutine>d__68))]
	protected IEnumerator CancelAimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000239")]
	[Address(RVA = "0x199E5A4", Offset = "0x199E5A4", VA = "0x199E5A4")]
	[IteratorStateMachine(typeof(<PreTeleportStateCoroutine>d__72))]
	protected IEnumerator PreTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0x199E778", Offset = "0x199E778", VA = "0x199E778")]
	[IteratorStateMachine(typeof(<CancelTeleportStateCoroutine>d__76))]
	protected IEnumerator CancelTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600023F")]
	[Address(RVA = "0x199E94C", Offset = "0x199E94C", VA = "0x199E94C")]
	[IteratorStateMachine(typeof(<TeleportingStateCoroutine>d__80))]
	protected IEnumerator TeleportingStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000242")]
	[Address(RVA = "0x199EB20", Offset = "0x199EB20", VA = "0x199EB20")]
	[IteratorStateMachine(typeof(<PostTeleportStateCoroutine>d__84))]
	protected IEnumerator PostTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000245")]
	[Address(RVA = "0x199ED1C", Offset = "0x199ED1C", VA = "0x199ED1C")]
	public void DoTeleport()
	{
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0x199EE30", Offset = "0x199EE30", VA = "0x199EE30")]
	public Vector3 GetCharacterPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000247")]
	[Address(RVA = "0x199EE60", Offset = "0x199EE60", VA = "0x199EE60")]
	public Quaternion GetHeadRotationY()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000248")]
	[Address(RVA = "0x199EF9C", Offset = "0x199EF9C", VA = "0x199EF9C")]
	public void DoWarp(Vector3 startPos, float positionPercent)
	{
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0x199F084", Offset = "0x199F084", VA = "0x199F084")]
	public LocomotionTeleport()
	{
	}
}
[Token(Token = "0x200008B")]
public class SimpleCapsuleWithStickMovement : MonoBehaviour
{
	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool EnableLinearMovement;

	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool EnableRotation;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool HMDRotatesPlayer;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool RotationEitherThumbstick;

	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float RotationAngle;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Speed;

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool ReadyToSnapTurn;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody _rigidbody;

	[Token(Token = "0x1400000C")]
	public event Action CameraUpdated
	{
		[Token(Token = "0x6000278")]
		[Address(RVA = "0x199C498", Offset = "0x199C498", VA = "0x199C498")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000279")]
		[Address(RVA = "0x199C5BC", Offset = "0x199C5BC", VA = "0x199C5BC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400000D")]
	public event Action PreCharacterMove
	{
		[Token(Token = "0x600027A")]
		[Address(RVA = "0x199FA4C", Offset = "0x199FA4C", VA = "0x199FA4C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600027B")]
		[Address(RVA = "0x199FAE8", Offset = "0x199FAE8", VA = "0x199FAE8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x600027C")]
	[Address(RVA = "0x199FB84", Offset = "0x199FB84", VA = "0x199FB84")]
	private void Awake()
	{
	}

	[Token(Token = "0x600027D")]
	[Address(RVA = "0x199FC64", Offset = "0x199FC64", VA = "0x199FC64")]
	private void Start()
	{
	}

	[Token(Token = "0x600027E")]
	[Address(RVA = "0x199FC68", Offset = "0x199FC68", VA = "0x199FC68")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600027F")]
	[Address(RVA = "0x199FCDC", Offset = "0x199FCDC", VA = "0x199FCDC")]
	private void RotatePlayerToHMD()
	{
	}

	[Token(Token = "0x6000280")]
	[Address(RVA = "0x199FE00", Offset = "0x199FE00", VA = "0x199FE00")]
	private void StickMovement()
	{
	}

	[Token(Token = "0x6000281")]
	[Address(RVA = "0x19A0078", Offset = "0x19A0078", VA = "0x19A0078")]
	private void SnapTurn()
	{
	}

	[Token(Token = "0x6000282")]
	[Address(RVA = "0x19A0298", Offset = "0x19A0298", VA = "0x19A0298")]
	public SimpleCapsuleWithStickMovement()
	{
	}
}
[Token(Token = "0x200008C")]
public abstract class TeleportAimHandler : TeleportSupport
{
	[Token(Token = "0x6000283")]
	[Address(RVA = "0x19A02B8", Offset = "0x19A02B8", VA = "0x19A02B8", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000284")]
	[Address(RVA = "0x19A0348", Offset = "0x19A0348", VA = "0x19A0348", Slot = "5")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000285")]
	public abstract void GetPoints(List<Vector3> points);

	[Token(Token = "0x6000286")]
	[Address(RVA = "0x19A0418", Offset = "0x19A0418", VA = "0x19A0418")]
	protected TeleportAimHandler()
	{
	}
}
[Token(Token = "0x200008D")]
public class TeleportAimHandlerLaser : TeleportAimHandler
{
	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Tooltip("Maximum range for aiming.")]
	public float Range;

	[Token(Token = "0x6000287")]
	[Address(RVA = "0x19A0428", Offset = "0x19A0428", VA = "0x19A0428", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0x19A05B8", Offset = "0x19A05B8", VA = "0x19A05B8")]
	public TeleportAimHandlerLaser()
	{
	}
}
[Token(Token = "0x200008E")]
public class TeleportAimHandlerParabolic : TeleportAimHandler
{
	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Tooltip("Maximum range for aiming.")]
	public float Range;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("The MinimumElevation is relative to the AimPosition.")]
	public float MinimumElevation;

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Tooltip("The Gravity is used in conjunction with AimVelocity and the aim direction to simulate a projectile.")]
	public float Gravity;

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Tooltip("The AimVelocity is the initial speed of the faked projectile.")]
	[Range(0.001f, 50f)]
	public float AimVelocity;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Tooltip("The AimStep is the how much to subdivide the iteration.")]
	[Range(0.001f, 1f)]
	public float AimStep;

	[Token(Token = "0x6000289")]
	[Address(RVA = "0x19A05C8", Offset = "0x19A05C8", VA = "0x19A05C8", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x600028A")]
	[Address(RVA = "0x19A079C", Offset = "0x19A079C", VA = "0x19A079C")]
	public TeleportAimHandlerParabolic()
	{
	}
}
[Token(Token = "0x200008F")]
public class TeleportAimVisualLaser : TeleportSupport
{
	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("This prefab will be instantiated when the aim visual is awakened, and will be set active when the user is aiming, and deactivated when they are done aiming.")]
	public LineRenderer LaserPrefab;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _enterAimStateAction;

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _exitAimStateAction;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] _linePoints;

	[Token(Token = "0x600028B")]
	[Address(RVA = "0x19A07B0", Offset = "0x19A07B0", VA = "0x19A07B0")]
	public TeleportAimVisualLaser()
	{
	}

	[Token(Token = "0x600028C")]
	[Address(RVA = "0x19A08DC", Offset = "0x19A08DC", VA = "0x19A08DC")]
	private void EnterAimState()
	{
	}

	[Token(Token = "0x600028D")]
	[Address(RVA = "0x19A0908", Offset = "0x19A0908", VA = "0x19A0908")]
	private void ExitAimState()
	{
	}

	[Token(Token = "0x600028E")]
	[Address(RVA = "0x19A0934", Offset = "0x19A0934", VA = "0x19A0934")]
	private void Awake()
	{
	}

	[Token(Token = "0x600028F")]
	[Address(RVA = "0x19A09D8", Offset = "0x19A09D8", VA = "0x19A09D8", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000290")]
	[Address(RVA = "0x19A0A2C", Offset = "0x19A0A2C", VA = "0x19A0A2C", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000291")]
	[Address(RVA = "0x19A0A7C", Offset = "0x19A0A7C", VA = "0x19A0A7C")]
	private void UpdateAimData(LocomotionTeleport.AimData obj)
	{
	}
}
[Token(Token = "0x2000090")]
public class TeleportDestination : MonoBehaviour
{
	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("If the target handler provides a target position, this transform will be moved to that position and it's game object enabled. A target position being provided does not mean the position is valid, only that the aim handler found something to test as a destination.")]
	public Transform PositionIndicator;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("This transform will be rotated to match the rotation of the aiming target. Simple teleport destinations should assign this to the object containing this component. More complex teleport destinations might assign this to a sub-object that is used to indicate the landing orientation independently from the rest of the destination indicator, such as when world space effects are required. This will typically be a child of the PositionIndicator.")]
	public Transform OrientationIndicator;

	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Tooltip("After the player teleports, the character controller will have it's rotation set to this value. It is different from the OrientationIndicator transform.rotation in order to support both head-relative and forward-facing teleport modes (See TeleportOrientationHandlerThumbstick.cs).")]
	public Quaternion LandingRotation;

	[NonSerialized]
	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LocomotionTeleport LocomotionTeleport;

	[NonSerialized]
	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LocomotionTeleport.States TeleportState;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly Action<bool, Vector3?, Quaternion?, Quaternion?> _updateTeleportDestinationAction;

	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _eventsActive;

	[Token(Token = "0x17000039")]
	public bool IsValidDestination
	{
		[Token(Token = "0x6000292")]
		[Address(RVA = "0x19A0B78", Offset = "0x19A0B78", VA = "0x19A0B78")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000293")]
		[Address(RVA = "0x19A0B80", Offset = "0x19A0B80", VA = "0x19A0B80")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public event Action<TeleportDestination> Deactivated
	{
		[Token(Token = "0x6000298")]
		[Address(RVA = "0x19A0D08", Offset = "0x19A0D08", VA = "0x19A0D08")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000299")]
		[Address(RVA = "0x19A0DB8", Offset = "0x19A0DB8", VA = "0x19A0DB8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000294")]
	[Address(RVA = "0x19A0B8C", Offset = "0x19A0B8C", VA = "0x19A0B8C")]
	private TeleportDestination()
	{
	}

	[Token(Token = "0x6000295")]
	[Address(RVA = "0x19A0C10", Offset = "0x19A0C10", VA = "0x19A0C10")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000296")]
	[Address(RVA = "0x19A0CD4", Offset = "0x19A0CD4", VA = "0x19A0CD4")]
	private void TryDisableEventHandlers()
	{
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0x19A0D04", Offset = "0x19A0D04", VA = "0x19A0D04")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x600029A")]
	[Address(RVA = "0x199DAAC", Offset = "0x199DAAC", VA = "0x199DAAC")]
	public void OnDeactivated()
	{
	}

	[Token(Token = "0x600029B")]
	[Address(RVA = "0x19A0E68", Offset = "0x19A0E68", VA = "0x19A0E68")]
	public void Recycle()
	{
	}

	[Token(Token = "0x600029C")]
	[Address(RVA = "0x19A0E84", Offset = "0x19A0E84", VA = "0x19A0E84", Slot = "4")]
	public virtual void UpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}
}
[Token(Token = "0x2000091")]
public abstract class TeleportInputHandler : TeleportSupport
{
	[Token(Token = "0x2000092")]
	[CompilerGenerated]
	private sealed class <TeleportReadyCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x1700003A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002A9")]
			[Address(RVA = "0x19A144C", Offset = "0x19A144C", VA = "0x19A144C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002AB")]
			[Address(RVA = "0x19A1494", Offset = "0x19A1494", VA = "0x19A1494", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002A6")]
		[Address(RVA = "0x19A12B8", Offset = "0x19A12B8", VA = "0x19A12B8")]
		[DebuggerHidden]
		public <TeleportReadyCoroutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x60002A7")]
		[Address(RVA = "0x19A13BC", Offset = "0x19A13BC", VA = "0x19A13BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002A8")]
		[Address(RVA = "0x19A13C0", Offset = "0x19A13C0", VA = "0x19A13C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002AA")]
		[Address(RVA = "0x19A1454", Offset = "0x19A1454", VA = "0x19A1454", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000093")]
	[CompilerGenerated]
	private sealed class <TeleportAimCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x1700003C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002AF")]
			[Address(RVA = "0x19A1538", Offset = "0x19A1538", VA = "0x19A1538", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002B1")]
			[Address(RVA = "0x19A1580", Offset = "0x19A1580", VA = "0x19A1580", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002AC")]
		[Address(RVA = "0x19A1354", Offset = "0x19A1354", VA = "0x19A1354")]
		[DebuggerHidden]
		public <TeleportAimCoroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60002AD")]
		[Address(RVA = "0x19A149C", Offset = "0x19A149C", VA = "0x19A149C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002AE")]
		[Address(RVA = "0x19A14A0", Offset = "0x19A14A0", VA = "0x19A14A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002B0")]
		[Address(RVA = "0x19A1540", Offset = "0x19A1540", VA = "0x19A1540", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _startReadyAction;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x600029D")]
	[Address(RVA = "0x19A1078", Offset = "0x19A1078", VA = "0x19A1078")]
	protected TeleportInputHandler()
	{
	}

	[Token(Token = "0x600029E")]
	[Address(RVA = "0x19A114C", Offset = "0x19A114C", VA = "0x19A114C", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x600029F")]
	[Address(RVA = "0x19A1198", Offset = "0x19A1198", VA = "0x19A1198", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0x19A1244", Offset = "0x19A1244", VA = "0x19A1244")]
	[IteratorStateMachine(typeof(<TeleportReadyCoroutine>d__5))]
	private IEnumerator TeleportReadyCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0x19A12E0", Offset = "0x19A12E0", VA = "0x19A12E0")]
	[IteratorStateMachine(typeof(<TeleportAimCoroutine>d__6))]
	private IEnumerator TeleportAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002A2")]
	public abstract LocomotionTeleport.TeleportIntentions GetIntention();

	[Token(Token = "0x60002A3")]
	public abstract void GetAimData(out Ray aimRay);
}
[Token(Token = "0x2000094")]
public class TeleportInputHandlerHMD : TeleportInputHandler
{
	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Tooltip("The button used to begin aiming for a teleport.")]
	public OVRInput.RawButton AimButton;

	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Tooltip("The button used to trigger the teleport after aiming. It can be the same button as the AimButton, however you cannot abort a teleport if it is.")]
	public OVRInput.RawButton TeleportButton;

	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Tooltip("When true, the system will not use the PreTeleport intention which will allow a teleport to occur on a button downpress. When false, the button downpress will trigger the PreTeleport intention and the Teleport intention when the button is released.")]
	public bool FastTeleport;

	[Token(Token = "0x1700003E")]
	public Transform Pointer
	{
		[Token(Token = "0x60002B2")]
		[Address(RVA = "0x19A1588", Offset = "0x19A1588", VA = "0x19A1588")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60002B3")]
		[Address(RVA = "0x19A1590", Offset = "0x19A1590", VA = "0x19A1590")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0x19A1598", Offset = "0x19A1598", VA = "0x19A1598", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0x19A16C4", Offset = "0x19A16C4", VA = "0x19A16C4", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0x19A1778", Offset = "0x19A1778", VA = "0x19A1778")]
	public TeleportInputHandlerHMD()
	{
	}
}
[Token(Token = "0x2000095")]
public class TeleportInputHandlerTouch : TeleportInputHandlerHMD
{
	[Token(Token = "0x2000096")]
	public enum InputModes
	{
		[Token(Token = "0x40002C9")]
		CapacitiveButtonForAimAndTeleport,
		[Token(Token = "0x40002CA")]
		SeparateButtonsForAimAndTeleport,
		[Token(Token = "0x40002CB")]
		ThumbstickTeleport,
		[Token(Token = "0x40002CC")]
		ThumbstickTeleportForwardBackOnly
	}

	[Token(Token = "0x2000097")]
	public enum AimCapTouchButtons
	{
		[Token(Token = "0x40002CE")]
		A,
		[Token(Token = "0x40002CF")]
		B,
		[Token(Token = "0x40002D0")]
		LeftTrigger,
		[Token(Token = "0x40002D1")]
		LeftThumbstick,
		[Token(Token = "0x40002D2")]
		RightTrigger,
		[Token(Token = "0x40002D3")]
		RightThumbstick,
		[Token(Token = "0x40002D4")]
		X,
		[Token(Token = "0x40002D5")]
		Y
	}

	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform LeftHand;

	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform RightHand;

	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[Tooltip("CapacitiveButtonForAimAndTeleport=Activate aiming via cap touch detection, press the same button to teleport.\nSeparateButtonsForAimAndTeleport=Use one button to begin aiming, and another to trigger the teleport.\nThumbstickTeleport=Push a thumbstick to begin aiming, release to teleport.")]
	public InputModes InputMode;

	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly OVRInput.RawButton[] _rawButtons;

	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private readonly OVRInput.RawTouch[] _rawTouch;

	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[Tooltip("Select the controller to be used for aiming. Supports LTouch, RTouch, or Touch for either.")]
	public OVRInput.Controller AimingController;

	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private OVRInput.Controller InitiatingController;

	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[Tooltip("Select the button to use for triggering aim and teleport when InputMode==CapacitiveButtonForAimAndTeleport")]
	public AimCapTouchButtons CapacitiveAimAndTeleportButton;

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[Tooltip("The thumbstick magnitude required to trigger aiming and teleports when InputMode==InputModes.ThumbstickTeleport")]
	public float ThumbstickTeleportThreshold;

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0x19A177C", Offset = "0x19A177C", VA = "0x19A177C")]
	private void Start()
	{
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0x19A1780", Offset = "0x19A1780", VA = "0x19A1780", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0x19A1BB4", Offset = "0x19A1BB4", VA = "0x19A1BB4", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0x19A1C70", Offset = "0x19A1C70", VA = "0x19A1C70")]
	public TeleportInputHandlerTouch()
	{
	}
}
[Token(Token = "0x2000098")]
public abstract class TeleportOrientationHandler : TeleportSupport
{
	[Token(Token = "0x2000099")]
	public enum OrientationModes
	{
		[Token(Token = "0x40002DA")]
		HeadRelative,
		[Token(Token = "0x40002DB")]
		ForwardFacing
	}

	[Token(Token = "0x200009A")]
	[CompilerGenerated]
	private sealed class <UpdateOrientationCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportOrientationHandler <>4__this;

		[Token(Token = "0x1700003F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002C7")]
			[Address(RVA = "0x19A2120", Offset = "0x19A2120", VA = "0x19A2120", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000040")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002C9")]
			[Address(RVA = "0x19A2168", Offset = "0x19A2168", VA = "0x19A2168", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002C4")]
		[Address(RVA = "0x19A1F30", Offset = "0x19A1F30", VA = "0x19A1F30")]
		[DebuggerHidden]
		public <UpdateOrientationCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60002C5")]
		[Address(RVA = "0x19A2070", Offset = "0x19A2070", VA = "0x19A2070", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002C6")]
		[Address(RVA = "0x19A2074", Offset = "0x19A2074", VA = "0x19A2074", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002C8")]
		[Address(RVA = "0x19A2128", Offset = "0x19A2128", VA = "0x19A2128", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _updateOrientationAction;

	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected LocomotionTeleport.AimData AimData;

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0x19A1D60", Offset = "0x19A1D60", VA = "0x19A1D60")]
	protected TeleportOrientationHandler()
	{
	}

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0x19A1E48", Offset = "0x19A1E48", VA = "0x19A1E48")]
	private void UpdateAimData(LocomotionTeleport.AimData aimData)
	{
	}

	[Token(Token = "0x60002BD")]
	[Address(RVA = "0x19A1E50", Offset = "0x19A1E50", VA = "0x19A1E50", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0x19A1E88", Offset = "0x19A1E88", VA = "0x19A1E88", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0x19A1EBC", Offset = "0x19A1EBC", VA = "0x19A1EBC")]
	[IteratorStateMachine(typeof(<UpdateOrientationCoroutine>d__7))]
	private IEnumerator UpdateOrientationCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002C0")]
	protected abstract void InitializeTeleportDestination();

	[Token(Token = "0x60002C1")]
	protected abstract void UpdateTeleportDestination();

	[Token(Token = "0x60002C2")]
	[Address(RVA = "0x19A1F58", Offset = "0x19A1F58", VA = "0x19A1F58")]
	protected Quaternion GetLandingOrientation(OrientationModes mode, Quaternion rotation)
	{
		return default(Quaternion);
	}
}
[Token(Token = "0x200009B")]
public class TeleportOrientationHandler360 : TeleportOrientationHandler
{
	[Token(Token = "0x60002CA")]
	[Address(RVA = "0x19A2170", Offset = "0x19A2170", VA = "0x19A2170", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0x19A2174", Offset = "0x19A2174", VA = "0x19A2174", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0x19A221C", Offset = "0x19A221C", VA = "0x19A221C")]
	public TeleportOrientationHandler360()
	{
	}
}
[Token(Token = "0x200009C")]
public class TeleportOrientationHandlerHMD : TeleportOrientationHandler
{
	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Tooltip("HeadRelative=Character will orient to match the arrow. ForwardFacing=When user orients to match the arrow, they will be facing the sensors.")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Tooltip("Should the destination orientation be updated during the aim state in addition to the PreTeleport state?")]
	public bool UpdateOrientationDuringAim;

	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Tooltip("How far from the destination must the HMD be pointing before using it for orientation")]
	public float AimDistanceThreshold;

	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Tooltip("How far from the destination must the HMD be pointing before rejecting the teleport")]
	public float AimDistanceMaxRange;

	[Token(Token = "0x40002E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion _initialRotation;

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0x19A2220", Offset = "0x19A2220", VA = "0x19A2220", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0x19A2270", Offset = "0x19A2270", VA = "0x19A2270", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x60002CF")]
	[Address(RVA = "0x19A2734", Offset = "0x19A2734", VA = "0x19A2734")]
	public TeleportOrientationHandlerHMD()
	{
	}
}
[Token(Token = "0x200009D")]
public class TeleportOrientationHandlerThumbstick : TeleportOrientationHandler
{
	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Tooltip("HeadRelative=Character will orient to match the arrow. ForwardFacing=When user orients to match the arrow, they will be facing the sensors.")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Tooltip("Which thumbstick is to be used for adjusting the teleport orientation. Supports LTouch, RTouch, or Touch for either.")]
	public OVRInput.Controller Thumbstick;

	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Tooltip("The orientation will only change if the thumbstick magnitude is above this value. This will usually be larger than the TeleportInputHandlerTouch.ThumbstickTeleportThreshold.")]
	public float RotateStickThreshold;

	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Quaternion _initialRotation;

	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion _currentRotation;

	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector2 _lastValidDirection;

	[Token(Token = "0x60002D0")]
	[Address(RVA = "0x19A2738", Offset = "0x19A2738", VA = "0x19A2738", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0x19A276C", Offset = "0x19A276C", VA = "0x19A276C", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0x19A2C68", Offset = "0x19A2C68", VA = "0x19A2C68")]
	public TeleportOrientationHandlerThumbstick()
	{
	}
}
[Token(Token = "0x200009E")]
public class TeleportPoint : MonoBehaviour
{
	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float dimmingSpeed;

	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fullIntensity;

	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lowIntensity;

	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform destTransform;

	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lastLookAtTime;

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0x19A2C78", Offset = "0x19A2C78", VA = "0x19A2C78")]
	private void Start()
	{
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0x19A2C7C", Offset = "0x19A2C7C", VA = "0x19A2C7C")]
	public Transform GetDestTransform()
	{
		return null;
	}

	[Token(Token = "0x60002D5")]
	[Address(RVA = "0x19A2C84", Offset = "0x19A2C84", VA = "0x19A2C84")]
	private void Update()
	{
	}

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0x19A2D70", Offset = "0x19A2D70", VA = "0x19A2D70")]
	public void OnLookAt()
	{
	}

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0x19A2D8C", Offset = "0x19A2D8C", VA = "0x19A2D8C")]
	public TeleportPoint()
	{
	}
}
[Token(Token = "0x200009F")]
public abstract class TeleportSupport : MonoBehaviour
{
	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _eventsActive;

	[Token(Token = "0x17000041")]
	protected LocomotionTeleport LocomotionTeleport
	{
		[Token(Token = "0x60002D8")]
		[Address(RVA = "0x19A2DA4", Offset = "0x19A2DA4", VA = "0x19A2DA4")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60002D9")]
		[Address(RVA = "0x19A2DAC", Offset = "0x19A2DAC", VA = "0x19A2DAC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0x19A02E0", Offset = "0x19A02E0", VA = "0x19A02E0", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0x19A03F0", Offset = "0x19A03F0", VA = "0x19A03F0", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0x19A2DB4", Offset = "0x19A2DB4", VA = "0x19A2DB4")]
	[Conditional("DEBUG_TELEPORT_EVENT_HANDLERS")]
	private void LogEventHandler(string msg)
	{
	}

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0x19A0A20", Offset = "0x19A0A20", VA = "0x19A0A20", Slot = "6")]
	protected virtual void AddEventHandlers()
	{
	}

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0x19A0A74", Offset = "0x19A0A74", VA = "0x19A0A74", Slot = "7")]
	protected virtual void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0x19A0420", Offset = "0x19A0420", VA = "0x19A0420")]
	protected TeleportSupport()
	{
	}
}
[Token(Token = "0x20000A0")]
public abstract class TeleportTargetHandler : TeleportSupport
{
	[Token(Token = "0x20000A1")]
	[CompilerGenerated]
	private sealed class <TargetAimCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTargetHandler <>4__this;

		[Token(Token = "0x17000042")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002EB")]
			[Address(RVA = "0x19A34A4", Offset = "0x19A34A4", VA = "0x19A34A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000043")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002ED")]
			[Address(RVA = "0x19A34EC", Offset = "0x19A34EC", VA = "0x19A34EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002E8")]
		[Address(RVA = "0x19A305C", Offset = "0x19A305C", VA = "0x19A305C")]
		[DebuggerHidden]
		public <TargetAimCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60002E9")]
		[Address(RVA = "0x19A31D8", Offset = "0x19A31D8", VA = "0x19A31D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002EA")]
		[Address(RVA = "0x19A31DC", Offset = "0x19A31DC", VA = "0x19A31DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002EC")]
		[Address(RVA = "0x19A34AC", Offset = "0x19A34AC", VA = "0x19A34AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Tooltip("This bitmask controls which game object layers will be included in the targeting collision tests.")]
	public LayerMask AimCollisionLayerMask;

	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected readonly LocomotionTeleport.AimData AimData;

	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly List<Vector3> _aimPoints;

	[Token(Token = "0x40002F5")]
	private const float ERROR_MARGIN = 0.1f;

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0x19A2E84", Offset = "0x19A2E84", VA = "0x19A2E84")]
	protected TeleportTargetHandler()
	{
	}

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0x19A2F9C", Offset = "0x19A2F9C", VA = "0x19A2F9C", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0x19A2FC4", Offset = "0x19A2FC4", VA = "0x19A2FC4", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0x19A2FE8", Offset = "0x19A2FE8", VA = "0x19A2FE8")]
	[IteratorStateMachine(typeof(<TargetAimCoroutine>d__7))]
	private IEnumerator TargetAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0x19A3084", Offset = "0x19A3084", VA = "0x19A3084", Slot = "8")]
	protected virtual void ResetAimData()
	{
	}

	[Token(Token = "0x60002E5")]
	protected abstract bool ConsiderTeleport(Vector3 start, ref Vector3 end);

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0x19A309C", Offset = "0x19A309C", VA = "0x19A309C", Slot = "10")]
	public virtual Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}
}
[Token(Token = "0x20000A2")]
public class TeleportTargetHandlerNavMesh : TeleportTargetHandler
{
	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int NavMeshAreaMask;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NavMeshPath _path;

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0x19A34F4", Offset = "0x19A34F4", VA = "0x19A34F4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0x19A355C", Offset = "0x19A355C", VA = "0x19A355C", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0x19A36C4", Offset = "0x19A36C4", VA = "0x19A36C4", Slot = "10")]
	public override Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0x19A37B0", Offset = "0x19A37B0", VA = "0x19A37B0")]
	[Conditional("SHOW_PATH_RESULT")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0x19A37B4", Offset = "0x19A37B4", VA = "0x19A37B4")]
	public TeleportTargetHandlerNavMesh()
	{
	}
}
[Token(Token = "0x20000A3")]
public class TeleportTargetHandlerNode : TeleportTargetHandler
{
	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Tooltip("When checking line of sight to the destination, add this value to the vertical offset for targeting collision checks.")]
	public float LOSOffset;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Tooltip("Teleport logic will only work with TeleportPoint components that exist in the layers specified by this mask.")]
	public LayerMask TeleportLayerMask;

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0x19A37C0", Offset = "0x19A37C0", VA = "0x19A37C0", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0x19A39B8", Offset = "0x19A39B8", VA = "0x19A39B8")]
	public TeleportTargetHandlerNode()
	{
	}
}
[Token(Token = "0x20000A4")]
public class TeleportTargetHandlerPhysical : TeleportTargetHandler
{
	[Token(Token = "0x60002F5")]
	[Address(RVA = "0x19A39C4", Offset = "0x19A39C4", VA = "0x19A39C4", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0x19A3B2C", Offset = "0x19A3B2C", VA = "0x19A3B2C")]
	public TeleportTargetHandlerPhysical()
	{
	}
}
[Token(Token = "0x20000A5")]
public abstract class TeleportTransition : TeleportSupport
{
	[Token(Token = "0x60002F7")]
	[Address(RVA = "0x19A3B30", Offset = "0x19A3B30", VA = "0x19A3B30", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0x19A3BB4", Offset = "0x19A3BB4", VA = "0x19A3BB4", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60002F9")]
	protected abstract void LocomotionTeleportOnEnterStateTeleporting();

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0x19A3C34", Offset = "0x19A3C34", VA = "0x19A3C34")]
	protected TeleportTransition()
	{
	}
}
[Token(Token = "0x20000A6")]
public class TeleportTransitionBlink : TeleportTransition
{
	[Token(Token = "0x20000A7")]
	[CompilerGenerated]
	private sealed class <BlinkCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionBlink <>4__this;

		[Token(Token = "0x4000303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x4000304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <teleportTime>5__3;

		[Token(Token = "0x4000305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <teleported>5__4;

		[Token(Token = "0x17000044")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000301")]
			[Address(RVA = "0x19A3F98", Offset = "0x19A3F98", VA = "0x19A3F98", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000045")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000303")]
			[Address(RVA = "0x19A3FE0", Offset = "0x19A3FE0", VA = "0x19A3FE0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002FE")]
		[Address(RVA = "0x19A3CD0", Offset = "0x19A3CD0", VA = "0x19A3CD0")]
		[DebuggerHidden]
		public <BlinkCoroutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x60002FF")]
		[Address(RVA = "0x19A3E94", Offset = "0x19A3E94", VA = "0x19A3E94", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000300")]
		[Address(RVA = "0x19A3E98", Offset = "0x19A3E98", VA = "0x19A3E98", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000302")]
		[Address(RVA = "0x19A3FA0", Offset = "0x19A3FA0", VA = "0x19A3FA0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Tooltip("How long the transition takes. Usually this is greater than Teleport Delay.")]
	[Range(0.01f, 2f)]
	public float TransitionDuration;

	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("At what percentage of the elapsed transition time does the teleport occur?")]
	[Range(0f, 1f)]
	public float TeleportDelay;

	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Tooltip("Fade to black over the duration of the transition")]
	public AnimationCurve FadeLevels;

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0x19A3C3C", Offset = "0x19A3C3C", VA = "0x19A3C3C", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0x19A3C5C", Offset = "0x19A3C5C", VA = "0x19A3C5C")]
	[IteratorStateMachine(typeof(<BlinkCoroutine>d__4))]
	protected IEnumerator BlinkCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0x19A3CF8", Offset = "0x19A3CF8", VA = "0x19A3CF8")]
	public TeleportTransitionBlink()
	{
	}
}
[Token(Token = "0x20000A8")]
public class TeleportTransitionInstant : TeleportTransition
{
	[Token(Token = "0x6000304")]
	[Address(RVA = "0x19A3FE8", Offset = "0x19A3FE8", VA = "0x19A3FE8", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000305")]
	[Address(RVA = "0x19A4000", Offset = "0x19A4000", VA = "0x19A4000")]
	public TeleportTransitionInstant()
	{
	}
}
[Token(Token = "0x20000A9")]
public class TeleportTransitionWarp : TeleportTransition
{
	[Token(Token = "0x20000AA")]
	[CompilerGenerated]
	private sealed class <DoWarp>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400030A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionWarp <>4__this;

		[Token(Token = "0x400030B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <startPosition>5__2;

		[Token(Token = "0x400030C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <elapsedTime>5__3;

		[Token(Token = "0x17000046")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600030C")]
			[Address(RVA = "0x19A4224", Offset = "0x19A4224", VA = "0x19A4224", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000047")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600030E")]
			[Address(RVA = "0x19A426C", Offset = "0x19A426C", VA = "0x19A426C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000309")]
		[Address(RVA = "0x19A409C", Offset = "0x19A409C", VA = "0x19A409C")]
		[DebuggerHidden]
		public <DoWarp>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x600030A")]
		[Address(RVA = "0x19A410C", Offset = "0x19A410C", VA = "0x19A410C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600030B")]
		[Address(RVA = "0x19A4110", Offset = "0x19A4110", VA = "0x19A4110", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600030D")]
		[Address(RVA = "0x19A422C", Offset = "0x19A422C", VA = "0x19A422C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Tooltip("How much time the warp transition takes to complete.")]
	[Range(0.01f, 1f)]
	public float TransitionDuration;

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public AnimationCurve PositionLerp;

	[Token(Token = "0x6000306")]
	[Address(RVA = "0x19A4008", Offset = "0x19A4008", VA = "0x19A4008", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000307")]
	[Address(RVA = "0x19A4028", Offset = "0x19A4028", VA = "0x19A4028")]
	[IteratorStateMachine(typeof(<DoWarp>d__3))]
	private IEnumerator DoWarp()
	{
		return null;
	}

	[Token(Token = "0x6000308")]
	[Address(RVA = "0x19A40C4", Offset = "0x19A40C4", VA = "0x19A40C4")]
	public TeleportTransitionWarp()
	{
	}
}
[Token(Token = "0x20000AB")]
public static class NativeVideoPlayer
{
	[Token(Token = "0x20000AC")]
	public enum PlabackState
	{
		[Token(Token = "0x4000325")]
		Idle = 1,
		[Token(Token = "0x4000326")]
		Preparing,
		[Token(Token = "0x4000327")]
		Buffering,
		[Token(Token = "0x4000328")]
		Ready,
		[Token(Token = "0x4000329")]
		Ended
	}

	[Token(Token = "0x20000AD")]
	public enum StereoMode
	{
		[Token(Token = "0x400032B")]
		Unknown = -1,
		[Token(Token = "0x400032C")]
		Mono,
		[Token(Token = "0x400032D")]
		TopBottom,
		[Token(Token = "0x400032E")]
		LeftRight,
		[Token(Token = "0x400032F")]
		Mesh
	}

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IntPtr? _Activity;

	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static IntPtr? _VideoPlayerClass;

	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly jvalue[] EmptyParams;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static IntPtr getIsPlayingMethodId;

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static IntPtr getCurrentPlaybackStateMethodId;

	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static IntPtr getDurationMethodId;

	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static IntPtr getStereoModeMethodId;

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static IntPtr getWidthMethodId;

	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static IntPtr getHeightMethodId;

	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static IntPtr getPlaybackPositionMethodId;

	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static IntPtr setPlaybackPositionMethodId;

	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static jvalue[] setPlaybackPositionParams;

	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static IntPtr playVideoMethodId;

	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static jvalue[] playVideoParams;

	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static IntPtr stopMethodId;

	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private static IntPtr resumeMethodId;

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static IntPtr pauseMethodId;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private static IntPtr setPlaybackSpeedMethodId;

	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static jvalue[] setPlaybackSpeedParams;

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private static IntPtr setLoopingMethodId;

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private static jvalue[] setLoopingParams;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private static IntPtr setListenerRotationQuaternionMethodId;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private static jvalue[] setListenerRotationQuaternionParams;

	[Token(Token = "0x17000048")]
	private static IntPtr VideoPlayerClass
	{
		[Token(Token = "0x600030F")]
		[Address(RVA = "0x19A4274", Offset = "0x19A4274", VA = "0x19A4274")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x17000049")]
	private static IntPtr Activity
	{
		[Token(Token = "0x6000310")]
		[Address(RVA = "0x19A4530", Offset = "0x19A4530", VA = "0x19A4530")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x1700004A")]
	public static bool IsAvailable
	{
		[Token(Token = "0x6000311")]
		[Address(RVA = "0x19A479C", Offset = "0x19A479C", VA = "0x19A479C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700004B")]
	public static bool IsPlaying
	{
		[Token(Token = "0x6000312")]
		[Address(RVA = "0x19A4800", Offset = "0x19A4800", VA = "0x19A4800")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700004C")]
	public static PlabackState CurrentPlaybackState
	{
		[Token(Token = "0x6000313")]
		[Address(RVA = "0x19A48F4", Offset = "0x19A48F4", VA = "0x19A48F4")]
		get
		{
			return default(PlabackState);
		}
	}

	[Token(Token = "0x1700004D")]
	public static long Duration
	{
		[Token(Token = "0x6000314")]
		[Address(RVA = "0x19A49EC", Offset = "0x19A49EC", VA = "0x19A49EC")]
		get
		{
			return default(long);
		}
	}

	[Token(Token = "0x1700004E")]
	public static StereoMode VideoStereoMode
	{
		[Token(Token = "0x6000315")]
		[Address(RVA = "0x19A4AE4", Offset = "0x19A4AE4", VA = "0x19A4AE4")]
		get
		{
			return default(StereoMode);
		}
	}

	[Token(Token = "0x1700004F")]
	public static int VideoWidth
	{
		[Token(Token = "0x6000316")]
		[Address(RVA = "0x19A4BDC", Offset = "0x19A4BDC", VA = "0x19A4BDC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000050")]
	public static int VideoHeight
	{
		[Token(Token = "0x6000317")]
		[Address(RVA = "0x19A4CD4", Offset = "0x19A4CD4", VA = "0x19A4CD4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000051")]
	public static long PlaybackPosition
	{
		[Token(Token = "0x6000318")]
		[Address(RVA = "0x19A4DCC", Offset = "0x19A4DCC", VA = "0x19A4DCC")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000319")]
		[Address(RVA = "0x19A4EC4", Offset = "0x19A4EC4", VA = "0x19A4EC4")]
		set
		{
		}
	}

	[Token(Token = "0x600031A")]
	[Address(RVA = "0x19A501C", Offset = "0x19A501C", VA = "0x19A501C")]
	public static void PlayVideo(string path, string drmLicenseUrl, IntPtr surfaceObj)
	{
	}

	[Token(Token = "0x600031B")]
	[Address(RVA = "0x19A5224", Offset = "0x19A5224", VA = "0x19A5224")]
	public static void Stop()
	{
	}

	[Token(Token = "0x600031C")]
	[Address(RVA = "0x19A531C", Offset = "0x19A531C", VA = "0x19A531C")]
	public static void Play()
	{
	}

	[Token(Token = "0x600031D")]
	[Address(RVA = "0x19A5414", Offset = "0x19A5414", VA = "0x19A5414")]
	public static void Pause()
	{
	}

	[Token(Token = "0x600031E")]
	[Address(RVA = "0x19A550C", Offset = "0x19A550C", VA = "0x19A550C")]
	public static void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x600031F")]
	[Address(RVA = "0x19A566C", Offset = "0x19A566C", VA = "0x19A566C")]
	public static void SetLooping(bool looping)
	{
	}

	[Token(Token = "0x6000320")]
	[Address(RVA = "0x19A57C8", Offset = "0x19A57C8", VA = "0x19A57C8")]
	public static void SetListenerRotation(Quaternion rotation)
	{
	}
}
[Token(Token = "0x20000AE")]
public class ButtonDownListener : MonoBehaviour, IPointerDownHandler, IEventSystemHandler
{
	[Token(Token = "0x1400000F")]
	public event Action onButtonDown
	{
		[Token(Token = "0x6000322")]
		[Address(RVA = "0x19A5A0C", Offset = "0x19A5A0C", VA = "0x19A5A0C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000323")]
		[Address(RVA = "0x19A5AA8", Offset = "0x19A5AA8", VA = "0x19A5AA8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000324")]
	[Address(RVA = "0x19A5B44", Offset = "0x19A5B44", VA = "0x19A5B44", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000325")]
	[Address(RVA = "0x19A5B60", Offset = "0x19A5B60", VA = "0x19A5B60")]
	public ButtonDownListener()
	{
	}
}
[Token(Token = "0x20000AF")]
public class MediaPlayerImage : Image
{
	[Token(Token = "0x20000B0")]
	public enum ButtonType
	{
		[Token(Token = "0x4000333")]
		Play,
		[Token(Token = "0x4000334")]
		Pause,
		[Token(Token = "0x4000335")]
		FastForward,
		[Token(Token = "0x4000336")]
		Rewind,
		[Token(Token = "0x4000337")]
		SkipForward,
		[Token(Token = "0x4000338")]
		SkipBack,
		[Token(Token = "0x4000339")]
		Stop
	}

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private ButtonType m_ButtonType;

	[Token(Token = "0x17000052")]
	public ButtonType buttonType
	{
		[Token(Token = "0x6000326")]
		[Address(RVA = "0x19A5B68", Offset = "0x19A5B68", VA = "0x19A5B68")]
		get
		{
			return default(ButtonType);
		}
		[Token(Token = "0x6000327")]
		[Address(RVA = "0x19A5B70", Offset = "0x19A5B70", VA = "0x19A5B70")]
		set
		{
		}
	}

	[Token(Token = "0x6000328")]
	[Address(RVA = "0x19A5B94", Offset = "0x19A5B94", VA = "0x19A5B94", Slot = "44")]
	protected override void OnPopulateMesh(VertexHelper toFill)
	{
	}

	[Token(Token = "0x6000329")]
	[Address(RVA = "0x19A69E8", Offset = "0x19A69E8", VA = "0x19A69E8")]
	public MediaPlayerImage()
	{
	}
}
[Token(Token = "0x20000B1")]
public class MoviePlayerSample : MonoBehaviour
{
	[Token(Token = "0x20000B2")]
	public enum VideoShape
	{
		[Token(Token = "0x400034E")]
		_360,
		[Token(Token = "0x400034F")]
		_180,
		[Token(Token = "0x4000350")]
		Quad
	}

	[Token(Token = "0x20000B3")]
	public enum VideoStereo
	{
		[Token(Token = "0x4000352")]
		Mono,
		[Token(Token = "0x4000353")]
		TopBottom,
		[Token(Token = "0x4000354")]
		LeftRight,
		[Token(Token = "0x4000355")]
		BottomTop
	}

	[Token(Token = "0x20000B4")]
	[CompilerGenerated]
	private sealed class <Start>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x17000056")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000340")]
			[Address(RVA = "0x19A7F00", Offset = "0x19A7F00", VA = "0x19A7F00", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000057")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000342")]
			[Address(RVA = "0x19A7F48", Offset = "0x19A7F48", VA = "0x19A7F48", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600033D")]
		[Address(RVA = "0x19A70CC", Offset = "0x19A70CC", VA = "0x19A70CC")]
		[DebuggerHidden]
		public <Start>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x600033E")]
		[Address(RVA = "0x19A7D54", Offset = "0x19A7D54", VA = "0x19A7D54", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600033F")]
		[Address(RVA = "0x19A7D58", Offset = "0x19A7D58", VA = "0x19A7D58", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000341")]
		[Address(RVA = "0x19A7F08", Offset = "0x19A7F08", VA = "0x19A7F08", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool videoPausedBeforeAppPause;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VideoPlayer videoPlayer;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVROverlay overlay;

	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer mediaRenderer;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RenderTexture copyTexture;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material externalTex2DMaterial;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string MovieName;

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string DrmLicenseUrl;

	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool LoopVideo;

	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public VideoShape Shape;

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public VideoStereo Stereo;

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool AutoDetectStereoLayout;

	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
	public bool DisplayMono;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private VideoShape _LastShape;

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private VideoStereo _LastStereo;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool _LastDisplayMono;

	[Token(Token = "0x17000053")]
	public bool IsPlaying
	{
		[Token(Token = "0x600032A")]
		[Address(RVA = "0x19A6A40", Offset = "0x19A6A40", VA = "0x19A6A40")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600032B")]
		[Address(RVA = "0x19A6A48", Offset = "0x19A6A48", VA = "0x19A6A48")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000054")]
	public long Duration
	{
		[Token(Token = "0x600032C")]
		[Address(RVA = "0x19A6A54", Offset = "0x19A6A54", VA = "0x19A6A54")]
		[CompilerGenerated]
		get
		{
			return default(long);
		}
		[Token(Token = "0x600032D")]
		[Address(RVA = "0x19A6A5C", Offset = "0x19A6A5C", VA = "0x19A6A5C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000055")]
	public long PlaybackPosition
	{
		[Token(Token = "0x600032E")]
		[Address(RVA = "0x19A6A64", Offset = "0x19A6A64", VA = "0x19A6A64")]
		[CompilerGenerated]
		get
		{
			return default(long);
		}
		[Token(Token = "0x600032F")]
		[Address(RVA = "0x19A6A6C", Offset = "0x19A6A6C", VA = "0x19A6A6C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6000330")]
	[Address(RVA = "0x19A6A74", Offset = "0x19A6A74", VA = "0x19A6A74")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000331")]
	[Address(RVA = "0x19A6CF8", Offset = "0x19A6CF8", VA = "0x19A6CF8")]
	private bool IsLocalVideo(string movieName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000332")]
	[Address(RVA = "0x19A6D58", Offset = "0x19A6D58", VA = "0x19A6D58")]
	private void UpdateShapeAndStereo()
	{
	}

	[Token(Token = "0x6000333")]
	[Address(RVA = "0x19A7058", Offset = "0x19A7058", VA = "0x19A7058")]
	[IteratorStateMachine(typeof(<Start>d__33))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000334")]
	[Address(RVA = "0x19A70F4", Offset = "0x19A70F4", VA = "0x19A70F4")]
	public void Play(string moviePath, string drmLicencesUrl)
	{
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0x19A73BC", Offset = "0x19A73BC", VA = "0x19A73BC")]
	public void Play()
	{
	}

	[Token(Token = "0x6000336")]
	[Address(RVA = "0x19A7440", Offset = "0x19A7440", VA = "0x19A7440")]
	public void Pause()
	{
	}

	[Token(Token = "0x6000337")]
	[Address(RVA = "0x19A74C0", Offset = "0x19A74C0", VA = "0x19A74C0")]
	public void SeekTo(long position)
	{
	}

	[Token(Token = "0x6000338")]
	[Address(RVA = "0x19A75AC", Offset = "0x19A75AC", VA = "0x19A75AC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0x19A7B48", Offset = "0x19A7B48", VA = "0x19A7B48")]
	public void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0x19A7BE4", Offset = "0x19A7BE4", VA = "0x19A7BE4")]
	public void Stop()
	{
	}

	[Token(Token = "0x600033B")]
	[Address(RVA = "0x19A7C64", Offset = "0x19A7C64", VA = "0x19A7C64")]
	private void OnApplicationPause(bool appWasPaused)
	{
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0x19A7D44", Offset = "0x19A7D44", VA = "0x19A7D44")]
	public MoviePlayerSample()
	{
	}
}
[Token(Token = "0x20000B6")]
public class MoviePlayerSampleControls : MonoBehaviour
{
	[Token(Token = "0x20000B7")]
	private enum PlaybackState
	{
		[Token(Token = "0x4000372")]
		Playing,
		[Token(Token = "0x4000373")]
		Paused,
		[Token(Token = "0x4000374")]
		Rewinding,
		[Token(Token = "0x4000375")]
		FastForwarding
	}

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MoviePlayerSample Player;

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRInputModule InputModule;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRGazePointer GazePointer;

	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject LeftHand;

	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject RightHand;

	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Canvas Canvas;

	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ButtonDownListener PlayPause;

	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MediaPlayerImage PlayPauseImage;

	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Slider ProgressBar;

	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ButtonDownListener FastForward;

	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MediaPlayerImage FastForwardImage;

	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ButtonDownListener Rewind;

	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public MediaPlayerImage RewindImage;

	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float TimeoutTime;

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool _isVisible;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float _lastButtonTime;

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool _didSeek;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private long _seekPreviousPosition;

	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private long _rewindStartPosition;

	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float _rewindStartTime;

	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private PlaybackState _state;

	[Token(Token = "0x6000345")]
	[Address(RVA = "0x19A8024", Offset = "0x19A8024", VA = "0x19A8024")]
	private void Start()
	{
	}

	[Token(Token = "0x6000346")]
	[Address(RVA = "0x19A8350", Offset = "0x19A8350", VA = "0x19A8350")]
	private void OnPlayPauseClicked()
	{
	}

	[Token(Token = "0x6000347")]
	[Address(RVA = "0x19A8520", Offset = "0x19A8520", VA = "0x19A8520")]
	private void OnFastForwardClicked()
	{
	}

	[Token(Token = "0x6000348")]
	[Address(RVA = "0x19A8644", Offset = "0x19A8644", VA = "0x19A8644")]
	private void OnRewindClicked()
	{
	}

	[Token(Token = "0x6000349")]
	[Address(RVA = "0x19A8740", Offset = "0x19A8740", VA = "0x19A8740")]
	private void OnSeekBarMoved(float value)
	{
	}

	[Token(Token = "0x600034A")]
	[Address(RVA = "0x19A8618", Offset = "0x19A8618", VA = "0x19A8618")]
	private void Seek(long pos)
	{
	}

	[Token(Token = "0x600034B")]
	[Address(RVA = "0x19A87A0", Offset = "0x19A87A0", VA = "0x19A87A0")]
	private void Update()
	{
	}

	[Token(Token = "0x600034C")]
	[Address(RVA = "0x19A8250", Offset = "0x19A8250", VA = "0x19A8250")]
	private void SetVisible(bool visible)
	{
	}

	[Token(Token = "0x600034D")]
	[Address(RVA = "0x19A8AD0", Offset = "0x19A8AD0", VA = "0x19A8AD0")]
	public MoviePlayerSampleControls()
	{
	}
}
[Token(Token = "0x20000B8")]
public static class VectorUtil
{
	[Token(Token = "0x600034E")]
	[Address(RVA = "0x19A7AD0", Offset = "0x19A7AD0", VA = "0x19A7AD0")]
	public static Vector4 ToVector(this Rect rect)
	{
		return default(Vector4);
	}
}
[Token(Token = "0x20000B9")]
public class AppDeeplinkUI : MonoBehaviour
{
	[Token(Token = "0x4000376")]
	private const ulong UNITY_COMPANION_APP_ID = 3535750239844224uL;

	[Token(Token = "0x4000377")]
	private const ulong UNREAL_COMPANION_APP_ID = 4055411724486843uL;

	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RectTransform deeplinkAppId;

	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RectTransform deeplinkMessage;

	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform uiLaunchType;

	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RectTransform uiLaunchSource;

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RectTransform uiDeepLinkMessage;

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool inMenu;

	[Token(Token = "0x600034F")]
	[Address(RVA = "0x19A8AE0", Offset = "0x19A8AE0", VA = "0x19A8AE0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000350")]
	[Address(RVA = "0x19A9100", Offset = "0x19A9100", VA = "0x19A9100")]
	private void Update()
	{
	}

	[Token(Token = "0x6000351")]
	[Address(RVA = "0x19A9354", Offset = "0x19A9354", VA = "0x19A9354")]
	private void LaunchUnrealDeeplinkSample()
	{
	}

	[Token(Token = "0x6000352")]
	[Address(RVA = "0x19A94B8", Offset = "0x19A94B8", VA = "0x19A94B8")]
	private void LaunchSelf()
	{
	}

	[Token(Token = "0x6000353")]
	[Address(RVA = "0x19A9620", Offset = "0x19A9620", VA = "0x19A9620")]
	private void LaunchOtherApp()
	{
	}

	[Token(Token = "0x6000354")]
	[Address(RVA = "0x19A97A4", Offset = "0x19A97A4", VA = "0x19A97A4")]
	public AppDeeplinkUI()
	{
	}
}
[Token(Token = "0x20000BA")]
public class CustomDebugUI : MonoBehaviour
{
	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform textPrefab;

	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static CustomDebugUI instance;

	[Token(Token = "0x4000380")]
	private const BindingFlags privateFlags = BindingFlags.Instance | BindingFlags.NonPublic;

	[Token(Token = "0x6000355")]
	[Address(RVA = "0x19A97B4", Offset = "0x19A97B4", VA = "0x19A97B4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000356")]
	[Address(RVA = "0x19A980C", Offset = "0x19A980C", VA = "0x19A980C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000357")]
	[Address(RVA = "0x19A9810", Offset = "0x19A9810", VA = "0x19A9810")]
	private void Update()
	{
	}

	[Token(Token = "0x6000358")]
	[Address(RVA = "0x19A8EA8", Offset = "0x19A8EA8", VA = "0x19A8EA8")]
	public RectTransform AddTextField(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0x19A9814", Offset = "0x19A9814", VA = "0x19A9814")]
	public void RemoveFromCanvas(RectTransform element, int targetCanvas = 0)
	{
	}

	[Token(Token = "0x600035A")]
	[Address(RVA = "0x19A9A30", Offset = "0x19A9A30", VA = "0x19A9A30")]
	public CustomDebugUI()
	{
	}
}
[Token(Token = "0x20000BB")]
public class DebugUISample : MonoBehaviour
{
	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool inMenu;

	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text sliderText;

	[Token(Token = "0x600035B")]
	[Address(RVA = "0x19A9A38", Offset = "0x19A9A38", VA = "0x19A9A38")]
	private void Start()
	{
	}

	[Token(Token = "0x600035C")]
	[Address(RVA = "0x19A9F40", Offset = "0x19A9F40", VA = "0x19A9F40")]
	public void TogglePressed(Toggle t)
	{
	}

	[Token(Token = "0x600035D")]
	[Address(RVA = "0x19A9FEC", Offset = "0x19A9FEC", VA = "0x19A9FEC")]
	public void RadioPressed(string radioLabel, string group, Toggle t)
	{
	}

	[Token(Token = "0x600035E")]
	[Address(RVA = "0x19AA27C", Offset = "0x19AA27C", VA = "0x19AA27C")]
	public void SliderPressed(float f)
	{
	}

	[Token(Token = "0x600035F")]
	[Address(RVA = "0x19AA350", Offset = "0x19AA350", VA = "0x19AA350")]
	private void Update()
	{
	}

	[Token(Token = "0x6000360")]
	[Address(RVA = "0x19AA420", Offset = "0x19AA420", VA = "0x19AA420")]
	private void LogButtonPressed()
	{
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0x19AA488", Offset = "0x19AA488", VA = "0x19AA488")]
	public DebugUISample()
	{
	}
}
[Token(Token = "0x20000BC")]
public class AnalyticsUI : MonoBehaviour
{
	[Token(Token = "0x6000366")]
	[Address(RVA = "0x19AA630", Offset = "0x19AA630", VA = "0x19AA630")]
	public AnalyticsUI()
	{
	}
}
[Token(Token = "0x20000BD")]
public class SampleUI : MonoBehaviour
{
	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RectTransform collectionButton;

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RectTransform inputText;

	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform valueText;

	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool inMenu;

	[Token(Token = "0x6000367")]
	[Address(RVA = "0x19AA638", Offset = "0x19AA638", VA = "0x19AA638")]
	private void Start()
	{
	}

	[Token(Token = "0x6000368")]
	[Address(RVA = "0x19AA6C8", Offset = "0x19AA6C8", VA = "0x19AA6C8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000369")]
	[Address(RVA = "0x19AA798", Offset = "0x19AA798", VA = "0x19AA798")]
	private string GetText()
	{
		return null;
	}

	[Token(Token = "0x600036A")]
	[Address(RVA = "0x19AA7F4", Offset = "0x19AA7F4", VA = "0x19AA7F4")]
	public SampleUI()
	{
	}
}
[Token(Token = "0x20000BE")]
public class StartCrashlytics : MonoBehaviour
{
	[Token(Token = "0x600036B")]
	[Address(RVA = "0x19AA7FC", Offset = "0x19AA7FC", VA = "0x19AA7FC")]
	public StartCrashlytics()
	{
	}
}
[Token(Token = "0x20000BF")]
public class HandsActiveChecker : MonoBehaviour
{
	[Token(Token = "0x20000C0")]
	[CompilerGenerated]
	private sealed class <GetCenterEye>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400038B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400038C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400038D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandsActiveChecker <>4__this;

		[Token(Token = "0x17000058")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000373")]
			[Address(RVA = "0x1A8CED0", Offset = "0x1A8CED0", VA = "0x1A8CED0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000059")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000375")]
			[Address(RVA = "0x1A8CF18", Offset = "0x1A8CF18", VA = "0x1A8CF18", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000370")]
		[Address(RVA = "0x1A8CD74", Offset = "0x1A8CD74", VA = "0x1A8CD74")]
		[DebuggerHidden]
		public <GetCenterEye>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000371")]
		[Address(RVA = "0x1A8CD9C", Offset = "0x1A8CD9C", VA = "0x1A8CD9C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000372")]
		[Address(RVA = "0x1A8CDA0", Offset = "0x1A8CDA0", VA = "0x1A8CDA0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000374")]
		[Address(RVA = "0x1A8CED8", Offset = "0x1A8CED8", VA = "0x1A8CED8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _notificationPrefab;

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject _notification;

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRCameraRig _cameraRig;

	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _centerEye;

	[Token(Token = "0x600036C")]
	[Address(RVA = "0x19AA804", Offset = "0x19AA804", VA = "0x19AA804")]
	private void Awake()
	{
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0x19AA910", Offset = "0x19AA910", VA = "0x19AA910")]
	private void Update()
	{
	}

	[Token(Token = "0x600036E")]
	[Address(RVA = "0x19AA89C", Offset = "0x19AA89C", VA = "0x19AA89C")]
	[IteratorStateMachine(typeof(<GetCenterEye>d__6))]
	private IEnumerator GetCenterEye()
	{
		return null;
	}

	[Token(Token = "0x600036F")]
	[Address(RVA = "0x19AAAA8", Offset = "0x19AAAA8", VA = "0x19AAAA8")]
	public HandsActiveChecker()
	{
	}
}
[Token(Token = "0x20000C1")]
[ExecuteInEditMode]
public class CharacterCapsule : MonoBehaviour
{
	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CharacterController _character;

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter _meshFilter;

	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _height;

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _radius;

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Range(4f, 32f)]
	public int SubdivisionsU;

	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Range(4f, 32f)]
	public int SubdivisionsV;

	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _subdivisionU;

	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int _subdivisionV;

	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3[] _vertices;

	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int[] _triangles;

	[Token(Token = "0x6000376")]
	[Address(RVA = "0x1A8CF20", Offset = "0x1A8CF20", VA = "0x1A8CF20")]
	private void Update()
	{
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0x1A8E8C8", Offset = "0x1A8E8C8", VA = "0x1A8E8C8")]
	public CharacterCapsule()
	{
	}
}
[Token(Token = "0x20000C2")]
public class LocomotionSampleSupport : MonoBehaviour
{
	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LocomotionController lc;

	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool inMenu;

	[Token(Token = "0x1700005A")]
	private LocomotionTeleport TeleportController
	{
		[Token(Token = "0x6000378")]
		[Address(RVA = "0x1A8E8D0", Offset = "0x1A8E8D0", VA = "0x1A8E8D0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000379")]
	[Address(RVA = "0x1A8E920", Offset = "0x1A8E920", VA = "0x1A8E920")]
	public void Start()
	{
	}

	[Token(Token = "0x600037A")]
	[Address(RVA = "0x1A8ED58", Offset = "0x1A8ED58", VA = "0x1A8ED58")]
	public void Update()
	{
	}

	[Token(Token = "0x600037B")]
	[Address(RVA = "0x1A8EE30", Offset = "0x1A8EE30", VA = "0x1A8EE30")]
	[Conditional("DEBUG_LOCOMOTION_PANEL")]
	private static void Log(string msg)
	{
	}

	[Token(Token = "0x600037C")]
	public static TActivate ActivateCategory<TCategory, TActivate>(GameObject target) where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x600037D")]
	protected void ActivateHandlers<TInput, TAim, TTarget, TOrientation, TTransition>() where TInput : TeleportInputHandler where TAim : TeleportAimHandler where TTarget : TeleportTargetHandler where TOrientation : TeleportOrientationHandler where TTransition : TeleportTransition
	{
	}

	[Token(Token = "0x600037E")]
	protected void ActivateInput<TActivate>() where TActivate : TeleportInputHandler
	{
	}

	[Token(Token = "0x600037F")]
	protected void ActivateAim<TActivate>() where TActivate : TeleportAimHandler
	{
	}

	[Token(Token = "0x6000380")]
	protected void ActivateTarget<TActivate>() where TActivate : TeleportTargetHandler
	{
	}

	[Token(Token = "0x6000381")]
	protected void ActivateOrientation<TActivate>() where TActivate : TeleportOrientationHandler
	{
	}

	[Token(Token = "0x6000382")]
	protected void ActivateTransition<TActivate>() where TActivate : TeleportTransition
	{
	}

	[Token(Token = "0x6000383")]
	protected TActivate ActivateCategory<TCategory, TActivate>() where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0x1A8EE88", Offset = "0x1A8EE88", VA = "0x1A8EE88")]
	protected void UpdateToggle(Toggle toggle, bool enabled)
	{
	}

	[Token(Token = "0x6000385")]
	[Address(RVA = "0x1A8EEC8", Offset = "0x1A8EEC8", VA = "0x1A8EEC8")]
	private void SetupNonCap()
	{
	}

	[Token(Token = "0x6000386")]
	[Address(RVA = "0x1A8EF34", Offset = "0x1A8EF34", VA = "0x1A8EF34")]
	private void SetupTeleportDefaults()
	{
	}

	[Token(Token = "0x6000387")]
	[Address(RVA = "0x1A8F080", Offset = "0x1A8F080", VA = "0x1A8F080")]
	protected GameObject AddInstance(GameObject template, string label)
	{
		return null;
	}

	[Token(Token = "0x6000388")]
	[Address(RVA = "0x1A8F150", Offset = "0x1A8F150", VA = "0x1A8F150")]
	private void SetupNodeTeleport()
	{
	}

	[Token(Token = "0x6000389")]
	[Address(RVA = "0x1A8EC34", Offset = "0x1A8EC34", VA = "0x1A8EC34")]
	private void SetupTwoStickTeleport()
	{
	}

	[Token(Token = "0x600038A")]
	[Address(RVA = "0x1A8F220", Offset = "0x1A8F220", VA = "0x1A8F220")]
	private void SetupWalkOnly()
	{
	}

	[Token(Token = "0x600038B")]
	[Address(RVA = "0x1A8F26C", Offset = "0x1A8F26C", VA = "0x1A8F26C")]
	private void SetupLeftStrafeRightTeleport()
	{
	}

	[Token(Token = "0x600038C")]
	[Address(RVA = "0x1A8F37C", Offset = "0x1A8F37C", VA = "0x1A8F37C")]
	public LocomotionSampleSupport()
	{
	}
}
[Token(Token = "0x20000C3")]
[RequireComponent(typeof(Canvas))]
public class OVROverlayCanvas : MonoBehaviour
{
	[Token(Token = "0x20000C4")]
	public enum DrawMode
	{
		[Token(Token = "0x40003AF")]
		Opaque,
		[Token(Token = "0x40003B0")]
		OpaqueWithClip,
		[Token(Token = "0x40003B1")]
		TransparentDefaultAlpha,
		[Token(Token = "0x40003B2")]
		TransparentCorrectAlpha
	}

	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[HideInInspector]
	private Shader _transparentShader;

	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[HideInInspector]
	private Shader _opaqueShader;

	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform _rectTransform;

	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Canvas _canvas;

	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Camera _camera;

	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OVROverlay _overlay;

	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RenderTexture _renderTexture;

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MeshRenderer _meshRenderer;

	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Mesh _quad;

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material _defaultMat;

	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int MaxTextureSize;

	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int MinTextureSize;

	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float PixelsPerUnit;

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int DrawRate;

	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int DrawFrameOffset;

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool Expensive;

	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int Layer;

	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public DrawMode Opacity;

	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool ScaleViewport;

	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Plane[] _FrustumPlanes;

	[Token(Token = "0x1700005B")]
	public bool overlayEnabled
	{
		[Token(Token = "0x6000393")]
		[Address(RVA = "0x1A909C0", Offset = "0x1A909C0", VA = "0x1A909C0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000394")]
		[Address(RVA = "0x1A90A44", Offset = "0x1A90A44", VA = "0x1A90A44")]
		set
		{
		}
	}

	[Token(Token = "0x600038D")]
	[Address(RVA = "0x1A8F384", Offset = "0x1A8F384", VA = "0x1A8F384")]
	private void Start()
	{
	}

	[Token(Token = "0x600038E")]
	[Address(RVA = "0x1A90048", Offset = "0x1A90048", VA = "0x1A90048")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600038F")]
	[Address(RVA = "0x1A900BC", Offset = "0x1A900BC", VA = "0x1A900BC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000390")]
	[Address(RVA = "0x1A9018C", Offset = "0x1A9018C", VA = "0x1A9018C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000391")]
	[Address(RVA = "0x1A9025C", Offset = "0x1A9025C", VA = "0x1A9025C", Slot = "4")]
	protected virtual bool ShouldRender()
	{
		return default(bool);
	}

	[Token(Token = "0x6000392")]
	[Address(RVA = "0x1A90460", Offset = "0x1A90460", VA = "0x1A90460")]
	private void Update()
	{
	}

	[Token(Token = "0x6000395")]
	[Address(RVA = "0x1A90B00", Offset = "0x1A90B00", VA = "0x1A90B00")]
	public OVROverlayCanvas()
	{
	}
}
[Token(Token = "0x20000C5")]
public class AugmentedObject : MonoBehaviour
{
	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerHand;

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform shadow;

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool groundShadow;

	[Token(Token = "0x6000397")]
	[Address(RVA = "0x1A90BBC", Offset = "0x1A90BBC", VA = "0x1A90BBC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000398")]
	[Address(RVA = "0x1A90F5C", Offset = "0x1A90F5C", VA = "0x1A90F5C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000399")]
	[Address(RVA = "0x1A910F0", Offset = "0x1A910F0", VA = "0x1A910F0")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x600039A")]
	[Address(RVA = "0x1A910F8", Offset = "0x1A910F8", VA = "0x1A910F8")]
	public void Release()
	{
	}

	[Token(Token = "0x600039B")]
	[Address(RVA = "0x1A910E0", Offset = "0x1A910E0", VA = "0x1A910E0")]
	private void ToggleShadowType()
	{
	}

	[Token(Token = "0x600039C")]
	[Address(RVA = "0x1A91100", Offset = "0x1A91100", VA = "0x1A91100")]
	public AugmentedObject()
	{
	}
}
[Token(Token = "0x20000C6")]
public class BrushController : MonoBehaviour
{
	[Token(Token = "0x20000C7")]
	[CompilerGenerated]
	private sealed class <FadeCameraClearColor>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float fadeTime;

		[Token(Token = "0x40003BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Color newColor;

		[Token(Token = "0x40003BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <timer>5__2;

		[Token(Token = "0x40003BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color <currentColor>5__3;

		[Token(Token = "0x1700005C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003A7")]
			[Address(RVA = "0x1A91848", Offset = "0x1A91848", VA = "0x1A91848", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003A9")]
			[Address(RVA = "0x1A91890", Offset = "0x1A91890", VA = "0x1A91890", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003A4")]
		[Address(RVA = "0x1A916EC", Offset = "0x1A916EC", VA = "0x1A916EC")]
		[DebuggerHidden]
		public <FadeCameraClearColor>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x60003A5")]
		[Address(RVA = "0x1A91744", Offset = "0x1A91744", VA = "0x1A91744", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003A6")]
		[Address(RVA = "0x1A91748", Offset = "0x1A91748", VA = "0x1A91748", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003A8")]
		[Address(RVA = "0x1A91850", Offset = "0x1A91850", VA = "0x1A91850", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000C8")]
	[CompilerGenerated]
	private sealed class <FadeSphere>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BrushController <>4__this;

		[Token(Token = "0x40003C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x40003C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Color newColor;

		[Token(Token = "0x40003C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool disableOnFinish;

		[Token(Token = "0x40003C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <timer>5__2;

		[Token(Token = "0x40003C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Color <currentColor>5__3;

		[Token(Token = "0x1700005E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003AD")]
			[Address(RVA = "0x1A91A14", Offset = "0x1A91A14", VA = "0x1A91A14", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003AF")]
			[Address(RVA = "0x1A91A5C", Offset = "0x1A91A5C", VA = "0x1A91A5C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003AA")]
		[Address(RVA = "0x1A91714", Offset = "0x1A91714", VA = "0x1A91714")]
		[DebuggerHidden]
		public <FadeSphere>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x60003AB")]
		[Address(RVA = "0x1A91898", Offset = "0x1A91898", VA = "0x1A91898", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003AC")]
		[Address(RVA = "0x1A9189C", Offset = "0x1A9189C", VA = "0x1A9189C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003AE")]
		[Address(RVA = "0x1A91A1C", Offset = "0x1A91A1C", VA = "0x1A91A1C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PassthroughBrush brush;

	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshRenderer backgroundSphere;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IEnumerator grabRoutine;

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private IEnumerator releaseRoutine;

	[Token(Token = "0x600039D")]
	[Address(RVA = "0x1A91108", Offset = "0x1A91108", VA = "0x1A91108")]
	private void Start()
	{
	}

	[Token(Token = "0x600039E")]
	[Address(RVA = "0x1A913E8", Offset = "0x1A913E8", VA = "0x1A913E8")]
	private void Update()
	{
	}

	[Token(Token = "0x600039F")]
	[Address(RVA = "0x1A91438", Offset = "0x1A91438", VA = "0x1A91438")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0x1A915B0", Offset = "0x1A915B0", VA = "0x1A915B0")]
	public void Release()
	{
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0x1A91654", Offset = "0x1A91654", VA = "0x1A91654")]
	[IteratorStateMachine(typeof(<FadeCameraClearColor>d__8))]
	private IEnumerator FadeCameraClearColor(Color newColor, float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0x1A914F0", Offset = "0x1A914F0", VA = "0x1A914F0")]
	[IteratorStateMachine(typeof(<FadeSphere>d__9))]
	private IEnumerator FadeSphere(Color newColor, float fadeTime, bool disableOnFinish = false)
	{
		return null;
	}

	[Token(Token = "0x60003A3")]
	[Address(RVA = "0x1A9173C", Offset = "0x1A9173C", VA = "0x1A9173C")]
	public BrushController()
	{
	}
}
[Token(Token = "0x20000C9")]
public class EnableUnpremultipliedAlpha : MonoBehaviour
{
	[Token(Token = "0x60003B0")]
	[Address(RVA = "0x1A91A64", Offset = "0x1A91A64", VA = "0x1A91A64")]
	private void Start()
	{
	}

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0x1A91AB8", Offset = "0x1A91AB8", VA = "0x1A91AB8")]
	public EnableUnpremultipliedAlpha()
	{
	}
}
[Token(Token = "0x20000CA")]
public class Flashlight : MonoBehaviour
{
	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject lightVolume;

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Light spotlight;

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject bulbGlow;

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0x1A91AC0", Offset = "0x1A91AC0", VA = "0x1A91AC0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0x1A91C94", Offset = "0x1A91C94", VA = "0x1A91C94")]
	public void ToggleFlashlight()
	{
	}

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0x1A91D24", Offset = "0x1A91D24", VA = "0x1A91D24")]
	public void EnableFlashlight(bool doEnable)
	{
	}

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0x1A91D80", Offset = "0x1A91D80", VA = "0x1A91D80")]
	public Flashlight()
	{
	}
}
[Token(Token = "0x20000CB")]
public class FlashlightController : MonoBehaviour
{
	[Token(Token = "0x20000CC")]
	[CompilerGenerated]
	private sealed class <FadeLighting>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FlashlightController <>4__this;

		[Token(Token = "0x40003D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x40003D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Color newColor;

		[Token(Token = "0x40003DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float sceneLightIntensity;

		[Token(Token = "0x40003DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <timer>5__2;

		[Token(Token = "0x40003DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Color <currentColor>5__3;

		[Token(Token = "0x40003DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float <currentLight>5__4;

		[Token(Token = "0x17000060")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003C2")]
			[Address(RVA = "0x1A92F58", Offset = "0x1A92F58", VA = "0x1A92F58", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000061")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003C4")]
			[Address(RVA = "0x1A92FA0", Offset = "0x1A92FA0", VA = "0x1A92FA0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003BF")]
		[Address(RVA = "0x1A92CC0", Offset = "0x1A92CC0", VA = "0x1A92CC0")]
		[DebuggerHidden]
		public <FadeLighting>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x60003C0")]
		[Address(RVA = "0x1A92D88", Offset = "0x1A92D88", VA = "0x1A92D88", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003C1")]
		[Address(RVA = "0x1A92D8C", Offset = "0x1A92D8C", VA = "0x1A92D8C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003C3")]
		[Address(RVA = "0x1A92F60", Offset = "0x1A92F60", VA = "0x1A92F60", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Light sceneLight;

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform flashlightRoot;

	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 localPosition;

	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Quaternion localRotation;

	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMesh infoText;

	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GrabObject externalController;

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private OVRSkeleton[] skeletons;

	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private OVRHand[] hands;

	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int handIndex;

	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool pinching;

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0x1A91D88", Offset = "0x1A91D88", VA = "0x1A91D88")]
	private void Start()
	{
	}

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0x1A92070", Offset = "0x1A92070", VA = "0x1A92070")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0x1A9235C", Offset = "0x1A9235C", VA = "0x1A9235C")]
	private void FindHands()
	{
	}

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0x1A92684", Offset = "0x1A92684", VA = "0x1A92684")]
	private void AlignWithHand(OVRHand hand, OVRSkeleton skeleton)
	{
	}

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0x1A9295C", Offset = "0x1A9295C", VA = "0x1A9295C")]
	private void AlignWithController(OVRInput.Controller controller)
	{
	}

	[Token(Token = "0x60003BB")]
	[Address(RVA = "0x1A92A44", Offset = "0x1A92A44", VA = "0x1A92A44")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0x1A92BDC", Offset = "0x1A92BDC", VA = "0x1A92BDC")]
	public void Release()
	{
	}

	[Token(Token = "0x60003BD")]
	[Address(RVA = "0x1A92B2C", Offset = "0x1A92B2C", VA = "0x1A92B2C")]
	[IteratorStateMachine(typeof(<FadeLighting>d__17))]
	private IEnumerator FadeLighting(Color newColor, float sceneLightIntensity, float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x60003BE")]
	[Address(RVA = "0x1A92CE8", Offset = "0x1A92CE8", VA = "0x1A92CE8")]
	public FlashlightController()
	{
	}
}
[Token(Token = "0x20000CD")]
public class GrabObject : MonoBehaviour
{
	[Token(Token = "0x20000CE")]
	public enum ManipulationType
	{
		[Token(Token = "0x40003E7")]
		Default,
		[Token(Token = "0x40003E8")]
		ForcedHand,
		[Token(Token = "0x40003E9")]
		DollyHand,
		[Token(Token = "0x40003EA")]
		DollyAttached,
		[Token(Token = "0x40003EB")]
		HorizontalScaled,
		[Token(Token = "0x40003EC")]
		VerticalScaled,
		[Token(Token = "0x40003ED")]
		Menu
	}

	[Token(Token = "0x20000CF")]
	public delegate void GrabbedObject(OVRInput.Controller grabHand);

	[Token(Token = "0x20000D0")]
	public delegate void ReleasedObject();

	[Token(Token = "0x20000D1")]
	public delegate void SetCursorPosition(Vector3 cursorPosition);

	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[TextArea]
	public string ObjectName;

	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[TextArea]
	public string ObjectInstructions;

	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ManipulationType objectManipulationType;

	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool showLaserWhileGrabbed;

	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Quaternion grabbedRotation;

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GrabbedObject GrabbedObjectDelegate;

	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ReleasedObject ReleasedObjectDelegate;

	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public SetCursorPosition CursorPositionDelegate;

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0x1A92FA8", Offset = "0x1A92FA8", VA = "0x1A92FA8")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0x1A93008", Offset = "0x1A93008", VA = "0x1A93008")]
	public void Release()
	{
	}

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0x1A93024", Offset = "0x1A93024", VA = "0x1A93024")]
	public void CursorPos(Vector3 cursorPos)
	{
	}

	[Token(Token = "0x60003C8")]
	[Address(RVA = "0x1A93040", Offset = "0x1A93040", VA = "0x1A93040")]
	public GrabObject()
	{
	}
}
[Token(Token = "0x20000D2")]
public class HandMeshMask : MonoBehaviour
{
	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRSkeleton referenceHand;

	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material maskMaterial;

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("The segments around the tip of a finger")]
	public int radialDivisions;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Tooltip("The fade range (finger width is 2x this)")]
	public float borderSize;

	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Tooltip("Along the fingers, each knuckle scales down by this amount.  Default is zero for uniform width along entire finger.")]
	public float fingerTaper;

	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Tooltip("Shorten the last bone of each finger; need this to account for bone structure (end bone is at finger tip instead of center). Default is 1.")]
	public float fingerTipLength;

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Tooltip("Move the base of the 4 main fingers towards the tips, to avoid a visible mesh crack between finger webbing. Default is 0.")]
	public float webOffset;

	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float handScale;

	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject maskMeshObject;

	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Mesh maskMesh;

	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] handVertices;

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector2[] handUVs;

	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Color32[] handColors;

	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int[] handTriangles;

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int vertCounter;

	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int triCounter;

	[Token(Token = "0x60003D5")]
	[Address(RVA = "0x1A932F8", Offset = "0x1A932F8", VA = "0x1A932F8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003D6")]
	[Address(RVA = "0x1A93558", Offset = "0x1A93558", VA = "0x1A93558")]
	private void Update()
	{
	}

	[Token(Token = "0x60003D7")]
	[Address(RVA = "0x1A93720", Offset = "0x1A93720", VA = "0x1A93720")]
	private void CreateHandMesh()
	{
	}

	[Token(Token = "0x60003D8")]
	[Address(RVA = "0x1A93D74", Offset = "0x1A93D74", VA = "0x1A93D74")]
	private void AddKnuckleMesh(int knuckleVerts, float point1scale, float point2scale, Vector3 point1, Vector3 point2)
	{
	}

	[Token(Token = "0x60003D9")]
	[Address(RVA = "0x1A9430C", Offset = "0x1A9430C", VA = "0x1A9430C")]
	private void AddPalmMesh(int knuckleVerts)
	{
	}

	[Token(Token = "0x60003DA")]
	[Address(RVA = "0x1A96614", Offset = "0x1A96614", VA = "0x1A96614")]
	private void AddVertex(Vector3 position, Vector2 uv, Color color)
	{
	}

	[Token(Token = "0x60003DB")]
	[Address(RVA = "0x1A96988", Offset = "0x1A96988", VA = "0x1A96988")]
	public HandMeshMask()
	{
	}
}
[Token(Token = "0x20000D3")]
public class HandMeshUI : MonoBehaviour
{
	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SphereCollider[] knobs;

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMesh[] readouts;

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int rightHeldKnob;

	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int leftHeldKnob;

	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public OVRSkeleton leftHand;

	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public OVRSkeleton rightHand;

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public HandMeshMask leftMask;

	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public HandMeshMask rightMask;

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0x1A969AC", Offset = "0x1A969AC", VA = "0x1A969AC")]
	private void Start()
	{
	}

	[Token(Token = "0x60003DD")]
	[Address(RVA = "0x1A96D14", Offset = "0x1A96D14", VA = "0x1A96D14")]
	private void Update()
	{
	}

	[Token(Token = "0x60003DE")]
	[Address(RVA = "0x1A96A48", Offset = "0x1A96A48", VA = "0x1A96A48")]
	private void SetSliderValue(int sliderID, float value, bool isNormalized)
	{
	}

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0x1A9717C", Offset = "0x1A9717C", VA = "0x1A9717C")]
	private void CheckForHands()
	{
	}

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0x1A976EC", Offset = "0x1A976EC", VA = "0x1A976EC")]
	public HandMeshUI()
	{
	}
}
[Token(Token = "0x20000D4")]
public class ObjectManipulator : MonoBehaviour
{
	[Token(Token = "0x20000D5")]
	[CompilerGenerated]
	private sealed class <StartDemo>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400041A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400041B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObjectManipulator <>4__this;

		[Token(Token = "0x400041C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <timer>5__2;

		[Token(Token = "0x400041D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <fadeTime>5__3;

		[Token(Token = "0x17000062")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003F0")]
			[Address(RVA = "0x1A99F94", Offset = "0x1A99F94", VA = "0x1A99F94", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000063")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003F2")]
			[Address(RVA = "0x1A99FDC", Offset = "0x1A99FDC", VA = "0x1A99FDC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003ED")]
		[Address(RVA = "0x1A998D4", Offset = "0x1A998D4", VA = "0x1A998D4")]
		[DebuggerHidden]
		public <StartDemo>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x60003EE")]
		[Address(RVA = "0x1A99CBC", Offset = "0x1A99CBC", VA = "0x1A99CBC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003EF")]
		[Address(RVA = "0x1A99CC0", Offset = "0x1A99CC0", VA = "0x1A99CC0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003F1")]
		[Address(RVA = "0x1A99F9C", Offset = "0x1A99F9C", VA = "0x1A99F9C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRInput.Controller controller;

	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject hoverObject;

	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject grabObject;

	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float grabTime;

	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 localGrabOffset;

	[Token(Token = "0x400040B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Quaternion localGrabRotation;

	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 camGrabPosition;

	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion camGrabRotation;

	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 handGrabPosition;

	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Quaternion handGrabRotation;

	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 cursorPosition;

	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float rotationOffset;

	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public LineRenderer laser;

	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform objectInfo;

	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public TextMesh objectNameLabel;

	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public TextMesh objectInstructionsLabel;

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Image objectInfoBG;

	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject demoObjects;

	[Token(Token = "0x4000418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public OVRPassthroughLayer passthrough;

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0x1A976FC", Offset = "0x1A976FC", VA = "0x1A976FC")]
	private void Start()
	{
	}

	[Token(Token = "0x60003E2")]
	[Address(RVA = "0x1A978F8", Offset = "0x1A978F8", VA = "0x1A978F8")]
	private void Update()
	{
	}

	[Token(Token = "0x60003E3")]
	[Address(RVA = "0x1A98834", Offset = "0x1A98834", VA = "0x1A98834")]
	private void GrabHoverObject(GameObject grbObj, Vector3 controllerPos, Quaternion controllerRot)
	{
	}

	[Token(Token = "0x60003E4")]
	[Address(RVA = "0x1A995C8", Offset = "0x1A995C8", VA = "0x1A995C8")]
	private void ReleaseObject()
	{
	}

	[Token(Token = "0x60003E5")]
	[Address(RVA = "0x1A97884", Offset = "0x1A97884", VA = "0x1A97884")]
	[IteratorStateMachine(typeof(<StartDemo>d__23))]
	private IEnumerator StartDemo()
	{
		return null;
	}

	[Token(Token = "0x60003E6")]
	[Address(RVA = "0x1A97B48", Offset = "0x1A97B48", VA = "0x1A97B48")]
	private void FindHoverObject(Vector3 controllerPos, Quaternion controllerRot)
	{
	}

	[Token(Token = "0x60003E7")]
	[Address(RVA = "0x1A98B28", Offset = "0x1A98B28", VA = "0x1A98B28")]
	private void ManipulateObject(GameObject obj, Vector3 controllerPos, Quaternion controllerRot)
	{
	}

	[Token(Token = "0x60003E8")]
	[Address(RVA = "0x1A998FC", Offset = "0x1A998FC", VA = "0x1A998FC")]
	private void ClampGrabOffset(ref Vector3 localOffset, float thumbY)
	{
	}

	[Token(Token = "0x60003E9")]
	[Address(RVA = "0x1A999B0", Offset = "0x1A999B0", VA = "0x1A999B0")]
	private Vector3 ClampScale(Vector3 localScale, Vector2 thumb)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60003EA")]
	[Address(RVA = "0x1A999E0", Offset = "0x1A999E0", VA = "0x1A999E0")]
	private void CheckForDominantHand()
	{
	}

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0x1A997B8", Offset = "0x1A997B8", VA = "0x1A997B8")]
	private void AssignInstructions(GrabObject targetObject)
	{
	}

	[Token(Token = "0x60003EC")]
	[Address(RVA = "0x1A99AD0", Offset = "0x1A99AD0", VA = "0x1A99AD0")]
	public ObjectManipulator()
	{
	}
}
[Token(Token = "0x20000D6")]
public class OverlayPassthrough : MonoBehaviour
{
	[Token(Token = "0x400041E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0x1A99FE4", Offset = "0x1A99FE4", VA = "0x1A99FE4")]
	private void Start()
	{
	}

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0x1A9A150", Offset = "0x1A9A150", VA = "0x1A9A150")]
	private void Update()
	{
	}

	[Token(Token = "0x60003F5")]
	[Address(RVA = "0x1A9A204", Offset = "0x1A9A204", VA = "0x1A9A204")]
	public OverlayPassthrough()
	{
	}
}
[Token(Token = "0x20000D7")]
public class PassthroughBrush : MonoBehaviour
{
	[Token(Token = "0x20000D8")]
	public enum BrushState
	{
		[Token(Token = "0x400042A")]
		Idle,
		[Token(Token = "0x400042B")]
		Inking
	}

	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerHand;

	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject lineSegmentPrefab;

	[Token(Token = "0x4000421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject lineContainer;

	[Token(Token = "0x4000422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool forceActive;

	[Token(Token = "0x4000423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LineRenderer currentLineSegment;

	[Token(Token = "0x4000424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<Vector3> inkPositions;

	[Token(Token = "0x4000425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float minInkDist;

	[Token(Token = "0x4000426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float strokeWidth;

	[Token(Token = "0x4000427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float strokeLength;

	[Token(Token = "0x4000428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private BrushState brushStatus;

	[Token(Token = "0x60003F6")]
	[Address(RVA = "0x1A9A20C", Offset = "0x1A9A20C", VA = "0x1A9A20C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003F7")]
	[Address(RVA = "0x1A9A214", Offset = "0x1A9A214", VA = "0x1A9A214")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60003F8")]
	[Address(RVA = "0x1A9A4C4", Offset = "0x1A9A4C4", VA = "0x1A9A4C4")]
	private void StartLine(Vector3 inkPos)
	{
	}

	[Token(Token = "0x60003F9")]
	[Address(RVA = "0x1A9A6F8", Offset = "0x1A9A6F8", VA = "0x1A9A6F8")]
	private void UpdateLine(Vector3 inkPos)
	{
	}

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0x1A9A938", Offset = "0x1A9A938", VA = "0x1A9A938")]
	public void ClearLines()
	{
	}

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0x1A9A3DC", Offset = "0x1A9A3DC", VA = "0x1A9A3DC")]
	public void UndoInkLine()
	{
	}

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0x1A9AA08", Offset = "0x1A9AA08", VA = "0x1A9AA08")]
	public PassthroughBrush()
	{
	}
}
[Token(Token = "0x20000D9")]
public class PassthroughController : MonoBehaviour
{
	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x60003FD")]
	[Address(RVA = "0x1A9AAA4", Offset = "0x1A9AAA4", VA = "0x1A9AAA4")]
	private void Start()
	{
	}

	[Token(Token = "0x60003FE")]
	[Address(RVA = "0x1A9AC10", Offset = "0x1A9AC10", VA = "0x1A9AC10")]
	private void Update()
	{
	}

	[Token(Token = "0x60003FF")]
	[Address(RVA = "0x1A9ADFC", Offset = "0x1A9ADFC", VA = "0x1A9ADFC")]
	public PassthroughController()
	{
	}
}
[Token(Token = "0x20000DA")]
public class PassthroughProjectionSurface : MonoBehaviour
{
	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter projectionObject;

	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MeshRenderer quadOutline;

	[Token(Token = "0x6000400")]
	[Address(RVA = "0x1A9AE04", Offset = "0x1A9AE04", VA = "0x1A9AE04")]
	private void Start()
	{
	}

	[Token(Token = "0x6000401")]
	[Address(RVA = "0x1A9AFEC", Offset = "0x1A9AFEC", VA = "0x1A9AFEC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000402")]
	[Address(RVA = "0x1A9B18C", Offset = "0x1A9B18C", VA = "0x1A9B18C")]
	public PassthroughProjectionSurface()
	{
	}
}
[Token(Token = "0x20000DB")]
public class PassthroughStyler : MonoBehaviour
{
	[Token(Token = "0x20000DC")]
	[CompilerGenerated]
	private sealed class <FadeToCurrentStyle>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400043F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PassthroughStyler <>4__this;

		[Token(Token = "0x4000442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x4000443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <timer>5__2;

		[Token(Token = "0x4000444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <brightness>5__3;

		[Token(Token = "0x4000445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <contrast>5__4;

		[Token(Token = "0x4000446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <posterize>5__5;

		[Token(Token = "0x4000447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Color <edgeCol>5__6;

		[Token(Token = "0x17000064")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000415")]
			[Address(RVA = "0x1A9BE10", Offset = "0x1A9BE10", VA = "0x1A9BE10", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000065")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000417")]
			[Address(RVA = "0x1A9BE58", Offset = "0x1A9BE58", VA = "0x1A9BE58", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000412")]
		[Address(RVA = "0x1A9BB38", Offset = "0x1A9BB38", VA = "0x1A9BB38")]
		[DebuggerHidden]
		public <FadeToCurrentStyle>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6000413")]
		[Address(RVA = "0x1A9BC9C", Offset = "0x1A9BC9C", VA = "0x1A9BC9C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000414")]
		[Address(RVA = "0x1A9BCA0", Offset = "0x1A9BCA0", VA = "0x1A9BCA0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000416")]
		[Address(RVA = "0x1A9BE18", Offset = "0x1A9BE18", VA = "0x1A9BE18", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000DD")]
	[CompilerGenerated]
	private sealed class <FadeToDefaultPassthrough>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400044A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PassthroughStyler <>4__this;

		[Token(Token = "0x400044B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x400044C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <timer>5__2;

		[Token(Token = "0x400044D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <brightness>5__3;

		[Token(Token = "0x400044E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <contrast>5__4;

		[Token(Token = "0x400044F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <posterize>5__5;

		[Token(Token = "0x4000450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Color <edgeCol>5__6;

		[Token(Token = "0x17000066")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600041B")]
			[Address(RVA = "0x1A9BFE8", Offset = "0x1A9BFE8", VA = "0x1A9BFE8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000067")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600041D")]
			[Address(RVA = "0x1A9C030", Offset = "0x1A9C030", VA = "0x1A9C030", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000418")]
		[Address(RVA = "0x1A9BB60", Offset = "0x1A9BB60", VA = "0x1A9BB60")]
		[DebuggerHidden]
		public <FadeToDefaultPassthrough>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6000419")]
		[Address(RVA = "0x1A9BE60", Offset = "0x1A9BE60", VA = "0x1A9BE60", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600041A")]
		[Address(RVA = "0x1A9BE64", Offset = "0x1A9BE64", VA = "0x1A9BE64", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600041C")]
		[Address(RVA = "0x1A9BFF0", Offset = "0x1A9BFF0", VA = "0x1A9BFF0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerHand;

	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IEnumerator fadeIn;

	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private IEnumerator fadeOut;

	[Token(Token = "0x4000434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public RectTransform[] menuOptions;

	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RectTransform colorWheel;

	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Texture2D colorTexture;

	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 cursorPosition;

	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool settingColor;

	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Color savedColor;

	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float savedBrightness;

	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float savedContrast;

	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float savedPosterize;

	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public CanvasGroup mainCanvas;

	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject[] compactObjects;

	[Token(Token = "0x6000403")]
	[Address(RVA = "0x1A9B194", Offset = "0x1A9B194", VA = "0x1A9B194")]
	private void Start()
	{
	}

	[Token(Token = "0x6000404")]
	[Address(RVA = "0x1A9B4BC", Offset = "0x1A9B4BC", VA = "0x1A9B4BC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000405")]
	[Address(RVA = "0x1A9B85C", Offset = "0x1A9B85C", VA = "0x1A9B85C")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x6000406")]
	[Address(RVA = "0x1A9B9D0", Offset = "0x1A9B9D0", VA = "0x1A9B9D0")]
	public void Release()
	{
	}

	[Token(Token = "0x6000407")]
	[Address(RVA = "0x1A9B94C", Offset = "0x1A9B94C", VA = "0x1A9B94C")]
	[IteratorStateMachine(typeof(<FadeToCurrentStyle>d__19))]
	private IEnumerator FadeToCurrentStyle(float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x6000408")]
	[Address(RVA = "0x1A9BAB4", Offset = "0x1A9BAB4", VA = "0x1A9BAB4")]
	[IteratorStateMachine(typeof(<FadeToDefaultPassthrough>d__20))]
	private IEnumerator FadeToDefaultPassthrough(float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x6000409")]
	[Address(RVA = "0x1A9BB88", Offset = "0x1A9BB88", VA = "0x1A9BB88")]
	public void OnBrightnessChanged(float newValue)
	{
	}

	[Token(Token = "0x600040A")]
	[Address(RVA = "0x1A9BBA8", Offset = "0x1A9BBA8", VA = "0x1A9BBA8")]
	public void OnContrastChanged(float newValue)
	{
	}

	[Token(Token = "0x600040B")]
	[Address(RVA = "0x1A9BBC8", Offset = "0x1A9BBC8", VA = "0x1A9BBC8")]
	public void OnPosterizeChanged(float newValue)
	{
	}

	[Token(Token = "0x600040C")]
	[Address(RVA = "0x1A9BBE8", Offset = "0x1A9BBE8", VA = "0x1A9BBE8")]
	public void OnAlphaChanged(float newValue)
	{
	}

	[Token(Token = "0x600040D")]
	[Address(RVA = "0x1A9B454", Offset = "0x1A9B454", VA = "0x1A9B454")]
	private void ShowFullMenu(bool doShow)
	{
	}

	[Token(Token = "0x600040E")]
	[Address(RVA = "0x1A9BC1C", Offset = "0x1A9BC1C", VA = "0x1A9BC1C")]
	public void Cursor(Vector3 cP)
	{
	}

	[Token(Token = "0x600040F")]
	[Address(RVA = "0x1A9BC28", Offset = "0x1A9BC28", VA = "0x1A9BC28")]
	public void DoColorDrag(bool doDrag)
	{
	}

	[Token(Token = "0x6000410")]
	[Address(RVA = "0x1A9B4D4", Offset = "0x1A9B4D4", VA = "0x1A9B4D4")]
	public void GetColorFromWheel()
	{
	}

	[Token(Token = "0x6000411")]
	[Address(RVA = "0x1A9BC34", Offset = "0x1A9BC34", VA = "0x1A9BC34")]
	public PassthroughStyler()
	{
	}
}
[Token(Token = "0x20000DE")]
public class PassthroughSurface : MonoBehaviour
{
	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x4000452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter projectionObject;

	[Token(Token = "0x600041E")]
	[Address(RVA = "0x1A9C038", Offset = "0x1A9C038", VA = "0x1A9C038")]
	private void Start()
	{
	}

	[Token(Token = "0x600041F")]
	[Address(RVA = "0x1A9C0EC", Offset = "0x1A9C0EC", VA = "0x1A9C0EC")]
	public PassthroughSurface()
	{
	}
}
[Token(Token = "0x20000DF")]
public class SceneSampler : MonoBehaviour
{
	[Token(Token = "0x4000453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int currentSceneIndex;

	[Token(Token = "0x4000454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject displayText;

	[Token(Token = "0x6000420")]
	[Address(RVA = "0x1A9C0F4", Offset = "0x1A9C0F4", VA = "0x1A9C0F4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000421")]
	[Address(RVA = "0x1A9C160", Offset = "0x1A9C160", VA = "0x1A9C160")]
	private void Update()
	{
	}

	[Token(Token = "0x6000422")]
	[Address(RVA = "0x1A9C454", Offset = "0x1A9C454", VA = "0x1A9C454")]
	public SceneSampler()
	{
	}
}
[Token(Token = "0x20000E0")]
public class SelectivePassthroughExperience : MonoBehaviour
{
	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject leftMaskObject;

	[Token(Token = "0x4000456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject rightMaskObject;

	[Token(Token = "0x6000423")]
	[Address(RVA = "0x1A9C45C", Offset = "0x1A9C45C", VA = "0x1A9C45C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000424")]
	[Address(RVA = "0x1A9C8B0", Offset = "0x1A9C8B0", VA = "0x1A9C8B0")]
	public SelectivePassthroughExperience()
	{
	}
}
[Token(Token = "0x20000E1")]
public class SPPquad : MonoBehaviour
{
	[Token(Token = "0x4000457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x4000458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter projectionObject;

	[Token(Token = "0x4000459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRInput.Controller controllerHand;

	[Token(Token = "0x6000425")]
	[Address(RVA = "0x1A9C8B8", Offset = "0x1A9C8B8", VA = "0x1A9C8B8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000426")]
	[Address(RVA = "0x1A9CB18", Offset = "0x1A9CB18", VA = "0x1A9CB18")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x6000427")]
	[Address(RVA = "0x1A9CB64", Offset = "0x1A9CB64", VA = "0x1A9CB64")]
	public void Release()
	{
	}

	[Token(Token = "0x6000428")]
	[Address(RVA = "0x1A9CBA4", Offset = "0x1A9CBA4", VA = "0x1A9CBA4")]
	public SPPquad()
	{
	}
}
[Token(Token = "0x20000E2")]
public class BouncingBallLogic : MonoBehaviour
{
	[Token(Token = "0x20000E3")]
	[CompilerGenerated]
	private sealed class <PlayPopCallback>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float clipLength;

		[Token(Token = "0x4000469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BouncingBallLogic <>4__this;

		[Token(Token = "0x17000068")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000434")]
			[Address(RVA = "0x1A9D2C0", Offset = "0x1A9D2C0", VA = "0x1A9D2C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000069")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000436")]
			[Address(RVA = "0x1A9D308", Offset = "0x1A9D308", VA = "0x1A9D308", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000431")]
		[Address(RVA = "0x1A9D188", Offset = "0x1A9D188", VA = "0x1A9D188")]
		[DebuggerHidden]
		public <PlayPopCallback>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6000432")]
		[Address(RVA = "0x1A9D1C8", Offset = "0x1A9D1C8", VA = "0x1A9D1C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000433")]
		[Address(RVA = "0x1A9D1CC", Offset = "0x1A9D1CC", VA = "0x1A9D1CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000435")]
		[Address(RVA = "0x1A9D2C8", Offset = "0x1A9D2C8", VA = "0x1A9D2C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400045A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float TTL;

	[Token(Token = "0x400045B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioClip pop;

	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioClip bounce;

	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioClip loadball;

	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Material visibleMat;

	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Material hiddenMat;

	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AudioSource audioSource;

	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform centerEyeCamera;

	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool isVisible;

	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float timer;

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool isReleased;

	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool isReadyForDestroy;

	[Token(Token = "0x6000429")]
	[Address(RVA = "0x1A9CBAC", Offset = "0x1A9CBAC", VA = "0x1A9CBAC")]
	private void OnCollisionEnter()
	{
	}

	[Token(Token = "0x600042A")]
	[Address(RVA = "0x1A9CBD0", Offset = "0x1A9CBD0", VA = "0x1A9CBD0")]
	private void Start()
	{
	}

	[Token(Token = "0x600042B")]
	[Address(RVA = "0x1A9CCD8", Offset = "0x1A9CCD8", VA = "0x1A9CCD8")]
	private void Update()
	{
	}

	[Token(Token = "0x600042C")]
	[Address(RVA = "0x1A9CD7C", Offset = "0x1A9CD7C", VA = "0x1A9CD7C")]
	private void UpdateVisibility()
	{
	}

	[Token(Token = "0x600042D")]
	[Address(RVA = "0x1A9CFD0", Offset = "0x1A9CFD0", VA = "0x1A9CFD0")]
	private void SetVisible(bool setVisible)
	{
	}

	[Token(Token = "0x600042E")]
	[Address(RVA = "0x1A9D074", Offset = "0x1A9D074", VA = "0x1A9D074")]
	public void Release(Vector3 pos, Vector3 vel, Vector3 angVel)
	{
	}

	[Token(Token = "0x600042F")]
	[Address(RVA = "0x1A9CF4C", Offset = "0x1A9CF4C", VA = "0x1A9CF4C")]
	[IteratorStateMachine(typeof(<PlayPopCallback>d__18))]
	private IEnumerator PlayPopCallback(float clipLength)
	{
		return null;
	}

	[Token(Token = "0x6000430")]
	[Address(RVA = "0x1A9D1B0", Offset = "0x1A9D1B0", VA = "0x1A9D1B0")]
	public BouncingBallLogic()
	{
	}
}
[Token(Token = "0x20000E4")]
public class BouncingBallMgr : MonoBehaviour
{
	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform trackingspace;

	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject rightControllerPivot;

	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private OVRInput.RawButton actionBtn;

	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject ball;

	[Token(Token = "0x400046E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject currentBall;

	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool ballGrabbed;

	[Token(Token = "0x6000437")]
	[Address(RVA = "0x1A9D310", Offset = "0x1A9D310", VA = "0x1A9D310")]
	private void Update()
	{
	}

	[Token(Token = "0x6000438")]
	[Address(RVA = "0x1A9D620", Offset = "0x1A9D620", VA = "0x1A9D620")]
	public BouncingBallMgr()
	{
	}
}
[Token(Token = "0x20000E5")]
[RequireComponent(typeof(OVRSceneAnchor))]
[DefaultExecutionOrder(30)]
public class FurnitureSpawner : MonoBehaviour
{
	[Token(Token = "0x4000470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("Add a point at ceiling.")]
	public GameObject RoomLightPrefab;

	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Spawnable> SpawnablePrefabs;

	[Token(Token = "0x4000472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRSceneAnchor _sceneAnchor;

	[Token(Token = "0x4000473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private OVRSemanticClassification _classification;

	[Token(Token = "0x4000474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameObject _roomLightRef;

	[Token(Token = "0x4000475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _frameCounter;

	[Token(Token = "0x6000439")]
	[Address(RVA = "0x1A9D628", Offset = "0x1A9D628", VA = "0x1A9D628")]
	private void Start()
	{
	}

	[Token(Token = "0x600043A")]
	[Address(RVA = "0x1A9D840", Offset = "0x1A9D840", VA = "0x1A9D840")]
	private void SpawnSpawnable()
	{
	}

	[Token(Token = "0x600043B")]
	[Address(RVA = "0x1A9DCB0", Offset = "0x1A9DCB0", VA = "0x1A9DCB0")]
	private bool FindValidSpawnable(out Spawnable currentSpawnable)
	{
		return default(bool);
	}

	[Token(Token = "0x600043C")]
	[Address(RVA = "0x1A9D6C8", Offset = "0x1A9D6C8", VA = "0x1A9D6C8")]
	private void AddRoomLight()
	{
	}

	[Token(Token = "0x600043D")]
	[Address(RVA = "0x1A9DED0", Offset = "0x1A9DED0", VA = "0x1A9DED0")]
	private void GetVolumeFromTopPlane(Transform plane, Vector2 dimensions, float height, out Vector3 position, out Quaternion rotation, out Vector3 localScale)
	{
	}

	[Token(Token = "0x600043E")]
	[Address(RVA = "0x1A9E3BC", Offset = "0x1A9E3BC", VA = "0x1A9E3BC")]
	public FurnitureSpawner()
	{
	}
}
[Token(Token = "0x20000E6")]
public class MyCustomSceneModelLoader : OVRSceneModelLoader
{
	[Token(Token = "0x20000E7")]
	[CompilerGenerated]
	private sealed class <DelayedLoad>d__0 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MyCustomSceneModelLoader <>4__this;

		[Token(Token = "0x1700006A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000446")]
			[Address(RVA = "0x1A9E5F0", Offset = "0x1A9E5F0", VA = "0x1A9E5F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000448")]
			[Address(RVA = "0x1A9E638", Offset = "0x1A9E638", VA = "0x1A9E638", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000443")]
		[Address(RVA = "0x1A9E438", Offset = "0x1A9E438", VA = "0x1A9E438")]
		[DebuggerHidden]
		public <DelayedLoad>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x6000444")]
		[Address(RVA = "0x1A9E4F0", Offset = "0x1A9E4F0", VA = "0x1A9E4F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000445")]
		[Address(RVA = "0x1A9E4F4", Offset = "0x1A9E4F4", VA = "0x1A9E4F4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000447")]
		[Address(RVA = "0x1A9E5F8", Offset = "0x1A9E5F8", VA = "0x1A9E5F8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x600043F")]
	[Address(RVA = "0x1A9E3C4", Offset = "0x1A9E3C4", VA = "0x1A9E3C4")]
	[IteratorStateMachine(typeof(<DelayedLoad>d__0))]
	private IEnumerator DelayedLoad()
	{
		return null;
	}

	[Token(Token = "0x6000440")]
	[Address(RVA = "0x1A9E460", Offset = "0x1A9E460", VA = "0x1A9E460", Slot = "4")]
	protected override void OnStart()
	{
	}

	[Token(Token = "0x6000441")]
	[Address(RVA = "0x1A9E480", Offset = "0x1A9E480", VA = "0x1A9E480", Slot = "6")]
	protected override void OnNoSceneModelToLoad()
	{
	}

	[Token(Token = "0x6000442")]
	[Address(RVA = "0x1A9E4E8", Offset = "0x1A9E4E8", VA = "0x1A9E4E8")]
	public MyCustomSceneModelLoader()
	{
	}
}
[Token(Token = "0x20000E8")]
[RequireComponent(typeof(OVRManager))]
public class PassthroughPlayInEditor : MonoBehaviour
{
	[Token(Token = "0x6000449")]
	[Address(RVA = "0x1A9E640", Offset = "0x1A9E640", VA = "0x1A9E640")]
	private void Awake()
	{
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0x1A9E644", Offset = "0x1A9E644", VA = "0x1A9E644")]
	public PassthroughPlayInEditor()
	{
	}
}
[Token(Token = "0x20000E9")]
public class RequestCaptureFlow : MonoBehaviour
{
	[Token(Token = "0x4000479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Button RequestCaptureBtn;

	[Token(Token = "0x400047A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVRSceneManager _sceneManager;

	[Token(Token = "0x600044B")]
	[Address(RVA = "0x1A9E64C", Offset = "0x1A9E64C", VA = "0x1A9E64C")]
	private void Start()
	{
	}

	[Token(Token = "0x600044C")]
	[Address(RVA = "0x1A9E6C4", Offset = "0x1A9E6C4", VA = "0x1A9E6C4")]
	private void Update()
	{
	}

	[Token(Token = "0x600044D")]
	[Address(RVA = "0x1A9E748", Offset = "0x1A9E748", VA = "0x1A9E748")]
	public RequestCaptureFlow()
	{
	}
}
[Token(Token = "0x20000EA")]
[ExecuteInEditMode]
public class SimpleResizable : MonoBehaviour
{
	[Token(Token = "0x20000EB")]
	public enum Method
	{
		[Token(Token = "0x400048A")]
		Adapt,
		[Token(Token = "0x400048B")]
		AdaptWithAsymmetricalPadding,
		[Token(Token = "0x400048C")]
		Scale,
		[Token(Token = "0x400048D")]
		None
	}

	[Token(Token = "0x400047B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Space(15f)]
	public Method ScalingX;

	[Token(Token = "0x400047C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Range(0f, 0.5f)]
	public float PaddingX;

	[Token(Token = "0x400047D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Range(-0.5f, 0f)]
	public float PaddingXMax;

	[Token(Token = "0x400047E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Space(15f)]
	public Method ScalingY;

	[Token(Token = "0x400047F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Range(0f, 0.5f)]
	public float PaddingY;

	[Token(Token = "0x4000480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Range(-0.5f, 0f)]
	public float PaddingYMax;

	[Token(Token = "0x4000481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Space(15f)]
	public Method ScalingZ;

	[Token(Token = "0x4000482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Range(0f, 0.5f)]
	public float PaddingZ;

	[Token(Token = "0x4000483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Range(-0.5f, 0f)]
	public float PaddingZMax;

	[Token(Token = "0x4000487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Bounds _bounds;

	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Transform _pivotTransform;

	[Token(Token = "0x1700006C")]
	public Vector3 PivotPosition
	{
		[Token(Token = "0x600044E")]
		[Address(RVA = "0x1A9E758", Offset = "0x1A9E758", VA = "0x1A9E758")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700006D")]
	public Vector3 NewSize
	{
		[Token(Token = "0x600044F")]
		[Address(RVA = "0x1A9E774", Offset = "0x1A9E774", VA = "0x1A9E774")]
		[CompilerGenerated]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000450")]
		[Address(RVA = "0x1A9E780", Offset = "0x1A9E780", VA = "0x1A9E780")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x1700006E")]
	public Vector3 DefaultSize
	{
		[Token(Token = "0x6000451")]
		[Address(RVA = "0x1A9E78C", Offset = "0x1A9E78C", VA = "0x1A9E78C")]
		[CompilerGenerated]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000452")]
		[Address(RVA = "0x1A9E798", Offset = "0x1A9E798", VA = "0x1A9E798")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700006F")]
	public Mesh Mesh
	{
		[Token(Token = "0x6000453")]
		[Address(RVA = "0x1A9E7A4", Offset = "0x1A9E7A4", VA = "0x1A9E7A4")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000454")]
		[Address(RVA = "0x1A9E7AC", Offset = "0x1A9E7AC", VA = "0x1A9E7AC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6000455")]
	[Address(RVA = "0x1A9E7B4", Offset = "0x1A9E7B4", VA = "0x1A9E7B4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000456")]
	[Address(RVA = "0x1A9E8F0", Offset = "0x1A9E8F0", VA = "0x1A9E8F0")]
	public SimpleResizable()
	{
	}
}
[Token(Token = "0x20000EC")]
public class SimpleResizer
{
	[Token(Token = "0x6000457")]
	[Address(RVA = "0x1A9E028", Offset = "0x1A9E028", VA = "0x1A9E028")]
	public void CreateResizedObject(Vector3 newSize, GameObject parent, SimpleResizable sourcePrefab)
	{
	}

	[Token(Token = "0x6000458")]
	[Address(RVA = "0x1A9E8F8", Offset = "0x1A9E8F8", VA = "0x1A9E8F8")]
	private Mesh ProcessVertices(SimpleResizable resizable, Vector3 newSize)
	{
		return null;
	}

	[Token(Token = "0x6000459")]
	[Address(RVA = "0x1A9EB7C", Offset = "0x1A9EB7C", VA = "0x1A9EB7C")]
	private float CalculateNewVertexPosition(SimpleResizable.Method resizeMethod, float currentPosition, float currentSize, float newSize, float padding, float paddingMax, float pivot)
	{
		return default(float);
	}

	[Token(Token = "0x600045A")]
	[Address(RVA = "0x1A9E020", Offset = "0x1A9E020", VA = "0x1A9E020")]
	public SimpleResizer()
	{
	}
}
[Serializable]
[Token(Token = "0x20000ED")]
public class Spawnable : ISerializationCallbackReceiver
{
	[Token(Token = "0x400048E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public SimpleResizable ResizablePrefab;

	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string ClassificationLabel;

	[Token(Token = "0x4000490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private int _editorClassificationIndex;

	[Token(Token = "0x600045B")]
	[Address(RVA = "0x1A9EC24", Offset = "0x1A9EC24", VA = "0x1A9EC24", Slot = "4")]
	public void OnBeforeSerialize()
	{
	}

	[Token(Token = "0x600045C")]
	[Address(RVA = "0x1A9EC28", Offset = "0x1A9EC28", VA = "0x1A9EC28", Slot = "5")]
	public void OnAfterDeserialize()
	{
	}

	[Token(Token = "0x600045D")]
	[Address(RVA = "0x1A9F090", Offset = "0x1A9F090", VA = "0x1A9F090")]
	public Spawnable()
	{
	}
}
[Token(Token = "0x20000EE")]
[RequireComponent(typeof(OVRSceneAnchor))]
public class VolumeAndPlaneSwitcher : MonoBehaviour
{
	[Token(Token = "0x20000EF")]
	public enum GeometryType
	{
		[Token(Token = "0x4000495")]
		Plane,
		[Token(Token = "0x4000496")]
		Volume
	}

	[Serializable]
	[Token(Token = "0x20000F0")]
	public struct LabelGeometryPair
	{
		[Token(Token = "0x4000497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string label;

		[Token(Token = "0x4000498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public GeometryType desiredGeometryType;
	}

	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRSceneAnchor planePrefab;

	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRSceneAnchor volumePrefab;

	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<LabelGeometryPair> desiredSwitches;

	[Token(Token = "0x600045F")]
	[Address(RVA = "0x1A9F0E8", Offset = "0x1A9F0E8", VA = "0x1A9F0E8")]
	private void ReplaceAnchor(OVRSceneAnchor prefab, Vector3 position, Quaternion rotation, Vector3 localScale)
	{
	}

	[Token(Token = "0x6000460")]
	[Address(RVA = "0x1A9F514", Offset = "0x1A9F514", VA = "0x1A9F514")]
	private void Start()
	{
	}

	[Token(Token = "0x6000461")]
	[Address(RVA = "0x1A9FE4C", Offset = "0x1A9FE4C", VA = "0x1A9FE4C")]
	private void GetVolumeFromTopPlane(Transform plane, Vector2 dimensions, float height, out Vector3 position, out Quaternion rotation, out Vector3 localScale)
	{
	}

	[Token(Token = "0x6000462")]
	[Address(RVA = "0x1A9FD24", Offset = "0x1A9FD24", VA = "0x1A9FD24")]
	private void GetTopPlaneFromVolume(Transform volume, Vector3 dimensions, out Vector3 position, out Quaternion rotation, out Vector3 localScale)
	{
	}

	[Token(Token = "0x6000463")]
	[Address(RVA = "0x1A9FECC", Offset = "0x1A9FECC", VA = "0x1A9FECC")]
	public VolumeAndPlaneSwitcher()
	{
	}
}
[Token(Token = "0x20000F1")]
[RequireComponent(typeof(OVRSpatialAnchor))]
public class Anchor : MonoBehaviour
{
	[Token(Token = "0x20000F2")]
	[CompilerGenerated]
	private sealed class <Start>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Anchor <>4__this;

		[Token(Token = "0x17000071")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000477")]
			[Address(RVA = "0x1AF9030", Offset = "0x1AF9030", VA = "0x1AF9030", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000072")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000479")]
			[Address(RVA = "0x1AF9078", Offset = "0x1AF9078", VA = "0x1AF9078", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000474")]
		[Address(RVA = "0x1AF8E8C", Offset = "0x1AF8E8C", VA = "0x1AF8E8C")]
		[DebuggerHidden]
		public <Start>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6000475")]
		[Address(RVA = "0x1AF8EB4", Offset = "0x1AF8EB4", VA = "0x1AF8EB4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000476")]
		[Address(RVA = "0x1AF8EB8", Offset = "0x1AF8EB8", VA = "0x1AF8EB8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000478")]
		[Address(RVA = "0x1AF9038", Offset = "0x1AF9038", VA = "0x1AF9038", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000499")]
	public const string NumUuidsPlayerPref = "numUuids";

	[Token(Token = "0x400049A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[FormerlySerializedAs("canvas_")]
	private Canvas _canvas;

	[Token(Token = "0x400049B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[FormerlySerializedAs("pivot_")]
	private Transform _pivot;

	[Token(Token = "0x400049C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[FormerlySerializedAs("anchorMenu_")]
	private GameObject _anchorMenu;

	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _isSelected;

	[Token(Token = "0x400049E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool _isHovered;

	[Token(Token = "0x400049F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[FormerlySerializedAs("anchorName_")]
	private TextMeshProUGUI _anchorName;

	[Token(Token = "0x40004A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	[FormerlySerializedAs("saveIcon_")]
	private GameObject _saveIcon;

	[Token(Token = "0x40004A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	[FormerlySerializedAs("labelImage_")]
	private Image _labelImage;

	[Token(Token = "0x40004A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	[FormerlySerializedAs("labelBaseColor_")]
	private Color _labelBaseColor;

	[Token(Token = "0x40004A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	[FormerlySerializedAs("labelHighlightColor_")]
	private Color _labelHighlightColor;

	[Token(Token = "0x40004A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	[FormerlySerializedAs("labelSelectedColor_")]
	private Color _labelSelectedColor;

	[Token(Token = "0x40004A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	[FormerlySerializedAs("uiManager_")]
	private AnchorUIManager _uiManager;

	[Token(Token = "0x40004A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	[FormerlySerializedAs("renderers_")]
	private MeshRenderer[] _renderers;

	[Token(Token = "0x40004A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int _menuIndex;

	[Token(Token = "0x40004A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	[FormerlySerializedAs("buttonList_")]
	private List<Button> _buttonList;

	[Token(Token = "0x40004A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Button _selectedButton;

	[Token(Token = "0x40004AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private OVRSpatialAnchor _spatialAnchor;

	[Token(Token = "0x40004AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private GameObject _icon;

	[Token(Token = "0x17000070")]
	public bool ShowSaveIcon
	{
		[Token(Token = "0x600046A")]
		[Address(RVA = "0x1AA054C", Offset = "0x1AA054C", VA = "0x1AA054C")]
		set
		{
		}
	}

	[Token(Token = "0x6000464")]
	[Address(RVA = "0x1A9FED4", Offset = "0x1A9FED4", VA = "0x1A9FED4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000465")]
	[Address(RVA = "0x1AA0054", Offset = "0x1AA0054", VA = "0x1AA0054")]
	[IteratorStateMachine(typeof(<Start>d__20))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000466")]
	[Address(RVA = "0x1AA00C8", Offset = "0x1AA00C8", VA = "0x1AA00C8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000467")]
	[Address(RVA = "0x1AA0340", Offset = "0x1AA0340", VA = "0x1AA0340")]
	public void OnSaveLocalButtonPressed()
	{
	}

	[Token(Token = "0x6000468")]
	[Address(RVA = "0x1AA0410", Offset = "0x1AA0410", VA = "0x1AA0410")]
	public void OnHideButtonPressed()
	{
	}

	[Token(Token = "0x6000469")]
	[Address(RVA = "0x1AA047C", Offset = "0x1AA047C", VA = "0x1AA047C")]
	public void OnEraseButtonPressed()
	{
	}

	[Token(Token = "0x600046B")]
	[Address(RVA = "0x1AA056C", Offset = "0x1AA056C", VA = "0x1AA056C")]
	public void OnHoverStart()
	{
	}

	[Token(Token = "0x600046C")]
	[Address(RVA = "0x1AA0688", Offset = "0x1AA0688", VA = "0x1AA0688")]
	public void OnHoverEnd()
	{
	}

	[Token(Token = "0x600046D")]
	[Address(RVA = "0x1AA0790", Offset = "0x1AA0790", VA = "0x1AA0790")]
	public void OnSelect()
	{
	}

	[Token(Token = "0x600046E")]
	[Address(RVA = "0x1AA0118", Offset = "0x1AA0118", VA = "0x1AA0118")]
	private void BillboardPanel(Transform panel)
	{
	}

	[Token(Token = "0x600046F")]
	[Address(RVA = "0x1AA024C", Offset = "0x1AA024C", VA = "0x1AA024C")]
	private void HandleMenuNavigation()
	{
	}

	[Token(Token = "0x6000470")]
	[Address(RVA = "0x1AA0860", Offset = "0x1AA0860", VA = "0x1AA0860")]
	private void NavigateToIndexInMenu(bool moveNext)
	{
	}

	[Token(Token = "0x6000471")]
	[Address(RVA = "0x1AA0998", Offset = "0x1AA0998", VA = "0x1AA0998")]
	public Anchor()
	{
	}
}
[Token(Token = "0x20000F3")]
[RequireComponent(typeof(SpatialAnchorLoader))]
public class AnchorUIManager : MonoBehaviour
{
	[Token(Token = "0x20000F4")]
	public enum AnchorMode
	{
		[Token(Token = "0x40004C2")]
		Create,
		[Token(Token = "0x40004C3")]
		Select
	}

	[Token(Token = "0x20000F5")]
	private delegate void PrimaryPressDelegate();

	[Token(Token = "0x40004AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AnchorUIManager Instance;

	[Token(Token = "0x40004B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[FormerlySerializedAs("createModeButton_")]
	private GameObject _createModeButton;

	[Token(Token = "0x40004B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[FormerlySerializedAs("selectModeButton_")]
	private GameObject _selectModeButton;

	[Token(Token = "0x40004B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[FormerlySerializedAs("trackedDevice_")]
	private Transform _trackedDevice;

	[Token(Token = "0x40004B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _raycastOrigin;

	[Token(Token = "0x40004B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _drawRaycast;

	[Token(Token = "0x40004B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	[FormerlySerializedAs("lineRenderer_")]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Anchor _hoveredAnchor;

	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Anchor _selectedAnchor;

	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private AnchorMode _mode;

	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	[FormerlySerializedAs("buttonList_")]
	private List<Button> _buttonList;

	[Token(Token = "0x40004BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int _menuIndex;

	[Token(Token = "0x40004BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Button _selectedButton;

	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Anchor _anchorPrefab;

	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	[FormerlySerializedAs("placementPreview_")]
	private GameObject _placementPreview;

	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	[FormerlySerializedAs("anchorPlacementTransform_")]
	private Transform _anchorPlacementTransform;

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private PrimaryPressDelegate _primaryPressDelegate;

	[Token(Token = "0x40004C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool _isFocused;

	[Token(Token = "0x17000073")]
	public Anchor AnchorPrefab
	{
		[Token(Token = "0x600047A")]
		[Address(RVA = "0x1AF9080", Offset = "0x1AF9080", VA = "0x1AF9080")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600047B")]
	[Address(RVA = "0x1AF9088", Offset = "0x1AF9088", VA = "0x1AF9088")]
	private void Awake()
	{
	}

	[Token(Token = "0x600047C")]
	[Address(RVA = "0x1AF9154", Offset = "0x1AF9154", VA = "0x1AF9154")]
	private void Start()
	{
	}

	[Token(Token = "0x600047D")]
	[Address(RVA = "0x1AF92A4", Offset = "0x1AF92A4", VA = "0x1AF92A4")]
	private void Update()
	{
	}

	[Token(Token = "0x600047E")]
	[Address(RVA = "0x1AF9714", Offset = "0x1AF9714", VA = "0x1AF9714")]
	public void OnCreateModeButtonPressed()
	{
	}

	[Token(Token = "0x600047F")]
	[Address(RVA = "0x1AF9780", Offset = "0x1AF9780", VA = "0x1AF9780")]
	public void OnLoadAnchorsButtonPressed()
	{
	}

	[Token(Token = "0x6000480")]
	[Address(RVA = "0x1AF923C", Offset = "0x1AF923C", VA = "0x1AF923C")]
	private void ToggleCreateMode()
	{
	}

	[Token(Token = "0x6000481")]
	[Address(RVA = "0x1AF994C", Offset = "0x1AF994C", VA = "0x1AF994C")]
	private void StartPlacementMode()
	{
	}

	[Token(Token = "0x6000482")]
	[Address(RVA = "0x1AF99D4", Offset = "0x1AF99D4", VA = "0x1AF99D4")]
	private void EndPlacementMode()
	{
	}

	[Token(Token = "0x6000483")]
	[Address(RVA = "0x1AF99F4", Offset = "0x1AF99F4", VA = "0x1AF99F4")]
	private void StartSelectMode()
	{
	}

	[Token(Token = "0x6000484")]
	[Address(RVA = "0x1AF992C", Offset = "0x1AF992C", VA = "0x1AF992C")]
	private void EndSelectMode()
	{
	}

	[Token(Token = "0x6000485")]
	[Address(RVA = "0x1AF9620", Offset = "0x1AF9620", VA = "0x1AF9620")]
	private void HandleMenuNavigation()
	{
	}

	[Token(Token = "0x6000486")]
	[Address(RVA = "0x1AF9BF4", Offset = "0x1AF9BF4", VA = "0x1AF9BF4")]
	private void NavigateToIndexInMenu(bool moveNext)
	{
	}

	[Token(Token = "0x6000487")]
	[Address(RVA = "0x1AF9A7C", Offset = "0x1AF9A7C", VA = "0x1AF9A7C")]
	private void ShowAnchorPreview()
	{
	}

	[Token(Token = "0x6000488")]
	[Address(RVA = "0x1AF9B68", Offset = "0x1AF9B68", VA = "0x1AF9B68")]
	private void HideAnchorPreview()
	{
	}

	[Token(Token = "0x6000489")]
	[Address(RVA = "0x1AF9CF4", Offset = "0x1AF9CF4", VA = "0x1AF9CF4")]
	private void PlaceAnchor()
	{
	}

	[Token(Token = "0x600048A")]
	[Address(RVA = "0x1AF9B88", Offset = "0x1AF9B88", VA = "0x1AF9B88")]
	private void ShowRaycastLine()
	{
	}

	[Token(Token = "0x600048B")]
	[Address(RVA = "0x1AF9BC0", Offset = "0x1AF9BC0", VA = "0x1AF9BC0")]
	private void HideRaycastLine()
	{
	}

	[Token(Token = "0x600048C")]
	[Address(RVA = "0x1AF93A4", Offset = "0x1AF93A4", VA = "0x1AF93A4")]
	private void ControllerRaycast()
	{
	}

	[Token(Token = "0x600048D")]
	[Address(RVA = "0x1AF9DE0", Offset = "0x1AF9DE0", VA = "0x1AF9DE0")]
	private void HoverAnchor(Anchor anchor)
	{
	}

	[Token(Token = "0x600048E")]
	[Address(RVA = "0x1AF9E0C", Offset = "0x1AF9E0C", VA = "0x1AF9E0C")]
	private void UnhoverAnchor()
	{
	}

	[Token(Token = "0x600048F")]
	[Address(RVA = "0x1AF9EA0", Offset = "0x1AF9EA0", VA = "0x1AF9EA0")]
	private void SelectAnchor()
	{
	}

	[Token(Token = "0x6000490")]
	[Address(RVA = "0x1AF9FF4", Offset = "0x1AF9FF4", VA = "0x1AF9FF4")]
	public AnchorUIManager()
	{
	}
}
[Token(Token = "0x20000F6")]
public class SpatialAnchorLoader : MonoBehaviour
{
	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private OVRSpatialAnchor _anchorPrefab;

	[Token(Token = "0x40004C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private readonly HashSet<ulong> _locateAnchorRequest;

	[Token(Token = "0x40004C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ulong _queryRequestId;

	[Token(Token = "0x6000495")]
	[Address(RVA = "0x1AFA044", Offset = "0x1AFA044", VA = "0x1AFA044")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000496")]
	[Address(RVA = "0x1AFA144", Offset = "0x1AFA144", VA = "0x1AFA144")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000497")]
	[Address(RVA = "0x1AFA244", Offset = "0x1AFA244", VA = "0x1AFA244")]
	private void SetComponentEnabled(ulong requestId, bool result, OVRSpace space, Guid uuid, OVRPlugin.SpaceComponentType componentType, bool enabled)
	{
	}

	[Token(Token = "0x6000498")]
	[Address(RVA = "0x1AFA494", Offset = "0x1AFA494", VA = "0x1AFA494")]
	private void QueryComplete(ulong requestId, bool result)
	{
	}

	[Token(Token = "0x6000499")]
	[Address(RVA = "0x1AFA6A0", Offset = "0x1AFA6A0", VA = "0x1AFA6A0")]
	private void TryEnableComponent(ulong anchorHandle, OVRPlugin.SpaceComponentType type)
	{
	}

	[Token(Token = "0x600049A")]
	[Address(RVA = "0x1AFAA7C", Offset = "0x1AFAA7C", VA = "0x1AFAA7C")]
	public void LoadAnchorsByUuid()
	{
	}

	[Token(Token = "0x600049B")]
	[Address(RVA = "0x1AF97D4", Offset = "0x1AF97D4", VA = "0x1AF97D4")]
	public void LoadAllLocalAnchors()
	{
	}

	[Token(Token = "0x600049C")]
	[Address(RVA = "0x1AFA408", Offset = "0x1AFA408", VA = "0x1AFA408")]
	private static void Log(string message)
	{
	}

	[Token(Token = "0x600049D")]
	[Address(RVA = "0x1AFAD54", Offset = "0x1AFAD54", VA = "0x1AFAD54")]
	public SpatialAnchorLoader()
	{
	}
}
[Token(Token = "0x20000F7")]
public class StartMenu : MonoBehaviour
{
	[Token(Token = "0x40004C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVROverlay overlay;

	[Token(Token = "0x40004C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVROverlay text;

	[Token(Token = "0x40004C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig vrRig;

	[Token(Token = "0x600049E")]
	[Address(RVA = "0x1AFADDC", Offset = "0x1AFADDC", VA = "0x1AFADDC")]
	private void Start()
	{
	}

	[Token(Token = "0x600049F")]
	[Address(RVA = "0x1AFAFF0", Offset = "0x1AFAFF0", VA = "0x1AFAFF0")]
	private void LoadScene(int idx)
	{
	}

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0x1AFB0F4", Offset = "0x1AFB0F4", VA = "0x1AFB0F4")]
	public StartMenu()
	{
	}
}
[Token(Token = "0x20000F9")]
public class FusionGraph : FusionGraphBase
{
	[Token(Token = "0x20000FA")]
	public enum Layouts
	{
		[Token(Token = "0x40004F0")]
		Auto,
		[Token(Token = "0x40004F1")]
		FullAuto,
		[Token(Token = "0x40004F2")]
		FullNoOverlap,
		[Token(Token = "0x40004F3")]
		CenteredAuto,
		[Token(Token = "0x40004F4")]
		CenteredNoGraph,
		[Token(Token = "0x40004F5")]
		CenteredNoOverlap,
		[Token(Token = "0x40004F6")]
		CompactAuto,
		[Token(Token = "0x40004F7")]
		CompactNoGraph
	}

	[Token(Token = "0x20000FB")]
	public enum ShowGraphOptions
	{
		[Token(Token = "0x40004F9")]
		Never,
		[Token(Token = "0x40004FA")]
		OverlayOnly,
		[Token(Token = "0x40004FB")]
		Always
	}

	[Token(Token = "0x20000FC")]
	private enum ShaderType
	{
		[Token(Token = "0x40004FD")]
		None,
		[Token(Token = "0x40004FE")]
		Overlay,
		[Token(Token = "0x40004FF")]
		GameObject
	}

	[Token(Token = "0x40004CC")]
	private const int GRPH_TOP_PAD = 36;

	[Token(Token = "0x40004CD")]
	private const int GRPH_BTM_PAD = 36;

	[Token(Token = "0x40004CE")]
	private const int HIDE_XTRAS_WDTH = 200;

	[Token(Token = "0x40004CF")]
	private const int INTERMITTENT_DATA_ARRAYSIZE = 128;

	[Token(Token = "0x40004D0")]
	private const int EXPAND_GRPH_THRESH = 112;

	[Token(Token = "0x40004D1")]
	private const int COMPACT_THRESH = 52;

	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	[HideInInspector]
	public float Height;

	[Token(Token = "0x40004D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[InlineHelp]
	[SerializeField]
	[Header("Graph Layout")]
	private Layouts _layout;

	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[InlineHelp]
	[SerializeField]
	private ShowGraphOptions _showGraph;

	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	[InlineHelp]
	public float Padding;

	[Token(Token = "0x40004D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[InlineHelp]
	[SerializeField]
	private bool _alwaysExpandGraph;

	[Token(Token = "0x40004D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
	[InlineHelp]
	[SerializeField]
	private bool _showUITargets;

	[Token(Token = "0x40004D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[DrawIf("_showUITargets", true, DrawIfHideType.Hide, DoIfCompareOperator.Equal)]
	public Image GraphImg;

	[Token(Token = "0x40004D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[DrawIf("_showUITargets", true, DrawIfHideType.Hide, DoIfCompareOperator.Equal)]
	public Text LabelMin;

	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[DrawIf("_showUITargets", true, DrawIfHideType.Hide, DoIfCompareOperator.Equal)]
	public Text LabelMax;

	[Token(Token = "0x40004DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[DrawIf("_showUITargets", true, DrawIfHideType.Hide, DoIfCompareOperator.Equal)]
	public Text LabelAvg;

	[Token(Token = "0x40004DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[DrawIf("_showUITargets", true, DrawIfHideType.Hide, DoIfCompareOperator.Equal)]
	public Text LabelLast;

	[Token(Token = "0x40004DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[DrawIf("_showUITargets", true, DrawIfHideType.Hide, DoIfCompareOperator.Equal)]
	public Text LabelPer;

	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[DrawIf("_showUITargets", true, DrawIfHideType.Hide, DoIfCompareOperator.Equal)]
	public Dropdown _viewDropdown;

	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[DrawIf("_showUITargets", true, DrawIfHideType.Hide, DoIfCompareOperator.Equal)]
	public Button _avgBttn;

	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private float _min;

	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private float _max;

	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private float[] _values;

	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private float[] _intensity;

	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private float[] _histogram;

	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private List<int> DropdownLookup;

	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[InlineHelp]
	private FusionGraphVisualization _graphVisualization;

	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private ShaderType _currentShader;

	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private (int tick, float value)[] _cachedValues;

	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private double _lastCachedTickTime;

	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private int _lastCachedTick;

	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private int _histoHighestUsedBucketIndex;

	[Token(Token = "0x40004EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private int _histoAvgSampleCount;

	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private double _histoStepInverse;

	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private double _histoAvg;

	[Token(Token = "0x17000074")]
	private static Shader Shader
	{
		[Token(Token = "0x60004A3")]
		[Address(RVA = "0x1AFB118", Offset = "0x1AFB118", VA = "0x1AFB118")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000075")]
	public Layouts Layout
	{
		[Token(Token = "0x60004A4")]
		[Address(RVA = "0x1AFB170", Offset = "0x1AFB170", VA = "0x1AFB170")]
		get
		{
			return default(Layouts);
		}
		[Token(Token = "0x60004A5")]
		[Address(RVA = "0x1AFB178", Offset = "0x1AFB178", VA = "0x1AFB178")]
		set
		{
		}
	}

	[Token(Token = "0x17000076")]
	public ShowGraphOptions ShowGraph
	{
		[Token(Token = "0x60004A6")]
		[Address(RVA = "0x1AFB188", Offset = "0x1AFB188", VA = "0x1AFB188")]
		get
		{
			return default(ShowGraphOptions);
		}
		[Token(Token = "0x60004A7")]
		[Address(RVA = "0x1AFB190", Offset = "0x1AFB190", VA = "0x1AFB190")]
		set
		{
		}
	}

	[Token(Token = "0x17000077")]
	public bool AlwaysExpandGraph
	{
		[Token(Token = "0x60004A8")]
		[Address(RVA = "0x1AFB1B8", Offset = "0x1AFB1B8", VA = "0x1AFB1B8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60004A9")]
		[Address(RVA = "0x1AFB1C0", Offset = "0x1AFB1C0", VA = "0x1AFB1C0")]
		set
		{
		}
	}

	[Token(Token = "0x17000078")]
	public FusionGraphVisualization GraphVisualization
	{
		[Token(Token = "0x60004AB")]
		[Address(RVA = "0x1AFBA88", Offset = "0x1AFBA88", VA = "0x1AFBA88")]
		set
		{
		}
	}

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0x1AFB1EC", Offset = "0x1AFB1EC", VA = "0x1AFB1EC", Slot = "14")]
	protected override bool TryConnect()
	{
		return default(bool);
	}

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0x1AFBA90", Offset = "0x1AFBA90", VA = "0x1AFBA90")]
	private void Reset()
	{
	}

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0x1AFBD70", Offset = "0x1AFBD70", VA = "0x1AFBD70")]
	public void Clear()
	{
	}

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0x1AFBE0C", Offset = "0x1AFBE0C", VA = "0x1AFBE0C", Slot = "10")]
	public override void Initialize()
	{
	}

	[Token(Token = "0x60004AF")]
	[Address(RVA = "0x1AFBF18", Offset = "0x1AFBF18", VA = "0x1AFBF18")]
	public void OnDropdownChanged(int value)
	{
	}

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0x1AFBF84", Offset = "0x1AFBF84", VA = "0x1AFBF84")]
	[BehaviourButtonAction("ResetShader", null, null)]
	private void ResetShaderButton()
	{
	}

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0x1AFBAD8", Offset = "0x1AFBAD8", VA = "0x1AFBAD8")]
	private void ResetGraphShader()
	{
	}

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0x1AFC230", Offset = "0x1AFC230", VA = "0x1AFC230", Slot = "11")]
	public override void CyclePer()
	{
	}

	[Token(Token = "0x60004B3")]
	[Address(RVA = "0x1AFB8A0", Offset = "0x1AFB8A0", VA = "0x1AFB8A0")]
	private void SetPerText()
	{
	}

	[Token(Token = "0x60004B4")]
	[Address(RVA = "0x1AFC2BC", Offset = "0x1AFC2BC", VA = "0x1AFC2BC", Slot = "13")]
	public override void Refresh()
	{
	}

	[Token(Token = "0x60004B5")]
	[Address(RVA = "0x1AFC5B4", Offset = "0x1AFC5B4", VA = "0x1AFC5B4")]
	private void UpdateContinuousTick(ref IStatsBuffer data)
	{
	}

	[Token(Token = "0x60004B6")]
	[Address(RVA = "0x1AFCBF4", Offset = "0x1AFCBF4", VA = "0x1AFCBF4")]
	private void UpdateIntermittentTick(ref IStatsBuffer data)
	{
	}

	[Token(Token = "0x60004B7")]
	[Address(RVA = "0x1AFD114", Offset = "0x1AFD114", VA = "0x1AFD114")]
	private void UpdateIntermittentTime(ref IStatsBuffer data)
	{
	}

	[Token(Token = "0x60004B8")]
	[Address(RVA = "0x1AFDE24", Offset = "0x1AFDE24", VA = "0x1AFDE24")]
	private void ApplyScaling(ref float min, ref float max)
	{
	}

	[Token(Token = "0x60004B9")]
	[Address(RVA = "0x1AFDF44", Offset = "0x1AFDF44", VA = "0x1AFDF44")]
	private void UpdateUiText(float min, float max, float avg, float last)
	{
	}

	[Token(Token = "0x60004BA")]
	[Address(RVA = "0x1AFE620", Offset = "0x1AFE620", VA = "0x1AFE620")]
	private float GetIntermittentAverageInfo(ref IStatsBuffer data, float sum)
	{
		return default(float);
	}

	[Token(Token = "0x60004BB")]
	[Address(RVA = "0x1AFD3C0", Offset = "0x1AFD3C0", VA = "0x1AFD3C0")]
	private void UpdateTickValueHistogram(ref IStatsBuffer data)
	{
	}

	[Token(Token = "0x60004BC")]
	[Address(RVA = "0x1AFE8D8", Offset = "0x1AFE8D8", VA = "0x1AFE8D8")]
	public static FusionGraph Create(FusionStats iFusionStats, Simulation.Statistics.StatSourceTypes statSourceType, int statId, RectTransform parentRT)
	{
		return null;
	}

	[Token(Token = "0x60004BD")]
	[Address(RVA = "0x1AFE9FC", Offset = "0x1AFE9FC", VA = "0x1AFE9FC")]
	public void Generate(Simulation.Statistics.StatSourceTypes type, int statId, RectTransform root)
	{
	}

	[Token(Token = "0x60004BE")]
	[Address(RVA = "0x1AFF0F0", Offset = "0x1AFF0F0", VA = "0x1AFF0F0", Slot = "12")]
	[BehaviourButtonAction("Update Layout", null, null)]
	public override void CalculateLayout()
	{
	}

	[Token(Token = "0x60004BF")]
	[Address(RVA = "0x1AFFD70", Offset = "0x1AFFD70", VA = "0x1AFFD70")]
	public FusionGraph()
	{
	}
}
[Token(Token = "0x20000FD")]
[ScriptHelp(BackColor = EditorHeaderBackColor.Olive)]
[ExecuteAlways]
public class FusionStats : Fusion.Behaviour
{
	[Token(Token = "0x20000FE")]
	public enum StatCanvasTypes
	{
		[Token(Token = "0x400056E")]
		Overlay,
		[Token(Token = "0x400056F")]
		GameObject
	}

	[Token(Token = "0x20000FF")]
	public enum DefaultLayouts
	{
		[Token(Token = "0x4000571")]
		Custom,
		[Token(Token = "0x4000572")]
		Left,
		[Token(Token = "0x4000573")]
		Right,
		[Token(Token = "0x4000574")]
		UpperLeft,
		[Token(Token = "0x4000575")]
		UpperRight,
		[Token(Token = "0x4000576")]
		Full
	}

	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Dictionary<NetworkRunner, List<FusionStats>> _statsForRunnerLookup;

	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Dictionary<string, FusionStats> _activeGuids;

	[Token(Token = "0x4000502")]
	public const Simulation.Statistics.SimStatFlags DefaultSimStatsMask = ~(Simulation.Statistics.SimStatFlags.InterpDiff | Simulation.Statistics.SimStatFlags.InterpUncertainty | Simulation.Statistics.SimStatFlags.InterpMultiplier | Simulation.Statistics.SimStatFlags.InputOffsetTarget | Simulation.Statistics.SimStatFlags.InputOffsetDeviation | Simulation.Statistics.SimStatFlags.InputReceiveDeltaDeviation);

	[Token(Token = "0x4000503")]
	private const int SCREEN_SCALE_W = 1080;

	[Token(Token = "0x4000504")]
	private const int SCREEN_SCALE_H = 1080;

	[Token(Token = "0x4000505")]
	private const float TEXT_MARGIN = 0.25f;

	[Token(Token = "0x4000506")]
	private const float TITLE_HEIGHT = 20f;

	[Token(Token = "0x4000507")]
	private const int MARGIN = 6;

	[Token(Token = "0x4000508")]
	private const int PAD = 10;

	[Token(Token = "0x4000509")]
	private const string PLAY_TEXT = "PLAY";

	[Token(Token = "0x400050A")]
	private const string PAUS_TEXT = "PAUSE";

	[Token(Token = "0x400050B")]
	private const string SHOW_TEXT = "SHOW";

	[Token(Token = "0x400050C")]
	private const string HIDE_TEXT = "HIDE";

	[Token(Token = "0x400050D")]
	private const string CLER_TEXT = "CLEAR";

	[Token(Token = "0x400050E")]
	private const string CNVS_TEXT = "CANVAS";

	[Token(Token = "0x400050F")]
	private const string CLSE_TEXT = "CLOSE";

	[Token(Token = "0x4000510")]
	private const string PLAY_ICON = "►";

	[Token(Token = "0x4000511")]
	private const string PAUS_ICON = "װ";

	[Token(Token = "0x4000512")]
	private const string HIDE_ICON = "▼";

	[Token(Token = "0x4000513")]
	private const string SHOW_ICON = "▲";

	[Token(Token = "0x4000514")]
	private const string CLER_ICON = "ᴓ";

	[Token(Token = "0x4000515")]
	private const string CNVS_ICON = "ﬦ";

	[Token(Token = "0x4000516")]
	private const string CLSE_ICON = "x";

	[Token(Token = "0x4000517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[InlineHelp]
	[Unit(Units.Seconds, 1f, 0f, true, DecimalPlaces = 2)]
	[MultiPropertyDrawersFix]
	public float RedrawInterval;

	[Token(Token = "0x4000518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Header("Layout")]
	[InlineHelp]
	[SerializeField]
	private StatCanvasTypes _canvasType;

	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[InlineHelp]
	[SerializeField]
	private bool _showButtonLabels;

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Range(0f, 200f)]
	[MultiPropertyDrawersFix]
	[InlineHelp]
	[SerializeField]
	private int _maxHeaderHeight;

	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[InlineHelp]
	[DrawIf("_canvasType", 1L, DrawIfHideType.Hide, DoIfCompareOperator.Equal)]
	[Range(0f, 20f)]
	[MultiPropertyDrawersFix]
	public float CanvasScale;

	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[InlineHelp]
	[DrawIf("_canvasType", 1L, DrawIfHideType.Hide, DoIfCompareOperator.Equal)]
	[Range(-10f, 10f)]
	[MultiPropertyDrawersFix]
	public float CanvasDistance;

	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[InlineHelp]
	[SerializeField]
	[MultiPropertyDrawersFix]
	[DrawIf("CanvasType", 1L, DrawIfHideType.Hide, DoIfCompareOperator.Equal)]
	[NormalizedRect(true, 1f)]
	private Rect _gameObjectRect;

	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[MultiPropertyDrawersFix]
	[SerializeField]
	[DrawIf("CanvasType", 0L, DrawIfHideType.Hide, DoIfCompareOperator.Equal)]
	[InlineHelp]
	[NormalizedRect(true, 0f)]
	private Rect _overlayRect;

	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Header("Fusion Graphs Layout")]
	[InlineHelp]
	[SerializeField]
	private FusionGraph.Layouts _defaultLayout;

	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[InlineHelp]
	[SerializeField]
	private bool _noTextOverlap;

	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	[InlineHelp]
	[SerializeField]
	private bool _noGraphShader;

	[Token(Token = "0x4000522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[InlineHelp]
	[Range(0f, 16f)]
	[MultiPropertyDrawersFix]
	public int GraphColumnCount;

	[Token(Token = "0x4000523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[InlineHelp]
	[DrawIf("GraphColumnCount", 0L, DrawIfHideType.ReadOnly, DoIfCompareOperator.Equal)]
	[SerializeField]
	[MultiPropertyDrawersFix]
	[Range(30f, 1080f)]
	private int _graphMaxWidth;

	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[Header("Network Object Stats")]
	[InlineHelp]
	[SerializeField]
	[WarnIf("ShowMissingNetObjWarning", true, "No NetworkObject found on this GameObject, nor parent. Object stats will be unavailable.", 2, DoIfCompareOperator.Equal)]
	private bool _enableObjectStats;

	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[InlineHelp]
	[SerializeField]
	[DrawIf("EnableObjectStats", true, DrawIfHideType.ReadOnly, DoIfCompareOperator.Equal)]
	private NetworkObject _object;

	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[Range(0f, 200f)]
	[InlineHelp]
	[SerializeField]
	[MultiPropertyDrawersFix]
	[DrawIf("EnableObjectStats", true, DrawIfHideType.ReadOnly, DoIfCompareOperator.Equal)]
	private int _objectTitleHeight;

	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[DrawIf("EnableObjectStats", true, DrawIfHideType.ReadOnly, DoIfCompareOperator.Equal)]
	[Range(0f, 200f)]
	[MultiPropertyDrawersFix]
	[InlineHelp]
	[SerializeField]
	private int _objectIdsHeight;

	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[InlineHelp]
	[SerializeField]
	[DrawIf("EnableObjectStats", true, DrawIfHideType.ReadOnly, DoIfCompareOperator.Equal)]
	[Range(0f, 200f)]
	[MultiPropertyDrawersFix]
	private int _objectMetersHeight;

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[InlineHelp]
	[SerializeField]
	[EditorDisabled(false)]
	[Header("Data")]
	[MultiPropertyDrawersFix]
	private NetworkRunner _runner;

	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[InlineHelp]
	public bool InitializeAllGraphs;

	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[InlineHelp]
	[VersaMask(false, null)]
	[MultiPropertyDrawersFix]
	public SimulationModes ConnectTo;

	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[InlineHelp]
	[SerializeField]
	[VersaMask(false, null)]
	[DrawIf("EnableObjectStats", true, DrawIfHideType.ReadOnly, DoIfCompareOperator.Equal)]
	[MultiPropertyDrawersFix]
	private Simulation.Statistics.ObjStatFlags _includedObjStats;

	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[VersaMask(false, null)]
	[SerializeField]
	[MultiPropertyDrawersFix]
	[InlineHelp]
	private Simulation.Statistics.NetStatFlags _includedNetStats;

	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[InlineHelp]
	[MultiPropertyDrawersFix]
	[SerializeField]
	[VersaMask(false, null)]
	private Simulation.Statistics.SimStatFlags _includedSimStats;

	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[Header("Life-Cycle")]
	[InlineHelp]
	[SerializeField]
	public bool AutoDestroy;

	[Token(Token = "0x4000530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9D")]
	[InlineHelp]
	[SerializeField]
	public bool EnforceSingle;

	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[InlineHelp]
	[DrawIf("EnforceSingle", true, DrawIfHideType.ReadOnly, DoIfCompareOperator.Equal)]
	[SerializeField]
	public string Guid;

	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[InlineHelp]
	[Header("Customization")]
	[SerializeField]
	[MultiPropertyDrawersFix]
	[DrawIf("IsPlaying", false, DrawIfHideType.Hide, DoIfCompareOperator.Equal)]
	private bool _modifyColors;

	[Token(Token = "0x4000533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[InlineHelp]
	[SerializeField]
	[DrawIf("ShowColorControls", true, DrawIfHideType.Hide, DoIfCompareOperator.Equal)]
	private Color _graphColorGood;

	[Token(Token = "0x4000534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	[InlineHelp]
	[SerializeField]
	[DrawIf("ShowColorControls", true, DrawIfHideType.Hide, DoIfCompareOperator.Equal)]
	private Color _graphColorWarn;

	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	[SerializeField]
	[DrawIf("ShowColorControls", true, DrawIfHideType.Hide, DoIfCompareOperator.Equal)]
	[InlineHelp]
	private Color _graphColorBad;

	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	[InlineHelp]
	[SerializeField]
	[DrawIf("ShowColorControls", true, DrawIfHideType.Hide, DoIfCompareOperator.Equal)]
	private Color _graphColorFlag;

	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	[InlineHelp]
	[SerializeField]
	[DrawIf("ShowColorControls", true, DrawIfHideType.Hide, DoIfCompareOperator.Equal)]
	private Color _fontColor;

	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	[InlineHelp]
	[SerializeField]
	[DrawIf("ShowColorControls", true, DrawIfHideType.Hide, DoIfCompareOperator.Equal)]
	private Color PanelColor;

	[Token(Token = "0x4000539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	[InlineHelp]
	[SerializeField]
	[DrawIf("ShowColorControls", true, DrawIfHideType.Hide, DoIfCompareOperator.Equal)]
	private Color _simDataBackColor;

	[Token(Token = "0x400053A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	[InlineHelp]
	[SerializeField]
	[DrawIf("ShowColorControls", true, DrawIfHideType.Hide, DoIfCompareOperator.Equal)]
	private Color _netDataBackColor;

	[Token(Token = "0x400053B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	[InlineHelp]
	[SerializeField]
	[DrawIf("ShowColorControls", true, DrawIfHideType.Hide, DoIfCompareOperator.Equal)]
	private Color _objDataBackColor;

	[Token(Token = "0x400053C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[SerializeField]
	[HideInInspector]
	private FusionGraph[] _simGraphs;

	[Token(Token = "0x400053D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[SerializeField]
	[HideInInspector]
	private FusionGraph[] _objGraphs;

	[Token(Token = "0x400053E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	[SerializeField]
	[HideInInspector]
	private FusionGraph[] _netGraphs;

	[NonSerialized]
	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private List<IFusionStatsView> _foundViews;

	[NonSerialized]
	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private List<FusionGraph> _foundGraphs;

	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[SerializeField]
	[HideInInspector]
	private Text _titleText;

	[Token(Token = "0x4000542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	[SerializeField]
	[HideInInspector]
	private Text _clearIcon;

	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	[SerializeField]
	[HideInInspector]
	private Text _pauseIcon;

	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	[SerializeField]
	[HideInInspector]
	private Text _togglIcon;

	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	[SerializeField]
	[HideInInspector]
	private Text _closeIcon;

	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	[SerializeField]
	[HideInInspector]
	private Text _canvsIcon;

	[Token(Token = "0x4000547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	[SerializeField]
	[HideInInspector]
	private Text _clearLabel;

	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	[SerializeField]
	[HideInInspector]
	private Text _pauseLabel;

	[Token(Token = "0x4000549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	[SerializeField]
	[HideInInspector]
	private Text _togglLabel;

	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	[SerializeField]
	[HideInInspector]
	private Text _closeLabel;

	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	[SerializeField]
	[HideInInspector]
	private Text _canvsLabel;

	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	[SerializeField]
	[HideInInspector]
	private Text _objectNameText;

	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	[SerializeField]
	[HideInInspector]
	private GridLayoutGroup _graphGridLayoutGroup;

	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	[SerializeField]
	[HideInInspector]
	private Canvas _canvas;

	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	[SerializeField]
	[HideInInspector]
	private RectTransform _canvasRT;

	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	[SerializeField]
	[HideInInspector]
	private RectTransform _rootPanelRT;

	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	[SerializeField]
	[HideInInspector]
	private RectTransform _guidesRT;

	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	[SerializeField]
	[HideInInspector]
	private RectTransform _headerRT;

	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	[SerializeField]
	[HideInInspector]
	private RectTransform _statsPanelRT;

	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	[SerializeField]
	[HideInInspector]
	private RectTransform _graphsLayoutRT;

	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	[SerializeField]
	[HideInInspector]
	private RectTransform _titleRT;

	[Token(Token = "0x4000556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	[SerializeField]
	[HideInInspector]
	private RectTransform _buttonsRT;

	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	[SerializeField]
	[HideInInspector]
	private RectTransform _objectTitlePanelRT;

	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	[SerializeField]
	[HideInInspector]
	private RectTransform _objectIdsGroupRT;

	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	[SerializeField]
	[HideInInspector]
	private RectTransform _objectMetersPanelRT;

	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	[SerializeField]
	[HideInInspector]
	private RectTransform _clientIdPanelRT;

	[Token(Token = "0x400055B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	[SerializeField]
	[HideInInspector]
	private RectTransform _authorityPanelRT;

	[Token(Token = "0x400055C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	[SerializeField]
	[HideInInspector]
	private Button _titleButton;

	[Token(Token = "0x400055D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	[SerializeField]
	[HideInInspector]
	private Button _objctButton;

	[Token(Token = "0x400055E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	[SerializeField]
	[HideInInspector]
	private Button _clearButton;

	[Token(Token = "0x400055F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	[SerializeField]
	[HideInInspector]
	private Button _togglButton;

	[Token(Token = "0x4000560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	[SerializeField]
	[HideInInspector]
	private Button _pauseButton;

	[Token(Token = "0x4000561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	[SerializeField]
	[HideInInspector]
	private Button _closeButton;

	[Token(Token = "0x4000562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	[SerializeField]
	[HideInInspector]
	private Button _canvsButton;

	[Token(Token = "0x4000563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	private Font _font;

	[Token(Token = "0x4000564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	private bool _hidden;

	[Token(Token = "0x4000565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x281")]
	private bool _paused;

	[Token(Token = "0x4000566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x284")]
	private int _layoutDirty;

	[Token(Token = "0x4000567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	private bool _activeDirty;

	[Token(Token = "0x4000568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	private double _currentDrawTime;

	[Token(Token = "0x4000569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	private double _delayDrawUntil;

	[Token(Token = "0x400056A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static bool? _newInputSystemFound;

	[Token(Token = "0x400056B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	private string _previousObjectTitle;

	[Token(Token = "0x400056C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	private float _lastLayoutUpdate;

	[Token(Token = "0x17000079")]
	public static Simulation.Statistics.NetStatFlags DefaultNetStatsMask
	{
		[Token(Token = "0x60004C2")]
		[Address(RVA = "0x1B00514", Offset = "0x1B00514", VA = "0x1B00514")]
		get
		{
			return default(Simulation.Statistics.NetStatFlags);
		}
	}

	[Token(Token = "0x1700007A")]
	private bool ShowColorControls
	{
		[Token(Token = "0x60004C3")]
		[Address(RVA = "0x1B0051C", Offset = "0x1B0051C", VA = "0x1B0051C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700007B")]
	private bool IsPlaying
	{
		[Token(Token = "0x60004C4")]
		[Address(RVA = "0x1B0054C", Offset = "0x1B0054C", VA = "0x1B0054C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700007C")]
	public StatCanvasTypes CanvasType
	{
		[Token(Token = "0x60004C5")]
		[Address(RVA = "0x1B00554", Offset = "0x1B00554", VA = "0x1B00554")]
		get
		{
			return default(StatCanvasTypes);
		}
		[Token(Token = "0x60004C6")]
		[Address(RVA = "0x1B0055C", Offset = "0x1B0055C", VA = "0x1B0055C")]
		set
		{
		}
	}

	[Token(Token = "0x1700007D")]
	public bool ShowButtonLabels
	{
		[Token(Token = "0x60004C7")]
		[Address(RVA = "0x1B0058C", Offset = "0x1B0058C", VA = "0x1B0058C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60004C8")]
		[Address(RVA = "0x1B00594", Offset = "0x1B00594", VA = "0x1B00594")]
		set
		{
		}
	}

	[Token(Token = "0x1700007E")]
	public int MaxHeaderHeight
	{
		[Token(Token = "0x60004C9")]
		[Address(RVA = "0x1B005B8", Offset = "0x1B005B8", VA = "0x1B005B8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60004CA")]
		[Address(RVA = "0x1B005C0", Offset = "0x1B005C0", VA = "0x1B005C0")]
		set
		{
		}
	}

	[Token(Token = "0x1700007F")]
	public Rect GameObjectRect
	{
		[Token(Token = "0x60004CB")]
		[Address(RVA = "0x1B005E0", Offset = "0x1B005E0", VA = "0x1B005E0")]
		get
		{
			return default(Rect);
		}
		[Token(Token = "0x60004CC")]
		[Address(RVA = "0x1B005EC", Offset = "0x1B005EC", VA = "0x1B005EC")]
		set
		{
		}
	}

	[Token(Token = "0x17000080")]
	public Rect OverlayRect
	{
		[Token(Token = "0x60004CD")]
		[Address(RVA = "0x1B00610", Offset = "0x1B00610", VA = "0x1B00610")]
		get
		{
			return default(Rect);
		}
		[Token(Token = "0x60004CE")]
		[Address(RVA = "0x1B0061C", Offset = "0x1B0061C", VA = "0x1B0061C")]
		set
		{
		}
	}

	[Token(Token = "0x17000081")]
	public FusionGraph.Layouts DefaultLayout
	{
		[Token(Token = "0x60004CF")]
		[Address(RVA = "0x1B00640", Offset = "0x1B00640", VA = "0x1B00640")]
		get
		{
			return default(FusionGraph.Layouts);
		}
		[Token(Token = "0x60004D0")]
		[Address(RVA = "0x1B00648", Offset = "0x1B00648", VA = "0x1B00648")]
		set
		{
		}
	}

	[Token(Token = "0x17000082")]
	public bool NoTextOverlap
	{
		[Token(Token = "0x60004D1")]
		[Address(RVA = "0x1B00668", Offset = "0x1B00668", VA = "0x1B00668")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60004D2")]
		[Address(RVA = "0x1B00670", Offset = "0x1B00670", VA = "0x1B00670")]
		set
		{
		}
	}

	[Token(Token = "0x17000083")]
	public bool NoGraphShader
	{
		[Token(Token = "0x60004D3")]
		[Address(RVA = "0x1B00694", Offset = "0x1B00694", VA = "0x1B00694")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60004D4")]
		[Address(RVA = "0x1B0069C", Offset = "0x1B0069C", VA = "0x1B0069C")]
		set
		{
		}
	}

	[Token(Token = "0x17000084")]
	public int GraphMaxWidth
	{
		[Token(Token = "0x60004D5")]
		[Address(RVA = "0x1B006C0", Offset = "0x1B006C0", VA = "0x1B006C0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60004D6")]
		[Address(RVA = "0x1B006C8", Offset = "0x1B006C8", VA = "0x1B006C8")]
		set
		{
		}
	}

	[Token(Token = "0x17000085")]
	public bool EnableObjectStats
	{
		[Token(Token = "0x60004D7")]
		[Address(RVA = "0x1B006E8", Offset = "0x1B006E8", VA = "0x1B006E8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60004D8")]
		[Address(RVA = "0x1B006F0", Offset = "0x1B006F0", VA = "0x1B006F0")]
		set
		{
		}
	}

	[Token(Token = "0x17000086")]
	private bool ShowMissingNetObjWarning
	{
		[Token(Token = "0x60004D9")]
		[Address(RVA = "0x1B00714", Offset = "0x1B00714", VA = "0x1B00714")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000087")]
	public NetworkObject Object
	{
		[Token(Token = "0x60004DA")]
		[Address(RVA = "0x1B00798", Offset = "0x1B00798", VA = "0x1B00798")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000088")]
	public int ObjectTitleHeight
	{
		[Token(Token = "0x60004DB")]
		[Address(RVA = "0x1B00840", Offset = "0x1B00840", VA = "0x1B00840")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60004DC")]
		[Address(RVA = "0x1B00848", Offset = "0x1B00848", VA = "0x1B00848")]
		set
		{
		}
	}

	[Token(Token = "0x17000089")]
	public int ObjectIdsHeight
	{
		[Token(Token = "0x60004DD")]
		[Address(RVA = "0x1B00868", Offset = "0x1B00868", VA = "0x1B00868")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60004DE")]
		[Address(RVA = "0x1B00870", Offset = "0x1B00870", VA = "0x1B00870")]
		set
		{
		}
	}

	[Token(Token = "0x1700008A")]
	public int ObjectMetersHeight
	{
		[Token(Token = "0x60004DF")]
		[Address(RVA = "0x1B00890", Offset = "0x1B00890", VA = "0x1B00890")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60004E0")]
		[Address(RVA = "0x1B00898", Offset = "0x1B00898", VA = "0x1B00898")]
		set
		{
		}
	}

	[Token(Token = "0x1700008B")]
	public NetworkRunner Runner
	{
		[Token(Token = "0x60004E1")]
		[Address(RVA = "0x1AFE474", Offset = "0x1AFE474", VA = "0x1AFE474")]
		get
		{
			return null;
		}
		[Token(Token = "0x60004E2")]
		[Address(RVA = "0x1B00460", Offset = "0x1B00460", VA = "0x1B00460")]
		set
		{
		}
	}

	[Token(Token = "0x1700008C")]
	public Simulation.Statistics.ObjStatFlags IncludedObjectStats
	{
		[Token(Token = "0x60004E3")]
		[Address(RVA = "0x1B00D08", Offset = "0x1B00D08", VA = "0x1B00D08")]
		get
		{
			return default(Simulation.Statistics.ObjStatFlags);
		}
		[Token(Token = "0x60004E4")]
		[Address(RVA = "0x1B00D10", Offset = "0x1B00D10", VA = "0x1B00D10")]
		set
		{
		}
	}

	[Token(Token = "0x1700008D")]
	public Simulation.Statistics.NetStatFlags IncludedNetStats
	{
		[Token(Token = "0x60004E5")]
		[Address(RVA = "0x1B00D20", Offset = "0x1B00D20", VA = "0x1B00D20")]
		get
		{
			return default(Simulation.Statistics.NetStatFlags);
		}
		[Token(Token = "0x60004E6")]
		[Address(RVA = "0x1B00D28", Offset = "0x1B00D28", VA = "0x1B00D28")]
		set
		{
		}
	}

	[Token(Token = "0x1700008E")]
	public Simulation.Statistics.SimStatFlags IncludedSimStats
	{
		[Token(Token = "0x60004E7")]
		[Address(RVA = "0x1B00D38", Offset = "0x1B00D38", VA = "0x1B00D38")]
		get
		{
			return default(Simulation.Statistics.SimStatFlags);
		}
		[Token(Token = "0x60004E8")]
		[Address(RVA = "0x1B00D40", Offset = "0x1B00D40", VA = "0x1B00D40")]
		set
		{
		}
	}

	[Token(Token = "0x1700008F")]
	public bool ModifyColors
	{
		[Token(Token = "0x60004E9")]
		[Address(RVA = "0x1B00D50", Offset = "0x1B00D50", VA = "0x1B00D50")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000090")]
	public Color FontColor
	{
		[Token(Token = "0x60004EA")]
		[Address(RVA = "0x1B00D58", Offset = "0x1B00D58", VA = "0x1B00D58")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000091")]
	public Color GraphColorGood
	{
		[Token(Token = "0x60004EB")]
		[Address(RVA = "0x1B00D64", Offset = "0x1B00D64", VA = "0x1B00D64")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000092")]
	public Color GraphColorWarn
	{
		[Token(Token = "0x60004EC")]
		[Address(RVA = "0x1B00D70", Offset = "0x1B00D70", VA = "0x1B00D70")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000093")]
	public Color GraphColorBad
	{
		[Token(Token = "0x60004ED")]
		[Address(RVA = "0x1B00D7C", Offset = "0x1B00D7C", VA = "0x1B00D7C")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000094")]
	public Color GraphColorFlag
	{
		[Token(Token = "0x60004EE")]
		[Address(RVA = "0x1B00D88", Offset = "0x1B00D88", VA = "0x1B00D88")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000095")]
	public Color SimDataBackColor
	{
		[Token(Token = "0x60004EF")]
		[Address(RVA = "0x1B00D94", Offset = "0x1B00D94", VA = "0x1B00D94")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000096")]
	public Color NetDataBackColor
	{
		[Token(Token = "0x60004F0")]
		[Address(RVA = "0x1B00DA8", Offset = "0x1B00DA8", VA = "0x1B00DA8")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000097")]
	public Color ObjDataBackColor
	{
		[Token(Token = "0x60004F1")]
		[Address(RVA = "0x1B00DBC", Offset = "0x1B00DBC", VA = "0x1B00DBC")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000098")]
	public Rect CurrentRect
	{
		[Token(Token = "0x60004F2")]
		[Address(RVA = "0x1B00DD0", Offset = "0x1B00DD0", VA = "0x1B00DD0")]
		get
		{
			return default(Rect);
		}
	}

	[Token(Token = "0x17000099")]
	private Shader Shader
	{
		[Token(Token = "0x60004F4")]
		[Address(RVA = "0x1B00E14", Offset = "0x1B00E14", VA = "0x1B00E14")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700009A")]
	public static bool NewInputSystemFound
	{
		[Token(Token = "0x60004FB")]
		[Address(RVA = "0x1B02B94", Offset = "0x1B02B94", VA = "0x1B02B94")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700009B")]
	private bool _graphsAreMissing
	{
		[Token(Token = "0x60004FD")]
		[Address(RVA = "0x1B02DBC", Offset = "0x1B02DBC", VA = "0x1B02DBC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60004C0")]
	[Address(RVA = "0x1AFFE24", Offset = "0x1AFFE24", VA = "0x1AFFE24")]
	internal static FusionStats CreateInternal([Optional] NetworkRunner runner, DefaultLayouts layout = DefaultLayouts.Left, [Optional] Simulation.Statistics.NetStatFlags? netStatsMask, [Optional] Simulation.Statistics.SimStatFlags? simStatsMask)
	{
		return null;
	}

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0x1AFFEEC", Offset = "0x1AFFEEC", VA = "0x1AFFEEC")]
	public static FusionStats Create([Optional] Transform parent, [Optional] NetworkRunner runner, [Optional] DefaultLayouts? screenLayout, [Optional] DefaultLayouts? objectLayout, [Optional] Simulation.Statistics.NetStatFlags? netStatsMask, [Optional] Simulation.Statistics.SimStatFlags? simStatsMask)
	{
		return null;
	}

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0x1B00C28", Offset = "0x1B00C28", VA = "0x1B00C28")]
	private void UpdateTitle()
	{
	}

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0x1B00578", Offset = "0x1B00578", VA = "0x1B00578")]
	private void DirtyLayout(int minimumRefreshes = 1)
	{
	}

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0x1B000C0", Offset = "0x1B000C0", VA = "0x1B000C0")]
	private void ResetInternal([Optional] bool? enableObjectStats, [Optional] Simulation.Statistics.NetStatFlags? netStatsMask, [Optional] Simulation.Statistics.SimStatFlags? simStatsMask, [Optional] DefaultLayouts? objectLayout, [Optional] DefaultLayouts? screenLayout)
	{
	}

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0x1B01EE8", Offset = "0x1B01EE8", VA = "0x1B01EE8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0x1B021E8", Offset = "0x1B021E8", VA = "0x1B021E8")]
	private void Start()
	{
	}

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0x1B029C0", Offset = "0x1B029C0", VA = "0x1B029C0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0x1B02AE8", Offset = "0x1B02AE8", VA = "0x1B02AE8")]
	[BehaviourButtonAction("Destroy Graphs", null, "_canvasRT", ConditionFlags = BehaviourActionAttribute.ActionFlags.ShowAtNotRuntime)]
	private void DestroyGraphs()
	{
	}

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0x1B0221C", Offset = "0x1B0221C", VA = "0x1B0221C")]
	private void Initialize()
	{
	}

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0x1B01208", Offset = "0x1B01208", VA = "0x1B01208")]
	[BehaviourButtonAction("Generate Graphs", null, "_graphsAreMissing", ConditionFlags = BehaviourActionAttribute.ActionFlags.ShowAtNotRuntime)]
	private void GenerateGraphs()
	{
	}

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0x1B009E0", Offset = "0x1B009E0", VA = "0x1B009E0")]
	private void AssociateWithRunner(NetworkRunner runner)
	{
	}

	[Token(Token = "0x6000500")]
	[Address(RVA = "0x1B008B8", Offset = "0x1B008B8", VA = "0x1B008B8")]
	private void DisassociateWithRunner(NetworkRunner runner)
	{
	}

	[Token(Token = "0x6000501")]
	[Address(RVA = "0x1B031F0", Offset = "0x1B031F0", VA = "0x1B031F0")]
	private void Pause()
	{
	}

	[Token(Token = "0x6000502")]
	[Address(RVA = "0x1B034BC", Offset = "0x1B034BC", VA = "0x1B034BC")]
	private void Toggle()
	{
	}

	[Token(Token = "0x6000503")]
	[Address(RVA = "0x1B037F4", Offset = "0x1B037F4", VA = "0x1B037F4")]
	private void Clear()
	{
	}

	[Token(Token = "0x6000504")]
	[Address(RVA = "0x1B039EC", Offset = "0x1B039EC", VA = "0x1B039EC")]
	private void ToggleCanvasType()
	{
	}

	[Token(Token = "0x6000505")]
	[Address(RVA = "0x1B0483C", Offset = "0x1B0483C", VA = "0x1B0483C")]
	private void Close()
	{
	}

	[Token(Token = "0x6000506")]
	[Address(RVA = "0x1B048A8", Offset = "0x1B048A8", VA = "0x1B048A8")]
	private void PingSelectObject()
	{
	}

	[Token(Token = "0x6000507")]
	[Address(RVA = "0x1B048AC", Offset = "0x1B048AC", VA = "0x1B048AC")]
	private void PingSelectFusionStats()
	{
	}

	[Token(Token = "0x6000508")]
	[Address(RVA = "0x1B048B0", Offset = "0x1B048B0", VA = "0x1B048B0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000509")]
	[Address(RVA = "0x1B05000", Offset = "0x1B05000", VA = "0x1B05000")]
	private void RefreshObjectValues()
	{
	}

	[Token(Token = "0x600050A")]
	[Address(RVA = "0x1B030A4", Offset = "0x1B030A4", VA = "0x1B030A4")]
	public FusionGraph CreateGraph(Simulation.Statistics.StatSourceTypes type, int statId, RectTransform parentRT)
	{
		return null;
	}

	[Token(Token = "0x600050B")]
	[Address(RVA = "0x1B04C0C", Offset = "0x1B04C0C", VA = "0x1B04C0C")]
	private void ReapplyEnabled()
	{
	}

	[Token(Token = "0x600050C")]
	[Address(RVA = "0x1B03A18", Offset = "0x1B03A18", VA = "0x1B03A18")]
	private void CalculateLayout()
	{
	}

	[Token(Token = "0x600050D")]
	[Address(RVA = "0x1B00F8C", Offset = "0x1B00F8C", VA = "0x1B00F8C")]
	private void ApplyDefaultLayout(DefaultLayouts defaults, [Optional] StatCanvasTypes? applyForCanvasType)
	{
	}

	[Token(Token = "0x600050E")]
	[Address(RVA = "0x1B050DC", Offset = "0x1B050DC", VA = "0x1B050DC")]
	public FusionStats()
	{
	}
}
[Token(Token = "0x2000100")]
[ScriptHelp(BackColor = EditorHeaderBackColor.Olive)]
public abstract class FusionGraphBase : Fusion.Behaviour, IFusionStatsView
{
	[Token(Token = "0x4000577")]
	protected const int PAD = 10;

	[Token(Token = "0x4000578")]
	protected const int MRGN = 6;

	[Token(Token = "0x4000579")]
	protected const int MAX_FONT_SIZE_WITH_GRAPH = 24;

	[Token(Token = "0x400057A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[HideInInspector]
	protected Text LabelTitle;

	[Token(Token = "0x400057B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[HideInInspector]
	protected Image BackImage;

	[Token(Token = "0x400057C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[InlineHelp]
	[SerializeField]
	protected Simulation.Statistics.StatSourceTypes _statSourceType;

	[Token(Token = "0x400057D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[InlineHelp]
	[SerializeField]
	[CastEnum("CastToStatType")]
	protected int _statId;

	[Token(Token = "0x400057E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[InlineHelp]
	public float WarnThreshold;

	[Token(Token = "0x400057F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[InlineHelp]
	public float ErrorThreshold;

	[Token(Token = "0x4000580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected IStatsBuffer _statsBuffer;

	[Token(Token = "0x4000581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected bool _isOverlay;

	[Token(Token = "0x4000582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected FusionStats _fusionStats;

	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected bool _layoutDirty;

	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	protected Simulation.Statistics.StatsPer CurrentPer;

	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Simulation.Statistics.StatSourceInfo StatSourceInfo;

	[Token(Token = "0x4000586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	[HideInInspector]
	private Simulation.Statistics.StatSourceTypes _prevStatSourceType;

	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	[SerializeField]
	[HideInInspector]
	private int _prevStatId;

	[Token(Token = "0x1700009C")]
	public Simulation.Statistics.StatSourceTypes StateSourceType
	{
		[Token(Token = "0x6000510")]
		[Address(RVA = "0x1B0531C", Offset = "0x1B0531C", VA = "0x1B0531C")]
		get
		{
			return default(Simulation.Statistics.StatSourceTypes);
		}
		[Token(Token = "0x6000511")]
		[Address(RVA = "0x1B05324", Offset = "0x1B05324", VA = "0x1B05324")]
		set
		{
		}
	}

	[Token(Token = "0x1700009D")]
	public int StatId
	{
		[Token(Token = "0x6000512")]
		[Address(RVA = "0x1B05338", Offset = "0x1B05338", VA = "0x1B05338")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000513")]
		[Address(RVA = "0x1B05340", Offset = "0x1B05340", VA = "0x1B05340")]
		set
		{
		}
	}

	[Token(Token = "0x1700009E")]
	public IStatsBuffer StatsBuffer
	{
		[Token(Token = "0x6000514")]
		[Address(RVA = "0x1AFC584", Offset = "0x1AFC584", VA = "0x1AFC584")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700009F")]
	public bool IsOverlay
	{
		[Token(Token = "0x6000516")]
		[Address(RVA = "0x1B0538C", Offset = "0x1B0538C", VA = "0x1B0538C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000515")]
		[Address(RVA = "0x1B05354", Offset = "0x1B05354", VA = "0x1B05354")]
		set
		{
		}
	}

	[Token(Token = "0x170000A0")]
	protected virtual Color BackColor
	{
		[Token(Token = "0x6000517")]
		[Address(RVA = "0x1B05394", Offset = "0x1B05394", VA = "0x1B05394", Slot = "9")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170000A1")]
	protected Type CastToStatType
	{
		[Token(Token = "0x6000518")]
		[Address(RVA = "0x1B05408", Offset = "0x1B05408", VA = "0x1B05408")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000519")]
	[Address(RVA = "0x1AFC188", Offset = "0x1AFC188", VA = "0x1AFC188")]
	protected FusionStats LocateParentFusionStats()
	{
		return null;
	}

	[Token(Token = "0x600051A")]
	[Address(RVA = "0x1B054C0", Offset = "0x1B054C0", VA = "0x1B054C0", Slot = "10")]
	public virtual void Initialize()
	{
	}

	[Token(Token = "0x600051B")]
	[Address(RVA = "0x1AFC264", Offset = "0x1AFC264", VA = "0x1AFC264", Slot = "11")]
	public virtual void CyclePer()
	{
	}

	[Token(Token = "0x600051C")]
	public abstract void CalculateLayout();

	[Token(Token = "0x600051D")]
	public abstract void Refresh();

	[Token(Token = "0x600051E")]
	[Address(RVA = "0x1AFB544", Offset = "0x1AFB544", VA = "0x1AFB544", Slot = "14")]
	protected virtual bool TryConnect()
	{
		return default(bool);
	}

	[Token(Token = "0x600051F")]
	[Address(RVA = "0x1AFFC40", Offset = "0x1AFFC40", VA = "0x1AFFC40")]
	protected void ApplyTitleText()
	{
	}

	[Token(Token = "0x6000520")]
	[Address(RVA = "0x1B054C4", Offset = "0x1B054C4", VA = "0x1B054C4")]
	protected void CheckIfValidIncurrentMode(NetworkRunner runner)
	{
	}

	[Token(Token = "0x6000521")]
	[Address(RVA = "0x1AFFE14", Offset = "0x1AFFE14", VA = "0x1AFFE14")]
	protected FusionGraphBase()
	{
	}

	[SpecialName]
	[Token(Token = "0x6000522")]
	[Address(RVA = "0x1B05668", Offset = "0x1B05668", VA = "0x1B05668", Slot = "7")]
	private bool Fusion.StatsInternal.IFusionStatsView.get_isActiveAndEnabled()
	{
		return default(bool);
	}

	[SpecialName]
	[Token(Token = "0x6000523")]
	[Address(RVA = "0x1B05670", Offset = "0x1B05670", VA = "0x1B05670", Slot = "8")]
	private Transform Fusion.StatsInternal.IFusionStatsView.get_transform()
	{
		return null;
	}
}
[Token(Token = "0x2000101")]
[ScriptHelp(BackColor = EditorHeaderBackColor.Olive)]
[ExecuteAlways]
public class FusionStatsBillboard : Fusion.Behaviour
{
	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[InlineHelp]
	public Camera Camera;

	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float _lastCameraFindTime;

	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Camera _currentCam;

	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private FusionStats _fusionStats;

	[Token(Token = "0x170000A2")]
	private Camera MainCamera
	{
		[Token(Token = "0x6000528")]
		[Address(RVA = "0x1B05754", Offset = "0x1B05754", VA = "0x1B05754")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000527")]
		[Address(RVA = "0x1B05704", Offset = "0x1B05704", VA = "0x1B05704")]
		set
		{
		}
	}

	[Token(Token = "0x6000524")]
	[Address(RVA = "0x1B05678", Offset = "0x1B05678", VA = "0x1B05678")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000525")]
	[Address(RVA = "0x1B056D0", Offset = "0x1B056D0", VA = "0x1B056D0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000526")]
	[Address(RVA = "0x1B056D4", Offset = "0x1B056D4", VA = "0x1B056D4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000529")]
	[Address(RVA = "0x1B057E0", Offset = "0x1B057E0", VA = "0x1B057E0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600052A")]
	[Address(RVA = "0x1B00E6C", Offset = "0x1B00E6C", VA = "0x1B00E6C")]
	public void UpdateLookAt()
	{
	}

	[Token(Token = "0x600052B")]
	[Address(RVA = "0x1B057E4", Offset = "0x1B057E4", VA = "0x1B057E4")]
	public FusionStatsBillboard()
	{
	}
}
[Token(Token = "0x2000102")]
public class FusionStatsMeterBar : FusionGraphBase
{
	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float HoldPeakTime;

	[Token(Token = "0x400058D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public float DecayTime;

	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[InlineHelp]
	public int MeterMax;

	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	[InlineHelp]
	[SerializeField]
	private bool _showUITargets;

	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[DrawIf("_showUITargets", true, DrawIfHideType.Hide, DoIfCompareOperator.Equal)]
	public Text ValueLabel;

	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[DrawIf("_showUITargets", true, DrawIfHideType.Hide, DoIfCompareOperator.Equal)]
	public Image Bar;

	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private double _currentDisplayValue;

	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private double _currentBarValue;

	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Color CurrentColor;

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private double _lastImportedSampleTickTime;

	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private double _max;

	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private double _total;

	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private float _lastPeakSetTime;

	[Token(Token = "0x170000A3")]
	protected override Color BackColor
	{
		[Token(Token = "0x600052C")]
		[Address(RVA = "0x1B057EC", Offset = "0x1B057EC", VA = "0x1B057EC", Slot = "9")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x600052D")]
	[Address(RVA = "0x1B0580C", Offset = "0x1B0580C", VA = "0x1B0580C", Slot = "10")]
	public override void Initialize()
	{
	}

	[Token(Token = "0x600052E")]
	[Address(RVA = "0x1B05A50", Offset = "0x1B05A50", VA = "0x1B05A50", Slot = "13")]
	public override void Refresh()
	{
	}

	[Token(Token = "0x600052F")]
	[Address(RVA = "0x1B06280", Offset = "0x1B06280", VA = "0x1B06280")]
	public void LateUpdate()
	{
	}

	[Token(Token = "0x6000530")]
	[Address(RVA = "0x1B060DC", Offset = "0x1B060DC", VA = "0x1B060DC")]
	public void SetValue(double rawvalue)
	{
	}

	[Token(Token = "0x6000531")]
	[Address(RVA = "0x1B06360", Offset = "0x1B06360", VA = "0x1B06360")]
	private void SetBar(double value)
	{
	}

	[Token(Token = "0x6000532")]
	[Address(RVA = "0x1B064E0", Offset = "0x1B064E0", VA = "0x1B064E0", Slot = "12")]
	public override void CalculateLayout()
	{
	}

	[Token(Token = "0x6000533")]
	[Address(RVA = "0x1B02F30", Offset = "0x1B02F30", VA = "0x1B02F30")]
	public static FusionStatsMeterBar Create(RectTransform parent, FusionStats fusionStats, Simulation.Statistics.StatSourceTypes statSourceType, int statId, float warnThreshold, float alertThreshold)
	{
		return null;
	}

	[Token(Token = "0x6000534")]
	[Address(RVA = "0x1B0663C", Offset = "0x1B0663C", VA = "0x1B0663C")]
	public void GenerateMeter()
	{
	}

	[Token(Token = "0x6000535")]
	[Address(RVA = "0x1B06A48", Offset = "0x1B06A48", VA = "0x1B06A48")]
	public FusionStatsMeterBar()
	{
	}
}
[Token(Token = "0x2000103")]
public class FusionStatsObjectIds : Fusion.Behaviour, IFusionStatsView
{
	[Token(Token = "0x4000599")]
	protected const int PAD = 10;

	[Token(Token = "0x400059A")]
	protected const int MARGIN = 6;

	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[HideInInspector]
	private Text _inputValueText;

	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[HideInInspector]
	private Text _stateValueText;

	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[HideInInspector]
	private Text _objectIdLabel;

	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	[HideInInspector]
	private Image _stateAuthBackImage;

	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[HideInInspector]
	private Image _inputAuthBackImage;

	[Token(Token = "0x40005A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private FusionStats _fusionStats;

	[Token(Token = "0x40005A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Color _noneAuthColor;

	[Token(Token = "0x40005A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Color _inputAuthColor;

	[Token(Token = "0x40005A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static Color _stateAuthColor;

	[Token(Token = "0x40005A4")]
	private const float LABEL_DIVIDING_POINT = 0.7f;

	[Token(Token = "0x40005A5")]
	private const float TEXT_PAD = 4f;

	[Token(Token = "0x40005A6")]
	private const float TEXT_PAD_HORIZ = 6f;

	[Token(Token = "0x40005A7")]
	private const int MAX_TAG_FONT_SIZE = 18;

	[Token(Token = "0x40005A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool _previousHasInputAuth;

	[Token(Token = "0x40005A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool _previousHasStateAuth;

	[Token(Token = "0x40005AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int _previousInputAuthValue;

	[Token(Token = "0x40005AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int _previousStateAuthValue;

	[Token(Token = "0x40005AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private uint _previousObjectIdValue;

	[Token(Token = "0x6000536")]
	[Address(RVA = "0x1B06A64", Offset = "0x1B06A64", VA = "0x1B06A64")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000537")]
	[Address(RVA = "0x1B06ABC", Offset = "0x1B06ABC", VA = "0x1B06ABC", Slot = "4")]
	private void Fusion.StatsInternal.IFusionStatsView.Initialize()
	{
	}

	[Token(Token = "0x6000538")]
	[Address(RVA = "0x1B02E1C", Offset = "0x1B02E1C", VA = "0x1B02E1C")]
	public static RectTransform Create(RectTransform parent, FusionStats fusionStats)
	{
		return null;
	}

	[Token(Token = "0x6000539")]
	[Address(RVA = "0x1B06AC0", Offset = "0x1B06AC0", VA = "0x1B06AC0")]
	public void Generate()
	{
	}

	[Token(Token = "0x600053A")]
	[Address(RVA = "0x1B06DDC", Offset = "0x1B06DDC", VA = "0x1B06DDC")]
	private RectTransform AddAuthorityPanel(RectTransform parent, string label, ref Text valueText, ref Image backImage)
	{
		return null;
	}

	[Token(Token = "0x600053B")]
	[Address(RVA = "0x1B0707C", Offset = "0x1B0707C", VA = "0x1B0707C", Slot = "5")]
	private void Fusion.StatsInternal.IFusionStatsView.CalculateLayout()
	{
	}

	[Token(Token = "0x600053C")]
	[Address(RVA = "0x1B07080", Offset = "0x1B07080", VA = "0x1B07080", Slot = "6")]
	private void Fusion.StatsInternal.IFusionStatsView.Refresh()
	{
	}

	[Token(Token = "0x600053D")]
	[Address(RVA = "0x1B07468", Offset = "0x1B07468", VA = "0x1B07468")]
	public FusionStatsObjectIds()
	{
	}

	[SpecialName]
	[Token(Token = "0x600053F")]
	[Address(RVA = "0x1B074EC", Offset = "0x1B074EC", VA = "0x1B074EC", Slot = "7")]
	private bool Fusion.StatsInternal.IFusionStatsView.get_isActiveAndEnabled()
	{
		return default(bool);
	}

	[SpecialName]
	[Token(Token = "0x6000540")]
	[Address(RVA = "0x1B074F4", Offset = "0x1B074F4", VA = "0x1B074F4", Slot = "8")]
	private Transform Fusion.StatsInternal.IFusionStatsView.get_transform()
	{
		return null;
	}
}
[Token(Token = "0x2000104")]
[ScriptHelp(BackColor = EditorHeaderBackColor.Steel)]
[NetworkBehaviourWeaved(0)]
public class PlayerAOIPrototype : NetworkBehaviour
{
	[Token(Token = "0x40005AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[MultiPropertyDrawersFix]
	[InlineHelp]
	[SerializeField]
	protected bool DrawAreaOfInterestRadius;

	[Token(Token = "0x40005AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[InlineHelp]
	public float Radius;

	[Token(Token = "0x40005AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Changed<PlayerAOIPrototype> $IL2CPP_CHANGED;

	[Token(Token = "0x40005B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static ChangedDelegate<PlayerAOIPrototype> $IL2CPP_CHANGED_DELEGATE;

	[Token(Token = "0x40005B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static NetworkBehaviourCallbacks<PlayerAOIPrototype> $IL2CPP_NETWORK_BEHAVIOUR_CALLBACKS;

	[Token(Token = "0x6000541")]
	[Address(RVA = "0x1B074FC", Offset = "0x1B074FC", VA = "0x1B074FC", Slot = "5")]
	public override void FixedUpdateNetwork()
	{
	}

	[Token(Token = "0x6000542")]
	[Address(RVA = "0x1B07604", Offset = "0x1B07604", VA = "0x1B07604")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000543")]
	[Address(RVA = "0x1B076A8", Offset = "0x1B076A8", VA = "0x1B076A8")]
	public PlayerAOIPrototype()
	{
	}
}
[Token(Token = "0x2000105")]
[ScriptHelp(BackColor = EditorHeaderBackColor.Steel)]
[NetworkBehaviourWeaved(3)]
public class ControllerPrototype : NetworkBehaviour
{
	[Token(Token = "0x40005B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected NetworkCharacterControllerPrototype _ncc;

	[Token(Token = "0x40005B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected NetworkRigidbody _nrb;

	[Token(Token = "0x40005B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected NetworkRigidbody2D _nrb2d;

	[Token(Token = "0x40005B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected NetworkTransform _nt;

	[Token(Token = "0x40005B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	[DefaultForProperty("MovementDirection", 0, 3)]
	private Vector3 _MovementDirection;

	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public bool TransformLocal;

	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[DrawIf("ShowSpeed", DrawIfHideType.Hide, DoIfCompareOperator.NotEqual)]
	public float Speed;

	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Changed<ControllerPrototype> $IL2CPP_CHANGED;

	[Token(Token = "0x40005BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static ChangedDelegate<ControllerPrototype> $IL2CPP_CHANGED_DELEGATE;

	[Token(Token = "0x40005BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static NetworkBehaviourCallbacks<ControllerPrototype> $IL2CPP_NETWORK_BEHAVIOUR_CALLBACKS;

	[Token(Token = "0x170000A4")]
	[Networked]
	[NetworkedWeaved(0, 3)]
	public Vector3 MovementDirection
	{
		[Token(Token = "0x6000544")]
		[Address(RVA = "0x1B076B8", Offset = "0x1B076B8", VA = "0x1B076B8")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000545")]
		[Address(RVA = "0x1B07740", Offset = "0x1B07740", VA = "0x1B07740")]
		set
		{
		}
	}

	[Token(Token = "0x170000A5")]
	private bool HasNCC
	{
		[Token(Token = "0x6000546")]
		[Address(RVA = "0x1B07824", Offset = "0x1B07824", VA = "0x1B07824")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000A6")]
	private bool ShowSpeed
	{
		[Token(Token = "0x6000547")]
		[Address(RVA = "0x1B078AC", Offset = "0x1B078AC", VA = "0x1B078AC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000548")]
	[Address(RVA = "0x1B0794C", Offset = "0x1B0794C", VA = "0x1B0794C")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000549")]
	[Address(RVA = "0x1B07B04", Offset = "0x1B07B04", VA = "0x1B07B04", Slot = "13")]
	public override void Spawned()
	{
	}

	[Token(Token = "0x600054A")]
	[Address(RVA = "0x1B07950", Offset = "0x1B07950", VA = "0x1B07950")]
	private void CacheComponents()
	{
	}

	[Token(Token = "0x600054B")]
	[Address(RVA = "0x1B07B08", Offset = "0x1B07B08", VA = "0x1B07B08", Slot = "5")]
	public override void FixedUpdateNetwork()
	{
	}

	[Token(Token = "0x600054C")]
	[Address(RVA = "0x1B080DC", Offset = "0x1B080DC", VA = "0x1B080DC")]
	public ControllerPrototype()
	{
	}

	[Token(Token = "0x600054D")]
	[Address(RVA = "0x1B080EC", Offset = "0x1B080EC", VA = "0x1B080EC", Slot = "10")]
	public override void CopyBackingFieldsToState(bool P_0)
	{
	}

	[Token(Token = "0x600054E")]
	[Address(RVA = "0x1B080F8", Offset = "0x1B080F8", VA = "0x1B080F8", Slot = "11")]
	public override void CopyStateToBackingFields()
	{
	}
}
[Token(Token = "0x2000106")]
[ScriptHelp(BackColor = EditorHeaderBackColor.Steel)]
public class InputBehaviourPrototype : Fusion.Behaviour, INetworkRunnerCallbacks
{
	[Token(Token = "0x600054F")]
	[Address(RVA = "0x1B08114", Offset = "0x1B08114", VA = "0x1B08114", Slot = "6")]
	public void OnInput(NetworkRunner runner, NetworkInput input)
	{
	}

	[Token(Token = "0x6000550")]
	[Address(RVA = "0x1B08340", Offset = "0x1B08340", VA = "0x1B08340", Slot = "7")]
	public void OnInputMissing(NetworkRunner runner, PlayerRef player, NetworkInput input)
	{
	}

	[Token(Token = "0x6000551")]
	[Address(RVA = "0x1B08344", Offset = "0x1B08344", VA = "0x1B08344", Slot = "9")]
	public void OnConnectedToServer(NetworkRunner runner)
	{
	}

	[Token(Token = "0x6000552")]
	[Address(RVA = "0x1B08348", Offset = "0x1B08348", VA = "0x1B08348", Slot = "12")]
	public void OnConnectFailed(NetworkRunner runner, NetAddress remoteAddress, NetConnectFailedReason reason)
	{
	}

	[Token(Token = "0x6000553")]
	[Address(RVA = "0x1B0834C", Offset = "0x1B0834C", VA = "0x1B0834C", Slot = "11")]
	public void OnConnectRequest(NetworkRunner runner, NetworkRunnerCallbackArgs.ConnectRequest request, byte[] token)
	{
	}

	[Token(Token = "0x6000554")]
	[Address(RVA = "0x1B08350", Offset = "0x1B08350", VA = "0x1B08350", Slot = "10")]
	public void OnDisconnectedFromServer(NetworkRunner runner)
	{
	}

	[Token(Token = "0x6000555")]
	[Address(RVA = "0x1B08354", Offset = "0x1B08354", VA = "0x1B08354", Slot = "4")]
	public void OnPlayerJoined(NetworkRunner runner, PlayerRef player)
	{
	}

	[Token(Token = "0x6000556")]
	[Address(RVA = "0x1B08358", Offset = "0x1B08358", VA = "0x1B08358", Slot = "5")]
	public void OnPlayerLeft(NetworkRunner runner, PlayerRef player)
	{
	}

	[Token(Token = "0x6000557")]
	[Address(RVA = "0x1B0835C", Offset = "0x1B0835C", VA = "0x1B0835C", Slot = "13")]
	public void OnUserSimulationMessage(NetworkRunner runner, SimulationMessagePtr message)
	{
	}

	[Token(Token = "0x6000558")]
	[Address(RVA = "0x1B08360", Offset = "0x1B08360", VA = "0x1B08360", Slot = "8")]
	public void OnShutdown(NetworkRunner runner, ShutdownReason shutdownReason)
	{
	}

	[Token(Token = "0x6000559")]
	[Address(RVA = "0x1B08364", Offset = "0x1B08364", VA = "0x1B08364", Slot = "14")]
	public void OnSessionListUpdated(NetworkRunner runner, List<SessionInfo> sessionList)
	{
	}

	[Token(Token = "0x600055A")]
	[Address(RVA = "0x1B08368", Offset = "0x1B08368", VA = "0x1B08368", Slot = "17")]
	public void OnReliableDataReceived(NetworkRunner runner, PlayerRef player, ArraySegment<byte> data)
	{
	}

	[Token(Token = "0x600055B")]
	[Address(RVA = "0x1B0836C", Offset = "0x1B0836C", VA = "0x1B0836C", Slot = "18")]
	public void OnSceneLoadDone(NetworkRunner runner)
	{
	}

	[Token(Token = "0x600055C")]
	[Address(RVA = "0x1B08370", Offset = "0x1B08370", VA = "0x1B08370", Slot = "19")]
	public void OnSceneLoadStart(NetworkRunner runner)
	{
	}

	[Token(Token = "0x600055D")]
	[Address(RVA = "0x1B08374", Offset = "0x1B08374", VA = "0x1B08374", Slot = "15")]
	public void OnCustomAuthenticationResponse(NetworkRunner runner, Dictionary<string, object> data)
	{
	}

	[Token(Token = "0x600055E")]
	[Address(RVA = "0x1B08378", Offset = "0x1B08378", VA = "0x1B08378", Slot = "16")]
	public void OnHostMigration(NetworkRunner runner, HostMigrationToken hostMigrationToken)
	{
	}

	[Token(Token = "0x600055F")]
	[Address(RVA = "0x1B0837C", Offset = "0x1B0837C", VA = "0x1B0837C")]
	public InputBehaviourPrototype()
	{
	}
}
[StructLayout(2)]
[Token(Token = "0x2000107")]
[NetworkInputWeaved(4)]
public struct NetworkInputPrototype : INetworkInput
{
	[Token(Token = "0x40005BC")]
	public const int BUTTON_USE = 0;

	[Token(Token = "0x40005BD")]
	public const int BUTTON_FIRE = 1;

	[Token(Token = "0x40005BE")]
	public const int BUTTON_FIRE_ALT = 2;

	[Token(Token = "0x40005BF")]
	public const int BUTTON_FORWARD = 3;

	[Token(Token = "0x40005C0")]
	public const int BUTTON_BACKWARD = 4;

	[Token(Token = "0x40005C1")]
	public const int BUTTON_LEFT = 5;

	[Token(Token = "0x40005C2")]
	public const int BUTTON_RIGHT = 6;

	[Token(Token = "0x40005C3")]
	public const int BUTTON_JUMP = 7;

	[Token(Token = "0x40005C4")]
	public const int BUTTON_CROUCH = 8;

	[Token(Token = "0x40005C5")]
	public const int BUTTON_WALK = 9;

	[Token(Token = "0x40005C6")]
	public const int BUTTON_ACTION1 = 10;

	[Token(Token = "0x40005C7")]
	public const int BUTTON_ACTION2 = 11;

	[Token(Token = "0x40005C8")]
	public const int BUTTON_ACTION3 = 12;

	[Token(Token = "0x40005C9")]
	public const int BUTTON_ACTION4 = 14;

	[Token(Token = "0x40005CA")]
	public const int BUTTON_RELOAD = 15;

	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public NetworkButtons Buttons;

	[Token(Token = "0x40005CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public byte Weapon;

	[Token(Token = "0x40005CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public Angle Yaw;

	[Token(Token = "0x40005CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Angle Pitch;

	[Token(Token = "0x6000560")]
	[Address(RVA = "0x1B08384", Offset = "0x1B08384", VA = "0x1B08384")]
	public bool IsUp(int button)
	{
		return default(bool);
	}

	[Token(Token = "0x6000561")]
	[Address(RVA = "0x1B080D4", Offset = "0x1B080D4", VA = "0x1B080D4")]
	public bool IsDown(int button)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000108")]
[RequireComponent(typeof(CharacterController))]
[OrderBefore(new Type[] { typeof(NetworkTransform) })]
[DisallowMultipleComponent]
[NetworkBehaviourWeaved(22)]
public class NetworkCharacterControllerPrototype : NetworkTransform
{
	[Token(Token = "0x40005CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	[Header("Character Controller Settings")]
	public float gravity;

	[Token(Token = "0x40005D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public float jumpImpulse;

	[Token(Token = "0x40005D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	public float acceleration;

	[Token(Token = "0x40005D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public float braking;

	[Token(Token = "0x40005D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	public float maxSpeed;

	[Token(Token = "0x40005D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public float rotationSpeed;

	[Token(Token = "0x40005D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	[DefaultForProperty("IsGrounded", 18, 1)]
	[HideInInspector]
	[SerializeField]
	private bool _IsGrounded;

	[Token(Token = "0x40005D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[HideInInspector]
	[SerializeField]
	[DefaultForProperty("Velocity", 19, 3)]
	private Vector3 _Velocity;

	[Token(Token = "0x40005D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Changed<NetworkCharacterControllerPrototype> $IL2CPP_CHANGED;

	[Token(Token = "0x40005D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static ChangedDelegate<NetworkCharacterControllerPrototype> $IL2CPP_CHANGED_DELEGATE;

	[Token(Token = "0x40005DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static NetworkBehaviourCallbacks<NetworkCharacterControllerPrototype> $IL2CPP_NETWORK_BEHAVIOUR_CALLBACKS;

	[Token(Token = "0x170000A7")]
	[Networked]
	[HideInInspector]
	[NetworkedWeaved(18, 1)]
	public bool IsGrounded
	{
		[Token(Token = "0x6000562")]
		[Address(RVA = "0x1B083A0", Offset = "0x1B083A0", VA = "0x1B083A0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000563")]
		[Address(RVA = "0x1B0840C", Offset = "0x1B0840C", VA = "0x1B0840C")]
		set
		{
		}
	}

	[Token(Token = "0x170000A8")]
	[HideInInspector]
	[NetworkedWeaved(19, 3)]
	[Networked]
	public Vector3 Velocity
	{
		[Token(Token = "0x6000564")]
		[Address(RVA = "0x1B08474", Offset = "0x1B08474", VA = "0x1B08474")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000565")]
		[Address(RVA = "0x1B084FC", Offset = "0x1B084FC", VA = "0x1B084FC")]
		set
		{
		}
	}

	[Token(Token = "0x170000A9")]
	protected override Vector3 DefaultTeleportInterpolationVelocity
	{
		[Token(Token = "0x6000566")]
		[Address(RVA = "0x1B085E0", Offset = "0x1B085E0", VA = "0x1B085E0", Slot = "45")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170000AA")]
	protected override Vector3 DefaultTeleportInterpolationAngularVelocity
	{
		[Token(Token = "0x6000567")]
		[Address(RVA = "0x1B085E4", Offset = "0x1B085E4", VA = "0x1B085E4", Slot = "46")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170000AB")]
	public CharacterController Controller
	{
		[Token(Token = "0x6000568")]
		[Address(RVA = "0x1B085F4", Offset = "0x1B085F4", VA = "0x1B085F4")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000569")]
		[Address(RVA = "0x1B085FC", Offset = "0x1B085FC", VA = "0x1B085FC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x600056A")]
	[Address(RVA = "0x1B0860C", Offset = "0x1B0860C", VA = "0x1B0860C", Slot = "22")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600056B")]
	[Address(RVA = "0x1B086CC", Offset = "0x1B086CC", VA = "0x1B086CC", Slot = "13")]
	public override void Spawned()
	{
	}

	[Token(Token = "0x600056C")]
	[Address(RVA = "0x1B08628", Offset = "0x1B08628", VA = "0x1B08628")]
	private void CacheController()
	{
	}

	[Token(Token = "0x600056D")]
	[Address(RVA = "0x1B08720", Offset = "0x1B08720", VA = "0x1B08720", Slot = "29")]
	protected override void CopyFromBufferToEngine()
	{
	}

	[Token(Token = "0x600056E")]
	[Address(RVA = "0x1B08810", Offset = "0x1B08810", VA = "0x1B08810", Slot = "52")]
	public virtual void Jump(bool ignoreGrounded = false, [Optional] float? overrideImpulse)
	{
	}

	[Token(Token = "0x600056F")]
	[Address(RVA = "0x1B088AC", Offset = "0x1B088AC", VA = "0x1B088AC", Slot = "53")]
	public virtual void Move(Vector3 direction)
	{
	}

	[Token(Token = "0x6000570")]
	[Address(RVA = "0x1B08C74", Offset = "0x1B08C74", VA = "0x1B08C74")]
	public NetworkCharacterControllerPrototype()
	{
	}

	[Token(Token = "0x6000571")]
	[Address(RVA = "0x1B08C9C", Offset = "0x1B08C9C", VA = "0x1B08C9C", Slot = "10")]
	public override void CopyBackingFieldsToState(bool P_0)
	{
	}

	[Token(Token = "0x6000572")]
	[Address(RVA = "0x1B08CD4", Offset = "0x1B08CD4", VA = "0x1B08CD4", Slot = "11")]
	public override void CopyStateToBackingFields()
	{
	}
}
[Token(Token = "0x2000109")]
[DisallowMultipleComponent]
[AddComponentMenu("Fusion/Prototyping/Network Debug Start")]
[ScriptHelp(BackColor = EditorHeaderBackColor.Steel)]
public class NetworkDebugStart : Fusion.Behaviour
{
	[Token(Token = "0x200010A")]
	public enum StartModes
	{
		[Token(Token = "0x40005EA")]
		UserInterface,
		[Token(Token = "0x40005EB")]
		Automatic,
		[Token(Token = "0x40005EC")]
		Manual
	}

	[Token(Token = "0x200010B")]
	public enum Stage
	{
		[Token(Token = "0x40005EE")]
		Disconnected,
		[Token(Token = "0x40005EF")]
		StartingUp,
		[Token(Token = "0x40005F0")]
		UnloadOriginalScene,
		[Token(Token = "0x40005F1")]
		ConnectingServer,
		[Token(Token = "0x40005F2")]
		ConnectingClients,
		[Token(Token = "0x40005F3")]
		AllConnected
	}

	[Token(Token = "0x200010C")]
	[CompilerGenerated]
	private sealed class <>c__DisplayClass54_0
	{
		[Token(Token = "0x40005F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public NetworkDebugStart <>4__this;

		[Token(Token = "0x40005F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int clientCount;

		[Token(Token = "0x40005F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public GameMode serverMode;

		[Token(Token = "0x40005F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SceneRef sceneRef;

		[Token(Token = "0x6000597")]
		[Address(RVA = "0x1B0B268", Offset = "0x1B0B268", VA = "0x1B0B268")]
		public <>c__DisplayClass54_0()
		{
		}

		[Token(Token = "0x6000598")]
		[Address(RVA = "0x1B0B270", Offset = "0x1B0B270", VA = "0x1B0B270")]
		internal void <StartWithClients>b__0(NetworkRunner runner)
		{
		}
	}

	[Token(Token = "0x200010D")]
	[CompilerGenerated]
	private sealed class <StartWithClients>d__54 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NetworkDebugStart <>4__this;

		[Token(Token = "0x40005FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int clientCount;

		[Token(Token = "0x40005FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public GameMode serverMode;

		[Token(Token = "0x40005FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SceneRef sceneRef;

		[Token(Token = "0x40005FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private <>c__DisplayClass54_0 <>8__1;

		[Token(Token = "0x40005FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool <includesServerStart>5__2;

		[Token(Token = "0x4000600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Task <serverTask>5__3;

		[Token(Token = "0x170000B5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600059C")]
			[Address(RVA = "0x1B0BB20", Offset = "0x1B0BB20", VA = "0x1B0BB20", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600059E")]
			[Address(RVA = "0x1B0BB68", Offset = "0x1B0BB68", VA = "0x1B0BB68", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000599")]
		[Address(RVA = "0x1B0B2A8", Offset = "0x1B0B2A8", VA = "0x1B0B2A8")]
		[DebuggerHidden]
		public <StartWithClients>d__54(int <>1__state)
		{
		}

		[Token(Token = "0x600059A")]
		[Address(RVA = "0x1B0B2D0", Offset = "0x1B0B2D0", VA = "0x1B0B2D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600059B")]
		[Address(RVA = "0x1B0B2D4", Offset = "0x1B0B2D4", VA = "0x1B0B2D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600059D")]
		[Address(RVA = "0x1B0BB28", Offset = "0x1B0BB28", VA = "0x1B0BB28", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200010E")]
	[CompilerGenerated]
	private sealed class <StartClients>d__58 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NetworkDebugStart <>4__this;

		[Token(Token = "0x4000604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameMode serverMode;

		[Token(Token = "0x4000605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public SceneRef sceneRef;

		[Token(Token = "0x4000606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int clientCount;

		[Token(Token = "0x4000607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<Task> <clientTasks>5__2;

		[Token(Token = "0x4000608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool <done>5__3;

		[Token(Token = "0x170000B7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005A2")]
			[Address(RVA = "0x1B0BF10", Offset = "0x1B0BF10", VA = "0x1B0BF10", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005A4")]
			[Address(RVA = "0x1B0BF58", Offset = "0x1B0BF58", VA = "0x1B0BF58", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600059F")]
		[Address(RVA = "0x1B0BB70", Offset = "0x1B0BB70", VA = "0x1B0BB70")]
		[DebuggerHidden]
		public <StartClients>d__58(int <>1__state)
		{
		}

		[Token(Token = "0x60005A0")]
		[Address(RVA = "0x1B0BB98", Offset = "0x1B0BB98", VA = "0x1B0BB98", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005A1")]
		[Address(RVA = "0x1B0BB9C", Offset = "0x1B0BB9C", VA = "0x1B0BB9C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005A3")]
		[Address(RVA = "0x1B0BF18", Offset = "0x1B0BF18", VA = "0x1B0BF18", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[InlineHelp]
	[WarnIf("RunnerPrefab", 0L, "No RunnerPrefab supplied. Will search for a NetworkRunner in the scene at startup.", 2, DoIfCompareOperator.Equal)]
	public NetworkRunner RunnerPrefab;

	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[InlineHelp]
	[WarnIf("StartMode", 2L, "Start network by calling the methods StartHost(), StartServer(), StartClient(), StartHostPlusClients(), or StartServerPlusClients()", 2, DoIfCompareOperator.Equal)]
	public StartModes StartMode;

	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[DrawIf("StartMode", 1L, DrawIfHideType.Hide, DoIfCompareOperator.Equal)]
	[InlineHelp]
	[FormerlySerializedAs("Server")]
	public GameMode AutoStartAs;

	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[InlineHelp]
	[DrawIf("StartMode", 0L, DrawIfHideType.Hide, DoIfCompareOperator.Equal)]
	public bool AutoHideGUI;

	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[InlineHelp]
	[DrawIf("ShowAutoClients", true, DrawIfHideType.Hide, DoIfCompareOperator.Equal)]
	public int AutoClients;

	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[InlineHelp]
	public ushort ServerPort;

	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[InlineHelp]
	public string DefaultRoomName;

	[Token(Token = "0x40005E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[InlineHelp]
	public bool AlwaysShowStats;

	[NonSerialized]
	[Token(Token = "0x40005E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NetworkRunner _server;

	[Token(Token = "0x40005E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[InlineHelp]
	[ScenePath]
	[MultiPropertyDrawersFix]
	public string InitialScenePath;

	[Token(Token = "0x40005E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string _initialScenePath;

	[Token(Token = "0x40005E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[InlineHelp]
	[SerializeField]
	[EditorDisabled(false)]
	[MultiPropertyDrawersFix]
	protected Stage _currentStage;

	[Token(Token = "0x170000AC")]
	public Stage CurrentStage
	{
		[Token(Token = "0x6000573")]
		[Address(RVA = "0x1B08D04", Offset = "0x1B08D04", VA = "0x1B08D04")]
		get
		{
			return default(Stage);
		}
		[Token(Token = "0x6000574")]
		[Address(RVA = "0x1B08D0C", Offset = "0x1B08D0C", VA = "0x1B08D0C")]
		internal set
		{
		}
	}

	[Token(Token = "0x170000AD")]
	public int LastCreatedClientIndex
	{
		[Token(Token = "0x6000575")]
		[Address(RVA = "0x1B08D14", Offset = "0x1B08D14", VA = "0x1B08D14")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000576")]
		[Address(RVA = "0x1B08D1C", Offset = "0x1B08D1C", VA = "0x1B08D1C")]
		[CompilerGenerated]
		internal set
		{
		}
	}

	[Token(Token = "0x170000AE")]
	public GameMode CurrentServerMode
	{
		[Token(Token = "0x6000577")]
		[Address(RVA = "0x1B08D24", Offset = "0x1B08D24", VA = "0x1B08D24")]
		[CompilerGenerated]
		get
		{
			return default(GameMode);
		}
		[Token(Token = "0x6000578")]
		[Address(RVA = "0x1B08D2C", Offset = "0x1B08D2C", VA = "0x1B08D2C")]
		[CompilerGenerated]
		internal set
		{
		}
	}

	[Token(Token = "0x170000AF")]
	protected bool CanAddClients
	{
		[Token(Token = "0x6000579")]
		[Address(RVA = "0x1B08D34", Offset = "0x1B08D34", VA = "0x1B08D34")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000B0")]
	protected bool CanAddSharedClients
	{
		[Token(Token = "0x600057A")]
		[Address(RVA = "0x1B08D60", Offset = "0x1B08D60", VA = "0x1B08D60")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000B1")]
	protected bool IsShutdown
	{
		[Token(Token = "0x600057B")]
		[Address(RVA = "0x1B08D84", Offset = "0x1B08D84", VA = "0x1B08D84")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000B2")]
	protected bool IsShutdownAndMultiPeer
	{
		[Token(Token = "0x600057C")]
		[Address(RVA = "0x1B08D94", Offset = "0x1B08D94", VA = "0x1B08D94")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000B3")]
	protected bool UsingMultiPeerMode
	{
		[Token(Token = "0x600057D")]
		[Address(RVA = "0x1B08DCC", Offset = "0x1B08DCC", VA = "0x1B08DCC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000B4")]
	protected bool ShowAutoClients
	{
		[Token(Token = "0x600057E")]
		[Address(RVA = "0x1B08DF4", Offset = "0x1B08DF4", VA = "0x1B08DF4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600057F")]
	[Address(RVA = "0x1B08E40", Offset = "0x1B08E40", VA = "0x1B08E40", Slot = "4")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000580")]
	[Address(RVA = "0x1B091BC", Offset = "0x1B091BC", VA = "0x1B091BC")]
	protected bool TryGetSceneRef(out SceneRef sceneRef)
	{
		return default(bool);
	}

	[Token(Token = "0x6000581")]
	[Address(RVA = "0x1B09328", Offset = "0x1B09328", VA = "0x1B09328", Slot = "5")]
	[BehaviourButtonAction("StartSinglePlayer", true, false, "IsShutdown")]
	public virtual void StartSinglePlayer()
	{
	}

	[Token(Token = "0x6000582")]
	[Address(RVA = "0x1B09374", Offset = "0x1B09374", VA = "0x1B09374", Slot = "6")]
	[BehaviourButtonAction("StartServer", true, false, "IsShutdown")]
	public virtual void StartServer()
	{
	}

	[Token(Token = "0x6000583")]
	[Address(RVA = "0x1B093C0", Offset = "0x1B093C0", VA = "0x1B093C0", Slot = "7")]
	[BehaviourButtonAction("StartHost", true, false, "IsShutdown")]
	public virtual void StartHost()
	{
	}

	[Token(Token = "0x6000584")]
	[Address(RVA = "0x1B0940C", Offset = "0x1B0940C", VA = "0x1B0940C", Slot = "8")]
	[BehaviourButtonAction("Start Client", true, false, "IsShutdown")]
	public virtual void StartClient()
	{
	}

	[Token(Token = "0x6000585")]
	[Address(RVA = "0x1B09438", Offset = "0x1B09438", VA = "0x1B09438", Slot = "9")]
	[BehaviourButtonAction("Start Shared Client", true, false, "IsShutdown")]
	public virtual void StartSharedClient()
	{
	}

	[Token(Token = "0x6000586")]
	[Address(RVA = "0x1B09484", Offset = "0x1B09484", VA = "0x1B09484", Slot = "10")]
	[BehaviourButtonAction("Start Auto Host Or Client", true, false, "IsShutdown")]
	public virtual void StartAutoClient()
	{
	}

	[Token(Token = "0x6000587")]
	[Address(RVA = "0x1B094D0", Offset = "0x1B094D0", VA = "0x1B094D0", Slot = "11")]
	[BehaviourButtonAction("Start Server Plus Clients", true, false, "IsShutdownAndMultiPeer")]
	public virtual void StartServerPlusClients()
	{
	}

	[Token(Token = "0x6000588")]
	[Address(RVA = "0x1B094E0", Offset = "0x1B094E0", VA = "0x1B094E0")]
	[BehaviourButtonAction("Start Host Plus Clients", true, false, "IsShutdownAndMultiPeer")]
	public void StartHostPlusClients()
	{
	}

	[Token(Token = "0x6000589")]
	[Address(RVA = "0x1B095B8", Offset = "0x1B095B8", VA = "0x1B095B8")]
	[BehaviourButtonAction("Shutdown", true, false, "CurrentStage")]
	public void Shutdown()
	{
	}

	[Token(Token = "0x600058A")]
	[Address(RVA = "0x1B0989C", Offset = "0x1B0989C", VA = "0x1B0989C", Slot = "12")]
	public virtual void StartServerPlusClients(int clientCount)
	{
	}

	[Token(Token = "0x600058B")]
	[Address(RVA = "0x1B094E8", Offset = "0x1B094E8", VA = "0x1B094E8")]
	public void StartHostPlusClients(int clientCount)
	{
	}

	[Token(Token = "0x600058C")]
	[Address(RVA = "0x1B0996C", Offset = "0x1B0996C", VA = "0x1B0996C")]
	public void StartMultipleClients(int clientCount)
	{
	}

	[Token(Token = "0x600058D")]
	[Address(RVA = "0x1B09A3C", Offset = "0x1B09A3C", VA = "0x1B09A3C")]
	public void StartMultipleSharedClients(int clientCount)
	{
	}

	[Token(Token = "0x600058E")]
	[Address(RVA = "0x1B09B0C", Offset = "0x1B09B0C", VA = "0x1B09B0C")]
	public void StartMultipleAutoClients(int clientCount)
	{
	}

	[Token(Token = "0x600058F")]
	[Address(RVA = "0x1B095BC", Offset = "0x1B095BC", VA = "0x1B095BC")]
	public void ShutdownAll()
	{
	}

	[Token(Token = "0x6000590")]
	[Address(RVA = "0x1B09290", Offset = "0x1B09290", VA = "0x1B09290")]
	[IteratorStateMachine(typeof(<StartWithClients>d__54))]
	protected IEnumerator StartWithClients(GameMode serverMode, SceneRef sceneRef, int clientCount)
	{
		return null;
	}

	[Token(Token = "0x6000591")]
	[Address(RVA = "0x1B09BDC", Offset = "0x1B09BDC", VA = "0x1B09BDC")]
	[BehaviourButtonAction("Add Additional Client", null, "CanAddClients")]
	public void AddClient()
	{
	}

	[Token(Token = "0x6000592")]
	[Address(RVA = "0x1B09E6C", Offset = "0x1B09E6C", VA = "0x1B09E6C")]
	[BehaviourButtonAction("Add Additional Shared Client", null, "CanAddSharedClients")]
	public void AddSharedClient()
	{
	}

	[Token(Token = "0x6000593")]
	[Address(RVA = "0x1B09C14", Offset = "0x1B09C14", VA = "0x1B09C14")]
	public Task AddClient(GameMode serverMode, SceneRef sceneRef)
	{
		return null;
	}

	[Token(Token = "0x6000594")]
	[Address(RVA = "0x1B09EA4", Offset = "0x1B09EA4", VA = "0x1B09EA4")]
	[IteratorStateMachine(typeof(<StartClients>d__58))]
	protected IEnumerator StartClients(int clientCount, GameMode serverMode, [Optional] SceneRef sceneRef)
	{
		return null;
	}

	[Token(Token = "0x6000595")]
	[Address(RVA = "0x1B09F3C", Offset = "0x1B09F3C", VA = "0x1B09F3C", Slot = "13")]
	protected virtual Task InitializeNetworkRunner(NetworkRunner runner, GameMode gameMode, NetAddress address, SceneRef scene, Action<NetworkRunner> initialized)
	{
		return null;
	}

	[Token(Token = "0x6000596")]
	[Address(RVA = "0x1B0A1F4", Offset = "0x1B0A1F4", VA = "0x1B0A1F4")]
	public NetworkDebugStart()
	{
	}
}
[Token(Token = "0x200010F")]
[RequireComponent(typeof(NetworkDebugStart))]
[AddComponentMenu("Fusion/Network Debug Start GUI")]
[ScriptHelp(BackColor = EditorHeaderBackColor.Steel)]
public class NetworkDebugStartGUI : Fusion.Behaviour
{
	[Token(Token = "0x4000609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[InlineHelp]
	public bool EnableHotkeys;

	[Token(Token = "0x400060A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[InlineHelp]
	public GUISkin BaseSkin;

	[Token(Token = "0x400060B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private NetworkDebugStart _networkDebugStart;

	[Token(Token = "0x400060C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string _clientCount;

	[Token(Token = "0x400060D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _isMultiplePeerMode;

	[Token(Token = "0x400060E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Dictionary<NetworkDebugStart.Stage, string> _nicifiedStageNames;

	[Token(Token = "0x60005A5")]
	[Address(RVA = "0x1B0BF60", Offset = "0x1B0BF60", VA = "0x1B0BF60", Slot = "4")]
	protected virtual void OnValidate()
	{
	}

	[Token(Token = "0x60005A6")]
	[Address(RVA = "0x1B0BF64", Offset = "0x1B0BF64", VA = "0x1B0BF64")]
	protected void ValidateClientCount()
	{
	}

	[Token(Token = "0x60005A7")]
	[Address(RVA = "0x1B0C02C", Offset = "0x1B0C02C", VA = "0x1B0C02C")]
	protected int GetClientCount()
	{
		return default(int);
	}

	[Token(Token = "0x60005A8")]
	[Address(RVA = "0x1B0C104", Offset = "0x1B0C104", VA = "0x1B0C104", Slot = "5")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x60005A9")]
	[Address(RVA = "0x1B0C330", Offset = "0x1B0C330", VA = "0x1B0C330", Slot = "6")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x60005AA")]
	[Address(RVA = "0x1B0C1C8", Offset = "0x1B0C1C8", VA = "0x1B0C1C8")]
	protected NetworkDebugStart EnsureNetworkDebugStartExists()
	{
		return null;
	}

	[Token(Token = "0x60005AB")]
	[Address(RVA = "0x1B0C360", Offset = "0x1B0C360", VA = "0x1B0C360")]
	private void Update()
	{
	}

	[Token(Token = "0x60005AC")]
	[Address(RVA = "0x1B0C920", Offset = "0x1B0C920", VA = "0x1B0C920", Slot = "7")]
	protected virtual void OnGUI()
	{
	}

	[Token(Token = "0x60005AD")]
	[Address(RVA = "0x1B0C4F8", Offset = "0x1B0C4F8", VA = "0x1B0C4F8")]
	private void StartHostWithClients(NetworkDebugStart nds)
	{
	}

	[Token(Token = "0x60005AE")]
	[Address(RVA = "0x1B0C5F0", Offset = "0x1B0C5F0", VA = "0x1B0C5F0")]
	private void StartServerWithClients(NetworkDebugStart nds)
	{
	}

	[Token(Token = "0x60005AF")]
	[Address(RVA = "0x1B0C6EC", Offset = "0x1B0C6EC", VA = "0x1B0C6EC")]
	private void StartMultipleClients(NetworkDebugStart nds)
	{
	}

	[Token(Token = "0x60005B0")]
	[Address(RVA = "0x1B0C7E4", Offset = "0x1B0C7E4", VA = "0x1B0C7E4")]
	private void StartMultipleAutoClients(NetworkDebugStart nds)
	{
	}

	[Token(Token = "0x60005B1")]
	[Address(RVA = "0x1B0C828", Offset = "0x1B0C828", VA = "0x1B0C828")]
	private void StartMultipleSharedClients(NetworkDebugStart nds)
	{
	}

	[Token(Token = "0x60005B2")]
	public static Dictionary<T, string> ConvertEnumToNicifiedNameLookup<T>([Optional] string prefix, [Optional] Dictionary<T, string> nonalloc) where T : Enum
	{
		return null;
	}

	[Token(Token = "0x60005B3")]
	[Address(RVA = "0x1B0D85C", Offset = "0x1B0D85C", VA = "0x1B0D85C")]
	public NetworkDebugStartGUI()
	{
	}
}
[Token(Token = "0x2000110")]
[SimulationBehaviour(Stages = SimulationStages.Forward, Modes = (SimulationModes.Server | SimulationModes.Host))]
public class PlayerSpawnerPrototype : SpawnerPrototype<PlayerSpawnPointPrototype>, IPlayerJoined, IPlayerLeft, ISceneLoadDone
{
	[Token(Token = "0x60005B4")]
	[Address(RVA = "0x1B0D864", Offset = "0x1B0D864", VA = "0x1B0D864", Slot = "12")]
	protected override void RegisterPlayerAndObject(PlayerRef player, NetworkObject playerObject)
	{
	}

	[Token(Token = "0x60005B5")]
	[Address(RVA = "0x1B0D8E4", Offset = "0x1B0D8E4", VA = "0x1B0D8E4")]
	public PlayerSpawnerPrototype()
	{
	}
}
[Token(Token = "0x2000111")]
public interface ISpawnPointManagerPrototype<T> where T : Component, ISpawnPointPrototype
{
	[Token(Token = "0x60005B6")]
	void CollectSpawnPoints(NetworkRunner runner);

	[Token(Token = "0x60005B7")]
	Transform GetNextSpawnPoint(NetworkRunner runner, PlayerRef player, bool skipIfBlocked = true);
}
[Token(Token = "0x2000112")]
public interface ISpawnPointPrototype
{
}
[Token(Token = "0x2000113")]
public class PlayerSpawnPointManagerPrototype : SpawnPointManagerPrototype<PlayerSpawnPointPrototype>
{
	[Token(Token = "0x60005B8")]
	[Address(RVA = "0x1B0D92C", Offset = "0x1B0D92C", VA = "0x1B0D92C")]
	public PlayerSpawnPointManagerPrototype()
	{
	}
}
[Token(Token = "0x2000114")]
[ScriptHelp(BackColor = EditorHeaderBackColor.Steel)]
public class PlayerSpawnPointPrototype : SimulationBehaviour, ISpawnPointPrototype
{
	[Token(Token = "0x60005B9")]
	[Address(RVA = "0x1B0D974", Offset = "0x1B0D974", VA = "0x1B0D974")]
	public PlayerSpawnPointPrototype()
	{
	}
}
[Token(Token = "0x2000115")]
[ScriptHelp(BackColor = EditorHeaderBackColor.Steel)]
public class SpawnerPrototype<T> : SimulationBehaviour, IPlayerJoined, IPlayerLeft, ISpawned, ISceneLoadDone where T : Component, ISpawnPointPrototype
{
	[Token(Token = "0x2000116")]
	public enum SpawnMethods
	{
		[Token(Token = "0x4000615")]
		AutoOnNetworkStart,
		[Token(Token = "0x4000616")]
		ByScriptOnly
	}

	[Token(Token = "0x2000117")]
	public enum AuthorityOptions
	{
		[Token(Token = "0x4000618")]
		Auto,
		[Token(Token = "0x4000619")]
		Server,
		[Token(Token = "0x400061A")]
		Player
	}

	[Token(Token = "0x400060F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected Dictionary<PlayerRef, List<NetworkObject>> _spawnedLookup;

	[Token(Token = "0x4000610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[InlineHelp]
	public NetworkObject PlayerPrefab;

	[Token(Token = "0x4000611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[InlineHelp]
	public SpawnMethods SpawnMethod;

	[Token(Token = "0x4000612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[MultiPropertyDrawersFix]
	[InlineHelp]
	[DrawIf("_AllowClientObjects", true, DrawIfHideType.Hide, DoIfCompareOperator.Equal)]
	public AuthorityOptions StateAuthority;

	[Token(Token = "0x4000613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected ISpawnPointManagerPrototype<T> spawnManager;

	[Token(Token = "0x170000B9")]
	protected bool _AllowClientObjects
	{
		[Token(Token = "0x60005BA")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60005BB")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x60005BC")]
	public void Spawned()
	{
	}

	[Token(Token = "0x60005BD")]
	public void SceneLoadDone()
	{
	}

	[Token(Token = "0x60005BE")]
	public void PlayerJoined(PlayerRef player)
	{
	}

	[Token(Token = "0x60005BF")]
	public void PlayerLeft(PlayerRef player)
	{
	}

	[Token(Token = "0x60005C0")]
	private void PlayerJoined(NetworkRunner runner, PlayerRef player)
	{
	}

	[Token(Token = "0x60005C1")]
	private void PlayerLeft(NetworkRunner runner, PlayerRef player)
	{
	}

	[Token(Token = "0x60005C2")]
	public NetworkObject TrySpawn(NetworkRunner runner, PlayerRef player)
	{
		return null;
	}

	[Token(Token = "0x60005C3")]
	[BehaviourButtonAction("Spawn For All Players On Server", true, false, null)]
	public void TrySpawnAll()
	{
	}

	[Token(Token = "0x60005C4")]
	protected virtual void RegisterPlayerAndObject(PlayerRef player, NetworkObject playerObject)
	{
	}

	[Token(Token = "0x60005C5")]
	protected void DespawnPlayersObjects(NetworkRunner runner, PlayerRef player)
	{
	}

	[Token(Token = "0x60005C6")]
	protected void UnregisterPlayer(PlayerRef player)
	{
	}

	[Token(Token = "0x60005C7")]
	public SpawnerPrototype()
	{
	}
}
[Token(Token = "0x2000118")]
[ScriptHelp(BackColor = EditorHeaderBackColor.Steel)]
public abstract class SpawnPointManagerPrototype<T> : Fusion.Behaviour, ISpawnPointManagerPrototype<T> where T : Component, ISpawnPointPrototype
{
	[Token(Token = "0x2000119")]
	public enum SpawnSequence
	{
		[Token(Token = "0x4000623")]
		PlayerId,
		[Token(Token = "0x4000624")]
		RoundRobin,
		[Token(Token = "0x4000625")]
		Random
	}

	[Token(Token = "0x400061B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[InlineHelp]
	public SpawnSequence Sequence;

	[Token(Token = "0x400061C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[InlineHelp]
	public LayerMask BlockingLayers;

	[Token(Token = "0x400061D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[InlineHelp]
	public float BlockedCheckRadius;

	[NonSerialized]
	[Token(Token = "0x400061E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	internal List<Component> _spawnPoints;

	[NonSerialized]
	[Token(Token = "0x400061F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int LastSpawnIndex;

	[Token(Token = "0x4000620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private NetworkRNG rng;

	[Token(Token = "0x4000621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static Collider[] blocked3D;

	[Token(Token = "0x60005C8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005C9")]
	public void CollectSpawnPoints(NetworkRunner runner)
	{
	}

	[Token(Token = "0x60005CA")]
	public virtual Transform GetNextSpawnPoint(NetworkRunner runner, PlayerRef player, bool skipIfBlocked = true)
	{
		return null;
	}

	[Token(Token = "0x60005CB")]
	public virtual Transform AllSpawnPointsBlockedFallback()
	{
		return null;
	}

	[Token(Token = "0x60005CC")]
	public virtual (int, Component) GetNextUnblocked(int failedIndex)
	{
		return default((int, Component));
	}

	[Token(Token = "0x60005CD")]
	public virtual bool IsBlocked(Component spawnPoint)
	{
		return default(bool);
	}

	[Token(Token = "0x60005CE")]
	protected SpawnPointManagerPrototype()
	{
	}
}
[Token(Token = "0x200011A")]
[DisallowMultipleComponent]
[AddComponentMenu("Fusion/Prototyping/Toggle Runner Provide Input")]
[ScriptHelp(BackColor = EditorHeaderBackColor.Steel)]
public class ToggleRunnerProvideInput : Fusion.Behaviour
{
	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ToggleRunnerProvideInput _instance;

	[Token(Token = "0x60005CF")]
	[Address(RVA = "0x1B0D97C", Offset = "0x1B0D97C", VA = "0x1B0D97C")]
	public void Awake()
	{
	}

	[Token(Token = "0x60005D0")]
	[Address(RVA = "0x1B0DAC0", Offset = "0x1B0DAC0", VA = "0x1B0DAC0")]
	public void Update()
	{
	}

	[Token(Token = "0x60005D1")]
	[Address(RVA = "0x1B0DBF0", Offset = "0x1B0DBF0", VA = "0x1B0DBF0")]
	private void ToggleAll(int runnerIndex)
	{
	}

	[Token(Token = "0x60005D2")]
	[Address(RVA = "0x1B0DD3C", Offset = "0x1B0DD3C", VA = "0x1B0DD3C")]
	public ToggleRunnerProvideInput()
	{
	}
}
[Token(Token = "0x200011B")]
[DisallowMultipleComponent]
[AddComponentMenu("Fusion/Prototyping/Toggle Runner Visibility")]
[ScriptHelp(BackColor = EditorHeaderBackColor.Steel)]
public class ToggleRunnerVisibility : Fusion.Behaviour
{
	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ToggleRunnerVisibility _instance;

	[Token(Token = "0x60005D3")]
	[Address(RVA = "0x1B0DD44", Offset = "0x1B0DD44", VA = "0x1B0DD44")]
	public void Awake()
	{
	}

	[Token(Token = "0x60005D4")]
	[Address(RVA = "0x1B0DE88", Offset = "0x1B0DE88", VA = "0x1B0DE88")]
	public void Update()
	{
	}

	[Token(Token = "0x60005D5")]
	[Address(RVA = "0x1B0DFC8", Offset = "0x1B0DFC8", VA = "0x1B0DFC8")]
	private void ToggleAll(int runnerIndex)
	{
	}

	[Token(Token = "0x60005D6")]
	[Address(RVA = "0x1B0E114", Offset = "0x1B0E114", VA = "0x1B0E114")]
	public ToggleRunnerVisibility()
	{
	}
}
[Token(Token = "0x200011C")]
public static class FusionScalableIMGUI
{
	[Token(Token = "0x4000628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GUISkin _scalableSkin;

	[Token(Token = "0x60005D7")]
	[Address(RVA = "0x1B0E11C", Offset = "0x1B0E11C", VA = "0x1B0E11C")]
	private static void InitializedGUIStyles(GUISkin baseSkin)
	{
	}

	[Token(Token = "0x60005D8")]
	[Address(RVA = "0x1B0D768", Offset = "0x1B0D768", VA = "0x1B0D768")]
	public static GUISkin GetScaledSkin(GUISkin baseSkin, out float height, out float width, out int padding, out int margin, out float boxLeft)
	{
		return null;
	}

	[Token(Token = "0x60005D9")]
	[Address(RVA = "0x1B0E550", Offset = "0x1B0E550", VA = "0x1B0E550")]
	public static (float, float, int, int, float) ScaleGuiSkinToScreenHeight()
	{
		return default((float, float, int, int, float));
	}
}
[Token(Token = "0x200011D")]
[DisallowMultipleComponent]
public class SteamManager : MonoBehaviour
{
	[Token(Token = "0x170000BA")]
	public static bool Initialized
	{
		[Token(Token = "0x60005DA")]
		[Address(RVA = "0x1B0E92C", Offset = "0x1B0E92C", VA = "0x1B0E92C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60005DB")]
	[Address(RVA = "0x1B0E934", Offset = "0x1B0E934", VA = "0x1B0E934")]
	public SteamManager()
	{
	}
}
[Token(Token = "0x200011E")]
public class CameraMovement : MonoBehaviour
{
	[Token(Token = "0x4000629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float xAxisValue;

	[Token(Token = "0x400062A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float zAxisValue;

	[Token(Token = "0x400062B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float yAxisValue;

	[Token(Token = "0x400062C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float mouseSensitivity;

	[Token(Token = "0x400062D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float moveSensitivity;

	[Token(Token = "0x400062E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float upDownSensitivity;

	[Token(Token = "0x400062F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float clampAngle;

	[Token(Token = "0x4000630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float rotY;

	[Token(Token = "0x4000631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float rotX;

	[Token(Token = "0x4000632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float sign;

	[Token(Token = "0x4000633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float force;

	[Token(Token = "0x4000634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int x;

	[Token(Token = "0x4000635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int y;

	[Token(Token = "0x4000636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Camera cam;

	[Token(Token = "0x4000637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Ray ray;

	[Token(Token = "0x4000638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private RaycastHit hit;

	[Token(Token = "0x60005DC")]
	[Address(RVA = "0x1B0E93C", Offset = "0x1B0E93C", VA = "0x1B0E93C")]
	private void Start()
	{
	}

	[Token(Token = "0x60005DD")]
	[Address(RVA = "0x1B0EA14", Offset = "0x1B0EA14", VA = "0x1B0EA14")]
	private void Update()
	{
	}

	[Token(Token = "0x60005DE")]
	[Address(RVA = "0x1B0EBD0", Offset = "0x1B0EBD0", VA = "0x1B0EBD0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60005DF")]
	[Address(RVA = "0x1B0EDFC", Offset = "0x1B0EDFC", VA = "0x1B0EDFC")]
	public CameraMovement()
	{
	}
}
[Token(Token = "0x200011F")]
public class TGUtilsAnimatedTexture : MonoBehaviour
{
	[Token(Token = "0x2000120")]
	public enum TMap
	{
		[Token(Token = "0x4000645")]
		Main,
		[Token(Token = "0x4000646")]
		Emission
	}

	[Token(Token = "0x2000121")]
	public enum TOrder
	{
		[Token(Token = "0x4000648")]
		Order,
		[Token(Token = "0x4000649")]
		PingPong,
		[Token(Token = "0x400064A")]
		Random
	}

	[Serializable]
	[Token(Token = "0x2000122")]
	public class TAnimation
	{
		[Token(Token = "0x400064B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Texture AnimTexture;

		[Token(Token = "0x400064C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TOrder FramesOrder;

		[Token(Token = "0x400064D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int PlayCount;

		[Token(Token = "0x400064E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int XTiles;

		[Token(Token = "0x400064F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int YTiles;

		[Token(Token = "0x4000650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float FPS;

		[Token(Token = "0x60005E7")]
		[Address(RVA = "0x1B0EF04", Offset = "0x1B0EF04", VA = "0x1B0EF04")]
		public TAnimation()
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x2000123")]
	[CompilerGenerated]
	private struct <AnimationPlay>d__19 : IAsyncStateMachine
	{
		[Token(Token = "0x4000651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x4000653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TGUtilsAnimatedTexture <>4__this;

		[Token(Token = "0x4000654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CancellationToken <token>5__2;

		[Token(Token = "0x4000655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <stepx>5__3;

		[Token(Token = "0x4000656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float <stepy>5__4;

		[Token(Token = "0x4000657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string <mapname>5__5;

		[Token(Token = "0x4000658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool <pong>5__6;

		[Token(Token = "0x4000659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector4 <scaleOffset>5__7;

		[Token(Token = "0x400065A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int <i>5__8;

		[Token(Token = "0x400065B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int <y>5__9;

		[Token(Token = "0x400065C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private int <x>5__10;

		[Token(Token = "0x400065D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private UniTask.Awaiter <>u__1;

		[Token(Token = "0x60005E8")]
		[Address(RVA = "0x1B0F33C", Offset = "0x1B0F33C", VA = "0x1B0F33C", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x60005E9")]
		[Address(RVA = "0x1B0FC0C", Offset = "0x1B0FC0C", VA = "0x1B0FC0C", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x4000639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool PlayOnStart;

	[Token(Token = "0x400063A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool Loop;

	[Token(Token = "0x400063B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public TMap Map;

	[Token(Token = "0x400063C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool TirgamesShader;

	[Token(Token = "0x400063D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public TOrder AnimationsOrder;

	[Token(Token = "0x400063E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<TAnimation> Animations;

	[Token(Token = "0x400063F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private TAnimation anim;

	[Token(Token = "0x4000640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int animID;

	[Token(Token = "0x4000641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool pong;

	[Token(Token = "0x4000642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material mat;

	[Token(Token = "0x4000643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Texture lastText;

	[Token(Token = "0x60005E0")]
	[Address(RVA = "0x1B0EE18", Offset = "0x1B0EE18", VA = "0x1B0EE18")]
	private void Reset()
	{
	}

	[Token(Token = "0x60005E1")]
	[Address(RVA = "0x1B0EF30", Offset = "0x1B0EF30", VA = "0x1B0EF30")]
	private void Start()
	{
	}

	[Token(Token = "0x60005E2")]
	[Address(RVA = "0x1B0EF40", Offset = "0x1B0EF40", VA = "0x1B0EF40")]
	public void AnimationsStart()
	{
	}

	[Token(Token = "0x60005E3")]
	[Address(RVA = "0x1B0F04C", Offset = "0x1B0F04C", VA = "0x1B0F04C")]
	public void AnimationsNext()
	{
	}

	[Token(Token = "0x60005E4")]
	[Address(RVA = "0x1B0F2A0", Offset = "0x1B0F2A0", VA = "0x1B0F2A0")]
	public void AnimationsStop()
	{
	}

	[Token(Token = "0x60005E5")]
	[Address(RVA = "0x1B0F1E0", Offset = "0x1B0F1E0", VA = "0x1B0F1E0")]
	[AsyncStateMachine(typeof(<AnimationPlay>d__19))]
	private void AnimationPlay()
	{
	}

	[Token(Token = "0x60005E6")]
	[Address(RVA = "0x1B0F2A4", Offset = "0x1B0F2A4", VA = "0x1B0F2A4")]
	public TGUtilsAnimatedTexture()
	{
	}
}
[Token(Token = "0x2000124")]
public class TGUtilsAnimatorPeriodParam : MonoBehaviour
{
	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float PeriodMin;

	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float PeriodMax;

	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int IndexMin;

	[Token(Token = "0x4000661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int IndexMax;

	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool UseIndex;

	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string ParamName;

	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool Loop;

	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Animator anim;

	[Token(Token = "0x60005EA")]
	[Address(RVA = "0x1B0FC18", Offset = "0x1B0FC18", VA = "0x1B0FC18")]
	private void Start()
	{
	}

	[Token(Token = "0x60005EB")]
	[Address(RVA = "0x1B0FCA8", Offset = "0x1B0FCA8", VA = "0x1B0FCA8")]
	private void Update()
	{
	}

	[Token(Token = "0x60005EC")]
	[Address(RVA = "0x1B0FCAC", Offset = "0x1B0FCAC", VA = "0x1B0FCAC")]
	private void ChangeParam()
	{
	}

	[Token(Token = "0x60005ED")]
	[Address(RVA = "0x1B0FD80", Offset = "0x1B0FD80", VA = "0x1B0FD80")]
	public TGUtilsAnimatorPeriodParam()
	{
	}
}
[Token(Token = "0x2000125")]
public class TGUtilsMaterialInstance : MonoBehaviour
{
	[Token(Token = "0x4000666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color MainColor;

	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[ColorUsage(true, true, 0f, 8f, 0.125f, 3f)]
	public Color EmissionColor;

	[Token(Token = "0x4000668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material mat;

	[Token(Token = "0x4000669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Color oldMain;

	[Token(Token = "0x400066A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Color oldEmission;

	[Token(Token = "0x60005EE")]
	[Address(RVA = "0x1B0FDF0", Offset = "0x1B0FDF0", VA = "0x1B0FDF0")]
	private void Start()
	{
	}

	[Token(Token = "0x60005EF")]
	[Address(RVA = "0x1B0FE68", Offset = "0x1B0FE68", VA = "0x1B0FE68")]
	private void Update()
	{
	}

	[Token(Token = "0x60005F0")]
	[Address(RVA = "0x1B0FFC0", Offset = "0x1B0FFC0", VA = "0x1B0FFC0")]
	public TGUtilsMaterialInstance()
	{
	}
}
[Token(Token = "0x2000126")]
[AddComponentMenu("Miscellaneous/Inspector Text Info Note")]
public class InformationNote : MonoBehaviour
{
	[Token(Token = "0x400066B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isReady;

	[Token(Token = "0x400066C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string TextInfo;

	[Token(Token = "0x400066D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string spaceMessage;

	[Token(Token = "0x60005F1")]
	[Address(RVA = "0x1B0FFDC", Offset = "0x1B0FFDC", VA = "0x1B0FFDC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005F2")]
	[Address(RVA = "0x1B0FFE8", Offset = "0x1B0FFE8", VA = "0x1B0FFE8")]
	public void SwitchToggle()
	{
	}

	[Token(Token = "0x60005F3")]
	[Address(RVA = "0x1B0FFF8", Offset = "0x1B0FFF8", VA = "0x1B0FFF8")]
	public InformationNote()
	{
	}
}
[Token(Token = "0x2000127")]
public class SampleAVShaderMover : MonoBehaviour
{
	[Token(Token = "0x400066E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Material _material;

	[Token(Token = "0x400066F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float speed;

	[Token(Token = "0x4000670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float speedOffset;

	[Token(Token = "0x60005F4")]
	[Address(RVA = "0x1B10084", Offset = "0x1B10084", VA = "0x1B10084")]
	private void Start()
	{
	}

	[Token(Token = "0x60005F5")]
	[Address(RVA = "0x1B100C8", Offset = "0x1B100C8", VA = "0x1B100C8")]
	private void Update()
	{
	}

	[Token(Token = "0x60005F6")]
	[Address(RVA = "0x1B100FC", Offset = "0x1B100FC", VA = "0x1B100FC")]
	private void SetGain()
	{
	}

	[Token(Token = "0x60005F7")]
	[Address(RVA = "0x1B10C00", Offset = "0x1B10C00", VA = "0x1B10C00")]
	public SampleAVShaderMover()
	{
	}
}
[Token(Token = "0x2000128")]
public class TestJetShader : MonoBehaviour
{
	[Token(Token = "0x60005F8")]
	[Address(RVA = "0x1B10C08", Offset = "0x1B10C08", VA = "0x1B10C08")]
	private void Start()
	{
	}

	[Token(Token = "0x60005F9")]
	[Address(RVA = "0x1B10C14", Offset = "0x1B10C14", VA = "0x1B10C14")]
	private void Update()
	{
	}

	[Token(Token = "0x60005FA")]
	[Address(RVA = "0x1B10C60", Offset = "0x1B10C60", VA = "0x1B10C60")]
	public TestJetShader()
	{
	}
}
[Token(Token = "0x2000129")]
public class PointFade : MonoBehaviour
{
	[Token(Token = "0x4000671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform _fadeTarget;

	[Token(Token = "0x60005FB")]
	[Address(RVA = "0x1B10C68", Offset = "0x1B10C68", VA = "0x1B10C68")]
	private void Start()
	{
	}

	[Token(Token = "0x60005FC")]
	[Address(RVA = "0x1B10D00", Offset = "0x1B10D00", VA = "0x1B10D00")]
	private void Update()
	{
	}

	[Token(Token = "0x60005FD")]
	[Address(RVA = "0x1B10D04", Offset = "0x1B10D04", VA = "0x1B10D04")]
	public PointFade()
	{
	}
}
[Token(Token = "0x200012A")]
[ExecuteInEditMode]
public class ScanShaderUtils : MonoBehaviour
{
	[Token(Token = "0x4000672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Material[] _mats;

	[Token(Token = "0x4000673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[CanBeNull]
	private GameObject _Controller;

	[Token(Token = "0x60005FE")]
	[Address(RVA = "0x1B10D0C", Offset = "0x1B10D0C", VA = "0x1B10D0C")]
	private void Start()
	{
	}

	[Token(Token = "0x60005FF")]
	[Address(RVA = "0x1B10DA8", Offset = "0x1B10DA8", VA = "0x1B10DA8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000600")]
	[Address(RVA = "0x1B10E60", Offset = "0x1B10E60", VA = "0x1B10E60")]
	public ScanShaderUtils()
	{
	}
}
[Token(Token = "0x200012B")]
public class AutoSetUpInvoker : MonoBehaviour
{
	[Token(Token = "0x6000601")]
	[Address(RVA = "0x1B10E68", Offset = "0x1B10E68", VA = "0x1B10E68")]
	public AutoSetUpInvoker()
	{
	}
}
[Token(Token = "0x200012C")]
public class IykuetAchvDebugger : MonoBehaviour
{
	[Token(Token = "0x4000674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AchvFlagTutorial _tutorial;

	[Token(Token = "0x4000675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private AchvFlagSecret _secret;

	[Token(Token = "0x4000676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AchvCountUpInt _upInt;

	[Token(Token = "0x4000677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private AchvCountUpFloat _upFloat;

	[Token(Token = "0x6000602")]
	[Address(RVA = "0x1B10E70", Offset = "0x1B10E70", VA = "0x1B10E70")]
	private void Update()
	{
	}

	[Token(Token = "0x6000603")]
	[Address(RVA = "0x1B10EEC", Offset = "0x1B10EEC", VA = "0x1B10EEC")]
	public void FlagUpTutorial(AchvFlagTutorial key)
	{
	}

	[Token(Token = "0x6000604")]
	[Address(RVA = "0x1B10FF8", Offset = "0x1B10FF8", VA = "0x1B10FF8")]
	public void FlagUpSecret(AchvFlagSecret key)
	{
	}

	[Token(Token = "0x6000605")]
	[Address(RVA = "0x1B11104", Offset = "0x1B11104", VA = "0x1B11104")]
	public void CountUpInt(AchvCountUpInt key)
	{
	}

	[Token(Token = "0x6000606")]
	[Address(RVA = "0x1B111FC", Offset = "0x1B111FC", VA = "0x1B111FC")]
	public void CountUpFloat(AchvCountUpFloat key)
	{
	}

	[Token(Token = "0x6000607")]
	[Address(RVA = "0x1B112EC", Offset = "0x1B112EC", VA = "0x1B112EC")]
	public IykuetAchvDebugger()
	{
	}
}
[Token(Token = "0x200012D")]
public class IykuetCharacterActionGenerater : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200012E")]
	private struct KeyDataSet
	{
		[Token(Token = "0x400067A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public KeyCode _keyCode;

		[Token(Token = "0x400067B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[RestrictedStringByActiveScene(typeof(CharacterActionKey))]
		public string _actionKey;
	}

	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private List<KeyDataSet> _keyDataSets;

	[Token(Token = "0x170000BB")]
	[Inject]
	private IPublisher<CharacterActionData> _Publisher
	{
		[Token(Token = "0x6000608")]
		[Address(RVA = "0x1B112F4", Offset = "0x1B112F4", VA = "0x1B112F4")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000609")]
		[Address(RVA = "0x1B112FC", Offset = "0x1B112FC", VA = "0x1B112FC")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x600060A")]
	[Address(RVA = "0x1B11304", Offset = "0x1B11304", VA = "0x1B11304")]
	private void Update()
	{
	}

	[Token(Token = "0x600060B")]
	[Address(RVA = "0x1B114A0", Offset = "0x1B114A0", VA = "0x1B114A0")]
	public IykuetCharacterActionGenerater()
	{
	}
}
[Token(Token = "0x200012F")]
public class IykuetEasysaveDebugger : MonoBehaviour
{
	[Token(Token = "0x400067C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private int setInt;

	[Token(Token = "0x400067D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float setFloat;

	[Token(Token = "0x600060C")]
	[Address(RVA = "0x1B114A8", Offset = "0x1B114A8", VA = "0x1B114A8")]
	private void Start()
	{
	}

	[Token(Token = "0x600060D")]
	[Address(RVA = "0x1B11514", Offset = "0x1B11514", VA = "0x1B11514")]
	private void Update()
	{
	}

	[Token(Token = "0x600060E")]
	[Address(RVA = "0x1B11590", Offset = "0x1B11590", VA = "0x1B11590")]
	public void SetCurrentValue(AchvHighestInt key)
	{
	}

	[Token(Token = "0x600060F")]
	[Address(RVA = "0x1B11C24", Offset = "0x1B11C24", VA = "0x1B11C24")]
	public void SetCurrentValue(AchvHighestFloat key)
	{
	}

	[Token(Token = "0x6000610")]
	[Address(RVA = "0x1B118E0", Offset = "0x1B118E0", VA = "0x1B118E0")]
	public void CountUpCurrentValue(AchvHighestInt key)
	{
	}

	[Token(Token = "0x6000611")]
	[Address(RVA = "0x1B11F7C", Offset = "0x1B11F7C", VA = "0x1B11F7C")]
	public void CountUpCurrentValue(AchvHighestFloat key)
	{
	}

	[Token(Token = "0x6000612")]
	[Address(RVA = "0x1B122C8", Offset = "0x1B122C8", VA = "0x1B122C8")]
	public IykuetEasysaveDebugger()
	{
	}
}
[Token(Token = "0x2000130")]
public class IykuetLogViewer : MonoBehaviour
{
	[Token(Token = "0x6000613")]
	[Address(RVA = "0x1B122D0", Offset = "0x1B122D0", VA = "0x1B122D0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000614")]
	[Address(RVA = "0x1B122D4", Offset = "0x1B122D4", VA = "0x1B122D4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000615")]
	[Address(RVA = "0x1B122D8", Offset = "0x1B122D8", VA = "0x1B122D8")]
	public IykuetLogViewer()
	{
	}
}
[Token(Token = "0x2000131")]
public class IykuetStartEvent : MonoBehaviour
{
	[Token(Token = "0x400067E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent OnStartEvent;

	[Token(Token = "0x6000616")]
	[Address(RVA = "0x1B122E0", Offset = "0x1B122E0", VA = "0x1B122E0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000617")]
	[Address(RVA = "0x1B122FC", Offset = "0x1B122FC", VA = "0x1B122FC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000618")]
	[Address(RVA = "0x1B12300", Offset = "0x1B12300", VA = "0x1B12300")]
	public IykuetStartEvent()
	{
	}
}
[Token(Token = "0x2000132")]
public class IykuetUpdateDebugger : MonoBehaviour
{
	[Token(Token = "0x400067F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float timescale;

	[Token(Token = "0x6000619")]
	[Address(RVA = "0x1B12308", Offset = "0x1B12308", VA = "0x1B12308")]
	private void Start()
	{
	}

	[Token(Token = "0x600061A")]
	[Address(RVA = "0x1B1230C", Offset = "0x1B1230C", VA = "0x1B1230C")]
	private void Update()
	{
	}

	[Token(Token = "0x600061B")]
	[Address(RVA = "0x1B12410", Offset = "0x1B12410", VA = "0x1B12410")]
	public IykuetUpdateDebugger()
	{
	}
}
[Token(Token = "0x2000133")]
public static class I360Render
{
	[Token(Token = "0x4000680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Material equirectangularConverter;

	[Token(Token = "0x4000681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int paddingX;

	[Token(Token = "0x4000682")]
	private const string XMP_NAMESPACE_JPEG = "http://ns.adobe.com/xap/1.0/";

	[Token(Token = "0x4000683")]
	private const string XMP_CONTENT_TO_FORMAT_JPEG = "<x:xmpmeta xmlns:x=\"adobe:ns:meta/\" x:xmptk=\"Adobe XMP Core 5.1.0-jc003\"> <rdf:RDF xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"> <rdf:Description rdf:about=\"\" xmlns:GPano=\"http://ns.google.com/photos/1.0/panorama/\" GPano:UsePanoramaViewer=\"True\" GPano:CaptureSoftware=\"Unity3D\" GPano:StitchingSoftware=\"Unity3D\" GPano:ProjectionType=\"equirectangular\" GPano:PoseHeadingDegrees=\"180.0\" GPano:InitialViewHeadingDegrees=\"0.0\" GPano:InitialViewPitchDegrees=\"0.0\" GPano:InitialViewRollDegrees=\"0.0\" GPano:InitialHorizontalFOVDegrees=\"{0}\" GPano:CroppedAreaLeftPixels=\"0\" GPano:CroppedAreaTopPixels=\"0\" GPano:CroppedAreaImageWidthPixels=\"{1}\" GPano:CroppedAreaImageHeightPixels=\"{2}\" GPano:FullPanoWidthPixels=\"{1}\" GPano:FullPanoHeightPixels=\"{2}\"/></rdf:RDF></x:xmpmeta>";

	[Token(Token = "0x4000684")]
	private const string XMP_CONTENT_TO_FORMAT_PNG = "XML:com.adobe.xmp\0\0\0\0\0<?xpacket begin=\"ï»¿\" id=\"W5M0MpCehiHzreSzNTczkc9d\"?><x:xmpmeta xmlns:x=\"adobe:ns:meta/\" x:xmptk=\"Adobe XMP Core 5.1.0-jc003\"> <rdf:RDF xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"> <rdf:Description rdf:about=\"\" xmlns:GPano=\"http://ns.google.com/photos/1.0/panorama/\" xmlns:xmp=\"http://ns.adobe.com/xap/1.0/\" xmlns:dc=\"http://purl.org/dc/elements/1.1/\" xmlns:xmpMM=\"http://ns.adobe.com/xap/1.0/mm/\" xmlns:stEvt=\"http://ns.adobe.com/xap/1.0/sType/ResourceEvent#\" xmlns:tiff=\"http://ns.adobe.com/tiff/1.0/\" xmlns:exif=\"http://ns.adobe.com/exif/1.0/\"> <GPano:UsePanoramaViewer>True</GPano:UsePanoramaViewer> <GPano:CaptureSoftware>Unity3D</GPano:CaptureSoftware> <GPano:StitchingSoftware>Unity3D</GPano:StitchingSoftware> <GPano:ProjectionType>equirectangular</GPano:ProjectionType> <GPano:PoseHeadingDegrees>180.0</GPano:PoseHeadingDegrees> <GPano:InitialViewHeadingDegrees>0.0</GPano:InitialViewHeadingDegrees> <GPano:InitialViewPitchDegrees>0.0</GPano:InitialViewPitchDegrees> <GPano:InitialViewRollDegrees>0.0</GPano:InitialViewRollDegrees> <GPano:InitialHorizontalFOVDegrees>{0}</GPano:InitialHorizontalFOVDegrees> <GPano:CroppedAreaLeftPixels>0</GPano:CroppedAreaLeftPixels> <GPano:CroppedAreaTopPixels>0</GPano:CroppedAreaTopPixels> <GPano:CroppedAreaImageWidthPixels>{1}</GPano:CroppedAreaImageWidthPixels> <GPano:CroppedAreaImageHeightPixels>{2}</GPano:CroppedAreaImageHeightPixels> <GPano:FullPanoWidthPixels>{1}</GPano:FullPanoWidthPixels> <GPano:FullPanoHeightPixels>{2}</GPano:FullPanoHeightPixels> <tiff:Orientation>1</tiff:Orientation> <exif:PixelXDimension>{1}</exif:PixelXDimension> <exif:PixelYDimension>{2}</exif:PixelYDimension> </rdf:Description></rdf:RDF></x:xmpmeta><?xpacket end=\"w\"?>";

	[Token(Token = "0x4000685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static uint[] CRC_TABLE_PNG;

	[Token(Token = "0x600061C")]
	[Address(RVA = "0x1B12418", Offset = "0x1B12418", VA = "0x1B12418")]
	public static byte[] Capture(int width = 1024, bool encodeAsJPEG = true, [Optional] Camera renderCam, bool faceCameraDirection = true)
	{
		return null;
	}

	[Token(Token = "0x600061D")]
	[Address(RVA = "0x1B12AAC", Offset = "0x1B12AAC", VA = "0x1B12AAC")]
	public static byte[] InsertXMPIntoTexture2D_JPEG(Texture2D image)
	{
		return null;
	}

	[Token(Token = "0x600061E")]
	[Address(RVA = "0x1B12A50", Offset = "0x1B12A50", VA = "0x1B12A50")]
	public static byte[] InsertXMPIntoTexture2D_PNG(Texture2D image)
	{
		return null;
	}

	[Token(Token = "0x600061F")]
	[Address(RVA = "0x1B12B0C", Offset = "0x1B12B0C", VA = "0x1B12B0C")]
	private static byte[] DoTheHardWork_JPEG(byte[] fileBytes, int imageWidth, int imageHeight)
	{
		return null;
	}

	[Token(Token = "0x6000620")]
	[Address(RVA = "0x1B13478", Offset = "0x1B13478", VA = "0x1B13478")]
	private static bool CheckBytesForXMPNamespace_JPEG(byte[] bytes, int startIndex)
	{
		return default(bool);
	}

	[Token(Token = "0x6000621")]
	[Address(RVA = "0x1B13328", Offset = "0x1B13328", VA = "0x1B13328")]
	private static bool SearchChunkForXMP_JPEG(byte[] bytes, ref int startIndex, ref int chunkSize)
	{
		return default(bool);
	}

	[Token(Token = "0x6000622")]
	[Address(RVA = "0x1B1343C", Offset = "0x1B1343C", VA = "0x1B1343C")]
	private static int FindIndexToInsertXMPCode_JPEG(byte[] bytes)
	{
		return default(int);
	}

	[Token(Token = "0x6000623")]
	[Address(RVA = "0x1B12F40", Offset = "0x1B12F40", VA = "0x1B12F40")]
	private static byte[] DoTheHardWork_PNG(byte[] fileBytes, int imageWidth, int imageHeight)
	{
		return null;
	}

	[Token(Token = "0x6000624")]
	[Address(RVA = "0x1B13544", Offset = "0x1B13544", VA = "0x1B13544")]
	private static string CalculateCRC_PNG(string xmpContent)
	{
		return null;
	}

	[Token(Token = "0x6000625")]
	[Address(RVA = "0x1B13850", Offset = "0x1B13850", VA = "0x1B13850")]
	private static uint UpdateCRC_PNG(string xmpContent)
	{
		return default(uint);
	}

	[Token(Token = "0x6000626")]
	[Address(RVA = "0x1B13778", Offset = "0x1B13778", VA = "0x1B13778")]
	private static void CalculateCRCTable_PNG()
	{
	}

	[Token(Token = "0x6000627")]
	[Address(RVA = "0x1B13918", Offset = "0x1B13918", VA = "0x1B13918")]
	private static byte[] CalculateCRCBytes_PNG(uint crc)
	{
		return null;
	}
}
[Token(Token = "0x2000134")]
public class ScreenShot360 : MonoBehaviour
{
	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int imageWidth;

	[Token(Token = "0x4000687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool saveAsJPEG;

	[Token(Token = "0x4000688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string _fileName;

	[Token(Token = "0x6000628")]
	[Address(RVA = "0x1B139AC", Offset = "0x1B139AC", VA = "0x1B139AC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000629")]
	[Address(RVA = "0x1B13B20", Offset = "0x1B13B20", VA = "0x1B13B20")]
	public ScreenShot360()
	{
	}
}
[Token(Token = "0x2000135")]
public class ObjectAutoPan : MonoBehaviour
{
	[Token(Token = "0x4000689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float _speed;

	[Token(Token = "0x400068A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private Vector3 _axis;

	[Token(Token = "0x600062A")]
	[Address(RVA = "0x1B13B38", Offset = "0x1B13B38", VA = "0x1B13B38")]
	private void Update()
	{
	}

	[Token(Token = "0x600062B")]
	[Address(RVA = "0x1B13B70", Offset = "0x1B13B70", VA = "0x1B13B70")]
	public ObjectAutoPan()
	{
	}
}
[Token(Token = "0x2000136")]
public class ObjectAutoRotate : MonoBehaviour
{
	[Token(Token = "0x400068B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float _speed;

	[Token(Token = "0x600062C")]
	[Address(RVA = "0x1B13B78", Offset = "0x1B13B78", VA = "0x1B13B78")]
	private void Update()
	{
	}

	[Token(Token = "0x600062D")]
	[Address(RVA = "0x1B13BF4", Offset = "0x1B13BF4", VA = "0x1B13BF4")]
	public ObjectAutoRotate()
	{
	}
}
[Token(Token = "0x2000137")]
public class ArrangeChilds : MonoBehaviour
{
	[Token(Token = "0x400068C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float rad;

	[Token(Token = "0x600062E")]
	[Address(RVA = "0x1B13BFC", Offset = "0x1B13BFC", VA = "0x1B13BFC")]
	private void Start()
	{
	}

	[Token(Token = "0x600062F")]
	[Address(RVA = "0x1B13DDC", Offset = "0x1B13DDC", VA = "0x1B13DDC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000630")]
	[Address(RVA = "0x1B13DE0", Offset = "0x1B13DE0", VA = "0x1B13DE0")]
	public ArrangeChilds()
	{
	}
}
[Token(Token = "0x2000138")]
public class UILevelMeter : MonoBehaviour
{
	[Token(Token = "0x400068D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image MeterImage;

	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text MeterText;

	[Token(Token = "0x170000BC")]
	public float MeterValue
	{
		[Token(Token = "0x6000631")]
		[Address(RVA = "0x1B13DF0", Offset = "0x1B13DF0", VA = "0x1B13DF0")]
		set
		{
		}
	}

	[Token(Token = "0x170000BD")]
	public string MeterString
	{
		[Token(Token = "0x6000632")]
		[Address(RVA = "0x1B13E20", Offset = "0x1B13E20", VA = "0x1B13E20")]
		set
		{
		}
	}

	[Token(Token = "0x6000633")]
	[Address(RVA = "0x1B13E44", Offset = "0x1B13E44", VA = "0x1B13E44")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000634")]
	[Address(RVA = "0x1B13E9C", Offset = "0x1B13E9C", VA = "0x1B13E9C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000635")]
	[Address(RVA = "0x1B13F34", Offset = "0x1B13F34", VA = "0x1B13F34")]
	public UILevelMeter()
	{
	}
}
[Token(Token = "0x2000139")]
public class UILevelMeterControl : MonoBehaviour
{
	[Token(Token = "0x400068F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UILevelMeter[] Bars;

	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int[] Hertz;

	[Token(Token = "0x4000691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float MeterFactor;

	[Token(Token = "0x4000692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float[] _spectrum;

	[Token(Token = "0x4000693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float rad;

	[Token(Token = "0x6000636")]
	[Address(RVA = "0x1B13F3C", Offset = "0x1B13F3C", VA = "0x1B13F3C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000637")]
	[Address(RVA = "0x1B1408C", Offset = "0x1B1408C", VA = "0x1B1408C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000638")]
	[Address(RVA = "0x1B1427C", Offset = "0x1B1427C", VA = "0x1B1427C")]
	private int SpectrumToIndex(int freq)
	{
		return default(int);
	}

	[Token(Token = "0x6000639")]
	[Address(RVA = "0x1B142D0", Offset = "0x1B142D0", VA = "0x1B142D0")]
	public UILevelMeterControl()
	{
	}
}
[Token(Token = "0x200013A")]
public class SpectrumRender : MonoBehaviour
{
	[Token(Token = "0x4000694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private LineRenderer lineRenderer;

	[Token(Token = "0x4000695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float waveLength;

	[Token(Token = "0x4000696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float yLength;

	[Token(Token = "0x4000697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AudioSource source;

	[Token(Token = "0x4000698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float[] spectram;

	[Token(Token = "0x4000699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3[] points;

	[Token(Token = "0x400069A")]
	private const int FFT_RESOLUTION = 2048;

	[Token(Token = "0x400069B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float rad;

	[Token(Token = "0x400069C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3[] positions;

	[Token(Token = "0x400069D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int cut;

	[Token(Token = "0x600063A")]
	[Address(RVA = "0x1B14340", Offset = "0x1B14340", VA = "0x1B14340")]
	private void Start()
	{
	}

	[Token(Token = "0x600063B")]
	[Address(RVA = "0x1B144F4", Offset = "0x1B144F4", VA = "0x1B144F4")]
	public void Prepare(AudioSource source, float[] data)
	{
	}

	[Token(Token = "0x600063C")]
	[Address(RVA = "0x1B14598", Offset = "0x1B14598", VA = "0x1B14598")]
	public void FixedUpdate()
	{
	}

	[Token(Token = "0x600063D")]
	[Address(RVA = "0x1B1459C", Offset = "0x1B1459C", VA = "0x1B1459C")]
	private void Render()
	{
	}

	[Token(Token = "0x600063E")]
	[Address(RVA = "0x1B14648", Offset = "0x1B14648", VA = "0x1B14648")]
	private void Render(Vector3[] points)
	{
	}

	[Token(Token = "0x600063F")]
	[Address(RVA = "0x1B1469C", Offset = "0x1B1469C", VA = "0x1B1469C")]
	private void Reset()
	{
	}

	[Token(Token = "0x6000640")]
	[Address(RVA = "0x1B147C4", Offset = "0x1B147C4", VA = "0x1B147C4")]
	public SpectrumRender()
	{
	}
}
[Token(Token = "0x200013B")]
public class WaveFormRender : MonoBehaviour
{
	[Token(Token = "0x400069E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private LineRenderer lineRenderer;

	[Token(Token = "0x400069F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float waveLength;

	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float yLength;

	[Token(Token = "0x40006A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AudioSource source;

	[Token(Token = "0x40006A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float[] data;

	[Token(Token = "0x40006A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int sampleStep;

	[Token(Token = "0x40006A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3[] samplingLinePoints;

	[Token(Token = "0x40006A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float rad;

	[Token(Token = "0x40006A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] positions;

	[Token(Token = "0x40006A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3[] waveform;

	[Token(Token = "0x6000641")]
	[Address(RVA = "0x1B147E8", Offset = "0x1B147E8", VA = "0x1B147E8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000642")]
	[Address(RVA = "0x1B149AC", Offset = "0x1B149AC", VA = "0x1B149AC")]
	public void Prepare(AudioSource source, float[] data)
	{
	}

	[Token(Token = "0x6000643")]
	[Address(RVA = "0x1B14A9C", Offset = "0x1B14A9C", VA = "0x1B14A9C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000644")]
	[Address(RVA = "0x1B14C10", Offset = "0x1B14C10", VA = "0x1B14C10")]
	private void Render(Vector3[] points)
	{
	}

	[Token(Token = "0x6000645")]
	[Address(RVA = "0x1B14C64", Offset = "0x1B14C64", VA = "0x1B14C64")]
	private void Reset()
	{
	}

	[Token(Token = "0x6000646")]
	[Address(RVA = "0x1B14B4C", Offset = "0x1B14B4C", VA = "0x1B14B4C")]
	public void Inflate(float[] target, int start, int end, Vector3[] result, float xLength, float xOffset, float yLength, Vector3[] positions)
	{
	}

	[Token(Token = "0x6000647")]
	[Address(RVA = "0x1B14D7C", Offset = "0x1B14D7C", VA = "0x1B14D7C")]
	public WaveFormRender()
	{
	}
}
[Token(Token = "0x200013C")]
public class WaveformShader : MonoBehaviour
{
	[Token(Token = "0x40006A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioSource audioSource;

	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RawImage image;

	[Token(Token = "0x40006AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private int imageWidth;

	[Token(Token = "0x40006AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Texture2D texture;

	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float[] samples;

	[Token(Token = "0x6000648")]
	[Address(RVA = "0x1B14D98", Offset = "0x1B14D98", VA = "0x1B14D98")]
	private void Start()
	{
	}

	[Token(Token = "0x6000649")]
	[Address(RVA = "0x1B14F60", Offset = "0x1B14F60", VA = "0x1B14F60")]
	private void Update()
	{
	}

	[Token(Token = "0x600064A")]
	[Address(RVA = "0x1B150A0", Offset = "0x1B150A0", VA = "0x1B150A0")]
	public WaveformShader()
	{
	}
}
[Token(Token = "0x200013E")]
public class ShaderLevelMeterControl : MonoBehaviour
{
	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private int[] Hertz;

	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private readonly float[] _spectrum;

	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float MeterFactor;

	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float GainMax;

	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Material _material;

	[Token(Token = "0x600064E")]
	[Address(RVA = "0x1B15194", Offset = "0x1B15194", VA = "0x1B15194")]
	private void Update()
	{
	}

	[Token(Token = "0x600064F")]
	[Address(RVA = "0x1B153E0", Offset = "0x1B153E0", VA = "0x1B153E0")]
	private int SpectrumToIndex(int freq)
	{
		return default(int);
	}

	[Token(Token = "0x6000650")]
	[Address(RVA = "0x1B15434", Offset = "0x1B15434", VA = "0x1B15434")]
	public ShaderLevelMeterControl()
	{
	}
}
[Token(Token = "0x200013F")]
public class ImproveXRQuality : MonoBehaviour
{
	[Token(Token = "0x6000651")]
	[Address(RVA = "0x1B15500", Offset = "0x1B15500", VA = "0x1B15500")]
	private void Start()
	{
	}

	[Token(Token = "0x6000652")]
	[Address(RVA = "0x1B1552C", Offset = "0x1B1552C", VA = "0x1B1552C")]
	public ImproveXRQuality()
	{
	}
}
[Token(Token = "0x2000140")]
public class KendamaFitPatternScoreView : MonoBehaviour
{
	[NonSerialized]
	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform visualizeTransform;

	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Vector3 posOffset;

	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private Vector3 rotOffset;

	[Token(Token = "0x40006B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private TextMeshProUGUI _currentScoreText;

	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private CanvasGroup _canvasGroup;

	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool isVisualize;

	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool isVisualizeScore;

	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	public bool isVisualizeJudge;

	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private Vector3 defaultSize;

	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Inject]
	private MultilingualTextManager _multilingualTextManager;

	[Token(Token = "0x6000653")]
	[Address(RVA = "0x1B15534", Offset = "0x1B15534", VA = "0x1B15534")]
	public void OnJudgeInput(CurrentScoreData currentScoreData)
	{
	}

	[Token(Token = "0x6000654")]
	[Address(RVA = "0x1B15698", Offset = "0x1B15698", VA = "0x1B15698")]
	private void VisualizeScore(CurrentScoreData currentScoreData)
	{
	}

	[Token(Token = "0x6000655")]
	[Address(RVA = "0x1B1596C", Offset = "0x1B1596C", VA = "0x1B1596C")]
	private void ScoreEffect()
	{
	}

	[Token(Token = "0x6000656")]
	[Address(RVA = "0x1B15B80", Offset = "0x1B15B80", VA = "0x1B15B80")]
	public KendamaFitPatternScoreView()
	{
	}
}
[Token(Token = "0x2000141")]
public class KendamaFitPatternUIManager : MonoBehaviour
{
	[Token(Token = "0x40006BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject[] _kendamaFitPatternUI;

	[Token(Token = "0x40006BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform _visualizeTransformUp;

	[Token(Token = "0x40006C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform _visualizeTransformDown;

	[Token(Token = "0x40006C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int cnt;

	[Token(Token = "0x40006C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Inject]
	private ISubscriber<CurrentScoreData> _scoreSubscriber;

	[Token(Token = "0x6000658")]
	[Address(RVA = "0x1B15C1C", Offset = "0x1B15C1C", VA = "0x1B15C1C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000659")]
	[Address(RVA = "0x1B15E5C", Offset = "0x1B15E5C", VA = "0x1B15E5C")]
	public KendamaFitPatternUIManager()
	{
	}
}
[Token(Token = "0x2000142")]
public class SetMedleyResultEvent : EventBlock
{
	[StructLayout(3)]
	[Token(Token = "0x2000143")]
	[CompilerGenerated]
	private struct <SetEvent>d__4 : IAsyncStateMachine
	{
		[Token(Token = "0x40006C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x40006C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncUniTaskMethodBuilder<bool> <>t__builder;

		[Token(Token = "0x40006C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SetMedleyResultEvent <>4__this;

		[Token(Token = "0x40006CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CancellationToken token;

		[Token(Token = "0x40006CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UniTask.Awaiter <>u__1;

		[Token(Token = "0x6000660")]
		[Address(RVA = "0x1B162AC", Offset = "0x1B162AC", VA = "0x1B162AC", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000661")]
		[Address(RVA = "0x1B16938", Offset = "0x1B16938", VA = "0x1B16938", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x40006C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TextMeshProUGUI _scoreText;

	[Token(Token = "0x40006C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TextMeshProUGUI _thisCalorieText;

	[Token(Token = "0x40006C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TextMeshProUGUI _respawnCountText;

	[Token(Token = "0x40006C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _onNext;

	[Token(Token = "0x600065D")]
	[Address(RVA = "0x1B161C0", Offset = "0x1B161C0", VA = "0x1B161C0", Slot = "4")]
	[AsyncStateMachine(typeof(<SetEvent>d__4))]
	public override UniTask<bool> SetEvent(CancellationToken token)
	{
		return default(UniTask<bool>);
	}

	[Token(Token = "0x600065E")]
	[Address(RVA = "0x1B1629C", Offset = "0x1B1629C", VA = "0x1B1629C")]
	public SetMedleyResultEvent()
	{
	}
}
[Token(Token = "0x2000144")]
public class AudioSettingsManager : MonoBehaviour
{
	[Token(Token = "0x40006CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Settings")]
	[SerializeField]
	private AudioMixer _audioMixer;

	[Token(Token = "0x40006CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Slider _musicSlider;

	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Slider _voiceSlider;

	[Token(Token = "0x40006CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Slider _seSlider;

	[Token(Token = "0x40006D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private TextMeshProUGUI _musicPercentage;

	[Token(Token = "0x40006D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private TextMeshProUGUI _voicePercentage;

	[Token(Token = "0x40006D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private TextMeshProUGUI _sePercentage;

	[Token(Token = "0x40006D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private TouchPanelAchievementTrigger _touchPanelAchievementTrigger;

	[Token(Token = "0x40006D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float _initMusicVol;

	[Token(Token = "0x40006D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float _initVoiceVol;

	[Token(Token = "0x40006D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float _initSeVol;

	[Token(Token = "0x40006D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float _musicVol;

	[Token(Token = "0x40006D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float _voiceVol;

	[Token(Token = "0x40006D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float _seVol;

	[Token(Token = "0x6000662")]
	[Address(RVA = "0x1B16990", Offset = "0x1B16990", VA = "0x1B16990")]
	private void Start()
	{
	}

	[Token(Token = "0x6000663")]
	[Address(RVA = "0x1B16BFC", Offset = "0x1B16BFC", VA = "0x1B16BFC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000664")]
	[Address(RVA = "0x1B16F08", Offset = "0x1B16F08", VA = "0x1B16F08")]
	private float GetVolumeFromSlider(float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000665")]
	[Address(RVA = "0x1B16BB8", Offset = "0x1B16BB8", VA = "0x1B16BB8")]
	private float SliderValueFromVolume(float volume)
	{
		return default(float);
	}

	[Token(Token = "0x6000666")]
	[Address(RVA = "0x1B16F40", Offset = "0x1B16F40", VA = "0x1B16F40")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000667")]
	[Address(RVA = "0x1B16F94", Offset = "0x1B16F94", VA = "0x1B16F94")]
	public AudioSettingsManager()
	{
	}
}
[Token(Token = "0x2000145")]
public class CheckList : MonoBehaviour
{
	[Token(Token = "0x40006DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("スクリプトを追加")]
	[Tooltip("EventBlockを継承したスクリプトを書いてアタッチ\nGameManager/EventBeforeGame/EventBlockSample")]
	[SerializeField]
	private bool EventBlock;

	[Token(Token = "0x40006DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[Tooltip("PracticeClearCounterを継承したスクリプトを書いてアタッチ\nGameManager/1_Practice/SamplePracticeGame")]
	[SerializeField]
	private bool PracticeClearCounter;

	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[Tooltip("FPNoJudgementActionを継承したスクリプトを書いてアタッチ\nGFBox/FitPatterns/FitPattern_00_Sample/NoJudgementActions")]
	[SerializeField]
	private bool NoJudgementAction;

	[Token(Token = "0x40006DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[Tooltip("FPActionSubscribeEventを継承したスクリプトを書いてアタッチ\nGFBox/FitPatterns/FitPattern_00_Sample/SampleFPActionSubscribeEvent")]
	[SerializeField]
	private bool SampleFPActionSubscribeEvent;

	[Token(Token = "0x40006DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Tooltip("InputJudgeActionを継承したスクリプトを書いてアタッチ\nGFBox/FitPatterns/FitPattern_00_Sample/InputJudgeActions")]
	[SerializeField]
	private bool InputJudgeAciton;

	[Token(Token = "0x40006DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[Tooltip("InputPublisherを継承したスクリプトを書いてアタッチとInputKeyの追加\nGFBox/InputPublisher")]
	[SerializeField]
	private bool InputPublisher;

	[Token(Token = "0x40006E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	[Tooltip("InputPublisherで用いるKeyを追加するために\"GrooveFitName\"Keys.csを作成して追加してください")]
	[SerializeField]
	private bool GrooveFitNameKey;

	[Token(Token = "0x40006E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	[Tooltip("IntensityMetsCalculatorを継承したスクリプトを書いてアタッチ\nSetting&Utils/CalorieManager")]
	[SerializeField]
	private bool IntensityMetsCalculator;

	[Token(Token = "0x40006E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("BeatSubscribersにコードを追加したNoJudgementActionsとInputJudgeActionsを追加\nGFBox/FitPatterns/FitPattern_00_Sample")]
	[SerializeField]
	[Header("アタッチ系")]
	private bool FitPattern_xx;

	[Token(Token = "0x40006E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	[Tooltip("ResultのDisable On ResultにResult画面において非アクティブにしたいものをアタッチ\nSetting&Utils/SceneTransitionManager")]
	[SerializeField]
	private bool DisableOnResult;

	[Token(Token = "0x40006E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	[Tooltip("GameSettingのGF Nameを変更\nSetting&Utils/GameSettings")]
	[SerializeField]
	private bool GameSetting;

	[Token(Token = "0x40006E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	[Tooltip("SceneTransitionManagerにシーン遷移する際に（ワープ時に）見えないようにするオブジェクトを追加してください。\nSetting&Utils/SceneTransitionManager")]
	[SerializeField]
	private bool SceneTransitionManager;

	[Token(Token = "0x40006E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Tooltip("GFBoxの名前を変更して下さい\nGFBox")]
	[SerializeField]
	private bool GFBoxName;

	[Token(Token = "0x40006E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	[Tooltip("FitPatternScoreを表示するFitPatternScoreViewにFitPatternごとの点数が表示される場所を指定してください\nGFBox/FitPatterns/FitPatternUI")]
	[SerializeField]
	private bool FitPatternScore;

	[Token(Token = "0x40006E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
	[Header("既存のスクリプトの編集")]
	[Tooltip("GrooveFitGameListに新たに作成したGrooveFitの追加")]
	[SerializeField]
	private bool GrooveFitGameList;

	[Token(Token = "0x40006E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x27")]
	[Tooltip("CharacterActionKeyに必要なKeyのEnumとGetEnumTypeの分岐の追加")]
	[SerializeField]
	private bool CharacterActionKey;

	[Token(Token = "0x6000668")]
	[Address(RVA = "0x1B16F9C", Offset = "0x1B16F9C", VA = "0x1B16F9C")]
	public CheckList()
	{
	}
}
[Token(Token = "0x2000146")]
public class DifficultyJewelGrabbable : GrabbableObject
{
	[Token(Token = "0x2000147")]
	private enum DifficultyJewelState
	{
		[Token(Token = "0x40006FD")]
		OnPivot,
		[Token(Token = "0x40006FE")]
		Grabbed,
		[Token(Token = "0x40006FF")]
		Free
	}

	[StructLayout(3)]
	[Token(Token = "0x2000149")]
	[CompilerGenerated]
	private struct <ReturnToPivot>d__26 : IAsyncStateMachine
	{
		[Token(Token = "0x4000701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x4000703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public DifficultyJewelGrabbable <>4__this;

		[Token(Token = "0x4000704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool tween;

		[Token(Token = "0x4000705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Collider <_jewelCollider>5__2;

		[Token(Token = "0x4000706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private UniTask.Awaiter <>u__1;

		[Token(Token = "0x6000678")]
		[Address(RVA = "0x1B177C0", Offset = "0x1B177C0", VA = "0x1B177C0", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000679")]
		[Address(RVA = "0x1B18184", Offset = "0x1B18184", VA = "0x1B18184", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x200014A")]
	[CompilerGenerated]
	private struct <ReturnAfterSet>d__27 : IAsyncStateMachine
	{
		[Token(Token = "0x4000707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x4000709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public DifficultyJewelGrabbable <>4__this;

		[Token(Token = "0x400070A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UniTask.Awaiter <>u__1;

		[Token(Token = "0x600067A")]
		[Address(RVA = "0x1B18190", Offset = "0x1B18190", VA = "0x1B18190", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x600067B")]
		[Address(RVA = "0x1B184B4", Offset = "0x1B184B4", VA = "0x1B184B4", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x200014B")]
	[CompilerGenerated]
	private struct <ReturnTimer>d__28 : IAsyncStateMachine
	{
		[Token(Token = "0x400070B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x400070C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncUniTaskMethodBuilder <>t__builder;

		[Token(Token = "0x400070D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CancellationToken token;

		[Token(Token = "0x400070E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float timeToReturn;

		[Token(Token = "0x400070F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public DifficultyJewelGrabbable <>4__this;

		[Token(Token = "0x4000710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <_time>5__2;

		[Token(Token = "0x4000711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Cysharp.Threading.Tasks.YieldAwaitable.Awaiter <>u__1;

		[Token(Token = "0x600067C")]
		[Address(RVA = "0x1B184C0", Offset = "0x1B184C0", VA = "0x1B184C0", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x600067D")]
		[Address(RVA = "0x1B18800", Offset = "0x1B18800", VA = "0x1B18800", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x40006EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	[Header("Hover&Grab Setting")]
	[SerializeField]
	private GameObject _hoveredEffect;

	[Token(Token = "0x40006EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	[SerializeField]
	private AudioClip _hoverSound;

	[Token(Token = "0x40006EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[SerializeField]
	private AudioClip _grabSound;

	[Token(Token = "0x40006ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	[SerializeField]
	private AudioClip _releaseSound;

	[Token(Token = "0x40006EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private AudioSource _audio;

	[Token(Token = "0x40006EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	[Inject]
	private ISubscriber<GameStatus.Difficulty> difficultySubscriber;

	[Token(Token = "0x40006F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	[Header("Repop")]
	[SerializeField]
	private Transform _jewelPivot;

	[Token(Token = "0x40006F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	[SerializeField]
	private float _repopTimeOnRelease;

	[Token(Token = "0x40006F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	[SerializeField]
	private float _repopTimeOnSet;

	[Token(Token = "0x40006F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	[SerializeField]
	private GameObject _hitAreaObject;

	[Token(Token = "0x40006F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	[SerializeField]
	private GameObject _difficultyJewelObj;

	[Token(Token = "0x40006F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	[SerializeField]
	private GameObject _repopEffect;

	[NonSerialized]
	[Token(Token = "0x40006F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public VRHand.HandType _nowGrabHand;

	[NonSerialized]
	[Token(Token = "0x40006F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public GameObject _nowGrabHandObj;

	[Token(Token = "0x40006F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private DifficultyJewelState _state;

	[Token(Token = "0x40006F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
	private bool _setted;

	[Token(Token = "0x40006FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private Tweener _positionTweener;

	[Token(Token = "0x40006FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private Tweener _rotationTweener;

	[Token(Token = "0x6000669")]
	[Address(RVA = "0x1B16FA4", Offset = "0x1B16FA4", VA = "0x1B16FA4", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x600066A")]
	[Address(RVA = "0x1B17020", Offset = "0x1B17020", VA = "0x1B17020", Slot = "5")]
	protected override void Update()
	{
	}

	[Token(Token = "0x600066B")]
	[Address(RVA = "0x1B17198", Offset = "0x1B17198", VA = "0x1B17198", Slot = "9")]
	public override void OnHovered(VRHand.HandType hand)
	{
	}

	[Token(Token = "0x600066C")]
	[Address(RVA = "0x1B171E0", Offset = "0x1B171E0", VA = "0x1B171E0", Slot = "6")]
	public override void OnGrab(GameObject handObj, GameObject parentObj, VRHand.HandType hand)
	{
	}

	[Token(Token = "0x600066D")]
	[Address(RVA = "0x1B172BC", Offset = "0x1B172BC", VA = "0x1B172BC", Slot = "7")]
	public override void OnRelease(GameObject handObj, VRHand.HandType hand)
	{
	}

	[Token(Token = "0x600066E")]
	[Address(RVA = "0x1B17504", Offset = "0x1B17504", VA = "0x1B17504", Slot = "11")]
	protected override void OnUnHoveredWithGrab(VRHand.HandType unHoveredHand, VRHand.HandType grabHand)
	{
	}

	[Token(Token = "0x600066F")]
	[Address(RVA = "0x1B17534", Offset = "0x1B17534", VA = "0x1B17534", Slot = "10")]
	protected override void OnUnHoveredWithoutGrab(VRHand.HandType hand)
	{
	}

	[Token(Token = "0x6000670")]
	[Address(RVA = "0x1B170D8", Offset = "0x1B170D8", VA = "0x1B170D8")]
	[AsyncStateMachine(typeof(<ReturnToPivot>d__26))]
	private void ReturnToPivot(bool tween = false)
	{
	}

	[Token(Token = "0x6000671")]
	[Address(RVA = "0x1B17570", Offset = "0x1B17570", VA = "0x1B17570")]
	[AsyncStateMachine(typeof(<ReturnAfterSet>d__27))]
	public void ReturnAfterSet()
	{
	}

	[Token(Token = "0x6000672")]
	[Address(RVA = "0x1B17380", Offset = "0x1B17380", VA = "0x1B17380")]
	[AsyncStateMachine(typeof(<ReturnTimer>d__28))]
	private UniTask ReturnTimer(float timeToReturn, CancellationToken token)
	{
		return default(UniTask);
	}

	[Token(Token = "0x6000673")]
	[Address(RVA = "0x1B17280", Offset = "0x1B17280", VA = "0x1B17280")]
	private void CancelTween()
	{
	}

	[Token(Token = "0x6000674")]
	[Address(RVA = "0x1B17624", Offset = "0x1B17624", VA = "0x1B17624")]
	private void RepopEffect()
	{
	}

	[Token(Token = "0x6000675")]
	[Address(RVA = "0x1B17774", Offset = "0x1B17774", VA = "0x1B17774")]
	public DifficultyJewelGrabbable()
	{
	}
}
[Token(Token = "0x200014C")]
public class DifficultyTableManager : MonoBehaviour
{
	[Token(Token = "0x200014D")]
	public enum TableStatus
	{
		[Token(Token = "0x400071E")]
		Default,
		[Token(Token = "0x400071F")]
		Endless
	}

	[StructLayout(3)]
	[Token(Token = "0x200014E")]
	[CompilerGenerated]
	private struct <SetDefault>d__13 : IAsyncStateMachine
	{
		[Token(Token = "0x4000720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncUniTaskMethodBuilder <>t__builder;

		[Token(Token = "0x4000722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DifficultyTableManager <>4__this;

		[Token(Token = "0x4000723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private DOTweenAsyncExtensions.TweenAwaiter <>u__1;

		[Token(Token = "0x4000724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UniTask.Awaiter <>u__2;

		[Token(Token = "0x6000682")]
		[Address(RVA = "0x1B18B04", Offset = "0x1B18B04", VA = "0x1B18B04", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000683")]
		[Address(RVA = "0x1B19548", Offset = "0x1B19548", VA = "0x1B19548", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x200014F")]
	[CompilerGenerated]
	private struct <SetEndless>d__14 : IAsyncStateMachine
	{
		[Token(Token = "0x4000725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncUniTaskMethodBuilder <>t__builder;

		[Token(Token = "0x4000727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DifficultyTableManager <>4__this;

		[Token(Token = "0x4000728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private UniTask.Awaiter <>u__1;

		[Token(Token = "0x4000729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private DOTweenAsyncExtensions.TweenAwaiter <>u__2;

		[Token(Token = "0x6000684")]
		[Address(RVA = "0x1B19554", Offset = "0x1B19554", VA = "0x1B19554", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000685")]
		[Address(RVA = "0x1B1A1B4", Offset = "0x1B1A1B4", VA = "0x1B1A1B4", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x4000712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("General")]
	[ReadOnly]
	public TableStatus _currentStatus;

	[NonSerialized]
	[Token(Token = "0x4000713")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool _isAnimating;

	[Token(Token = "0x4000714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioSource _deskAudio;

	[Token(Token = "0x4000715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioClip _changeSound;

	[Token(Token = "0x4000716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Animator _shutterAnim;

	[Token(Token = "0x4000717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject _shutter;

	[Token(Token = "0x4000718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Header("Default Desk")]
	[SerializeField]
	private GameObject _defaultDesk;

	[Token(Token = "0x4000719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject _defaultJewels;

	[Token(Token = "0x400071A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Header("Endless Desk")]
	[SerializeField]
	private GameObject _endlessDesk;

	[Token(Token = "0x400071B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Transform _endlessLever;

	[Token(Token = "0x400071C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private GameObject _endlessJewels;

	[Token(Token = "0x600067E")]
	[Address(RVA = "0x1B1880C", Offset = "0x1B1880C", VA = "0x1B1880C")]
	private void Start()
	{
	}

	[Token(Token = "0x600067F")]
	[Address(RVA = "0x1B1883C", Offset = "0x1B1883C", VA = "0x1B1883C")]
	[AsyncStateMachine(typeof(<SetDefault>d__13))]
	public UniTask SetDefault()
	{
		return default(UniTask);
	}

	[Token(Token = "0x6000680")]
	[Address(RVA = "0x1B1899C", Offset = "0x1B1899C", VA = "0x1B1899C")]
	[AsyncStateMachine(typeof(<SetEndless>d__14))]
	public UniTask SetEndless()
	{
		return default(UniTask);
	}

	[Token(Token = "0x6000681")]
	[Address(RVA = "0x1B18AFC", Offset = "0x1B18AFC", VA = "0x1B18AFC")]
	public DifficultyTableManager()
	{
	}
}
[Token(Token = "0x2000150")]
[RequireComponent(typeof(AudioSource))]
public class DificultyLeverManager : MonoBehaviour
{
	[StructLayout(3)]
	[Token(Token = "0x2000151")]
	[CompilerGenerated]
	private struct <SetDefault>d__25 : IAsyncStateMachine
	{
		[Token(Token = "0x400073F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x4000741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public DificultyLeverManager <>4__this;

		[Token(Token = "0x4000742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UniTask.Awaiter <>u__1;

		[Token(Token = "0x600068E")]
		[Address(RVA = "0x1B1AC4C", Offset = "0x1B1AC4C", VA = "0x1B1AC4C", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x600068F")]
		[Address(RVA = "0x1B1B090", Offset = "0x1B1B090", VA = "0x1B1B090", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x2000152")]
	[CompilerGenerated]
	private struct <SetEndless>d__26 : IAsyncStateMachine
	{
		[Token(Token = "0x4000743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x4000745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public DificultyLeverManager <>4__this;

		[Token(Token = "0x4000746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UniTask.Awaiter <>u__1;

		[Token(Token = "0x6000690")]
		[Address(RVA = "0x1B1B09C", Offset = "0x1B1B09C", VA = "0x1B1B09C", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000691")]
		[Address(RVA = "0x1B1B48C", Offset = "0x1B1B48C", VA = "0x1B1B48C", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x400072A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Inject]
	private InputProvider _inputProvider;

	[Token(Token = "0x400072B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform _leverSwitch;

	[Token(Token = "0x400072C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private ConfigurableJoint _configurableJoint;

	[Token(Token = "0x400072D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Tooltip("Amount of steps the lever will click")]
	[SerializeField]
	private int _steps;

	[Token(Token = "0x400072E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private DifficultyTableManager _difficultyTable;

	[Token(Token = "0x400072F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private AudioClip _stepSound;

	[Token(Token = "0x4000730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private AudioClip _actionSound;

	[Token(Token = "0x4000731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Rigidbody _hingeRb;

	[Token(Token = "0x4000732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float _range;

	[Token(Token = "0x4000733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float _previousAngle;

	[Token(Token = "0x4000734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 _originalVector;

	[Token(Token = "0x4000735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float _stepSize;

	[Token(Token = "0x4000736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int _currentStep;

	[Token(Token = "0x4000737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private AudioSource _audio;

	[Token(Token = "0x4000738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private HandColliderDetector _handColSave;

	[Token(Token = "0x4000739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private GrabbableLeverSwitch _grabbableLeverSwitch;

	[Token(Token = "0x400073A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private GameObject _leverSwitchEndless;

	[Token(Token = "0x400073B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private GameObject _endlessObj;

	[Token(Token = "0x400073C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private Collider _leverSwitchEndlessGrabbable;

	[Token(Token = "0x400073D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool _isNew;

	[Token(Token = "0x400073E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private GameObject _newSign;

	[Token(Token = "0x6000686")]
	[Address(RVA = "0x1B1A1C0", Offset = "0x1B1A1C0", VA = "0x1B1A1C0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000687")]
	[Address(RVA = "0x1B1A520", Offset = "0x1B1A520", VA = "0x1B1A520")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000688")]
	[Address(RVA = "0x1B1A524", Offset = "0x1B1A524", VA = "0x1B1A524")]
	private void CheckForRotation()
	{
	}

	[Token(Token = "0x6000689")]
	[Address(RVA = "0x1B1AAB4", Offset = "0x1B1AAB4", VA = "0x1B1AAB4")]
	private void OnStepChanged(int step)
	{
	}

	[Token(Token = "0x600068A")]
	[Address(RVA = "0x1B1AA00", Offset = "0x1B1AA00", VA = "0x1B1AA00")]
	[AsyncStateMachine(typeof(<SetDefault>d__25))]
	private void SetDefault()
	{
	}

	[Token(Token = "0x600068B")]
	[Address(RVA = "0x1B1A94C", Offset = "0x1B1A94C", VA = "0x1B1A94C")]
	[AsyncStateMachine(typeof(<SetEndless>d__26))]
	private void SetEndless()
	{
	}

	[Token(Token = "0x600068C")]
	[Address(RVA = "0x1B1AB80", Offset = "0x1B1AB80", VA = "0x1B1AB80")]
	public DificultyLeverManager()
	{
	}
}
[Token(Token = "0x2000153")]
public class GetUserName : MonoBehaviour
{
	[Token(Token = "0x4000747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string _userName;

	[Token(Token = "0x6000692")]
	[Address(RVA = "0x1B1B498", Offset = "0x1B1B498", VA = "0x1B1B498")]
	private void Start()
	{
	}

	[Token(Token = "0x6000693")]
	[Address(RVA = "0x1B1B49C", Offset = "0x1B1B49C", VA = "0x1B1B49C")]
	public string Get()
	{
		return null;
	}

	[Token(Token = "0x6000694")]
	[Address(RVA = "0x1B1B4A4", Offset = "0x1B1B4A4", VA = "0x1B1B4A4")]
	public GetUserName()
	{
	}
}
[Token(Token = "0x2000154")]
public class KeyboardEvent : EventBlock
{
	[StructLayout(3)]
	[Token(Token = "0x2000155")]
	[CompilerGenerated]
	private struct <SetEvent>d__6 : IAsyncStateMachine
	{
		[Token(Token = "0x400074E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x400074F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncUniTaskMethodBuilder<bool> <>t__builder;

		[Token(Token = "0x4000750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public KeyboardEvent <>4__this;

		[Token(Token = "0x4000751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CancellationToken token;

		[Token(Token = "0x4000752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UniTask.Awaiter <>u__1;

		[Token(Token = "0x6000699")]
		[Address(RVA = "0x1B1B640", Offset = "0x1B1B640", VA = "0x1B1B640", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x600069A")]
		[Address(RVA = "0x1B1BD88", Offset = "0x1B1BD88", VA = "0x1B1BD88", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x4000748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TextMeshPro _textPanel;

	[Token(Token = "0x4000749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string _key;

	[Token(Token = "0x400074A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject[] Mallet;

	[NonSerialized]
	[Token(Token = "0x400074B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool _isPressedEnter;

	[Token(Token = "0x400074C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Inject]
	private MultilingualTextManager _multilingualTextManager;

	[Token(Token = "0x400074D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Inject]
	private InputProvider _inputProvider;

	[Token(Token = "0x6000695")]
	[Address(RVA = "0x1B1B4FC", Offset = "0x1B1B4FC", VA = "0x1B1B4FC", Slot = "4")]
	[AsyncStateMachine(typeof(<SetEvent>d__6))]
	public override UniTask<bool> SetEvent(CancellationToken token)
	{
		return default(UniTask<bool>);
	}

	[Token(Token = "0x6000696")]
	[Address(RVA = "0x1B1B5D8", Offset = "0x1B1B5D8", VA = "0x1B1B5D8")]
	public void PressEnter()
	{
	}

	[Token(Token = "0x6000697")]
	[Address(RVA = "0x1B1B630", Offset = "0x1B1B630", VA = "0x1B1B630")]
	public KeyboardEvent()
	{
	}
}
[Token(Token = "0x2000156")]
public class MakeSteamappIDfile : MonoBehaviour
{
	[Token(Token = "0x600069B")]
	[Address(RVA = "0x1B1BDE0", Offset = "0x1B1BDE0", VA = "0x1B1BDE0")]
	public MakeSteamappIDfile()
	{
	}
}
[Token(Token = "0x2000157")]
public class NameDeterminationModalEvent : EventBlock
{
	[StructLayout(3)]
	[Token(Token = "0x2000158")]
	[CompilerGenerated]
	private struct <SetEvent>d__10 : IAsyncStateMachine
	{
		[Token(Token = "0x400075C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x400075D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncUniTaskMethodBuilder<bool> <>t__builder;

		[Token(Token = "0x400075E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NameDeterminationModalEvent <>4__this;

		[Token(Token = "0x400075F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CancellationToken token;

		[Token(Token = "0x4000760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UniTask.Awaiter <>u__1;

		[Token(Token = "0x60006A2")]
		[Address(RVA = "0x1B1C098", Offset = "0x1B1C098", VA = "0x1B1C098", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x60006A3")]
		[Address(RVA = "0x1B1CA48", Offset = "0x1B1CA48", VA = "0x1B1CA48", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x2000159")]
	[CompilerGenerated]
	private struct <PushedModalNo>d__12 : IAsyncStateMachine
	{
		[Token(Token = "0x4000761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x4000763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public NameDeterminationModalEvent <>4__this;

		[Token(Token = "0x4000764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UniTask.Awaiter <>u__1;

		[Token(Token = "0x60006A4")]
		[Address(RVA = "0x1B1CAA0", Offset = "0x1B1CAA0", VA = "0x1B1CAA0", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x60006A5")]
		[Address(RVA = "0x1B1CDD8", Offset = "0x1B1CDD8", VA = "0x1B1CDD8", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x4000753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject[] Mallet;

	[Token(Token = "0x4000754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TextMeshProUGUI _userName;

	[Token(Token = "0x4000755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TextMeshPro _textPanel;

	[Token(Token = "0x4000756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private string _key;

	[Token(Token = "0x4000757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Header("Buttons")]
	[SerializeField]
	private SnareDrumButtonManager _yesButton;

	[Token(Token = "0x4000758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private SnareDrumButtonManager _noButton;

	[Token(Token = "0x4000759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool _selection;

	[Token(Token = "0x400075A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool _isPressedButton;

	[Token(Token = "0x400075B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Inject]
	private MultilingualTextManager _multilingualTextManager;

	[Token(Token = "0x600069C")]
	[Address(RVA = "0x1B1BDE8", Offset = "0x1B1BDE8", VA = "0x1B1BDE8")]
	private void Start()
	{
	}

	[Token(Token = "0x600069D")]
	[Address(RVA = "0x1B1BE18", Offset = "0x1B1BE18", VA = "0x1B1BE18", Slot = "4")]
	[AsyncStateMachine(typeof(<SetEvent>d__10))]
	public override UniTask<bool> SetEvent(CancellationToken token)
	{
		return default(UniTask<bool>);
	}

	[Token(Token = "0x600069E")]
	[Address(RVA = "0x1B1BEF4", Offset = "0x1B1BEF4", VA = "0x1B1BEF4")]
	public void PushedModalYes()
	{
	}

	[Token(Token = "0x600069F")]
	[Address(RVA = "0x1B1BFD4", Offset = "0x1B1BFD4", VA = "0x1B1BFD4")]
	[AsyncStateMachine(typeof(<PushedModalNo>d__12))]
	public void PushedModalNo()
	{
	}

	[Token(Token = "0x60006A0")]
	[Address(RVA = "0x1B1C088", Offset = "0x1B1C088", VA = "0x1B1C088")]
	public NameDeterminationModalEvent()
	{
	}
}
[Token(Token = "0x200015A")]
public class OptionJewelGrabbable : GrabbableObject
{
	[Token(Token = "0x200015B")]
	private enum OptionJewelState
	{
		[Token(Token = "0x4000777")]
		OnPivot,
		[Token(Token = "0x4000778")]
		Grabbed,
		[Token(Token = "0x4000779")]
		Free
	}

	[StructLayout(3)]
	[Token(Token = "0x200015C")]
	[CompilerGenerated]
	private struct <ReturnToPivot>d__25 : IAsyncStateMachine
	{
		[Token(Token = "0x400077A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x400077B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x400077C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public OptionJewelGrabbable <>4__this;

		[Token(Token = "0x400077D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool tween;

		[Token(Token = "0x400077E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Collider <_jewelCollider>5__2;

		[Token(Token = "0x400077F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private UniTask.Awaiter <>u__1;

		[Token(Token = "0x60006B3")]
		[Address(RVA = "0x1B1D5DC", Offset = "0x1B1D5DC", VA = "0x1B1D5DC", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x60006B4")]
		[Address(RVA = "0x1B1DD2C", Offset = "0x1B1DD2C", VA = "0x1B1DD2C", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x200015D")]
	[CompilerGenerated]
	private struct <ReturnAfterSet>d__26 : IAsyncStateMachine
	{
		[Token(Token = "0x4000780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x4000782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public OptionJewelGrabbable <>4__this;

		[Token(Token = "0x4000783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UniTask.Awaiter <>u__1;

		[Token(Token = "0x60006B5")]
		[Address(RVA = "0x1B1DD38", Offset = "0x1B1DD38", VA = "0x1B1DD38", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x60006B6")]
		[Address(RVA = "0x1B1E05C", Offset = "0x1B1E05C", VA = "0x1B1E05C", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x200015E")]
	[CompilerGenerated]
	private struct <ReturnTimer>d__27 : IAsyncStateMachine
	{
		[Token(Token = "0x4000784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncUniTaskMethodBuilder <>t__builder;

		[Token(Token = "0x4000786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CancellationToken token;

		[Token(Token = "0x4000787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float timeToReturn;

		[Token(Token = "0x4000788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public OptionJewelGrabbable <>4__this;

		[Token(Token = "0x4000789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <_time>5__2;

		[Token(Token = "0x400078A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Cysharp.Threading.Tasks.YieldAwaitable.Awaiter <>u__1;

		[Token(Token = "0x60006B7")]
		[Address(RVA = "0x1B1E068", Offset = "0x1B1E068", VA = "0x1B1E068", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x60006B8")]
		[Address(RVA = "0x1B1E3A8", Offset = "0x1B1E3A8", VA = "0x1B1E3A8", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x4000765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	[Header("Hover&Grab Setting")]
	[SerializeField]
	private GameObject _hoveredEffect;

	[Token(Token = "0x4000766")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	[SerializeField]
	private AudioClip _hoverSound;

	[Token(Token = "0x4000767")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[SerializeField]
	private AudioClip _grabSound;

	[Token(Token = "0x4000768")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	[SerializeField]
	private AudioClip _releaseSound;

	[Token(Token = "0x4000769")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private AudioSource _audio;

	[Token(Token = "0x400076A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	[Header("Repop")]
	[SerializeField]
	private Transform _jewelPivot;

	[Token(Token = "0x400076B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	[SerializeField]
	private float _repopTimeOnRelease;

	[Token(Token = "0x400076C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	[SerializeField]
	private float _repopTimeOnSet;

	[Token(Token = "0x400076D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	[SerializeField]
	private GameObject _hitAreaObject;

	[Token(Token = "0x400076E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	[SerializeField]
	private GameObject _optionJewelObj;

	[Token(Token = "0x400076F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	[SerializeField]
	private GameObject _repopEffect;

	[NonSerialized]
	[Token(Token = "0x4000770")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public VRHand.HandType _nowGrabHand;

	[NonSerialized]
	[Token(Token = "0x4000771")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public GameObject _nowGrabHandObj;

	[Token(Token = "0x4000772")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private OptionJewelState _state;

	[Token(Token = "0x4000773")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
	private bool _setted;

	[Token(Token = "0x4000774")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private Tweener _positionTweener;

	[Token(Token = "0x4000775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private Tweener _rotationTweener;

	[Token(Token = "0x60006A6")]
	[Address(RVA = "0x1B1CDE4", Offset = "0x1B1CDE4", VA = "0x1B1CDE4", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60006A7")]
	[Address(RVA = "0x1B1CE60", Offset = "0x1B1CE60", VA = "0x1B1CE60", Slot = "5")]
	protected override void Update()
	{
	}

	[Token(Token = "0x60006A8")]
	[Address(RVA = "0x1B1CFD8", Offset = "0x1B1CFD8", VA = "0x1B1CFD8", Slot = "9")]
	public override void OnHovered(VRHand.HandType hand)
	{
	}

	[Token(Token = "0x60006A9")]
	[Address(RVA = "0x1B1D020", Offset = "0x1B1D020", VA = "0x1B1D020", Slot = "6")]
	public override void OnGrab(GameObject handObj, GameObject parentObj, VRHand.HandType hand)
	{
	}

	[Token(Token = "0x60006AA")]
	[Address(RVA = "0x1B1D110", Offset = "0x1B1D110", VA = "0x1B1D110", Slot = "7")]
	public override void OnRelease(GameObject handObj, VRHand.HandType hand)
	{
	}

	[Token(Token = "0x60006AB")]
	[Address(RVA = "0x1B1D358", Offset = "0x1B1D358", VA = "0x1B1D358", Slot = "11")]
	protected override void OnUnHoveredWithGrab(VRHand.HandType unHoveredHand, VRHand.HandType grabHand)
	{
	}

	[Token(Token = "0x60006AC")]
	[Address(RVA = "0x1B1D388", Offset = "0x1B1D388", VA = "0x1B1D388", Slot = "10")]
	protected override void OnUnHoveredWithoutGrab(VRHand.HandType hand)
	{
	}

	[Token(Token = "0x60006AD")]
	[Address(RVA = "0x1B1CF18", Offset = "0x1B1CF18", VA = "0x1B1CF18")]
	[AsyncStateMachine(typeof(<ReturnToPivot>d__25))]
	private void ReturnToPivot(bool tween = false)
	{
	}

	[Token(Token = "0x60006AE")]
	[Address(RVA = "0x1B1D3C4", Offset = "0x1B1D3C4", VA = "0x1B1D3C4")]
	[AsyncStateMachine(typeof(<ReturnAfterSet>d__26))]
	public void ReturnAfterSet()
	{
	}

	[Token(Token = "0x60006AF")]
	[Address(RVA = "0x1B1D1D4", Offset = "0x1B1D1D4", VA = "0x1B1D1D4")]
	[AsyncStateMachine(typeof(<ReturnTimer>d__27))]
	private UniTask ReturnTimer(float timeToReturn, CancellationToken token)
	{
		return default(UniTask);
	}

	[Token(Token = "0x60006B0")]
	[Address(RVA = "0x1B1D0D4", Offset = "0x1B1D0D4", VA = "0x1B1D0D4")]
	private void CancelTween()
	{
	}

	[Token(Token = "0x60006B1")]
	[Address(RVA = "0x1B1D478", Offset = "0x1B1D478", VA = "0x1B1D478")]
	private void RepopEffect()
	{
	}

	[Token(Token = "0x60006B2")]
	[Address(RVA = "0x1B1D5C8", Offset = "0x1B1D5C8", VA = "0x1B1D5C8")]
	public OptionJewelGrabbable()
	{
	}
}
[Token(Token = "0x200015F")]
public class PressedEnter : MonoBehaviour
{
	[Token(Token = "0x400078B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private KeyboardEvent _keyboardEvent;

	[Token(Token = "0x400078C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject[] Mallet;

	[Token(Token = "0x60006B9")]
	[Address(RVA = "0x1B1E3B4", Offset = "0x1B1E3B4", VA = "0x1B1E3B4")]
	public void PressEnter()
	{
	}

	[Token(Token = "0x60006BA")]
	[Address(RVA = "0x1B1E418", Offset = "0x1B1E418", VA = "0x1B1E418")]
	public PressedEnter()
	{
	}
}
[Token(Token = "0x2000160")]
public class SettingDifficulty : MonoBehaviour
{
	[Token(Token = "0x400078D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameStatus.Difficulty _difficulty;

	[Token(Token = "0x400078E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Inject]
	private IPublisher<GameStatus.Difficulty> difficlutyPublisher;

	[Token(Token = "0x400078F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Inject]
	private IPublisher<GameStatus.OptionRule> optionRulePublisher;

	[Token(Token = "0x4000790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private DifficultyJewelGrabbable _difficultyGrabbable;

	[Token(Token = "0x4000791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject _effectPrefab;

	[Token(Token = "0x4000792")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private VRHand.HandType _handType;

	[Token(Token = "0x4000793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject _handObj;

	[Token(Token = "0x60006BB")]
	[Address(RVA = "0x1B1E420", Offset = "0x1B1E420", VA = "0x1B1E420")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60006BC")]
	[Address(RVA = "0x1B1E6E8", Offset = "0x1B1E6E8", VA = "0x1B1E6E8")]
	public SettingDifficulty()
	{
	}
}
[Token(Token = "0x2000161")]
public class SettingOption : MonoBehaviour
{
	[Token(Token = "0x4000794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameStatus.OptionRule _option;

	[Token(Token = "0x4000795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Inject]
	private IPublisher<GameStatus.OptionRule> optionRulePublisher;

	[Token(Token = "0x4000796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private OptionJewelGrabbable _optionGrabbale;

	[Token(Token = "0x4000797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject _effectPrefab;

	[Token(Token = "0x4000798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private AudioSource _audioSource;

	[Token(Token = "0x4000799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private AudioClip _disableSound;

	[Token(Token = "0x400079A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private VRHand.HandType _handType;

	[Token(Token = "0x400079B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject _handObj;

	[Token(Token = "0x60006BD")]
	[Address(RVA = "0x1B1E6F0", Offset = "0x1B1E6F0", VA = "0x1B1E6F0")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60006BE")]
	[Address(RVA = "0x1B1E964", Offset = "0x1B1E964", VA = "0x1B1E964")]
	public SettingOption()
	{
	}
}
[Token(Token = "0x2000162")]
public class SetUserName : EventBlock
{
	[StructLayout(3)]
	[Token(Token = "0x2000163")]
	[CompilerGenerated]
	private struct <SetEvent>d__3 : IAsyncStateMachine
	{
		[Token(Token = "0x400079F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x40007A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncUniTaskMethodBuilder<bool> <>t__builder;

		[Token(Token = "0x40007A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SetUserName <>4__this;

		[Token(Token = "0x40007A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CancellationToken token;

		[Token(Token = "0x40007A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UniTask.Awaiter <>u__1;

		[Token(Token = "0x60006C1")]
		[Address(RVA = "0x1B1EAA0", Offset = "0x1B1EAA0", VA = "0x1B1EAA0", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x60006C2")]
		[Address(RVA = "0x1B1EF3C", Offset = "0x1B1EF3C", VA = "0x1B1EF3C", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x400079C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TextMeshProUGUI _keyboardDisplayText;

	[Token(Token = "0x400079D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject _getUserName;

	[Token(Token = "0x400079E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string _userName;

	[Token(Token = "0x60006BF")]
	[Address(RVA = "0x1B1E96C", Offset = "0x1B1E96C", VA = "0x1B1E96C", Slot = "4")]
	[AsyncStateMachine(typeof(<SetEvent>d__3))]
	public override UniTask<bool> SetEvent(CancellationToken token)
	{
		return default(UniTask<bool>);
	}

	[Token(Token = "0x60006C0")]
	[Address(RVA = "0x1B1EA48", Offset = "0x1B1EA48", VA = "0x1B1EA48")]
	public SetUserName()
	{
	}
}
[Token(Token = "0x2000164")]
public interface IStartableDirector
{
	[Token(Token = "0x60006C3")]
	UniTask PreLoad(List<GrooveFitGame> GFGames, CancellationToken token);

	[Token(Token = "0x60006C4")]
	void StartMainLoop(List<GrooveFitGame> GFGames);
}
[Token(Token = "0x2000165")]
public abstract class GFDTransitionBase : MonoBehaviour
{
	[Token(Token = "0x40007A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static readonly string[] TargetShaderNames;

	[Token(Token = "0x60006C5")]
	public abstract void Prepare();

	[Token(Token = "0x60006C6")]
	public abstract void OpenUpdate(float t);

	[Token(Token = "0x60006C7")]
	public abstract void OnStartOpen();

	[Token(Token = "0x60006C8")]
	public abstract void CloseUpdate(float t);

	[Token(Token = "0x60006C9")]
	public abstract void OnFinishClose();

	[Token(Token = "0x60006CA")]
	[Address(RVA = "0x1B1EF94", Offset = "0x1B1EF94", VA = "0x1B1EF94")]
	protected GFDTransitionBase()
	{
	}
}
[Token(Token = "0x2000166")]
public class GroupedClippingTransition : MonoBehaviour, IGFDTransition, IAutoSetUp
{
	[Token(Token = "0x40007A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ClippingPrimitive _clippingPrimitive;

	[Token(Token = "0x40007A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TransitionPrimitiveSetter _primitiveSetter;

	[Token(Token = "0x40007A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private List<Transform> _targets;

	[Token(Token = "0x40007A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _isClosed;

	[Token(Token = "0x40007A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	[SerializeField]
	private bool _controlTargetActive;

	[Token(Token = "0x40007AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly List<string> TargetShaderNames;

	[Token(Token = "0x60006CC")]
	[Address(RVA = "0x1B1F084", Offset = "0x1B1F084", VA = "0x1B1F084")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006CD")]
	[Address(RVA = "0x1B1F480", Offset = "0x1B1F480", VA = "0x1B1F480", Slot = "4")]
	public void OpenUpdate(float t)
	{
	}

	[Token(Token = "0x60006CE")]
	[Address(RVA = "0x1B1F2B0", Offset = "0x1B1F2B0", VA = "0x1B1F2B0", Slot = "5")]
	public void CloseUpdate(float t)
	{
	}

	[Token(Token = "0x60006CF")]
	[Address(RVA = "0x1B1F650", Offset = "0x1B1F650", VA = "0x1B1F650", Slot = "6")]
	[ContextMenu("SetUp")]
	public void AutoSetUp()
	{
	}

	[Token(Token = "0x60006D0")]
	[Address(RVA = "0x1B1F914", Offset = "0x1B1F914", VA = "0x1B1F914")]
	public GroupedClippingTransition()
	{
	}
}
[Token(Token = "0x200016A")]
public class LocalClippingPlane : GFDTransitionBase
{
	[Token(Token = "0x40007B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ClippingPlane _clippingPlane;

	[Token(Token = "0x40007B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Renderer> _renderers;

	[Token(Token = "0x40007B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _yMax;

	[Token(Token = "0x40007B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _yMin;

	[Token(Token = "0x60006DC")]
	[Address(RVA = "0x1B1FDE8", Offset = "0x1B1FDE8", VA = "0x1B1FDE8", Slot = "4")]
	public override void Prepare()
	{
	}

	[Token(Token = "0x60006DD")]
	[Address(RVA = "0x1B200DC", Offset = "0x1B200DC", VA = "0x1B200DC", Slot = "5")]
	public override void OpenUpdate(float t)
	{
	}

	[Token(Token = "0x60006DE")]
	[Address(RVA = "0x1B20194", Offset = "0x1B20194", VA = "0x1B20194", Slot = "6")]
	public override void OnStartOpen()
	{
	}

	[Token(Token = "0x60006DF")]
	[Address(RVA = "0x1B20228", Offset = "0x1B20228", VA = "0x1B20228", Slot = "7")]
	public override void CloseUpdate(float t)
	{
	}

	[Token(Token = "0x60006E0")]
	[Address(RVA = "0x1B202E4", Offset = "0x1B202E4", VA = "0x1B202E4", Slot = "8")]
	public override void OnFinishClose()
	{
	}

	[Token(Token = "0x60006E1")]
	[Address(RVA = "0x1B20378", Offset = "0x1B20378", VA = "0x1B20378")]
	public LocalClippingPlane()
	{
	}
}
[Token(Token = "0x200016C")]
public interface IMedleyGameSectionEventBase
{
	[Token(Token = "0x60006E7")]
	void OnStartSection();

	[Token(Token = "0x60006E8")]
	void OnFinishSection();
}
[Token(Token = "0x200016D")]
public class MedleyGameSelectionEvent : MonoBehaviour, IMedleyGameSectionEventBase
{
	[Token(Token = "0x40007B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private UnityEvent OnStartSectionEvent;

	[Token(Token = "0x40007BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private UnityEvent OnFinishSectionEvent;

	[Token(Token = "0x60006E9")]
	[Address(RVA = "0x1B20650", Offset = "0x1B20650", VA = "0x1B20650", Slot = "4")]
	public void OnStartSection()
	{
	}

	[Token(Token = "0x60006EA")]
	[Address(RVA = "0x1B20664", Offset = "0x1B20664", VA = "0x1B20664", Slot = "5")]
	public void OnFinishSection()
	{
	}

	[Token(Token = "0x60006EB")]
	[Address(RVA = "0x1B20678", Offset = "0x1B20678", VA = "0x1B20678")]
	public MedleyGameSelectionEvent()
	{
	}
}
[Token(Token = "0x200016E")]
public class SetActiveTransition : MonoBehaviour, IGFDTransition
{
	[Token(Token = "0x40007BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float _openThreshold;

	[Token(Token = "0x40007BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float _closeThreshold;

	[Token(Token = "0x40007BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private List<GameObject> _targets;

	[Token(Token = "0x60006EC")]
	[Address(RVA = "0x1B20680", Offset = "0x1B20680", VA = "0x1B20680", Slot = "4")]
	public void OpenUpdate(float t)
	{
	}

	[Token(Token = "0x60006ED")]
	[Address(RVA = "0x1B206F4", Offset = "0x1B206F4", VA = "0x1B206F4", Slot = "5")]
	public void CloseUpdate(float t)
	{
	}

	[Token(Token = "0x60006EE")]
	[Address(RVA = "0x1B20768", Offset = "0x1B20768", VA = "0x1B20768")]
	public SetActiveTransition()
	{
	}
}
[Token(Token = "0x200016F")]
public class TransitionBoxSetter : TransitionPrimitiveSetter
{
	[Token(Token = "0x40007BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[Tooltip("trueならCenterがtransform.positionで固定。falseなら対象Renderの中心に")]
	private bool FixedCenter;

	[Token(Token = "0x40007BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Bounds _bounds;

	[Token(Token = "0x60006EF")]
	[Address(RVA = "0x1B20800", Offset = "0x1B20800", VA = "0x1B20800", Slot = "4")]
	public override void Prepare(IEnumerable<Renderer> renderers)
	{
	}

	[Token(Token = "0x60006F0")]
	[Address(RVA = "0x1B209C8", Offset = "0x1B209C8", VA = "0x1B209C8", Slot = "5")]
	public override void SetPrimitive(Transform target, float t)
	{
	}

	[Token(Token = "0x60006F1")]
	[Address(RVA = "0x1B20A3C", Offset = "0x1B20A3C", VA = "0x1B20A3C")]
	public TransitionBoxSetter()
	{
	}
}
[Token(Token = "0x2000170")]
public class TransitionFixedPlaneSetter : TransitionPrimitiveSetter
{
	[Token(Token = "0x40007C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform _localSpace;

	[Token(Token = "0x40007C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float _maxHeight;

	[Token(Token = "0x40007C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float _minHeight;

	[Token(Token = "0x60006F3")]
	[Address(RVA = "0x1B20AAC", Offset = "0x1B20AAC", VA = "0x1B20AAC", Slot = "4")]
	public override void Prepare(IEnumerable<Renderer> renderers)
	{
	}

	[Token(Token = "0x60006F4")]
	[Address(RVA = "0x1B20AB0", Offset = "0x1B20AB0", VA = "0x1B20AB0", Slot = "5")]
	public override void SetPrimitive(Transform target, float t)
	{
	}

	[Token(Token = "0x60006F5")]
	[Address(RVA = "0x1B20D0C", Offset = "0x1B20D0C", VA = "0x1B20D0C")]
	public TransitionFixedPlaneSetter()
	{
	}
}
[Token(Token = "0x2000171")]
public class TransitionFixedRadiusSphereSetter : TransitionPrimitiveSetter
{
	[Token(Token = "0x40007C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float _maxRadius;

	[Token(Token = "0x60006F6")]
	[Address(RVA = "0x1B20D1C", Offset = "0x1B20D1C", VA = "0x1B20D1C", Slot = "4")]
	public override void Prepare(IEnumerable<Renderer> renderers)
	{
	}

	[Token(Token = "0x60006F7")]
	[Address(RVA = "0x1B20D20", Offset = "0x1B20D20", VA = "0x1B20D20", Slot = "5")]
	public override void SetPrimitive(Transform target, float t)
	{
	}

	[Token(Token = "0x60006F8")]
	[Address(RVA = "0x1B20DB0", Offset = "0x1B20DB0", VA = "0x1B20DB0")]
	public TransitionFixedRadiusSphereSetter()
	{
	}
}
[Token(Token = "0x2000172")]
public class TransitionLocalPlaneSetter : TransitionPrimitiveSetter
{
	[Token(Token = "0x40007C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform _localSpace;

	[Token(Token = "0x40007C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float _maxHeight;

	[Token(Token = "0x40007C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float _minHeight;

	[Token(Token = "0x60006F9")]
	[Address(RVA = "0x1B20DC8", Offset = "0x1B20DC8", VA = "0x1B20DC8", Slot = "4")]
	public override void Prepare(IEnumerable<Renderer> renderers)
	{
	}

	[Token(Token = "0x60006FA")]
	[Address(RVA = "0x1B20FE8", Offset = "0x1B20FE8", VA = "0x1B20FE8", Slot = "5")]
	public override void SetPrimitive(Transform target, float t)
	{
	}

	[Token(Token = "0x60006FB")]
	[Address(RVA = "0x1B21244", Offset = "0x1B21244", VA = "0x1B21244")]
	public TransitionLocalPlaneSetter()
	{
	}
}
[Token(Token = "0x2000174")]
public abstract class TransitionPrimitiveSetter : MonoBehaviour
{
	[Token(Token = "0x60006FF")]
	public abstract void Prepare(IEnumerable<Renderer> renderers);

	[Token(Token = "0x6000700")]
	public abstract void SetPrimitive(Transform target, float t);

	[Token(Token = "0x6000701")]
	[Address(RVA = "0x1B20DC0", Offset = "0x1B20DC0", VA = "0x1B20DC0")]
	protected TransitionPrimitiveSetter()
	{
	}
}
[Token(Token = "0x2000175")]
public class TransitionSphereSetter : TransitionPrimitiveSetter
{
	[Token(Token = "0x40007C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform _localSpace;

	[Token(Token = "0x40007CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float _radius;

	[Token(Token = "0x170000BE")]
	private Vector3 RootPosition
	{
		[Token(Token = "0x6000704")]
		[Address(RVA = "0x1B218B4", Offset = "0x1B218B4", VA = "0x1B218B4")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x6000702")]
	[Address(RVA = "0x1B2160C", Offset = "0x1B2160C", VA = "0x1B2160C", Slot = "4")]
	public override void Prepare(IEnumerable<Renderer> renderers)
	{
	}

	[Token(Token = "0x6000703")]
	[Address(RVA = "0x1B217E4", Offset = "0x1B217E4", VA = "0x1B217E4", Slot = "5")]
	public override void SetPrimitive(Transform target, float t)
	{
	}

	[Token(Token = "0x6000705")]
	[Address(RVA = "0x1B2196C", Offset = "0x1B2196C", VA = "0x1B2196C")]
	public TransitionSphereSetter()
	{
	}
}
[Token(Token = "0x2000177")]
public class CircleGuage : Guage
{
	[Token(Token = "0x40007CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Image _image;

	[Token(Token = "0x6000709")]
	[Address(RVA = "0x1B21EE8", Offset = "0x1B21EE8", VA = "0x1B21EE8", Slot = "4")]
	protected override void RenderValue()
	{
	}

	[Token(Token = "0x600070A")]
	[Address(RVA = "0x1B21F10", Offset = "0x1B21F10", VA = "0x1B21F10")]
	public void SetColor(Color color)
	{
	}

	[Token(Token = "0x600070B")]
	[Address(RVA = "0x1B21F34", Offset = "0x1B21F34", VA = "0x1B21F34")]
	public CircleGuage()
	{
	}
}
[Token(Token = "0x2000178")]
public class Guage : MonoBehaviour
{
	[Token(Token = "0x40007CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected float _maxValue;

	[Token(Token = "0x40007D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected float _value;

	[Token(Token = "0x600070C")]
	[Address(RVA = "0x1B21F54", Offset = "0x1B21F54", VA = "0x1B21F54")]
	public bool Charge(float t)
	{
		return default(bool);
	}

	[Token(Token = "0x600070D")]
	[Address(RVA = "0x1B21F94", Offset = "0x1B21F94", VA = "0x1B21F94")]
	public bool Use(float t)
	{
		return default(bool);
	}

	[Token(Token = "0x600070E")]
	[Address(RVA = "0x1B21FCC", Offset = "0x1B21FCC", VA = "0x1B21FCC")]
	public void SetValue(float t, bool tIsNormalized = false)
	{
	}

	[Token(Token = "0x600070F")]
	[Address(RVA = "0x1B21FE8", Offset = "0x1B21FE8", VA = "0x1B21FE8")]
	public void ChangeValueForRatio(float t)
	{
	}

	[Token(Token = "0x6000710")]
	[Address(RVA = "0x1B22000", Offset = "0x1B22000", VA = "0x1B22000", Slot = "4")]
	protected virtual void RenderValue()
	{
	}

	[Token(Token = "0x6000711")]
	[Address(RVA = "0x1B21F44", Offset = "0x1B21F44", VA = "0x1B21F44")]
	public Guage()
	{
	}
}
[Token(Token = "0x2000179")]
public class ItemPadController : MonoBehaviour
{
	[StructLayout(3)]
	[Token(Token = "0x200017A")]
	[CompilerGenerated]
	private struct <GuageCountDownUniTask>d__33 : IAsyncStateMachine
	{
		[Token(Token = "0x40007EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x40007EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncUniTaskMethodBuilder <>t__builder;

		[Token(Token = "0x40007EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ItemPadController <>4__this;

		[Token(Token = "0x40007ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CancellationToken token;

		[Token(Token = "0x40007EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UniTask<bool>.Awaiter <>u__1;

		[Token(Token = "0x6000720")]
		[Address(RVA = "0x1B22DA0", Offset = "0x1B22DA0", VA = "0x1B22DA0", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000721")]
		[Address(RVA = "0x1B2365C", Offset = "0x1B2365C", VA = "0x1B2365C", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x40007D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ItemPadModelController _itemPadModel;

	[Token(Token = "0x40007D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private CircleGuage _guage;

	[Token(Token = "0x40007D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float _volumeDownValue;

	[Token(Token = "0x40007D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float _timeLagToClose;

	[Token(Token = "0x40007D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Header("GuageEffect")]
	[SerializeField]
	private Color _chargingColor;

	[Token(Token = "0x40007D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Color _chargedColor;

	[Token(Token = "0x40007D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private ParticleSystem _onChargedParticle;

	[Token(Token = "0x40007D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float _respawnGuageRatio;

	[Token(Token = "0x40007D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[Header("Audio")]
	[SerializeField]
	private AudioSource _audioSource;

	[Token(Token = "0x40007DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private AudioClip _onChargedSE;

	[Token(Token = "0x40007DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private AudioClip _onTimeUpSE;

	[Token(Token = "0x40007DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[Header("Debug")]
	private bool _openTypeIsLongPush;

	[Token(Token = "0x40007DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[SerializeField]
	private float _guageUseSpeed;

	[Token(Token = "0x40007DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[Inject]
	private MedleyGameStatus _status;

	[Token(Token = "0x40007DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[Inject]
	private InputProvider _inputProvider;

	[Token(Token = "0x40007E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[Inject]
	private IPublisher<OnFitPatternsDelete> _fitPatternDelete;

	[Token(Token = "0x40007E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[Inject]
	private ISubscriber<CurrentScoreData> _scoreSubscriber;

	[Token(Token = "0x40007E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[Inject]
	private ISubscriber<MedleyGameStatus> _statusSubscriber;

	[Token(Token = "0x40007E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[Inject]
	private ISubscriber<RespawnMessage> _respawnSubscriber;

	[Token(Token = "0x40007E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private bool _isGuageMax;

	[Token(Token = "0x40007E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
	private bool _isTimeLagToClose;

	[Token(Token = "0x40007E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB2")]
	private bool _isOpen;

	[Token(Token = "0x40007E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private CancellationTokenSource _coundDownCancellationSource;

	[Token(Token = "0x40007E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private readonly string _volumeKey;

	[Token(Token = "0x40007E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool _isRespawnNow;

	[Token(Token = "0x170000BF")]
	public bool IsOpen
	{
		[Token(Token = "0x6000712")]
		[Address(RVA = "0x1B22040", Offset = "0x1B22040", VA = "0x1B22040")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000713")]
	[Address(RVA = "0x1B22048", Offset = "0x1B22048", VA = "0x1B22048")]
	private void Start()
	{
	}

	[Token(Token = "0x6000714")]
	[Address(RVA = "0x1B2234C", Offset = "0x1B2234C", VA = "0x1B2234C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000715")]
	[Address(RVA = "0x1B223EC", Offset = "0x1B223EC", VA = "0x1B223EC")]
	private void OpenItemPad()
	{
	}

	[Token(Token = "0x6000716")]
	[Address(RVA = "0x1B225D4", Offset = "0x1B225D4", VA = "0x1B225D4")]
	private void CloseItemPad()
	{
	}

	[Token(Token = "0x6000717")]
	[Address(RVA = "0x1B22AB8", Offset = "0x1B22AB8", VA = "0x1B22AB8")]
	private void OnScored(CurrentScoreData data)
	{
	}

	[Token(Token = "0x6000718")]
	[Address(RVA = "0x1B22B34", Offset = "0x1B22B34", VA = "0x1B22B34")]
	private void OnGuageCharged()
	{
	}

	[Token(Token = "0x6000719")]
	[Address(RVA = "0x1B227F4", Offset = "0x1B227F4", VA = "0x1B227F4")]
	[AsyncStateMachine(typeof(<GuageCountDownUniTask>d__33))]
	private UniTask GuageCountDownUniTask(CancellationToken token)
	{
		return default(UniTask);
	}

	[Token(Token = "0x600071A")]
	[Address(RVA = "0x1B22B90", Offset = "0x1B22B90", VA = "0x1B22B90")]
	public void OnItemUsed()
	{
	}

	[Token(Token = "0x600071B")]
	[Address(RVA = "0x1B22C34", Offset = "0x1B22C34", VA = "0x1B22C34")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600071C")]
	[Address(RVA = "0x1B22C48", Offset = "0x1B22C48", VA = "0x1B22C48")]
	public ItemPadController()
	{
	}
}
[Token(Token = "0x200017B")]
public class ItemPadModelController : MonoBehaviour
{
	[Token(Token = "0x40007EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform _rootTransform;

	[Token(Token = "0x40007F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform _modelTransform;

	[Token(Token = "0x40007F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float _duration;

	[Token(Token = "0x40007F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private ItemPadButton[] _buttons;

	[Token(Token = "0x40007F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private bool _defaultIsOpen;

	[Token(Token = "0x40007F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private Vector3 _rootOffsetToHead;

	[Token(Token = "0x40007F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private MIItemDiscDataBase _dataBase;

	[Token(Token = "0x40007F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Inject]
	private InputProvider _inputProvider;

	[Token(Token = "0x40007F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Tweener _tweener;

	[Token(Token = "0x6000722")]
	[Address(RVA = "0x1B23668", Offset = "0x1B23668", VA = "0x1B23668")]
	private void Start()
	{
	}

	[Token(Token = "0x6000723")]
	[Address(RVA = "0x1B23CE8", Offset = "0x1B23CE8", VA = "0x1B23CE8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000724")]
	[Address(RVA = "0x1B2269C", Offset = "0x1B2269C", VA = "0x1B2269C")]
	public void Open()
	{
	}

	[Token(Token = "0x6000725")]
	[Address(RVA = "0x1B22974", Offset = "0x1B22974", VA = "0x1B22974")]
	public void Close()
	{
	}

	[Token(Token = "0x6000726")]
	[Address(RVA = "0x1B23BFC", Offset = "0x1B23BFC", VA = "0x1B23BFC")]
	private void SetButtonActive(bool v)
	{
	}

	[Token(Token = "0x6000727")]
	[Address(RVA = "0x1B23D4C", Offset = "0x1B23D4C", VA = "0x1B23D4C")]
	public ItemPadModelController()
	{
	}
}
[Token(Token = "0x200017F")]
public class ParticleRootRemover : MonoBehaviour
{
	[Token(Token = "0x40007FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject destroyRoot;

	[Token(Token = "0x6000730")]
	[Address(RVA = "0x1B23E74", Offset = "0x1B23E74", VA = "0x1B23E74")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000731")]
	[Address(RVA = "0x1B23F2C", Offset = "0x1B23F2C", VA = "0x1B23F2C")]
	private void OnParticleSystemStopped()
	{
	}

	[Token(Token = "0x6000732")]
	[Address(RVA = "0x1B23FBC", Offset = "0x1B23FBC", VA = "0x1B23FBC")]
	public ParticleRootRemover()
	{
	}
}
[Token(Token = "0x2000180")]
public class ConstantModuleSelector : MonoBehaviour, IMedleyModuleSelector
{
	[Token(Token = "0x40007FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private MedleyModule _module;

	[Token(Token = "0x6000733")]
	[Address(RVA = "0x1B23FC4", Offset = "0x1B23FC4", VA = "0x1B23FC4", Slot = "4")]
	public MedleyModule GetNextModule()
	{
		return null;
	}

	[Token(Token = "0x6000734")]
	[Address(RVA = "0x1B23FCC", Offset = "0x1B23FCC", VA = "0x1B23FCC")]
	public ConstantModuleSelector()
	{
	}
}
[Token(Token = "0x2000181")]
[CreateAssetMenu(fileName = "GFMusicsMedleyModule", menuName = "ScriptableObjects/MedleyModule/GFMusicsMedleyModule", order = 1)]
public class GFMusicsMedleyModule : MedleyModule
{
	[Serializable]
	[Token(Token = "0x2000182")]
	private class GFSet
	{
		[Token(Token = "0x40007FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[RestrictedStringByEnum(typeof(GrooveFitGame))]
		public string GrooveFitGame;

		[Token(Token = "0x4000800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip BGM;

		[Token(Token = "0x4000801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextAsset MusicSheet;

		[Token(Token = "0x6000738")]
		[Address(RVA = "0x1B242C4", Offset = "0x1B242C4", VA = "0x1B242C4")]
		public GFSet()
		{
		}
	}

	[Token(Token = "0x40007FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Space(10f)]
	[SerializeField]
	private List<GFSet> GrooveFitsSettings;

	[Token(Token = "0x6000735")]
	[Address(RVA = "0x1B23FD4", Offset = "0x1B23FD4", VA = "0x1B23FD4", Slot = "4")]
	public override AudioClip GetClip(GrooveFitGame grooveFitGame)
	{
		return null;
	}

	[Token(Token = "0x6000736")]
	[Address(RVA = "0x1B24108", Offset = "0x1B24108", VA = "0x1B24108", Slot = "5")]
	public override TextAsset GetSheet(GrooveFitGame grooveFitGame)
	{
		return null;
	}

	[Token(Token = "0x6000737")]
	[Address(RVA = "0x1B2423C", Offset = "0x1B2423C", VA = "0x1B2423C")]
	public GFMusicsMedleyModule()
	{
	}
}
[Token(Token = "0x2000185")]
[CreateAssetMenu(fileName = "TroughoutModule", menuName = "ScriptableObjects/MedleyModule/TroughoutModule", order = 1)]
public class TroughoutModule : MedleyModule
{
	[Serializable]
	[Token(Token = "0x2000186")]
	private class GFSet
	{
		[Token(Token = "0x4000806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[RestrictedStringByEnum(typeof(GrooveFitGame))]
		public string GrooveFitGame;

		[Token(Token = "0x4000807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextAsset MusicSheet;

		[Token(Token = "0x6000740")]
		[Address(RVA = "0x1B24458", Offset = "0x1B24458", VA = "0x1B24458")]
		public GFSet()
		{
		}
	}

	[Token(Token = "0x4000804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Space(10f)]
	[SerializeField]
	private AudioClip Clip;

	[Token(Token = "0x4000805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private List<GFSet> GrooveFitsSettings;

	[Token(Token = "0x600073D")]
	[Address(RVA = "0x1B24314", Offset = "0x1B24314", VA = "0x1B24314", Slot = "4")]
	public override AudioClip GetClip(GrooveFitGame grooveFitGame)
	{
		return null;
	}

	[Token(Token = "0x600073E")]
	[Address(RVA = "0x1B2431C", Offset = "0x1B2431C", VA = "0x1B2431C", Slot = "5")]
	public override TextAsset GetSheet(GrooveFitGame grooveFitGame)
	{
		return null;
	}

	[Token(Token = "0x600073F")]
	[Address(RVA = "0x1B24450", Offset = "0x1B24450", VA = "0x1B24450")]
	public TroughoutModule()
	{
	}
}
[Token(Token = "0x2000188")]
public class DailyGrooveBlock : MonoBehaviour
{
	[Token(Token = "0x4000809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private MultilingualTextMeshPro _grooveFitNameText;

	[Token(Token = "0x400080A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TMP_Text _calorieSumText;

	[Token(Token = "0x400080B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Image _image;

	[Token(Token = "0x400080C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Image _difficultyJewel;

	[Token(Token = "0x400080D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private MultilingualTextMeshPro _difficultyText;

	[Token(Token = "0x400080E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Image _optionJewel;

	[Token(Token = "0x400080F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private MultilingualTextMeshPro _optionText;

	[Token(Token = "0x4000810")]
	private const string PATH_GFGAME_ICON = "GFGameIcons/";

	[Token(Token = "0x4000811")]
	private const string PATH_JEWEL_ICON = "JewelIcons/";

	[Token(Token = "0x6000743")]
	[Address(RVA = "0x1B24484", Offset = "0x1B24484", VA = "0x1B24484")]
	public void SetUp(PlayLogData data)
	{
	}

	[Token(Token = "0x6000744")]
	[Address(RVA = "0x1B24750", Offset = "0x1B24750", VA = "0x1B24750")]
	public DailyGrooveBlock()
	{
	}
}
[Token(Token = "0x2000189")]
public class DailyGrooveController : MonoBehaviour
{
	[Token(Token = "0x4000812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _dailyGrooveBlockPrefab;

	[Token(Token = "0x4000813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject _scrollContent;

	[Token(Token = "0x4000814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TMP_Text _dateText;

	[Token(Token = "0x4000815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private TMP_Text _calorieText;

	[Token(Token = "0x4000816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Inject]
	private DiContainer _container;

	[Token(Token = "0x6000745")]
	[Address(RVA = "0x1B24758", Offset = "0x1B24758", VA = "0x1B24758")]
	public void Initialize(List<PlayLogData> datalist, DateTime date)
	{
	}

	[Token(Token = "0x6000746")]
	[Address(RVA = "0x1B24A2C", Offset = "0x1B24A2C", VA = "0x1B24A2C")]
	public void OnClose()
	{
	}

	[Token(Token = "0x6000747")]
	[Address(RVA = "0x1B24980", Offset = "0x1B24980", VA = "0x1B24980")]
	private void MakeDailyGrooveBlock(PlayLogData data)
	{
	}

	[Token(Token = "0x6000748")]
	[Address(RVA = "0x1B24B08", Offset = "0x1B24B08", VA = "0x1B24B08")]
	public DailyGrooveController()
	{
	}
}
[Token(Token = "0x200018A")]
public class DailyRecordHist : MonoBehaviour
{
	[Token(Token = "0x4000817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Button _dailyRecordButton;

	[Token(Token = "0x4000818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TMP_Text _dateText;

	[Token(Token = "0x4000819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TMP_Text _calorieText;

	[Token(Token = "0x400081A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Color _color;

	[Token(Token = "0x400081B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Color _colorHigh;

	[Token(Token = "0x400081C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float _calorieSum;

	[Token(Token = "0x400081D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private readonly float _height_per_kcal;

	[Token(Token = "0x400081E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private readonly float _max_height;

	[Token(Token = "0x400081F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private readonly float _red_threshold;

	[Token(Token = "0x6000749")]
	[Address(RVA = "0x1B24B10", Offset = "0x1B24B10", VA = "0x1B24B10")]
	public void SetUp(List<PlayLogData> data, int idx, Action<DateTime> onclick)
	{
	}

	[Token(Token = "0x600074A")]
	[Address(RVA = "0x1B24E38", Offset = "0x1B24E38", VA = "0x1B24E38")]
	public void StartAnimate()
	{
	}

	[Token(Token = "0x600074B")]
	[Address(RVA = "0x1B24F94", Offset = "0x1B24F94", VA = "0x1B24F94")]
	public void ResetHeight()
	{
	}

	[Token(Token = "0x600074C")]
	[Address(RVA = "0x1B25070", Offset = "0x1B25070", VA = "0x1B25070")]
	public DailyRecordHist()
	{
	}
}
[Token(Token = "0x200018E")]
public class GrooveFitRecord : MonoBehaviour
{
	[Token(Token = "0x4000828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private MultilingualTextMeshPro _grooveFitNameText;

	[Token(Token = "0x4000829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Image _image;

	[Token(Token = "0x400082A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Button _button;

	[Token(Token = "0x400082B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GrooveFitGame _grooveFit;

	[Token(Token = "0x400082C")]
	private const string PATH = "GFGameIcons/";

	[Token(Token = "0x170000C0")]
	public GrooveFitGame GrooveFit
	{
		[Token(Token = "0x6000754")]
		[Address(RVA = "0x1B2525C", Offset = "0x1B2525C", VA = "0x1B2525C")]
		get
		{
			return default(GrooveFitGame);
		}
	}

	[Token(Token = "0x6000755")]
	[Address(RVA = "0x1B25264", Offset = "0x1B25264", VA = "0x1B25264")]
	public void SetUp(GrooveFitGame grooveFitGame, Action<GrooveFitGame> onclick)
	{
	}

	[Token(Token = "0x6000756")]
	[Address(RVA = "0x1B25458", Offset = "0x1B25458", VA = "0x1B25458")]
	public GrooveFitRecord()
	{
	}
}
[Token(Token = "0x2000190")]
public class GrooveFitRecordController : MonoBehaviour
{
	[Token(Token = "0x400082F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _grooveFitRecordPrefab;

	[Token(Token = "0x4000830")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject _scrollContent;

	[Token(Token = "0x4000831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Inject]
	private DiContainer _container;

	[Token(Token = "0x4000832")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GFIGameClearStateManager _stateManager;

	[Token(Token = "0x4000833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GrooveFitTableController _grooveFitTableController;

	[Token(Token = "0x4000834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private TouchPanelRouter _router;

	[Token(Token = "0x4000835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<GrooveFitGame> openedGFGames;

	[Token(Token = "0x4000836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _isInitialized;

	[Token(Token = "0x6000759")]
	[Address(RVA = "0x1B25488", Offset = "0x1B25488", VA = "0x1B25488")]
	private void Start()
	{
	}

	[Token(Token = "0x600075A")]
	[Address(RVA = "0x1B255D4", Offset = "0x1B255D4", VA = "0x1B255D4")]
	public void Initialize()
	{
	}

	[Token(Token = "0x600075B")]
	[Address(RVA = "0x1B25724", Offset = "0x1B25724", VA = "0x1B25724")]
	private void MakeGrooveFitRecord(GrooveFitGame gf)
	{
	}

	[Token(Token = "0x600075C")]
	[Address(RVA = "0x1B2582C", Offset = "0x1B2582C", VA = "0x1B2582C")]
	private void OnClickAction(GrooveFitGame gf)
	{
	}

	[Token(Token = "0x600075D")]
	[Address(RVA = "0x1B25C6C", Offset = "0x1B25C6C", VA = "0x1B25C6C")]
	public GrooveFitRecordController()
	{
	}
}
[Token(Token = "0x2000191")]
public class GrooveFitTableController : MonoBehaviour
{
	[StructLayout(3)]
	[Token(Token = "0x2000192")]
	[CompilerGenerated]
	private struct <InitializeAsync>d__13 : IAsyncStateMachine
	{
		[Token(Token = "0x4000843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncUniTaskMethodBuilder <>t__builder;

		[Token(Token = "0x4000845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GrooveFitTableController <>4__this;

		[Token(Token = "0x4000846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GrooveFitGame gf;

		[Token(Token = "0x4000847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UniTask<UserCalorieData>.Awaiter <>u__1;

		[Token(Token = "0x6000762")]
		[Address(RVA = "0x1B25F60", Offset = "0x1B25F60", VA = "0x1B25F60", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000763")]
		[Address(RVA = "0x1B26B60", Offset = "0x1B26B60", VA = "0x1B26B60", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x2000193")]
	[CompilerGenerated]
	private struct <RotateLoading>d__14 : IAsyncStateMachine
	{
		[Token(Token = "0x4000848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncUniTaskMethodBuilder <>t__builder;

		[Token(Token = "0x400084A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GrooveFitTableController <>4__this;

		[Token(Token = "0x400084B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CancellationToken token;

		[Token(Token = "0x400084C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UniTask.Awaiter <>u__1;

		[Token(Token = "0x6000764")]
		[Address(RVA = "0x1B26B6C", Offset = "0x1B26B6C", VA = "0x1B26B6C", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000765")]
		[Address(RVA = "0x1B270FC", Offset = "0x1B270FC", VA = "0x1B270FC", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x4000837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _tableObjects;

	[Token(Token = "0x4000838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private MultilingualTextMeshPro _grooceFitNameText;

	[Token(Token = "0x4000839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject _loadingImage;

	[Token(Token = "0x400083A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Image _image;

	[Token(Token = "0x400083B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Transform _endlessItem;

	[Token(Token = "0x400083C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private TMP_Text[] _calorieTexts;

	[Token(Token = "0x400083D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private CancellationTokenSource _cts;

	[Token(Token = "0x400083E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private CancellationTokenSource _loadCts;

	[Token(Token = "0x400083F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private UserCalorieData _userCalorieData;

	[Token(Token = "0x4000840")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool _isLoading;

	[Token(Token = "0x4000841")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool _isLoaded;

	[Token(Token = "0x4000842")]
	private const string PATH = "GFGameIcons/";

	[Token(Token = "0x600075E")]
	[Address(RVA = "0x1B25928", Offset = "0x1B25928", VA = "0x1B25928")]
	public void Initialize(GrooveFitGame gfGame)
	{
	}

	[Token(Token = "0x600075F")]
	[Address(RVA = "0x1B25C74", Offset = "0x1B25C74", VA = "0x1B25C74")]
	[AsyncStateMachine(typeof(<InitializeAsync>d__13))]
	private UniTask InitializeAsync(GrooveFitGame gf)
	{
		return default(UniTask);
	}

	[Token(Token = "0x6000760")]
	[Address(RVA = "0x1B25DD8", Offset = "0x1B25DD8", VA = "0x1B25DD8")]
	[AsyncStateMachine(typeof(<RotateLoading>d__14))]
	private UniTask RotateLoading(CancellationToken token)
	{
		return default(UniTask);
	}

	[Token(Token = "0x6000761")]
	[Address(RVA = "0x1B25F58", Offset = "0x1B25F58", VA = "0x1B25F58")]
	public GrooveFitTableController()
	{
	}
}
[Token(Token = "0x2000194")]
public class HistController : MonoBehaviour
{
	[StructLayout(3)]
	[Token(Token = "0x2000196")]
	[CompilerGenerated]
	private struct <Initialize>d__8 : IAsyncStateMachine
	{
		[Token(Token = "0x4000858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x400085A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HistController <>4__this;

		[Token(Token = "0x400085B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UniTask<List<List<PlayLogData>>>.Awaiter <>u__1;

		[Token(Token = "0x600076F")]
		[Address(RVA = "0x1B276EC", Offset = "0x1B276EC", VA = "0x1B276EC", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000770")]
		[Address(RVA = "0x1B27D00", Offset = "0x1B27D00", VA = "0x1B27D00", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x400084D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _dailyRecordHistPrefab;

	[Token(Token = "0x400084E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject RecordHists;

	[Token(Token = "0x400084F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private DailyGrooveController _dailyGrooveController;

	[Token(Token = "0x4000850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private TouchPanelRouter _router;

	[Token(Token = "0x4000851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Inject]
	private DiContainer _container;

	[Token(Token = "0x4000852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Dictionary<DateTime, List<PlayLogData>> _playLogDataPerDayCache;

	[Token(Token = "0x4000853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool _isInitialized;

	[Token(Token = "0x4000854")]
	private const bool UseFirebase = true;

	[Token(Token = "0x6000766")]
	[Address(RVA = "0x1B27108", Offset = "0x1B27108", VA = "0x1B27108")]
	[AsyncStateMachine(typeof(<Initialize>d__8))]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000767")]
	[Address(RVA = "0x1B271C0", Offset = "0x1B271C0", VA = "0x1B271C0")]
	public void OnClose()
	{
	}

	[Token(Token = "0x6000768")]
	[Address(RVA = "0x1B27308", Offset = "0x1B27308", VA = "0x1B27308")]
	private static List<List<PlayLogData>> GetHistData(DateTime dateTime, int days = 7)
	{
		return null;
	}

	[Token(Token = "0x6000769")]
	[Address(RVA = "0x1B27418", Offset = "0x1B27418", VA = "0x1B27418")]
	private void MakeRecordHist(List<PlayLogData> data, int idx)
	{
	}

	[Token(Token = "0x600076A")]
	[Address(RVA = "0x1B2757C", Offset = "0x1B2757C", VA = "0x1B2757C")]
	public HistController()
	{
	}
}
[Token(Token = "0x200019A")]
public class PartyEntranceCallbacks : MonoNetworkRunnerCallbacks
{
	[Token(Token = "0x6000778")]
	[Address(RVA = "0x1B2848C", Offset = "0x1B2848C", VA = "0x1B2848C", Slot = "33")]
	public override void OnSessionListUpdated(NetworkRunner runner, List<SessionInfo> sessionList)
	{
	}

	[Token(Token = "0x6000779")]
	[Address(RVA = "0x1B285FC", Offset = "0x1B285FC", VA = "0x1B285FC")]
	public PartyEntranceCallbacks()
	{
	}
}
[Token(Token = "0x200019B")]
public class PartyEntranceModel : MonoBehaviour
{
	[StructLayout(3)]
	[Token(Token = "0x200019C")]
	[CompilerGenerated]
	private struct <Update>d__4 : IAsyncStateMachine
	{
		[Token(Token = "0x4000867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x4000869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PartyEntranceModel <>4__this;

		[Token(Token = "0x400086A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UniTask<StartGameResult>.Awaiter <>u__1;

		[Token(Token = "0x600077F")]
		[Address(RVA = "0x1B2898C", Offset = "0x1B2898C", VA = "0x1B2898C", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000780")]
		[Address(RVA = "0x1B29854", Offset = "0x1B29854", VA = "0x1B29854", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x4000864")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Inject]
	private RunnerManagerProvider _runnerManagerProvider;

	[Token(Token = "0x4000865")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GFNetworkManager _networkManager;

	[Token(Token = "0x4000866")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private int _maxPlayerCount;

	[Token(Token = "0x600077A")]
	[Address(RVA = "0x1B28604", Offset = "0x1B28604", VA = "0x1B28604")]
	private void Start()
	{
	}

	[Token(Token = "0x600077B")]
	[Address(RVA = "0x1B28728", Offset = "0x1B28728", VA = "0x1B28728")]
	[AsyncStateMachine(typeof(<Update>d__4))]
	private void Update()
	{
	}

	[Token(Token = "0x600077C")]
	[Address(RVA = "0x1B287E0", Offset = "0x1B287E0", VA = "0x1B287E0")]
	public PartyEntranceModel()
	{
	}
}
[Token(Token = "0x200019F")]
public class PartyEntrancePresenter
{
	[Token(Token = "0x4000875")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PartyEntrancePresenter _instance;

	[Token(Token = "0x4000876")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private readonly Subject<GameMode> _startGameSubject;

	[Token(Token = "0x4000877")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly Subject<PartyEntranceWindow> _changeLobbyWindowSubject;

	[Token(Token = "0x4000878")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private readonly Subject<List<SessionInfo>> _sessionListAcquiredSubject;

	[Token(Token = "0x4000879")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Subject<SessionInfo> _clientJoinSessionSubject;

	[Token(Token = "0x170000C1")]
	public static PartyEntrancePresenter Instance
	{
		[Token(Token = "0x6000785")]
		[Address(RVA = "0x1B2857C", Offset = "0x1B2857C", VA = "0x1B2857C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000C2")]
	public IObserver<GameMode> StartGamePublisher
	{
		[Token(Token = "0x6000787")]
		[Address(RVA = "0x1B2A96C", Offset = "0x1B2A96C", VA = "0x1B2A96C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000C3")]
	public IObservable<GameMode> OnStartGame
	{
		[Token(Token = "0x6000788")]
		[Address(RVA = "0x1B2A974", Offset = "0x1B2A974", VA = "0x1B2A974")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000C4")]
	public IObserver<PartyEntranceWindow> ChangeEntranceWindowPublisher
	{
		[Token(Token = "0x6000789")]
		[Address(RVA = "0x1B2A97C", Offset = "0x1B2A97C", VA = "0x1B2A97C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000C5")]
	public IObservable<PartyEntranceWindow> OnChangeEntranceWindow
	{
		[Token(Token = "0x600078A")]
		[Address(RVA = "0x1B2A984", Offset = "0x1B2A984", VA = "0x1B2A984")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000C6")]
	public IObserver<List<SessionInfo>> SessionListAcquiredPublisher
	{
		[Token(Token = "0x600078B")]
		[Address(RVA = "0x1B2A98C", Offset = "0x1B2A98C", VA = "0x1B2A98C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000C7")]
	public IObservable<List<SessionInfo>> OnSessionListAcquired
	{
		[Token(Token = "0x600078C")]
		[Address(RVA = "0x1B2A994", Offset = "0x1B2A994", VA = "0x1B2A994")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000C8")]
	public IObserver<SessionInfo> ClientJoinSessionPublisher
	{
		[Token(Token = "0x600078D")]
		[Address(RVA = "0x1B2A99C", Offset = "0x1B2A99C", VA = "0x1B2A99C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000C9")]
	public IObservable<SessionInfo> OnClientJoinSession
	{
		[Token(Token = "0x600078E")]
		[Address(RVA = "0x1B2A9A4", Offset = "0x1B2A9A4", VA = "0x1B2A9A4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000786")]
	[Address(RVA = "0x1B2A7F4", Offset = "0x1B2A7F4", VA = "0x1B2A7F4")]
	private PartyEntrancePresenter()
	{
	}
}
[Token(Token = "0x20001A0")]
public class PartyEntranceSessionBlock : MonoBehaviour
{
	[Token(Token = "0x400087A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Button _sessionButton;

	[Token(Token = "0x400087B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TMP_Text _sessionNameText;

	[Token(Token = "0x400087C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SessionInfo _sessionInfo;

	[Token(Token = "0x600078F")]
	[Address(RVA = "0x1B2A9AC", Offset = "0x1B2A9AC", VA = "0x1B2A9AC")]
	public void Initialize(SessionInfo sessionInfo)
	{
	}

	[Token(Token = "0x6000790")]
	[Address(RVA = "0x1B2A9F0", Offset = "0x1B2A9F0", VA = "0x1B2A9F0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000791")]
	[Address(RVA = "0x1B2AA84", Offset = "0x1B2AA84", VA = "0x1B2AA84")]
	public PartyEntranceSessionBlock()
	{
	}
}
[Token(Token = "0x20001A1")]
public class PartyEntranceUIManager : MonoBehaviour
{
	[Token(Token = "0x400087D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Button _hostButton;

	[Token(Token = "0x400087E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Button _clientButton;

	[Token(Token = "0x400087F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject _cover;

	[Token(Token = "0x4000880")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject _selectCanvas;

	[Token(Token = "0x4000881")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject _lobbyCanvas;

	[Token(Token = "0x4000882")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject _content;

	[Token(Token = "0x4000883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private PartyEntranceSessionBlock _sessionBlock;

	[Token(Token = "0x6000793")]
	[Address(RVA = "0x1B2AB3C", Offset = "0x1B2AB3C", VA = "0x1B2AB3C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000794")]
	[Address(RVA = "0x1B2ADD0", Offset = "0x1B2ADD0", VA = "0x1B2ADD0")]
	private void ManageWindow(PartyEntranceWindow window)
	{
	}

	[Token(Token = "0x6000795")]
	[Address(RVA = "0x1B2AEB0", Offset = "0x1B2AEB0", VA = "0x1B2AEB0")]
	private void MakeSessionList(List<SessionInfo> sessionList)
	{
	}

	[Token(Token = "0x6000796")]
	[Address(RVA = "0x1B2B288", Offset = "0x1B2B288", VA = "0x1B2B288")]
	public PartyEntranceUIManager()
	{
	}
}
[Token(Token = "0x20001A3")]
public enum PartyEntranceWindow
{
	[Token(Token = "0x4000888")]
	None,
	[Token(Token = "0x4000889")]
	Select,
	[Token(Token = "0x400088A")]
	Lobby,
	[Token(Token = "0x400088B")]
	Covered
}
[Token(Token = "0x20001A4")]
public class PartyLobbyCallbacks : MonoNetworkRunnerCallbacks
{
	[Token(Token = "0x400088C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private PartyLobbyModel _lobbyModelPrefab;

	[Token(Token = "0x400088D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly float _initialWaitSeconds;

	[Token(Token = "0x400088E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private readonly float _addWaitSeconds;

	[Token(Token = "0x400088F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private PartyLobbyModel _lobbyModel;

	[Token(Token = "0x600079D")]
	[Address(RVA = "0x1B2B450", Offset = "0x1B2B450", VA = "0x1B2B450", Slot = "23")]
	public override void OnPlayerJoined(NetworkRunner runner, PlayerRef player)
	{
	}

	[Token(Token = "0x600079E")]
	[Address(RVA = "0x1B2B4F0", Offset = "0x1B2B4F0", VA = "0x1B2B4F0", Slot = "37")]
	public override void OnSceneLoadDone(NetworkRunner runner)
	{
	}

	[Token(Token = "0x600079F")]
	[Address(RVA = "0x1B2B70C", Offset = "0x1B2B70C", VA = "0x1B2B70C")]
	public PartyLobbyCallbacks()
	{
	}
}
[Token(Token = "0x20001A5")]
public class PartyLobbyPresenter
{
	[Token(Token = "0x4000890")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PartyLobbyPresenter _instance;

	[Token(Token = "0x4000891")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private readonly Subject<float> _lobbyWaitTimeUpdatedSubject;

	[Token(Token = "0x4000892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly Subject<bool> _preparedSubject;

	[Token(Token = "0x4000893")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private readonly Subject<bool> _prepareStateUpdatedSubject;

	[Token(Token = "0x170000CA")]
	public static PartyLobbyPresenter Instance
	{
		[Token(Token = "0x60007A1")]
		[Address(RVA = "0x1B2B784", Offset = "0x1B2B784", VA = "0x1B2B784")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000CB")]
	public IObserver<float> LobbyWaitTimeUpdatedPublisher
	{
		[Token(Token = "0x60007A3")]
		[Address(RVA = "0x1B2B90C", Offset = "0x1B2B90C", VA = "0x1B2B90C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000CC")]
	public IObservable<float> OnLobbyWaitTimeUpdated
	{
		[Token(Token = "0x60007A4")]
		[Address(RVA = "0x1B2B914", Offset = "0x1B2B914", VA = "0x1B2B914")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000CD")]
	public IObserver<bool> PreparedPublisher
	{
		[Token(Token = "0x60007A5")]
		[Address(RVA = "0x1B2B91C", Offset = "0x1B2B91C", VA = "0x1B2B91C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000CE")]
	public IObservable<bool> OnPrepared
	{
		[Token(Token = "0x60007A6")]
		[Address(RVA = "0x1B2B924", Offset = "0x1B2B924", VA = "0x1B2B924")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000CF")]
	public IObserver<bool> PrepareStateUpdatedPublisher
	{
		[Token(Token = "0x60007A7")]
		[Address(RVA = "0x1B2B92C", Offset = "0x1B2B92C", VA = "0x1B2B92C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000D0")]
	public IObservable<bool> OnPrepareStateUpdated
	{
		[Token(Token = "0x60007A8")]
		[Address(RVA = "0x1B2B934", Offset = "0x1B2B934", VA = "0x1B2B934")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60007A2")]
	[Address(RVA = "0x1B2B804", Offset = "0x1B2B804", VA = "0x1B2B804")]
	private PartyLobbyPresenter()
	{
	}
}
[Token(Token = "0x20001A6")]
public class PartyLobbyUIManager : MonoBehaviour
{
	[Token(Token = "0x4000894")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Button _prepareButton;

	[Token(Token = "0x4000895")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TextMeshProUGUI _lobbyTimerText;

	[Token(Token = "0x60007A9")]
	[Address(RVA = "0x1B2B93C", Offset = "0x1B2B93C", VA = "0x1B2B93C")]
	private void Start()
	{
	}

	[Token(Token = "0x60007AA")]
	[Address(RVA = "0x1B2BB28", Offset = "0x1B2BB28", VA = "0x1B2BB28")]
	private void Update()
	{
	}

	[Token(Token = "0x60007AB")]
	[Address(RVA = "0x1B2BB68", Offset = "0x1B2BB68", VA = "0x1B2BB68")]
	public PartyLobbyUIManager()
	{
	}
}
[Token(Token = "0x20001A8")]
public class DelayEventBlock : EventBlock
{
	[StructLayout(3)]
	[Token(Token = "0x20001A9")]
	[CompilerGenerated]
	private struct <SetEvent>d__1 : IAsyncStateMachine
	{
		[Token(Token = "0x4000899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x400089A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncUniTaskMethodBuilder<bool> <>t__builder;

		[Token(Token = "0x400089B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DelayEventBlock <>4__this;

		[Token(Token = "0x400089C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CancellationToken token;

		[Token(Token = "0x400089D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UniTask.Awaiter <>u__1;

		[Token(Token = "0x60007B3")]
		[Address(RVA = "0x1B2BEA8", Offset = "0x1B2BEA8", VA = "0x1B2BEA8", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x60007B4")]
		[Address(RVA = "0x1B2C324", Offset = "0x1B2C324", VA = "0x1B2C324", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x4000898")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float _delaySecond;

	[Token(Token = "0x60007B1")]
	[Address(RVA = "0x1B2BDC4", Offset = "0x1B2BDC4", VA = "0x1B2BDC4", Slot = "4")]
	[AsyncStateMachine(typeof(<SetEvent>d__1))]
	public override UniTask<bool> SetEvent(CancellationToken token)
	{
		return default(UniTask<bool>);
	}

	[Token(Token = "0x60007B2")]
	[Address(RVA = "0x1B2BEA0", Offset = "0x1B2BEA0", VA = "0x1B2BEA0")]
	public DelayEventBlock()
	{
	}
}
[Token(Token = "0x20001AA")]
public class SimpleUnityEventBlock : EventBlock
{
	[StructLayout(3)]
	[Token(Token = "0x20001AB")]
	[CompilerGenerated]
	private struct <SetEvent>d__1 : IAsyncStateMachine
	{
		[Token(Token = "0x400089F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x40008A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncUniTaskMethodBuilder<bool> <>t__builder;

		[Token(Token = "0x40008A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SimpleUnityEventBlock <>4__this;

		[Token(Token = "0x40008A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CancellationToken token;

		[Token(Token = "0x40008A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UniTask.Awaiter <>u__1;

		[Token(Token = "0x60007B7")]
		[Address(RVA = "0x1B2C460", Offset = "0x1B2C460", VA = "0x1B2C460", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x60007B8")]
		[Address(RVA = "0x1B2C8A0", Offset = "0x1B2C8A0", VA = "0x1B2C8A0", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x400089E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private UnityEvent _event;

	[Token(Token = "0x60007B5")]
	[Address(RVA = "0x1B2C37C", Offset = "0x1B2C37C", VA = "0x1B2C37C", Slot = "4")]
	[AsyncStateMachine(typeof(<SetEvent>d__1))]
	public override UniTask<bool> SetEvent(CancellationToken token)
	{
		return default(UniTask<bool>);
	}

	[Token(Token = "0x60007B6")]
	[Address(RVA = "0x1B2C458", Offset = "0x1B2C458", VA = "0x1B2C458")]
	public SimpleUnityEventBlock()
	{
	}
}
[Token(Token = "0x20001AC")]
public class KeyboardPosition : MonoBehaviour
{
	[Token(Token = "0x40008A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject[] Mallet;

	[Token(Token = "0x40008A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float _distanceKeyboard;

	[Token(Token = "0x40008A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float _offsetY;

	[Token(Token = "0x40008A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Inject]
	private InputProvider _inputProvider;

	[Token(Token = "0x40008A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 _keyboardPosition;

	[Token(Token = "0x60007B9")]
	[Address(RVA = "0x1B2C8F8", Offset = "0x1B2C8F8", VA = "0x1B2C8F8")]
	private void Start()
	{
	}

	[Token(Token = "0x60007BA")]
	[Address(RVA = "0x1B2C944", Offset = "0x1B2C944", VA = "0x1B2C944")]
	private void Update()
	{
	}

	[Token(Token = "0x60007BB")]
	[Address(RVA = "0x1B2C9C8", Offset = "0x1B2C9C8", VA = "0x1B2C9C8")]
	public KeyboardPosition()
	{
	}
}
[Token(Token = "0x20001AD")]
public class FixedDeltaTimeManager : MonoBehaviour
{
	[Token(Token = "0x40008A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("If true, the fixed time step will be averaged by FPS")]
	public bool SmoothFixedTimeStep;

	[Token(Token = "0x40008AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Tooltip("Amount of frames to average time step over")]
	public int FrameSamples;

	[Token(Token = "0x40008AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("Minimum time step allowed")]
	public int MinTimeStep;

	[Token(Token = "0x40008AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Tooltip("Maximum time step allowed")]
	public int MaxTimeStep;

	[Token(Token = "0x40008AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private CircularBuffer<float> _buffer;

	[Token(Token = "0x40008AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float averageFrameDelta;

	[Token(Token = "0x40008AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float timer;

	[Token(Token = "0x170000D1")]
	private float RefreshRate
	{
		[Token(Token = "0x60007BC")]
		[Address(RVA = "0x1B2C9D0", Offset = "0x1B2C9D0", VA = "0x1B2C9D0")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60007BD")]
		[Address(RVA = "0x1B2C9D8", Offset = "0x1B2C9D8", VA = "0x1B2C9D8")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x60007BE")]
	[Address(RVA = "0x1B2C9E0", Offset = "0x1B2C9E0", VA = "0x1B2C9E0")]
	private void Start()
	{
	}

	[Token(Token = "0x60007BF")]
	[Address(RVA = "0x1B2CA64", Offset = "0x1B2CA64", VA = "0x1B2CA64")]
	private void Update()
	{
	}

	[Token(Token = "0x60007C0")]
	[Address(RVA = "0x1B2CC68", Offset = "0x1B2CC68", VA = "0x1B2CC68")]
	private void SetTimeStep()
	{
	}

	[Token(Token = "0x60007C1")]
	[Address(RVA = "0x1B2CCA8", Offset = "0x1B2CCA8", VA = "0x1B2CCA8")]
	public FixedDeltaTimeManager()
	{
	}
}
[Token(Token = "0x20001AE")]
public class ModelSwitcherReleasePlatform : MonoBehaviour
{
	[Token(Token = "0x40008B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _steam;

	[Token(Token = "0x40008B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject _standalone;

	[Token(Token = "0x60007C2")]
	[Address(RVA = "0x1B2CCCC", Offset = "0x1B2CCCC", VA = "0x1B2CCCC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007C3")]
	[Address(RVA = "0x1B2CD04", Offset = "0x1B2CD04", VA = "0x1B2CD04")]
	public ModelSwitcherReleasePlatform()
	{
	}
}
[Token(Token = "0x20001AF")]
public class ProteinSet : MonoBehaviour
{
	[Token(Token = "0x40008B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TMP_Text _text;

	[Token(Token = "0x40008B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private LanguageProteinInteraction _protein;

	[Token(Token = "0x60007C4")]
	[Address(RVA = "0x1B2CD0C", Offset = "0x1B2CD0C", VA = "0x1B2CD0C")]
	public void SetTo(LanguageSetting.Language lang, [CanBeNull] SettingLanguageEvent settingLanguageEvent)
	{
	}

	[Token(Token = "0x60007C5")]
	[Address(RVA = "0x1B2D180", Offset = "0x1B2D180", VA = "0x1B2D180")]
	public ProteinSet()
	{
	}
}
[Token(Token = "0x20001B0")]
public class ProteinShelf : MonoBehaviour
{
	[Token(Token = "0x40008B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly LanguageSetting.Language[] LEFT_HIGH;

	[Token(Token = "0x40008B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly LanguageSetting.Language[] LEFT_LOW;

	[Token(Token = "0x40008B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly LanguageSetting.Language[] RIGHT_HIGH;

	[Token(Token = "0x40008B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly LanguageSetting.Language[] RIGHT_LOW;

	[Token(Token = "0x40008B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _ProteinSetPrefab;

	[Token(Token = "0x40008BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform _leftHighPivot;

	[Token(Token = "0x40008BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform _leftLowPivot;

	[Token(Token = "0x40008BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform _rightHighPivot;

	[Token(Token = "0x40008BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Transform _rightLowPivot;

	[Token(Token = "0x40008BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float _shelfWidth;

	[Token(Token = "0x40008BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	[CanBeNull]
	[Tooltip("S2->SetLanguageEvent, S3->Null")]
	private SettingLanguageEvent _settingLanguageEvent;

	[Token(Token = "0x40008C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Inject]
	private DiContainer _container;

	[Token(Token = "0x60007C6")]
	[Address(RVA = "0x1B2D188", Offset = "0x1B2D188", VA = "0x1B2D188")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007C7")]
	[Address(RVA = "0x1B2D238", Offset = "0x1B2D238", VA = "0x1B2D238")]
	private void SetProteins(Transform pivot, LanguageSetting.Language[] languages)
	{
	}

	[Token(Token = "0x60007C8")]
	[Address(RVA = "0x1B2D3FC", Offset = "0x1B2D3FC", VA = "0x1B2D3FC")]
	public ProteinShelf()
	{
	}
}
[Token(Token = "0x20001B1")]
public class AudienceModeOnly : MonoBehaviour
{
	[Token(Token = "0x40008C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Inject]
	private MonitorMode _audienceMode;

	[Token(Token = "0x40008C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool _isPlayerModeOnly;

	[Token(Token = "0x60007CA")]
	[Address(RVA = "0x1B2D54C", Offset = "0x1B2D54C", VA = "0x1B2D54C")]
	private void Start()
	{
	}

	[Token(Token = "0x60007CB")]
	[Address(RVA = "0x1B2D5F8", Offset = "0x1B2D5F8", VA = "0x1B2D5F8")]
	public AudienceModeOnly()
	{
	}
}
[Token(Token = "0x20001B2")]
public class ComboLifeThirdViewUI : MonoBehaviour
{
	[Token(Token = "0x60007CD")]
	[Address(RVA = "0x1B2D640", Offset = "0x1B2D640", VA = "0x1B2D640")]
	public ComboLifeThirdViewUI()
	{
	}
}
[Token(Token = "0x20001B3")]
public class MonitorMode
{
	[Token(Token = "0x170000D2")]
	public BoolReactiveProperty IsAudience
	{
		[Token(Token = "0x60007CF")]
		[Address(RVA = "0x1B2D6F4", Offset = "0x1B2D6F4", VA = "0x1B2D6F4")]
		[CompilerGenerated]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60007CE")]
	[Address(RVA = "0x1B2D648", Offset = "0x1B2D648", VA = "0x1B2D648")]
	public MonitorMode()
	{
	}

	[Token(Token = "0x60007D0")]
	[Address(RVA = "0x1B2D6FC", Offset = "0x1B2D6FC", VA = "0x1B2D6FC")]
	public void ChangeMode()
	{
	}

	[Token(Token = "0x60007D1")]
	[Address(RVA = "0x1B2D750", Offset = "0x1B2D750", VA = "0x1B2D750")]
	public void ChangeMode(bool to)
	{
	}
}
[Token(Token = "0x20001B4")]
public class TouchPanelButtonSoundPublisher : MonoBehaviour, IAutoSetUp
{
	[Token(Token = "0x40008C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Inject]
	private IPublisher<TouchPanelActionData> _actionPublisher;

	[Token(Token = "0x40008C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("Auto Setup References")]
	[SerializeField]
	private TouchPanelRouter _parentRouter;

	[Token(Token = "0x60007D2")]
	[Address(RVA = "0x1B2D7A8", Offset = "0x1B2D7A8", VA = "0x1B2D7A8")]
	private void Start()
	{
	}

	[Token(Token = "0x60007D3")]
	[Address(RVA = "0x1B2D8D0", Offset = "0x1B2D8D0", VA = "0x1B2D8D0", Slot = "4")]
	public void AutoSetUp()
	{
	}

	[Token(Token = "0x60007D4")]
	[Address(RVA = "0x1B2D9F8", Offset = "0x1B2D9F8", VA = "0x1B2D9F8")]
	public TouchPanelButtonSoundPublisher()
	{
	}
}
[Token(Token = "0x20001B5")]
public class BPMShiftAudioSource : MonoBehaviour
{
	[Token(Token = "0x20001B6")]
	private enum SoundType
	{
		[Token(Token = "0x40008CC")]
		Music,
		[Token(Token = "0x40008CD")]
		SE,
		[Token(Token = "0x40008CE")]
		Voice
	}

	[Token(Token = "0x40008C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioSource _source;

	[Token(Token = "0x40008C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private SoundType _type;

	[Token(Token = "0x40008C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float _currentMusicBPM;

	[Token(Token = "0x40008C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _bpmRate;

	[Token(Token = "0x40008CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Inject]
	private ISubscriber<BPMData> _bpmSubscriber;

	[Token(Token = "0x60007D6")]
	[Address(RVA = "0x1B2DADC", Offset = "0x1B2DADC", VA = "0x1B2DADC")]
	private void Start()
	{
	}

	[Token(Token = "0x60007D7")]
	[Address(RVA = "0x1B2DD5C", Offset = "0x1B2DD5C", VA = "0x1B2DD5C")]
	private void SetBPM(float bpm)
	{
	}

	[Token(Token = "0x60007D8")]
	[Address(RVA = "0x1B2DD64", Offset = "0x1B2DD64", VA = "0x1B2DD64")]
	private void SetPitch(float originalBPM)
	{
	}

	[Token(Token = "0x60007D9")]
	[Address(RVA = "0x1B2DED0", Offset = "0x1B2DED0", VA = "0x1B2DED0")]
	public void PlayOneShot(AudioClip clip, float originalBPMofClip)
	{
	}

	[Token(Token = "0x60007DA")]
	[Address(RVA = "0x1B2DF04", Offset = "0x1B2DF04", VA = "0x1B2DF04")]
	public void Stop()
	{
	}

	[Token(Token = "0x60007DB")]
	[Address(RVA = "0x1B2DC84", Offset = "0x1B2DC84", VA = "0x1B2DC84")]
	private string SoundGroupName(SoundType type)
	{
		return null;
	}

	[Token(Token = "0x60007DC")]
	[Address(RVA = "0x1B2DDF8", Offset = "0x1B2DDF8", VA = "0x1B2DDF8")]
	private string PitchParamName(SoundType type)
	{
		return null;
	}

	[Token(Token = "0x60007DD")]
	[Address(RVA = "0x1B2DF20", Offset = "0x1B2DF20", VA = "0x1B2DF20")]
	public BPMShiftAudioSource()
	{
	}
}
[Token(Token = "0x20001B7")]
public abstract class JudgeActionBase : FitPatternBeatSubscriber
{
	[Token(Token = "0x170000D3")]
	[Inject]
	public IPublisher<FPActionData> FPActionMessage
	{
		[Token(Token = "0x60007DF")]
		[Address(RVA = "0x1B2DF4C", Offset = "0x1B2DF4C", VA = "0x1B2DF4C")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60007E0")]
		[Address(RVA = "0x1B2DF54", Offset = "0x1B2DF54", VA = "0x1B2DF54")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x60007E1")]
	[Address(RVA = "0x1B2DF5C", Offset = "0x1B2DF5C", VA = "0x1B2DF5C")]
	protected JudgeActionBase()
	{
	}
}
[Token(Token = "0x20001B8")]
public class GFGamePlayTimeAchievement : MonoBehaviour
{
	[Token(Token = "0x40008D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Inject]
	private ISubscriber<OnMusicGame> _subscriber;

	[Token(Token = "0x40008D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float _valuePerSecond;

	[Token(Token = "0x40008D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[RestrictedStringByEnum(typeof(AchvCountUpFloat))]
	private string _key;

	[Token(Token = "0x40008D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _isOnGame;

	[Token(Token = "0x40008D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float value;

	[Token(Token = "0x60007E2")]
	[Address(RVA = "0x1B2DF64", Offset = "0x1B2DF64", VA = "0x1B2DF64")]
	private void Start()
	{
	}

	[Token(Token = "0x60007E3")]
	[Address(RVA = "0x1B2E090", Offset = "0x1B2E090", VA = "0x1B2E090")]
	private void Update()
	{
	}

	[Token(Token = "0x60007E4")]
	[Address(RVA = "0x1B2E0CC", Offset = "0x1B2E0CC", VA = "0x1B2E0CC")]
	public GFGamePlayTimeAchievement()
	{
	}
}
[Token(Token = "0x20001B9")]
public class RankingRowParams : MonoBehaviour
{
	[Token(Token = "0x40008D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI _num;

	[Token(Token = "0x40008D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI _name;

	[Token(Token = "0x40008D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshProUGUI _value;

	[Token(Token = "0x60007E6")]
	[Address(RVA = "0x1B2E240", Offset = "0x1B2E240", VA = "0x1B2E240")]
	public RankingRowParams()
	{
	}
}
[Token(Token = "0x20001BA")]
public class ThirdViewCameraCollidersManager : SingletonMonoBehaviour<ThirdViewCameraCollidersManager>
{
	[Token(Token = "0x40008D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform _front;

	[Token(Token = "0x40008D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform _back;

	[Token(Token = "0x40008DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform _top;

	[Token(Token = "0x40008DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform _bottom;

	[Token(Token = "0x40008DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Transform _left;

	[Token(Token = "0x40008DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Transform _right;

	[Token(Token = "0x40008DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private readonly bool _dontDestroyOnLoad;

	[Token(Token = "0x170000D4")]
	protected override bool dontDestroyOnLoad
	{
		[Token(Token = "0x60007E7")]
		[Address(RVA = "0x1B2E248", Offset = "0x1B2E248", VA = "0x1B2E248", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60007E8")]
	[Address(RVA = "0x1B2E250", Offset = "0x1B2E250", VA = "0x1B2E250")]
	private void Start()
	{
	}

	[Token(Token = "0x60007E9")]
	[Address(RVA = "0x1B2E258", Offset = "0x1B2E258", VA = "0x1B2E258")]
	public void SetActiveRenderers(bool active)
	{
	}

	[Token(Token = "0x60007EA")]
	[Address(RVA = "0x1B2E304", Offset = "0x1B2E304", VA = "0x1B2E304")]
	public List<Vector3> WallTransforms()
	{
		return null;
	}

	[Token(Token = "0x60007EB")]
	[Address(RVA = "0x1B2E614", Offset = "0x1B2E614", VA = "0x1B2E614")]
	public ThirdViewCameraCollidersManager()
	{
	}
}
[Token(Token = "0x20001BB")]
public class TennisBallInfo : MonoBehaviour
{
	[Token(Token = "0x40008DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RhythmTennisInputKeys InputKey;

	[Token(Token = "0x60007EC")]
	[Address(RVA = "0x1B2E65C", Offset = "0x1B2E65C", VA = "0x1B2E65C")]
	public TennisBallInfo()
	{
	}
}
[Token(Token = "0x20001BC")]
public class FishingGroundChangerWhenPause : MonoBehaviour
{
	[Token(Token = "0x40008E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Material _wireframe;

	[Token(Token = "0x40008E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _skinedMesh;

	[Token(Token = "0x40008E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Renderer _renderer;

	[Token(Token = "0x40008E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Material[] _materials;

	[Token(Token = "0x40008E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MeshFilter _meshFilter;

	[Token(Token = "0x170000D5")]
	[Inject]
	private ISubscriber<OnPause> OnPauseEvent
	{
		[Token(Token = "0x60007ED")]
		[Address(RVA = "0x1B2E664", Offset = "0x1B2E664", VA = "0x1B2E664")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60007EE")]
		[Address(RVA = "0x1B2E66C", Offset = "0x1B2E66C", VA = "0x1B2E66C")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x60007EF")]
	[Address(RVA = "0x1B2E674", Offset = "0x1B2E674", VA = "0x1B2E674")]
	private void Start()
	{
	}

	[Token(Token = "0x60007F0")]
	[Address(RVA = "0x1B2E86C", Offset = "0x1B2E86C", VA = "0x1B2E86C")]
	private void OnWireFrame(Material wireframe)
	{
	}

	[Token(Token = "0x60007F1")]
	[Address(RVA = "0x1B2E978", Offset = "0x1B2E978", VA = "0x1B2E978")]
	private void OffWireFrame()
	{
	}

	[Token(Token = "0x60007F2")]
	[Address(RVA = "0x1B2E9F8", Offset = "0x1B2E9F8", VA = "0x1B2E9F8")]
	public FishingGroundChangerWhenPause()
	{
	}
}
[Token(Token = "0x20001BD")]
public class EffectDelete : MonoBehaviour
{
	[Token(Token = "0x40008E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float _effectDeleteTime;

	[Token(Token = "0x40008E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float _time;

	[Token(Token = "0x60007F4")]
	[Address(RVA = "0x1B2EA38", Offset = "0x1B2EA38", VA = "0x1B2EA38")]
	private void Update()
	{
	}

	[Token(Token = "0x60007F5")]
	[Address(RVA = "0x1B2EADC", Offset = "0x1B2EADC", VA = "0x1B2EADC")]
	public EffectDelete()
	{
	}
}
[Token(Token = "0x20001BE")]
public class ParaParaCaribration : MonoBehaviour
{
	[Token(Token = "0x40008E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _habatakiArea;

	[Token(Token = "0x40008E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject _nagashiRightArea;

	[Token(Token = "0x40008EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject _nagashiLeftArea;

	[Token(Token = "0x40008EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject _finishRightArea;

	[Token(Token = "0x40008EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject _finishLeftArea;

	[Token(Token = "0x40008ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float _rightHandLength;

	[Token(Token = "0x40008EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float _leftHandLength;

	[Token(Token = "0x40008EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private readonly float _baseLength;

	[Token(Token = "0x60007F6")]
	[Address(RVA = "0x1B2EAEC", Offset = "0x1B2EAEC", VA = "0x1B2EAEC")]
	private void Start()
	{
	}

	[Token(Token = "0x60007F7")]
	[Address(RVA = "0x1B2EE08", Offset = "0x1B2EE08", VA = "0x1B2EE08")]
	public ParaParaCaribration()
	{
	}
}
[Token(Token = "0x20001BF")]
[RequireComponent(typeof(GrooveFitAudioSource))]
public class SilverManChargeSoundPlayer : MonoBehaviour
{
	[StructLayout(3)]
	[Token(Token = "0x20001C0")]
	[CompilerGenerated]
	private struct <SetNewBPM>d__15 : IAsyncStateMachine
	{
		[Token(Token = "0x40008F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x40008FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x40008FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SilverManChargeSoundPlayer <>4__this;

		[Token(Token = "0x40008FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public BPMData bpmData;

		[Token(Token = "0x40008FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private UniTask.Awaiter <>u__1;

		[Token(Token = "0x6000803")]
		[Address(RVA = "0x1B2F384", Offset = "0x1B2F384", VA = "0x1B2F384", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000804")]
		[Address(RVA = "0x1B2F6C4", Offset = "0x1B2F6C4", VA = "0x1B2F6C4", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x20001C1")]
	[CompilerGenerated]
	private struct <VolumeUp>d__18 : IAsyncStateMachine
	{
		[Token(Token = "0x40008FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x40008FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x4000900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SilverManChargeSoundPlayer <>4__this;

		[Token(Token = "0x4000901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private DOTweenAsyncExtensions.TweenAwaiter <>u__1;

		[Token(Token = "0x6000805")]
		[Address(RVA = "0x1B2F6D0", Offset = "0x1B2F6D0", VA = "0x1B2F6D0", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000806")]
		[Address(RVA = "0x1B2F8E4", Offset = "0x1B2F8E4", VA = "0x1B2F8E4", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x20001C2")]
	[CompilerGenerated]
	private struct <VolumeDown>d__19 : IAsyncStateMachine
	{
		[Token(Token = "0x4000902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x4000904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SilverManChargeSoundPlayer <>4__this;

		[Token(Token = "0x4000905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private DOTweenAsyncExtensions.TweenAwaiter <>u__1;

		[Token(Token = "0x6000807")]
		[Address(RVA = "0x1B2F8F0", Offset = "0x1B2F8F0", VA = "0x1B2F8F0", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000808")]
		[Address(RVA = "0x1B2FB04", Offset = "0x1B2FB04", VA = "0x1B2FB04", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x40008F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioClip _twoBeatClip;

	[Token(Token = "0x40008F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float _beatClipBpm;

	[Token(Token = "0x40008F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GrooveFitAudioSource _grooveFitAudio;

	[Token(Token = "0x40008F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float _startBpm;

	[Token(Token = "0x40008F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float _beatSave;

	[Token(Token = "0x40008F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float _secondPerBeat;

	[Token(Token = "0x40008F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Tweener _tweener;

	[Token(Token = "0x170000D6")]
	[Inject]
	private ISubscriber<BPMData> _bpmDataMessage
	{
		[Token(Token = "0x60007F8")]
		[Address(RVA = "0x1B2EE1C", Offset = "0x1B2EE1C", VA = "0x1B2EE1C")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60007F9")]
		[Address(RVA = "0x1B2EE24", Offset = "0x1B2EE24", VA = "0x1B2EE24")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170000D7")]
	[Inject]
	private ISubscriber<BeatData> _beatDataMessage
	{
		[Token(Token = "0x60007FA")]
		[Address(RVA = "0x1B2EE2C", Offset = "0x1B2EE2C", VA = "0x1B2EE2C")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60007FB")]
		[Address(RVA = "0x1B2EE34", Offset = "0x1B2EE34", VA = "0x1B2EE34")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x60007FC")]
	[Address(RVA = "0x1B2EE3C", Offset = "0x1B2EE3C", VA = "0x1B2EE3C")]
	private void Start()
	{
	}

	[Token(Token = "0x60007FD")]
	[Address(RVA = "0x1B2F088", Offset = "0x1B2F088", VA = "0x1B2F088")]
	[AsyncStateMachine(typeof(<SetNewBPM>d__15))]
	private void SetNewBPM(BPMData bpmData)
	{
	}

	[Token(Token = "0x60007FE")]
	[Address(RVA = "0x1B2F160", Offset = "0x1B2F160", VA = "0x1B2F160")]
	private void PlayChargeClip(BeatData beatData)
	{
	}

	[Token(Token = "0x60007FF")]
	[Address(RVA = "0x1B2F1DC", Offset = "0x1B2F1DC", VA = "0x1B2F1DC")]
	[AsyncStateMachine(typeof(<VolumeUp>d__18))]
	public void VolumeUp()
	{
	}

	[Token(Token = "0x6000800")]
	[Address(RVA = "0x1B2F294", Offset = "0x1B2F294", VA = "0x1B2F294")]
	[AsyncStateMachine(typeof(<VolumeDown>d__19))]
	public void VolumeDown()
	{
	}

	[Token(Token = "0x6000801")]
	[Address(RVA = "0x1B2F34C", Offset = "0x1B2F34C", VA = "0x1B2F34C")]
	public void StopVolume()
	{
	}

	[Token(Token = "0x6000802")]
	[Address(RVA = "0x1B2F374", Offset = "0x1B2F374", VA = "0x1B2F374")]
	public SilverManChargeSoundPlayer()
	{
	}
}
[Token(Token = "0x20001C3")]
public class SilverManPlayerHead : MonoBehaviour
{
	[Token(Token = "0x6000809")]
	[Address(RVA = "0x1B2FB10", Offset = "0x1B2FB10", VA = "0x1B2FB10")]
	private void Start()
	{
	}

	[Token(Token = "0x600080A")]
	[Address(RVA = "0x1B2FB9C", Offset = "0x1B2FB9C", VA = "0x1B2FB9C")]
	public SilverManPlayerHead()
	{
	}
}
[Token(Token = "0x20001C4")]
public class SilverManSpeakerDance : MonoBehaviour
{
	[Token(Token = "0x4000907")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int lastBeat;

	[Token(Token = "0x4000908")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float defaultScaleY;

	[Token(Token = "0x170000D8")]
	[Inject]
	private ISubscriber<BeatData> OnBeat
	{
		[Token(Token = "0x600080B")]
		[Address(RVA = "0x1B2FBA4", Offset = "0x1B2FBA4", VA = "0x1B2FBA4")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x600080C")]
		[Address(RVA = "0x1B2FBAC", Offset = "0x1B2FBAC", VA = "0x1B2FBAC")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x600080D")]
	[Address(RVA = "0x1B2FBB4", Offset = "0x1B2FBB4", VA = "0x1B2FBB4")]
	private void Start()
	{
	}

	[Token(Token = "0x600080E")]
	[Address(RVA = "0x1B2FCFC", Offset = "0x1B2FCFC", VA = "0x1B2FCFC")]
	private void DoBeatAction(BeatData data)
	{
	}

	[Token(Token = "0x600080F")]
	[Address(RVA = "0x1B2FE48", Offset = "0x1B2FE48", VA = "0x1B2FE48")]
	public SilverManSpeakerDance()
	{
	}
}
[Token(Token = "0x20001C5")]
public class AudioBPMChange : MonoBehaviour
{
	[Token(Token = "0x6000812")]
	[Address(RVA = "0x1B2FEC4", Offset = "0x1B2FEC4", VA = "0x1B2FEC4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000813")]
	[Address(RVA = "0x1B2FEC8", Offset = "0x1B2FEC8", VA = "0x1B2FEC8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000814")]
	[Address(RVA = "0x1B2FECC", Offset = "0x1B2FECC", VA = "0x1B2FECC")]
	public AudioBPMChange()
	{
	}
}
[Token(Token = "0x20001C6")]
public class GrabClubCheckBothHand : MonoBehaviour
{
	[Token(Token = "0x4000909")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GrabClubHandController _grabClubHandController;

	[Token(Token = "0x400090A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _bothHandGrip;

	[Token(Token = "0x400090B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Inject]
	private InputProvider _inputProvider;

	[Token(Token = "0x400090C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _isUseAvater;

	[Token(Token = "0x400090E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject _grabHandLeftTop;

	[Token(Token = "0x400090F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject _grabHandLeftUnder;

	[Token(Token = "0x4000910")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject _grabHandRightTop;

	[Token(Token = "0x4000911")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject _grabHandRightUnder;

	[Token(Token = "0x4000912")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GameObject _grabHandSave;

	[Token(Token = "0x4000913")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private SkinnedMeshRenderer _handSkinnedMeshRenderer;

	[Token(Token = "0x4000914")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private AudioClip _grabSE;

	[Token(Token = "0x4000915")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private AudioSource _audioSource;

	[Token(Token = "0x170000D9")]
	[Inject]
	private ISubscriber<OnPause> OnPauseEvent
	{
		[Token(Token = "0x6000815")]
		[Address(RVA = "0x1B2FED4", Offset = "0x1B2FED4", VA = "0x1B2FED4")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000816")]
		[Address(RVA = "0x1B2FEDC", Offset = "0x1B2FEDC", VA = "0x1B2FEDC")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x6000817")]
	[Address(RVA = "0x1B2FEE4", Offset = "0x1B2FEE4", VA = "0x1B2FEE4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000818")]
	[Address(RVA = "0x1B2FF8C", Offset = "0x1B2FF8C", VA = "0x1B2FF8C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000819")]
	[Address(RVA = "0x1B3013C", Offset = "0x1B3013C", VA = "0x1B3013C")]
	public void DisplayRealHand(bool value)
	{
	}

	[Token(Token = "0x600081A")]
	[Address(RVA = "0x1B30184", Offset = "0x1B30184", VA = "0x1B30184")]
	public void SetGrabHand(VRHand.HandType hand, SelectClubHandEvent.GolferSwingType type)
	{
	}

	[Token(Token = "0x600081B")]
	[Address(RVA = "0x1B303A4", Offset = "0x1B303A4", VA = "0x1B303A4")]
	public GrabClubCheckBothHand()
	{
	}
}
[Token(Token = "0x20001C7")]
[RequireComponent(typeof(GrooveFitAudioSource))]
public class BaseballAudienceSound : MonoBehaviour
{
	[Token(Token = "0x4000916")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioClip _audienceGreat;

	[Token(Token = "0x4000917")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioClip _audienceOK;

	[Token(Token = "0x4000918")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioClip _audienceBad;

	[Token(Token = "0x400091A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AudioSource _audio;

	[Token(Token = "0x170000DA")]
	[Inject]
	private ISubscriber<FPActionData> OnFPAction
	{
		[Token(Token = "0x600081D")]
		[Address(RVA = "0x1B30450", Offset = "0x1B30450", VA = "0x1B30450")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x600081E")]
		[Address(RVA = "0x1B30458", Offset = "0x1B30458", VA = "0x1B30458")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x600081F")]
	[Address(RVA = "0x1B30460", Offset = "0x1B30460", VA = "0x1B30460")]
	private void Start()
	{
	}

	[Token(Token = "0x6000820")]
	[Address(RVA = "0x1B305C0", Offset = "0x1B305C0", VA = "0x1B305C0")]
	private void PlaySound(FPActionData value)
	{
	}

	[Token(Token = "0x6000821")]
	[Address(RVA = "0x1B306B0", Offset = "0x1B306B0", VA = "0x1B306B0")]
	public BaseballAudienceSound()
	{
	}
}
[Token(Token = "0x20001C8")]
public class GrabBatCheckBothHand : MonoBehaviour
{
	[Token(Token = "0x400091B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GrabBatHandController _grabBatHandController;

	[Token(Token = "0x400091C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _bothHandGrip;

	[Token(Token = "0x400091D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Inject]
	private InputProvider _inputProvider;

	[Token(Token = "0x400091F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject _grabHandLeftTop;

	[Token(Token = "0x4000920")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject _grabHandLeftUnder;

	[Token(Token = "0x4000921")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject _grabHandRightTop;

	[Token(Token = "0x4000922")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject _grabHandRightUnder;

	[Token(Token = "0x4000923")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameObject _grabHandSave;

	[Token(Token = "0x4000924")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private SkinnedMeshRenderer _handSkinnedMeshRenderer;

	[Token(Token = "0x4000925")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private AudioClip _grabSE;

	[Token(Token = "0x4000926")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private AudioSource _audioSource;

	[Token(Token = "0x170000DB")]
	[Inject]
	private ISubscriber<OnPause> OnPauseEvent
	{
		[Token(Token = "0x6000823")]
		[Address(RVA = "0x1B306BC", Offset = "0x1B306BC", VA = "0x1B306BC")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000824")]
		[Address(RVA = "0x1B306C4", Offset = "0x1B306C4", VA = "0x1B306C4")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x6000825")]
	[Address(RVA = "0x1B306CC", Offset = "0x1B306CC", VA = "0x1B306CC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000826")]
	[Address(RVA = "0x1B30724", Offset = "0x1B30724", VA = "0x1B30724")]
	private void Update()
	{
	}

	[Token(Token = "0x6000827")]
	[Address(RVA = "0x1B3093C", Offset = "0x1B3093C", VA = "0x1B3093C")]
	public void DisplayRealHand(bool value)
	{
	}

	[Token(Token = "0x6000828")]
	[Address(RVA = "0x1B30984", Offset = "0x1B30984", VA = "0x1B30984")]
	public void SetGrabHand(VRHand.HandType hand, SelectBatHandEvent.BatterType type)
	{
	}

	[Token(Token = "0x6000829")]
	[Address(RVA = "0x1B30BA4", Offset = "0x1B30BA4", VA = "0x1B30BA4")]
	public GrabBatCheckBothHand()
	{
	}
}
[Token(Token = "0x20001C9")]
public class DominantHandCalibration : SingletonMonoBehaviour<DominantHandCalibration>
{
	[Token(Token = "0x4000927")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly BoolReactiveProperty IsRightHanded;

	[Token(Token = "0x170000DC")]
	protected override bool dontDestroyOnLoad
	{
		[Token(Token = "0x600082C")]
		[Address(RVA = "0x1B30E10", Offset = "0x1B30E10", VA = "0x1B30E10", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600082B")]
	[Address(RVA = "0x1B30CB4", Offset = "0x1B30CB4", VA = "0x1B30CB4")]
	public void SetDominantHand(bool isRightHand)
	{
	}

	[Token(Token = "0x600082D")]
	[Address(RVA = "0x1B30E18", Offset = "0x1B30E18", VA = "0x1B30E18")]
	public DominantHandCalibration()
	{
	}
}
[Token(Token = "0x20001CA")]
public class IkazoManager : MonoBehaviour
{
	[Token(Token = "0x20001CB")]
	private enum AnimKey
	{
		[Token(Token = "0x400093C")]
		Idle,
		[Token(Token = "0x400093D")]
		Back,
		[Token(Token = "0x400093E")]
		Fore
	}

	[Token(Token = "0x4000928")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Animation")]
	[SerializeField]
	private Animator _animator;

	[Token(Token = "0x4000929")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int Back;

	[Token(Token = "0x400092A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly int Fore;

	[Token(Token = "0x400092B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly int OnGame;

	[Token(Token = "0x400092C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly int OnConversation;

	[Token(Token = "0x400092D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly int Talk;

	[Token(Token = "0x400092E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private static readonly int IsRightHand;

	[Token(Token = "0x400092F")]
	private const string ConversationModeIdleState = "IdleConversation";

	[Token(Token = "0x4000930")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject RightHandRacket;

	[Token(Token = "0x4000931")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject LeftHandRacket;

	[Token(Token = "0x4000932")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Header("Audio")]
	[SerializeField]
	private AudioSource _audio;

	[Token(Token = "0x4000933")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private AudioClip _voice_foreslow;

	[Token(Token = "0x4000934")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private AudioClip _voice_forefast;

	[Token(Token = "0x4000935")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private AudioClip _voice_backslow;

	[Token(Token = "0x4000936")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private AudioClip _voice_backfast;

	[Token(Token = "0x4000937")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private AudioClip _voice_netin;

	[Token(Token = "0x4000938")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[Inject]
	private ISubscriber<FPActionData> _OnFPAction;

	[Token(Token = "0x4000939")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[Inject]
	private ISubscriber<OnMusicGame> _OnMusicGame;

	[Token(Token = "0x400093A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[Inject]
	private ISubscriber<CharacterActionData> _OnCharacterAction;

	[Token(Token = "0x600082F")]
	[Address(RVA = "0x1B30EE8", Offset = "0x1B30EE8", VA = "0x1B30EE8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000830")]
	[Address(RVA = "0x1B31280", Offset = "0x1B31280", VA = "0x1B31280")]
	private void ResetAllTrigger()
	{
	}

	[Token(Token = "0x6000831")]
	[Address(RVA = "0x1B31360", Offset = "0x1B31360", VA = "0x1B31360")]
	private void SetAmimator(AnimKey anim)
	{
	}

	[Token(Token = "0x6000832")]
	[Address(RVA = "0x1B3151C", Offset = "0x1B3151C", VA = "0x1B3151C")]
	public IkazoManager()
	{
	}
}
[Token(Token = "0x20001CC")]
public class SushiPositionSetter : MonoBehaviour
{
	[Token(Token = "0x6000838")]
	[Address(RVA = "0x1B31B04", Offset = "0x1B31B04", VA = "0x1B31B04")]
	private void Start()
	{
	}

	[Token(Token = "0x6000839")]
	[Address(RVA = "0x1B31B08", Offset = "0x1B31B08", VA = "0x1B31B08")]
	[ContextMenu("set!")]
	private void Set()
	{
	}

	[Token(Token = "0x600083A")]
	[Address(RVA = "0x1B31BD0", Offset = "0x1B31BD0", VA = "0x1B31BD0")]
	public SushiPositionSetter()
	{
	}
}
[Token(Token = "0x20001CD")]
public class TableTennisBallRendererController : MonoBehaviour, IAutoSetUp
{
	[Token(Token = "0x400093F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private FitPatternBoxManager _fitPatternBox;

	[Token(Token = "0x4000940")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Renderer _renderer;

	[Token(Token = "0x4000941")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TrailRenderer _trail;

	[Token(Token = "0x4000942")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	[RestrictedStringByEnum(typeof(TableTennisEventKeys))]
	private string _keyToEnable;

	[Token(Token = "0x4000943")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Inject]
	private ISubscriber<FPActionData> _subscriber;

	[Token(Token = "0x600083B")]
	[Address(RVA = "0x1B31BD8", Offset = "0x1B31BD8", VA = "0x1B31BD8")]
	private void Start()
	{
	}

	[Token(Token = "0x600083C")]
	[Address(RVA = "0x1B31D04", Offset = "0x1B31D04", VA = "0x1B31D04", Slot = "4")]
	public void AutoSetUp()
	{
	}

	[Token(Token = "0x600083D")]
	[Address(RVA = "0x1B31EE0", Offset = "0x1B31EE0", VA = "0x1B31EE0")]
	public TableTennisBallRendererController()
	{
	}
}
[Token(Token = "0x20001CE")]
public class TableTennisInputJudgeAction : JudgeActionBase
{
	[Token(Token = "0x4000944")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected float _timing;

	[Token(Token = "0x4000945")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	protected float _acceptanceBeatRange;

	[Token(Token = "0x4000946")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[RestrictedStringByEnum(typeof(TableTennisEventKeys))]
	protected string _actionKey;

	[Token(Token = "0x4000947")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	public GameObject _ball;

	[Token(Token = "0x4000948")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float _currentBeat;

	[Token(Token = "0x4000949")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool _judgeDone;

	[Token(Token = "0x600083F")]
	[Address(RVA = "0x1B32008", Offset = "0x1B32008", VA = "0x1B32008", Slot = "4")]
	protected override void BeatSubscribeAction(float currentBeat)
	{
	}

	[Token(Token = "0x6000840")]
	[Address(RVA = "0x1B324C4", Offset = "0x1B324C4", VA = "0x1B324C4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000841")]
	[Address(RVA = "0x1B32030", Offset = "0x1B32030", VA = "0x1B32030")]
	public void Bad(bool balldead = false)
	{
	}

	[Token(Token = "0x6000842")]
	[Address(RVA = "0x1B3278C", Offset = "0x1B3278C", VA = "0x1B3278C")]
	public bool Judge()
	{
		return default(bool);
	}

	[Token(Token = "0x6000843")]
	[Address(RVA = "0x1B325EC", Offset = "0x1B325EC", VA = "0x1B325EC")]
	private void PublishBallDeadMessage()
	{
	}

	[Token(Token = "0x6000844")]
	[Address(RVA = "0x1B32CA0", Offset = "0x1B32CA0", VA = "0x1B32CA0")]
	public TableTennisInputJudgeAction()
	{
	}
}
[Token(Token = "0x20001CF")]
public enum TableTennisShotTypeKeys
{
	[Token(Token = "0x400094B")]
	ForeShot,
	[Token(Token = "0x400094C")]
	BackShot,
	[Token(Token = "0x400094D")]
	ForeBlock,
	[Token(Token = "0x400094E")]
	BackBlock,
	[Token(Token = "0x400094F")]
	ForePowerShot,
	[Token(Token = "0x4000950")]
	BackPowerShot,
	[Token(Token = "0x4000951")]
	IrregularShot
}
[Token(Token = "0x20001D0")]
public enum TableTennisReturnKeys
{
	[Token(Token = "0x4000953")]
	Standard,
	[Token(Token = "0x4000954")]
	Smash,
	[Token(Token = "0x4000955")]
	Short,
	[Token(Token = "0x4000956")]
	Slam,
	[Token(Token = "0x4000957")]
	Long,
	[Token(Token = "0x4000958")]
	HomeRun
}
[Token(Token = "0x20001D1")]
public enum TableTennisEventKeys
{
	[Token(Token = "0x400095A")]
	Voice_ForeSlow,
	[Token(Token = "0x400095B")]
	Voice_BackSlow,
	[Token(Token = "0x400095C")]
	Voice_NetIn,
	[Token(Token = "0x400095D")]
	Voice_ForeFast,
	[Token(Token = "0x400095E")]
	Voice_BackFast,
	[Token(Token = "0x400095F")]
	ServeFore,
	[Token(Token = "0x4000960")]
	ServeBack,
	[Token(Token = "0x4000961")]
	Bound,
	[Token(Token = "0x4000962")]
	NetHit,
	[Token(Token = "0x4000963")]
	NetHitRelease,
	[Token(Token = "0x4000964")]
	Judge,
	[Token(Token = "0x4000965")]
	BallDead
}
[Token(Token = "0x20001D2")]
public struct TableTennisShotInfomation
{
	[Token(Token = "0x4000966")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public TableTennisShotTypeKeys ShotTypeKey;

	[Token(Token = "0x4000967")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float BallAnglePhi;

	[Token(Token = "0x4000968")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float BallAngleTheta;

	[Token(Token = "0x4000969")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 Velocity;

	[Token(Token = "0x400096A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 Position;
}
[Token(Token = "0x20001D3")]
public class TableTennisNetHitEffect : MonoBehaviour, IAutoSetUp
{
	[Token(Token = "0x400096B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _netHitEffect;

	[Token(Token = "0x400096C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject _netHitReleaseEffect;

	[Token(Token = "0x400096D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private FitPatternBoxManager _fitPatternBox;

	[Token(Token = "0x400096E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform _netHitPosition;

	[Token(Token = "0x400096F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Transform _netHitReleasePosition;

	[Token(Token = "0x4000970")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Transform _ball;

	[Token(Token = "0x4000971")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Inject]
	private ISubscriber<FPActionData> _subscriber;

	[Token(Token = "0x4000972")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Inject]
	private DiContainer _container;

	[Token(Token = "0x6000845")]
	[Address(RVA = "0x1B32CA8", Offset = "0x1B32CA8", VA = "0x1B32CA8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000846")]
	[Address(RVA = "0x1B32DD4", Offset = "0x1B32DD4", VA = "0x1B32DD4", Slot = "4")]
	public void AutoSetUp()
	{
	}

	[Token(Token = "0x6000847")]
	[Address(RVA = "0x1B32E80", Offset = "0x1B32E80", VA = "0x1B32E80")]
	public TableTennisNetHitEffect()
	{
	}
}
[Token(Token = "0x20001D4")]
public class TableTennisPathAdjust : MonoBehaviour
{
	[Token(Token = "0x4000973")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform _hitTarget;

	[Token(Token = "0x6000849")]
	[Address(RVA = "0x1B33108", Offset = "0x1B33108", VA = "0x1B33108")]
	[ContextMenu("AdjustFromTarget")]
	private void Adjust()
	{
	}

	[Token(Token = "0x600084A")]
	[Address(RVA = "0x1B334A0", Offset = "0x1B334A0", VA = "0x1B334A0")]
	public void Adjust(float angle)
	{
	}

	[Token(Token = "0x600084B")]
	[Address(RVA = "0x1B33590", Offset = "0x1B33590", VA = "0x1B33590")]
	public TableTennisPathAdjust()
	{
	}
}
[Token(Token = "0x20001D5")]
public class TableTennisTossBall : MonoBehaviour, IAutoSetUp
{
	[Token(Token = "0x4000974")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private FitPatternBoxManager _fitPatternBox;

	[Token(Token = "0x4000975")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Renderer _renderer;

	[Token(Token = "0x4000976")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[Range(0f, 1f)]
	private float delay;

	[Token(Token = "0x600084C")]
	[Address(RVA = "0x1B33598", Offset = "0x1B33598", VA = "0x1B33598")]
	private void Start()
	{
	}

	[Token(Token = "0x600084D")]
	[Address(RVA = "0x1B335E8", Offset = "0x1B335E8", VA = "0x1B335E8")]
	private void Toss()
	{
	}

	[Token(Token = "0x600084E")]
	[Address(RVA = "0x1B3372C", Offset = "0x1B3372C", VA = "0x1B3372C", Slot = "4")]
	public void AutoSetUp()
	{
	}

	[Token(Token = "0x600084F")]
	[Address(RVA = "0x1B3393C", Offset = "0x1B3393C", VA = "0x1B3393C")]
	public TableTennisTossBall()
	{
	}
}
[Token(Token = "0x20001D6")]
public class TennisRacketCollision : MonoBehaviour
{
	[Token(Token = "0x4000977")]
	private const string BALL_TAG = "TennisBall";

	[Token(Token = "0x4000978")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RhythmTennisInputPublisher _inputPublisher;

	[Token(Token = "0x4000979")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private TennisBallInfo _hittingBall;

	[Token(Token = "0x6000851")]
	[Address(RVA = "0x1B339BC", Offset = "0x1B339BC", VA = "0x1B339BC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000852")]
	[Address(RVA = "0x1B33A88", Offset = "0x1B33A88", VA = "0x1B33A88")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000853")]
	[Address(RVA = "0x1B33B90", Offset = "0x1B33B90", VA = "0x1B33B90")]
	public TennisRacketCollision()
	{
	}
}
[Token(Token = "0x20001D7")]
public class MusicStandManager : MonoBehaviour
{
	[StructLayout(3)]
	[Token(Token = "0x20001D8")]
	[CompilerGenerated]
	private struct <Activate>d__19 : IAsyncStateMachine
	{
		[Token(Token = "0x400098A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x400098B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x400098C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MusicStandManager <>4__this;

		[Token(Token = "0x400098D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private DOTweenAsyncExtensions.TweenAwaiter <>u__1;

		[Token(Token = "0x600085A")]
		[Address(RVA = "0x1B34258", Offset = "0x1B34258", VA = "0x1B34258", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x600085B")]
		[Address(RVA = "0x1B34860", Offset = "0x1B34860", VA = "0x1B34860", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x20001D9")]
	[CompilerGenerated]
	private struct <Deactivate>d__20 : IAsyncStateMachine
	{
		[Token(Token = "0x400098E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x400098F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x4000990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MusicStandManager <>4__this;

		[Token(Token = "0x4000991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UniTask.Awaiter <>u__1;

		[Token(Token = "0x4000992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private DOTweenAsyncExtensions.TweenAwaiter <>u__2;

		[Token(Token = "0x600085C")]
		[Address(RVA = "0x1B3486C", Offset = "0x1B3486C", VA = "0x1B3486C", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x600085D")]
		[Address(RVA = "0x1B34E5C", Offset = "0x1B34E5C", VA = "0x1B34E5C", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x400097A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Inject]
	private InputProvider _inputProvider;

	[Token(Token = "0x400097B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float _musicStandDistance;

	[Token(Token = "0x400097C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float _height;

	[Token(Token = "0x400097D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject _menuUIObj;

	[Token(Token = "0x400097E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Collider _canvasCollider;

	[Token(Token = "0x400097F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private AnimationCurve _activateCurve;

	[Token(Token = "0x4000980")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private AnimationCurve _deactivateCurve;

	[Token(Token = "0x4000981")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private readonly float _adjustmentRotSpeed;

	[Token(Token = "0x4000982")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	[Range(0f, 1f)]
	private float _rotSpeed;

	[Token(Token = "0x4000983")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly float _adjustmentPosSpeed;

	[Token(Token = "0x4000984")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	[Range(0f, 1f)]
	private float _posSpeed;

	[Token(Token = "0x4000985")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Sequence _sequence;

	[Token(Token = "0x4000986")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 _oldPos;

	[Token(Token = "0x4000987")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Quaternion _oldRot;

	[Token(Token = "0x4000988")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private bool _isActive;

	[Token(Token = "0x4000989")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 _saveScale;

	[Token(Token = "0x6000854")]
	[Address(RVA = "0x1B33B98", Offset = "0x1B33B98", VA = "0x1B33B98")]
	private void Start()
	{
	}

	[Token(Token = "0x6000855")]
	[Address(RVA = "0x1B33E74", Offset = "0x1B33E74", VA = "0x1B33E74")]
	private void Update()
	{
	}

	[Token(Token = "0x6000856")]
	[Address(RVA = "0x1B33C94", Offset = "0x1B33C94", VA = "0x1B33C94")]
	private void SetLoop()
	{
	}

	[Token(Token = "0x6000857")]
	[Address(RVA = "0x1B34184", Offset = "0x1B34184", VA = "0x1B34184")]
	[AsyncStateMachine(typeof(<Activate>d__19))]
	private void Activate()
	{
	}

	[Token(Token = "0x6000858")]
	[Address(RVA = "0x1B340CC", Offset = "0x1B340CC", VA = "0x1B340CC")]
	[AsyncStateMachine(typeof(<Deactivate>d__20))]
	private void Deactivate()
	{
	}

	[Token(Token = "0x6000859")]
	[Address(RVA = "0x1B3423C", Offset = "0x1B3423C", VA = "0x1B3423C")]
	public MusicStandManager()
	{
	}
}
[Token(Token = "0x20001DA")]
public class EndlessLeverSwitchController : MonoBehaviour
{
	[Token(Token = "0x20001DB")]
	private enum Pos
	{
		[Token(Token = "0x40009A6")]
		Left,
		[Token(Token = "0x40009A7")]
		Center,
		[Token(Token = "0x40009A8")]
		Right
	}

	[StructLayout(3)]
	[Token(Token = "0x20001DC")]
	[CompilerGenerated]
	private struct <Update>d__20 : IAsyncStateMachine
	{
		[Token(Token = "0x40009A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x40009AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x40009AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public EndlessLeverSwitchController <>4__this;

		[Token(Token = "0x40009AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UniTask.Awaiter <>u__1;

		[Token(Token = "0x6000862")]
		[Address(RVA = "0x1B3511C", Offset = "0x1B3511C", VA = "0x1B3511C", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000863")]
		[Address(RVA = "0x1B35FB4", Offset = "0x1B35FB4", VA = "0x1B35FB4", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x4000993")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Inject]
	private InputProvider _inputProvider;

	[Token(Token = "0x4000994")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ConfigurableJoint _configurableJoint;

	[Token(Token = "0x4000995")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float _leftLocalPosZ;

	[Token(Token = "0x4000996")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float _centerLocalPosZ;

	[Token(Token = "0x4000997")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float _rightLocalPosZ;

	[Token(Token = "0x4000998")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float _distanceThreshold;

	[Token(Token = "0x4000999")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _isMoveOK;

	[Token(Token = "0x400099A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private readonly int _delayTime;

	[Token(Token = "0x400099B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public UnityEvent _moveLeftEvent;

	[Token(Token = "0x400099C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UnityEvent _moveCenterEvent;

	[Token(Token = "0x400099D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public UnityEvent _moveRightEvent;

	[Token(Token = "0x400099E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private AudioSource _audioSource;

	[Token(Token = "0x400099F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private AudioClip _changeSE;

	[Token(Token = "0x40009A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private GameObject _leverParentObj;

	[Token(Token = "0x40009A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Collider _leverSwitch;

	[Token(Token = "0x40009A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private GrabbableLeverSwitch _grabbableLeverSwitch;

	[Token(Token = "0x40009A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private HandColliderDetector _handColSave;

	[Token(Token = "0x40009A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Pos _posStatus;

	[Token(Token = "0x600085E")]
	[Address(RVA = "0x1B34E68", Offset = "0x1B34E68", VA = "0x1B34E68")]
	private void Start()
	{
	}

	[Token(Token = "0x600085F")]
	[Address(RVA = "0x1B34F8C", Offset = "0x1B34F8C", VA = "0x1B34F8C")]
	[AsyncStateMachine(typeof(<Update>d__20))]
	private void Update()
	{
	}

	[Token(Token = "0x6000860")]
	[Address(RVA = "0x1B35040", Offset = "0x1B35040", VA = "0x1B35040")]
	public EndlessLeverSwitchController()
	{
	}
}
[Token(Token = "0x20001DD")]
public class GrabbableLeverSwitch : GrabbableObject
{
	[Token(Token = "0x40009AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	[SerializeField]
	private List<GameObject> _collisionDisableWithHandObjs;

	[Token(Token = "0x40009AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	[SerializeField]
	private MeshRenderer _leverMeshRenderer;

	[Token(Token = "0x40009AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[SerializeField]
	private Material _hoverMaterial;

	[Token(Token = "0x40009B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	[SerializeField]
	private Material _defaultMaterial;

	[Token(Token = "0x6000864")]
	[Address(RVA = "0x1B35FC0", Offset = "0x1B35FC0", VA = "0x1B35FC0", Slot = "6")]
	public override void OnGrab(GameObject handObj, GameObject parentObj, VRHand.HandType hand)
	{
	}

	[Token(Token = "0x6000865")]
	[Address(RVA = "0x1B36188", Offset = "0x1B36188", VA = "0x1B36188", Slot = "9")]
	public override void OnHovered(VRHand.HandType hand)
	{
	}

	[Token(Token = "0x6000866")]
	[Address(RVA = "0x1B361B4", Offset = "0x1B361B4", VA = "0x1B361B4", Slot = "11")]
	protected override void OnUnHoveredWithGrab(VRHand.HandType unHoveredHand, VRHand.HandType grabHand)
	{
	}

	[Token(Token = "0x6000867")]
	[Address(RVA = "0x1B36374", Offset = "0x1B36374", VA = "0x1B36374", Slot = "10")]
	protected override void OnUnHoveredWithoutGrab(VRHand.HandType hand)
	{
	}

	[Token(Token = "0x6000868")]
	[Address(RVA = "0x1B3653C", Offset = "0x1B3653C", VA = "0x1B3653C")]
	public GrabbableLeverSwitch()
	{
	}
}
[Token(Token = "0x20001DE")]
public class AudioSettingSaver : MonoBehaviour
{
	[Token(Token = "0x6000869")]
	[Address(RVA = "0x1B36544", Offset = "0x1B36544", VA = "0x1B36544")]
	private void Start()
	{
	}

	[Token(Token = "0x600086A")]
	[Address(RVA = "0x1B36548", Offset = "0x1B36548", VA = "0x1B36548")]
	public static void LoadAudioSetting()
	{
	}

	[Token(Token = "0x600086B")]
	[Address(RVA = "0x1B3665C", Offset = "0x1B3665C", VA = "0x1B3665C")]
	public static void SaveAudioSetting()
	{
	}

	[Token(Token = "0x600086C")]
	[Address(RVA = "0x1B3678C", Offset = "0x1B3678C", VA = "0x1B3678C")]
	public AudioSettingSaver()
	{
	}
}
[Token(Token = "0x20001DF")]
public class FirstTimeVideoBlock : EventBlock
{
	[StructLayout(3)]
	[Token(Token = "0x20001E1")]
	[CompilerGenerated]
	private struct <SetEvent>d__21 : IAsyncStateMachine
	{
		[Token(Token = "0x40009C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x40009C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncUniTaskMethodBuilder<bool> <>t__builder;

		[Token(Token = "0x40009CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FirstTimeVideoBlock <>4__this;

		[Token(Token = "0x40009CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CancellationToken token;

		[Token(Token = "0x40009CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UniTask.Awaiter <>u__1;

		[Token(Token = "0x6000879")]
		[Address(RVA = "0x1B37204", Offset = "0x1B37204", VA = "0x1B37204", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x600087A")]
		[Address(RVA = "0x1B37788", Offset = "0x1B37788", VA = "0x1B37788", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x20001E2")]
	[CompilerGenerated]
	private sealed class <>c__DisplayClass22_0
	{
		[Token(Token = "0x40009CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CancellationToken token;

		[Token(Token = "0x600087B")]
		[Address(RVA = "0x1B377E0", Offset = "0x1B377E0", VA = "0x1B377E0")]
		public <>c__DisplayClass22_0()
		{
		}

		[Token(Token = "0x600087C")]
		[Address(RVA = "0x1B377E8", Offset = "0x1B377E8", VA = "0x1B377E8")]
		internal UniTask <PlayTutorial>b__0(GrabbableFitSphere sphere)
		{
			return default(UniTask);
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x20001E3")]
	[CompilerGenerated]
	private struct <PlayTutorial>d__22 : IAsyncStateMachine
	{
		[Token(Token = "0x40009CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x40009CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncUniTaskMethodBuilder <>t__builder;

		[Token(Token = "0x40009D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CancellationToken token;

		[Token(Token = "0x40009D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FirstTimeVideoBlock <>4__this;

		[Token(Token = "0x40009D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private <>c__DisplayClass22_0 <>8__1;

		[Token(Token = "0x40009D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UniTask.Awaiter <>u__1;

		[Token(Token = "0x40009D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private UniTask<int>.Awaiter <>u__2;

		[Token(Token = "0x40009D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private UniTask<(int winArgumentIndex, GameStatus.Difficulty result1, GameStatus.OptionRule result2)>.Awaiter <>u__3;

		[Token(Token = "0x600087D")]
		[Address(RVA = "0x1B3780C", Offset = "0x1B3780C", VA = "0x1B3780C", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x600087E")]
		[Address(RVA = "0x1B38A6C", Offset = "0x1B38A6C", VA = "0x1B38A6C", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x20001E4")]
	[CompilerGenerated]
	private sealed class <>c__DisplayClass25_0
	{
		[Token(Token = "0x40009D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FirstTimeVideoBlock <>4__this;

		[Token(Token = "0x40009D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int index;

		[Token(Token = "0x600087F")]
		[Address(RVA = "0x1B38A78", Offset = "0x1B38A78", VA = "0x1B38A78")]
		public <>c__DisplayClass25_0()
		{
		}

		[Token(Token = "0x6000880")]
		[Address(RVA = "0x1B38A80", Offset = "0x1B38A80", VA = "0x1B38A80")]
		internal bool <PlayVideoAsync>b__0()
		{
			return default(bool);
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x20001E5")]
	[CompilerGenerated]
	private struct <PlayVideoAsync>d__25 : IAsyncStateMachine
	{
		[Token(Token = "0x40009D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x40009D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncUniTaskMethodBuilder <>t__builder;

		[Token(Token = "0x40009DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FirstTimeVideoBlock <>4__this;

		[Token(Token = "0x40009DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int index;

		[Token(Token = "0x40009DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool stopCurrentVideo;

		[Token(Token = "0x40009DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private <>c__DisplayClass25_0 <>8__1;

		[Token(Token = "0x40009DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UniTask.Awaiter <>u__1;

		[Token(Token = "0x6000881")]
		[Address(RVA = "0x1B38AC4", Offset = "0x1B38AC4", VA = "0x1B38AC4", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000882")]
		[Address(RVA = "0x1B390A0", Offset = "0x1B390A0", VA = "0x1B390A0", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x20001E7")]
	[CompilerGenerated]
	private struct <MoveVideoWindowTo>d__26 : IAsyncStateMachine
	{
		[Token(Token = "0x40009E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x40009E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncUniTaskMethodBuilder <>t__builder;

		[Token(Token = "0x40009E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FirstTimeVideoBlock <>4__this;

		[Token(Token = "0x40009E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int pivotIndex;

		[Token(Token = "0x40009E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CancellationToken token;

		[Token(Token = "0x40009E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UniTask.Awaiter <>u__1;

		[Token(Token = "0x6000885")]
		[Address(RVA = "0x1B391A4", Offset = "0x1B391A4", VA = "0x1B391A4", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000886")]
		[Address(RVA = "0x1B397CC", Offset = "0x1B397CC", VA = "0x1B397CC", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x20001E8")]
	[CompilerGenerated]
	private struct <ActivateVideoWindow>d__27 : IAsyncStateMachine
	{
		[Token(Token = "0x40009EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x40009EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncUniTaskMethodBuilder <>t__builder;

		[Token(Token = "0x40009EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FirstTimeVideoBlock <>4__this;

		[Token(Token = "0x40009ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CancellationToken token;

		[Token(Token = "0x40009EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UniTask.Awaiter <>u__1;

		[Token(Token = "0x6000887")]
		[Address(RVA = "0x1B397D8", Offset = "0x1B397D8", VA = "0x1B397D8", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000888")]
		[Address(RVA = "0x1B39CC4", Offset = "0x1B39CC4", VA = "0x1B39CC4", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x20001E9")]
	[CompilerGenerated]
	private struct <DeactivateWindow>d__28 : IAsyncStateMachine
	{
		[Token(Token = "0x40009EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x40009F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncUniTaskMethodBuilder <>t__builder;

		[Token(Token = "0x40009F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FirstTimeVideoBlock <>4__this;

		[Token(Token = "0x40009F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CancellationToken token;

		[Token(Token = "0x40009F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UniTask.Awaiter <>u__1;

		[Token(Token = "0x6000889")]
		[Address(RVA = "0x1B39CD0", Offset = "0x1B39CD0", VA = "0x1B39CD0", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x600088A")]
		[Address(RVA = "0x1B3A154", Offset = "0x1B3A154", VA = "0x1B3A154", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x40009B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioSource _audioPoint;

	[Token(Token = "0x40009B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioClip _onNextAudio;

	[Token(Token = "0x40009B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AnimationCurve _openCurve;

	[Token(Token = "0x40009B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AnimationCurve _closeCurve;

	[Token(Token = "0x40009B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private AnimationCurve _moveCurve;

	[Token(Token = "0x40009B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject _videoWindow;

	[Token(Token = "0x40009B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject _videoTexture;

	[Token(Token = "0x40009B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private MultilingualTextMeshPro _descriptionText;

	[Token(Token = "0x40009B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private VideoPlayer[] _videos;

	[Token(Token = "0x40009BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Transform[] _videoPivots;

	[Token(Token = "0x40009BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Transform _videoPivotsCenter;

	[Token(Token = "0x40009BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Transform _firstGFSet;

	[Token(Token = "0x40009BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private GrabbableFitSphere[] _firstFitSpheres;

	[Token(Token = "0x40009BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int _currentVidioIndex;

	[Token(Token = "0x40009BF")]
	private const float _moveTime = 1f;

	[Token(Token = "0x40009C0")]
	private const string _TutorialKey0 = "GRAB_FIT_SPHERE";

	[Token(Token = "0x40009C1")]
	private const string _TutorialKey1 = "COMBINE_GEMS";

	[Token(Token = "0x40009C2")]
	private const string _TutorialKey2 = "PUT_ON_FIT_SPHERE";

	[Token(Token = "0x40009C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[Inject]
	private InputProvider _inputProvider;

	[Token(Token = "0x40009C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[Inject]
	private ISubscriber<GameStatus.Difficulty> _difficultySubscriber;

	[Token(Token = "0x40009C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[Inject]
	private ISubscriber<GameStatus.OptionRule> _optionSubscriber;

	[Token(Token = "0x600086D")]
	[Address(RVA = "0x1B36794", Offset = "0x1B36794", VA = "0x1B36794", Slot = "4")]
	[AsyncStateMachine(typeof(<SetEvent>d__21))]
	public override UniTask<bool> SetEvent(CancellationToken token)
	{
		return default(UniTask<bool>);
	}

	[Token(Token = "0x600086E")]
	[Address(RVA = "0x1B36870", Offset = "0x1B36870", VA = "0x1B36870")]
	[AsyncStateMachine(typeof(<PlayTutorial>d__22))]
	private UniTask PlayTutorial(CancellationToken token)
	{
		return default(UniTask);
	}

	[Token(Token = "0x600086F")]
	[Address(RVA = "0x1B369F4", Offset = "0x1B369F4", VA = "0x1B369F4")]
	private void PlayVideo(int index, bool stopCurrentVideo = true)
	{
	}

	[Token(Token = "0x6000870")]
	[Address(RVA = "0x1B36A4C", Offset = "0x1B36A4C", VA = "0x1B36A4C")]
	private void StopVideo()
	{
	}

	[Token(Token = "0x6000871")]
	[Address(RVA = "0x1B36AD0", Offset = "0x1B36AD0", VA = "0x1B36AD0")]
	[AsyncStateMachine(typeof(<PlayVideoAsync>d__25))]
	private UniTask PlayVideoAsync(int index, bool stopCurrentVideo = true)
	{
		return default(UniTask);
	}

	[Token(Token = "0x6000872")]
	[Address(RVA = "0x1B36C44", Offset = "0x1B36C44", VA = "0x1B36C44")]
	[AsyncStateMachine(typeof(<MoveVideoWindowTo>d__26))]
	private UniTask MoveVideoWindowTo(int pivotIndex, CancellationToken token)
	{
		return default(UniTask);
	}

	[Token(Token = "0x6000873")]
	[Address(RVA = "0x1B36DD8", Offset = "0x1B36DD8", VA = "0x1B36DD8")]
	[AsyncStateMachine(typeof(<ActivateVideoWindow>d__27))]
	private UniTask ActivateVideoWindow(CancellationToken token)
	{
		return default(UniTask);
	}

	[Token(Token = "0x6000874")]
	[Address(RVA = "0x1B36F6C", Offset = "0x1B36F6C", VA = "0x1B36F6C")]
	[AsyncStateMachine(typeof(<DeactivateWindow>d__28))]
	private UniTask DeactivateWindow(CancellationToken token)
	{
		return default(UniTask);
	}

	[Token(Token = "0x6000875")]
	[Address(RVA = "0x1B37100", Offset = "0x1B37100", VA = "0x1B37100")]
	public FirstTimeVideoBlock()
	{
	}
}
[Token(Token = "0x20001EA")]
public class GotoEndrollSphere : GrabbableObject
{
	[Token(Token = "0x20001EB")]
	private enum FitSphereState
	{
		[Token(Token = "0x4000A03")]
		OnPivot,
		[Token(Token = "0x4000A04")]
		Grabbed,
		[Token(Token = "0x4000A05")]
		Free
	}

	[StructLayout(3)]
	[Token(Token = "0x20001EC")]
	[CompilerGenerated]
	private struct <ReturnTimer>d__23 : IAsyncStateMachine
	{
		[Token(Token = "0x4000A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncUniTaskVoidMethodBuilder <>t__builder;

		[Token(Token = "0x4000A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CancellationToken token;

		[Token(Token = "0x4000A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float timeToReturn;

		[Token(Token = "0x4000A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GotoEndrollSphere <>4__this;

		[Token(Token = "0x4000A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <_time>5__2;

		[Token(Token = "0x4000A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Cysharp.Threading.Tasks.YieldAwaitable.Awaiter <>u__1;

		[Token(Token = "0x6000897")]
		[Address(RVA = "0x1B3AB20", Offset = "0x1B3AB20", VA = "0x1B3AB20", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000898")]
		[Address(RVA = "0x1B3AF10", Offset = "0x1B3AF10", VA = "0x1B3AF10", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x40009F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	[SerializeField]
	private List<GameObject> _deactivateObjs;

	[Token(Token = "0x40009F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	[Header("Hover&Grab Setting")]
	[SerializeField]
	private GameObject _hoveredEffect;

	[Token(Token = "0x40009F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[SerializeField]
	private AudioClip _hoverSound;

	[Token(Token = "0x40009F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	[SerializeField]
	private AudioClip _grabSound;

	[Token(Token = "0x40009F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	[SerializeField]
	private AudioClip _releaseSound;

	[Token(Token = "0x40009F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private AudioSource _audio;

	[Token(Token = "0x40009FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	[Header("Repop")]
	[SerializeField]
	private float _disappearTime;

	[Token(Token = "0x40009FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	[SerializeField]
	private Transform _spherePivot;

	[Token(Token = "0x40009FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	[SerializeField]
	private GameObject _repopEffect;

	[Token(Token = "0x40009FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private FitSphereState _state;

	[Token(Token = "0x40009FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private Tweener _positionTweener;

	[Token(Token = "0x40009FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private Tweener _rotationTweener;

	[Token(Token = "0x4000A00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private bool _isSceneChangeCalled;

	[Token(Token = "0x4000A01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private AllGFScenesManager _allGfScenesManager;

	[Token(Token = "0x600088B")]
	[Address(RVA = "0x1B3A160", Offset = "0x1B3A160", VA = "0x1B3A160", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x600088C")]
	[Address(RVA = "0x1B3A210", Offset = "0x1B3A210", VA = "0x1B3A210", Slot = "5")]
	protected override void Update()
	{
	}

	[Token(Token = "0x600088D")]
	[Address(RVA = "0x1B3A708", Offset = "0x1B3A708", VA = "0x1B3A708", Slot = "9")]
	public override void OnHovered(VRHand.HandType hand)
	{
	}

	[Token(Token = "0x600088E")]
	[Address(RVA = "0x1B3A758", Offset = "0x1B3A758", VA = "0x1B3A758", Slot = "6")]
	public override void OnGrab(GameObject handObj, GameObject parentObj, VRHand.HandType hand)
	{
	}

	[Token(Token = "0x600088F")]
	[Address(RVA = "0x1B3A81C", Offset = "0x1B3A81C", VA = "0x1B3A81C", Slot = "7")]
	public override void OnRelease(GameObject handObj, VRHand.HandType hand)
	{
	}

	[Token(Token = "0x6000890")]
	[Address(RVA = "0x1B3A988", Offset = "0x1B3A988", VA = "0x1B3A988", Slot = "11")]
	protected override void OnUnHoveredWithGrab(VRHand.HandType unHoveredHand, VRHand.HandType grabHand)
	{
	}

	[Token(Token = "0x6000891")]
	[Address(RVA = "0x1B3A9B8", Offset = "0x1B3A9B8", VA = "0x1B3A9B8", Slot = "10")]
	protected override void OnUnHoveredWithoutGrab(VRHand.HandType hand)
	{
	}

	[Token(Token = "0x6000892")]
	[Address(RVA = "0x1B3A4B0", Offset = "0x1B3A4B0", VA = "0x1B3A4B0")]
	private void ReturnToPivot(bool tween = false)
	{
	}

	[Token(Token = "0x6000893")]
	[Address(RVA = "0x1B3A8B8", Offset = "0x1B3A8B8", VA = "0x1B3A8B8")]
	[AsyncStateMachine(typeof(<ReturnTimer>d__23))]
	private UniTaskVoid ReturnTimer(float timeToReturn, CancellationToken token)
	{
		return default(UniTaskVoid);
	}

	[Token(Token = "0x6000894")]
	[Address(RVA = "0x1B3A7E0", Offset = "0x1B3A7E0", VA = "0x1B3A7E0")]
	private void CancelTween()
	{
	}

	[Token(Token = "0x6000895")]
	[Address(RVA = "0x1B3A9F4", Offset = "0x1B3A9F4", VA = "0x1B3A9F4")]
	private void RepopEffect()
	{
	}

	[Token(Token = "0x6000896")]
	[Address(RVA = "0x1B3AB10", Offset = "0x1B3AB10", VA = "0x1B3AB10")]
	public GotoEndrollSphere()
	{
	}
}
[Token(Token = "0x20001ED")]
public class SphereMaterialChanger : MonoBehaviour
{
	[Token(Token = "0x4000A0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material _opaqueMat;

	[Token(Token = "0x4000A0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material _transparentMat;

	[Token(Token = "0x4000A0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private int _gfSetNum;

	[Token(Token = "0x4000A10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer _renderer;

	[Token(Token = "0x4000A11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GrabbableFitSphere _grabbableFitSphere;

	[Token(Token = "0x4000A12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GrabbableFitSphere.FitSphereState _currentState;

	[Token(Token = "0x4000A13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int _activeGFSet;

	[Token(Token = "0x4000A14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Inject]
	private ISubscriber<GFTurntableStatus> _turntableMessage;

	[Token(Token = "0x6000899")]
	[Address(RVA = "0x1B3AF1C", Offset = "0x1B3AF1C", VA = "0x1B3AF1C")]
	private void Start()
	{
	}

	[Token(Token = "0x600089A")]
	[Address(RVA = "0x1B3B168", Offset = "0x1B3B168", VA = "0x1B3B168")]
	private void ChangeMat()
	{
	}

	[Token(Token = "0x600089B")]
	[Address(RVA = "0x1B3B1B8", Offset = "0x1B3B1B8", VA = "0x1B3B1B8")]
	public SphereMaterialChanger()
	{
	}
}
[Token(Token = "0x20001EE")]
public class FullTrackingController : MonoBehaviour
{
	[Token(Token = "0x20001EF")]
	public enum Status
	{
		[Token(Token = "0x4000A53")]
		None,
		[Token(Token = "0x4000A54")]
		HaritoraXTracking,
		[Token(Token = "0x4000A55")]
		ViveTracking6,
		[Token(Token = "0x4000A56")]
		ViveTracking10
	}

	[Token(Token = "0x4000A15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Button _cancelButton;

	[Token(Token = "0x4000A16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Status _status;

	[Token(Token = "0x4000A17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VRIK ik;

	[Token(Token = "0x4000A18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Header("HaritoraX")]
	[SerializeField]
	private GameObject _trackingPrefab;

	[Token(Token = "0x4000A19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static GameObject _trackingObj_1;

	[Token(Token = "0x4000A1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static GameObject _trackingObj_2;

	[Token(Token = "0x4000A1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static GameObject _trackingObj_3;

	[Token(Token = "0x4000A1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private IKTargetRepositoryInterface repository;

	[Token(Token = "0x4000A1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Header("Vive")]
	[SerializeField]
	private GameObject _viveTrackers;

	[Token(Token = "0x4000A1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public VRIKCalibrator.Settings settings;

	[Token(Token = "0x4000A1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Transform _bodyTracker;

	[Token(Token = "0x4000A20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Transform _leftElbowTracker;

	[Token(Token = "0x4000A21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Transform _rightElbowTracker;

	[Token(Token = "0x4000A22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Transform _leftFootTracker;

	[Token(Token = "0x4000A23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Transform _rightFootTracker;

	[Token(Token = "0x4000A24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Transform _leftKneeTracker;

	[Token(Token = "0x4000A25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Transform _rightKneeTracker;

	[Token(Token = "0x4000A26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Transform _headTrackerSave;

	[Token(Token = "0x4000A27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Transform _leftHandTrackerSave;

	[Token(Token = "0x4000A28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Transform _rightHandTrackerSave;

	[Token(Token = "0x4000A29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static Transform _bodyTrackerSave;

	[Token(Token = "0x4000A2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static Transform _leftElbowTrackerSave;

	[Token(Token = "0x4000A2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static Transform _rightElbowTrackerSave;

	[Token(Token = "0x4000A2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static Transform _leftFootTrackerSave;

	[Token(Token = "0x4000A2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static Transform _rightFootTrackerSave;

	[Token(Token = "0x4000A2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static Transform _leftKneeTrackerSave;

	[Token(Token = "0x4000A2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static Transform _rightKneeTrackerSave;

	[Token(Token = "0x4000A30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static Vector3 _saveReferencesRootPos;

	[Token(Token = "0x4000A31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public static Quaternion _saveReferencesRootRot;

	[Token(Token = "0x4000A32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public static Vector3 _saveReferencesRootScale;

	[Token(Token = "0x4000A33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static Transform _saveHeadTarget;

	[Token(Token = "0x4000A34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static Transform _saveSpinePelvisTarget;

	[Token(Token = "0x4000A35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static float _saveSpinePelvisPosWeight;

	[Token(Token = "0x4000A36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public static float _saveSpinePelvisRotWeight;

	[Token(Token = "0x4000A37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public static bool _savePlantFeet;

	[Token(Token = "0x4000A38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public static float _saveSpineMaxRootAngle;

	[Token(Token = "0x4000A39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public static Transform _saveLeftArmTarget;

	[Token(Token = "0x4000A3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public static float _saveLeftArmPosWeight;

	[Token(Token = "0x4000A3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public static float _saveLeftArmRotWeight;

	[Token(Token = "0x4000A3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public static Transform _saveLeftArmBendGoal;

	[Token(Token = "0x4000A3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public static float _saveLeftArmBendGoalWeight;

	[Token(Token = "0x4000A3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public static Transform _saveRightArmTarget;

	[Token(Token = "0x4000A3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public static float _saveRightArmPosWeight;

	[Token(Token = "0x4000A40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public static float _saveRightArmRotWeight;

	[Token(Token = "0x4000A41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public static Transform _saveRightArmBendGoal;

	[Token(Token = "0x4000A42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public static float _saveRightArmBendGoalWeight;

	[Token(Token = "0x4000A43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public static Transform _saveLeftLegTarget;

	[Token(Token = "0x4000A44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public static float _saveLeftLegPosWeight;

	[Token(Token = "0x4000A45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public static float _saveLeftLegRotWeight;

	[Token(Token = "0x4000A46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public static Transform _saveLeftLegBendGoal;

	[Token(Token = "0x4000A47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public static float _saveLeftLegBendGoalWeight;

	[Token(Token = "0x4000A48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public static Transform _saveRightLegTarget;

	[Token(Token = "0x4000A49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public static float _saveRightLegPosWeight;

	[Token(Token = "0x4000A4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	public static float _saveRightLegRotWeight;

	[Token(Token = "0x4000A4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public static Transform _saveRightLegBendGoal;

	[Token(Token = "0x4000A4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public static float _saveRightLegBendGoalWeight;

	[Token(Token = "0x4000A4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public static Transform _saveDefaultLeftLegBendGoal;

	[Token(Token = "0x4000A4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public static float _saveDefaultLeftLegBendGoalWeight;

	[Token(Token = "0x4000A4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public static Transform _saveDefaultRightLegBendGoal;

	[Token(Token = "0x4000A50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public static float _saveDefaultRightLegBendGoalWeight;

	[Token(Token = "0x4000A51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool _isFirstCalibrate;

	[Token(Token = "0x600089E")]
	[Address(RVA = "0x1B3B1E4", Offset = "0x1B3B1E4", VA = "0x1B3B1E4")]
	public FullTrackingController()
	{
	}
}
[Token(Token = "0x20001F0")]
public class FitSphereNewSign : MonoBehaviour
{
	[Token(Token = "0x4000A57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform _targetSign;

	[Token(Token = "0x4000A58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private FitSpherePivot _spherePivot;

	[Token(Token = "0x4000A59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Inject]
	private ISubscriber<GFTurntableStatus> _turntableMessage;

	[Token(Token = "0x4000A5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _isNew;

	[Token(Token = "0x600089F")]
	[Address(RVA = "0x1B3B1F4", Offset = "0x1B3B1F4", VA = "0x1B3B1F4")]
	private void Start()
	{
	}

	[Token(Token = "0x60008A0")]
	[Address(RVA = "0x1B3B49C", Offset = "0x1B3B49C", VA = "0x1B3B49C")]
	public void ActivateNewSign()
	{
	}

	[Token(Token = "0x60008A1")]
	[Address(RVA = "0x1B3B4D8", Offset = "0x1B3B4D8", VA = "0x1B3B4D8")]
	public FitSphereNewSign()
	{
	}
}
[Token(Token = "0x20001F1")]
public class MissionsNewSignController : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20001F2")]
	private enum SignType
	{
		[Token(Token = "0x4000A61")]
		Tutorial,
		[Token(Token = "0x4000A62")]
		Record,
		[Token(Token = "0x4000A63")]
		Secret,
		[Token(Token = "0x4000A64")]
		Any
	}

	[Token(Token = "0x4000A5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool newSignFlagTutorial;

	[Token(Token = "0x4000A5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	private static bool newSignFlagRecord;

	[Token(Token = "0x4000A5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
	private static bool newSignFlagSecret;

	[Token(Token = "0x4000A5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SignType _signType;

	[Token(Token = "0x4000A5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject _targetSign;

	[Token(Token = "0x60008A4")]
	[Address(RVA = "0x1B3B618", Offset = "0x1B3B618", VA = "0x1B3B618")]
	public static void SetFlagUpTutorial()
	{
	}

	[Token(Token = "0x60008A5")]
	[Address(RVA = "0x1B3B664", Offset = "0x1B3B664", VA = "0x1B3B664")]
	public static void SetFlagUpRecord()
	{
	}

	[Token(Token = "0x60008A6")]
	[Address(RVA = "0x1B3B6B0", Offset = "0x1B3B6B0", VA = "0x1B3B6B0")]
	public static void SetFlagUpSecret()
	{
	}

	[Token(Token = "0x60008A7")]
	[Address(RVA = "0x1B3B6FC", Offset = "0x1B3B6FC", VA = "0x1B3B6FC")]
	public void ResetFlagTutorial()
	{
	}

	[Token(Token = "0x60008A8")]
	[Address(RVA = "0x1B3B77C", Offset = "0x1B3B77C", VA = "0x1B3B77C")]
	public void ResetFlagRecord()
	{
	}

	[Token(Token = "0x60008A9")]
	[Address(RVA = "0x1B3B7CC", Offset = "0x1B3B7CC", VA = "0x1B3B7CC")]
	public void ResetFlagSecret()
	{
	}

	[Token(Token = "0x60008AA")]
	[Address(RVA = "0x1B3B74C", Offset = "0x1B3B74C", VA = "0x1B3B74C")]
	public void Render()
	{
	}

	[Token(Token = "0x60008AB")]
	[Address(RVA = "0x1B3B8DC", Offset = "0x1B3B8DC", VA = "0x1B3B8DC")]
	public void RenderOff()
	{
	}

	[Token(Token = "0x60008AC")]
	[Address(RVA = "0x1B3B8FC", Offset = "0x1B3B8FC", VA = "0x1B3B8FC")]
	private void Start()
	{
	}

	[Token(Token = "0x60008AD")]
	[Address(RVA = "0x1B3BA64", Offset = "0x1B3BA64", VA = "0x1B3BA64")]
	private void Update()
	{
	}

	[Token(Token = "0x60008AE")]
	[Address(RVA = "0x1B3B81C", Offset = "0x1B3B81C", VA = "0x1B3B81C")]
	private static bool IsNewFlagUp(SignType type)
	{
		return default(bool);
	}

	[Token(Token = "0x60008AF")]
	[Address(RVA = "0x1B3BBF8", Offset = "0x1B3BBF8", VA = "0x1B3BBF8")]
	public MissionsNewSignController()
	{
	}
}
[Token(Token = "0x20001F3")]
public class StatueOfLeo : MonoBehaviour
{
	[Token(Token = "0x60008B0")]
	[Address(RVA = "0x1B3BC00", Offset = "0x1B3BC00", VA = "0x1B3BC00")]
	private void OnCollisionEnter(Collision other)
	{
	}

	[Token(Token = "0x60008B1")]
	[Address(RVA = "0x1B3BCA4", Offset = "0x1B3BCA4", VA = "0x1B3BCA4")]
	public StatueOfLeo()
	{
	}
}
[Token(Token = "0x20001F4")]
public class DeltaScroller : MonoBehaviour
{
	[Token(Token = "0x4000A65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ScrollRect _scrollRect;

	[Token(Token = "0x4000A66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float deltaY;

	[Token(Token = "0x60008B2")]
	[Address(RVA = "0x1B3BCAC", Offset = "0x1B3BCAC", VA = "0x1B3BCAC")]
	public void Scroll()
	{
	}

	[Token(Token = "0x60008B3")]
	[Address(RVA = "0x1B3BDD0", Offset = "0x1B3BDD0", VA = "0x1B3BDD0")]
	public void ScrollReverse()
	{
	}

	[Token(Token = "0x60008B4")]
	[Address(RVA = "0x1B3BEF4", Offset = "0x1B3BEF4", VA = "0x1B3BEF4")]
	public DeltaScroller()
	{
	}
}
[Token(Token = "0x20001F7")]
public class GameSelectPrivacyPolicy : MonoBehaviour
{
	[Token(Token = "0x4000A6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Inject]
	private MultilingualTextManager _multilingualTextManager;

	[Token(Token = "0x4000A6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject _privacyPolicyTextJa;

	[Token(Token = "0x4000A6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject _privacyPolicyTextEn;

	[Token(Token = "0x4000A70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject _privacyPolicyTextZhCn;

	[Token(Token = "0x60008B9")]
	[Address(RVA = "0x1B3BF7C", Offset = "0x1B3BF7C", VA = "0x1B3BF7C")]
	private void Start()
	{
	}

	[Token(Token = "0x60008BA")]
	[Address(RVA = "0x1B3C05C", Offset = "0x1B3C05C", VA = "0x1B3C05C")]
	private void SetPrivacyPolicyText()
	{
	}

	[Token(Token = "0x60008BB")]
	[Address(RVA = "0x1B3C15C", Offset = "0x1B3C15C", VA = "0x1B3C15C")]
	public GameSelectPrivacyPolicy()
	{
	}
}
[Token(Token = "0x20001F8")]
public class MissionListItem : MonoBehaviour
{
	[Token(Token = "0x4000A71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TMP_Text _text;

	[Token(Token = "0x4000A72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject _checkMark;

	[Token(Token = "0x4000A73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject _newMark;

	[Token(Token = "0x4000A74")]
	private const float GRAY = 0.3f;

	[Token(Token = "0x60008BD")]
	[Address(RVA = "0x1B3C168", Offset = "0x1B3C168", VA = "0x1B3C168")]
	public void Initialize(string text, bool isChecked, bool isNew)
	{
	}

	[Token(Token = "0x60008BE")]
	[Address(RVA = "0x1B3C200", Offset = "0x1B3C200", VA = "0x1B3C200")]
	public MissionListItem()
	{
	}
}
[Token(Token = "0x20001F9")]
public class RecordMissionListController : MonoBehaviour
{
	[StructLayout(3)]
	[Token(Token = "0x20001FA")]
	[CompilerGenerated]
	private struct <CreateItemsUniTask>d__7 : IAsyncStateMachine
	{
		[Token(Token = "0x4000A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncUniTaskVoidMethodBuilder <>t__builder;

		[Token(Token = "0x4000A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RecordMissionListController <>4__this;

		[Token(Token = "0x4000A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int <count>5__2;

		[Token(Token = "0x4000A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<RecordMissionSettings.SettingItem>.Enumerator <>7__wrap2;

		[Token(Token = "0x4000A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Cysharp.Threading.Tasks.YieldAwaitable.Awaiter <>u__1;

		[Token(Token = "0x60008C5")]
		[Address(RVA = "0x1B3D050", Offset = "0x1B3D050", VA = "0x1B3D050", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x60008C6")]
		[Address(RVA = "0x1B3D970", Offset = "0x1B3D970", VA = "0x1B3D970", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x4000A75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _recordMissionListItemsPrefab;

	[Token(Token = "0x4000A76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform _contentsRoot;

	[Token(Token = "0x4000A77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Inject]
	private DiContainer _container;

	[Token(Token = "0x4000A78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Inject]
	private MultilingualTextManager _multilingualTextManager;

	[Token(Token = "0x4000A79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly int maxItemsForOneFrame;

	[Token(Token = "0x60008BF")]
	[Address(RVA = "0x1B3C208", Offset = "0x1B3C208", VA = "0x1B3C208")]
	public void OnClose()
	{
	}

	[Token(Token = "0x60008C0")]
	[Address(RVA = "0x1B3C508", Offset = "0x1B3C508", VA = "0x1B3C508")]
	public void CreateItems()
	{
	}

	[Token(Token = "0x60008C1")]
	[Address(RVA = "0x1B3C528", Offset = "0x1B3C528", VA = "0x1B3C528")]
	[AsyncStateMachine(typeof(<CreateItemsUniTask>d__7))]
	private UniTaskVoid CreateItemsUniTask()
	{
		return default(UniTaskVoid);
	}

	[Token(Token = "0x60008C2")]
	[Address(RVA = "0x1B3C5C8", Offset = "0x1B3C5C8", VA = "0x1B3C5C8")]
	private void InstantiateItem(RecordMissionSettings.SettingItem v, Type t, ref HashSet<string> visited)
	{
	}

	[Token(Token = "0x60008C3")]
	[Address(RVA = "0x1B3CE64", Offset = "0x1B3CE64", VA = "0x1B3CE64")]
	private void InstantiateItem(string key, bool isChecked, bool isNew, int numerator, int denominator)
	{
	}

	[Token(Token = "0x60008C4")]
	[Address(RVA = "0x1B3D040", Offset = "0x1B3D040", VA = "0x1B3D040")]
	public RecordMissionListController()
	{
	}
}
[Token(Token = "0x20001FB")]
public class RecordMissionListItem : MissionListItem
{
	[Token(Token = "0x4000A80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private TMP_Text _ratioText;

	[Token(Token = "0x60008C7")]
	[Address(RVA = "0x1B3CFFC", Offset = "0x1B3CFFC", VA = "0x1B3CFFC")]
	public void Initialize(string text, bool isChecked, bool isNew, string ratioText)
	{
	}

	[Token(Token = "0x60008C8")]
	[Address(RVA = "0x1B3D97C", Offset = "0x1B3D97C", VA = "0x1B3D97C")]
	public RecordMissionListItem()
	{
	}
}
[Token(Token = "0x20001FC")]
[CreateAssetMenu(fileName = "RecordMissionSettings", menuName = "ScriptableObjects/RecordMissionSettings", order = 1)]
public class RecordMissionSettings : ScriptableObject
{
	[Serializable]
	[Token(Token = "0x20001FD")]
	public class SettingItem
	{
		[Token(Token = "0x4000A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		[RestrictedStringByEnum(new Type[]
		{
			typeof(AchvCountUpInt),
			typeof(AchvCountUpFloat),
			typeof(AchvHighestInt),
			typeof(AchvHighestFloat)
		})]
		private string _key;

		[Token(Token = "0x4000A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<int> _thresholds;

		[Token(Token = "0x170000DE")]
		public string Key
		{
			[Token(Token = "0x60008CE")]
			[Address(RVA = "0x1B3EF2C", Offset = "0x1B3EF2C", VA = "0x1B3EF2C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DF")]
		public List<int> Thresholds
		{
			[Token(Token = "0x60008CF")]
			[Address(RVA = "0x1B3EF34", Offset = "0x1B3EF34", VA = "0x1B3EF34")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008CC")]
		[Address(RVA = "0x1B3EEB8", Offset = "0x1B3EEB8", VA = "0x1B3EEB8")]
		public SettingItem(string key)
		{
		}

		[Token(Token = "0x60008CD")]
		[Address(RVA = "0x1B3EEE8", Offset = "0x1B3EEE8", VA = "0x1B3EEE8")]
		public SettingItem(string key, List<int> thresholds)
		{
		}

		[Token(Token = "0x60008D0")]
		[Address(RVA = "0x1B3D698", Offset = "0x1B3D698", VA = "0x1B3D698")]
		public Type GetTypeOfKey()
		{
			return null;
		}

		[Token(Token = "0x60008D1")]
		public T GetEnumValue<T>() where T : Enum
		{
			return (T)null;
		}

		[Token(Token = "0x60008D2")]
		[Address(RVA = "0x1B3ECA8", Offset = "0x1B3ECA8", VA = "0x1B3ECA8")]
		public int GetEnumInt()
		{
			return default(int);
		}
	}

	[Token(Token = "0x4000A81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<SettingItem> Items;

	[Token(Token = "0x4000A82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<string, int> _nextThreshold;

	[Token(Token = "0x170000DD")]
	public Dictionary<string, int> NextThreshold
	{
		[Token(Token = "0x60008C9")]
		[Address(RVA = "0x1B3D984", Offset = "0x1B3D984", VA = "0x1B3D984")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60008CA")]
	[Address(RVA = "0x1B3D9A8", Offset = "0x1B3D9A8", VA = "0x1B3D9A8")]
	public void ReloadNextThresholds()
	{
	}

	[Token(Token = "0x60008CB")]
	[Address(RVA = "0x1B3EEB0", Offset = "0x1B3EEB0", VA = "0x1B3EEB0")]
	public RecordMissionSettings()
	{
	}
}
[Token(Token = "0x2000202")]
public class SecretMissionListController : MonoBehaviour
{
	[StructLayout(3)]
	[Token(Token = "0x2000203")]
	[CompilerGenerated]
	private struct <CreateItemsUniTask>d__7 : IAsyncStateMachine
	{
		[Token(Token = "0x4000A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncUniTaskVoidMethodBuilder <>t__builder;

		[Token(Token = "0x4000A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SecretMissionListController <>4__this;

		[Token(Token = "0x4000A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int <count>5__2;

		[Token(Token = "0x4000A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private IEnumerator <>7__wrap2;

		[Token(Token = "0x4000A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Cysharp.Threading.Tasks.YieldAwaitable.Awaiter <>u__1;

		[Token(Token = "0x60008DF")]
		[Address(RVA = "0x1B3F354", Offset = "0x1B3F354", VA = "0x1B3F354", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x60008E0")]
		[Address(RVA = "0x1B3FD30", Offset = "0x1B3FD30", VA = "0x1B3FD30", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x4000A8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _missionListItemsPrefab;

	[Token(Token = "0x4000A8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform _contentsRoot;

	[Token(Token = "0x4000A8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Inject]
	private DiContainer _container;

	[Token(Token = "0x4000A90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Inject]
	private MultilingualTextManager _multilingualTextManager;

	[Token(Token = "0x4000A91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly int maxItemsForOneFrame;

	[Token(Token = "0x60008DB")]
	[Address(RVA = "0x1B3EF84", Offset = "0x1B3EF84", VA = "0x1B3EF84")]
	public void OnClose()
	{
	}

	[Token(Token = "0x60008DC")]
	[Address(RVA = "0x1B3F284", Offset = "0x1B3F284", VA = "0x1B3F284")]
	public void CreateItems()
	{
	}

	[Token(Token = "0x60008DD")]
	[Address(RVA = "0x1B3F2A4", Offset = "0x1B3F2A4", VA = "0x1B3F2A4")]
	[AsyncStateMachine(typeof(<CreateItemsUniTask>d__7))]
	private UniTaskVoid CreateItemsUniTask()
	{
		return default(UniTaskVoid);
	}

	[Token(Token = "0x60008DE")]
	[Address(RVA = "0x1B3F344", Offset = "0x1B3F344", VA = "0x1B3F344")]
	public SecretMissionListController()
	{
	}
}
[Token(Token = "0x2000204")]
public class TouchIconBound : MonoBehaviour
{
	[Token(Token = "0x4000A98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float _duration;

	[Token(Token = "0x4000A99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float _span;

	[Token(Token = "0x4000A9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float _range;

	[Token(Token = "0x4000A9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Sequence _sequence;

	[Token(Token = "0x60008E1")]
	[Address(RVA = "0x1B3FD3C", Offset = "0x1B3FD3C", VA = "0x1B3FD3C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008E2")]
	[Address(RVA = "0x1B3FE70", Offset = "0x1B3FE70", VA = "0x1B3FE70")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60008E3")]
	[Address(RVA = "0x1B3FEB8", Offset = "0x1B3FEB8", VA = "0x1B3FEB8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60008E4")]
	[Address(RVA = "0x1B3FF00", Offset = "0x1B3FF00", VA = "0x1B3FF00")]
	public TouchIconBound()
	{
	}
}
[Token(Token = "0x2000205")]
public class TutorialMissionListController : MonoBehaviour
{
	[StructLayout(3)]
	[Token(Token = "0x2000206")]
	[CompilerGenerated]
	private struct <CreateItemsUniTask>d__7 : IAsyncStateMachine
	{
		[Token(Token = "0x4000AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncUniTaskVoidMethodBuilder <>t__builder;

		[Token(Token = "0x4000AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TutorialMissionListController <>4__this;

		[Token(Token = "0x4000AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int <count>5__2;

		[Token(Token = "0x4000AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private IEnumerator <>7__wrap2;

		[Token(Token = "0x4000AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Cysharp.Threading.Tasks.YieldAwaitable.Awaiter <>u__1;

		[Token(Token = "0x60008E9")]
		[Address(RVA = "0x1B402F0", Offset = "0x1B402F0", VA = "0x1B402F0", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x60008EA")]
		[Address(RVA = "0x1B40CB8", Offset = "0x1B40CB8", VA = "0x1B40CB8", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x4000A9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _missionListItemsPrefab;

	[Token(Token = "0x4000A9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform _contentsRoot;

	[Token(Token = "0x4000A9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Inject]
	private DiContainer _container;

	[Token(Token = "0x4000A9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Inject]
	private MultilingualTextManager _multilingualTextManager;

	[Token(Token = "0x4000AA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly int maxItemsForOneFrame;

	[Token(Token = "0x60008E5")]
	[Address(RVA = "0x1B3FF20", Offset = "0x1B3FF20", VA = "0x1B3FF20")]
	public void OnClose()
	{
	}

	[Token(Token = "0x60008E6")]
	[Address(RVA = "0x1B40220", Offset = "0x1B40220", VA = "0x1B40220")]
	public void CreateItems()
	{
	}

	[Token(Token = "0x60008E7")]
	[Address(RVA = "0x1B40240", Offset = "0x1B40240", VA = "0x1B40240")]
	[AsyncStateMachine(typeof(<CreateItemsUniTask>d__7))]
	private UniTaskVoid CreateItemsUniTask()
	{
		return default(UniTaskVoid);
	}

	[Token(Token = "0x60008E8")]
	[Address(RVA = "0x1B402E0", Offset = "0x1B402E0", VA = "0x1B402E0")]
	public TutorialMissionListController()
	{
	}
}
[Token(Token = "0x2000207")]
public class UsualAvatarChangeButton : MonoBehaviour
{
	[Token(Token = "0x4000AA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioClip _clip;

	[Token(Token = "0x4000AA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioSource _source;

	[Token(Token = "0x60008EB")]
	[Address(RVA = "0x1B40CC4", Offset = "0x1B40CC4", VA = "0x1B40CC4")]
	public void OnPush()
	{
	}

	[Token(Token = "0x60008EC")]
	[Address(RVA = "0x1B40D30", Offset = "0x1B40D30", VA = "0x1B40D30")]
	public UsualAvatarChangeButton()
	{
	}
}
[Token(Token = "0x2000208")]
public class UsualAvatarPutOnButton : MonoBehaviour
{
	[Token(Token = "0x4000AA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private UsualAvatarLoader _initializer;

	[Token(Token = "0x4000AAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TouchPanelRouter _router;

	[Token(Token = "0x60008ED")]
	[Address(RVA = "0x1B40D38", Offset = "0x1B40D38", VA = "0x1B40D38")]
	public void OnPush()
	{
	}

	[Token(Token = "0x60008EE")]
	[Address(RVA = "0x1B40DE8", Offset = "0x1B40DE8", VA = "0x1B40DE8")]
	public UsualAvatarPutOnButton()
	{
	}
}
[Token(Token = "0x2000209")]
public class TouchPanelAchievementTrigger : MonoBehaviour
{
	[Token(Token = "0x4000AAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool flg_fitlog;

	[Token(Token = "0x4000AAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool flg_audio;

	[Token(Token = "0x60008EF")]
	[Address(RVA = "0x1B40DF0", Offset = "0x1B40DF0", VA = "0x1B40DF0")]
	public void BrowseFitLog()
	{
	}

	[Token(Token = "0x60008F0")]
	[Address(RVA = "0x1B40E60", Offset = "0x1B40E60", VA = "0x1B40E60")]
	public void ChangeAudioSettings()
	{
	}

	[Token(Token = "0x60008F1")]
	[Address(RVA = "0x1B40ED0", Offset = "0x1B40ED0", VA = "0x1B40ED0")]
	public TouchPanelAchievementTrigger()
	{
	}
}
[Token(Token = "0x200020A")]
public class EndrollBallController : GrabbableObject
{
	[Token(Token = "0x200020B")]
	private enum FitSphereState
	{
		[Token(Token = "0x4000ABF")]
		OnPivot,
		[Token(Token = "0x4000AC0")]
		Grabbed,
		[Token(Token = "0x4000AC1")]
		Free
	}

	[StructLayout(3)]
	[Token(Token = "0x200020C")]
	[CompilerGenerated]
	private struct <ReturnTimer>d__29 : IAsyncStateMachine
	{
		[Token(Token = "0x4000AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncUniTaskVoidMethodBuilder <>t__builder;

		[Token(Token = "0x4000AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CancellationToken token;

		[Token(Token = "0x4000AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float timeToReturn;

		[Token(Token = "0x4000AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EndrollBallController <>4__this;

		[Token(Token = "0x4000AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <_time>5__2;

		[Token(Token = "0x4000AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Cysharp.Threading.Tasks.YieldAwaitable.Awaiter <>u__1;

		[Token(Token = "0x6000901")]
		[Address(RVA = "0x1B41BC4", Offset = "0x1B41BC4", VA = "0x1B41BC4", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000902")]
		[Address(RVA = "0x1B41FB4", Offset = "0x1B41FB4", VA = "0x1B41FB4", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x4000AAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	[Header("Hover&Grab Setting")]
	[SerializeField]
	private GameObject _hoveredEffect;

	[Token(Token = "0x4000AAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	[SerializeField]
	private AudioClip _hoverSound;

	[Token(Token = "0x4000AAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[SerializeField]
	private AudioClip _grabSound;

	[Token(Token = "0x4000AB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	[SerializeField]
	private AudioClip _releaseSound;

	[Token(Token = "0x4000AB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private AudioSource _audio;

	[Token(Token = "0x4000AB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	[Header("Repop")]
	[SerializeField]
	private float _disappearTime;

	[Token(Token = "0x4000AB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	[SerializeField]
	private Transform _spherePivot;

	[Token(Token = "0x4000AB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	[SerializeField]
	private GameObject _repopEffect;

	[Token(Token = "0x4000AB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private FitSphereState _state;

	[Token(Token = "0x4000AB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private Tweener _positionTweener;

	[Token(Token = "0x4000AB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private Tweener _rotationTweener;

	[Token(Token = "0x4000AB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private SphereCollider _hitCollider;

	[Token(Token = "0x4000AB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	[SerializeField]
	private GameObject _hitPointEffectObj;

	[Token(Token = "0x4000ABB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	[SerializeField]
	private GameObject _moveObjs;

	[Token(Token = "0x4000ABC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private int _consecutiveHitsCnt;

	[Token(Token = "0x4000ABD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
	private float _startPoint;

	[Token(Token = "0x170000E0")]
	[Inject]
	private IPublisher<EndrollPoint> FPActionMessage
	{
		[Token(Token = "0x60008F2")]
		[Address(RVA = "0x1B40ED8", Offset = "0x1B40ED8", VA = "0x1B40ED8")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60008F3")]
		[Address(RVA = "0x1B40EE0", Offset = "0x1B40EE0", VA = "0x1B40EE0")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x60008F4")]
	[Address(RVA = "0x1B40EF0", Offset = "0x1B40EF0", VA = "0x1B40EF0", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60008F5")]
	[Address(RVA = "0x1B4107C", Offset = "0x1B4107C", VA = "0x1B4107C", Slot = "5")]
	protected override void Update()
	{
	}

	[Token(Token = "0x60008F6")]
	[Address(RVA = "0x1B41084", Offset = "0x1B41084", VA = "0x1B41084", Slot = "9")]
	public override void OnHovered(VRHand.HandType hand)
	{
	}

	[Token(Token = "0x60008F7")]
	[Address(RVA = "0x1B410D4", Offset = "0x1B410D4", VA = "0x1B410D4", Slot = "6")]
	public override void OnGrab(GameObject handObj, GameObject parentObj, VRHand.HandType hand)
	{
	}

	[Token(Token = "0x60008F8")]
	[Address(RVA = "0x1B41198", Offset = "0x1B41198", VA = "0x1B41198", Slot = "7")]
	public override void OnRelease(GameObject handObj, VRHand.HandType hand)
	{
	}

	[Token(Token = "0x60008F9")]
	[Address(RVA = "0x1B41334", Offset = "0x1B41334", VA = "0x1B41334", Slot = "11")]
	protected override void OnUnHoveredWithGrab(VRHand.HandType unHoveredHand, VRHand.HandType grabHand)
	{
	}

	[Token(Token = "0x60008FA")]
	[Address(RVA = "0x1B41364", Offset = "0x1B41364", VA = "0x1B41364", Slot = "10")]
	protected override void OnUnHoveredWithoutGrab(VRHand.HandType hand)
	{
	}

	[Token(Token = "0x60008FB")]
	[Address(RVA = "0x1B413A0", Offset = "0x1B413A0", VA = "0x1B413A0")]
	private void ReturnToPivot(bool tween = false)
	{
	}

	[Token(Token = "0x60008FC")]
	[Address(RVA = "0x1B41264", Offset = "0x1B41264", VA = "0x1B41264")]
	[AsyncStateMachine(typeof(<ReturnTimer>d__29))]
	private UniTaskVoid ReturnTimer(float timeToReturn, CancellationToken token)
	{
		return default(UniTaskVoid);
	}

	[Token(Token = "0x60008FD")]
	[Address(RVA = "0x1B4115C", Offset = "0x1B4115C", VA = "0x1B4115C")]
	private void CancelTween()
	{
	}

	[Token(Token = "0x60008FE")]
	[Address(RVA = "0x1B415F8", Offset = "0x1B415F8", VA = "0x1B415F8")]
	private void RepopEffect()
	{
	}

	[Token(Token = "0x60008FF")]
	[Address(RVA = "0x1B41718", Offset = "0x1B41718", VA = "0x1B41718")]
	public EndrollBallController()
	{
	}
}
[Token(Token = "0x200020D")]
public class EndrollManager : MonoBehaviour
{
	[Token(Token = "0x200020E")]
	private enum State
	{
		[Token(Token = "0x4000AE0")]
		firstStage,
		[Token(Token = "0x4000AE1")]
		secondStage,
		[Token(Token = "0x4000AE2")]
		thirdStage
	}

	[StructLayout(3)]
	[Token(Token = "0x200020F")]
	[CompilerGenerated]
	private struct <Start>d__23 : IAsyncStateMachine
	{
		[Token(Token = "0x4000AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x4000AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public EndrollManager <>4__this;

		[Token(Token = "0x4000AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UniTask.Awaiter <>u__1;

		[Token(Token = "0x6000907")]
		[Address(RVA = "0x1B421C4", Offset = "0x1B421C4", VA = "0x1B421C4", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000908")]
		[Address(RVA = "0x1B42650", Offset = "0x1B42650", VA = "0x1B42650", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x2000210")]
	[CompilerGenerated]
	private struct <Update>d__24 : IAsyncStateMachine
	{
		[Token(Token = "0x4000AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x4000AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public EndrollManager <>4__this;

		[Token(Token = "0x4000AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private DOTweenAsyncExtensions.TweenAwaiter <>u__1;

		[Token(Token = "0x4000AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CancellationToken <token>5__2;

		[Token(Token = "0x4000AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private UniTask.Awaiter <>u__2;

		[Token(Token = "0x6000909")]
		[Address(RVA = "0x1B4265C", Offset = "0x1B4265C", VA = "0x1B4265C", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x600090A")]
		[Address(RVA = "0x1B435E4", Offset = "0x1B435E4", VA = "0x1B435E4", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x4000AC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioSource _bgmAudioSource;

	[Token(Token = "0x4000ACA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private EscalatorController _firstStageEscalatorController;

	[Token(Token = "0x4000ACB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float _secondStageTime;

	[Token(Token = "0x4000ACC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float _thirdStageTime;

	[Token(Token = "0x4000ACD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float _finalEffectStartTime;

	[Token(Token = "0x4000ACE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float _finalEffectEndTime;

	[Token(Token = "0x4000ACF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float _moveFinishTime;

	[Token(Token = "0x4000AD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject _firstStageObjs;

	[Token(Token = "0x4000AD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject _secondStageObjs;

	[Token(Token = "0x4000AD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject _thirdStageObjs;

	[Token(Token = "0x4000AD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject _finalEffectObjs;

	[Token(Token = "0x4000AD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private MoveObjsController _moveObjsController;

	[Token(Token = "0x4000AD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private GameObject _secondStageCameraCenterObj;

	[Token(Token = "0x4000AD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private GameObject _thirdStageCameraCenterObj;

	[Token(Token = "0x4000AD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private MeshRenderer _fadePanelMeshRenderer;

	[Token(Token = "0x4000AD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private Material _finalStageSkyBox;

	[Token(Token = "0x4000AD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private GameObject _gfiIcon;

	[Token(Token = "0x4000ADA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private GameObject _throwSpheres;

	[Token(Token = "0x4000ADB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private GameObject _magicSphere;

	[Token(Token = "0x4000ADC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private EndrollRunningEffect _endrollRunningEffect;

	[Token(Token = "0x4000ADD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool _isOneTime;

	[Token(Token = "0x4000ADE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private State _state;

	[Token(Token = "0x6000903")]
	[Address(RVA = "0x1B41FC0", Offset = "0x1B41FC0", VA = "0x1B41FC0")]
	[AsyncStateMachine(typeof(<Start>d__23))]
	private void Start()
	{
	}

	[Token(Token = "0x6000904")]
	[Address(RVA = "0x1B42074", Offset = "0x1B42074", VA = "0x1B42074")]
	[AsyncStateMachine(typeof(<Update>d__24))]
	private void Update()
	{
	}

	[Token(Token = "0x6000905")]
	[Address(RVA = "0x1B4212C", Offset = "0x1B4212C", VA = "0x1B4212C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000906")]
	[Address(RVA = "0x1B421BC", Offset = "0x1B421BC", VA = "0x1B421BC")]
	public EndrollManager()
	{
	}
}
[Token(Token = "0x2000211")]
public class EndrollPoint
{
	[Token(Token = "0x4000AED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float Point;

	[Token(Token = "0x600090B")]
	[Address(RVA = "0x1B41AB4", Offset = "0x1B41AB4", VA = "0x1B41AB4")]
	public EndrollPoint()
	{
	}
}
[Token(Token = "0x2000212")]
public class EndrollPointTextCounter : MonoBehaviour
{
	[Token(Token = "0x4000AEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int _initializedCount;

	[Token(Token = "0x4000AEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int _hitCount;

	[Token(Token = "0x170000E1")]
	public static int InitializedCount
	{
		[Token(Token = "0x600090C")]
		[Address(RVA = "0x1B435F0", Offset = "0x1B435F0", VA = "0x1B435F0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000E2")]
	public static int HitCount
	{
		[Token(Token = "0x600090D")]
		[Address(RVA = "0x1B43638", Offset = "0x1B43638", VA = "0x1B43638")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x600090E")]
	[Address(RVA = "0x1B42174", Offset = "0x1B42174", VA = "0x1B42174")]
	public static void ResetCount()
	{
	}

	[Token(Token = "0x600090F")]
	[Address(RVA = "0x1B43680", Offset = "0x1B43680", VA = "0x1B43680")]
	private void Start()
	{
	}

	[Token(Token = "0x6000910")]
	[Address(RVA = "0x1B41ABC", Offset = "0x1B41ABC", VA = "0x1B41ABC")]
	public void OnHit()
	{
	}

	[Token(Token = "0x6000911")]
	[Address(RVA = "0x1B436D0", Offset = "0x1B436D0", VA = "0x1B436D0")]
	public EndrollPointTextCounter()
	{
	}
}
[Token(Token = "0x2000213")]
public class EndrollRepopEffect : MonoBehaviour
{
	[Token(Token = "0x4000AF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _repopEffect;

	[Token(Token = "0x4000AF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioSource _bgmAudioSource;

	[Token(Token = "0x4000AF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float _repopTiming;

	[Token(Token = "0x4000AF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject _fitSphere;

	[Token(Token = "0x4000AF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _isOneTime;

	[Token(Token = "0x6000912")]
	[Address(RVA = "0x1B436D8", Offset = "0x1B436D8", VA = "0x1B436D8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000913")]
	[Address(RVA = "0x1B43720", Offset = "0x1B43720", VA = "0x1B43720")]
	private void RepopEffect()
	{
	}

	[Token(Token = "0x6000914")]
	[Address(RVA = "0x1B4384C", Offset = "0x1B4384C", VA = "0x1B4384C")]
	public EndrollRepopEffect()
	{
	}
}
[Token(Token = "0x2000214")]
public class EndrollRunningEffect : MonoBehaviour
{
	[Token(Token = "0x4000AF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Inject]
	private InputProvider _inputProvider;

	[Token(Token = "0x4000AF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Renderer _renderer;

	[Token(Token = "0x4000AF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float _minValue;

	[Token(Token = "0x4000AF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float _maxValue;

	[Token(Token = "0x4000AF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float _minAngle;

	[Token(Token = "0x4000AFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float _maxAngle;

	[Token(Token = "0x4000AFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int EmissionProperty;

	[Token(Token = "0x4000AFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float _value;

	[Token(Token = "0x6000915")]
	[Address(RVA = "0x1B425C4", Offset = "0x1B425C4", VA = "0x1B425C4")]
	public void StartEffect()
	{
	}

	[Token(Token = "0x6000916")]
	[Address(RVA = "0x1B434DC", Offset = "0x1B434DC", VA = "0x1B434DC")]
	public void StopEffect()
	{
	}

	[Token(Token = "0x6000917")]
	[Address(RVA = "0x1B43854", Offset = "0x1B43854", VA = "0x1B43854")]
	private void Update()
	{
	}

	[Token(Token = "0x6000918")]
	[Address(RVA = "0x1B43B10", Offset = "0x1B43B10", VA = "0x1B43B10")]
	public EndrollRunningEffect()
	{
	}
}
[Token(Token = "0x2000215")]
public class EndrollScoreController : MonoBehaviour
{
	[Token(Token = "0x4000AFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private TextMeshProUGUI _scoreText;

	[Token(Token = "0x4000AFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _lastScore;

	[Token(Token = "0x170000E3")]
	[Inject]
	private ISubscriber<EndrollPoint> OnAddPoint
	{
		[Token(Token = "0x600091D")]
		[Address(RVA = "0x1B43BC8", Offset = "0x1B43BC8", VA = "0x1B43BC8")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x600091E")]
		[Address(RVA = "0x1B43BD0", Offset = "0x1B43BD0", VA = "0x1B43BD0")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x600091F")]
	[Address(RVA = "0x1B43BD8", Offset = "0x1B43BD8", VA = "0x1B43BD8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000920")]
	[Address(RVA = "0x1B43D38", Offset = "0x1B43D38", VA = "0x1B43D38")]
	public EndrollScoreController()
	{
	}
}
[Token(Token = "0x2000216")]
public class EndrollZenjectInstaller : MonoInstaller
{
	[Token(Token = "0x6000922")]
	[Address(RVA = "0x1B43DDC", Offset = "0x1B43DDC", VA = "0x1B43DDC", Slot = "8")]
	public override void InstallBindings()
	{
	}

	[Token(Token = "0x6000923")]
	[Address(RVA = "0x1B43E8C", Offset = "0x1B43E8C", VA = "0x1B43E8C")]
	public EndrollZenjectInstaller()
	{
	}
}
[Token(Token = "0x2000217")]
public class EscalatorController : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000218")]
	public class EscalatorInformation
	{
		[Token(Token = "0x4000B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform escalatorBlock;

		[Token(Token = "0x4000B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int nowPointNum;

		[Token(Token = "0x4000B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 nowNormalized;

		[Token(Token = "0x4000B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float nextPointDistance;

		[Token(Token = "0x4000B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool _isStart;

		[Token(Token = "0x4000B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public StepState stepState;

		[Token(Token = "0x6000928")]
		[Address(RVA = "0x1B44368", Offset = "0x1B44368", VA = "0x1B44368")]
		public EscalatorInformation()
		{
		}
	}

	[Token(Token = "0x2000219")]
	public enum StepState
	{
		[Token(Token = "0x4000B12")]
		None,
		[Token(Token = "0x4000B13")]
		StartErea,
		[Token(Token = "0x4000B14")]
		NormalErea,
		[Token(Token = "0x4000B15")]
		EndErea
	}

	[StructLayout(3)]
	[Token(Token = "0x200021A")]
	[CompilerGenerated]
	private struct <Update>d__14 : IAsyncStateMachine
	{
		[Token(Token = "0x4000B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x4000B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public EscalatorController <>4__this;

		[Token(Token = "0x6000929")]
		[Address(RVA = "0x1B447A8", Offset = "0x1B447A8", VA = "0x1B447A8", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x600092A")]
		[Address(RVA = "0x1B45D34", Offset = "0x1B45D34", VA = "0x1B45D34", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x4000B00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _escalatorBlockPrefab;

	[Token(Token = "0x4000B01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject _escalatorBlocksParent;

	[Token(Token = "0x4000B02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform[] _escalatorPoints;

	[Token(Token = "0x4000B03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float _moveTime;

	[Token(Token = "0x4000B04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private bool _isFinishInstantiateBlocks;

	[Token(Token = "0x4000B05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float _speed;

	[Token(Token = "0x4000B06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float _allLength;

	[Token(Token = "0x4000B07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool _isMove;

	[Token(Token = "0x4000B08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 _defaultScale;

	[Token(Token = "0x4000B09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<EscalatorInformation> _escalatorInformations;

	[Token(Token = "0x4000B0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private float _value;

	[Token(Token = "0x6000924")]
	[Address(RVA = "0x1B43E94", Offset = "0x1B43E94", VA = "0x1B43E94")]
	private void Start()
	{
	}

	[Token(Token = "0x6000925")]
	[Address(RVA = "0x1B44378", Offset = "0x1B44378", VA = "0x1B44378")]
	[AsyncStateMachine(typeof(<Update>d__14))]
	private void Update()
	{
	}

	[Token(Token = "0x6000926")]
	[Address(RVA = "0x1B4442C", Offset = "0x1B4442C", VA = "0x1B4442C")]
	private void MoveStart()
	{
	}

	[Token(Token = "0x6000927")]
	[Address(RVA = "0x1B44718", Offset = "0x1B44718", VA = "0x1B44718")]
	public EscalatorController()
	{
	}
}
[Token(Token = "0x200021B")]
public class FinalEffectsController : MonoBehaviour
{
	[Token(Token = "0x600092B")]
	[Address(RVA = "0x1B45D40", Offset = "0x1B45D40", VA = "0x1B45D40")]
	private void Start()
	{
	}

	[Token(Token = "0x600092C")]
	[Address(RVA = "0x1B45D44", Offset = "0x1B45D44", VA = "0x1B45D44")]
	private void Update()
	{
	}

	[Token(Token = "0x600092D")]
	[Address(RVA = "0x1B45D48", Offset = "0x1B45D48", VA = "0x1B45D48")]
	public FinalEffectsController()
	{
	}
}
[Token(Token = "0x200021C")]
public class GetPointsView : MonoBehaviour
{
	[Token(Token = "0x4000B19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private CanvasGroup _canvasGroup;

	[Token(Token = "0x4000B1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI _pointText;

	[Token(Token = "0x4000B1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject _scoreObj;

	[Token(Token = "0x4000B1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 _defaultSize;

	[Token(Token = "0x600092E")]
	[Address(RVA = "0x1B45D50", Offset = "0x1B45D50", VA = "0x1B45D50")]
	private void Start()
	{
	}

	[Token(Token = "0x600092F")]
	[Address(RVA = "0x1B45D8C", Offset = "0x1B45D8C", VA = "0x1B45D8C")]
	private void ScoreEffect()
	{
	}

	[Token(Token = "0x6000930")]
	[Address(RVA = "0x1B46004", Offset = "0x1B46004", VA = "0x1B46004")]
	public GetPointsView()
	{
	}
}
[Token(Token = "0x200021D")]
public class MoveObjsController : MonoBehaviour
{
	[Token(Token = "0x4000B1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool _isMove;

	[Token(Token = "0x4000B1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject _cameraCenterBlock;

	[Token(Token = "0x4000B1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Material _stepMat;

	[Token(Token = "0x4000B20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Material _stepMatFinal;

	[Token(Token = "0x4000B21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float _stepMatSave;

	[Token(Token = "0x4000B22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float _stepMatFinalSave;

	[Token(Token = "0x4000B23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float _stepMatOffset;

	[Token(Token = "0x4000B24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private float _stepMatFinalOffset;

	[Token(Token = "0x6000933")]
	[Address(RVA = "0x1B460E4", Offset = "0x1B460E4", VA = "0x1B460E4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000934")]
	[Address(RVA = "0x1B461CC", Offset = "0x1B461CC", VA = "0x1B461CC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000935")]
	[Address(RVA = "0x1B46304", Offset = "0x1B46304", VA = "0x1B46304")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000936")]
	[Address(RVA = "0x1B46374", Offset = "0x1B46374", VA = "0x1B46374")]
	private void OnActiveSceneChanged(Scene preScene, Scene postScene)
	{
	}

	[Token(Token = "0x6000937")]
	[Address(RVA = "0x1B463E4", Offset = "0x1B463E4", VA = "0x1B463E4")]
	public MoveObjsController()
	{
	}
}
[Token(Token = "0x200021E")]
public class RotateObjs : MonoBehaviour
{
	[Token(Token = "0x4000B25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float _rotateSpeed;

	[Token(Token = "0x6000938")]
	[Address(RVA = "0x1B463F4", Offset = "0x1B463F4", VA = "0x1B463F4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000939")]
	[Address(RVA = "0x1B464A0", Offset = "0x1B464A0", VA = "0x1B464A0")]
	public RotateObjs()
	{
	}
}
[Token(Token = "0x200021F")]
public class StaffTextController : MonoBehaviour
{
	[Token(Token = "0x4000B26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AnimationCurve _spinCurve;

	[Token(Token = "0x4000B27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int _hitCount;

	[Token(Token = "0x4000B28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AudioSource _audioSource;

	[Token(Token = "0x4000B29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioClip _hitLowAudio;

	[Token(Token = "0x4000B2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private AudioClip _hitMiddleAudio;

	[Token(Token = "0x4000B2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private AudioClip _hitHighAudio;

	[Token(Token = "0x4000B2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private AudioClip _explosionAudio;

	[Token(Token = "0x4000B2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject _explosionEffect;

	[Token(Token = "0x4000B2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float _rotationSave;

	[Token(Token = "0x4000B2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private TextMeshPro _textMeshPro;

	[Token(Token = "0x600093A")]
	[Address(RVA = "0x1B464A8", Offset = "0x1B464A8", VA = "0x1B464A8")]
	private void Start()
	{
	}

	[Token(Token = "0x600093B")]
	[Address(RVA = "0x1B46574", Offset = "0x1B46574", VA = "0x1B46574")]
	private void Update()
	{
	}

	[Token(Token = "0x600093C")]
	[Address(RVA = "0x1B46578", Offset = "0x1B46578", VA = "0x1B46578")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x600093D")]
	[Address(RVA = "0x1B4691C", Offset = "0x1B4691C", VA = "0x1B4691C")]
	public StaffTextController()
	{
	}
}
[Token(Token = "0x2000220")]
public class TextMover : MonoBehaviour
{
	[Token(Token = "0x4000B30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float _delay;

	[Token(Token = "0x4000B31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float _maxY;

	[Token(Token = "0x4000B32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float _minY;

	[Token(Token = "0x4000B33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float _bgmBPM;

	[Token(Token = "0x4000B34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _startWaitTime;

	[Token(Token = "0x4000B35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _time;

	[Token(Token = "0x4000B36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float _beatSave;

	[Token(Token = "0x4000B37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float defaultScaleY;

	[Token(Token = "0x600093E")]
	[Address(RVA = "0x1B46924", Offset = "0x1B46924", VA = "0x1B46924")]
	private void Start()
	{
	}

	[Token(Token = "0x600093F")]
	[Address(RVA = "0x1B46950", Offset = "0x1B46950", VA = "0x1B46950")]
	private void Update()
	{
	}

	[Token(Token = "0x6000940")]
	[Address(RVA = "0x1B46954", Offset = "0x1B46954", VA = "0x1B46954")]
	public TextMover()
	{
	}
}
namespace Normal.UI
{
	[Token(Token = "0x2000221")]
	public class Keyboard : MonoBehaviour
	{
		[Token(Token = "0x2000222")]
		public delegate void KeyPressedDelegate(Keyboard keyboard, string keyPress);

		[Token(Token = "0x2000223")]
		public enum Layout
		{
			[Token(Token = "0x4000B41")]
			Letters,
			[Token(Token = "0x4000B42")]
			Numbers
		}

		[Token(Token = "0x4000B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _letters;

		[Token(Token = "0x4000B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject _numbers;

		[Token(Token = "0x4000B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private KeyboardKey _layoutSwapKey;

		[Token(Token = "0x4000B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private KeyboardMallet[] _mallets;

		[Token(Token = "0x4000B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private KeyboardKey[] _keys;

		[Token(Token = "0x4000B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool _shift;

		[Token(Token = "0x4000B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Layout _layout;

		[Token(Token = "0x170000E4")]
		public bool shift
		{
			[Token(Token = "0x6000943")]
			[Address(RVA = "0x1B46AA0", Offset = "0x1B46AA0", VA = "0x1B46AA0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000944")]
			[Address(RVA = "0x1B46AA8", Offset = "0x1B46AA8", VA = "0x1B46AA8")]
			set
			{
			}
		}

		[Token(Token = "0x170000E5")]
		public Layout layout
		{
			[Token(Token = "0x6000945")]
			[Address(RVA = "0x1B46B3C", Offset = "0x1B46B3C", VA = "0x1B46B3C")]
			get
			{
				return default(Layout);
			}
			[Token(Token = "0x6000946")]
			[Address(RVA = "0x1B46B44", Offset = "0x1B46B44", VA = "0x1B46B44")]
			set
			{
			}
		}

		[Token(Token = "0x14000010")]
		public event KeyPressedDelegate keyPressed
		{
			[Token(Token = "0x6000941")]
			[Address(RVA = "0x1B46968", Offset = "0x1B46968", VA = "0x1B46968")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6000942")]
			[Address(RVA = "0x1B46A04", Offset = "0x1B46A04", VA = "0x1B46A04")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6000947")]
		[Address(RVA = "0x1B46C5C", Offset = "0x1B46C5C", VA = "0x1B46C5C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000948")]
		[Address(RVA = "0x1B46D60", Offset = "0x1B46D60", VA = "0x1B46D60")]
		public void _MalletStruckKeyboardKey(KeyboardMallet mallet, KeyboardKey key)
		{
		}

		[Token(Token = "0x6000949")]
		[Address(RVA = "0x1B46AB0", Offset = "0x1B46AB0", VA = "0x1B46AB0")]
		private void SetShift(bool shift)
		{
		}

		[Token(Token = "0x600094A")]
		[Address(RVA = "0x1B46B48", Offset = "0x1B46B48", VA = "0x1B46B48")]
		private void SetLayout(Layout layout)
		{
		}

		[Token(Token = "0x600094B")]
		[Address(RVA = "0x1B470D8", Offset = "0x1B470D8", VA = "0x1B470D8")]
		public Keyboard()
		{
		}
	}
	[Token(Token = "0x2000224")]
	public class KeyboardDisplay : MonoBehaviour
	{
		[Token(Token = "0x4000B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TextMeshProUGUI _text;

		[Token(Token = "0x4000B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Keyboard _keyboard;

		[Token(Token = "0x4000B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private int _maxLength;

		[Token(Token = "0x4000B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _maxAudio;

		[Token(Token = "0x4000B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AudioSource _audio;

		[Token(Token = "0x4000B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool _punching;

		[Token(Token = "0x4000B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private TMP_Text _cautionText;

		[Token(Token = "0x170000E6")]
		public Keyboard keyboard
		{
			[Token(Token = "0x6000950")]
			[Address(RVA = "0x1B47268", Offset = "0x1B47268", VA = "0x1B47268")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000951")]
			[Address(RVA = "0x1B47270", Offset = "0x1B47270", VA = "0x1B47270")]
			set
			{
			}
		}

		[Token(Token = "0x6000952")]
		[Address(RVA = "0x1B47320", Offset = "0x1B47320", VA = "0x1B47320")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000953")]
		[Address(RVA = "0x1B47458", Offset = "0x1B47458", VA = "0x1B47458")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000954")]
		[Address(RVA = "0x1B47274", Offset = "0x1B47274", VA = "0x1B47274")]
		private void SetKeyboard(Keyboard keyboard)
		{
		}

		[Token(Token = "0x6000955")]
		[Address(RVA = "0x1B47384", Offset = "0x1B47384", VA = "0x1B47384")]
		private void StartObservingKeyboard(Keyboard keyboard)
		{
		}

		[Token(Token = "0x6000956")]
		[Address(RVA = "0x1B47460", Offset = "0x1B47460", VA = "0x1B47460")]
		private void StopObservingKeyboard(Keyboard keyboard)
		{
		}

		[Token(Token = "0x6000957")]
		[Address(RVA = "0x1B47534", Offset = "0x1B47534", VA = "0x1B47534")]
		private void KeyPressed(Keyboard keyboard, string keyPress)
		{
		}

		[Token(Token = "0x6000958")]
		[Address(RVA = "0x1B47798", Offset = "0x1B47798", VA = "0x1B47798")]
		public KeyboardDisplay()
		{
		}
	}
	[Token(Token = "0x2000225")]
	[ExecuteInEditMode]
	public class KeyboardKey : MonoBehaviour
	{
		[Token(Token = "0x4000B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string character;

		[Token(Token = "0x4000B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string displayCharacter;

		[Token(Token = "0x4000B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string shiftCharacter;

		[Token(Token = "0x4000B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string shiftDisplayCharacter;

		[Token(Token = "0x4000B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _shift;

		[Token(Token = "0x4000B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private TextMeshPro _text;

		[Token(Token = "0x4000B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Transform _geometry;

		[Token(Token = "0x4000B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float _position;

		[Token(Token = "0x4000B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private readonly float _targetPosition;

		[Token(Token = "0x4000B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4000B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private UnityEvent _pushedEvent;

		[Token(Token = "0x4000B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public Keyboard _keyboard;

		[Token(Token = "0x4000B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Plane _buttonPlane;

		[Token(Token = "0x170000E7")]
		public bool shift
		{
			[Token(Token = "0x600095A")]
			[Address(RVA = "0x1B477A8", Offset = "0x1B477A8", VA = "0x1B477A8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600095B")]
			[Address(RVA = "0x1B4708C", Offset = "0x1B4708C", VA = "0x1B4708C")]
			set
			{
			}
		}

		[Token(Token = "0x600095C")]
		[Address(RVA = "0x1B477CC", Offset = "0x1B477CC", VA = "0x1B477CC")]
		private void Awake()
		{
		}

		[Token(Token = "0x600095D")]
		[Address(RVA = "0x1B47854", Offset = "0x1B47854", VA = "0x1B47854")]
		public bool IsMalletHeadInFrontOfKey(KeyboardMallet mallet)
		{
			return default(bool);
		}

		[Token(Token = "0x600095E")]
		[Address(RVA = "0x1B46F10", Offset = "0x1B46F10", VA = "0x1B46F10")]
		public void KeyPressed()
		{
		}

		[Token(Token = "0x600095F")]
		[Address(RVA = "0x1B477B0", Offset = "0x1B477B0", VA = "0x1B477B0")]
		private void SetShift(bool shift)
		{
		}

		[Token(Token = "0x6000960")]
		[Address(RVA = "0x1B47890", Offset = "0x1B47890", VA = "0x1B47890")]
		private void Update()
		{
		}

		[Token(Token = "0x6000961")]
		[Address(RVA = "0x1B470A8", Offset = "0x1B470A8", VA = "0x1B470A8")]
		public void RefreshDisplayCharacter()
		{
		}

		[Token(Token = "0x6000962")]
		[Address(RVA = "0x1B47904", Offset = "0x1B47904", VA = "0x1B47904")]
		private string GetDisplayCharacter()
		{
			return null;
		}

		[Token(Token = "0x6000963")]
		[Address(RVA = "0x1B47040", Offset = "0x1B47040", VA = "0x1B47040")]
		public string GetCharacter()
		{
			return null;
		}

		[Token(Token = "0x6000964")]
		[Address(RVA = "0x1B479B8", Offset = "0x1B479B8", VA = "0x1B479B8")]
		public KeyboardKey()
		{
		}
	}
	[Token(Token = "0x2000226")]
	[ExecuteInEditMode]
	public class KeyboardKeyMesh : MonoBehaviour
	{
		[Token(Token = "0x4000B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Mesh _sharedMesh;

		[Token(Token = "0x6000965")]
		[Address(RVA = "0x1B47A10", Offset = "0x1B47A10", VA = "0x1B47A10")]
		private static Mesh CreateMesh()
		{
			return null;
		}

		[Token(Token = "0x6000966")]
		[Address(RVA = "0x1B47EB4", Offset = "0x1B47EB4", VA = "0x1B47EB4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000967")]
		[Address(RVA = "0x1B47FA4", Offset = "0x1B47FA4", VA = "0x1B47FA4")]
		public KeyboardKeyMesh()
		{
		}
	}
	[Token(Token = "0x2000227")]
	[RequireComponent(typeof(Rigidbody))]
	public class KeyboardMallet : MonoBehaviour
	{
		[Token(Token = "0x4000B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _head;

		[Token(Token = "0x4000B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private VRHand.HandType _hand;

		[Token(Token = "0x4000B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Inject]
		private InputProvider _inputProvider;

		[Token(Token = "0x4000B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public Vector3 malletHeadPosition;

		[Token(Token = "0x4000B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 _newMalletHeadPosition;

		[Token(Token = "0x4000B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public Keyboard _keyboard;

		[Token(Token = "0x6000968")]
		[Address(RVA = "0x1B47FAC", Offset = "0x1B47FAC", VA = "0x1B47FAC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000969")]
		[Address(RVA = "0x1B4802C", Offset = "0x1B4802C", VA = "0x1B4802C")]
		private void PositionGeometry(Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x600096A")]
		[Address(RVA = "0x1B480C0", Offset = "0x1B480C0", VA = "0x1B480C0")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x600096B")]
		[Address(RVA = "0x1B4827C", Offset = "0x1B4827C", VA = "0x1B4827C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600096C")]
		[Address(RVA = "0x1B4824C", Offset = "0x1B4824C", VA = "0x1B4824C")]
		private void TriggerHapticPulse()
		{
		}

		[Token(Token = "0x600096D")]
		[Address(RVA = "0x1B482C4", Offset = "0x1B482C4", VA = "0x1B482C4")]
		public KeyboardMallet()
		{
		}
	}
	[Token(Token = "0x2000228")]
	public class KeyboardMalletHandle : MonoBehaviour
	{
		[Token(Token = "0x4000B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float worldZScale;

		[Token(Token = "0x600096E")]
		[Address(RVA = "0x1B482CC", Offset = "0x1B482CC", VA = "0x1B482CC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600096F")]
		[Address(RVA = "0x1B483A4", Offset = "0x1B483A4", VA = "0x1B483A4")]
		public KeyboardMalletHandle()
		{
		}
	}
	[Token(Token = "0x2000229")]
	public class MoveAndScale : MonoBehaviour
	{
		[Token(Token = "0x200022A")]
		private enum State
		{
			[Token(Token = "0x4000B6D")]
			Idle,
			[Token(Token = "0x4000B6E")]
			Move,
			[Token(Token = "0x4000B6F")]
			Scale
		}

		[Token(Token = "0x4000B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject leftController;

		[Token(Token = "0x4000B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject rightController;

		[Token(Token = "0x4000B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private State _state;

		[Token(Token = "0x4000B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject _moveController;

		[Token(Token = "0x4000B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject _idleController;

		[Token(Token = "0x4000B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 _positionOffsetFromController;

		[Token(Token = "0x4000B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Quaternion _rotationOffsetFromController;

		[Token(Token = "0x4000B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Vector3 _positionOffset;

		[Token(Token = "0x4000B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Quaternion _rotationOffset;

		[Token(Token = "0x4000B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 _scaleOffset;

		[Token(Token = "0x4000B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Vector3 _targetPosition;

		[Token(Token = "0x4000B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Quaternion _targetRotation;

		[Token(Token = "0x4000B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Vector3 _targetScale;

		[Token(Token = "0x6000970")]
		[Address(RVA = "0x1B483B8", Offset = "0x1B483B8", VA = "0x1B483B8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000971")]
		[Address(RVA = "0x1B48428", Offset = "0x1B48428", VA = "0x1B48428")]
		private void Update()
		{
		}

		[Token(Token = "0x6000972")]
		[Address(RVA = "0x1B48620", Offset = "0x1B48620", VA = "0x1B48620")]
		private void HandleGripState()
		{
		}

		[Token(Token = "0x6000973")]
		[Address(RVA = "0x1B486D0", Offset = "0x1B486D0", VA = "0x1B486D0")]
		private void BeginMoveOrScaleIfNeeded()
		{
		}

		[Token(Token = "0x6000974")]
		[Address(RVA = "0x1B48C60", Offset = "0x1B48C60", VA = "0x1B48C60")]
		private void BeginMove(GameObject moveController, GameObject idleController)
		{
		}

		[Token(Token = "0x6000975")]
		[Address(RVA = "0x1B48834", Offset = "0x1B48834", VA = "0x1B48834")]
		private void Move()
		{
		}

		[Token(Token = "0x6000976")]
		[Address(RVA = "0x1B4891C", Offset = "0x1B4891C", VA = "0x1B4891C")]
		private void EndMove()
		{
		}

		[Token(Token = "0x6000977")]
		[Address(RVA = "0x1B48ACC", Offset = "0x1B48ACC", VA = "0x1B48ACC")]
		private void BeginScale()
		{
		}

		[Token(Token = "0x6000978")]
		[Address(RVA = "0x1B489CC", Offset = "0x1B489CC", VA = "0x1B489CC")]
		private void Scale()
		{
		}

		[Token(Token = "0x6000979")]
		[Address(RVA = "0x1B48AC8", Offset = "0x1B48AC8", VA = "0x1B48AC8")]
		private void EndScale()
		{
		}

		[Token(Token = "0x600097A")]
		[Address(RVA = "0x1B4873C", Offset = "0x1B4873C", VA = "0x1B4873C")]
		private bool GetGrip(GameObject controller)
		{
			return default(bool);
		}

		[Token(Token = "0x600097B")]
		[Address(RVA = "0x1B49064", Offset = "0x1B49064", VA = "0x1B49064")]
		private Vector3 GetControllerCentroid()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600097C")]
		[Address(RVA = "0x1B48E78", Offset = "0x1B48E78", VA = "0x1B48E78")]
		private Quaternion GetControllerOrientation()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600097D")]
		[Address(RVA = "0x1B48F8C", Offset = "0x1B48F8C", VA = "0x1B48F8C")]
		private float GetControllerDistance()
		{
			return default(float);
		}

		[Token(Token = "0x600097E")]
		[Address(RVA = "0x1B48DC4", Offset = "0x1B48DC4", VA = "0x1B48DC4")]
		private Matrix4x4 GetControllerCentroidTransform()
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x600097F")]
		[Address(RVA = "0x1B490E8", Offset = "0x1B490E8", VA = "0x1B490E8")]
		public MoveAndScale()
		{
		}
	}
}
namespace __Production__.GrooveFitGames.GF2_PizzaDelivery
{
	[Token(Token = "0x200022B")]
	public class CheckRaiseHand : EventBlock
	{
		[StructLayout(3)]
		[Token(Token = "0x200022C")]
		[CompilerGenerated]
		private struct <SetEvent>d__8 : IAsyncStateMachine
		{
			[Token(Token = "0x4000B78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000B79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x4000B7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CheckRaiseHand <>4__this;

			[Token(Token = "0x4000B7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken token;

			[Token(Token = "0x4000B7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6000983")]
			[Address(RVA = "0x1B49350", Offset = "0x1B49350", VA = "0x1B49350", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000984")]
			[Address(RVA = "0x1B49804", Offset = "0x1B49804", VA = "0x1B49804", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200022D")]
		[CompilerGenerated]
		private struct <RaiseHand>d__9 : IAsyncStateMachine
		{
			[Token(Token = "0x4000B7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000B7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4000B7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public CheckRaiseHand <>4__this;

			[Token(Token = "0x4000B80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CancellationToken token;

			[Token(Token = "0x4000B81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <t>5__2;

			[Token(Token = "0x4000B82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6000985")]
			[Address(RVA = "0x1B4985C", Offset = "0x1B4985C", VA = "0x1B4985C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000986")]
			[Address(RVA = "0x1B49EB0", Offset = "0x1B49EB0", VA = "0x1B49EB0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Setting")]
		private bool _raiseBothHand;

		[Token(Token = "0x4000B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MultilingualTextMeshPro _textPanel;

		[Token(Token = "0x4000B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private string _key;

		[Token(Token = "0x4000B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Header("Debug")]
		[SerializeField]
		private bool _useDebugText;

		[Token(Token = "0x4000B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[TextArea(4, 8)]
		public string _debugText;

		[Token(Token = "0x4000B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Inject]
		private MultilingualTextManager _multilingualTextManager;

		[Token(Token = "0x4000B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Inject]
		private IPublisher<CharacterActionData> _publisher;

		[Token(Token = "0x4000B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Inject]
		private InputProvider _inputProvider;

		[Token(Token = "0x6000980")]
		[Address(RVA = "0x1B490F0", Offset = "0x1B490F0", VA = "0x1B490F0", Slot = "4")]
		[AsyncStateMachine(typeof(<SetEvent>d__8))]
		public override UniTask<bool> SetEvent(CancellationToken token)
		{
			return default(UniTask<bool>);
		}

		[Token(Token = "0x6000981")]
		[Address(RVA = "0x1B491CC", Offset = "0x1B491CC", VA = "0x1B491CC")]
		[AsyncStateMachine(typeof(<RaiseHand>d__9))]
		private UniTask RaiseHand(CancellationToken token)
		{
			return default(UniTask);
		}

		[Token(Token = "0x6000982")]
		[Address(RVA = "0x1B49348", Offset = "0x1B49348", VA = "0x1B49348")]
		public CheckRaiseHand()
		{
		}
	}
	[Token(Token = "0x200022E")]
	public class GoalHouseController : MonoBehaviour
	{
		[Token(Token = "0x4000B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _takozo;

		[Token(Token = "0x4000B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject _takozoHouse;

		[Token(Token = "0x4000B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 _takozoPosSave;

		[Token(Token = "0x4000B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Quaternion _takozoRotSave;

		[Token(Token = "0x4000B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool _isTakozoHouseOpen;

		[Token(Token = "0x4000B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly int _takozoHouseBeat;

		[Token(Token = "0x4000B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private float _blonzeSetPosZ;

		[Token(Token = "0x4000B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private float _silverSetPosZ;

		[Token(Token = "0x4000B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private float _goldSetPosZ;

		[Token(Token = "0x4000B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private float _platinumPosZ;

		[Token(Token = "0x4000B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private readonly Vector3 _forwardZ;

		[Token(Token = "0x4000B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Vector3 _targetPos;

		[Token(Token = "0x4000B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool _nowPractice;

		[Token(Token = "0x4000B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private Vector3 _saveStartPos;

		[Token(Token = "0x4000B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Vector3 _saveStartScale;

		[Token(Token = "0x4000B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Tween _tween;

		[Token(Token = "0x170000E8")]
		[Inject]
		private ISubscriber<BeatData> OnBeat
		{
			[Token(Token = "0x6000987")]
			[Address(RVA = "0x1B49EBC", Offset = "0x1B49EBC", VA = "0x1B49EBC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000988")]
			[Address(RVA = "0x1B49EC4", Offset = "0x1B49EC4", VA = "0x1B49EC4")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170000E9")]
		[Inject]
		private ISubscriber<FPActionData> OnFPActionData
		{
			[Token(Token = "0x6000989")]
			[Address(RVA = "0x1B49ECC", Offset = "0x1B49ECC", VA = "0x1B49ECC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600098A")]
			[Address(RVA = "0x1B49ED4", Offset = "0x1B49ED4", VA = "0x1B49ED4")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170000EA")]
		[Inject]
		private ISubscriber<GameStatus> OnChangeStatus
		{
			[Token(Token = "0x600098B")]
			[Address(RVA = "0x1B49EDC", Offset = "0x1B49EDC", VA = "0x1B49EDC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600098C")]
			[Address(RVA = "0x1B49EE4", Offset = "0x1B49EE4", VA = "0x1B49EE4")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x600098D")]
		[Address(RVA = "0x1B49EEC", Offset = "0x1B49EEC", VA = "0x1B49EEC")]
		private void Start()
		{
		}

		[Token(Token = "0x600098E")]
		[Address(RVA = "0x1B4A458", Offset = "0x1B4A458", VA = "0x1B4A458")]
		public void InitializeGoalHouse()
		{
		}

		[Token(Token = "0x600098F")]
		[Address(RVA = "0x1B4A520", Offset = "0x1B4A520", VA = "0x1B4A520")]
		private void InitializePos()
		{
		}

		[Token(Token = "0x6000990")]
		[Address(RVA = "0x1B4A56C", Offset = "0x1B4A56C", VA = "0x1B4A56C")]
		private void MoveForward(FPActionData data)
		{
		}

		[Token(Token = "0x6000991")]
		[Address(RVA = "0x1B4A774", Offset = "0x1B4A774", VA = "0x1B4A774")]
		public GoalHouseController()
		{
		}
	}
	[Token(Token = "0x200022F")]
	public class KamemaruActionManager : MonoBehaviour
	{
		[Token(Token = "0x4000B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Kamemaru")]
		[SerializeField]
		private Transform _Kamemaru;

		[Token(Token = "0x4000B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource _audio;

		[Token(Token = "0x4000B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Animator _animator;

		[Token(Token = "0x4000B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Animator _scooter;

		[Token(Token = "0x4000B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Header("Audio")]
		[SerializeField]
		private AudioClip _ha;

		[Token(Token = "0x4000B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private AudioClip _soiya;

		[Token(Token = "0x4000B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private AudioClip _one;

		[Token(Token = "0x4000B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioClip _two;

		[Token(Token = "0x4000B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioClip _three;

		[Token(Token = "0x4000B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private AudioClip _four;

		[Token(Token = "0x4000BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private AudioClip _five;

		[Token(Token = "0x4000BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private AudioClip _six;

		[Token(Token = "0x4000BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private AudioClip _seven;

		[Token(Token = "0x4000BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[Header("Old")]
		[SerializeField]
		private AudioClip _threeCount;

		[Token(Token = "0x4000BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private AudioClip _sevenCount;

		[Token(Token = "0x4000BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private CancellationTokenSource KamemaruCancellationTokenSource;

		[Token(Token = "0x4000BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private int lastBeat;

		[Token(Token = "0x4000BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private float defaultScaleY;

		[Token(Token = "0x4000BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float scaleY;

		[Token(Token = "0x4000BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private GameObject currentBendObject;

		[Token(Token = "0x4000BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private bool _countInterrupted;

		[Token(Token = "0x170000EB")]
		[Inject]
		private ISubscriber<CharacterActionData> OnCharacterAction
		{
			[Token(Token = "0x6000995")]
			[Address(RVA = "0x1B4A890", Offset = "0x1B4A890", VA = "0x1B4A890")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000996")]
			[Address(RVA = "0x1B4A898", Offset = "0x1B4A898", VA = "0x1B4A898")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170000EC")]
		[Inject]
		private ISubscriber<FPActionData> OnFPAction
		{
			[Token(Token = "0x6000997")]
			[Address(RVA = "0x1B4A8A0", Offset = "0x1B4A8A0", VA = "0x1B4A8A0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000998")]
			[Address(RVA = "0x1B4A8A8", Offset = "0x1B4A8A8", VA = "0x1B4A8A8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170000ED")]
		[Inject]
		private ISubscriber<BeatData> OnBeat
		{
			[Token(Token = "0x6000999")]
			[Address(RVA = "0x1B4A8B0", Offset = "0x1B4A8B0", VA = "0x1B4A8B0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600099A")]
			[Address(RVA = "0x1B4A8B8", Offset = "0x1B4A8B8", VA = "0x1B4A8B8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x600099B")]
		[Address(RVA = "0x1B4A8C0", Offset = "0x1B4A8C0", VA = "0x1B4A8C0")]
		private void Start()
		{
		}

		[Token(Token = "0x600099C")]
		[Address(RVA = "0x1B4AC9C", Offset = "0x1B4AC9C", VA = "0x1B4AC9C")]
		private void DoFPAction(FPActionData value)
		{
		}

		[Token(Token = "0x600099D")]
		[Address(RVA = "0x1B4B30C", Offset = "0x1B4B30C", VA = "0x1B4B30C")]
		private void DoCharacterAction(CharacterActionData data)
		{
		}

		[Token(Token = "0x600099E")]
		[Address(RVA = "0x1B4B748", Offset = "0x1B4B748", VA = "0x1B4B748")]
		private void DoBeatAction(BeatData data)
		{
		}

		[Token(Token = "0x600099F")]
		[Address(RVA = "0x1B4B7A0", Offset = "0x1B4B7A0", VA = "0x1B4B7A0")]
		private void OnBeatScaleChange()
		{
		}

		[Token(Token = "0x60009A0")]
		[Address(RVA = "0x1B4B5EC", Offset = "0x1B4B5EC", VA = "0x1B4B5EC")]
		private void ResetTriggers()
		{
		}

		[Token(Token = "0x60009A1")]
		[Address(RVA = "0x1B4B6B8", Offset = "0x1B4B6B8", VA = "0x1B4B6B8")]
		private void ChangeState(int _state)
		{
		}

		[Token(Token = "0x60009A2")]
		[Address(RVA = "0x1B4B88C", Offset = "0x1B4B88C", VA = "0x1B4B88C")]
		public KamemaruActionManager()
		{
		}
	}
	[Token(Token = "0x2000230")]
	public class MoveBuildingController : MonoBehaviour
	{
		[Token(Token = "0x4000BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PizzaDeliveryChargeKeys _targetChargeKey;

		[Token(Token = "0x4000BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Material _sccessMat;

		[Token(Token = "0x4000BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private SkinnedMeshRenderer _skinnedMeshRenderer;

		[Token(Token = "0x4000BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float shrinkRate;

		[Token(Token = "0x4000BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool _isSccess;

		[Token(Token = "0x4000BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material[] _defaultMats;

		[Token(Token = "0x4000BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GameStatus.Status currentStatus;

		[Token(Token = "0x170000EE")]
		[Inject]
		private ISubscriber<ChargeData> OnChargeData
		{
			[Token(Token = "0x60009A7")]
			[Address(RVA = "0x1B4B910", Offset = "0x1B4B910", VA = "0x1B4B910")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60009A8")]
			[Address(RVA = "0x1B4B918", Offset = "0x1B4B918", VA = "0x1B4B918")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170000EF")]
		[Inject]
		private ISubscriber<GameStatus> OnChangeStatus
		{
			[Token(Token = "0x60009A9")]
			[Address(RVA = "0x1B4B920", Offset = "0x1B4B920", VA = "0x1B4B920")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60009AA")]
			[Address(RVA = "0x1B4B928", Offset = "0x1B4B928", VA = "0x1B4B928")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x60009AB")]
		[Address(RVA = "0x1B4B930", Offset = "0x1B4B930", VA = "0x1B4B930")]
		private void Start()
		{
		}

		[Token(Token = "0x60009AC")]
		[Address(RVA = "0x1B4BBA0", Offset = "0x1B4BBA0", VA = "0x1B4BBA0")]
		private void Shrink(ChargeData data)
		{
		}

		[Token(Token = "0x60009AD")]
		[Address(RVA = "0x1B4BD2C", Offset = "0x1B4BD2C", VA = "0x1B4BD2C")]
		private void JudgeFinish(ChargeData data)
		{
		}

		[Token(Token = "0x60009AE")]
		[Address(RVA = "0x1B4BE68", Offset = "0x1B4BE68", VA = "0x1B4BE68")]
		private void JudgeFinishImmediately()
		{
		}

		[Token(Token = "0x60009AF")]
		[Address(RVA = "0x1B4BEA8", Offset = "0x1B4BEA8", VA = "0x1B4BEA8")]
		public MoveBuildingController()
		{
		}
	}
	[Token(Token = "0x2000231")]
	public class PizzaDeliveryAlertFukidashi : MonoBehaviour
	{
		[Token(Token = "0x4000BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _fukidashi;

		[Token(Token = "0x4000BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private PizzaDeliveryInputPublisher _inputPublisher;

		[Token(Token = "0x4000BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Inject]
		private InputProvider _inputProvider;

		[Token(Token = "0x4000BBB")]
		private const float _head_x_thresh = 0.1f;

		[Token(Token = "0x4000BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _isOnGame;

		[Token(Token = "0x170000F0")]
		[Inject]
		private ISubscriber<OnMusicGame> OnMusicGameMessage
		{
			[Token(Token = "0x60009B3")]
			[Address(RVA = "0x1B4BF48", Offset = "0x1B4BF48", VA = "0x1B4BF48")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60009B4")]
			[Address(RVA = "0x1B4BF50", Offset = "0x1B4BF50", VA = "0x1B4BF50")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x60009B5")]
		[Address(RVA = "0x1B4BF58", Offset = "0x1B4BF58", VA = "0x1B4BF58")]
		private void Start()
		{
		}

		[Token(Token = "0x60009B6")]
		[Address(RVA = "0x1B4C100", Offset = "0x1B4C100", VA = "0x1B4C100")]
		private void StartSubscribe()
		{
		}

		[Token(Token = "0x60009B7")]
		[Address(RVA = "0x1B4C3D4", Offset = "0x1B4C3D4", VA = "0x1B4C3D4")]
		private void EnableAlert()
		{
		}

		[Token(Token = "0x60009B8")]
		[Address(RVA = "0x1B4C0C0", Offset = "0x1B4C0C0", VA = "0x1B4C0C0")]
		private void DisableAlert()
		{
		}

		[Token(Token = "0x60009B9")]
		[Address(RVA = "0x1B4C41C", Offset = "0x1B4C41C", VA = "0x1B4C41C")]
		public PizzaDeliveryAlertFukidashi()
		{
		}
	}
	[Token(Token = "0x2000233")]
	[RequireComponent(typeof(GrooveFitAudioSource))]
	public class PizzaDeliveryChargeSound : MonoBehaviour
	{
		[Token(Token = "0x4000BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioClip _bendingCharge;

		[Token(Token = "0x4000BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AudioSource _audio;

		[Token(Token = "0x4000BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _playAudio;

		[Token(Token = "0x4000BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool _pauseAudio;

		[Token(Token = "0x4000BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameStatus.Status currentStatus;

		[Token(Token = "0x170000F1")]
		[Inject]
		private ISubscriber<ChargeData> OnChargeData
		{
			[Token(Token = "0x60009C1")]
			[Address(RVA = "0x1B4C6E0", Offset = "0x1B4C6E0", VA = "0x1B4C6E0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60009C2")]
			[Address(RVA = "0x1B4C6E8", Offset = "0x1B4C6E8", VA = "0x1B4C6E8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170000F2")]
		[Inject]
		private ISubscriber<GameStatus> OnChangeStatus
		{
			[Token(Token = "0x60009C3")]
			[Address(RVA = "0x1B4C6F0", Offset = "0x1B4C6F0", VA = "0x1B4C6F0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60009C4")]
			[Address(RVA = "0x1B4C6F8", Offset = "0x1B4C6F8", VA = "0x1B4C6F8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x60009C5")]
		[Address(RVA = "0x1B4C700", Offset = "0x1B4C700", VA = "0x1B4C700")]
		private void Start()
		{
		}

		[Token(Token = "0x60009C6")]
		[Address(RVA = "0x1B4C94C", Offset = "0x1B4C94C", VA = "0x1B4C94C")]
		private void PlayChargeSound(ChargeData data)
		{
		}

		[Token(Token = "0x60009C7")]
		[Address(RVA = "0x1B4CA10", Offset = "0x1B4CA10", VA = "0x1B4CA10")]
		public PizzaDeliveryChargeSound()
		{
		}
	}
	[Token(Token = "0x2000234")]
	public class PizzaDeliveryClearCounter : PracticeClearCounter
	{
		[Token(Token = "0x2000235")]
		private enum PracticeType
		{
			[Token(Token = "0x4000BCB")]
			Short,
			[Token(Token = "0x4000BCC")]
			Long
		}

		[Token(Token = "0x4000BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PracticeType _practiceType;

		[Token(Token = "0x4000BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private BoolReactiveProperty _clearMessage;

		[Token(Token = "0x170000F3")]
		[Inject]
		private ISubscriber<FPActionData> OnFPAction
		{
			[Token(Token = "0x60009C9")]
			[Address(RVA = "0x1B4CA64", Offset = "0x1B4CA64", VA = "0x1B4CA64")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60009CA")]
			[Address(RVA = "0x1B4CA6C", Offset = "0x1B4CA6C", VA = "0x1B4CA6C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170000F4")]
		public override BoolReactiveProperty ClearMessage
		{
			[Token(Token = "0x60009CE")]
			[Address(RVA = "0x1B4CE14", Offset = "0x1B4CE14", VA = "0x1B4CE14", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60009CF")]
			[Address(RVA = "0x1B4CE1C", Offset = "0x1B4CE1C", VA = "0x1B4CE1C", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x60009CB")]
		[Address(RVA = "0x1B4CA74", Offset = "0x1B4CA74", VA = "0x1B4CA74")]
		private void Start()
		{
		}

		[Token(Token = "0x60009CC")]
		[Address(RVA = "0x1B4CBE0", Offset = "0x1B4CBE0", VA = "0x1B4CBE0")]
		private void ShortCount(FPActionData data)
		{
		}

		[Token(Token = "0x60009CD")]
		[Address(RVA = "0x1B4CCF8", Offset = "0x1B4CCF8", VA = "0x1B4CCF8")]
		private void LongCount(FPActionData data)
		{
		}

		[Token(Token = "0x60009D0")]
		[Address(RVA = "0x1B4CE24", Offset = "0x1B4CE24", VA = "0x1B4CE24")]
		public PizzaDeliveryClearCounter()
		{
		}
	}
	[Token(Token = "0x2000236")]
	public class PizzaDeliveryFPActionSubscribeEvent : FPActionSubscribeEvent
	{
		[Token(Token = "0x4000BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<PizzaDeliveryFPActionEvent> _actionEvent;

		[Token(Token = "0x60009D2")]
		[Address(RVA = "0x1B4CE48", Offset = "0x1B4CE48", VA = "0x1B4CE48")]
		private void Start()
		{
		}

		[Token(Token = "0x60009D3")]
		[Address(RVA = "0x1B4CEC4", Offset = "0x1B4CEC4", VA = "0x1B4CEC4")]
		public PizzaDeliveryFPActionSubscribeEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000237")]
	public class PizzaDeliveryFPActionEvent : FPActionEventBase
	{
		[Token(Token = "0x4000BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private PizzaDeliveryEventKeys Key;

		[Token(Token = "0x60009D4")]
		[Address(RVA = "0x1B4CECC", Offset = "0x1B4CECC", VA = "0x1B4CECC", Slot = "4")]
		public override string GetKey()
		{
			return null;
		}

		[Token(Token = "0x60009D5")]
		[Address(RVA = "0x1B4CF34", Offset = "0x1B4CF34", VA = "0x1B4CF34")]
		public PizzaDeliveryFPActionEvent()
		{
		}
	}
	[Token(Token = "0x2000238")]
	[RequireComponent(typeof(GrooveFitAudioSource))]
	public class PizzaDeliveryGunSound : MonoBehaviour
	{
		[Token(Token = "0x4000BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioClip _gunSignal;

		[Token(Token = "0x4000BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip _gunShootSound;

		[Token(Token = "0x4000BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip _machinegunSignal;

		[Token(Token = "0x4000BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _machinegunShootSound;

		[Token(Token = "0x4000BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AudioClip _middleBadGunSound;

		[Token(Token = "0x4000BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private AudioSource _audio;

		[Token(Token = "0x4000BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GameStatus.Status currentStatus;

		[Token(Token = "0x170000F5")]
		[Inject]
		private ISubscriber<FPActionData> OnFPAction
		{
			[Token(Token = "0x60009D6")]
			[Address(RVA = "0x1B4CF3C", Offset = "0x1B4CF3C", VA = "0x1B4CF3C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60009D7")]
			[Address(RVA = "0x1B4CF44", Offset = "0x1B4CF44", VA = "0x1B4CF44")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170000F6")]
		[Inject]
		private ISubscriber<GameStatus> OnChangeStatus
		{
			[Token(Token = "0x60009D8")]
			[Address(RVA = "0x1B4CF4C", Offset = "0x1B4CF4C", VA = "0x1B4CF4C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60009D9")]
			[Address(RVA = "0x1B4CF54", Offset = "0x1B4CF54", VA = "0x1B4CF54")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x60009DA")]
		[Address(RVA = "0x1B4CF5C", Offset = "0x1B4CF5C", VA = "0x1B4CF5C")]
		private void Start()
		{
		}

		[Token(Token = "0x60009DB")]
		[Address(RVA = "0x1B4D1A8", Offset = "0x1B4D1A8", VA = "0x1B4D1A8")]
		private void PlaySound(FPActionData value)
		{
		}

		[Token(Token = "0x60009DC")]
		[Address(RVA = "0x1B4D388", Offset = "0x1B4D388", VA = "0x1B4D388")]
		public PizzaDeliveryGunSound()
		{
		}
	}
	[Token(Token = "0x2000239")]
	public class PizzaDeliveryHaptics : MonoBehaviour
	{
		[Token(Token = "0x60009DF")]
		[Address(RVA = "0x1B4D3F4", Offset = "0x1B4D3F4", VA = "0x1B4D3F4")]
		private void Start()
		{
		}

		[Token(Token = "0x60009E0")]
		[Address(RVA = "0x1B4D3F8", Offset = "0x1B4D3F8", VA = "0x1B4D3F8")]
		private void Update()
		{
		}

		[Token(Token = "0x60009E1")]
		[Address(RVA = "0x1B4D3FC", Offset = "0x1B4D3FC", VA = "0x1B4D3FC")]
		public PizzaDeliveryHaptics()
		{
		}
	}
	[Token(Token = "0x200023A")]
	public class PizzaDeliveryInputJudgeAction : JudgeActionBase
	{
		[Token(Token = "0x4000BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private InputPublisher _inputPublisher;

		[Token(Token = "0x4000BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float _judgeStartBeat;

		[Token(Token = "0x4000BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float _bulletHitStartBeat;

		[Token(Token = "0x4000BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float _bulletHitEndBeat;

		[Token(Token = "0x4000BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float _judgeEndBeat;

		[Token(Token = "0x4000BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private PizzaDeliveryInputKeys _targetState;

		[Token(Token = "0x4000BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private PizzaDeliveryEventKeys _publishFPAction;

		[Token(Token = "0x4000BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private PizzaDeliveryChargeKeys _chargeKey;

		[Token(Token = "0x4000BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float _bendValue;

		[Token(Token = "0x4000BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private PizzaDeliveryInputKeys _state;

		[Token(Token = "0x4000BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float _previousBeat;

		[Token(Token = "0x4000BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool _isJudging;

		[Token(Token = "0x4000BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
		private bool _isJudgePublished;

		[Token(Token = "0x4000BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _chargedValue;

		[Token(Token = "0x4000BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private readonly string RightBendKey;

		[Token(Token = "0x4000BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private readonly string LeftBendKey;

		[Token(Token = "0x4000BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private readonly string NotBendKey;

		[Token(Token = "0x170000F7")]
		[Inject]
		private IPublisher<ChargeData> ChargeDataMessage
		{
			[Token(Token = "0x60009E2")]
			[Address(RVA = "0x1B4D404", Offset = "0x1B4D404", VA = "0x1B4D404")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60009E3")]
			[Address(RVA = "0x1B4D40C", Offset = "0x1B4D40C", VA = "0x1B4D40C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170000F8")]
		private float _maxChargeValue
		{
			[Token(Token = "0x60009E4")]
			[Address(RVA = "0x1B4D414", Offset = "0x1B4D414", VA = "0x1B4D414")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60009E5")]
		[Address(RVA = "0x1B4D42C", Offset = "0x1B4D42C", VA = "0x1B4D42C", Slot = "5")]
		protected override void AdditionalSetComponent()
		{
		}

		[Token(Token = "0x60009E6")]
		[Address(RVA = "0x1B4D514", Offset = "0x1B4D514", VA = "0x1B4D514", Slot = "4")]
		protected override void BeatSubscribeAction(float currentBeat)
		{
		}

		[Token(Token = "0x60009E7")]
		[Address(RVA = "0x1B4D5FC", Offset = "0x1B4D5FC", VA = "0x1B4D5FC")]
		private void ProcessFinish()
		{
		}

		[Token(Token = "0x60009E8")]
		[Address(RVA = "0x1B4D5C8", Offset = "0x1B4D5C8", VA = "0x1B4D5C8")]
		private void ProcessJudge(float deltaBeat)
		{
		}

		[Token(Token = "0x60009E9")]
		[Address(RVA = "0x1B4D6C0", Offset = "0x1B4D6C0", VA = "0x1B4D6C0")]
		private void BulletHit()
		{
		}

		[Token(Token = "0x60009EA")]
		[Address(RVA = "0x1B4D740", Offset = "0x1B4D740", VA = "0x1B4D740")]
		private void PublishJudgementResult(JudgementData data, bool isMiddleBad = false)
		{
		}

		[Token(Token = "0x60009EB")]
		[Address(RVA = "0x1B4D8E0", Offset = "0x1B4D8E0", VA = "0x1B4D8E0")]
		private void PublishChargeData(ChargeData.ChargeState state)
		{
		}

		[Token(Token = "0x60009EC")]
		[Address(RVA = "0x1B4DA38", Offset = "0x1B4DA38", VA = "0x1B4DA38")]
		private void ParseMessage(string msg)
		{
		}

		[Token(Token = "0x60009ED")]
		[Address(RVA = "0x1B4DB70", Offset = "0x1B4DB70", VA = "0x1B4DB70")]
		public PizzaDeliveryInputJudgeAction()
		{
		}
	}
	[Token(Token = "0x200023B")]
	public class PizzaDeliveryInputPublisher : InputPublisher
	{
		[Token(Token = "0x4000BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private StringReactiveProperty _inputMessage;

		[Token(Token = "0x4000BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Inject]
		private InputProvider _inputProvider;

		[Token(Token = "0x4000BEC")]
		private const float bend_thresh = 0.2f;

		[Token(Token = "0x4000BED")]
		private const float bend_max = 0.9f;

		[Token(Token = "0x4000BEE")]
		private const float head_x_thresh = -0.1f;

		[Token(Token = "0x170000F9")]
		public override StringReactiveProperty InputMessage
		{
			[Token(Token = "0x60009F0")]
			[Address(RVA = "0x1B4DED8", Offset = "0x1B4DED8", VA = "0x1B4DED8", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60009F1")]
			[Address(RVA = "0x1B4DEE0", Offset = "0x1B4DEE0", VA = "0x1B4DEE0", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x60009EE")]
		[Address(RVA = "0x1B4DC54", Offset = "0x1B4DC54", VA = "0x1B4DC54")]
		private void Start()
		{
		}

		[Token(Token = "0x60009EF")]
		[Address(RVA = "0x1B4DCBC", Offset = "0x1B4DCBC", VA = "0x1B4DCBC")]
		private void Update()
		{
		}

		[Token(Token = "0x60009F2")]
		[Address(RVA = "0x1B4DEE8", Offset = "0x1B4DEE8", VA = "0x1B4DEE8")]
		public PizzaDeliveryInputPublisher()
		{
		}
	}
	[Token(Token = "0x200023C")]
	[RequireComponent(typeof(GrooveFitAudioSource))]
	public class PizzaDeliveryJudgeSound : MonoBehaviour
	{
		[Token(Token = "0x4000BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioClip _great;

		[Token(Token = "0x4000BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip _ok;

		[Token(Token = "0x4000BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip _bad;

		[Token(Token = "0x4000BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AudioSource _audio;

		[Token(Token = "0x4000BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private GameStatus.Status currentStatus;

		[Token(Token = "0x170000FA")]
		[Inject]
		private ISubscriber<FPActionData> OnJudgeData
		{
			[Token(Token = "0x60009F3")]
			[Address(RVA = "0x1B4DEF0", Offset = "0x1B4DEF0", VA = "0x1B4DEF0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60009F4")]
			[Address(RVA = "0x1B4DEF8", Offset = "0x1B4DEF8", VA = "0x1B4DEF8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170000FB")]
		[Inject]
		private ISubscriber<GameStatus> OnChangeStatus
		{
			[Token(Token = "0x60009F5")]
			[Address(RVA = "0x1B4DF00", Offset = "0x1B4DF00", VA = "0x1B4DF00")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60009F6")]
			[Address(RVA = "0x1B4DF08", Offset = "0x1B4DF08", VA = "0x1B4DF08")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x60009F7")]
		[Address(RVA = "0x1B4DF10", Offset = "0x1B4DF10", VA = "0x1B4DF10")]
		private void Start()
		{
		}

		[Token(Token = "0x60009F8")]
		[Address(RVA = "0x1B4E15C", Offset = "0x1B4E15C", VA = "0x1B4E15C")]
		private void DoAction(FPActionData value)
		{
		}

		[Token(Token = "0x60009F9")]
		[Address(RVA = "0x1B4E1D0", Offset = "0x1B4E1D0", VA = "0x1B4E1D0")]
		public PizzaDeliveryJudgeSound()
		{
		}
	}
	[Token(Token = "0x200023D")]
	public enum PizzaDeliveryEventKeys
	{
		[Token(Token = "0x4000BF7")]
		RightShortJudge,
		[Token(Token = "0x4000BF8")]
		LeftShortJudge,
		[Token(Token = "0x4000BF9")]
		RightLongJudge,
		[Token(Token = "0x4000BFA")]
		LeftLongJudge,
		[Token(Token = "0x4000BFB")]
		GunSignal,
		[Token(Token = "0x4000BFC")]
		GunRightLaser,
		[Token(Token = "0x4000BFD")]
		GunLeftLaser,
		[Token(Token = "0x4000BFE")]
		GunShoot,
		[Token(Token = "0x4000BFF")]
		GunRightAnim,
		[Token(Token = "0x4000C00")]
		GunLeftAnim,
		[Token(Token = "0x4000C01")]
		MachinegunSignal,
		[Token(Token = "0x4000C02")]
		MachinegunRightLaser,
		[Token(Token = "0x4000C03")]
		MachinegunLeftLaser,
		[Token(Token = "0x4000C04")]
		MachinegunShoot,
		[Token(Token = "0x4000C05")]
		MachinegunRightAnim,
		[Token(Token = "0x4000C06")]
		MachinegunLeftAnim,
		[Token(Token = "0x4000C07")]
		Voice_Ha,
		[Token(Token = "0x4000C08")]
		Voice_Soiya,
		[Token(Token = "0x4000C09")]
		Voice_3,
		[Token(Token = "0x4000C0A")]
		Voice_7,
		[Token(Token = "0x4000C0B")]
		KamemaruRightBend,
		[Token(Token = "0x4000C0C")]
		KamemaruLeftBend,
		[Token(Token = "0x4000C0D")]
		KamemaruRightBendUp,
		[Token(Token = "0x4000C0E")]
		KamemaruLeftBendUp,
		[Token(Token = "0x4000C0F")]
		RightShortDamaged,
		[Token(Token = "0x4000C10")]
		LeftShortDamaged,
		[Token(Token = "0x4000C11")]
		RightLongDamaged,
		[Token(Token = "0x4000C12")]
		LeftLongDamaged,
		[Token(Token = "0x4000C13")]
		PracticeTextRight1,
		[Token(Token = "0x4000C14")]
		PracticeTextRight2,
		[Token(Token = "0x4000C15")]
		PracticeTextLeft1,
		[Token(Token = "0x4000C16")]
		PracticeTextLeft2,
		[Token(Token = "0x4000C17")]
		PracticeTextSignal1,
		[Token(Token = "0x4000C18")]
		PracticeTextSignal2,
		[Token(Token = "0x4000C19")]
		JudgeMiddleBad,
		[Token(Token = "0x4000C1A")]
		Voice_One,
		[Token(Token = "0x4000C1B")]
		Voice_Two,
		[Token(Token = "0x4000C1C")]
		Voice_Three,
		[Token(Token = "0x4000C1D")]
		Voice_Four,
		[Token(Token = "0x4000C1E")]
		Voice_Five,
		[Token(Token = "0x4000C1F")]
		Voice_Six,
		[Token(Token = "0x4000C20")]
		Voice_Seven
	}
	[Token(Token = "0x200023E")]
	public enum PizzaDeliveryInputKeys
	{
		[Token(Token = "0x4000C22")]
		RightBend,
		[Token(Token = "0x4000C23")]
		LeftBend,
		[Token(Token = "0x4000C24")]
		Center
	}
	[Token(Token = "0x200023F")]
	public enum PizzaDeliveryChargeKeys
	{
		[Token(Token = "0x4000C26")]
		OnRightShortBend,
		[Token(Token = "0x4000C27")]
		OnLeftShortBend,
		[Token(Token = "0x4000C28")]
		OnRightLongBend,
		[Token(Token = "0x4000C29")]
		OnLeftLongBend,
		[Token(Token = "0x4000C2A")]
		OnCenter
	}
	[Token(Token = "0x2000240")]
	public class PizzaDeliveryMoveManager : MonoBehaviour
	{
		[Token(Token = "0x4000C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Inject]
		private DiContainer container;

		[Token(Token = "0x4000C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private List<GameObject> stages;

		[Token(Token = "0x4000C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float posInterval;

		[Token(Token = "0x4000C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private readonly Vector3 _forwardZ;

		[Token(Token = "0x4000C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int currentPlayerPosIndex;

		[Token(Token = "0x4000C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int currentStageIndex;

		[Token(Token = "0x4000C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 _targetPos;

		[Token(Token = "0x4000C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool _nowPractice;

		[Token(Token = "0x4000C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Tween _tween;

		[Token(Token = "0x4000C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform player;

		[Token(Token = "0x4000C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static PizzaDeliveryMoveManager achieveCounter;

		[Token(Token = "0x170000FC")]
		[Inject]
		private ISubscriber<FPActionData> OnFPActionData
		{
			[Token(Token = "0x60009FC")]
			[Address(RVA = "0x1B4E23C", Offset = "0x1B4E23C", VA = "0x1B4E23C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60009FD")]
			[Address(RVA = "0x1B4E244", Offset = "0x1B4E244", VA = "0x1B4E244")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170000FD")]
		[Inject]
		private ISubscriber<GameStatus> OnChangeStatus
		{
			[Token(Token = "0x60009FE")]
			[Address(RVA = "0x1B4E24C", Offset = "0x1B4E24C", VA = "0x1B4E24C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60009FF")]
			[Address(RVA = "0x1B4E254", Offset = "0x1B4E254", VA = "0x1B4E254")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6000A00")]
		[Address(RVA = "0x1B4E25C", Offset = "0x1B4E25C", VA = "0x1B4E25C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A01")]
		[Address(RVA = "0x1B4E56C", Offset = "0x1B4E56C", VA = "0x1B4E56C")]
		private void MoveForward(FPActionData data)
		{
		}

		[Token(Token = "0x6000A02")]
		[Address(RVA = "0x1B4E968", Offset = "0x1B4E968", VA = "0x1B4E968")]
		private void InitializePos()
		{
		}

		[Token(Token = "0x6000A03")]
		[Address(RVA = "0x1B4E814", Offset = "0x1B4E814", VA = "0x1B4E814")]
		private void CreateStageObj()
		{
		}

		[Token(Token = "0x6000A04")]
		[Address(RVA = "0x1B4E9C8", Offset = "0x1B4E9C8", VA = "0x1B4E9C8")]
		public void RestartGame()
		{
		}

		[Token(Token = "0x6000A05")]
		[Address(RVA = "0x1B4EF3C", Offset = "0x1B4EF3C", VA = "0x1B4EF3C")]
		public PizzaDeliveryMoveManager()
		{
		}
	}
	[Token(Token = "0x2000241")]
	public class PizzaDeliveryMoveObject : MonoBehaviour
	{
		[Token(Token = "0x4000C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly Vector3 _forwardZ;

		[Token(Token = "0x4000C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 _targetPos;

		[Token(Token = "0x4000C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool _nowPractice;

		[Token(Token = "0x4000C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 _saveStartPos;

		[Token(Token = "0x4000C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Tween _tween;

		[Token(Token = "0x170000FE")]
		[Inject]
		private ISubscriber<FPActionData> OnFPActionData
		{
			[Token(Token = "0x6000A08")]
			[Address(RVA = "0x1B4EF80", Offset = "0x1B4EF80", VA = "0x1B4EF80")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A09")]
			[Address(RVA = "0x1B4EF88", Offset = "0x1B4EF88", VA = "0x1B4EF88")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170000FF")]
		[Inject]
		private ISubscriber<GameStatus> OnChangeStatus
		{
			[Token(Token = "0x6000A0A")]
			[Address(RVA = "0x1B4EF90", Offset = "0x1B4EF90", VA = "0x1B4EF90")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A0B")]
			[Address(RVA = "0x1B4EF98", Offset = "0x1B4EF98", VA = "0x1B4EF98")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6000A0C")]
		[Address(RVA = "0x1B4EFA0", Offset = "0x1B4EFA0", VA = "0x1B4EFA0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A0D")]
		[Address(RVA = "0x1B4F1DC", Offset = "0x1B4F1DC", VA = "0x1B4F1DC")]
		private void MoveForward(FPActionData data)
		{
		}

		[Token(Token = "0x6000A0E")]
		[Address(RVA = "0x1B4F3CC", Offset = "0x1B4F3CC", VA = "0x1B4F3CC")]
		public void InitializePos()
		{
		}

		[Token(Token = "0x6000A0F")]
		[Address(RVA = "0x1B4F3F8", Offset = "0x1B4F3F8", VA = "0x1B4F3F8")]
		public PizzaDeliveryMoveObject()
		{
		}
	}
	[Token(Token = "0x2000242")]
	public class PizzaDeliveryNoJudgementAction : FPNoJudgementAction
	{
		[Token(Token = "0x4000C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private List<PizzaDeliveryActionParam> actions;

		[Token(Token = "0x6000A12")]
		[Address(RVA = "0x1B4F434", Offset = "0x1B4F434", VA = "0x1B4F434", Slot = "4")]
		protected override void BeatSubscribeAction(float currentBeat)
		{
		}

		[Token(Token = "0x6000A13")]
		[Address(RVA = "0x1B4F4CC", Offset = "0x1B4F4CC", VA = "0x1B4F4CC")]
		public PizzaDeliveryNoJudgementAction()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000243")]
	public class PizzaDeliveryActionParam : ActionParamBase
	{
		[Token(Token = "0x4000C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<PizzaDeliveryEventKeys> ActionKeys;

		[Token(Token = "0x6000A14")]
		[Address(RVA = "0x1B4F4D4", Offset = "0x1B4F4D4", VA = "0x1B4F4D4", Slot = "4")]
		public override List<string> GetKeyFromActionKeys()
		{
			return null;
		}

		[Token(Token = "0x6000A15")]
		[Address(RVA = "0x1B4F5DC", Offset = "0x1B4F5DC", VA = "0x1B4F5DC")]
		public PizzaDeliveryActionParam()
		{
		}
	}
	[Token(Token = "0x2000245")]
	public class PizzaDeliveryPracticeJudge : FPChargeJudgeAction
	{
		[Token(Token = "0x4000C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private PizzaDeliveryChargeKeys _chargeKeyEnum;

		[Token(Token = "0x4000C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private PizzaDeliveryEventKeys _actionKey;

		[Token(Token = "0x4000C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private PizzaDeliveryInputKeys _inputKeyEnum;

		[Token(Token = "0x6000A19")]
		[Address(RVA = "0x1B4F6C0", Offset = "0x1B4F6C0", VA = "0x1B4F6C0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A1A")]
		[Address(RVA = "0x1B4F7C0", Offset = "0x1B4F7C0", VA = "0x1B4F7C0")]
		public PizzaDeliveryPracticeJudge()
		{
		}
	}
	[Token(Token = "0x2000246")]
	public class PizzaDeliveryPracticeText : MonoBehaviour
	{
		[Token(Token = "0x4000C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MultilingualTextMeshPro _textMeshPro;

		[Token(Token = "0x17000100")]
		[Inject]
		private ISubscriber<FPActionData> OnFPAction
		{
			[Token(Token = "0x6000A1B")]
			[Address(RVA = "0x1B4F7C8", Offset = "0x1B4F7C8", VA = "0x1B4F7C8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A1C")]
			[Address(RVA = "0x1B4F7D0", Offset = "0x1B4F7D0", VA = "0x1B4F7D0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6000A1D")]
		[Address(RVA = "0x1B4F7D8", Offset = "0x1B4F7D8", VA = "0x1B4F7D8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A1E")]
		[Address(RVA = "0x1B4F904", Offset = "0x1B4F904", VA = "0x1B4F904")]
		private void ChangeText(FPActionData data)
		{
		}

		[Token(Token = "0x6000A1F")]
		[Address(RVA = "0x1B4FC00", Offset = "0x1B4FC00", VA = "0x1B4FC00")]
		public PizzaDeliveryPracticeText()
		{
		}
	}
	[Token(Token = "0x2000247")]
	public class PizzaDeliveryRestarter : MonoBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x2000248")]
		[CompilerGenerated]
		private struct <RestartStage>d__10 : IAsyncStateMachine
		{
			[Token(Token = "0x4000C4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000C4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4000C50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public PizzaDeliveryRestarter <>4__this;

			[Token(Token = "0x4000C51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6000A28")]
			[Address(RVA = "0x1B50068", Offset = "0x1B50068", VA = "0x1B50068", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000A29")]
			[Address(RVA = "0x1B50A18", Offset = "0x1B50A18", VA = "0x1B50A18", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Inject]
		private InputProvider _inputProvider;

		[Token(Token = "0x4000C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private List<PizzaDeliveryMoveObject> objs;

		[Token(Token = "0x4000C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GoalHouseController ghc;

		[Token(Token = "0x4000C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private PizzaDeliveryMoveManager pizzaDeliveryMoveManager;

		[Token(Token = "0x4000C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameStatus.Status currentStatus;

		[Token(Token = "0x17000101")]
		[Inject]
		private ISubscriber<GameStatus> OnChangeStatus
		{
			[Token(Token = "0x6000A21")]
			[Address(RVA = "0x1B4FC0C", Offset = "0x1B4FC0C", VA = "0x1B4FC0C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A22")]
			[Address(RVA = "0x1B4FC14", Offset = "0x1B4FC14", VA = "0x1B4FC14")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6000A23")]
		[Address(RVA = "0x1B4FC1C", Offset = "0x1B4FC1C", VA = "0x1B4FC1C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A24")]
		[Address(RVA = "0x1B4FD48", Offset = "0x1B4FD48", VA = "0x1B4FD48")]
		[AsyncStateMachine(typeof(<RestartStage>d__10))]
		private UniTask RestartStage()
		{
			return default(UniTask);
		}

		[Token(Token = "0x6000A25")]
		[Address(RVA = "0x1B4FEA4", Offset = "0x1B4FEA4", VA = "0x1B4FEA4")]
		public PizzaDeliveryRestarter()
		{
		}
	}
	[Token(Token = "0x200024A")]
	public class PizzaDeliveryStageLife : MonoBehaviour
	{
		[Token(Token = "0x4000C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float posInterval;

		[Token(Token = "0x4000C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float startPosZ;

		[Token(Token = "0x4000C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform cameraRigRoot;

		[Token(Token = "0x17000102")]
		[Inject]
		private ISubscriber<FPActionData> OnFPActionData
		{
			[Token(Token = "0x6000A2C")]
			[Address(RVA = "0x1B51038", Offset = "0x1B51038", VA = "0x1B51038")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A2D")]
			[Address(RVA = "0x1B51040", Offset = "0x1B51040", VA = "0x1B51040")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6000A2E")]
		[Address(RVA = "0x1B51048", Offset = "0x1B51048", VA = "0x1B51048")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A2F")]
		[Address(RVA = "0x1B511DC", Offset = "0x1B511DC", VA = "0x1B511DC")]
		public PizzaDeliveryStageLife()
		{
		}
	}
	[Token(Token = "0x200024B")]
	public class PizzaTurtleMoveStage : MonoBehaviour
	{
		[Token(Token = "0x4000C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly Vector3 _forwardZ;

		[Token(Token = "0x4000C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Inject]
		private DiContainer container;

		[Token(Token = "0x4000C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private List<GameObject> stages;

		[Token(Token = "0x4000C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Vector3 initPos;

		[Token(Token = "0x4000C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private float posInterval;

		[Token(Token = "0x4000C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private int currentIndex;

		[Token(Token = "0x4000C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Vector3 _targetPos;

		[Token(Token = "0x4000C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool _nowPractice;

		[Token(Token = "0x4000C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 _saveStartPos;

		[Token(Token = "0x4000C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 _saveStartScale;

		[Token(Token = "0x4000C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Tween _tween;

		[Token(Token = "0x4000C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static PizzaTurtleMoveStage achieveCounter;

		[Token(Token = "0x17000103")]
		[Inject]
		private ISubscriber<FPActionData> OnFPActionData
		{
			[Token(Token = "0x6000A31")]
			[Address(RVA = "0x1B51288", Offset = "0x1B51288", VA = "0x1B51288")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A32")]
			[Address(RVA = "0x1B51290", Offset = "0x1B51290", VA = "0x1B51290")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000104")]
		[Inject]
		private ISubscriber<GameStatus> OnChangeStatus
		{
			[Token(Token = "0x6000A33")]
			[Address(RVA = "0x1B51298", Offset = "0x1B51298", VA = "0x1B51298")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A34")]
			[Address(RVA = "0x1B512A0", Offset = "0x1B512A0", VA = "0x1B512A0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6000A35")]
		[Address(RVA = "0x1B512A8", Offset = "0x1B512A8", VA = "0x1B512A8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A36")]
		[Address(RVA = "0x1B51588", Offset = "0x1B51588", VA = "0x1B51588")]
		private void MoveForward(FPActionData data)
		{
		}

		[Token(Token = "0x6000A37")]
		[Address(RVA = "0x1B51E14", Offset = "0x1B51E14", VA = "0x1B51E14")]
		public void InitializePos()
		{
		}

		[Token(Token = "0x6000A38")]
		[Address(RVA = "0x1B51984", Offset = "0x1B51984", VA = "0x1B51984")]
		private void ChangeStageObj()
		{
		}

		[Token(Token = "0x6000A39")]
		[Address(RVA = "0x1B51E60", Offset = "0x1B51E60", VA = "0x1B51E60")]
		public PizzaTurtleMoveStage()
		{
		}
	}
	[Token(Token = "0x200024C")]
	public class PizzaTurtleStageRestarter : MonoBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x200024D")]
		[CompilerGenerated]
		private struct <RestartStage>d__9 : IAsyncStateMachine
		{
			[Token(Token = "0x4000C6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000C6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4000C6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public PizzaTurtleStageRestarter <>4__this;

			[Token(Token = "0x4000C70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6000A44")]
			[Address(RVA = "0x1B52390", Offset = "0x1B52390", VA = "0x1B52390", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000A45")]
			[Address(RVA = "0x1B52D40", Offset = "0x1B52D40", VA = "0x1B52D40", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Inject]
		private InputProvider _inputProvider;

		[Token(Token = "0x4000C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private List<PizzaTurtleMoveStage> _stages;

		[Token(Token = "0x4000C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GoalHouseController ghc;

		[Token(Token = "0x4000C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameStatus.Status currentStatus;

		[Token(Token = "0x17000105")]
		[Inject]
		private ISubscriber<GameStatus> OnChangeStatus
		{
			[Token(Token = "0x6000A3D")]
			[Address(RVA = "0x1B51F34", Offset = "0x1B51F34", VA = "0x1B51F34")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A3E")]
			[Address(RVA = "0x1B51F3C", Offset = "0x1B51F3C", VA = "0x1B51F3C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6000A3F")]
		[Address(RVA = "0x1B51F44", Offset = "0x1B51F44", VA = "0x1B51F44")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A40")]
		[Address(RVA = "0x1B52070", Offset = "0x1B52070", VA = "0x1B52070")]
		[AsyncStateMachine(typeof(<RestartStage>d__9))]
		private UniTask RestartStage()
		{
			return default(UniTask);
		}

		[Token(Token = "0x6000A41")]
		[Address(RVA = "0x1B521CC", Offset = "0x1B521CC", VA = "0x1B521CC")]
		public PizzaTurtleStageRestarter()
		{
		}
	}
	[Token(Token = "0x200024F")]
	public class RugbyMoveManager : MonoBehaviour
	{
		[Token(Token = "0x4000C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Inject]
		private DiContainer container;

		[Token(Token = "0x4000C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<GameObject> roadObjs;

		[Token(Token = "0x4000C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private List<GameObject> landscapeObjs;

		[Token(Token = "0x4000C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float intervalSec;

		[Token(Token = "0x4000C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float roadPosInterval;

		[Token(Token = "0x4000C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float landscapePosInterval;

		[Token(Token = "0x4000C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int currentPlayerPosIndex;

		[Token(Token = "0x4000C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int currentRoadIndex;

		[Token(Token = "0x4000C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int currentLandscapeIndex;

		[Token(Token = "0x4000C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform player;

		[Token(Token = "0x4000C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 _targetPos;

		[Token(Token = "0x4000C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Tween _tween;

		[Token(Token = "0x4000C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool isCompleted;

		[Token(Token = "0x6000A48")]
		[Address(RVA = "0x1B5334C", Offset = "0x1B5334C", VA = "0x1B5334C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A49")]
		[Address(RVA = "0x1B534F0", Offset = "0x1B534F0", VA = "0x1B534F0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A4A")]
		[Address(RVA = "0x1B53600", Offset = "0x1B53600", VA = "0x1B53600")]
		private void CreateRoadObj()
		{
		}

		[Token(Token = "0x6000A4B")]
		[Address(RVA = "0x1B53748", Offset = "0x1B53748", VA = "0x1B53748")]
		private void CreateLandscapeObj()
		{
		}

		[Token(Token = "0x6000A4C")]
		[Address(RVA = "0x1B53894", Offset = "0x1B53894", VA = "0x1B53894")]
		public void PlayMoving()
		{
		}

		[Token(Token = "0x6000A4D")]
		[Address(RVA = "0x1B538DC", Offset = "0x1B538DC", VA = "0x1B538DC")]
		public void PauseMoving()
		{
		}

		[Token(Token = "0x6000A4E")]
		[Address(RVA = "0x1B53924", Offset = "0x1B53924", VA = "0x1B53924")]
		public RugbyMoveManager()
		{
		}
	}
}
namespace __Production__.GrooveFitGames.Core.Utility
{
	[Token(Token = "0x2000250")]
	public static class ListUtility
	{
		[Token(Token = "0x6000A51")]
		public static T GetRandom<T>(List<T> list)
		{
			return (T)null;
		}

		[Token(Token = "0x6000A52")]
		public static int GetRandomAnotherIndex<T>(List<T> list, int ignoreIndex)
		{
			return default(int);
		}
	}
}
namespace __Production__.Core.PicoLeaderboard
{
	[Token(Token = "0x2000252")]
	public static class PicoLeaderboardWrapper
	{
		[StructLayout(3)]
		[Token(Token = "0x2000254")]
		[CompilerGenerated]
		private struct <AsyncInitialize>d__0 : IAsyncStateMachine
		{
			[Token(Token = "0x4000C85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000C86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x4000C87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CancellationToken token;

			[Token(Token = "0x4000C88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private UniTask<bool>.Awaiter <>u__1;

			[Token(Token = "0x6000A63")]
			[Address(RVA = "0x1B548C8", Offset = "0x1B548C8", VA = "0x1B548C8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000A64")]
			[Address(RVA = "0x1B54EC4", Offset = "0x1B54EC4", VA = "0x1B54EC4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000256")]
		[CompilerGenerated]
		private struct <CheckSignIn>d__1 : IAsyncStateMachine
		{
			[Token(Token = "0x4000C8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000C8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x4000C8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CancellationToken token;

			[Token(Token = "0x4000C8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private UniTask<bool>.Awaiter <>u__1;

			[Token(Token = "0x6000A68")]
			[Address(RVA = "0x1B551B4", Offset = "0x1B551B4", VA = "0x1B551B4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000A69")]
			[Address(RVA = "0x1B5581C", Offset = "0x1B5581C", VA = "0x1B5581C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000257")]
		[CompilerGenerated]
		private struct <AddScoreData>d__2 : IAsyncStateMachine
		{
			[Token(Token = "0x4000C90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000C91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x4000C92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GFGameSettings gameSettings;

			[Token(Token = "0x4000C93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float score;

			[Token(Token = "0x4000C94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CancellationToken token;

			[Token(Token = "0x4000C95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UniTask<bool>.Awaiter <>u__1;

			[Token(Token = "0x6000A6A")]
			[Address(RVA = "0x1B55874", Offset = "0x1B55874", VA = "0x1B55874", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000A6B")]
			[Address(RVA = "0x1B55D40", Offset = "0x1B55D40", VA = "0x1B55D40", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000258")]
		[CompilerGenerated]
		private struct <AddCalorieData>d__3 : IAsyncStateMachine
		{
			[Token(Token = "0x4000C96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000C97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x4000C98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GFGameSettings gameSettings;

			[Token(Token = "0x4000C99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float calorie;

			[Token(Token = "0x4000C9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CancellationToken token;

			[Token(Token = "0x4000C9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UniTask<bool>.Awaiter <>u__1;

			[Token(Token = "0x6000A6C")]
			[Address(RVA = "0x1B55D98", Offset = "0x1B55D98", VA = "0x1B55D98", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000A6D")]
			[Address(RVA = "0x1B56264", Offset = "0x1B56264", VA = "0x1B56264", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200025A")]
		[CompilerGenerated]
		private struct <AddPlayData>d__4 : IAsyncStateMachine
		{
			[Token(Token = "0x4000C9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000C9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x4000CA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CancellationToken token;

			[Token(Token = "0x4000CA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string leaderboardName;

			[Token(Token = "0x4000CA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public long value;

			[Token(Token = "0x4000CA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UniTask<bool>.Awaiter <>u__1;

			[Token(Token = "0x6000A70")]
			[Address(RVA = "0x1B56340", Offset = "0x1B56340", VA = "0x1B56340", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000A71")]
			[Address(RVA = "0x1B569D4", Offset = "0x1B569D4", VA = "0x1B569D4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200025C")]
		[CompilerGenerated]
		private struct <AddPlayDataWithSupplementaryMetric>d__5 : IAsyncStateMachine
		{
			[Token(Token = "0x4000CA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000CA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x4000CA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CancellationToken token;

			[Token(Token = "0x4000CA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string leaderboardName;

			[Token(Token = "0x4000CAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public long value;

			[Token(Token = "0x4000CAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public long supplementaryMetric;

			[Token(Token = "0x4000CAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private UniTask<bool>.Awaiter <>u__1;

			[Token(Token = "0x6000A74")]
			[Address(RVA = "0x1B56AB0", Offset = "0x1B56AB0", VA = "0x1B56AB0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000A75")]
			[Address(RVA = "0x1B5714C", Offset = "0x1B5714C", VA = "0x1B5714C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200025E")]
		[CompilerGenerated]
		private struct <GetTopScorePlayers>d__6 : IAsyncStateMachine
		{
			[Token(Token = "0x4000CAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000CB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<List<RankingDataEntry>> <>t__builder;

			[Token(Token = "0x4000CB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CancellationToken token;

			[Token(Token = "0x4000CB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GFGameSettings gameSettings;

			[Token(Token = "0x4000CB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask<List<RankingDataEntry>>.Awaiter <>u__1;

			[Token(Token = "0x6000A78")]
			[Address(RVA = "0x1B574B0", Offset = "0x1B574B0", VA = "0x1B574B0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000A79")]
			[Address(RVA = "0x1B57AC0", Offset = "0x1B57AC0", VA = "0x1B57AC0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000260")]
		[CompilerGenerated]
		private struct <GetTopCaloriePlayers>d__7 : IAsyncStateMachine
		{
			[Token(Token = "0x4000CB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000CB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<List<RankingDataEntry>> <>t__builder;

			[Token(Token = "0x4000CB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CancellationToken token;

			[Token(Token = "0x4000CB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GFGameSettings gameSettings;

			[Token(Token = "0x4000CBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask<List<RankingDataEntry>>.Awaiter <>u__1;

			[Token(Token = "0x6000A7C")]
			[Address(RVA = "0x1B57E24", Offset = "0x1B57E24", VA = "0x1B57E24", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000A7D")]
			[Address(RVA = "0x1B58434", Offset = "0x1B58434", VA = "0x1B58434", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000261")]
		[CompilerGenerated]
		private struct <GetTopPlayers>d__8 : IAsyncStateMachine
		{
			[Token(Token = "0x4000CBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000CBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<List<RankingDataEntry>> <>t__builder;

			[Token(Token = "0x4000CBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GetTopPlayersRequest.SortType type;

			[Token(Token = "0x4000CBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GFGameSettings gameSettings;

			[Token(Token = "0x4000CBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CancellationToken token;

			[Token(Token = "0x4000CC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UniTask<List<RankingDataEntry>>.Awaiter <>u__1;

			[Token(Token = "0x6000A7E")]
			[Address(RVA = "0x1B5848C", Offset = "0x1B5848C", VA = "0x1B5848C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000A7F")]
			[Address(RVA = "0x1B58B7C", Offset = "0x1B58B7C", VA = "0x1B58B7C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000263")]
		[CompilerGenerated]
		private struct <GetCurrentUserLeaderboardEntry>d__9 : IAsyncStateMachine
		{
			[Token(Token = "0x4000CC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000CC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<LeaderboardEntry> <>t__builder;

			[Token(Token = "0x4000CC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CancellationToken token;

			[Token(Token = "0x4000CC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string leaderboardName;

			[Token(Token = "0x4000CC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask<LeaderboardEntry>.Awaiter <>u__1;

			[Token(Token = "0x6000A82")]
			[Address(RVA = "0x1B58CA4", Offset = "0x1B58CA4", VA = "0x1B58CA4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000A83")]
			[Address(RVA = "0x1B59398", Offset = "0x1B59398", VA = "0x1B59398", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x6000A55")]
		[Address(RVA = "0x1B53A20", Offset = "0x1B53A20", VA = "0x1B53A20")]
		[AsyncStateMachine(typeof(<AsyncInitialize>d__0))]
		public static UniTask<bool> AsyncInitialize(CancellationToken token)
		{
			return default(UniTask<bool>);
		}

		[Token(Token = "0x6000A56")]
		[Address(RVA = "0x1B53AE4", Offset = "0x1B53AE4", VA = "0x1B53AE4")]
		[AsyncStateMachine(typeof(<CheckSignIn>d__1))]
		public static UniTask<bool> CheckSignIn(CancellationToken token)
		{
			return default(UniTask<bool>);
		}

		[Token(Token = "0x6000A57")]
		[Address(RVA = "0x1B53BA8", Offset = "0x1B53BA8", VA = "0x1B53BA8")]
		[AsyncStateMachine(typeof(<AddScoreData>d__2))]
		public static UniTask<bool> AddScoreData(GFGameSettings gameSettings, float score, CancellationToken token)
		{
			return default(UniTask<bool>);
		}

		[Token(Token = "0x6000A58")]
		[Address(RVA = "0x1B53C9C", Offset = "0x1B53C9C", VA = "0x1B53C9C")]
		[AsyncStateMachine(typeof(<AddCalorieData>d__3))]
		public static UniTask<bool> AddCalorieData(GFGameSettings gameSettings, float calorie, CancellationToken token)
		{
			return default(UniTask<bool>);
		}

		[Token(Token = "0x6000A59")]
		[Address(RVA = "0x1B53D90", Offset = "0x1B53D90", VA = "0x1B53D90")]
		[AsyncStateMachine(typeof(<AddPlayData>d__4))]
		private static UniTask<bool> AddPlayData(string leaderboardName, long value, CancellationToken token)
		{
			return default(UniTask<bool>);
		}

		[Token(Token = "0x6000A5A")]
		[Address(RVA = "0x1B53E78", Offset = "0x1B53E78", VA = "0x1B53E78")]
		[AsyncStateMachine(typeof(<AddPlayDataWithSupplementaryMetric>d__5))]
		private static UniTask<bool> AddPlayDataWithSupplementaryMetric(string leaderboardName, long value, long supplementaryMetric, CancellationToken token)
		{
			return default(UniTask<bool>);
		}

		[Token(Token = "0x6000A5B")]
		[Address(RVA = "0x1B53F6C", Offset = "0x1B53F6C", VA = "0x1B53F6C")]
		[AsyncStateMachine(typeof(<GetTopScorePlayers>d__6))]
		public static UniTask<List<RankingDataEntry>> GetTopScorePlayers(GFGameSettings gameSettings, CancellationToken token)
		{
			return default(UniTask<List<RankingDataEntry>>);
		}

		[Token(Token = "0x6000A5C")]
		[Address(RVA = "0x1B54064", Offset = "0x1B54064", VA = "0x1B54064")]
		[AsyncStateMachine(typeof(<GetTopCaloriePlayers>d__7))]
		public static UniTask<List<RankingDataEntry>> GetTopCaloriePlayers(GFGameSettings gameSettings, CancellationToken token)
		{
			return default(UniTask<List<RankingDataEntry>>);
		}

		[Token(Token = "0x6000A5D")]
		[Address(RVA = "0x1B5415C", Offset = "0x1B5415C", VA = "0x1B5415C")]
		[AsyncStateMachine(typeof(<GetTopPlayers>d__8))]
		public static UniTask<List<RankingDataEntry>> GetTopPlayers(GFGameSettings gameSettings, GetTopPlayersRequest.SortType type, CancellationToken token)
		{
			return default(UniTask<List<RankingDataEntry>>);
		}

		[Token(Token = "0x6000A5E")]
		[Address(RVA = "0x1B54264", Offset = "0x1B54264", VA = "0x1B54264")]
		[AsyncStateMachine(typeof(<GetCurrentUserLeaderboardEntry>d__9))]
		public static UniTask<LeaderboardEntry> GetCurrentUserLeaderboardEntry(string leaderboardName, CancellationToken token)
		{
			return default(UniTask<LeaderboardEntry>);
		}

		[Token(Token = "0x6000A5F")]
		[Address(RVA = "0x1B5435C", Offset = "0x1B5435C", VA = "0x1B5435C")]
		public static string GetPicoScoreLeaderboard(GFGameSettings gameSettings)
		{
			return null;
		}

		[Token(Token = "0x6000A60")]
		[Address(RVA = "0x1B5452C", Offset = "0x1B5452C", VA = "0x1B5452C")]
		private static string GetPicoCalorieLeaderboard(GFGameSettings gameSettings)
		{
			return null;
		}
	}
}
namespace __Production__.Core.AssistUI
{
	[Token(Token = "0x2000264")]
	public class AssistData
	{
		[Token(Token = "0x4000CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly AssistType AssistType;

		[Token(Token = "0x4000CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string assistTextKey;

		[Token(Token = "0x4000CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly int imageIndex;

		[Token(Token = "0x4000CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly int videoIndex;

		[Token(Token = "0x4000CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string animationStateTrigger;

		[Token(Token = "0x6000A84")]
		[Address(RVA = "0x1B593F0", Offset = "0x1B593F0", VA = "0x1B593F0")]
		public AssistData(AssistType assistType, string assistTextKey, int imageIndex, int videoIndex, string animationStateTrigger)
		{
		}
	}
	[Token(Token = "0x2000265")]
	public enum AssistType
	{
		[Token(Token = "0x4000CCE")]
		TextOnly,
		[Token(Token = "0x4000CCF")]
		Image,
		[Token(Token = "0x4000CD0")]
		Video,
		[Token(Token = "0x4000CD1")]
		VisualizeJudgeArea,
		[Token(Token = "0x4000CD2")]
		VisualizeAnimation
	}
	[Token(Token = "0x2000266")]
	public class AssistUIAnimation : AssistUIBase
	{
		[Token(Token = "0x4000CD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Animator _animator;

		[Token(Token = "0x4000CD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MultilingualTextMeshPro _multilingualTextMeshPro;

		[Token(Token = "0x4000CD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject _animationModel;

		[Token(Token = "0x4000CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject _textPivot;

		[Token(Token = "0x6000A85")]
		[Address(RVA = "0x1B59458", Offset = "0x1B59458", VA = "0x1B59458", Slot = "4")]
		public override void Show(AssistData assistData)
		{
		}

		[Token(Token = "0x6000A86")]
		[Address(RVA = "0x1B59540", Offset = "0x1B59540", VA = "0x1B59540", Slot = "5")]
		public override void UnShow()
		{
		}

		[Token(Token = "0x6000A87")]
		[Address(RVA = "0x1B595DC", Offset = "0x1B595DC", VA = "0x1B595DC")]
		public AssistUIAnimation()
		{
		}
	}
	[Token(Token = "0x2000267")]
	public class AssistUIBase : MonoBehaviour
	{
		[Token(Token = "0x4000CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Inject]
		private ISubscriber<FPActionData> fpActionDataSubscriber;

		[Token(Token = "0x4000CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int judgeCount;

		[Token(Token = "0x4000CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private int _unShowCount;

		[Token(Token = "0x6000A88")]
		[Address(RVA = "0x1B595FC", Offset = "0x1B595FC", VA = "0x1B595FC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A89")]
		[Address(RVA = "0x1B59728", Offset = "0x1B59728", VA = "0x1B59728", Slot = "4")]
		public virtual void Show(AssistData assistData)
		{
		}

		[Token(Token = "0x6000A8A")]
		[Address(RVA = "0x1B5972C", Offset = "0x1B5972C", VA = "0x1B5972C", Slot = "5")]
		public virtual void UnShow()
		{
		}

		[Token(Token = "0x6000A8B")]
		[Address(RVA = "0x1B595EC", Offset = "0x1B595EC", VA = "0x1B595EC")]
		public AssistUIBase()
		{
		}
	}
	[Token(Token = "0x2000268")]
	public class AssistUIDebug : MonoBehaviour
	{
		[Token(Token = "0x4000CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string key;

		[Token(Token = "0x17000106")]
		[Inject]
		private IPublisher<AssistData> AssistDataMessagePublisher
		{
			[Token(Token = "0x6000A8D")]
			[Address(RVA = "0x1B59784", Offset = "0x1B59784", VA = "0x1B59784")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A8E")]
			[Address(RVA = "0x1B5978C", Offset = "0x1B5978C", VA = "0x1B5978C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6000A8F")]
		[Address(RVA = "0x1B59794", Offset = "0x1B59794", VA = "0x1B59794")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A90")]
		[Address(RVA = "0x1B59AD0", Offset = "0x1B59AD0", VA = "0x1B59AD0")]
		public AssistUIDebug()
		{
		}
	}
	[Token(Token = "0x2000269")]
	public class AssistUIImage : AssistUIBase
	{
		[Token(Token = "0x4000CDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private RawImage _image;

		[Token(Token = "0x4000CDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private List<Texture> _textures;

		[Token(Token = "0x4000CDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private MultilingualTextMeshPro _multilingualTextMeshPro;

		[Token(Token = "0x4000CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject _assistUIImage;

		[Token(Token = "0x4000CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GameObject _text;

		[Token(Token = "0x6000A91")]
		[Address(RVA = "0x1B59B28", Offset = "0x1B59B28", VA = "0x1B59B28", Slot = "4")]
		public override void Show(AssistData assistData)
		{
		}

		[Token(Token = "0x6000A92")]
		[Address(RVA = "0x1B59C54", Offset = "0x1B59C54", VA = "0x1B59C54", Slot = "5")]
		public override void UnShow()
		{
		}

		[Token(Token = "0x6000A93")]
		[Address(RVA = "0x1B59C8C", Offset = "0x1B59C8C", VA = "0x1B59C8C")]
		public AssistUIImage()
		{
		}
	}
	[Token(Token = "0x200026A")]
	public class AssistUIJudgeArea : AssistUIBase
	{
		[Token(Token = "0x4000CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private List<Renderer> _renderers;

		[Token(Token = "0x4000CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MultilingualTextMeshPro _multilingualTextMeshPro;

		[Token(Token = "0x4000CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject _textPivot;

		[Token(Token = "0x6000A94")]
		[Address(RVA = "0x1B59C9C", Offset = "0x1B59C9C", VA = "0x1B59C9C", Slot = "4")]
		public override void Show(AssistData assistData)
		{
		}

		[Token(Token = "0x6000A95")]
		[Address(RVA = "0x1B59E94", Offset = "0x1B59E94", VA = "0x1B59E94", Slot = "5")]
		public override void UnShow()
		{
		}

		[Token(Token = "0x6000A96")]
		[Address(RVA = "0x1B59FF8", Offset = "0x1B59FF8", VA = "0x1B59FF8")]
		public AssistUIJudgeArea()
		{
		}
	}
	[Token(Token = "0x200026B")]
	public class AssistUIManager : MonoBehaviour
	{
		[Token(Token = "0x4000CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AssistUITextOnly _assistUITextOnly;

		[Token(Token = "0x4000CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AssistUIImage _assistUIImage;

		[Token(Token = "0x4000CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AssistUIVideo _assistUIVideo;

		[Token(Token = "0x4000CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AssistUIJudgeArea _assistUIJudgeArea;

		[Token(Token = "0x4000CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private AssistUIAnimation _assistUIAnimation;

		[Token(Token = "0x17000107")]
		[Inject]
		private ISubscriber<AssistData> AssistDataMessageSubscriber
		{
			[Token(Token = "0x6000A97")]
			[Address(RVA = "0x1B5A008", Offset = "0x1B5A008", VA = "0x1B5A008")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A98")]
			[Address(RVA = "0x1B5A010", Offset = "0x1B5A010", VA = "0x1B5A010")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6000A99")]
		[Address(RVA = "0x1B5A018", Offset = "0x1B5A018", VA = "0x1B5A018")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A9A")]
		[Address(RVA = "0x1B5A144", Offset = "0x1B5A144", VA = "0x1B5A144")]
		public AssistUIManager()
		{
		}
	}
	[Token(Token = "0x200026C")]
	public class AssistUITextOnly : AssistUIBase
	{
		[Token(Token = "0x4000CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MultilingualTextMeshPro _multilingualTextMeshPro;

		[Token(Token = "0x4000CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject _assistUITextOnly;

		[Token(Token = "0x6000A9C")]
		[Address(RVA = "0x1B5A244", Offset = "0x1B5A244", VA = "0x1B5A244", Slot = "4")]
		public override void Show(AssistData assistData)
		{
		}

		[Token(Token = "0x6000A9D")]
		[Address(RVA = "0x1B5A304", Offset = "0x1B5A304", VA = "0x1B5A304", Slot = "5")]
		public override void UnShow()
		{
		}

		[Token(Token = "0x6000A9E")]
		[Address(RVA = "0x1B5A324", Offset = "0x1B5A324", VA = "0x1B5A324")]
		public AssistUITextOnly()
		{
		}
	}
	[Token(Token = "0x200026D")]
	public class AssistUIVideo : AssistUIBase
	{
		[Token(Token = "0x4000CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private VideoPlayer _videoPlayer;

		[Token(Token = "0x4000CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private List<VideoClip> _videoClips;

		[Token(Token = "0x4000CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private MultilingualTextMeshPro _multilingualTextMeshPro;

		[Token(Token = "0x4000CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject _assistUIVideo;

		[Token(Token = "0x4000CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GameObject _text;

		[Token(Token = "0x6000A9F")]
		[Address(RVA = "0x1B5A334", Offset = "0x1B5A334", VA = "0x1B5A334", Slot = "4")]
		public override void Show(AssistData assistData)
		{
		}

		[Token(Token = "0x6000AA0")]
		[Address(RVA = "0x1B5A470", Offset = "0x1B5A470", VA = "0x1B5A470", Slot = "5")]
		public override void UnShow()
		{
		}

		[Token(Token = "0x6000AA1")]
		[Address(RVA = "0x1B5A4B8", Offset = "0x1B5A4B8", VA = "0x1B5A4B8")]
		public AssistUIVideo()
		{
		}
	}
}
namespace iykuetboo.Debug
{
	[Token(Token = "0x200026E")]
	public class IykuetCollionDebugger : MonoBehaviour
	{
		[Token(Token = "0x6000AA2")]
		[Address(RVA = "0x1B5A4C8", Offset = "0x1B5A4C8", VA = "0x1B5A4C8")]
		private void OnCollisionEnter(Collision other)
		{
		}

		[Token(Token = "0x6000AA3")]
		[Address(RVA = "0x1B5A5B4", Offset = "0x1B5A5B4", VA = "0x1B5A5B4")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000AA4")]
		[Address(RVA = "0x1B5A6A0", Offset = "0x1B5A6A0", VA = "0x1B5A6A0")]
		public IykuetCollionDebugger()
		{
		}
	}
	[Token(Token = "0x200026F")]
	public class IykuetDebuggerVR : MonoBehaviour
	{
		[Token(Token = "0x4000CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _activeRoot;

		[Token(Token = "0x4000CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _buttonRoot;

		[Token(Token = "0x4000CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Button[] _buttons;

		[Token(Token = "0x4000CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int _selected;

		[Token(Token = "0x4000CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool _isActive;

		[Token(Token = "0x4000CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Inject]
		private InputProvider _inputProvider;

		[Token(Token = "0x6000AA5")]
		[Address(RVA = "0x1B5A6A8", Offset = "0x1B5A6A8", VA = "0x1B5A6A8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000AA6")]
		[Address(RVA = "0x1B5A76C", Offset = "0x1B5A76C", VA = "0x1B5A76C")]
		private void Select(int i)
		{
		}

		[Token(Token = "0x6000AA7")]
		[Address(RVA = "0x1B5A744", Offset = "0x1B5A744", VA = "0x1B5A744")]
		private void ChangeActive(bool v)
		{
		}

		[Token(Token = "0x6000AA8")]
		[Address(RVA = "0x1B5A7C4", Offset = "0x1B5A7C4", VA = "0x1B5A7C4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000AA9")]
		[Address(RVA = "0x1B5A838", Offset = "0x1B5A838", VA = "0x1B5A838")]
		public IykuetDebuggerVR()
		{
		}
	}
	[Token(Token = "0x2000270")]
	public class IykuetFPActionGenerator : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000271")]
		private struct KeyDataSet
		{
			[Token(Token = "0x4000CF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public KeyCode _keyCode;

			[Token(Token = "0x4000CFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public FPActionData _action;
		}

		[Token(Token = "0x4000CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<KeyDataSet> _keyDataSets;

		[Token(Token = "0x17000108")]
		[Inject]
		private IPublisher<FPActionData> _Publisher
		{
			[Token(Token = "0x6000AAA")]
			[Address(RVA = "0x1B5A840", Offset = "0x1B5A840", VA = "0x1B5A840")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000AAB")]
			[Address(RVA = "0x1B5A848", Offset = "0x1B5A848", VA = "0x1B5A848")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6000AAC")]
		[Address(RVA = "0x1B5A850", Offset = "0x1B5A850", VA = "0x1B5A850")]
		private void Update()
		{
		}

		[Token(Token = "0x6000AAD")]
		[Address(RVA = "0x1B5A968", Offset = "0x1B5A968", VA = "0x1B5A968")]
		public IykuetFPActionGenerator()
		{
		}
	}
	[Token(Token = "0x2000272")]
	public class IykuetGameStatusSwitcher : MonoBehaviour
	{
		[Token(Token = "0x17000109")]
		[Inject]
		private IPublisher<GameStatus> GameStatusChanger
		{
			[Token(Token = "0x6000AAE")]
			[Address(RVA = "0x1B5A970", Offset = "0x1B5A970", VA = "0x1B5A970")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000AAF")]
			[Address(RVA = "0x1B5A978", Offset = "0x1B5A978", VA = "0x1B5A978")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6000AB0")]
		[Address(RVA = "0x1B5A980", Offset = "0x1B5A980", VA = "0x1B5A980")]
		public void GameStatusSwitchTo(int i)
		{
		}

		[Token(Token = "0x6000AB1")]
		[Address(RVA = "0x1B5A984", Offset = "0x1B5A984", VA = "0x1B5A984")]
		public void GameStatusSwitchTo(GameStatus.Status _status)
		{
		}

		[Token(Token = "0x6000AB2")]
		[Address(RVA = "0x1B5AA64", Offset = "0x1B5AA64", VA = "0x1B5AA64")]
		private void Update()
		{
		}

		[Token(Token = "0x6000AB3")]
		[Address(RVA = "0x1B5AB28", Offset = "0x1B5AB28", VA = "0x1B5AB28")]
		public IykuetGameStatusSwitcher()
		{
		}
	}
	[Token(Token = "0x2000273")]
	public class IykuetTester : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000274")]
		public class TestEvent
		{
			[Token(Token = "0x4000CFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public KeyCode _keyCode;

			[Token(Token = "0x4000CFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public UnityEvent _event;

			[Token(Token = "0x6000AB6")]
			[Address(RVA = "0x1B5ABE8", Offset = "0x1B5ABE8", VA = "0x1B5ABE8")]
			public TestEvent()
			{
			}
		}

		[Token(Token = "0x4000CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public List<TestEvent> TestEvents;

		[Token(Token = "0x6000AB4")]
		[Address(RVA = "0x1B5AB30", Offset = "0x1B5AB30", VA = "0x1B5AB30")]
		private void Update()
		{
		}

		[Token(Token = "0x6000AB5")]
		[Address(RVA = "0x1B5ABE0", Offset = "0x1B5ABE0", VA = "0x1B5ABE0")]
		public IykuetTester()
		{
		}
	}
	[Token(Token = "0x2000275")]
	public class IykuetVRMAvatarDebugger : MonoBehaviour
	{
		[Token(Token = "0x4000CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject VRMObject;

		[Token(Token = "0x6000AB7")]
		[Address(RVA = "0x1B5ABF0", Offset = "0x1B5ABF0", VA = "0x1B5ABF0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000AB8")]
		[Address(RVA = "0x1B5ABF4", Offset = "0x1B5ABF4", VA = "0x1B5ABF4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000AB9")]
		[Address(RVA = "0x1B5AD70", Offset = "0x1B5AD70", VA = "0x1B5AD70")]
		public IykuetVRMAvatarDebugger()
		{
		}
	}
}
namespace iykuet.Archived
{
	[Token(Token = "0x2000276")]
	public class HumanoidHandShapeSettings : ScriptableObject
	{
		[Token(Token = "0x4000D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Range(-1f, 1f)]
		[SerializeField]
		private float Thumb1;

		[Token(Token = "0x4000D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Range(-1f, 1f)]
		[SerializeField]
		private float ThumbSpread;

		[Token(Token = "0x4000D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Range(-1f, 1f)]
		[SerializeField]
		private float Thumb2;

		[Token(Token = "0x4000D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Range(-1f, 1f)]
		[SerializeField]
		private float Thumb3;

		[Token(Token = "0x4000D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Range(-1f, 1f)]
		[SerializeField]
		private float Index1;

		[Token(Token = "0x4000D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[Range(-1f, 1f)]
		[SerializeField]
		private float IndexSpread;

		[Token(Token = "0x4000D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Range(-1f, 1f)]
		[SerializeField]
		private float Index2;

		[Token(Token = "0x4000D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[Range(-1f, 1f)]
		[SerializeField]
		private float Index3;

		[Token(Token = "0x4000D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Range(-1f, 1f)]
		[SerializeField]
		private float Middle1;

		[Token(Token = "0x4000D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[Range(-1f, 1f)]
		[SerializeField]
		private float MiddleSpread;

		[Token(Token = "0x4000D0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Range(-1f, 1f)]
		[SerializeField]
		private float Middle2;

		[Token(Token = "0x4000D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[Range(-1f, 1f)]
		[SerializeField]
		private float Middle3;

		[Token(Token = "0x4000D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Range(-1f, 1f)]
		[SerializeField]
		private float Ring1;

		[Token(Token = "0x4000D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[Range(-1f, 1f)]
		[SerializeField]
		private float RingSpread;

		[Token(Token = "0x4000D0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Range(-1f, 1f)]
		[SerializeField]
		private float Ring2;

		[Token(Token = "0x4000D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[Range(-1f, 1f)]
		[SerializeField]
		private float Ring3;

		[Token(Token = "0x4000D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Range(-1f, 1f)]
		[SerializeField]
		private float Little1;

		[Token(Token = "0x4000D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[Range(-1f, 1f)]
		[SerializeField]
		private float LittleSpread;

		[Token(Token = "0x4000D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Range(-1f, 1f)]
		[SerializeField]
		private float Little2;

		[Token(Token = "0x4000D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[Range(-1f, 1f)]
		[SerializeField]
		private float Little3;

		[Token(Token = "0x6000ABA")]
		[Address(RVA = "0x1B5AD78", Offset = "0x1B5AD78", VA = "0x1B5AD78")]
		public void ApplyHandShape(VRHand.HandType handType, ref HumanPose pose)
		{
		}

		[Token(Token = "0x6000ABB")]
		[Address(RVA = "0x1B5AF8C", Offset = "0x1B5AF8C", VA = "0x1B5AF8C")]
		public HumanoidHandShapeSettings()
		{
		}
	}
}
namespace iykuet.General
{
	[Token(Token = "0x2000277")]
	public class PrefabReplaceSetting : ScriptableObject
	{
		[Token(Token = "0x4000D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<PrefabPair> prefabPairs;

		[Token(Token = "0x6000ABC")]
		[Address(RVA = "0x1B5AF94", Offset = "0x1B5AF94", VA = "0x1B5AF94")]
		public PrefabReplaceSetting()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000278")]
	public class PrefabPair
	{
		[Token(Token = "0x4000D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject from;

		[Token(Token = "0x4000D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject to;

		[Token(Token = "0x6000ABD")]
		[Address(RVA = "0x1B5AF9C", Offset = "0x1B5AF9C", VA = "0x1B5AF9C")]
		public PrefabPair()
		{
		}
	}
}
namespace __Imacreate__.__Production__.S3_GameSelect
{
	[Token(Token = "0x2000279")]
	public class AllGFScenesManager : SingletonMonoBehaviour<AllGFScenesManager>
	{
		[Token(Token = "0x4000D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<GameObject> _deactivateObjs;

		[Token(Token = "0x4000D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource _bgmSource;

		[Token(Token = "0x4000D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Inject]
		private GFSceneLoader GFSceneLoader;

		[Token(Token = "0x4000D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public BoolReactiveProperty _isLoaded;

		[Token(Token = "0x4000D1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly Dictionary<int, string> _grooveFits;

		[Token(Token = "0x4000D1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly bool _dontDestroyOnLoad;

		[Token(Token = "0x1700010A")]
		protected override bool dontDestroyOnLoad
		{
			[Token(Token = "0x6000ABE")]
			[Address(RVA = "0x1B5AFA4", Offset = "0x1B5AFA4", VA = "0x1B5AFA4", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000ABF")]
		[Address(RVA = "0x1B5AFAC", Offset = "0x1B5AFAC", VA = "0x1B5AFAC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000AC0")]
		[Address(RVA = "0x1B5B344", Offset = "0x1B5B344", VA = "0x1B5B344")]
		public void LoadFitSphereScene(int grooveFitNum, GameObject fpSphere)
		{
		}

		[Token(Token = "0x6000AC1")]
		[Address(RVA = "0x1B5B58C", Offset = "0x1B5B58C", VA = "0x1B5B58C")]
		public void LoadEndrollScene(GameObject fpSphere)
		{
		}

		[Token(Token = "0x6000AC2")]
		[Address(RVA = "0x1B5B818", Offset = "0x1B5B818", VA = "0x1B5B818")]
		public AllGFScenesManager()
		{
		}
	}
	[Token(Token = "0x200027A")]
	public class ArrowReleaseEffect : MonoBehaviour
	{
		[Token(Token = "0x4000D1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject releaseParticleEffect;

		[Token(Token = "0x4000D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float effectLifeSecond;

		[Token(Token = "0x6000AC3")]
		[Address(RVA = "0x1B5B8F0", Offset = "0x1B5B8F0", VA = "0x1B5B8F0")]
		public void PlayReleaseEffect()
		{
		}

		[Token(Token = "0x6000AC4")]
		[Address(RVA = "0x1B5BB34", Offset = "0x1B5BB34", VA = "0x1B5BB34")]
		public ArrowReleaseEffect()
		{
		}
	}
	[Token(Token = "0x200027C")]
	public class EndlessLeverReleaseDescriptionBlock : global::EventBlock
	{
		[StructLayout(3)]
		[Token(Token = "0x200027D")]
		[CompilerGenerated]
		private struct <SetEvent>d__11 : IAsyncStateMachine
		{
			[Token(Token = "0x4000D2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000D2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x4000D2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public EndlessLeverReleaseDescriptionBlock <>4__this;

			[Token(Token = "0x4000D2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken token;

			[Token(Token = "0x4000D2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x4000D2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private UniTask<bool>.Awaiter <>u__2;

			[Token(Token = "0x6000ACA")]
			[Address(RVA = "0x1B5BCC4", Offset = "0x1B5BCC4", VA = "0x1B5BCC4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000ACB")]
			[Address(RVA = "0x1B5C72C", Offset = "0x1B5C72C", VA = "0x1B5C72C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000D20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GFIGameClearStateManager gFIGameClearStateManager;

		[Token(Token = "0x4000D21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject endlessLever;

		[Token(Token = "0x4000D22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private EndlessLeverReleaseEffect _endlessLeverReleaseEffect;

		[Token(Token = "0x4000D23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MultilingualTextMeshPro _textPanel;

		[Token(Token = "0x4000D24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ControllerAnimManager _controllerAnim;

		[Token(Token = "0x4000D25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private AudioClip _onNextAudio;

		[Token(Token = "0x4000D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4000D27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private ConversationBlockEvent[] _conversationBlockObjects;

		[Token(Token = "0x4000D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int _eventNum;

		[Token(Token = "0x4000D29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Inject]
		private MultilingualTextManager _multilingualTextManager;

		[Token(Token = "0x6000AC7")]
		[Address(RVA = "0x1B5BB64", Offset = "0x1B5BB64", VA = "0x1B5BB64")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000AC8")]
		[Address(RVA = "0x1B5BBDC", Offset = "0x1B5BBDC", VA = "0x1B5BBDC", Slot = "4")]
		[AsyncStateMachine(typeof(<SetEvent>d__11))]
		public override UniTask<bool> SetEvent(CancellationToken token)
		{
			return default(UniTask<bool>);
		}

		[Token(Token = "0x6000AC9")]
		[Address(RVA = "0x1B5BCBC", Offset = "0x1B5BCBC", VA = "0x1B5BCBC")]
		public EndlessLeverReleaseDescriptionBlock()
		{
		}
	}
	[Token(Token = "0x200027E")]
	public class EndlessLeverReleaseEffect : MonoBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x200027F")]
		[CompilerGenerated]
		private struct <PlayReleaseEffect>d__6 : IAsyncStateMachine
		{
			[Token(Token = "0x4000D36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000D37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4000D38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public EndlessLeverReleaseEffect <>4__this;

			[Token(Token = "0x4000D39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private DOTweenAsyncExtensions.TweenAwaiter <>u__1;

			[Token(Token = "0x6000ACF")]
			[Address(RVA = "0x1B5C810", Offset = "0x1B5C810", VA = "0x1B5C810", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000AD0")]
			[Address(RVA = "0x1B5CD30", Offset = "0x1B5CD30", VA = "0x1B5CD30", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000D30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject Lever;

		[Token(Token = "0x4000D31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject LeverMockRoot;

		[Token(Token = "0x4000D32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject LeverSwaitchMock;

		[Token(Token = "0x4000D33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4000D34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AudioClip side;

		[Token(Token = "0x4000D35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private AudioClip up;

		[Token(Token = "0x6000ACC")]
		[Address(RVA = "0x1B5C5D0", Offset = "0x1B5C5D0", VA = "0x1B5C5D0")]
		[AsyncStateMachine(typeof(<PlayReleaseEffect>d__6))]
		public UniTask PlayReleaseEffect()
		{
			return default(UniTask);
		}

		[Token(Token = "0x6000ACD")]
		[Address(RVA = "0x1B5C784", Offset = "0x1B5C784", VA = "0x1B5C784")]
		public EndlessLeverReleaseEffect()
		{
		}
	}
	[Token(Token = "0x2000280")]
	public class EndrollReleaseBlock : global::EventBlock
	{
		[StructLayout(3)]
		[Token(Token = "0x2000281")]
		[CompilerGenerated]
		private struct <SetEvent>d__2 : IAsyncStateMachine
		{
			[Token(Token = "0x4000D3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000D3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x4000D3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public EndrollReleaseBlock <>4__this;

			[Token(Token = "0x6000AD4")]
			[Address(RVA = "0x1B5CE88", Offset = "0x1B5CE88", VA = "0x1B5CE88", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000AD5")]
			[Address(RVA = "0x1B5D0FC", Offset = "0x1B5D0FC", VA = "0x1B5D0FC", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _endrollBox;

		[Token(Token = "0x6000AD1")]
		[Address(RVA = "0x1B5CD3C", Offset = "0x1B5CD3C", VA = "0x1B5CD3C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000AD2")]
		[Address(RVA = "0x1B5CDC4", Offset = "0x1B5CDC4", VA = "0x1B5CDC4", Slot = "4")]
		[AsyncStateMachine(typeof(<SetEvent>d__2))]
		public override UniTask<bool> SetEvent(CancellationToken token)
		{
			return default(UniTask<bool>);
		}

		[Token(Token = "0x6000AD3")]
		[Address(RVA = "0x1B5CE80", Offset = "0x1B5CE80", VA = "0x1B5CE80")]
		public EndrollReleaseBlock()
		{
		}
	}
	[Token(Token = "0x2000282")]
	public class GFSetReleaseEvent : MonoBehaviour
	{
		[Token(Token = "0x2000283")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass9_0
		{
			[Token(Token = "0x4000D47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GFSetReleaseEvent <>4__this;

			[Token(Token = "0x4000D48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public FitSphereNewSign newSignL;

			[Token(Token = "0x4000D49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FitSphereNewSign newSignC;

			[Token(Token = "0x4000D4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public FitSphereNewSign newSignR;

			[Token(Token = "0x6000AD8")]
			[Address(RVA = "0x1B5D2EC", Offset = "0x1B5D2EC", VA = "0x1B5D2EC")]
			public <>c__DisplayClass9_0()
			{
			}

			[Token(Token = "0x6000AD9")]
			[Address(RVA = "0x1B5D2F4", Offset = "0x1B5D2F4", VA = "0x1B5D2F4")]
			internal void <PlayReleaseEffect>b__0()
			{
			}

			[Token(Token = "0x6000ADA")]
			[Address(RVA = "0x1B5D57C", Offset = "0x1B5D57C", VA = "0x1B5D57C")]
			internal void <PlayReleaseEffect>b__1()
			{
			}

			[Token(Token = "0x6000ADB")]
			[Address(RVA = "0x1B5D688", Offset = "0x1B5D688", VA = "0x1B5D688")]
			internal void <PlayReleaseEffect>b__2()
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000284")]
		[CompilerGenerated]
		private struct <PlayReleaseEffect>d__9 : IAsyncStateMachine
		{
			[Token(Token = "0x4000D4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000D4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4000D4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GFSetReleaseEvent <>4__this;

			[Token(Token = "0x4000D4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AudioClip releaseClip;

			[Token(Token = "0x4000D4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float effectLife;

			[Token(Token = "0x4000D50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private <>c__DisplayClass9_0 <>8__1;

			[Token(Token = "0x4000D51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6000ADC")]
			[Address(RVA = "0x1B5D794", Offset = "0x1B5D794", VA = "0x1B5D794", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000ADD")]
			[Address(RVA = "0x1B5E314", Offset = "0x1B5E314", VA = "0x1B5E314", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000D3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject releaseParticleEffect;

		[Token(Token = "0x4000D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject endParticleEffect;

		[Token(Token = "0x4000D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject sphereL;

		[Token(Token = "0x4000D41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject sphereC;

		[Token(Token = "0x4000D42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject sphereR;

		[Token(Token = "0x4000D43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private MeshRenderer meshL;

		[Token(Token = "0x4000D44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private MeshRenderer meshC;

		[Token(Token = "0x4000D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private MeshRenderer meshR;

		[Token(Token = "0x4000D46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioSource _audio;

		[Token(Token = "0x6000AD6")]
		[Address(RVA = "0x1B5D154", Offset = "0x1B5D154", VA = "0x1B5D154")]
		[AsyncStateMachine(typeof(<PlayReleaseEffect>d__9))]
		public UniTask PlayReleaseEffect(float effectLife, AudioClip releaseClip)
		{
			return default(UniTask);
		}

		[Token(Token = "0x6000AD7")]
		[Address(RVA = "0x1B5D2E4", Offset = "0x1B5D2E4", VA = "0x1B5D2E4")]
		public GFSetReleaseEvent()
		{
		}
	}
	[Token(Token = "0x2000285")]
	public class GFTurntableManager : MonoBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x2000286")]
		[CompilerGenerated]
		private struct <RotateReleaseGFSet>d__13 : IAsyncStateMachine
		{
			[Token(Token = "0x4000D59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000D5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4000D5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GFTurntableManager <>4__this;

			[Token(Token = "0x4000D5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private DOTweenAsyncExtensions.TweenAwaiter <>u__1;

			[Token(Token = "0x6000AEC")]
			[Address(RVA = "0x1B5EE44", Offset = "0x1B5EE44", VA = "0x1B5EE44", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000AED")]
			[Address(RVA = "0x1B5F6E8", Offset = "0x1B5F6E8", VA = "0x1B5F6E8", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioClip _rotateSound;

		[Token(Token = "0x4000D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource _audio;

		[Token(Token = "0x4000D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _isMoving;

		[Token(Token = "0x4000D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _currentStatus;

		[Token(Token = "0x4000D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int rotateMin;

		[Token(Token = "0x4000D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int rotateMax;

		[Token(Token = "0x1700010B")]
		[Inject]
		private IPublisher<GFTurntableStatus> _gfTurntable
		{
			[Token(Token = "0x6000ADE")]
			[Address(RVA = "0x1B5E320", Offset = "0x1B5E320", VA = "0x1B5E320")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000ADF")]
			[Address(RVA = "0x1B5E328", Offset = "0x1B5E328", VA = "0x1B5E328")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6000AE0")]
		[Address(RVA = "0x1B5E330", Offset = "0x1B5E330", VA = "0x1B5E330")]
		private void Start()
		{
		}

		[Token(Token = "0x6000AE1")]
		[Address(RVA = "0x1B5E530", Offset = "0x1B5E530", VA = "0x1B5E530")]
		public void RotateLeft()
		{
		}

		[Token(Token = "0x6000AE2")]
		[Address(RVA = "0x1B5E8F0", Offset = "0x1B5E8F0", VA = "0x1B5E8F0")]
		public void RotateRight()
		{
		}

		[Token(Token = "0x6000AE3")]
		[Address(RVA = "0x1B5ECB0", Offset = "0x1B5ECB0", VA = "0x1B5ECB0")]
		[AsyncStateMachine(typeof(<RotateReleaseGFSet>d__13))]
		public UniTask RotateReleaseGFSet()
		{
			return default(UniTask);
		}

		[Token(Token = "0x6000AE4")]
		[Address(RVA = "0x1B5E4DC", Offset = "0x1B5E4DC", VA = "0x1B5E4DC")]
		private int GetCurrentStatusToGFSet()
		{
			return default(int);
		}

		[Token(Token = "0x6000AE5")]
		[Address(RVA = "0x1B5EE0C", Offset = "0x1B5EE0C", VA = "0x1B5EE0C")]
		public GFTurntableManager()
		{
		}
	}
	[Token(Token = "0x2000287")]
	public class MannequinRotate : MonoBehaviour
	{
		[Token(Token = "0x4000D5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _speed;

		[Token(Token = "0x4000D5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float _time;

		[Token(Token = "0x6000AEE")]
		[Address(RVA = "0x1B5F6F4", Offset = "0x1B5F6F4", VA = "0x1B5F6F4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000AEF")]
		[Address(RVA = "0x1B5F76C", Offset = "0x1B5F76C", VA = "0x1B5F76C")]
		public MannequinRotate()
		{
		}
	}
}
namespace __Imacreate__.__Production__.S3_GameSelect.TouchPanel
{
	[Token(Token = "0x2000288")]
	public class SetLocalAvatar : MonoBehaviour
	{
		[Token(Token = "0x4000D5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string _avatarPrefabFolder;

		[Token(Token = "0x4000D60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TouchPanelRouter _router;

		[Token(Token = "0x6000AF0")]
		[Address(RVA = "0x1B5F77C", Offset = "0x1B5F77C", VA = "0x1B5F77C")]
		public SetLocalAvatar()
		{
		}
	}
}
namespace __Imacreate__.__Production__.S3_GameSelect.Settings
{
	[Token(Token = "0x2000289")]
	public class GameSelectCalibration : CalibrationManager
	{
		[StructLayout(3)]
		[Token(Token = "0x200028A")]
		[CompilerGenerated]
		private struct <SetDescriptionModel>d__8 : IAsyncStateMachine
		{
			[Token(Token = "0x4000D66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000D67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4000D68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GameSelectCalibration <>4__this;

			[Token(Token = "0x4000D69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private CancellationToken <token>5__2;

			[Token(Token = "0x4000D6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6000AF8")]
			[Address(RVA = "0x1B5FC0C", Offset = "0x1B5FC0C", VA = "0x1B5FC0C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000AF9")]
			[Address(RVA = "0x1B5FFE0", Offset = "0x1B5FFE0", VA = "0x1B5FFE0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000D61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Header("Overlay Image")]
		[SerializeField]
		private GameObject _descriptionModel;

		[Token(Token = "0x4000D62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private float _rotateSpeed;

		[Token(Token = "0x4000D63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private bool _calibrateWaiting;

		[Token(Token = "0x4000D64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[Inject]
		private ISubscriber<TouchPanelActionData> _subscriber;

		[Token(Token = "0x4000D65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private TouchPanelRouter _router;

		[Token(Token = "0x6000AF1")]
		[Address(RVA = "0x1B5F7D4", Offset = "0x1B5F7D4", VA = "0x1B5F7D4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000AF2")]
		[Address(RVA = "0x1B5F8CC", Offset = "0x1B5F8CC", VA = "0x1B5F8CC", Slot = "5")]
		public override void CalibrationStart()
		{
		}

		[Token(Token = "0x6000AF3")]
		[Address(RVA = "0x1B5F974", Offset = "0x1B5F974", VA = "0x1B5F974")]
		public void SetActiveCalbrationMode(bool active)
		{
		}

		[Token(Token = "0x6000AF4")]
		[Address(RVA = "0x1B5F9B4", Offset = "0x1B5F9B4", VA = "0x1B5F9B4")]
		[AsyncStateMachine(typeof(<SetDescriptionModel>d__8))]
		private void SetDescriptionModel()
		{
		}

		[Token(Token = "0x6000AF5")]
		[Address(RVA = "0x1B5FA6C", Offset = "0x1B5FA6C", VA = "0x1B5FA6C")]
		public GameSelectCalibration()
		{
		}
	}
	[Token(Token = "0x200028B")]
	public class GameSelectLanguageSetting : MonoBehaviour
	{
		[Token(Token = "0x4000D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _proteinsRoot;

		[Token(Token = "0x4000D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource _effectPoint;

		[Token(Token = "0x4000D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip _effectSound;

		[Token(Token = "0x4000D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject _effectPrefab;

		[Token(Token = "0x4000D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Inject]
		private ISubscriber<TouchPanelActionData> _subscriber;

		[Token(Token = "0x4000D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TouchPanelRouter _router;

		[Token(Token = "0x6000AFA")]
		[Address(RVA = "0x1B5FFEC", Offset = "0x1B5FFEC", VA = "0x1B5FFEC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000AFB")]
		[Address(RVA = "0x1B600E4", Offset = "0x1B600E4", VA = "0x1B600E4")]
		public void SetActiveLanguageMode(bool active)
		{
		}

		[Token(Token = "0x6000AFC")]
		[Address(RVA = "0x1B601EC", Offset = "0x1B601EC", VA = "0x1B601EC")]
		public GameSelectLanguageSetting()
		{
		}
	}
	[Token(Token = "0x200028C")]
	public class GameSelectMonitorSetting : MonoBehaviour
	{
		[Token(Token = "0x4000D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Image _playerButton;

		[Token(Token = "0x4000D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Image _audienceButton;

		[Token(Token = "0x4000D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Color _selectedColor;

		[Token(Token = "0x4000D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Color _unselectedColor;

		[Token(Token = "0x4000D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Inject]
		private MonitorMode _monitorMode;

		[Token(Token = "0x6000AFE")]
		[Address(RVA = "0x1B602B0", Offset = "0x1B602B0", VA = "0x1B602B0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000AFF")]
		[Address(RVA = "0x1B6035C", Offset = "0x1B6035C", VA = "0x1B6035C")]
		private Color SelectedToColor(bool isSelected)
		{
			return default(Color);
		}

		[Token(Token = "0x6000B00")]
		[Address(RVA = "0x1B60398", Offset = "0x1B60398", VA = "0x1B60398")]
		public void SetPlayerMode()
		{
		}

		[Token(Token = "0x6000B01")]
		[Address(RVA = "0x1B60418", Offset = "0x1B60418", VA = "0x1B60418")]
		public void SetAudienceMode()
		{
		}

		[Token(Token = "0x6000B02")]
		[Address(RVA = "0x1B60498", Offset = "0x1B60498", VA = "0x1B60498")]
		public GameSelectMonitorSetting()
		{
		}
	}
}
namespace __Imacreate__.__Production__.S3_GameSelect.MessagePipe
{
	[Token(Token = "0x200028D")]
	public class FitSphereHandGrab
	{
		[Token(Token = "0x4000D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool Grab;

		[Token(Token = "0x4000D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject FitSphere;

		[Token(Token = "0x4000D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GrooveFitGame GFGame;

		[Token(Token = "0x4000D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public VRHand.HandType Hand;

		[Token(Token = "0x6000B04")]
		[Address(RVA = "0x1B60564", Offset = "0x1B60564", VA = "0x1B60564")]
		public FitSphereHandGrab()
		{
		}
	}
	[Token(Token = "0x200028E")]
	public class FitSphereHandHover
	{
		[Token(Token = "0x4000D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool Hover;

		[Token(Token = "0x4000D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject FitSphere;

		[Token(Token = "0x4000D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GrooveFitGame GFGame;

		[Token(Token = "0x4000D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public VRHand.HandType Hand;

		[Token(Token = "0x6000B05")]
		[Address(RVA = "0x1B6056C", Offset = "0x1B6056C", VA = "0x1B6056C")]
		public FitSphereHandHover()
		{
		}
	}
	[Token(Token = "0x200028F")]
	public class GameSelectZenjectInstaller : MonoInstaller
	{
		[Token(Token = "0x6000B06")]
		[Address(RVA = "0x1B60574", Offset = "0x1B60574", VA = "0x1B60574", Slot = "8")]
		public override void InstallBindings()
		{
		}

		[Token(Token = "0x6000B07")]
		[Address(RVA = "0x1B60718", Offset = "0x1B60718", VA = "0x1B60718")]
		public GameSelectZenjectInstaller()
		{
		}
	}
	[Token(Token = "0x2000290")]
	public class GFTurntableStatus
	{
		[Token(Token = "0x4000D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int activeGFSet;

		[Token(Token = "0x4000D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool isNewReleaseTurn;

		[Token(Token = "0x6000B08")]
		[Address(RVA = "0x1B5E4D4", Offset = "0x1B5E4D4", VA = "0x1B5E4D4")]
		public GFTurntableStatus()
		{
		}
	}
}
namespace __Imacreate__.__Production__.S3_GameSelect.FitSphere
{
	[Token(Token = "0x2000291")]
	[SelectionBase]
	public class FitSphereBehaviour : MonoBehaviour
	{
		[Token(Token = "0x4000D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GrooveFitGame GFGame;

		[Token(Token = "0x4000D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private bool _isUnlocked;

		[Token(Token = "0x4000D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("Settings")]
		[SerializeField]
		private GrabbableFitSphere _fitSphereGrabbable;

		[Token(Token = "0x4000D83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AllGFScenesManager _allGfScenesManager;

		[Token(Token = "0x4000D84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _sceneChangeCalled;

		[Token(Token = "0x6000B09")]
		[Address(RVA = "0x1B60720", Offset = "0x1B60720", VA = "0x1B60720")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B0A")]
		[Address(RVA = "0x1B60880", Offset = "0x1B60880", VA = "0x1B60880")]
		public void OnPutOnHead()
		{
		}

		[Token(Token = "0x6000B0B")]
		[Address(RVA = "0x1B608DC", Offset = "0x1B608DC", VA = "0x1B608DC")]
		public FitSphereBehaviour()
		{
		}
	}
	[Token(Token = "0x2000292")]
	public class FitSpherePivot : MonoBehaviour
	{
		[Token(Token = "0x4000D85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int _gfSetNum;

		[Token(Token = "0x4000D86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _delay;

		[Token(Token = "0x4000D87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Sequence _sequence;

		[Token(Token = "0x4000D88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Inject]
		private ISubscriber<GFTurntableStatus> _turntableMessage;

		[NonSerialized]
		[Token(Token = "0x4000D89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GrabbableFitSphere _grabbableFitSphere;

		[NonSerialized]
		[Token(Token = "0x4000D8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool IsActiveGFSet;

		[Token(Token = "0x6000B0D")]
		[Address(RVA = "0x1B60968", Offset = "0x1B60968", VA = "0x1B60968")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B0E")]
		[Address(RVA = "0x1B5D400", Offset = "0x1B5D400", VA = "0x1B5D400")]
		public void StartLoop()
		{
		}

		[Token(Token = "0x6000B0F")]
		[Address(RVA = "0x1B60AC8", Offset = "0x1B60AC8", VA = "0x1B60AC8")]
		private void StopLoop()
		{
		}

		[Token(Token = "0x6000B10")]
		[Address(RVA = "0x1B60B24", Offset = "0x1B60B24", VA = "0x1B60B24")]
		public FitSpherePivot()
		{
		}
	}
	[Token(Token = "0x2000293")]
	public class GrabbableFitSphere : GrabbableObject
	{
		[Token(Token = "0x2000294")]
		public enum FitSphereState
		{
			[Token(Token = "0x4000D9A")]
			OnPivot,
			[Token(Token = "0x4000D9B")]
			Grabbed,
			[Token(Token = "0x4000D9C")]
			Free
		}

		[StructLayout(3)]
		[Token(Token = "0x2000295")]
		[CompilerGenerated]
		private struct <ReturnTimer>d__25 : IAsyncStateMachine
		{
			[Token(Token = "0x4000D9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000D9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4000D9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CancellationToken token;

			[Token(Token = "0x4000DA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float timeToReturn;

			[Token(Token = "0x4000DA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GrabbableFitSphere <>4__this;

			[Token(Token = "0x4000DA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <_time>5__2;

			[Token(Token = "0x4000DA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private Cysharp.Threading.Tasks.YieldAwaitable.Awaiter <>u__1;

			[Token(Token = "0x6000B20")]
			[Address(RVA = "0x1B61B34", Offset = "0x1B61B34", VA = "0x1B61B34", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000B21")]
			[Address(RVA = "0x1B61F40", Offset = "0x1B61F40", VA = "0x1B61F40", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public FitSphereBehaviour _fitSphere;

		[Token(Token = "0x4000D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[Inject]
		private IPublisher<FitSphereHandHover> _handHover;

		[Token(Token = "0x4000D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[Inject]
		private IPublisher<FitSphereHandGrab> _handGrab;

		[Token(Token = "0x4000D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[Header("Hover&Grab Setting")]
		[SerializeField]
		private GameObject _hoveredEffect;

		[Token(Token = "0x4000D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[SerializeField]
		private AudioClip _hoverSound;

		[Token(Token = "0x4000D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[SerializeField]
		private AudioClip _grabSound;

		[Token(Token = "0x4000D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[SerializeField]
		private AudioClip _releaseSound;

		[Token(Token = "0x4000D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private AudioSource _audio;

		[Token(Token = "0x4000D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[Header("Repop")]
		[SerializeField]
		private float _disappearTime;

		[Token(Token = "0x4000D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		[SerializeField]
		private Transform _spherePivot;

		[Token(Token = "0x4000D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		[SerializeField]
		private GameObject _repopEffect;

		[NonSerialized]
		[Token(Token = "0x4000D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		public readonly ReactiveProperty<FitSphereState> _state;

		[Token(Token = "0x4000D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private Tweener _positionTweener;

		[Token(Token = "0x4000D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private Tweener _rotationTweener;

		[Token(Token = "0x6000B12")]
		[Address(RVA = "0x1B60C18", Offset = "0x1B60C18", VA = "0x1B60C18")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B13")]
		[Address(RVA = "0x1B60C6C", Offset = "0x1B60C6C", VA = "0x1B60C6C", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000B14")]
		[Address(RVA = "0x1B60D14", Offset = "0x1B60D14", VA = "0x1B60D14", Slot = "5")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6000B15")]
		[Address(RVA = "0x1B61138", Offset = "0x1B61138", VA = "0x1B61138", Slot = "9")]
		public override void OnHovered(VRHand.HandType hand)
		{
		}

		[Token(Token = "0x6000B16")]
		[Address(RVA = "0x1B61298", Offset = "0x1B61298", VA = "0x1B61298", Slot = "6")]
		public override void OnGrab(GameObject handObj, GameObject parentObj, VRHand.HandType hand)
		{
		}

		[Token(Token = "0x6000B17")]
		[Address(RVA = "0x1B61478", Offset = "0x1B61478", VA = "0x1B61478", Slot = "7")]
		public override void OnRelease(GameObject handObj, VRHand.HandType hand)
		{
		}

		[Token(Token = "0x6000B18")]
		[Address(RVA = "0x1B61710", Offset = "0x1B61710", VA = "0x1B61710", Slot = "11")]
		protected override void OnUnHoveredWithGrab(VRHand.HandType unHoveredHand, VRHand.HandType grabHand)
		{
		}

		[Token(Token = "0x6000B19")]
		[Address(RVA = "0x1B61858", Offset = "0x1B61858", VA = "0x1B61858", Slot = "10")]
		protected override void OnUnHoveredWithoutGrab(VRHand.HandType hand)
		{
		}

		[Token(Token = "0x6000B1A")]
		[Address(RVA = "0x1B60E9C", Offset = "0x1B60E9C", VA = "0x1B60E9C")]
		private void ReturnToPivot(bool tween = false)
		{
		}

		[Token(Token = "0x6000B1B")]
		[Address(RVA = "0x1B60BB4", Offset = "0x1B60BB4", VA = "0x1B60BB4")]
		public void SetActiveHoverable(bool gfSetActive)
		{
		}

		[Token(Token = "0x6000B1C")]
		[Address(RVA = "0x1B61640", Offset = "0x1B61640", VA = "0x1B61640")]
		[AsyncStateMachine(typeof(<ReturnTimer>d__25))]
		private UniTaskVoid ReturnTimer(float timeToReturn, CancellationToken token)
		{
			return default(UniTaskVoid);
		}

		[Token(Token = "0x6000B1D")]
		[Address(RVA = "0x1B6143C", Offset = "0x1B6143C", VA = "0x1B6143C")]
		private void CancelTween()
		{
		}

		[Token(Token = "0x6000B1E")]
		[Address(RVA = "0x1B61988", Offset = "0x1B61988", VA = "0x1B61988")]
		private void RepopEffect()
		{
		}

		[Token(Token = "0x6000B1F")]
		[Address(RVA = "0x1B61AA4", Offset = "0x1B61AA4", VA = "0x1B61AA4")]
		public GrabbableFitSphere()
		{
		}
	}
	[Token(Token = "0x2000296")]
	public class SphereEffectHandChanger : MonoBehaviour
	{
		[Token(Token = "0x4000DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _sphereEffectRoot;

		[Token(Token = "0x4000DA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _leftHandPivot;

		[Token(Token = "0x4000DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _rightHandPivot;

		[Token(Token = "0x4000DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform[] _handPivots;

		[Token(Token = "0x4000DA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Inject]
		private ISubscriber<FitSphereHandGrab> _handGrabSubscriber;

		[Token(Token = "0x6000B22")]
		[Address(RVA = "0x1B61F4C", Offset = "0x1B61F4C", VA = "0x1B61F4C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B23")]
		[Address(RVA = "0x1B62130", Offset = "0x1B62130", VA = "0x1B62130")]
		private void SetEffect(bool grab, VRHand.HandType hand)
		{
		}

		[Token(Token = "0x6000B24")]
		[Address(RVA = "0x1B623A8", Offset = "0x1B623A8", VA = "0x1B623A8")]
		public SphereEffectHandChanger()
		{
		}
	}
	[Token(Token = "0x2000297")]
	public class SphereEffectManager : MonoBehaviour
	{
		[Token(Token = "0x4000DA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Inject]
		private ISubscriber<GameStatus.Difficulty> _difficultySubscriber;

		[Token(Token = "0x4000DAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Inject]
		private ISubscriber<GameStatus.OptionRule> _optionSubscriber;

		[Token(Token = "0x4000DAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject[] _difficultyEffects;

		[Token(Token = "0x4000DAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject[] _optionEffects;

		[Token(Token = "0x6000B26")]
		[Address(RVA = "0x1B623D0", Offset = "0x1B623D0", VA = "0x1B623D0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B27")]
		[Address(RVA = "0x1B626CC", Offset = "0x1B626CC", VA = "0x1B626CC")]
		private void SetOption(GameStatus.OptionRule option)
		{
		}

		[Token(Token = "0x6000B28")]
		[Address(RVA = "0x1B6277C", Offset = "0x1B6277C", VA = "0x1B6277C")]
		public SphereEffectManager()
		{
		}
	}
	[Token(Token = "0x2000298")]
	public class EndrollPicturesInitializer : MonoBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x2000299")]
		[CompilerGenerated]
		private struct <Texture2DLoadAsync>d__6 : IAsyncStateMachine
		{
			[Token(Token = "0x4000DB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000DB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Texture2D> <>t__builder;

			[Token(Token = "0x4000DB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string path;

			[Token(Token = "0x4000DB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private UnityWebRequest <uwr>5__2;

			[Token(Token = "0x4000DB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UnityAsyncExtensions.UnityWebRequestAsyncOperationAwaiter <>u__1;

			[Token(Token = "0x6000B31")]
			[Address(RVA = "0x1B63800", Offset = "0x1B63800", VA = "0x1B63800", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000B32")]
			[Address(RVA = "0x1B63D48", Offset = "0x1B63D48", VA = "0x1B63D48", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000DAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float endrollImageHeight;

		[Token(Token = "0x4000DAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int _maxCountPerGf;

		[Token(Token = "0x4000DAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<SpriteRenderer> _pictures;

		[Token(Token = "0x4000DB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private List<Sprite> _defaultSprites;

		[Token(Token = "0x4000DB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly List<Sprite> sprites;

		[Token(Token = "0x6000B2B")]
		[Address(RVA = "0x1B6284C", Offset = "0x1B6284C", VA = "0x1B6284C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B2C")]
		[Address(RVA = "0x1B628F0", Offset = "0x1B628F0", VA = "0x1B628F0")]
		[AsyncStateMachine(typeof(<Texture2DLoadAsync>d__6))]
		private UniTask<Texture2D> Texture2DLoadAsync(string path)
		{
			return default(UniTask<Texture2D>);
		}

		[Token(Token = "0x6000B2D")]
		[Address(RVA = "0x1B629C8", Offset = "0x1B629C8", VA = "0x1B629C8")]
		private List<string> GetAllFileFromDirectory()
		{
			return null;
		}

		[Token(Token = "0x6000B2E")]
		[Address(RVA = "0x1B63408", Offset = "0x1B63408", VA = "0x1B63408")]
		public EndrollPicturesInitializer()
		{
		}
	}
	[Token(Token = "0x200029D")]
	public class ReturnGameSelectSphere : GrabbableObject
	{
		[Token(Token = "0x200029E")]
		private enum FitSphereState
		{
			[Token(Token = "0x4000DD9")]
			OnPivot,
			[Token(Token = "0x4000DDA")]
			Grabbed,
			[Token(Token = "0x4000DDB")]
			Free
		}

		[StructLayout(3)]
		[Token(Token = "0x200029F")]
		[CompilerGenerated]
		private struct <ReturnTimer>d__23 : IAsyncStateMachine
		{
			[Token(Token = "0x4000DDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000DDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4000DDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CancellationToken token;

			[Token(Token = "0x4000DDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float timeToReturn;

			[Token(Token = "0x4000DE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ReturnGameSelectSphere <>4__this;

			[Token(Token = "0x4000DE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <_time>5__2;

			[Token(Token = "0x4000DE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private Cysharp.Threading.Tasks.YieldAwaitable.Awaiter <>u__1;

			[Token(Token = "0x6000B4F")]
			[Address(RVA = "0x1B65AB0", Offset = "0x1B65AB0", VA = "0x1B65AB0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000B50")]
			[Address(RVA = "0x1B65EA0", Offset = "0x1B65EA0", VA = "0x1B65EA0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[Inject]
		private GFSceneLoader _gFSceneLoader;

		[Token(Token = "0x4000DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		private List<GameObject> _deactivateObjs;

		[Token(Token = "0x4000DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[Header("Hover&Grab Setting")]
		[SerializeField]
		private GameObject _hoveredEffect;

		[Token(Token = "0x4000DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[SerializeField]
		private AudioClip _hoverSound;

		[Token(Token = "0x4000DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[SerializeField]
		private AudioClip _grabSound;

		[Token(Token = "0x4000DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[SerializeField]
		private AudioClip _releaseSound;

		[Token(Token = "0x4000DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private AudioSource _audio;

		[Token(Token = "0x4000DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[Header("Repop")]
		[SerializeField]
		private float _disappearTime;

		[Token(Token = "0x4000DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[SerializeField]
		private Transform _spherePivot;

		[Token(Token = "0x4000DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		[SerializeField]
		private GameObject _repopEffect;

		[Token(Token = "0x4000DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private FitSphereState _state;

		[Token(Token = "0x4000DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private Tweener _positionTweener;

		[Token(Token = "0x4000DD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private Tweener _rotationTweener;

		[Token(Token = "0x4000DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private bool _isSceneChangeCalled;

		[Token(Token = "0x6000B43")]
		[Address(RVA = "0x1B650D4", Offset = "0x1B650D4", VA = "0x1B650D4", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000B44")]
		[Address(RVA = "0x1B65154", Offset = "0x1B65154", VA = "0x1B65154", Slot = "5")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6000B45")]
		[Address(RVA = "0x1B65698", Offset = "0x1B65698", VA = "0x1B65698", Slot = "9")]
		public override void OnHovered(VRHand.HandType hand)
		{
		}

		[Token(Token = "0x6000B46")]
		[Address(RVA = "0x1B656E8", Offset = "0x1B656E8", VA = "0x1B656E8", Slot = "6")]
		public override void OnGrab(GameObject handObj, GameObject parentObj, VRHand.HandType hand)
		{
		}

		[Token(Token = "0x6000B47")]
		[Address(RVA = "0x1B657AC", Offset = "0x1B657AC", VA = "0x1B657AC", Slot = "7")]
		public override void OnRelease(GameObject handObj, VRHand.HandType hand)
		{
		}

		[Token(Token = "0x6000B48")]
		[Address(RVA = "0x1B65918", Offset = "0x1B65918", VA = "0x1B65918", Slot = "11")]
		protected override void OnUnHoveredWithGrab(VRHand.HandType unHoveredHand, VRHand.HandType grabHand)
		{
		}

		[Token(Token = "0x6000B49")]
		[Address(RVA = "0x1B65948", Offset = "0x1B65948", VA = "0x1B65948", Slot = "10")]
		protected override void OnUnHoveredWithoutGrab(VRHand.HandType hand)
		{
		}

		[Token(Token = "0x6000B4A")]
		[Address(RVA = "0x1B65440", Offset = "0x1B65440", VA = "0x1B65440")]
		private void ReturnToPivot(bool tween = false)
		{
		}

		[Token(Token = "0x6000B4B")]
		[Address(RVA = "0x1B65848", Offset = "0x1B65848", VA = "0x1B65848")]
		[AsyncStateMachine(typeof(<ReturnTimer>d__23))]
		private UniTaskVoid ReturnTimer(float timeToReturn, CancellationToken token)
		{
			return default(UniTaskVoid);
		}

		[Token(Token = "0x6000B4C")]
		[Address(RVA = "0x1B65770", Offset = "0x1B65770", VA = "0x1B65770")]
		private void CancelTween()
		{
		}

		[Token(Token = "0x6000B4D")]
		[Address(RVA = "0x1B65984", Offset = "0x1B65984", VA = "0x1B65984")]
		private void RepopEffect()
		{
		}

		[Token(Token = "0x6000B4E")]
		[Address(RVA = "0x1B65AA0", Offset = "0x1B65AA0", VA = "0x1B65AA0")]
		public ReturnGameSelectSphere()
		{
		}
	}
}
namespace __Imacreate__.__Production__.S3_GameSelect.ExplanationPanel
{
	[Token(Token = "0x20002A0")]
	public class ExplanationPanelController : MonoBehaviour
	{
		[Token(Token = "0x4000DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Inject]
		private DiContainer _container;

		[Token(Token = "0x4000DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _explanationPanel;

		[Token(Token = "0x4000DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Inject]
		private ISubscriber<FitSphereHandHover> _hoverMessage;

		[Token(Token = "0x4000DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject _panelLaneLeft;

		[Token(Token = "0x4000DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject _panelLaneRight;

		[Token(Token = "0x6000B51")]
		[Address(RVA = "0x1B65EAC", Offset = "0x1B65EAC", VA = "0x1B65EAC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B52")]
		[Address(RVA = "0x1B65FD8", Offset = "0x1B65FD8", VA = "0x1B65FD8")]
		private void CreatePanel(FitSphereHandHover value)
		{
		}

		[Token(Token = "0x6000B53")]
		[Address(RVA = "0x1B666D8", Offset = "0x1B666D8", VA = "0x1B666D8")]
		public ExplanationPanelController()
		{
		}
	}
	[Token(Token = "0x20002A1")]
	public class PanelController : MonoBehaviour
	{
		[Token(Token = "0x4000DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Inject]
		private ISubscriber<FitSphereHandHover> _hoverMessage;

		[Token(Token = "0x4000DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Inject]
		private ISubscriber<FitSphereHandGrab> _grabMessage;

		[Token(Token = "0x4000DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Inject]
		private ISubscriber<GameStatus.Difficulty> _difficultySubscriber;

		[Token(Token = "0x4000DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Inject]
		private ISubscriber<GameStatus.OptionRule> _optionSubscriber;

		[Token(Token = "0x4000DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Inject]
		private ISubscriber<GameStatus.EndlessLifeType> _lifeTypeSubscriber;

		[Token(Token = "0x4000DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Header("Hover")]
		[SerializeField]
		private GameObject _hoverObjs;

		[Token(Token = "0x4000DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private MultilingualTextMeshPro _titleTextHover;

		[Token(Token = "0x4000DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private MultilingualTextMeshPro _mainTextHover;

		[Token(Token = "0x4000DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Header("Grab")]
		[SerializeField]
		private GameObject _grabObjs;

		[Token(Token = "0x4000DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private MultilingualTextMeshPro _titleTextGrab;

		[Token(Token = "0x4000DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private MultilingualTextMeshPro _mainTextGrab;

		[Token(Token = "0x4000DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private TextMeshProUGUI _bestScoreText;

		[Token(Token = "0x4000DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject _mannequin;

		[Token(Token = "0x4000DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private MultilingualTextMeshPro _musclePartText;

		[Token(Token = "0x4000DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private TextMeshProUGUI _caloriesBurnedText;

		[Token(Token = "0x4000DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private MultilingualTextMeshPro _difficultyText;

		[Token(Token = "0x4000DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private MultilingualTextMeshPro _optionText;

		[Token(Token = "0x4000DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private TextMeshProUGUI _scoreRateText;

		[Token(Token = "0x4000DFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private GameStatus.Difficulty _currentDifficulty;

		[Token(Token = "0x4000DFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private GameStatus.OptionRule _currentOption;

		[Token(Token = "0x4000DFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private GameStatus.EndlessLifeType _currentLifeType;

		[Token(Token = "0x4000DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[Header("Score Rate")]
		[SerializeField]
		private GFScoreRateSettings _gfScoreRateSettings;

		[Token(Token = "0x4000DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private GameObject _moreExhaustedUI;

		[Token(Token = "0x4000DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[Header("Jewel Image")]
		[SerializeField]
		private RawImage _difficultyJewel;

		[Token(Token = "0x4000E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private RawImage _optionJewel;

		[Token(Token = "0x4000E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private Texture _bronzeJewel;

		[Token(Token = "0x4000E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private Texture _silverJewel;

		[Token(Token = "0x4000E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private Texture _goldJewel;

		[Token(Token = "0x4000E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private Texture _platinumJewel;

		[Token(Token = "0x4000E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private Texture _endlessJewel;

		[Token(Token = "0x4000E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private Texture _normalJewel;

		[Token(Token = "0x4000E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private Texture _slowJewel;

		[Token(Token = "0x4000E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private Texture _fastJewel;

		[Token(Token = "0x4000E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private Texture _perfectRunJewel;

		[Token(Token = "0x4000E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[Header("Endless")]
		[SerializeField]
		private GameObject _endlessLifes;

		[Token(Token = "0x4000E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private GameObject _level1;

		[Token(Token = "0x4000E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		private GameObject _level2;

		[Token(Token = "0x4000E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		private GameObject _level3;

		[Token(Token = "0x4000E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private GrooveFitGame _GFGame;

		[Token(Token = "0x4000E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		private readonly float _hoverPanelHeight;

		[Token(Token = "0x4000E10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private readonly float _grabPanelHeight;

		[Token(Token = "0x4000E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		private float _distance;

		[Token(Token = "0x4000E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private readonly float _hoverPanelDistance;

		[Token(Token = "0x4000E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		private readonly float _grabPanelDistance;

		[Token(Token = "0x4000E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private readonly float _hoverPanelScale;

		[Token(Token = "0x4000E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		private readonly float _grabPanelScale;

		[Token(Token = "0x4000E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private Sequence hoverSequence;

		[Token(Token = "0x4000E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private Sequence grabSequence;

		[Token(Token = "0x4000E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private Sequence closeSequence;

		[Token(Token = "0x4000E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private bool _isHoverLeftHandSave;

		[Token(Token = "0x4000E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x179")]
		private bool _isHoverRightHandSave;

		[Token(Token = "0x4000E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17A")]
		private bool _isGrab;

		[Token(Token = "0x4000E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17B")]
		private bool _isDisplayPanel;

		[Token(Token = "0x4000E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private GameObject _leftPanelLane;

		[Token(Token = "0x4000E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private GameObject _rightPanelLane;

		[Token(Token = "0x4000E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private GameObject _fitSphereSave;

		[Token(Token = "0x4000E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private GameObject _fakeObj;

		[Token(Token = "0x6000B55")]
		[Address(RVA = "0x1B666E4", Offset = "0x1B666E4", VA = "0x1B666E4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B56")]
		[Address(RVA = "0x1B6736C", Offset = "0x1B6736C", VA = "0x1B6736C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B57")]
		[Address(RVA = "0x1B664C4", Offset = "0x1B664C4", VA = "0x1B664C4")]
		public void AddText(GrooveFitGame gfGame, VRHand.HandType hand, GameObject panelLaneLeft, GameObject panelLaneRight)
		{
		}

		[Token(Token = "0x6000B58")]
		[Address(RVA = "0x1B66F4C", Offset = "0x1B66F4C", VA = "0x1B66F4C")]
		private void OpenHoverPanel()
		{
		}

		[Token(Token = "0x6000B59")]
		[Address(RVA = "0x1B673CC", Offset = "0x1B673CC", VA = "0x1B673CC")]
		private void OpenGrabPanel(VRHand.HandType hand)
		{
		}

		[Token(Token = "0x6000B5A")]
		[Address(RVA = "0x1B67D10", Offset = "0x1B67D10", VA = "0x1B67D10")]
		private void ClosePanel()
		{
		}

		[Token(Token = "0x6000B5B")]
		[Address(RVA = "0x1B67394", Offset = "0x1B67394", VA = "0x1B67394")]
		private void EnableHoverText()
		{
		}

		[Token(Token = "0x6000B5C")]
		[Address(RVA = "0x1B67CD8", Offset = "0x1B67CD8", VA = "0x1B67CD8")]
		private void EnableGrabText()
		{
		}

		[Token(Token = "0x6000B5D")]
		[Address(RVA = "0x1B67870", Offset = "0x1B67870", VA = "0x1B67870")]
		private void UpdateScoreRate()
		{
		}

		[Token(Token = "0x6000B5E")]
		[Address(RVA = "0x1B66DE8", Offset = "0x1B66DE8", VA = "0x1B66DE8")]
		private void SetEndlessLife(GameStatus.EndlessLifeType lifeType)
		{
		}

		[Token(Token = "0x6000B5F")]
		[Address(RVA = "0x1B68080", Offset = "0x1B68080", VA = "0x1B68080")]
		public PanelController()
		{
		}
	}
	[Token(Token = "0x20002A2")]
	public class PanelLaneManager : MonoBehaviour
	{
		[Token(Token = "0x4000E21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _panelLaneLeft;

		[Token(Token = "0x4000E22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _panelLaneRight;

		[Token(Token = "0x4000E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float _minAngleDifference;

		[Token(Token = "0x4000E24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float _angleDifference;

		[Token(Token = "0x4000E25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float _averageAngle;

		[Token(Token = "0x4000E26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _angleLSave;

		[Token(Token = "0x4000E27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _angleRSave;

		[Token(Token = "0x4000E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float _value;

		[Token(Token = "0x4000E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Inject]
		private InputProvider _inputProvider;

		[Token(Token = "0x6000B67")]
		[Address(RVA = "0x1B69360", Offset = "0x1B69360", VA = "0x1B69360")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B68")]
		[Address(RVA = "0x1B69A48", Offset = "0x1B69A48", VA = "0x1B69A48")]
		public PanelLaneManager()
		{
		}
	}
}
namespace __Imacreate__.__Production__.S3_GameSelect.EventBlock
{
	[Token(Token = "0x20002A3")]
	public class GameSelectArrowDescriptionBlock : global::EventBlock
	{
		[StructLayout(3)]
		[Token(Token = "0x20002A4")]
		[CompilerGenerated]
		private struct <SetEvent>d__12 : IAsyncStateMachine
		{
			[Token(Token = "0x4000E35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000E36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x4000E37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameSelectArrowDescriptionBlock <>4__this;

			[Token(Token = "0x4000E38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken token;

			[Token(Token = "0x4000E39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask<bool>.Awaiter <>u__1;

			[Token(Token = "0x6000B6C")]
			[Address(RVA = "0x1B69BC0", Offset = "0x1B69BC0", VA = "0x1B69BC0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000B6D")]
			[Address(RVA = "0x1B6A7B4", Offset = "0x1B6A7B4", VA = "0x1B6A7B4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GFIGameClearStateManager gFIGameClearStateManager;

		[Token(Token = "0x4000E2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject leftButton;

		[Token(Token = "0x4000E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject rightButton;

		[Token(Token = "0x4000E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MultilingualTextMeshPro _textPanel;

		[Token(Token = "0x4000E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ControllerAnimManager _controllerAnim;

		[Token(Token = "0x4000E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private AudioClip _onNextAudio;

		[Token(Token = "0x4000E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4000E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private ConversationBlockEvent[] _conversationBlockObjects;

		[Token(Token = "0x4000E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int _eventNum;

		[Token(Token = "0x4000E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Inject]
		private MultilingualTextManager _multilingualTextManager;

		[Token(Token = "0x4000E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Inject]
		private InputProvider _inputProvider;

		[Token(Token = "0x6000B69")]
		[Address(RVA = "0x1B69A64", Offset = "0x1B69A64", VA = "0x1B69A64")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B6A")]
		[Address(RVA = "0x1B69ADC", Offset = "0x1B69ADC", VA = "0x1B69ADC", Slot = "4")]
		[AsyncStateMachine(typeof(<SetEvent>d__12))]
		public override UniTask<bool> SetEvent(CancellationToken token)
		{
			return default(UniTask<bool>);
		}

		[Token(Token = "0x6000B6B")]
		[Address(RVA = "0x1B69BB8", Offset = "0x1B69BB8", VA = "0x1B69BB8")]
		public GameSelectArrowDescriptionBlock()
		{
		}
	}
	[Token(Token = "0x20002A5")]
	public class GameSelectBGMPlayer : global::EventBlock
	{
		[StructLayout(3)]
		[Token(Token = "0x20002A6")]
		[CompilerGenerated]
		private struct <PlayClip>d__3 : IAsyncStateMachine
		{
			[Token(Token = "0x4000E3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000E3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4000E3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameSelectBGMPlayer <>4__this;

			[Token(Token = "0x4000E40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CancellationToken token;

			[Token(Token = "0x4000E41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6000B71")]
			[Address(RVA = "0x1B6AA70", Offset = "0x1B6AA70", VA = "0x1B6AA70", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000B72")]
			[Address(RVA = "0x1B6AF88", Offset = "0x1B6AF88", VA = "0x1B6AF88", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20002A7")]
		[CompilerGenerated]
		private struct <SetEvent>d__4 : IAsyncStateMachine
		{
			[Token(Token = "0x4000E42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000E43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x4000E44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameSelectBGMPlayer <>4__this;

			[Token(Token = "0x4000E45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken token;

			[Token(Token = "0x4000E46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6000B73")]
			[Address(RVA = "0x1B6AF94", Offset = "0x1B6AF94", VA = "0x1B6AF94", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000B74")]
			[Address(RVA = "0x1B6B38C", Offset = "0x1B6B38C", VA = "0x1B6B38C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4000E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip _introClip;

		[Token(Token = "0x4000E3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip _loopClip;

		[Token(Token = "0x6000B6E")]
		[Address(RVA = "0x1B6A80C", Offset = "0x1B6A80C", VA = "0x1B6A80C")]
		[AsyncStateMachine(typeof(<PlayClip>d__3))]
		private UniTask PlayClip(CancellationToken token)
		{
			return default(UniTask);
		}

		[Token(Token = "0x6000B6F")]
		[Address(RVA = "0x1B6A98C", Offset = "0x1B6A98C", VA = "0x1B6A98C", Slot = "4")]
		[AsyncStateMachine(typeof(<SetEvent>d__4))]
		public override UniTask<bool> SetEvent(CancellationToken token)
		{
			return default(UniTask<bool>);
		}

		[Token(Token = "0x6000B70")]
		[Address(RVA = "0x1B6AA68", Offset = "0x1B6AA68", VA = "0x1B6AA68")]
		public GameSelectBGMPlayer()
		{
		}
	}
	[Token(Token = "0x20002A8")]
	public class GameSelectInitialize : global::EventBlock
	{
		[StructLayout(3)]
		[Token(Token = "0x20002A9")]
		[CompilerGenerated]
		private struct <SetEvent>d__5 : IAsyncStateMachine
		{
			[Token(Token = "0x4000E4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000E4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x4000E4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameSelectInitialize <>4__this;

			[Token(Token = "0x4000E4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6000B78")]
			[Address(RVA = "0x1B6B55C", Offset = "0x1B6B55C", VA = "0x1B6B55C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000B79")]
			[Address(RVA = "0x1B6BA04", Offset = "0x1B6BA04", VA = "0x1B6BA04", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AllGFScenesManager _allGfScenesManager;

		[Token(Token = "0x4000E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Inject]
		private InputProvider _inputProvider;

		[Token(Token = "0x4000E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Inject]
		private GFSceneLoader _sceneLoader;

		[Token(Token = "0x4000E4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private UsualAvatarLoader _avatar;

		[Token(Token = "0x6000B75")]
		[Address(RVA = "0x1B6B3E4", Offset = "0x1B6B3E4", VA = "0x1B6B3E4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B76")]
		[Address(RVA = "0x1B6B490", Offset = "0x1B6B490", VA = "0x1B6B490", Slot = "4")]
		[AsyncStateMachine(typeof(<SetEvent>d__5))]
		public override UniTask<bool> SetEvent(CancellationToken token)
		{
			return default(UniTask<bool>);
		}

		[Token(Token = "0x6000B77")]
		[Address(RVA = "0x1B6B554", Offset = "0x1B6B554", VA = "0x1B6B554")]
		public GameSelectInitialize()
		{
		}
	}
	[Token(Token = "0x20002AA")]
	public class GameSelectManager : MonoBehaviour
	{
		[Token(Token = "0x4000E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private EventBlockDirector _eventBlockDirector;

		[Token(Token = "0x4000E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CancellationTokenSource _token;

		[Token(Token = "0x6000B7A")]
		[Address(RVA = "0x1B6BA5C", Offset = "0x1B6BA5C", VA = "0x1B6BA5C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B7B")]
		[Address(RVA = "0x1B6BB10", Offset = "0x1B6BB10", VA = "0x1B6BB10")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000B7C")]
		[Address(RVA = "0x1B6BB40", Offset = "0x1B6BB40", VA = "0x1B6BB40")]
		public GameSelectManager()
		{
		}
	}
	[Token(Token = "0x20002AB")]
	public class OpenBetaEndDescriptionBlock : global::EventBlock
	{
		[StructLayout(3)]
		[Token(Token = "0x20002AC")]
		[CompilerGenerated]
		private struct <SetEvent>d__9 : IAsyncStateMachine
		{
			[Token(Token = "0x4000E59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000E5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x4000E5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OpenBetaEndDescriptionBlock <>4__this;

			[Token(Token = "0x4000E5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken token;

			[Token(Token = "0x4000E5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask<bool>.Awaiter <>u__1;

			[Token(Token = "0x6000B80")]
			[Address(RVA = "0x1B6BCA4", Offset = "0x1B6BCA4", VA = "0x1B6BCA4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000B81")]
			[Address(RVA = "0x1B6C380", Offset = "0x1B6C380", VA = "0x1B6C380", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GFIGameClearStateManager gFIGameClearStateManager;

		[Token(Token = "0x4000E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MultilingualTextMeshPro _textPanel;

		[Token(Token = "0x4000E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ControllerAnimManager _controllerAnim;

		[Token(Token = "0x4000E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _onNextAudio;

		[Token(Token = "0x4000E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4000E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private ConversationBlockEvent[] _conversationBlockObjects;

		[Token(Token = "0x4000E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int _eventNum;

		[Token(Token = "0x4000E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Inject]
		private MultilingualTextManager _multilingualTextManager;

		[Token(Token = "0x6000B7D")]
		[Address(RVA = "0x1B6BB48", Offset = "0x1B6BB48", VA = "0x1B6BB48")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B7E")]
		[Address(RVA = "0x1B6BBC0", Offset = "0x1B6BBC0", VA = "0x1B6BBC0", Slot = "4")]
		[AsyncStateMachine(typeof(<SetEvent>d__9))]
		public override UniTask<bool> SetEvent(CancellationToken token)
		{
			return default(UniTask<bool>);
		}

		[Token(Token = "0x6000B7F")]
		[Address(RVA = "0x1B6BC9C", Offset = "0x1B6BC9C", VA = "0x1B6BC9C")]
		public OpenBetaEndDescriptionBlock()
		{
		}
	}
	[Token(Token = "0x20002AD")]
	public class ReleaseGFSetBlock : global::EventBlock
	{
		[StructLayout(3)]
		[Token(Token = "0x20002AE")]
		[CompilerGenerated]
		private struct <RotateReleaseGFSet>d__5 : IAsyncStateMachine
		{
			[Token(Token = "0x4000E63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000E64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4000E65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ReleaseGFSetBlock <>4__this;

			[Token(Token = "0x4000E66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6000B86")]
			[Address(RVA = "0x1B6C7A0", Offset = "0x1B6C7A0", VA = "0x1B6C7A0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000B87")]
			[Address(RVA = "0x1B6CB74", Offset = "0x1B6CB74", VA = "0x1B6CB74", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20002AF")]
		[CompilerGenerated]
		private struct <PlayReleaseEffect>d__6 : IAsyncStateMachine
		{
			[Token(Token = "0x4000E67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000E68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4000E69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ReleaseGFSetBlock <>4__this;

			[Token(Token = "0x4000E6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CancellationToken token;

			[Token(Token = "0x4000E6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6000B88")]
			[Address(RVA = "0x1B6CB80", Offset = "0x1B6CB80", VA = "0x1B6CB80", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000B89")]
			[Address(RVA = "0x1B6DE04", Offset = "0x1B6DE04", VA = "0x1B6DE04", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20002B0")]
		[CompilerGenerated]
		private struct <SetEvent>d__7 : IAsyncStateMachine
		{
			[Token(Token = "0x4000E6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000E6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x4000E6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ReleaseGFSetBlock <>4__this;

			[Token(Token = "0x4000E6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken token;

			[Token(Token = "0x4000E70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6000B8A")]
			[Address(RVA = "0x1B6DE10", Offset = "0x1B6DE10", VA = "0x1B6DE10", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000B8B")]
			[Address(RVA = "0x1B6E208", Offset = "0x1B6E208", VA = "0x1B6E208", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Inject]
		private GFSceneLoader _sceneLoader;

		[Token(Token = "0x4000E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GFIGameClearStateManager gFIGameClearStateManager;

		[Token(Token = "0x4000E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GFTurntableManager gFTurntableManager;

		[Token(Token = "0x4000E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _releaseAudio;

		[Token(Token = "0x4000E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float effectLifeSecond;

		[Token(Token = "0x6000B82")]
		[Address(RVA = "0x1B6C3D8", Offset = "0x1B6C3D8", VA = "0x1B6C3D8")]
		[AsyncStateMachine(typeof(<RotateReleaseGFSet>d__5))]
		private UniTask RotateReleaseGFSet()
		{
			return default(UniTask);
		}

		[Token(Token = "0x6000B83")]
		[Address(RVA = "0x1B6C534", Offset = "0x1B6C534", VA = "0x1B6C534")]
		[AsyncStateMachine(typeof(<PlayReleaseEffect>d__6))]
		private UniTask PlayReleaseEffect(CancellationToken token)
		{
			return default(UniTask);
		}

		[Token(Token = "0x6000B84")]
		[Address(RVA = "0x1B6C6B4", Offset = "0x1B6C6B4", VA = "0x1B6C6B4", Slot = "4")]
		[AsyncStateMachine(typeof(<SetEvent>d__7))]
		public override UniTask<bool> SetEvent(CancellationToken token)
		{
			return default(UniTask<bool>);
		}

		[Token(Token = "0x6000B85")]
		[Address(RVA = "0x1B6C790", Offset = "0x1B6C790", VA = "0x1B6C790")]
		public ReleaseGFSetBlock()
		{
		}
	}
}
namespace __Imacreate__.__Production__.S3_GameSelect.Difficulty
{
	[Token(Token = "0x20002B1")]
	public class DifficultyJewelPivotManager : MonoBehaviour
	{
		[Token(Token = "0x4000E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Inject]
		private ISubscriber<GameStatus.Difficulty> difficultySubscriber;

		[Token(Token = "0x4000E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SettingDifficulty settingDifficulty;

		[Token(Token = "0x4000E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject flagGameObject;

		[Token(Token = "0x4000E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip jewelIntoGFSSound;

		[Token(Token = "0x4000E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AudioSource _audio;

		[Token(Token = "0x4000E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject jewelRoot;

		[Token(Token = "0x6000B8C")]
		[Address(RVA = "0x1B6E260", Offset = "0x1B6E260", VA = "0x1B6E260")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B8D")]
		[Address(RVA = "0x1B6E3FC", Offset = "0x1B6E3FC", VA = "0x1B6E3FC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B8E")]
		[Address(RVA = "0x1B6E4A8", Offset = "0x1B6E4A8", VA = "0x1B6E4A8")]
		private void PlayAudioClipOneShot(AudioClip clip)
		{
		}

		[Token(Token = "0x6000B8F")]
		[Address(RVA = "0x1B6E4C4", Offset = "0x1B6E4C4", VA = "0x1B6E4C4")]
		public DifficultyJewelPivotManager()
		{
		}
	}
	[Token(Token = "0x20002B2")]
	public class EndlessLifeTypeChanger : MonoBehaviour
	{
		[Token(Token = "0x4000E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Inject]
		private IPublisher<GameStatus.EndlessLifeType> lifeTypePublisher;

		[Token(Token = "0x6000B91")]
		[Address(RVA = "0x1B6E548", Offset = "0x1B6E548", VA = "0x1B6E548")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B92")]
		[Address(RVA = "0x1B6E54C", Offset = "0x1B6E54C", VA = "0x1B6E54C")]
		public void SetLevel1()
		{
		}

		[Token(Token = "0x6000B93")]
		[Address(RVA = "0x1B6E614", Offset = "0x1B6E614", VA = "0x1B6E614")]
		public void SetLevel2()
		{
		}

		[Token(Token = "0x6000B94")]
		[Address(RVA = "0x1B6E6DC", Offset = "0x1B6E6DC", VA = "0x1B6E6DC")]
		public void SetLevel3()
		{
		}

		[Token(Token = "0x6000B95")]
		[Address(RVA = "0x1B6E7A4", Offset = "0x1B6E7A4", VA = "0x1B6E7A4")]
		public EndlessLifeTypeChanger()
		{
		}
	}
	[Token(Token = "0x20002B3")]
	public class JewelEffect : MonoBehaviour
	{
		[Token(Token = "0x4000E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Vector3 normalScale;

		[Token(Token = "0x4000E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private Vector3 grabbedScale;

		[Token(Token = "0x6000B96")]
		[Address(RVA = "0x1B6E7AC", Offset = "0x1B6E7AC", VA = "0x1B6E7AC")]
		public void GrabbedEffect()
		{
		}

		[Token(Token = "0x6000B97")]
		[Address(RVA = "0x1B6E7D8", Offset = "0x1B6E7D8", VA = "0x1B6E7D8")]
		public void ReleasedEffect()
		{
		}

		[Token(Token = "0x6000B98")]
		[Address(RVA = "0x1B6E804", Offset = "0x1B6E804", VA = "0x1B6E804")]
		public JewelEffect()
		{
		}
	}
	[Token(Token = "0x20002B4")]
	public class OptionJewelPivotManager : MonoBehaviour
	{
		[Token(Token = "0x4000E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Inject]
		private ISubscriber<GameStatus.OptionRule> optionRuleSubscriber;

		[Token(Token = "0x4000E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SettingOption settingOption;

		[Token(Token = "0x4000E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject flagGameObject;

		[Token(Token = "0x4000E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip jewelIntoGFSSound;

		[Token(Token = "0x4000E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AudioSource _audio;

		[Token(Token = "0x4000E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject jewelRoot;

		[Token(Token = "0x6000B99")]
		[Address(RVA = "0x1B6E80C", Offset = "0x1B6E80C", VA = "0x1B6E80C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B9A")]
		[Address(RVA = "0x1B6E9A8", Offset = "0x1B6E9A8", VA = "0x1B6E9A8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B9B")]
		[Address(RVA = "0x1B6EA54", Offset = "0x1B6EA54", VA = "0x1B6EA54")]
		private void PlayAudioClipOneShot(AudioClip clip)
		{
		}

		[Token(Token = "0x6000B9C")]
		[Address(RVA = "0x1B6EA70", Offset = "0x1B6EA70", VA = "0x1B6EA70")]
		public OptionJewelPivotManager()
		{
		}
	}
}
namespace __Imacreate__.__Production__.S3_GameSelect.Debug
{
	[Token(Token = "0x20002B5")]
	public class GameSelectDebugSettings : MonoBehaviour
	{
		[Token(Token = "0x4000E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool _useDebugLanguage;

		[Token(Token = "0x4000E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private LanguageSetting.Language _language;

		[Token(Token = "0x4000E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[Tooltip("GrooveFitのクリア回数を変更できるスクリプタブルオブジェクト")]
		private GFIGameClearStateForDevelopmentDebug _clearStateData;

		[Token(Token = "0x4000E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Inject]
		private MultilingualTextManager _multilingualTextManager;

		[Token(Token = "0x6000B9E")]
		[Address(RVA = "0x1B6EAF4", Offset = "0x1B6EAF4", VA = "0x1B6EAF4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B9F")]
		[Address(RVA = "0x1B6EAF8", Offset = "0x1B6EAF8", VA = "0x1B6EAF8")]
		public GameSelectDebugSettings()
		{
		}
	}
}
namespace __Imacreate__.__Production__.S3_GameSelect._99_Archives
{
	[Token(Token = "0x20002B6")]
	public class BlackCameraActivateEvent : global::EventBlock
	{
		[StructLayout(3)]
		[Token(Token = "0x20002B7")]
		[CompilerGenerated]
		private struct <SetEvent>d__1 : IAsyncStateMachine
		{
			[Token(Token = "0x4000E85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000E86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x4000E87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public BlackCameraActivateEvent <>4__this;

			[Token(Token = "0x4000E88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken token;

			[Token(Token = "0x4000E89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6000BA2")]
			[Address(RVA = "0x1B6EBE4", Offset = "0x1B6EBE4", VA = "0x1B6EBE4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000BA3")]
			[Address(RVA = "0x1B6F080", Offset = "0x1B6F080", VA = "0x1B6F080", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Camera Settings")]
		[SerializeField]
		private GameObject _blackCamera;

		[Token(Token = "0x6000BA0")]
		[Address(RVA = "0x1B6EB00", Offset = "0x1B6EB00", VA = "0x1B6EB00", Slot = "4")]
		[AsyncStateMachine(typeof(<SetEvent>d__1))]
		public override UniTask<bool> SetEvent(CancellationToken token)
		{
			return default(UniTask<bool>);
		}

		[Token(Token = "0x6000BA1")]
		[Address(RVA = "0x1B6EBDC", Offset = "0x1B6EBDC", VA = "0x1B6EBDC")]
		public BlackCameraActivateEvent()
		{
		}
	}
	[Token(Token = "0x20002B8")]
	public class ExplanationPanelManager : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20002B9")]
		private class Explanation
		{
			[Token(Token = "0x4000E90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string Title;

			[Token(Token = "0x4000E91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int GFNumber;

			[Token(Token = "0x4000E92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[TextArea(3, 10)]
			public string Main;

			[Token(Token = "0x6000BA8")]
			[Address(RVA = "0x1B6F4A4", Offset = "0x1B6F4A4", VA = "0x1B6F4A4")]
			public Explanation()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20002BA")]
		private class ExpValue
		{
			[Token(Token = "0x4000E93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string Title;

			[Token(Token = "0x4000E94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string Main;

			[Token(Token = "0x6000BA9")]
			[Address(RVA = "0x1B6F2C4", Offset = "0x1B6F2C4", VA = "0x1B6F2C4")]
			public ExpValue()
			{
			}
		}

		[Token(Token = "0x4000E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Text Object")]
		[SerializeField]
		private TextMeshPro _title;

		[Token(Token = "0x4000E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TextMeshPro _main;

		[Token(Token = "0x4000E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Header("Text Resources")]
		[SerializeField]
		private Explanation[] _explanations;

		[Token(Token = "0x4000E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly Dictionary<int, ExpValue> _expDict;

		[Token(Token = "0x4000E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Inject]
		private ISubscriber<FitSphereHandHover> _hoverMessage;

		[Token(Token = "0x4000E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private VRHand.HandType _displayHand;

		[Token(Token = "0x6000BA4")]
		[Address(RVA = "0x1B6F0D8", Offset = "0x1B6F0D8", VA = "0x1B6F0D8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000BA5")]
		[Address(RVA = "0x1B6F2CC", Offset = "0x1B6F2CC", VA = "0x1B6F2CC")]
		private void ChangeText(FitSphereHandHover value)
		{
		}

		[Token(Token = "0x6000BA6")]
		[Address(RVA = "0x1B6F410", Offset = "0x1B6F410", VA = "0x1B6F410")]
		public ExplanationPanelManager()
		{
		}
	}
	[Token(Token = "0x20002BB")]
	public class MainCameraActivateEvent : global::EventBlock
	{
		[StructLayout(3)]
		[Token(Token = "0x20002BC")]
		[CompilerGenerated]
		private struct <SetEvent>d__2 : IAsyncStateMachine
		{
			[Token(Token = "0x4000E97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000E98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x4000E99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MainCameraActivateEvent <>4__this;

			[Token(Token = "0x4000E9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6000BAC")]
			[Address(RVA = "0x1B6F578", Offset = "0x1B6F578", VA = "0x1B6F578", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000BAD")]
			[Address(RVA = "0x1B6FA0C", Offset = "0x1B6FA0C", VA = "0x1B6FA0C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Camera Settings")]
		[SerializeField]
		private GameObject _blackCamera;

		[Token(Token = "0x4000E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Inject]
		private InputProvider _inputProvider;

		[Token(Token = "0x6000BAA")]
		[Address(RVA = "0x1B6F4AC", Offset = "0x1B6F4AC", VA = "0x1B6F4AC", Slot = "4")]
		[AsyncStateMachine(typeof(<SetEvent>d__2))]
		public override UniTask<bool> SetEvent(CancellationToken token)
		{
			return default(UniTask<bool>);
		}

		[Token(Token = "0x6000BAB")]
		[Address(RVA = "0x1B6F570", Offset = "0x1B6F570", VA = "0x1B6F570")]
		public MainCameraActivateEvent()
		{
		}
	}
}
namespace __Imacreate__.__Production__.S2_Opening
{
	[Token(Token = "0x20002BD")]
	public class CalibrationEvent : EventBlock
	{
		[StructLayout(3)]
		[Token(Token = "0x20002BE")]
		[CompilerGenerated]
		private struct <SetEvent>d__13 : IAsyncStateMachine
		{
			[Token(Token = "0x4000EA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000EA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x4000EAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CalibrationEvent <>4__this;

			[Token(Token = "0x4000EAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken token;

			[Token(Token = "0x4000EAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6000BB3")]
			[Address(RVA = "0x1B6FF30", Offset = "0x1B6FF30", VA = "0x1B6FF30", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000BB4")]
			[Address(RVA = "0x1B70710", Offset = "0x1B70710", VA = "0x1B70710", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20002BF")]
		[CompilerGenerated]
		private struct <WaitForCalibrate>d__15 : IAsyncStateMachine
		{
			[Token(Token = "0x4000EAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000EAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4000EAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public CalibrationEvent <>4__this;

			[Token(Token = "0x4000EB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CancellationToken token;

			[Token(Token = "0x4000EB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6000BB5")]
			[Address(RVA = "0x1B70768", Offset = "0x1B70768", VA = "0x1B70768", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000BB6")]
			[Address(RVA = "0x1B70BC0", Offset = "0x1B70BC0", VA = "0x1B70BC0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Setting")]
		[SerializeField]
		private CalibrationManager _calibrationManager;

		[Token(Token = "0x4000E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TextMeshPro _textPanel;

		[Token(Token = "0x4000E9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private string _key;

		[Token(Token = "0x4000E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _onNextAudio;

		[Token(Token = "0x4000E9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4000EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Header("Description")]
		[SerializeField]
		private Transform _descriptionModel;

		[Token(Token = "0x4000EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float _rotateSpeed;

		[Token(Token = "0x4000EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[Header("Debug")]
		[SerializeField]
		private bool _useDebugText;

		[Token(Token = "0x4000EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[TextArea(3, 10)]
		private string _debugText;

		[Token(Token = "0x4000EA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool _calibrateFinish;

		[Token(Token = "0x4000EA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Inject]
		private InputProvider _inputProvider;

		[Token(Token = "0x4000EA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Inject]
		private MultilingualTextManager _multilingualTextManager;

		[Token(Token = "0x4000EA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[Inject]
		private IPublisher<CharacterActionData> _publisher;

		[Token(Token = "0x6000BAE")]
		[Address(RVA = "0x1B6FA64", Offset = "0x1B6FA64", VA = "0x1B6FA64", Slot = "4")]
		[AsyncStateMachine(typeof(<SetEvent>d__13))]
		public override UniTask<bool> SetEvent(CancellationToken token)
		{
			return default(UniTask<bool>);
		}

		[Token(Token = "0x6000BAF")]
		[Address(RVA = "0x1B6FB40", Offset = "0x1B6FB40", VA = "0x1B6FB40")]
		public void FinishCalibrate()
		{
		}

		[Token(Token = "0x6000BB0")]
		[Address(RVA = "0x1B6FD7C", Offset = "0x1B6FD7C", VA = "0x1B6FD7C")]
		[AsyncStateMachine(typeof(<WaitForCalibrate>d__15))]
		private UniTask WaitForCalibrate(CancellationToken token)
		{
			return default(UniTask);
		}

		[Token(Token = "0x6000BB1")]
		[Address(RVA = "0x1B6FEFC", Offset = "0x1B6FEFC", VA = "0x1B6FEFC")]
		public CalibrationEvent()
		{
		}
	}
	[Token(Token = "0x20002C0")]
	public class ChangePlaceEvent : EventBlock
	{
		[StructLayout(3)]
		[Token(Token = "0x20002C1")]
		[CompilerGenerated]
		private struct <SetEvent>d__4 : IAsyncStateMachine
		{
			[Token(Token = "0x4000EB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000EB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x4000EB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ChangePlaceEvent <>4__this;

			[Token(Token = "0x4000EB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken token;

			[Token(Token = "0x4000EB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x4000EBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private DOTweenAsyncExtensions.TweenAwaiter <>u__2;

			[Token(Token = "0x6000BBA")]
			[Address(RVA = "0x1B70D0C", Offset = "0x1B70D0C", VA = "0x1B70D0C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000BBB")]
			[Address(RVA = "0x1B71850", Offset = "0x1B71850", VA = "0x1B71850", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Inject]
		private InputProvider _inputProvider;

		[Token(Token = "0x4000EB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AudioSource audioSource;

		[Token(Token = "0x4000EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Material _sceneSkybox;

		[Token(Token = "0x6000BB7")]
		[Address(RVA = "0x1B70BCC", Offset = "0x1B70BCC", VA = "0x1B70BCC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000BB8")]
		[Address(RVA = "0x1B70C24", Offset = "0x1B70C24", VA = "0x1B70C24", Slot = "4")]
		[AsyncStateMachine(typeof(<SetEvent>d__4))]
		public override UniTask<bool> SetEvent(CancellationToken token)
		{
			return default(UniTask<bool>);
		}

		[Token(Token = "0x6000BB9")]
		[Address(RVA = "0x1B70D04", Offset = "0x1B70D04", VA = "0x1B70D04")]
		public ChangePlaceEvent()
		{
		}
	}
	[Token(Token = "0x20002C2")]
	public class ConversationBlock : EventBlock
	{
		[StructLayout(3)]
		[Token(Token = "0x20002C3")]
		[CompilerGenerated]
		private struct <SetEvent>d__8 : IAsyncStateMachine
		{
			[Token(Token = "0x4000EC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000EC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x4000EC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ConversationBlock <>4__this;

			[Token(Token = "0x4000EC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken token;

			[Token(Token = "0x4000EC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask<bool>.Awaiter <>u__1;

			[Token(Token = "0x6000BC0")]
			[Address(RVA = "0x1B71A5C", Offset = "0x1B71A5C", VA = "0x1B71A5C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000BC1")]
			[Address(RVA = "0x1B720E0", Offset = "0x1B720E0", VA = "0x1B720E0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000EBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MultilingualTextMeshPro _textPanel;

		[Token(Token = "0x4000EBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ControllerAnimManager _controllerAnim;

		[Token(Token = "0x4000EBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip _onNextAudio;

		[Token(Token = "0x4000EBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4000EBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ConversationBlockEvent[] _conversationBlockObjects;

		[Token(Token = "0x4000EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int _eventNum;

		[Token(Token = "0x4000EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Inject]
		private MultilingualTextManager _multilingualTextManager;

		[Token(Token = "0x6000BBC")]
		[Address(RVA = "0x1B718A8", Offset = "0x1B718A8", VA = "0x1B718A8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000BBD")]
		[Address(RVA = "0x1B71920", Offset = "0x1B71920", VA = "0x1B71920", Slot = "4")]
		[AsyncStateMachine(typeof(<SetEvent>d__8))]
		public override UniTask<bool> SetEvent(CancellationToken token)
		{
			return default(UniTask<bool>);
		}

		[Token(Token = "0x6000BBE")]
		[Address(RVA = "0x1B719FC", Offset = "0x1B719FC", VA = "0x1B719FC")]
		[ContextMenu("SetFromChildren")]
		private void SetFromChildren()
		{
		}

		[Token(Token = "0x6000BBF")]
		[Address(RVA = "0x1B71A54", Offset = "0x1B71A54", VA = "0x1B71A54")]
		public ConversationBlock()
		{
		}
	}
	[Token(Token = "0x20002C4")]
	public class ConversationBlockEvent : MonoBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x20002C5")]
		[CompilerGenerated]
		private struct <SetEvent>d__8 : IAsyncStateMachine
		{
			[Token(Token = "0x4000ECD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000ECE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x4000ECF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ConversationBlockEvent <>4__this;

			[Token(Token = "0x4000ED0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MultilingualTextManager multilingualTextManager;

			[Token(Token = "0x4000ED1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public MultilingualTextMeshPro textPanel;

			[Token(Token = "0x4000ED2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public CancellationToken token;

			[Token(Token = "0x4000ED3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6000BC8")]
			[Address(RVA = "0x1B723C8", Offset = "0x1B723C8", VA = "0x1B723C8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000BC9")]
			[Address(RVA = "0x1B72A50", Offset = "0x1B72A50", VA = "0x1B72A50", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000EC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Setting")]
		[SerializeField]
		private string _key;

		[Token(Token = "0x4000EC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Dictionary<string, string> _replaceParams;

		[Token(Token = "0x4000EC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Header("Debug")]
		[SerializeField]
		private bool _useDebugText;

		[Token(Token = "0x4000ECA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[TextArea(4, 8)]
		public string _debugText;

		[Token(Token = "0x4000ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Inject]
		private InputProvider _inputProvider;

		[Token(Token = "0x14000011")]
		public event Action<CancellationToken> OnTextChange
		{
			[Token(Token = "0x6000BC2")]
			[Address(RVA = "0x1B72138", Offset = "0x1B72138", VA = "0x1B72138")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6000BC3")]
			[Address(RVA = "0x1B721E8", Offset = "0x1B721E8", VA = "0x1B721E8")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6000BC4")]
		[Address(RVA = "0x1B6A5D8", Offset = "0x1B6A5D8", VA = "0x1B6A5D8")]
		[AsyncStateMachine(typeof(<SetEvent>d__8))]
		public UniTask<bool> SetEvent(MultilingualTextManager multilingualTextManager, MultilingualTextMeshPro textPanel, CancellationToken token)
		{
			return default(UniTask<bool>);
		}

		[Token(Token = "0x6000BC5")]
		[Address(RVA = "0x1B72298", Offset = "0x1B72298", VA = "0x1B72298")]
		public void AddReplace(string replaceKey, string replaceResult)
		{
		}

		[Token(Token = "0x6000BC6")]
		[Address(RVA = "0x1B72300", Offset = "0x1B72300", VA = "0x1B72300")]
		public ConversationBlockEvent()
		{
		}
	}
	[Token(Token = "0x20002C6")]
	public class EnterButtonManager : MonoBehaviour
	{
		[Token(Token = "0x4000ED4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _enterButton;

		[Token(Token = "0x4000ED5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TextMeshProUGUI _displayText;

		[Token(Token = "0x6000BCA")]
		[Address(RVA = "0x1B72AA8", Offset = "0x1B72AA8", VA = "0x1B72AA8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000BCB")]
		[Address(RVA = "0x1B72AC8", Offset = "0x1B72AC8", VA = "0x1B72AC8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BCC")]
		[Address(RVA = "0x1B72B48", Offset = "0x1B72B48", VA = "0x1B72B48")]
		public EnterButtonManager()
		{
		}
	}
	[Token(Token = "0x20002C7")]
	[RequireComponent(typeof(AudioSource))]
	public class FadeToGameSelect : EventBlock
	{
		[StructLayout(3)]
		[Token(Token = "0x20002C8")]
		[CompilerGenerated]
		private struct <SetEvent>d__4 : IAsyncStateMachine
		{
			[Token(Token = "0x4000EDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000EDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x4000EDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FadeToGameSelect <>4__this;

			[Token(Token = "0x4000EDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6000BCF")]
			[Address(RVA = "0x1B72C1C", Offset = "0x1B72C1C", VA = "0x1B72C1C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000BD0")]
			[Address(RVA = "0x1B73170", Offset = "0x1B73170", VA = "0x1B73170", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000ED6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _textPanel;

		[Token(Token = "0x4000ED7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource[] _bgm;

		[Token(Token = "0x4000ED8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AudioSource _audio;

		[Token(Token = "0x4000ED9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Inject]
		private InputProvider _inputProvider;

		[Token(Token = "0x6000BCD")]
		[Address(RVA = "0x1B72B50", Offset = "0x1B72B50", VA = "0x1B72B50", Slot = "4")]
		[AsyncStateMachine(typeof(<SetEvent>d__4))]
		public override UniTask<bool> SetEvent(CancellationToken token)
		{
			return default(UniTask<bool>);
		}

		[Token(Token = "0x6000BCE")]
		[Address(RVA = "0x1B72C14", Offset = "0x1B72C14", VA = "0x1B72C14")]
		public FadeToGameSelect()
		{
		}
	}
	[Token(Token = "0x20002C9")]
	public class GrabbableOpeningSphere : GrabbableObject
	{
		[Token(Token = "0x20002CA")]
		private enum OpeningSphereState
		{
			[Token(Token = "0x4000EEB")]
			OnPivot,
			[Token(Token = "0x4000EEC")]
			Grabbed,
			[Token(Token = "0x4000EED")]
			Free
		}

		[StructLayout(3)]
		[Token(Token = "0x20002CB")]
		[CompilerGenerated]
		private struct <ReturnTimer>d__21 : IAsyncStateMachine
		{
			[Token(Token = "0x4000EEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000EEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4000EF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CancellationToken token;

			[Token(Token = "0x4000EF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float timeToReturn;

			[Token(Token = "0x4000EF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GrabbableOpeningSphere <>4__this;

			[Token(Token = "0x4000EF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <_time>5__2;

			[Token(Token = "0x4000EF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private Cysharp.Threading.Tasks.YieldAwaitable.Awaiter <>u__1;

			[Token(Token = "0x6000BDD")]
			[Address(RVA = "0x1B73960", Offset = "0x1B73960", VA = "0x1B73960", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000BDE")]
			[Address(RVA = "0x1B73D50", Offset = "0x1B73D50", VA = "0x1B73D50", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[NonSerialized]
		[Token(Token = "0x4000EDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private VRHand.HandType _nowGrabHand;

		[Token(Token = "0x4000EDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[Header("Hover&Grab Setting")]
		[SerializeField]
		private GameObject _hoveredEffect;

		[Token(Token = "0x4000EE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		private AudioClip _hoverSound;

		[Token(Token = "0x4000EE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[SerializeField]
		private AudioClip _grabSound;

		[Token(Token = "0x4000EE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[SerializeField]
		private AudioClip _releaseSound;

		[Token(Token = "0x4000EE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private AudioSource _audio;

		[Token(Token = "0x4000EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[Header("Repop")]
		[SerializeField]
		private Transform _spherePivot;

		[Token(Token = "0x4000EE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[SerializeField]
		private float _disapperTime;

		[Token(Token = "0x4000EE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[SerializeField]
		private GameObject _repopEffect;

		[Token(Token = "0x4000EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private OpeningSphereState _state;

		[Token(Token = "0x4000EE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private Tweener _positionTweener;

		[Token(Token = "0x4000EE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private Tweener _rotationTweener;

		[Token(Token = "0x6000BD1")]
		[Address(RVA = "0x1B731C8", Offset = "0x1B731C8", VA = "0x1B731C8", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000BD2")]
		[Address(RVA = "0x1B73248", Offset = "0x1B73248", VA = "0x1B73248", Slot = "5")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6000BD3")]
		[Address(RVA = "0x1B73558", Offset = "0x1B73558", VA = "0x1B73558", Slot = "9")]
		public override void OnHovered(VRHand.HandType hand)
		{
		}

		[Token(Token = "0x6000BD4")]
		[Address(RVA = "0x1B73598", Offset = "0x1B73598", VA = "0x1B73598", Slot = "10")]
		protected override void OnUnHoveredWithoutGrab(VRHand.HandType hand)
		{
		}

		[Token(Token = "0x6000BD5")]
		[Address(RVA = "0x1B735D8", Offset = "0x1B735D8", VA = "0x1B735D8", Slot = "11")]
		protected override void OnUnHoveredWithGrab(VRHand.HandType unHoveredHand, VRHand.HandType grabHand)
		{
		}

		[Token(Token = "0x6000BD6")]
		[Address(RVA = "0x1B73604", Offset = "0x1B73604", VA = "0x1B73604", Slot = "6")]
		public override void OnGrab(GameObject handObj, GameObject parentObj, VRHand.HandType hand)
		{
		}

		[Token(Token = "0x6000BD7")]
		[Address(RVA = "0x1B736C0", Offset = "0x1B736C0", VA = "0x1B736C0", Slot = "7")]
		public override void OnRelease(GameObject handObj, VRHand.HandType hand)
		{
		}

		[Token(Token = "0x6000BD8")]
		[Address(RVA = "0x1B73300", Offset = "0x1B73300", VA = "0x1B73300")]
		private void ReturnToPivot(bool tween = false)
		{
		}

		[Token(Token = "0x6000BD9")]
		[Address(RVA = "0x1B73764", Offset = "0x1B73764", VA = "0x1B73764")]
		[AsyncStateMachine(typeof(<ReturnTimer>d__21))]
		private UniTaskVoid ReturnTimer(float timeToReturn, CancellationToken token)
		{
			return default(UniTaskVoid);
		}

		[Token(Token = "0x6000BDA")]
		[Address(RVA = "0x1B73684", Offset = "0x1B73684", VA = "0x1B73684")]
		private void CancelTween()
		{
		}

		[Token(Token = "0x6000BDB")]
		[Address(RVA = "0x1B73834", Offset = "0x1B73834", VA = "0x1B73834")]
		private void RepopEffect()
		{
		}

		[Token(Token = "0x6000BDC")]
		[Address(RVA = "0x1B73950", Offset = "0x1B73950", VA = "0x1B73950")]
		public GrabbableOpeningSphere()
		{
		}
	}
	[Token(Token = "0x20002CC")]
	public class InputPlayerNameEvent : EventBlock
	{
		[StructLayout(3)]
		[Token(Token = "0x20002CD")]
		[CompilerGenerated]
		private struct <SetEvent>d__0 : IAsyncStateMachine
		{
			[Token(Token = "0x4000EF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000EF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x4000EF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CancellationToken token;

			[Token(Token = "0x4000EF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6000BE1")]
			[Address(RVA = "0x1B73E28", Offset = "0x1B73E28", VA = "0x1B73E28", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000BE2")]
			[Address(RVA = "0x1B74240", Offset = "0x1B74240", VA = "0x1B74240", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x6000BDF")]
		[Address(RVA = "0x1B73D5C", Offset = "0x1B73D5C", VA = "0x1B73D5C", Slot = "4")]
		[AsyncStateMachine(typeof(<SetEvent>d__0))]
		public override UniTask<bool> SetEvent(CancellationToken token)
		{
			return default(UniTask<bool>);
		}

		[Token(Token = "0x6000BE0")]
		[Address(RVA = "0x1B73E20", Offset = "0x1B73E20", VA = "0x1B73E20")]
		public InputPlayerNameEvent()
		{
		}
	}
	[Token(Token = "0x20002CE")]
	public class ModalDebugScript : MonoBehaviour
	{
		[Token(Token = "0x4000EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject[] Mallet;

		[Token(Token = "0x4000EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject ModalEvent;

		[Token(Token = "0x4000EFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Text _userName;

		[Token(Token = "0x4000EFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Inject]
		private InputProvider _inputProvider;

		[Token(Token = "0x6000BE3")]
		[Address(RVA = "0x1B74298", Offset = "0x1B74298", VA = "0x1B74298")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BE4")]
		[Address(RVA = "0x1B74404", Offset = "0x1B74404", VA = "0x1B74404")]
		public ModalDebugScript()
		{
		}
	}
	[Token(Token = "0x20002CF")]
	[RequireComponent(typeof(AudioSource))]
	public class OpeningEnvSoundPlayer : MonoBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x20002D0")]
		[CompilerGenerated]
		private struct <PlaySound>d__1 : IAsyncStateMachine
		{
			[Token(Token = "0x4000EFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000EFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4000F00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public OpeningEnvSoundPlayer <>4__this;

			[Token(Token = "0x4000F01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6000BE7")]
			[Address(RVA = "0x1B744C8", Offset = "0x1B744C8", VA = "0x1B744C8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000BE8")]
			[Address(RVA = "0x1B7483C", Offset = "0x1B7483C", VA = "0x1B7483C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000EFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private AudioSource _audio;

		[Token(Token = "0x6000BE5")]
		[Address(RVA = "0x1B7440C", Offset = "0x1B7440C", VA = "0x1B7440C")]
		[AsyncStateMachine(typeof(<PlaySound>d__1))]
		public void PlaySound()
		{
		}

		[Token(Token = "0x6000BE6")]
		[Address(RVA = "0x1B744C0", Offset = "0x1B744C0", VA = "0x1B744C0")]
		public OpeningEnvSoundPlayer()
		{
		}
	}
	[Token(Token = "0x20002D1")]
	public class OpeningLeoActionManager : MonoBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x20002D2")]
		[CompilerGenerated]
		private struct <Smile>d__9 : IAsyncStateMachine
		{
			[Token(Token = "0x4000F04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000F05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4000F06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OpeningLeoActionManager <>4__this;

			[Token(Token = "0x4000F07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int miliseconds;

			[Token(Token = "0x4000F08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CancellationToken token;

			[Token(Token = "0x4000F09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6000BF2")]
			[Address(RVA = "0x1B74D68", Offset = "0x1B74D68", VA = "0x1B74D68", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000BF3")]
			[Address(RVA = "0x1B75284", Offset = "0x1B75284", VA = "0x1B75284", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animator _animator;

		[Token(Token = "0x1700010C")]
		[Inject]
		private ISubscriber<CharacterActionData> OnCharacterAction
		{
			[Token(Token = "0x6000BE9")]
			[Address(RVA = "0x1B74848", Offset = "0x1B74848", VA = "0x1B74848")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BEA")]
			[Address(RVA = "0x1B74850", Offset = "0x1B74850", VA = "0x1B74850")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6000BEB")]
		[Address(RVA = "0x1B74858", Offset = "0x1B74858", VA = "0x1B74858")]
		private void Start()
		{
		}

		[Token(Token = "0x6000BEC")]
		[Address(RVA = "0x1B74950", Offset = "0x1B74950", VA = "0x1B74950")]
		private void DoCharacterAction(CharacterActionData data)
		{
		}

		[Token(Token = "0x6000BED")]
		[Address(RVA = "0x1B74C90", Offset = "0x1B74C90", VA = "0x1B74C90")]
		private void ResetTriggers()
		{
		}

		[Token(Token = "0x6000BEE")]
		[Address(RVA = "0x1B74B6C", Offset = "0x1B74B6C", VA = "0x1B74B6C")]
		private void ResetFaceExpression()
		{
		}

		[Token(Token = "0x6000BEF")]
		[Address(RVA = "0x1B74BC4", Offset = "0x1B74BC4", VA = "0x1B74BC4")]
		[AsyncStateMachine(typeof(<Smile>d__9))]
		private UniTaskVoid Smile(int miliseconds, CancellationToken token)
		{
			return default(UniTaskVoid);
		}

		[Token(Token = "0x6000BF0")]
		[Address(RVA = "0x1B74D5C", Offset = "0x1B74D5C", VA = "0x1B74D5C")]
		public OpeningLeoActionManager()
		{
		}
	}
	[Token(Token = "0x20002D3")]
	public class OpeningLoopBGMPlayer : EventBlock
	{
		[StructLayout(3)]
		[Token(Token = "0x20002D4")]
		[CompilerGenerated]
		private struct <SetEvent>d__2 : IAsyncStateMachine
		{
			[Token(Token = "0x4000F0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000F0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x4000F0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CancellationToken token;

			[Token(Token = "0x4000F0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public OpeningLoopBGMPlayer <>4__this;

			[Token(Token = "0x4000F10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6000BF6")]
			[Address(RVA = "0x1B75374", Offset = "0x1B75374", VA = "0x1B75374", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000BF7")]
			[Address(RVA = "0x1B757EC", Offset = "0x1B757EC", VA = "0x1B757EC", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000F0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audio;

		[Token(Token = "0x4000F0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip _bgmClip;

		[Token(Token = "0x6000BF4")]
		[Address(RVA = "0x1B75290", Offset = "0x1B75290", VA = "0x1B75290", Slot = "4")]
		[AsyncStateMachine(typeof(<SetEvent>d__2))]
		public override UniTask<bool> SetEvent(CancellationToken token)
		{
			return default(UniTask<bool>);
		}

		[Token(Token = "0x6000BF5")]
		[Address(RVA = "0x1B7536C", Offset = "0x1B7536C", VA = "0x1B7536C")]
		public OpeningLoopBGMPlayer()
		{
		}
	}
	[Token(Token = "0x20002D5")]
	public class OpeningManager : MonoBehaviour
	{
		[Token(Token = "0x4000F11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private EventBlockDirector _eventBlockDirector;

		[Token(Token = "0x4000F12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CancellationTokenSource _token;

		[Token(Token = "0x6000BF8")]
		[Address(RVA = "0x1B75844", Offset = "0x1B75844", VA = "0x1B75844")]
		private void Start()
		{
		}

		[Token(Token = "0x6000BF9")]
		[Address(RVA = "0x1B758F8", Offset = "0x1B758F8", VA = "0x1B758F8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000BFA")]
		[Address(RVA = "0x1B75928", Offset = "0x1B75928", VA = "0x1B75928")]
		public OpeningManager()
		{
		}
	}
	[Token(Token = "0x20002D6")]
	public class OpeningProteinAnimation : MonoBehaviour
	{
		[Token(Token = "0x4000F13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private VRHand.HandType hand;

		[Token(Token = "0x4000F14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _hoveredSphere;

		[Token(Token = "0x4000F15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject fukidashi;

		[Token(Token = "0x4000F16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform grabPos;

		[Token(Token = "0x4000F17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Transform _cap;

		[Token(Token = "0x4000F18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Transform protein;

		[Token(Token = "0x4000F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Vector3 _offsetPosLeftGrab;

		[Token(Token = "0x4000F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private Vector3 _offsetRotLeftGrab;

		[Token(Token = "0x4000F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Vector3 _offsetPosRightGrab;

		[Token(Token = "0x4000F1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		private Vector3 _offsetRotRightGrab;

		[Token(Token = "0x4000F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 _capDefaultRot;

		[Token(Token = "0x4000F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Transform startParent;

		[Token(Token = "0x4000F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3 startPos;

		[Token(Token = "0x4000F20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Quaternion startRot;

		[Token(Token = "0x6000BFB")]
		[Address(RVA = "0x1B75930", Offset = "0x1B75930", VA = "0x1B75930")]
		private void Start()
		{
		}

		[Token(Token = "0x6000BFC")]
		[Address(RVA = "0x1B75A00", Offset = "0x1B75A00", VA = "0x1B75A00")]
		public void InitializeAnimation()
		{
		}

		[Token(Token = "0x6000BFD")]
		[Address(RVA = "0x1B75AB4", Offset = "0x1B75AB4", VA = "0x1B75AB4")]
		public void OnProteinHovered()
		{
		}

		[Token(Token = "0x6000BFE")]
		[Address(RVA = "0x1B75AD4", Offset = "0x1B75AD4", VA = "0x1B75AD4")]
		public void OnProteinAttracted()
		{
		}

		[Token(Token = "0x6000BFF")]
		[Address(RVA = "0x1B75DFC", Offset = "0x1B75DFC", VA = "0x1B75DFC")]
		public void OnGrabed()
		{
		}

		[Token(Token = "0x6000C00")]
		[Address(RVA = "0x1B75E1C", Offset = "0x1B75E1C", VA = "0x1B75E1C")]
		public OpeningProteinAnimation()
		{
		}
	}
	[Token(Token = "0x20002D8")]
	public class SetNameEvent : EventBlock
	{
		[StructLayout(3)]
		[Token(Token = "0x20002D9")]
		[CompilerGenerated]
		private struct <SetEvent>d__3 : IAsyncStateMachine
		{
			[Token(Token = "0x4000F27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000F28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x4000F29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SetNameEvent <>4__this;

			[Token(Token = "0x4000F2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken token;

			[Token(Token = "0x4000F2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6000C06")]
			[Address(RVA = "0x1B76038", Offset = "0x1B76038", VA = "0x1B76038", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000C07")]
			[Address(RVA = "0x1B764F8", Offset = "0x1B764F8", VA = "0x1B764F8", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ConversationBlockEvent _conversationFirst;

		[Token(Token = "0x4000F25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ConversationBlockEvent _conversationSecond;

		[Token(Token = "0x4000F26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string _name;

		[Token(Token = "0x6000C04")]
		[Address(RVA = "0x1B75F54", Offset = "0x1B75F54", VA = "0x1B75F54", Slot = "4")]
		[AsyncStateMachine(typeof(<SetEvent>d__3))]
		public override UniTask<bool> SetEvent(CancellationToken token)
		{
			return default(UniTask<bool>);
		}

		[Token(Token = "0x6000C05")]
		[Address(RVA = "0x1B76030", Offset = "0x1B76030", VA = "0x1B76030")]
		public SetNameEvent()
		{
		}
	}
	[Token(Token = "0x20002DA")]
	public class SettingLanguageEvent : EventBlock
	{
		[StructLayout(3)]
		[Token(Token = "0x20002DB")]
		[CompilerGenerated]
		private struct <ChangeToConversation>d__32 : IAsyncStateMachine
		{
			[Token(Token = "0x4000F4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000F4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4000F4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SettingLanguageEvent <>4__this;

			[Token(Token = "0x4000F4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private CancellationToken <token>5__2;

			[Token(Token = "0x4000F4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private GameObject <_onLoading>5__3;

			[Token(Token = "0x4000F4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6000C10")]
			[Address(RVA = "0x1B76B50", Offset = "0x1B76B50", VA = "0x1B76B50", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000C11")]
			[Address(RVA = "0x1B775A0", Offset = "0x1B775A0", VA = "0x1B775A0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20002DC")]
		[CompilerGenerated]
		private struct <SetEvent>d__34 : IAsyncStateMachine
		{
			[Token(Token = "0x4000F50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000F51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x4000F52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SettingLanguageEvent <>4__this;

			[Token(Token = "0x4000F53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken token;

			[Token(Token = "0x4000F54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6000C12")]
			[Address(RVA = "0x1B775AC", Offset = "0x1B775AC", VA = "0x1B775AC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000C13")]
			[Address(RVA = "0x1B782CC", Offset = "0x1B782CC", VA = "0x1B782CC", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Select Language")]
		[SerializeField]
		private GameObject _discriptionVideoPivot;

		[Token(Token = "0x4000F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private VideoPlayer _videoPlayer;

		[Token(Token = "0x4000F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject _videoText0;

		[Token(Token = "0x4000F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AnimationCurve _openCurve;

		[Token(Token = "0x4000F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private RawImage _videoTexture;

		[Token(Token = "0x4000F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool _selected;

		[Token(Token = "0x4000F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Header("Video sources")]
		[SerializeField]
		private VideoClip _drinkVideo;

		[Token(Token = "0x4000F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private VideoClip _drinkVideo_picoNeo3;

		[Token(Token = "0x4000F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private VideoClip _drinkVideo_pico4;

		[Token(Token = "0x4000F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Header("Grab Sphere")]
		[SerializeField]
		private GameObject _repopEffect;

		[Token(Token = "0x4000F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject _videoText1;

		[Token(Token = "0x4000F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private VideoClip _grabShpereVideo;

		[Token(Token = "0x4000F38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[Header("Transition")]
		[SerializeField]
		private GameObject _distortionCameras;

		[Token(Token = "0x4000F39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject _sphereRoot;

		[Token(Token = "0x4000F3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private OpeningEnvSoundPlayer _envSound;

		[Token(Token = "0x4000F3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private AudioSource _SESource;

		[Token(Token = "0x4000F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private AudioClip _teleportClip;

		[Token(Token = "0x4000F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private AudioClip _warpSound;

		[Token(Token = "0x4000F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private Material _warpSkybox;

		[Token(Token = "0x4000F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private GameObject _steamOnLoadingOverlay;

		[Token(Token = "0x4000F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private GameObject _questOnLoadingOverlay;

		[Token(Token = "0x4000F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private GameObject _picoOnLoadingOverlay;

		[Token(Token = "0x4000F42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[Header("Stage Objects")]
		[SerializeField]
		private GameObject[] _selectLangObjects;

		[Token(Token = "0x4000F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private GameObject _resortEreaObjects;

		[Token(Token = "0x4000F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private Material _sceneSkybox;

		[Token(Token = "0x4000F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[Header("BGM")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4000F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private AudioClip _bgmClip;

		[Token(Token = "0x4000F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[Inject]
		private InputProvider _inputProvider;

		[Token(Token = "0x4000F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private bool _changeCheck;

		[Token(Token = "0x4000F49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF9")]
		private bool _enterPressed;

		[Token(Token = "0x6000C08")]
		[Address(RVA = "0x1B76550", Offset = "0x1B76550", VA = "0x1B76550")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C09")]
		[Address(RVA = "0x1B76738", Offset = "0x1B76738", VA = "0x1B76738")]
		public void AppearSphere()
		{
		}

		[Token(Token = "0x6000C0A")]
		[Address(RVA = "0x1B76680", Offset = "0x1B76680", VA = "0x1B76680")]
		[AsyncStateMachine(typeof(<ChangeToConversation>d__32))]
		private void ChangeToConversation()
		{
		}

		[Token(Token = "0x6000C0B")]
		[Address(RVA = "0x1B76920", Offset = "0x1B76920", VA = "0x1B76920")]
		private void SetDistortion()
		{
		}

		[Token(Token = "0x6000C0C")]
		[Address(RVA = "0x1B76A48", Offset = "0x1B76A48", VA = "0x1B76A48", Slot = "4")]
		[AsyncStateMachine(typeof(<SetEvent>d__34))]
		public override UniTask<bool> SetEvent(CancellationToken token)
		{
			return default(UniTask<bool>);
		}

		[Token(Token = "0x6000C0D")]
		[Address(RVA = "0x1B76B24", Offset = "0x1B76B24", VA = "0x1B76B24")]
		public SettingLanguageEvent()
		{
		}
	}
}
namespace __Imacreate__.__Production__.Core
{
	[Token(Token = "0x20002DD")]
	[RequireComponent(typeof(AudioSource))]
	public class ButtonController : MonoBehaviour
	{
		[Token(Token = "0x4000F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _buttonPivot;

		[Token(Token = "0x4000F56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SpriteRenderer _buttonBack;

		[Token(Token = "0x4000F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float _scroolSpeed;

		[Token(Token = "0x4000F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AnimationCurve _enterAnim;

		[Token(Token = "0x4000F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AudioClip _enterSound;

		[Token(Token = "0x4000F5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[ReadOnly]
		private bool _isEnter;

		[Token(Token = "0x4000F5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private AudioSource _audio;

		[Token(Token = "0x6000C14")]
		[Address(RVA = "0x1B78324", Offset = "0x1B78324", VA = "0x1B78324")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C15")]
		[Address(RVA = "0x1B7841C", Offset = "0x1B7841C", VA = "0x1B7841C")]
		public void OnHover()
		{
		}

		[Token(Token = "0x6000C16")]
		[Address(RVA = "0x1B784E4", Offset = "0x1B784E4", VA = "0x1B784E4")]
		public void OnHoverExit()
		{
		}

		[Token(Token = "0x6000C17")]
		[Address(RVA = "0x1B785A8", Offset = "0x1B785A8", VA = "0x1B785A8")]
		public void OnEnter()
		{
		}

		[Token(Token = "0x6000C18")]
		[Address(RVA = "0x1B786EC", Offset = "0x1B786EC", VA = "0x1B786EC")]
		public ButtonController()
		{
		}
	}
	[Token(Token = "0x20002DE")]
	[RequireComponent(typeof(AudioSource))]
	public class CalibrationManager : MonoBehaviour
	{
		[Token(Token = "0x4000F5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioClip _startCalibrationAudio;

		[Token(Token = "0x4000F5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip _finishCalibrationAudio;

		[Token(Token = "0x4000F5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject _indicatorBase;

		[Token(Token = "0x4000F5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Image _indicator;

		[Token(Token = "0x4000F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Header("Option")]
		[SerializeField]
		private AudioSource _bgmAudioSource;

		[Token(Token = "0x4000F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		protected UnityEvent _endCalibrationEvent;

		[Token(Token = "0x4000F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool _isCalibrate;

		[Token(Token = "0x4000F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private AudioSource _audio;

		[Token(Token = "0x4000F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool _isPushed;

		[Token(Token = "0x4000F65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float _volume;

		[Token(Token = "0x4000F66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Inject]
		protected InputProvider _inputProvider;

		[Token(Token = "0x6000C1A")]
		[Address(RVA = "0x1B78704", Offset = "0x1B78704", VA = "0x1B78704", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000C1B")]
		[Address(RVA = "0x1B787CC", Offset = "0x1B787CC", VA = "0x1B787CC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C1C")]
		[Address(RVA = "0x1B78BD8", Offset = "0x1B78BD8", VA = "0x1B78BD8")]
		private void AnimateIndicator(bool isOn)
		{
		}

		[Token(Token = "0x6000C1D")]
		[Address(RVA = "0x1B78C24", Offset = "0x1B78C24", VA = "0x1B78C24", Slot = "5")]
		public virtual void CalibrationStart()
		{
		}

		[Token(Token = "0x6000C1E")]
		[Address(RVA = "0x1B78C50", Offset = "0x1B78C50", VA = "0x1B78C50")]
		public void CalibrationCancel()
		{
		}

		[Token(Token = "0x6000C1F")]
		[Address(RVA = "0x1B78C78", Offset = "0x1B78C78", VA = "0x1B78C78")]
		public CalibrationManager()
		{
		}
	}
	[Token(Token = "0x20002DF")]
	public class ChangeLanguageButtonsManager : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20002E0")]
		private class LangButtons
		{
			[Token(Token = "0x4000F6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string _name;

			[Token(Token = "0x4000F6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SpriteRenderer _buttonSprite;

			[Token(Token = "0x4000F70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SpriteRenderer _backSprite;

			[Token(Token = "0x6000C24")]
			[Address(RVA = "0x1B78E20", Offset = "0x1B78E20", VA = "0x1B78E20")]
			public LangButtons()
			{
			}
		}

		[Token(Token = "0x4000F67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Inject]
		private MultilingualTextManager _multilingualTextManager;

		[Token(Token = "0x4000F68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Sprite _blueButton;

		[Token(Token = "0x4000F69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Sprite _blueGradation;

		[Token(Token = "0x4000F6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Sprite _grayButton;

		[Token(Token = "0x4000F6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Sprite _grayGradation;

		[Token(Token = "0x4000F6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private LangButtons[] _langButtons;

		[Token(Token = "0x4000F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private LanguageSetting.Language _selectedLanguage;

		[Token(Token = "0x6000C20")]
		[Address(RVA = "0x1B78C80", Offset = "0x1B78C80", VA = "0x1B78C80")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C21")]
		[Address(RVA = "0x1B78CE4", Offset = "0x1B78CE4", VA = "0x1B78CE4")]
		public void SetLanguage(int lang)
		{
		}

		[Token(Token = "0x6000C22")]
		[Address(RVA = "0x1B78DE8", Offset = "0x1B78DE8", VA = "0x1B78DE8")]
		public void EnterChangeLanguage()
		{
		}

		[Token(Token = "0x6000C23")]
		[Address(RVA = "0x1B78E18", Offset = "0x1B78E18", VA = "0x1B78E18")]
		public ChangeLanguageButtonsManager()
		{
		}
	}
	[Token(Token = "0x20002E1")]
	public class ControllerAnimManager : MonoBehaviour
	{
		[Token(Token = "0x4000F71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _pivot;

		[Token(Token = "0x4000F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private RawImage _anim0;

		[Token(Token = "0x4000F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private RawImage _anim1;

		[Token(Token = "0x4000F74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private DeviceTypeObjectSettings _deviceTypeObject;

		[Token(Token = "0x4000F75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _repeat;

		[Token(Token = "0x4000F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private IDisposable _disposable;

		[Token(Token = "0x6000C25")]
		[Address(RVA = "0x1B78E28", Offset = "0x1B78E28", VA = "0x1B78E28")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C26")]
		[Address(RVA = "0x1B6A3E8", Offset = "0x1B6A3E8", VA = "0x1B6A3E8")]
		public void StartAnim()
		{
		}

		[Token(Token = "0x6000C27")]
		[Address(RVA = "0x1B6A6EC", Offset = "0x1B6A6EC", VA = "0x1B6A6EC")]
		public void StopAnim()
		{
		}

		[Token(Token = "0x6000C28")]
		[Address(RVA = "0x1B78EA8", Offset = "0x1B78EA8", VA = "0x1B78EA8")]
		public ControllerAnimManager()
		{
		}
	}
	[Token(Token = "0x20002E2")]
	public class DarkAreaDetector : MonoBehaviour
	{
		[Token(Token = "0x4000F77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _radius;

		[Token(Token = "0x4000F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private LayerMask _darkAreaLayer;

		[Token(Token = "0x4000F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Inject]
		private InputProvider _inputProvider;

		[Token(Token = "0x4000F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool isInDarkArea;

		[Token(Token = "0x1700010D")]
		public bool _detectionIsActive
		{
			[Token(Token = "0x6000C2A")]
			[Address(RVA = "0x1B78EF8", Offset = "0x1B78EF8", VA = "0x1B78EF8")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C2B")]
			[Address(RVA = "0x1B78F00", Offset = "0x1B78F00", VA = "0x1B78F00")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6000C2C")]
		[Address(RVA = "0x1B78F0C", Offset = "0x1B78F0C", VA = "0x1B78F0C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C2D")]
		[Address(RVA = "0x1B78FE8", Offset = "0x1B78FE8", VA = "0x1B78FE8")]
		public DarkAreaDetector()
		{
		}
	}
	[Token(Token = "0x20002E3")]
	public class GameInitializer : MonoBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x20002E4")]
		[CompilerGenerated]
		private struct <Awake>d__1 : IAsyncStateMachine
		{
			[Token(Token = "0x4000F7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000F7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4000F7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GameInitializer <>4__this;

			[Token(Token = "0x4000F80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private CancellationToken <token>5__2;

			[Token(Token = "0x4000F81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x4000F82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private UniTask<bool>.Awaiter <>u__2;

			[Token(Token = "0x6000C30")]
			[Address(RVA = "0x1B790B4", Offset = "0x1B790B4", VA = "0x1B790B4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000C31")]
			[Address(RVA = "0x1B79B18", Offset = "0x1B79B18", VA = "0x1B79B18", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000F7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool _gameInitialized;

		[Token(Token = "0x6000C2E")]
		[Address(RVA = "0x1B78FF0", Offset = "0x1B78FF0", VA = "0x1B78FF0")]
		[AsyncStateMachine(typeof(<Awake>d__1))]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C2F")]
		[Address(RVA = "0x1B790AC", Offset = "0x1B790AC", VA = "0x1B790AC")]
		public GameInitializer()
		{
		}
	}
	[Token(Token = "0x20002E5")]
	public class GFIProjectInstaller : MonoInstaller
	{
		[Token(Token = "0x4000F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _multilingualTextManagerPrefab;

		[Token(Token = "0x4000F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject _gFSceneLoaderPrefab;

		[Token(Token = "0x4000F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject _partySceneManagerPrefab;

		[Token(Token = "0x6000C32")]
		[Address(RVA = "0x1B79B24", Offset = "0x1B79B24", VA = "0x1B79B24", Slot = "8")]
		public override void InstallBindings()
		{
		}

		[Token(Token = "0x6000C33")]
		[Address(RVA = "0x1B79CFC", Offset = "0x1B79CFC", VA = "0x1B79CFC")]
		public GFIProjectInstaller()
		{
		}
	}
	[Token(Token = "0x20002E6")]
	public static class GFIUtil
	{
		[Token(Token = "0x6000C34")]
		public static void ForEach<T>(this IEnumerable<T> source, Action<T> action)
		{
		}

		[Token(Token = "0x6000C35")]
		public static IList<T> Shuffled<T>(this IEnumerable<T> array)
		{
			return null;
		}

		[Token(Token = "0x6000C36")]
		public static string ToReadable<T>(this IEnumerable<T> source)
		{
			return null;
		}
	}
	[Token(Token = "0x20002E7")]
	public interface IAutoSetUp
	{
		[Token(Token = "0x6000C37")]
		void AutoSetUp();
	}
	[Token(Token = "0x20002E8")]
	public class RankUIView : MonoBehaviour
	{
		[Token(Token = "0x4000F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Image rankBackPanel;

		[Token(Token = "0x4000F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TextMeshProUGUI rankText;

		[Token(Token = "0x4000F88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Sprite rankSSBackPanel;

		[Token(Token = "0x4000F89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Sprite rankSBackPanel;

		[Token(Token = "0x4000F8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Sprite rankABackPanel;

		[Token(Token = "0x4000F8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Sprite rankBBackPanel;

		[Token(Token = "0x4000F8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Sprite rankCBackPanel;

		[Token(Token = "0x6000C38")]
		[Address(RVA = "0x1B79D04", Offset = "0x1B79D04", VA = "0x1B79D04")]
		public void SetRankUI(ScoreData scoreData, ScoreRankSetting scoreRankSetting)
		{
		}

		[Token(Token = "0x6000C39")]
		[Address(RVA = "0x1B79F10", Offset = "0x1B79F10", VA = "0x1B79F10")]
		public RankUIView()
		{
		}
	}
	[Token(Token = "0x20002E9")]
	[CreateAssetMenu(fileName = "ScoreRankSettings", menuName = "ScriptableObjects/ScoreRankSettings", order = 0)]
	public class ScoreRankSettings : ScriptableObject
	{
		[Token(Token = "0x4000F8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ScoreRankSetting Bronze;

		[Token(Token = "0x4000F8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ScoreRankSetting Silver;

		[Token(Token = "0x4000F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ScoreRankSetting Gold;

		[Token(Token = "0x4000F90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ScoreRankSetting Platinum;

		[Token(Token = "0x4000F91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ScoreRankSetting Endless;

		[Token(Token = "0x4000F92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Dictionary<GameStatus.Difficulty, ScoreRankSetting> scoreRankSettingDictionary;

		[Token(Token = "0x6000C3A")]
		[Address(RVA = "0x1B79F18", Offset = "0x1B79F18", VA = "0x1B79F18")]
		public Dictionary<GameStatus.Difficulty, ScoreRankSetting> GetScoreRankSetting()
		{
			return null;
		}

		[Token(Token = "0x6000C3B")]
		[Address(RVA = "0x1B7A028", Offset = "0x1B7A028", VA = "0x1B7A028")]
		public ScoreRankSettings()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002EA")]
	public class ScoreRankSetting
	{
		[Token(Token = "0x4000F93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameStatus.Difficulty difficulty;

		[Token(Token = "0x4000F94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int rankSSThreshold;

		[Token(Token = "0x4000F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int rankSThreshold;

		[Token(Token = "0x4000F96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int rankAThreshold;

		[Token(Token = "0x4000F97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int rankBThreshold;

		[Token(Token = "0x6000C3C")]
		[Address(RVA = "0x1B7A198", Offset = "0x1B7A198", VA = "0x1B7A198")]
		public ScoreRankSetting()
		{
		}
	}
}
namespace __Imacreate__.__Production__.Core.TwitterPostingSystem.View
{
	[Token(Token = "0x20002EB")]
	public class TwitterUIView : MonoBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x20002ED")]
		[CompilerGenerated]
		private struct <RotateLoading>d__29 : IAsyncStateMachine
		{
			[Token(Token = "0x4000FA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000FA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4000FA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int millisec;

			[Token(Token = "0x4000FAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CancellationToken token;

			[Token(Token = "0x4000FAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public TwitterUIView <>4__this;

			[Token(Token = "0x4000FAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6000C51")]
			[Address(RVA = "0x1B7AB8C", Offset = "0x1B7AB8C", VA = "0x1B7AB8C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000C52")]
			[Address(RVA = "0x1B7B218", Offset = "0x1B7B218", VA = "0x1B7B218", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000F98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action<string, CancellationToken> OnPinCheckButtonDown;

		[Token(Token = "0x4000F99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action<string, CancellationToken> OnUploadButtonDown;

		[Token(Token = "0x4000F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action<CancellationToken> OnReAuthenticationButtonDown;

		[Token(Token = "0x4000F9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string currentUploadMediaName;

		[Token(Token = "0x4000F9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Header("Twitter UI")]
		[SerializeField]
		private TouchPanelManager twitterUI;

		[Token(Token = "0x4000F9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private MultilingualTextMeshPro absoluteErrorLog;

		[Token(Token = "0x4000F9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private MultilingualTextMeshPro pinErrorLog;

		[Token(Token = "0x4000F9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private MultilingualTextMeshPro uploadedCallbackLog;

		[Token(Token = "0x4000FA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private InputField pin;

		[Token(Token = "0x4000FA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private List<RawImage> ScreenshotButtonImageList;

		[Token(Token = "0x4000FA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private RawImage _selectedImage;

		[Token(Token = "0x4000FA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject _loadingImage;

		[Token(Token = "0x4000FA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool isLoading;

		[Token(Token = "0x6000C3D")]
		[Address(RVA = "0x1B7A1AC", Offset = "0x1B7A1AC", VA = "0x1B7A1AC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C3E")]
		[Address(RVA = "0x1B7A654", Offset = "0x1B7A654", VA = "0x1B7A654")]
		public void DisplayLogOnErrorAbsolute()
		{
		}

		[Token(Token = "0x6000C3F")]
		[Address(RVA = "0x1B7A6C0", Offset = "0x1B7A6C0", VA = "0x1B7A6C0")]
		public void OpenPinPage()
		{
		}

		[Token(Token = "0x6000C40")]
		[Address(RVA = "0x1B7A6FC", Offset = "0x1B7A6FC", VA = "0x1B7A6FC")]
		public void DisplayLogOnErrorGetAccessToken()
		{
		}

		[Token(Token = "0x6000C41")]
		[Address(RVA = "0x1B7A754", Offset = "0x1B7A754", VA = "0x1B7A754")]
		public void SwitchImageSelectPanel()
		{
		}

		[Token(Token = "0x6000C42")]
		[Address(RVA = "0x1B7A77C", Offset = "0x1B7A77C", VA = "0x1B7A77C")]
		public void PastePin()
		{
		}

		[Token(Token = "0x6000C43")]
		[Address(RVA = "0x1B7A7A8", Offset = "0x1B7A7A8", VA = "0x1B7A7A8")]
		public void CheckPin()
		{
		}

		[Token(Token = "0x6000C44")]
		[Address(RVA = "0x1B7A828", Offset = "0x1B7A828", VA = "0x1B7A828")]
		public void UploadMedia()
		{
		}

		[Token(Token = "0x6000C45")]
		[Address(RVA = "0x1B7A874", Offset = "0x1B7A874", VA = "0x1B7A874")]
		public void DisplayUploading()
		{
		}

		[Token(Token = "0x6000C46")]
		[Address(RVA = "0x1B7A8B8", Offset = "0x1B7A8B8", VA = "0x1B7A8B8")]
		public void DisplayUploadSuccessCallback()
		{
		}

		[Token(Token = "0x6000C47")]
		[Address(RVA = "0x1B7A924", Offset = "0x1B7A924", VA = "0x1B7A924")]
		public void DisplayUploadFailedCallback()
		{
		}

		[Token(Token = "0x6000C48")]
		[Address(RVA = "0x1B7A990", Offset = "0x1B7A990", VA = "0x1B7A990")]
		public void DisplayReAuthenticationPanel()
		{
		}

		[Token(Token = "0x6000C49")]
		[Address(RVA = "0x1B7A9B8", Offset = "0x1B7A9B8", VA = "0x1B7A9B8")]
		public void ReAuthentication()
		{
		}

		[Token(Token = "0x6000C4A")]
		[Address(RVA = "0x1B7A9F4", Offset = "0x1B7A9F4", VA = "0x1B7A9F4")]
		public void BackToImageSelect()
		{
		}

		[Token(Token = "0x6000C4B")]
		[Address(RVA = "0x1B7AA1C", Offset = "0x1B7AA1C", VA = "0x1B7AA1C")]
		public void BackToHome()
		{
		}

		[Token(Token = "0x6000C4C")]
		[Address(RVA = "0x1B7AA44", Offset = "0x1B7AA44", VA = "0x1B7AA44")]
		private void SetUploading(string mediaName)
		{
		}

		[Token(Token = "0x6000C4D")]
		[Address(RVA = "0x1B7A56C", Offset = "0x1B7A56C", VA = "0x1B7A56C")]
		[AsyncStateMachine(typeof(<RotateLoading>d__29))]
		private void RotateLoading(int millisec, CancellationToken token)
		{
		}

		[Token(Token = "0x6000C4E")]
		[Address(RVA = "0x1B7AB0C", Offset = "0x1B7AB0C", VA = "0x1B7AB0C")]
		public TwitterUIView()
		{
		}
	}
}
namespace __Imacreate__.__Production__.Core.TwitterPostingSystem.Presenter
{
	[Token(Token = "0x20002EE")]
	public class TwitterUIPresenter : MonoBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x20002EF")]
		[CompilerGenerated]
		private struct <Awake>d__4 : IAsyncStateMachine
		{
			[Token(Token = "0x4000FB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000FB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4000FB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TwitterUIPresenter <>4__this;

			[Token(Token = "0x4000FB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6000C58")]
			[Address(RVA = "0x1B7B918", Offset = "0x1B7B918", VA = "0x1B7B918", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000C59")]
			[Address(RVA = "0x1B7BFBC", Offset = "0x1B7BFBC", VA = "0x1B7BFBC", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000FAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Inject]
		private MultilingualTextManager _multilingualTextManager;

		[Token(Token = "0x4000FAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TwitterUIView _twitterUIView;

		[Token(Token = "0x4000FAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TwitterUseCase twitterUseCase;

		[Token(Token = "0x4000FB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private IDisposable _disposable;

		[Token(Token = "0x6000C53")]
		[Address(RVA = "0x1B7B224", Offset = "0x1B7B224", VA = "0x1B7B224")]
		[AsyncStateMachine(typeof(<Awake>d__4))]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C54")]
		[Address(RVA = "0x1B7B2D8", Offset = "0x1B7B2D8", VA = "0x1B7B2D8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000C55")]
		[Address(RVA = "0x1B7B524", Offset = "0x1B7B524", VA = "0x1B7B524")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000C56")]
		[Address(RVA = "0x1B7B7F8", Offset = "0x1B7B7F8", VA = "0x1B7B7F8")]
		public TwitterUIPresenter()
		{
		}
	}
}
namespace __Imacreate__.__Production__.Core.TwitterPostingSystem.Model
{
	[Token(Token = "0x20002F0")]
	public static class MimeTypeMap
	{
		[Token(Token = "0x4000FB5")]
		private const string Dot = ".";

		[Token(Token = "0x4000FB6")]
		private const string QuestionMark = "?";

		[Token(Token = "0x4000FB7")]
		private const string DefaultMimeType = "application/octet-stream";

		[Token(Token = "0x4000FB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Lazy<IDictionary<string, string>> _mappings;

		[Token(Token = "0x6000C5A")]
		[Address(RVA = "0x1B7BFC8", Offset = "0x1B7BFC8", VA = "0x1B7BFC8")]
		private static IDictionary<string, string> BuildMappings()
		{
			return null;
		}

		[Token(Token = "0x6000C5B")]
		[Address(RVA = "0x1B84710", Offset = "0x1B84710", VA = "0x1B84710")]
		public static bool TryGetMimeType(string str, out string mimeType)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C5C")]
		[Address(RVA = "0x1B84924", Offset = "0x1B84924", VA = "0x1B84924")]
		public static string GetMimeType(string str)
		{
			return null;
		}

		[Token(Token = "0x6000C5D")]
		[Address(RVA = "0x1B849B0", Offset = "0x1B849B0", VA = "0x1B849B0")]
		public static string GetExtension(string mimeType, bool throwErrorIfNotFound = true)
		{
			return null;
		}
	}
}
namespace __Imacreate__.__Production__.Core.TwitterPostingSystem.Domain.Twitter.Application
{
	[Token(Token = "0x20002F1")]
	public class TwitterUseCase
	{
		[StructLayout(3)]
		[Token(Token = "0x20002F2")]
		[CompilerGenerated]
		private struct <Initialize>d__6 : IAsyncStateMachine
		{
			[Token(Token = "0x4000FBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000FBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4000FBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public CancellationToken token;

			[Token(Token = "0x4000FBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TwitterUseCase <>4__this;

			[Token(Token = "0x4000FC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private UniTask<TwitterAuthLinkResponse>.Awaiter <>u__1;

			[Token(Token = "0x6000C67")]
			[Address(RVA = "0x1B85408", Offset = "0x1B85408", VA = "0x1B85408", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000C68")]
			[Address(RVA = "0x1B85A98", Offset = "0x1B85A98", VA = "0x1B85A98", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20002F3")]
		[CompilerGenerated]
		private struct <GenerateAccessToken>d__7 : IAsyncStateMachine
		{
			[Token(Token = "0x4000FC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000FC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4000FC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string pin;

			[Token(Token = "0x4000FC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CancellationToken token;

			[Token(Token = "0x4000FC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public TwitterUseCase <>4__this;

			[Token(Token = "0x4000FC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private UniTask<TwitterOAuthPinResponse>.Awaiter <>u__1;

			[Token(Token = "0x6000C69")]
			[Address(RVA = "0x1B85AA4", Offset = "0x1B85AA4", VA = "0x1B85AA4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000C6A")]
			[Address(RVA = "0x1B85FF4", Offset = "0x1B85FF4", VA = "0x1B85FF4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20002F4")]
		[CompilerGenerated]
		private struct <ReAuthentication>d__8 : IAsyncStateMachine
		{
			[Token(Token = "0x4000FC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000FC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4000FC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken token;

			[Token(Token = "0x4000FCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public TwitterUseCase <>4__this;

			[Token(Token = "0x4000FCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UniTask<TwitterAuthLinkResponse>.Awaiter <>u__1;

			[Token(Token = "0x6000C6B")]
			[Address(RVA = "0x1B86000", Offset = "0x1B86000", VA = "0x1B86000", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000C6C")]
			[Address(RVA = "0x1B86448", Offset = "0x1B86448", VA = "0x1B86448", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20002F5")]
		[CompilerGenerated]
		private struct <PostMediaExternal>d__9 : IAsyncStateMachine
		{
			[Token(Token = "0x4000FCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000FCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4000FCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TwitterUseCase <>4__this;

			[Token(Token = "0x4000FCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string mediaName;

			[Token(Token = "0x4000FD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public CancellationToken token;

			[Token(Token = "0x4000FD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6000C6D")]
			[Address(RVA = "0x1B86454", Offset = "0x1B86454", VA = "0x1B86454", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000C6E")]
			[Address(RVA = "0x1B86754", Offset = "0x1B86754", VA = "0x1B86754", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20002F6")]
		[CompilerGenerated]
		private struct <PostMedia>d__10 : IAsyncStateMachine
		{
			[Token(Token = "0x4000FD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000FD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4000FD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string path;

			[Token(Token = "0x4000FD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TwitterUseCase <>4__this;

			[Token(Token = "0x4000FD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken token;

			[Token(Token = "0x4000FD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private string <tweetText>5__2;

			[Token(Token = "0x4000FD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private byte[] <data>5__3;

			[Token(Token = "0x4000FD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private FileStream <fs>5__4;

			[Token(Token = "0x4000FDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private TaskAwaiter<int> <>u__1;

			[Token(Token = "0x4000FDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private UniTask<TwitterPostTweetResponse>.Awaiter <>u__2;

			[Token(Token = "0x6000C6F")]
			[Address(RVA = "0x1B86760", Offset = "0x1B86760", VA = "0x1B86760", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000C70")]
			[Address(RVA = "0x1B8741C", Offset = "0x1B8741C", VA = "0x1B8741C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000FB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly MultilingualTextManager _multilingualTextManager;

		[Token(Token = "0x4000FBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly ReactiveProperty<TwitterUseCaseState> currentTwitterUseCaseState;

		[Token(Token = "0x4000FBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool isUploading;

		[Token(Token = "0x1700010E")]
		public IReadOnlyReactiveProperty<TwitterUseCaseState> CurrentTwitterUseCaseState
		{
			[Token(Token = "0x6000C60")]
			[Address(RVA = "0x1B84D58", Offset = "0x1B84D58", VA = "0x1B84D58")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C5F")]
		[Address(RVA = "0x1B84CB0", Offset = "0x1B84CB0", VA = "0x1B84CB0")]
		public TwitterUseCase(MultilingualTextManager multilingualTextManager)
		{
		}

		[Token(Token = "0x6000C61")]
		[Address(RVA = "0x1B84D60", Offset = "0x1B84D60", VA = "0x1B84D60")]
		[AsyncStateMachine(typeof(<Initialize>d__6))]
		public UniTask Initialize(CancellationToken token)
		{
			return default(UniTask);
		}

		[Token(Token = "0x6000C62")]
		[Address(RVA = "0x1B84EDC", Offset = "0x1B84EDC", VA = "0x1B84EDC")]
		[AsyncStateMachine(typeof(<GenerateAccessToken>d__7))]
		public void GenerateAccessToken(string pin, CancellationToken token)
		{
		}

		[Token(Token = "0x6000C63")]
		[Address(RVA = "0x1B84FCC", Offset = "0x1B84FCC", VA = "0x1B84FCC")]
		[AsyncStateMachine(typeof(<ReAuthentication>d__8))]
		public void ReAuthentication(CancellationToken token)
		{
		}

		[Token(Token = "0x6000C64")]
		[Address(RVA = "0x1B850A4", Offset = "0x1B850A4", VA = "0x1B850A4")]
		[AsyncStateMachine(typeof(<PostMediaExternal>d__9))]
		public void PostMediaExternal(string mediaName, CancellationToken token)
		{
		}

		[Token(Token = "0x6000C65")]
		[Address(RVA = "0x1B85190", Offset = "0x1B85190", VA = "0x1B85190")]
		[AsyncStateMachine(typeof(<PostMedia>d__10))]
		private UniTask PostMedia(string path, CancellationToken token)
		{
			return default(UniTask);
		}

		[Token(Token = "0x6000C66")]
		[Address(RVA = "0x1B85328", Offset = "0x1B85328", VA = "0x1B85328")]
		private bool IsMediaUploadable(string mediaType, long mediaSize)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20002F7")]
	public enum TwitterUseCaseState
	{
		[Token(Token = "0x4000FDD")]
		BeforeInitialization,
		[Token(Token = "0x4000FDE")]
		ErrorAbsolute,
		[Token(Token = "0x4000FDF")]
		SuccessAuthorization,
		[Token(Token = "0x4000FE0")]
		RequestPIN,
		[Token(Token = "0x4000FE1")]
		ErrorAuthorization,
		[Token(Token = "0x4000FE2")]
		MediaUploading,
		[Token(Token = "0x4000FE3")]
		SuccessMediaUpload,
		[Token(Token = "0x4000FE4")]
		ErrorMediaUpload
	}
}
namespace __Imacreate__.__Production__.Core.TouchPanel
{
	[Token(Token = "0x20002F8")]
	public abstract class OpenablePanelItem : MonoBehaviour
	{
		[Token(Token = "0x6000C71")]
		public abstract bool OpenImmediately();

		[Token(Token = "0x6000C72")]
		public abstract UniTask<bool> OpenAsync(CancellationToken token);

		[Token(Token = "0x6000C73")]
		public abstract UniTask<bool> CloseConfirmationAsync(CancellationToken token);

		[Token(Token = "0x6000C74")]
		public abstract bool CloseImmediately();

		[Token(Token = "0x6000C75")]
		public abstract UniTask<bool> CloseAsync(CancellationToken token);

		[Token(Token = "0x6000C76")]
		[Address(RVA = "0x1B87428", Offset = "0x1B87428", VA = "0x1B87428")]
		protected OpenablePanelItem()
		{
		}
	}
	[Token(Token = "0x20002F9")]
	[RequireComponent(typeof(Button))]
	public class TouchPanelActionButton : MonoBehaviour, IAutoSetUp
	{
		[Token(Token = "0x4000FE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[RestrictedStringByEnum(typeof(ActionKey))]
		private string _actionKey;

		[Token(Token = "0x4000FE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("Auto Setup References")]
		[SerializeField]
		private TouchPanelRouter _parentRouter;

		[Token(Token = "0x4000FE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Button _button;

		[Token(Token = "0x4000FE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Inject]
		private IPublisher<TouchPanelActionData> _actionPublisher;

		[Token(Token = "0x6000C77")]
		[Address(RVA = "0x1B87430", Offset = "0x1B87430", VA = "0x1B87430")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C78")]
		[Address(RVA = "0x1B8750C", Offset = "0x1B8750C", VA = "0x1B8750C", Slot = "4")]
		public void AutoSetUp()
		{
		}

		[Token(Token = "0x6000C79")]
		[Address(RVA = "0x1B876E4", Offset = "0x1B876E4", VA = "0x1B876E4")]
		public TouchPanelActionButton()
		{
		}
	}
	[Token(Token = "0x20002FA")]
	public class TouchPanelActionData
	{
		[Token(Token = "0x4000FE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ActionKey Key;

		[Token(Token = "0x4000FEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TouchPanelRouter Router;

		[Token(Token = "0x6000C7B")]
		[Address(RVA = "0x1B877CC", Offset = "0x1B877CC", VA = "0x1B877CC")]
		public TouchPanelActionData(string key, TouchPanelRouter router)
		{
		}

		[Token(Token = "0x6000C7C")]
		[Address(RVA = "0x1B878F0", Offset = "0x1B878F0", VA = "0x1B878F0")]
		public TouchPanelActionData(ActionKey key, TouchPanelRouter router)
		{
		}
	}
	[Token(Token = "0x20002FB")]
	public class TouchPanelActionPublisher : MonoBehaviour, IAutoSetUp
	{
		[Token(Token = "0x4000FEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Inject]
		private IPublisher<TouchPanelActionData> _publisher;

		[Token(Token = "0x4000FEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[RestrictedStringByEnum(typeof(ActionKey))]
		private string[] _keys;

		[Token(Token = "0x4000FED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Header("Auto Setup References")]
		[SerializeField]
		private TouchPanelRouter _parentRouter;

		[Token(Token = "0x6000C7D")]
		[Address(RVA = "0x1B87928", Offset = "0x1B87928", VA = "0x1B87928")]
		public void Publish(int index)
		{
		}

		[Token(Token = "0x6000C7E")]
		[Address(RVA = "0x1B87A2C", Offset = "0x1B87A2C", VA = "0x1B87A2C", Slot = "4")]
		public void AutoSetUp()
		{
		}

		[Token(Token = "0x6000C7F")]
		[Address(RVA = "0x1B87B54", Offset = "0x1B87B54", VA = "0x1B87B54")]
		public TouchPanelActionPublisher()
		{
		}
	}
	[Token(Token = "0x20002FC")]
	[RequireComponent(typeof(Button))]
	public class TouchPanelBackButton : MonoBehaviour, IAutoSetUp
	{
		[Token(Token = "0x4000FEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Auto Setup References")]
		[SerializeField]
		private TouchPanelRouter _parentRouter;

		[Token(Token = "0x4000FEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Button _button;

		[Token(Token = "0x6000C80")]
		[Address(RVA = "0x1B87B5C", Offset = "0x1B87B5C", VA = "0x1B87B5C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C81")]
		[Address(RVA = "0x1B87C38", Offset = "0x1B87C38", VA = "0x1B87C38", Slot = "4")]
		public void AutoSetUp()
		{
		}

		[Token(Token = "0x6000C82")]
		[Address(RVA = "0x1B87DF4", Offset = "0x1B87DF4", VA = "0x1B87DF4")]
		public TouchPanelBackButton()
		{
		}
	}
	[Token(Token = "0x20002FD")]
	public class TouchPanelCanvas : OpenablePanelItem, IAutoSetUp
	{
		[StructLayout(3)]
		[Token(Token = "0x20002FE")]
		[CompilerGenerated]
		private struct <OpenAsync>d__11 : IAsyncStateMachine
		{
			[Token(Token = "0x4000FF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000FFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x4000FFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TouchPanelCanvas <>4__this;

			[Token(Token = "0x4000FFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken token;

			[Token(Token = "0x4000FFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <t>5__2;

			[Token(Token = "0x4000FFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6000C8E")]
			[Address(RVA = "0x1B88464", Offset = "0x1B88464", VA = "0x1B88464", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000C8F")]
			[Address(RVA = "0x1B88954", Offset = "0x1B88954", VA = "0x1B88954", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20002FF")]
		[CompilerGenerated]
		private struct <CloseAsync>d__13 : IAsyncStateMachine
		{
			[Token(Token = "0x4000FFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001000")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x4001001")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TouchPanelCanvas <>4__this;

			[Token(Token = "0x4001002")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken token;

			[Token(Token = "0x4001003")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <t>5__2;

			[Token(Token = "0x4001004")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6000C90")]
			[Address(RVA = "0x1B889AC", Offset = "0x1B889AC", VA = "0x1B889AC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000C91")]
			[Address(RVA = "0x1B88E9C", Offset = "0x1B88E9C", VA = "0x1B88E9C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000300")]
		[CompilerGenerated]
		private struct <CloseConfirmationAsync>d__14 : IAsyncStateMachine
		{
			[Token(Token = "0x4001005")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001006")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x4001007")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TouchPanelCanvas <>4__this;

			[Token(Token = "0x4001008")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken token;

			[Token(Token = "0x4001009")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask<int>.Awaiter <>u__1;

			[Token(Token = "0x6000C92")]
			[Address(RVA = "0x1B88EF4", Offset = "0x1B88EF4", VA = "0x1B88EF4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000C93")]
			[Address(RVA = "0x1B8945C", Offset = "0x1B8945C", VA = "0x1B8945C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000FF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Canvas _canvas;

		[Token(Token = "0x4000FF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GraphicRaycaster _raycaster;

		[Token(Token = "0x4000FF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float speed;

		[Token(Token = "0x4000FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[Tooltip("初期化など画面開くときの処理が必要なら")]
		private UnityEvent OnOpened;

		[Token(Token = "0x4000FF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[Tooltip("画面閉じるときの処理が必要なら")]
		private UnityEvent OnClosed;

		[Token(Token = "0x4000FF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Header("Confirmation on close")]
		[Space(10f)]
		public bool _needConfirmationOnClose;

		[Token(Token = "0x4000FF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private UnityEvent OpenConfirmationWindow;

		[Token(Token = "0x4000FF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Button _confirmationYes;

		[Token(Token = "0x4000FF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Button _confirmationNo;

		[Token(Token = "0x6000C84")]
		[Address(RVA = "0x1B87F84", Offset = "0x1B87F84", VA = "0x1B87F84")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C85")]
		[Address(RVA = "0x1B87FA8", Offset = "0x1B87FA8", VA = "0x1B87FA8", Slot = "4")]
		public override bool OpenImmediately()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C86")]
		[Address(RVA = "0x1B880B0", Offset = "0x1B880B0", VA = "0x1B880B0", Slot = "5")]
		[AsyncStateMachine(typeof(<OpenAsync>d__11))]
		public override UniTask<bool> OpenAsync(CancellationToken token)
		{
			return default(UniTask<bool>);
		}

		[Token(Token = "0x6000C87")]
		[Address(RVA = "0x1B88190", Offset = "0x1B88190", VA = "0x1B88190", Slot = "7")]
		public override bool CloseImmediately()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C88")]
		[Address(RVA = "0x1B881E8", Offset = "0x1B881E8", VA = "0x1B881E8", Slot = "8")]
		[AsyncStateMachine(typeof(<CloseAsync>d__13))]
		public override UniTask<bool> CloseAsync(CancellationToken token)
		{
			return default(UniTask<bool>);
		}

		[Token(Token = "0x6000C89")]
		[Address(RVA = "0x1B882C8", Offset = "0x1B882C8", VA = "0x1B882C8", Slot = "6")]
		[AsyncStateMachine(typeof(<CloseConfirmationAsync>d__14))]
		public override UniTask<bool> CloseConfirmationAsync(CancellationToken token)
		{
			return default(UniTask<bool>);
		}

		[Token(Token = "0x6000C8A")]
		[Address(RVA = "0x1B88030", Offset = "0x1B88030", VA = "0x1B88030")]
		private void SetValue(float t)
		{
		}

		[Token(Token = "0x6000C8B")]
		[Address(RVA = "0x1B883A4", Offset = "0x1B883A4", VA = "0x1B883A4")]
		private float GetValue()
		{
			return default(float);
		}

		[Token(Token = "0x6000C8C")]
		[Address(RVA = "0x1B883C4", Offset = "0x1B883C4", VA = "0x1B883C4", Slot = "9")]
		[ContextMenu("AutoSetUp")]
		public void AutoSetUp()
		{
		}

		[Token(Token = "0x6000C8D")]
		[Address(RVA = "0x1B88454", Offset = "0x1B88454", VA = "0x1B88454")]
		public TouchPanelCanvas()
		{
		}
	}
	[Token(Token = "0x2000301")]
	[RequireComponent(typeof(CanvasGroup))]
	public class TouchPanelContentsGroup : TouchPanelOpenableItem, IAutoSetUp
	{
		[Token(Token = "0x400100A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool _controlRayCastInstedOfActiveSelf;

		[Token(Token = "0x400100B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private UnityEvent OnOpen;

		[Token(Token = "0x400100C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private UnityEvent OnClose;

		[Token(Token = "0x400100D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Header("References")]
		[SerializeField]
		private CanvasGroup _canvasGroup;

		[Token(Token = "0x1700010F")]
		protected override bool _isControlGameObjectActive
		{
			[Token(Token = "0x6000C94")]
			[Address(RVA = "0x1B894B4", Offset = "0x1B894B4", VA = "0x1B894B4", Slot = "9")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000C95")]
		[Address(RVA = "0x1B894C4", Offset = "0x1B894C4", VA = "0x1B894C4", Slot = "10")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000C96")]
		[Address(RVA = "0x1B8956C", Offset = "0x1B8956C", VA = "0x1B8956C", Slot = "12")]
		protected override float GetValue()
		{
			return default(float);
		}

		[Token(Token = "0x6000C97")]
		[Address(RVA = "0x1B89588", Offset = "0x1B89588", VA = "0x1B89588", Slot = "11")]
		protected override void SetValue(float t)
		{
		}

		[Token(Token = "0x6000C98")]
		[Address(RVA = "0x1B89624", Offset = "0x1B89624", VA = "0x1B89624", Slot = "7")]
		public override bool CloseImmediately()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C99")]
		[Address(RVA = "0x1B896B8", Offset = "0x1B896B8", VA = "0x1B896B8", Slot = "4")]
		public override bool OpenImmediately()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C9A")]
		[Address(RVA = "0x1B89748", Offset = "0x1B89748", VA = "0x1B89748", Slot = "5")]
		public override UniTask<bool> OpenAsync(CancellationToken token)
		{
			return default(UniTask<bool>);
		}

		[Token(Token = "0x6000C9B")]
		[Address(RVA = "0x1B8982C", Offset = "0x1B8982C", VA = "0x1B8982C", Slot = "13")]
		public void AutoSetUp()
		{
		}

		[Token(Token = "0x6000C9C")]
		[Address(RVA = "0x1B898DC", Offset = "0x1B898DC", VA = "0x1B898DC")]
		public TouchPanelContentsGroup()
		{
		}
	}
	[Token(Token = "0x2000302")]
	public enum RouteKey
	{
		[Token(Token = "0x400100F")]
		Index,
		[Token(Token = "0x4001010")]
		CommingSoon,
		[Token(Token = "0x4001011")]
		Home,
		[Token(Token = "0x4001012")]
		Mission,
		[Token(Token = "0x4001013")]
		Calendar,
		[Token(Token = "0x4001014")]
		FitLog,
		[Token(Token = "0x4001015")]
		Avatar,
		[Token(Token = "0x4001016")]
		Monitor,
		[Token(Token = "0x4001017")]
		Settings,
		[Token(Token = "0x4001018")]
		Calendar_Calendar,
		[Token(Token = "0x4001019")]
		Avatar_VRoid,
		[Token(Token = "0x400101A")]
		Avatar_BuiltIn,
		[Token(Token = "0x400101B")]
		Avatar_Setting,
		[Token(Token = "0x400101C")]
		Avatar_ChangeUsualAvatar,
		[Token(Token = "0x400101D")]
		Avatar_UsualAvatar,
		[Token(Token = "0x400101E")]
		Settings_Sound,
		[Token(Token = "0x400101F")]
		Settings_Language,
		[Token(Token = "0x4001020")]
		Settings_PrivacyPolicy,
		[Token(Token = "0x4001021")]
		Settings_Calibration,
		[Token(Token = "0x4001022")]
		Fitlog_Hist,
		[Token(Token = "0x4001023")]
		Fitlog_DailyGroove,
		[Token(Token = "0x4001024")]
		Fitlog_GrooveFitRecord,
		[Token(Token = "0x4001025")]
		Fitlog_GrooveFitTable,
		[Token(Token = "0x4001026")]
		Mission_Tutorial,
		[Token(Token = "0x4001027")]
		Mission_Record,
		[Token(Token = "0x4001028")]
		Mission_Secret,
		[Token(Token = "0x4001029")]
		Monitor_Explanation,
		[Token(Token = "0x400102A")]
		Avatar_FullTracking,
		[Token(Token = "0x400102B")]
		Avatar_FullTrackingInfoVive6,
		[Token(Token = "0x400102C")]
		Avatar_FullTrackingInfoVIve10,
		[Token(Token = "0x400102D")]
		Avatar_FullTrackingInfoHaritoraX,
		[Token(Token = "0x400102E")]
		Avatar_FullTrackingCalibrationVive6,
		[Token(Token = "0x400102F")]
		Avatar_FullTrackingCalibrationVive10,
		[Token(Token = "0x4001030")]
		Avatar_FullTrackingCalibrationHaritoraX
	}
	[Token(Token = "0x2000303")]
	public enum ActionKey
	{
		[Token(Token = "0x4001032")]
		OpenCalibration,
		[Token(Token = "0x4001033")]
		CloseCalibration,
		[Token(Token = "0x4001034")]
		OpenLanguageSetting,
		[Token(Token = "0x4001035")]
		CloseLanguageSetting,
		[Token(Token = "0x4001036")]
		BackSoundPlay,
		[Token(Token = "0x4001037")]
		OpenSoundPlay,
		[Token(Token = "0x4001038")]
		ClickSoundPlay
	}
	[Token(Token = "0x2000304")]
	[RequireComponent(typeof(Button))]
	public class TouchPanelLinkButton : MonoBehaviour, IAutoSetUp
	{
		[Token(Token = "0x4001039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Manual Settings")]
		[SerializeField]
		[RestrictedStringByEnum(typeof(RouteKey))]
		protected string _destination;

		[Token(Token = "0x400103A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("Auto Setup References")]
		[SerializeField]
		protected TouchPanelRouter _parentRouter;

		[Token(Token = "0x400103B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected Button _button;

		[Token(Token = "0x17000110")]
		public Button Button
		{
			[Token(Token = "0x6000C9D")]
			[Address(RVA = "0x1B898FC", Offset = "0x1B898FC", VA = "0x1B898FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C9E")]
		[Address(RVA = "0x1B89904", Offset = "0x1B89904", VA = "0x1B89904")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C9F")]
		[Address(RVA = "0x1B899E0", Offset = "0x1B899E0", VA = "0x1B899E0", Slot = "4")]
		[ContextMenu("AutoSetUp")]
		public void AutoSetUp()
		{
		}

		[Token(Token = "0x6000CA0")]
		[Address(RVA = "0x1B89BB8", Offset = "0x1B89BB8", VA = "0x1B89BB8")]
		public TouchPanelLinkButton()
		{
		}
	}
	[Token(Token = "0x2000305")]
	public class TouchPanelMainCanvas : OpenablePanelItem
	{
		[StructLayout(3)]
		[Token(Token = "0x2000306")]
		[CompilerGenerated]
		private struct <OpenAsync>d__7 : IAsyncStateMachine
		{
			[Token(Token = "0x4001042")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001043")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x4001044")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TouchPanelMainCanvas <>4__this;

			[Token(Token = "0x4001045")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken token;

			[Token(Token = "0x4001046")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <t>5__2;

			[Token(Token = "0x4001047")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6000CA8")]
			[Address(RVA = "0x1B8A10C", Offset = "0x1B8A10C", VA = "0x1B8A10C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000CA9")]
			[Address(RVA = "0x1B8A640", Offset = "0x1B8A640", VA = "0x1B8A640", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000307")]
		[CompilerGenerated]
		private struct <CloseAsync>d__9 : IAsyncStateMachine
		{
			[Token(Token = "0x4001048")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001049")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x400104A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TouchPanelMainCanvas <>4__this;

			[Token(Token = "0x400104B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken token;

			[Token(Token = "0x400104C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <t>5__2;

			[Token(Token = "0x400104D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6000CAA")]
			[Address(RVA = "0x1B8A698", Offset = "0x1B8A698", VA = "0x1B8A698", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000CAB")]
			[Address(RVA = "0x1B8AC04", Offset = "0x1B8AC04", VA = "0x1B8AC04", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000308")]
		[CompilerGenerated]
		private struct <CloseConfirmationAsync>d__10 : IAsyncStateMachine
		{
			[Token(Token = "0x400104E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400104F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x4001050")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CancellationToken token;

			[Token(Token = "0x4001051")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6000CAC")]
			[Address(RVA = "0x1B8AC5C", Offset = "0x1B8AC5C", VA = "0x1B8AC5C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000CAD")]
			[Address(RVA = "0x1B8B074", Offset = "0x1B8B074", VA = "0x1B8B074", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x400103C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GraphicRaycaster _raycaster;

		[Token(Token = "0x400103D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Image _overlay;

		[Token(Token = "0x400103E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float _speed;

		[Token(Token = "0x400103F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		[Range(0f, 1f)]
		private float _maxalpha;

		[Token(Token = "0x4001040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private UnityEvent OnOpen;

		[Token(Token = "0x4001041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private UnityEvent OnClose;

		[Token(Token = "0x6000CA2")]
		[Address(RVA = "0x1B89D6C", Offset = "0x1B89D6C", VA = "0x1B89D6C", Slot = "4")]
		public override bool OpenImmediately()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CA3")]
		[Address(RVA = "0x1B89DFC", Offset = "0x1B89DFC", VA = "0x1B89DFC", Slot = "5")]
		[AsyncStateMachine(typeof(<OpenAsync>d__7))]
		public override UniTask<bool> OpenAsync(CancellationToken token)
		{
			return default(UniTask<bool>);
		}

		[Token(Token = "0x6000CA4")]
		[Address(RVA = "0x1B89EDC", Offset = "0x1B89EDC", VA = "0x1B89EDC", Slot = "7")]
		public override bool CloseImmediately()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CA5")]
		[Address(RVA = "0x1B89F54", Offset = "0x1B89F54", VA = "0x1B89F54", Slot = "8")]
		[AsyncStateMachine(typeof(<CloseAsync>d__9))]
		public override UniTask<bool> CloseAsync(CancellationToken token)
		{
			return default(UniTask<bool>);
		}

		[Token(Token = "0x6000CA6")]
		[Address(RVA = "0x1B8A034", Offset = "0x1B8A034", VA = "0x1B8A034", Slot = "6")]
		[AsyncStateMachine(typeof(<CloseConfirmationAsync>d__10))]
		public override UniTask<bool> CloseConfirmationAsync(CancellationToken token)
		{
			return default(UniTask<bool>);
		}

		[Token(Token = "0x6000CA7")]
		[Address(RVA = "0x1B8A0F8", Offset = "0x1B8A0F8", VA = "0x1B8A0F8")]
		public TouchPanelMainCanvas()
		{
		}
	}
	[Token(Token = "0x2000309")]
	public class TouchPanelManager : MonoBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x200030A")]
		[CompilerGenerated]
		private struct <SwitchActiveCanvas>d__9 : IAsyncStateMachine
		{
			[Token(Token = "0x4001059")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400105A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x400105B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int index;

			[Token(Token = "0x400105C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TouchPanelManager <>4__this;

			[Token(Token = "0x400105D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CancellationToken token;

			[Token(Token = "0x400105E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public bool immidiate;

			[Token(Token = "0x400105F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private UniTask<bool>.Awaiter <>u__1;

			[Token(Token = "0x4001060")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private UniTask.Awaiter <>u__2;

			[Token(Token = "0x4001061")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private UniTask<(bool, bool)>.Awaiter <>u__3;

			[Token(Token = "0x6000CB4")]
			[Address(RVA = "0x1B8B568", Offset = "0x1B8B568", VA = "0x1B8B568", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000CB5")]
			[Address(RVA = "0x1B8BF9C", Offset = "0x1B8BF9C", VA = "0x1B8BF9C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200030B")]
		[CompilerGenerated]
		private struct <CloseCanvas>d__10 : IAsyncStateMachine
		{
			[Token(Token = "0x4001062")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001063")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x4001064")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool immidiate;

			[Token(Token = "0x4001065")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TouchPanelManager <>4__this;

			[Token(Token = "0x4001066")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int closeIndex;

			[Token(Token = "0x4001067")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public CancellationToken token;

			[Token(Token = "0x4001068")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private UniTask<bool>.Awaiter <>u__1;

			[Token(Token = "0x6000CB6")]
			[Address(RVA = "0x1B8BFF4", Offset = "0x1B8BFF4", VA = "0x1B8BFF4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000CB7")]
			[Address(RVA = "0x1B8C4FC", Offset = "0x1B8C4FC", VA = "0x1B8C4FC", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200030C")]
		[CompilerGenerated]
		private struct <OpenCanvas>d__11 : IAsyncStateMachine
		{
			[Token(Token = "0x4001069")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400106A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x400106B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int delay;

			[Token(Token = "0x400106C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken token;

			[Token(Token = "0x400106D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool immidiate;

			[Token(Token = "0x400106E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public TouchPanelManager <>4__this;

			[Token(Token = "0x400106F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public int openIndex;

			[Token(Token = "0x4001070")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x4001071")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private UniTask<bool>.Awaiter <>u__2;

			[Token(Token = "0x6000CB8")]
			[Address(RVA = "0x1B8C554", Offset = "0x1B8C554", VA = "0x1B8C554", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000CB9")]
			[Address(RVA = "0x1B8CC80", Offset = "0x1B8CC80", VA = "0x1B8CC80", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<OpenablePanelItem> _panelItems;

		[Token(Token = "0x4001053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int activeCanvas;

		[Token(Token = "0x4001054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private int _delay;

		[Token(Token = "0x4001055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _onProgress;

		[Token(Token = "0x4001056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioSource _audioPoint;

		[Token(Token = "0x4001057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AudioClip _contentSelectSound;

		[Token(Token = "0x4001058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private AudioClip _homeSelectSound;

		[Token(Token = "0x6000CAE")]
		[Address(RVA = "0x1B8B0CC", Offset = "0x1B8B0CC", VA = "0x1B8B0CC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CAF")]
		[Address(RVA = "0x1B8B1C8", Offset = "0x1B8B1C8", VA = "0x1B8B1C8")]
		public void SwitchActiveCanvasForget(int index)
		{
		}

		[Token(Token = "0x6000CB0")]
		[Address(RVA = "0x1B8B270", Offset = "0x1B8B270", VA = "0x1B8B270")]
		[AsyncStateMachine(typeof(<SwitchActiveCanvas>d__9))]
		private UniTask<bool> SwitchActiveCanvas(int index, CancellationToken token, bool immidiate = false)
		{
			return default(UniTask<bool>);
		}

		[Token(Token = "0x6000CB1")]
		[Address(RVA = "0x1B8B36C", Offset = "0x1B8B36C", VA = "0x1B8B36C")]
		[AsyncStateMachine(typeof(<CloseCanvas>d__10))]
		private UniTask<bool> CloseCanvas(int closeIndex, bool immidiate, CancellationToken token)
		{
			return default(UniTask<bool>);
		}

		[Token(Token = "0x6000CB2")]
		[Address(RVA = "0x1B8B458", Offset = "0x1B8B458", VA = "0x1B8B458")]
		[AsyncStateMachine(typeof(<OpenCanvas>d__11))]
		private UniTask<bool> OpenCanvas(int openIndex, bool immidiate, int delay, CancellationToken token)
		{
			return default(UniTask<bool>);
		}

		[Token(Token = "0x6000CB3")]
		[Address(RVA = "0x1B8B558", Offset = "0x1B8B558", VA = "0x1B8B558")]
		public TouchPanelManager()
		{
		}
	}
	[Token(Token = "0x200030D")]
	public class TouchPanelOpenableItem : OpenablePanelItem
	{
		[StructLayout(3)]
		[Token(Token = "0x200030E")]
		[CompilerGenerated]
		private struct <OpenAsync>d__6 : IAsyncStateMachine
		{
			[Token(Token = "0x4001074")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001075")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x4001076")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TouchPanelOpenableItem <>4__this;

			[Token(Token = "0x4001077")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken token;

			[Token(Token = "0x4001078")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <t>5__2;

			[Token(Token = "0x4001079")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6000CC8")]
			[Address(RVA = "0x1B8D110", Offset = "0x1B8D110", VA = "0x1B8D110", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000CC9")]
			[Address(RVA = "0x1B8D5DC", Offset = "0x1B8D5DC", VA = "0x1B8D5DC", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200030F")]
		[CompilerGenerated]
		private struct <CloseAsync>d__8 : IAsyncStateMachine
		{
			[Token(Token = "0x400107A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400107B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x400107C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TouchPanelOpenableItem <>4__this;

			[Token(Token = "0x400107D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken token;

			[Token(Token = "0x400107E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <t>5__2;

			[Token(Token = "0x400107F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6000CCA")]
			[Address(RVA = "0x1B8D634", Offset = "0x1B8D634", VA = "0x1B8D634", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000CCB")]
			[Address(RVA = "0x1B8DB20", Offset = "0x1B8DB20", VA = "0x1B8DB20", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000310")]
		[CompilerGenerated]
		private struct <CloseConfirmationAsync>d__9 : IAsyncStateMachine
		{
			[Token(Token = "0x4001080")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001081")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x4001082")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CancellationToken token;

			[Token(Token = "0x4001083")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6000CCC")]
			[Address(RVA = "0x1B8DB78", Offset = "0x1B8DB78", VA = "0x1B8DB78", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000CCD")]
			[Address(RVA = "0x1B8DF90", Offset = "0x1B8DF90", VA = "0x1B8DF90", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected float _speed;

		[Token(Token = "0x4001073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CancellationTokenSource _tokenSource;

		[Token(Token = "0x17000111")]
		protected virtual bool _isControlGameObjectActive
		{
			[Token(Token = "0x6000CBA")]
			[Address(RVA = "0x1B8CCD8", Offset = "0x1B8CCD8", VA = "0x1B8CCD8", Slot = "9")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000CBB")]
		[Address(RVA = "0x1B89504", Offset = "0x1B89504", VA = "0x1B89504", Slot = "10")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000CBC")]
		[Address(RVA = "0x1B89718", Offset = "0x1B89718", VA = "0x1B89718", Slot = "4")]
		public override bool OpenImmediately()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CBD")]
		[Address(RVA = "0x1B8974C", Offset = "0x1B8974C", VA = "0x1B8974C", Slot = "5")]
		[AsyncStateMachine(typeof(<OpenAsync>d__6))]
		public override UniTask<bool> OpenAsync(CancellationToken token)
		{
			return default(UniTask<bool>);
		}

		[Token(Token = "0x6000CBE")]
		[Address(RVA = "0x1B89688", Offset = "0x1B89688", VA = "0x1B89688", Slot = "7")]
		public override bool CloseImmediately()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CBF")]
		[Address(RVA = "0x1B8CD38", Offset = "0x1B8CD38", VA = "0x1B8CD38", Slot = "8")]
		[AsyncStateMachine(typeof(<CloseAsync>d__8))]
		public override UniTask<bool> CloseAsync(CancellationToken token)
		{
			return default(UniTask<bool>);
		}

		[Token(Token = "0x6000CC0")]
		[Address(RVA = "0x1B8CE18", Offset = "0x1B8CE18", VA = "0x1B8CE18", Slot = "6")]
		[AsyncStateMachine(typeof(<CloseConfirmationAsync>d__9))]
		public override UniTask<bool> CloseConfirmationAsync(CancellationToken token)
		{
			return default(UniTask<bool>);
		}

		[Token(Token = "0x6000CC1")]
		[Address(RVA = "0x1B8CEDC", Offset = "0x1B8CEDC", VA = "0x1B8CEDC", Slot = "11")]
		protected virtual void SetValue(float t)
		{
		}

		[Token(Token = "0x6000CC2")]
		[Address(RVA = "0x1B8CF5C", Offset = "0x1B8CF5C", VA = "0x1B8CF5C", Slot = "12")]
		protected virtual float GetValue()
		{
			return default(float);
		}

		[Token(Token = "0x6000CC3")]
		[Address(RVA = "0x1B8CF7C", Offset = "0x1B8CF7C", VA = "0x1B8CF7C")]
		public void StartOpen()
		{
		}

		[Token(Token = "0x6000CC4")]
		[Address(RVA = "0x1B8D038", Offset = "0x1B8D038", VA = "0x1B8D038")]
		public void StartClose()
		{
		}

		[Token(Token = "0x6000CC5")]
		[Address(RVA = "0x1B8CCE0", Offset = "0x1B8CCE0", VA = "0x1B8CCE0")]
		private void SetActiveIfControled(bool val)
		{
		}

		[Token(Token = "0x6000CC6")]
		[Address(RVA = "0x1B8D0F4", Offset = "0x1B8D0F4", VA = "0x1B8D0F4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000CC7")]
		[Address(RVA = "0x1B898EC", Offset = "0x1B898EC", VA = "0x1B898EC")]
		public TouchPanelOpenableItem()
		{
		}
	}
	[Token(Token = "0x2000311")]
	public class TouchPanelRouter : MonoBehaviour, IAutoSetUp
	{
		[Serializable]
		[Token(Token = "0x2000312")]
		private struct RouteSettings
		{
			[Token(Token = "0x400108D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[RestrictedStringByEnum(typeof(RouteKey))]
			public string Path;

			[Token(Token = "0x400108E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public OpenablePanelItem Item;
		}

		[StructLayout(3)]
		[Token(Token = "0x2000314")]
		[CompilerGenerated]
		private struct <Back>d__11 : IAsyncStateMachine
		{
			[Token(Token = "0x4001092")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001093")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x4001094")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TouchPanelRouter <>4__this;

			[Token(Token = "0x4001095")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken token;

			[Token(Token = "0x4001096")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool immediate;

			[Token(Token = "0x4001097")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
			public bool silent;

			[Token(Token = "0x4001098")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UniTask<bool>.Awaiter <>u__1;

			[Token(Token = "0x6000CDD")]
			[Address(RVA = "0x1B8F01C", Offset = "0x1B8F01C", VA = "0x1B8F01C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000CDE")]
			[Address(RVA = "0x1B8F4CC", Offset = "0x1B8F4CC", VA = "0x1B8F4CC", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000315")]
		[CompilerGenerated]
		private struct <SwitchTo>d__12 : IAsyncStateMachine
		{
			[Token(Token = "0x4001099")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400109A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x400109B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TouchPanelRouter <>4__this;

			[Token(Token = "0x400109C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string key;

			[Token(Token = "0x400109D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CancellationToken token;

			[Token(Token = "0x400109E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public bool immediate;

			[Token(Token = "0x400109F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
			public bool silent;

			[Token(Token = "0x40010A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private UniTask<bool>.Awaiter <>u__1;

			[Token(Token = "0x6000CDF")]
			[Address(RVA = "0x1B8F524", Offset = "0x1B8F524", VA = "0x1B8F524", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000CE0")]
			[Address(RVA = "0x1B8FA48", Offset = "0x1B8FA48", VA = "0x1B8FA48", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000316")]
		[CompilerGenerated]
		private struct <BackUnsafe>d__13 : IAsyncStateMachine
		{
			[Token(Token = "0x40010A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40010A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x40010A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TouchPanelRouter <>4__this;

			[Token(Token = "0x40010A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken token;

			[Token(Token = "0x40010A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool immediate;

			[Token(Token = "0x40010A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
			public bool silent;

			[Token(Token = "0x40010A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UniTask<bool>.Awaiter <>u__1;

			[Token(Token = "0x6000CE1")]
			[Address(RVA = "0x1B8FAA0", Offset = "0x1B8FAA0", VA = "0x1B8FAA0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000CE2")]
			[Address(RVA = "0x1B903C4", Offset = "0x1B903C4", VA = "0x1B903C4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000318")]
		[CompilerGenerated]
		private struct <SwitchToUnsafe>d__14 : IAsyncStateMachine
		{
			[Token(Token = "0x40010A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40010AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x40010AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TouchPanelRouter <>4__this;

			[Token(Token = "0x40010AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string key;

			[Token(Token = "0x40010AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool immediate;

			[Token(Token = "0x40010AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
			public bool silent;

			[Token(Token = "0x40010AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public CancellationToken token;

			[Token(Token = "0x40010B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private OpenablePanelItem <to>5__2;

			[Token(Token = "0x40010B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private UniTask<bool>.Awaiter <>u__1;

			[Token(Token = "0x6000CE5")]
			[Address(RVA = "0x1B904C0", Offset = "0x1B904C0", VA = "0x1B904C0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000CE6")]
			[Address(RVA = "0x1B90D1C", Offset = "0x1B90D1C", VA = "0x1B90D1C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Manual Settings")]
		[SerializeField]
		[RestrictedStringByEnum(typeof(RouteKey))]
		private string _initialRouteKey;

		[Token(Token = "0x4001085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<RouteSettings> _route;

		[Token(Token = "0x4001086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly Stack<OpenablePanelItem> _stack;

		[Token(Token = "0x4001087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly Dictionary<string, OpenablePanelItem> _routeDict;

		[Token(Token = "0x4001088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _onProgress;

		[Token(Token = "0x4001089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Header("Platform Override")]
		[SerializeField]
		private List<RouteSettings> _questOverride;

		[Token(Token = "0x400108A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private List<RouteSettings> _picoOverride;

		[Token(Token = "0x400108B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Inject]
		private IPublisher<TouchPanelActionData> _actionPublisher;

		[Token(Token = "0x400108C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[CanBeNull]
		[Header("Auto Setup References")]
		[SerializeField]
		private TouchPanelRouter _parentRouter;

		[Token(Token = "0x6000CCE")]
		[Address(RVA = "0x1B8DFE8", Offset = "0x1B8DFE8", VA = "0x1B8DFE8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CCF")]
		[Address(RVA = "0x1B8E1F4", Offset = "0x1B8E1F4", VA = "0x1B8E1F4")]
		public void Reload()
		{
		}

		[Token(Token = "0x6000CD0")]
		[Address(RVA = "0x1B87E8C", Offset = "0x1B87E8C", VA = "0x1B87E8C")]
		[AsyncStateMachine(typeof(<Back>d__11))]
		public UniTask<bool> Back(CancellationToken token, bool immediate = false, bool silent = false)
		{
			return default(UniTask<bool>);
		}

		[Token(Token = "0x6000CD1")]
		[Address(RVA = "0x1B89C54", Offset = "0x1B89C54", VA = "0x1B89C54")]
		[AsyncStateMachine(typeof(<SwitchTo>d__12))]
		public UniTask<bool> SwitchTo(string key, CancellationToken token, bool immediate = false, bool silent = false)
		{
			return default(UniTask<bool>);
		}

		[Token(Token = "0x6000CD2")]
		[Address(RVA = "0x1B8E254", Offset = "0x1B8E254", VA = "0x1B8E254")]
		[AsyncStateMachine(typeof(<BackUnsafe>d__13))]
		private UniTask<bool> BackUnsafe(CancellationToken token, bool immediate = false, bool silent = false)
		{
			return default(UniTask<bool>);
		}

		[Token(Token = "0x6000CD3")]
		[Address(RVA = "0x1B8E34C", Offset = "0x1B8E34C", VA = "0x1B8E34C")]
		[AsyncStateMachine(typeof(<SwitchToUnsafe>d__14))]
		private UniTask<bool> SwitchToUnsafe(string key, CancellationToken token, bool immediate = false, bool silent = false)
		{
			return default(UniTask<bool>);
		}

		[Token(Token = "0x6000CD4")]
		[Address(RVA = "0x1B8E45C", Offset = "0x1B8E45C", VA = "0x1B8E45C")]
		public TouchPanelRouter RootRouter()
		{
			return null;
		}

		[Token(Token = "0x6000CD5")]
		[Address(RVA = "0x1B8E4D4", Offset = "0x1B8E4D4", VA = "0x1B8E4D4", Slot = "4")]
		public void AutoSetUp()
		{
		}

		[Token(Token = "0x6000CD6")]
		[Address(RVA = "0x1B8EC14", Offset = "0x1B8EC14", VA = "0x1B8EC14")]
		public TouchPanelRouter()
		{
		}
	}
	[Token(Token = "0x200031B")]
	public class TouchPanelSoundManager : MonoBehaviour, IAutoSetUp
	{
		[Token(Token = "0x40010B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audio;

		[Token(Token = "0x40010B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip _openSound;

		[Token(Token = "0x40010B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip _backSound;

		[Token(Token = "0x40010B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _clickSound;

		[Token(Token = "0x40010B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Inject]
		private ISubscriber<TouchPanelActionData> _subscriber;

		[Token(Token = "0x40010B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private TouchPanelRouter _rootRouter;

		[Token(Token = "0x6000CEB")]
		[Address(RVA = "0x1B90E4C", Offset = "0x1B90E4C", VA = "0x1B90E4C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CEC")]
		[Address(RVA = "0x1B90FA0", Offset = "0x1B90FA0", VA = "0x1B90FA0", Slot = "4")]
		public void AutoSetUp()
		{
		}

		[Token(Token = "0x6000CED")]
		[Address(RVA = "0x1B90FF8", Offset = "0x1B90FF8", VA = "0x1B90FF8")]
		public TouchPanelSoundManager()
		{
		}
	}
	[Token(Token = "0x200031C")]
	public class TouchPanelTransition
	{
		[StructLayout(3)]
		[Token(Token = "0x200031D")]
		[CompilerGenerated]
		private struct <Transition>d__0 : IAsyncStateMachine
		{
			[Token(Token = "0x40010BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40010BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x40010BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OpenablePanelItem from;

			[Token(Token = "0x40010BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken token;

			[Token(Token = "0x40010BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool immediate;

			[Token(Token = "0x40010BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public OpenablePanelItem to;

			[Token(Token = "0x40010C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public int delay;

			[Token(Token = "0x40010C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private UniTask<bool>.Awaiter <>u__1;

			[Token(Token = "0x40010C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private UniTask<(bool, bool)>.Awaiter <>u__2;

			[Token(Token = "0x6000CF3")]
			[Address(RVA = "0x1B912EC", Offset = "0x1B912EC", VA = "0x1B912EC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000CF4")]
			[Address(RVA = "0x1B91A7C", Offset = "0x1B91A7C", VA = "0x1B91A7C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200031E")]
		[CompilerGenerated]
		private struct <CloseCanvas>d__1 : IAsyncStateMachine
		{
			[Token(Token = "0x40010C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40010C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x40010C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OpenablePanelItem panel;

			[Token(Token = "0x40010C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool immidiate;

			[Token(Token = "0x40010C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CancellationToken token;

			[Token(Token = "0x40010C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UniTask<bool>.Awaiter <>u__1;

			[Token(Token = "0x6000CF5")]
			[Address(RVA = "0x1B91AD4", Offset = "0x1B91AD4", VA = "0x1B91AD4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000CF6")]
			[Address(RVA = "0x1B91FB8", Offset = "0x1B91FB8", VA = "0x1B91FB8", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200031F")]
		[CompilerGenerated]
		private struct <OpenCanvas>d__2 : IAsyncStateMachine
		{
			[Token(Token = "0x40010C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40010CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x40010CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OpenablePanelItem panel;

			[Token(Token = "0x40010CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int delay;

			[Token(Token = "0x40010CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CancellationToken token;

			[Token(Token = "0x40010CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public bool immidiate;

			[Token(Token = "0x40010CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x40010D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private UniTask<bool>.Awaiter <>u__2;

			[Token(Token = "0x6000CF7")]
			[Address(RVA = "0x1B92010", Offset = "0x1B92010", VA = "0x1B92010", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000CF8")]
			[Address(RVA = "0x1B926F4", Offset = "0x1B926F4", VA = "0x1B926F4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x6000CEF")]
		[Address(RVA = "0x1B902B4", Offset = "0x1B902B4", VA = "0x1B902B4")]
		[AsyncStateMachine(typeof(<Transition>d__0))]
		public static UniTask<bool> Transition(OpenablePanelItem from, OpenablePanelItem to, CancellationToken token, bool immediate = false, int delay = 200)
		{
			return default(UniTask<bool>);
		}

		[Token(Token = "0x6000CF0")]
		[Address(RVA = "0x1B910FC", Offset = "0x1B910FC", VA = "0x1B910FC")]
		[AsyncStateMachine(typeof(<CloseCanvas>d__1))]
		private static UniTask<bool> CloseCanvas(OpenablePanelItem panel, bool immidiate, CancellationToken token)
		{
			return default(UniTask<bool>);
		}

		[Token(Token = "0x6000CF1")]
		[Address(RVA = "0x1B911E8", Offset = "0x1B911E8", VA = "0x1B911E8")]
		[AsyncStateMachine(typeof(<OpenCanvas>d__2))]
		private static UniTask<bool> OpenCanvas(OpenablePanelItem panel, bool immidiate, int delay, CancellationToken token)
		{
			return default(UniTask<bool>);
		}

		[Token(Token = "0x6000CF2")]
		[Address(RVA = "0x1B912E4", Offset = "0x1B912E4", VA = "0x1B912E4")]
		public TouchPanelTransition()
		{
		}
	}
}
namespace __Imacreate__.__Production__.Core.ThirdViewCamera
{
	[Token(Token = "0x2000320")]
	public class ThirdViewCameraController : MonoBehaviour
	{
		[Token(Token = "0x40010D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Rigidbody _rb;

		[Token(Token = "0x40010D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _moveSpeed;

		[Token(Token = "0x40010D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float _rotateSpeed;

		[Token(Token = "0x40010D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float _boost;

		[Token(Token = "0x40010D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 startPos;

		[Token(Token = "0x40010D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Quaternion startRot;

		[Token(Token = "0x40010D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Vector3> _wallTransforms;

		[Token(Token = "0x40010D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool _isMoveMode;

		[Token(Token = "0x40010D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 _prevPos;

		[Token(Token = "0x40010DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private string _sceneName;

		[Token(Token = "0x40010DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Inject]
		private GFSceneLoader _gfSceneLoader;

		[Token(Token = "0x17000112")]
		private float MoveSpeed
		{
			[Token(Token = "0x6000CF9")]
			[Address(RVA = "0x1B9274C", Offset = "0x1B9274C", VA = "0x1B9274C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000113")]
		private float RotateSpeed
		{
			[Token(Token = "0x6000CFA")]
			[Address(RVA = "0x1B92790", Offset = "0x1B92790", VA = "0x1B92790")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000CFB")]
		[Address(RVA = "0x1B927B4", Offset = "0x1B927B4", VA = "0x1B927B4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CFC")]
		[Address(RVA = "0x1B92ACC", Offset = "0x1B92ACC", VA = "0x1B92ACC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000CFD")]
		[Address(RVA = "0x1B92DAC", Offset = "0x1B92DAC", VA = "0x1B92DAC")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000CFE")]
		[Address(RVA = "0x1B93630", Offset = "0x1B93630", VA = "0x1B93630")]
		public void ResetTransform()
		{
		}

		[Token(Token = "0x6000CFF")]
		[Address(RVA = "0x1B92E3C", Offset = "0x1B92E3C", VA = "0x1B92E3C")]
		private void StartMove()
		{
		}

		[Token(Token = "0x6000D00")]
		[Address(RVA = "0x1B92E64", Offset = "0x1B92E64", VA = "0x1B92E64")]
		private void EndMove()
		{
		}

		[Token(Token = "0x6000D01")]
		[Address(RVA = "0x1B9367C", Offset = "0x1B9367C", VA = "0x1B9367C")]
		private void TryMove()
		{
		}

		[Token(Token = "0x6000D02")]
		[Address(RVA = "0x1B939F4", Offset = "0x1B939F4", VA = "0x1B939F4")]
		private void TryRotate()
		{
		}

		[Token(Token = "0x6000D03")]
		[Address(RVA = "0x1B92E6C", Offset = "0x1B92E6C", VA = "0x1B92E6C")]
		private void TryMoveRb()
		{
		}

		[Token(Token = "0x6000D04")]
		[Address(RVA = "0x1B931B4", Offset = "0x1B931B4", VA = "0x1B931B4")]
		private void TryRotateRb()
		{
		}

		[Token(Token = "0x6000D05")]
		[Address(RVA = "0x1B93424", Offset = "0x1B93424", VA = "0x1B93424")]
		private void AntiSlip()
		{
		}

		[Token(Token = "0x6000D06")]
		[Address(RVA = "0x1B93484", Offset = "0x1B93484", VA = "0x1B93484")]
		private bool CheckIfOutside()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D07")]
		[Address(RVA = "0x1B92B34", Offset = "0x1B92B34", VA = "0x1B92B34")]
		private void SaveTransform(string sceneId)
		{
		}

		[Token(Token = "0x6000D08")]
		[Address(RVA = "0x1B928E0", Offset = "0x1B928E0", VA = "0x1B928E0")]
		private (Vector3, Quaternion) LoadTransform(string sceneName)
		{
			return default((Vector3, Quaternion));
		}

		[Token(Token = "0x6000D09")]
		[Address(RVA = "0x1B93C38", Offset = "0x1B93C38", VA = "0x1B93C38")]
		private (Vector3, Quaternion) LoadTransform(GrooveFitGame grooveFitGame)
		{
			return default((Vector3, Quaternion));
		}

		[Token(Token = "0x6000D0A")]
		[Address(RVA = "0x1B93DD0", Offset = "0x1B93DD0", VA = "0x1B93DD0")]
		public ThirdViewCameraController()
		{
		}
	}
	[Token(Token = "0x2000321")]
	public class ThirdViewCameraManager : MonoBehaviour
	{
		[Token(Token = "0x6000D0B")]
		[Address(RVA = "0x1B93E44", Offset = "0x1B93E44", VA = "0x1B93E44")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D0C")]
		[Address(RVA = "0x1B93EB0", Offset = "0x1B93EB0", VA = "0x1B93EB0")]
		public ThirdViewCameraManager()
		{
		}
	}
}
namespace __Imacreate__.__Production__.Core.ScreenshotSystem
{
	[Token(Token = "0x2000322")]
	public class ScreenshotManager : SingletonMonoBehaviour<ScreenshotManager>
	{
		[StructLayout(3)]
		[Token(Token = "0x2000327")]
		[CompilerGenerated]
		private struct <CaptureScreenshot>d__13 : IAsyncStateMachine
		{
			[Token(Token = "0x40010FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40010FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x40010FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ScreenshotManager <>4__this;

			[Token(Token = "0x40010FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int width;

			[Token(Token = "0x40010FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public int height;

			[Token(Token = "0x40010FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private bool <lateCameraEnabled>5__2;

			[Token(Token = "0x4001100")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Texture2D <tex>5__3;

			[Token(Token = "0x4001101")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Cysharp.Threading.Tasks.YieldAwaitable.Awaiter <>u__1;

			[Token(Token = "0x4001102")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private UniTask.Awaiter <>u__2;

			[Token(Token = "0x6000D24")]
			[Address(RVA = "0x1B961B0", Offset = "0x1B961B0", VA = "0x1B961B0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000D25")]
			[Address(RVA = "0x1B96D20", Offset = "0x1B96D20", VA = "0x1B96D20", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000329")]
		[CompilerGenerated]
		private struct <ConvertTextureToPngAndSave>d__17 : IAsyncStateMachine
		{
			[Token(Token = "0x4001107")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001108")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001109")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ScreenshotManager <>4__this;

			[Token(Token = "0x400110A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string directoryPath;

			[Token(Token = "0x400110B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Texture2D texture;

			[Token(Token = "0x400110C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string fileSavePath;

			[Token(Token = "0x400110D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private byte[] <bytes>5__2;

			[Token(Token = "0x400110E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private FileStream <fs>5__3;

			[Token(Token = "0x400110F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Cysharp.Threading.Tasks.YieldAwaitable.Awaiter <>u__1;

			[Token(Token = "0x4001110")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private TaskAwaiter <>u__2;

			[Token(Token = "0x6000D2B")]
			[Address(RVA = "0x1B96E6C", Offset = "0x1B96E6C", VA = "0x1B96E6C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000D2C")]
			[Address(RVA = "0x1B974C8", Offset = "0x1B974C8", VA = "0x1B974C8", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x40010DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Inject]
		private MonitorMode _monitorMode;

		[Token(Token = "0x40010DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Inject]
		private ThirdViewCameraController _thirdViewCamera;

		[Token(Token = "0x40010DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Camera camera;

		[Token(Token = "0x40010E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly bool _dontDestroyOnLoad;

		[Token(Token = "0x40010E1")]
		private const string ENDROLLPHOTO = "Endroll";

		[Token(Token = "0x40010E2")]
		private const string PNG = ".png";

		[Token(Token = "0x40010E3")]
		private const int UPPER_LIMIT_SAVE_PICTURE = 4;

		[Token(Token = "0x17000114")]
		[Inject]
		private ISubscriber<string> OnActionMessage
		{
			[Token(Token = "0x6000D0D")]
			[Address(RVA = "0x1B93EB8", Offset = "0x1B93EB8", VA = "0x1B93EB8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D0E")]
			[Address(RVA = "0x1B93EC0", Offset = "0x1B93EC0", VA = "0x1B93EC0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000115")]
		protected override bool dontDestroyOnLoad
		{
			[Token(Token = "0x6000D18")]
			[Address(RVA = "0x1B94FC0", Offset = "0x1B94FC0", VA = "0x1B94FC0", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000D0F")]
		[Address(RVA = "0x1B93EC8", Offset = "0x1B93EC8", VA = "0x1B93EC8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D10")]
		[Address(RVA = "0x1B93FF4", Offset = "0x1B93FF4", VA = "0x1B93FF4")]
		public void CaptureScreenshotWithAsyncGPUReadback(int width = 1920, int height = 1080, bool isEndroll = false)
		{
		}

		[Token(Token = "0x6000D11")]
		[Address(RVA = "0x1B94168", Offset = "0x1B94168", VA = "0x1B94168")]
		[AsyncStateMachine(typeof(<CaptureScreenshot>d__13))]
		public UniTask CaptureScreenshot(int width = 1920, int height = 1080)
		{
			return default(UniTask);
		}

		[Token(Token = "0x6000D12")]
		[Address(RVA = "0x1B942DC", Offset = "0x1B942DC", VA = "0x1B942DC")]
		private string GetSaveFilePath(string folderName, string fileType)
		{
			return null;
		}

		[Token(Token = "0x6000D13")]
		[Address(RVA = "0x1B94390", Offset = "0x1B94390", VA = "0x1B94390")]
		private string GetSaveDirectoryPath(string folderName)
		{
			return null;
		}

		[Token(Token = "0x6000D14")]
		[Address(RVA = "0x1B9440C", Offset = "0x1B9440C", VA = "0x1B9440C")]
		private List<string> GetAllFileFromDirectory(string directoryName)
		{
			return null;
		}

		[Token(Token = "0x6000D15")]
		[Address(RVA = "0x1B946E4", Offset = "0x1B946E4", VA = "0x1B946E4")]
		[AsyncStateMachine(typeof(<ConvertTextureToPngAndSave>d__17))]
		private UniTask ConvertTextureToPngAndSave(Texture2D texture, string directoryPath, string fileSavePath)
		{
			return default(UniTask);
		}

		[Token(Token = "0x6000D16")]
		[Address(RVA = "0x1B9489C", Offset = "0x1B9489C", VA = "0x1B9489C")]
		public void ConvertToTextureAndLoad(Transform loadImagesParentTransform, string directoryPath)
		{
		}

		[Token(Token = "0x6000D17")]
		[Address(RVA = "0x1B94F48", Offset = "0x1B94F48", VA = "0x1B94F48")]
		public List<string> GetAllFileFromSceneName()
		{
			return null;
		}

		[Token(Token = "0x6000D19")]
		[Address(RVA = "0x1B94FC8", Offset = "0x1B94FC8", VA = "0x1B94FC8")]
		public ScreenshotManager()
		{
		}
	}
}
namespace __Imacreate__.__Production__.Core.SaveGameState
{
	[Serializable]
	[Token(Token = "0x200032A")]
	public class GFIGameClearStateChangeCondition
	{
		[Token(Token = "0x4001111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private List<GrooveFitGame> conditionGFs;

		[Token(Token = "0x17000116")]
		public List<GrooveFitGame> ConditionGFs
		{
			[Token(Token = "0x6000D2D")]
			[Address(RVA = "0x1B974D4", Offset = "0x1B974D4", VA = "0x1B974D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D2E")]
		[Address(RVA = "0x1B974DC", Offset = "0x1B974DC", VA = "0x1B974DC")]
		public bool IsChangeCondition(bool isDebug, GFIGameClearStateForDevelopmentDebug debugData)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D2F")]
		[Address(RVA = "0x1B9767C", Offset = "0x1B9767C", VA = "0x1B9767C")]
		public GFIGameClearStateChangeCondition()
		{
		}
	}
	[Token(Token = "0x200032B")]
	[CreateAssetMenu(fileName = "GFIGameClearStateForDevelopmentDebug", menuName = "ScriptableObjects/GFIGameClearStateForDevelopmentDebug", order = 0)]
	public class GFIGameClearStateForDevelopmentDebug : ScriptableObject
	{
		[Token(Token = "0x4001112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int GF0_TennisClearCount;

		[Token(Token = "0x4001113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int GF1_BoxingClearCount;

		[Token(Token = "0x4001114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int GF2_PizzaDeliveryClearCount;

		[Token(Token = "0x4001115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int GF4_WoodChopperClearCount;

		[Token(Token = "0x4001116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int GF10_FishingClearCount;

		[Token(Token = "0x4001117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int GF11_RugbyClearCount;

		[Token(Token = "0x4001118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int GF12_ParaParaClearCount;

		[Token(Token = "0x4001119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int GF18_SilverManClearCount;

		[Token(Token = "0x400111A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int GF22_KendamaClearCount;

		[Token(Token = "0x400111B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int GF23_GolfClearCount;

		[Token(Token = "0x400111C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int GF24_BaseballClearCount;

		[Token(Token = "0x400111D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int GF27_TableTennisClearCount;

		[Token(Token = "0x400111E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Dictionary<GrooveFitGame, int> GFIGameClearState;

		[Token(Token = "0x6000D30")]
		[Address(RVA = "0x1B97684", Offset = "0x1B97684", VA = "0x1B97684")]
		public Dictionary<GrooveFitGame, int> GetGFIGameClearStateForDevelopmentDebug()
		{
			return null;
		}

		[Token(Token = "0x6000D31")]
		[Address(RVA = "0x1B97820", Offset = "0x1B97820", VA = "0x1B97820")]
		public GFIGameClearStateForDevelopmentDebug()
		{
		}
	}
	[Token(Token = "0x200032C")]
	public class GFIGameClearStateManager : MonoBehaviour
	{
		[Token(Token = "0x400111F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<GFIGameClearState> gFIGameClearState;

		[Token(Token = "0x4001120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int currentGFIGameClearStateIndex;

		[Token(Token = "0x4001124")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly List<GameObject> releaseEffectSet;

		[Token(Token = "0x4001125")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject leftButton;

		[Token(Token = "0x4001126")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject rightButton;

		[Token(Token = "0x4001127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject endlessLever;

		[Token(Token = "0x4001128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Header("Debug")]
		[SerializeField]
		private bool _debugging;

		[Token(Token = "0x4001129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GFIGameClearStateForDevelopmentDebug _debugData;

		[Token(Token = "0x17000117")]
		public bool UpdateStateForTheFirstTime
		{
			[Token(Token = "0x6000D32")]
			[Address(RVA = "0x1B97828", Offset = "0x1B97828", VA = "0x1B97828")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D33")]
			[Address(RVA = "0x1B97830", Offset = "0x1B97830", VA = "0x1B97830")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000118")]
		public bool isAllGameCleared
		{
			[Token(Token = "0x6000D34")]
			[Address(RVA = "0x1B9783C", Offset = "0x1B9783C", VA = "0x1B9783C")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D35")]
			[Address(RVA = "0x1B97844", Offset = "0x1B97844", VA = "0x1B97844")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000119")]
		public bool isAllGameClearedForTheFirstTime
		{
			[Token(Token = "0x6000D36")]
			[Address(RVA = "0x1B97850", Offset = "0x1B97850", VA = "0x1B97850")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D37")]
			[Address(RVA = "0x1B97858", Offset = "0x1B97858", VA = "0x1B97858")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6000D38")]
		[Address(RVA = "0x1B97864", Offset = "0x1B97864", VA = "0x1B97864")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D39")]
		[Address(RVA = "0x1B97DD0", Offset = "0x1B97DD0", VA = "0x1B97DD0")]
		public GFIGameClearStateManager()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200032D")]
	public class GFIGameClearState
	{
		[Token(Token = "0x400112A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private List<GameObject> activateObjectsAtFirstTime;

		[Token(Token = "0x400112B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<GameObject> activateObjectsDiff;

		[Token(Token = "0x400112C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GFIGameClearStateChangeCondition gFIGameClearStateChangeCondition;

		[Token(Token = "0x6000D3A")]
		[Address(RVA = "0x1B97BAC", Offset = "0x1B97BAC", VA = "0x1B97BAC")]
		public void Behave(bool isFirstTime)
		{
		}

		[Token(Token = "0x6000D3B")]
		[Address(RVA = "0x1B97E60", Offset = "0x1B97E60", VA = "0x1B97E60")]
		public List<GameObject> GetReleaseEffectSet()
		{
			return null;
		}

		[Token(Token = "0x6000D3C")]
		[Address(RVA = "0x1B97E68", Offset = "0x1B97E68", VA = "0x1B97E68")]
		public GFIGameClearState()
		{
		}
	}
	[Token(Token = "0x200032E")]
	public class GrooveFitFirebaseData : SingletonMonoBehaviour<GrooveFitFirebaseData>
	{
		[Token(Token = "0x400112D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly bool _dontDestroyOnLoad;

		[Token(Token = "0x4001132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool isCountingGrooveFitMainGamePlayTime;

		[Token(Token = "0x1700011A")]
		protected override bool dontDestroyOnLoad
		{
			[Token(Token = "0x6000D3D")]
			[Address(RVA = "0x1B97E70", Offset = "0x1B97E70", VA = "0x1B97E70", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700011B")]
		public float grooveFitPlayTime
		{
			[Token(Token = "0x6000D3E")]
			[Address(RVA = "0x1B97E78", Offset = "0x1B97E78", VA = "0x1B97E78")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D3F")]
			[Address(RVA = "0x1B97E80", Offset = "0x1B97E80", VA = "0x1B97E80")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700011C")]
		public float grooveFitMainGamePlayTime
		{
			[Token(Token = "0x6000D40")]
			[Address(RVA = "0x1B97E88", Offset = "0x1B97E88", VA = "0x1B97E88")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D41")]
			[Address(RVA = "0x1B97E90", Offset = "0x1B97E90", VA = "0x1B97E90")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700011D")]
		public GameStatus.Status _currenStatus
		{
			[Token(Token = "0x6000D42")]
			[Address(RVA = "0x1B97E98", Offset = "0x1B97E98", VA = "0x1B97E98")]
			[CompilerGenerated]
			get
			{
				return default(GameStatus.Status);
			}
			[Token(Token = "0x6000D43")]
			[Address(RVA = "0x1B97EA0", Offset = "0x1B97EA0", VA = "0x1B97EA0")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700011E")]
		public string CurrentEventBlock
		{
			[Token(Token = "0x6000D44")]
			[Address(RVA = "0x1B97EA8", Offset = "0x1B97EA8", VA = "0x1B97EA8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D45")]
			[Address(RVA = "0x1B97EB0", Offset = "0x1B97EB0", VA = "0x1B97EB0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700011F")]
		[Inject]
		private ISubscriber<GameStatus> OnGameStatusChanged
		{
			[Token(Token = "0x6000D46")]
			[Address(RVA = "0x1B97EB8", Offset = "0x1B97EB8", VA = "0x1B97EB8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D47")]
			[Address(RVA = "0x1B97EC0", Offset = "0x1B97EC0", VA = "0x1B97EC0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6000D48")]
		[Address(RVA = "0x1B97EC8", Offset = "0x1B97EC8", VA = "0x1B97EC8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D49")]
		[Address(RVA = "0x1B97FF4", Offset = "0x1B97FF4", VA = "0x1B97FF4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D4A")]
		[Address(RVA = "0x1B9803C", Offset = "0x1B9803C", VA = "0x1B9803C")]
		public GFIAvatarType GetUsingAvatarType()
		{
			return default(GFIAvatarType);
		}

		[Token(Token = "0x6000D4B")]
		[Address(RVA = "0x1B9809C", Offset = "0x1B9809C", VA = "0x1B9809C")]
		public float GetPracticeTime()
		{
			return default(float);
		}

		[Token(Token = "0x6000D4C")]
		[Address(RVA = "0x1B980A8", Offset = "0x1B980A8", VA = "0x1B980A8")]
		public GrooveFitFirebaseData()
		{
		}
	}
}
namespace __Imacreate__.__Production__.Core.RestrictedString
{
	[Token(Token = "0x200032F")]
	public abstract class RestrictableKeyBase
	{
		[Token(Token = "0x6000D4E")]
		public abstract Type GetEnumType(string keyword);

		[Token(Token = "0x6000D4F")]
		[Address(RVA = "0x1B98154", Offset = "0x1B98154", VA = "0x1B98154")]
		protected RestrictableKeyBase()
		{
		}
	}
	[Token(Token = "0x2000330")]
	public abstract class RestrictedStringAttribute : UnityEngine.PropertyAttribute
	{
		[Token(Token = "0x6000D50")]
		public abstract string[] GetAvailableKeys();

		[Token(Token = "0x6000D51")]
		[Address(RVA = "0x1B9815C", Offset = "0x1B9815C", VA = "0x1B9815C")]
		protected RestrictedStringAttribute()
		{
		}
	}
	[Token(Token = "0x2000331")]
	public class RestrictedStringByActiveSceneAttribute : RestrictedStringAttribute
	{
		[Token(Token = "0x4001134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string[] _enumNames;

		[Token(Token = "0x6000D52")]
		[Address(RVA = "0x1B98164", Offset = "0x1B98164", VA = "0x1B98164", Slot = "7")]
		public override string[] GetAvailableKeys()
		{
			return null;
		}

		[Token(Token = "0x6000D53")]
		[Address(RVA = "0x1B9816C", Offset = "0x1B9816C", VA = "0x1B9816C")]
		public RestrictedStringByActiveSceneAttribute(Type typeofRestrictableKey)
		{
		}
	}
	[Token(Token = "0x2000332")]
	public class RestrictedStringByEnumAttribute : RestrictedStringAttribute
	{
		[Token(Token = "0x4001135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly string[] _keys;

		[Token(Token = "0x6000D54")]
		[Address(RVA = "0x1B98174", Offset = "0x1B98174", VA = "0x1B98174")]
		public RestrictedStringByEnumAttribute(Type typeofEnum)
		{
		}

		[Token(Token = "0x6000D55")]
		[Address(RVA = "0x1B981F4", Offset = "0x1B981F4", VA = "0x1B981F4")]
		public RestrictedStringByEnumAttribute(params Type[] typeofEnums)
		{
		}

		[Token(Token = "0x6000D56")]
		[Address(RVA = "0x1B98334", Offset = "0x1B98334", VA = "0x1B98334", Slot = "7")]
		public override string[] GetAvailableKeys()
		{
			return null;
		}
	}
}
namespace __Imacreate__.__Production__.Core.Physics
{
	[Token(Token = "0x2000334")]
	public class GFFixedDeltaTimeManager : MonoBehaviour
	{
		[Token(Token = "0x4001138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("If true, the fixed time step will be averaged by FPS")]
		public bool SmoothFixedTimeStep;

		[Token(Token = "0x4001139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Tooltip("Amount of frames to average time step over")]
		public int FrameSamples;

		[Token(Token = "0x400113A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("Minimum time step allowed")]
		public int MinTimeStep;

		[Token(Token = "0x400113B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Tooltip("Maximum time step allowed")]
		public int MaxTimeStep;

		[Token(Token = "0x400113C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CircularBuffer<float> _buffer;

		[Token(Token = "0x400113D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float averageFrameDelta;

		[Token(Token = "0x400113E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool _isPause;

		[Token(Token = "0x400113F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float timer;

		[Token(Token = "0x17000120")]
		private float RefreshRate
		{
			[Token(Token = "0x6000D5A")]
			[Address(RVA = "0x1B9840C", Offset = "0x1B9840C", VA = "0x1B9840C")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D5B")]
			[Address(RVA = "0x1B98414", Offset = "0x1B98414", VA = "0x1B98414")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000121")]
		[Inject]
		private ISubscriber<OnPause> OnPauseEvent
		{
			[Token(Token = "0x6000D5C")]
			[Address(RVA = "0x1B9841C", Offset = "0x1B9841C", VA = "0x1B9841C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D5D")]
			[Address(RVA = "0x1B98424", Offset = "0x1B98424", VA = "0x1B98424")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6000D5E")]
		[Address(RVA = "0x1B9842C", Offset = "0x1B9842C", VA = "0x1B9842C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D5F")]
		[Address(RVA = "0x1B985B8", Offset = "0x1B985B8", VA = "0x1B985B8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D60")]
		[Address(RVA = "0x1B9882C", Offset = "0x1B9882C", VA = "0x1B9882C")]
		private void SetTimeStep()
		{
		}

		[Token(Token = "0x6000D61")]
		[Address(RVA = "0x1B9886C", Offset = "0x1B9886C", VA = "0x1B9886C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000D62")]
		[Address(RVA = "0x1B98878", Offset = "0x1B98878", VA = "0x1B98878")]
		public GFFixedDeltaTimeManager()
		{
		}
	}
	[Token(Token = "0x2000335")]
	public class PlayerHandPhysicStateManager : MonoBehaviour
	{
		[Token(Token = "0x4001142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Inject]
		private InputProvider _inputProvider;

		[Token(Token = "0x17000122")]
		[Inject]
		private ISubscriber<GameStatus> OnChangeStatus
		{
			[Token(Token = "0x6000D64")]
			[Address(RVA = "0x1B988C0", Offset = "0x1B988C0", VA = "0x1B988C0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D65")]
			[Address(RVA = "0x1B988C8", Offset = "0x1B988C8", VA = "0x1B988C8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000123")]
		[Inject]
		private ISubscriber<OnPause> OnPauseEvent
		{
			[Token(Token = "0x6000D66")]
			[Address(RVA = "0x1B988D0", Offset = "0x1B988D0", VA = "0x1B988D0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D67")]
			[Address(RVA = "0x1B988D8", Offset = "0x1B988D8", VA = "0x1B988D8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6000D68")]
		[Address(RVA = "0x1B988E0", Offset = "0x1B988E0", VA = "0x1B988E0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D69")]
		[Address(RVA = "0x1B98AF8", Offset = "0x1B98AF8", VA = "0x1B98AF8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000D6A")]
		[Address(RVA = "0x1B98B7C", Offset = "0x1B98B7C", VA = "0x1B98B7C")]
		public PlayerHandPhysicStateManager()
		{
		}
	}
}
namespace __Imacreate__.__Production__.Core.ObjectAnimation
{
	[Token(Token = "0x2000336")]
	public class ObjectMover : MonoBehaviour
	{
		[Token(Token = "0x2000337")]
		private enum AnimationCase
		{
			[Token(Token = "0x400114C")]
			Path,
			[Token(Token = "0x400114D")]
			RoundTrip,
			[Token(Token = "0x400114E")]
			Loop
		}

		[Token(Token = "0x4001145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AnimationCase _animationCase;

		[Token(Token = "0x4001146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float animationInterval;

		[Token(Token = "0x4001147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("Path")]
		[SerializeField]
		private List<Vector3> pathTargets;

		[Token(Token = "0x4001148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Vector3 lookAtVector3;

		[Token(Token = "0x4001149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private Ease _easeType;

		[Token(Token = "0x400114A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Header("RoundTrip")]
		[SerializeField]
		private Vector3 target;

		[Token(Token = "0x6000D6D")]
		[Address(RVA = "0x1B98BDC", Offset = "0x1B98BDC", VA = "0x1B98BDC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D6E")]
		[Address(RVA = "0x1B98E4C", Offset = "0x1B98E4C", VA = "0x1B98E4C")]
		public ObjectMover()
		{
		}
	}
}
namespace __Imacreate__.__Production__.Core.MedleyIsland
{
	[Token(Token = "0x2000338")]
	public class MICostume : MIItem
	{
		[Token(Token = "0x6000D6F")]
		[Address(RVA = "0x1B98EB0", Offset = "0x1B98EB0", VA = "0x1B98EB0")]
		public MICostume()
		{
		}
	}
	[Token(Token = "0x2000339")]
	[CreateAssetMenu(fileName = "MICostumeBottoms", menuName = "ScriptableObjects/MICostume/MICostumeBottoms", order = 0)]
	public class MICostumeBottoms : MICostume
	{
		[Token(Token = "0x6000D70")]
		[Address(RVA = "0x1B98EC0", Offset = "0x1B98EC0", VA = "0x1B98EC0")]
		public MICostumeBottoms()
		{
		}
	}
	[Token(Token = "0x200033A")]
	[CreateAssetMenu(fileName = "MICostumeDataBase", menuName = "ScriptableObjects/MIDataBase/MICostumeDataBase", order = 0)]
	public class MICostumeDataBase : ScriptableObject
	{
		[Token(Token = "0x400114F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<MICostume> MICostume;

		[Token(Token = "0x6000D71")]
		[Address(RVA = "0x1B98EC8", Offset = "0x1B98EC8", VA = "0x1B98EC8")]
		public MICostumeDataBase()
		{
		}
	}
	[Token(Token = "0x200033B")]
	[CreateAssetMenu(fileName = "MICostumeHead", menuName = "ScriptableObjects/MICostume/MICostumeHead", order = 0)]
	public class MICostumeHead : MICostume
	{
		[Token(Token = "0x6000D72")]
		[Address(RVA = "0x1B98ED0", Offset = "0x1B98ED0", VA = "0x1B98ED0")]
		public MICostumeHead()
		{
		}
	}
	[Token(Token = "0x200033C")]
	[CreateAssetMenu(fileName = "MICostumeShoes", menuName = "ScriptableObjects/MICostume/MICostumeShoes", order = 0)]
	public class MICostumeShoes : MICostume
	{
		[Token(Token = "0x6000D73")]
		[Address(RVA = "0x1B98ED8", Offset = "0x1B98ED8", VA = "0x1B98ED8")]
		public MICostumeShoes()
		{
		}
	}
	[Token(Token = "0x200033D")]
	[CreateAssetMenu(fileName = "MICostumeTale", menuName = "ScriptableObjects/MICostume/MICostumeTale", order = 0)]
	public class MICostumeTale : MICostume
	{
		[Token(Token = "0x6000D74")]
		[Address(RVA = "0x1B98EE0", Offset = "0x1B98EE0", VA = "0x1B98EE0")]
		public MICostumeTale()
		{
		}
	}
	[Token(Token = "0x200033E")]
	[CreateAssetMenu(fileName = "MICostumeTops", menuName = "ScriptableObjects/MICostume/MICostumeTops", order = 0)]
	public class MICostumeTops : MICostume
	{
		[Token(Token = "0x6000D75")]
		[Address(RVA = "0x1B98EE8", Offset = "0x1B98EE8", VA = "0x1B98EE8")]
		public MICostumeTops()
		{
		}
	}
	[Token(Token = "0x200033F")]
	public class MIItem : ScriptableObject
	{
		[Token(Token = "0x4001150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public new MIItemName name;

		[Token(Token = "0x4001151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string multilingualTextKey;

		[Token(Token = "0x4001152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Sprite icon;

		[Token(Token = "0x4001153")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Texture[] textures;

		[Token(Token = "0x4001154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int price;

		[Token(Token = "0x4001155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int rarity;

		[Token(Token = "0x6000D76")]
		[Address(RVA = "0x1B98EB8", Offset = "0x1B98EB8", VA = "0x1B98EB8")]
		public MIItem()
		{
		}
	}
	[Token(Token = "0x2000340")]
	public enum MIItemName
	{
		[Token(Token = "0x4001157")]
		D_GnuBomb,
		[Token(Token = "0x4001158")]
		D_MuteSpeaker,
		[Token(Token = "0x4001159")]
		D_Mirror,
		[Token(Token = "0x400115A")]
		D_RocketGnu,
		[Token(Token = "0x400115B")]
		D_Heal
	}
	[Token(Token = "0x2000341")]
	[CreateAssetMenu(fileName = "MIItemDisc", menuName = "ScriptableObjects/MIItemDisc", order = 0)]
	public class MIItemDisc : MIItem
	{
		[Token(Token = "0x6000D77")]
		[Address(RVA = "0x1B98EF0", Offset = "0x1B98EF0", VA = "0x1B98EF0")]
		public MIItemDisc()
		{
		}
	}
	[Token(Token = "0x2000342")]
	[CreateAssetMenu(fileName = "MIItemDiscDataBase", menuName = "ScriptableObjects/MIDataBase/MIItemDiscDataBase", order = 0)]
	public class MIItemDiscDataBase : ScriptableObject
	{
		[Token(Token = "0x400115C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<MIItemDisc> MIItemDisc;

		[Token(Token = "0x6000D78")]
		[Address(RVA = "0x1B98EF8", Offset = "0x1B98EF8", VA = "0x1B98EF8")]
		public MIItemDiscDataBase()
		{
		}
	}
	[Token(Token = "0x2000343")]
	public static class MIItemManager
	{
		[Token(Token = "0x6000D79")]
		[Address(RVA = "0x1B98F00", Offset = "0x1B98F00", VA = "0x1B98F00")]
		public static void SaveMICostumeDictionary(Dictionary<string, bool> dictionary)
		{
		}

		[Token(Token = "0x6000D7A")]
		[Address(RVA = "0x1B98F4C", Offset = "0x1B98F4C", VA = "0x1B98F4C")]
		public static Dictionary<string, bool> LoadMICostumeDictionary()
		{
			return null;
		}

		[Token(Token = "0x6000D7B")]
		[Address(RVA = "0x1B98FD8", Offset = "0x1B98FD8", VA = "0x1B98FD8")]
		private static void SaveMIItemDiscDictionary(Dictionary<MIItemName, int> dictionary)
		{
		}

		[Token(Token = "0x6000D7C")]
		[Address(RVA = "0x1B99024", Offset = "0x1B99024", VA = "0x1B99024")]
		public static Dictionary<MIItemName, int> LoadMIItemDiscDictionary()
		{
			return null;
		}

		[Token(Token = "0x6000D7D")]
		[Address(RVA = "0x1B990B0", Offset = "0x1B990B0", VA = "0x1B990B0")]
		public static void AddMIItem(Dictionary<MIItemName, int> dictionary)
		{
		}

		[Token(Token = "0x6000D7E")]
		[Address(RVA = "0x1B992B4", Offset = "0x1B992B4", VA = "0x1B992B4")]
		public static bool SaveSelectedItemDiscList(MIItemName item1, MIItemName item2, MIItemName item3, MIItemName item4)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D7F")]
		[Address(RVA = "0x1B995D0", Offset = "0x1B995D0", VA = "0x1B995D0")]
		private static List<MIItemName> LoadSelectedItemDiscList()
		{
			return null;
		}

		[Token(Token = "0x6000D80")]
		[Address(RVA = "0x1B9965C", Offset = "0x1B9965C", VA = "0x1B9965C")]
		public static Dictionary<MIItemName, int> LoadSelectedItemDiscDictionaryWithConsumption()
		{
			return null;
		}

		[Token(Token = "0x6000D81")]
		[Address(RVA = "0x1B99900", Offset = "0x1B99900", VA = "0x1B99900")]
		public static void SaveMIItemRibbonDictionary(Dictionary<string, int> dictionary)
		{
		}

		[Token(Token = "0x6000D82")]
		[Address(RVA = "0x1B9994C", Offset = "0x1B9994C", VA = "0x1B9994C")]
		public static Dictionary<string, int> LoadMIItemRibbonDictionary()
		{
			return null;
		}
	}
	[Token(Token = "0x2000344")]
	public class MIItemMisanga
	{
		[Token(Token = "0x400115D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MIItemRibbon Ribbon1;

		[Token(Token = "0x400115E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MIItemRibbon Ribbon2;

		[Token(Token = "0x400115F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MIItemRibbon Ribbon3;

		[Token(Token = "0x6000D83")]
		[Address(RVA = "0x1B999D8", Offset = "0x1B999D8", VA = "0x1B999D8")]
		public MIItemMisanga()
		{
		}
	}
	[Token(Token = "0x2000345")]
	[CreateAssetMenu(fileName = "MIItemRibbon", menuName = "ScriptableObjects/MIItemRibbon", order = 0)]
	public class MIItemRibbon : MIItem
	{
		[Token(Token = "0x6000D84")]
		[Address(RVA = "0x1B999E0", Offset = "0x1B999E0", VA = "0x1B999E0")]
		public MIItemRibbon()
		{
		}
	}
	[Token(Token = "0x2000346")]
	[CreateAssetMenu(fileName = "MIItemRibbonDataBase", menuName = "ScriptableObjects/MIDataBase/MIItemRibbonDataBase", order = 0)]
	public class MIItemRibbonDataBase : ScriptableObject
	{
		[Token(Token = "0x4001160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<MIItemRibbon> MIItemRibbon;

		[Token(Token = "0x6000D85")]
		[Address(RVA = "0x1B999E8", Offset = "0x1B999E8", VA = "0x1B999E8")]
		public MIItemRibbonDataBase()
		{
		}
	}
	[Token(Token = "0x2000347")]
	public static class MIMisangaDataBaseManager
	{
		[Token(Token = "0x6000D86")]
		[Address(RVA = "0x1B999F0", Offset = "0x1B999F0", VA = "0x1B999F0")]
		public static void SaveMIItemMisangas(List<MIItemMisanga> misangas)
		{
		}

		[Token(Token = "0x6000D87")]
		[Address(RVA = "0x1B99A3C", Offset = "0x1B99A3C", VA = "0x1B99A3C")]
		public static List<MIItemMisanga> LoadMIItemMisangas()
		{
			return null;
		}
	}
	[Token(Token = "0x2000348")]
	public static class MIPlayerParamsManager
	{
		[Token(Token = "0x6000D88")]
		[Address(RVA = "0x1B99AC8", Offset = "0x1B99AC8", VA = "0x1B99AC8")]
		public static void SaveGroovePoint(float point)
		{
		}

		[Token(Token = "0x6000D89")]
		[Address(RVA = "0x1B99B1C", Offset = "0x1B99B1C", VA = "0x1B99B1C")]
		public static float LoadGroovePoint()
		{
			return default(float);
		}

		[Token(Token = "0x6000D8A")]
		[Address(RVA = "0x1B99B6C", Offset = "0x1B99B6C", VA = "0x1B99B6C")]
		public static void SaveMIRank(int rank)
		{
		}

		[Token(Token = "0x6000D8B")]
		[Address(RVA = "0x1B99BB8", Offset = "0x1B99BB8", VA = "0x1B99BB8")]
		public static int LoadMIRank()
		{
			return default(int);
		}

		[Token(Token = "0x6000D8C")]
		[Address(RVA = "0x1B99C00", Offset = "0x1B99C00", VA = "0x1B99C00")]
		public static void SaveOctave(int octave)
		{
		}

		[Token(Token = "0x6000D8D")]
		[Address(RVA = "0x1B99C4C", Offset = "0x1B99C4C", VA = "0x1B99C4C")]
		public static int LoadOctave()
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000349")]
	[CreateAssetMenu(fileName = "MITrophy", menuName = "ScriptableObjects/MITrophy", order = 0)]
	public class MITrophy : ScriptableObject
	{
		[Token(Token = "0x4001161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string key;

		[Token(Token = "0x4001162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public new string name;

		[Token(Token = "0x4001163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string description;

		[Token(Token = "0x4001164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string prefab;

		[Token(Token = "0x6000D8E")]
		[Address(RVA = "0x1B99C94", Offset = "0x1B99C94", VA = "0x1B99C94")]
		public MITrophy()
		{
		}
	}
	[Token(Token = "0x200034A")]
	[CreateAssetMenu(fileName = "MITrophyDataBase", menuName = "ScriptableObjects/MIDataBase/MITrophyDataBase", order = 0)]
	public class MITrophyDataBase : ScriptableObject
	{
		[Token(Token = "0x4001165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<MITrophy> trophies;

		[Token(Token = "0x6000D8F")]
		[Address(RVA = "0x1B99C9C", Offset = "0x1B99C9C", VA = "0x1B99C9C")]
		public MITrophyDataBase()
		{
		}
	}
	[Token(Token = "0x200034B")]
	public static class MITrophyManager
	{
		[Token(Token = "0x6000D90")]
		[Address(RVA = "0x1B99CA4", Offset = "0x1B99CA4", VA = "0x1B99CA4")]
		public static void SaveMITrophyDictionary(Dictionary<string, MITrophyStatus> dictionary)
		{
		}

		[Token(Token = "0x6000D91")]
		[Address(RVA = "0x1B99CF0", Offset = "0x1B99CF0", VA = "0x1B99CF0")]
		public static Dictionary<string, MITrophyStatus> LoadMITrophyDictionary()
		{
			return null;
		}
	}
	[Token(Token = "0x200034C")]
	public class MITrophyStatus
	{
		[Token(Token = "0x4001166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool unlocked;

		[Token(Token = "0x4001167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int unlockDate;

		[Token(Token = "0x6000D92")]
		[Address(RVA = "0x1B99D7C", Offset = "0x1B99D7C", VA = "0x1B99D7C")]
		public MITrophyStatus()
		{
		}
	}
}
namespace __Imacreate__.__Production__.Core.MedleyIsland.Debug
{
	[Token(Token = "0x200034D")]
	public class MIItemSaveDebugger : MonoBehaviour
	{
		[Token(Token = "0x4001168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MIItemDiscDataBase _dataBase;

		[Token(Token = "0x4001169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<MIItemName> items;

		[Token(Token = "0x6000D93")]
		[Address(RVA = "0x1B99D84", Offset = "0x1B99D84", VA = "0x1B99D84")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D94")]
		[Address(RVA = "0x1B9A048", Offset = "0x1B9A048", VA = "0x1B9A048")]
		public MIItemSaveDebugger()
		{
		}
	}
}
namespace __Imacreate__.__Production__.Core.Firebase
{
	[Token(Token = "0x200034F")]
	public static class FirebaseApiProvider
	{
		[StructLayout(3)]
		[Token(Token = "0x2000350")]
		[CompilerGenerated]
		private struct <CheckSignUp>d__3 : IAsyncStateMachine
		{
			[Token(Token = "0x4001170")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001171")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x4001172")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string userName;

			[Token(Token = "0x4001173")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken token;

			[Token(Token = "0x4001174")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask<UpdateProfileResponse>.Awaiter <>u__1;

			[Token(Token = "0x6000DAC")]
			[Address(RVA = "0x1B9B48C", Offset = "0x1B9B48C", VA = "0x1B9B48C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000DAD")]
			[Address(RVA = "0x1B9BAC8", Offset = "0x1B9BAC8", VA = "0x1B9BAC8", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000351")]
		[CompilerGenerated]
		private struct <AddPlayDataAndGetRanking>d__6 : IAsyncStateMachine
		{
			[Token(Token = "0x4001175")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001176")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<AddPlayDataResponse> <>t__builder;

			[Token(Token = "0x4001177")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GrooveFitGame game;

			[Token(Token = "0x4001178")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public GameStatus.Difficulty difficulty;

			[Token(Token = "0x4001179")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float calorie;

			[Token(Token = "0x400117A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public ScoreData scoreData;

			[Token(Token = "0x400117B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public GameStatus.OptionRule option_rule;

			[Token(Token = "0x400117C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public CancellationToken token;

			[Token(Token = "0x400117D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private UniTask<AddPlayDataResponse>.Awaiter <>u__1;

			[Token(Token = "0x6000DAE")]
			[Address(RVA = "0x1B9BB20", Offset = "0x1B9BB20", VA = "0x1B9BB20", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000DAF")]
			[Address(RVA = "0x1B9C0F0", Offset = "0x1B9C0F0", VA = "0x1B9C0F0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000352")]
		[CompilerGenerated]
		private struct <AddPlayDataAndGetRankingEndless>d__7 : IAsyncStateMachine
		{
			[Token(Token = "0x400117E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400117F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<AddPlayDataResponse> <>t__builder;

			[Token(Token = "0x4001180")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GrooveFitGame game;

			[Token(Token = "0x4001181")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public GameStatus.Difficulty difficulty;

			[Token(Token = "0x4001182")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float calorie;

			[Token(Token = "0x4001183")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public GameStatus.EndlessLifeType life_type;

			[Token(Token = "0x4001184")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public ScoreData scoreData;

			[Token(Token = "0x4001185")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public CancellationToken token;

			[Token(Token = "0x4001186")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private UniTask<AddPlayDataResponse>.Awaiter <>u__1;

			[Token(Token = "0x6000DB0")]
			[Address(RVA = "0x1B9C148", Offset = "0x1B9C148", VA = "0x1B9C148", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000DB1")]
			[Address(RVA = "0x1B9C6D0", Offset = "0x1B9C6D0", VA = "0x1B9C6D0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000353")]
		[CompilerGenerated]
		private struct <GetTopPlayers>d__8 : IAsyncStateMachine
		{
			[Token(Token = "0x4001187")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001188")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<List<RankingDataEntry>> <>t__builder;

			[Token(Token = "0x4001189")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GrooveFitGame game;

			[Token(Token = "0x400118A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public GameStatus.Difficulty difficulty;

			[Token(Token = "0x400118B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GameStatus.OptionRule optionRule;

			[Token(Token = "0x400118C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public GetTopPlayersRequest.SortType type;

			[Token(Token = "0x400118D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int count;

			[Token(Token = "0x400118E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public CancellationToken token;

			[Token(Token = "0x400118F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private UniTask<List<RankingDataEntry>>.Awaiter <>u__1;

			[Token(Token = "0x6000DB2")]
			[Address(RVA = "0x1B9C728", Offset = "0x1B9C728", VA = "0x1B9C728", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000DB3")]
			[Address(RVA = "0x1B9CC68", Offset = "0x1B9CC68", VA = "0x1B9CC68", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000354")]
		[CompilerGenerated]
		private struct <UpdateUserName>d__9 : IAsyncStateMachine
		{
			[Token(Token = "0x4001190")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001191")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<UpdateProfileResponse> <>t__builder;

			[Token(Token = "0x4001192")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CancellationToken token;

			[Token(Token = "0x4001193")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string newName;

			[Token(Token = "0x4001194")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask<IdTokenResponse>.Awaiter <>u__1;

			[Token(Token = "0x4001195")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private UniTask<UpdateProfileResponse>.Awaiter <>u__2;

			[Token(Token = "0x6000DB4")]
			[Address(RVA = "0x1B9CCC0", Offset = "0x1B9CCC0", VA = "0x1B9CCC0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000DB5")]
			[Address(RVA = "0x1B9D564", Offset = "0x1B9D564", VA = "0x1B9D564", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000355")]
		[CompilerGenerated]
		private struct <GetCalorieData>d__10 : IAsyncStateMachine
		{
			[Token(Token = "0x4001196")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001197")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<UserCalorieData> <>t__builder;

			[Token(Token = "0x4001198")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GrooveFitGame game;

			[Token(Token = "0x4001199")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken token;

			[Token(Token = "0x400119A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask<UserCalorieData>.Awaiter <>u__1;

			[Token(Token = "0x6000DB6")]
			[Address(RVA = "0x1B9D5BC", Offset = "0x1B9D5BC", VA = "0x1B9D5BC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000DB7")]
			[Address(RVA = "0x1B9DA74", Offset = "0x1B9DA74", VA = "0x1B9DA74", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000356")]
		[CompilerGenerated]
		private struct <GetCalorieDataPerDayInRecentDays>d__11 : IAsyncStateMachine
		{
			[Token(Token = "0x400119B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400119C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<List<List<PlayLogData>>> <>t__builder;

			[Token(Token = "0x400119D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CancellationToken token;

			[Token(Token = "0x400119E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int daysBack;

			[Token(Token = "0x400119F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask<List<List<PlayLogData>>>.Awaiter <>u__1;

			[Token(Token = "0x6000DB8")]
			[Address(RVA = "0x1B9DACC", Offset = "0x1B9DACC", VA = "0x1B9DACC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000DB9")]
			[Address(RVA = "0x1B9DFD0", Offset = "0x1B9DFD0", VA = "0x1B9DFD0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000357")]
		[CompilerGenerated]
		private struct <GetCalorieDataOnSpecificDay>d__12 : IAsyncStateMachine
		{
			[Token(Token = "0x40011A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40011A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<List<PlayLogData>> <>t__builder;

			[Token(Token = "0x40011A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DateTime dateTime;

			[Token(Token = "0x40011A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken token;

			[Token(Token = "0x40011A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask<List<PlayLogData>>.Awaiter <>u__1;

			[Token(Token = "0x6000DBA")]
			[Address(RVA = "0x1B9E028", Offset = "0x1B9E028", VA = "0x1B9E028", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000DBB")]
			[Address(RVA = "0x1B9E4C8", Offset = "0x1B9E4C8", VA = "0x1B9E4C8", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000358")]
		[CompilerGenerated]
		private struct <StoreAnalyticsLanguage>d__13 : IAsyncStateMachine
		{
			[Token(Token = "0x40011A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40011A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x40011A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public CancellationToken token;

			[Token(Token = "0x40011A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6000DBC")]
			[Address(RVA = "0x1B9E520", Offset = "0x1B9E520", VA = "0x1B9E520", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000DBD")]
			[Address(RVA = "0x1B9E95C", Offset = "0x1B9E95C", VA = "0x1B9E95C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000359")]
		[CompilerGenerated]
		private struct <StoreAnalyticsPauseSkip>d__14 : IAsyncStateMachine
		{
			[Token(Token = "0x40011A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40011AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x40011AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GrooveFitGame game;

			[Token(Token = "0x40011AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public GameStatus.Difficulty difficulty;

			[Token(Token = "0x40011AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameStatus.OptionRule optionRule;

			[Token(Token = "0x40011AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string currentEvent;

			[Token(Token = "0x40011AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float totalTime;

			[Token(Token = "0x40011B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public CancellationToken token;

			[Token(Token = "0x40011B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6000DBE")]
			[Address(RVA = "0x1B9E968", Offset = "0x1B9E968", VA = "0x1B9E968", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000DBF")]
			[Address(RVA = "0x1B9EDD0", Offset = "0x1B9EDD0", VA = "0x1B9EDD0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200035A")]
		[CompilerGenerated]
		private struct <StoreAnalyticsPauseHome>d__15 : IAsyncStateMachine
		{
			[Token(Token = "0x40011B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40011B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x40011B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GrooveFitGame game;

			[Token(Token = "0x40011B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public GameStatus.Difficulty difficulty;

			[Token(Token = "0x40011B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameStatus.OptionRule optionRule;

			[Token(Token = "0x40011B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string currentEvent;

			[Token(Token = "0x40011B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public GameStatus.Status currentStatus;

			[Token(Token = "0x40011B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float totalTime;

			[Token(Token = "0x40011BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float playTime;

			[Token(Token = "0x40011BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public CancellationToken token;

			[Token(Token = "0x40011BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6000DC0")]
			[Address(RVA = "0x1B9EDDC", Offset = "0x1B9EDDC", VA = "0x1B9EDDC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000DC1")]
			[Address(RVA = "0x1B9F2A4", Offset = "0x1B9F2A4", VA = "0x1B9F2A4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200035B")]
		[CompilerGenerated]
		private struct <StoreAchievement>d__16 : IAsyncStateMachine
		{
			[Token(Token = "0x40011BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40011BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x40011BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Dictionary<string, ValueType> values;

			[Token(Token = "0x40011C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CancellationToken token;

			[Token(Token = "0x40011C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private AchievementDoc <achievement>5__2;

			[Token(Token = "0x40011C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private List<string> <maskFields>5__3;

			[Token(Token = "0x40011C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private FirebaseUserInfo <userInfo>5__4;

			[Token(Token = "0x40011C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private UniTask<IdTokenResponse>.Awaiter <>u__1;

			[Token(Token = "0x40011C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private UniTask.Awaiter <>u__2;

			[Token(Token = "0x6000DC2")]
			[Address(RVA = "0x1B9F2B0", Offset = "0x1B9F2B0", VA = "0x1B9F2B0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000DC3")]
			[Address(RVA = "0x1B9FB40", Offset = "0x1B9FB40", VA = "0x1B9FB40", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200035C")]
		[CompilerGenerated]
		private struct <GetAchievement>d__17 : IAsyncStateMachine
		{
			[Token(Token = "0x40011C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40011C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<AchievementFields> <>t__builder;

			[Token(Token = "0x40011C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CancellationToken token;

			[Token(Token = "0x40011C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private FirebaseUserInfo <userInfo>5__2;

			[Token(Token = "0x40011CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask<IdTokenResponse>.Awaiter <>u__1;

			[Token(Token = "0x40011CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private UniTask<string>.Awaiter <>u__2;

			[Token(Token = "0x6000DC4")]
			[Address(RVA = "0x1B9FB4C", Offset = "0x1B9FB4C", VA = "0x1B9FB4C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000DC5")]
			[Address(RVA = "0x1BA0438", Offset = "0x1BA0438", VA = "0x1BA0438", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200035D")]
		[CompilerGenerated]
		private struct <CreateUserDocument>d__18 : IAsyncStateMachine
		{
			[Token(Token = "0x40011CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40011CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x40011CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public CancellationToken token;

			[Token(Token = "0x40011CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private FirebaseUserInfo <userInfo>5__2;

			[Token(Token = "0x40011D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private UniTask<IdTokenResponse>.Awaiter <>u__1;

			[Token(Token = "0x40011D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private UniTask.Awaiter <>u__2;

			[Token(Token = "0x6000DC6")]
			[Address(RVA = "0x1BA0490", Offset = "0x1BA0490", VA = "0x1BA0490", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000DC7")]
			[Address(RVA = "0x1BA0BE0", Offset = "0x1BA0BE0", VA = "0x1BA0BE0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200035E")]
		[CompilerGenerated]
		private struct <GetTwitterAuthLink>d__19 : IAsyncStateMachine
		{
			[Token(Token = "0x40011D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40011D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<TwitterAuthLinkResponse> <>t__builder;

			[Token(Token = "0x40011D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CancellationToken token;

			[Token(Token = "0x40011D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private UniTask<TwitterAuthLinkResponse>.Awaiter <>u__1;

			[Token(Token = "0x6000DC8")]
			[Address(RVA = "0x1BA0BEC", Offset = "0x1BA0BEC", VA = "0x1BA0BEC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000DC9")]
			[Address(RVA = "0x1BA117C", Offset = "0x1BA117C", VA = "0x1BA117C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200035F")]
		[CompilerGenerated]
		private struct <AuthorizeTwitterOauthPin>d__20 : IAsyncStateMachine
		{
			[Token(Token = "0x40011D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40011D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<TwitterOAuthPinResponse> <>t__builder;

			[Token(Token = "0x40011D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string twitterPinCode;

			[Token(Token = "0x40011D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken token;

			[Token(Token = "0x40011DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask<TwitterOAuthPinResponse>.Awaiter <>u__1;

			[Token(Token = "0x6000DCA")]
			[Address(RVA = "0x1BA11D4", Offset = "0x1BA11D4", VA = "0x1BA11D4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000DCB")]
			[Address(RVA = "0x1BA16F8", Offset = "0x1BA16F8", VA = "0x1BA16F8", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000360")]
		[CompilerGenerated]
		private struct <PostTweetWithImage>d__21 : IAsyncStateMachine
		{
			[Token(Token = "0x40011DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40011DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<TwitterPostTweetResponse> <>t__builder;

			[Token(Token = "0x40011DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public byte[] bytes;

			[Token(Token = "0x40011DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string tweetText;

			[Token(Token = "0x40011DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CancellationToken token;

			[Token(Token = "0x40011E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UniTask<TwitterPostTweetResponse>.Awaiter <>u__1;

			[Token(Token = "0x6000DCC")]
			[Address(RVA = "0x19AAAB0", Offset = "0x19AAAB0", VA = "0x19AAAB0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000DCD")]
			[Address(RVA = "0x19AAFD8", Offset = "0x19AAFD8", VA = "0x19AAFD8", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x400116D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static FirebaseApi _api;

		[Token(Token = "0x400116E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static FirebaseTokenManager _tokenManager;

		[Token(Token = "0x400116F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static FirebaseUserInfo _userInfo;

		[Token(Token = "0x6000D99")]
		[Address(RVA = "0x1B9A30C", Offset = "0x1B9A30C", VA = "0x1B9A30C")]
		[AsyncStateMachine(typeof(<CheckSignUp>d__3))]
		public static UniTask<bool> CheckSignUp(string userName, CancellationToken token)
		{
			return default(UniTask<bool>);
		}

		[Token(Token = "0x6000D9A")]
		[Address(RVA = "0x1B9A3EC", Offset = "0x1B9A3EC", VA = "0x1B9A3EC")]
		private static FirebaseUserInfo GetUserInfo()
		{
			return null;
		}

		[Token(Token = "0x6000D9B")]
		[Address(RVA = "0x1B9A468", Offset = "0x1B9A468", VA = "0x1B9A468")]
		private static void SetUserInfo(FirebaseUserInfo user)
		{
		}

		[Token(Token = "0x6000D9C")]
		[Address(RVA = "0x1B9A4E0", Offset = "0x1B9A4E0", VA = "0x1B9A4E0")]
		[AsyncStateMachine(typeof(<AddPlayDataAndGetRanking>d__6))]
		public static UniTask<AddPlayDataResponse> AddPlayDataAndGetRanking(GrooveFitGame game, GameStatus.Difficulty difficulty, ScoreData scoreData, float calorie, GameStatus.OptionRule option_rule, CancellationToken token)
		{
			return default(UniTask<AddPlayDataResponse>);
		}

		[Token(Token = "0x6000D9D")]
		[Address(RVA = "0x1B9A610", Offset = "0x1B9A610", VA = "0x1B9A610")]
		[AsyncStateMachine(typeof(<AddPlayDataAndGetRankingEndless>d__7))]
		public static UniTask<AddPlayDataResponse> AddPlayDataAndGetRankingEndless(GrooveFitGame game, GameStatus.Difficulty difficulty, ScoreData scoreData, float calorie, GameStatus.EndlessLifeType life_type, CancellationToken token)
		{
			return default(UniTask<AddPlayDataResponse>);
		}

		[Token(Token = "0x6000D9E")]
		[Address(RVA = "0x1B9A740", Offset = "0x1B9A740", VA = "0x1B9A740")]
		[AsyncStateMachine(typeof(<GetTopPlayers>d__8))]
		public static UniTask<List<RankingDataEntry>> GetTopPlayers(GrooveFitGame game, GameStatus.Difficulty difficulty, GameStatus.OptionRule optionRule, GetTopPlayersRequest.SortType type, int count, CancellationToken token)
		{
			return default(UniTask<List<RankingDataEntry>>);
		}

		[Token(Token = "0x6000D9F")]
		[Address(RVA = "0x1B9A854", Offset = "0x1B9A854", VA = "0x1B9A854")]
		[AsyncStateMachine(typeof(<UpdateUserName>d__9))]
		public static UniTask<UpdateProfileResponse> UpdateUserName(string newName, CancellationToken token)
		{
			return default(UniTask<UpdateProfileResponse>);
		}

		[Token(Token = "0x6000DA0")]
		[Address(RVA = "0x1B9A94C", Offset = "0x1B9A94C", VA = "0x1B9A94C")]
		[AsyncStateMachine(typeof(<GetCalorieData>d__10))]
		public static UniTask<UserCalorieData> GetCalorieData(GrooveFitGame game, CancellationToken token)
		{
			return default(UniTask<UserCalorieData>);
		}

		[Token(Token = "0x6000DA1")]
		[Address(RVA = "0x1B9AA34", Offset = "0x1B9AA34", VA = "0x1B9AA34")]
		[AsyncStateMachine(typeof(<GetCalorieDataPerDayInRecentDays>d__11))]
		public static UniTask<List<List<PlayLogData>>> GetCalorieDataPerDayInRecentDays(CancellationToken token, int daysBack)
		{
			return default(UniTask<List<List<PlayLogData>>>);
		}

		[Token(Token = "0x6000DA2")]
		[Address(RVA = "0x1B9AB20", Offset = "0x1B9AB20", VA = "0x1B9AB20")]
		[AsyncStateMachine(typeof(<GetCalorieDataOnSpecificDay>d__12))]
		public static UniTask<List<PlayLogData>> GetCalorieDataOnSpecificDay(DateTime dateTime, CancellationToken token)
		{
			return default(UniTask<List<PlayLogData>>);
		}

		[Token(Token = "0x6000DA3")]
		[Address(RVA = "0x1B9AC04", Offset = "0x1B9AC04", VA = "0x1B9AC04")]
		[AsyncStateMachine(typeof(<StoreAnalyticsLanguage>d__13))]
		public static UniTask StoreAnalyticsLanguage(CancellationToken token)
		{
			return default(UniTask);
		}

		[Token(Token = "0x6000DA4")]
		[Address(RVA = "0x1B9AD60", Offset = "0x1B9AD60", VA = "0x1B9AD60")]
		[AsyncStateMachine(typeof(<StoreAnalyticsPauseSkip>d__14))]
		public static UniTask StoreAnalyticsPauseSkip(GrooveFitGame game, GameStatus.Difficulty difficulty, GameStatus.OptionRule optionRule, string currentEvent, float totalTime, CancellationToken token)
		{
			return default(UniTask);
		}

		[Token(Token = "0x6000DA5")]
		[Address(RVA = "0x1B9AF08", Offset = "0x1B9AF08", VA = "0x1B9AF08")]
		[AsyncStateMachine(typeof(<StoreAnalyticsPauseHome>d__15))]
		public static UniTask StoreAnalyticsPauseHome(GrooveFitGame game, GameStatus.Difficulty difficulty, GameStatus.OptionRule optionRule, string currentEvent, GameStatus.Status currentStatus, float totalTime, float playTime, CancellationToken token)
		{
			return default(UniTask);
		}

		[Token(Token = "0x6000DA6")]
		[Address(RVA = "0x1B9B0CC", Offset = "0x1B9B0CC", VA = "0x1B9B0CC")]
		[AsyncStateMachine(typeof(<StoreAchievement>d__16))]
		public static UniTask StoreAchievement(Dictionary<string, ValueType> values, CancellationToken token)
		{
			return default(UniTask);
		}

		[Token(Token = "0x6000DA7")]
		[Address(RVA = "0x1B9B250", Offset = "0x1B9B250", VA = "0x1B9B250")]
		[AsyncStateMachine(typeof(<GetAchievement>d__17))]
		public static UniTask<AchievementFields> GetAchievement(CancellationToken token)
		{
			return default(UniTask<AchievementFields>);
		}

		[Token(Token = "0x6000DA8")]
		[Address(RVA = "0x1B9B32C", Offset = "0x1B9B32C", VA = "0x1B9B32C")]
		[AsyncStateMachine(typeof(<CreateUserDocument>d__18))]
		public static UniTask CreateUserDocument(CancellationToken token)
		{
			return default(UniTask);
		}

		[Token(Token = "0x6000DA9")]
		[Address(RVA = "0x1B859C0", Offset = "0x1B859C0", VA = "0x1B859C0")]
		[AsyncStateMachine(typeof(<GetTwitterAuthLink>d__19))]
		public static UniTask<TwitterAuthLinkResponse> GetTwitterAuthLink(CancellationToken token, bool isForce = false)
		{
			return default(UniTask<TwitterAuthLinkResponse>);
		}

		[Token(Token = "0x6000DAA")]
		[Address(RVA = "0x1B85EFC", Offset = "0x1B85EFC", VA = "0x1B85EFC")]
		[AsyncStateMachine(typeof(<AuthorizeTwitterOauthPin>d__20))]
		public static UniTask<TwitterOAuthPinResponse> AuthorizeTwitterOauthPin(string twitterPinCode, CancellationToken token)
		{
			return default(UniTask<TwitterOAuthPinResponse>);
		}

		[Token(Token = "0x6000DAB")]
		[Address(RVA = "0x1B872E8", Offset = "0x1B872E8", VA = "0x1B872E8")]
		[AsyncStateMachine(typeof(<PostTweetWithImage>d__21))]
		public static UniTask<TwitterPostTweetResponse> PostTweetWithImage(string tweetText, byte[] bytes, CancellationToken token)
		{
			return default(UniTask<TwitterPostTweetResponse>);
		}
	}
	[Token(Token = "0x2000361")]
	internal static class FirebaseHandlingErrorAsync
	{
		[StructLayout(3)]
		[Token(Token = "0x2000362")]
		[CompilerGenerated]
		private struct <RunTaskHandlingErrorAsync>d__0 : IAsyncStateMachine
		{
			[Token(Token = "0x40011E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40011E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x40011E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public UniTask task;

			[Token(Token = "0x40011E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string successMessage;

			[Token(Token = "0x40011E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6000DD0")]
			[Address(RVA = "0x19AB1C0", Offset = "0x19AB1C0", VA = "0x19AB1C0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000DD1")]
			[Address(RVA = "0x19AB694", Offset = "0x19AB694", VA = "0x19AB694", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x6000DCE")]
		[Address(RVA = "0x19AB030", Offset = "0x19AB030", VA = "0x19AB030")]
		[AsyncStateMachine(typeof(<RunTaskHandlingErrorAsync>d__0))]
		public static UniTask RunTaskHandlingErrorAsync(this UniTask task, [Optional] string successMessage)
		{
			return default(UniTask);
		}

		[Token(Token = "0x6000DCF")]
		[Address(RVA = "0x19AB1AC", Offset = "0x19AB1AC", VA = "0x19AB1AC")]
		public static void RunTaskHandlingError(this UniTask task, [Optional] string successMessage)
		{
		}
	}
	[Token(Token = "0x2000363")]
	public class GameAnalyticsSender : SingletonMonoBehaviour<GameAnalyticsSender>
	{
		[Token(Token = "0x40011E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Inject]
		private MultilingualTextManager _multilingualTextManager;

		[Token(Token = "0x40011E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly bool _dontDestroyOnLoad;

		[Token(Token = "0x17000124")]
		protected override bool dontDestroyOnLoad
		{
			[Token(Token = "0x6000DD2")]
			[Address(RVA = "0x19AB6A0", Offset = "0x19AB6A0", VA = "0x19AB6A0", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000DD3")]
		[Address(RVA = "0x19AB6A8", Offset = "0x19AB6A8", VA = "0x19AB6A8")]
		public void StoreAnalyticsPauseSkip()
		{
		}

		[Token(Token = "0x6000DD4")]
		[Address(RVA = "0x19AB6AC", Offset = "0x19AB6AC", VA = "0x19AB6AC")]
		public void StoreAnalyticsPauseHome(GameStatus.Status currentStatus)
		{
		}

		[Token(Token = "0x6000DD5")]
		[Address(RVA = "0x19AB6B0", Offset = "0x19AB6B0", VA = "0x19AB6B0")]
		public GameAnalyticsSender()
		{
		}
	}
	[Token(Token = "0x2000364")]
	public class ResultDataManager : MonoBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x2000369")]
		[CompilerGenerated]
		private struct <AddPlayDataAndGetTopScores>d__10 : IAsyncStateMachine
		{
			[Token(Token = "0x4001206")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001207")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001208")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ResultDataManager <>4__this;

			[Token(Token = "0x4001209")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ScoreData scoreData;

			[Token(Token = "0x400120A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CalorieData calorieData;

			[Token(Token = "0x400120B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CancellationToken token;

			[Token(Token = "0x400120C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6000DE4")]
			[Address(RVA = "0x19ADC8C", Offset = "0x19ADC8C", VA = "0x19ADC8C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000DE5")]
			[Address(RVA = "0x19AE100", Offset = "0x19AE100", VA = "0x19AE100", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200036C")]
		[CompilerGenerated]
		private struct <GetTopPlayers>d__11 : IAsyncStateMachine
		{
			[Token(Token = "0x4001213")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001214")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<List<RankingDataEntry>> <>t__builder;

			[Token(Token = "0x4001215")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GetTopPlayersRequest.SortType sortType;

			[Token(Token = "0x4001216")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken token;

			[Token(Token = "0x4001217")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask<List<RankingDataEntry>>.Awaiter <>u__1;

			[Token(Token = "0x6000DEA")]
			[Address(RVA = "0x19AE7AC", Offset = "0x19AE7AC", VA = "0x19AE7AC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000DEB")]
			[Address(RVA = "0x19AEC80", Offset = "0x19AEC80", VA = "0x19AEC80", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[NonSerialized]
		[Token(Token = "0x40011E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool _finishedGetList;

		[NonSerialized]
		[Token(Token = "0x40011E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool _errorOccured;

		[NonSerialized]
		[Token(Token = "0x40011EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int _rankedInNum;

		[NonSerialized]
		[Token(Token = "0x40011EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<AddPlayDataResponse.ScoreRankingUser> _scoreList;

		[Token(Token = "0x40011EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Header("Top Score Debug (Available only DEVELOPMENT)")]
		[SerializeField]
		private CongratulationsEffectManager _congratulateEffect;

		[Token(Token = "0x40011ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool _congratulate;

		[Token(Token = "0x40011EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[SerializeField]
		private bool _useDebugLists;

		[Token(Token = "0x40011EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private List<AddPlayDataResponse.ScoreRankingUser> _debugScoreLists;

		[Token(Token = "0x40011F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private List<RankingDataEntry> _debugCalorieLists;

		[Token(Token = "0x6000DD6")]
		[Address(RVA = "0x19AB6F8", Offset = "0x19AB6F8", VA = "0x19AB6F8")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6000DD7")]
		[Address(RVA = "0x19AB704", Offset = "0x19AB704", VA = "0x19AB704")]
		[AsyncStateMachine(typeof(<AddPlayDataAndGetTopScores>d__10))]
		public UniTask AddPlayDataAndGetTopScores(ScoreData scoreData, CalorieData calorieData, CancellationToken token)
		{
			return default(UniTask);
		}

		[Token(Token = "0x6000DD8")]
		[Address(RVA = "0x19AB8B8", Offset = "0x19AB8B8", VA = "0x19AB8B8")]
		[AsyncStateMachine(typeof(<GetTopPlayers>d__11))]
		public UniTask<List<RankingDataEntry>> GetTopPlayers(GetTopPlayersRequest.SortType sortType, CancellationToken token)
		{
			return default(UniTask<List<RankingDataEntry>>);
		}

		[Token(Token = "0x6000DD9")]
		[Address(RVA = "0x19AB9A0", Offset = "0x19AB9A0", VA = "0x19AB9A0")]
		public ResultDataManager()
		{
		}
	}
}
namespace __Imacreate__.__Production__.Core.DeviceType
{
	[Token(Token = "0x200036D")]
	[CreateAssetMenu(fileName = "DeviceTypeObjectSettings", menuName = "ScriptableObjects/DeviceTypeObjectSettings", order = 0)]
	public class DeviceTypeObjectSettings : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x200036E")]
		public class DeviceTypeObjects
		{
			[Token(Token = "0x4001221")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Sprite pauseIcon;

			[Token(Token = "0x4001222")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Texture controllerIcon0;

			[Token(Token = "0x4001223")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Texture controllerIcon1;

			[Token(Token = "0x6000DEF")]
			[Address(RVA = "0x19AEEF8", Offset = "0x19AEEF8", VA = "0x19AEEF8")]
			public DeviceTypeObjects()
			{
			}
		}

		[Token(Token = "0x4001218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DeviceTypeObjects defaultSetting;

		[Token(Token = "0x4001219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DeviceTypeObjects oculusQuest;

		[Token(Token = "0x400121A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public DeviceTypeObjects oculusRift;

		[Token(Token = "0x400121B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public DeviceTypeObjects vive;

		[Token(Token = "0x400121C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public DeviceTypeObjects valveIndex;

		[Token(Token = "0x400121D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public DeviceTypeObjects viveCosmos;

		[Token(Token = "0x400121E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public DeviceTypeObjects winMR;

		[Token(Token = "0x400121F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public DeviceTypeObjects picoNeo3;

		[Token(Token = "0x4001220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public DeviceTypeObjects pico4;

		[Token(Token = "0x6000DEC")]
		[Address(RVA = "0x19AECD8", Offset = "0x19AECD8", VA = "0x19AECD8")]
		public (Sprite, VRDeviceType.HMD) GetPauseIcon()
		{
			return default((Sprite, VRDeviceType.HMD));
		}

		[Token(Token = "0x6000DED")]
		[Address(RVA = "0x19AEDF4", Offset = "0x19AEDF4", VA = "0x19AEDF4")]
		public (Texture, Texture) GetControllerIcons()
		{
			return default((Texture, Texture));
		}

		[Token(Token = "0x6000DEE")]
		[Address(RVA = "0x19AEEF0", Offset = "0x19AEEF0", VA = "0x19AEEF0")]
		public DeviceTypeObjectSettings()
		{
		}
	}
	[Token(Token = "0x200036F")]
	public static class VRDeviceType
	{
		[Token(Token = "0x2000370")]
		public enum HMD
		{
			[Token(Token = "0x4001227")]
			OculusQuest = 0,
			[Token(Token = "0x4001228")]
			OculusQuest2 = 1,
			[Token(Token = "0x4001229")]
			Rift = 2,
			[Token(Token = "0x400122A")]
			RiftS = 8,
			[Token(Token = "0x400122B")]
			OculusLinkByQuest = 3,
			[Token(Token = "0x400122C")]
			OculusLinkByQuest2 = 9,
			[Token(Token = "0x400122D")]
			HTCVive = 4,
			[Token(Token = "0x400122E")]
			HTCVivePro = 5,
			[Token(Token = "0x400122F")]
			ViveCosmos = 10,
			[Token(Token = "0x4001230")]
			ValveIndex = 6,
			[Token(Token = "0x4001231")]
			WinMR = 7,
			[Token(Token = "0x4001232")]
			Varjo = 11,
			[Token(Token = "0x4001233")]
			PicoNeo3 = 12,
			[Token(Token = "0x4001234")]
			Pico4 = 13,
			[Token(Token = "0x4001235")]
			PicoOther = 14,
			[Token(Token = "0x4001236")]
			none = 15
		}

		[Token(Token = "0x2000371")]
		public enum VRController
		{
			[Token(Token = "0x4001238")]
			vive_controller,
			[Token(Token = "0x4001239")]
			vive_cosmos_controller,
			[Token(Token = "0x400123A")]
			oculus_touch,
			[Token(Token = "0x400123B")]
			knuckles,
			[Token(Token = "0x400123C")]
			holographic_controller,
			[Token(Token = "0x400123D")]
			none,
			[Token(Token = "0x400123E")]
			pico_neo_3_link_controller
		}

		[Token(Token = "0x4001225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static VRController CurrentControllers;

		[Token(Token = "0x17000125")]
		public static HMD CurrentHmd
		{
			[Token(Token = "0x6000DF0")]
			[Address(RVA = "0x19AEF00", Offset = "0x19AEF00", VA = "0x19AEF00")]
			[CompilerGenerated]
			get
			{
				return default(HMD);
			}
			[Token(Token = "0x6000DF1")]
			[Address(RVA = "0x19AEF48", Offset = "0x19AEF48", VA = "0x19AEF48")]
			[CompilerGenerated]
			set
			{
			}
		}
	}
}
namespace __Imacreate__.__Production__.Core.Debugging
{
	[Token(Token = "0x2000372")]
	public class DebugOverlayManager : MonoBehaviour
	{
		[Token(Token = "0x400123F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TextMeshProUGUI _statusText;

		[Token(Token = "0x6000DF2")]
		[Address(RVA = "0x19AEF94", Offset = "0x19AEF94", VA = "0x19AEF94")]
		private void Start()
		{
		}

		[Token(Token = "0x6000DF3")]
		[Address(RVA = "0x19AF0AC", Offset = "0x19AF0AC", VA = "0x19AF0AC")]
		public DebugOverlayManager()
		{
		}
	}
	[Token(Token = "0x2000373")]
	public class GrooveFitDebugSettings : MonoBehaviour
	{
		[Token(Token = "0x4001240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool _useDebugLanguage;

		[Token(Token = "0x4001241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private LanguageSetting.Language _language;

		[Token(Token = "0x4001242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Inject]
		private MultilingualTextManager _multilingualTextManager;

		[Token(Token = "0x6000DF4")]
		[Address(RVA = "0x19AF0B4", Offset = "0x19AF0B4", VA = "0x19AF0B4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000DF5")]
		[Address(RVA = "0x19AF0B8", Offset = "0x19AF0B8", VA = "0x19AF0B8")]
		public GrooveFitDebugSettings()
		{
		}
	}
}
namespace __Imacreate__.__Production__.Core.Character
{
	[Token(Token = "0x2000374")]
	public class CharacterActionBlock : EventBlock
	{
		[StructLayout(3)]
		[Token(Token = "0x2000375")]
		[CompilerGenerated]
		private struct <SetEvent>d__3 : IAsyncStateMachine
		{
			[Token(Token = "0x4001246")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001247")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x4001248")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CancellationToken token;

			[Token(Token = "0x4001249")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CharacterActionBlock <>4__this;

			[Token(Token = "0x400124A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6000DF8")]
			[Address(RVA = "0x19AF1A4", Offset = "0x19AF1A4", VA = "0x19AF1A4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000DF9")]
			[Address(RVA = "0x19AF8B8", Offset = "0x19AF8B8", VA = "0x19AF8B8", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[RestrictedStringByActiveScene(typeof(CharacterActionKey))]
		private string _actionKey;

		[Token(Token = "0x4001244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float delayAfterPublish;

		[Token(Token = "0x4001245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Inject]
		private IPublisher<CharacterActionData> _publisher;

		[Token(Token = "0x6000DF6")]
		[Address(RVA = "0x19AF0C0", Offset = "0x19AF0C0", VA = "0x19AF0C0", Slot = "4")]
		[AsyncStateMachine(typeof(<SetEvent>d__3))]
		public override UniTask<bool> SetEvent(CancellationToken token)
		{
			return default(UniTask<bool>);
		}

		[Token(Token = "0x6000DF7")]
		[Address(RVA = "0x19AF19C", Offset = "0x19AF19C", VA = "0x19AF19C")]
		public CharacterActionBlock()
		{
		}
	}
	[Token(Token = "0x2000376")]
	public class CharacterActionKey : RestrictableKeyBase
	{
		[Token(Token = "0x2000377")]
		public enum RhythmTennisCharacterActionKey
		{
			[Token(Token = "0x400124C")]
			TakozoTalk,
			[Token(Token = "0x400124D")]
			TakozoMoveToTennisPosition,
			[Token(Token = "0x400124E")]
			TakozoReset
		}

		[Token(Token = "0x2000378")]
		public enum PizzaDeliveryCharacterActionKey
		{
			[Token(Token = "0x4001250")]
			KamemaruTalk,
			[Token(Token = "0x4001251")]
			KamemaruFistPump,
			[Token(Token = "0x4001252")]
			KamemaruHeadTurn,
			[Token(Token = "0x4001253")]
			KamemaruArmGesture,
			[Token(Token = "0x4001254")]
			KamemaruRightBend,
			[Token(Token = "0x4001255")]
			KamemaruLeftBend,
			[Token(Token = "0x4001256")]
			KamemaruBendUp,
			[Token(Token = "0x4001257")]
			KamemaruRaiseHands,
			[Token(Token = "0x4001258")]
			KamemaruDropHands,
			[Token(Token = "0x4001259")]
			ScooterTurnToPlayer,
			[Token(Token = "0x400125A")]
			ScooterTurnForward,
			[Token(Token = "0x400125B")]
			KamemaruPrepareGame,
			[Token(Token = "0x400125C")]
			KamemaruPrepareConversation,
			[Token(Token = "0x400125D")]
			KamemaruReset
		}

		[Token(Token = "0x2000379")]
		public enum BoxingFrogCharacterActionKey
		{
			[Token(Token = "0x400125F")]
			Talk,
			[Token(Token = "0x4001260")]
			ThreeShotPunch,
			[Token(Token = "0x4001261")]
			Upper,
			[Token(Token = "0x4001262")]
			Reset
		}

		[Token(Token = "0x200037A")]
		public enum WoodChopperCharacterActionKey
		{
			[Token(Token = "0x4001264")]
			RedAgree,
			[Token(Token = "0x4001265")]
			RedHand,
			[Token(Token = "0x4001266")]
			RedGrabAndDown,
			[Token(Token = "0x4001267")]
			RedHit,
			[Token(Token = "0x4001268")]
			DeactivateMaki
		}

		[Token(Token = "0x200037B")]
		public enum OpeningCharactorActionKey
		{
			[Token(Token = "0x400126A")]
			LeoTalk,
			[Token(Token = "0x400126B")]
			LeoThink,
			[Token(Token = "0x400126C")]
			LeoShakeHandsWithSmile,
			[Token(Token = "0x400126D")]
			LeoSurprised,
			[Token(Token = "0x400126E")]
			LeoSmile,
			[Token(Token = "0x400126F")]
			LeoUsualFace,
			[Token(Token = "0x4001270")]
			LeoReset
		}

		[Token(Token = "0x200037C")]
		public enum RugbyFrogCharacterActionKey
		{
			[Token(Token = "0x4001272")]
			ConversationBlock_0_0,
			[Token(Token = "0x4001273")]
			ConversationBlock_0_1,
			[Token(Token = "0x4001274")]
			ConversationBlock_0_2,
			[Token(Token = "0x4001275")]
			ConversationBlock_0_3,
			[Token(Token = "0x4001276")]
			ConversationBlock_1_0,
			[Token(Token = "0x4001277")]
			ConversationBlock_1_1,
			[Token(Token = "0x4001278")]
			ConversationBlock_1_2,
			[Token(Token = "0x4001279")]
			ConversationBlock_2_0,
			[Token(Token = "0x400127A")]
			ConversationBlock_2_1,
			[Token(Token = "0x400127B")]
			ConversationBlock_2_2
		}

		[Token(Token = "0x200037D")]
		public enum FishingCharacterActionKey
		{
			[Token(Token = "0x400127D")]
			Talk,
			[Token(Token = "0x400127E")]
			FistPump,
			[Token(Token = "0x400127F")]
			Reset
		}

		[Token(Token = "0x200037E")]
		public enum KendamaCharacterActionKey
		{
			[Token(Token = "0x4001281")]
			Rally,
			[Token(Token = "0x4001282")]
			CheerStart,
			[Token(Token = "0x4001283")]
			CheerEnd,
			[Token(Token = "0x4001284")]
			Talk,
			[Token(Token = "0x4001285")]
			Smile,
			[Token(Token = "0x4001286")]
			Jump,
			[Token(Token = "0x4001287")]
			Step,
			[Token(Token = "0x4001288")]
			Reset
		}

		[Token(Token = "0x200037F")]
		public enum ParaParaCharacterActionKey
		{
			[Token(Token = "0x400128A")]
			Nagashi,
			[Token(Token = "0x400128B")]
			Habataki,
			[Token(Token = "0x400128C")]
			TonTon,
			[Token(Token = "0x400128D")]
			Finish,
			[Token(Token = "0x400128E")]
			NormalFace,
			[Token(Token = "0x400128F")]
			Hello,
			[Token(Token = "0x4001290")]
			Me,
			[Token(Token = "0x4001291")]
			Play,
			[Token(Token = "0x4001292")]
			Good,
			[Token(Token = "0x4001293")]
			VeryGood,
			[Token(Token = "0x4001294")]
			Emo,
			[Token(Token = "0x4001295")]
			BadFace,
			[Token(Token = "0x4001296")]
			OKFace,
			[Token(Token = "0x4001297")]
			GreatFace
		}

		[Token(Token = "0x2000380")]
		public enum BaseballCharacterActionKey
		{
			[Token(Token = "0x4001299")]
			None
		}

		[Token(Token = "0x2000381")]
		public enum TableTennisCharacterActionKey
		{
			[Token(Token = "0x400129B")]
			Talk
		}

		[Token(Token = "0x2000382")]
		public enum GolfCharacterActionKey
		{
			[Token(Token = "0x400129D")]
			WavingArm,
			[Token(Token = "0x400129E")]
			HandsBack,
			[Token(Token = "0x400129F")]
			RightHandOnChest,
			[Token(Token = "0x40012A0")]
			FistUp,
			[Token(Token = "0x40012A1")]
			Surprise,
			[Token(Token = "0x40012A2")]
			Peace,
			[Token(Token = "0x40012A3")]
			Nod,
			[Token(Token = "0x40012A4")]
			EndWavingArm
		}

		[Token(Token = "0x6000DFA")]
		[Address(RVA = "0x19AF910", Offset = "0x19AF910", VA = "0x19AF910", Slot = "4")]
		public override Type GetEnumType(string keyword)
		{
			return null;
		}

		[Token(Token = "0x6000DFB")]
		[Address(RVA = "0x19AFD20", Offset = "0x19AFD20", VA = "0x19AFD20")]
		public CharacterActionKey()
		{
		}
	}
	[Token(Token = "0x2000383")]
	public class CharacterActionOnConversation : MonoBehaviour
	{
		[Token(Token = "0x40012A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ConversationBlockEvent _conversationBlockEvent;

		[Token(Token = "0x40012A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[RestrictedStringByActiveScene(typeof(CharacterActionKey))]
		private string _actionKey;

		[Token(Token = "0x40012A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Inject]
		private IPublisher<CharacterActionData> _publisher;

		[Token(Token = "0x6000DFC")]
		[Address(RVA = "0x19AFD28", Offset = "0x19AFD28", VA = "0x19AFD28")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000DFD")]
		[Address(RVA = "0x19AFDD8", Offset = "0x19AFDD8", VA = "0x19AFDD8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000DFE")]
		[Address(RVA = "0x19AFEDC", Offset = "0x19AFEDC", VA = "0x19AFEDC")]
		private void PublishActionKey(CancellationToken token)
		{
		}

		[Token(Token = "0x6000DFF")]
		[Address(RVA = "0x19AFFD8", Offset = "0x19AFFD8", VA = "0x19AFFD8")]
		public CharacterActionOnConversation()
		{
		}
	}
	[Token(Token = "0x2000384")]
	public class CharacterMaterialChangerToPlatform : MonoBehaviour
	{
		[Token(Token = "0x40012A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Material[] _matsForSteam;

		[Token(Token = "0x40012A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Material[] _matsForQuest;

		[Token(Token = "0x40012AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool _previewInEditor;

		[Token(Token = "0x40012AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private XRReleasePlatformSettings.ReleasePlatform _previewPlatform;

		[Token(Token = "0x40012AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _skinedMesh;

		[Token(Token = "0x40012AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Material[] _materials;

		[Token(Token = "0x40012AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Renderer _renderer;

		[Token(Token = "0x40012AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private SkinnedMeshRenderer _skinnedMeshRenderer;

		[Token(Token = "0x6000E00")]
		[Address(RVA = "0x19AFFE0", Offset = "0x19AFFE0", VA = "0x19AFFE0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E01")]
		[Address(RVA = "0x19AFFE4", Offset = "0x19AFFE4", VA = "0x19AFFE4")]
		private void SetMaterials()
		{
		}

		[Token(Token = "0x6000E02")]
		[Address(RVA = "0x19B0348", Offset = "0x19B0348", VA = "0x19B0348")]
		public CharacterMaterialChangerToPlatform()
		{
		}
	}
}
namespace __Imacreate__.__Production__.Core.Buttons
{
	[Token(Token = "0x2000385")]
	public class SnareDrumButtonManager : PushButtonManager
	{
		[StructLayout(3)]
		[Token(Token = "0x2000386")]
		[CompilerGenerated]
		private struct <Awake>d__12 : IAsyncStateMachine
		{
			[Token(Token = "0x40012BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40012BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40012BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SnareDrumButtonManager <>4__this;

			[Token(Token = "0x40012BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6000E0F")]
			[Address(RVA = "0x19B0ED8", Offset = "0x19B0ED8", VA = "0x19B0ED8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000E10")]
			[Address(RVA = "0x19B1314", Offset = "0x19B1314", VA = "0x19B1314", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000387")]
		[CompilerGenerated]
		private struct <Activate>d__14 : IAsyncStateMachine
		{
			[Token(Token = "0x40012BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40012BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x40012C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SnareDrumButtonManager <>4__this;

			[Token(Token = "0x40012C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private DOTweenAsyncExtensions.TweenAwaiter <>u__1;

			[Token(Token = "0x6000E11")]
			[Address(RVA = "0x19B1320", Offset = "0x19B1320", VA = "0x19B1320", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000E12")]
			[Address(RVA = "0x19B17D0", Offset = "0x19B17D0", VA = "0x19B17D0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000388")]
		[CompilerGenerated]
		private struct <Deactivate>d__15 : IAsyncStateMachine
		{
			[Token(Token = "0x40012C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40012C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x40012C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SnareDrumButtonManager <>4__this;

			[Token(Token = "0x40012C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x40012C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private DOTweenAsyncExtensions.TweenAwaiter <>u__2;

			[Token(Token = "0x6000E13")]
			[Address(RVA = "0x19B17DC", Offset = "0x19B17DC", VA = "0x19B17DC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000E14")]
			[Address(RVA = "0x19B1EA4", Offset = "0x19B1EA4", VA = "0x19B1EA4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x40012B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[Header("Snare Drum Setting")]
		[SerializeField]
		private float _delay;

		[Token(Token = "0x40012B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private MeshRenderer _drumPart;

		[Token(Token = "0x40012B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private GameObject _particle;

		[Token(Token = "0x40012B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private AnimationCurve _activateCurve;

		[Token(Token = "0x40012B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private AnimationCurve _deactivateCurve;

		[Token(Token = "0x40012B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Sequence _sequence;

		[Token(Token = "0x40012B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Tweener _scalingTweener;

		[Token(Token = "0x40012B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly ReactiveProperty<bool> isAllButtonEnabled;

		[Token(Token = "0x40012B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private bool isButtonEnabled;

		[Token(Token = "0x40012B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Material buttonSurface;

		[Token(Token = "0x6000E03")]
		[Address(RVA = "0x19B0350", Offset = "0x19B0350", VA = "0x19B0350")]
		public static void AllButtonSetActive(bool isEnabled)
		{
		}

		[Token(Token = "0x6000E04")]
		[Address(RVA = "0x19B03D0", Offset = "0x19B03D0", VA = "0x19B03D0")]
		public void SetActiveWithColor(bool isEnabled)
		{
		}

		[Token(Token = "0x6000E05")]
		[Address(RVA = "0x19B04D8", Offset = "0x19B04D8", VA = "0x19B04D8", Slot = "4")]
		[AsyncStateMachine(typeof(<Awake>d__12))]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000E06")]
		[Address(RVA = "0x19B058C", Offset = "0x19B058C", VA = "0x19B058C", Slot = "6")]
		protected override void OnButtonDown()
		{
		}

		[Token(Token = "0x6000E07")]
		[Address(RVA = "0x19B08B0", Offset = "0x19B08B0", VA = "0x19B08B0")]
		[AsyncStateMachine(typeof(<Activate>d__14))]
		public UniTask Activate()
		{
			return default(UniTask);
		}

		[Token(Token = "0x6000E08")]
		[Address(RVA = "0x19B0A0C", Offset = "0x19B0A0C", VA = "0x19B0A0C")]
		[AsyncStateMachine(typeof(<Deactivate>d__15))]
		public UniTask Deactivate()
		{
			return default(UniTask);
		}

		[Token(Token = "0x6000E09")]
		[Address(RVA = "0x19B0B6C", Offset = "0x19B0B6C", VA = "0x19B0B6C")]
		public void DeactivateImmediately()
		{
		}

		[Token(Token = "0x6000E0A")]
		[Address(RVA = "0x19B0C24", Offset = "0x19B0C24", VA = "0x19B0C24")]
		private void SetLoop()
		{
		}

		[Token(Token = "0x6000E0B")]
		[Address(RVA = "0x19B0DC8", Offset = "0x19B0DC8", VA = "0x19B0DC8")]
		public SnareDrumButtonManager()
		{
		}
	}
}
namespace __Imacreate__.__Production__.GrooveFitGames.GF4_WoodChopper
{
	[Token(Token = "0x2000389")]
	public class AxeHaptics : MonoBehaviour
	{
		[Token(Token = "0x40012C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Inject]
		private InputProvider _inputProvider;

		[Token(Token = "0x6000E15")]
		[Address(RVA = "0x19B1EB0", Offset = "0x19B1EB0", VA = "0x19B1EB0")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000E16")]
		[Address(RVA = "0x19B1F10", Offset = "0x19B1F10", VA = "0x19B1F10")]
		public AxeHaptics()
		{
		}
	}
	[Token(Token = "0x200038A")]
	public class CatchAxeEvent : EventBlock
	{
		[StructLayout(3)]
		[Token(Token = "0x200038B")]
		[CompilerGenerated]
		private struct <SetEvent>d__9 : IAsyncStateMachine
		{
			[Token(Token = "0x40012D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40012D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x40012D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CatchAxeEvent <>4__this;

			[Token(Token = "0x40012D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken token;

			[Token(Token = "0x40012D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6000E1A")]
			[Address(RVA = "0x19B217C", Offset = "0x19B217C", VA = "0x19B217C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000E1B")]
			[Address(RVA = "0x19B2574", Offset = "0x19B2574", VA = "0x19B2574", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200038C")]
		[CompilerGenerated]
		private struct <AxeCatchAsync>d__10 : IAsyncStateMachine
		{
			[Token(Token = "0x40012D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40012D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x40012D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public CatchAxeEvent <>4__this;

			[Token(Token = "0x40012D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CancellationToken token;

			[Token(Token = "0x40012DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6000E1C")]
			[Address(RVA = "0x19B25CC", Offset = "0x19B25CC", VA = "0x19B25CC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000E1D")]
			[Address(RVA = "0x19B3188", Offset = "0x19B3188", VA = "0x19B3188", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x40012C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool _selected;

		[Token(Token = "0x40012C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float _axeDistanceRightHand;

		[Token(Token = "0x40012CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float _axeDistanceLeftHand;

		[Token(Token = "0x40012CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _axe;

		[Token(Token = "0x40012CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioSource _audio;

		[Token(Token = "0x40012CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AudioClip _grabSound;

		[Token(Token = "0x40012CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private WoodChopperCheckBothHand _checkBothHand;

		[Token(Token = "0x40012CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GrabAxeController _grabAxeController;

		[Token(Token = "0x40012D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Inject]
		private InputProvider _inputProvider;

		[Token(Token = "0x6000E17")]
		[Address(RVA = "0x19B1F18", Offset = "0x19B1F18", VA = "0x19B1F18", Slot = "4")]
		[AsyncStateMachine(typeof(<SetEvent>d__9))]
		public override UniTask<bool> SetEvent(CancellationToken token)
		{
			return default(UniTask<bool>);
		}

		[Token(Token = "0x6000E18")]
		[Address(RVA = "0x19B1FF4", Offset = "0x19B1FF4", VA = "0x19B1FF4")]
		[AsyncStateMachine(typeof(<AxeCatchAsync>d__10))]
		private UniTask AxeCatchAsync(CancellationToken token)
		{
			return default(UniTask);
		}

		[Token(Token = "0x6000E19")]
		[Address(RVA = "0x19B2174", Offset = "0x19B2174", VA = "0x19B2174")]
		public CatchAxeEvent()
		{
		}
	}
	[Token(Token = "0x200038D")]
	public class FixPostionFromCalivrationData : MonoBehaviour
	{
		[Token(Token = "0x40012DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _distanceValue;

		[Token(Token = "0x40012DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _defaultArmLength;

		[Token(Token = "0x40012DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float _calibrationArmLength;

		[Token(Token = "0x6000E1E")]
		[Address(RVA = "0x19B3194", Offset = "0x19B3194", VA = "0x19B3194")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E1F")]
		[Address(RVA = "0x19B3260", Offset = "0x19B3260", VA = "0x19B3260")]
		public FixPostionFromCalivrationData()
		{
		}
	}
	[Token(Token = "0x200038E")]
	public class GrabAxeController : MonoBehaviour
	{
		[Token(Token = "0x40012DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Inject]
		private InputProvider _inputProvider;

		[Token(Token = "0x40012E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _isGrabAxe;

		[Token(Token = "0x40012E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private VRHand.HandType _grabHand;

		[Token(Token = "0x17000126")]
		[Inject]
		private ISubscriber<OnPause> OnPauseEvent
		{
			[Token(Token = "0x6000E20")]
			[Address(RVA = "0x19B3274", Offset = "0x19B3274", VA = "0x19B3274")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E21")]
			[Address(RVA = "0x19B327C", Offset = "0x19B327C", VA = "0x19B327C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6000E22")]
		[Address(RVA = "0x19B3284", Offset = "0x19B3284", VA = "0x19B3284")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E23")]
		[Address(RVA = "0x19B2ED4", Offset = "0x19B2ED4", VA = "0x19B2ED4")]
		public void SaveGrabAxeHand(VRHand.HandType hand)
		{
		}

		[Token(Token = "0x6000E24")]
		[Address(RVA = "0x19B33B0", Offset = "0x19B33B0", VA = "0x19B33B0")]
		public void ChangeGrabAxeHand(bool active)
		{
		}

		[Token(Token = "0x6000E25")]
		[Address(RVA = "0x19B33EC", Offset = "0x19B33EC", VA = "0x19B33EC")]
		public GrabAxeController()
		{
		}
	}
	[Token(Token = "0x200038F")]
	public class JudgeText : MonoBehaviour
	{
		[Token(Token = "0x17000127")]
		[Inject]
		private ISubscriber<FPActionData> OnFPAction
		{
			[Token(Token = "0x6000E27")]
			[Address(RVA = "0x19B3460", Offset = "0x19B3460", VA = "0x19B3460")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E28")]
			[Address(RVA = "0x19B3468", Offset = "0x19B3468", VA = "0x19B3468")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6000E29")]
		[Address(RVA = "0x19B3470", Offset = "0x19B3470", VA = "0x19B3470")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E2A")]
		[Address(RVA = "0x19B359C", Offset = "0x19B359C", VA = "0x19B359C")]
		public JudgeText()
		{
		}
	}
	[Token(Token = "0x2000390")]
	public class RedAxeController : MonoBehaviour
	{
		[Token(Token = "0x40012E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _axeForRed;

		[Token(Token = "0x40012E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _onGame;

		[Token(Token = "0x17000128")]
		[Inject]
		private ISubscriber<OnMusicGame> OnMusicGameMessage
		{
			[Token(Token = "0x6000E2C")]
			[Address(RVA = "0x19B366C", Offset = "0x19B366C", VA = "0x19B366C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E2D")]
			[Address(RVA = "0x19B3674", Offset = "0x19B3674", VA = "0x19B3674")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6000E2E")]
		[Address(RVA = "0x19B367C", Offset = "0x19B367C", VA = "0x19B367C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E2F")]
		[Address(RVA = "0x19B37A8", Offset = "0x19B37A8", VA = "0x19B37A8")]
		public RedAxeController()
		{
		}
	}
	[Token(Token = "0x2000391")]
	public class RedChangeAnimatorController : MonoBehaviour
	{
		[Token(Token = "0x40012E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animator _animator;

		[Token(Token = "0x40012E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private RuntimeAnimatorController _conversationController;

		[Token(Token = "0x40012E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private RuntimeAnimatorController _inGameContoroller;

		[Token(Token = "0x40012E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private LookAtIK _lookAtIK;

		[Token(Token = "0x40012EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool _onGmae;

		[Token(Token = "0x17000129")]
		[Inject]
		private ISubscriber<OnMusicGame> OnMusicGameMessage
		{
			[Token(Token = "0x6000E31")]
			[Address(RVA = "0x19B37E4", Offset = "0x19B37E4", VA = "0x19B37E4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E32")]
			[Address(RVA = "0x19B37EC", Offset = "0x19B37EC", VA = "0x19B37EC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700012A")]
		[Inject]
		private ISubscriber<CharacterActionData> OnCharacterAction
		{
			[Token(Token = "0x6000E33")]
			[Address(RVA = "0x19B37F4", Offset = "0x19B37F4", VA = "0x19B37F4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E34")]
			[Address(RVA = "0x19B37FC", Offset = "0x19B37FC", VA = "0x19B37FC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6000E35")]
		[Address(RVA = "0x19B3804", Offset = "0x19B3804", VA = "0x19B3804")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E36")]
		[Address(RVA = "0x19B3A64", Offset = "0x19B3A64", VA = "0x19B3A64")]
		private void DoCharacterAction(CharacterActionData _data)
		{
		}

		[Token(Token = "0x6000E37")]
		[Address(RVA = "0x19B3BA4", Offset = "0x19B3BA4", VA = "0x19B3BA4")]
		public RedChangeAnimatorController()
		{
		}
	}
	[Token(Token = "0x2000392")]
	public class RedHaveMaki : MonoBehaviour
	{
		[Token(Token = "0x40012ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _sWood;

		[Token(Token = "0x40012EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _hWood;

		[Token(Token = "0x40012EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject _stone;

		[Token(Token = "0x1700012B")]
		[Inject]
		private ISubscriber<FPActionData> OnFPAction
		{
			[Token(Token = "0x6000E3A")]
			[Address(RVA = "0x19B3C18", Offset = "0x19B3C18", VA = "0x19B3C18")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E3B")]
			[Address(RVA = "0x19B3C20", Offset = "0x19B3C20", VA = "0x19B3C20")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700012C")]
		[Inject]
		private ISubscriber<GameStatus> OnChangeStatus
		{
			[Token(Token = "0x6000E3C")]
			[Address(RVA = "0x19B3C28", Offset = "0x19B3C28", VA = "0x19B3C28")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E3D")]
			[Address(RVA = "0x19B3C30", Offset = "0x19B3C30", VA = "0x19B3C30")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6000E3E")]
		[Address(RVA = "0x19B3C38", Offset = "0x19B3C38", VA = "0x19B3C38")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E3F")]
		[Address(RVA = "0x19B3E50", Offset = "0x19B3E50", VA = "0x19B3E50")]
		private void ChangeMaki(FPActionData value)
		{
		}

		[Token(Token = "0x6000E40")]
		[Address(RVA = "0x19B3F60", Offset = "0x19B3F60", VA = "0x19B3F60")]
		private void DisableMaki()
		{
		}

		[Token(Token = "0x6000E41")]
		[Address(RVA = "0x19B3FAC", Offset = "0x19B3FAC", VA = "0x19B3FAC")]
		public RedHaveMaki()
		{
		}
	}
	[Token(Token = "0x2000393")]
	[RequireComponent(typeof(AudioSource))]
	public class RedPandaActionManager : MonoBehaviour
	{
		[Token(Token = "0x40012F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioClip _sWoodyo;

		[Token(Token = "0x40012F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip _sWoodwu;

		[Token(Token = "0x40012F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip _sWoodfun;

		[Token(Token = "0x40012F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _hWoodyo;

		[Token(Token = "0x40012F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AudioClip _hWoodwu;

		[Token(Token = "0x40012F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private AudioClip _hWoodfun;

		[Token(Token = "0x40012F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private AudioClip _stoneyo;

		[Token(Token = "0x40012F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioClip _stonewu;

		[Token(Token = "0x40012FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioClip _stonefun;

		[Token(Token = "0x40012FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private AudioSource _audio;

		[Token(Token = "0x40012FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Animator _animator;

		[Token(Token = "0x1700012D")]
		[Inject]
		private ISubscriber<FPActionData> OnFPAction
		{
			[Token(Token = "0x6000E44")]
			[Address(RVA = "0x19B3FBC", Offset = "0x19B3FBC", VA = "0x19B3FBC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E45")]
			[Address(RVA = "0x19B3FC4", Offset = "0x19B3FC4", VA = "0x19B3FC4")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6000E46")]
		[Address(RVA = "0x19B3FCC", Offset = "0x19B3FCC", VA = "0x19B3FCC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E47")]
		[Address(RVA = "0x19B415C", Offset = "0x19B415C", VA = "0x19B415C")]
		private void DoAction(FPActionData value)
		{
		}

		[Token(Token = "0x6000E48")]
		[Address(RVA = "0x19B42D4", Offset = "0x19B42D4", VA = "0x19B42D4")]
		public RedPandaActionManager()
		{
		}
	}
	[Token(Token = "0x2000394")]
	public class WoodChopperAlertFukidashi : MonoBehaviour
	{
		[Token(Token = "0x40012FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _fukidashi;

		[Token(Token = "0x40012FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private WoodChopperInputPublisher _inputPublisher;

		[Token(Token = "0x4001300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private WoodChopperCheckBothHand _checkBothHand;

		[Token(Token = "0x4001301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _onGame;

		[Token(Token = "0x4001302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool _GrabBothFlag;

		[Token(Token = "0x4001303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		private bool _StayLowFlag;

		[Token(Token = "0x1700012E")]
		[Inject]
		private ISubscriber<OnMusicGame> OnMusicGameMessage
		{
			[Token(Token = "0x6000E4A")]
			[Address(RVA = "0x19B42E0", Offset = "0x19B42E0", VA = "0x19B42E0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E4B")]
			[Address(RVA = "0x19B42E8", Offset = "0x19B42E8", VA = "0x19B42E8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6000E4C")]
		[Address(RVA = "0x19B42F0", Offset = "0x19B42F0", VA = "0x19B42F0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E4D")]
		[Address(RVA = "0x19B459C", Offset = "0x19B459C", VA = "0x19B459C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E4E")]
		[Address(RVA = "0x19B45DC", Offset = "0x19B45DC", VA = "0x19B45DC")]
		public WoodChopperAlertFukidashi()
		{
		}
	}
	[Token(Token = "0x2000395")]
	public class WoodChopperBothHandAlert : MonoBehaviour
	{
		[Token(Token = "0x4001305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _bothHandAlertText;

		[Token(Token = "0x4001306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private WoodChopperCheckBothHand _checkBothHand;

		[Token(Token = "0x4001307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _onGame;

		[Token(Token = "0x1700012F")]
		[Inject]
		private ISubscriber<OnMusicGame> OnMusicGameMessage
		{
			[Token(Token = "0x6000E52")]
			[Address(RVA = "0x19B4690", Offset = "0x19B4690", VA = "0x19B4690")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E53")]
			[Address(RVA = "0x19B4698", Offset = "0x19B4698", VA = "0x19B4698")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6000E54")]
		[Address(RVA = "0x19B46A0", Offset = "0x19B46A0", VA = "0x19B46A0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E55")]
		[Address(RVA = "0x19B48C4", Offset = "0x19B48C4", VA = "0x19B48C4")]
		public WoodChopperBothHandAlert()
		{
		}
	}
	[Token(Token = "0x2000396")]
	public class WoodChopperClearCounter : PracticeClearCounter
	{
		[Token(Token = "0x2000397")]
		private enum PracticeType
		{
			[Token(Token = "0x400130D")]
			SWood,
			[Token(Token = "0x400130E")]
			HWood,
			[Token(Token = "0x400130F")]
			Stone
		}

		[Token(Token = "0x4001309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PracticeType _practiceType;

		[Token(Token = "0x400130A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private BoolReactiveProperty _clearMessage;

		[Token(Token = "0x17000130")]
		[Inject]
		private ISubscriber<FPActionData> OnFPAction
		{
			[Token(Token = "0x6000E58")]
			[Address(RVA = "0x19B4920", Offset = "0x19B4920", VA = "0x19B4920")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E59")]
			[Address(RVA = "0x19B4928", Offset = "0x19B4928", VA = "0x19B4928")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000131")]
		public override BoolReactiveProperty ClearMessage
		{
			[Token(Token = "0x6000E5E")]
			[Address(RVA = "0x19B4D0C", Offset = "0x19B4D0C", VA = "0x19B4D0C", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E5F")]
			[Address(RVA = "0x19B4D14", Offset = "0x19B4D14", VA = "0x19B4D14", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x6000E5A")]
		[Address(RVA = "0x19B4930", Offset = "0x19B4930", VA = "0x19B4930")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E5B")]
		[Address(RVA = "0x19B4A9C", Offset = "0x19B4A9C", VA = "0x19B4A9C")]
		private void SWoodCount(FPActionData data)
		{
		}

		[Token(Token = "0x6000E5C")]
		[Address(RVA = "0x19B4B6C", Offset = "0x19B4B6C", VA = "0x19B4B6C")]
		private void HWoodCount(FPActionData data)
		{
		}

		[Token(Token = "0x6000E5D")]
		[Address(RVA = "0x19B4C3C", Offset = "0x19B4C3C", VA = "0x19B4C3C")]
		private void StoneCount(FPActionData data)
		{
		}

		[Token(Token = "0x6000E60")]
		[Address(RVA = "0x19B4D1C", Offset = "0x19B4D1C", VA = "0x19B4D1C")]
		public WoodChopperClearCounter()
		{
		}
	}
	[Token(Token = "0x2000398")]
	public class WoodChopperFitPatternMultiScoreView : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000399")]
		public class WoodChopperScoreUI
		{
			[Token(Token = "0x4001316")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject _canvas;

			[Token(Token = "0x4001317")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public WoodChopperEventKeys _targetKey;

			[Token(Token = "0x4001318")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform _visualizeTransform;

			[Token(Token = "0x4001319")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TextMeshProUGUI _currentScoreText;

			[Token(Token = "0x400131A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool _isVisualize;

			[Token(Token = "0x400131B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
			public bool _isVisualizeScore;

			[Token(Token = "0x400131C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
			public bool _isVisualizeJudge;

			[Token(Token = "0x400131D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public Vector3 _defaultSize;

			[NonSerialized]
			[Token(Token = "0x400131E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public CanvasGroup _canvasGroup;

			[NonSerialized]
			[Token(Token = "0x400131F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public bool _visualizeDone;

			[NonSerialized]
			[Token(Token = "0x4001320")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public int _sameKeyNumber;

			[Token(Token = "0x6000E6A")]
			[Address(RVA = "0x19B59E0", Offset = "0x19B59E0", VA = "0x19B59E0")]
			public WoodChopperScoreUI()
			{
			}
		}

		[Token(Token = "0x4001310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Score View Settings")]
		[SerializeField]
		private WoodChopperScoreUI[] _woodChopperScoreUis;

		[Token(Token = "0x4001311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("Force Quit Settings")]
		[SerializeField]
		private bool _enableForceQuit;

		[Token(Token = "0x4001312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private WoodChopperScoreUI _forceQuitUi;

		[Token(Token = "0x4001313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Inject]
		private ISubscriber<CurrentScoreData> _scoreSubscriber;

		[Token(Token = "0x4001314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Inject]
		private MultilingualTextManager _multilingualTextManager;

		[Token(Token = "0x4001315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int _stoneHitJudgeInputCount;

		[Token(Token = "0x6000E62")]
		[Address(RVA = "0x19B4D4C", Offset = "0x19B4D4C", VA = "0x19B4D4C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E63")]
		[Address(RVA = "0x19B50F0", Offset = "0x19B50F0", VA = "0x19B50F0")]
		private void OnJudgeInput(CurrentScoreData currentScoreData)
		{
		}

		[Token(Token = "0x6000E64")]
		[Address(RVA = "0x19B5314", Offset = "0x19B5314", VA = "0x19B5314")]
		private void VisualizeScore(WoodChopperScoreUI scoreUI, CurrentScoreData currentScoreData)
		{
		}

		[Token(Token = "0x6000E65")]
		[Address(RVA = "0x19B55F0", Offset = "0x19B55F0", VA = "0x19B55F0")]
		private void ScoreEffect(WoodChopperScoreUI scoreUI, bool isForceQuit = false)
		{
		}

		[Token(Token = "0x6000E66")]
		[Address(RVA = "0x19B5864", Offset = "0x19B5864", VA = "0x19B5864")]
		public WoodChopperFitPatternMultiScoreView()
		{
		}
	}
	[Token(Token = "0x200039B")]
	public class WoodChopperIntensityMetsCalculator : IntensityMetsCalculator
	{
		[Token(Token = "0x4001323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Transform[] _trackTargets;

		[Token(Token = "0x4001324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[ReadOnly]
		private float _moveValue;

		[Token(Token = "0x4001325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		[ReadOnly]
		private float _time;

		[Token(Token = "0x4001326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3[] prePositions;

		[Token(Token = "0x6000E6D")]
		[Address(RVA = "0x19B5A98", Offset = "0x19B5A98", VA = "0x19B5A98")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E6E")]
		[Address(RVA = "0x19B5AA4", Offset = "0x19B5AA4", VA = "0x19B5AA4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E6F")]
		[Address(RVA = "0x19B5AA8", Offset = "0x19B5AA8", VA = "0x19B5AA8")]
		private void OnUpdate()
		{
		}

		[Token(Token = "0x6000E70")]
		[Address(RVA = "0x19B5C28", Offset = "0x19B5C28", VA = "0x19B5C28", Slot = "5")]
		public override void ResetValue()
		{
		}

		[Token(Token = "0x6000E71")]
		[Address(RVA = "0x19B5C9C", Offset = "0x19B5C9C", VA = "0x19B5C9C", Slot = "4")]
		public override float GetValue()
		{
			return default(float);
		}

		[Token(Token = "0x6000E72")]
		[Address(RVA = "0x19B5CC0", Offset = "0x19B5CC0", VA = "0x19B5CC0")]
		public WoodChopperIntensityMetsCalculator()
		{
		}
	}
	[Token(Token = "0x200039C")]
	public enum WoodChopperEventKeys
	{
		[Token(Token = "0x4001328")]
		RPandaPutWood = 0,
		[Token(Token = "0x4001329")]
		SWoodSpawn = 4,
		[Token(Token = "0x400132A")]
		SWoodHit = 5,
		[Token(Token = "0x400132B")]
		HWoodSpawn = 6,
		[Token(Token = "0x400132C")]
		HWoodHit = 7,
		[Token(Token = "0x400132D")]
		HWoodFinalHit = 8,
		[Token(Token = "0x400132E")]
		StoneSpawn = 9,
		[Token(Token = "0x400132F")]
		StoneHit = 10,
		[Token(Token = "0x4001330")]
		StoneFinalHit = 11,
		[Token(Token = "0x4001331")]
		SWood_Voice_Yo = 12,
		[Token(Token = "0x4001332")]
		SWood_Voice_Wu = 13,
		[Token(Token = "0x4001333")]
		SWood_Voice_Fun = 14,
		[Token(Token = "0x4001334")]
		HWood_Voice_Yo = 15,
		[Token(Token = "0x4001335")]
		HWood_Voice_Wu = 16,
		[Token(Token = "0x4001336")]
		HWood_Voice_Fun = 17,
		[Token(Token = "0x4001337")]
		Stone_Voice_Yo = 18,
		[Token(Token = "0x4001338")]
		Stone_Voice_Wu = 19,
		[Token(Token = "0x4001339")]
		Stone_Voice_Fun = 20,
		[Token(Token = "0x400133A")]
		ColliderActivate = 21,
		[Token(Token = "0x400133B")]
		SWoodWaistMiss = 22,
		[Token(Token = "0x400133C")]
		HWoodWaistMiss = 23,
		[Token(Token = "0x400133D")]
		StoneWaistMiss = 24
	}
	[Token(Token = "0x200039D")]
	public enum WoodChopperInputKeys
	{
		[Token(Token = "0x400133F")]
		SwingAxInput,
		[Token(Token = "0x4001340")]
		SwingAxWaistMissInput
	}
	[Token(Token = "0x200039E")]
	public class WoodChopperStayLowAlert : MonoBehaviour
	{
		[Token(Token = "0x4001341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _alertText;

		[Token(Token = "0x4001342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private WoodChopperInputPublisher _inputPublisher;

		[Token(Token = "0x4001343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _onGame;

		[Token(Token = "0x17000132")]
		[Inject]
		private ISubscriber<OnMusicGame> OnMusicGameMessage
		{
			[Token(Token = "0x6000E73")]
			[Address(RVA = "0x19B5CC8", Offset = "0x19B5CC8", VA = "0x19B5CC8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E74")]
			[Address(RVA = "0x19B5CD0", Offset = "0x19B5CD0", VA = "0x19B5CD0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6000E75")]
		[Address(RVA = "0x19B5CD8", Offset = "0x19B5CD8", VA = "0x19B5CD8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E76")]
		[Address(RVA = "0x19B5EE8", Offset = "0x19B5EE8", VA = "0x19B5EE8")]
		public WoodChopperStayLowAlert()
		{
		}
	}
}
namespace __Imacreate__.__Production__.GrooveFitGames.GF4_WoodChopper.PlayerInput
{
	[Token(Token = "0x200039F")]
	public class CheckAxeGrab : EventBlock
	{
		[StructLayout(3)]
		[Token(Token = "0x20003A0")]
		[CompilerGenerated]
		private struct <SetEvent>d__4 : IAsyncStateMachine
		{
			[Token(Token = "0x4001349")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400134A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x400134B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CheckAxeGrab <>4__this;

			[Token(Token = "0x400134C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken token;

			[Token(Token = "0x400134D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6000E7B")]
			[Address(RVA = "0x19B6028", Offset = "0x19B6028", VA = "0x19B6028", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000E7C")]
			[Address(RVA = "0x19B6728", Offset = "0x19B6728", VA = "0x19B6728", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _axe;

		[Token(Token = "0x4001346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Inject]
		private InputProvider _inputProvider;

		[Token(Token = "0x4001347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private WoodChopperCheckBothHand _checkBothHand;

		[Token(Token = "0x4001348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GrabAxeController _grabAxeController;

		[Token(Token = "0x6000E79")]
		[Address(RVA = "0x19B5F44", Offset = "0x19B5F44", VA = "0x19B5F44", Slot = "4")]
		[AsyncStateMachine(typeof(<SetEvent>d__4))]
		public override UniTask<bool> SetEvent(CancellationToken token)
		{
			return default(UniTask<bool>);
		}

		[Token(Token = "0x6000E7A")]
		[Address(RVA = "0x19B6020", Offset = "0x19B6020", VA = "0x19B6020")]
		public CheckAxeGrab()
		{
		}
	}
	[Token(Token = "0x20003A1")]
	[RequireComponent(typeof(AudioSource))]
	public class CheckWaistHeight : MonoBehaviour
	{
		[Token(Token = "0x400134E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _checkEffect;

		[Token(Token = "0x400134F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private WoodChopperInputPublisher _inputPublisher;

		[Token(Token = "0x4001350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private WoodChopperCheckBothHand _checkBothHand;

		[Token(Token = "0x4001351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _activeSound;

		[Token(Token = "0x4001352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Inject]
		private InputProvider _inputProvider;

		[Token(Token = "0x4001353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float _calibrationHeadPos;

		[Token(Token = "0x4001354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private AudioSource _audio;

		[Token(Token = "0x4001355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool _isActive;

		[Token(Token = "0x6000E7D")]
		[Address(RVA = "0x19B6780", Offset = "0x19B6780", VA = "0x19B6780")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E7E")]
		[Address(RVA = "0x19B69BC", Offset = "0x19B69BC", VA = "0x19B69BC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E7F")]
		[Address(RVA = "0x19B6A8C", Offset = "0x19B6A8C", VA = "0x19B6A8C")]
		public CheckWaistHeight()
		{
		}
	}
	[Token(Token = "0x20003A3")]
	public class WoodChopperCheckBothHand : MonoBehaviour
	{
		[Token(Token = "0x4001358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Inject]
		private InputProvider _inputProvider;

		[Token(Token = "0x4001359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ParticleSystem _particle;

		[Token(Token = "0x400135A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioSource _audio;

		[Token(Token = "0x400135B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _activeSound;

		[Token(Token = "0x400135C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Animator _animator;

		[Token(Token = "0x400135D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public bool _checkBoth;

		[Token(Token = "0x400135E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		[HideInInspector]
		public bool _checkGrabAxe;

		[NonSerialized]
		[Token(Token = "0x400135F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public readonly BoolReactiveProperty _grabBoth;

		[Token(Token = "0x4001360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int Active;

		[Token(Token = "0x4001361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int Deactive;

		[Token(Token = "0x4001363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _grabHandLeft;

		[Token(Token = "0x4001364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _grabHandRight;

		[Token(Token = "0x4001365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject _grabHandSave;

		[Token(Token = "0x4001366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private SkinnedMeshRenderer _handSkinnedMeshRenderer;

		[Token(Token = "0x4001367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private IDisposable _onPauseEventDisposable;

		[Token(Token = "0x17000133")]
		[Inject]
		private ISubscriber<OnPause> OnPauseEvent
		{
			[Token(Token = "0x6000E84")]
			[Address(RVA = "0x19B6B44", Offset = "0x19B6B44", VA = "0x19B6B44")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E85")]
			[Address(RVA = "0x19B6B4C", Offset = "0x19B6B4C", VA = "0x19B6B4C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6000E86")]
		[Address(RVA = "0x19B6B54", Offset = "0x19B6B54", VA = "0x19B6B54")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E87")]
		[Address(RVA = "0x19B6BC4", Offset = "0x19B6BC4", VA = "0x19B6BC4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E88")]
		[Address(RVA = "0x19B6EC4", Offset = "0x19B6EC4", VA = "0x19B6EC4")]
		public void DisplayRealHand(bool value)
		{
		}

		[Token(Token = "0x6000E89")]
		[Address(RVA = "0x19B2EE4", Offset = "0x19B2EE4", VA = "0x19B2EE4")]
		public void SetGrabHand(VRHand.HandType hand)
		{
		}

		[Token(Token = "0x6000E8A")]
		[Address(RVA = "0x19B6F0C", Offset = "0x19B6F0C", VA = "0x19B6F0C")]
		public WoodChopperCheckBothHand()
		{
		}
	}
	[Token(Token = "0x20003A4")]
	public class WoodChopperInputPublisher : InputPublisher
	{
		[Token(Token = "0x4001368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _axeFace;

		[Token(Token = "0x4001369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip _axeSwingSound;

		[Token(Token = "0x400136A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private StringReactiveProperty _inputMessage;

		[Token(Token = "0x400136B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AudioSource _audio;

		[Token(Token = "0x400136C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Range(0f, 1f)]
		public float _headDownRate;

		[Token(Token = "0x400136D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Inject]
		private InputProvider _inputProvider;

		[Token(Token = "0x400136E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool _isHeadDownOK;

		[NonSerialized]
		[Token(Token = "0x400136F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public readonly BoolReactiveProperty _stayLow;

		[Token(Token = "0x4001370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool _isAxeUpOK;

		[Token(Token = "0x4001371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float _caribrationHeadPos;

		[Token(Token = "0x17000134")]
		public override StringReactiveProperty InputMessage
		{
			[Token(Token = "0x6000E90")]
			[Address(RVA = "0x19B7548", Offset = "0x19B7548", VA = "0x19B7548", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E91")]
			[Address(RVA = "0x19B7550", Offset = "0x19B7550", VA = "0x19B7550", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x6000E8D")]
		[Address(RVA = "0x19B7124", Offset = "0x19B7124", VA = "0x19B7124")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E8E")]
		[Address(RVA = "0x19B7230", Offset = "0x19B7230", VA = "0x19B7230")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E8F")]
		[Address(RVA = "0x19B73A4", Offset = "0x19B73A4", VA = "0x19B73A4")]
		public void PublishMessage()
		{
		}

		[Token(Token = "0x6000E92")]
		[Address(RVA = "0x19B7558", Offset = "0x19B7558", VA = "0x19B7558")]
		public WoodChopperInputPublisher()
		{
		}
	}
	[Token(Token = "0x20003A5")]
	public class WoodChopperSwingEreaHit : MonoBehaviour
	{
		[Token(Token = "0x4001372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _inputPublisher;

		[Token(Token = "0x4001373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _axeHead;

		[Token(Token = "0x4001374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _hitArea;

		[Token(Token = "0x4001375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private WoodChopperCheckBothHand _checkBothHand;

		[Token(Token = "0x4001376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 _posAxeFaceOld;

		[Token(Token = "0x4001377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 _posAxeFaceNew;

		[Token(Token = "0x4001378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Inject]
		private InputProvider _inputProvider;

		[Token(Token = "0x400137A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool _isPauseNow;

		[Token(Token = "0x17000135")]
		[Inject]
		private ISubscriber<OnPause> OnPauseEvent
		{
			[Token(Token = "0x6000E93")]
			[Address(RVA = "0x19B75E4", Offset = "0x19B75E4", VA = "0x19B75E4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E94")]
			[Address(RVA = "0x19B75EC", Offset = "0x19B75EC", VA = "0x19B75EC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6000E95")]
		[Address(RVA = "0x19B75F4", Offset = "0x19B75F4", VA = "0x19B75F4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E96")]
		[Address(RVA = "0x19B7754", Offset = "0x19B7754", VA = "0x19B7754")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000E97")]
		[Address(RVA = "0x19B7790", Offset = "0x19B7790", VA = "0x19B7790")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000E98")]
		[Address(RVA = "0x19B787C", Offset = "0x19B787C", VA = "0x19B787C")]
		public WoodChopperSwingEreaHit()
		{
		}
	}
}
namespace __Imacreate__.__Production__.GrooveFitGames.GF4_WoodChopper.FitPattern
{
	[Token(Token = "0x20003A6")]
	public class HWoodFPInputJudgeAction : JudgeActionBase
	{
		[Token(Token = "0x400137B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _timingFirst;

		[Token(Token = "0x400137C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float _timingFinal;

		[Token(Token = "0x400137D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private InputPublisher _inputPublisher;

		[Token(Token = "0x400137E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float _doNothingErrorTiming1;

		[Token(Token = "0x400137F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float _doNothingErrorTiming2;

		[Token(Token = "0x4001380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private WoodChopperInputKeys _inputKeyEnum;

		[Token(Token = "0x4001381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string _targetInputKey;

		[Token(Token = "0x4001382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private int _finalJudgeGreat;

		[Token(Token = "0x4001383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private int _finalJudgeGood;

		[Token(Token = "0x4001384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject _fitPatternBox;

		[Token(Token = "0x4001385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float _currentBeat;

		[Token(Token = "0x4001386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool _judgeDone1;

		[Token(Token = "0x4001387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
		private bool _judgeDone2;

		[Token(Token = "0x4001388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int _finaljudgePoint;

		[Token(Token = "0x4001389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float[] _errorValueList;

		[Token(Token = "0x6000E9A")]
		[Address(RVA = "0x19B78B8", Offset = "0x19B78B8", VA = "0x19B78B8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E9B")]
		[Address(RVA = "0x19B7930", Offset = "0x19B7930", VA = "0x19B7930")]
		private void ImmediatelyBadJudgeMessage()
		{
		}

		[Token(Token = "0x6000E9C")]
		[Address(RVA = "0x19B7ACC", Offset = "0x19B7ACC", VA = "0x19B7ACC")]
		private void ImmediatelyWaistBadudgeMessage()
		{
		}

		[Token(Token = "0x6000E9D")]
		[Address(RVA = "0x19B7CA8", Offset = "0x19B7CA8", VA = "0x19B7CA8", Slot = "4")]
		protected override void BeatSubscribeAction(float currentBeat)
		{
		}

		[Token(Token = "0x6000E9E")]
		[Address(RVA = "0x19B7D68", Offset = "0x19B7D68", VA = "0x19B7D68", Slot = "5")]
		protected override void AdditionalSetComponent()
		{
		}

		[Token(Token = "0x6000E9F")]
		[Address(RVA = "0x19B7EB4", Offset = "0x19B7EB4", VA = "0x19B7EB4")]
		private void Judge(string value)
		{
		}

		[Token(Token = "0x6000EA0")]
		[Address(RVA = "0x19B8498", Offset = "0x19B8498", VA = "0x19B8498")]
		private void JudgeFinal(string value)
		{
		}

		[Token(Token = "0x6000EA1")]
		[Address(RVA = "0x19B8A6C", Offset = "0x19B8A6C", VA = "0x19B8A6C")]
		public HWoodFPInputJudgeAction()
		{
		}
	}
	[Token(Token = "0x20003A7")]
	public class SoftFPInputJudgeAction : JudgeActionBase
	{
		[Token(Token = "0x400138A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal string _actionKey;

		[Token(Token = "0x400138B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float _timing;

		[Token(Token = "0x400138C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private InputPublisher _inputPublisher;

		[Token(Token = "0x400138D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal string _targetInputKey;

		[Token(Token = "0x400138E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float _doNotingErrorTiming;

		[Token(Token = "0x400138F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float _currentBeat;

		[Token(Token = "0x4001390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool _judgeDone;

		[Token(Token = "0x6000EA3")]
		[Address(RVA = "0x19B8AF4", Offset = "0x19B8AF4", VA = "0x19B8AF4", Slot = "4")]
		protected override void BeatSubscribeAction(float currentBeat)
		{
		}

		[Token(Token = "0x6000EA4")]
		[Address(RVA = "0x19B8CCC", Offset = "0x19B8CCC", VA = "0x19B8CCC", Slot = "5")]
		protected override void AdditionalSetComponent()
		{
		}

		[Token(Token = "0x6000EA5")]
		[Address(RVA = "0x19B8E18", Offset = "0x19B8E18", VA = "0x19B8E18")]
		private void Judge(string value)
		{
		}

		[Token(Token = "0x6000EA6")]
		[Address(RVA = "0x19B96F8", Offset = "0x19B96F8", VA = "0x19B96F8")]
		public SoftFPInputJudgeAction()
		{
		}
	}
	[Token(Token = "0x20003A8")]
	public class StoneAnimManager : MonoBehaviour
	{
		[Token(Token = "0x4001392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Animator _animator;

		[Token(Token = "0x4001393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _checkFirst;

		[Token(Token = "0x17000136")]
		[Inject]
		private ISubscriber<FPActionData> OnFPAction
		{
			[Token(Token = "0x6000EA8")]
			[Address(RVA = "0x19B9710", Offset = "0x19B9710", VA = "0x19B9710")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000EA9")]
			[Address(RVA = "0x19B9718", Offset = "0x19B9718", VA = "0x19B9718")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6000EAA")]
		[Address(RVA = "0x19B9720", Offset = "0x19B9720", VA = "0x19B9720")]
		private void Start()
		{
		}

		[Token(Token = "0x6000EAB")]
		[Address(RVA = "0x19B9884", Offset = "0x19B9884", VA = "0x19B9884")]
		private void DoAnimation(FPActionData value)
		{
		}

		[Token(Token = "0x6000EAC")]
		[Address(RVA = "0x19B9980", Offset = "0x19B9980", VA = "0x19B9980")]
		public StoneAnimManager()
		{
		}
	}
	[Token(Token = "0x20003A9")]
	public class StoneFPInputJudgeAction : JudgeActionBase
	{
		[Token(Token = "0x4001394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _timingFirst;

		[Token(Token = "0x4001395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float _timingSecond;

		[Token(Token = "0x4001396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float _timingFinal;

		[Token(Token = "0x4001397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private InputPublisher _inputPublisher;

		[Token(Token = "0x4001398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string _targetInputKey;

		[Token(Token = "0x4001399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float _doNothingErrorTiming1;

		[Token(Token = "0x400139A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float _doNothingErrorTiming2;

		[Token(Token = "0x400139B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float _doNothingErrorTiming3;

		[Token(Token = "0x400139C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private WoodChopperInputKeys _inputKeyEnum;

		[Token(Token = "0x400139D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private int _finalJudgeGreat;

		[Token(Token = "0x400139E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private int _finalJudgeGood;

		[Token(Token = "0x400139F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _fitPatternBox;

		[Token(Token = "0x40013A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _currentBeat;

		[Token(Token = "0x40013A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool _judgeDone1;

		[Token(Token = "0x40013A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
		private bool _judgeDone2;

		[Token(Token = "0x40013A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x66")]
		private bool _judgeDone3;

		[Token(Token = "0x40013A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int _finaljudgePoint;

		[Token(Token = "0x40013A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float[] _errorValueList;

		[Token(Token = "0x6000EAE")]
		[Address(RVA = "0x19B998C", Offset = "0x19B998C", VA = "0x19B998C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000EAF")]
		[Address(RVA = "0x19B9A0C", Offset = "0x19B9A0C", VA = "0x19B9A0C")]
		private void ImmediatelyBadJudgeMessage()
		{
		}

		[Token(Token = "0x6000EB0")]
		[Address(RVA = "0x19B9BA8", Offset = "0x19B9BA8", VA = "0x19B9BA8")]
		private void ImmediatelyWaistBadudgeMessage()
		{
		}

		[Token(Token = "0x6000EB1")]
		[Address(RVA = "0x19B9D8C", Offset = "0x19B9D8C", VA = "0x19B9D8C", Slot = "4")]
		protected override void BeatSubscribeAction(float currentBeat)
		{
		}

		[Token(Token = "0x6000EB2")]
		[Address(RVA = "0x19B9E74", Offset = "0x19B9E74", VA = "0x19B9E74", Slot = "5")]
		protected override void AdditionalSetComponent()
		{
		}

		[Token(Token = "0x6000EB3")]
		[Address(RVA = "0x19B9FC0", Offset = "0x19B9FC0", VA = "0x19B9FC0")]
		private void Judge(string value)
		{
		}

		[Token(Token = "0x6000EB4")]
		[Address(RVA = "0x19BA5EC", Offset = "0x19BA5EC", VA = "0x19BA5EC")]
		private void JudgeFinal(string value)
		{
		}

		[Token(Token = "0x6000EB5")]
		[Address(RVA = "0x19BABE8", Offset = "0x19BABE8", VA = "0x19BABE8")]
		public StoneFPInputJudgeAction()
		{
		}
	}
	[Token(Token = "0x20003AA")]
	public class SWoodFPInputJudgeAction : SoftFPInputJudgeAction
	{
		[Token(Token = "0x40013A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private WoodChopperEventKeys _actionKeyEnum;

		[Token(Token = "0x40013A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private WoodChopperInputKeys _inputKeyEnum;

		[Token(Token = "0x6000EB7")]
		[Address(RVA = "0x19BAC78", Offset = "0x19BAC78", VA = "0x19BAC78")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000EB8")]
		[Address(RVA = "0x19BAD38", Offset = "0x19BAD38", VA = "0x19BAD38")]
		public SWoodFPInputJudgeAction()
		{
		}
	}
	[Token(Token = "0x20003AB")]
	public class WoodChopperCreateMaki : MonoBehaviour
	{
		[Token(Token = "0x40013A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _maki;

		[Token(Token = "0x17000137")]
		[Inject]
		private ISubscriber<FPActionData> OnFpAction
		{
			[Token(Token = "0x6000EB9")]
			[Address(RVA = "0x19BAD40", Offset = "0x19BAD40", VA = "0x19BAD40")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000EBA")]
			[Address(RVA = "0x19BAD48", Offset = "0x19BAD48", VA = "0x19BAD48")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6000EBB")]
		[Address(RVA = "0x19BAD50", Offset = "0x19BAD50", VA = "0x19BAD50")]
		private void Start()
		{
		}

		[Token(Token = "0x6000EBC")]
		[Address(RVA = "0x19BAE90", Offset = "0x19BAE90", VA = "0x19BAE90")]
		private void Create(FPActionData value)
		{
		}

		[Token(Token = "0x6000EBD")]
		[Address(RVA = "0x19BAF5C", Offset = "0x19BAF5C", VA = "0x19BAF5C")]
		public WoodChopperCreateMaki()
		{
		}
	}
	[Token(Token = "0x20003AC")]
	public class WoodChopperFPActionSubscribeEvent : FPActionSubscribeEvent
	{
		[Serializable]
		[Token(Token = "0x20003AD")]
		private class WoodChopperFPActionEvent : FPActionEventBase
		{
			[Token(Token = "0x40013AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[SerializeField]
			private WoodChopperEventKeys Key;

			[Token(Token = "0x6000EC1")]
			[Address(RVA = "0x19BAFEC", Offset = "0x19BAFEC", VA = "0x19BAFEC", Slot = "4")]
			public override string GetKey()
			{
				return null;
			}

			[Token(Token = "0x6000EC2")]
			[Address(RVA = "0x19BB054", Offset = "0x19BB054", VA = "0x19BB054")]
			public WoodChopperFPActionEvent()
			{
			}
		}

		[Token(Token = "0x40013AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<WoodChopperFPActionEvent> _woodChopperFPActionEvent;

		[Token(Token = "0x6000EBF")]
		[Address(RVA = "0x19BAF68", Offset = "0x19BAF68", VA = "0x19BAF68")]
		private void Start()
		{
		}

		[Token(Token = "0x6000EC0")]
		[Address(RVA = "0x19BAFE4", Offset = "0x19BAFE4", VA = "0x19BAFE4")]
		public WoodChopperFPActionSubscribeEvent()
		{
		}
	}
	[Token(Token = "0x20003AE")]
	public class WoodChopperInactiveCollider : MonoBehaviour
	{
		[Token(Token = "0x40013AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _fitPatternObject;

		[Token(Token = "0x17000138")]
		[Inject]
		private ISubscriber<FPActionData> OnFPAction
		{
			[Token(Token = "0x6000EC3")]
			[Address(RVA = "0x19BB05C", Offset = "0x19BB05C", VA = "0x19BB05C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000EC4")]
			[Address(RVA = "0x19BB064", Offset = "0x19BB064", VA = "0x19BB064")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6000EC5")]
		[Address(RVA = "0x19BB06C", Offset = "0x19BB06C", VA = "0x19BB06C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000EC6")]
		[Address(RVA = "0x19BB1D4", Offset = "0x19BB1D4", VA = "0x19BB1D4")]
		private void ChangeColliderActive(FPActionData value)
		{
		}

		[Token(Token = "0x6000EC7")]
		[Address(RVA = "0x19BB2F0", Offset = "0x19BB2F0", VA = "0x19BB2F0")]
		private void Delete(FPActionData value)
		{
		}

		[Token(Token = "0x6000EC8")]
		[Address(RVA = "0x19BB3E0", Offset = "0x19BB3E0", VA = "0x19BB3E0")]
		public WoodChopperInactiveCollider()
		{
		}
	}
	[Token(Token = "0x20003AF")]
	public class WoodChopperNoJudgementAction : FPNoJudgementAction
	{
		[Token(Token = "0x40013AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private List<WoodChopperActionParam> actions;

		[Token(Token = "0x6000ECA")]
		[Address(RVA = "0x19BB410", Offset = "0x19BB410", VA = "0x19BB410", Slot = "4")]
		protected override void BeatSubscribeAction(float currentBeat)
		{
		}

		[Token(Token = "0x6000ECB")]
		[Address(RVA = "0x19BB4A8", Offset = "0x19BB4A8", VA = "0x19BB4A8")]
		public WoodChopperNoJudgementAction()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003B0")]
	public class WoodChopperActionParam : ActionParamBase
	{
		[Token(Token = "0x40013AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<WoodChopperEventKeys> ActionKeys;

		[Token(Token = "0x6000ECC")]
		[Address(RVA = "0x19BB4B0", Offset = "0x19BB4B0", VA = "0x19BB4B0", Slot = "4")]
		public override List<string> GetKeyFromActionKeys()
		{
			return null;
		}

		[Token(Token = "0x6000ECD")]
		[Address(RVA = "0x19BB5B8", Offset = "0x19BB5B8", VA = "0x19BB5B8")]
		public WoodChopperActionParam()
		{
		}
	}
}
namespace __Imacreate__.__Production__.GrooveFitGames.GF27_TableTennis
{
	[Token(Token = "0x20003B2")]
	public class ContinuousCollider : MonoBehaviour
	{
		[Token(Token = "0x40013B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector3 _prePosition;

		[Token(Token = "0x40013B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _colliderObject;

		[Token(Token = "0x40013B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float _minZ;

		[Token(Token = "0x40013B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private bool _useFixedUpdate;

		[Token(Token = "0x6000ED1")]
		[Address(RVA = "0x19BB69C", Offset = "0x19BB69C", VA = "0x19BB69C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000ED2")]
		[Address(RVA = "0x19BB6EC", Offset = "0x19BB6EC", VA = "0x19BB6EC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000ED3")]
		[Address(RVA = "0x19BB970", Offset = "0x19BB970", VA = "0x19BB970")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000ED4")]
		[Address(RVA = "0x19BB6FC", Offset = "0x19BB6FC", VA = "0x19BB6FC")]
		private void UpdateMethod()
		{
		}

		[Token(Token = "0x6000ED5")]
		[Address(RVA = "0x19BB980", Offset = "0x19BB980", VA = "0x19BB980")]
		public ContinuousCollider()
		{
		}
	}
	[Token(Token = "0x20003B3")]
	public class FPActionDelay : FitPatternBeatSubscriber
	{
		[Token(Token = "0x40013B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly SortedList<float, FPActionData> _actions;

		[Token(Token = "0x40013B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Inject]
		private IPublisher<FPActionData> _publisher;

		[Token(Token = "0x40013B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float _currentBeat;

		[Token(Token = "0x6000ED6")]
		[Address(RVA = "0x19BB990", Offset = "0x19BB990", VA = "0x19BB990", Slot = "4")]
		protected override void BeatSubscribeAction(float currentBeat)
		{
		}

		[Token(Token = "0x6000ED7")]
		[Address(RVA = "0x19BBBF0", Offset = "0x19BBBF0", VA = "0x19BBBF0")]
		public void PublishOnBeat(float beatToPublish, FPActionData actionData)
		{
		}

		[Token(Token = "0x6000ED8")]
		[Address(RVA = "0x19BBC78", Offset = "0x19BBC78", VA = "0x19BBC78")]
		public void PublishWithDelay(float delayBeat, FPActionData actionData)
		{
		}

		[Token(Token = "0x6000ED9")]
		[Address(RVA = "0x19BBBF4", Offset = "0x19BBBF4", VA = "0x19BBBF4")]
		private void AddAction(float beatToPublish, FPActionData actionData)
		{
		}

		[Token(Token = "0x6000EDA")]
		[Address(RVA = "0x19BBC84", Offset = "0x19BBC84", VA = "0x19BBC84")]
		public FPActionDelay()
		{
		}
	}
	[Token(Token = "0x20003B4")]
	public class ReverseOnLeftHanded : MonoBehaviour
	{
		[Token(Token = "0x40013B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _isRightHanded;

		[Token(Token = "0x6000EDB")]
		[Address(RVA = "0x19BBD0C", Offset = "0x19BBD0C", VA = "0x19BBD0C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000EDC")]
		[Address(RVA = "0x19BBE10", Offset = "0x19BBE10", VA = "0x19BBE10")]
		private void Reverse()
		{
		}

		[Token(Token = "0x6000EDD")]
		[Address(RVA = "0x19BBFB0", Offset = "0x19BBFB0", VA = "0x19BBFB0")]
		public ReverseOnLeftHanded()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003B5")]
	public class TableTennisActionParam : ActionParamBase
	{
		[Token(Token = "0x40013BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<TableTennisEventKeys> ActionKeys;

		[Token(Token = "0x6000EDF")]
		[Address(RVA = "0x19BBFDC", Offset = "0x19BBFDC", VA = "0x19BBFDC", Slot = "4")]
		public override List<string> GetKeyFromActionKeys()
		{
			return null;
		}

		[Token(Token = "0x6000EE0")]
		[Address(RVA = "0x19BC0E4", Offset = "0x19BC0E4", VA = "0x19BC0E4")]
		public TableTennisActionParam()
		{
		}
	}
	[Token(Token = "0x20003B7")]
	public class TableTennisBall : MonoBehaviour, IAutoSetUp
	{
		[Token(Token = "0x40013BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float Speed;

		[Token(Token = "0x40013BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TableTennisShotReturnBase ShotReaction;

		[Token(Token = "0x6000EE4")]
		[Address(RVA = "0x19BC1C8", Offset = "0x19BC1C8", VA = "0x19BC1C8", Slot = "4")]
		public void AutoSetUp()
		{
		}

		[Token(Token = "0x6000EE5")]
		[Address(RVA = "0x19BC280", Offset = "0x19BC280", VA = "0x19BC280")]
		public TableTennisBall()
		{
		}
	}
	[Token(Token = "0x20003B8")]
	public class TableTennisBallDead : MonoBehaviour, IAutoSetUp
	{
		[Token(Token = "0x40013BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _effect;

		[Token(Token = "0x40013C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private FitPatternBoxManager _fitPatternBox;

		[Token(Token = "0x40013C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Inject]
		private ISubscriber<FPActionData> _subscriber;

		[Token(Token = "0x40013C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Inject]
		private DiContainer _container;

		[Token(Token = "0x6000EE6")]
		[Address(RVA = "0x19BC288", Offset = "0x19BC288", VA = "0x19BC288")]
		private void Start()
		{
		}

		[Token(Token = "0x6000EE7")]
		[Address(RVA = "0x19BC3B4", Offset = "0x19BC3B4", VA = "0x19BC3B4", Slot = "4")]
		public void AutoSetUp()
		{
		}

		[Token(Token = "0x6000EE8")]
		[Address(RVA = "0x19BC460", Offset = "0x19BC460", VA = "0x19BC460")]
		public TableTennisBallDead()
		{
		}
	}
	[Token(Token = "0x20003B9")]
	public class TableTennisBoundEffect : MonoBehaviour, IAutoSetUp
	{
		[Token(Token = "0x40013C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _boundEffect;

		[Token(Token = "0x40013C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private FitPatternBoxManager _fitPatternBox;

		[Token(Token = "0x40013C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _boundPosition;

		[Token(Token = "0x40013C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Inject]
		private ISubscriber<FPActionData> _subscriber;

		[Token(Token = "0x40013C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Inject]
		private DiContainer _container;

		[Token(Token = "0x40013C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private IDisposable _disposable;

		[Token(Token = "0x6000EEA")]
		[Address(RVA = "0x19BC69C", Offset = "0x19BC69C", VA = "0x19BC69C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000EEB")]
		[Address(RVA = "0x19BC7D8", Offset = "0x19BC7D8", VA = "0x19BC7D8", Slot = "4")]
		public void AutoSetUp()
		{
		}

		[Token(Token = "0x6000EEC")]
		[Address(RVA = "0x19BC9AC", Offset = "0x19BC9AC", VA = "0x19BC9AC")]
		public TableTennisBoundEffect()
		{
		}
	}
	[Token(Token = "0x20003BA")]
	public class TableTennisCurveController : MonoBehaviour
	{
		[Token(Token = "0x40013C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private DollyCartAnimationCurve _animationCurve;

		[Token(Token = "0x40013CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private FitPatternBoxManager _fitPatternBox;

		[Token(Token = "0x17000139")]
		[Inject]
		private ISubscriber<FPActionData> OnFPAction
		{
			[Token(Token = "0x6000EEE")]
			[Address(RVA = "0x19BCBC8", Offset = "0x19BCBC8", VA = "0x19BCBC8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000EEF")]
			[Address(RVA = "0x19BCBD0", Offset = "0x19BCBD0", VA = "0x19BCBD0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6000EF0")]
		[Address(RVA = "0x19BCBD8", Offset = "0x19BCBD8", VA = "0x19BCBD8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000EF1")]
		[Address(RVA = "0x19BCCF0", Offset = "0x19BCCF0", VA = "0x19BCCF0")]
		public TableTennisCurveController()
		{
		}
	}
	[Token(Token = "0x20003BB")]
	public class TableTennisFastShotReturn : TableTennisShotReturnBase
	{
		[Token(Token = "0x40013CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool isBackHand;

		[Token(Token = "0x40013CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Inject]
		private IPublisher<FPActionData> _publisher;

		[Token(Token = "0x40013CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private TableTennisReturnManager _fastShotReturn;

		[Token(Token = "0x40013CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private TableTennisReturnManager _fastoutShotReturn;

		[Token(Token = "0x40013D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private TableTennisReturnManager _slowShotReturn;

		[Token(Token = "0x40013D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TableTennisReturnManager _slowoutShotReturn;

		[Token(Token = "0x40013D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private TableTennisReturnManager _blockReturn;

		[Token(Token = "0x40013D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _angleStraight;

		[Token(Token = "0x40013D4")]
		private const float _minPhi = -20f;

		[Token(Token = "0x40013D5")]
		private const float _thetaThreshold = 45f;

		[Token(Token = "0x6000EF3")]
		[Address(RVA = "0x19BCE24", Offset = "0x19BCE24", VA = "0x19BCE24")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000EF4")]
		[Address(RVA = "0x19BCF14", Offset = "0x19BCF14", VA = "0x19BCF14", Slot = "5")]
		public override void Shot(TableTennisShotInfomation info)
		{
		}

		[Token(Token = "0x6000EF5")]
		[Address(RVA = "0x19BD124", Offset = "0x19BD124", VA = "0x19BD124")]
		private void WrongFaceShot()
		{
		}

		[Token(Token = "0x6000EF6")]
		[Address(RVA = "0x19BD280", Offset = "0x19BD280", VA = "0x19BD280")]
		private void RightFaceShot(TableTennisShotInfomation info)
		{
		}

		[Token(Token = "0x6000EF7")]
		[Address(RVA = "0x19BD6C0", Offset = "0x19BD6C0", VA = "0x19BD6C0")]
		private void RightFacePowerShot(TableTennisShotInfomation info)
		{
		}

		[Token(Token = "0x6000EF8")]
		[Address(RVA = "0x19BD4A0", Offset = "0x19BD4A0", VA = "0x19BD4A0")]
		private void RightFaceBlockShot(TableTennisShotInfomation info)
		{
		}

		[Token(Token = "0x6000EF9")]
		[Address(RVA = "0x19BDC48", Offset = "0x19BDC48", VA = "0x19BDC48")]
		public TableTennisFastShotReturn()
		{
		}
	}
	[Token(Token = "0x20003BC")]
	public class TableTennisFPActionSubscribeEvent : FPActionSubscribeEvent
	{
		[Serializable]
		[Token(Token = "0x20003BD")]
		private class TableTennisFPActionEvent : FPActionEventBase
		{
			[Token(Token = "0x40013D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			[RestrictedStringByEnum(typeof(TableTennisEventKeys))]
			private string Key;

			[Token(Token = "0x6000EFD")]
			[Address(RVA = "0x19BDD0C", Offset = "0x19BDD0C", VA = "0x19BDD0C", Slot = "4")]
			public override string GetKey()
			{
				return null;
			}

			[Token(Token = "0x6000EFE")]
			[Address(RVA = "0x19BDD14", Offset = "0x19BDD14", VA = "0x19BDD14")]
			public TableTennisFPActionEvent()
			{
			}
		}

		[Token(Token = "0x40013D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<TableTennisFPActionEvent> _TableTennisFPActionEvent;

		[Token(Token = "0x6000EFB")]
		[Address(RVA = "0x19BDC88", Offset = "0x19BDC88", VA = "0x19BDC88")]
		private void Start()
		{
		}

		[Token(Token = "0x6000EFC")]
		[Address(RVA = "0x19BDD04", Offset = "0x19BDD04", VA = "0x19BDD04")]
		public TableTennisFPActionSubscribeEvent()
		{
		}
	}
	[Token(Token = "0x20003BE")]
	public class TableTennisFPNoJudgementAction : FPNoJudgementAction
	{
		[Token(Token = "0x40013D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private List<TableTennisActionParam> actions;

		[Token(Token = "0x6000EFF")]
		[Address(RVA = "0x19BDD1C", Offset = "0x19BDD1C", VA = "0x19BDD1C", Slot = "4")]
		protected override void BeatSubscribeAction(float currentBeat)
		{
		}

		[Token(Token = "0x6000F00")]
		[Address(RVA = "0x19BDDB4", Offset = "0x19BDDB4", VA = "0x19BDDB4")]
		public TableTennisFPNoJudgementAction()
		{
		}
	}
	[Token(Token = "0x20003BF")]
	public class TableTennisNetInShotReturn : TableTennisShotReturnBase
	{
		[Token(Token = "0x40013D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Inject]
		private IPublisher<FPActionData> _publisher;

		[Token(Token = "0x40013DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TableTennisReturnManager _homerunShotReturn;

		[Token(Token = "0x40013DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private TableTennisReturnManager _slamShotReturn;

		[Token(Token = "0x40013DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private TableTennisReturnManager _missShotReturn;

		[Token(Token = "0x40013DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private TableTennisReturnManager _slowShotReturn;

		[Token(Token = "0x40013DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TableTennisReturnManager _blockReturn;

		[Token(Token = "0x40013DF")]
		private const float _minPhi = -0f;

		[Token(Token = "0x40013E0")]
		private const float _thetaThreshold = 70f;

		[Token(Token = "0x6000F01")]
		[Address(RVA = "0x19BDDBC", Offset = "0x19BDDBC", VA = "0x19BDDBC", Slot = "5")]
		public override void Shot(TableTennisShotInfomation info)
		{
		}

		[Token(Token = "0x6000F02")]
		[Address(RVA = "0x19BE3A8", Offset = "0x19BE3A8", VA = "0x19BE3A8")]
		private void WrongFaceShot()
		{
		}

		[Token(Token = "0x6000F03")]
		[Address(RVA = "0x19BDFB8", Offset = "0x19BDFB8", VA = "0x19BDFB8")]
		private void RightFaceShot(TableTennisShotInfomation info)
		{
		}

		[Token(Token = "0x6000F04")]
		[Address(RVA = "0x19BE1AC", Offset = "0x19BE1AC", VA = "0x19BE1AC")]
		private void RightFacePowerShot(TableTennisShotInfomation info)
		{
		}

		[Token(Token = "0x6000F05")]
		[Address(RVA = "0x19BDE8C", Offset = "0x19BDE8C", VA = "0x19BDE8C")]
		private void RightFaceBlockShot(TableTennisShotInfomation info)
		{
		}

		[Token(Token = "0x6000F06")]
		[Address(RVA = "0x19BE504", Offset = "0x19BE504", VA = "0x19BE504")]
		public TableTennisNetInShotReturn()
		{
		}
	}
	[Token(Token = "0x20003C0")]
	public class TableTennisPhysicsShotReturn : TableTennisShotReturnBase
	{
		[Token(Token = "0x40013E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Rigidbody _ball;

		[Token(Token = "0x40013E2")]
		private const float _tableheight = 0.76f;

		[Token(Token = "0x40013E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static GameObject _ballPrefab;

		[Token(Token = "0x40013E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float _shotPower;

		[Token(Token = "0x40013E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float bpm;

		[Token(Token = "0x40013E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AnimationCurve _curve;

		[Token(Token = "0x40013E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private TextMeshPro _debugText;

		[Token(Token = "0x6000F07")]
		[Address(RVA = "0x19BE50C", Offset = "0x19BE50C", VA = "0x19BE50C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F08")]
		[Address(RVA = "0x19BE5E4", Offset = "0x19BE5E4", VA = "0x19BE5E4", Slot = "5")]
		public override void Shot(TableTennisShotInfomation info)
		{
		}

		[Token(Token = "0x6000F09")]
		[Address(RVA = "0x19BE9CC", Offset = "0x19BE9CC", VA = "0x19BE9CC")]
		private float GetVelocityY(float deltaY, float time)
		{
			return default(float);
		}

		[Token(Token = "0x6000F0A")]
		[Address(RVA = "0x19BEB04", Offset = "0x19BEB04", VA = "0x19BEB04")]
		private float GetVelocityY(float deltaY, float time, float gravity)
		{
			return default(float);
		}

		[Token(Token = "0x6000F0B")]
		[Address(RVA = "0x19BEB1C", Offset = "0x19BEB1C", VA = "0x19BEB1C")]
		private Vector3 GetVelocityXZ(TableTennisShotInfomation info)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000F0C")]
		[Address(RVA = "0x19BEDC0", Offset = "0x19BEDC0", VA = "0x19BEDC0")]
		public TableTennisPhysicsShotReturn()
		{
		}
	}
	[Token(Token = "0x20003C2")]
	public class TableTennisPracticeClearCounter : PracticeClearCounter
	{
		[Token(Token = "0x40013EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private BoolReactiveProperty _clearMessage;

		[Token(Token = "0x1700013A")]
		[Inject]
		private ISubscriber<FPActionData> OnFPAction
		{
			[Token(Token = "0x6000F0F")]
			[Address(RVA = "0x19BEDF0", Offset = "0x19BEDF0", VA = "0x19BEDF0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F10")]
			[Address(RVA = "0x19BEDF8", Offset = "0x19BEDF8", VA = "0x19BEDF8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700013B")]
		public override BoolReactiveProperty ClearMessage
		{
			[Token(Token = "0x6000F13")]
			[Address(RVA = "0x19BEFDC", Offset = "0x19BEFDC", VA = "0x19BEFDC", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F14")]
			[Address(RVA = "0x19BEFE4", Offset = "0x19BEFE4", VA = "0x19BEFE4", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x6000F11")]
		[Address(RVA = "0x19BEE00", Offset = "0x19BEE00", VA = "0x19BEE00")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F12")]
		[Address(RVA = "0x19BEF6C", Offset = "0x19BEF6C", VA = "0x19BEF6C")]
		private void ShotCount(JudgementData data)
		{
		}

		[Token(Token = "0x6000F15")]
		[Address(RVA = "0x19BEFEC", Offset = "0x19BEFEC", VA = "0x19BEFEC")]
		public TableTennisPracticeClearCounter()
		{
		}
	}
	[Token(Token = "0x20003C3")]
	public class TableTennisRacket : MonoBehaviour
	{
		[Token(Token = "0x40013ED")]
		private const string BALL_TAG = "TableTennisBall";

		[Token(Token = "0x40013EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("面の向きと振る向きの角度の閾値（度）")]
		[SerializeField]
		private float _angleThreshold;

		[Token(Token = "0x40013EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _swingSpeedThreshold;

		[Token(Token = "0x40013F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _powerSwingSpeedThreshold;

		[Token(Token = "0x40013F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Header("Audio Settings")]
		[SerializeField]
		private AudioSource _audio;

		[Token(Token = "0x40013F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _hitSound;

		[Token(Token = "0x40013F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Queue<Vector3> _velocities;

		[Token(Token = "0x40013F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float cosThreshold;

		[Token(Token = "0x40013F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 _prePosition;

		[Token(Token = "0x1700013C")]
		private Vector3 Velocity
		{
			[Token(Token = "0x6000F17")]
			[Address(RVA = "0x19BF08C", Offset = "0x19BF08C", VA = "0x19BF08C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6000F18")]
		[Address(RVA = "0x19BF210", Offset = "0x19BF210", VA = "0x19BF210")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F19")]
		[Address(RVA = "0x19BF34C", Offset = "0x19BF34C", VA = "0x19BF34C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F1A")]
		[Address(RVA = "0x19BF450", Offset = "0x19BF450", VA = "0x19BF450")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000F1B")]
		[Address(RVA = "0x19BF594", Offset = "0x19BF594", VA = "0x19BF594")]
		private void HitBall(TableTennisBall ball)
		{
		}

		[Token(Token = "0x6000F1C")]
		[Address(RVA = "0x19BFB98", Offset = "0x19BFB98", VA = "0x19BFB98")]
		private TableTennisShotTypeKeys GetInputKey(Vector3 vel, Vector3 ballforward)
		{
			return default(TableTennisShotTypeKeys);
		}

		[Token(Token = "0x6000F1D")]
		[Address(RVA = "0x19BFCF8", Offset = "0x19BFCF8", VA = "0x19BFCF8")]
		public TableTennisRacket()
		{
		}
	}
	[Token(Token = "0x20003C5")]
	public class TableTennisReturnManager : MonoBehaviour, IAutoSetUp
	{
		[Serializable]
		[Token(Token = "0x20003C6")]
		private struct FitPatternAction
		{
			[Token(Token = "0x4001400")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[RestrictedStringByEnum(typeof(TableTennisEventKeys))]
			public string key;

			[Token(Token = "0x4001401")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float delayBeat;
		}

		[Token(Token = "0x40013F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private FitPatternBoxManager _fitPatternBox;

		[Token(Token = "0x40013F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private FPActionDelay _fpActionDelay;

		[Token(Token = "0x40013FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private DollyCartAnimationCurve _cart;

		[Token(Token = "0x40013FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private CinemachinePath _path;

		[Token(Token = "0x40013FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private TableTennisPathAdjust _pathAdjust;

		[Token(Token = "0x40013FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[CanBeNull]
		private TableTennisBoundEffect _boundEffect;

		[Token(Token = "0x40013FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private bool _isMovable;

		[Token(Token = "0x40013FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private FitPatternAction[] _actions;

		[Token(Token = "0x6000F21")]
		[Address(RVA = "0x19BD880", Offset = "0x19BD880", VA = "0x19BD880")]
		public void ActivateReturnBall(TableTennisShotInfomation info, float rotateAngleTheta = 0f, float rotateAnglePhi = 0f, float adjustAngle = 0f)
		{
		}

		[Token(Token = "0x6000F22")]
		[Address(RVA = "0x19BFD9C", Offset = "0x19BFD9C", VA = "0x19BFD9C", Slot = "4")]
		public void AutoSetUp()
		{
		}

		[Token(Token = "0x6000F23")]
		[Address(RVA = "0x19BFF3C", Offset = "0x19BFF3C", VA = "0x19BFF3C")]
		public TableTennisReturnManager()
		{
		}
	}
	[Token(Token = "0x20003C7")]
	public class TableTennisServeSound : MonoBehaviour
	{
		[Token(Token = "0x4001402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Inject]
		private ISubscriber<FPActionData> _subscriber;

		[Token(Token = "0x4001403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource _foreServeAudio;

		[Token(Token = "0x4001404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioSource _backServeAudio;

		[Token(Token = "0x4001405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _clip;

		[Token(Token = "0x6000F24")]
		[Address(RVA = "0x19BFF44", Offset = "0x19BFF44", VA = "0x19BFF44")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F25")]
		[Address(RVA = "0x19C0070", Offset = "0x19C0070", VA = "0x19C0070")]
		public TableTennisServeSound()
		{
		}
	}
	[Token(Token = "0x20003C8")]
	public class TableTennisShotReturnBase : MonoBehaviour, IAutoSetUp
	{
		[Token(Token = "0x4001406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected TableTennisInputJudgeAction _judgeAction;

		[Token(Token = "0x4001407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected FitPatternBoxManager _fitPatternBox;

		[Token(Token = "0x6000F27")]
		[Address(RVA = "0x19C0168", Offset = "0x19C0168", VA = "0x19C0168", Slot = "5")]
		public virtual void Shot(TableTennisShotInfomation info)
		{
		}

		[Token(Token = "0x6000F28")]
		[Address(RVA = "0x19C0184", Offset = "0x19C0184", VA = "0x19C0184", Slot = "6")]
		public virtual void AutoSetUp()
		{
		}

		[Token(Token = "0x6000F29")]
		[Address(RVA = "0x19BDC50", Offset = "0x19BDC50", VA = "0x19BDC50")]
		public TableTennisShotReturnBase()
		{
		}
	}
	[Token(Token = "0x20003C9")]
	public class TableTennisSlowShotReturn : TableTennisShotReturnBase
	{
		[Token(Token = "0x4001408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool isBackHand;

		[Token(Token = "0x4001409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Inject]
		private IPublisher<FPActionData> _publisher;

		[Token(Token = "0x400140A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private TableTennisReturnManager _fastShotReturn;

		[Token(Token = "0x400140B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private TableTennisReturnManager _fastoutShotReturn;

		[Token(Token = "0x400140C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private TableTennisReturnManager _slowShotReturn;

		[Token(Token = "0x400140D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TableTennisReturnManager _slowoutShotReturn;

		[Token(Token = "0x400140E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private TableTennisReturnManager _blockReturn;

		[Token(Token = "0x400140F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _angleStraight;

		[Token(Token = "0x4001410")]
		private const float _minPhi = -20f;

		[Token(Token = "0x4001411")]
		private const float _thetaThreshold = 45f;

		[Token(Token = "0x6000F2A")]
		[Address(RVA = "0x19C0258", Offset = "0x19C0258", VA = "0x19C0258")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F2B")]
		[Address(RVA = "0x19C0348", Offset = "0x19C0348", VA = "0x19C0348", Slot = "5")]
		public override void Shot(TableTennisShotInfomation info)
		{
		}

		[Token(Token = "0x6000F2C")]
		[Address(RVA = "0x19C049C", Offset = "0x19C049C", VA = "0x19C049C")]
		private void WrongFaceShot()
		{
		}

		[Token(Token = "0x6000F2D")]
		[Address(RVA = "0x19C05F8", Offset = "0x19C05F8", VA = "0x19C05F8")]
		private void RightFaceShot(TableTennisShotInfomation info)
		{
		}

		[Token(Token = "0x6000F2E")]
		[Address(RVA = "0x19C082C", Offset = "0x19C082C", VA = "0x19C082C")]
		private void RightFacePowerShot(TableTennisShotInfomation info)
		{
		}

		[Token(Token = "0x6000F2F")]
		[Address(RVA = "0x19C0748", Offset = "0x19C0748", VA = "0x19C0748")]
		private void RightFaceBlockShot(TableTennisShotInfomation info)
		{
		}

		[Token(Token = "0x6000F30")]
		[Address(RVA = "0x19C0920", Offset = "0x19C0920", VA = "0x19C0920")]
		public TableTennisSlowShotReturn()
		{
		}
	}
}
namespace __Imacreate__.__Production__.GrooveFitGames.GF24_Baseball
{
	[Token(Token = "0x20003CA")]
	public class BaseballAnimationCurveController : MonoBehaviour
	{
		[Token(Token = "0x4001412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CustomAnimationCurve _hitGreat;

		[Token(Token = "0x4001413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CustomAnimationCurve _hitOK;

		[Token(Token = "0x4001414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly float _maxAbsoluteAngle;

		[Token(Token = "0x4001415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private readonly float _maxBuntTangent;

		[Token(Token = "0x4001416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly float _timingWeight;

		[Token(Token = "0x4001417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private readonly float _timingValue;

		[Token(Token = "0x4001418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private BaseballInputKeys _inputKey;

		[Token(Token = "0x4001419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private TransformVelocityCalcurater _batHead;

		[Token(Token = "0x400141A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[ReadOnly]
		private bool _isLeftBatter;

		[Token(Token = "0x400141C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool _isDone;

		[Token(Token = "0x1700013D")]
		[Inject]
		private ISubscriber<FPActionData> OnFPAction
		{
			[Token(Token = "0x6000F32")]
			[Address(RVA = "0x19C0958", Offset = "0x19C0958", VA = "0x19C0958")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F33")]
			[Address(RVA = "0x19C0960", Offset = "0x19C0960", VA = "0x19C0960")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6000F34")]
		[Address(RVA = "0x19C0968", Offset = "0x19C0968", VA = "0x19C0968")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F35")]
		[Address(RVA = "0x19C0A94", Offset = "0x19C0A94", VA = "0x19C0A94")]
		public void SetBatterType(SelectBatHandEvent.BatterType batterType)
		{
		}

		[Token(Token = "0x6000F36")]
		[Address(RVA = "0x19C0AA4", Offset = "0x19C0AA4", VA = "0x19C0AA4")]
		public BaseballAnimationCurveController()
		{
		}
	}
	[Token(Token = "0x20003CB")]
	public class BaseballFPActionSubscribeEvent : FPActionSubscribeEvent
	{
		[Serializable]
		[Token(Token = "0x20003CC")]
		private class BaseballFPActionEvent : FPActionEventBase
		{
			[Token(Token = "0x400141E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[SerializeField]
			private BaseballEventKeys Key;

			[Token(Token = "0x6000F3A")]
			[Address(RVA = "0x19C11BC", Offset = "0x19C11BC", VA = "0x19C11BC", Slot = "4")]
			public override string GetKey()
			{
				return null;
			}

			[Token(Token = "0x6000F3B")]
			[Address(RVA = "0x19C1224", Offset = "0x19C1224", VA = "0x19C1224")]
			public BaseballFPActionEvent()
			{
			}
		}

		[Token(Token = "0x400141D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<BaseballFPActionEvent> _baseballFPActionEvent;

		[Token(Token = "0x6000F38")]
		[Address(RVA = "0x19C1138", Offset = "0x19C1138", VA = "0x19C1138")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F39")]
		[Address(RVA = "0x19C11B4", Offset = "0x19C11B4", VA = "0x19C11B4")]
		public BaseballFPActionSubscribeEvent()
		{
		}
	}
	[Token(Token = "0x20003CD")]
	public class BaseballFPAutoInputJudgeAction : FPAutoInputJudgeActionBase
	{
		[Token(Token = "0x400141F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private List<BaseballJudgeComponent> baseballJudgeComponents;

		[Token(Token = "0x6000F3C")]
		[Address(RVA = "0x19C122C", Offset = "0x19C122C", VA = "0x19C122C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F3D")]
		[Address(RVA = "0x19C1320", Offset = "0x19C1320", VA = "0x19C1320")]
		private static AutoJudgeComponent ConvertToJudgeComponent(BaseballJudgeComponent x)
		{
			return null;
		}

		[Token(Token = "0x6000F3E")]
		[Address(RVA = "0x19C1438", Offset = "0x19C1438", VA = "0x19C1438")]
		public BaseballFPAutoInputJudgeAction()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003CE")]
	public class BaseballJudgeComponent
	{
		[Token(Token = "0x4001420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BaseballEventKeys _actionKeyEnum;

		[Token(Token = "0x4001421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public BaseballInputKeys _inputKeyEnum;

		[Token(Token = "0x4001422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float _timing;

		[Token(Token = "0x4001423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public JudgeRange _judgeRange;

		[NonSerialized]
		[Token(Token = "0x4001424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool _isJudgeDone;

		[Token(Token = "0x6000F3F")]
		[Address(RVA = "0x19C1440", Offset = "0x19C1440", VA = "0x19C1440")]
		public BaseballJudgeComponent()
		{
		}
	}
	[Token(Token = "0x20003CF")]
	public class BaseballFPBuntJudge : FPJudgeBase
	{
		[Token(Token = "0x4001425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform batTop;

		[Token(Token = "0x4001426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform ball;

		[Token(Token = "0x4001427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float greatThreshold;

		[Token(Token = "0x4001428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float okThreshold;

		[Token(Token = "0x4001429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float minDiff;

		[Token(Token = "0x400142A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float _shotThreshold;

		[Token(Token = "0x400142B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 _posBatTopOld;

		[Token(Token = "0x400142C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 _posBatTopNew;

		[Token(Token = "0x400142D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 _batTopVelocity;

		[Token(Token = "0x6000F40")]
		[Address(RVA = "0x19C1448", Offset = "0x19C1448", VA = "0x19C1448")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F41")]
		[Address(RVA = "0x19C14BC", Offset = "0x19C14BC", VA = "0x19C14BC", Slot = "4")]
		public override JudgementData Judge()
		{
			return null;
		}

		[Token(Token = "0x6000F42")]
		[Address(RVA = "0x19C182C", Offset = "0x19C182C", VA = "0x19C182C")]
		public BaseballFPBuntJudge()
		{
		}
	}
	[Token(Token = "0x20003D0")]
	public class BaseballFPInputJudgeAction : FPInputJudgeAction
	{
		[Token(Token = "0x400142E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private BaseballEventKeys _actionKeyEnum;

		[Token(Token = "0x400142F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private BaseballInputKeys _inputKeyEnum;

		[Token(Token = "0x6000F43")]
		[Address(RVA = "0x19C2848", Offset = "0x19C2848", VA = "0x19C2848")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F44")]
		[Address(RVA = "0x19C2908", Offset = "0x19C2908", VA = "0x19C2908")]
		public BaseballFPInputJudgeAction()
		{
		}
	}
	[Token(Token = "0x20003D1")]
	public class BaseballFPNoJudgementAction : FPNoJudgementAction
	{
		[Serializable]
		[Token(Token = "0x20003D2")]
		private class ActionParam : ActionParamBase
		{
			[Token(Token = "0x4001431")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			private List<BaseballEventKeys> ActionKeys;

			[Token(Token = "0x6000F47")]
			[Address(RVA = "0x19C29B0", Offset = "0x19C29B0", VA = "0x19C29B0", Slot = "4")]
			public override List<string> GetKeyFromActionKeys()
			{
				return null;
			}

			[Token(Token = "0x6000F48")]
			[Address(RVA = "0x19C2AB8", Offset = "0x19C2AB8", VA = "0x19C2AB8")]
			public ActionParam()
			{
			}
		}

		[Token(Token = "0x4001430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private List<ActionParam> actions;

		[Token(Token = "0x6000F45")]
		[Address(RVA = "0x19C2910", Offset = "0x19C2910", VA = "0x19C2910", Slot = "4")]
		protected override void BeatSubscribeAction(float currentBeat)
		{
		}

		[Token(Token = "0x6000F46")]
		[Address(RVA = "0x19C29A8", Offset = "0x19C29A8", VA = "0x19C29A8")]
		public BaseballFPNoJudgementAction()
		{
		}
	}
	[Token(Token = "0x20003D4")]
	public class BaseballFunsEffect : MonoBehaviour
	{
		[Token(Token = "0x4001436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private List<VisualEffect> _vfxes;

		[Token(Token = "0x4001437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Renderer _right;

		[Token(Token = "0x4001438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Renderer _left;

		[Token(Token = "0x4001439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Texture _baseball;

		[Token(Token = "0x400143A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Texture _homerun;

		[Token(Token = "0x400143B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int MainTex;

		[Token(Token = "0x1700013E")]
		[Inject]
		private ISubscriber<BPMData> BPMDataMessage
		{
			[Token(Token = "0x6000F4C")]
			[Address(RVA = "0x19C2B9C", Offset = "0x19C2B9C", VA = "0x19C2B9C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F4D")]
			[Address(RVA = "0x19C2BA4", Offset = "0x19C2BA4", VA = "0x19C2BA4")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700013F")]
		[Inject]
		private ISubscriber<FPActionData> FPActionMessage
		{
			[Token(Token = "0x6000F4E")]
			[Address(RVA = "0x19C2BAC", Offset = "0x19C2BAC", VA = "0x19C2BAC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F4F")]
			[Address(RVA = "0x19C2BB4", Offset = "0x19C2BB4", VA = "0x19C2BB4")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6000F50")]
		[Address(RVA = "0x19C2BBC", Offset = "0x19C2BBC", VA = "0x19C2BBC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F51")]
		[Address(RVA = "0x19C2BC0", Offset = "0x19C2BC0", VA = "0x19C2BC0")]
		public void SetNormalMotion()
		{
		}

		[Token(Token = "0x6000F52")]
		[Address(RVA = "0x19C2BC4", Offset = "0x19C2BC4", VA = "0x19C2BC4")]
		public BaseballFunsEffect()
		{
		}
	}
	[Token(Token = "0x20003D5")]
	public class BaseballHaptics : MonoBehaviour
	{
		[Token(Token = "0x400143C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[ReadOnly]
		public VRHand.HandType _batHand;

		[Token(Token = "0x400143E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Inject]
		private InputProvider _inputProvider;

		[Token(Token = "0x17000140")]
		[Inject]
		private ISubscriber<FPActionData> OnFPAction
		{
			[Token(Token = "0x6000F56")]
			[Address(RVA = "0x19C3140", Offset = "0x19C3140", VA = "0x19C3140")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F57")]
			[Address(RVA = "0x19C3148", Offset = "0x19C3148", VA = "0x19C3148")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6000F58")]
		[Address(RVA = "0x19C3150", Offset = "0x19C3150", VA = "0x19C3150")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F59")]
		[Address(RVA = "0x19C327C", Offset = "0x19C327C", VA = "0x19C327C")]
		public BaseballHaptics()
		{
		}
	}
	[Token(Token = "0x20003D6")]
	[RequireComponent(typeof(AudioSource))]
	public class BaseballInputPublisher : InputPublisher
	{
		[Token(Token = "0x400143F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("SwingErea")]
		[SerializeField]
		private Transform _swingErea;

		[Token(Token = "0x4001440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _strikeErea;

		[Token(Token = "0x4001441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Header("Objects")]
		[SerializeField]
		private Transform _batTop;

		[Token(Token = "0x4001442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform _batGrip;

		[Token(Token = "0x4001443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform _head;

		[Token(Token = "0x4001444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Header("Settings")]
		[SerializeField]
		private AudioClip _swingSound;

		[Token(Token = "0x4001445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float _backJudgeThreshold;

		[Token(Token = "0x4001446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private float _shotThreshold;

		[Token(Token = "0x4001447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private float _shotJudgeErea;

		[Token(Token = "0x4001448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private float _swingEreaDintance;

		[Token(Token = "0x4001449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private StringReactiveProperty _inputMessage;

		[Token(Token = "0x400144A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private AudioSource _audio;

		[Token(Token = "0x400144B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool _isShotOK;

		[Token(Token = "0x400144C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 _posBatFaceOld;

		[Token(Token = "0x400144D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 _posBatFaceNew;

		[Token(Token = "0x400144E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Vector3 _batFaceVelocity;

		[Token(Token = "0x4001450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool _isPauseNow;

		[Token(Token = "0x4001451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[Inject]
		private InputProvider _inputProvider;

		[Token(Token = "0x17000141")]
		[Inject]
		private ISubscriber<OnPause> OnPauseEvent
		{
			[Token(Token = "0x6000F5B")]
			[Address(RVA = "0x19C32D8", Offset = "0x19C32D8", VA = "0x19C32D8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F5C")]
			[Address(RVA = "0x19C32E0", Offset = "0x19C32E0", VA = "0x19C32E0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000142")]
		public override StringReactiveProperty InputMessage
		{
			[Token(Token = "0x6000F60")]
			[Address(RVA = "0x19C379C", Offset = "0x19C379C", VA = "0x19C379C", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F61")]
			[Address(RVA = "0x19C37A4", Offset = "0x19C37A4", VA = "0x19C37A4", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x6000F5D")]
		[Address(RVA = "0x19C32E8", Offset = "0x19C32E8", VA = "0x19C32E8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F5E")]
		[Address(RVA = "0x19C34AC", Offset = "0x19C34AC", VA = "0x19C34AC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F5F")]
		[Address(RVA = "0x19C372C", Offset = "0x19C372C", VA = "0x19C372C")]
		private BaseballInputKeys SwingJudge(Vector3 _batpos)
		{
			return default(BaseballInputKeys);
		}

		[Token(Token = "0x6000F62")]
		[Address(RVA = "0x19C37AC", Offset = "0x19C37AC", VA = "0x19C37AC")]
		public BaseballInputPublisher()
		{
		}
	}
	[Token(Token = "0x20003D7")]
	public enum BaseballEventKeys
	{
		[Token(Token = "0x4001453")]
		StraightMotion,
		[Token(Token = "0x4001454")]
		StraightBallRelease,
		[Token(Token = "0x4001455")]
		StraightHit,
		[Token(Token = "0x4001456")]
		CurveMotion,
		[Token(Token = "0x4001457")]
		CurveBallRelease,
		[Token(Token = "0x4001458")]
		CurveStart,
		[Token(Token = "0x4001459")]
		CurveHit,
		[Token(Token = "0x400145A")]
		BuntNod,
		[Token(Token = "0x400145B")]
		BuntMotion,
		[Token(Token = "0x400145C")]
		BuntBallRelease,
		[Token(Token = "0x400145D")]
		BuntHit
	}
	[Token(Token = "0x20003D8")]
	public enum BaseballInputKeys
	{
		[Token(Token = "0x400145F")]
		Swing,
		[Token(Token = "0x4001460")]
		Bunt,
		[Token(Token = "0x4001461")]
		None
	}
	[Token(Token = "0x20003D9")]
	public class BaseballPracticeClearCounter : PracticeClearCounter
	{
		[Token(Token = "0x20003DA")]
		private enum PracticeType
		{
			[Token(Token = "0x4001466")]
			Straight,
			[Token(Token = "0x4001467")]
			Curve,
			[Token(Token = "0x4001468")]
			Bunt
		}

		[Token(Token = "0x4001462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PracticeType _practiceType;

		[Token(Token = "0x4001463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private BoolReactiveProperty _clearMessage;

		[Token(Token = "0x17000143")]
		[Inject]
		private ISubscriber<FPActionData> OnFPAction
		{
			[Token(Token = "0x6000F64")]
			[Address(RVA = "0x19C37F4", Offset = "0x19C37F4", VA = "0x19C37F4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F65")]
			[Address(RVA = "0x19C37FC", Offset = "0x19C37FC", VA = "0x19C37FC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000144")]
		public override BoolReactiveProperty ClearMessage
		{
			[Token(Token = "0x6000F69")]
			[Address(RVA = "0x19C3B4C", Offset = "0x19C3B4C", VA = "0x19C3B4C", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F6A")]
			[Address(RVA = "0x19C3B54", Offset = "0x19C3B54", VA = "0x19C3B54", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x6000F66")]
		[Address(RVA = "0x19C3804", Offset = "0x19C3804", VA = "0x19C3804")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F67")]
		[Address(RVA = "0x19C3970", Offset = "0x19C3970", VA = "0x19C3970")]
		private void HitCount(FPActionData data)
		{
		}

		[Token(Token = "0x6000F68")]
		[Address(RVA = "0x19C3A7C", Offset = "0x19C3A7C", VA = "0x19C3A7C")]
		private void BuntCount(FPActionData data)
		{
		}

		[Token(Token = "0x6000F6B")]
		[Address(RVA = "0x19C3B5C", Offset = "0x19C3B5C", VA = "0x19C3B5C")]
		public BaseballPracticeClearCounter()
		{
		}
	}
	[Token(Token = "0x20003DB")]
	[RequireComponent(typeof(GrooveFitAudioSource))]
	public class BaseballSound : MonoBehaviour
	{
		[Token(Token = "0x4001469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioClip _releaseStraight;

		[Token(Token = "0x400146A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip _releaseCurve;

		[Token(Token = "0x400146B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip _releaseBunt;

		[Token(Token = "0x400146C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _hitGreat;

		[Token(Token = "0x400146D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AudioClip _hitOk;

		[Token(Token = "0x400146E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private AudioClip _hitBad;

		[Token(Token = "0x400146F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private AudioClip _hitBunt;

		[Token(Token = "0x4001470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioClip _catch;

		[Token(Token = "0x4001472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private AudioSource _audio;

		[Token(Token = "0x17000145")]
		[Inject]
		private ISubscriber<FPActionData> OnFPAction
		{
			[Token(Token = "0x6000F6D")]
			[Address(RVA = "0x19C3B80", Offset = "0x19C3B80", VA = "0x19C3B80")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F6E")]
			[Address(RVA = "0x19C3B88", Offset = "0x19C3B88", VA = "0x19C3B88")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6000F6F")]
		[Address(RVA = "0x19C3B90", Offset = "0x19C3B90", VA = "0x19C3B90")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F70")]
		[Address(RVA = "0x19C3CF0", Offset = "0x19C3CF0", VA = "0x19C3CF0")]
		private void PlaySound(FPActionData value)
		{
		}

		[Token(Token = "0x6000F71")]
		[Address(RVA = "0x19C3E64", Offset = "0x19C3E64", VA = "0x19C3E64")]
		public void PlayCatchSoundOnCompleteAnimation()
		{
		}

		[Token(Token = "0x6000F72")]
		[Address(RVA = "0x19C3E68", Offset = "0x19C3E68", VA = "0x19C3E68")]
		public BaseballSound()
		{
		}
	}
	[Token(Token = "0x20003DC")]
	public class BaseballTargetRing : MonoBehaviour
	{
		[Token(Token = "0x4001473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FitPatternBoxManager _fitPatternBox;

		[Token(Token = "0x4001474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int _shrinkBeatCount;

		[Token(Token = "0x4001475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _ring;

		[Token(Token = "0x4001476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform _hitPos;

		[Token(Token = "0x4001477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float _minSize;

		[Token(Token = "0x4001478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Tween _tween;

		[Token(Token = "0x6000F74")]
		[Address(RVA = "0x19C3E74", Offset = "0x19C3E74", VA = "0x19C3E74")]
		public void StartShrink()
		{
		}

		[Token(Token = "0x6000F75")]
		[Address(RVA = "0x19C3F70", Offset = "0x19C3F70", VA = "0x19C3F70")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000F76")]
		[Address(RVA = "0x19C4024", Offset = "0x19C4024", VA = "0x19C4024")]
		public BaseballTargetRing()
		{
		}
	}
	[Token(Token = "0x20003DD")]
	public class CheckBatGrab : EventBlock
	{
		[StructLayout(3)]
		[Token(Token = "0x20003DE")]
		[CompilerGenerated]
		private struct <SetEvent>d__6 : IAsyncStateMachine
		{
			[Token(Token = "0x400147F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001480")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x4001481")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CheckBatGrab <>4__this;

			[Token(Token = "0x4001482")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken token;

			[Token(Token = "0x4001483")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6000F79")]
			[Address(RVA = "0x19C4124", Offset = "0x19C4124", VA = "0x19C4124", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000F7A")]
			[Address(RVA = "0x19C4AC4", Offset = "0x19C4AC4", VA = "0x19C4AC4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SelectBatHandEvent _selectBat;

		[Token(Token = "0x400147A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _bat;

		[Token(Token = "0x400147B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private BaseballHaptics _haptics;

		[Token(Token = "0x400147C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GrabBatHandController _grabBatHandController;

		[Token(Token = "0x400147D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GrabBatCheckBothHand grabBatCheckBothHand;

		[Token(Token = "0x400147E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Inject]
		private InputProvider _inputProvider;

		[Token(Token = "0x6000F77")]
		[Address(RVA = "0x19C4040", Offset = "0x19C4040", VA = "0x19C4040", Slot = "4")]
		[AsyncStateMachine(typeof(<SetEvent>d__6))]
		public override UniTask<bool> SetEvent(CancellationToken token)
		{
			return default(UniTask<bool>);
		}

		[Token(Token = "0x6000F78")]
		[Address(RVA = "0x19C411C", Offset = "0x19C411C", VA = "0x19C411C")]
		public CheckBatGrab()
		{
		}
	}
	[Token(Token = "0x20003DF")]
	public class FPAutoInputJudgeActionBase : JudgeActionBase
	{
		[Token(Token = "0x4001484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FPJudgeBase FpJudgeBase;

		[Token(Token = "0x4001485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal List<AutoJudgeComponent> _autoJudgeComponents;

		[Token(Token = "0x4001486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int currentJudgeIndex;

		[Token(Token = "0x6000F7B")]
		[Address(RVA = "0x19C4B1C", Offset = "0x19C4B1C", VA = "0x19C4B1C", Slot = "4")]
		protected override void BeatSubscribeAction(float currentBeat)
		{
		}

		[Token(Token = "0x6000F7C")]
		[Address(RVA = "0x19C50B4", Offset = "0x19C50B4", VA = "0x19C50B4")]
		public FPAutoInputJudgeActionBase()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003E0")]
	public class JudgeRange
	{
		[Token(Token = "0x4001487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float min;

		[Token(Token = "0x4001488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float max;

		[Token(Token = "0x6000F7D")]
		[Address(RVA = "0x19C50BC", Offset = "0x19C50BC", VA = "0x19C50BC")]
		public JudgeRange()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003E1")]
	public class AutoJudgeComponent
	{
		[Token(Token = "0x4001489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string _actionKey;

		[Token(Token = "0x400148A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string _targetInputKey;

		[Token(Token = "0x400148B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public JudgeRange _judgeRange;

		[Token(Token = "0x400148C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float _timing;

		[Token(Token = "0x400148D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool _isJudgeDone;

		[Token(Token = "0x6000F7E")]
		[Address(RVA = "0x19C50C4", Offset = "0x19C50C4", VA = "0x19C50C4")]
		public AutoJudgeComponent(string actionKey, string targetInputKey, float timing, JudgeRange judgeRange, bool isJudgeDone)
		{
		}
	}
	[Token(Token = "0x20003E2")]
	public class GrabBatHandController : MonoBehaviour
	{
		[Token(Token = "0x400148F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Inject]
		private InputProvider _inputProvider;

		[NonSerialized]
		[Token(Token = "0x4001490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool _isGrabBat;

		[Token(Token = "0x17000146")]
		[Inject]
		private ISubscriber<OnPause> OnPauseEvent
		{
			[Token(Token = "0x6000F7F")]
			[Address(RVA = "0x19C5140", Offset = "0x19C5140", VA = "0x19C5140")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F80")]
			[Address(RVA = "0x19C5148", Offset = "0x19C5148", VA = "0x19C5148")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000147")]
		public VRHand.HandType _grabHand
		{
			[Token(Token = "0x6000F81")]
			[Address(RVA = "0x19C5150", Offset = "0x19C5150", VA = "0x19C5150")]
			[CompilerGenerated]
			get
			{
				return default(VRHand.HandType);
			}
			[Token(Token = "0x6000F82")]
			[Address(RVA = "0x19C5158", Offset = "0x19C5158", VA = "0x19C5158")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6000F83")]
		[Address(RVA = "0x19C5160", Offset = "0x19C5160", VA = "0x19C5160")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F84")]
		[Address(RVA = "0x19C494C", Offset = "0x19C494C", VA = "0x19C494C")]
		public void SaveGrabBatHand(VRHand.HandType hand)
		{
		}

		[Token(Token = "0x6000F85")]
		[Address(RVA = "0x19C528C", Offset = "0x19C528C", VA = "0x19C528C")]
		public void ChangeGrabBatHand(bool active)
		{
		}

		[Token(Token = "0x6000F86")]
		[Address(RVA = "0x19C52C8", Offset = "0x19C52C8", VA = "0x19C52C8")]
		public GrabBatHandController()
		{
		}
	}
	[Token(Token = "0x20003E3")]
	public class HeadCalibrationDataApplyBase : MonoBehaviour
	{
		[Token(Token = "0x4001492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject[] _heightUpObjects;

		[Token(Token = "0x4001493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject[] _heightDownObjects;

		[Token(Token = "0x4001494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly float _headHeightBase;

		[Token(Token = "0x4001495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float _headHeight;

		[Token(Token = "0x4001496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float _headHeightDifference;

		[Token(Token = "0x6000F88")]
		[Address(RVA = "0x19C533C", Offset = "0x19C533C", VA = "0x19C533C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F89")]
		[Address(RVA = "0x19C552C", Offset = "0x19C552C", VA = "0x19C552C")]
		public HeadCalibrationDataApplyBase()
		{
		}
	}
	[Token(Token = "0x20003E4")]
	[RequireComponent(typeof(GrooveFitAudioSource))]
	public class PitcherManager : MonoBehaviour
	{
		[Token(Token = "0x4001497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Animation")]
		[SerializeField]
		private Animator _animator;

		[Token(Token = "0x4001498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("Sound")]
		[SerializeField]
		private AudioClip _throwStraight;

		[Token(Token = "0x4001499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip _throwCurve;

		[Token(Token = "0x400149A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _throwBunt;

		[Token(Token = "0x400149B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AudioClip _nod;

		[Token(Token = "0x400149D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private AudioSource _audio;

		[Token(Token = "0x400149E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int StraightMotion;

		[Token(Token = "0x400149F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int CurveMotion;

		[Token(Token = "0x40014A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly int KnuckleMotion;

		[Token(Token = "0x40014A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static readonly int BuntNod;

		[Token(Token = "0x17000148")]
		[Inject]
		private ISubscriber<FPActionData> OnFPAction
		{
			[Token(Token = "0x6000F8A")]
			[Address(RVA = "0x19C5540", Offset = "0x19C5540", VA = "0x19C5540")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F8B")]
			[Address(RVA = "0x19C5548", Offset = "0x19C5548", VA = "0x19C5548")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6000F8C")]
		[Address(RVA = "0x19C5550", Offset = "0x19C5550", VA = "0x19C5550")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F8D")]
		[Address(RVA = "0x19C56B0", Offset = "0x19C56B0", VA = "0x19C56B0")]
		private void PlaySound(FPActionData value)
		{
		}

		[Token(Token = "0x6000F8E")]
		[Address(RVA = "0x19C57AC", Offset = "0x19C57AC", VA = "0x19C57AC")]
		private void PlayAnimation(FPActionData value)
		{
		}

		[Token(Token = "0x6000F8F")]
		[Address(RVA = "0x19C5920", Offset = "0x19C5920", VA = "0x19C5920")]
		public PitcherManager()
		{
		}
	}
	[Token(Token = "0x20003E5")]
	[RequireComponent(typeof(AudioSource))]
	public class SelectBatHandEvent : EventBlock
	{
		[Token(Token = "0x20003E6")]
		public enum BatterType
		{
			[Token(Token = "0x40014B1")]
			Right,
			[Token(Token = "0x40014B2")]
			Left
		}

		[StructLayout(3)]
		[Token(Token = "0x20003E7")]
		[CompilerGenerated]
		private struct <SetEvent>d__14 : IAsyncStateMachine
		{
			[Token(Token = "0x40014B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40014B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x40014B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SelectBatHandEvent <>4__this;

			[Token(Token = "0x40014B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken token;

			[Token(Token = "0x40014B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6000F97")]
			[Address(RVA = "0x19C613C", Offset = "0x19C613C", VA = "0x19C613C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000F98")]
			[Address(RVA = "0x19C696C", Offset = "0x19C696C", VA = "0x19C696C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20003E8")]
		[CompilerGenerated]
		private struct <BatCatchAsync>d__15 : IAsyncStateMachine
		{
			[Token(Token = "0x40014B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40014B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x40014BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SelectBatHandEvent <>4__this;

			[Token(Token = "0x40014BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CancellationToken token;

			[Token(Token = "0x40014BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private BatterType <batterType>5__2;

			[Token(Token = "0x40014BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6000F99")]
			[Address(RVA = "0x19C69C4", Offset = "0x19C69C4", VA = "0x19C69C4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000F9A")]
			[Address(RVA = "0x19C75C8", Offset = "0x19C75C8", VA = "0x19C75C8", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20003E9")]
		[CompilerGenerated]
		private struct <AdjustWorld>d__16 : IAsyncStateMachine
		{
			[Token(Token = "0x40014BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40014BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x40014C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SelectBatHandEvent <>4__this;

			[Token(Token = "0x40014C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public BatterType batterType;

			[Token(Token = "0x40014C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6000F9B")]
			[Address(RVA = "0x19C75D4", Offset = "0x19C75D4", VA = "0x19C75D4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000F9C")]
			[Address(RVA = "0x19C8458", Offset = "0x19C8458", VA = "0x19C8458", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x40014A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[ReadOnly]
		public bool _selected;

		[Token(Token = "0x40014A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform leftBatterBoxBat;

		[Token(Token = "0x40014A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform rightBatterBoxBat;

		[Token(Token = "0x40014A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform _bat;

		[Token(Token = "0x40014A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private BaseballHaptics _hapticsProvider;

		[Token(Token = "0x40014A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private AudioClip _selectedSound;

		[Token(Token = "0x40014A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GrabBatHandController _grabBatHandController;

		[Token(Token = "0x40014A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private AudioSource _audio;

		[Token(Token = "0x40014AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Inject]
		private InputProvider _inputProvider;

		[Token(Token = "0x40014AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private List<Transform> objs;

		[Token(Token = "0x40014AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Vector3 rightBoxCenter;

		[Token(Token = "0x40014AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private Vector3 leftBoxCenter;

		[Token(Token = "0x40014AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GrabBatCheckBothHand grabBatCheckBothHand;

		[Token(Token = "0x40014AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private List<FitPatternBoxManager> _positionAdjustFitPatterns;

		[Token(Token = "0x6000F92")]
		[Address(RVA = "0x19C5A4C", Offset = "0x19C5A4C", VA = "0x19C5A4C", Slot = "4")]
		[AsyncStateMachine(typeof(<SetEvent>d__14))]
		public override UniTask<bool> SetEvent(CancellationToken token)
		{
			return default(UniTask<bool>);
		}

		[Token(Token = "0x6000F93")]
		[Address(RVA = "0x19C5B28", Offset = "0x19C5B28", VA = "0x19C5B28")]
		[AsyncStateMachine(typeof(<BatCatchAsync>d__15))]
		private UniTask BatCatchAsync(CancellationToken token)
		{
			return default(UniTask);
		}

		[Token(Token = "0x6000F94")]
		[Address(RVA = "0x19C495C", Offset = "0x19C495C", VA = "0x19C495C")]
		[AsyncStateMachine(typeof(<AdjustWorld>d__16))]
		public UniTask AdjustWorld(BatterType batterType, CancellationToken token)
		{
			return default(UniTask);
		}

		[Token(Token = "0x6000F95")]
		[Address(RVA = "0x19C5CA4", Offset = "0x19C5CA4", VA = "0x19C5CA4")]
		private (BatterType, float) BatterTypeCheck(VRHand.HandType type)
		{
			return default((BatterType, float));
		}

		[Token(Token = "0x6000F96")]
		[Address(RVA = "0x19C6134", Offset = "0x19C6134", VA = "0x19C6134")]
		public SelectBatHandEvent()
		{
		}
	}
}
namespace __Imacreate__.__Production__.GrooveFitGames.GF23_Golf
{
	[Token(Token = "0x20003EA")]
	public class CatActionManager : MonoBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x20003EC")]
		[CompilerGenerated]
		private struct <GoToTeachingPosition>d__50 : IAsyncStateMachine
		{
			[Token(Token = "0x40014E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40014E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x40014EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public CatActionManager <>4__this;

			[Token(Token = "0x40014EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SelectClubHandEvent.GolferSwingType golferSwingType;

			[Token(Token = "0x40014EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken token;

			[Token(Token = "0x40014ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private DOTweenAsyncExtensions.TweenAwaiter <>u__1;

			[Token(Token = "0x6000FBE")]
			[Address(RVA = "0x19C9D6C", Offset = "0x19C9D6C", VA = "0x19C9D6C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000FBF")]
			[Address(RVA = "0x19CA99C", Offset = "0x19CA99C", VA = "0x19CA99C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x40014C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Cat")]
		[SerializeField]
		private AudioSource _audio;

		[Token(Token = "0x40014C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator _animator;

		[Token(Token = "0x40014C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _cat;

		[Token(Token = "0x40014C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Header("Animation")]
		[SerializeField]
		private List<Transform> _right;

		[Token(Token = "0x40014C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private List<Transform> _left;

		[Token(Token = "0x40014C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float _walkingTime;

		[Token(Token = "0x40014C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private LookAtIK _lookAtIK;

		[Token(Token = "0x40014CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float pastWalkingTime;

		[Token(Token = "0x40014CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int WavingArm;

		[Token(Token = "0x40014CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int HandsBack;

		[Token(Token = "0x40014CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly int RightHandOnChest;

		[Token(Token = "0x40014D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static readonly int FistUp;

		[Token(Token = "0x40014D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly int Surprise;

		[Token(Token = "0x40014D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static readonly int Peace;

		[Token(Token = "0x40014D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly int Nod;

		[Token(Token = "0x40014D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private static readonly int EndWavingArm;

		[Token(Token = "0x40014D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static readonly int ToGolf;

		[Token(Token = "0x40014D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private static readonly int ToTalk;

		[Token(Token = "0x40014D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static readonly int DriverShot;

		[Token(Token = "0x40014D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private static readonly int TeeShot;

		[Token(Token = "0x40014D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static readonly int ShotReset;

		[Token(Token = "0x40014DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private static readonly int IsLeftSwing;

		[Token(Token = "0x40014DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static readonly int StartWalk;

		[Token(Token = "0x40014DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private static readonly int EndWalk;

		[Token(Token = "0x40014DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static readonly int Bad;

		[Token(Token = "0x40014DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool isAfterWalk;

		[Token(Token = "0x40014DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Tween tween;

		[Token(Token = "0x17000149")]
		[Inject]
		private ISubscriber<GameStatus> OnChangeStatus
		{
			[Token(Token = "0x6000F9D")]
			[Address(RVA = "0x19C8464", Offset = "0x19C8464", VA = "0x19C8464")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F9E")]
			[Address(RVA = "0x19C846C", Offset = "0x19C846C", VA = "0x19C846C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700014A")]
		public GameStatus.Status currentStatus
		{
			[Token(Token = "0x6000F9F")]
			[Address(RVA = "0x19C8474", Offset = "0x19C8474", VA = "0x19C8474")]
			[CompilerGenerated]
			get
			{
				return default(GameStatus.Status);
			}
			[Token(Token = "0x6000FA0")]
			[Address(RVA = "0x19C847C", Offset = "0x19C847C", VA = "0x19C847C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700014B")]
		[Inject]
		private ISubscriber<CharacterActionData> OnCharacterAction
		{
			[Token(Token = "0x6000FA1")]
			[Address(RVA = "0x19C8484", Offset = "0x19C8484", VA = "0x19C8484")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FA2")]
			[Address(RVA = "0x19C848C", Offset = "0x19C848C", VA = "0x19C848C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700014C")]
		[Inject]
		private ISubscriber<FPActionData> OnFPAction
		{
			[Token(Token = "0x6000FA3")]
			[Address(RVA = "0x19C8494", Offset = "0x19C8494", VA = "0x19C8494")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FA4")]
			[Address(RVA = "0x19C849C", Offset = "0x19C849C", VA = "0x19C849C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6000FA5")]
		[Address(RVA = "0x19C84A4", Offset = "0x19C84A4", VA = "0x19C84A4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000FA6")]
		[Address(RVA = "0x19C8880", Offset = "0x19C8880", VA = "0x19C8880")]
		private void DoFPAction(FPActionData value)
		{
		}

		[Token(Token = "0x6000FA7")]
		[Address(RVA = "0x19C8A7C", Offset = "0x19C8A7C", VA = "0x19C8A7C")]
		private void DoCharacterAction(CharacterActionData data)
		{
		}

		[Token(Token = "0x6000FA8")]
		[Address(RVA = "0x19C8CA4", Offset = "0x19C8CA4", VA = "0x19C8CA4")]
		public void GoToGolfAnimation()
		{
		}

		[Token(Token = "0x6000FA9")]
		[Address(RVA = "0x19C8F14", Offset = "0x19C8F14", VA = "0x19C8F14")]
		public void GoToTalkAnimation()
		{
		}

		[Token(Token = "0x6000FAA")]
		[Address(RVA = "0x19C9184", Offset = "0x19C9184", VA = "0x19C9184")]
		private void ResetAllTriggers()
		{
		}

		[Token(Token = "0x6000FAB")]
		[Address(RVA = "0x19C9230", Offset = "0x19C9230", VA = "0x19C9230")]
		public void ForceToTalkIdle()
		{
		}

		[Token(Token = "0x6000FAC")]
		[Address(RVA = "0x19C94A4", Offset = "0x19C94A4", VA = "0x19C94A4")]
		[AsyncStateMachine(typeof(<GoToTeachingPosition>d__50))]
		public UniTask GoToTeachingPosition(SelectClubHandEvent.GolferSwingType golferSwingType, CancellationToken token)
		{
			return default(UniTask);
		}

		[Token(Token = "0x6000FAD")]
		[Address(RVA = "0x19C9628", Offset = "0x19C9628", VA = "0x19C9628")]
		public CatActionManager()
		{
		}
	}
	[Token(Token = "0x20003EF")]
	public class CatGoToPlayerSideEvent : EventBlock
	{
		[StructLayout(3)]
		[Token(Token = "0x20003F0")]
		[CompilerGenerated]
		private struct <SetEvent>d__5 : IAsyncStateMachine
		{
			[Token(Token = "0x40014FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40014FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x40014FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CatGoToPlayerSideEvent <>4__this;

			[Token(Token = "0x40014FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken token;

			[Token(Token = "0x40014FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6000FC6")]
			[Address(RVA = "0x19CAE94", Offset = "0x19CAE94", VA = "0x19CAE94", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000FC7")]
			[Address(RVA = "0x19CB5CC", Offset = "0x19CB5CC", VA = "0x19CB5CC", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x40014F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CatActionManager _catActionManager;

		[Token(Token = "0x40014F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private RectTransform _practiceTextPanel;

		[Token(Token = "0x40014F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _practiceTextPanelPosR;

		[Token(Token = "0x40014F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform _practiceTextPanelPosL;

		[Token(Token = "0x40014FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool isFinished;

		[Token(Token = "0x6000FC4")]
		[Address(RVA = "0x19CADB0", Offset = "0x19CADB0", VA = "0x19CADB0", Slot = "4")]
		[AsyncStateMachine(typeof(<SetEvent>d__5))]
		public override UniTask<bool> SetEvent(CancellationToken token)
		{
			return default(UniTask<bool>);
		}

		[Token(Token = "0x6000FC5")]
		[Address(RVA = "0x19CAE8C", Offset = "0x19CAE8C", VA = "0x19CAE8C")]
		public CatGoToPlayerSideEvent()
		{
		}
	}
	[Token(Token = "0x20003F1")]
	public class CheckClubGrab : EventBlock
	{
		[StructLayout(3)]
		[Token(Token = "0x20003F2")]
		[CompilerGenerated]
		private struct <SetEvent>d__7 : IAsyncStateMachine
		{
			[Token(Token = "0x4001507")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001508")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x4001509")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CheckClubGrab <>4__this;

			[Token(Token = "0x400150A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken token;

			[Token(Token = "0x400150B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6000FCA")]
			[Address(RVA = "0x19CB708", Offset = "0x19CB708", VA = "0x19CB708", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000FCB")]
			[Address(RVA = "0x19CC180", Offset = "0x19CC180", VA = "0x19CC180", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SelectClubHandEvent _selectClub;

		[Token(Token = "0x4001501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _club;

		[Token(Token = "0x4001502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GolfHaptics _haptics;

		[Token(Token = "0x4001503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GrabClubHandController _grabClubHandController;

		[Token(Token = "0x4001504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GolfClubSwitcher _golfClubSwitcher;

		[Token(Token = "0x4001505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GrabClubCheckBothHand _grabClubCheckBothHand;

		[Token(Token = "0x4001506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Inject]
		private InputProvider _inputProvider;

		[Token(Token = "0x6000FC8")]
		[Address(RVA = "0x19CB624", Offset = "0x19CB624", VA = "0x19CB624", Slot = "4")]
		[AsyncStateMachine(typeof(<SetEvent>d__7))]
		public override UniTask<bool> SetEvent(CancellationToken token)
		{
			return default(UniTask<bool>);
		}

		[Token(Token = "0x6000FC9")]
		[Address(RVA = "0x19CB700", Offset = "0x19CB700", VA = "0x19CB700")]
		public CheckClubGrab()
		{
		}
	}
	[Token(Token = "0x20003F3")]
	public class GolfAnimationCurveController : MonoBehaviour
	{
		[Token(Token = "0x400150C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CustomAnimationCurve _shotGreat;

		[Token(Token = "0x400150D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CustomAnimationCurve _shotOK;

		[Token(Token = "0x400150E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private CustomAnimationCurve _shotWrong;

		[Token(Token = "0x400150F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float _maxAbsoluteAngle;

		[Token(Token = "0x4001510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float _maxDirectionX;

		[Token(Token = "0x4001511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GolfInputKeys _inputKey;

		[Token(Token = "0x4001512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GolfClubHead _driverHead;

		[Token(Token = "0x1700014D")]
		[Inject]
		private ISubscriber<FPActionData> OnFPAction
		{
			[Token(Token = "0x6000FCC")]
			[Address(RVA = "0x19CC1D8", Offset = "0x19CC1D8", VA = "0x19CC1D8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FCD")]
			[Address(RVA = "0x19CC1E0", Offset = "0x19CC1E0", VA = "0x19CC1E0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6000FCE")]
		[Address(RVA = "0x19CC1E8", Offset = "0x19CC1E8", VA = "0x19CC1E8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000FCF")]
		[Address(RVA = "0x19CC314", Offset = "0x19CC314", VA = "0x19CC314")]
		public GolfAnimationCurveController()
		{
		}
	}
	[Token(Token = "0x20003F4")]
	public class GolfballSound : MonoBehaviour
	{
		[Token(Token = "0x4001515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AudioSource _audio;

		[Token(Token = "0x4001516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip _ballAppear0;

		[Token(Token = "0x4001517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _driverShotHit;

		[Token(Token = "0x4001518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AudioClip _ballAppear1;

		[Token(Token = "0x4001519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private AudioClip _cupAppear;

		[Token(Token = "0x400151A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private AudioClip _cupIn;

		[Token(Token = "0x400151B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioClip _pattingHit;

		[Token(Token = "0x400151C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioClip _ballSet;

		[Token(Token = "0x400151D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private AudioClip _shotOk;

		[Token(Token = "0x400151E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private AudioClip _shotBad;

		[Token(Token = "0x1700014E")]
		[Inject]
		private ISubscriber<FPActionData> OnFPAction
		{
			[Token(Token = "0x6000FD1")]
			[Address(RVA = "0x19CC970", Offset = "0x19CC970", VA = "0x19CC970")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FD2")]
			[Address(RVA = "0x19CC978", Offset = "0x19CC978", VA = "0x19CC978")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6000FD3")]
		[Address(RVA = "0x19CC980", Offset = "0x19CC980", VA = "0x19CC980")]
		private void Start()
		{
		}

		[Token(Token = "0x6000FD4")]
		[Address(RVA = "0x19CCAE0", Offset = "0x19CCAE0", VA = "0x19CCAE0")]
		private void PlaySound(FPActionData value)
		{
		}

		[Token(Token = "0x6000FD5")]
		[Address(RVA = "0x19CCC68", Offset = "0x19CCC68", VA = "0x19CCC68")]
		public void PlayCupInSoundOnCompleteAnimation()
		{
		}

		[Token(Token = "0x6000FD6")]
		[Address(RVA = "0x19CCC8C", Offset = "0x19CCC8C", VA = "0x19CCC8C")]
		public GolfballSound()
		{
		}
	}
	[Token(Token = "0x20003F5")]
	public class GolfClubSwitcher : MonoBehaviour
	{
		[Token(Token = "0x4001520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _clubParent;

		[Token(Token = "0x4001521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject _driverHead;

		[Token(Token = "0x4001522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject _putterHead;

		[Token(Token = "0x4001523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ParticleSystem _driverEffect;

		[Token(Token = "0x4001524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private ParticleSystem _putterEffect;

		[Token(Token = "0x1700014F")]
		[Inject]
		private ISubscriber<FPActionData> OnFPAction
		{
			[Token(Token = "0x6000FD8")]
			[Address(RVA = "0x19CCC98", Offset = "0x19CCC98", VA = "0x19CCC98")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FD9")]
			[Address(RVA = "0x19CCCA0", Offset = "0x19CCCA0", VA = "0x19CCCA0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6000FDA")]
		[Address(RVA = "0x19CCCA8", Offset = "0x19CCCA8", VA = "0x19CCCA8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000FDB")]
		[Address(RVA = "0x19CCDD4", Offset = "0x19CCDD4", VA = "0x19CCDD4")]
		private void DoFPAction(FPActionData value)
		{
		}

		[Token(Token = "0x6000FDC")]
		[Address(RVA = "0x19CCED4", Offset = "0x19CCED4", VA = "0x19CCED4")]
		private void SwitchToPatter()
		{
		}

		[Token(Token = "0x6000FDD")]
		[Address(RVA = "0x19CCE8C", Offset = "0x19CCE8C", VA = "0x19CCE8C")]
		private void SwitchToDriver()
		{
		}

		[Token(Token = "0x6000FDE")]
		[Address(RVA = "0x19CBF88", Offset = "0x19CBF88", VA = "0x19CBF88")]
		public void ClubToSymmetry()
		{
		}

		[Token(Token = "0x6000FDF")]
		[Address(RVA = "0x19CCF1C", Offset = "0x19CCF1C", VA = "0x19CCF1C")]
		public GolfClubSwitcher()
		{
		}
	}
	[Token(Token = "0x20003F6")]
	public class GolfFPActionSubscribeEvent : FPActionSubscribeEvent
	{
		[Serializable]
		[Token(Token = "0x20003F7")]
		private class GolfFPActionEvent : FPActionEventBase
		{
			[Token(Token = "0x4001526")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[SerializeField]
			private GolfEventKeys Key;

			[Token(Token = "0x6000FE3")]
			[Address(RVA = "0x19CCFAC", Offset = "0x19CCFAC", VA = "0x19CCFAC", Slot = "4")]
			public override string GetKey()
			{
				return null;
			}

			[Token(Token = "0x6000FE4")]
			[Address(RVA = "0x19CD014", Offset = "0x19CD014", VA = "0x19CD014")]
			public GolfFPActionEvent()
			{
			}
		}

		[Token(Token = "0x4001525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<GolfFPActionEvent> _golfFPActionEvent;

		[Token(Token = "0x6000FE1")]
		[Address(RVA = "0x19CCF28", Offset = "0x19CCF28", VA = "0x19CCF28")]
		private void Start()
		{
		}

		[Token(Token = "0x6000FE2")]
		[Address(RVA = "0x19CCFA4", Offset = "0x19CCFA4", VA = "0x19CCFA4")]
		public GolfFPActionSubscribeEvent()
		{
		}
	}
	[Token(Token = "0x20003F8")]
	public class GolfFPInputJudgeAction : JudgeActionBase
	{
		[Token(Token = "0x4001527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GolfEventKeys _actionKeyEnum;

		[Token(Token = "0x4001528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private GolfEventKeys _actionKeyEnumOnThrow;

		[Token(Token = "0x4001529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GolfInputKeys _inputKeyEnum;

		[Token(Token = "0x400152A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string _actionKey;

		[Token(Token = "0x400152B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string _actionKeyOnThrow;

		[Token(Token = "0x400152C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float _timing;

		[Token(Token = "0x400152D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private InputPublisher _inputPublisher;

		[Token(Token = "0x400152E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string _targetInputKey;

		[Token(Token = "0x400152F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private float _doNothingErrorTiming;

		[Token(Token = "0x4001530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float _currentBeat;

		[Token(Token = "0x4001531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool _judgeDone;

		[Token(Token = "0x6000FE5")]
		[Address(RVA = "0x19CD01C", Offset = "0x19CD01C", VA = "0x19CD01C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000FE6")]
		[Address(RVA = "0x19CD108", Offset = "0x19CD108", VA = "0x19CD108", Slot = "5")]
		protected override void AdditionalSetComponent()
		{
		}

		[Token(Token = "0x6000FE7")]
		[Address(RVA = "0x19CD254", Offset = "0x19CD254", VA = "0x19CD254", Slot = "4")]
		protected override void BeatSubscribeAction(float currentBeat)
		{
		}

		[Token(Token = "0x6000FE8")]
		[Address(RVA = "0x19CD7C0", Offset = "0x19CD7C0", VA = "0x19CD7C0")]
		private void Judge(string value)
		{
		}

		[Token(Token = "0x6000FE9")]
		[Address(RVA = "0x19CE114", Offset = "0x19CE114", VA = "0x19CE114")]
		public GolfFPInputJudgeAction()
		{
		}
	}
	[Token(Token = "0x20003F9")]
	public class GolfFPNoJudgementAction : FPNoJudgementAction
	{
		[Serializable]
		[Token(Token = "0x20003FA")]
		private class ActionParam : ActionParamBase
		{
			[Token(Token = "0x4001533")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			private List<GolfEventKeys> ActionKeys;

			[Token(Token = "0x6000FED")]
			[Address(RVA = "0x19CE1CC", Offset = "0x19CE1CC", VA = "0x19CE1CC", Slot = "4")]
			public override List<string> GetKeyFromActionKeys()
			{
				return null;
			}

			[Token(Token = "0x6000FEE")]
			[Address(RVA = "0x19CE2D4", Offset = "0x19CE2D4", VA = "0x19CE2D4")]
			public ActionParam()
			{
			}
		}

		[Token(Token = "0x4001532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private List<ActionParam> actions;

		[Token(Token = "0x6000FEB")]
		[Address(RVA = "0x19CE12C", Offset = "0x19CE12C", VA = "0x19CE12C", Slot = "4")]
		protected override void BeatSubscribeAction(float currentBeat)
		{
		}

		[Token(Token = "0x6000FEC")]
		[Address(RVA = "0x19CE1C4", Offset = "0x19CE1C4", VA = "0x19CE1C4")]
		public GolfFPNoJudgementAction()
		{
		}
	}
	[Token(Token = "0x20003FC")]
	public class GolfHaptics : MonoBehaviour
	{
		[Token(Token = "0x4001536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[ReadOnly]
		public VRHand.HandType _clubHand;

		[Token(Token = "0x4001538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Inject]
		private InputProvider _inputProvider;

		[Token(Token = "0x17000150")]
		[Inject]
		private ISubscriber<FPActionData> OnFPAction
		{
			[Token(Token = "0x6000FF2")]
			[Address(RVA = "0x19CE3B8", Offset = "0x19CE3B8", VA = "0x19CE3B8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FF3")]
			[Address(RVA = "0x19CE3C0", Offset = "0x19CE3C0", VA = "0x19CE3C0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6000FF4")]
		[Address(RVA = "0x19CE3C8", Offset = "0x19CE3C8", VA = "0x19CE3C8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000FF5")]
		[Address(RVA = "0x19CE4F4", Offset = "0x19CE4F4", VA = "0x19CE4F4")]
		public GolfHaptics()
		{
		}
	}
	[Token(Token = "0x20003FD")]
	[RequireComponent(typeof(AudioSource))]
	public class GolfInputPublisher : InputPublisher
	{
		[Token(Token = "0x4001539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("SwingErea")]
		[SerializeField]
		private Transform _strikeErea;

		[Token(Token = "0x400153A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("Objects")]
		[SerializeField]
		private Transform _clubTop;

		[Token(Token = "0x400153B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _clubGrip;

		[Token(Token = "0x400153C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform _head;

		[Token(Token = "0x400153D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Header("Settings")]
		[SerializeField]
		private AudioClip _driverShotSwingSound;

		[Token(Token = "0x400153E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private AudioClip _teeShotSwingSound;

		[Token(Token = "0x400153F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float _backJudgeThreshold;

		[Token(Token = "0x4001540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private float _shotThreshold;

		[Token(Token = "0x4001541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private float _driverShotThreshold;

		[Token(Token = "0x4001542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private float _shotJudgeErea;

		[Token(Token = "0x4001543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private StringReactiveProperty _inputMessage;

		[Token(Token = "0x4001544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private AudioSource _audio;

		[Token(Token = "0x4001545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool _isShotOK;

		[Token(Token = "0x4001546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 _posClubFaceOld;

		[Token(Token = "0x4001547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 _posClubFaceNew;

		[Token(Token = "0x4001548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Vector3 _clubFaceVelocity;

		[Token(Token = "0x400154A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool _isPauseNow;

		[Token(Token = "0x400154B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[Inject]
		private InputProvider _inputProvider;

		[Token(Token = "0x17000151")]
		[Inject]
		private ISubscriber<OnPause> OnPauseEvent
		{
			[Token(Token = "0x6000FF7")]
			[Address(RVA = "0x19CE550", Offset = "0x19CE550", VA = "0x19CE550")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FF8")]
			[Address(RVA = "0x19CE558", Offset = "0x19CE558", VA = "0x19CE558")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000152")]
		public override StringReactiveProperty InputMessage
		{
			[Token(Token = "0x6000FFC")]
			[Address(RVA = "0x19CEA4C", Offset = "0x19CEA4C", VA = "0x19CEA4C", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FFD")]
			[Address(RVA = "0x19CEA54", Offset = "0x19CEA54", VA = "0x19CEA54", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x6000FF9")]
		[Address(RVA = "0x19CE560", Offset = "0x19CE560", VA = "0x19CE560")]
		private void Start()
		{
		}

		[Token(Token = "0x6000FFA")]
		[Address(RVA = "0x19CE724", Offset = "0x19CE724", VA = "0x19CE724")]
		private void Update()
		{
		}

		[Token(Token = "0x6000FFB")]
		[Address(RVA = "0x19CE9C8", Offset = "0x19CE9C8", VA = "0x19CE9C8")]
		private GolfInputKeys SwingJudge(Vector3 _clubPos, float shotVel)
		{
			return default(GolfInputKeys);
		}

		[Token(Token = "0x6000FFE")]
		[Address(RVA = "0x19CEA5C", Offset = "0x19CEA5C", VA = "0x19CEA5C")]
		public GolfInputPublisher()
		{
		}
	}
	[Token(Token = "0x20003FE")]
	public enum GolfEventKeys
	{
		[Token(Token = "0x400154D")]
		StartDriverShotBallAppear,
		[Token(Token = "0x400154E")]
		BallReady,
		[Token(Token = "0x400154F")]
		DriverShotEvent,
		[Token(Token = "0x4001550")]
		TeeShotEvent,
		[Token(Token = "0x4001551")]
		LightUpCup,
		[Token(Token = "0x4001552")]
		WrongInput,
		[Token(Token = "0x4001553")]
		StartTeeShotBallAppear,
		[Token(Token = "0x4001554")]
		CatDriverShotStart,
		[Token(Token = "0x4001555")]
		CatTeeShotStart,
		[Token(Token = "0x4001556")]
		CatIdle,
		[Token(Token = "0x4001557")]
		DisableHole,
		[Token(Token = "0x4001558")]
		DriverShotThrowEvent,
		[Token(Token = "0x4001559")]
		TeeShotThrowEvent
	}
	[Token(Token = "0x20003FF")]
	public enum GolfInputKeys
	{
		[Token(Token = "0x400155B")]
		DriverShot,
		[Token(Token = "0x400155C")]
		TeeShot,
		[Token(Token = "0x400155D")]
		None
	}
	[Token(Token = "0x2000400")]
	public class GolfPracticeClearCounter : PracticeClearCounter
	{
		[Token(Token = "0x2000401")]
		private enum PracticeType
		{
			[Token(Token = "0x4001562")]
			DriverShot,
			[Token(Token = "0x4001563")]
			TeeShot
		}

		[Token(Token = "0x400155E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PracticeType _practiceType;

		[Token(Token = "0x400155F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private BoolReactiveProperty _clearMessage;

		[Token(Token = "0x17000153")]
		[Inject]
		private ISubscriber<FPActionData> OnFPAction
		{
			[Token(Token = "0x6001000")]
			[Address(RVA = "0x19CEAA4", Offset = "0x19CEAA4", VA = "0x19CEAA4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001001")]
			[Address(RVA = "0x19CEAAC", Offset = "0x19CEAAC", VA = "0x19CEAAC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000154")]
		public override BoolReactiveProperty ClearMessage
		{
			[Token(Token = "0x6001005")]
			[Address(RVA = "0x19CEDC0", Offset = "0x19CEDC0", VA = "0x19CEDC0", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001006")]
			[Address(RVA = "0x19CEDC8", Offset = "0x19CEDC8", VA = "0x19CEDC8", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x6001002")]
		[Address(RVA = "0x19CEAB4", Offset = "0x19CEAB4", VA = "0x19CEAB4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001003")]
		[Address(RVA = "0x19CEC20", Offset = "0x19CEC20", VA = "0x19CEC20")]
		private void DriverShotEventCount(FPActionData data)
		{
		}

		[Token(Token = "0x6001004")]
		[Address(RVA = "0x19CECF0", Offset = "0x19CECF0", VA = "0x19CECF0")]
		private void TeeShotEventCount(FPActionData data)
		{
		}

		[Token(Token = "0x6001007")]
		[Address(RVA = "0x19CEDD0", Offset = "0x19CEDD0", VA = "0x19CEDD0")]
		public GolfPracticeClearCounter()
		{
		}
	}
	[Token(Token = "0x2000402")]
	public class GolfRoomAnimator : MonoBehaviour
	{
		[Token(Token = "0x4001564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _openTime;

		[Token(Token = "0x4001565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private bool isOpen;

		[Token(Token = "0x4001566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float pastTime;

		[Token(Token = "0x4001567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Tween tween;

		[Token(Token = "0x6001009")]
		[Address(RVA = "0x19CEDF4", Offset = "0x19CEDF4", VA = "0x19CEDF4")]
		public void OpenRoom()
		{
		}

		[Token(Token = "0x600100A")]
		[Address(RVA = "0x19CEEA4", Offset = "0x19CEEA4", VA = "0x19CEEA4")]
		public GolfRoomAnimator()
		{
		}
	}
	[Token(Token = "0x2000403")]
	public class GolfTimingAssistManager : MonoBehaviour
	{
		[Token(Token = "0x400156A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private int _helpThreshold;

		[Token(Token = "0x400156B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int badCount;

		[Token(Token = "0x400156C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int driverSpeedCount;

		[Token(Token = "0x400156D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int teeSpeedCount;

		[Token(Token = "0x17000155")]
		[Inject]
		private ISubscriber<FPActionData> FPActionMessage
		{
			[Token(Token = "0x600100B")]
			[Address(RVA = "0x19CEEB4", Offset = "0x19CEEB4", VA = "0x19CEEB4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600100C")]
			[Address(RVA = "0x19CEEBC", Offset = "0x19CEEBC", VA = "0x19CEEBC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000156")]
		[Inject]
		private IPublisher<AssistData> AssistDataMessagePublisher
		{
			[Token(Token = "0x600100D")]
			[Address(RVA = "0x19CEEC4", Offset = "0x19CEEC4", VA = "0x19CEEC4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600100E")]
			[Address(RVA = "0x19CEECC", Offset = "0x19CEECC", VA = "0x19CEECC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x600100F")]
		[Address(RVA = "0x19CEED4", Offset = "0x19CEED4", VA = "0x19CEED4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001010")]
		[Address(RVA = "0x19CF000", Offset = "0x19CF000", VA = "0x19CF000")]
		public void DriverSpeedTeacher()
		{
		}

		[Token(Token = "0x6001011")]
		[Address(RVA = "0x19CF138", Offset = "0x19CF138", VA = "0x19CF138")]
		public void TeeSpeedTeacher()
		{
		}

		[Token(Token = "0x6001012")]
		[Address(RVA = "0x19CF270", Offset = "0x19CF270", VA = "0x19CF270")]
		public GolfTimingAssistManager()
		{
		}
	}
	[Token(Token = "0x2000404")]
	public class GolfUITransformLRFlip : MonoBehaviour
	{
		[Token(Token = "0x400156E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Vector3 _rPos;

		[Token(Token = "0x400156F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private Vector3 _rRot;

		[Token(Token = "0x4001570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool isRect;

		[Token(Token = "0x6001014")]
		[Address(RVA = "0x19CF51C", Offset = "0x19CF51C", VA = "0x19CF51C")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001015")]
		[Address(RVA = "0x19CF704", Offset = "0x19CF704", VA = "0x19CF704")]
		public GolfUITransformLRFlip()
		{
		}
	}
	[Token(Token = "0x2000405")]
	public class GrabClubHandController : MonoBehaviour
	{
		[Token(Token = "0x4001572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Inject]
		private InputProvider _inputProvider;

		[NonSerialized]
		[Token(Token = "0x4001573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool _isGrabClub;

		[Token(Token = "0x17000157")]
		[Inject]
		private ISubscriber<OnPause> OnPauseEvent
		{
			[Token(Token = "0x6001016")]
			[Address(RVA = "0x19CF70C", Offset = "0x19CF70C", VA = "0x19CF70C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001017")]
			[Address(RVA = "0x19CF714", Offset = "0x19CF714", VA = "0x19CF714")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000158")]
		public VRHand.HandType _grabHand
		{
			[Token(Token = "0x6001018")]
			[Address(RVA = "0x19CF71C", Offset = "0x19CF71C", VA = "0x19CF71C")]
			[CompilerGenerated]
			get
			{
				return default(VRHand.HandType);
			}
			[Token(Token = "0x6001019")]
			[Address(RVA = "0x19CF724", Offset = "0x19CF724", VA = "0x19CF724")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x600101A")]
		[Address(RVA = "0x19CF72C", Offset = "0x19CF72C", VA = "0x19CF72C")]
		private void Start()
		{
		}

		[Token(Token = "0x600101B")]
		[Address(RVA = "0x19CBF78", Offset = "0x19CBF78", VA = "0x19CBF78")]
		public void SaveGrabClubHand(VRHand.HandType hand)
		{
		}

		[Token(Token = "0x600101C")]
		[Address(RVA = "0x19CF858", Offset = "0x19CF858", VA = "0x19CF858")]
		public void ChangeGrabClubHand(bool active)
		{
		}

		[Token(Token = "0x600101D")]
		[Address(RVA = "0x19CF894", Offset = "0x19CF894", VA = "0x19CF894")]
		public GrabClubHandController()
		{
		}
	}
	[Token(Token = "0x2000406")]
	public class GreenBaseMover : MonoBehaviour
	{
		[Token(Token = "0x4001575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool isReady;

		[Token(Token = "0x600101F")]
		[Address(RVA = "0x19CF908", Offset = "0x19CF908", VA = "0x19CF908")]
		public void ReadyPosition()
		{
		}

		[Token(Token = "0x6001020")]
		[Address(RVA = "0x19CF960", Offset = "0x19CF960", VA = "0x19CF960")]
		public GreenBaseMover()
		{
		}
	}
	[Token(Token = "0x2000407")]
	[RequireComponent(typeof(AudioSource))]
	public class SelectClubHandEvent : EventBlock
	{
		[Token(Token = "0x2000408")]
		public enum GolferSwingType
		{
			[Token(Token = "0x4001584")]
			Right,
			[Token(Token = "0x4001585")]
			Left
		}

		[Serializable]
		[Token(Token = "0x2000409")]
		public class LRAdjustObject
		{
			[Token(Token = "0x4001586")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<Transform> _objs;

			[Token(Token = "0x4001587")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 _rightCenter;

			[Token(Token = "0x4001588")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Vector3 _leftCenter;

			[Token(Token = "0x6001026")]
			[Address(RVA = "0x19D0058", Offset = "0x19D0058", VA = "0x19D0058")]
			public LRAdjustObject()
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200040A")]
		[CompilerGenerated]
		private struct <SetEvent>d__13 : IAsyncStateMachine
		{
			[Token(Token = "0x4001589")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400158A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x400158B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SelectClubHandEvent <>4__this;

			[Token(Token = "0x400158C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken token;

			[Token(Token = "0x400158D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6001027")]
			[Address(RVA = "0x19D0060", Offset = "0x19D0060", VA = "0x19D0060", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001028")]
			[Address(RVA = "0x19D0890", Offset = "0x19D0890", VA = "0x19D0890", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200040B")]
		[CompilerGenerated]
		private struct <ClubCatchAsync>d__14 : IAsyncStateMachine
		{
			[Token(Token = "0x400158E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400158F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001590")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SelectClubHandEvent <>4__this;

			[Token(Token = "0x4001591")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CancellationToken token;

			[Token(Token = "0x4001592")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private GolferSwingType <golferSwingType>5__2;

			[Token(Token = "0x4001593")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6001029")]
			[Address(RVA = "0x19D08E8", Offset = "0x19D08E8", VA = "0x19D08E8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600102A")]
			[Address(RVA = "0x19D157C", Offset = "0x19D157C", VA = "0x19D157C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200040F")]
		[CompilerGenerated]
		private struct <AdjustAnimationObjs>d__15 : IAsyncStateMachine
		{
			[Token(Token = "0x400159E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400159F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x40015A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SelectClubHandEvent <>4__this;

			[Token(Token = "0x40015A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CancellationToken token;

			[Token(Token = "0x40015A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GolferSwingType golferSwingType;

			[Token(Token = "0x40015A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6001032")]
			[Address(RVA = "0x19D2638", Offset = "0x19D2638", VA = "0x19D2638", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001033")]
			[Address(RVA = "0x19D2DEC", Offset = "0x19D2DEC", VA = "0x19D2DEC", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[ReadOnly]
		public bool _selected;

		[Token(Token = "0x4001577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GrabClubCheckBothHand _grabClubCheckBothHand;

		[Token(Token = "0x4001578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _leftClub;

		[Token(Token = "0x4001579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform _rightClub;

		[Token(Token = "0x400157A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Transform _club;

		[Token(Token = "0x400157B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GolfHaptics _hapticsProvider;

		[Token(Token = "0x400157C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private AudioClip _selectedSound;

		[Token(Token = "0x400157D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GrabClubHandController _grabClubHandController;

		[Token(Token = "0x400157E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GolfClubSwitcher _golfClubSwitcher;

		[Token(Token = "0x400157F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GolfClubHead _clubHead;

		[Token(Token = "0x4001580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private AudioSource _audio;

		[Token(Token = "0x4001581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[Inject]
		private InputProvider _inputProvider;

		[Token(Token = "0x4001582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private List<LRAdjustObject> _lrAdjustObjects;

		[Token(Token = "0x6001021")]
		[Address(RVA = "0x19CF968", Offset = "0x19CF968", VA = "0x19CF968", Slot = "4")]
		[AsyncStateMachine(typeof(<SetEvent>d__13))]
		public override UniTask<bool> SetEvent(CancellationToken token)
		{
			return default(UniTask<bool>);
		}

		[Token(Token = "0x6001022")]
		[Address(RVA = "0x19CFA44", Offset = "0x19CFA44", VA = "0x19CFA44")]
		[AsyncStateMachine(typeof(<ClubCatchAsync>d__14))]
		private UniTask ClubCatchAsync(CancellationToken token)
		{
			return default(UniTask);
		}

		[Token(Token = "0x6001023")]
		[Address(RVA = "0x19CBFFC", Offset = "0x19CBFFC", VA = "0x19CBFFC")]
		[AsyncStateMachine(typeof(<AdjustAnimationObjs>d__15))]
		public UniTask AdjustAnimationObjs(GolferSwingType golferSwingType, CancellationToken token)
		{
			return default(UniTask);
		}

		[Token(Token = "0x6001024")]
		[Address(RVA = "0x19CFBC0", Offset = "0x19CFBC0", VA = "0x19CFBC0")]
		private (GolferSwingType, float) GolferSwingTypeCheck(VRHand.HandType type)
		{
			return default((GolferSwingType, float));
		}

		[Token(Token = "0x6001025")]
		[Address(RVA = "0x19D0050", Offset = "0x19D0050", VA = "0x19D0050")]
		public SelectClubHandEvent()
		{
		}
	}
}
namespace __Imacreate__.__Production__.GrooveFitGames.GF22_Kendama
{
	[Token(Token = "0x2000410")]
	public class AudienceAudioManager : MonoBehaviour
	{
		[Token(Token = "0x40015A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private AudioSource _audioSource;

		[Token(Token = "0x40015A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip _booSE;

		[Token(Token = "0x40015A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip _cheersSE;

		[Token(Token = "0x6001034")]
		[Address(RVA = "0x19D2DF8", Offset = "0x19D2DF8", VA = "0x19D2DF8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001035")]
		[Address(RVA = "0x19D2E50", Offset = "0x19D2E50", VA = "0x19D2E50")]
		public void PlayBooSE()
		{
		}

		[Token(Token = "0x6001036")]
		[Address(RVA = "0x19D2E74", Offset = "0x19D2E74", VA = "0x19D2E74")]
		public void PlayCheersSE()
		{
		}

		[Token(Token = "0x6001037")]
		[Address(RVA = "0x19D2E98", Offset = "0x19D2E98", VA = "0x19D2E98")]
		public AudienceAudioManager()
		{
		}
	}
	[Token(Token = "0x2000411")]
	public class BendEventBlock : EventBlock
	{
		[StructLayout(3)]
		[Token(Token = "0x2000412")]
		[CompilerGenerated]
		private struct <SetEvent>d__12 : IAsyncStateMachine
		{
			[Token(Token = "0x40015B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40015B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x40015B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public BendEventBlock <>4__this;

			[Token(Token = "0x40015B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken token;

			[Token(Token = "0x40015B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private string <baseText>5__2;

			[Token(Token = "0x40015B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private IDisposable <disposable>5__3;

			[Token(Token = "0x40015B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x600103B")]
			[Address(RVA = "0x19D3178", Offset = "0x19D3178", VA = "0x19D3178", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600103C")]
			[Address(RVA = "0x19D3980", Offset = "0x19D3980", VA = "0x19D3980", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x40015A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Inject]
		private InputProvider _inputProvider;

		[Token(Token = "0x40015A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private HeadJudgeManager _inputPublisher;

		[Token(Token = "0x40015A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TextMeshPro _textPanel;

		[Token(Token = "0x40015AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private string _key;

		[Token(Token = "0x40015AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly int _clearCount;

		[Token(Token = "0x40015AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject _downArrow;

		[Token(Token = "0x40015AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GameObject _upArrow;

		[Token(Token = "0x40015AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _count;

		[Token(Token = "0x40015AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Inject]
		private MultilingualTextManager _multilingualTextManager;

		[Token(Token = "0x40015B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public UnityEvent _startEvent;

		[Token(Token = "0x40015B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public UnityEvent _endEvent;

		[Token(Token = "0x40015B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private MeObjController _meObjController;

		[Token(Token = "0x6001038")]
		[Address(RVA = "0x19D2EA0", Offset = "0x19D2EA0", VA = "0x19D2EA0", Slot = "4")]
		[AsyncStateMachine(typeof(<SetEvent>d__12))]
		public override UniTask<bool> SetEvent(CancellationToken token)
		{
			return default(UniTask<bool>);
		}

		[Token(Token = "0x6001039")]
		[Address(RVA = "0x19D2F80", Offset = "0x19D2F80", VA = "0x19D2F80")]
		public BendEventBlock()
		{
		}
	}
	[Token(Token = "0x2000413")]
	public class DanceFloorController : MonoBehaviour
	{
		[Token(Token = "0x40015BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Material[] _randomMaterials;

		[Token(Token = "0x40015BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private MeshRenderer[] _danceFloorsMeshRenderers;

		[Token(Token = "0x40015BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float _beatSave;

		[Token(Token = "0x17000159")]
		[Inject]
		private ISubscriber<BeatData> OnBeat
		{
			[Token(Token = "0x600103D")]
			[Address(RVA = "0x19D39D8", Offset = "0x19D39D8", VA = "0x19D39D8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600103E")]
			[Address(RVA = "0x19D39E0", Offset = "0x19D39E0", VA = "0x19D39E0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x600103F")]
		[Address(RVA = "0x19D39E8", Offset = "0x19D39E8", VA = "0x19D39E8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001040")]
		[Address(RVA = "0x19D3C3C", Offset = "0x19D3C3C", VA = "0x19D3C3C")]
		public DanceFloorController()
		{
		}
	}
	[Token(Token = "0x2000414")]
	public class FinishJudgeController : MonoBehaviour
	{
		[Token(Token = "0x40015BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudienceAudioManager _audienceAudioManager;

		[Token(Token = "0x40015BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int _successNum;

		[Token(Token = "0x40015C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int _judgeNum;

		[Token(Token = "0x1700015A")]
		[Inject]
		private IPublisher<FPActionData> FPActionMessage
		{
			[Token(Token = "0x6001042")]
			[Address(RVA = "0x19D3D04", Offset = "0x19D3D04", VA = "0x19D3D04")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001043")]
			[Address(RVA = "0x19D3D0C", Offset = "0x19D3D0C", VA = "0x19D3D0C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001044")]
		[Address(RVA = "0x19D3D14", Offset = "0x19D3D14", VA = "0x19D3D14")]
		public void AddJudgeNum()
		{
		}

		[Token(Token = "0x6001045")]
		[Address(RVA = "0x19D3ED4", Offset = "0x19D3ED4", VA = "0x19D3ED4")]
		public void FinishBad()
		{
		}

		[Token(Token = "0x6001046")]
		[Address(RVA = "0x19D4074", Offset = "0x19D4074", VA = "0x19D4074")]
		public FinishJudgeController()
		{
		}
	}
	[Token(Token = "0x2000415")]
	public class FitPatternDestroyEvents : MonoBehaviour
	{
		[Token(Token = "0x40015C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UnityEvent _destroyEvents;

		[Token(Token = "0x6001047")]
		[Address(RVA = "0x19D407C", Offset = "0x19D407C", VA = "0x19D407C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001048")]
		[Address(RVA = "0x19D4090", Offset = "0x19D4090", VA = "0x19D4090")]
		public FitPatternDestroyEvents()
		{
		}
	}
	[Token(Token = "0x2000416")]
	public class HeadJudgeManager : InputPublisher
	{
		[StructLayout(3)]
		[Token(Token = "0x2000418")]
		[CompilerGenerated]
		private struct <Start>d__36 : IAsyncStateMachine
		{
			[Token(Token = "0x40015E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40015EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40015EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public HeadJudgeManager <>4__this;

			[Token(Token = "0x40015EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6001051")]
			[Address(RVA = "0x19D4B94", Offset = "0x19D4B94", VA = "0x19D4B94", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001052")]
			[Address(RVA = "0x19D5450", Offset = "0x19D5450", VA = "0x19D5450", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x40015C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Inject]
		private InputProvider _inputProvider;

		[Token(Token = "0x40015C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float _headMinPosY;

		[Token(Token = "0x40015C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float _headMaxPosY;

		[Token(Token = "0x40015C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float _headMinPosYSave;

		[Token(Token = "0x40015C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float _headMaxPosYSave;

		[Token(Token = "0x40015C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float _maxPosFromHead;

		[Token(Token = "0x40015C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float _minPosFromHead;

		[Token(Token = "0x40015CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _isCenter;

		[Token(Token = "0x40015CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Slider _slider;

		[Token(Token = "0x40015CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float _bendingDistance;

		[Token(Token = "0x40015CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float _saveCameraPosY;

		[Token(Token = "0x40015CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TextMeshPro _upText;

		[Token(Token = "0x40015CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private TextMeshPro _downText;

		[Token(Token = "0x40015D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _centerPosY;

		[Token(Token = "0x40015D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject _kendamaObj;

		[Token(Token = "0x40015D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private StringReactiveProperty _inputMessage;

		[Token(Token = "0x40015D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _headHeight;

		[Token(Token = "0x40015D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float _nowHeadHeight;

		[Token(Token = "0x40015D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private ParticleSystem _upEffect;

		[Token(Token = "0x40015D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private ParticleSystem _downEffect;

		[Token(Token = "0x40015D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private GameObject _bendObjs;

		[Token(Token = "0x40015D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private GameObject[] _bendObj;

		[Token(Token = "0x40015D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private Material _bendObjUpMat;

		[Token(Token = "0x40015DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private Material _bendObjDownMat;

		[Token(Token = "0x40015DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private List<Material[]> _saveBendMats;

		[Token(Token = "0x40015DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private List<MeshRenderer> _bendObjRenderers;

		[Token(Token = "0x40015DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private GameObject _spotLightUp;

		[Token(Token = "0x40015DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private GameObject _spotLightCenter;

		[Token(Token = "0x40015DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private GameObject _spotLightDown;

		[Token(Token = "0x40015E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private Material _upKendamaBallMat;

		[Token(Token = "0x40015E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private Material _downKendamaBallMat;

		[Token(Token = "0x40015E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private MeshRenderer _ballRenderer;

		[Token(Token = "0x40015E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private readonly float _defaultHeightArea;

		[Token(Token = "0x40015E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private readonly float _minHeightArea;

		[Token(Token = "0x40015E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private readonly float _defaultHeight;

		[Token(Token = "0x40015E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private GameObject _headCalculationObj;

		[Token(Token = "0x1700015B")]
		public override StringReactiveProperty InputMessage
		{
			[Token(Token = "0x600104B")]
			[Address(RVA = "0x19D496C", Offset = "0x19D496C", VA = "0x19D496C", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600104C")]
			[Address(RVA = "0x19D4974", Offset = "0x19D4974", VA = "0x19D4974", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x6001049")]
		[Address(RVA = "0x19D4098", Offset = "0x19D4098", VA = "0x19D4098")]
		[AsyncStateMachine(typeof(<Start>d__36))]
		private void Start()
		{
		}

		[Token(Token = "0x600104A")]
		[Address(RVA = "0x19D414C", Offset = "0x19D414C", VA = "0x19D414C")]
		private void Update()
		{
		}

		[Token(Token = "0x600104D")]
		[Address(RVA = "0x19D497C", Offset = "0x19D497C", VA = "0x19D497C")]
		public HeadJudgeManager()
		{
		}
	}
	[Token(Token = "0x2000419")]
	public class KendamaFPActionSubscribeEvent : FPActionSubscribeEvent
	{
		[Serializable]
		[Token(Token = "0x200041A")]
		private class KendamaFPActionEvent : FPActionEventBase
		{
			[Token(Token = "0x40015EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[SerializeField]
			private KendamaEventKeys Key;

			[Token(Token = "0x6001055")]
			[Address(RVA = "0x19D54E0", Offset = "0x19D54E0", VA = "0x19D54E0", Slot = "4")]
			public override string GetKey()
			{
				return null;
			}

			[Token(Token = "0x6001056")]
			[Address(RVA = "0x19D5548", Offset = "0x19D5548", VA = "0x19D5548")]
			public KendamaFPActionEvent()
			{
			}
		}

		[Token(Token = "0x40015ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<KendamaFPActionEvent> _kendamaFPActionEvent;

		[Token(Token = "0x6001053")]
		[Address(RVA = "0x19D545C", Offset = "0x19D545C", VA = "0x19D545C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001054")]
		[Address(RVA = "0x19D54D8", Offset = "0x19D54D8", VA = "0x19D54D8")]
		public KendamaFPActionSubscribeEvent()
		{
		}
	}
	[Token(Token = "0x200041B")]
	public class KendamaFPNoJudgementAction : FPNoJudgementAction
	{
		[Token(Token = "0x40015EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private List<KendamaActionParam> actions;

		[Token(Token = "0x6001057")]
		[Address(RVA = "0x19D5550", Offset = "0x19D5550", VA = "0x19D5550", Slot = "4")]
		protected override void BeatSubscribeAction(float currentBeat)
		{
		}

		[Token(Token = "0x6001058")]
		[Address(RVA = "0x19D55E8", Offset = "0x19D55E8", VA = "0x19D55E8")]
		public KendamaFPNoJudgementAction()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200041C")]
	public class KendamaActionParam : ActionParamBase
	{
		[Token(Token = "0x40015F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<KendamaEventKeys> ActionKeys;

		[Token(Token = "0x6001059")]
		[Address(RVA = "0x19D55F0", Offset = "0x19D55F0", VA = "0x19D55F0", Slot = "4")]
		public override List<string> GetKeyFromActionKeys()
		{
			return null;
		}

		[Token(Token = "0x600105A")]
		[Address(RVA = "0x19D56F8", Offset = "0x19D56F8", VA = "0x19D56F8")]
		public KendamaActionParam()
		{
		}
	}
	[Token(Token = "0x200041E")]
	public class KendamaHaptics : MonoBehaviour
	{
		[Token(Token = "0x40015F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Inject]
		private InputProvider _inputProvider;

		[Token(Token = "0x1700015C")]
		[Inject]
		private ISubscriber<FPActionData> OnFPAction
		{
			[Token(Token = "0x600105E")]
			[Address(RVA = "0x19D57DC", Offset = "0x19D57DC", VA = "0x19D57DC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600105F")]
			[Address(RVA = "0x19D57E4", Offset = "0x19D57E4", VA = "0x19D57E4")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001060")]
		[Address(RVA = "0x19D57EC", Offset = "0x19D57EC", VA = "0x19D57EC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001061")]
		[Address(RVA = "0x19D5918", Offset = "0x19D5918", VA = "0x19D5918")]
		public KendamaHaptics()
		{
		}
	}
	[Token(Token = "0x200041F")]
	public class KendamaInputJudgeAction : JudgeActionBase
	{
		[Serializable]
		[Token(Token = "0x2000420")]
		public class InputInformation
		{
			[Token(Token = "0x40015FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public KendamaInputKeys _inputKeyEnum;

			[Token(Token = "0x40015FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float _timing;

			[Token(Token = "0x6001068")]
			[Address(RVA = "0x19D6868", Offset = "0x19D6868", VA = "0x19D6868")]
			public InputInformation()
			{
			}
		}

		[Token(Token = "0x40015F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("Settings")]
		[SerializeField]
		private HeadJudgeManager _inputPublisher;

		[Token(Token = "0x40015F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public InputInformation[] _inputs;

		[Token(Token = "0x40015F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float _currentBeat;

		[Token(Token = "0x40015F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool[] _judgeDones;

		[Token(Token = "0x40015F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly float _maxWaitJudge;

		[Token(Token = "0x6001063")]
		[Address(RVA = "0x19D59A4", Offset = "0x19D59A4", VA = "0x19D59A4", Slot = "5")]
		protected override void AdditionalSetComponent()
		{
		}

		[Token(Token = "0x6001064")]
		[Address(RVA = "0x19D5B2C", Offset = "0x19D5B2C", VA = "0x19D5B2C", Slot = "4")]
		protected override void BeatSubscribeAction(float currentBeat)
		{
		}

		[Token(Token = "0x6001065")]
		[Address(RVA = "0x19D6170", Offset = "0x19D6170", VA = "0x19D6170")]
		private void Judge(string value, int judgeNum)
		{
		}

		[Token(Token = "0x6001066")]
		[Address(RVA = "0x19D67E0", Offset = "0x19D67E0", VA = "0x19D67E0")]
		public KendamaInputJudgeAction()
		{
		}
	}
	[Token(Token = "0x2000421")]
	public class KendamaIntensityMetsCalculator : IntensityMetsCalculator
	{
		[Token(Token = "0x40015FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Inject]
		private InputProvider _inputProvider;

		[Token(Token = "0x40015FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Header("ReadOnly Display")]
		[SerializeField]
		[ReadOnly]
		private float _moveValue;

		[Token(Token = "0x40015FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		[ReadOnly]
		private float _time;

		[Token(Token = "0x40015FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 _prePosition;

		[Token(Token = "0x6001069")]
		[Address(RVA = "0x19D6870", Offset = "0x19D6870", VA = "0x19D6870")]
		private void Start()
		{
		}

		[Token(Token = "0x600106A")]
		[Address(RVA = "0x19D687C", Offset = "0x19D687C", VA = "0x19D687C")]
		private void Update()
		{
		}

		[Token(Token = "0x600106B")]
		[Address(RVA = "0x19D6880", Offset = "0x19D6880", VA = "0x19D6880")]
		private void OnUpdate()
		{
		}

		[Token(Token = "0x600106C")]
		[Address(RVA = "0x19D6988", Offset = "0x19D6988", VA = "0x19D6988", Slot = "5")]
		public override void ResetValue()
		{
		}

		[Token(Token = "0x600106D")]
		[Address(RVA = "0x19D6998", Offset = "0x19D6998", VA = "0x19D6998", Slot = "4")]
		public override float GetValue()
		{
			return default(float);
		}

		[Token(Token = "0x600106E")]
		[Address(RVA = "0x19D69BC", Offset = "0x19D69BC", VA = "0x19D69BC")]
		public KendamaIntensityMetsCalculator()
		{
		}
	}
	[Token(Token = "0x2000422")]
	public enum KendamaEventKeys
	{
		[Token(Token = "0x4001601")]
		MeLightTrue,
		[Token(Token = "0x4001602")]
		MeLightFalse,
		[Token(Token = "0x4001603")]
		MeInitializeBigCup,
		[Token(Token = "0x4001604")]
		MeBigCup,
		[Token(Token = "0x4001605")]
		MeInitializeMoshikame,
		[Token(Token = "0x4001606")]
		MeMoshikame,
		[Token(Token = "0x4001607")]
		MeInitializeSpike,
		[Token(Token = "0x4001608")]
		MeSpike,
		[Token(Token = "0x4001609")]
		MeInitializeEarthTurn,
		[Token(Token = "0x400160A")]
		MeEarthTurn,
		[Token(Token = "0x400160B")]
		MeInitializeMateo,
		[Token(Token = "0x400160C")]
		MeMateo,
		[Token(Token = "0x400160D")]
		Voice_Mu,
		[Token(Token = "0x400160E")]
		Voice_Pyon,
		[Token(Token = "0x400160F")]
		UsagiLightTrue,
		[Token(Token = "0x4001610")]
		UsagiLightFalse,
		[Token(Token = "0x4001611")]
		UsagiInitializeBigCup,
		[Token(Token = "0x4001612")]
		UsagiBigCup,
		[Token(Token = "0x4001613")]
		UsagiInitializeMoshikame,
		[Token(Token = "0x4001614")]
		UsagiMoshikame,
		[Token(Token = "0x4001615")]
		UsagiInitializeSpike,
		[Token(Token = "0x4001616")]
		UsagiSpike,
		[Token(Token = "0x4001617")]
		UsagiInitializeEarthTurn,
		[Token(Token = "0x4001618")]
		UsagiEarthTurn,
		[Token(Token = "0x4001619")]
		UsagiInitializeMateo,
		[Token(Token = "0x400161A")]
		UsagiMateo,
		[Token(Token = "0x400161B")]
		CenterToDown,
		[Token(Token = "0x400161C")]
		CenterToUp,
		[Token(Token = "0x400161D")]
		UpToDown,
		[Token(Token = "0x400161E")]
		UpToCenter,
		[Token(Token = "0x400161F")]
		DownToUp,
		[Token(Token = "0x4001620")]
		DownToCenter,
		[Token(Token = "0x4001621")]
		Down,
		[Token(Token = "0x4001622")]
		Up,
		[Token(Token = "0x4001623")]
		FinishClear,
		[Token(Token = "0x4001624")]
		MeInitializeIaiSpike,
		[Token(Token = "0x4001625")]
		MeIaiSpike,
		[Token(Token = "0x4001626")]
		UsagiInitializeIaiSpike,
		[Token(Token = "0x4001627")]
		UsagiIaiSpike,
		[Token(Token = "0x4001628")]
		FinishBad
	}
	[Token(Token = "0x2000423")]
	public enum KendamaInputKeys
	{
		[Token(Token = "0x400162A")]
		Up,
		[Token(Token = "0x400162B")]
		Down,
		[Token(Token = "0x400162C")]
		None
	}
	[Token(Token = "0x2000424")]
	public class KendamaMobAnimationController : MonoBehaviour
	{
		[Token(Token = "0x400162D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Animator _animator;

		[Token(Token = "0x600106F")]
		[Address(RVA = "0x19D69C4", Offset = "0x19D69C4", VA = "0x19D69C4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001070")]
		[Address(RVA = "0x19D6A9C", Offset = "0x19D6A9C", VA = "0x19D6A9C")]
		public KendamaMobAnimationController()
		{
		}
	}
	[Token(Token = "0x2000425")]
	public class KendamaMobManager : MonoBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x2000426")]
		[CompilerGenerated]
		private struct <PlayMusic>d__6 : IAsyncStateMachine
		{
			[Token(Token = "0x4001630")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001631")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001632")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public KendamaMobManager <>4__this;

			[Token(Token = "0x4001633")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private CancellationToken <token>5__2;

			[Token(Token = "0x4001634")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x4001635")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private int <i>5__3;

			[Token(Token = "0x6001078")]
			[Address(RVA = "0x19D6D7C", Offset = "0x19D6D7C", VA = "0x19D6D7C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001079")]
			[Address(RVA = "0x19D72E0", Offset = "0x19D72E0", VA = "0x19D72E0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000427")]
		[CompilerGenerated]
		private struct <Idle>d__7 : IAsyncStateMachine
		{
			[Token(Token = "0x4001636")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001637")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001638")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public KendamaMobManager <>4__this;

			[Token(Token = "0x4001639")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private CancellationToken <token>5__2;

			[Token(Token = "0x400163A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x400163B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private int <i>5__3;

			[Token(Token = "0x600107A")]
			[Address(RVA = "0x19D72EC", Offset = "0x19D72EC", VA = "0x19D72EC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600107B")]
			[Address(RVA = "0x19D7850", Offset = "0x19D7850", VA = "0x19D7850", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x400162F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator[] _kendamaMobAnimators;

		[Token(Token = "0x1700015D")]
		[Inject]
		private ISubscriber<OnMusicGame> OnMusicGameMessage
		{
			[Token(Token = "0x6001071")]
			[Address(RVA = "0x19D6AA4", Offset = "0x19D6AA4", VA = "0x19D6AA4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001072")]
			[Address(RVA = "0x19D6AAC", Offset = "0x19D6AAC", VA = "0x19D6AAC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001073")]
		[Address(RVA = "0x19D6AB4", Offset = "0x19D6AB4", VA = "0x19D6AB4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001074")]
		[Address(RVA = "0x19D6BE0", Offset = "0x19D6BE0", VA = "0x19D6BE0")]
		[AsyncStateMachine(typeof(<PlayMusic>d__6))]
		private void PlayMusic()
		{
		}

		[Token(Token = "0x6001075")]
		[Address(RVA = "0x19D6C98", Offset = "0x19D6C98", VA = "0x19D6C98")]
		[AsyncStateMachine(typeof(<Idle>d__7))]
		private void Idle()
		{
		}

		[Token(Token = "0x6001076")]
		[Address(RVA = "0x19D6D50", Offset = "0x19D6D50", VA = "0x19D6D50")]
		public KendamaMobManager()
		{
		}
	}
	[Token(Token = "0x2000428")]
	public class KendamaPracticeClearCounter : PracticeClearCounter
	{
		[Token(Token = "0x400163C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private BoolReactiveProperty _clearMessage;

		[Token(Token = "0x1700015E")]
		[Inject]
		private ISubscriber<FPActionData> OnFPAction
		{
			[Token(Token = "0x600107C")]
			[Address(RVA = "0x19D785C", Offset = "0x19D785C", VA = "0x19D785C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600107D")]
			[Address(RVA = "0x19D7864", Offset = "0x19D7864", VA = "0x19D7864")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700015F")]
		public override BoolReactiveProperty ClearMessage
		{
			[Token(Token = "0x600107F")]
			[Address(RVA = "0x19D79D8", Offset = "0x19D79D8", VA = "0x19D79D8", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001080")]
			[Address(RVA = "0x19D79E0", Offset = "0x19D79E0", VA = "0x19D79E0", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x600107E")]
		[Address(RVA = "0x19D786C", Offset = "0x19D786C", VA = "0x19D786C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001081")]
		[Address(RVA = "0x19D79E8", Offset = "0x19D79E8", VA = "0x19D79E8")]
		public KendamaPracticeClearCounter()
		{
		}
	}
	[Token(Token = "0x2000429")]
	[RequireComponent(typeof(GrooveFitAudioSource))]
	public class KendamaPracticeGameDirector : EventBlock
	{
		[StructLayout(3)]
		[Token(Token = "0x200042A")]
		[CompilerGenerated]
		private struct <SetEvent>d__31 : IAsyncStateMachine
		{
			[Token(Token = "0x4001656")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001657")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x4001658")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public KendamaPracticeGameDirector <>4__this;

			[Token(Token = "0x4001659")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken token;

			[Token(Token = "0x400165A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x600108D")]
			[Address(RVA = "0x19D80F8", Offset = "0x19D80F8", VA = "0x19D80F8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600108E")]
			[Address(RVA = "0x19D8EA0", Offset = "0x19D8EA0", VA = "0x19D8EA0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200042B")]
		[CompilerGenerated]
		private struct <EightCount>d__32 : IAsyncStateMachine
		{
			[Token(Token = "0x400165B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400165C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x400165D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public KendamaPracticeGameDirector <>4__this;

			[Token(Token = "0x400165E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CancellationToken token;

			[Token(Token = "0x400165F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int[] <intervals>5__2;

			[Token(Token = "0x4001660")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <countNum>5__3;

			[Token(Token = "0x4001661")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <spb>5__4;

			[Token(Token = "0x4001662")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x600108F")]
			[Address(RVA = "0x19D9EF8", Offset = "0x19D9EF8", VA = "0x19D9EF8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001090")]
			[Address(RVA = "0x19DA494", Offset = "0x19DA494", VA = "0x19DA494", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x400163E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Inject]
		private DiContainer _container;

		[Token(Token = "0x4001640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Header("Practice Settings")]
		[SerializeField]
		private int _clearSuccessCount;

		[Token(Token = "0x4001641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private int _addSuccessCountThreshold;

		[Token(Token = "0x4001642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private int _assistAppearCount;

		[Token(Token = "0x4001643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int _successCnt;

		[Token(Token = "0x4001644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int _greatOrOKCount;

		[Token(Token = "0x4001645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int _notSuccessCount;

		[Token(Token = "0x4001646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject _saveFitPatternGameObj;

		[Token(Token = "0x4001647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool _isFirstFitPattern;

		[Token(Token = "0x4001649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Header("Music Settings")]
		[SerializeField]
		private GrooveFitBoxManager _grooveFitBox;

		[Token(Token = "0x400164A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private TextAsset _musicSheet;

		[Token(Token = "0x400164B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private AudioClip _music;

		[Token(Token = "0x400164C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private float _inputBpm;

		[Token(Token = "0x400164D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float _outputBpm;

		[Token(Token = "0x400164E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private AudioClip _countAudioClip;

		[Token(Token = "0x400164F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private SheetData _sheetData;

		[Token(Token = "0x4001650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private AudioSource _audio;

		[Token(Token = "0x4001651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float _currentBeat;

		[Token(Token = "0x4001652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private int _count;

		[Token(Token = "0x4001653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool _practiceCleared;

		[Token(Token = "0x4001654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		[Header("Debug")]
		[SerializeField]
		private bool _displayDebug;

		[Token(Token = "0x4001655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private TextMeshPro _debugText;

		[Token(Token = "0x17000160")]
		[Inject]
		private IPublisher<BeatData> BeatDataMessage
		{
			[Token(Token = "0x6001083")]
			[Address(RVA = "0x19D7B10", Offset = "0x19D7B10", VA = "0x19D7B10")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001084")]
			[Address(RVA = "0x19D7B18", Offset = "0x19D7B18", VA = "0x19D7B18")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000161")]
		[Inject]
		private ISubscriber<FPActionData> OnFPAction
		{
			[Token(Token = "0x6001085")]
			[Address(RVA = "0x19D7B20", Offset = "0x19D7B20", VA = "0x19D7B20")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001086")]
			[Address(RVA = "0x19D7B28", Offset = "0x19D7B28", VA = "0x19D7B28")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001087")]
		[Address(RVA = "0x19D7B30", Offset = "0x19D7B30", VA = "0x19D7B30")]
		private void StandBy()
		{
		}

		[Token(Token = "0x6001088")]
		[Address(RVA = "0x19D7CF8", Offset = "0x19D7CF8", VA = "0x19D7CF8", Slot = "4")]
		[AsyncStateMachine(typeof(<SetEvent>d__31))]
		public override UniTask<bool> SetEvent(CancellationToken token)
		{
			return default(UniTask<bool>);
		}

		[Token(Token = "0x6001089")]
		[Address(RVA = "0x19D7DD4", Offset = "0x19D7DD4", VA = "0x19D7DD4")]
		[AsyncStateMachine(typeof(<EightCount>d__32))]
		private UniTask EightCount(CancellationToken token)
		{
			return default(UniTask);
		}

		[Token(Token = "0x600108A")]
		[Address(RVA = "0x19D7F68", Offset = "0x19D7F68", VA = "0x19D7F68")]
		private float SecondPerBeat(float bpm)
		{
			return default(float);
		}

		[Token(Token = "0x600108B")]
		[Address(RVA = "0x19D7F84", Offset = "0x19D7F84", VA = "0x19D7F84")]
		public KendamaPracticeGameDirector()
		{
		}
	}
	[Token(Token = "0x200042C")]
	public class MeKendamaAnimationController : MonoBehaviour
	{
		[Token(Token = "0x200042D")]
		[CompilerGenerated]
		private sealed class <ChangeKenGrip>d__40 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001673")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001674")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001675")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MeKendamaAnimationController <>4__this;

			[Token(Token = "0x17000164")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60010B0")]
				[Address(RVA = "0x19DC378", Offset = "0x19DC378", VA = "0x19DC378", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000165")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60010B2")]
				[Address(RVA = "0x19DC3C0", Offset = "0x19DC3C0", VA = "0x19DC3C0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60010AD")]
			[Address(RVA = "0x19DB64C", Offset = "0x19DB64C", VA = "0x19DB64C")]
			[DebuggerHidden]
			public <ChangeKenGrip>d__40(int <>1__state)
			{
			}

			[Token(Token = "0x60010AE")]
			[Address(RVA = "0x19DC124", Offset = "0x19DC124", VA = "0x19DC124", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60010AF")]
			[Address(RVA = "0x19DC128", Offset = "0x19DC128", VA = "0x19DC128", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60010B1")]
			[Address(RVA = "0x19DC380", Offset = "0x19DC380", VA = "0x19DC380", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200042E")]
		[CompilerGenerated]
		private sealed class <ChangeMoshikameGrip>d__41 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001676")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001677")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001678")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MeKendamaAnimationController <>4__this;

			[Token(Token = "0x17000166")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60010B6")]
				[Address(RVA = "0x19DC61C", Offset = "0x19DC61C", VA = "0x19DC61C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000167")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60010B8")]
				[Address(RVA = "0x19DC664", Offset = "0x19DC664", VA = "0x19DC664", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60010B3")]
			[Address(RVA = "0x19DB674", Offset = "0x19DB674", VA = "0x19DB674")]
			[DebuggerHidden]
			public <ChangeMoshikameGrip>d__41(int <>1__state)
			{
			}

			[Token(Token = "0x60010B4")]
			[Address(RVA = "0x19DC3C8", Offset = "0x19DC3C8", VA = "0x19DC3C8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60010B5")]
			[Address(RVA = "0x19DC3CC", Offset = "0x19DC3CC", VA = "0x19DC3CC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60010B7")]
			[Address(RVA = "0x19DC624", Offset = "0x19DC624", VA = "0x19DC624", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200042F")]
		[CompilerGenerated]
		private sealed class <NoTracking>d__42 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001679")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400167A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400167B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MeKendamaAnimationController <>4__this;

			[Token(Token = "0x17000168")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60010BC")]
				[Address(RVA = "0x19DC7AC", Offset = "0x19DC7AC", VA = "0x19DC7AC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000169")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60010BE")]
				[Address(RVA = "0x19DC7F4", Offset = "0x19DC7F4", VA = "0x19DC7F4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60010B9")]
			[Address(RVA = "0x19DB69C", Offset = "0x19DB69C", VA = "0x19DB69C")]
			[DebuggerHidden]
			public <NoTracking>d__42(int <>1__state)
			{
			}

			[Token(Token = "0x60010BA")]
			[Address(RVA = "0x19DC66C", Offset = "0x19DC66C", VA = "0x19DC66C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60010BB")]
			[Address(RVA = "0x19DC670", Offset = "0x19DC670", VA = "0x19DC670", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60010BD")]
			[Address(RVA = "0x19DC7B4", Offset = "0x19DC7B4", VA = "0x19DC7B4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Inject]
		private InputProvider _inputProvider;

		[Token(Token = "0x4001664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator _kendamaAnimator;

		[Token(Token = "0x4001665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int AnimeCnt;

		[Token(Token = "0x4001666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly string[] _bigCupAniName;

		[Token(Token = "0x4001667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly string[] _moshikameAniName;

		[Token(Token = "0x4001668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly string[] _spikeAniName;

		[Token(Token = "0x4001669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly string[] _earthTurnAniName;

		[Token(Token = "0x400166A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly string[] _mateoAniName;

		[Token(Token = "0x400166B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private readonly string[] _iaiSpikeAniName;

		[Token(Token = "0x400166D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject _cup;

		[Token(Token = "0x400166E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject _moshikameGripHand;

		[Token(Token = "0x400166F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject _kenGripHand;

		[Token(Token = "0x4001670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject _gripHands;

		[Token(Token = "0x4001672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private SkinnedMeshRenderer _skinnedMeshRenderer;

		[Token(Token = "0x17000162")]
		[Inject]
		private ISubscriber<FPActionData> OnFPAction
		{
			[Token(Token = "0x6001091")]
			[Address(RVA = "0x19DA4A0", Offset = "0x19DA4A0", VA = "0x19DA4A0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001092")]
			[Address(RVA = "0x19DA4A8", Offset = "0x19DA4A8", VA = "0x19DA4A8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000163")]
		[Inject]
		private ISubscriber<OnPause> OnPauseEvent
		{
			[Token(Token = "0x6001093")]
			[Address(RVA = "0x19DA4B0", Offset = "0x19DA4B0", VA = "0x19DA4B0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001094")]
			[Address(RVA = "0x19DA4B8", Offset = "0x19DA4B8", VA = "0x19DA4B8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001095")]
		[Address(RVA = "0x19DA4C0", Offset = "0x19DA4C0", VA = "0x19DA4C0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001096")]
		[Address(RVA = "0x19DA75C", Offset = "0x19DA75C", VA = "0x19DA75C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001097")]
		[Address(RVA = "0x19DA89C", Offset = "0x19DA89C", VA = "0x19DA89C")]
		public void DisplayRealHand()
		{
		}

		[Token(Token = "0x6001098")]
		[Address(RVA = "0x19DA8D4", Offset = "0x19DA8D4", VA = "0x19DA8D4")]
		public void HideRealHand()
		{
		}

		[Token(Token = "0x6001099")]
		[Address(RVA = "0x19DA90C", Offset = "0x19DA90C", VA = "0x19DA90C")]
		public void InitializeBigCup()
		{
		}

		[Token(Token = "0x600109A")]
		[Address(RVA = "0x19DA9F4", Offset = "0x19DA9F4", VA = "0x19DA9F4")]
		public void BigCup()
		{
		}

		[Token(Token = "0x600109B")]
		[Address(RVA = "0x19DAAA8", Offset = "0x19DAAA8", VA = "0x19DAAA8")]
		public void InitializeMoshikame()
		{
		}

		[Token(Token = "0x600109C")]
		[Address(RVA = "0x19DAB1C", Offset = "0x19DAB1C", VA = "0x19DAB1C")]
		public void Moshikame()
		{
		}

		[Token(Token = "0x600109D")]
		[Address(RVA = "0x19DABD0", Offset = "0x19DABD0", VA = "0x19DABD0")]
		public void InitializeSpike()
		{
		}

		[Token(Token = "0x600109E")]
		[Address(RVA = "0x19DACB8", Offset = "0x19DACB8", VA = "0x19DACB8")]
		public void Spike()
		{
		}

		[Token(Token = "0x600109F")]
		[Address(RVA = "0x19DAD6C", Offset = "0x19DAD6C", VA = "0x19DAD6C")]
		public void InitializeEarthTurn()
		{
		}

		[Token(Token = "0x60010A0")]
		[Address(RVA = "0x19DADE0", Offset = "0x19DADE0", VA = "0x19DADE0")]
		public void EarthTurn()
		{
		}

		[Token(Token = "0x60010A1")]
		[Address(RVA = "0x19DAE94", Offset = "0x19DAE94", VA = "0x19DAE94")]
		public void InitializeMateo()
		{
		}

		[Token(Token = "0x60010A2")]
		[Address(RVA = "0x19DAF08", Offset = "0x19DAF08", VA = "0x19DAF08")]
		public void Mateo()
		{
		}

		[Token(Token = "0x60010A3")]
		[Address(RVA = "0x19DB078", Offset = "0x19DB078", VA = "0x19DB078")]
		public void InitializeIaiSpike()
		{
		}

		[Token(Token = "0x60010A4")]
		[Address(RVA = "0x19DB0EC", Offset = "0x19DB0EC", VA = "0x19DB0EC")]
		public void IsiSpike()
		{
		}

		[Token(Token = "0x60010A5")]
		[Address(RVA = "0x19DB1A0", Offset = "0x19DB1A0", VA = "0x19DB1A0")]
		public void Miss()
		{
		}

		[Token(Token = "0x60010A6")]
		[Address(RVA = "0x19DB20C", Offset = "0x19DB20C", VA = "0x19DB20C")]
		private void DoAction(FPActionData value)
		{
		}

		[Token(Token = "0x60010A7")]
		[Address(RVA = "0x19DAC44", Offset = "0x19DAC44", VA = "0x19DAC44")]
		[IteratorStateMachine(typeof(<ChangeKenGrip>d__40))]
		private IEnumerator ChangeKenGrip()
		{
			return null;
		}

		[Token(Token = "0x60010A8")]
		[Address(RVA = "0x19DA980", Offset = "0x19DA980", VA = "0x19DA980")]
		[IteratorStateMachine(typeof(<ChangeMoshikameGrip>d__41))]
		private IEnumerator ChangeMoshikameGrip()
		{
			return null;
		}

		[Token(Token = "0x60010A9")]
		[Address(RVA = "0x19DB004", Offset = "0x19DB004", VA = "0x19DB004")]
		[IteratorStateMachine(typeof(<NoTracking>d__42))]
		private IEnumerator NoTracking()
		{
			return null;
		}

		[Token(Token = "0x60010AA")]
		[Address(RVA = "0x19DB6C4", Offset = "0x19DB6C4", VA = "0x19DB6C4")]
		public MeKendamaAnimationController()
		{
		}
	}
	[Token(Token = "0x2000430")]
	public class MeObjController : MonoBehaviour
	{
		[Token(Token = "0x400167C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _pointLight;

		[Token(Token = "0x400167D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _spotLightUp;

		[Token(Token = "0x400167E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject _spotLightCenter;

		[Token(Token = "0x400167F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject _spotLightDown;

		[Token(Token = "0x4001680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AudioClip _lightTrueSE;

		[Token(Token = "0x4001681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private AudioClip _lightFalseSE;

		[Token(Token = "0x4001682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private AudioClip _greatSE;

		[Token(Token = "0x4001683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioClip _okSE;

		[Token(Token = "0x4001684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioClip _badSE;

		[Token(Token = "0x4001685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private AudioClip _go;

		[Token(Token = "0x4001686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private AudioSource _audio;

		[Token(Token = "0x1700016A")]
		[Inject]
		private ISubscriber<FPActionData> OnFPAction
		{
			[Token(Token = "0x60010BF")]
			[Address(RVA = "0x19DC7FC", Offset = "0x19DC7FC", VA = "0x19DC7FC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60010C0")]
			[Address(RVA = "0x19DC804", Offset = "0x19DC804", VA = "0x19DC804")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700016B")]
		[Inject]
		private ISubscriber<OnMusicGame> OnMusicGameMessage
		{
			[Token(Token = "0x60010C1")]
			[Address(RVA = "0x19DC80C", Offset = "0x19DC80C", VA = "0x19DC80C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60010C2")]
			[Address(RVA = "0x19DC814", Offset = "0x19DC814", VA = "0x19DC814")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x60010C3")]
		[Address(RVA = "0x19DC81C", Offset = "0x19DC81C", VA = "0x19DC81C")]
		private void Start()
		{
		}

		[Token(Token = "0x60010C4")]
		[Address(RVA = "0x19DCA68", Offset = "0x19DCA68", VA = "0x19DCA68")]
		private void DoAction(FPActionData value)
		{
		}

		[Token(Token = "0x60010C5")]
		[Address(RVA = "0x19DCBE4", Offset = "0x19DCBE4", VA = "0x19DCBE4")]
		public void GreatSE()
		{
		}

		[Token(Token = "0x60010C6")]
		[Address(RVA = "0x19DCC08", Offset = "0x19DCC08", VA = "0x19DCC08")]
		public void OkSE()
		{
		}

		[Token(Token = "0x60010C7")]
		[Address(RVA = "0x19DCC2C", Offset = "0x19DCC2C", VA = "0x19DCC2C")]
		public void BadSE()
		{
		}

		[Token(Token = "0x60010C8")]
		[Address(RVA = "0x19DCC50", Offset = "0x19DCC50", VA = "0x19DCC50")]
		public void MeLightTrue()
		{
		}

		[Token(Token = "0x60010C9")]
		[Address(RVA = "0x19DCC88", Offset = "0x19DCC88", VA = "0x19DCC88")]
		public void MeLightFalse()
		{
		}

		[Token(Token = "0x60010CA")]
		[Address(RVA = "0x19DCCC0", Offset = "0x19DCCC0", VA = "0x19DCCC0")]
		public MeObjController()
		{
		}
	}
	[Token(Token = "0x2000431")]
	public class RandomBehaviour : StateMachineBehaviour
	{
		[Token(Token = "0x4001689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int _hashRandom;

		[Token(Token = "0x400168A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int _maxAnimationNum;

		[Token(Token = "0x60010CD")]
		[Address(RVA = "0x19DCCEC", Offset = "0x19DCCEC", VA = "0x19DCCEC", Slot = "9")]
		public override void OnStateMachineEnter(Animator animator, int stateMachinePathHash)
		{
		}

		[Token(Token = "0x60010CE")]
		[Address(RVA = "0x19DCD30", Offset = "0x19DCD30", VA = "0x19DCD30")]
		public RandomBehaviour()
		{
		}
	}
	[Token(Token = "0x2000432")]
	public class UsagiAnimationController : MonoBehaviour
	{
		[Token(Token = "0x400168B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animator _animator;

		[Token(Token = "0x400168C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _spotLightUp;

		[Token(Token = "0x400168D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject _spotLightCenter;

		[Token(Token = "0x400168E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject _spotLightDown;

		[Token(Token = "0x400168F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int Step;

		[Token(Token = "0x4001690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int Idle;

		[Token(Token = "0x4001691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly int DownToCenter;

		[Token(Token = "0x4001692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static readonly int DownToUp;

		[Token(Token = "0x4001693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly int UpToCenter;

		[Token(Token = "0x4001694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static readonly int UpToDown;

		[Token(Token = "0x4001695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly int CenterToUp;

		[Token(Token = "0x4001696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private static readonly int CenterToDown;

		[Token(Token = "0x4001697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static readonly int Rally;

		[Token(Token = "0x4001698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private static readonly int Cheer;

		[Token(Token = "0x4001699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static readonly int Talk;

		[Token(Token = "0x400169A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private static readonly int Smile;

		[Token(Token = "0x400169B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static readonly int Jump;

		[Token(Token = "0x1700016C")]
		[Inject]
		private ISubscriber<FPActionData> OnFPAction
		{
			[Token(Token = "0x60010CF")]
			[Address(RVA = "0x19DCD88", Offset = "0x19DCD88", VA = "0x19DCD88")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60010D0")]
			[Address(RVA = "0x19DCD90", Offset = "0x19DCD90", VA = "0x19DCD90")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700016D")]
		[Inject]
		private ISubscriber<CharacterActionData> OnCharacterAction
		{
			[Token(Token = "0x60010D1")]
			[Address(RVA = "0x19DCD98", Offset = "0x19DCD98", VA = "0x19DCD98")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60010D2")]
			[Address(RVA = "0x19DCDA0", Offset = "0x19DCDA0", VA = "0x19DCDA0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x60010D3")]
		[Address(RVA = "0x19DCDA8", Offset = "0x19DCDA8", VA = "0x19DCDA8")]
		private void Start()
		{
		}

		[Token(Token = "0x60010D4")]
		[Address(RVA = "0x19DCFC0", Offset = "0x19DCFC0", VA = "0x19DCFC0")]
		private void DoAction(FPActionData value)
		{
		}

		[Token(Token = "0x60010D5")]
		[Address(RVA = "0x19DD1D8", Offset = "0x19DD1D8", VA = "0x19DD1D8")]
		private void DoCharacterAction(CharacterActionData data)
		{
		}

		[Token(Token = "0x60010D6")]
		[Address(RVA = "0x19DD4F4", Offset = "0x19DD4F4", VA = "0x19DD4F4")]
		public UsagiAnimationController()
		{
		}
	}
	[Token(Token = "0x2000433")]
	public class UsagiKendamaAnimationController : MonoBehaviour
	{
		[Token(Token = "0x2000434")]
		[CompilerGenerated]
		private sealed class <ChangeKenGrip>d__29 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40016AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40016AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40016AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UsagiKendamaAnimationController <>4__this;

			[Token(Token = "0x1700016F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60010F1")]
				[Address(RVA = "0x19DF070", Offset = "0x19DF070", VA = "0x19DF070", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000170")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60010F3")]
				[Address(RVA = "0x19DF0B8", Offset = "0x19DF0B8", VA = "0x19DF0B8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60010EE")]
			[Address(RVA = "0x19DE488", Offset = "0x19DE488", VA = "0x19DE488")]
			[DebuggerHidden]
			public <ChangeKenGrip>d__29(int <>1__state)
			{
			}

			[Token(Token = "0x60010EF")]
			[Address(RVA = "0x19DEEE8", Offset = "0x19DEEE8", VA = "0x19DEEE8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60010F0")]
			[Address(RVA = "0x19DEEEC", Offset = "0x19DEEEC", VA = "0x19DEEEC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60010F2")]
			[Address(RVA = "0x19DF078", Offset = "0x19DF078", VA = "0x19DF078", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000435")]
		[CompilerGenerated]
		private sealed class <ChangeMoshikameGrip>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40016AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40016AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40016B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UsagiKendamaAnimationController <>4__this;

			[Token(Token = "0x17000171")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60010F7")]
				[Address(RVA = "0x19DF248", Offset = "0x19DF248", VA = "0x19DF248", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000172")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60010F9")]
				[Address(RVA = "0x19DF290", Offset = "0x19DF290", VA = "0x19DF290", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60010F4")]
			[Address(RVA = "0x19DE4B0", Offset = "0x19DE4B0", VA = "0x19DE4B0")]
			[DebuggerHidden]
			public <ChangeMoshikameGrip>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x60010F5")]
			[Address(RVA = "0x19DF0C0", Offset = "0x19DF0C0", VA = "0x19DF0C0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60010F6")]
			[Address(RVA = "0x19DF0C4", Offset = "0x19DF0C4", VA = "0x19DF0C4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60010F8")]
			[Address(RVA = "0x19DF250", Offset = "0x19DF250", VA = "0x19DF250", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000436")]
		[CompilerGenerated]
		private sealed class <NoTracking>d__31 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40016B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40016B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40016B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UsagiKendamaAnimationController <>4__this;

			[Token(Token = "0x17000173")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60010FD")]
				[Address(RVA = "0x19DF37C", Offset = "0x19DF37C", VA = "0x19DF37C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000174")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60010FF")]
				[Address(RVA = "0x19DF3C4", Offset = "0x19DF3C4", VA = "0x19DF3C4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60010FA")]
			[Address(RVA = "0x19DE4D8", Offset = "0x19DE4D8", VA = "0x19DE4D8")]
			[DebuggerHidden]
			public <NoTracking>d__31(int <>1__state)
			{
			}

			[Token(Token = "0x60010FB")]
			[Address(RVA = "0x19DF298", Offset = "0x19DF298", VA = "0x19DF298", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60010FC")]
			[Address(RVA = "0x19DF29C", Offset = "0x19DF29C", VA = "0x19DF29C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60010FE")]
			[Address(RVA = "0x19DF384", Offset = "0x19DF384", VA = "0x19DF384", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400169E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animator _kendamaAnimator;

		[Token(Token = "0x400169F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int AnimeCnt;

		[Token(Token = "0x40016A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly string[] _bigCupAniName;

		[Token(Token = "0x40016A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly string[] _moshikameAniName;

		[Token(Token = "0x40016A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly string[] _spikeAniName;

		[Token(Token = "0x40016A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly string[] _earthTurnAniName;

		[Token(Token = "0x40016A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly string[] _mateoAniName;

		[Token(Token = "0x40016A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly string[] _iaiSpikeAniName;

		[Token(Token = "0x40016A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _cup;

		[Token(Token = "0x40016A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject _kendamaPosOffsetObj;

		[Token(Token = "0x40016A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject _usagiHead;

		[Token(Token = "0x40016AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private float _offSetY;

		[Token(Token = "0x1700016E")]
		[Inject]
		private ISubscriber<FPActionData> OnFPAction
		{
			[Token(Token = "0x60010DA")]
			[Address(RVA = "0x19DD79C", Offset = "0x19DD79C", VA = "0x19DD79C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60010DB")]
			[Address(RVA = "0x19DD7A4", Offset = "0x19DD7A4", VA = "0x19DD7A4")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x60010DC")]
		[Address(RVA = "0x19DD7AC", Offset = "0x19DD7AC", VA = "0x19DD7AC")]
		private void Start()
		{
		}

		[Token(Token = "0x60010DD")]
		[Address(RVA = "0x19DD8D8", Offset = "0x19DD8D8", VA = "0x19DD8D8")]
		private void Update()
		{
		}

		[Token(Token = "0x60010DE")]
		[Address(RVA = "0x19DD97C", Offset = "0x19DD97C", VA = "0x19DD97C")]
		public void InitializeBigCup()
		{
		}

		[Token(Token = "0x60010DF")]
		[Address(RVA = "0x19DD9D8", Offset = "0x19DD9D8", VA = "0x19DD9D8")]
		public void BigCup()
		{
		}

		[Token(Token = "0x60010E0")]
		[Address(RVA = "0x19DDA8C", Offset = "0x19DDA8C", VA = "0x19DDA8C")]
		public void InitializeMoshikame()
		{
		}

		[Token(Token = "0x60010E1")]
		[Address(RVA = "0x19DDB74", Offset = "0x19DDB74", VA = "0x19DDB74")]
		public void Moshikame()
		{
		}

		[Token(Token = "0x60010E2")]
		[Address(RVA = "0x19DDC28", Offset = "0x19DDC28", VA = "0x19DDC28")]
		public void InitializeSpike()
		{
		}

		[Token(Token = "0x60010E3")]
		[Address(RVA = "0x19DDD10", Offset = "0x19DDD10", VA = "0x19DDD10")]
		public void Spike()
		{
		}

		[Token(Token = "0x60010E4")]
		[Address(RVA = "0x19DDDC4", Offset = "0x19DDDC4", VA = "0x19DDDC4")]
		public void InitializeEarthTurn()
		{
		}

		[Token(Token = "0x60010E5")]
		[Address(RVA = "0x19DDE20", Offset = "0x19DDE20", VA = "0x19DDE20")]
		public void EarthTurn()
		{
		}

		[Token(Token = "0x60010E6")]
		[Address(RVA = "0x19DDED4", Offset = "0x19DDED4", VA = "0x19DDED4")]
		public void InitializeMateo()
		{
		}

		[Token(Token = "0x60010E7")]
		[Address(RVA = "0x19DDF30", Offset = "0x19DDF30", VA = "0x19DDF30")]
		public void Mateo()
		{
		}

		[Token(Token = "0x60010E8")]
		[Address(RVA = "0x19DDFE4", Offset = "0x19DDFE4", VA = "0x19DDFE4")]
		private void DoAction(FPActionData value)
		{
		}

		[Token(Token = "0x60010E9")]
		[Address(RVA = "0x19DDC9C", Offset = "0x19DDC9C", VA = "0x19DDC9C")]
		[IteratorStateMachine(typeof(<ChangeKenGrip>d__29))]
		private IEnumerator ChangeKenGrip()
		{
			return null;
		}

		[Token(Token = "0x60010EA")]
		[Address(RVA = "0x19DDB00", Offset = "0x19DDB00", VA = "0x19DDB00")]
		[IteratorStateMachine(typeof(<ChangeMoshikameGrip>d__30))]
		private IEnumerator ChangeMoshikameGrip()
		{
			return null;
		}

		[Token(Token = "0x60010EB")]
		[Address(RVA = "0x19DE414", Offset = "0x19DE414", VA = "0x19DE414")]
		[IteratorStateMachine(typeof(<NoTracking>d__31))]
		private IEnumerator NoTracking()
		{
			return null;
		}

		[Token(Token = "0x60010EC")]
		[Address(RVA = "0x19DE500", Offset = "0x19DE500", VA = "0x19DE500")]
		public UsagiKendamaAnimationController()
		{
		}
	}
	[Token(Token = "0x2000437")]
	public class UsagiObjController : MonoBehaviour
	{
		[Token(Token = "0x40016B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _pointLight;

		[Token(Token = "0x40016B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip _muSE;

		[Token(Token = "0x40016B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip _pyonSE;

		[Token(Token = "0x40016B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _greatSE;

		[Token(Token = "0x40016B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AudioClip _go;

		[Token(Token = "0x40016B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private AudioClip _lightTrueSE;

		[Token(Token = "0x40016BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private AudioClip _lightFalseSE;

		[Token(Token = "0x40016BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject _spotLightUp;

		[Token(Token = "0x40016BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _spotLightCenter;

		[Token(Token = "0x40016BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _spotLightDown;

		[Token(Token = "0x40016BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private AudioSource _audio;

		[Token(Token = "0x17000175")]
		[Inject]
		private ISubscriber<FPActionData> OnFPAction
		{
			[Token(Token = "0x6001100")]
			[Address(RVA = "0x19DF3CC", Offset = "0x19DF3CC", VA = "0x19DF3CC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001101")]
			[Address(RVA = "0x19DF3D4", Offset = "0x19DF3D4", VA = "0x19DF3D4")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000176")]
		[Inject]
		private ISubscriber<OnMusicGame> OnMusicGameMessage
		{
			[Token(Token = "0x6001102")]
			[Address(RVA = "0x19DF3DC", Offset = "0x19DF3DC", VA = "0x19DF3DC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001103")]
			[Address(RVA = "0x19DF3E4", Offset = "0x19DF3E4", VA = "0x19DF3E4")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001104")]
		[Address(RVA = "0x19DF3EC", Offset = "0x19DF3EC", VA = "0x19DF3EC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001105")]
		[Address(RVA = "0x19DF638", Offset = "0x19DF638", VA = "0x19DF638")]
		private void DoAction(FPActionData value)
		{
		}

		[Token(Token = "0x6001106")]
		[Address(RVA = "0x19DF878", Offset = "0x19DF878", VA = "0x19DF878")]
		public UsagiObjController()
		{
		}
	}
}
namespace __Imacreate__.__Production__.GrooveFitGames.GF1_Boxing
{
	[Token(Token = "0x2000438")]
	public class BoxingFrogActionManager : MonoBehaviour
	{
		[Token(Token = "0x40016C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator _animator;

		[Token(Token = "0x40016C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int Jab;

		[Token(Token = "0x40016C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int Straight;

		[Token(Token = "0x40016C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly int ThreeShotPunch;

		[Token(Token = "0x40016C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static readonly int Upper;

		[Token(Token = "0x17000177")]
		[Inject]
		private ISubscriber<CharacterActionData> OnCharacterAction
		{
			[Token(Token = "0x6001109")]
			[Address(RVA = "0x19DF8A4", Offset = "0x19DF8A4", VA = "0x19DF8A4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600110A")]
			[Address(RVA = "0x19DF8AC", Offset = "0x19DF8AC", VA = "0x19DF8AC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x600110B")]
		[Address(RVA = "0x19DF8B4", Offset = "0x19DF8B4", VA = "0x19DF8B4")]
		private void Start()
		{
		}

		[Token(Token = "0x600110C")]
		[Address(RVA = "0x19DF9E0", Offset = "0x19DF9E0", VA = "0x19DF9E0")]
		private void DoCharacterAction(CharacterActionData data)
		{
		}

		[Token(Token = "0x600110D")]
		[Address(RVA = "0x19DFC1C", Offset = "0x19DFC1C", VA = "0x19DFC1C")]
		public BoxingFrogActionManager()
		{
		}
	}
	[Token(Token = "0x2000439")]
	public class BoxingFrogBugSound : MonoBehaviour
	{
		[Token(Token = "0x40016C7")]
		private const float SE_ORIGINAL_BPM = 110f;

		[Token(Token = "0x40016C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BPMShiftAudioSource _appearSource;

		[Token(Token = "0x40016C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource _leftSource;

		[Token(Token = "0x40016CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioSource _rightSource;

		[Token(Token = "0x40016CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioSource _centerSource;

		[Token(Token = "0x40016CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AudioClip _bugAppearance;

		[Token(Token = "0x40016CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private AudioClip _gero;

		[Token(Token = "0x40016CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private AudioClip _geroGeroGero;

		[Token(Token = "0x40016CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioClip _punchGreat;

		[Token(Token = "0x40016D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioClip _punchOK;

		[Token(Token = "0x40016D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private AudioClip _punchBad;

		[Token(Token = "0x17000178")]
		[Inject]
		private ISubscriber<FPActionData> OnFPAction
		{
			[Token(Token = "0x6001110")]
			[Address(RVA = "0x19DFD24", Offset = "0x19DFD24", VA = "0x19DFD24")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001111")]
			[Address(RVA = "0x19DFD2C", Offset = "0x19DFD2C", VA = "0x19DFD2C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001112")]
		[Address(RVA = "0x19DFD34", Offset = "0x19DFD34", VA = "0x19DFD34")]
		private void Start()
		{
		}

		[Token(Token = "0x6001113")]
		[Address(RVA = "0x19DFE60", Offset = "0x19DFE60", VA = "0x19DFE60")]
		private void PlaySound(FPActionData value)
		{
		}

		[Token(Token = "0x6001114")]
		[Address(RVA = "0x19E0038", Offset = "0x19E0038", VA = "0x19E0038")]
		public BoxingFrogBugSound()
		{
		}
	}
	[Token(Token = "0x200043A")]
	public class BoxingFrogCalibration : MonoBehaviour
	{
		[Token(Token = "0x40016D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float _headHeight;

		[Token(Token = "0x40016D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float _rightHandLength;

		[Token(Token = "0x40016D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float _leftHandLength;

		[Token(Token = "0x40016D6")]
		private const float STANDARD_HEADHEIGHT = 1.653f;

		[Token(Token = "0x40016D7")]
		private const float STANDARD_HANDLENGTH = 0.585f;

		[Token(Token = "0x40016D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private DollyCartBug[] _dollyCartBugs;

		[Token(Token = "0x6001116")]
		[Address(RVA = "0x19E0044", Offset = "0x19E0044", VA = "0x19E0044")]
		private void Start()
		{
		}

		[Token(Token = "0x6001117")]
		[Address(RVA = "0x19E03AC", Offset = "0x19E03AC", VA = "0x19E03AC")]
		[ContextMenu("FindDollyCartBugs")]
		private void FindDollyCartBugs()
		{
		}

		[Token(Token = "0x6001118")]
		[Address(RVA = "0x19E0424", Offset = "0x19E0424", VA = "0x19E0424")]
		public BoxingFrogCalibration()
		{
		}
	}
	[Token(Token = "0x200043B")]
	public class BoxingFrogFPActionSubscribeEvent : FPActionSubscribeEvent
	{
		[Serializable]
		[Token(Token = "0x200043C")]
		private class BoxingFrogFPActionEvent : FPActionEventBase
		{
			[Token(Token = "0x40016DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[SerializeField]
			private BoxingFrogEventKeys Key;

			[Token(Token = "0x600111B")]
			[Address(RVA = "0x19E04B0", Offset = "0x19E04B0", VA = "0x19E04B0", Slot = "4")]
			public override string GetKey()
			{
				return null;
			}

			[Token(Token = "0x600111C")]
			[Address(RVA = "0x19E0518", Offset = "0x19E0518", VA = "0x19E0518")]
			public BoxingFrogFPActionEvent()
			{
			}
		}

		[Token(Token = "0x40016D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<BoxingFrogFPActionEvent> _boxingFrogFPActionEvent;

		[Token(Token = "0x6001119")]
		[Address(RVA = "0x19E042C", Offset = "0x19E042C", VA = "0x19E042C")]
		private void Start()
		{
		}

		[Token(Token = "0x600111A")]
		[Address(RVA = "0x19E04A8", Offset = "0x19E04A8", VA = "0x19E04A8")]
		public BoxingFrogFPActionSubscribeEvent()
		{
		}
	}
	[Token(Token = "0x200043D")]
	public class BoxingFrogInputJudgeAction : JudgeActionBase
	{
		[Serializable]
		[Token(Token = "0x200043E")]
		public class InputInformation
		{
			[Token(Token = "0x40016E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public BoxingFrogEventKeys _inputKeyEnum;

			[Token(Token = "0x40016E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float _timing;

			[Token(Token = "0x6001122")]
			[Address(RVA = "0x19E12AC", Offset = "0x19E12AC", VA = "0x19E12AC")]
			public InputInformation()
			{
			}
		}

		[Token(Token = "0x40016DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("Settings")]
		[SerializeField]
		private BoxingFrogInputPublisher _inputPublisher;

		[Token(Token = "0x40016DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public InputInformation[] _inputs;

		[Token(Token = "0x40016DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float _currentBeat;

		[Token(Token = "0x40016DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private IDisposable _disposable;

		[Token(Token = "0x40016DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool[] _judgeDones;

		[Token(Token = "0x40016E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly float _maxWaitJudge;

		[Token(Token = "0x600111D")]
		[Address(RVA = "0x19E0520", Offset = "0x19E0520", VA = "0x19E0520", Slot = "5")]
		protected override void AdditionalSetComponent()
		{
		}

		[Token(Token = "0x600111E")]
		[Address(RVA = "0x19E06A8", Offset = "0x19E06A8", VA = "0x19E06A8", Slot = "4")]
		protected override void BeatSubscribeAction(float currentBeat)
		{
		}

		[Token(Token = "0x600111F")]
		[Address(RVA = "0x19E0C50", Offset = "0x19E0C50", VA = "0x19E0C50")]
		private void Judge(string value, int judgeNum)
		{
		}

		[Token(Token = "0x6001120")]
		[Address(RVA = "0x19E1224", Offset = "0x19E1224", VA = "0x19E1224")]
		public BoxingFrogInputJudgeAction()
		{
		}
	}
	[Token(Token = "0x200043F")]
	public class BoxingFrogInputPublisher : InputPublisher
	{
		[Token(Token = "0x40016E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private StringReactiveProperty _inputMessage;

		[Token(Token = "0x17000179")]
		public override StringReactiveProperty InputMessage
		{
			[Token(Token = "0x6001125")]
			[Address(RVA = "0x19E13D0", Offset = "0x19E13D0", VA = "0x19E13D0", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001126")]
			[Address(RVA = "0x19E13D8", Offset = "0x19E13D8", VA = "0x19E13D8", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x6001123")]
		[Address(RVA = "0x19E12B4", Offset = "0x19E12B4", VA = "0x19E12B4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001124")]
		[Address(RVA = "0x19E1320", Offset = "0x19E1320", VA = "0x19E1320")]
		public void Punch(BoxingFrogInputKeys inputKeys)
		{
		}

		[Token(Token = "0x6001127")]
		[Address(RVA = "0x19E13E0", Offset = "0x19E13E0", VA = "0x19E13E0")]
		public BoxingFrogInputPublisher()
		{
		}
	}
	[Token(Token = "0x2000440")]
	public enum BoxingFrogEventKeys
	{
		[Token(Token = "0x40016E5")]
		RightBugFly,
		[Token(Token = "0x40016E6")]
		LeftBugFly,
		[Token(Token = "0x40016E7")]
		CenterBugFly1,
		[Token(Token = "0x40016E8")]
		CenterBugFly2,
		[Token(Token = "0x40016E9")]
		CenterBugFly3,
		[Token(Token = "0x40016EA")]
		BugAppearance,
		[Token(Token = "0x40016EB")]
		Gero,
		[Token(Token = "0x40016EC")]
		GeroGeroGero,
		[Token(Token = "0x40016ED")]
		Left,
		[Token(Token = "0x40016EE")]
		Right,
		[Token(Token = "0x40016EF")]
		Center1,
		[Token(Token = "0x40016F0")]
		Center2,
		[Token(Token = "0x40016F1")]
		Center3
	}
	[Token(Token = "0x2000441")]
	public enum BoxingFrogInputKeys
	{
		[Token(Token = "0x40016F3")]
		Left,
		[Token(Token = "0x40016F4")]
		Right,
		[Token(Token = "0x40016F5")]
		Center1,
		[Token(Token = "0x40016F6")]
		Center2,
		[Token(Token = "0x40016F7")]
		Center3,
		[Token(Token = "0x40016F8")]
		None
	}
	[Token(Token = "0x2000442")]
	public class BoxingFrogNoJudgementAction : FPNoJudgementAction
	{
		[Token(Token = "0x40016F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private List<BoxingFrogActionParam> actions;

		[Token(Token = "0x6001128")]
		[Address(RVA = "0x19E13E8", Offset = "0x19E13E8", VA = "0x19E13E8", Slot = "4")]
		protected override void BeatSubscribeAction(float currentBeat)
		{
		}

		[Token(Token = "0x6001129")]
		[Address(RVA = "0x19E1480", Offset = "0x19E1480", VA = "0x19E1480")]
		public BoxingFrogNoJudgementAction()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000443")]
	public class BoxingFrogActionParam : ActionParamBase
	{
		[Token(Token = "0x40016FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<BoxingFrogEventKeys> ActionKeys;

		[Token(Token = "0x600112A")]
		[Address(RVA = "0x19E1488", Offset = "0x19E1488", VA = "0x19E1488", Slot = "4")]
		public override List<string> GetKeyFromActionKeys()
		{
			return null;
		}

		[Token(Token = "0x600112B")]
		[Address(RVA = "0x19E1590", Offset = "0x19E1590", VA = "0x19E1590")]
		public BoxingFrogActionParam()
		{
		}
	}
	[Token(Token = "0x2000445")]
	public class BoxingFrogPracticeClearCounter : PracticeClearCounter
	{
		[Token(Token = "0x2000446")]
		private enum PracticeType
		{
			[Token(Token = "0x4001702")]
			SinglePunch,
			[Token(Token = "0x4001703")]
			ThreePunch
		}

		[Token(Token = "0x40016FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PracticeType _practiceType;

		[Token(Token = "0x40016FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private BoolReactiveProperty _clearMessage;

		[Token(Token = "0x4001700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int _centerPunchCnt;

		[Token(Token = "0x1700017A")]
		[Inject]
		private ISubscriber<FPActionData> OnFPAction
		{
			[Token(Token = "0x600112F")]
			[Address(RVA = "0x19E1674", Offset = "0x19E1674", VA = "0x19E1674")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001130")]
			[Address(RVA = "0x19E167C", Offset = "0x19E167C", VA = "0x19E167C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700017B")]
		public override BoolReactiveProperty ClearMessage
		{
			[Token(Token = "0x6001134")]
			[Address(RVA = "0x19E1A90", Offset = "0x19E1A90", VA = "0x19E1A90", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001135")]
			[Address(RVA = "0x19E1A98", Offset = "0x19E1A98", VA = "0x19E1A98", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x6001131")]
		[Address(RVA = "0x19E1684", Offset = "0x19E1684", VA = "0x19E1684")]
		private void Start()
		{
		}

		[Token(Token = "0x6001132")]
		[Address(RVA = "0x19E17F0", Offset = "0x19E17F0", VA = "0x19E17F0")]
		private void SinglePunchCount(FPActionData data)
		{
		}

		[Token(Token = "0x6001133")]
		[Address(RVA = "0x19E18FC", Offset = "0x19E18FC", VA = "0x19E18FC")]
		private void ThreePunchCount(FPActionData data)
		{
		}

		[Token(Token = "0x6001136")]
		[Address(RVA = "0x19E1AA0", Offset = "0x19E1AA0", VA = "0x19E1AA0")]
		public BoxingFrogPracticeClearCounter()
		{
		}
	}
	[Token(Token = "0x2000447")]
	public class BoxingGlove : MonoBehaviour
	{
		[Token(Token = "0x4001704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VRHand.HandType _HandType;

		[Token(Token = "0x4001705")]
		private const float _speedThreshold = 1f;

		[Token(Token = "0x4001707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 _prePosition;

		[Token(Token = "0x4001708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float _maxValue;

		[Token(Token = "0x4001709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float _decay;

		[Token(Token = "0x400170A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Renderer _punchingEffect;

		[Token(Token = "0x400170B")]
		private const string KEY = "_EmissionPower";

		[Token(Token = "0x400170C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float val;

		[Token(Token = "0x400170D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int EmissionPower;

		[Token(Token = "0x400170E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private AudioSource _source;

		[Token(Token = "0x400170F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioClip _clip;

		[Token(Token = "0x4001710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool isCoolTime;

		[Token(Token = "0x4001711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject RootGameObject;

		[Token(Token = "0x4001712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Inject]
		private ISubscriber<OnMusicGame> _onMusicGame;

		[Token(Token = "0x4001713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[Inject]
		private ISubscriber<OnPause> _onPause;

		[Token(Token = "0x4001714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int punchCount;

		[Token(Token = "0x4001715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IDisposable disposable;

		[Token(Token = "0x4001716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool _isPunchingForSoundEffect;

		[Token(Token = "0x1700017C")]
		public bool _IsPunching
		{
			[Token(Token = "0x6001138")]
			[Address(RVA = "0x19E1AC4", Offset = "0x19E1AC4", VA = "0x19E1AC4")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001139")]
			[Address(RVA = "0x19E1ACC", Offset = "0x19E1ACC", VA = "0x19E1ACC")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x600113A")]
		[Address(RVA = "0x19E1AD8", Offset = "0x19E1AD8", VA = "0x19E1AD8")]
		private void Start()
		{
		}

		[Token(Token = "0x600113B")]
		[Address(RVA = "0x19E2098", Offset = "0x19E2098", VA = "0x19E2098")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x600113C")]
		[Address(RVA = "0x19E2150", Offset = "0x19E2150", VA = "0x19E2150")]
		private void Update()
		{
		}

		[Token(Token = "0x600113D")]
		[Address(RVA = "0x19E1F14", Offset = "0x19E1F14", VA = "0x19E1F14")]
		private void SetPunchEffect(bool enable)
		{
		}

		[Token(Token = "0x600113E")]
		[Address(RVA = "0x19E2330", Offset = "0x19E2330", VA = "0x19E2330")]
		private void CoolTimeReset()
		{
		}

		[Token(Token = "0x600113F")]
		[Address(RVA = "0x19E2028", Offset = "0x19E2028", VA = "0x19E2028")]
		public void FreezeSound()
		{
		}

		[Token(Token = "0x6001140")]
		[Address(RVA = "0x19E2338", Offset = "0x19E2338", VA = "0x19E2338")]
		public void SetPrePosition()
		{
		}

		[Token(Token = "0x6001141")]
		[Address(RVA = "0x19E2368", Offset = "0x19E2368", VA = "0x19E2368")]
		public BoxingGlove()
		{
		}
	}
	[Token(Token = "0x2000449")]
	public class BoxingHandSwitcher : MonoBehaviour
	{
		[Token(Token = "0x400171A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Inject]
		private InputProvider _inputProvider;

		[Token(Token = "0x400171B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform HandL;

		[Token(Token = "0x400171C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform HandR;

		[Token(Token = "0x400171D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _defaultActiveR;

		[Token(Token = "0x400171E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool _defaultActiveL;

		[Token(Token = "0x400171F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private BoxingGlove GloveL;

		[Token(Token = "0x4001720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private BoxingGlove GloveR;

		[Token(Token = "0x4001721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Inject]
		private GFSceneLoader _gFSceneLoader;

		[Token(Token = "0x1700017D")]
		[Inject]
		private ISubscriber<OnPause> OnPauseEvent
		{
			[Token(Token = "0x6001147")]
			[Address(RVA = "0x19E25D0", Offset = "0x19E25D0", VA = "0x19E25D0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001148")]
			[Address(RVA = "0x19E25D8", Offset = "0x19E25D8", VA = "0x19E25D8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700017E")]
		[Inject]
		private ISubscriber<GameStatus> OnGameStatusSwitch
		{
			[Token(Token = "0x6001149")]
			[Address(RVA = "0x19E25E0", Offset = "0x19E25E0", VA = "0x19E25E0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600114A")]
			[Address(RVA = "0x19E25E8", Offset = "0x19E25E8", VA = "0x19E25E8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x600114B")]
		[Address(RVA = "0x19E25F0", Offset = "0x19E25F0", VA = "0x19E25F0")]
		private void Start()
		{
		}

		[Token(Token = "0x600114C")]
		[Address(RVA = "0x19E27E8", Offset = "0x19E27E8", VA = "0x19E27E8")]
		private void ToGloveMode()
		{
		}

		[Token(Token = "0x600114D")]
		[Address(RVA = "0x19E2B64", Offset = "0x19E2B64", VA = "0x19E2B64")]
		private void ToHandMode()
		{
		}

		[Token(Token = "0x600114E")]
		[Address(RVA = "0x19E2C70", Offset = "0x19E2C70", VA = "0x19E2C70")]
		public BoxingHandSwitcher()
		{
		}
	}
	[Token(Token = "0x200044A")]
	public class CinemachinePathSetter : MonoBehaviour
	{
		[Token(Token = "0x4001724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CinemachinePath cinemachinePath;

		[Token(Token = "0x4001725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool keepParams;

		[Token(Token = "0x6001151")]
		[Address(RVA = "0x19E2CD4", Offset = "0x19E2CD4", VA = "0x19E2CD4")]
		public CinemachinePathSetter()
		{
		}
	}
	[Token(Token = "0x200044B")]
	public class CinemachineSmoothPathSetter : MonoBehaviour
	{
		[Token(Token = "0x4001726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("ContextMenu>SetPathFromChildrenで子オブジェクトの位置にノードを持つパスを生成します")]
		[SerializeField]
		private CinemachineSmoothPath cinemachinePath;

		[Token(Token = "0x6001152")]
		[Address(RVA = "0x19E2CE4", Offset = "0x19E2CE4", VA = "0x19E2CE4")]
		[ContextMenu("SetFromChildren")]
		private void SetPathFromChildren()
		{
		}

		[Token(Token = "0x6001153")]
		[Address(RVA = "0x19E2DEC", Offset = "0x19E2DEC", VA = "0x19E2DEC")]
		public CinemachineSmoothPathSetter()
		{
		}
	}
	[Token(Token = "0x200044C")]
	public class DollyCartAnimationCurve : MonoBehaviour, IAutoSetUp
	{
		[Token(Token = "0x4001727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CinemachineDollyCart _dollyCart;

		[Token(Token = "0x4001728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FitPatternBoxManager _fitPatternBox;

		[Token(Token = "0x4001729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AnimationCurve _beatToPositionCurve;

		[Token(Token = "0x400172A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool deactivateOnFinished;

		[Token(Token = "0x400172B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _time;

		[Token(Token = "0x400172C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _isRunning;

		[Token(Token = "0x6001154")]
		[Address(RVA = "0x19E2DF4", Offset = "0x19E2DF4", VA = "0x19E2DF4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001155")]
		[Address(RVA = "0x19E2F18", Offset = "0x19E2F18", VA = "0x19E2F18")]
		public void StartCart()
		{
		}

		[Token(Token = "0x6001156")]
		[Address(RVA = "0x19E2F54", Offset = "0x19E2F54", VA = "0x19E2F54")]
		public void StopCart()
		{
		}

		[Token(Token = "0x6001157")]
		[Address(RVA = "0x19E2F5C", Offset = "0x19E2F5C", VA = "0x19E2F5C")]
		public void ResetCart()
		{
		}

		[Token(Token = "0x6001158")]
		[Address(RVA = "0x19E2F64", Offset = "0x19E2F64", VA = "0x19E2F64", Slot = "4")]
		public void AutoSetUp()
		{
		}

		[Token(Token = "0x6001159")]
		[Address(RVA = "0x19E3104", Offset = "0x19E3104", VA = "0x19E3104")]
		public DollyCartAnimationCurve()
		{
		}
	}
	[Token(Token = "0x200044D")]
	public class DollyCartBug : MonoBehaviour
	{
		[Token(Token = "0x400172D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private FitPatternBoxManager _fitPatternBox;

		[Token(Token = "0x400172E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private BoxingFrogInputPublisher _inputPublisher;

		[Token(Token = "0x400172F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private BoxingFrogInputKeys _inputKey;

		[Token(Token = "0x4001730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Header("children")]
		[SerializeField]
		private PunchJudge _punchJudge;

		[Token(Token = "0x4001731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private DollyCartAnimationCurve _bugAlive;

		[Token(Token = "0x4001732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private CinemachinePath _pathAlive;

		[Token(Token = "0x4001733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private TargetRing _targetRing;

		[Token(Token = "0x4001734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4001735")]
		private const float STANDARD_X = 0.23f;

		[Token(Token = "0x4001736")]
		private const float STANDARD_Y = 1.45f;

		[Token(Token = "0x4001737")]
		private const float STANDARD_Z = 0.7f;

		[Token(Token = "0x4001738")]
		private const float PATH_HIT_POSITION = 0.5f;

		[Token(Token = "0x600115A")]
		[Address(RVA = "0x19E3144", Offset = "0x19E3144", VA = "0x19E3144")]
		public void StartBug()
		{
		}

		[Token(Token = "0x600115B")]
		[Address(RVA = "0x19E3294", Offset = "0x19E3294", VA = "0x19E3294")]
		public void BugDie()
		{
		}

		[Token(Token = "0x600115C")]
		[Address(RVA = "0x19E0140", Offset = "0x19E0140", VA = "0x19E0140")]
		public void ApplyCalibration(float headRate, float armRate)
		{
		}

		[Token(Token = "0x600115D")]
		[Address(RVA = "0x19E32E4", Offset = "0x19E32E4", VA = "0x19E32E4")]
		public DollyCartBug()
		{
		}
	}
	[Token(Token = "0x200044E")]
	public class PunchJudge : MonoBehaviour
	{
		[Token(Token = "0x4001739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BoxingFrogInputKeys _inputKey;

		[Token(Token = "0x400173A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Inject]
		private InputProvider _inputProvider;

		[Token(Token = "0x400173B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BoxingFrogInputPublisher _inputPublisher;

		[Token(Token = "0x400173C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Collider _collider;

		[Token(Token = "0x400173D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private BoxingGlove _glove;

		[Token(Token = "0x400173E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Action _action;

		[Token(Token = "0x400173F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GameObject _particlePrefab;

		[Token(Token = "0x600115E")]
		[Address(RVA = "0x19E32EC", Offset = "0x19E32EC", VA = "0x19E32EC")]
		private void Start()
		{
		}

		[Token(Token = "0x600115F")]
		[Address(RVA = "0x19E339C", Offset = "0x19E339C", VA = "0x19E339C")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001160")]
		[Address(RVA = "0x19E3620", Offset = "0x19E3620", VA = "0x19E3620")]
		private void Update()
		{
		}

		[Token(Token = "0x6001161")]
		[Address(RVA = "0x19E36B0", Offset = "0x19E36B0", VA = "0x19E36B0")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001162")]
		[Address(RVA = "0x19E3498", Offset = "0x19E3498", VA = "0x19E3498")]
		private void PunchHit(VRHand.HandType handType)
		{
		}

		[Token(Token = "0x6001163")]
		[Address(RVA = "0x19E3798", Offset = "0x19E3798", VA = "0x19E3798")]
		public PunchJudge()
		{
		}
	}
	[Token(Token = "0x200044F")]
	public class TargetRing : MonoBehaviour
	{
		[Token(Token = "0x4001740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FitPatternBoxManager _fitPatternBox;

		[Token(Token = "0x4001741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int _shrinkBeatCount;

		[Token(Token = "0x4001742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _ring;

		[Token(Token = "0x4001743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Tween _tween;

		[Token(Token = "0x6001164")]
		[Address(RVA = "0x19E31CC", Offset = "0x19E31CC", VA = "0x19E31CC")]
		public void StartShrink()
		{
		}

		[Token(Token = "0x6001165")]
		[Address(RVA = "0x19E37A0", Offset = "0x19E37A0", VA = "0x19E37A0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001166")]
		[Address(RVA = "0x19E3854", Offset = "0x19E3854", VA = "0x19E3854")]
		public TargetRing()
		{
		}
	}
}
namespace __Imacreate__.__Production__.GrooveFitGames.GF18_SilverMan
{
	[Token(Token = "0x2000450")]
	public class BusMove : MonoBehaviour
	{
		[Token(Token = "0x4001744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public GameObject _targetPos;

		[Token(Token = "0x4001745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _timeBusMove;

		[Token(Token = "0x4001746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Inject]
		private ISubscriber<OnMusicGame> _onMusicGame;

		[Token(Token = "0x4001747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Tween _tween;

		[Token(Token = "0x6001167")]
		[Address(RVA = "0x19E3864", Offset = "0x19E3864", VA = "0x19E3864")]
		private void Start()
		{
		}

		[Token(Token = "0x6001168")]
		[Address(RVA = "0x19E3990", Offset = "0x19E3990", VA = "0x19E3990")]
		public BusMove()
		{
		}
	}
	[Token(Token = "0x2000451")]
	public class PigeonActionManager : MonoBehaviour
	{
		[Token(Token = "0x4001748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animator _animator;

		[Token(Token = "0x4001749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource _audio;

		[Token(Token = "0x400174A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Header("Notice Voice")]
		[SerializeField]
		private AudioClip _fourNotice;

		[Token(Token = "0x400174B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _eightNotice;

		[Token(Token = "0x400174C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AudioClip _sixteenNotice;

		[Token(Token = "0x400174D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Header("Count Voice")]
		[SerializeField]
		private AudioClip _count1;

		[Token(Token = "0x400174E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private AudioClip _count2;

		[Token(Token = "0x400174F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioClip _count3;

		[Token(Token = "0x4001750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioClip _count4;

		[Token(Token = "0x4001751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private AudioClip _count5;

		[Token(Token = "0x4001752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private AudioClip _count6;

		[Token(Token = "0x4001753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private AudioClip _count7;

		[Token(Token = "0x4001754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private AudioClip _count8;

		[Token(Token = "0x4001755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private AudioClip _followMe;

		[Token(Token = "0x1700017F")]
		[Inject]
		private ISubscriber<FPActionData> OnFPAction
		{
			[Token(Token = "0x600116A")]
			[Address(RVA = "0x19E3AA0", Offset = "0x19E3AA0", VA = "0x19E3AA0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600116B")]
			[Address(RVA = "0x19E3AA8", Offset = "0x19E3AA8", VA = "0x19E3AA8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000180")]
		[Inject]
		private ISubscriber<OnMusicGame> OnMusicGame
		{
			[Token(Token = "0x600116C")]
			[Address(RVA = "0x19E3AB0", Offset = "0x19E3AB0", VA = "0x19E3AB0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600116D")]
			[Address(RVA = "0x19E3AB8", Offset = "0x19E3AB8", VA = "0x19E3AB8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x600116E")]
		[Address(RVA = "0x19E3AC0", Offset = "0x19E3AC0", VA = "0x19E3AC0")]
		private void Start()
		{
		}

		[Token(Token = "0x600116F")]
		[Address(RVA = "0x19E3CD8", Offset = "0x19E3CD8", VA = "0x19E3CD8")]
		private void DoAction(FPActionData value)
		{
		}

		[Token(Token = "0x6001170")]
		[Address(RVA = "0x19E3FC0", Offset = "0x19E3FC0", VA = "0x19E3FC0")]
		private void ChangeAnimationLayer(bool onGame)
		{
		}

		[Token(Token = "0x6001171")]
		[Address(RVA = "0x19E3FF0", Offset = "0x19E3FF0", VA = "0x19E3FF0")]
		public PigeonActionManager()
		{
		}
	}
	[Token(Token = "0x2000452")]
	[RequireComponent(typeof(GrooveFitAudioSource))]
	public class SilverManChargeEffectActivator : MonoBehaviour
	{
		[Token(Token = "0x4001758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SilverManChargeSoundPlayer _soundPlayer;

		[Token(Token = "0x4001759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ParticleSystem _particleEffect;

		[Token(Token = "0x400175C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _playing;

		[Token(Token = "0x17000181")]
		[Inject]
		private ISubscriber<ChargeData> OnChargeData
		{
			[Token(Token = "0x6001174")]
			[Address(RVA = "0x19E4014", Offset = "0x19E4014", VA = "0x19E4014")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001175")]
			[Address(RVA = "0x19E401C", Offset = "0x19E401C", VA = "0x19E401C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000182")]
		[Inject]
		private ISubscriber<OnFitPatternsDelete> OnFPDelete
		{
			[Token(Token = "0x6001176")]
			[Address(RVA = "0x19E4024", Offset = "0x19E4024", VA = "0x19E4024")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001177")]
			[Address(RVA = "0x19E402C", Offset = "0x19E402C", VA = "0x19E402C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001178")]
		[Address(RVA = "0x19E4034", Offset = "0x19E4034", VA = "0x19E4034")]
		private void Start()
		{
		}

		[Token(Token = "0x6001179")]
		[Address(RVA = "0x19E42C8", Offset = "0x19E42C8", VA = "0x19E42C8")]
		private void PlayChargeEffect(ChargeData data)
		{
		}

		[Token(Token = "0x600117A")]
		[Address(RVA = "0x19E439C", Offset = "0x19E439C", VA = "0x19E439C")]
		public SilverManChargeEffectActivator()
		{
		}
	}
	[Token(Token = "0x2000453")]
	public class SilverManFPActionSubscribeEvent : FPActionSubscribeEvent
	{
		[Serializable]
		[Token(Token = "0x2000454")]
		private class SilverManFPActionEvent : FPActionEventBase
		{
			[Token(Token = "0x400175E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[SerializeField]
			private SilverManEventKeys key;

			[Token(Token = "0x600117E")]
			[Address(RVA = "0x19E451C", Offset = "0x19E451C", VA = "0x19E451C", Slot = "4")]
			public override string GetKey()
			{
				return null;
			}

			[Token(Token = "0x600117F")]
			[Address(RVA = "0x19E4584", Offset = "0x19E4584", VA = "0x19E4584")]
			public SilverManFPActionEvent()
			{
			}
		}

		[Token(Token = "0x400175D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<SilverManFPActionEvent> _silverManFPActionEvent;

		[Token(Token = "0x600117C")]
		[Address(RVA = "0x19E4498", Offset = "0x19E4498", VA = "0x19E4498")]
		private void Start()
		{
		}

		[Token(Token = "0x600117D")]
		[Address(RVA = "0x19E4514", Offset = "0x19E4514", VA = "0x19E4514")]
		public SilverManFPActionSubscribeEvent()
		{
		}
	}
	[Token(Token = "0x2000455")]
	public class SilverManFPChargeJudgeAction : FPChargeJudgeAction
	{
		[Token(Token = "0x400175F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private SilverManChargeKeys _chargeKeyEnum;

		[Token(Token = "0x4001760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private SilverManEventKeys _actionKey;

		[Token(Token = "0x4001761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private SilverManInputKeys _inputKeyEnum;

		[Token(Token = "0x6001180")]
		[Address(RVA = "0x19E458C", Offset = "0x19E458C", VA = "0x19E458C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001181")]
		[Address(RVA = "0x19E468C", Offset = "0x19E468C", VA = "0x19E468C")]
		public SilverManFPChargeJudgeAction()
		{
		}
	}
	[Token(Token = "0x2000456")]
	public class SilverManFPNoJudgementAction : FPNoJudgementAction
	{
		[Serializable]
		[Token(Token = "0x2000457")]
		private class SilverManActionParam : ActionParamBase
		{
			[Token(Token = "0x4001763")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			private List<SilverManEventKeys> ActionKeys;

			[Token(Token = "0x6001184")]
			[Address(RVA = "0x19E4734", Offset = "0x19E4734", VA = "0x19E4734", Slot = "4")]
			public override List<string> GetKeyFromActionKeys()
			{
				return null;
			}

			[Token(Token = "0x6001185")]
			[Address(RVA = "0x19E483C", Offset = "0x19E483C", VA = "0x19E483C")]
			public SilverManActionParam()
			{
			}
		}

		[Token(Token = "0x4001762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private List<SilverManActionParam> actions;

		[Token(Token = "0x6001182")]
		[Address(RVA = "0x19E4694", Offset = "0x19E4694", VA = "0x19E4694", Slot = "4")]
		protected override void BeatSubscribeAction(float currentBeat)
		{
		}

		[Token(Token = "0x6001183")]
		[Address(RVA = "0x19E472C", Offset = "0x19E472C", VA = "0x19E472C")]
		public SilverManFPNoJudgementAction()
		{
		}
	}
	[Token(Token = "0x2000459")]
	public class SilverManIntensityMetsCalcurator : IntensityMetsCalculator
	{
		[Token(Token = "0x4001766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Inject]
		private ISubscriber<ChargeData> _subscriber;

		[Token(Token = "0x4001767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Inject]
		private InputProvider _inputProvider;

		[Token(Token = "0x4001768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float _chargeTime;

		[Token(Token = "0x6001189")]
		[Address(RVA = "0x19E4920", Offset = "0x19E4920", VA = "0x19E4920")]
		private void Start()
		{
		}

		[Token(Token = "0x600118A")]
		[Address(RVA = "0x19E4A18", Offset = "0x19E4A18", VA = "0x19E4A18", Slot = "5")]
		public override void ResetValue()
		{
		}

		[Token(Token = "0x600118B")]
		[Address(RVA = "0x19E4A24", Offset = "0x19E4A24", VA = "0x19E4A24")]
		public SilverManIntensityMetsCalcurator()
		{
		}
	}
	[Token(Token = "0x200045A")]
	[RequireComponent(typeof(GrooveFitAudioSource))]
	public class SilverManJudgeSound : MonoBehaviour
	{
		[Token(Token = "0x4001769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioClip _greatSoundFour;

		[Token(Token = "0x400176A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip _greatSoundEight;

		[Token(Token = "0x400176B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip _greatSoundSixteen;

		[Token(Token = "0x400176C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _okSound;

		[Token(Token = "0x400176D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AudioClip _badSound;

		[Token(Token = "0x400176F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private AudioSource _audio;

		[Token(Token = "0x17000183")]
		[Inject]
		private ISubscriber<FPActionData> OnFPAction
		{
			[Token(Token = "0x600118D")]
			[Address(RVA = "0x19E4A68", Offset = "0x19E4A68", VA = "0x19E4A68")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600118E")]
			[Address(RVA = "0x19E4A70", Offset = "0x19E4A70", VA = "0x19E4A70")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x600118F")]
		[Address(RVA = "0x19E4A78", Offset = "0x19E4A78", VA = "0x19E4A78")]
		private void Start()
		{
		}

		[Token(Token = "0x6001190")]
		[Address(RVA = "0x19E4BD8", Offset = "0x19E4BD8", VA = "0x19E4BD8")]
		private void PlaySound(FPActionData value)
		{
		}

		[Token(Token = "0x6001191")]
		[Address(RVA = "0x19E4D10", Offset = "0x19E4D10", VA = "0x19E4D10")]
		public SilverManJudgeSound()
		{
		}
	}
	[Token(Token = "0x200045B")]
	public enum SilverManEventKeys
	{
		[Token(Token = "0x4001771")]
		Voice_FPFourNotice = 0,
		[Token(Token = "0x4001772")]
		Voice_FPEightNotice = 1,
		[Token(Token = "0x4001773")]
		Voice_FPSixteenNotice = 2,
		[Token(Token = "0x4001774")]
		Voice_Count_1 = 3,
		[Token(Token = "0x4001775")]
		Voice_Count_2 = 4,
		[Token(Token = "0x4001776")]
		Voice_Count_3 = 5,
		[Token(Token = "0x4001777")]
		Voice_Count_4 = 6,
		[Token(Token = "0x4001778")]
		Voice_Count_5 = 7,
		[Token(Token = "0x4001779")]
		Voice_Count_6 = 8,
		[Token(Token = "0x400177A")]
		Voice_Count_7 = 9,
		[Token(Token = "0x400177B")]
		Voice_Count_8 = 10,
		[Token(Token = "0x400177C")]
		Voice_Follow_Me = 27,
		[Token(Token = "0x400177D")]
		ChargeSound = 11,
		[Token(Token = "0x400177E")]
		FP0_Pose0 = 12,
		[Token(Token = "0x400177F")]
		FP0_Pose1 = 13,
		[Token(Token = "0x4001780")]
		FP0_Pose2 = 14,
		[Token(Token = "0x4001781")]
		FP1_Pose0 = 15,
		[Token(Token = "0x4001782")]
		FP1_Pose1 = 16,
		[Token(Token = "0x4001783")]
		FP1_Pose2_L = 17,
		[Token(Token = "0x4001784")]
		FP1_Pose2_R = 18,
		[Token(Token = "0x4001785")]
		FP2_Pose0_L = 19,
		[Token(Token = "0x4001786")]
		FP2_Pose0_R = 20,
		[Token(Token = "0x4001787")]
		FP2_Pose1 = 21,
		[Token(Token = "0x4001788")]
		FP2_Pose2 = 22,
		[Token(Token = "0x4001789")]
		FourJudge = 23,
		[Token(Token = "0x400178A")]
		EightJudge = 24,
		[Token(Token = "0x400178B")]
		SixteenJudge = 25,
		[Token(Token = "0x400178C")]
		FP_Pose_Finish = 26
	}
	[Token(Token = "0x200045C")]
	public enum SilverManInputKeys
	{
		[Token(Token = "0x400178E")]
		RightHand,
		[Token(Token = "0x400178F")]
		LeftHand,
		[Token(Token = "0x4001790")]
		InArea,
		[Token(Token = "0x4001791")]
		OutArea
	}
	[Token(Token = "0x200045D")]
	public enum SilverManChargeKeys
	{
		[Token(Token = "0x4001793")]
		RightCharge,
		[Token(Token = "0x4001794")]
		LeftCharge,
		[Token(Token = "0x4001795")]
		Charge
	}
	[Token(Token = "0x200045E")]
	public class SilverManPracticeClearCounter : PracticeClearCounter
	{
		[Token(Token = "0x200045F")]
		private enum PracticeType
		{
			[Token(Token = "0x400179A")]
			Four,
			[Token(Token = "0x400179B")]
			Eight,
			[Token(Token = "0x400179C")]
			Sixteen
		}

		[Token(Token = "0x4001796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PracticeType _practiceType;

		[Token(Token = "0x4001797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private BoolReactiveProperty _clearMessage;

		[Token(Token = "0x17000184")]
		[Inject]
		private ISubscriber<FPActionData> OnFPAction
		{
			[Token(Token = "0x6001193")]
			[Address(RVA = "0x19E4D1C", Offset = "0x19E4D1C", VA = "0x19E4D1C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001194")]
			[Address(RVA = "0x19E4D24", Offset = "0x19E4D24", VA = "0x19E4D24")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000185")]
		public override BoolReactiveProperty ClearMessage
		{
			[Token(Token = "0x6001199")]
			[Address(RVA = "0x19E5108", Offset = "0x19E5108", VA = "0x19E5108", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600119A")]
			[Address(RVA = "0x19E5110", Offset = "0x19E5110", VA = "0x19E5110", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x6001195")]
		[Address(RVA = "0x19E4D2C", Offset = "0x19E4D2C", VA = "0x19E4D2C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001196")]
		[Address(RVA = "0x19E4E98", Offset = "0x19E4E98", VA = "0x19E4E98")]
		private void FourClearCount(FPActionData data)
		{
		}

		[Token(Token = "0x6001197")]
		[Address(RVA = "0x19E4F68", Offset = "0x19E4F68", VA = "0x19E4F68")]
		private void EightClearCount(FPActionData data)
		{
		}

		[Token(Token = "0x6001198")]
		[Address(RVA = "0x19E5038", Offset = "0x19E5038", VA = "0x19E5038")]
		private void SixteenClearCount(FPActionData data)
		{
		}

		[Token(Token = "0x600119B")]
		[Address(RVA = "0x19E5118", Offset = "0x19E5118", VA = "0x19E5118")]
		public SilverManPracticeClearCounter()
		{
		}
	}
	[Token(Token = "0x2000460")]
	public class SpherePositionSet : MonoBehaviour
	{
		[Token(Token = "0x400179D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject InputPublisher;

		[Token(Token = "0x400179E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _areaRight;

		[Token(Token = "0x400179F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject _areaLeft;

		[Token(Token = "0x40017A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private SilverManInputPublisher _script;

		[Token(Token = "0x600119D")]
		[Address(RVA = "0x19E5148", Offset = "0x19E5148", VA = "0x19E5148")]
		private void Start()
		{
		}

		[Token(Token = "0x600119E")]
		[Address(RVA = "0x19E5244", Offset = "0x19E5244", VA = "0x19E5244")]
		public SpherePositionSet()
		{
		}
	}
}
namespace __Imacreate__.__Production__.GrooveFitGames.GF18_SilverMan.PlayerInput
{
	[Token(Token = "0x2000461")]
	public class SilverManHaptics : MonoBehaviour
	{
		[Token(Token = "0x40017A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Inject]
		private InputProvider _inputProvider;

		[Token(Token = "0x17000186")]
		[Inject]
		private ISubscriber<FPActionData> OnFPAction
		{
			[Token(Token = "0x600119F")]
			[Address(RVA = "0x19E524C", Offset = "0x19E524C", VA = "0x19E524C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60011A0")]
			[Address(RVA = "0x19E5254", Offset = "0x19E5254", VA = "0x19E5254")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x60011A1")]
		[Address(RVA = "0x19E525C", Offset = "0x19E525C", VA = "0x19E525C")]
		private void Start()
		{
		}

		[Token(Token = "0x60011A2")]
		[Address(RVA = "0x19E5388", Offset = "0x19E5388", VA = "0x19E5388")]
		public SilverManHaptics()
		{
		}
	}
	[Token(Token = "0x2000462")]
	[RequireComponent(typeof(AudioSource))]
	public class SilverManInputPublisher : InputPublisher
	{
		[NonSerialized]
		[Token(Token = "0x40017A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 _targetAreaRight;

		[NonSerialized]
		[Token(Token = "0x40017A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 _targetAreaLeft;

		[NonSerialized]
		[Token(Token = "0x40017A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 _targetAreaHead;

		[Token(Token = "0x40017A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private bool _checkHeadPos;

		[Token(Token = "0x40017A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float _judgeThresholdOnTracked;

		[Token(Token = "0x40017A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float _judgeThresholdOnNotTracked;

		[Token(Token = "0x40017A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float leftJudgeThreshold;

		[Token(Token = "0x40017AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float rightJudgeThreshold;

		[NonSerialized]
		[Token(Token = "0x40017AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public HeadDirectionType _headDirectionType;

		[Token(Token = "0x40017AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private bool _flagHeadDirection;

		[Token(Token = "0x40017AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private StringReactiveProperty _inputMessage;

		[Token(Token = "0x40017AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Inject]
		private InputProvider _inputProvider;

		[Token(Token = "0x17000187")]
		public override StringReactiveProperty InputMessage
		{
			[Token(Token = "0x60011A7")]
			[Address(RVA = "0x19E5AB0", Offset = "0x19E5AB0", VA = "0x19E5AB0", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011A8")]
			[Address(RVA = "0x19E5AB8", Offset = "0x19E5AB8", VA = "0x19E5AB8", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x60011A4")]
		[Address(RVA = "0x19E5414", Offset = "0x19E5414", VA = "0x19E5414")]
		private void Start()
		{
		}

		[Token(Token = "0x60011A5")]
		[Address(RVA = "0x19E5480", Offset = "0x19E5480", VA = "0x19E5480")]
		private void Update()
		{
		}

		[Token(Token = "0x60011A6")]
		[Address(RVA = "0x19E5750", Offset = "0x19E5750", VA = "0x19E5750")]
		private bool CheckHeadDirection(HeadDirectionType headDirectionType)
		{
			return default(bool);
		}

		[Token(Token = "0x60011A9")]
		[Address(RVA = "0x19E5AC0", Offset = "0x19E5AC0", VA = "0x19E5AC0")]
		public SilverManInputPublisher()
		{
		}
	}
}
namespace __Imacreate__.__Production__.GrooveFitGames.GF18_SilverMan.FitPattern
{
	[Token(Token = "0x2000463")]
	public class PoseData : MonoBehaviour
	{
		[Token(Token = "0x40017AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public SilverManEventKeys _startPoseKey;

		[Token(Token = "0x40017B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		public float _mets;

		[Token(Token = "0x40017B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public SpherePositionCalibrateAxis _rightSpherePositionCalibrateAxis;

		[Token(Token = "0x40017B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public SpherePositionCalibrateAxis _leftSpherePositionCalibrateAxis;

		[Token(Token = "0x40017B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public HeadDirectionType _headAxisDirection;

		[Token(Token = "0x40017B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		public SpherePositionCalibrateAxis _headPositionAxis;

		[Token(Token = "0x40017B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly JudgementData _emptyData;

		[Token(Token = "0x17000188")]
		[Inject]
		private IPublisher<FPActionData> FPActionMessage
		{
			[Token(Token = "0x60011AA")]
			[Address(RVA = "0x19E5AD4", Offset = "0x19E5AD4", VA = "0x19E5AD4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60011AB")]
			[Address(RVA = "0x19E5ADC", Offset = "0x19E5ADC", VA = "0x19E5ADC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x60011AC")]
		[Address(RVA = "0x19E5AE4", Offset = "0x19E5AE4", VA = "0x19E5AE4")]
		public void StartPose()
		{
		}

		[Token(Token = "0x60011AD")]
		[Address(RVA = "0x19E5C48", Offset = "0x19E5C48", VA = "0x19E5C48")]
		public void FinishPose()
		{
		}

		[Token(Token = "0x60011AE")]
		[Address(RVA = "0x19E5DAC", Offset = "0x19E5DAC", VA = "0x19E5DAC")]
		public PoseData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000464")]
	public class SpherePositionCalibrateAxis
	{
		[Token(Token = "0x40017B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool x;

		[Token(Token = "0x40017B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool y;

		[Token(Token = "0x40017B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public bool z;

		[Token(Token = "0x60011AF")]
		[Address(RVA = "0x19E5E28", Offset = "0x19E5E28", VA = "0x19E5E28")]
		public SpherePositionCalibrateAxis()
		{
		}
	}
	[Token(Token = "0x2000465")]
	public enum HeadDirectionType
	{
		[Token(Token = "0x40017BB")]
		forward,
		[Token(Token = "0x40017BC")]
		back,
		[Token(Token = "0x40017BD")]
		right,
		[Token(Token = "0x40017BE")]
		left,
		[Token(Token = "0x40017BF")]
		down
	}
	[Token(Token = "0x2000466")]
	public class PoseImage : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000467")]
		private class PoseComponent
		{
			[Token(Token = "0x40017C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Sprite pose;

			[Token(Token = "0x40017C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool isMirrored;

			[Token(Token = "0x60011B7")]
			[Address(RVA = "0x19E63F0", Offset = "0x19E63F0", VA = "0x19E63F0")]
			public PoseComponent()
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000468")]
		[CompilerGenerated]
		private struct <SetImageBase>d__9 : IAsyncStateMachine
		{
			[Token(Token = "0x40017C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40017C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40017C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool isMirrored;

			[Token(Token = "0x40017C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public PoseImage <>4__this;

			[Token(Token = "0x40017C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x60011B8")]
			[Address(RVA = "0x19E63F8", Offset = "0x19E63F8", VA = "0x19E63F8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60011B9")]
			[Address(RVA = "0x19E6794", Offset = "0x19E6794", VA = "0x19E6794", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x40017C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<PoseComponent> _poseComponents;

		[Token(Token = "0x40017C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Image _image;

		[Token(Token = "0x17000189")]
		[Inject]
		private ISubscriber<FPActionData> OnFPAction
		{
			[Token(Token = "0x60011B0")]
			[Address(RVA = "0x19E5E30", Offset = "0x19E5E30", VA = "0x19E5E30")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60011B1")]
			[Address(RVA = "0x19E5E38", Offset = "0x19E5E38", VA = "0x19E5E38")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x60011B2")]
		[Address(RVA = "0x19E5E40", Offset = "0x19E5E40", VA = "0x19E5E40")]
		private void Start()
		{
		}

		[Token(Token = "0x60011B3")]
		[Address(RVA = "0x19E5F80", Offset = "0x19E5F80", VA = "0x19E5F80")]
		private void ChangeImage(FPActionData data)
		{
		}

		[Token(Token = "0x60011B4")]
		[Address(RVA = "0x19E6320", Offset = "0x19E6320", VA = "0x19E6320")]
		[AsyncStateMachine(typeof(<SetImageBase>d__9))]
		private void SetImageBase(bool isMirrored)
		{
		}

		[Token(Token = "0x60011B5")]
		[Address(RVA = "0x19E63E4", Offset = "0x19E63E4", VA = "0x19E63E4")]
		public PoseImage()
		{
		}
	}
	[Token(Token = "0x2000469")]
	public class PoseTargetInjector : MonoBehaviour
	{
		[Token(Token = "0x40017CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SilverManInputPublisher _inputPublisher;

		[Token(Token = "0x40017CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _centerBox;

		[Token(Token = "0x40017CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _leftSphere;

		[Token(Token = "0x40017CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform _rightSphere;

		[Token(Token = "0x40017CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Transform _headBox;

		[Token(Token = "0x40017CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float _HeadPosAverage;

		[Token(Token = "0x40017D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float _calibrationHeadPos;

		[Token(Token = "0x60011BA")]
		[Address(RVA = "0x19E67A0", Offset = "0x19E67A0", VA = "0x19E67A0")]
		private void Start()
		{
		}

		[Token(Token = "0x60011BB")]
		[Address(RVA = "0x19E6940", Offset = "0x19E6940", VA = "0x19E6940")]
		private void ChangePosition(SpherePositionCalibrateAxis calibrateAxis, Transform hitSphere)
		{
		}

		[Token(Token = "0x60011BC")]
		[Address(RVA = "0x19E69F4", Offset = "0x19E69F4", VA = "0x19E69F4")]
		public PoseTargetInjector()
		{
		}
	}
	[Token(Token = "0x200046A")]
	public class SilvermanPoseActions : MonoBehaviour
	{
		[Token(Token = "0x40017D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly JudgementData _emptyData;

		[Token(Token = "0x1700018A")]
		[Inject]
		private IPublisher<FPActionData> FPActionMessage
		{
			[Token(Token = "0x60011BD")]
			[Address(RVA = "0x19E6A08", Offset = "0x19E6A08", VA = "0x19E6A08")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60011BE")]
			[Address(RVA = "0x19E6A10", Offset = "0x19E6A10", VA = "0x19E6A10")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x60011BF")]
		[Address(RVA = "0x19E6A18", Offset = "0x19E6A18", VA = "0x19E6A18")]
		private void Start()
		{
		}

		[Token(Token = "0x60011C0")]
		[Address(RVA = "0x19E6BB4", Offset = "0x19E6BB4", VA = "0x19E6BB4")]
		public SilvermanPoseActions()
		{
		}
	}
	[Token(Token = "0x200046B")]
	public class SilverManPoseManager : FitPatternBeatSubscriber
	{
		[Token(Token = "0x200046C")]
		private enum Count
		{
			[Token(Token = "0x40017DA")]
			Four,
			[Token(Token = "0x40017DB")]
			Eight,
			[Token(Token = "0x40017DC")]
			Sixteen
		}

		[Token(Token = "0x40017D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Count _count;

		[Token(Token = "0x40017D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<PoseData> _pose;

		[Token(Token = "0x40017D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SilverManInputPublisher _inputPublisher;

		[Token(Token = "0x40017D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int _countTime;

		[Token(Token = "0x40017D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool _finished;

		[Token(Token = "0x40017D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private PoseData _currentPose;

		[Token(Token = "0x60011C1")]
		[Address(RVA = "0x19E6C30", Offset = "0x19E6C30", VA = "0x19E6C30", Slot = "5")]
		protected override void AdditionalSetComponent()
		{
		}

		[Token(Token = "0x60011C2")]
		[Address(RVA = "0x19E6D80", Offset = "0x19E6D80", VA = "0x19E6D80", Slot = "4")]
		protected override void BeatSubscribeAction(float currentBeat)
		{
		}

		[Token(Token = "0x60011C3")]
		[Address(RVA = "0x19E6DD4", Offset = "0x19E6DD4", VA = "0x19E6DD4")]
		public SilverManPoseManager()
		{
		}
	}
}
namespace __Imacreate__.__Production__.GrooveFitGames.GF12_ParaPara
{
	[Token(Token = "0x200046D")]
	public class FinishChargeJudgeAction : JudgeActionBase
	{
		[Token(Token = "0x40017DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _startTiming;

		[Token(Token = "0x40017DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float _endTiming;

		[Token(Token = "0x40017DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private InputPublisher _inputPublisher;

		[Token(Token = "0x40017E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ParaParaChargeKeys _chargeKey;

		[Token(Token = "0x40017E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private ParaParaEventKeys _judgeActionKey;

		[Token(Token = "0x40017E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ParaParaInputKeys _targetInputKey;

		[Token(Token = "0x40017E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ChargeData.ChargeState _state;

		[Token(Token = "0x40017E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float _maxChargeBeat;

		[Token(Token = "0x40017E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float _currentBeat;

		[Token(Token = "0x40017E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private bool _judgeDone;

		[Token(Token = "0x40017E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float _chargeBeat;

		[Token(Token = "0x40017E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float _lastBeat;

		[Token(Token = "0x1700018B")]
		[Inject]
		private IPublisher<ChargeData> ChargeDataMessage
		{
			[Token(Token = "0x60011C4")]
			[Address(RVA = "0x19E6DDC", Offset = "0x19E6DDC", VA = "0x19E6DDC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60011C5")]
			[Address(RVA = "0x19E6DE4", Offset = "0x19E6DE4", VA = "0x19E6DE4")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x60011C6")]
		[Address(RVA = "0x19E6DEC", Offset = "0x19E6DEC", VA = "0x19E6DEC", Slot = "5")]
		protected override void AdditionalSetComponent()
		{
		}

		[Token(Token = "0x60011C7")]
		[Address(RVA = "0x19E6F7C", Offset = "0x19E6F7C", VA = "0x19E6F7C", Slot = "4")]
		protected override void BeatSubscribeAction(float currentBeat)
		{
		}

		[Token(Token = "0x60011C8")]
		[Address(RVA = "0x19E75AC", Offset = "0x19E75AC", VA = "0x19E75AC")]
		private void Charge(string value)
		{
		}

		[Token(Token = "0x60011C9")]
		[Address(RVA = "0x19E6F80", Offset = "0x19E6F80", VA = "0x19E6F80")]
		private void Judge(float currentBeat)
		{
		}

		[Token(Token = "0x60011CA")]
		[Address(RVA = "0x19E7794", Offset = "0x19E7794", VA = "0x19E7794")]
		public FinishChargeJudgeAction()
		{
		}
	}
	[Token(Token = "0x200046E")]
	public class HabatakiAreaJudge : MonoBehaviour
	{
		[Token(Token = "0x40017EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Hand Setting")]
		[SerializeField]
		private VRHand.HandType _handType;

		[Token(Token = "0x40017EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Header("Input Setting")]
		[SerializeField]
		private ParaParaInputKeys _inputKey;

		[Token(Token = "0x40017EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ParaParaInputPublisher _inputPublisher;

		[Token(Token = "0x40017ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float _habatakiDistance;

		[Token(Token = "0x40017EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Inject]
		private InputProvider _inputProvider;

		[Token(Token = "0x40017EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _isOneTimeVibe;

		[Token(Token = "0x60011CC")]
		[Address(RVA = "0x19E77A0", Offset = "0x19E77A0", VA = "0x19E77A0")]
		private void Update()
		{
		}

		[Token(Token = "0x60011CD")]
		[Address(RVA = "0x19E7980", Offset = "0x19E7980", VA = "0x19E7980")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60011CE")]
		[Address(RVA = "0x19E7988", Offset = "0x19E7988", VA = "0x19E7988")]
		public HabatakiAreaJudge()
		{
		}
	}
	[Token(Token = "0x200046F")]
	public class HabatakiInputJudgeAction : JudgeActionBase
	{
		[Token(Token = "0x40017F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("Settings")]
		[SerializeField]
		private ParaParaInputPublisher _inputPublisher;

		[Token(Token = "0x40017F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Inject]
		private InputProvider _inputProvider;

		[Token(Token = "0x40017F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Inject]
		private DiContainer _container;

		[Token(Token = "0x40017F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _currentBeat;

		[Token(Token = "0x40017F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float _endTimingRightStartMove;

		[Token(Token = "0x40017F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float _endTimingLeftStartMove;

		[Token(Token = "0x40017F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool _isJudgeDoneRight;

		[Token(Token = "0x40017F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		private bool _isJudgeDoneLeft;

		[Token(Token = "0x40017F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GameObject[] _rightStartRightAreas;

		[Token(Token = "0x40017F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject[] _rightStartLeftAreas;

		[Token(Token = "0x40017FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject[] _rightStartRightPullAreas;

		[Token(Token = "0x40017FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject[] _rightStartLeftPullAreas;

		[Token(Token = "0x40017FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject[] _leftStartRightAreas;

		[Token(Token = "0x40017FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject[] _leftStartLeftAreas;

		[Token(Token = "0x40017FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject[] _leftStartRightPullAreas;

		[Token(Token = "0x40017FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject[] _leftStartLeftPullAreas;

		[Token(Token = "0x4001800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int _habatakiRightStartCnt;

		[Token(Token = "0x4001801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private int _habatakiLeftStartCnt;

		[Token(Token = "0x4001802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool _isRightStartRightOK;

		[Token(Token = "0x4001803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		private bool _isRightStartLeftOK;

		[Token(Token = "0x4001804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x92")]
		private bool _isLeftStartRightOK;

		[Token(Token = "0x4001805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x93")]
		private bool _isLeftStartLeftOK;

		[Token(Token = "0x4001807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private GameObject _habatakiEffectPrefab;

		[Token(Token = "0x1700018C")]
		[Inject]
		private ISubscriber<FPActionData> OnFPAction
		{
			[Token(Token = "0x60011CF")]
			[Address(RVA = "0x19E799C", Offset = "0x19E799C", VA = "0x19E799C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60011D0")]
			[Address(RVA = "0x19E79A4", Offset = "0x19E79A4", VA = "0x19E79A4")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x60011D1")]
		[Address(RVA = "0x19E79AC", Offset = "0x19E79AC", VA = "0x19E79AC", Slot = "5")]
		protected override void AdditionalSetComponent()
		{
		}

		[Token(Token = "0x60011D2")]
		[Address(RVA = "0x19E7BCC", Offset = "0x19E7BCC", VA = "0x19E7BCC", Slot = "4")]
		protected override void BeatSubscribeAction(float currentBeat)
		{
		}

		[Token(Token = "0x60011D3")]
		[Address(RVA = "0x19E880C", Offset = "0x19E880C", VA = "0x19E880C")]
		private void Judge(string value)
		{
		}

		[Token(Token = "0x60011D4")]
		[Address(RVA = "0x19E8784", Offset = "0x19E8784", VA = "0x19E8784")]
		private void RightStartInitializeObjs()
		{
		}

		[Token(Token = "0x60011D5")]
		[Address(RVA = "0x19E87C8", Offset = "0x19E87C8", VA = "0x19E87C8")]
		private void LeftStartInitializeObjs()
		{
		}

		[Token(Token = "0x60011D6")]
		[Address(RVA = "0x19E94D8", Offset = "0x19E94D8", VA = "0x19E94D8")]
		private void SetActiveHabatakiEreas(bool active, GameObject[] objects)
		{
		}

		[Token(Token = "0x60011D7")]
		[Address(RVA = "0x19E9540", Offset = "0x19E9540", VA = "0x19E9540")]
		public HabatakiInputJudgeAction()
		{
		}
	}
	[Token(Token = "0x2000470")]
	public class LeopardAnimationController : MonoBehaviour
	{
		[Token(Token = "0x4001808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animator _animator;

		[Token(Token = "0x400180E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool _isNagashiStand;

		[Token(Token = "0x400180F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool _isHabatakiStand;

		[Token(Token = "0x4001810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		private bool _isTonTonStand;

		[Token(Token = "0x4001811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
		private bool _isFinishStand;

		[Token(Token = "0x4001812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float _changeAnimationTime;

		[Token(Token = "0x4001813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Tweener _changeAnim;

		[Token(Token = "0x4001814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool _isNotParaParaMove;

		[Token(Token = "0x1700018D")]
		[Inject]
		private ISubscriber<FPActionData> OnFPAction
		{
			[Token(Token = "0x60011DA")]
			[Address(RVA = "0x19E963C", Offset = "0x19E963C", VA = "0x19E963C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60011DB")]
			[Address(RVA = "0x19E9644", Offset = "0x19E9644", VA = "0x19E9644")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700018E")]
		[Inject]
		private ISubscriber<BPMData> OnBPMData
		{
			[Token(Token = "0x60011DC")]
			[Address(RVA = "0x19E964C", Offset = "0x19E964C", VA = "0x19E964C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60011DD")]
			[Address(RVA = "0x19E9654", Offset = "0x19E9654", VA = "0x19E9654")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700018F")]
		[Inject]
		private ISubscriber<GameStatus> GameStatusChanger
		{
			[Token(Token = "0x60011DE")]
			[Address(RVA = "0x19E965C", Offset = "0x19E965C", VA = "0x19E965C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60011DF")]
			[Address(RVA = "0x19E9664", Offset = "0x19E9664", VA = "0x19E9664")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000190")]
		[Inject]
		private ISubscriber<OnMusicGame> OnMusicGame
		{
			[Token(Token = "0x60011E0")]
			[Address(RVA = "0x19E966C", Offset = "0x19E966C", VA = "0x19E966C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60011E1")]
			[Address(RVA = "0x19E9674", Offset = "0x19E9674", VA = "0x19E9674")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000191")]
		[Inject]
		private ISubscriber<CharacterActionData> OnCharacterAction
		{
			[Token(Token = "0x60011E2")]
			[Address(RVA = "0x19E967C", Offset = "0x19E967C", VA = "0x19E967C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60011E3")]
			[Address(RVA = "0x19E9684", Offset = "0x19E9684", VA = "0x19E9684")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x60011E4")]
		[Address(RVA = "0x19E968C", Offset = "0x19E968C", VA = "0x19E968C")]
		private void Start()
		{
		}

		[Token(Token = "0x60011E5")]
		[Address(RVA = "0x19E9D10", Offset = "0x19E9D10", VA = "0x19E9D10")]
		private void JudgeAnimation(FPActionData value)
		{
		}

		[Token(Token = "0x60011E6")]
		[Address(RVA = "0x19EA33C", Offset = "0x19EA33C", VA = "0x19EA33C")]
		public void StartFakeAnimation()
		{
		}

		[Token(Token = "0x60011E7")]
		[Address(RVA = "0x19EA3FC", Offset = "0x19EA3FC", VA = "0x19EA3FC")]
		private void DoCharacterAction(CharacterActionData data)
		{
		}

		[Token(Token = "0x60011E8")]
		[Address(RVA = "0x19EA9D8", Offset = "0x19EA9D8", VA = "0x19EA9D8")]
		public LeopardAnimationController()
		{
		}
	}
	[Token(Token = "0x2000473")]
	public class NagashiChargeJudgeAction : JudgeActionBase
	{
		[Token(Token = "0x400181C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _startTiming;

		[Token(Token = "0x400181D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float _endTiming;

		[Token(Token = "0x400181E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private InputPublisher _inputPublisher;

		[Token(Token = "0x400181F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ParaParaChargeKeys _chargeKey;

		[Token(Token = "0x4001820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private ParaParaEventKeys _judgeActionKey;

		[Token(Token = "0x4001821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ParaParaInputKeys _targetInputKey;

		[Token(Token = "0x4001823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ChargeData.ChargeState _state;

		[Token(Token = "0x4001824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float _maxChargeBeat;

		[Token(Token = "0x4001825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float _currentBeat;

		[Token(Token = "0x4001826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private bool _judgeDone;

		[Token(Token = "0x4001827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float _chargeBeat;

		[Token(Token = "0x4001828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float _lastBeat;

		[Token(Token = "0x17000192")]
		[Inject]
		private IPublisher<ChargeData> ChargeDataMessage
		{
			[Token(Token = "0x60011FF")]
			[Address(RVA = "0x19EB370", Offset = "0x19EB370", VA = "0x19EB370")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001200")]
			[Address(RVA = "0x19EB378", Offset = "0x19EB378", VA = "0x19EB378")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001201")]
		[Address(RVA = "0x19EB380", Offset = "0x19EB380", VA = "0x19EB380", Slot = "5")]
		protected override void AdditionalSetComponent()
		{
		}

		[Token(Token = "0x6001202")]
		[Address(RVA = "0x19EB510", Offset = "0x19EB510", VA = "0x19EB510", Slot = "4")]
		protected override void BeatSubscribeAction(float currentBeat)
		{
		}

		[Token(Token = "0x6001203")]
		[Address(RVA = "0x19EBB40", Offset = "0x19EBB40", VA = "0x19EBB40")]
		private void Charge(string value)
		{
		}

		[Token(Token = "0x6001204")]
		[Address(RVA = "0x19EB514", Offset = "0x19EB514", VA = "0x19EB514")]
		private void Judge(float currentBeat)
		{
		}

		[Token(Token = "0x6001205")]
		[Address(RVA = "0x19EBD28", Offset = "0x19EBD28", VA = "0x19EBD28")]
		public NagashiChargeJudgeAction()
		{
		}
	}
	[Token(Token = "0x2000474")]
	[RequireComponent(typeof(GrooveFitAudioSource))]
	public class ParaParaChargeSound : MonoBehaviour
	{
		[Token(Token = "0x4001829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioClip _nagashiChargeSound;

		[Token(Token = "0x400182A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip _finishChargeSound;

		[Token(Token = "0x400182B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AudioSource _audio;

		[Token(Token = "0x400182D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _playAudio;

		[Token(Token = "0x400182E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool _pauseAudio;

		[Token(Token = "0x17000193")]
		[Inject]
		private ISubscriber<ChargeData> OnChargeData
		{
			[Token(Token = "0x6001207")]
			[Address(RVA = "0x19EBD34", Offset = "0x19EBD34", VA = "0x19EBD34")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001208")]
			[Address(RVA = "0x19EBD3C", Offset = "0x19EBD3C", VA = "0x19EBD3C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001209")]
		[Address(RVA = "0x19EBD44", Offset = "0x19EBD44", VA = "0x19EBD44")]
		private void Start()
		{
		}

		[Token(Token = "0x600120A")]
		[Address(RVA = "0x19EBEA4", Offset = "0x19EBEA4", VA = "0x19EBEA4")]
		private void PlayChargeSound(ChargeData data)
		{
		}

		[Token(Token = "0x600120B")]
		[Address(RVA = "0x19EC0E0", Offset = "0x19EC0E0", VA = "0x19EC0E0")]
		public ParaParaChargeSound()
		{
		}
	}
	[Token(Token = "0x2000475")]
	public class ParaParaFPActionSubscribeEvent : FPActionSubscribeEvent
	{
		[Serializable]
		[Token(Token = "0x2000476")]
		private class ParaParaFPActionEvent : FPActionEventBase
		{
			[Token(Token = "0x4001830")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[SerializeField]
			private ParaParaEventKeys Key;

			[Token(Token = "0x600120E")]
			[Address(RVA = "0x19EC16C", Offset = "0x19EC16C", VA = "0x19EC16C", Slot = "4")]
			public override string GetKey()
			{
				return null;
			}

			[Token(Token = "0x600120F")]
			[Address(RVA = "0x19EC1D4", Offset = "0x19EC1D4", VA = "0x19EC1D4")]
			public ParaParaFPActionEvent()
			{
			}
		}

		[Token(Token = "0x400182F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<ParaParaFPActionEvent> _paraParaFPActionEvent;

		[Token(Token = "0x600120C")]
		[Address(RVA = "0x19EC0E8", Offset = "0x19EC0E8", VA = "0x19EC0E8")]
		private void Start()
		{
		}

		[Token(Token = "0x600120D")]
		[Address(RVA = "0x19EC164", Offset = "0x19EC164", VA = "0x19EC164")]
		public ParaParaFPActionSubscribeEvent()
		{
		}
	}
	[Token(Token = "0x2000477")]
	public class ParaParaFPNoJudgementAction : FPNoJudgementAction
	{
		[Token(Token = "0x4001831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private List<ParaParaActionParam> actions;

		[Token(Token = "0x6001210")]
		[Address(RVA = "0x19EC1DC", Offset = "0x19EC1DC", VA = "0x19EC1DC", Slot = "4")]
		protected override void BeatSubscribeAction(float currentBeat)
		{
		}

		[Token(Token = "0x6001211")]
		[Address(RVA = "0x19EC274", Offset = "0x19EC274", VA = "0x19EC274")]
		public ParaParaFPNoJudgementAction()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000478")]
	public class ParaParaActionParam : ActionParamBase
	{
		[Token(Token = "0x4001832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<ParaParaEventKeys> ActionKeys;

		[Token(Token = "0x6001212")]
		[Address(RVA = "0x19EC27C", Offset = "0x19EC27C", VA = "0x19EC27C", Slot = "4")]
		public override List<string> GetKeyFromActionKeys()
		{
			return null;
		}

		[Token(Token = "0x6001213")]
		[Address(RVA = "0x19EC384", Offset = "0x19EC384", VA = "0x19EC384")]
		public ParaParaActionParam()
		{
		}
	}
	[Token(Token = "0x200047A")]
	public class ParaParaHaptics : MonoBehaviour
	{
		[Token(Token = "0x4001835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Inject]
		private InputProvider _inputProvider;

		[Token(Token = "0x17000194")]
		[Inject]
		private ISubscriber<FPActionData> OnFPAction
		{
			[Token(Token = "0x6001217")]
			[Address(RVA = "0x19EC468", Offset = "0x19EC468", VA = "0x19EC468")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001218")]
			[Address(RVA = "0x19EC470", Offset = "0x19EC470", VA = "0x19EC470")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001219")]
		[Address(RVA = "0x19EC478", Offset = "0x19EC478", VA = "0x19EC478")]
		private void Start()
		{
		}

		[Token(Token = "0x600121A")]
		[Address(RVA = "0x19EC5A4", Offset = "0x19EC5A4", VA = "0x19EC5A4")]
		private void PlayHaptics(FPActionData data)
		{
		}

		[Token(Token = "0x600121B")]
		[Address(RVA = "0x19EC6CC", Offset = "0x19EC6CC", VA = "0x19EC6CC")]
		public ParaParaHaptics()
		{
		}
	}
	[Token(Token = "0x200047B")]
	public class ParaParaInputPublisher : InputPublisher
	{
		[Token(Token = "0x4001837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private StringReactiveProperty _inputMessage;

		[Token(Token = "0x4001838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Inject]
		private InputProvider _inputProvider;

		[Token(Token = "0x4001839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Header("Nagashi")]
		[SerializeField]
		private GameObject _nagashiRightErea;

		[Token(Token = "0x400183A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject _nagashiLeftErea;

		[Token(Token = "0x400183B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float _nagashiDistance;

		[Token(Token = "0x400183C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Header("TonTon")]
		[SerializeField]
		private GameObject _tonTonRightErea;

		[Token(Token = "0x400183D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GameObject _tonTonLeftErea;

		[Token(Token = "0x400183E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private float _tonTonSpeed;

		[Token(Token = "0x400183F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private float _tonTonJudgeErea;

		[Token(Token = "0x4001840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Header("Finish")]
		[SerializeField]
		private GameObject _finishRightErea;

		[Token(Token = "0x4001841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _finishLeftErea;

		[Token(Token = "0x4001842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float _finishDistance;

		[Token(Token = "0x4001843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 _posRightHandOld;

		[Token(Token = "0x4001844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 _posRightHandNew;

		[Token(Token = "0x4001845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Vector3 _posLeftHandOld;

		[Token(Token = "0x4001846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3 _posLeftHandNew;

		[Token(Token = "0x4001847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Vector3 _rightHandVelocity;

		[Token(Token = "0x4001848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector3 _leftHandVelocity;

		[Token(Token = "0x17000195")]
		public override StringReactiveProperty InputMessage
		{
			[Token(Token = "0x6001222")]
			[Address(RVA = "0x19ECF98", Offset = "0x19ECF98", VA = "0x19ECF98", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001223")]
			[Address(RVA = "0x19ECFA0", Offset = "0x19ECFA0", VA = "0x19ECFA0", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x600121D")]
		[Address(RVA = "0x19EC6D8", Offset = "0x19EC6D8", VA = "0x19EC6D8")]
		private void Start()
		{
		}

		[Token(Token = "0x600121E")]
		[Address(RVA = "0x19EC744", Offset = "0x19EC744", VA = "0x19EC744")]
		private void Update()
		{
		}

		[Token(Token = "0x600121F")]
		[Address(RVA = "0x19ECE90", Offset = "0x19ECE90", VA = "0x19ECE90")]
		private bool TonTonRightEreaJudge()
		{
			return default(bool);
		}

		[Token(Token = "0x6001220")]
		[Address(RVA = "0x19ECF14", Offset = "0x19ECF14", VA = "0x19ECF14")]
		private bool TonTonLeftEreaJudge()
		{
			return default(bool);
		}

		[Token(Token = "0x6001221")]
		[Address(RVA = "0x19E78D0", Offset = "0x19E78D0", VA = "0x19E78D0")]
		public void SetHabatakiFrag(ParaParaInputKeys inputKey)
		{
		}

		[Token(Token = "0x6001224")]
		[Address(RVA = "0x19ECFA8", Offset = "0x19ECFA8", VA = "0x19ECFA8")]
		public ParaParaInputPublisher()
		{
		}
	}
	[Token(Token = "0x200047C")]
	public class ParaParaIntensityMetsCalculator : IntensityMetsCalculator
	{
		[Token(Token = "0x4001849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Inject]
		private InputProvider _inputProvider;

		[Token(Token = "0x400184A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[ReadOnly]
		[Header("ReadOnly Display")]
		[SerializeField]
		private float _moveValue;

		[Token(Token = "0x400184B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		[ReadOnly]
		private float _time;

		[Token(Token = "0x400184C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3[] prePositions;

		[Token(Token = "0x6001225")]
		[Address(RVA = "0x19ECFD4", Offset = "0x19ECFD4", VA = "0x19ECFD4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001226")]
		[Address(RVA = "0x19ECFE0", Offset = "0x19ECFE0", VA = "0x19ECFE0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001227")]
		[Address(RVA = "0x19ECFE4", Offset = "0x19ECFE4", VA = "0x19ECFE4")]
		private void OnUpdate()
		{
		}

		[Token(Token = "0x6001228")]
		[Address(RVA = "0x19ED1EC", Offset = "0x19ED1EC", VA = "0x19ED1EC", Slot = "5")]
		public override void ResetValue()
		{
		}

		[Token(Token = "0x6001229")]
		[Address(RVA = "0x19ED254", Offset = "0x19ED254", VA = "0x19ED254", Slot = "4")]
		public override float GetValue()
		{
			return default(float);
		}

		[Token(Token = "0x600122A")]
		[Address(RVA = "0x19ED278", Offset = "0x19ED278", VA = "0x19ED278")]
		public ParaParaIntensityMetsCalculator()
		{
		}
	}
	[Token(Token = "0x200047D")]
	public class ParaParaJudgeAreaController : MonoBehaviour
	{
		[Token(Token = "0x200047E")]
		private enum SideType
		{
			[Token(Token = "0x4001866")]
			Right,
			[Token(Token = "0x4001867")]
			Left
		}

		[Token(Token = "0x400184D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Inject]
		private InputProvider _inputProvider;

		[Token(Token = "0x400184E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("Nagashi")]
		[SerializeField]
		private Transform _nagashiRightPivot;

		[Token(Token = "0x400184F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject _nagashiRightArea;

		[Token(Token = "0x4001850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform _nagashiLeftPivot;

		[Token(Token = "0x4001851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject _nagashiLeftArea;

		[Token(Token = "0x4001852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Header("Habataki")]
		[SerializeField]
		private GameObject[] _rightStartRightAreas;

		[Token(Token = "0x4001853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GameObject[] _rightStartLeftAreas;

		[Token(Token = "0x4001854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject[] _rightStartRightPullAreas;

		[Token(Token = "0x4001855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject[] _rightStartLeftPullAreas;

		[Token(Token = "0x4001856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject[] _leftStartRightAreas;

		[Token(Token = "0x4001857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject[] _leftStartLeftAreas;

		[Token(Token = "0x4001858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject[] _leftStartRightPullAreas;

		[Token(Token = "0x4001859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject[] _leftStartLeftPullAreas;

		[Token(Token = "0x400185A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[Header("TonTon")]
		[SerializeField]
		private GameObject _tonTonRightArea;

		[Token(Token = "0x400185B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private GameObject _tonTonLeftArea;

		[Token(Token = "0x400185C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[Header("Finish")]
		[SerializeField]
		private GameObject _finishArea;

		[Token(Token = "0x400185D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Transform _finishRightPivot;

		[Token(Token = "0x400185E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private GameObject _finishRightArea;

		[Token(Token = "0x400185F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private Transform _finishLeftPivot;

		[Token(Token = "0x4001860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private GameObject _finishLeftArea;

		[Token(Token = "0x4001864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float _secondPerBeat;

		[Token(Token = "0x17000196")]
		[Inject]
		private ISubscriber<FPActionData> OnFPAction
		{
			[Token(Token = "0x600122B")]
			[Address(RVA = "0x19ED280", Offset = "0x19ED280", VA = "0x19ED280")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600122C")]
			[Address(RVA = "0x19ED288", Offset = "0x19ED288", VA = "0x19ED288")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000197")]
		[Inject]
		private ISubscriber<BPMData> OnBpmChange
		{
			[Token(Token = "0x600122D")]
			[Address(RVA = "0x19ED290", Offset = "0x19ED290", VA = "0x19ED290")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600122E")]
			[Address(RVA = "0x19ED298", Offset = "0x19ED298", VA = "0x19ED298")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000198")]
		[Inject]
		private ISubscriber<GameStatus> GameStatusChanger
		{
			[Token(Token = "0x600122F")]
			[Address(RVA = "0x19ED2A0", Offset = "0x19ED2A0", VA = "0x19ED2A0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001230")]
			[Address(RVA = "0x19ED2A8", Offset = "0x19ED2A8", VA = "0x19ED2A8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001231")]
		[Address(RVA = "0x19ED2B0", Offset = "0x19ED2B0", VA = "0x19ED2B0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001232")]
		[Address(RVA = "0x19ED3DC", Offset = "0x19ED3DC", VA = "0x19ED3DC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001233")]
		[Address(RVA = "0x19ED428", Offset = "0x19ED428", VA = "0x19ED428")]
		private void Start()
		{
		}

		[Token(Token = "0x6001234")]
		[Address(RVA = "0x19ED730", Offset = "0x19ED730", VA = "0x19ED730")]
		private void SetBPM(BPMData data)
		{
		}

		[Token(Token = "0x6001235")]
		[Address(RVA = "0x19ED74C", Offset = "0x19ED74C", VA = "0x19ED74C")]
		private void SetActiveNagashiErea(bool active, SideType type)
		{
		}

		[Token(Token = "0x6001236")]
		[Address(RVA = "0x19ED788", Offset = "0x19ED788", VA = "0x19ED788")]
		private void SetActiveHabatakiEreas(bool active, GameObject[] objects)
		{
		}

		[Token(Token = "0x6001237")]
		[Address(RVA = "0x19ED7F0", Offset = "0x19ED7F0", VA = "0x19ED7F0")]
		private void SetActiveTonTonErea(bool active, SideType type)
		{
		}

		[Token(Token = "0x6001238")]
		[Address(RVA = "0x19ED82C", Offset = "0x19ED82C", VA = "0x19ED82C")]
		private void SetActiveFinishErea(bool active, SideType type)
		{
		}

		[Token(Token = "0x6001239")]
		[Address(RVA = "0x19ED648", Offset = "0x19ED648", VA = "0x19ED648")]
		private void EreaReset()
		{
		}

		[Token(Token = "0x600123A")]
		[Address(RVA = "0x19ED868", Offset = "0x19ED868", VA = "0x19ED868")]
		public ParaParaJudgeAreaController()
		{
		}
	}
	[Token(Token = "0x200047F")]
	[RequireComponent(typeof(GrooveFitAudioSource))]
	public class ParaParaJudgeSound : MonoBehaviour
	{
		[Token(Token = "0x4001868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("General Sound")]
		[SerializeField]
		private AudioClip _greatSound;

		[Token(Token = "0x4001869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip _okSound;

		[Token(Token = "0x400186A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip _badSound;

		[Token(Token = "0x400186B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Header("Habataki")]
		[SerializeField]
		private AudioClip _habatakiPartsGreat;

		[Token(Token = "0x400186C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Header("TonTon")]
		[SerializeField]
		private AudioClip _tonTonGreat;

		[Token(Token = "0x400186E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private AudioSource _audio;

		[Token(Token = "0x17000199")]
		[Inject]
		private ISubscriber<FPActionData> OnFPAction
		{
			[Token(Token = "0x600123D")]
			[Address(RVA = "0x19EDDC8", Offset = "0x19EDDC8", VA = "0x19EDDC8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600123E")]
			[Address(RVA = "0x19EDDD0", Offset = "0x19EDDD0", VA = "0x19EDDD0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x600123F")]
		[Address(RVA = "0x19EDDD8", Offset = "0x19EDDD8", VA = "0x19EDDD8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001240")]
		[Address(RVA = "0x19EDF38", Offset = "0x19EDF38", VA = "0x19EDF38")]
		private void PlaySound(FPActionData value)
		{
		}

		[Token(Token = "0x6001241")]
		[Address(RVA = "0x19EE220", Offset = "0x19EE220", VA = "0x19EE220")]
		public ParaParaJudgeSound()
		{
		}
	}
	[Token(Token = "0x2000480")]
	public enum ParaParaEventKeys
	{
		[Token(Token = "0x4001870")]
		NagashiSignal,
		[Token(Token = "0x4001871")]
		NagashiRightStandby,
		[Token(Token = "0x4001872")]
		NagashiRightStart,
		[Token(Token = "0x4001873")]
		NagashiRightJudge,
		[Token(Token = "0x4001874")]
		NagashiLeftStandby,
		[Token(Token = "0x4001875")]
		NagashiLeftStart,
		[Token(Token = "0x4001876")]
		NagashiLeftJudge,
		[Token(Token = "0x4001877")]
		HabatakiSignal,
		[Token(Token = "0x4001878")]
		HabatakiStandby,
		[Token(Token = "0x4001879")]
		HabatakiRight,
		[Token(Token = "0x400187A")]
		HabatakiRightJudge,
		[Token(Token = "0x400187B")]
		HabatakiLeft,
		[Token(Token = "0x400187C")]
		HabatakiLeftJudge,
		[Token(Token = "0x400187D")]
		HabatakiRightPull,
		[Token(Token = "0x400187E")]
		HabatakiRightPullJudge,
		[Token(Token = "0x400187F")]
		HabatakiLeftPull,
		[Token(Token = "0x4001880")]
		HabatakiLeftPullJudge,
		[Token(Token = "0x4001881")]
		TonTonSignal,
		[Token(Token = "0x4001882")]
		TonTonStandby,
		[Token(Token = "0x4001883")]
		TonTonRightStart,
		[Token(Token = "0x4001884")]
		TonTonRightJudge,
		[Token(Token = "0x4001885")]
		TonTonLeftStart,
		[Token(Token = "0x4001886")]
		TonTonLeftJudge,
		[Token(Token = "0x4001887")]
		TonTonAnimationStart,
		[Token(Token = "0x4001888")]
		FinishSignal,
		[Token(Token = "0x4001889")]
		FinishStandby,
		[Token(Token = "0x400188A")]
		FinishStart,
		[Token(Token = "0x400188B")]
		FinishJudge,
		[Token(Token = "0x400188C")]
		TonTonJudge,
		[Token(Token = "0x400188D")]
		TonTonAssistSignal,
		[Token(Token = "0x400188E")]
		HabatakiJudge,
		[Token(Token = "0x400188F")]
		HabatakiRightStart,
		[Token(Token = "0x4001890")]
		HabatakiLeftStart,
		[Token(Token = "0x4001891")]
		HabatakiAssistSignal,
		[Token(Token = "0x4001892")]
		HabatakiJudgeLast,
		[Token(Token = "0x4001893")]
		FinishAnimationStart,
		[Token(Token = "0x4001894")]
		HabatakiAnimationStart
	}
	[Token(Token = "0x2000481")]
	public enum ParaParaInputKeys
	{
		[Token(Token = "0x4001896")]
		NagashiRight,
		[Token(Token = "0x4001897")]
		NagashiLeft,
		[Token(Token = "0x4001898")]
		NagashiOutArea,
		[Token(Token = "0x4001899")]
		HabatakiRightStartRightR,
		[Token(Token = "0x400189A")]
		HabatakiRightStartRightL,
		[Token(Token = "0x400189B")]
		HabatakiRightStartLeftR,
		[Token(Token = "0x400189C")]
		HabatakiRightStartLeftL,
		[Token(Token = "0x400189D")]
		HabatakiRightStartRightPullL,
		[Token(Token = "0x400189E")]
		HabatakiRightStartLeftPullR,
		[Token(Token = "0x400189F")]
		TonTonRight,
		[Token(Token = "0x40018A0")]
		TonTonLeft,
		[Token(Token = "0x40018A1")]
		FinishRHand,
		[Token(Token = "0x40018A2")]
		FinishLHand,
		[Token(Token = "0x40018A3")]
		FinishInArea,
		[Token(Token = "0x40018A4")]
		FinishOutArea,
		[Token(Token = "0x40018A5")]
		HabatakiLeftStartRightR,
		[Token(Token = "0x40018A6")]
		HabatakiLeftStartRightL,
		[Token(Token = "0x40018A7")]
		HabatakiLeftStartLeftR,
		[Token(Token = "0x40018A8")]
		HabatakiLeftStartLeftL,
		[Token(Token = "0x40018A9")]
		HabatakiLeftStartRightPullL,
		[Token(Token = "0x40018AA")]
		HabatakiLeftStartLeftPullR
	}
	[Token(Token = "0x2000482")]
	public enum ParaParaChargeKeys
	{
		[Token(Token = "0x40018AC")]
		NagashiRight,
		[Token(Token = "0x40018AD")]
		NagashiLeft,
		[Token(Token = "0x40018AE")]
		FinishInArea
	}
	[Token(Token = "0x2000483")]
	public class ParaParaPracticeClearCounter : PracticeClearCounter
	{
		[Token(Token = "0x2000484")]
		private enum PracticeType
		{
			[Token(Token = "0x40018B7")]
			Nagashi,
			[Token(Token = "0x40018B8")]
			Habataki,
			[Token(Token = "0x40018B9")]
			TonTon,
			[Token(Token = "0x40018BA")]
			Finish
		}

		[Token(Token = "0x40018AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private BoolReactiveProperty _clearMessage;

		[Token(Token = "0x40018B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private PracticeType _practiceType;

		[Token(Token = "0x40018B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _nagashiJudge;

		[Token(Token = "0x40018B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool _habatakiJudge;

		[Token(Token = "0x40018B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		private bool _tonTonJudge;

		[Token(Token = "0x40018B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int _tonTonCount;

		[Token(Token = "0x1700019A")]
		[Inject]
		private ISubscriber<FPActionData> OnFPAction
		{
			[Token(Token = "0x6001243")]
			[Address(RVA = "0x19EE22C", Offset = "0x19EE22C", VA = "0x19EE22C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001244")]
			[Address(RVA = "0x19EE234", Offset = "0x19EE234", VA = "0x19EE234")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700019B")]
		public override BoolReactiveProperty ClearMessage
		{
			[Token(Token = "0x600124A")]
			[Address(RVA = "0x19EE804", Offset = "0x19EE804", VA = "0x19EE804", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600124B")]
			[Address(RVA = "0x19EE80C", Offset = "0x19EE80C", VA = "0x19EE80C", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x6001245")]
		[Address(RVA = "0x19EE23C", Offset = "0x19EE23C", VA = "0x19EE23C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001246")]
		[Address(RVA = "0x19EE3A8", Offset = "0x19EE3A8", VA = "0x19EE3A8")]
		private void NagashiClearCount(FPActionData data)
		{
		}

		[Token(Token = "0x6001247")]
		[Address(RVA = "0x19EE500", Offset = "0x19EE500", VA = "0x19EE500")]
		private void HabatakiClearCount(FPActionData data)
		{
		}

		[Token(Token = "0x6001248")]
		[Address(RVA = "0x19EE65C", Offset = "0x19EE65C", VA = "0x19EE65C")]
		private void TonTonClearCount(FPActionData data)
		{
		}

		[Token(Token = "0x6001249")]
		[Address(RVA = "0x19EE730", Offset = "0x19EE730", VA = "0x19EE730")]
		private void FinishClearCount(FPActionData data)
		{
		}

		[Token(Token = "0x600124C")]
		[Address(RVA = "0x19EE814", Offset = "0x19EE814", VA = "0x19EE814")]
		public ParaParaPracticeClearCounter()
		{
		}
	}
	[Token(Token = "0x2000485")]
	[RequireComponent(typeof(GrooveFitAudioSource))]
	public class ParaParaSignalSound : MonoBehaviour
	{
		[Token(Token = "0x40018BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioClip _nagashiSignal;

		[Token(Token = "0x40018BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip _habatakiSignal;

		[Token(Token = "0x40018BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip _habatakiAssistSignal;

		[Token(Token = "0x40018BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _tonTonSignal;

		[Token(Token = "0x40018BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AudioClip _tonTonAssistSignal;

		[Token(Token = "0x40018C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private AudioClip _finishSignal;

		[Token(Token = "0x40018C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private AudioSource _audio;

		[Token(Token = "0x1700019C")]
		[Inject]
		private ISubscriber<FPActionData> OnFPAction
		{
			[Token(Token = "0x600124E")]
			[Address(RVA = "0x19EE864", Offset = "0x19EE864", VA = "0x19EE864")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600124F")]
			[Address(RVA = "0x19EE86C", Offset = "0x19EE86C", VA = "0x19EE86C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001250")]
		[Address(RVA = "0x19EE874", Offset = "0x19EE874", VA = "0x19EE874")]
		private void Start()
		{
		}

		[Token(Token = "0x6001251")]
		[Address(RVA = "0x19EE9D4", Offset = "0x19EE9D4", VA = "0x19EE9D4")]
		private void PlaySound(FPActionData data)
		{
		}

		[Token(Token = "0x6001252")]
		[Address(RVA = "0x19EEBD8", Offset = "0x19EEBD8", VA = "0x19EEBD8")]
		public ParaParaSignalSound()
		{
		}
	}
	[Token(Token = "0x2000486")]
	public class TonTonInputJudgeAction : JudgeActionBase
	{
		[Token(Token = "0x40018C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("General Setting")]
		[SerializeField]
		private InputPublisher _inputPublisher;

		[Token(Token = "0x40018C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Inject]
		private InputProvider _inputProvider;

		[Token(Token = "0x40018C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Inject]
		private DiContainer _container;

		[Token(Token = "0x40018C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _currentBeat;

		[Token(Token = "0x40018C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float _leftStartTiming;

		[Token(Token = "0x40018C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float _leftEndTiming;

		[Token(Token = "0x40018C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float _rightStartTiming;

		[Token(Token = "0x40018CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float _rightEndTiming;

		[Token(Token = "0x40018CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool _isJudgeDone;

		[Token(Token = "0x40018CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _leftTonTonCnt;

		[Token(Token = "0x40018CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int _rightTonTonCnt;

		[Token(Token = "0x40018CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _tontonEffectPrefab;

		[Token(Token = "0x6001253")]
		[Address(RVA = "0x19EEBE0", Offset = "0x19EEBE0", VA = "0x19EEBE0", Slot = "5")]
		protected override void AdditionalSetComponent()
		{
		}

		[Token(Token = "0x6001254")]
		[Address(RVA = "0x19EED2C", Offset = "0x19EED2C", VA = "0x19EED2C", Slot = "4")]
		protected override void BeatSubscribeAction(float currentBeat)
		{
		}

		[Token(Token = "0x6001255")]
		[Address(RVA = "0x19EF34C", Offset = "0x19EF34C", VA = "0x19EF34C")]
		private void Judge(string value)
		{
		}

		[Token(Token = "0x6001256")]
		[Address(RVA = "0x19EF580", Offset = "0x19EF580", VA = "0x19EF580")]
		public TonTonInputJudgeAction()
		{
		}
	}
}
namespace __Imacreate__.__Production__.GrooveFitGames.GF11_Rugby
{
	[Token(Token = "0x2000487")]
	public class ArmCalibrationDataApplyBase : MonoBehaviour
	{
		[Token(Token = "0x40018CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject[] _widthWideLeftObjects;

		[Token(Token = "0x40018D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject[] _widthWideRightObjects;

		[Token(Token = "0x40018D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject[] _widthNarrowLeftObjects;

		[Token(Token = "0x40018D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject[] _widthNarrowRightObjects;

		[Token(Token = "0x40018D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject[] _widthSizeObjects;

		[Token(Token = "0x40018D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float _amplifier;

		[Token(Token = "0x40018D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private readonly float _armWidthBase;

		[Token(Token = "0x1700019D")]
		public float ArmCalibrationValue
		{
			[Token(Token = "0x6001258")]
			[Address(RVA = "0x19EF598", Offset = "0x19EF598", VA = "0x19EF598")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001259")]
			[Address(RVA = "0x19EF5A0", Offset = "0x19EF5A0", VA = "0x19EF5A0")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x600125A")]
		[Address(RVA = "0x19EF5A8", Offset = "0x19EF5A8", VA = "0x19EF5A8")]
		private void Awake()
		{
		}

		[Token(Token = "0x600125B")]
		[Address(RVA = "0x19EFA40", Offset = "0x19EFA40", VA = "0x19EFA40")]
		public ArmCalibrationDataApplyBase()
		{
		}
	}
	[Token(Token = "0x2000488")]
	public class CatchAreaUpdater : MonoBehaviour
	{
		[Token(Token = "0x40018D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Inject]
		private InputProvider _inputProvider;

		[Token(Token = "0x40018D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly List<Vector3> _velocitylist;

		[Token(Token = "0x40018DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 _posNew;

		[Token(Token = "0x40018DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 _velocity;

		[Token(Token = "0x40018DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 _posOld;

		[Token(Token = "0x1700019E")]
		public Vector3 velocity
		{
			[Token(Token = "0x600125C")]
			[Address(RVA = "0x19EFA54", Offset = "0x19EFA54", VA = "0x19EFA54")]
			[CompilerGenerated]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600125D")]
			[Address(RVA = "0x19EFA60", Offset = "0x19EFA60", VA = "0x19EFA60")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700019F")]
		public Vector3 pos
		{
			[Token(Token = "0x600125E")]
			[Address(RVA = "0x19EFA6C", Offset = "0x19EFA6C", VA = "0x19EFA6C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x600125F")]
		[Address(RVA = "0x19EFA8C", Offset = "0x19EFA8C", VA = "0x19EFA8C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001260")]
		[Address(RVA = "0x19EFB20", Offset = "0x19EFB20", VA = "0x19EFB20")]
		private void Update()
		{
		}

		[Token(Token = "0x6001261")]
		[Address(RVA = "0x19EFBD8", Offset = "0x19EFBD8", VA = "0x19EFBD8")]
		private void CalculateVelocity()
		{
		}

		[Token(Token = "0x6001262")]
		[Address(RVA = "0x19EFDCC", Offset = "0x19EFDCC", VA = "0x19EFDCC")]
		public CatchAreaUpdater()
		{
		}
	}
	[Token(Token = "0x2000489")]
	public class FennecCatchArea : MonoBehaviour
	{
		[Token(Token = "0x40018DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform rightHand;

		[Token(Token = "0x40018DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform leftHand;

		[Token(Token = "0x6001263")]
		[Address(RVA = "0x19EFE94", Offset = "0x19EFE94", VA = "0x19EFE94")]
		private void Start()
		{
		}

		[Token(Token = "0x6001264")]
		[Address(RVA = "0x19EFF24", Offset = "0x19EFF24", VA = "0x19EFF24")]
		private void Update()
		{
		}

		[Token(Token = "0x6001265")]
		[Address(RVA = "0x19EFFB4", Offset = "0x19EFFB4", VA = "0x19EFFB4")]
		public FennecCatchArea()
		{
		}
	}
	[Token(Token = "0x200048A")]
	public class FPAutoThresholdInputJudgeActionBase : FitPatternBeatSubscriber
	{
		[Token(Token = "0x40018E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public FPJudgeBase FpJudgeBase;

		[Token(Token = "0x40018E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal List<JudgeComponent> _judgeComponents;

		[Token(Token = "0x40018E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int currentJudgeIndex;

		[Token(Token = "0x40018E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private bool isFPEnd;

		[Token(Token = "0x170001A0")]
		[Inject]
		private IPublisher<(FPActionData, string)> FPActionMessage
		{
			[Token(Token = "0x6001266")]
			[Address(RVA = "0x19EFFBC", Offset = "0x19EFFBC", VA = "0x19EFFBC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001267")]
			[Address(RVA = "0x19EFFC4", Offset = "0x19EFFC4", VA = "0x19EFFC4")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170001A1")]
		[Inject]
		private ISubscriber<bool> FPIsEndMessage
		{
			[Token(Token = "0x6001268")]
			[Address(RVA = "0x19EFFCC", Offset = "0x19EFFCC", VA = "0x19EFFCC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001269")]
			[Address(RVA = "0x19EFFD4", Offset = "0x19EFFD4", VA = "0x19EFFD4")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x600126A")]
		[Address(RVA = "0x19EFFDC", Offset = "0x19EFFDC", VA = "0x19EFFDC")]
		private void Start()
		{
		}

		[Token(Token = "0x600126B")]
		[Address(RVA = "0x19F0108", Offset = "0x19F0108", VA = "0x19F0108", Slot = "4")]
		protected override void BeatSubscribeAction(float currentBeat)
		{
		}

		[Token(Token = "0x600126C")]
		[Address(RVA = "0x19F05AC", Offset = "0x19F05AC", VA = "0x19F05AC")]
		public FPAutoThresholdInputJudgeActionBase()
		{
		}
	}
	[Token(Token = "0x200048B")]
	public abstract class FPJudgeBase : MonoBehaviour
	{
		[Token(Token = "0x600126E")]
		public abstract JudgementData Judge();

		[Token(Token = "0x600126F")]
		[Address(RVA = "0x19F05C0", Offset = "0x19F05C0", VA = "0x19F05C0")]
		protected FPJudgeBase()
		{
		}
	}
	[Token(Token = "0x200048C")]
	public class GnuManager : MonoBehaviour
	{
		[Token(Token = "0x40018E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _voice_Woo;

		[Token(Token = "0x40018E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AudioClip _opponentSlip;

		[Token(Token = "0x40018EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private AudioClip _gnu_footstep_0;

		[Token(Token = "0x40018EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private AudioClip _gnu_footstep_1;

		[Token(Token = "0x40018EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Animator gneAnimator;

		[Token(Token = "0x40018ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private AudioSource _audio;

		[Token(Token = "0x40018EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private AudioSource footSteps;

		[Token(Token = "0x40018EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private AudioSource slipSound;

		[Token(Token = "0x40018F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int OpponentTackle;

		[Token(Token = "0x40018F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private IDisposable _disposable;

		[Token(Token = "0x40018F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float lastBeat;

		[Token(Token = "0x40018F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private bool footstepSwitch;

		[Token(Token = "0x40018F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Sequence sequence;

		[Token(Token = "0x40018F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Transform tackleStartPos;

		[Token(Token = "0x40018F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Transform tackleEndPos;

		[Token(Token = "0x40018F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float secondPerBeat;

		[Token(Token = "0x40018F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[SerializeField]
		private float _animationTimeBPM;

		[Token(Token = "0x40018F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private bool isCenter;

		[Token(Token = "0x40018FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int OpponentResetPos;

		[Token(Token = "0x40018FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly int StartRunning;

		[Token(Token = "0x40018FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static readonly int StopRunning;

		[Token(Token = "0x170001A2")]
		[Inject]
		private ISubscriber<(FPActionData, string)> OnFPAction
		{
			[Token(Token = "0x6001270")]
			[Address(RVA = "0x19F05C8", Offset = "0x19F05C8", VA = "0x19F05C8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001271")]
			[Address(RVA = "0x19F05D0", Offset = "0x19F05D0", VA = "0x19F05D0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170001A3")]
		[Inject]
		private ISubscriber<BeatData> OnBeat
		{
			[Token(Token = "0x6001272")]
			[Address(RVA = "0x19F05D8", Offset = "0x19F05D8", VA = "0x19F05D8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001273")]
			[Address(RVA = "0x19F05E0", Offset = "0x19F05E0", VA = "0x19F05E0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170001A4")]
		[Inject]
		private ISubscriber<BPMData> BPMDataMessageSubscriber
		{
			[Token(Token = "0x6001274")]
			[Address(RVA = "0x19F05E8", Offset = "0x19F05E8", VA = "0x19F05E8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001275")]
			[Address(RVA = "0x19F05F0", Offset = "0x19F05F0", VA = "0x19F05F0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001276")]
		[Address(RVA = "0x19F05F8", Offset = "0x19F05F8", VA = "0x19F05F8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001277")]
		[Address(RVA = "0x19F0844", Offset = "0x19F0844", VA = "0x19F0844")]
		private void DoAction(FPActionData value)
		{
		}

		[Token(Token = "0x6001278")]
		[Address(RVA = "0x19F0FFC", Offset = "0x19F0FFC", VA = "0x19F0FFC")]
		private void StopBeat()
		{
		}

		[Token(Token = "0x6001279")]
		[Address(RVA = "0x19F0EF4", Offset = "0x19F0EF4", VA = "0x19F0EF4")]
		private void LookForward()
		{
		}

		[Token(Token = "0x600127A")]
		[Address(RVA = "0x19F0FCC", Offset = "0x19F0FCC", VA = "0x19F0FCC")]
		private void LookBackward()
		{
		}

		[Token(Token = "0x600127B")]
		[Address(RVA = "0x19F0F20", Offset = "0x19F0F20", VA = "0x19F0F20")]
		private void ResetAllTriggers()
		{
		}

		[Token(Token = "0x600127C")]
		[Address(RVA = "0x19F10A4", Offset = "0x19F10A4", VA = "0x19F10A4")]
		public GnuManager()
		{
		}
	}
	[Token(Token = "0x200048D")]
	public abstract class InputThresholdPublisher : MonoBehaviour
	{
		[Token(Token = "0x170001A5")]
		public abstract ReactiveProperty<(string, float)> InputMessageWithThreshold
		{
			[Token(Token = "0x6001283")]
			get;
			[Token(Token = "0x6001284")]
			set;
		}

		[Token(Token = "0x6001285")]
		[Address(RVA = "0x19F12E0", Offset = "0x19F12E0", VA = "0x19F12E0")]
		protected InputThresholdPublisher()
		{
		}
	}
	[Token(Token = "0x200048E")]
	public class PubSubDebugger : MonoBehaviour
	{
		[Token(Token = "0x170001A6")]
		[Inject]
		private ISubscriber<(FPActionData, string)> OnFPAction
		{
			[Token(Token = "0x6001286")]
			[Address(RVA = "0x19F12E8", Offset = "0x19F12E8", VA = "0x19F12E8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001287")]
			[Address(RVA = "0x19F12F0", Offset = "0x19F12F0", VA = "0x19F12F0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001288")]
		[Address(RVA = "0x19F12F8", Offset = "0x19F12F8", VA = "0x19F12F8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001289")]
		[Address(RVA = "0x19F1484", Offset = "0x19F1484", VA = "0x19F1484")]
		public PubSubDebugger()
		{
		}
	}
	[Token(Token = "0x2000490")]
	public class RugbyBallHolding : MonoBehaviour
	{
		[Token(Token = "0x4001900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private FitPatternBoxManager _fitPatternBox;

		[Token(Token = "0x4001901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _moveObject;

		[Token(Token = "0x4001902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform holdingPoint;

		[Token(Token = "0x4001903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float _animationTime;

		[Token(Token = "0x4001904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float _animationTimeBPM;

		[Token(Token = "0x4001905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool _isMoveStart;

		[Token(Token = "0x4001906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool _isUseBPM;

		[Token(Token = "0x4001907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _time;

		[Token(Token = "0x4001908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float _secondPerBeat;

		[Token(Token = "0x600128D")]
		[Address(RVA = "0x19F1508", Offset = "0x19F1508", VA = "0x19F1508")]
		private void Start()
		{
		}

		[Token(Token = "0x600128E")]
		[Address(RVA = "0x19F1528", Offset = "0x19F1528", VA = "0x19F1528")]
		private void Update()
		{
		}

		[Token(Token = "0x600128F")]
		[Address(RVA = "0x19F1578", Offset = "0x19F1578", VA = "0x19F1578")]
		private void MoveObject(float animationTime)
		{
		}

		[Token(Token = "0x6001290")]
		[Address(RVA = "0x19F164C", Offset = "0x19F164C", VA = "0x19F164C")]
		public void Activate()
		{
		}

		[Token(Token = "0x6001291")]
		[Address(RVA = "0x19F1688", Offset = "0x19F1688", VA = "0x19F1688")]
		public void Deactivate()
		{
		}

		[Token(Token = "0x6001292")]
		[Address(RVA = "0x19F16BC", Offset = "0x19F16BC", VA = "0x19F16BC")]
		public RugbyBallHolding()
		{
		}
	}
	[Token(Token = "0x2000491")]
	public class RugbyBallState : MonoBehaviour
	{
		[Token(Token = "0x4001909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RugbyInputState inputKey;

		[Token(Token = "0x6001293")]
		[Address(RVA = "0x19F16D4", Offset = "0x19F16D4", VA = "0x19F16D4")]
		public RugbyBallState()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000492")]
	public class RugbyInputState
	{
		[Token(Token = "0x400190A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RugbyInputKeys catchInputKey;

		[Token(Token = "0x400190B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public RugbyInputKeys passInputKey;

		[Token(Token = "0x6001294")]
		[Address(RVA = "0x19F1754", Offset = "0x19F1754", VA = "0x19F1754")]
		public RugbyInputState()
		{
		}
	}
	[Token(Token = "0x2000493")]
	public class RugbyCarGenerator : MonoBehaviour
	{
		[Token(Token = "0x400190C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Inject]
		private DiContainer container;

		[Token(Token = "0x400190D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Vector3 startPos;

		[Token(Token = "0x400190E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private Vector3 preEndPos;

		[Token(Token = "0x400190F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Vector3 endPos;

		[Token(Token = "0x4001910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private Vector3 directionRot;

		[Token(Token = "0x4001911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private float threshold;

		[Token(Token = "0x4001912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private List<GameObject> carObjs;

		[Token(Token = "0x4001913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform player;

		[Token(Token = "0x6001295")]
		[Address(RVA = "0x19F175C", Offset = "0x19F175C", VA = "0x19F175C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001296")]
		[Address(RVA = "0x19F188C", Offset = "0x19F188C", VA = "0x19F188C")]
		public RugbyCarGenerator()
		{
		}
	}
	[Token(Token = "0x2000494")]
	public class RugbyCarMover : MonoBehaviour
	{
		[Token(Token = "0x4001914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 preEndPos;

		[Token(Token = "0x4001915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 endPos;

		[Token(Token = "0x4001916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 directionRot;

		[Token(Token = "0x4001917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float interval;

		[Token(Token = "0x4001918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private int setsNum;

		[Token(Token = "0x6001298")]
		[Address(RVA = "0x19F1A64", Offset = "0x19F1A64", VA = "0x19F1A64")]
		private void Start()
		{
		}

		[Token(Token = "0x6001299")]
		[Address(RVA = "0x19F1CF0", Offset = "0x19F1CF0", VA = "0x19F1CF0")]
		public RugbyCarMover()
		{
		}
	}
	[Token(Token = "0x2000495")]
	public class RugbyDodgeEffect : MonoBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x2000496")]
		[CompilerGenerated]
		private struct <DoDodgeEffect>d__6 : IAsyncStateMachine
		{
			[Token(Token = "0x400191B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400191C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x400191D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public (FPActionData, string) value;

			[Token(Token = "0x400191E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public RugbyDodgeEffect <>4__this;

			[Token(Token = "0x400191F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x60012A1")]
			[Address(RVA = "0x19F1F84", Offset = "0x19F1F84", VA = "0x19F1F84", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60012A2")]
			[Address(RVA = "0x19F23F8", Offset = "0x19F23F8", VA = "0x19F23F8", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Inject]
		private InputProvider _inputProvider;

		[Token(Token = "0x170001A7")]
		[Inject]
		private ISubscriber<(FPActionData, string)> OnFPAction
		{
			[Token(Token = "0x600129B")]
			[Address(RVA = "0x19F1D64", Offset = "0x19F1D64", VA = "0x19F1D64")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600129C")]
			[Address(RVA = "0x19F1D6C", Offset = "0x19F1D6C", VA = "0x19F1D6C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x600129D")]
		[Address(RVA = "0x19F1D74", Offset = "0x19F1D74", VA = "0x19F1D74")]
		private void Start()
		{
		}

		[Token(Token = "0x600129E")]
		[Address(RVA = "0x19F1EA0", Offset = "0x19F1EA0", VA = "0x19F1EA0")]
		[AsyncStateMachine(typeof(<DoDodgeEffect>d__6))]
		private void DoDodgeEffect((FPActionData, string) value)
		{
		}

		[Token(Token = "0x600129F")]
		[Address(RVA = "0x19F1F78", Offset = "0x19F1F78", VA = "0x19F1F78")]
		public RugbyDodgeEffect()
		{
		}
	}
	[Token(Token = "0x2000497")]
	public class RugbyFPActionSubscribeEvent : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000498")]
		private class RugbyFPActionEvent : FPActionEventBase
		{
			[Token(Token = "0x4001922")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[SerializeField]
			private RugbyEventKeys Key;

			[Token(Token = "0x4001923")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			private RugbyFitPatternState State;

			[Token(Token = "0x60012A8")]
			[Address(RVA = "0x19F25A8", Offset = "0x19F25A8", VA = "0x19F25A8", Slot = "4")]
			public override string GetKey()
			{
				return null;
			}

			[Token(Token = "0x60012A9")]
			[Address(RVA = "0x19F2610", Offset = "0x19F2610", VA = "0x19F2610")]
			public string GetState()
			{
				return null;
			}

			[Token(Token = "0x60012AA")]
			[Address(RVA = "0x19F2678", Offset = "0x19F2678", VA = "0x19F2678")]
			public RugbyFPActionEvent()
			{
			}
		}

		[Token(Token = "0x4001920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<RugbyFPActionEvent> rugbyFpActionEvents;

		[Token(Token = "0x170001A8")]
		[Inject]
		private ISubscriber<(FPActionData, string)> OnFPAction
		{
			[Token(Token = "0x60012A3")]
			[Address(RVA = "0x19F2404", Offset = "0x19F2404", VA = "0x19F2404")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60012A4")]
			[Address(RVA = "0x19F240C", Offset = "0x19F240C", VA = "0x19F240C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x60012A5")]
		[Address(RVA = "0x19F2414", Offset = "0x19F2414", VA = "0x19F2414")]
		private void Start()
		{
		}

		[Token(Token = "0x60012A6")]
		[Address(RVA = "0x19F241C", Offset = "0x19F241C", VA = "0x19F241C")]
		private void StartSubscribeEvent(List<RugbyFPActionEvent> _fpActionEvents)
		{
		}

		[Token(Token = "0x60012A7")]
		[Address(RVA = "0x19F25A0", Offset = "0x19F25A0", VA = "0x19F25A0")]
		public RugbyFPActionSubscribeEvent()
		{
		}
	}
	[Token(Token = "0x200049A")]
	public class RugbyFpAutoThresholdInputJudgeAction : FPAutoThresholdInputJudgeActionBase
	{
		[Token(Token = "0x4001926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private List<RugbyJudgeComponent> rugbyJudgeComponents;

		[Token(Token = "0x60012AD")]
		[Address(RVA = "0x19F2AD8", Offset = "0x19F2AD8", VA = "0x19F2AD8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60012AE")]
		[Address(RVA = "0x19F2BCC", Offset = "0x19F2BCC", VA = "0x19F2BCC")]
		private static JudgeComponent ConvertToJudgeComponent(RugbyJudgeComponent x)
		{
			return null;
		}

		[Token(Token = "0x60012AF")]
		[Address(RVA = "0x19F2EAC", Offset = "0x19F2EAC", VA = "0x19F2EAC")]
		public RugbyFpAutoThresholdInputJudgeAction()
		{
		}
	}
	[Token(Token = "0x200049B")]
	public class RugbyFPDodgeJudge : FPJudgeBase
	{
		[Token(Token = "0x4001927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Inject]
		private InputProvider _inputProvider;

		[Token(Token = "0x4001928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform opponent;

		[Token(Token = "0x4001929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ArmCalibrationDataApplyBase CalibrationData;

		[Token(Token = "0x400192A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float _threshold;

		[Token(Token = "0x60012B0")]
		[Address(RVA = "0x19F2EB4", Offset = "0x19F2EB4", VA = "0x19F2EB4")]
		private void Start()
		{
		}

		[Token(Token = "0x60012B1")]
		[Address(RVA = "0x19F2EDC", Offset = "0x19F2EDC", VA = "0x19F2EDC", Slot = "4")]
		public override JudgementData Judge()
		{
			return null;
		}

		[Token(Token = "0x60012B2")]
		[Address(RVA = "0x19F3034", Offset = "0x19F3034", VA = "0x19F3034")]
		public RugbyFPDodgeJudge()
		{
		}
	}
	[Token(Token = "0x200049C")]
	public class RugbyFPNoJudgementAction : FPNoJudgementAction
	{
		[Serializable]
		[Token(Token = "0x200049D")]
		private class ActionParam : ActionParamBase
		{
			[Token(Token = "0x4001931")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<RugbyEvent> RugbyEvent;

			[Token(Token = "0x60012BD")]
			[Address(RVA = "0x19F3C44", Offset = "0x19F3C44", VA = "0x19F3C44", Slot = "4")]
			public override List<string> GetKeyFromActionKeys()
			{
				return null;
			}

			[Token(Token = "0x60012BE")]
			[Address(RVA = "0x19F3E2C", Offset = "0x19F3E2C", VA = "0x19F3E2C")]
			public ActionParam()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200049F")]
		private class RugbyEvent
		{
			[Token(Token = "0x4001935")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RugbyEventKeys actionKey;

			[Token(Token = "0x4001936")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public RugbyFitPatternState state;

			[Token(Token = "0x60012C3")]
			[Address(RVA = "0x19F3F28", Offset = "0x19F3F28", VA = "0x19F3F28")]
			public RugbyEvent()
			{
			}
		}

		[Token(Token = "0x400192B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private List<ActionParam> actions;

		[Token(Token = "0x400192C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private RugbyFitPatternState currentFitPatternState;

		[Token(Token = "0x4001930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private RugbyFitPatternState _firstFitPatternState;

		[Token(Token = "0x170001A9")]
		[Inject]
		private IPublisher<(FPActionData, string)> RugbyFPActionMessage
		{
			[Token(Token = "0x60012B3")]
			[Address(RVA = "0x19F3044", Offset = "0x19F3044", VA = "0x19F3044")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60012B4")]
			[Address(RVA = "0x19F304C", Offset = "0x19F304C", VA = "0x19F304C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170001AA")]
		[Inject]
		private IPublisher<bool> FPIsEndMessage
		{
			[Token(Token = "0x60012B5")]
			[Address(RVA = "0x19F3054", Offset = "0x19F3054", VA = "0x19F3054")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60012B6")]
			[Address(RVA = "0x19F305C", Offset = "0x19F305C", VA = "0x19F305C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170001AB")]
		[Inject]
		private ISubscriber<(FPActionData, string)> OnRugbyFPAction
		{
			[Token(Token = "0x60012B7")]
			[Address(RVA = "0x19F3064", Offset = "0x19F3064", VA = "0x19F3064")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60012B8")]
			[Address(RVA = "0x19F306C", Offset = "0x19F306C", VA = "0x19F306C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x60012B9")]
		[Address(RVA = "0x19F3074", Offset = "0x19F3074", VA = "0x19F3074")]
		private void Start()
		{
		}

		[Token(Token = "0x60012BA")]
		[Address(RVA = "0x19F31C4", Offset = "0x19F31C4", VA = "0x19F31C4", Slot = "4")]
		protected override void BeatSubscribeAction(float currentBeat)
		{
		}

		[Token(Token = "0x60012BB")]
		[Address(RVA = "0x19F390C", Offset = "0x19F390C", VA = "0x19F390C")]
		public RugbyFPNoJudgementAction()
		{
		}
	}
	[Token(Token = "0x20004A1")]
	public class RugbyFpThresholdInputJudgeActionBase : FitPatternBeatSubscriber
	{
		[Token(Token = "0x4001938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private InputThresholdPublisher _inputPublisher;

		[Token(Token = "0x4001939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _errorValueAmplifier;

		[Token(Token = "0x400193C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _currentBeat;

		[Token(Token = "0x400193D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal List<JudgeComponent> _judgeComponents;

		[Token(Token = "0x400193E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int currentJudgeIndex;

		[Token(Token = "0x400193F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool isFPEnd;

		[Token(Token = "0x170001AC")]
		[Inject]
		private IPublisher<(FPActionData, string)> FPActionMessage
		{
			[Token(Token = "0x60012C6")]
			[Address(RVA = "0x19F3FB4", Offset = "0x19F3FB4", VA = "0x19F3FB4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60012C7")]
			[Address(RVA = "0x19F3FBC", Offset = "0x19F3FBC", VA = "0x19F3FBC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170001AD")]
		[Inject]
		private ISubscriber<bool> FPIsEndMessage
		{
			[Token(Token = "0x60012C8")]
			[Address(RVA = "0x19F3FC4", Offset = "0x19F3FC4", VA = "0x19F3FC4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60012C9")]
			[Address(RVA = "0x19F3FCC", Offset = "0x19F3FCC", VA = "0x19F3FCC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x60012CA")]
		[Address(RVA = "0x19F3FD4", Offset = "0x19F3FD4", VA = "0x19F3FD4")]
		private void Start()
		{
		}

		[Token(Token = "0x60012CB")]
		[Address(RVA = "0x19F4100", Offset = "0x19F4100", VA = "0x19F4100", Slot = "4")]
		protected override void BeatSubscribeAction(float currentBeat)
		{
		}

		[Token(Token = "0x60012CC")]
		[Address(RVA = "0x19F45A4", Offset = "0x19F45A4", VA = "0x19F45A4", Slot = "5")]
		protected override void AdditionalSetComponent()
		{
		}

		[Token(Token = "0x60012CD")]
		[Address(RVA = "0x19F46F0", Offset = "0x19F46F0", VA = "0x19F46F0", Slot = "6")]
		protected virtual void Judge(string value, JudgeComponent judgeComponent, float threshold = float.PositiveInfinity)
		{
		}

		[Token(Token = "0x60012CE")]
		[Address(RVA = "0x19F4D70", Offset = "0x19F4D70", VA = "0x19F4D70")]
		public RugbyFpThresholdInputJudgeActionBase()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004A2")]
	public class JudgeRange
	{
		[Token(Token = "0x4001940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float min;

		[Token(Token = "0x4001941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float max;

		[Token(Token = "0x60012D1")]
		[Address(RVA = "0x19F4E58", Offset = "0x19F4E58", VA = "0x19F4E58")]
		public JudgeRange()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004A3")]
	public class JudgeComponent
	{
		[Token(Token = "0x4001942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string _actionKey;

		[Token(Token = "0x4001943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string _targetInputKey;

		[Token(Token = "0x4001944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string _onGreatBranchState;

		[Token(Token = "0x4001945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string _onOKBranchState;

		[Token(Token = "0x4001946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string _onBadBranchState;

		[Token(Token = "0x4001947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string _onTimeOutBranchState;

		[Token(Token = "0x4001948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float _timing;

		[Token(Token = "0x4001949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public JudgeRange _judgeRange;

		[Token(Token = "0x400194A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool _isJudgeDone;

		[Token(Token = "0x400194B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float judgeAnotherThreshold;

		[Token(Token = "0x400194C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool isInverse;

		[Token(Token = "0x60012D2")]
		[Address(RVA = "0x19F2DB0", Offset = "0x19F2DB0", VA = "0x19F2DB0")]
		public JudgeComponent(string actionKey, string targetInputKey, string onGreatBranchState, string onOkBranchState, string onBadBranchState, string onTimeOutBranchState, float timing, JudgeRange judgeRange, bool isJudgeDone, float judgeAnotherThreshold, bool isInverse)
		{
		}
	}
	[Token(Token = "0x20004A4")]
	public class RugbyGuideUI : MonoBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x20004A5")]
		[CompilerGenerated]
		private struct <DisplayLeftArrow>d__9 : IAsyncStateMachine
		{
			[Token(Token = "0x4001951")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001952")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001953")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public RugbyGuideUI <>4__this;

			[Token(Token = "0x4001954")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x4001955")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private DOTweenAsyncExtensions.TweenAwaiter <>u__2;

			[Token(Token = "0x60012DB")]
			[Address(RVA = "0x19F5244", Offset = "0x19F5244", VA = "0x19F5244", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60012DC")]
			[Address(RVA = "0x19F57E0", Offset = "0x19F57E0", VA = "0x19F57E0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20004A6")]
		[CompilerGenerated]
		private struct <DisplayRightArrow>d__10 : IAsyncStateMachine
		{
			[Token(Token = "0x4001956")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001957")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001958")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public RugbyGuideUI <>4__this;

			[Token(Token = "0x4001959")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x400195A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private DOTweenAsyncExtensions.TweenAwaiter <>u__2;

			[Token(Token = "0x60012DD")]
			[Address(RVA = "0x19F57EC", Offset = "0x19F57EC", VA = "0x19F57EC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60012DE")]
			[Address(RVA = "0x19F5D88", Offset = "0x19F5D88", VA = "0x19F5D88", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x400194E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private FitPatternBoxManager _fitPatternBox;

		[Token(Token = "0x400194F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SpriteRenderer _leftArrow;

		[Token(Token = "0x4001950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private SpriteRenderer _rightArrow;

		[Token(Token = "0x170001AE")]
		[Inject]
		private ISubscriber<(FPActionData, string)> OnFPAction
		{
			[Token(Token = "0x60012D3")]
			[Address(RVA = "0x19F4E60", Offset = "0x19F4E60", VA = "0x19F4E60")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60012D4")]
			[Address(RVA = "0x19F4E68", Offset = "0x19F4E68", VA = "0x19F4E68")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x60012D5")]
		[Address(RVA = "0x19F4E70", Offset = "0x19F4E70", VA = "0x19F4E70")]
		private void Start()
		{
		}

		[Token(Token = "0x60012D6")]
		[Address(RVA = "0x19F4FC4", Offset = "0x19F4FC4", VA = "0x19F4FC4")]
		private void DoAction(FPActionData value)
		{
		}

		[Token(Token = "0x60012D7")]
		[Address(RVA = "0x19F50C8", Offset = "0x19F50C8", VA = "0x19F50C8")]
		[AsyncStateMachine(typeof(<DisplayLeftArrow>d__9))]
		public void DisplayLeftArrow()
		{
		}

		[Token(Token = "0x60012D8")]
		[Address(RVA = "0x19F5180", Offset = "0x19F5180", VA = "0x19F5180")]
		[AsyncStateMachine(typeof(<DisplayRightArrow>d__10))]
		public void DisplayRightArrow()
		{
		}

		[Token(Token = "0x60012D9")]
		[Address(RVA = "0x19F5238", Offset = "0x19F5238", VA = "0x19F5238")]
		public RugbyGuideUI()
		{
		}
	}
	[Token(Token = "0x20004A7")]
	public class RugbyHaptics : MonoBehaviour
	{
		[Token(Token = "0x400195C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Inject]
		private InputProvider _inputProvider;

		[Token(Token = "0x170001AF")]
		[Inject]
		private ISubscriber<FPActionData> OnFPAction
		{
			[Token(Token = "0x60012DF")]
			[Address(RVA = "0x19F5D94", Offset = "0x19F5D94", VA = "0x19F5D94")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60012E0")]
			[Address(RVA = "0x19F5D9C", Offset = "0x19F5D9C", VA = "0x19F5D9C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x60012E1")]
		[Address(RVA = "0x19F5DA4", Offset = "0x19F5DA4", VA = "0x19F5DA4")]
		private void Start()
		{
		}

		[Token(Token = "0x60012E2")]
		[Address(RVA = "0x19F5ED0", Offset = "0x19F5ED0", VA = "0x19F5ED0")]
		public RugbyHaptics()
		{
		}
	}
	[Token(Token = "0x20004A8")]
	public class RugbyInputPublisher : InputThresholdPublisher
	{
		[Token(Token = "0x400195D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Inject]
		private InputProvider _inputProvider;

		[Token(Token = "0x400195F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private StringReactiveProperty _inputMessage;

		[Token(Token = "0x4001960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ReactiveProperty<(string, float)> _inputMessageWithThreshold;

		[Token(Token = "0x4001961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private RugbyInputState _rugbyInputState;

		[Token(Token = "0x4001962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private CatchAreaUpdater _catchAreaUpdater;

		[Token(Token = "0x4001963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Transform leftTeammate;

		[Token(Token = "0x4001964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Transform rightTeammate;

		[Token(Token = "0x4001965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private RugbyFitPatternState _rugbyFitPatternState;

		[Token(Token = "0x170001B0")]
		[Inject]
		private ISubscriber<(FPActionData, string)> OnFPAction
		{
			[Token(Token = "0x60012E4")]
			[Address(RVA = "0x19F5FD0", Offset = "0x19F5FD0", VA = "0x19F5FD0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60012E5")]
			[Address(RVA = "0x19F5FD8", Offset = "0x19F5FD8", VA = "0x19F5FD8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170001B1")]
		public override ReactiveProperty<(string, float)> InputMessageWithThreshold
		{
			[Token(Token = "0x60012EA")]
			[Address(RVA = "0x19F6848", Offset = "0x19F6848", VA = "0x19F6848", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60012EB")]
			[Address(RVA = "0x19F6850", Offset = "0x19F6850", VA = "0x19F6850", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x60012E6")]
		[Address(RVA = "0x19F5FE0", Offset = "0x19F5FE0", VA = "0x19F5FE0")]
		private void Start()
		{
		}

		[Token(Token = "0x60012E7")]
		[Address(RVA = "0x19F6310", Offset = "0x19F6310", VA = "0x19F6310")]
		private void Update()
		{
		}

		[Token(Token = "0x60012E8")]
		[Address(RVA = "0x19F6414", Offset = "0x19F6414", VA = "0x19F6414")]
		private void PublishMessageOnCatch(RugbyInputState s)
		{
		}

		[Token(Token = "0x60012E9")]
		[Address(RVA = "0x19F64F4", Offset = "0x19F64F4", VA = "0x19F64F4")]
		private void PublishMessageOnPass(RugbyInputState s, Vector3 velocity, Vector3 pos)
		{
		}

		[Token(Token = "0x60012EC")]
		[Address(RVA = "0x19F6858", Offset = "0x19F6858", VA = "0x19F6858")]
		public RugbyInputPublisher()
		{
		}
	}
	[Token(Token = "0x20004AA")]
	public class RugbyInstaller : GFGameZenjectInstaller
	{
		[Token(Token = "0x60012F2")]
		[Address(RVA = "0x19F6A40", Offset = "0x19F6A40", VA = "0x19F6A40", Slot = "8")]
		public override void InstallBindings()
		{
		}

		[Token(Token = "0x60012F3")]
		[Address(RVA = "0x19F6D0C", Offset = "0x19F6D0C", VA = "0x19F6D0C")]
		public RugbyInstaller()
		{
		}
	}
	[Token(Token = "0x20004AB")]
	public enum RugbyEventKeys
	{
		[Token(Token = "0x4001969")]
		TeammateRunning,
		[Token(Token = "0x400196A")]
		TeammatePassRC,
		[Token(Token = "0x400196B")]
		TeammatePassLC,
		[Token(Token = "0x400196C")]
		TeammatePassRL,
		[Token(Token = "0x400196D")]
		TeammatePassLR,
		[Token(Token = "0x400196E")]
		TeammateCatchCR,
		[Token(Token = "0x400196F")]
		TeammateCatchCL,
		[Token(Token = "0x4001970")]
		TeammateCatchRL,
		[Token(Token = "0x4001971")]
		TeammateCatchLR,
		[Token(Token = "0x4001972")]
		TeammateRaiseHandR,
		[Token(Token = "0x4001973")]
		TeammateRaiseHandL,
		[Token(Token = "0x4001974")]
		TeammateCatchFailedR,
		[Token(Token = "0x4001975")]
		TeammateCatchFailedL,
		[Token(Token = "0x4001976")]
		TeammateTackle,
		[Token(Token = "0x4001977")]
		Voice_Hey,
		[Token(Token = "0x4001978")]
		Voice_Right,
		[Token(Token = "0x4001979")]
		Voice_Left,
		[Token(Token = "0x400197A")]
		Voice_Woo_Practice,
		[Token(Token = "0x400197B")]
		Voice_Ho,
		[Token(Token = "0x400197C")]
		Voice_Ha,
		[Token(Token = "0x400197D")]
		BallAppear,
		[Token(Token = "0x400197E")]
		BallDisappear,
		[Token(Token = "0x400197F")]
		BallDrop,
		[Token(Token = "0x4001980")]
		BallReturnR,
		[Token(Token = "0x4001981")]
		BallReturnL,
		[Token(Token = "0x4001982")]
		PassRC,
		[Token(Token = "0x4001983")]
		PassLC,
		[Token(Token = "0x4001984")]
		PassRL,
		[Token(Token = "0x4001985")]
		PassLR,
		[Token(Token = "0x4001986")]
		PassCR,
		[Token(Token = "0x4001987")]
		PassCL,
		[Token(Token = "0x4001988")]
		CatchSound,
		[Token(Token = "0x4001989")]
		PassSound,
		[Token(Token = "0x400198A")]
		OpponentAppear,
		[Token(Token = "0x400198B")]
		OpponentTackle,
		[Token(Token = "0x400198C")]
		OpponentSlip,
		[Token(Token = "0x400198D")]
		Voice_Woo,
		[Token(Token = "0x400198E")]
		RightCatch,
		[Token(Token = "0x400198F")]
		LeftCatch,
		[Token(Token = "0x4001990")]
		RightPass,
		[Token(Token = "0x4001991")]
		LeftPass,
		[Token(Token = "0x4001992")]
		Dodge,
		[Token(Token = "0x4001993")]
		DropOnHolding,
		[Token(Token = "0x4001994")]
		RugbyRhythmGuide
	}
	[Token(Token = "0x20004AC")]
	public enum RugbyFitPatternState
	{
		[Token(Token = "0x4001996")]
		Succssing,
		[Token(Token = "0x4001997")]
		RCLCatchMissed,
		[Token(Token = "0x4001998")]
		RCLHoldMissed,
		[Token(Token = "0x4001999")]
		RCLPassMissed,
		[Token(Token = "0x400199A")]
		RCLPassDropprd,
		[Token(Token = "0x400199B")]
		All,
		[Token(Token = "0x400199C")]
		None,
		[Token(Token = "0x400199D")]
		LCRCatchMissed,
		[Token(Token = "0x400199E")]
		LCRHoldMissed,
		[Token(Token = "0x400199F")]
		LCRPassMissed,
		[Token(Token = "0x40019A0")]
		LCRPassDropprd,
		[Token(Token = "0x40019A1")]
		RCRCatchMissed,
		[Token(Token = "0x40019A2")]
		RCRHoldMissed,
		[Token(Token = "0x40019A3")]
		RCRDodgeMissed,
		[Token(Token = "0x40019A4")]
		RCRPassMissed,
		[Token(Token = "0x40019A5")]
		RCRPassDropprd,
		[Token(Token = "0x40019A6")]
		LCLCatchMissed,
		[Token(Token = "0x40019A7")]
		LCLHoldMissed,
		[Token(Token = "0x40019A8")]
		LCLDodgeMissed,
		[Token(Token = "0x40019A9")]
		LCLPassMissed,
		[Token(Token = "0x40019AA")]
		LCLPassDropprd
	}
	[Token(Token = "0x20004AD")]
	public enum RugbyInputKeys
	{
		[Token(Token = "0x40019AC")]
		RightCatch,
		[Token(Token = "0x40019AD")]
		LeftCatch,
		[Token(Token = "0x40019AE")]
		PassCR,
		[Token(Token = "0x40019AF")]
		PassCL,
		[Token(Token = "0x40019B0")]
		Dodge
	}
	[Token(Token = "0x20004AE")]
	public class RugbyMoveObject : MonoBehaviour
	{
		[Token(Token = "0x40019B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float intervalSec;

		[Token(Token = "0x40019B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float roadPosInterval;

		[Token(Token = "0x40019B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 _targetPos;

		[Token(Token = "0x40019B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Tween _tween;

		[Token(Token = "0x40019B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool isCompleted;

		[Token(Token = "0x60012F4")]
		[Address(RVA = "0x19F6D14", Offset = "0x19F6D14", VA = "0x19F6D14")]
		private void Start()
		{
		}

		[Token(Token = "0x60012F5")]
		[Address(RVA = "0x19F6E44", Offset = "0x19F6E44", VA = "0x19F6E44")]
		private void Update()
		{
		}

		[Token(Token = "0x60012F6")]
		[Address(RVA = "0x19F6F5C", Offset = "0x19F6F5C", VA = "0x19F6F5C")]
		public void PlayMoving()
		{
		}

		[Token(Token = "0x60012F7")]
		[Address(RVA = "0x19F6FA4", Offset = "0x19F6FA4", VA = "0x19F6FA4")]
		public void PauseMoving()
		{
		}

		[Token(Token = "0x60012F8")]
		[Address(RVA = "0x19F6FEC", Offset = "0x19F6FEC", VA = "0x19F6FEC")]
		public RugbyMoveObject()
		{
		}
	}
	[Token(Token = "0x20004AF")]
	public class RugbyObjectMover : MonoBehaviour
	{
		[Token(Token = "0x40019B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Inject]
		private DiContainer container;

		[Token(Token = "0x40019B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<Transform> stageObjs;

		[Token(Token = "0x40019B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private List<GameObject> stageModels;

		[Token(Token = "0x40019B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Vector3 endPos;

		[Token(Token = "0x40019BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float intervalDistance;

		[Token(Token = "0x40019BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Vector3 _velocity;

		[Token(Token = "0x40019BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool isMoving;

		[Token(Token = "0x60012FB")]
		[Address(RVA = "0x19F7098", Offset = "0x19F7098", VA = "0x19F7098")]
		private void Update()
		{
		}

		[Token(Token = "0x60012FC")]
		[Address(RVA = "0x19F73D4", Offset = "0x19F73D4", VA = "0x19F73D4")]
		private void ChangeStageObj(Transform tf)
		{
		}

		[Token(Token = "0x60012FD")]
		[Address(RVA = "0x19F7718", Offset = "0x19F7718", VA = "0x19F7718")]
		public void PlayMoving()
		{
		}

		[Token(Token = "0x60012FE")]
		[Address(RVA = "0x19F7724", Offset = "0x19F7724", VA = "0x19F7724")]
		public void PauseMoving()
		{
		}

		[Token(Token = "0x60012FF")]
		[Address(RVA = "0x19F772C", Offset = "0x19F772C", VA = "0x19F772C")]
		public RugbyObjectMover()
		{
		}
	}
	[Token(Token = "0x20004B0")]
	public class RugbyPracticeClearCounter : PracticeClearCounter
	{
		[Token(Token = "0x40019BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private BoolReactiveProperty _clearMessage;

		[Token(Token = "0x170001B2")]
		[Inject]
		private ISubscriber<(FPActionData, string)> OnFPAction
		{
			[Token(Token = "0x6001300")]
			[Address(RVA = "0x19F7740", Offset = "0x19F7740", VA = "0x19F7740")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001301")]
			[Address(RVA = "0x19F7748", Offset = "0x19F7748", VA = "0x19F7748")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170001B3")]
		public override BoolReactiveProperty ClearMessage
		{
			[Token(Token = "0x6001304")]
			[Address(RVA = "0x19F7B0C", Offset = "0x19F7B0C", VA = "0x19F7B0C", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001305")]
			[Address(RVA = "0x19F7B14", Offset = "0x19F7B14", VA = "0x19F7B14", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x6001302")]
		[Address(RVA = "0x19F7750", Offset = "0x19F7750", VA = "0x19F7750")]
		private void Start()
		{
		}

		[Token(Token = "0x6001303")]
		[Address(RVA = "0x19F78BC", Offset = "0x19F78BC", VA = "0x19F78BC")]
		private void Count(FPActionData data)
		{
		}

		[Token(Token = "0x6001306")]
		[Address(RVA = "0x19F7B1C", Offset = "0x19F7B1C", VA = "0x19F7B1C")]
		public RugbyPracticeClearCounter()
		{
		}
	}
	[Token(Token = "0x20004B1")]
	public class RugbyRhythmGuide : MonoBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x20004B2")]
		[CompilerGenerated]
		private struct <GuideCount>d__14 : IAsyncStateMachine
		{
			[Token(Token = "0x40019C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40019C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40019C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public RugbyRhythmGuide <>4__this;

			[Token(Token = "0x40019C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6001311")]
			[Address(RVA = "0x19F7F20", Offset = "0x19F7F20", VA = "0x19F7F20", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001312")]
			[Address(RVA = "0x19F84CC", Offset = "0x19F84CC", VA = "0x19F84CC", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x40019BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioClip _guideSound0;

		[Token(Token = "0x40019C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip _guideSound1;

		[Token(Token = "0x40019C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _secondPerBeat;

		[Token(Token = "0x40019C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private CancellationToken _token;

		[Token(Token = "0x40019C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private AudioSource _audio;

		[Token(Token = "0x170001B4")]
		[Inject]
		private ISubscriber<FPActionData> OnFPAction
		{
			[Token(Token = "0x6001308")]
			[Address(RVA = "0x19F7B28", Offset = "0x19F7B28", VA = "0x19F7B28")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001309")]
			[Address(RVA = "0x19F7B30", Offset = "0x19F7B30", VA = "0x19F7B30")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170001B5")]
		[Inject]
		private ISubscriber<BPMData> OnBPMData
		{
			[Token(Token = "0x600130A")]
			[Address(RVA = "0x19F7B38", Offset = "0x19F7B38", VA = "0x19F7B38")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600130B")]
			[Address(RVA = "0x19F7B40", Offset = "0x19F7B40", VA = "0x19F7B40")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x600130C")]
		[Address(RVA = "0x19F7B48", Offset = "0x19F7B48", VA = "0x19F7B48")]
		private void Start()
		{
		}

		[Token(Token = "0x600130D")]
		[Address(RVA = "0x19F7DB4", Offset = "0x19F7DB4", VA = "0x19F7DB4")]
		[AsyncStateMachine(typeof(<GuideCount>d__14))]
		private void GuideCount()
		{
		}

		[Token(Token = "0x600130E")]
		[Address(RVA = "0x19F7E68", Offset = "0x19F7E68", VA = "0x19F7E68")]
		public RugbyRhythmGuide()
		{
		}
	}
	[Token(Token = "0x20004B3")]
	public class RugbyRugbyFpThresholdInputJudgeAction : RugbyFpThresholdInputJudgeActionBase
	{
		[Token(Token = "0x40019CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private List<RugbyJudgeComponent> rugbyJudgeComponents;

		[Token(Token = "0x6001313")]
		[Address(RVA = "0x19F84D8", Offset = "0x19F84D8", VA = "0x19F84D8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001314")]
		[Address(RVA = "0x19F85CC", Offset = "0x19F85CC", VA = "0x19F85CC")]
		private static JudgeComponent ConvertToJudgeComponent(RugbyJudgeComponent x)
		{
			return null;
		}

		[Token(Token = "0x6001315")]
		[Address(RVA = "0x19F87B0", Offset = "0x19F87B0", VA = "0x19F87B0")]
		public RugbyRugbyFpThresholdInputJudgeAction()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004B4")]
	public class RugbyJudgeComponent
	{
		[Token(Token = "0x40019CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RugbyEventKeys _actionKey;

		[Token(Token = "0x40019CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public RugbyInputKeys _targetInputKey;

		[Token(Token = "0x40019CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RugbyFitPatternState _onGreatBranchState;

		[Token(Token = "0x40019CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public RugbyFitPatternState _onOKBranchState;

		[Token(Token = "0x40019CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RugbyFitPatternState _onBadBranchState;

		[Token(Token = "0x40019D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public RugbyFitPatternState _onTimeOutBranchState;

		[Token(Token = "0x40019D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float _timing;

		[Token(Token = "0x40019D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public JudgeRange _judgeRange;

		[NonSerialized]
		[Token(Token = "0x40019D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool _isJudgeDone;

		[Token(Token = "0x40019D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float judgeAnotherThreshold;

		[Token(Token = "0x40019D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool isInverse;

		[Token(Token = "0x6001316")]
		[Address(RVA = "0x19F87C4", Offset = "0x19F87C4", VA = "0x19F87C4")]
		public RugbyJudgeComponent()
		{
		}
	}
	[Token(Token = "0x20004B5")]
	[RequireComponent(typeof(GrooveFitAudioSource))]
	public class RugbySoundManager : MonoBehaviour
	{
		[Token(Token = "0x40019D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioClip _catch;

		[Token(Token = "0x40019D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip _pass;

		[Token(Token = "0x40019D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip _catchGreat;

		[Token(Token = "0x40019D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _catchOk;

		[Token(Token = "0x40019DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AudioClip _catchBad;

		[Token(Token = "0x40019DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private AudioClip _passGreat;

		[Token(Token = "0x40019DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private AudioClip _passOk;

		[Token(Token = "0x40019DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioClip _drop;

		[Token(Token = "0x40019DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioClip _dodge;

		[Token(Token = "0x40019E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private AudioSource _audio;

		[Token(Token = "0x170001B6")]
		[Inject]
		private ISubscriber<(FPActionData, string)> OnFPAction
		{
			[Token(Token = "0x6001317")]
			[Address(RVA = "0x19F87CC", Offset = "0x19F87CC", VA = "0x19F87CC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001318")]
			[Address(RVA = "0x19F87D4", Offset = "0x19F87D4", VA = "0x19F87D4")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001319")]
		[Address(RVA = "0x19F87DC", Offset = "0x19F87DC", VA = "0x19F87DC")]
		private void Start()
		{
		}

		[Token(Token = "0x600131A")]
		[Address(RVA = "0x19F893C", Offset = "0x19F893C", VA = "0x19F893C")]
		private void PlaySound((FPActionData, string) value)
		{
		}

		[Token(Token = "0x600131B")]
		[Address(RVA = "0x19F8CF8", Offset = "0x19F8CF8", VA = "0x19F8CF8")]
		public RugbySoundManager()
		{
		}
	}
	[Token(Token = "0x20004B6")]
	public class RugbyStageLife : MonoBehaviour
	{
		[Token(Token = "0x40019E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float posInterval;

		[Token(Token = "0x40019E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float startPosZ;

		[Token(Token = "0x40019E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform cameraRigRoot;

		[Token(Token = "0x600131D")]
		[Address(RVA = "0x19F8D04", Offset = "0x19F8D04", VA = "0x19F8D04")]
		private void Start()
		{
		}

		[Token(Token = "0x600131E")]
		[Address(RVA = "0x19F8D94", Offset = "0x19F8D94", VA = "0x19F8D94")]
		private void Update()
		{
		}

		[Token(Token = "0x600131F")]
		[Address(RVA = "0x19F8E30", Offset = "0x19F8E30", VA = "0x19F8E30")]
		public RugbyStageLife()
		{
		}
	}
	[Token(Token = "0x20004B7")]
	public class RugbyStageMover : MonoBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x20004B8")]
		[CompilerGenerated]
		private struct <Start>d__10 : IAsyncStateMachine
		{
			[Token(Token = "0x40019EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40019EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40019F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public RugbyStageMover <>4__this;

			[Token(Token = "0x40019F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private DOTweenAsyncExtensions.TweenAwaiter <>u__1;

			[Token(Token = "0x6001327")]
			[Address(RVA = "0x19F92FC", Offset = "0x19F92FC", VA = "0x19F92FC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001328")]
			[Address(RVA = "0x19F9908", Offset = "0x19F9908", VA = "0x19F9908", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x40019E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Inject]
		private DiContainer container;

		[Token(Token = "0x40019E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<GameObject> stageObjs;

		[Token(Token = "0x40019E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Vector3 startPos;

		[Token(Token = "0x40019E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private Vector3 preEndPos;

		[Token(Token = "0x40019E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Vector3 endPos;

		[Token(Token = "0x40019E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private float interval;

		[Token(Token = "0x40019EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private float intervalDistance;

		[Token(Token = "0x40019EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private int setsNum;

		[Token(Token = "0x40019EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private int index;

		[Token(Token = "0x40019ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Sequence currentSequence;

		[Token(Token = "0x6001320")]
		[Address(RVA = "0x19F8E40", Offset = "0x19F8E40", VA = "0x19F8E40")]
		[AsyncStateMachine(typeof(<Start>d__10))]
		private void Start()
		{
		}

		[Token(Token = "0x6001321")]
		[Address(RVA = "0x19F8EF8", Offset = "0x19F8EF8", VA = "0x19F8EF8")]
		private void ChangeStageObj()
		{
		}

		[Token(Token = "0x6001322")]
		[Address(RVA = "0x19F925C", Offset = "0x19F925C", VA = "0x19F925C")]
		public void PlayMoving()
		{
		}

		[Token(Token = "0x6001323")]
		[Address(RVA = "0x19F92A4", Offset = "0x19F92A4", VA = "0x19F92A4")]
		public void PauseMoving()
		{
		}

		[Token(Token = "0x6001324")]
		[Address(RVA = "0x19F92EC", Offset = "0x19F92EC", VA = "0x19F92EC")]
		public RugbyStageMover()
		{
		}
	}
	[Token(Token = "0x20004B9")]
	public class RunningEffect : MonoBehaviour
	{
		[Token(Token = "0x40019F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Inject]
		private InputProvider _inputProvider;

		[Token(Token = "0x6001329")]
		[Address(RVA = "0x19F9914", Offset = "0x19F9914", VA = "0x19F9914")]
		private void Update()
		{
		}

		[Token(Token = "0x600132A")]
		[Address(RVA = "0x19F99DC", Offset = "0x19F99DC", VA = "0x19F99DC")]
		public RunningEffect()
		{
		}
	}
	[Token(Token = "0x20004BA")]
	public class ScoreManagerPipe : MonoBehaviour
	{
		[Token(Token = "0x170001B7")]
		[Inject]
		private ISubscriber<(FPActionData, string)> OnJudgePub
		{
			[Token(Token = "0x600132B")]
			[Address(RVA = "0x19F99E4", Offset = "0x19F99E4", VA = "0x19F99E4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600132C")]
			[Address(RVA = "0x19F99EC", Offset = "0x19F99EC", VA = "0x19F99EC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170001B8")]
		[Inject]
		private IPublisher<FPActionData> PubScore
		{
			[Token(Token = "0x600132D")]
			[Address(RVA = "0x19F99F4", Offset = "0x19F99F4", VA = "0x19F99F4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600132E")]
			[Address(RVA = "0x19F99FC", Offset = "0x19F99FC", VA = "0x19F99FC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x600132F")]
		[Address(RVA = "0x19F9A04", Offset = "0x19F9A04", VA = "0x19F9A04")]
		private void Start()
		{
		}

		[Token(Token = "0x6001330")]
		[Address(RVA = "0x19F9B30", Offset = "0x19F9B30", VA = "0x19F9B30")]
		public ScoreManagerPipe()
		{
		}
	}
	[Token(Token = "0x20004BB")]
	public class TackleTargetUpdater : MonoBehaviour
	{
		[Token(Token = "0x40019F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Inject]
		private InputProvider _inputProvider;

		[Token(Token = "0x40019F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject dodgeGuide;

		[Token(Token = "0x40019FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material _dodgeGuideMat;

		[Token(Token = "0x40019FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool isDodgeJudging;

		[Token(Token = "0x40019FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float _secondPerBeat;

		[Token(Token = "0x170001B9")]
		[Inject]
		private ISubscriber<(FPActionData, string)> OnFPAction
		{
			[Token(Token = "0x6001332")]
			[Address(RVA = "0x19F9C8C", Offset = "0x19F9C8C", VA = "0x19F9C8C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001333")]
			[Address(RVA = "0x19F9C94", Offset = "0x19F9C94", VA = "0x19F9C94")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170001BA")]
		[Inject]
		private ISubscriber<BPMData> OnBpmData
		{
			[Token(Token = "0x6001334")]
			[Address(RVA = "0x19F9C9C", Offset = "0x19F9C9C", VA = "0x19F9C9C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001335")]
			[Address(RVA = "0x19F9CA4", Offset = "0x19F9CA4", VA = "0x19F9CA4")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170001BB")]
		[Inject]
		private ISubscriber<GameStatus> OnGameStatus
		{
			[Token(Token = "0x6001336")]
			[Address(RVA = "0x19F9CAC", Offset = "0x19F9CAC", VA = "0x19F9CAC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001337")]
			[Address(RVA = "0x19F9CB4", Offset = "0x19F9CB4", VA = "0x19F9CB4")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001338")]
		[Address(RVA = "0x19F9CBC", Offset = "0x19F9CBC", VA = "0x19F9CBC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001339")]
		[Address(RVA = "0x19FA088", Offset = "0x19FA088", VA = "0x19FA088")]
		private void Update()
		{
		}

		[Token(Token = "0x600133A")]
		[Address(RVA = "0x19FA124", Offset = "0x19FA124", VA = "0x19FA124")]
		private void DoAction(FPActionData value)
		{
		}

		[Token(Token = "0x600133B")]
		[Address(RVA = "0x19FA23C", Offset = "0x19FA23C", VA = "0x19FA23C")]
		private void DodgeGuideActivate()
		{
		}

		[Token(Token = "0x600133C")]
		[Address(RVA = "0x19FA004", Offset = "0x19FA004", VA = "0x19FA004")]
		private void DodgeGuideDeactivate()
		{
		}

		[Token(Token = "0x600133D")]
		[Address(RVA = "0x19FA3E4", Offset = "0x19FA3E4", VA = "0x19FA3E4")]
		public TackleTargetUpdater()
		{
		}
	}
	[Token(Token = "0x20004BC")]
	public class TeammateEventManager : MonoBehaviour
	{
		[Token(Token = "0x170001BC")]
		[Inject]
		private IPublisher<(FPActionData, string)> FPActionMessage
		{
			[Token(Token = "0x6001343")]
			[Address(RVA = "0x19FA4D8", Offset = "0x19FA4D8", VA = "0x19FA4D8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001344")]
			[Address(RVA = "0x19FA4E0", Offset = "0x19FA4E0", VA = "0x19FA4E0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001345")]
		[Address(RVA = "0x19FA4E8", Offset = "0x19FA4E8", VA = "0x19FA4E8")]
		public void StartRunning()
		{
		}

		[Token(Token = "0x6001346")]
		[Address(RVA = "0x19FA6D0", Offset = "0x19FA6D0", VA = "0x19FA6D0")]
		public void StopRunning()
		{
		}

		[Token(Token = "0x6001347")]
		[Address(RVA = "0x19FA8B8", Offset = "0x19FA8B8", VA = "0x19FA8B8")]
		public TeammateEventManager()
		{
		}
	}
	[Token(Token = "0x20004BD")]
	[RequireComponent(typeof(AudioSource))]
	public class TeammateManager : MonoBehaviour
	{
		[Token(Token = "0x40019FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TeammateType teammateType;

		[Token(Token = "0x40019FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator teammateAnimator;

		[Token(Token = "0x4001A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip _voice_Right;

		[Token(Token = "0x4001A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _voice_Left;

		[Token(Token = "0x4001A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AudioClip _voice_Ho;

		[Token(Token = "0x4001A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private AudioClip _voice_Ha;

		[Token(Token = "0x4001A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private AudioClip _fenec_joy;

		[Token(Token = "0x4001A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioClip _fenec_sigh;

		[Token(Token = "0x4001A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioClip _voice_Lthrow;

		[Token(Token = "0x4001A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private AudioClip _voice_Rthrow;

		[Token(Token = "0x4001A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[Inject]
		private ISubscriber<CharacterActionData> _characterActionDataSubscriber;

		[Token(Token = "0x4001A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[Inject]
		private ISubscriber<GameStatus> _status;

		[Token(Token = "0x4001A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private AudioSource _audio;

		[Token(Token = "0x4001A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int StartRunning;

		[Token(Token = "0x4001A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int LeftBackThrow;

		[Token(Token = "0x4001A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly int RightBackThrow;

		[Token(Token = "0x4001A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static readonly int LeftThrow;

		[Token(Token = "0x4001A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly int RightThrow;

		[Token(Token = "0x4001A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static readonly int LeftCatch;

		[Token(Token = "0x4001A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly int RightCatch;

		[Token(Token = "0x4001A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private static readonly int RightAttention;

		[Token(Token = "0x4001A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static readonly int LeftAttention;

		[Token(Token = "0x4001A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private static readonly int RightFrontCatch;

		[Token(Token = "0x4001A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static readonly int LeftFrontCatch;

		[Token(Token = "0x4001A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private static readonly int StopRunning;

		[Token(Token = "0x4001A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static readonly int ConversationBlock00;

		[Token(Token = "0x4001A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private static readonly int ConversationBlock01;

		[Token(Token = "0x4001A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static readonly int ConversationBlock02;

		[Token(Token = "0x4001A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private static readonly int ConversationBlock03;

		[Token(Token = "0x4001A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static readonly int ConversationBlock10;

		[Token(Token = "0x4001A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private static readonly int ConversationBlock11;

		[Token(Token = "0x4001A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static readonly int ConversationBlock12;

		[Token(Token = "0x4001A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private static readonly int ConversationBlock20;

		[Token(Token = "0x4001A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static readonly int ConversationBlock21;

		[Token(Token = "0x4001A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private static readonly int ConversationBlock22;

		[Token(Token = "0x4001A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private static readonly int Restart;

		[Token(Token = "0x4001A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int upperLayerIndex;

		[Token(Token = "0x4001A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private int conversationBlockLayerIndex;

		[Token(Token = "0x4001A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Tween tween;

		[Token(Token = "0x4001A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Tween conversationBlockLayerTween;

		[Token(Token = "0x4001A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float weight;

		[Token(Token = "0x170001BD")]
		[Inject]
		private ISubscriber<(FPActionData, string)> OnFPAction
		{
			[Token(Token = "0x6001348")]
			[Address(RVA = "0x19FA8C0", Offset = "0x19FA8C0", VA = "0x19FA8C0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001349")]
			[Address(RVA = "0x19FA8C8", Offset = "0x19FA8C8", VA = "0x19FA8C8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x600134A")]
		[Address(RVA = "0x19FA8D0", Offset = "0x19FA8D0", VA = "0x19FA8D0")]
		private void Start()
		{
		}

		[Token(Token = "0x600134B")]
		[Address(RVA = "0x19FAC5C", Offset = "0x19FAC5C", VA = "0x19FAC5C")]
		private void DoAction(FPActionData value)
		{
		}

		[Token(Token = "0x600134C")]
		[Address(RVA = "0x19FB38C", Offset = "0x19FB38C", VA = "0x19FB38C")]
		private void Grabing()
		{
		}

		[Token(Token = "0x600134D")]
		[Address(RVA = "0x19FB1E4", Offset = "0x19FB1E4", VA = "0x19FB1E4")]
		private void Releasing()
		{
		}

		[Token(Token = "0x600134E")]
		[Address(RVA = "0x19FB554", Offset = "0x19FB554", VA = "0x19FB554")]
		public void LookAtPlayerImmediately()
		{
		}

		[Token(Token = "0x600134F")]
		[Address(RVA = "0x19FB5B8", Offset = "0x19FB5B8", VA = "0x19FB5B8")]
		public void LookAtPlayer()
		{
		}

		[Token(Token = "0x6001350")]
		[Address(RVA = "0x19FB628", Offset = "0x19FB628", VA = "0x19FB628")]
		public void LookForward()
		{
		}

		[Token(Token = "0x6001351")]
		[Address(RVA = "0x19FB674", Offset = "0x19FB674", VA = "0x19FB674")]
		private void ChangeRunningLayer()
		{
		}

		[Token(Token = "0x6001352")]
		[Address(RVA = "0x19FB84C", Offset = "0x19FB84C", VA = "0x19FB84C")]
		private void ConversationBlockAnimatorSetTrigger(CharacterActionData data)
		{
		}

		[Token(Token = "0x6001353")]
		[Address(RVA = "0x19FB138", Offset = "0x19FB138", VA = "0x19FB138")]
		private void ResetAllTriggers()
		{
		}

		[Token(Token = "0x6001354")]
		[Address(RVA = "0x19FBC88", Offset = "0x19FBC88", VA = "0x19FBC88")]
		public TeammateManager()
		{
		}
	}
	[Token(Token = "0x20004BE")]
	public enum TeammateType
	{
		[Token(Token = "0x4001A29")]
		Right,
		[Token(Token = "0x4001A2A")]
		Left,
		[Token(Token = "0x4001A2B")]
		Back
	}
	[Token(Token = "0x20004BF")]
	public class TimingAssistPanelManager : MonoBehaviour
	{
		[Token(Token = "0x4001A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MultilingualTextMeshPro multilingualTextMeshPro;

		[Token(Token = "0x4001A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject timingAssistPanel;

		[Token(Token = "0x4001A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Sequence sequence;

		[Token(Token = "0x170001BE")]
		[Inject]
		private ISubscriber<FPActionData> OnFPAction
		{
			[Token(Token = "0x6001365")]
			[Address(RVA = "0x19FC1F0", Offset = "0x19FC1F0", VA = "0x19FC1F0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001366")]
			[Address(RVA = "0x19FC1F8", Offset = "0x19FC1F8", VA = "0x19FC1F8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001367")]
		[Address(RVA = "0x19FC200", Offset = "0x19FC200", VA = "0x19FC200")]
		private void Start()
		{
		}

		[Token(Token = "0x6001368")]
		[Address(RVA = "0x19FC34C", Offset = "0x19FC34C", VA = "0x19FC34C")]
		private void VisualizeTimingAssist(FPActionData value)
		{
		}

		[Token(Token = "0x6001369")]
		[Address(RVA = "0x19FC4D4", Offset = "0x19FC4D4", VA = "0x19FC4D4")]
		private void TimingAssistAnimation()
		{
		}

		[Token(Token = "0x600136A")]
		[Address(RVA = "0x19FC718", Offset = "0x19FC718", VA = "0x19FC718")]
		public TimingAssistPanelManager()
		{
		}
	}
	[Token(Token = "0x20004C0")]
	public class UnityEventBlock : EventBlock
	{
		[StructLayout(3)]
		[Token(Token = "0x20004C1")]
		[CompilerGenerated]
		private struct <SetEvent>d__1 : IAsyncStateMachine
		{
			[Token(Token = "0x4001A31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001A32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x4001A33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CancellationToken token;

			[Token(Token = "0x4001A34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public UnityEventBlock <>4__this;

			[Token(Token = "0x4001A35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x600136F")]
			[Address(RVA = "0x19FC85C", Offset = "0x19FC85C", VA = "0x19FC85C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001370")]
			[Address(RVA = "0x19FCC9C", Offset = "0x19FCC9C", VA = "0x19FCC9C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UnityEvent unityEvent;

		[Token(Token = "0x600136D")]
		[Address(RVA = "0x19FC778", Offset = "0x19FC778", VA = "0x19FC778", Slot = "4")]
		[AsyncStateMachine(typeof(<SetEvent>d__1))]
		public override UniTask<bool> SetEvent(CancellationToken token)
		{
			return default(UniTask<bool>);
		}

		[Token(Token = "0x600136E")]
		[Address(RVA = "0x19FC854", Offset = "0x19FC854", VA = "0x19FC854")]
		public UnityEventBlock()
		{
		}
	}
}
namespace __Imacreate__.__Production__.GrooveFitGames.GF11_Rugby.Legacy
{
	[Token(Token = "0x20004C2")]
	public class FPRugbyInputJudgeAction : JudgeActionBase
	{
		[Serializable]
		[Token(Token = "0x20004C3")]
		public class JudgeRange
		{
			[Token(Token = "0x4001A43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float min;

			[Token(Token = "0x4001A44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float max;

			[Token(Token = "0x6001377")]
			[Address(RVA = "0x19FE114", Offset = "0x19FE114", VA = "0x19FE114")]
			public JudgeRange()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004C4")]
		public class RugbyJudge
		{
			[Token(Token = "0x4001A45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string _onDownActionKey;

			[Token(Token = "0x4001A46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string _onDownTargetInputKey;

			[Token(Token = "0x4001A47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float _onDownTiming;

			[Token(Token = "0x4001A48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public JudgeRange _onDownJudgeRange;

			[Token(Token = "0x4001A49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool _onDownJudgeDone;

			[Token(Token = "0x6001378")]
			[Address(RVA = "0x19FE11C", Offset = "0x19FE11C", VA = "0x19FE11C")]
			public RugbyJudge()
			{
			}
		}

		[Token(Token = "0x4001A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal string _onDownActionKey;

		[Token(Token = "0x4001A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal string _onDownTargetInputKey;

		[Token(Token = "0x4001A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float _onDownTiming;

		[Token(Token = "0x4001A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private JudgeRange _onDownJudgeRange;

		[Token(Token = "0x4001A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool _onDownJudgeDone;

		[Token(Token = "0x4001A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal string _onUpActionKey;

		[Token(Token = "0x4001A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal string _onUpTargetInputKey;

		[Token(Token = "0x4001A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private float _onUpTiming;

		[Token(Token = "0x4001A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private JudgeRange _onUpJudgeRange;

		[Token(Token = "0x4001A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool _onUpJudgeDone;

		[Token(Token = "0x4001A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		private float judgeAnotherThreshold;

		[Token(Token = "0x4001A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private InputPublisher _inputPublisher;

		[Token(Token = "0x4001A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _currentBeat;

		[Token(Token = "0x6001371")]
		[Address(RVA = "0x19FCCF4", Offset = "0x19FCCF4", VA = "0x19FCCF4", Slot = "4")]
		protected override void BeatSubscribeAction(float currentBeat)
		{
		}

		[Token(Token = "0x6001372")]
		[Address(RVA = "0x19FD57C", Offset = "0x19FD57C", VA = "0x19FD57C", Slot = "5")]
		protected override void AdditionalSetComponent()
		{
		}

		[Token(Token = "0x6001373")]
		[Address(RVA = "0x19FD6C8", Offset = "0x19FD6C8", VA = "0x19FD6C8", Slot = "6")]
		protected virtual void Judge(string value, JudgeRange range, float _timing, string _targetInputKey, string _actionKey, ref bool _judgeDone)
		{
		}

		[Token(Token = "0x6001374")]
		[Address(RVA = "0x19FDBB0", Offset = "0x19FDBB0", VA = "0x19FDBB0", Slot = "7")]
		protected virtual void JudgeWithThreshold(string value, float threshold, JudgeRange range, float _timing, string _targetInputKey, string _actionKey, ref bool _judgeDone)
		{
		}

		[Token(Token = "0x6001375")]
		[Address(RVA = "0x19FE0BC", Offset = "0x19FE0BC", VA = "0x19FE0BC")]
		public FPRugbyInputJudgeAction()
		{
		}
	}
	[Token(Token = "0x20004C5")]
	public class LegacyGnuManager : MonoBehaviour
	{
		[Token(Token = "0x4001A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip _voice_Woo;

		[Token(Token = "0x4001A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _opponentSlip;

		[Token(Token = "0x4001A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AudioClip _gnu_footstep_0;

		[Token(Token = "0x4001A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private AudioClip _gnu_footstep_1;

		[Token(Token = "0x4001A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Animator gneAnimator;

		[Token(Token = "0x4001A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private AudioSource _audio;

		[Token(Token = "0x4001A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioSource footSteps;

		[Token(Token = "0x4001A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int OpponentTackle;

		[Token(Token = "0x4001A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private IDisposable _disposable;

		[Token(Token = "0x4001A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float lastBeat;

		[Token(Token = "0x4001A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool footstepSwitch;

		[Token(Token = "0x170001BF")]
		[Inject]
		private ISubscriber<(FPActionData, string)> OnFPAction
		{
			[Token(Token = "0x6001379")]
			[Address(RVA = "0x19FE124", Offset = "0x19FE124", VA = "0x19FE124")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600137A")]
			[Address(RVA = "0x19FE12C", Offset = "0x19FE12C", VA = "0x19FE12C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170001C0")]
		[Inject]
		private ISubscriber<BeatData> OnBeat
		{
			[Token(Token = "0x600137B")]
			[Address(RVA = "0x19FE134", Offset = "0x19FE134", VA = "0x19FE134")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600137C")]
			[Address(RVA = "0x19FE13C", Offset = "0x19FE13C", VA = "0x19FE13C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x600137D")]
		[Address(RVA = "0x19FE144", Offset = "0x19FE144", VA = "0x19FE144")]
		private void Start()
		{
		}

		[Token(Token = "0x600137E")]
		[Address(RVA = "0x19FE2A4", Offset = "0x19FE2A4", VA = "0x19FE2A4")]
		private void DoAction(FPActionData value)
		{
		}

		[Token(Token = "0x600137F")]
		[Address(RVA = "0x19FE500", Offset = "0x19FE500", VA = "0x19FE500")]
		public void StopBeat()
		{
		}

		[Token(Token = "0x6001380")]
		[Address(RVA = "0x19FE5A0", Offset = "0x19FE5A0", VA = "0x19FE5A0")]
		public LegacyGnuManager()
		{
		}
	}
	[Token(Token = "0x20004C6")]
	public class RugbyFitPatternStatus
	{
		[Token(Token = "0x170001C1")]
		public bool CatchSuccess
		{
			[Token(Token = "0x6001384")]
			[Address(RVA = "0x19FE680", Offset = "0x19FE680", VA = "0x19FE680")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001385")]
			[Address(RVA = "0x19FE688", Offset = "0x19FE688", VA = "0x19FE688")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170001C2")]
		public bool PassSuccess
		{
			[Token(Token = "0x6001386")]
			[Address(RVA = "0x19FE694", Offset = "0x19FE694", VA = "0x19FE694")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001387")]
			[Address(RVA = "0x19FE69C", Offset = "0x19FE69C", VA = "0x19FE69C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170001C3")]
		public bool DodgeSuccess
		{
			[Token(Token = "0x6001388")]
			[Address(RVA = "0x19FE6A8", Offset = "0x19FE6A8", VA = "0x19FE6A8")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001389")]
			[Address(RVA = "0x19FE6B0", Offset = "0x19FE6B0", VA = "0x19FE6B0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170001C4")]
		public bool HoldingBall
		{
			[Token(Token = "0x600138A")]
			[Address(RVA = "0x19FE6BC", Offset = "0x19FE6BC", VA = "0x19FE6BC")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600138B")]
			[Address(RVA = "0x19FE6C4", Offset = "0x19FE6C4", VA = "0x19FE6C4")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170001C5")]
		public bool isinterrupted
		{
			[Token(Token = "0x600138C")]
			[Address(RVA = "0x19FE6D0", Offset = "0x19FE6D0", VA = "0x19FE6D0")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600138D")]
			[Address(RVA = "0x19FE6D8", Offset = "0x19FE6D8", VA = "0x19FE6D8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x600138E")]
		[Address(RVA = "0x19FE6E4", Offset = "0x19FE6E4", VA = "0x19FE6E4")]
		public RugbyFitPatternStatus()
		{
		}
	}
	[Token(Token = "0x20004C7")]
	public class RugbyFitPatternStatusManager : MonoBehaviour
	{
		[Token(Token = "0x4001A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Inject]
		private RugbyFitPatternStatus _rugbyFitPatternStatus;

		[Token(Token = "0x170001C6")]
		[Inject]
		private ISubscriber<FPActionData> OnFPAction
		{
			[Token(Token = "0x600138F")]
			[Address(RVA = "0x19FE6EC", Offset = "0x19FE6EC", VA = "0x19FE6EC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001390")]
			[Address(RVA = "0x19FE6F4", Offset = "0x19FE6F4", VA = "0x19FE6F4")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001391")]
		[Address(RVA = "0x19FE6FC", Offset = "0x19FE6FC", VA = "0x19FE6FC")]
		internal void StartSubscribeEvent(List<FPActionEventBase> _fpActionEvents)
		{
		}

		[Token(Token = "0x6001392")]
		[Address(RVA = "0x19FE828", Offset = "0x19FE828", VA = "0x19FE828")]
		public RugbyFitPatternStatusManager()
		{
		}
	}
}
namespace __Imacreate__.__Production__.GrooveFitGames.GF0_Tennis
{
	[Token(Token = "0x20004C8")]
	public class CheckRacketGrab : EventBlock
	{
		[StructLayout(3)]
		[Token(Token = "0x20004C9")]
		[CompilerGenerated]
		private struct <SetEvent>d__7 : IAsyncStateMachine
		{
			[Token(Token = "0x4001A65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001A66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x4001A67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CheckRacketGrab <>4__this;

			[Token(Token = "0x4001A68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken token;

			[Token(Token = "0x4001A69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6001396")]
			[Address(RVA = "0x19FEA30", Offset = "0x19FEA30", VA = "0x19FEA30", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001397")]
			[Address(RVA = "0x19FF118", Offset = "0x19FF118", VA = "0x19FF118", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ESKeys _esKeys;

		[Token(Token = "0x4001A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SelectRacketHandEvent _selectRacket;

		[Token(Token = "0x4001A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _racket;

		[Token(Token = "0x4001A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private RacketHaptics _haptics;

		[Token(Token = "0x4001A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Inject]
		private InputProvider _inputProvider;

		[Token(Token = "0x4001A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[Tooltip("Invoked on grab with bool: true if RightHand, false if LeftHand")]
		private UnityEvent<bool> OnGrabEvent;

		[Token(Token = "0x4001A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GrabRacketHandController _grabRacketHandController;

		[Token(Token = "0x6001394")]
		[Address(RVA = "0x19FE944", Offset = "0x19FE944", VA = "0x19FE944", Slot = "4")]
		[AsyncStateMachine(typeof(<SetEvent>d__7))]
		public override UniTask<bool> SetEvent(CancellationToken token)
		{
			return default(UniTask<bool>);
		}

		[Token(Token = "0x6001395")]
		[Address(RVA = "0x19FEA20", Offset = "0x19FEA20", VA = "0x19FEA20")]
		public CheckRacketGrab()
		{
		}
	}
	[Token(Token = "0x20004CA")]
	public class GrabRacketHandController : MonoBehaviour
	{
		[Token(Token = "0x4001A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Inject]
		private InputProvider _inputProvider;

		[Token(Token = "0x4001A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _isGrabRacket;

		[Token(Token = "0x4001A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private VRHand.HandType _grabGand;

		[Token(Token = "0x170001C7")]
		[Inject]
		private ISubscriber<OnPause> OnPauseEvent
		{
			[Token(Token = "0x6001398")]
			[Address(RVA = "0x19FF170", Offset = "0x19FF170", VA = "0x19FF170")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001399")]
			[Address(RVA = "0x19FF178", Offset = "0x19FF178", VA = "0x19FF178")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x600139A")]
		[Address(RVA = "0x19FF180", Offset = "0x19FF180", VA = "0x19FF180")]
		private void Start()
		{
		}

		[Token(Token = "0x600139B")]
		[Address(RVA = "0x19FF108", Offset = "0x19FF108", VA = "0x19FF108")]
		public void SaveGrabRacketHand(VRHand.HandType hand)
		{
		}

		[Token(Token = "0x600139C")]
		[Address(RVA = "0x19FF2AC", Offset = "0x19FF2AC", VA = "0x19FF2AC")]
		public void ChangeGrabRacketHand(bool active)
		{
		}

		[Token(Token = "0x600139D")]
		[Address(RVA = "0x19FF2E8", Offset = "0x19FF2E8", VA = "0x19FF2E8")]
		public GrabRacketHandController()
		{
		}
	}
	[Token(Token = "0x20004CB")]
	public class RacketHaptics : MonoBehaviour
	{
		[Token(Token = "0x4001A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[ReadOnly]
		public VRHand.HandType _racketHand;

		[Token(Token = "0x4001A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Inject]
		private InputProvider _inputProvider;

		[Token(Token = "0x4001A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float _strength;

		[Token(Token = "0x4001A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float _time;

		[Token(Token = "0x170001C8")]
		[Inject]
		private ISubscriber<FPActionData> OnFPAction
		{
			[Token(Token = "0x600139F")]
			[Address(RVA = "0x19FF35C", Offset = "0x19FF35C", VA = "0x19FF35C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60013A0")]
			[Address(RVA = "0x19FF364", Offset = "0x19FF364", VA = "0x19FF364")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x60013A1")]
		[Address(RVA = "0x19FF36C", Offset = "0x19FF36C", VA = "0x19FF36C")]
		private void Start()
		{
		}

		[Token(Token = "0x60013A2")]
		[Address(RVA = "0x19FF498", Offset = "0x19FF498", VA = "0x19FF498")]
		public RacketHaptics()
		{
		}
	}
	[Token(Token = "0x20004CC")]
	public class RhythmTennisAnimationCurveController : MonoBehaviour
	{
		[Token(Token = "0x4001A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _shotGreat;

		[Token(Token = "0x4001A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _shotOK;

		[Token(Token = "0x4001A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CustomAnimationCurve _customAnimationCurveJust;

		[Token(Token = "0x4001A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CustomAnimationCurve _customAnimationCurveNear;

		[Token(Token = "0x4001A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly float _value;

		[Token(Token = "0x4001A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private readonly float _maxRightValue;

		[Token(Token = "0x4001A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly float _maxLeftValue;

		[Token(Token = "0x4001A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private readonly float _okShotAddValue;

		[Token(Token = "0x4001A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private RhythmTennisInputKeys _inputKey;

		[Token(Token = "0x170001C9")]
		[Inject]
		private ISubscriber<FPActionData> OnFPAction
		{
			[Token(Token = "0x60013A4")]
			[Address(RVA = "0x19FF4F4", Offset = "0x19FF4F4", VA = "0x19FF4F4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60013A5")]
			[Address(RVA = "0x19FF4FC", Offset = "0x19FF4FC", VA = "0x19FF4FC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x60013A6")]
		[Address(RVA = "0x19FF504", Offset = "0x19FF504", VA = "0x19FF504")]
		private void Start()
		{
		}

		[Token(Token = "0x60013A7")]
		[Address(RVA = "0x19FF68C", Offset = "0x19FF68C", VA = "0x19FF68C")]
		public RhythmTennisAnimationCurveController()
		{
		}
	}
	[Token(Token = "0x20004CD")]
	[RequireComponent(typeof(GrooveFitAudioSource))]
	public class RhythmTennisBallSound : MonoBehaviour
	{
		[Token(Token = "0x4001A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioClip _bound;

		[Token(Token = "0x4001A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip _hitGreat;

		[Token(Token = "0x4001A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip _hitOk;

		[Token(Token = "0x4001A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _hitBad;

		[Token(Token = "0x4001A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AudioClip _hitSmash;

		[Token(Token = "0x4001A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private AudioSource _audio;

		[Token(Token = "0x170001CA")]
		[Inject]
		private ISubscriber<FPActionData> OnFPAction
		{
			[Token(Token = "0x60013A9")]
			[Address(RVA = "0x19FFC90", Offset = "0x19FFC90", VA = "0x19FFC90")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60013AA")]
			[Address(RVA = "0x19FFC98", Offset = "0x19FFC98", VA = "0x19FFC98")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x60013AB")]
		[Address(RVA = "0x19FFCA0", Offset = "0x19FFCA0", VA = "0x19FFCA0")]
		private void Start()
		{
		}

		[Token(Token = "0x60013AC")]
		[Address(RVA = "0x19FFE00", Offset = "0x19FFE00", VA = "0x19FFE00")]
		private void PlaySound(FPActionData value)
		{
		}

		[Token(Token = "0x60013AD")]
		[Address(RVA = "0x19FFF40", Offset = "0x19FFF40", VA = "0x19FFF40")]
		public RhythmTennisBallSound()
		{
		}
	}
	[Token(Token = "0x20004CE")]
	public class RhythmTennisCalibrationDataApply : MonoBehaviour
	{
		[Token(Token = "0x4001A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject[] _heightUpObjects;

		[Token(Token = "0x4001A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject[] _heightDownObjects;

		[Token(Token = "0x4001A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject[] _swingEreaRight;

		[Token(Token = "0x4001A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject[] _swingEreaLeft;

		[Token(Token = "0x4001A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject[] _swingEreaSmash;

		[Token(Token = "0x4001A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly float _headHeightBase;

		[Token(Token = "0x4001A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private readonly float _rightHandLengthBase;

		[Token(Token = "0x4001A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly float _leftHandLengthBase;

		[Token(Token = "0x4001A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float _headHeight;

		[Token(Token = "0x4001A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float _rightHandLength;

		[Token(Token = "0x4001A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float _leftHandLength;

		[Token(Token = "0x4001A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float _headHeightDifference;

		[Token(Token = "0x4001A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float _rightHandLengthDifference;

		[Token(Token = "0x4001A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _leftHandLengthDifference;

		[Token(Token = "0x60013AF")]
		[Address(RVA = "0x19FFF4C", Offset = "0x19FFF4C", VA = "0x19FFF4C")]
		private void Start()
		{
		}

		[Token(Token = "0x60013B0")]
		[Address(RVA = "0x1A00394", Offset = "0x1A00394", VA = "0x1A00394")]
		public RhythmTennisCalibrationDataApply()
		{
		}
	}
	[Token(Token = "0x20004CF")]
	[RequireComponent(typeof(AudioSource))]
	public class RhythmTennisInputPublisher : InputPublisher
	{
		[Token(Token = "0x4001A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Objects")]
		[SerializeField]
		private Transform _racketFace;

		[Token(Token = "0x4001A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("Settings")]
		[SerializeField]
		private AudioClip _swingSound;

		[Token(Token = "0x4001A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float _shotThreshold;

		[Token(Token = "0x4001A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private StringReactiveProperty _inputMessage;

		[Token(Token = "0x4001A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AudioSource _audio;

		[Token(Token = "0x4001A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 _posRacketFaceOld;

		[Token(Token = "0x4001A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 _posRacketFaceNew;

		[Token(Token = "0x4001A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 _racketFaceVelocity;

		[Token(Token = "0x4001A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool _isPauseNow;

		[Token(Token = "0x170001CB")]
		[Inject]
		private ISubscriber<OnPause> OnPauseEvent
		{
			[Token(Token = "0x60013B1")]
			[Address(RVA = "0x1A003B4", Offset = "0x1A003B4", VA = "0x1A003B4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60013B2")]
			[Address(RVA = "0x1A003BC", Offset = "0x1A003BC", VA = "0x1A003BC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170001CC")]
		public override StringReactiveProperty InputMessage
		{
			[Token(Token = "0x60013B6")]
			[Address(RVA = "0x1A00704", Offset = "0x1A00704", VA = "0x1A00704", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013B7")]
			[Address(RVA = "0x1A0070C", Offset = "0x1A0070C", VA = "0x1A0070C", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x60013B3")]
		[Address(RVA = "0x1A003C4", Offset = "0x1A003C4", VA = "0x1A003C4")]
		private void Start()
		{
		}

		[Token(Token = "0x60013B4")]
		[Address(RVA = "0x1A00564", Offset = "0x1A00564", VA = "0x1A00564")]
		private void Update()
		{
		}

		[Token(Token = "0x60013B5")]
		[Address(RVA = "0x1A005D8", Offset = "0x1A005D8", VA = "0x1A005D8")]
		public bool OnHit(RhythmTennisInputKeys rhythmTennisInputKeys)
		{
			return default(bool);
		}

		[Token(Token = "0x60013B8")]
		[Address(RVA = "0x1A00714", Offset = "0x1A00714", VA = "0x1A00714")]
		public RhythmTennisInputPublisher()
		{
		}
	}
	[Token(Token = "0x20004D0")]
	public enum RhythmTennisEventKeys
	{
		[Token(Token = "0x4001A9D")]
		TakozoLeftShot = 0,
		[Token(Token = "0x4001A9E")]
		TakozoRightShot = 1,
		[Token(Token = "0x4001A9F")]
		TakozoSmashShot = 16,
		[Token(Token = "0x4001AA0")]
		VoiceFu = 2,
		[Token(Token = "0x4001AA1")]
		VoiceHo = 3,
		[Token(Token = "0x4001AA2")]
		VoiceMigi = 4,
		[Token(Token = "0x4001AA3")]
		VoiceHidari = 5,
		[Token(Token = "0x4001AA4")]
		VoiceSmash = 6,
		[Token(Token = "0x4001AA5")]
		CurveRightShort = 7,
		[Token(Token = "0x4001AA6")]
		RightShot = 8,
		[Token(Token = "0x4001AA7")]
		CurveLeftShort = 9,
		[Token(Token = "0x4001AA8")]
		LeftShot = 10,
		[Token(Token = "0x4001AA9")]
		CurveRightLong = 11,
		[Token(Token = "0x4001AAA")]
		CurveLeftLong = 12,
		[Token(Token = "0x4001AAB")]
		CurveSmash = 13,
		[Token(Token = "0x4001AAC")]
		Smash = 14,
		[Token(Token = "0x4001AAD")]
		Bound = 15
	}
	[Token(Token = "0x20004D1")]
	public enum RhythmTennisInputKeys
	{
		[Token(Token = "0x4001AAF")]
		Right,
		[Token(Token = "0x4001AB0")]
		Left,
		[Token(Token = "0x4001AB1")]
		Smash,
		[Token(Token = "0x4001AB2")]
		None
	}
	[Token(Token = "0x20004D2")]
	public class RhythmTennisPracticeClearCounter : PracticeClearCounter
	{
		[Token(Token = "0x20004D3")]
		private enum PracticeType
		{
			[Token(Token = "0x4001AB7")]
			Short,
			[Token(Token = "0x4001AB8")]
			Long,
			[Token(Token = "0x4001AB9")]
			Smash
		}

		[Token(Token = "0x4001AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PracticeType _practiceType;

		[Token(Token = "0x4001AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private BoolReactiveProperty _clearMessage;

		[Token(Token = "0x170001CD")]
		[Inject]
		private ISubscriber<FPActionData> OnFPAction
		{
			[Token(Token = "0x60013BA")]
			[Address(RVA = "0x1A00760", Offset = "0x1A00760", VA = "0x1A00760")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60013BB")]
			[Address(RVA = "0x1A00768", Offset = "0x1A00768", VA = "0x1A00768")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170001CE")]
		public override BoolReactiveProperty ClearMessage
		{
			[Token(Token = "0x60013BF")]
			[Address(RVA = "0x1A00AB8", Offset = "0x1A00AB8", VA = "0x1A00AB8", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013C0")]
			[Address(RVA = "0x1A00AC0", Offset = "0x1A00AC0", VA = "0x1A00AC0", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x60013BC")]
		[Address(RVA = "0x1A00770", Offset = "0x1A00770", VA = "0x1A00770")]
		private void Start()
		{
		}

		[Token(Token = "0x60013BD")]
		[Address(RVA = "0x1A008DC", Offset = "0x1A008DC", VA = "0x1A008DC")]
		private void ShotCount(FPActionData data)
		{
		}

		[Token(Token = "0x60013BE")]
		[Address(RVA = "0x1A009E8", Offset = "0x1A009E8", VA = "0x1A009E8")]
		private void SmashCount(FPActionData data)
		{
		}

		[Token(Token = "0x60013C1")]
		[Address(RVA = "0x1A00AC8", Offset = "0x1A00AC8", VA = "0x1A00AC8")]
		public RhythmTennisPracticeClearCounter()
		{
		}
	}
	[Token(Token = "0x20004D4")]
	[RequireComponent(typeof(AudioSource))]
	public class SelectRacketHandEvent : EventBlock
	{
		[StructLayout(3)]
		[Token(Token = "0x20004D5")]
		[CompilerGenerated]
		private struct <SetEvent>d__12 : IAsyncStateMachine
		{
			[Token(Token = "0x4001AC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001AC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x4001AC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SelectRacketHandEvent <>4__this;

			[Token(Token = "0x4001AC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken token;

			[Token(Token = "0x4001ACA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x60013C6")]
			[Address(RVA = "0x1A00D58", Offset = "0x1A00D58", VA = "0x1A00D58", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60013C7")]
			[Address(RVA = "0x1A01588", Offset = "0x1A01588", VA = "0x1A01588", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20004D6")]
		[CompilerGenerated]
		private struct <RacketCatchAsync>d__13 : IAsyncStateMachine
		{
			[Token(Token = "0x4001ACB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001ACC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001ACD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SelectRacketHandEvent <>4__this;

			[Token(Token = "0x4001ACE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CancellationToken token;

			[Token(Token = "0x4001ACF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x60013C8")]
			[Address(RVA = "0x1A015E0", Offset = "0x1A015E0", VA = "0x1A015E0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60013C9")]
			[Address(RVA = "0x1A01F20", Offset = "0x1A01F20", VA = "0x1A01F20", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[ReadOnly]
		public bool _selected;

		[Token(Token = "0x4001ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float _racketDistanceRightHand;

		[Token(Token = "0x4001ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float _racketDistanceLeftHand;

		[Token(Token = "0x4001ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private ESKeys _esKeys;

		[Token(Token = "0x4001ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _racket;

		[Token(Token = "0x4001ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private RacketHaptics _hapticsProvider;

		[Token(Token = "0x4001AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AudioClip _selectedSound;

		[Token(Token = "0x4001AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GrabRacketHandController _grabRacketHandController;

		[Token(Token = "0x4001AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private bool _rotateOnLeftHanded;

		[Token(Token = "0x4001AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[Tooltip("Invoked on grab with bool: true if RightHand, false if LeftHand")]
		private UnityEvent<bool> OnGrabEvent;

		[Token(Token = "0x4001AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private AudioSource _audio;

		[Token(Token = "0x4001AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Inject]
		private InputProvider _inputProvider;

		[Token(Token = "0x60013C3")]
		[Address(RVA = "0x1A00AEC", Offset = "0x1A00AEC", VA = "0x1A00AEC", Slot = "4")]
		[AsyncStateMachine(typeof(<SetEvent>d__12))]
		public override UniTask<bool> SetEvent(CancellationToken token)
		{
			return default(UniTask<bool>);
		}

		[Token(Token = "0x60013C4")]
		[Address(RVA = "0x1A00BC8", Offset = "0x1A00BC8", VA = "0x1A00BC8")]
		[AsyncStateMachine(typeof(<RacketCatchAsync>d__13))]
		private UniTask RacketCatchAsync(CancellationToken token)
		{
			return default(UniTask);
		}

		[Token(Token = "0x60013C5")]
		[Address(RVA = "0x1A00D48", Offset = "0x1A00D48", VA = "0x1A00D48")]
		public SelectRacketHandEvent()
		{
		}
	}
	[Token(Token = "0x20004D7")]
	public class TakozoActionManager : MonoBehaviour
	{
		[Token(Token = "0x20004D8")]
		private enum State
		{
			[Token(Token = "0x4001AE3")]
			IsTalkPosition,
			[Token(Token = "0x4001AE4")]
			IsMoving,
			[Token(Token = "0x4001AE5")]
			IsTennisPosition
		}

		[StructLayout(3)]
		[Token(Token = "0x20004D9")]
		[CompilerGenerated]
		private struct <MoveToTennisPosition>d__28 : IAsyncStateMachine
		{
			[Token(Token = "0x4001AE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001AE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001AE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public TakozoActionManager <>4__this;

			[Token(Token = "0x4001AE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CancellationToken token;

			[Token(Token = "0x4001AEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x60013DB")]
			[Address(RVA = "0x1A02A60", Offset = "0x1A02A60", VA = "0x1A02A60", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60013DC")]
			[Address(RVA = "0x1A03740", Offset = "0x1A03740", VA = "0x1A03740", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Takozo")]
		[SerializeField]
		private Transform _Takozo;

		[Token(Token = "0x4001AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource _audio;

		[Token(Token = "0x4001AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Animator _animator;

		[Token(Token = "0x4001AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private LookAtIK _lookAtIk;

		[Token(Token = "0x4001AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Header("Audio")]
		[SerializeField]
		private AudioClip _fu;

		[Token(Token = "0x4001AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private AudioClip _ho;

		[Token(Token = "0x4001AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private AudioClip _migi;

		[Token(Token = "0x4001AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioClip _hidari;

		[Token(Token = "0x4001AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioClip _smash;

		[Token(Token = "0x4001ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[Header("Position")]
		[SerializeField]
		private Transform TennisPosition;

		[Token(Token = "0x4001ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Transform TalkPosition;

		[Token(Token = "0x4001ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Transform JumpPosition;

		[Token(Token = "0x4001ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Transform JumpEndPosition;

		[Token(Token = "0x4001ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private State _state;

		[Token(Token = "0x4001AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private CancellationTokenSource TakozoCancellationTokenSource;

		[Token(Token = "0x4001AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public float speed;

		[Token(Token = "0x170001CF")]
		[Inject]
		private ISubscriber<FPActionData> OnFPAction
		{
			[Token(Token = "0x60013CA")]
			[Address(RVA = "0x1A01F2C", Offset = "0x1A01F2C", VA = "0x1A01F2C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60013CB")]
			[Address(RVA = "0x1A01F34", Offset = "0x1A01F34", VA = "0x1A01F34")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170001D0")]
		[Inject]
		private ISubscriber<CharacterActionData> OnCharacterAction
		{
			[Token(Token = "0x60013CC")]
			[Address(RVA = "0x1A01F3C", Offset = "0x1A01F3C", VA = "0x1A01F3C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60013CD")]
			[Address(RVA = "0x1A01F44", Offset = "0x1A01F44", VA = "0x1A01F44")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x60013CE")]
		[Address(RVA = "0x1A01F4C", Offset = "0x1A01F4C", VA = "0x1A01F4C")]
		private void Start()
		{
		}

		[Token(Token = "0x60013CF")]
		[Address(RVA = "0x1A02210", Offset = "0x1A02210", VA = "0x1A02210")]
		private void DoFPAction(FPActionData value)
		{
		}

		[Token(Token = "0x60013D0")]
		[Address(RVA = "0x1A02388", Offset = "0x1A02388", VA = "0x1A02388")]
		private void DoCharacterAction(CharacterActionData data)
		{
		}

		[Token(Token = "0x60013D1")]
		[Address(RVA = "0x1A02568", Offset = "0x1A02568", VA = "0x1A02568")]
		[AsyncStateMachine(typeof(<MoveToTennisPosition>d__28))]
		private UniTask MoveToTennisPosition(CancellationToken token)
		{
			return default(UniTask);
		}

		[Token(Token = "0x60013D2")]
		[Address(RVA = "0x1A026E8", Offset = "0x1A026E8", VA = "0x1A026E8")]
		private void Reset()
		{
		}

		[Token(Token = "0x60013D3")]
		[Address(RVA = "0x1A0274C", Offset = "0x1A0274C", VA = "0x1A0274C")]
		private void ResetDelayed()
		{
		}

		[Token(Token = "0x60013D4")]
		[Address(RVA = "0x1A02870", Offset = "0x1A02870", VA = "0x1A02870")]
		private void ResetTriggers()
		{
		}

		[Token(Token = "0x60013D5")]
		[Address(RVA = "0x1A02964", Offset = "0x1A02964", VA = "0x1A02964")]
		private float CalcDuration(Transform from, Transform to, float speed)
		{
			return default(float);
		}

		[Token(Token = "0x60013D6")]
		[Address(RVA = "0x1A02808", Offset = "0x1A02808", VA = "0x1A02808")]
		private void ChangeState(State state)
		{
		}

		[Token(Token = "0x60013D7")]
		[Address(RVA = "0x1A02A34", Offset = "0x1A02A34", VA = "0x1A02A34")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60013D8")]
		[Address(RVA = "0x1A02A48", Offset = "0x1A02A48", VA = "0x1A02A48")]
		public TakozoActionManager()
		{
		}
	}
	[Token(Token = "0x20004DA")]
	public class TennisBallEffectController : MonoBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x20004DB")]
		[CompilerGenerated]
		private struct <EffectDestroy>d__4 : IAsyncStateMachine
		{
			[Token(Token = "0x4001AED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001AEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001AEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TennisBallEffectController <>4__this;

			[Token(Token = "0x4001AF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x60013E1")]
			[Address(RVA = "0x1A03948", Offset = "0x1A03948", VA = "0x1A03948", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60013E2")]
			[Address(RVA = "0x1A03CAC", Offset = "0x1A03CAC", VA = "0x1A03CAC", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GameObject _tennisBall;

		[Token(Token = "0x4001AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _isTennisBallDestroy;

		[Token(Token = "0x60013DD")]
		[Address(RVA = "0x1A0374C", Offset = "0x1A0374C", VA = "0x1A0374C")]
		private void Start()
		{
		}

		[Token(Token = "0x60013DE")]
		[Address(RVA = "0x1A037A8", Offset = "0x1A037A8", VA = "0x1A037A8")]
		private void Update()
		{
		}

		[Token(Token = "0x60013DF")]
		[Address(RVA = "0x1A0388C", Offset = "0x1A0388C", VA = "0x1A0388C")]
		[AsyncStateMachine(typeof(<EffectDestroy>d__4))]
		private void EffectDestroy()
		{
		}

		[Token(Token = "0x60013E0")]
		[Address(RVA = "0x1A03940", Offset = "0x1A03940", VA = "0x1A03940")]
		public TennisBallEffectController()
		{
		}
	}
	[Token(Token = "0x20004DC")]
	public class TennisBallRotater : MonoBehaviour
	{
		[Token(Token = "0x4001AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float xAngle;

		[Token(Token = "0x4001AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float yAngle;

		[Token(Token = "0x4001AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float zAngle;

		[Token(Token = "0x4001AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float _maxValue;

		[Token(Token = "0x60013E3")]
		[Address(RVA = "0x1A03CB8", Offset = "0x1A03CB8", VA = "0x1A03CB8")]
		private void Start()
		{
		}

		[Token(Token = "0x60013E4")]
		[Address(RVA = "0x1A03D04", Offset = "0x1A03D04", VA = "0x1A03D04")]
		private void Update()
		{
		}

		[Token(Token = "0x60013E5")]
		[Address(RVA = "0x1A03D4C", Offset = "0x1A03D4C", VA = "0x1A03D4C")]
		public TennisBallRotater()
		{
		}
	}
}
namespace __Imacreate__.__Production__.GrooveFitGames.GF0_Tennis.FitPattern
{
	[Token(Token = "0x20004DD")]
	public class RhythmTennisFPActionSubscribeEvent : FPActionSubscribeEvent
	{
		[Serializable]
		[Token(Token = "0x20004DE")]
		private class RhythmTennisFPActionEvent : FPActionEventBase
		{
			[Token(Token = "0x4001AF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[SerializeField]
			private RhythmTennisEventKeys Key;

			[Token(Token = "0x60013E8")]
			[Address(RVA = "0x1A03DE0", Offset = "0x1A03DE0", VA = "0x1A03DE0", Slot = "4")]
			public override string GetKey()
			{
				return null;
			}

			[Token(Token = "0x60013E9")]
			[Address(RVA = "0x1A03E48", Offset = "0x1A03E48", VA = "0x1A03E48")]
			public RhythmTennisFPActionEvent()
			{
			}
		}

		[Token(Token = "0x4001AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<RhythmTennisFPActionEvent> _rhythmTennisFPActionEvent;

		[Token(Token = "0x60013E6")]
		[Address(RVA = "0x1A03D5C", Offset = "0x1A03D5C", VA = "0x1A03D5C")]
		private void Start()
		{
		}

		[Token(Token = "0x60013E7")]
		[Address(RVA = "0x1A03DD8", Offset = "0x1A03DD8", VA = "0x1A03DD8")]
		public RhythmTennisFPActionSubscribeEvent()
		{
		}
	}
	[Token(Token = "0x20004DF")]
	public class RhythmTennisFPInputJudgeAction : FPInputJudgeAction
	{
		[Token(Token = "0x4001AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private RhythmTennisEventKeys _actionKeyEnum;

		[Token(Token = "0x4001AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private RhythmTennisInputKeys _inputKeyEnum;

		[Token(Token = "0x60013EA")]
		[Address(RVA = "0x1A03E50", Offset = "0x1A03E50", VA = "0x1A03E50")]
		private void Awake()
		{
		}

		[Token(Token = "0x60013EB")]
		[Address(RVA = "0x1A03F10", Offset = "0x1A03F10", VA = "0x1A03F10")]
		public RhythmTennisFPInputJudgeAction()
		{
		}
	}
	[Token(Token = "0x20004E0")]
	public class RhythmTennisFPNoJudgementAction : FPNoJudgementAction
	{
		[Serializable]
		[Token(Token = "0x20004E1")]
		private class ActionParam : ActionParamBase
		{
			[Token(Token = "0x4001AFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			private List<RhythmTennisEventKeys> ActionKeys;

			[Token(Token = "0x60013EE")]
			[Address(RVA = "0x1A03FB8", Offset = "0x1A03FB8", VA = "0x1A03FB8", Slot = "4")]
			public override List<string> GetKeyFromActionKeys()
			{
				return null;
			}

			[Token(Token = "0x60013EF")]
			[Address(RVA = "0x1A040C0", Offset = "0x1A040C0", VA = "0x1A040C0")]
			public ActionParam()
			{
			}
		}

		[Token(Token = "0x4001AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private List<ActionParam> actions;

		[Token(Token = "0x60013EC")]
		[Address(RVA = "0x1A03F18", Offset = "0x1A03F18", VA = "0x1A03F18", Slot = "4")]
		protected override void BeatSubscribeAction(float currentBeat)
		{
		}

		[Token(Token = "0x60013ED")]
		[Address(RVA = "0x1A03FB0", Offset = "0x1A03FB0", VA = "0x1A03FB0")]
		public RhythmTennisFPNoJudgementAction()
		{
		}
	}
}
namespace __Imacreate__.__Production__.GrooveFitGames.GF10_Fishing
{
	[Token(Token = "0x20004E3")]
	public class FishingLureEffectManager : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20004E4")]
		private struct FishingEffect
		{
			[Token(Token = "0x4001B00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FishingEventKeys EventKey;

			[Token(Token = "0x4001B01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public List<ParticleSystem> Particles;
		}

		[Token(Token = "0x4001AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<FishingEffect> _fishingEffects;

		[Token(Token = "0x4001AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<FishingEventKeys, List<ParticleSystem>> _fishingEffectDict;

		[Token(Token = "0x170001D1")]
		[Inject]
		private ISubscriber<FPActionData> OnFPAction
		{
			[Token(Token = "0x60013F3")]
			[Address(RVA = "0x1A041A4", Offset = "0x1A041A4", VA = "0x1A041A4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60013F4")]
			[Address(RVA = "0x1A041AC", Offset = "0x1A041AC", VA = "0x1A041AC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x60013F5")]
		[Address(RVA = "0x1A041B4", Offset = "0x1A041B4", VA = "0x1A041B4")]
		private void Start()
		{
		}

		[Token(Token = "0x60013F6")]
		[Address(RVA = "0x1A04490", Offset = "0x1A04490", VA = "0x1A04490")]
		private void Update()
		{
		}

		[Token(Token = "0x60013F7")]
		[Address(RVA = "0x1A04494", Offset = "0x1A04494", VA = "0x1A04494")]
		public FishingLureEffectManager()
		{
		}
	}
	[Token(Token = "0x20004E5")]
	public class CheckRodGrab : EventBlock
	{
		[StructLayout(3)]
		[Token(Token = "0x20004E6")]
		[CompilerGenerated]
		private struct <SetEvent>d__7 : IAsyncStateMachine
		{
			[Token(Token = "0x4001B09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001B0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x4001B0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CheckRodGrab <>4__this;

			[Token(Token = "0x4001B0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken token;

			[Token(Token = "0x4001B0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x60013FB")]
			[Address(RVA = "0x1A04AC0", Offset = "0x1A04AC0", VA = "0x1A04AC0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60013FC")]
			[Address(RVA = "0x1A05450", Offset = "0x1A05450", VA = "0x1A05450", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SelectRodHandEvent _selectRodHand;

		[Token(Token = "0x4001B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private RodController _rodController;

		[Token(Token = "0x4001B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private RodGripEventBlock _rodGripEvent;

		[Token(Token = "0x4001B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform _rodPivot;

		[Token(Token = "0x4001B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private FishingCheckBothHand _fishingCheckBothHand;

		[Token(Token = "0x4001B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GrabRodHandController _grabRodHandController;

		[Token(Token = "0x4001B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Inject]
		private InputProvider _inputProvider;

		[Token(Token = "0x60013F9")]
		[Address(RVA = "0x1A049DC", Offset = "0x1A049DC", VA = "0x1A049DC", Slot = "4")]
		[AsyncStateMachine(typeof(<SetEvent>d__7))]
		public override UniTask<bool> SetEvent(CancellationToken token)
		{
			return default(UniTask<bool>);
		}

		[Token(Token = "0x60013FA")]
		[Address(RVA = "0x1A04AB8", Offset = "0x1A04AB8", VA = "0x1A04AB8")]
		public CheckRodGrab()
		{
		}
	}
	[Token(Token = "0x20004E7")]
	[RequireComponent(typeof(AudioSource))]
	public class FishingCheckBothHand : MonoBehaviour
	{
		[Token(Token = "0x4001B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private RodController _rodController;

		[Token(Token = "0x4001B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[Tooltip("メドレー時は不要")]
		private RodGripEventBlock _rodGripEvent;

		[Token(Token = "0x4001B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip _gripOnSound;

		[Token(Token = "0x4001B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _gripOffSound;

		[Token(Token = "0x4001B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _bothHandGrip;

		[Token(Token = "0x4001B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private AudioSource _audio;

		[Token(Token = "0x4001B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Inject]
		private InputProvider _inputProvider;

		[Token(Token = "0x4001B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _grabHandLeft;

		[Token(Token = "0x4001B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _grabHandRight;

		[Token(Token = "0x4001B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject _grabHandSave;

		[Token(Token = "0x4001B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private SkinnedMeshRenderer _handSkinnedMeshRenderer;

		[Token(Token = "0x4001B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private AudioClip _grabSE;

		[Token(Token = "0x170001D2")]
		[Inject]
		private ISubscriber<OnPause> OnPauseEvent
		{
			[Token(Token = "0x60013FD")]
			[Address(RVA = "0x1A054A8", Offset = "0x1A054A8", VA = "0x1A054A8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60013FE")]
			[Address(RVA = "0x1A054B0", Offset = "0x1A054B0", VA = "0x1A054B0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x60013FF")]
		[Address(RVA = "0x1A054B8", Offset = "0x1A054B8", VA = "0x1A054B8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001400")]
		[Address(RVA = "0x1A05518", Offset = "0x1A05518", VA = "0x1A05518")]
		private void Update()
		{
		}

		[Token(Token = "0x6001401")]
		[Address(RVA = "0x1A05A20", Offset = "0x1A05A20", VA = "0x1A05A20")]
		public void DisplayRealHand(bool value)
		{
		}

		[Token(Token = "0x6001402")]
		[Address(RVA = "0x1A051AC", Offset = "0x1A051AC", VA = "0x1A051AC")]
		public void SetGrabHand(VRHand.HandType hand)
		{
		}

		[Token(Token = "0x6001403")]
		[Address(RVA = "0x1A05A68", Offset = "0x1A05A68", VA = "0x1A05A68")]
		public FishingCheckBothHand()
		{
		}
	}
	[Token(Token = "0x20004E8")]
	public class FishingHaptics : MonoBehaviour
	{
		[Token(Token = "0x4001B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Inject]
		private InputProvider _inputProvider;

		[Token(Token = "0x170001D3")]
		[Inject]
		private ISubscriber<FPActionData> OnFPAction
		{
			[Token(Token = "0x6001405")]
			[Address(RVA = "0x1A05B78", Offset = "0x1A05B78", VA = "0x1A05B78")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001406")]
			[Address(RVA = "0x1A05B80", Offset = "0x1A05B80", VA = "0x1A05B80")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001407")]
		[Address(RVA = "0x1A05B88", Offset = "0x1A05B88", VA = "0x1A05B88")]
		private void Start()
		{
		}

		[Token(Token = "0x6001408")]
		[Address(RVA = "0x1A05CB4", Offset = "0x1A05CB4", VA = "0x1A05CB4")]
		private void VibrateBothHand(float strength, float time)
		{
		}

		[Token(Token = "0x6001409")]
		[Address(RVA = "0x1A05D04", Offset = "0x1A05D04", VA = "0x1A05D04")]
		public FishingHaptics()
		{
		}
	}
	[Token(Token = "0x20004E9")]
	public class FishingHookController : MonoBehaviour
	{
		[Token(Token = "0x4001B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Rigidbody _rigidbody;

		[Token(Token = "0x600140B")]
		[Address(RVA = "0x1A05F3C", Offset = "0x1A05F3C", VA = "0x1A05F3C")]
		private void Start()
		{
		}

		[Token(Token = "0x600140C")]
		[Address(RVA = "0x1A05F94", Offset = "0x1A05F94", VA = "0x1A05F94")]
		public void Dropped()
		{
		}

		[Token(Token = "0x600140D")]
		[Address(RVA = "0x1A05F98", Offset = "0x1A05F98", VA = "0x1A05F98")]
		private void Update()
		{
		}

		[Token(Token = "0x600140E")]
		[Address(RVA = "0x1A05F9C", Offset = "0x1A05F9C", VA = "0x1A05F9C")]
		public FishingHookController()
		{
		}
	}
	[Token(Token = "0x20004EA")]
	[RequireComponent(typeof(AudioSource))]
	public class FishingInputPublisher : InputPublisher
	{
		[Token(Token = "0x4001B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Cast & Up")]
		[SerializeField]
		private Transform _castEreaPivot;

		[Token(Token = "0x4001B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _upEreaPivot;

		[Token(Token = "0x4001B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip _castSound;

		[Token(Token = "0x4001B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _upSound;

		[Token(Token = "0x4001B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float _castThresholdZ;

		[Token(Token = "0x4001B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float _upThresholdZ;

		[Token(Token = "0x4001B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float _upThresholdBihendHead;

		[Token(Token = "0x4001B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[ReadOnly]
		public BoolReactiveProperty _rodCasted;

		[Token(Token = "0x4001B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Header("Left & Right")]
		[SerializeField]
		private Transform _leftEreaPivot;

		[Token(Token = "0x4001B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Transform _rightEreaPivot;

		[Token(Token = "0x4001B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Header("Lure")]
		[SerializeField]
		private LureController _lure;

		[Token(Token = "0x4001B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Header("Objects")]
		[SerializeField]
		private Transform _rodHead;

		[Token(Token = "0x4001B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Transform _head;

		[Token(Token = "0x4001B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private float _rodLength;

		[Token(Token = "0x4001B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private RodController _rodController;

		[Token(Token = "0x4001B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[Inject]
		private InputProvider _inputProvider;

		[Token(Token = "0x4001B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private StringReactiveProperty _inputMessage;

		[Token(Token = "0x4001B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private AudioSource _audio;

		[Token(Token = "0x4001B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Vector3 _posRodHeadOld;

		[Token(Token = "0x4001B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private Vector3 _posRodHeadNew;

		[Token(Token = "0x4001B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Vector3 _rodHeadVelocity;

		[Token(Token = "0x4001B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private float _castEreaHeight;

		[Token(Token = "0x4001B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private int _lastCastFrame;

		[Token(Token = "0x170001D4")]
		public override StringReactiveProperty InputMessage
		{
			[Token(Token = "0x6001412")]
			[Address(RVA = "0x1A0685C", Offset = "0x1A0685C", VA = "0x1A0685C", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001413")]
			[Address(RVA = "0x1A06864", Offset = "0x1A06864", VA = "0x1A06864", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x600140F")]
		[Address(RVA = "0x1A05FA4", Offset = "0x1A05FA4", VA = "0x1A05FA4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001410")]
		[Address(RVA = "0x1A060B8", Offset = "0x1A060B8", VA = "0x1A060B8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001411")]
		[Address(RVA = "0x1A06844", Offset = "0x1A06844", VA = "0x1A06844")]
		public void UpLure()
		{
		}

		[Token(Token = "0x6001414")]
		[Address(RVA = "0x1A0686C", Offset = "0x1A0686C", VA = "0x1A0686C")]
		public FishingInputPublisher()
		{
		}
	}
	[Token(Token = "0x20004EB")]
	public enum FishingEventKeys
	{
		[Token(Token = "0x4001B36")]
		SmallFishAppear,
		[Token(Token = "0x4001B37")]
		SmallFishSwim,
		[Token(Token = "0x4001B38")]
		SmallFishRunAway,
		[Token(Token = "0x4001B39")]
		SmallFishBite,
		[Token(Token = "0x4001B3A")]
		SmallFishGet,
		[Token(Token = "0x4001B3B")]
		BigFishAppear,
		[Token(Token = "0x4001B3C")]
		BigFishSwim,
		[Token(Token = "0x4001B3D")]
		BigFishRunAway,
		[Token(Token = "0x4001B3E")]
		BigFishBite,
		[Token(Token = "0x4001B3F")]
		BigFishFightLeft,
		[Token(Token = "0x4001B40")]
		BigFishFightRight,
		[Token(Token = "0x4001B41")]
		BigFishGet,
		[Token(Token = "0x4001B42")]
		SmallFishGetPelican,
		[Token(Token = "0x4001B43")]
		BigFishGetPelican,
		[Token(Token = "0x4001B44")]
		BigFishFightCenter,
		[Token(Token = "0x4001B45")]
		RodLeftSwingPelican,
		[Token(Token = "0x4001B46")]
		RodRightSwingPelican
	}
	[Token(Token = "0x20004EC")]
	public enum FishingInputKeys
	{
		[Token(Token = "0x4001B48")]
		RodCast,
		[Token(Token = "0x4001B49")]
		RodUp,
		[Token(Token = "0x4001B4A")]
		RodLeftSwing,
		[Token(Token = "0x4001B4B")]
		RodRightSwing,
		[Token(Token = "0x4001B4C")]
		None
	}
	[Token(Token = "0x20004ED")]
	public class FishingPracticeClearCounter : PracticeClearCounter
	{
		[Token(Token = "0x20004EE")]
		private enum PracticeType
		{
			[Token(Token = "0x4001B51")]
			SmallFishPractice,
			[Token(Token = "0x4001B52")]
			BigFishPractice
		}

		[Token(Token = "0x4001B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PracticeType _practiceType;

		[Token(Token = "0x4001B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private BoolReactiveProperty _clearMessage;

		[Token(Token = "0x170001D5")]
		[Inject]
		private ISubscriber<FPActionData> OnFPAction
		{
			[Token(Token = "0x6001415")]
			[Address(RVA = "0x1A06894", Offset = "0x1A06894", VA = "0x1A06894")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001416")]
			[Address(RVA = "0x1A0689C", Offset = "0x1A0689C", VA = "0x1A0689C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170001D6")]
		public override BoolReactiveProperty ClearMessage
		{
			[Token(Token = "0x600141A")]
			[Address(RVA = "0x1A06C78", Offset = "0x1A06C78", VA = "0x1A06C78", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600141B")]
			[Address(RVA = "0x1A06C80", Offset = "0x1A06C80", VA = "0x1A06C80", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x6001417")]
		[Address(RVA = "0x1A068A4", Offset = "0x1A068A4", VA = "0x1A068A4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001418")]
		[Address(RVA = "0x1A06A10", Offset = "0x1A06A10", VA = "0x1A06A10")]
		private void SmallFishCount(FPActionData data)
		{
		}

		[Token(Token = "0x6001419")]
		[Address(RVA = "0x1A06B44", Offset = "0x1A06B44", VA = "0x1A06B44")]
		private void BigFishCount(FPActionData data)
		{
		}

		[Token(Token = "0x600141C")]
		[Address(RVA = "0x1A06C88", Offset = "0x1A06C88", VA = "0x1A06C88")]
		public FishingPracticeClearCounter()
		{
		}
	}
	[Token(Token = "0x20004EF")]
	public class GrabRodHandController : MonoBehaviour
	{
		[Token(Token = "0x4001B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Inject]
		private InputProvider _inputProvider;

		[Token(Token = "0x4001B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _isGrabRacket;

		[Token(Token = "0x4001B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private VRHand.HandType _grabGand;

		[Token(Token = "0x170001D7")]
		[Inject]
		private ISubscriber<OnPause> OnPauseEvent
		{
			[Token(Token = "0x600141E")]
			[Address(RVA = "0x1A06CAC", Offset = "0x1A06CAC", VA = "0x1A06CAC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600141F")]
			[Address(RVA = "0x1A06CB4", Offset = "0x1A06CB4", VA = "0x1A06CB4")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001420")]
		[Address(RVA = "0x1A06CBC", Offset = "0x1A06CBC", VA = "0x1A06CBC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001421")]
		[Address(RVA = "0x1A0519C", Offset = "0x1A0519C", VA = "0x1A0519C")]
		public void SaveGrabRodHand(VRHand.HandType hand)
		{
		}

		[Token(Token = "0x6001422")]
		[Address(RVA = "0x1A06DE8", Offset = "0x1A06DE8", VA = "0x1A06DE8")]
		public void ChangeGrabRodHand(bool active)
		{
		}

		[Token(Token = "0x6001423")]
		[Address(RVA = "0x1A06E24", Offset = "0x1A06E24", VA = "0x1A06E24")]
		public GrabRodHandController()
		{
		}
	}
	[Token(Token = "0x20004F0")]
	[RequireComponent(typeof(AudioSource))]
	public class LureController : MonoBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x20004F1")]
		[CompilerGenerated]
		private struct <DropLure>d__29 : IAsyncStateMachine
		{
			[Token(Token = "0x4001B6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001B6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001B6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LureController <>4__this;

			[Token(Token = "0x4001B70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private DOTweenAsyncExtensions.TweenAwaiter <>u__1;

			[Token(Token = "0x6001432")]
			[Address(RVA = "0x1A07630", Offset = "0x1A07630", VA = "0x1A07630", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001433")]
			[Address(RVA = "0x1A07F0C", Offset = "0x1A07F0C", VA = "0x1A07F0C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20004F2")]
		[CompilerGenerated]
		private struct <UpLure>d__30 : IAsyncStateMachine
		{
			[Token(Token = "0x4001B71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001B72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001B73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LureController <>4__this;

			[Token(Token = "0x4001B74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private DOTweenAsyncExtensions.TweenAwaiter <>u__1;

			[Token(Token = "0x6001434")]
			[Address(RVA = "0x1A07F18", Offset = "0x1A07F18", VA = "0x1A07F18", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001435")]
			[Address(RVA = "0x1A0828C", Offset = "0x1A0828C", VA = "0x1A0828C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Lure")]
		[SerializeField]
		private GameObject _lureObj;

		[Token(Token = "0x4001B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _bitePoint;

		[Token(Token = "0x4001B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _lurePivot;

		[Token(Token = "0x4001B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _lureDropSound;

		[Token(Token = "0x4001B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ParticleSystem _dropLureParticle;

		[Token(Token = "0x4001B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private ParticleSystem _upLureParticle;

		[Token(Token = "0x4001B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private AudioSource _audio;

		[Token(Token = "0x4001B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Rigidbody _rigidbody;

		[Token(Token = "0x4001B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Collider _collider;

		[Token(Token = "0x4001B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Tweener _lureTweener;

		[Token(Token = "0x4001B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Tweener _yoyoTweener;

		[Token(Token = "0x4001B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private BPMData _bpmData;

		[Token(Token = "0x4001B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool _lastGravity;

		[Token(Token = "0x4001B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[Header("Hook")]
		[SerializeField]
		private GameObject _hook;

		[Token(Token = "0x4001B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private GameObject _hookObj;

		[Token(Token = "0x4001B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private Vector3 _localPosOffset;

		[Token(Token = "0x4001B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[SerializeField]
		private Vector3 _locaRotOffset;

		[Token(Token = "0x4001B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Rigidbody _hookRb;

		[Token(Token = "0x4001B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Collider _hookCol;

		[Token(Token = "0x4001B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private bool _isDropped;

		[Token(Token = "0x170001D8")]
		[Inject]
		private ISubscriber<BPMData> OnBpmData
		{
			[Token(Token = "0x6001425")]
			[Address(RVA = "0x1A06E98", Offset = "0x1A06E98", VA = "0x1A06E98")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001426")]
			[Address(RVA = "0x1A06EA0", Offset = "0x1A06EA0", VA = "0x1A06EA0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170001D9")]
		[Inject]
		private ISubscriber<OnPause> OnPauseMessage
		{
			[Token(Token = "0x6001427")]
			[Address(RVA = "0x1A06EA8", Offset = "0x1A06EA8", VA = "0x1A06EA8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001428")]
			[Address(RVA = "0x1A06EB0", Offset = "0x1A06EB0", VA = "0x1A06EB0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001429")]
		[Address(RVA = "0x1A06EB8", Offset = "0x1A06EB8", VA = "0x1A06EB8")]
		private void Start()
		{
		}

		[Token(Token = "0x600142A")]
		[Address(RVA = "0x1A066D4", Offset = "0x1A066D4", VA = "0x1A066D4")]
		[AsyncStateMachine(typeof(<DropLure>d__29))]
		public void DropLure()
		{
		}

		[Token(Token = "0x600142B")]
		[Address(RVA = "0x1A0678C", Offset = "0x1A0678C", VA = "0x1A0678C")]
		[AsyncStateMachine(typeof(<UpLure>d__30))]
		public void UpLure()
		{
		}

		[Token(Token = "0x600142C")]
		[Address(RVA = "0x1A07260", Offset = "0x1A07260", VA = "0x1A07260")]
		public void DisableOnResult()
		{
		}

		[Token(Token = "0x600142D")]
		[Address(RVA = "0x1A07310", Offset = "0x1A07310", VA = "0x1A07310")]
		public void EnableOnResult()
		{
		}

		[Token(Token = "0x600142E")]
		[Address(RVA = "0x1A073C0", Offset = "0x1A073C0", VA = "0x1A073C0")]
		public LureController()
		{
		}
	}
	[Token(Token = "0x20004F3")]
	public class PelicanManager : MonoBehaviour
	{
		[Token(Token = "0x4001B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator _animator;

		[Token(Token = "0x4001B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Tween tween;

		[Token(Token = "0x4001B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float weight;

		[Token(Token = "0x4001B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int fishingLayerIndex;

		[Token(Token = "0x4001B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int FishCastUp;

		[Token(Token = "0x4001B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int CastUp;

		[Token(Token = "0x4001B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly int RodLeftSwing;

		[Token(Token = "0x4001B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static readonly int RodRightSwing;

		[Token(Token = "0x4001B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly int FishFightCenter;

		[Token(Token = "0x4001B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static readonly int ToCast;

		[Token(Token = "0x4001B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly int Talk;

		[Token(Token = "0x4001B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private static readonly int Fistpump;

		[Token(Token = "0x170001DA")]
		[Inject]
		private ISubscriber<CharacterActionData> OnCharacterAction
		{
			[Token(Token = "0x6001436")]
			[Address(RVA = "0x1A08298", Offset = "0x1A08298", VA = "0x1A08298")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001437")]
			[Address(RVA = "0x1A082A0", Offset = "0x1A082A0", VA = "0x1A082A0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001438")]
		[Address(RVA = "0x1A082A8", Offset = "0x1A082A8", VA = "0x1A082A8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001439")]
		[Address(RVA = "0x1A08400", Offset = "0x1A08400", VA = "0x1A08400")]
		public void SmallFishCastUp()
		{
		}

		[Token(Token = "0x600143A")]
		[Address(RVA = "0x1A08470", Offset = "0x1A08470", VA = "0x1A08470")]
		public void BigFishCastUp()
		{
		}

		[Token(Token = "0x600143B")]
		[Address(RVA = "0x1A084E0", Offset = "0x1A084E0", VA = "0x1A084E0")]
		public void BigFishFightRodLeftSwing()
		{
		}

		[Token(Token = "0x600143C")]
		[Address(RVA = "0x1A08550", Offset = "0x1A08550", VA = "0x1A08550")]
		public void BigFishFightRodRightSwing()
		{
		}

		[Token(Token = "0x600143D")]
		[Address(RVA = "0x1A085C0", Offset = "0x1A085C0", VA = "0x1A085C0")]
		public void BigFishFightCenter()
		{
		}

		[Token(Token = "0x600143E")]
		[Address(RVA = "0x1A08630", Offset = "0x1A08630", VA = "0x1A08630")]
		private void ToCastAnimation()
		{
		}

		[Token(Token = "0x600143F")]
		[Address(RVA = "0x1A086A0", Offset = "0x1A086A0", VA = "0x1A086A0")]
		private void SetAnimatorFishing()
		{
		}

		[Token(Token = "0x6001440")]
		[Address(RVA = "0x1A08848", Offset = "0x1A08848", VA = "0x1A08848")]
		private void SetAnimatorIdle()
		{
		}

		[Token(Token = "0x6001441")]
		[Address(RVA = "0x1A089F0", Offset = "0x1A089F0", VA = "0x1A089F0")]
		public void LookAtPlayer()
		{
		}

		[Token(Token = "0x6001442")]
		[Address(RVA = "0x1A08A2C", Offset = "0x1A08A2C", VA = "0x1A08A2C")]
		public void LookForward()
		{
		}

		[Token(Token = "0x6001443")]
		[Address(RVA = "0x1A08A70", Offset = "0x1A08A70", VA = "0x1A08A70")]
		private void DoCharacterAction(CharacterActionData data)
		{
		}

		[Token(Token = "0x6001444")]
		[Address(RVA = "0x1A08C20", Offset = "0x1A08C20", VA = "0x1A08C20")]
		public PelicanManager()
		{
		}
	}
	[Token(Token = "0x20004F4")]
	public class RodController : MonoBehaviour
	{
		[Token(Token = "0x4001B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animator _rodAnim;

		[Token(Token = "0x4001B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ObiRopeCursor _obiRopeCursor;

		[Token(Token = "0x4001B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ObiRope _obiRope;

		[Token(Token = "0x4001B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private FishingInputPublisher _inputPublisher;

		[Token(Token = "0x4001B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Renderer _lureToHook;

		[Token(Token = "0x4001B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[ReadOnly]
		public bool _rodGrabbed;

		[Token(Token = "0x4001B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		[ReadOnly]
		public bool _rodUsable;

		[Token(Token = "0x4001B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float _defaultLength;

		[Token(Token = "0x4001B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int Enable;

		[Token(Token = "0x4001B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int Disable;

		[Token(Token = "0x4001B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly int ImmediateEnable;

		[Token(Token = "0x4001B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Inject]
		private GFSceneLoader _gfSceneLoader;

		[Token(Token = "0x170001DB")]
		[Inject]
		private ISubscriber<OnPause> OnPauseMessage
		{
			[Token(Token = "0x600144D")]
			[Address(RVA = "0x1A08E58", Offset = "0x1A08E58", VA = "0x1A08E58")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600144E")]
			[Address(RVA = "0x1A08E60", Offset = "0x1A08E60", VA = "0x1A08E60")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x600144F")]
		[Address(RVA = "0x1A08E68", Offset = "0x1A08E68", VA = "0x1A08E68")]
		private void Start()
		{
		}

		[Token(Token = "0x6001450")]
		[Address(RVA = "0x1A05898", Offset = "0x1A05898", VA = "0x1A05898")]
		public void EnableRod()
		{
		}

		[Token(Token = "0x6001451")]
		[Address(RVA = "0x1A053C0", Offset = "0x1A053C0", VA = "0x1A053C0")]
		public void ImmediateEnableRod()
		{
		}

		[Token(Token = "0x6001452")]
		[Address(RVA = "0x1A05928", Offset = "0x1A05928", VA = "0x1A05928")]
		public void DisableRod()
		{
		}

		[Token(Token = "0x6001453")]
		[Address(RVA = "0x1A09110", Offset = "0x1A09110", VA = "0x1A09110")]
		public void DisableOnResult()
		{
		}

		[Token(Token = "0x6001454")]
		[Address(RVA = "0x1A091BC", Offset = "0x1A091BC", VA = "0x1A091BC")]
		public void EnableOnResult()
		{
		}

		[Token(Token = "0x6001455")]
		[Address(RVA = "0x1A09268", Offset = "0x1A09268", VA = "0x1A09268")]
		public RodController()
		{
		}
	}
	[Token(Token = "0x20004F5")]
	public class RodGripEventBlock : EventBlock
	{
		[StructLayout(3)]
		[Token(Token = "0x20004F6")]
		[CompilerGenerated]
		private struct <SetEvent>d__7 : IAsyncStateMachine
		{
			[Token(Token = "0x4001B96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001B97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x4001B98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RodGripEventBlock <>4__this;

			[Token(Token = "0x4001B99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken token;

			[Token(Token = "0x4001B9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x600145D")]
			[Address(RVA = "0x1A0950C", Offset = "0x1A0950C", VA = "0x1A0950C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600145E")]
			[Address(RVA = "0x1A09C04", Offset = "0x1A09C04", VA = "0x1A09C04", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private RodController _rodController;

		[Token(Token = "0x4001B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TextMeshPro _textPanel;

		[Token(Token = "0x4001B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private string _key;

		[Token(Token = "0x4001B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Header("Debug")]
		[SerializeField]
		private bool _useDebugText;

		[Token(Token = "0x4001B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[TextArea(4, 8)]
		public string _debugText;

		[NonSerialized]
		[Token(Token = "0x4001B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool _eventDone;

		[Token(Token = "0x4001B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Inject]
		private MultilingualTextManager _multilingualTextManager;

		[Token(Token = "0x600145A")]
		[Address(RVA = "0x1A0940C", Offset = "0x1A0940C", VA = "0x1A0940C", Slot = "4")]
		[AsyncStateMachine(typeof(<SetEvent>d__7))]
		public override UniTask<bool> SetEvent(CancellationToken token)
		{
			return default(UniTask<bool>);
		}

		[Token(Token = "0x600145B")]
		[Address(RVA = "0x1A094E8", Offset = "0x1A094E8", VA = "0x1A094E8")]
		public RodGripEventBlock()
		{
		}
	}
	[Token(Token = "0x20004F7")]
	public class RodSwingEventBlock : EventBlock
	{
		[StructLayout(3)]
		[Token(Token = "0x20004F8")]
		[CompilerGenerated]
		private struct <SetEvent>d__6 : IAsyncStateMachine
		{
			[Token(Token = "0x4001BA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001BA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x4001BA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RodSwingEventBlock <>4__this;

			[Token(Token = "0x4001BA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken token;

			[Token(Token = "0x4001BA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private string <baseText>5__2;

			[Token(Token = "0x4001BA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private IDisposable <disposable>5__3;

			[Token(Token = "0x4001BA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6001462")]
			[Address(RVA = "0x1A09DD4", Offset = "0x1A09DD4", VA = "0x1A09DD4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001463")]
			[Address(RVA = "0x1A0A570", Offset = "0x1A0A570", VA = "0x1A0A570", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private FishingInputPublisher _inputPublisher;

		[Token(Token = "0x4001B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TextMeshPro _textPanel;

		[Token(Token = "0x4001B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private string _key;

		[Token(Token = "0x4001B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private int _clearCount;

		[Token(Token = "0x4001B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int _count;

		[Token(Token = "0x4001BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Inject]
		private MultilingualTextManager _multilingualTextManager;

		[Token(Token = "0x600145F")]
		[Address(RVA = "0x1A09C5C", Offset = "0x1A09C5C", VA = "0x1A09C5C", Slot = "4")]
		[AsyncStateMachine(typeof(<SetEvent>d__6))]
		public override UniTask<bool> SetEvent(CancellationToken token)
		{
			return default(UniTask<bool>);
		}

		[Token(Token = "0x6001460")]
		[Address(RVA = "0x1A09D3C", Offset = "0x1A09D3C", VA = "0x1A09D3C")]
		public RodSwingEventBlock()
		{
		}
	}
	[Token(Token = "0x20004F9")]
	[RequireComponent(typeof(AudioSource))]
	public class SelectRodHandEvent : EventBlock
	{
		[StructLayout(3)]
		[Token(Token = "0x20004FA")]
		[CompilerGenerated]
		private struct <SetEvent>d__12 : IAsyncStateMachine
		{
			[Token(Token = "0x4001BB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001BB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x4001BB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SelectRodHandEvent <>4__this;

			[Token(Token = "0x4001BB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken token;

			[Token(Token = "0x4001BB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6001467")]
			[Address(RVA = "0x1A0A82C", Offset = "0x1A0A82C", VA = "0x1A0A82C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001468")]
			[Address(RVA = "0x1A0AEA0", Offset = "0x1A0AEA0", VA = "0x1A0AEA0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20004FB")]
		[CompilerGenerated]
		private struct <RodCatchAsync>d__13 : IAsyncStateMachine
		{
			[Token(Token = "0x4001BB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001BBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001BBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SelectRodHandEvent <>4__this;

			[Token(Token = "0x4001BBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CancellationToken token;

			[Token(Token = "0x4001BBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6001469")]
			[Address(RVA = "0x1A0AEF8", Offset = "0x1A0AEF8", VA = "0x1A0AEF8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600146A")]
			[Address(RVA = "0x1A0B718", Offset = "0x1A0B718", VA = "0x1A0B718", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[ReadOnly]
		public bool _selected;

		[Token(Token = "0x4001BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float _rodDistanceRightHand;

		[Token(Token = "0x4001BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float _rodDistanceLeftHand;

		[Token(Token = "0x4001BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private RodController _rodController;

		[Token(Token = "0x4001BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform _rodPivot;

		[Token(Token = "0x4001BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform _leftHand;

		[Token(Token = "0x4001BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform _rightHand;

		[Token(Token = "0x4001BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private AudioClip _selectedSound;

		[Token(Token = "0x4001BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private AudioSource _audio;

		[Token(Token = "0x4001BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Inject]
		private InputProvider _inputProvider;

		[Token(Token = "0x4001BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private FishingCheckBothHand _fishingCheckBothHand;

		[Token(Token = "0x4001BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GrabRodHandController _grabRodHandController;

		[Token(Token = "0x6001464")]
		[Address(RVA = "0x1A0A5C8", Offset = "0x1A0A5C8", VA = "0x1A0A5C8", Slot = "4")]
		[AsyncStateMachine(typeof(<SetEvent>d__12))]
		public override UniTask<bool> SetEvent(CancellationToken token)
		{
			return default(UniTask<bool>);
		}

		[Token(Token = "0x6001465")]
		[Address(RVA = "0x1A0A6A4", Offset = "0x1A0A6A4", VA = "0x1A0A6A4")]
		[AsyncStateMachine(typeof(<RodCatchAsync>d__13))]
		private UniTask RodCatchAsync(CancellationToken token)
		{
			return default(UniTask);
		}

		[Token(Token = "0x6001466")]
		[Address(RVA = "0x1A0A824", Offset = "0x1A0A824", VA = "0x1A0A824")]
		public SelectRodHandEvent()
		{
		}
	}
}
namespace __Imacreate__.__Production__.GrooveFitGames.GF10_Fishing.FitPattern
{
	[Token(Token = "0x20004FC")]
	[RequireComponent(typeof(GrooveFitAudioSource))]
	public class BigFishController : MonoBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x20004FD")]
		[CompilerGenerated]
		private struct <BigFishAppear>d__21 : IAsyncStateMachine
		{
			[Token(Token = "0x4001BD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001BD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001BD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public BigFishController <>4__this;

			[Token(Token = "0x4001BD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6001476")]
			[Address(RVA = "0x1A0C0B0", Offset = "0x1A0C0B0", VA = "0x1A0C0B0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001477")]
			[Address(RVA = "0x1A0C524", Offset = "0x1A0C524", VA = "0x1A0C524", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20004FE")]
		[CompilerGenerated]
		private struct <BigFishSwim>d__22 : IAsyncStateMachine
		{
			[Token(Token = "0x4001BD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001BD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001BD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public BigFishController <>4__this;

			[Token(Token = "0x4001BD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6001478")]
			[Address(RVA = "0x1A0C530", Offset = "0x1A0C530", VA = "0x1A0C530", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001479")]
			[Address(RVA = "0x1A0C968", Offset = "0x1A0C968", VA = "0x1A0C968", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _fishObj;

		[Token(Token = "0x4001BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _bitePoint;

		[Token(Token = "0x4001BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private FitPatternBoxManager _fitPatternBox;

		[Token(Token = "0x4001BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Header("Sound")]
		[SerializeField]
		private AudioClip _appearSound;

		[Token(Token = "0x4001BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AudioClip _swimSound;

		[Token(Token = "0x4001BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private AudioClip _biteSound;

		[Token(Token = "0x4001BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private AudioClip _runAwaySound;

		[Token(Token = "0x4001BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioClip _getSound;

		[Token(Token = "0x4001BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioClip _fightGreat;

		[Token(Token = "0x4001BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private AudioClip _fightOK;

		[Token(Token = "0x4001BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private AudioClip _fightBad;

		[Token(Token = "0x4001BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private AudioSource _audio;

		[Token(Token = "0x4001BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[Header("Animation")]
		[SerializeField]
		private AnimationCurve _diveAnim;

		[Token(Token = "0x4001BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private CustomAnimationCurve _getAnim;

		[Token(Token = "0x4001BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Animator _animator;

		[Token(Token = "0x4001BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int Biting;

		[Token(Token = "0x4001BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int RodLeftSwing;

		[Token(Token = "0x4001BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly int RodRightSwing;

		[Token(Token = "0x4001BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static readonly int CastUp;

		[Token(Token = "0x4001BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Tween singleTween;

		[Token(Token = "0x600146B")]
		[Address(RVA = "0x1A0B724", Offset = "0x1A0B724", VA = "0x1A0B724")]
		private void Start()
		{
		}

		[Token(Token = "0x600146C")]
		[Address(RVA = "0x1A0B794", Offset = "0x1A0B794", VA = "0x1A0B794")]
		[AsyncStateMachine(typeof(<BigFishAppear>d__21))]
		public void BigFishAppear()
		{
		}

		[Token(Token = "0x600146D")]
		[Address(RVA = "0x1A0B848", Offset = "0x1A0B848", VA = "0x1A0B848")]
		[AsyncStateMachine(typeof(<BigFishSwim>d__22))]
		public void BigFishSwim()
		{
		}

		[Token(Token = "0x600146E")]
		[Address(RVA = "0x1A0B8FC", Offset = "0x1A0B8FC", VA = "0x1A0B8FC")]
		public void BigFishBite()
		{
		}

		[Token(Token = "0x600146F")]
		[Address(RVA = "0x1A0B9F0", Offset = "0x1A0B9F0", VA = "0x1A0B9F0")]
		public void BigFishGetGreat()
		{
		}

		[Token(Token = "0x6001470")]
		[Address(RVA = "0x1A0BB68", Offset = "0x1A0BB68", VA = "0x1A0BB68")]
		public void BigFishGetOK()
		{
		}

		[Token(Token = "0x6001471")]
		[Address(RVA = "0x1A0BC2C", Offset = "0x1A0BC2C", VA = "0x1A0BC2C")]
		public void BigFishRunAway()
		{
		}

		[Token(Token = "0x6001472")]
		[Address(RVA = "0x1A0BD2C", Offset = "0x1A0BD2C", VA = "0x1A0BD2C")]
		public void BigFishFightLeft(int judgeType)
		{
		}

		[Token(Token = "0x6001473")]
		[Address(RVA = "0x1A0BE6C", Offset = "0x1A0BE6C", VA = "0x1A0BE6C")]
		public void BigFishFightRight(int judgeType)
		{
		}

		[Token(Token = "0x6001474")]
		[Address(RVA = "0x1A0BFAC", Offset = "0x1A0BFAC", VA = "0x1A0BFAC")]
		public BigFishController()
		{
		}
	}
	[Token(Token = "0x20004FF")]
	public class BigFishGuideUI : MonoBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x2000500")]
		[CompilerGenerated]
		private struct <DisplayLeftArrow>d__5 : IAsyncStateMachine
		{
			[Token(Token = "0x4001BDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001BDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001BE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public BigFishGuideUI <>4__this;

			[Token(Token = "0x4001BE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x4001BE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private DOTweenAsyncExtensions.TweenAwaiter <>u__2;

			[Token(Token = "0x600147F")]
			[Address(RVA = "0x1A0CBF0", Offset = "0x1A0CBF0", VA = "0x1A0CBF0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001480")]
			[Address(RVA = "0x1A0D18C", Offset = "0x1A0D18C", VA = "0x1A0D18C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000501")]
		[CompilerGenerated]
		private struct <DisplayRightArrow>d__6 : IAsyncStateMachine
		{
			[Token(Token = "0x4001BE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001BE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001BE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public BigFishGuideUI <>4__this;

			[Token(Token = "0x4001BE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x4001BE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private DOTweenAsyncExtensions.TweenAwaiter <>u__2;

			[Token(Token = "0x6001481")]
			[Address(RVA = "0x1A0D198", Offset = "0x1A0D198", VA = "0x1A0D198", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001482")]
			[Address(RVA = "0x1A0D734", Offset = "0x1A0D734", VA = "0x1A0D734", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000502")]
		[CompilerGenerated]
		private struct <DisplayUpArrow>d__7 : IAsyncStateMachine
		{
			[Token(Token = "0x4001BE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001BE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001BEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public BigFishGuideUI <>4__this;

			[Token(Token = "0x4001BEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x4001BEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private DOTweenAsyncExtensions.TweenAwaiter <>u__2;

			[Token(Token = "0x6001483")]
			[Address(RVA = "0x1A0D740", Offset = "0x1A0D740", VA = "0x1A0D740", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001484")]
			[Address(RVA = "0x1A0DCDC", Offset = "0x1A0DCDC", VA = "0x1A0DCDC", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private FitPatternBoxManager _fitPatternBox;

		[Token(Token = "0x4001BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SpriteRenderer _leftArrow;

		[Token(Token = "0x4001BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SpriteRenderer _rightArrow;

		[Token(Token = "0x4001BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private SpriteRenderer _upArrow;

		[Token(Token = "0x600147A")]
		[Address(RVA = "0x1A0C974", Offset = "0x1A0C974", VA = "0x1A0C974")]
		private void Start()
		{
		}

		[Token(Token = "0x600147B")]
		[Address(RVA = "0x1A0C9C0", Offset = "0x1A0C9C0", VA = "0x1A0C9C0")]
		[AsyncStateMachine(typeof(<DisplayLeftArrow>d__5))]
		public void DisplayLeftArrow()
		{
		}

		[Token(Token = "0x600147C")]
		[Address(RVA = "0x1A0CA78", Offset = "0x1A0CA78", VA = "0x1A0CA78")]
		[AsyncStateMachine(typeof(<DisplayRightArrow>d__6))]
		public void DisplayRightArrow()
		{
		}

		[Token(Token = "0x600147D")]
		[Address(RVA = "0x1A0CB30", Offset = "0x1A0CB30", VA = "0x1A0CB30")]
		[AsyncStateMachine(typeof(<DisplayUpArrow>d__7))]
		public void DisplayUpArrow()
		{
		}

		[Token(Token = "0x600147E")]
		[Address(RVA = "0x1A0CBE8", Offset = "0x1A0CBE8", VA = "0x1A0CBE8")]
		public BigFishGuideUI()
		{
		}
	}
	[Token(Token = "0x2000503")]
	public class BigFishInputJudgeAction : JudgeActionBase
	{
		[Token(Token = "0x4001BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("Settings")]
		[SerializeField]
		private float _biteTiming;

		[Token(Token = "0x4001BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float _leftTiming;

		[Token(Token = "0x4001BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float _rightTiming;

		[Token(Token = "0x4001BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float _getTiming;

		[Token(Token = "0x4001BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float _doNothingErrorTiming;

		[Token(Token = "0x4001BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private FishingInputPublisher _inputPublisher;

		[Token(Token = "0x4001BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Header("Left and Right")]
		[SerializeField]
		private float _greatThreshold;

		[Token(Token = "0x4001BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float _okThreshold;

		[Token(Token = "0x4001BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float _currentBeat;

		[Token(Token = "0x4001BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool _biteCheckDone;

		[Token(Token = "0x4001BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		private bool _leftFightDone;

		[Token(Token = "0x4001BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
		private bool _rightFightDone;

		[Token(Token = "0x4001BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4F")]
		private bool _judgeDone;

		[Token(Token = "0x4001BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly List<float> _errorValues;

		[Token(Token = "0x4001BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private IDisposable _disposable;

		[Token(Token = "0x6001485")]
		[Address(RVA = "0x1A0DCE8", Offset = "0x1A0DCE8", VA = "0x1A0DCE8", Slot = "5")]
		protected override void AdditionalSetComponent()
		{
		}

		[Token(Token = "0x6001486")]
		[Address(RVA = "0x1A0DF38", Offset = "0x1A0DF38", VA = "0x1A0DF38", Slot = "4")]
		protected override void BeatSubscribeAction(float currentBeat)
		{
		}

		[Token(Token = "0x6001487")]
		[Address(RVA = "0x1A0F000", Offset = "0x1A0F000", VA = "0x1A0F000")]
		private void Judge(string value)
		{
		}

		[Token(Token = "0x6001488")]
		[Address(RVA = "0x1A0EB1C", Offset = "0x1A0EB1C", VA = "0x1A0EB1C")]
		private bool DoNothingError(float currentBeat, float targetTiming, string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001489")]
		[Address(RVA = "0x1A0FBF0", Offset = "0x1A0FBF0", VA = "0x1A0FBF0")]
		public BigFishInputJudgeAction()
		{
		}
	}
	[Token(Token = "0x2000504")]
	public class FishingFPActionSubscribeEvent : FPActionSubscribeEvent
	{
		[Serializable]
		[Token(Token = "0x2000505")]
		private class FishingFPActionEvent : FPActionEventBase
		{
			[Token(Token = "0x4001BFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[SerializeField]
			private FishingEventKeys Key;

			[Token(Token = "0x600148E")]
			[Address(RVA = "0x1A0FD2C", Offset = "0x1A0FD2C", VA = "0x1A0FD2C", Slot = "4")]
			public override string GetKey()
			{
				return null;
			}

			[Token(Token = "0x600148F")]
			[Address(RVA = "0x1A0FD94", Offset = "0x1A0FD94", VA = "0x1A0FD94")]
			public FishingFPActionEvent()
			{
			}
		}

		[Token(Token = "0x4001BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<FishingFPActionEvent> _fishingFPActionEvent;

		[Token(Token = "0x600148C")]
		[Address(RVA = "0x1A0FCA8", Offset = "0x1A0FCA8", VA = "0x1A0FCA8")]
		private void Start()
		{
		}

		[Token(Token = "0x600148D")]
		[Address(RVA = "0x1A0FD24", Offset = "0x1A0FD24", VA = "0x1A0FD24")]
		public FishingFPActionSubscribeEvent()
		{
		}
	}
	[Token(Token = "0x2000506")]
	public class FishingFPNoJudgementAction : FPNoJudgementAction
	{
		[Serializable]
		[Token(Token = "0x2000507")]
		private class ActionParam : ActionParamBase
		{
			[Token(Token = "0x4001BFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			private List<FishingEventKeys> ActionKeys;

			[Token(Token = "0x6001492")]
			[Address(RVA = "0x1A0FE3C", Offset = "0x1A0FE3C", VA = "0x1A0FE3C", Slot = "4")]
			public override List<string> GetKeyFromActionKeys()
			{
				return null;
			}

			[Token(Token = "0x6001493")]
			[Address(RVA = "0x1A0FF44", Offset = "0x1A0FF44", VA = "0x1A0FF44")]
			public ActionParam()
			{
			}
		}

		[Token(Token = "0x4001BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private List<ActionParam> actions;

		[Token(Token = "0x6001490")]
		[Address(RVA = "0x1A0FD9C", Offset = "0x1A0FD9C", VA = "0x1A0FD9C", Slot = "4")]
		protected override void BeatSubscribeAction(float currentBeat)
		{
		}

		[Token(Token = "0x6001491")]
		[Address(RVA = "0x1A0FE34", Offset = "0x1A0FE34", VA = "0x1A0FE34")]
		public FishingFPNoJudgementAction()
		{
		}
	}
	[Token(Token = "0x2000509")]
	[RequireComponent(typeof(GrooveFitAudioSource))]
	public class SmallFishController : MonoBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x200050A")]
		[CompilerGenerated]
		private struct <SmallFishAppear>d__15 : IAsyncStateMachine
		{
			[Token(Token = "0x4001C10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001C11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001C12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SmallFishController <>4__this;

			[Token(Token = "0x4001C13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x60014A0")]
			[Address(RVA = "0x1A10518", Offset = "0x1A10518", VA = "0x1A10518", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60014A1")]
			[Address(RVA = "0x1A1098C", Offset = "0x1A1098C", VA = "0x1A1098C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200050B")]
		[CompilerGenerated]
		private struct <SmallFishSwim>d__16 : IAsyncStateMachine
		{
			[Token(Token = "0x4001C14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001C15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001C16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SmallFishController <>4__this;

			[Token(Token = "0x4001C17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x60014A2")]
			[Address(RVA = "0x1A10998", Offset = "0x1A10998", VA = "0x1A10998", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60014A3")]
			[Address(RVA = "0x1A10DF4", Offset = "0x1A10DF4", VA = "0x1A10DF4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _fishObj;

		[Token(Token = "0x4001C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _bitePoint;

		[Token(Token = "0x4001C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private FitPatternBoxManager _fitPatternBox;

		[Token(Token = "0x4001C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Header("Sound")]
		[SerializeField]
		private AudioClip _appearSound;

		[Token(Token = "0x4001C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AudioClip _swimSound;

		[Token(Token = "0x4001C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private AudioClip _biteSound;

		[Token(Token = "0x4001C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private AudioClip _runAwaySound;

		[Token(Token = "0x4001C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioClip _getSound;

		[Token(Token = "0x4001C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private AudioSource _audio;

		[Token(Token = "0x4001C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Header("Animation")]
		[SerializeField]
		private AnimationCurve _diveAnim;

		[Token(Token = "0x4001C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private CustomAnimationCurve _getAnim;

		[Token(Token = "0x4001C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Animator _animator;

		[Token(Token = "0x4001C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int Biting;

		[Token(Token = "0x4001C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Tween singleTween;

		[Token(Token = "0x6001497")]
		[Address(RVA = "0x1A10028", Offset = "0x1A10028", VA = "0x1A10028")]
		private void Start()
		{
		}

		[Token(Token = "0x6001498")]
		[Address(RVA = "0x1A10098", Offset = "0x1A10098", VA = "0x1A10098")]
		[AsyncStateMachine(typeof(<SmallFishAppear>d__15))]
		public void SmallFishAppear()
		{
		}

		[Token(Token = "0x6001499")]
		[Address(RVA = "0x1A1014C", Offset = "0x1A1014C", VA = "0x1A1014C")]
		[AsyncStateMachine(typeof(<SmallFishSwim>d__16))]
		public void SmallFishSwim()
		{
		}

		[Token(Token = "0x600149A")]
		[Address(RVA = "0x1A10200", Offset = "0x1A10200", VA = "0x1A10200")]
		public void SmallFishBite()
		{
		}

		[Token(Token = "0x600149B")]
		[Address(RVA = "0x1A102F4", Offset = "0x1A102F4", VA = "0x1A102F4")]
		public void SmallFishGetGreat()
		{
		}

		[Token(Token = "0x600149C")]
		[Address(RVA = "0x1A10374", Offset = "0x1A10374", VA = "0x1A10374")]
		public void SmallFishGetOK()
		{
		}

		[Token(Token = "0x600149D")]
		[Address(RVA = "0x1A103F4", Offset = "0x1A103F4", VA = "0x1A103F4")]
		public void SmallFishRunAway()
		{
		}

		[Token(Token = "0x600149E")]
		[Address(RVA = "0x1A104A8", Offset = "0x1A104A8", VA = "0x1A104A8")]
		public SmallFishController()
		{
		}
	}
	[Token(Token = "0x200050C")]
	public class SmallFishInputJudgeAction : JudgeActionBase
	{
		[Token(Token = "0x4001C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("Settings")]
		[SerializeField]
		private float _timing;

		[Token(Token = "0x4001C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float _doNothingErrorTiming;

		[Token(Token = "0x4001C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private FishingInputPublisher _inputPublisher;

		[Token(Token = "0x4001C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float _currentBeat;

		[Token(Token = "0x4001C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool _biteCheckDone;

		[Token(Token = "0x4001C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		private bool _judgeDone;

		[Token(Token = "0x4001C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private IDisposable _disposable;

		[Token(Token = "0x60014A4")]
		[Address(RVA = "0x1A10E00", Offset = "0x1A10E00", VA = "0x1A10E00", Slot = "5")]
		protected override void AdditionalSetComponent()
		{
		}

		[Token(Token = "0x60014A5")]
		[Address(RVA = "0x1A11050", Offset = "0x1A11050", VA = "0x1A11050", Slot = "4")]
		protected override void BeatSubscribeAction(float currentBeat)
		{
		}

		[Token(Token = "0x60014A6")]
		[Address(RVA = "0x1A118A4", Offset = "0x1A118A4", VA = "0x1A118A4")]
		private void Judge(string value)
		{
		}

		[Token(Token = "0x60014A7")]
		[Address(RVA = "0x1A113DC", Offset = "0x1A113DC", VA = "0x1A113DC")]
		private void DoNothingError(float currentBeat)
		{
		}

		[Token(Token = "0x60014A8")]
		[Address(RVA = "0x1A11DF4", Offset = "0x1A11DF4", VA = "0x1A11DF4")]
		public SmallFishInputJudgeAction()
		{
		}
	}
}
namespace __Imacreate__.__Production__.GrooveFitGames.Core
{
	[Token(Token = "0x200050D")]
	public class CustomAnimationCurve : MonoBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x200050F")]
		[CompilerGenerated]
		private struct <Activate>d__26 : IAsyncStateMachine
		{
			[Token(Token = "0x4001C38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001C39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001C3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CustomAnimationCurve <>4__this;

			[Token(Token = "0x4001C3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x60014B3")]
			[Address(RVA = "0x1A1240C", Offset = "0x1A1240C", VA = "0x1A1240C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60014B4")]
			[Address(RVA = "0x1A12858", Offset = "0x1A12858", VA = "0x1A12858", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private FitPatternBoxManager _fitPatternBox;

		[Token(Token = "0x4001C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _moveObject;

		[Token(Token = "0x4001C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform _startPosition;

		[Token(Token = "0x4001C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform _endPosition;

		[Token(Token = "0x4001C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float _animationTime;

		[Token(Token = "0x4001C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float _animationTimeBPM;

		[Token(Token = "0x4001C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private AnimationCurve _xyAnimation;

		[Token(Token = "0x4001C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private AnimationCurve _xzAnimation;

		[Token(Token = "0x4001C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AnimationCurve _speedAnimation;

		[Token(Token = "0x4001C28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float _curveBonus;

		[Token(Token = "0x4001C29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public bool _isMoveStart;

		[Token(Token = "0x4001C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
		public bool _isUseBPM;

		[Token(Token = "0x4001C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _startEndDifference;

		[NonSerialized]
		[Token(Token = "0x4001C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float _time;

		[Token(Token = "0x4001C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float _secondPerBeat;

		[Token(Token = "0x4001C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[Header("New CustomAnimationCurve System Parameters")]
		[SerializeField]
		private bool isUsingLerp;

		[Token(Token = "0x4001C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private float earlyFactor;

		[Token(Token = "0x4001C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Vector3 startPos;

		[Token(Token = "0x4001C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 endPos;

		[Token(Token = "0x4001C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[Header("On Complete Event")]
		[SerializeField]
		private UnityEvent OnCompleteEvent;

		[Token(Token = "0x4001C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private float CompleteTimeDiff;

		[Token(Token = "0x4001C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private bool completed;

		[Token(Token = "0x4001C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9D")]
		[SerializeField]
		private bool _lookForward;

		[Token(Token = "0x60014AA")]
		[Address(RVA = "0x1A11E20", Offset = "0x1A11E20", VA = "0x1A11E20")]
		private void Start()
		{
		}

		[Token(Token = "0x60014AB")]
		[Address(RVA = "0x1A11FC4", Offset = "0x1A11FC4", VA = "0x1A11FC4")]
		private void Update()
		{
		}

		[Token(Token = "0x60014AC")]
		[Address(RVA = "0x1A1202C", Offset = "0x1A1202C", VA = "0x1A1202C")]
		private void MoveObject(float animationTime)
		{
		}

		[Token(Token = "0x60014AD")]
		[Address(RVA = "0x1A0BAB4", Offset = "0x1A0BAB4", VA = "0x1A0BAB4")]
		[AsyncStateMachine(typeof(<Activate>d__26))]
		public void Activate()
		{
		}

		[Token(Token = "0x60014AE")]
		[Address(RVA = "0x1A12348", Offset = "0x1A12348", VA = "0x1A12348")]
		public void SetAnimationBPM(float v)
		{
		}

		[Token(Token = "0x60014AF")]
		[Address(RVA = "0x1A12350", Offset = "0x1A12350", VA = "0x1A12350")]
		public CustomAnimationCurve()
		{
		}
	}
	[Token(Token = "0x2000510")]
	public class GFGameMessagePublisher : MonoBehaviour
	{
		[Token(Token = "0x170001DC")]
		[Inject]
		private IPublisher<GameStatus> GameStatusChanger
		{
			[Token(Token = "0x60014B5")]
			[Address(RVA = "0x1A12864", Offset = "0x1A12864", VA = "0x1A12864")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60014B6")]
			[Address(RVA = "0x1A1286C", Offset = "0x1A1286C", VA = "0x1A1286C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x60014B7")]
		[Address(RVA = "0x1A12874", Offset = "0x1A12874", VA = "0x1A12874")]
		public void ChangeGameStatus(int status)
		{
		}

		[Token(Token = "0x60014B8")]
		[Address(RVA = "0x1A12954", Offset = "0x1A12954", VA = "0x1A12954")]
		public GFGameMessagePublisher()
		{
		}
	}
	[Token(Token = "0x2000511")]
	public class GFGameZenjectInstaller : MonoInstaller
	{
		[Token(Token = "0x60014B9")]
		[Address(RVA = "0x1A1295C", Offset = "0x1A1295C", VA = "0x1A1295C", Slot = "8")]
		public override void InstallBindings()
		{
		}

		[Token(Token = "0x60014BA")]
		[Address(RVA = "0x1A12BE0", Offset = "0x1A12BE0", VA = "0x1A12BE0")]
		public GFGameZenjectInstaller()
		{
		}
	}
	[Token(Token = "0x2000512")]
	public class GrooveFitBoxManager : MonoBehaviour
	{
		[Token(Token = "0x4001C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FitPatternBoxManager[] _fitPatterns;

		[Token(Token = "0x60014BB")]
		[Address(RVA = "0x1A12BE8", Offset = "0x1A12BE8", VA = "0x1A12BE8")]
		public GrooveFitBoxManager()
		{
		}
	}
	[Token(Token = "0x2000513")]
	public abstract class InputPublisher : MonoBehaviour
	{
		[Token(Token = "0x170001DD")]
		public abstract StringReactiveProperty InputMessage
		{
			[Token(Token = "0x60014BC")]
			get;
			[Token(Token = "0x60014BD")]
			set;
		}

		[Token(Token = "0x60014BE")]
		[Address(RVA = "0x1A00724", Offset = "0x1A00724", VA = "0x1A00724")]
		protected InputPublisher()
		{
		}
	}
	[Token(Token = "0x2000514")]
	public static class MusicSheetReader
	{
		[Token(Token = "0x60014BF")]
		[Address(RVA = "0x1A12BF0", Offset = "0x1A12BF0", VA = "0x1A12BF0")]
		public static SheetData ReadMusicSheet(TextAsset sheet)
		{
			return null;
		}

		[Token(Token = "0x60014C0")]
		private static T[] GetList<T>(List<string[]> csvData, int num)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000515")]
	public class SheetData
	{
		[Token(Token = "0x4001C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float[] Timing;

		[Token(Token = "0x4001C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string[] FitPattern;

		[Token(Token = "0x4001C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string[] Action;

		[Token(Token = "0x60014C1")]
		[Address(RVA = "0x1A12E28", Offset = "0x1A12E28", VA = "0x1A12E28")]
		public SheetData()
		{
		}
	}
}
namespace __Imacreate__.__Production__.GrooveFitGames.Core.UserInterfaces
{
	[Token(Token = "0x2000516")]
	public class FootPrintInfoManager : MonoBehaviour
	{
		[Token(Token = "0x4001C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MultilingualTextMeshPro _skipText;

		[Token(Token = "0x4001C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SpriteRenderer _pauseIcon;

		[Token(Token = "0x4001C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private DeviceTypeObjectSettings _deviceTypeObjectSettings;

		[Token(Token = "0x4001C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool _pauseIconIsWhite;

		[Token(Token = "0x170001DE")]
		[Inject]
		private ISubscriber<GameStatus> OnGameStatus
		{
			[Token(Token = "0x60014C2")]
			[Address(RVA = "0x1A12E30", Offset = "0x1A12E30", VA = "0x1A12E30")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60014C3")]
			[Address(RVA = "0x1A12E38", Offset = "0x1A12E38", VA = "0x1A12E38")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x60014C4")]
		[Address(RVA = "0x1A12E40", Offset = "0x1A12E40", VA = "0x1A12E40")]
		private void Start()
		{
		}

		[Token(Token = "0x60014C5")]
		[Address(RVA = "0x1A1301C", Offset = "0x1A1301C", VA = "0x1A1301C")]
		public FootPrintInfoManager()
		{
		}
	}
	[Token(Token = "0x2000517")]
	public class StandingPointEvent : EventBlock
	{
		[StructLayout(3)]
		[Token(Token = "0x2000518")]
		[CompilerGenerated]
		private struct <SetEvent>d__5 : IAsyncStateMachine
		{
			[Token(Token = "0x4001C4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001C4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x4001C4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public StandingPointEvent <>4__this;

			[Token(Token = "0x4001C4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken token;

			[Token(Token = "0x4001C4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private DOTweenAsyncExtensions.TweenAwaiter <>u__1;

			[Token(Token = "0x4001C50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UniTask.Awaiter <>u__2;

			[Token(Token = "0x60014CA")]
			[Address(RVA = "0x1A131A0", Offset = "0x1A131A0", VA = "0x1A131A0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60014CB")]
			[Address(RVA = "0x1A13940", Offset = "0x1A13940", VA = "0x1A13940", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _alertPivot;

		[Token(Token = "0x4001C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ControllerAnimManager _controllerAnim;

		[Token(Token = "0x4001C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip _onNextAudio;

		[Token(Token = "0x4001C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4001C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Inject]
		private InputProvider _inputProvider;

		[Token(Token = "0x60014C7")]
		[Address(RVA = "0x1A13098", Offset = "0x1A13098", VA = "0x1A13098", Slot = "4")]
		[AsyncStateMachine(typeof(<SetEvent>d__5))]
		public override UniTask<bool> SetEvent(CancellationToken token)
		{
			return default(UniTask<bool>);
		}

		[Token(Token = "0x60014C8")]
		[Address(RVA = "0x1A13178", Offset = "0x1A13178", VA = "0x1A13178")]
		public StandingPointEvent()
		{
		}
	}
}
namespace __Imacreate__.__Production__.GrooveFitGames.Core.Score
{
	[Token(Token = "0x2000519")]
	public class GFHighScores
	{
		[Token(Token = "0x4001C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float BronzeHighScore;

		[Token(Token = "0x4001C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float SilverHighScore;

		[Token(Token = "0x4001C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float GoldHighScore;

		[Token(Token = "0x4001C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float PlatinumHighScore;

		[Token(Token = "0x4001C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float EndlessHighScore;

		[Token(Token = "0x60014CC")]
		[Address(RVA = "0x1A13998", Offset = "0x1A13998", VA = "0x1A13998")]
		public void UpdateHighScore(GameStatus.Difficulty difficulty, float value)
		{
		}

		[Token(Token = "0x60014CD")]
		[Address(RVA = "0x1A13A64", Offset = "0x1A13A64", VA = "0x1A13A64")]
		public float GetHighScore(GameStatus.Difficulty difficulty)
		{
			return default(float);
		}

		[Token(Token = "0x60014CE")]
		[Address(RVA = "0x1A13B34", Offset = "0x1A13B34", VA = "0x1A13B34")]
		public GFHighScores()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200051A")]
	public class ScoreData
	{
		[Token(Token = "0x4001C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float Score;

		[Token(Token = "0x4001C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int MaxCombo;

		[Token(Token = "0x4001C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int GreatCount;

		[Token(Token = "0x4001C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int OKCount;

		[Token(Token = "0x4001C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int BadCount;

		[Token(Token = "0x60014CF")]
		[Address(RVA = "0x1A13B3C", Offset = "0x1A13B3C", VA = "0x1A13B3C")]
		public ScoreData()
		{
		}
	}
	[Token(Token = "0x200051B")]
	public class ScoreManager : SingletonMonoBehaviour<ScoreManager>
	{
		[Token(Token = "0x4001C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Settings")]
		[SerializeField]
		private float _coefficient;

		[Token(Token = "0x4001C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float _comboScaleFactor;

		[Token(Token = "0x4001C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float _scaleFactorBase;

		[Token(Token = "0x4001C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GFScoreRateSettings _gfScoreRateSettings;

		[Token(Token = "0x4001C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[ReadOnly]
		[Header("ReadOnly Display")]
		private float _score;

		[Token(Token = "0x4001C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		[ReadOnly]
		private int _maxCombo;

		[Token(Token = "0x4001C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[ReadOnly]
		private int _greatCount;

		[Token(Token = "0x4001C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		[ReadOnly]
		private int _okCount;

		[Token(Token = "0x4001C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[ReadOnly]
		private int _badCount;

		[Token(Token = "0x4001C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int _currentCombo;

		[Token(Token = "0x4001C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool _comboOnGoing;

		[Token(Token = "0x4001C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Inject]
		private IPublisher<CurrentScoreData> _currentScorePublisher;

		[Token(Token = "0x4001C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private readonly bool _dontDestroyOnLoad;

		[Token(Token = "0x170001DF")]
		[Inject]
		private ISubscriber<FPActionData> OnFPAction
		{
			[Token(Token = "0x60014D0")]
			[Address(RVA = "0x1A13B44", Offset = "0x1A13B44", VA = "0x1A13B44")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60014D1")]
			[Address(RVA = "0x1A13B4C", Offset = "0x1A13B4C", VA = "0x1A13B4C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170001E0")]
		[Inject]
		private ISubscriber<GameStatus> OnGameStatus
		{
			[Token(Token = "0x60014D2")]
			[Address(RVA = "0x1A13B54", Offset = "0x1A13B54", VA = "0x1A13B54")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60014D3")]
			[Address(RVA = "0x1A13B5C", Offset = "0x1A13B5C", VA = "0x1A13B5C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170001E1")]
		protected override bool dontDestroyOnLoad
		{
			[Token(Token = "0x60014D4")]
			[Address(RVA = "0x1A13B64", Offset = "0x1A13B64", VA = "0x1A13B64", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60014D5")]
		[Address(RVA = "0x1A13B6C", Offset = "0x1A13B6C", VA = "0x1A13B6C")]
		private void Start()
		{
		}

		[Token(Token = "0x60014D6")]
		[Address(RVA = "0x1A13D84", Offset = "0x1A13D84", VA = "0x1A13D84")]
		private void AddScore(FPActionData value)
		{
		}

		[Token(Token = "0x60014D7")]
		[Address(RVA = "0x1A13F88", Offset = "0x1A13F88", VA = "0x1A13F88")]
		private void Reset()
		{
		}

		[Token(Token = "0x60014D8")]
		[Address(RVA = "0x1A140BC", Offset = "0x1A140BC", VA = "0x1A140BC")]
		public ScoreData GetScoreData()
		{
			return null;
		}

		[Token(Token = "0x60014D9")]
		[Address(RVA = "0x1A1412C", Offset = "0x1A1412C", VA = "0x1A1412C")]
		public void ChangeComboScaleFactor(float scale)
		{
		}

		[Token(Token = "0x60014DA")]
		[Address(RVA = "0x1A14134", Offset = "0x1A14134", VA = "0x1A14134")]
		private float SetScaleFactorBase(GameStatus.Difficulty difficulty, GameStatus.OptionRule optionRule, GameStatus.EndlessLifeType lifeType)
		{
			return default(float);
		}

		[Token(Token = "0x60014DB")]
		[Address(RVA = "0x1A141E8", Offset = "0x1A141E8", VA = "0x1A141E8")]
		public ScoreManager()
		{
		}
	}
}
namespace __Imacreate__.__Production__.GrooveFitGames.Core.Result
{
	[Token(Token = "0x200051C")]
	[RequireComponent(typeof(AudioSource))]
	public class CongratulationsEffectManager : MonoBehaviour
	{
		[Token(Token = "0x200051D")]
		public enum EffectType
		{
			[Token(Token = "0x4001C76")]
			RankIn,
			[Token(Token = "0x4001C77")]
			HighScore
		}

		[StructLayout(3)]
		[Token(Token = "0x200051E")]
		[CompilerGenerated]
		private struct <ActivateEffect>d__15 : IAsyncStateMachine
		{
			[Token(Token = "0x4001C78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001C79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001C7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool forceActivate;

			[Token(Token = "0x4001C7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CongratulationsEffectManager <>4__this;

			[Token(Token = "0x4001C7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken token;

			[Token(Token = "0x4001C7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Transform <fukidashi>5__2;

			[Token(Token = "0x4001C7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private DOTweenAsyncExtensions.TweenAwaiter <>u__1;

			[Token(Token = "0x4001C7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private UniTask.Awaiter <>u__2;

			[Token(Token = "0x60014E2")]
			[Address(RVA = "0x1A145BC", Offset = "0x1A145BC", VA = "0x1A145BC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60014E3")]
			[Address(RVA = "0x1A15060", Offset = "0x1A15060", VA = "0x1A15060", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _fukidashiRankIn;

		[Token(Token = "0x4001C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _fukidashiHighScore;

		[Token(Token = "0x4001C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ParticleSystem[] _fireworks;

		[Token(Token = "0x4001C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float _timeSpan;

		[Token(Token = "0x4001C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AudioClip _sound;

		[Token(Token = "0x4001C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private AnimationCurve _openCurve;

		[Token(Token = "0x4001C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private AnimationCurve _closeCurve;

		[Token(Token = "0x4001C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private AudioSource _audio;

		[Token(Token = "0x4001C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<int, bool> _flags;

		[Token(Token = "0x4001C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool _isDone;

		[Token(Token = "0x4001C74")]
		private const float FADE_DURATION = 0.5f;

		[Token(Token = "0x60014DD")]
		[Address(RVA = "0x1A142C8", Offset = "0x1A142C8", VA = "0x1A142C8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60014DE")]
		[Address(RVA = "0x1A143D0", Offset = "0x1A143D0", VA = "0x1A143D0")]
		public void SetEffectFlag(EffectType type)
		{
		}

		[Token(Token = "0x60014DF")]
		[Address(RVA = "0x1A142CC", Offset = "0x1A142CC", VA = "0x1A142CC")]
		public void ResetFlags()
		{
		}

		[Token(Token = "0x60014E0")]
		[Address(RVA = "0x1A1442C", Offset = "0x1A1442C", VA = "0x1A1442C")]
		[AsyncStateMachine(typeof(<ActivateEffect>d__15))]
		public UniTask ActivateEffect(CancellationToken token, bool forceActivate = false)
		{
			return default(UniTask);
		}

		[Token(Token = "0x60014E1")]
		[Address(RVA = "0x1A145B4", Offset = "0x1A145B4", VA = "0x1A145B4")]
		public CongratulationsEffectManager()
		{
		}
	}
	[Token(Token = "0x200051F")]
	public class DisableOnResult : MonoBehaviour
	{
		[Token(Token = "0x4001C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject[] _disableObjects;

		[Token(Token = "0x4001C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private UnityEvent _disableEvent;

		[Token(Token = "0x4001C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UnityEvent _enableEvent;

		[Token(Token = "0x60014E4")]
		[Address(RVA = "0x1A1506C", Offset = "0x1A1506C", VA = "0x1A1506C")]
		public void SetActive(bool active)
		{
		}

		[Token(Token = "0x60014E5")]
		[Address(RVA = "0x1A150F8", Offset = "0x1A150F8", VA = "0x1A150F8")]
		public DisableOnResult()
		{
		}
	}
	[Token(Token = "0x2000520")]
	public class GetAndSendParametersEvent : EventBlock
	{
		[Token(Token = "0x2000521")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass17_0
		{
			[Token(Token = "0x4001C94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GetAndSendParametersEvent <>4__this;

			[Token(Token = "0x4001C95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ScoreData scoreData;

			[Token(Token = "0x4001C96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CalorieData calorieData;

			[Token(Token = "0x4001C97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken token;

			[Token(Token = "0x60014EE")]
			[Address(RVA = "0x1A15C74", Offset = "0x1A15C74", VA = "0x1A15C74")]
			public <>c__DisplayClass17_0()
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000523")]
		[CompilerGenerated]
		private struct <SetEvent>d__17 : IAsyncStateMachine
		{
			[Token(Token = "0x4001C9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001C9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x4001C9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GetAndSendParametersEvent <>4__this;

			[Token(Token = "0x4001C9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken token;

			[Token(Token = "0x4001CA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private <>c__DisplayClass17_0 <>8__1;

			[Token(Token = "0x4001CA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private GFGameSettings <gameSettings>5__2;

			[Token(Token = "0x4001CA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <highscore>5__3;

			[Token(Token = "0x4001CA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private UniTask<CalorieData>.Awaiter <>u__1;

			[Token(Token = "0x4001CA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private UniTask.Awaiter <>u__2;

			[Token(Token = "0x60014F2")]
			[Address(RVA = "0x1A16078", Offset = "0x1A16078", VA = "0x1A16078", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60014F3")]
			[Address(RVA = "0x1A18CE8", Offset = "0x1A18CE8", VA = "0x1A18CE8", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("UI")]
		[SerializeField]
		private MultilingualTextMeshPro _titleText;

		[Token(Token = "0x4001C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TextMeshProUGUI _scoreText;

		[Token(Token = "0x4001C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TextMeshProUGUI _highScoreText;

		[Token(Token = "0x4001C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TextMeshProUGUI _maxComboText;

		[Token(Token = "0x4001C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private TextMeshProUGUI _greatText;

		[Token(Token = "0x4001C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private TextMeshProUGUI _okText;

		[Token(Token = "0x4001C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private TextMeshProUGUI _badText;

		[Token(Token = "0x4001C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private MultilingualTextMeshPro _difficulty_option;

		[Token(Token = "0x4001C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private TextMeshProUGUI _thisCalorieText;

		[Token(Token = "0x4001C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private TextMeshProUGUI _todayCalorieText;

		[Token(Token = "0x4001C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private MultilingualTextMeshPro _calorieFoodText;

		[Token(Token = "0x4001C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Image _calorieFoodImage;

		[Token(Token = "0x4001C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private RankUIView _rankUIView;

		[Token(Token = "0x4001C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[FormerlySerializedAs("_ResultDataManager")]
		[Header("Leaderboard")]
		[SerializeField]
		private ResultDataManager resultDataManager;

		[Token(Token = "0x4001C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private SnareDrumButtonManager _rankingButton;

		[Token(Token = "0x4001C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private CongratulationsEffectManager _congratulationsEffect;

		[Token(Token = "0x4001C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[Inject]
		private MultilingualTextManager _multilingualTextManager;

		[Token(Token = "0x60014E6")]
		[Address(RVA = "0x1A15100", Offset = "0x1A15100", VA = "0x1A15100", Slot = "4")]
		[AsyncStateMachine(typeof(<SetEvent>d__17))]
		public override UniTask<bool> SetEvent(CancellationToken token)
		{
			return default(UniTask<bool>);
		}

		[Token(Token = "0x60014E7")]
		[Address(RVA = "0x1A151F8", Offset = "0x1A151F8", VA = "0x1A151F8")]
		private void CheckBothHandAchievement(GrooveFitGame game)
		{
		}

		[Token(Token = "0x60014E8")]
		[Address(RVA = "0x1A156B0", Offset = "0x1A156B0", VA = "0x1A156B0")]
		private void CheckAvatarAchievement()
		{
		}

		[Token(Token = "0x60014E9")]
		[Address(RVA = "0x1A15808", Offset = "0x1A15808", VA = "0x1A15808")]
		private void CheckSecretScoreAchievement(GFGameSettings settings, ScoreData scoreData)
		{
		}

		[Token(Token = "0x60014EA")]
		[Address(RVA = "0x1A158F0", Offset = "0x1A158F0", VA = "0x1A158F0")]
		private void CheckAudioAchievement()
		{
		}

		[Token(Token = "0x60014EB")]
		[Address(RVA = "0x1A15BEC", Offset = "0x1A15BEC", VA = "0x1A15BEC")]
		private void CheckCalorieAchievement(CalorieData data)
		{
		}

		[Token(Token = "0x60014EC")]
		[Address(RVA = "0x1A15C6C", Offset = "0x1A15C6C", VA = "0x1A15C6C")]
		public GetAndSendParametersEvent()
		{
		}
	}
	[Token(Token = "0x2000524")]
	public class HalfFadeOutEvent : EventBlock
	{
		[StructLayout(3)]
		[Token(Token = "0x2000525")]
		[CompilerGenerated]
		private struct <SetEvent>d__1 : IAsyncStateMachine
		{
			[Token(Token = "0x4001CA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001CA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x4001CA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HalfFadeOutEvent <>4__this;

			[Token(Token = "0x4001CA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x60014F7")]
			[Address(RVA = "0x1A18F78", Offset = "0x1A18F78", VA = "0x1A18F78", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60014F8")]
			[Address(RVA = "0x1A193A4", Offset = "0x1A193A4", VA = "0x1A193A4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000526")]
		[CompilerGenerated]
		private struct <HalfFadeOut>d__2 : IAsyncStateMachine
		{
			[Token(Token = "0x4001CAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001CAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001CAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public HalfFadeOutEvent <>4__this;

			[Token(Token = "0x4001CAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float time;

			[Token(Token = "0x4001CAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private DOTweenAsyncExtensions.TweenAwaiter <>u__1;

			[Token(Token = "0x60014F9")]
			[Address(RVA = "0x1A193FC", Offset = "0x1A193FC", VA = "0x1A193FC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60014FA")]
			[Address(RVA = "0x1A19744", Offset = "0x1A19744", VA = "0x1A19744", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _fadeCylinder;

		[Token(Token = "0x60014F4")]
		[Address(RVA = "0x1A18D40", Offset = "0x1A18D40", VA = "0x1A18D40", Slot = "4")]
		[AsyncStateMachine(typeof(<SetEvent>d__1))]
		public override UniTask<bool> SetEvent(CancellationToken token)
		{
			return default(UniTask<bool>);
		}

		[Token(Token = "0x60014F5")]
		[Address(RVA = "0x1A18E04", Offset = "0x1A18E04", VA = "0x1A18E04")]
		[AsyncStateMachine(typeof(<HalfFadeOut>d__2))]
		private UniTask HalfFadeOut(float time)
		{
			return default(UniTask);
		}

		[Token(Token = "0x60014F6")]
		[Address(RVA = "0x1A18F70", Offset = "0x1A18F70", VA = "0x1A18F70")]
		public HalfFadeOutEvent()
		{
		}
	}
	[Token(Token = "0x2000527")]
	public class ResultLeaderboardManager : MonoBehaviour
	{
		[Token(Token = "0x2000528")]
		public enum BoardType
		{
			[Token(Token = "0x4001CBF")]
			Score,
			[Token(Token = "0x4001CC0")]
			Calories
		}

		[Serializable]
		[Token(Token = "0x2000529")]
		public class LeaderboardParams
		{
			[Token(Token = "0x4001CC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject _root;

			[Token(Token = "0x4001CC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform _rowsPivot;

			[Token(Token = "0x4001CC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameObject _loadingImage;

			[Token(Token = "0x4001CC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GameObject _errorIcon;

			[NonSerialized]
			[Token(Token = "0x4001CC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool _loaded;

			[NonSerialized]
			[Token(Token = "0x4001CC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
			public bool _loading;

			[Token(Token = "0x6001505")]
			[Address(RVA = "0x1A1A2C4", Offset = "0x1A1A2C4", VA = "0x1A1A2C4")]
			public LeaderboardParams()
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200052A")]
		[CompilerGenerated]
		private struct <Initialize>d__18 : IAsyncStateMachine
		{
			[Token(Token = "0x4001CC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001CC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001CC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ResultLeaderboardManager <>4__this;

			[Token(Token = "0x4001CCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CancellationToken token;

			[Token(Token = "0x4001CCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6001506")]
			[Address(RVA = "0x1A1A2CC", Offset = "0x1A1A2CC", VA = "0x1A1A2CC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001507")]
			[Address(RVA = "0x1A1AD68", Offset = "0x1A1AD68", VA = "0x1A1AD68", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200052B")]
		[CompilerGenerated]
		private struct <LoadScoreRanking>d__19 : IAsyncStateMachine
		{
			[Token(Token = "0x4001CCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001CCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001CCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ResultLeaderboardManager <>4__this;

			[Token(Token = "0x4001CCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CancellationToken token;

			[Token(Token = "0x4001CD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private LeaderboardParams <leaderboard>5__2;

			[Token(Token = "0x4001CD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6001508")]
			[Address(RVA = "0x1A1AD74", Offset = "0x1A1AD74", VA = "0x1A1AD74", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001509")]
			[Address(RVA = "0x1A1B784", Offset = "0x1A1B784", VA = "0x1A1B784", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200052C")]
		[CompilerGenerated]
		private struct <LoadCalorieRanking>d__20 : IAsyncStateMachine
		{
			[Token(Token = "0x4001CD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001CD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001CD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ResultLeaderboardManager <>4__this;

			[Token(Token = "0x4001CD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CancellationToken token;

			[Token(Token = "0x4001CD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private LeaderboardParams <leaderboard>5__2;

			[Token(Token = "0x4001CD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private UniTask<List<RankingDataEntry>>.Awaiter <>u__1;

			[Token(Token = "0x600150A")]
			[Address(RVA = "0x1A1B790", Offset = "0x1A1B790", VA = "0x1A1B790", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600150B")]
			[Address(RVA = "0x1A1BD50", Offset = "0x1A1BD50", VA = "0x1A1BD50", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200052D")]
		[CompilerGenerated]
		private struct <RotateLoading>d__23 : IAsyncStateMachine
		{
			[Token(Token = "0x4001CD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001CD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001CDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LeaderboardParams leaderboard;

			[Token(Token = "0x4001CDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CancellationToken token;

			[Token(Token = "0x4001CDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x600150C")]
			[Address(RVA = "0x1A1BD5C", Offset = "0x1A1BD5C", VA = "0x1A1BD5C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600150D")]
			[Address(RVA = "0x1A1C1DC", Offset = "0x1A1C1DC", VA = "0x1A1C1DC", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200052E")]
		[CompilerGenerated]
		private struct <SwitchLeaderBoard>d__24 : IAsyncStateMachine
		{
			[Token(Token = "0x4001CDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001CDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001CDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ResultLeaderboardManager <>4__this;

			[Token(Token = "0x4001CE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x600150E")]
			[Address(RVA = "0x1A1C1E8", Offset = "0x1A1C1E8", VA = "0x1A1C1E8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600150F")]
			[Address(RVA = "0x1A1C750", Offset = "0x1A1C750", VA = "0x1A1C750", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[FormerlySerializedAs("ResultDataManager")]
		[Header("Network")]
		[SerializeField]
		private ResultDataManager resultDataManager;

		[Token(Token = "0x4001CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip _errorSound;

		[Token(Token = "0x4001CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Header("General")]
		[SerializeField]
		private GameObject _leaderboardsPivot;

		[Token(Token = "0x4001CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _switchSound;

		[Token(Token = "0x4001CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject _rankingRowPrefab;

		[Token(Token = "0x4001CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private LeaderboardParams _scoreBoard;

		[Token(Token = "0x4001CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private LeaderboardParams _caloriesBoard;

		[Token(Token = "0x4001CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool _isSwitching;

		[Token(Token = "0x4001CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private CancellationToken _token;

		[Token(Token = "0x4001CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private AudioSource _audio;

		[Token(Token = "0x4001CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool _switchActive;

		[Token(Token = "0x4001CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[Header("Rank In")]
		[SerializeField]
		private CongratulationsEffectManager _congratulationsEffectManager;

		[Token(Token = "0x4001CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[Header("OfflineMode")]
		[SerializeField]
		private GameObject _comingSoon;

		[Token(Token = "0x4001CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private BoardType _currenType;

		[Token(Token = "0x4001CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Quaternion _defaultRotation;

		[Token(Token = "0x60014FB")]
		[Address(RVA = "0x1A19750", Offset = "0x1A19750", VA = "0x1A19750")]
		private void Awake()
		{
		}

		[Token(Token = "0x60014FC")]
		[Address(RVA = "0x1A19788", Offset = "0x1A19788", VA = "0x1A19788")]
		[AsyncStateMachine(typeof(<Initialize>d__18))]
		public UniTask Initialize(CancellationToken token)
		{
			return default(UniTask);
		}

		[Token(Token = "0x60014FD")]
		[Address(RVA = "0x1A19908", Offset = "0x1A19908", VA = "0x1A19908")]
		[AsyncStateMachine(typeof(<LoadScoreRanking>d__19))]
		private UniTask LoadScoreRanking(CancellationToken token)
		{
			return default(UniTask);
		}

		[Token(Token = "0x60014FE")]
		[Address(RVA = "0x1A19A84", Offset = "0x1A19A84", VA = "0x1A19A84")]
		[AsyncStateMachine(typeof(<LoadCalorieRanking>d__20))]
		private void LoadCalorieRanking(CancellationToken token)
		{
		}

		[Token(Token = "0x60014FF")]
		[Address(RVA = "0x1A19B60", Offset = "0x1A19B60", VA = "0x1A19B60")]
		private void SetScoreLeaderboard(List<AddPlayDataResponse.ScoreRankingUser> list, int rankedInNum = 0)
		{
		}

		[Token(Token = "0x6001500")]
		[Address(RVA = "0x1A19EC4", Offset = "0x1A19EC4", VA = "0x1A19EC4")]
		private void SetCalorieLeaderboard(List<RankingDataEntry> list)
		{
		}

		[Token(Token = "0x6001501")]
		[Address(RVA = "0x1A1A114", Offset = "0x1A1A114", VA = "0x1A1A114")]
		[AsyncStateMachine(typeof(<RotateLoading>d__23))]
		private void RotateLoading(LeaderboardParams leaderboard, CancellationToken token)
		{
		}

		[Token(Token = "0x6001502")]
		[Address(RVA = "0x1A1A1EC", Offset = "0x1A1A1EC", VA = "0x1A1A1EC")]
		[AsyncStateMachine(typeof(<SwitchLeaderBoard>d__24))]
		public void SwitchLeaderBoard()
		{
		}

		[Token(Token = "0x6001503")]
		[Address(RVA = "0x1A1A2A0", Offset = "0x1A1A2A0", VA = "0x1A1A2A0")]
		public ResultLeaderboardManager()
		{
		}
	}
	[Token(Token = "0x200052F")]
	public class ResultUIEvent : EventBlock
	{
		[StructLayout(3)]
		[Token(Token = "0x2000530")]
		[CompilerGenerated]
		private struct <SetEvent>d__14 : IAsyncStateMachine
		{
			[Token(Token = "0x4001CEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001CEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x4001CF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ResultUIEvent <>4__this;

			[Token(Token = "0x4001CF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken token;

			[Token(Token = "0x4001CF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private CancellationTokenSource <linkedTokenSource>5__2;

			[Token(Token = "0x4001CF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x600151D")]
			[Address(RVA = "0x1A1D028", Offset = "0x1A1D028", VA = "0x1A1D028", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600151E")]
			[Address(RVA = "0x1A1DAD4", Offset = "0x1A1DAD4", VA = "0x1A1DAD4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000531")]
		[CompilerGenerated]
		private struct <ActivateDefaultButtons>d__15 : IAsyncStateMachine
		{
			[Token(Token = "0x4001CF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001CF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001CF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ResultUIEvent <>4__this;

			[Token(Token = "0x4001CF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x600151F")]
			[Address(RVA = "0x1A1DB2C", Offset = "0x1A1DB2C", VA = "0x1A1DB2C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001520")]
			[Address(RVA = "0x1A1E3FC", Offset = "0x1A1E3FC", VA = "0x1A1E3FC", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000532")]
		[CompilerGenerated]
		private struct <DeactivateDefaultButtons>d__16 : IAsyncStateMachine
		{
			[Token(Token = "0x4001CF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001CF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001CFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ResultUIEvent <>4__this;

			[Token(Token = "0x4001CFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6001521")]
			[Address(RVA = "0x1A1E408", Offset = "0x1A1E408", VA = "0x1A1E408", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001522")]
			[Address(RVA = "0x1A1E8A4", Offset = "0x1A1E8A4", VA = "0x1A1E8A4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000533")]
		[CompilerGenerated]
		private struct <AppearCanvas>d__17 : IAsyncStateMachine
		{
			[Token(Token = "0x4001CFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001CFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001CFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameObject canvas;

			[Token(Token = "0x4001CFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CancellationToken token;

			[Token(Token = "0x4001D00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6001523")]
			[Address(RVA = "0x1A1E8B0", Offset = "0x1A1E8B0", VA = "0x1A1E8B0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001524")]
			[Address(RVA = "0x1A1ED94", Offset = "0x1A1ED94", VA = "0x1A1ED94", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000534")]
		[CompilerGenerated]
		private struct <DisappearCanvas>d__18 : IAsyncStateMachine
		{
			[Token(Token = "0x4001D01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001D02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001D03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameObject canvas;

			[Token(Token = "0x4001D04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CancellationToken token;

			[Token(Token = "0x4001D05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <defaultPos>5__2;

			[Token(Token = "0x4001D06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6001525")]
			[Address(RVA = "0x1A1EDA0", Offset = "0x1A1EDA0", VA = "0x1A1EDA0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001526")]
			[Address(RVA = "0x1A1F288", Offset = "0x1A1F288", VA = "0x1A1F288", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000535")]
		[CompilerGenerated]
		private struct <Share>d__19 : IAsyncStateMachine
		{
			[Token(Token = "0x4001D07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001D08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001D09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ResultUIEvent <>4__this;

			[Token(Token = "0x4001D0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6001527")]
			[Address(RVA = "0x1A1F294", Offset = "0x1A1F294", VA = "0x1A1F294", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001528")]
			[Address(RVA = "0x1A1F558", Offset = "0x1A1F558", VA = "0x1A1F558", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000536")]
		[CompilerGenerated]
		private struct <Retry>d__20 : IAsyncStateMachine
		{
			[Token(Token = "0x4001D0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001D0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001D0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ResultUIEvent <>4__this;

			[Token(Token = "0x4001D0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6001529")]
			[Address(RVA = "0x1A1F564", Offset = "0x1A1F564", VA = "0x1A1F564", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600152A")]
			[Address(RVA = "0x1A1FAB4", Offset = "0x1A1FAB4", VA = "0x1A1FAB4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000537")]
		[CompilerGenerated]
		private struct <MoveToGameSelect>d__21 : IAsyncStateMachine
		{
			[Token(Token = "0x4001D0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001D10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001D11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ResultUIEvent <>4__this;

			[Token(Token = "0x4001D12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x600152B")]
			[Address(RVA = "0x1A1FAC0", Offset = "0x1A1FAC0", VA = "0x1A1FAC0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600152C")]
			[Address(RVA = "0x1A20230", Offset = "0x1A20230", VA = "0x1A20230", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Settings")]
		[SerializeField]
		private GameObject _resultUiPivot;

		[Token(Token = "0x4001CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GFGameMessagePublisher _messagePublisher;

		[Token(Token = "0x4001CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ResultLeaderboardManager _leaderboardManager;

		[Token(Token = "0x4001CE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private DisableOnResult _disableOnResult;

		[Token(Token = "0x4001CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _shareMode;

		[Token(Token = "0x4001CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Inject]
		private InputProvider _inputProvider;

		[Token(Token = "0x4001CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Header("Buttons")]
		[SerializeField]
		private SnareDrumButtonManager _share;

		[Token(Token = "0x4001CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private SnareDrumButtonManager _retry;

		[Token(Token = "0x4001CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private SnareDrumButtonManager _home;

		[Token(Token = "0x4001CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private SnareDrumButtonManager _ranking;

		[Token(Token = "0x4001CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Header("FadeObject")]
		[SerializeField]
		private MeshRenderer _fadeCylinder;

		[Token(Token = "0x4001CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool isReturnedToGameSelect;

		[Token(Token = "0x4001CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private CancellationTokenSource _resultToken;

		[Token(Token = "0x6001510")]
		[Address(RVA = "0x1A1C75C", Offset = "0x1A1C75C", VA = "0x1A1C75C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001511")]
		[Address(RVA = "0x1A1C7D8", Offset = "0x1A1C7D8", VA = "0x1A1C7D8", Slot = "4")]
		[AsyncStateMachine(typeof(<SetEvent>d__14))]
		public override UniTask<bool> SetEvent(CancellationToken token)
		{
			return default(UniTask<bool>);
		}

		[Token(Token = "0x6001512")]
		[Address(RVA = "0x1A1C8B8", Offset = "0x1A1C8B8", VA = "0x1A1C8B8")]
		[AsyncStateMachine(typeof(<ActivateDefaultButtons>d__15))]
		private void ActivateDefaultButtons()
		{
		}

		[Token(Token = "0x6001513")]
		[Address(RVA = "0x1A1C96C", Offset = "0x1A1C96C", VA = "0x1A1C96C")]
		[AsyncStateMachine(typeof(<DeactivateDefaultButtons>d__16))]
		private UniTask DeactivateDefaultButtons()
		{
			return default(UniTask);
		}

		[Token(Token = "0x6001514")]
		[Address(RVA = "0x1A1CAC8", Offset = "0x1A1CAC8", VA = "0x1A1CAC8")]
		[AsyncStateMachine(typeof(<AppearCanvas>d__17))]
		private UniTask AppearCanvas(GameObject canvas, CancellationToken token)
		{
			return default(UniTask);
		}

		[Token(Token = "0x6001515")]
		[Address(RVA = "0x1A1CC48", Offset = "0x1A1CC48", VA = "0x1A1CC48")]
		[AsyncStateMachine(typeof(<DisappearCanvas>d__18))]
		private UniTask DisappearCanvas(GameObject canvas, CancellationToken token)
		{
			return default(UniTask);
		}

		[Token(Token = "0x6001516")]
		[Address(RVA = "0x1A1CDC8", Offset = "0x1A1CDC8", VA = "0x1A1CDC8")]
		[AsyncStateMachine(typeof(<Share>d__19))]
		public void Share()
		{
		}

		[Token(Token = "0x6001517")]
		[Address(RVA = "0x1A1CE7C", Offset = "0x1A1CE7C", VA = "0x1A1CE7C")]
		[AsyncStateMachine(typeof(<Retry>d__20))]
		public void Retry()
		{
		}

		[Token(Token = "0x6001518")]
		[Address(RVA = "0x1A1CF30", Offset = "0x1A1CF30", VA = "0x1A1CF30")]
		[AsyncStateMachine(typeof(<MoveToGameSelect>d__21))]
		public void MoveToGameSelect()
		{
		}

		[Token(Token = "0x6001519")]
		[Address(RVA = "0x1A1C760", Offset = "0x1A1C760", VA = "0x1A1C760")]
		private void ResetToken()
		{
		}

		[Token(Token = "0x600151A")]
		[Address(RVA = "0x1A1CFE4", Offset = "0x1A1CFE4", VA = "0x1A1CFE4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600151B")]
		[Address(RVA = "0x1A1D018", Offset = "0x1A1D018", VA = "0x1A1D018")]
		public ResultUIEvent()
		{
		}
	}
	[Token(Token = "0x2000538")]
	public class SharePanelManager : MonoBehaviour
	{
		[Token(Token = "0x4001D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _imagePanel;

		[Token(Token = "0x4001D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _moviePanel;

		[Token(Token = "0x600152D")]
		[Address(RVA = "0x1A2023C", Offset = "0x1A2023C", VA = "0x1A2023C")]
		public void SetImagePanel()
		{
		}

		[Token(Token = "0x600152E")]
		[Address(RVA = "0x1A20274", Offset = "0x1A20274", VA = "0x1A20274")]
		public void SetMoviePanel()
		{
		}

		[Token(Token = "0x600152F")]
		[Address(RVA = "0x1A202AC", Offset = "0x1A202AC", VA = "0x1A202AC")]
		public SharePanelManager()
		{
		}
	}
	[Token(Token = "0x2000539")]
	public class ShareUIEvent : EventBlock
	{
		[StructLayout(3)]
		[Token(Token = "0x200053A")]
		[CompilerGenerated]
		private struct <SetEvent>d__12 : IAsyncStateMachine
		{
			[Token(Token = "0x4001D20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001D21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x4001D22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ShareUIEvent <>4__this;

			[Token(Token = "0x4001D23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken token;

			[Token(Token = "0x4001D24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private GameObject <twitterUi>5__2;

			[Token(Token = "0x4001D25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UniTask<GameObject>.Awaiter <>u__1;

			[Token(Token = "0x4001D26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private UniTask.Awaiter <>u__2;

			[Token(Token = "0x600153C")]
			[Address(RVA = "0x1A20C8C", Offset = "0x1A20C8C", VA = "0x1A20C8C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600153D")]
			[Address(RVA = "0x1A215E8", Offset = "0x1A215E8", VA = "0x1A215E8", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200053B")]
		[CompilerGenerated]
		private struct <AppearCanvas>d__13 : IAsyncStateMachine
		{
			[Token(Token = "0x4001D27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001D28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001D29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameObject canvas;

			[Token(Token = "0x4001D2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private DOTweenAsyncExtensions.TweenAwaiter <>u__1;

			[Token(Token = "0x600153E")]
			[Address(RVA = "0x1A21640", Offset = "0x1A21640", VA = "0x1A21640", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600153F")]
			[Address(RVA = "0x1A219E8", Offset = "0x1A219E8", VA = "0x1A219E8", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200053C")]
		[CompilerGenerated]
		private struct <DisappearCanvas>d__14 : IAsyncStateMachine
		{
			[Token(Token = "0x4001D2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001D2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001D2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameObject canvas;

			[Token(Token = "0x4001D2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Vector3 <defaultPos>5__2;

			[Token(Token = "0x4001D2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private DOTweenAsyncExtensions.TweenAwaiter <>u__1;

			[Token(Token = "0x6001540")]
			[Address(RVA = "0x1A219F4", Offset = "0x1A219F4", VA = "0x1A219F4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001541")]
			[Address(RVA = "0x1A21DA0", Offset = "0x1A21DA0", VA = "0x1A21DA0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200053D")]
		[CompilerGenerated]
		private struct <Back>d__15 : IAsyncStateMachine
		{
			[Token(Token = "0x4001D30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001D31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001D32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ShareUIEvent <>4__this;

			[Token(Token = "0x4001D33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6001542")]
			[Address(RVA = "0x1A21DAC", Offset = "0x1A21DAC", VA = "0x1A21DAC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001543")]
			[Address(RVA = "0x1A22268", Offset = "0x1A22268", VA = "0x1A22268", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200053E")]
		[CompilerGenerated]
		private struct <Twitter>d__16 : IAsyncStateMachine
		{
			[Token(Token = "0x4001D34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001D35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001D36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6001544")]
			[Address(RVA = "0x1A22274", Offset = "0x1A22274", VA = "0x1A22274", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001545")]
			[Address(RVA = "0x1A2254C", Offset = "0x1A2254C", VA = "0x1A2254C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200053F")]
		[CompilerGenerated]
		private struct <Facebook>d__17 : IAsyncStateMachine
		{
			[Token(Token = "0x4001D37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001D38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001D39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6001546")]
			[Address(RVA = "0x1A22558", Offset = "0x1A22558", VA = "0x1A22558", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001547")]
			[Address(RVA = "0x1A22830", Offset = "0x1A22830", VA = "0x1A22830", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000541")]
		[CompilerGenerated]
		private struct <AppearTwitterUICanvas>d__18 : IAsyncStateMachine
		{
			[Token(Token = "0x4001D3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001D3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<GameObject> <>t__builder;

			[Token(Token = "0x4001D3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ShareUIEvent <>4__this;

			[Token(Token = "0x4001D3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GameObject canvas;

			[Token(Token = "0x4001D40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private (GameObject, Vector3) <comingSoonUI>5__2;

			[Token(Token = "0x4001D41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private DOTweenAsyncExtensions.TweenAwaiter <>u__1;

			[Token(Token = "0x6001548")]
			[Address(RVA = "0x1A2283C", Offset = "0x1A2283C", VA = "0x1A2283C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001549")]
			[Address(RVA = "0x1A22C94", Offset = "0x1A22C94", VA = "0x1A22C94", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000542")]
		[CompilerGenerated]
		private struct <DisappearTwitterUICanvas>d__19 : IAsyncStateMachine
		{
			[Token(Token = "0x4001D42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001D43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001D44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameObject canvas;

			[Token(Token = "0x4001D45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameObject twitterUi;

			[Token(Token = "0x4001D46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <defaultPos>5__2;

			[Token(Token = "0x4001D47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private DOTweenAsyncExtensions.TweenAwaiter <>u__1;

			[Token(Token = "0x600154A")]
			[Address(RVA = "0x1A22CEC", Offset = "0x1A22CEC", VA = "0x1A22CEC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600154B")]
			[Address(RVA = "0x1A230D0", Offset = "0x1A230D0", VA = "0x1A230D0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Settings")]
		[SerializeField]
		private GameObject _shareUiPivot;

		[Token(Token = "0x4001D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SharePanelManager _sharePanel;

		[Token(Token = "0x4001D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _onNext;

		[Token(Token = "0x4001D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool _result;

		[Token(Token = "0x4001D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Header("TwitterUI")]
		[SerializeField]
		private GameObject _twitterUi;

		[Token(Token = "0x4001D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Vector3 offSetPos;

		[Token(Token = "0x4001D1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private Vector3 offsetRot;

		[Token(Token = "0x4001D1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Inject]
		private DiContainer container;

		[Token(Token = "0x4001D1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Header("Buttons")]
		[SerializeField]
		private SnareDrumButtonManager _back;

		[Token(Token = "0x4001D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Header("Coming Soon（SteamVR・Rift以外でTwitter連携機能がまだ使えない場合）")]
		[SerializeField]
		private bool _comingSoon;

		[Token(Token = "0x4001D1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject _comingSoonPrefab;

		[Token(Token = "0x6001530")]
		[Address(RVA = "0x1A202B4", Offset = "0x1A202B4", VA = "0x1A202B4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001531")]
		[Address(RVA = "0x1A202C0", Offset = "0x1A202C0", VA = "0x1A202C0", Slot = "4")]
		[AsyncStateMachine(typeof(<SetEvent>d__12))]
		public override UniTask<bool> SetEvent(CancellationToken token)
		{
			return default(UniTask<bool>);
		}

		[Token(Token = "0x6001532")]
		[Address(RVA = "0x1A203A0", Offset = "0x1A203A0", VA = "0x1A203A0")]
		[AsyncStateMachine(typeof(<AppearCanvas>d__13))]
		private UniTask AppearCanvas(GameObject canvas)
		{
			return default(UniTask);
		}

		[Token(Token = "0x6001533")]
		[Address(RVA = "0x1A204FC", Offset = "0x1A204FC", VA = "0x1A204FC")]
		[AsyncStateMachine(typeof(<DisappearCanvas>d__14))]
		private UniTask DisappearCanvas(GameObject canvas)
		{
			return default(UniTask);
		}

		[Token(Token = "0x6001534")]
		[Address(RVA = "0x1A2065C", Offset = "0x1A2065C", VA = "0x1A2065C")]
		[AsyncStateMachine(typeof(<Back>d__15))]
		public void Back()
		{
		}

		[Token(Token = "0x6001535")]
		[Address(RVA = "0x1A20710", Offset = "0x1A20710", VA = "0x1A20710")]
		[AsyncStateMachine(typeof(<Twitter>d__16))]
		public void Twitter()
		{
		}

		[Token(Token = "0x6001536")]
		[Address(RVA = "0x1A207AC", Offset = "0x1A207AC", VA = "0x1A207AC")]
		[AsyncStateMachine(typeof(<Facebook>d__17))]
		public void Facebook()
		{
		}

		[Token(Token = "0x6001537")]
		[Address(RVA = "0x1A20848", Offset = "0x1A20848", VA = "0x1A20848")]
		[AsyncStateMachine(typeof(<AppearTwitterUICanvas>d__18))]
		private UniTask<GameObject> AppearTwitterUICanvas(GameObject canvas)
		{
			return default(UniTask<GameObject>);
		}

		[Token(Token = "0x6001538")]
		[Address(RVA = "0x1A20940", Offset = "0x1A20940", VA = "0x1A20940")]
		[AsyncStateMachine(typeof(<DisappearTwitterUICanvas>d__19))]
		private UniTask DisappearTwitterUICanvas(GameObject canvas, GameObject twitterUi)
		{
			return default(UniTask);
		}

		[Token(Token = "0x6001539")]
		[Address(RVA = "0x1A20ABC", Offset = "0x1A20ABC", VA = "0x1A20ABC")]
		public ShareUIEvent()
		{
		}
	}
}
namespace __Imacreate__.__Production__.GrooveFitGames.Core.PracticeAssist
{
	[Token(Token = "0x2000543")]
	public class RhythmAssistDirector : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000544")]
		public class SpawnParam
		{
			[Token(Token = "0x4001D5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool Activate;

			[Token(Token = "0x4001D5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float Timing;

			[Token(Token = "0x600155B")]
			[Address(RVA = "0x1A24494", Offset = "0x1A24494", VA = "0x1A24494")]
			public SpawnParam()
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200054A")]
		[CompilerGenerated]
		private struct <SpawnRhythmNotes>d__29 : IAsyncStateMachine
		{
			[Token(Token = "0x4001D66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001D67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001D68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public RhythmAssistDirector <>4__this;

			[Token(Token = "0x4001D69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SpawnParam param;

			[Token(Token = "0x4001D6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private IDisposable <disposable>5__2;

			[Token(Token = "0x4001D6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x600156A")]
			[Address(RVA = "0x1A249E8", Offset = "0x1A249E8", VA = "0x1A249E8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600156B")]
			[Address(RVA = "0x1A25304", Offset = "0x1A25304", VA = "0x1A25304", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _notesParent;

		[Token(Token = "0x4001D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _dummyNotePrefab;

		[Token(Token = "0x4001D4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private RhythmNoteParam[] _rhythmNotes;

		[NonSerialized]
		[Token(Token = "0x4001D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly ReactiveProperty<SpawnParam> _assistActivate;

		[Token(Token = "0x4001D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Inject]
		private InputProvider _inputProvider;

		[Token(Token = "0x4001D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float _secondPerBeat;

		[Token(Token = "0x4001D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int _num;

		[Token(Token = "0x4001D51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int[] _spawnTiming;

		[Token(Token = "0x4001D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int _spawnTimingNum;

		[Token(Token = "0x4001D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private readonly BoolReactiveProperty _updateSpawnTiming;

		[Token(Token = "0x4001D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private readonly int[] _beatFix;

		[Token(Token = "0x4001D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool _firstSpawned;

		[Token(Token = "0x4001D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		private bool _uiActive;

		[Token(Token = "0x4001D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private RhythmNoteParam.SpawnMeasure _currentMeasure;

		[Token(Token = "0x4001D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private RhythmNoteParam[] _oneNotes;

		[Token(Token = "0x4001D59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private RhythmNoteParam[] _nineNotes;

		[Token(Token = "0x170001E2")]
		[Inject]
		private ISubscriber<BeatData> OnBeat
		{
			[Token(Token = "0x600154C")]
			[Address(RVA = "0x1A230DC", Offset = "0x1A230DC", VA = "0x1A230DC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600154D")]
			[Address(RVA = "0x1A230E4", Offset = "0x1A230E4", VA = "0x1A230E4")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170001E3")]
		[Inject]
		private ISubscriber<BPMData> OnBPMData
		{
			[Token(Token = "0x600154E")]
			[Address(RVA = "0x1A230EC", Offset = "0x1A230EC", VA = "0x1A230EC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600154F")]
			[Address(RVA = "0x1A230F4", Offset = "0x1A230F4", VA = "0x1A230F4")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001550")]
		[Address(RVA = "0x1A230FC", Offset = "0x1A230FC", VA = "0x1A230FC")]
		public void Initialize(CompositeDisposable disposables)
		{
		}

		[Token(Token = "0x6001551")]
		[Address(RVA = "0x1A2345C", Offset = "0x1A2345C", VA = "0x1A2345C")]
		private RhythmNoteParam[] SplitRhythmNote(RhythmNoteParam.SpawnMeasure measure)
		{
			return null;
		}

		[Token(Token = "0x6001552")]
		[Address(RVA = "0x1A235AC", Offset = "0x1A235AC", VA = "0x1A235AC")]
		private void PlayRhythmNotes(float currentBeat)
		{
		}

		[Token(Token = "0x6001553")]
		[Address(RVA = "0x1A23900", Offset = "0x1A23900", VA = "0x1A23900")]
		private void UpdateCurrentMeasure(float currentBeat)
		{
		}

		[Token(Token = "0x6001554")]
		[Address(RVA = "0x1A24154", Offset = "0x1A24154", VA = "0x1A24154")]
		[AsyncStateMachine(typeof(<SpawnRhythmNotes>d__29))]
		private void SpawnRhythmNotes(SpawnParam param)
		{
		}

		[Token(Token = "0x6001555")]
		[Address(RVA = "0x1A23CD4", Offset = "0x1A23CD4", VA = "0x1A23CD4")]
		private void Spawn(RhythmNoteParam.SpawnMeasure measure)
		{
		}

		[Token(Token = "0x6001556")]
		[Address(RVA = "0x1A2422C", Offset = "0x1A2422C", VA = "0x1A2422C")]
		public RhythmAssistDirector()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200054C")]
	internal class RhythmNoteParam
	{
		[Token(Token = "0x200054D")]
		public enum SpawnMeasure
		{
			[Token(Token = "0x4001D77")]
			One,
			[Token(Token = "0x4001D78")]
			Nine
		}

		[Token(Token = "0x4001D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SpawnMeasure SpawnAt;

		[Token(Token = "0x4001D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[Range(1f, 16f)]
		public int Timing;

		[Token(Token = "0x4001D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject NotePrefab;

		[Token(Token = "0x4001D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Range(1f, 5f)]
		public int VibrationStrength;

		[NonSerialized]
		[Token(Token = "0x4001D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject NoteObj;

		[Token(Token = "0x600156E")]
		[Address(RVA = "0x1A25840", Offset = "0x1A25840", VA = "0x1A25840")]
		public RhythmNoteParam()
		{
		}
	}
}
namespace __Imacreate__.__Production__.GrooveFitGames.Core.Pause
{
	[Token(Token = "0x200054E")]
	public class DeactivateWhenPause : MonoBehaviour
	{
		[Token(Token = "0x4001D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _isActiveNow;

		[Token(Token = "0x170001E4")]
		[Inject]
		private ISubscriber<OnPause> OnPauseEvent
		{
			[Token(Token = "0x600156F")]
			[Address(RVA = "0x1A25848", Offset = "0x1A25848", VA = "0x1A25848")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001570")]
			[Address(RVA = "0x1A25850", Offset = "0x1A25850", VA = "0x1A25850")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001571")]
		[Address(RVA = "0x1A25858", Offset = "0x1A25858", VA = "0x1A25858")]
		private void Start()
		{
		}

		[Token(Token = "0x6001572")]
		[Address(RVA = "0x1A259A4", Offset = "0x1A259A4", VA = "0x1A259A4")]
		public DeactivateWhenPause()
		{
		}
	}
	[Token(Token = "0x200054F")]
	public class DisableRendererWhenPause : MonoBehaviour
	{
		[Token(Token = "0x4001D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<Renderer> _renderers;

		[Token(Token = "0x4001D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<bool> _enabledList;

		[Token(Token = "0x170001E5")]
		[Inject]
		private ISubscriber<OnPause> OnPauseEvent
		{
			[Token(Token = "0x6001574")]
			[Address(RVA = "0x1A25A2C", Offset = "0x1A25A2C", VA = "0x1A25A2C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001575")]
			[Address(RVA = "0x1A25A34", Offset = "0x1A25A34", VA = "0x1A25A34")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001576")]
		[Address(RVA = "0x1A25A3C", Offset = "0x1A25A3C", VA = "0x1A25A3C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001577")]
		[Address(RVA = "0x1A25C50", Offset = "0x1A25C50", VA = "0x1A25C50")]
		public DisableRendererWhenPause()
		{
		}
	}
	[Token(Token = "0x2000551")]
	public class ObjectMaterialChangerWhenPause : MonoBehaviour
	{
		[Token(Token = "0x4001D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool _defaultIsLine;

		[Token(Token = "0x4001D83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool _deactivateRenderer;

		[Token(Token = "0x4001D84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string[] _stopScripts;

		[Token(Token = "0x4001D85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Material _wireframe;

		[Token(Token = "0x4001D86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _skinedMesh;

		[Token(Token = "0x4001D87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Renderer _renderer;

		[Token(Token = "0x4001D88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material[] _materials;

		[Token(Token = "0x4001D89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private MeshFilter _meshFilter;

		[Token(Token = "0x4001D8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private SkinnedMeshRenderer _skinnedMeshRenderer;

		[Token(Token = "0x170001E6")]
		[Inject]
		private ISubscriber<OnPause> OnPauseEvent
		{
			[Token(Token = "0x600157E")]
			[Address(RVA = "0x1A26034", Offset = "0x1A26034", VA = "0x1A26034")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600157F")]
			[Address(RVA = "0x1A2603C", Offset = "0x1A2603C", VA = "0x1A2603C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001580")]
		[Address(RVA = "0x1A26044", Offset = "0x1A26044", VA = "0x1A26044")]
		private void Start()
		{
		}

		[Token(Token = "0x6001581")]
		[Address(RVA = "0x1A264B8", Offset = "0x1A264B8", VA = "0x1A264B8")]
		private void OnWireFrame(Material wireframe)
		{
		}

		[Token(Token = "0x6001582")]
		[Address(RVA = "0x1A26374", Offset = "0x1A26374", VA = "0x1A26374")]
		private void OffWireFrame()
		{
		}

		[Token(Token = "0x6001583")]
		[Address(RVA = "0x1A26720", Offset = "0x1A26720", VA = "0x1A26720")]
		public void ChangeDefaultMaterials(Material mat)
		{
		}

		[Token(Token = "0x6001584")]
		[Address(RVA = "0x1A267B8", Offset = "0x1A267B8", VA = "0x1A267B8")]
		public ObjectMaterialChangerWhenPause()
		{
		}
	}
	[Token(Token = "0x2000552")]
	public class PauseButtonsManager : MonoBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x2000554")]
		[CompilerGenerated]
		private struct <ActivateDefaultButtons>d__30 : IAsyncStateMachine
		{
			[Token(Token = "0x4001DA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001DA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001DA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public PauseButtonsManager <>4__this;

			[Token(Token = "0x4001DA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x600159C")]
			[Address(RVA = "0x1A2782C", Offset = "0x1A2782C", VA = "0x1A2782C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600159D")]
			[Address(RVA = "0x1A28174", Offset = "0x1A28174", VA = "0x1A28174", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000555")]
		[CompilerGenerated]
		private struct <DeactivateDefaultButtons>d__31 : IAsyncStateMachine
		{
			[Token(Token = "0x4001DA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001DA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001DA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public PauseButtonsManager <>4__this;

			[Token(Token = "0x4001DA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x600159E")]
			[Address(RVA = "0x1A28180", Offset = "0x1A28180", VA = "0x1A28180", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600159F")]
			[Address(RVA = "0x1A2861C", Offset = "0x1A2861C", VA = "0x1A2861C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000556")]
		[CompilerGenerated]
		private struct <RestartToCheck>d__32 : IAsyncStateMachine
		{
			[Token(Token = "0x4001DAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001DAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001DAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public PauseButtonsManager <>4__this;

			[Token(Token = "0x4001DAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x60015A0")]
			[Address(RVA = "0x1A28628", Offset = "0x1A28628", VA = "0x1A28628", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60015A1")]
			[Address(RVA = "0x1A28D60", Offset = "0x1A28D60", VA = "0x1A28D60", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000557")]
		[CompilerGenerated]
		private struct <Restart>d__33 : IAsyncStateMachine
		{
			[Token(Token = "0x4001DAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001DAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001DB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public PauseButtonsManager <>4__this;

			[Token(Token = "0x4001DB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x60015A2")]
			[Address(RVA = "0x1A28D6C", Offset = "0x1A28D6C", VA = "0x1A28D6C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60015A3")]
			[Address(RVA = "0x1A2940C", Offset = "0x1A2940C", VA = "0x1A2940C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000558")]
		[CompilerGenerated]
		private struct <BackFromRestart>d__34 : IAsyncStateMachine
		{
			[Token(Token = "0x4001DB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001DB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001DB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public PauseButtonsManager <>4__this;

			[Token(Token = "0x4001DB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x60015A4")]
			[Address(RVA = "0x1A29418", Offset = "0x1A29418", VA = "0x1A29418", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60015A5")]
			[Address(RVA = "0x1A297A4", Offset = "0x1A297A4", VA = "0x1A297A4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000559")]
		[CompilerGenerated]
		private struct <MenuToCheck>d__35 : IAsyncStateMachine
		{
			[Token(Token = "0x4001DB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001DB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001DB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public PauseButtonsManager <>4__this;

			[Token(Token = "0x4001DB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x60015A6")]
			[Address(RVA = "0x1A297B0", Offset = "0x1A297B0", VA = "0x1A297B0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60015A7")]
			[Address(RVA = "0x1A29EE8", Offset = "0x1A29EE8", VA = "0x1A29EE8", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200055A")]
		[CompilerGenerated]
		private struct <Menu>d__36 : IAsyncStateMachine
		{
			[Token(Token = "0x4001DBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001DBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001DBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public PauseButtonsManager <>4__this;

			[Token(Token = "0x4001DBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x60015A8")]
			[Address(RVA = "0x1A29EF4", Offset = "0x1A29EF4", VA = "0x1A29EF4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60015A9")]
			[Address(RVA = "0x1A2A4E8", Offset = "0x1A2A4E8", VA = "0x1A2A4E8", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200055B")]
		[CompilerGenerated]
		private struct <BackFromMenu>d__37 : IAsyncStateMachine
		{
			[Token(Token = "0x4001DBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001DBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001DC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public PauseButtonsManager <>4__this;

			[Token(Token = "0x4001DC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x60015AA")]
			[Address(RVA = "0x1A2A4F4", Offset = "0x1A2A4F4", VA = "0x1A2A4F4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60015AB")]
			[Address(RVA = "0x1A2A880", Offset = "0x1A2A880", VA = "0x1A2A880", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200055C")]
		[CompilerGenerated]
		private struct <Continue>d__38 : IAsyncStateMachine
		{
			[Token(Token = "0x4001DC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001DC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001DC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public PauseButtonsManager <>4__this;

			[Token(Token = "0x4001DC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x60015AC")]
			[Address(RVA = "0x1A2A88C", Offset = "0x1A2A88C", VA = "0x1A2A88C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60015AD")]
			[Address(RVA = "0x1A2AD74", Offset = "0x1A2AD74", VA = "0x1A2AD74", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200055D")]
		[CompilerGenerated]
		private struct <OpenSettings>d__39 : IAsyncStateMachine
		{
			[Token(Token = "0x4001DC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001DC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001DC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public PauseButtonsManager <>4__this;

			[Token(Token = "0x4001DC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x60015AE")]
			[Address(RVA = "0x1A2AD80", Offset = "0x1A2AD80", VA = "0x1A2AD80", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60015AF")]
			[Address(RVA = "0x1A2B26C", Offset = "0x1A2B26C", VA = "0x1A2B26C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200055E")]
		[CompilerGenerated]
		private struct <BackFromSettings>d__40 : IAsyncStateMachine
		{
			[Token(Token = "0x4001DCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001DCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001DCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public PauseButtonsManager <>4__this;

			[Token(Token = "0x4001DCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x60015B0")]
			[Address(RVA = "0x1A2B278", Offset = "0x1A2B278", VA = "0x1A2B278", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60015B1")]
			[Address(RVA = "0x1A2B59C", Offset = "0x1A2B59C", VA = "0x1A2B59C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Setting")]
		private PauseManager _pauseManager;

		[Token(Token = "0x4001D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MultilingualTextMeshPro _restartText;

		[Token(Token = "0x4001D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MultilingualTextMeshPro _restartModalText;

		[Token(Token = "0x4001D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Header("Objects")]
		[SerializeField]
		private GameObject _pauseDefaultObjs;

		[Token(Token = "0x4001D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject _checkMenuButtons;

		[Token(Token = "0x4001D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject _checkRestartButtons;

		[Token(Token = "0x4001D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GameObject _settingsObjs;

		[Token(Token = "0x4001D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Header("Snare Drum Buttons")]
		[SerializeField]
		private SnareDrumButtonManager _restart;

		[Token(Token = "0x4001D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private SnareDrumButtonManager _menu;

		[Token(Token = "0x4001D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private SnareDrumButtonManager _continue;

		[Token(Token = "0x4001D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private SnareDrumButtonManager _settings;

		[Token(Token = "0x4001D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private SnareDrumButtonManager _menu_yes;

		[Token(Token = "0x4001D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private SnareDrumButtonManager _menu_no;

		[Token(Token = "0x4001D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private SnareDrumButtonManager _restart_yes;

		[Token(Token = "0x4001D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private SnareDrumButtonManager _restart_no;

		[Token(Token = "0x4001D9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private SnareDrumButtonManager _settings_back;

		[Token(Token = "0x4001D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private GameStatus.Status _currentStatus;

		[Token(Token = "0x170001E7")]
		[Inject]
		private IPublisher<GameStatus> GameStatusChanger
		{
			[Token(Token = "0x6001586")]
			[Address(RVA = "0x1A26854", Offset = "0x1A26854", VA = "0x1A26854")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001587")]
			[Address(RVA = "0x1A2685C", Offset = "0x1A2685C", VA = "0x1A2685C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170001E8")]
		[Inject]
		private ISubscriber<GameStatus> OnGameStatus
		{
			[Token(Token = "0x6001588")]
			[Address(RVA = "0x1A26864", Offset = "0x1A26864", VA = "0x1A26864")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001589")]
			[Address(RVA = "0x1A2686C", Offset = "0x1A2686C", VA = "0x1A2686C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170001E9")]
		[Inject]
		private ISubscriber<OnPause> OnPauseEvent
		{
			[Token(Token = "0x600158A")]
			[Address(RVA = "0x1A26874", Offset = "0x1A26874", VA = "0x1A26874")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600158B")]
			[Address(RVA = "0x1A2687C", Offset = "0x1A2687C", VA = "0x1A2687C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x600158C")]
		[Address(RVA = "0x1A26884", Offset = "0x1A26884", VA = "0x1A26884")]
		public void Initialize(PauseManager pauseManager)
		{
		}

		[Token(Token = "0x600158D")]
		[Address(RVA = "0x1A26E1C", Offset = "0x1A26E1C", VA = "0x1A26E1C")]
		[AsyncStateMachine(typeof(<ActivateDefaultButtons>d__30))]
		private void ActivateDefaultButtons()
		{
		}

		[Token(Token = "0x600158E")]
		[Address(RVA = "0x1A26ED0", Offset = "0x1A26ED0", VA = "0x1A26ED0")]
		[AsyncStateMachine(typeof(<DeactivateDefaultButtons>d__31))]
		private UniTask DeactivateDefaultButtons()
		{
			return default(UniTask);
		}

		[Token(Token = "0x600158F")]
		[Address(RVA = "0x1A2702C", Offset = "0x1A2702C", VA = "0x1A2702C")]
		[AsyncStateMachine(typeof(<RestartToCheck>d__32))]
		public void RestartToCheck()
		{
		}

		[Token(Token = "0x6001590")]
		[Address(RVA = "0x1A270E0", Offset = "0x1A270E0", VA = "0x1A270E0")]
		[AsyncStateMachine(typeof(<Restart>d__33))]
		public void Restart()
		{
		}

		[Token(Token = "0x6001591")]
		[Address(RVA = "0x1A27194", Offset = "0x1A27194", VA = "0x1A27194")]
		[AsyncStateMachine(typeof(<BackFromRestart>d__34))]
		public void BackFromRestart()
		{
		}

		[Token(Token = "0x6001592")]
		[Address(RVA = "0x1A27248", Offset = "0x1A27248", VA = "0x1A27248")]
		[AsyncStateMachine(typeof(<MenuToCheck>d__35))]
		public void MenuToCheck()
		{
		}

		[Token(Token = "0x6001593")]
		[Address(RVA = "0x1A272FC", Offset = "0x1A272FC", VA = "0x1A272FC")]
		[AsyncStateMachine(typeof(<Menu>d__36))]
		public void Menu()
		{
		}

		[Token(Token = "0x6001594")]
		[Address(RVA = "0x1A273B0", Offset = "0x1A273B0", VA = "0x1A273B0")]
		[AsyncStateMachine(typeof(<BackFromMenu>d__37))]
		public void BackFromMenu()
		{
		}

		[Token(Token = "0x6001595")]
		[Address(RVA = "0x1A27464", Offset = "0x1A27464", VA = "0x1A27464")]
		[AsyncStateMachine(typeof(<Continue>d__38))]
		public void Continue()
		{
		}

		[Token(Token = "0x6001596")]
		[Address(RVA = "0x1A27518", Offset = "0x1A27518", VA = "0x1A27518")]
		[AsyncStateMachine(typeof(<OpenSettings>d__39))]
		public void OpenSettings()
		{
		}

		[Token(Token = "0x6001597")]
		[Address(RVA = "0x1A275CC", Offset = "0x1A275CC", VA = "0x1A275CC")]
		[AsyncStateMachine(typeof(<BackFromSettings>d__40))]
		public void BackFromSettings()
		{
		}

		[Token(Token = "0x6001598")]
		[Address(RVA = "0x1A27680", Offset = "0x1A27680", VA = "0x1A27680")]
		public PauseButtonsManager()
		{
		}
	}
	[Token(Token = "0x200055F")]
	public class PauseEffectController : MonoBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x2000560")]
		[CompilerGenerated]
		private struct <PlayScanEffect>d__12 : IAsyncStateMachine
		{
			[Token(Token = "0x4001DD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001DD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001DD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public PauseEffectController <>4__this;

			[Token(Token = "0x4001DD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <value>5__2;

			[Token(Token = "0x4001DDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Cysharp.Threading.Tasks.YieldAwaitable.Awaiter <>u__1;

			[Token(Token = "0x60015BB")]
			[Address(RVA = "0x1A2BA14", Offset = "0x1A2BA14", VA = "0x1A2BA14", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60015BC")]
			[Address(RVA = "0x1A2BCF0", Offset = "0x1A2BCF0", VA = "0x1A2BCF0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Skybox")]
		private Material _defaultSky;

		[Token(Token = "0x4001DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Material _pauseSky;

		[Token(Token = "0x4001DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Inject]
		private InputProvider _inputProvider;

		[Token(Token = "0x4001DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Material _wireframe;

		[Token(Token = "0x4001DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int radius;

		[Token(Token = "0x4001DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int center;

		[Token(Token = "0x4001DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _active;

		[Token(Token = "0x170001EA")]
		[Inject]
		private ISubscriber<OnPause> OnPauseEvent
		{
			[Token(Token = "0x60015B2")]
			[Address(RVA = "0x1A2B5A8", Offset = "0x1A2B5A8", VA = "0x1A2B5A8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60015B3")]
			[Address(RVA = "0x1A2B5B0", Offset = "0x1A2B5B0", VA = "0x1A2B5B0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x60015B4")]
		[Address(RVA = "0x1A2B5B8", Offset = "0x1A2B5B8", VA = "0x1A2B5B8")]
		private void Start()
		{
		}

		[Token(Token = "0x60015B5")]
		[Address(RVA = "0x1A2B748", Offset = "0x1A2B748", VA = "0x1A2B748")]
		[AsyncStateMachine(typeof(<PlayScanEffect>d__12))]
		private void PlayScanEffect()
		{
		}

		[Token(Token = "0x60015B6")]
		[Address(RVA = "0x1A2B800", Offset = "0x1A2B800", VA = "0x1A2B800")]
		private void StopScanEffect()
		{
		}

		[Token(Token = "0x60015B7")]
		[Address(RVA = "0x1A2B808", Offset = "0x1A2B808", VA = "0x1A2B808")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60015B8")]
		[Address(RVA = "0x1A2B900", Offset = "0x1A2B900", VA = "0x1A2B900")]
		public PauseEffectController()
		{
		}
	}
	[Token(Token = "0x2000561")]
	[RequireComponent(typeof(AudioSource))]
	public class PauseManager : SingletonMonoBehaviour<PauseManager>
	{
		[StructLayout(3)]
		[Token(Token = "0x2000562")]
		[CompilerGenerated]
		private struct <Start>d__17 : IAsyncStateMachine
		{
			[Token(Token = "0x4001DE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001DE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001DE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public PauseManager <>4__this;

			[Token(Token = "0x60015C8")]
			[Address(RVA = "0x1A2C13C", Offset = "0x1A2C13C", VA = "0x1A2C13C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60015C9")]
			[Address(RVA = "0x1A2C298", Offset = "0x1A2C298", VA = "0x1A2C298", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PauseButtonsManager _pauseObjects;

		[Token(Token = "0x4001DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip _pauseSound;

		[Token(Token = "0x4001DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip _unPauseSound;

		[Token(Token = "0x4001DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[ReadOnly]
		public bool _pauseButtonActive;

		[Token(Token = "0x4001DDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool _isPaused;

		[Token(Token = "0x4001DE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AudioSource _audio;

		[Token(Token = "0x4001DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool _applicationFocus;

		[Token(Token = "0x4001DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float _currentTimeScale;

		[Token(Token = "0x4001DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Inject]
		private InputProvider _inputProvider;

		[Token(Token = "0x4001DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int JetTimeScale;

		[Token(Token = "0x4001DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private readonly bool _dontDestroyOnLoad;

		[Token(Token = "0x170001EB")]
		[Inject]
		private IPublisher<OnPause> OnPauseMessage
		{
			[Token(Token = "0x60015BD")]
			[Address(RVA = "0x1A2BCFC", Offset = "0x1A2BCFC", VA = "0x1A2BCFC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60015BE")]
			[Address(RVA = "0x1A2BD04", Offset = "0x1A2BD04", VA = "0x1A2BD04")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170001EC")]
		protected override bool dontDestroyOnLoad
		{
			[Token(Token = "0x60015BF")]
			[Address(RVA = "0x1A2BD0C", Offset = "0x1A2BD0C", VA = "0x1A2BD0C", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60015C0")]
		[Address(RVA = "0x1A2BD14", Offset = "0x1A2BD14", VA = "0x1A2BD14")]
		[AsyncStateMachine(typeof(<Start>d__17))]
		private void Start()
		{
		}

		[Token(Token = "0x60015C1")]
		[Address(RVA = "0x1A2BDC8", Offset = "0x1A2BDC8", VA = "0x1A2BDC8")]
		private void Update()
		{
		}

		[Token(Token = "0x60015C2")]
		[Address(RVA = "0x1A2BE8C", Offset = "0x1A2BE8C", VA = "0x1A2BE8C")]
		private void Pause()
		{
		}

		[Token(Token = "0x60015C3")]
		[Address(RVA = "0x1A2926C", Offset = "0x1A2926C", VA = "0x1A2926C")]
		public void UnPause(bool withSound = true)
		{
		}

		[Token(Token = "0x60015C4")]
		[Address(RVA = "0x1A2C058", Offset = "0x1A2C058", VA = "0x1A2C058")]
		private void SystemPause()
		{
		}

		[Token(Token = "0x60015C5")]
		[Address(RVA = "0x1A2C078", Offset = "0x1A2C078", VA = "0x1A2C078")]
		private void OnApplicationFocus(bool hasFocus)
		{
		}

		[Token(Token = "0x60015C6")]
		[Address(RVA = "0x1A2C084", Offset = "0x1A2C084", VA = "0x1A2C084")]
		public PauseManager()
		{
		}
	}
	[Token(Token = "0x2000563")]
	public class SetShaderGlobalValue : MonoBehaviour
	{
		[Token(Token = "0x60015CA")]
		[Address(RVA = "0x1A2C2A4", Offset = "0x1A2C2A4", VA = "0x1A2C2A4")]
		private void Update()
		{
		}

		[Token(Token = "0x60015CB")]
		[Address(RVA = "0x1A2C2F0", Offset = "0x1A2C2F0", VA = "0x1A2C2F0")]
		public SetShaderGlobalValue()
		{
		}
	}
}
namespace __Imacreate__.__Production__.GrooveFitGames.Core.Parameters
{
	[Token(Token = "0x2000564")]
	public class GameStatus
	{
		[Token(Token = "0x2000565")]
		public enum Status
		{
			[Token(Token = "0x4001DEC")]
			EventBeforeGame,
			[Token(Token = "0x4001DED")]
			Practice,
			[Token(Token = "0x4001DEE")]
			Main,
			[Token(Token = "0x4001DEF")]
			Result
		}

		[Token(Token = "0x2000566")]
		public enum Difficulty
		{
			[Token(Token = "0x4001DF1")]
			BRONZE,
			[Token(Token = "0x4001DF2")]
			SILVER,
			[Token(Token = "0x4001DF3")]
			GOLD,
			[Token(Token = "0x4001DF4")]
			PLATINUM,
			[Token(Token = "0x4001DF5")]
			ENDLESS
		}

		[Token(Token = "0x2000567")]
		public enum OptionRule
		{
			[Token(Token = "0x4001DF7")]
			NORMAL,
			[Token(Token = "0x4001DF8")]
			SLOW,
			[Token(Token = "0x4001DF9")]
			FAST,
			[Token(Token = "0x4001DFA")]
			PERFECT_RUN
		}

		[Token(Token = "0x2000568")]
		public enum EndlessLifeType
		{
			[Token(Token = "0x4001DFC")]
			LEVEL1,
			[Token(Token = "0x4001DFD")]
			LEVEL2,
			[Token(Token = "0x4001DFE")]
			LEVEL3
		}

		[Token(Token = "0x4001DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Status status;

		[Token(Token = "0x60015CC")]
		[Address(RVA = "0x1A29404", Offset = "0x1A29404", VA = "0x1A29404")]
		public GameStatus()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000569")]
	public class BeatData
	{
		[Token(Token = "0x4001DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float CurrentBeat;

		[Token(Token = "0x60015CD")]
		[Address(RVA = "0x1A2C2F8", Offset = "0x1A2C2F8", VA = "0x1A2C2F8")]
		public BeatData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200056A")]
	public class BPMData
	{
		[Token(Token = "0x4001E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float BPM;

		[Token(Token = "0x4001E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float SecondPerBeat;

		[Token(Token = "0x60015CE")]
		[Address(RVA = "0x1A2C300", Offset = "0x1A2C300", VA = "0x1A2C300")]
		public BPMData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200056B")]
	public class OnPause
	{
		[Token(Token = "0x200056C")]
		public enum Event
		{
			[Token(Token = "0x4001E04")]
			Pause,
			[Token(Token = "0x4001E05")]
			UnPause
		}

		[Token(Token = "0x4001E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Event Type;

		[Token(Token = "0x60015CF")]
		[Address(RVA = "0x1A2C050", Offset = "0x1A2C050", VA = "0x1A2C050")]
		public OnPause()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200056D")]
	public class OnMusicGame
	{
		[Token(Token = "0x4001E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool _onGame;

		[Token(Token = "0x60015D0")]
		[Address(RVA = "0x1A2C308", Offset = "0x1A2C308", VA = "0x1A2C308")]
		public OnMusicGame()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200056E")]
	public class OnFitPatternsDelete
	{
		[Token(Token = "0x4001E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool OnDelete;

		[Token(Token = "0x60015D1")]
		[Address(RVA = "0x1A2C310", Offset = "0x1A2C310", VA = "0x1A2C310")]
		public OnFitPatternsDelete()
		{
		}
	}
	[Token(Token = "0x200056F")]
	public enum JudgeType
	{
		[Token(Token = "0x4001E09")]
		GREAT,
		[Token(Token = "0x4001E0A")]
		OK,
		[Token(Token = "0x4001E0B")]
		BAD,
		[Token(Token = "0x4001E0C")]
		None
	}
	[Serializable]
	[Token(Token = "0x2000570")]
	public class JudgementData
	{
		[Token(Token = "0x4001E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float ErrorValue;

		[Token(Token = "0x4001E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public JudgeType Type;

		[Token(Token = "0x60015D2")]
		[Address(RVA = "0x1A2C318", Offset = "0x1A2C318", VA = "0x1A2C318")]
		public JudgementData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000571")]
	public class FPActionData
	{
		[Token(Token = "0x4001E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Key;

		[Token(Token = "0x4001E10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public JudgementData Judgement;

		[Token(Token = "0x4001E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject FitPatternObj;

		[Token(Token = "0x60015D3")]
		[Address(RVA = "0x1A2C328", Offset = "0x1A2C328", VA = "0x1A2C328")]
		public FPActionData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000572")]
	public class ChargeData
	{
		[Token(Token = "0x2000573")]
		public enum ChargeState
		{
			[Token(Token = "0x4001E17")]
			None,
			[Token(Token = "0x4001E18")]
			OnCharge,
			[Token(Token = "0x4001E19")]
			Stop,
			[Token(Token = "0x4001E1A")]
			Finish
		}

		[Token(Token = "0x4001E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Key;

		[Token(Token = "0x4001E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float Value;

		[Token(Token = "0x4001E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float MaxValue;

		[Token(Token = "0x4001E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ChargeState State;

		[Token(Token = "0x60015D4")]
		[Address(RVA = "0x1A2C3AC", Offset = "0x1A2C3AC", VA = "0x1A2C3AC")]
		public ChargeData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000574")]
	public class CharacterActionData
	{
		[Token(Token = "0x4001E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Key;

		[Token(Token = "0x4001E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CancellationToken Token;

		[Token(Token = "0x60015D5")]
		[Address(RVA = "0x1A2C3B4", Offset = "0x1A2C3B4", VA = "0x1A2C3B4")]
		public CharacterActionData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000575")]
	public class LifeChangeData
	{
		[Token(Token = "0x2000576")]
		public enum LifeChangeState
		{
			[Token(Token = "0x4001E20")]
			Add,
			[Token(Token = "0x4001E21")]
			Damaged,
			[Token(Token = "0x4001E22")]
			Initialized
		}

		[Token(Token = "0x4001E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LifeChangeState OnLifeChangedState;

		[Token(Token = "0x4001E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int StartLifeNum;

		[Token(Token = "0x60015D6")]
		[Address(RVA = "0x1A2C3BC", Offset = "0x1A2C3BC", VA = "0x1A2C3BC")]
		public LifeChangeData()
		{
		}
	}
	[Token(Token = "0x2000577")]
	public class GFGameSettings : SingletonMonoBehaviour<GFGameSettings>
	{
		[Token(Token = "0x4001E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("GrooveFit")]
		public GrooveFitGame GFGame;

		[Token(Token = "0x4001E24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Header("GameSetting")]
		public GameStatus.Difficulty Difficulty;

		[Token(Token = "0x4001E25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameStatus.OptionRule OptionRule;

		[Token(Token = "0x4001E26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public GameStatus.EndlessLifeType EndlessLifeType;

		[Token(Token = "0x4001E27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ScoreRankSettings scoreRankSettings;

		[Token(Token = "0x4001E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Header("DebugSetting")]
		public bool isDebuggingWithoutSaveData;

		[Token(Token = "0x4001E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private readonly bool _dontDestroyOnLoad;

		[Token(Token = "0x170001ED")]
		protected override bool dontDestroyOnLoad
		{
			[Token(Token = "0x60015D7")]
			[Address(RVA = "0x1A2C3CC", Offset = "0x1A2C3CC", VA = "0x1A2C3CC", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60015D8")]
		[Address(RVA = "0x1A2C3D4", Offset = "0x1A2C3D4", VA = "0x1A2C3D4", Slot = "5")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60015D9")]
		[Address(RVA = "0x1A2C4A8", Offset = "0x1A2C4A8", VA = "0x1A2C4A8")]
		public GFGameSettings()
		{
		}
	}
}
namespace __Imacreate__.__Production__.GrooveFitGames.Core.FitPattern
{
	[Serializable]
	[Token(Token = "0x2000578")]
	public abstract class ActionParamBase
	{
		[Token(Token = "0x4001E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Note;

		[Token(Token = "0x4001E2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float Timing;

		[Token(Token = "0x60015DA")]
		public abstract List<string> GetKeyFromActionKeys();

		[Token(Token = "0x60015DB")]
		[Address(RVA = "0x1A2C4F0", Offset = "0x1A2C4F0", VA = "0x1A2C4F0")]
		protected ActionParamBase()
		{
		}
	}
	[Token(Token = "0x2000579")]
	public class FitPatternBeatSubscriber : MonoBehaviour
	{
		[Token(Token = "0x60015DC")]
		[Address(RVA = "0x1A2C4F8", Offset = "0x1A2C4F8", VA = "0x1A2C4F8")]
		public void SetComponent(FloatReactiveProperty fitPatternBeat)
		{
		}

		[Token(Token = "0x60015DD")]
		[Address(RVA = "0x1A2C62C", Offset = "0x1A2C62C", VA = "0x1A2C62C", Slot = "4")]
		protected virtual void BeatSubscribeAction(float currentBeat)
		{
		}

		[Token(Token = "0x60015DE")]
		[Address(RVA = "0x1A2C630", Offset = "0x1A2C630", VA = "0x1A2C630", Slot = "5")]
		protected virtual void AdditionalSetComponent()
		{
		}

		[Token(Token = "0x60015DF")]
		[Address(RVA = "0x1A2C634", Offset = "0x1A2C634", VA = "0x1A2C634")]
		public FitPatternBeatSubscriber()
		{
		}
	}
	[Token(Token = "0x200057A")]
	public class FitPatternBoxManager : MonoBehaviour
	{
		[Token(Token = "0x4001E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _startBeat;

		[Token(Token = "0x4001E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _lastBeat;

		[Token(Token = "0x4001E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private FitPatternBeatSubscriber[] _beatSubscribers;

		[NonSerialized]
		[Token(Token = "0x4001E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float _secondPerBeat;

		[Token(Token = "0x4001E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private FloatReactiveProperty _fitPatternBeat;

		[Token(Token = "0x4001E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private IDisposable _disposable;

		[Token(Token = "0x170001EE")]
		[Inject]
		private ISubscriber<BeatData> OnBeat
		{
			[Token(Token = "0x60015E1")]
			[Address(RVA = "0x1A2C648", Offset = "0x1A2C648", VA = "0x1A2C648")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60015E2")]
			[Address(RVA = "0x1A2C650", Offset = "0x1A2C650", VA = "0x1A2C650")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170001EF")]
		[Inject]
		private ISubscriber<GameStatus> OnChangeStatus
		{
			[Token(Token = "0x60015E3")]
			[Address(RVA = "0x1A2C658", Offset = "0x1A2C658", VA = "0x1A2C658")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60015E4")]
			[Address(RVA = "0x1A2C660", Offset = "0x1A2C660", VA = "0x1A2C660")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170001F0")]
		[Inject]
		private ISubscriber<OnFitPatternsDelete> OnFitPatternsDelete
		{
			[Token(Token = "0x60015E5")]
			[Address(RVA = "0x1A2C668", Offset = "0x1A2C668", VA = "0x1A2C668")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60015E6")]
			[Address(RVA = "0x1A2C670", Offset = "0x1A2C670", VA = "0x1A2C670")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x60015E7")]
		[Address(RVA = "0x1A2C678", Offset = "0x1A2C678", VA = "0x1A2C678")]
		public void SetFitPattern(float generateTiming, float spb)
		{
		}

		[Token(Token = "0x60015E8")]
		[Address(RVA = "0x1A2CADC", Offset = "0x1A2CADC", VA = "0x1A2CADC")]
		public void StopBeat()
		{
		}

		[Token(Token = "0x60015E9")]
		[Address(RVA = "0x1A2CB7C", Offset = "0x1A2CB7C", VA = "0x1A2CB7C")]
		public void FitPatternDestroy()
		{
		}

		[Token(Token = "0x60015EA")]
		[Address(RVA = "0x1A2CBE8", Offset = "0x1A2CBE8", VA = "0x1A2CBE8")]
		public FitPatternBoxManager()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200057C")]
	public abstract class FPActionEventBase
	{
		[Token(Token = "0x4001E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UnityEvent Event;

		[Token(Token = "0x4001E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public JudgeType JudgeType;

		[Token(Token = "0x60015EF")]
		public abstract string GetKey();

		[Token(Token = "0x60015F0")]
		[Address(RVA = "0x1A2CDC4", Offset = "0x1A2CDC4", VA = "0x1A2CDC4")]
		protected FPActionEventBase()
		{
		}
	}
	[Token(Token = "0x200057D")]
	public class FPActionSubscribeEvent : MonoBehaviour
	{
		[Token(Token = "0x170001F1")]
		[Inject]
		private ISubscriber<FPActionData> OnFPAction
		{
			[Token(Token = "0x60015F1")]
			[Address(RVA = "0x1A2CDCC", Offset = "0x1A2CDCC", VA = "0x1A2CDCC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60015F2")]
			[Address(RVA = "0x1A2CDD4", Offset = "0x1A2CDD4", VA = "0x1A2CDD4")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x60015F3")]
		[Address(RVA = "0x1A2CDDC", Offset = "0x1A2CDDC", VA = "0x1A2CDDC")]
		internal void StartSubscribeEvent(List<FPActionEventBase> _fpActionEvents)
		{
		}

		[Token(Token = "0x60015F4")]
		[Address(RVA = "0x1A2CF60", Offset = "0x1A2CF60", VA = "0x1A2CF60")]
		public FPActionSubscribeEvent()
		{
		}
	}
	[Token(Token = "0x200057F")]
	public class FPChargeJudgeAction : JudgeActionBase
	{
		[Token(Token = "0x4001E3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal string _chargeKey;

		[Token(Token = "0x4001E3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal string _judgeActionKey;

		[Token(Token = "0x4001E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float _startTiming;

		[Token(Token = "0x4001E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float _endTiming;

		[Token(Token = "0x4001E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float _maxChargeBeatOffset;

		[Token(Token = "0x4001E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private InputPublisher _inputPublisher;

		[Token(Token = "0x4001E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal string _targetInputKey;

		[Token(Token = "0x4001E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private ChargeData.ChargeState _state;

		[Token(Token = "0x4001E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float _maxChargeBeat;

		[Token(Token = "0x4001E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _currentBeat;

		[Token(Token = "0x4001E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool _judgeDone;

		[Token(Token = "0x4001E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float _chargeBeat;

		[Token(Token = "0x4001E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float _lastBeat;

		[Token(Token = "0x170001F2")]
		[Inject]
		private IPublisher<ChargeData> ChargeDataMessage
		{
			[Token(Token = "0x60015F7")]
			[Address(RVA = "0x1A2D334", Offset = "0x1A2D334", VA = "0x1A2D334")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60015F8")]
			[Address(RVA = "0x1A2D33C", Offset = "0x1A2D33C", VA = "0x1A2D33C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x60015F9")]
		[Address(RVA = "0x1A2D344", Offset = "0x1A2D344", VA = "0x1A2D344", Slot = "5")]
		protected override void AdditionalSetComponent()
		{
		}

		[Token(Token = "0x60015FA")]
		[Address(RVA = "0x1A2D508", Offset = "0x1A2D508", VA = "0x1A2D508", Slot = "4")]
		protected override void BeatSubscribeAction(float currentBeat)
		{
		}

		[Token(Token = "0x60015FB")]
		[Address(RVA = "0x1A2DABC", Offset = "0x1A2DABC", VA = "0x1A2DABC")]
		private void Charge(string value)
		{
		}

		[Token(Token = "0x60015FC")]
		[Address(RVA = "0x1A2D50C", Offset = "0x1A2D50C", VA = "0x1A2D50C")]
		private void Judge(float currentBeat)
		{
		}

		[Token(Token = "0x60015FD")]
		[Address(RVA = "0x1A2DC34", Offset = "0x1A2DC34", VA = "0x1A2DC34")]
		public FPChargeJudgeAction()
		{
		}
	}
	[Token(Token = "0x2000580")]
	public class FPInputJudgeAction : JudgeActionBase
	{
		[Token(Token = "0x4001E4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal string _actionKey;

		[Token(Token = "0x4001E4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float _timing;

		[Token(Token = "0x4001E4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private InputPublisher _inputPublisher;

		[Token(Token = "0x4001E4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal string _targetInputKey;

		[Token(Token = "0x4001E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float _doNothingErrorTiming;

		[Token(Token = "0x4001E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float _currentBeat;

		[Token(Token = "0x4001E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool _judgeDone;

		[Token(Token = "0x60015FF")]
		[Address(RVA = "0x1A2DC4C", Offset = "0x1A2DC4C", VA = "0x1A2DC4C", Slot = "5")]
		protected override void AdditionalSetComponent()
		{
		}

		[Token(Token = "0x6001600")]
		[Address(RVA = "0x1A2DD98", Offset = "0x1A2DD98", VA = "0x1A2DD98", Slot = "4")]
		protected override void BeatSubscribeAction(float currentBeat)
		{
		}

		[Token(Token = "0x6001601")]
		[Address(RVA = "0x1A2E304", Offset = "0x1A2E304", VA = "0x1A2E304")]
		private void Judge(string value)
		{
		}

		[Token(Token = "0x6001602")]
		[Address(RVA = "0x1A2E8B0", Offset = "0x1A2E8B0", VA = "0x1A2E8B0")]
		public FPInputJudgeAction()
		{
		}
	}
	[Token(Token = "0x2000581")]
	public class FPNoJudgementAction : FitPatternBeatSubscriber
	{
		[Token(Token = "0x4001E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal List<ActionParamBase> _actions;

		[Token(Token = "0x4001E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal readonly JudgementData _emptyData;

		[Token(Token = "0x4001E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal int num;

		[Token(Token = "0x170001F3")]
		[Inject]
		internal IPublisher<FPActionData> FPActionMessage
		{
			[Token(Token = "0x6001604")]
			[Address(RVA = "0x1A2E8C8", Offset = "0x1A2E8C8", VA = "0x1A2E8C8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001605")]
			[Address(RVA = "0x1A2E8D0", Offset = "0x1A2E8D0", VA = "0x1A2E8D0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001606")]
		[Address(RVA = "0x1A2E8D8", Offset = "0x1A2E8D8", VA = "0x1A2E8D8", Slot = "4")]
		protected override void BeatSubscribeAction(float currentBeat)
		{
		}

		[Token(Token = "0x6001607")]
		[Address(RVA = "0x1A2ECCC", Offset = "0x1A2ECCC", VA = "0x1A2ECCC")]
		public FPNoJudgementAction()
		{
		}
	}
}
namespace __Imacreate__.__Production__.GrooveFitGames.Core.Endless
{
	[Token(Token = "0x2000582")]
	public class EndlessJingleManager : MonoBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x2000583")]
		[CompilerGenerated]
		private struct <SetGameOver>d__14 : IAsyncStateMachine
		{
			[Token(Token = "0x4001E5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001E5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001E60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public EndlessJingleManager <>4__this;

			[Token(Token = "0x4001E61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CancellationToken token;

			[Token(Token = "0x4001E62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private DOTweenAsyncExtensions.TweenAwaiter <>u__1;

			[Token(Token = "0x4001E63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask.Awaiter <>u__2;

			[Token(Token = "0x6001610")]
			[Address(RVA = "0x1A30384", Offset = "0x1A30384", VA = "0x1A30384", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001611")]
			[Address(RVA = "0x1A30A40", Offset = "0x1A30A40", VA = "0x1A30A40", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SpriteRenderer _sprite;

		[Token(Token = "0x4001E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Sprite _endless;

		[Token(Token = "0x4001E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Sprite _levelUp;

		[Token(Token = "0x4001E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Sprite _speedUp;

		[Token(Token = "0x4001E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Sprite _gameOver;

		[Token(Token = "0x4001E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private int _delayBeat;

		[Token(Token = "0x4001E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 _startPos;

		[Token(Token = "0x4001E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Sequence _sequence;

		[Token(Token = "0x170001F4")]
		[Inject]
		private ISubscriber<GameStatus> OnGameStatus
		{
			[Token(Token = "0x6001608")]
			[Address(RVA = "0x1A2ED50", Offset = "0x1A2ED50", VA = "0x1A2ED50")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001609")]
			[Address(RVA = "0x1A2ED58", Offset = "0x1A2ED58", VA = "0x1A2ED58")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x600160A")]
		[Address(RVA = "0x1A2ED60", Offset = "0x1A2ED60", VA = "0x1A2ED60")]
		private void Awake()
		{
		}

		[Token(Token = "0x600160B")]
		[Address(RVA = "0x1A2EEF8", Offset = "0x1A2EEF8", VA = "0x1A2EEF8")]
		public void SetJingle(EndlessJingleStatus status, float spb)
		{
		}

		[Token(Token = "0x600160C")]
		[Address(RVA = "0x1A2F194", Offset = "0x1A2F194", VA = "0x1A2F194")]
		[AsyncStateMachine(typeof(<SetGameOver>d__14))]
		public UniTask SetGameOver(CancellationToken token)
		{
			return default(UniTask);
		}

		[Token(Token = "0x600160D")]
		[Address(RVA = "0x1A2F324", Offset = "0x1A2F324", VA = "0x1A2F324")]
		public EndlessJingleManager()
		{
		}
	}
	[Token(Token = "0x2000584")]
	public enum EndlessJingleStatus
	{
		[Token(Token = "0x4001E65")]
		Start,
		[Token(Token = "0x4001E66")]
		LevelUp,
		[Token(Token = "0x4001E67")]
		SpeedUp
	}
	[Token(Token = "0x2000585")]
	public class EndlessJudgement : EndlessUIViewBase, IEndlessJudge
	{
		[Token(Token = "0x4001E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Setting")]
		[SerializeField]
		private Transform _lifeParent;

		[Token(Token = "0x4001E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _lifePrefab;

		[Token(Token = "0x4001E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip _lifeUpSound;

		[Token(Token = "0x4001E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _dissappearSound;

		[Token(Token = "0x4001E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<GameObject> _lifeObjs;

		[Token(Token = "0x4001E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int miss;

		[NonSerialized]
		[Token(Token = "0x4001E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly BoolReactiveProperty OnGameOver;

		[Token(Token = "0x4001E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private IDisposable _disposable;

		[Token(Token = "0x4001E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Header("Debug")]
		[SerializeField]
		private bool _dontDie;

		[Token(Token = "0x170001F5")]
		[Inject]
		private ISubscriber<FPActionData> OnFPAction
		{
			[Token(Token = "0x6001612")]
			[Address(RVA = "0x1A30A4C", Offset = "0x1A30A4C", VA = "0x1A30A4C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001613")]
			[Address(RVA = "0x1A30A54", Offset = "0x1A30A54", VA = "0x1A30A54")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001614")]
		[Address(RVA = "0x1A30A5C", Offset = "0x1A30A5C", VA = "0x1A30A5C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001615")]
		[Address(RVA = "0x1A30AFC", Offset = "0x1A30AFC", VA = "0x1A30AFC", Slot = "4")]
		public override void StartEndless(GameStatus.EndlessLifeType lifeType)
		{
		}

		[Token(Token = "0x6001616")]
		[Address(RVA = "0x1A30F70", Offset = "0x1A30F70", VA = "0x1A30F70", Slot = "6")]
		internal override void DeleteLife(FPActionData data)
		{
		}

		[Token(Token = "0x6001617")]
		[Address(RVA = "0x1A3115C", Offset = "0x1A3115C", VA = "0x1A3115C", Slot = "5")]
		public override void AddLife()
		{
		}

		[Token(Token = "0x6001618")]
		[Address(RVA = "0x1A30AAC", Offset = "0x1A30AAC", VA = "0x1A30AAC", Slot = "7")]
		public void InitializeEndlessJudgementModel()
		{
		}

		[Token(Token = "0x6001619")]
		[Address(RVA = "0x1A31444", Offset = "0x1A31444", VA = "0x1A31444")]
		public EndlessJudgement()
		{
		}
	}
	[Token(Token = "0x2000587")]
	public abstract class EndlessUIViewBase : MonoBehaviour
	{
		[Token(Token = "0x4001E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static bool dontDie;

		[Token(Token = "0x600161E")]
		public abstract void StartEndless(GameStatus.EndlessLifeType lifeType);

		[Token(Token = "0x600161F")]
		public abstract void AddLife();

		[Token(Token = "0x6001620")]
		internal abstract void DeleteLife(FPActionData data);

		[Token(Token = "0x6001621")]
		[Address(RVA = "0x1A314B8", Offset = "0x1A314B8", VA = "0x1A314B8")]
		protected EndlessUIViewBase()
		{
		}
	}
	[Token(Token = "0x2000588")]
	public interface IEndlessJudge
	{
		[Token(Token = "0x6001622")]
		void InitializeEndlessJudgementModel();
	}
}
namespace __Imacreate__.__Production__.GrooveFitGames.Core.Calorie
{
	[Token(Token = "0x2000589")]
	public class BendIntensityMetsCalcurator : IntensityMetsCalculator
	{
		[Token(Token = "0x4001E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Inject]
		private ISubscriber<ChargeData> _subscriber;

		[Token(Token = "0x4001E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Inject]
		private InputProvider _inputProvider;

		[Token(Token = "0x4001E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float _chargeTime;

		[Token(Token = "0x4001E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float _bendValueSum;

		[Token(Token = "0x6001623")]
		[Address(RVA = "0x1A315F8", Offset = "0x1A315F8", VA = "0x1A315F8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001624")]
		[Address(RVA = "0x1A316F0", Offset = "0x1A316F0", VA = "0x1A316F0", Slot = "5")]
		public override void ResetValue()
		{
		}

		[Token(Token = "0x6001625")]
		[Address(RVA = "0x1A31704", Offset = "0x1A31704", VA = "0x1A31704")]
		public BendIntensityMetsCalcurator()
		{
		}
	}
	[Token(Token = "0x200058A")]
	[CreateAssetMenu(fileName = "CalorieBasedFoodImageSetting", menuName = "ScriptableObjects/CalorieBasedFoodImageSetting")]
	public class CalorieBasedFoodImageSetting : ScriptableObject
	{
		[Token(Token = "0x4001E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<CalorieBasedFoodImageItem> Items;

		[Token(Token = "0x6001627")]
		[Address(RVA = "0x1A31A48", Offset = "0x1A31A48", VA = "0x1A31A48")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001628")]
		[Address(RVA = "0x1A31AC0", Offset = "0x1A31AC0", VA = "0x1A31AC0")]
		public CalorieBasedFoodImageSetting()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200058B")]
	public class CalorieBasedFoodImageItem
	{
		[Token(Token = "0x4001E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[FormerlySerializedAs("name")]
		public string key;

		[Token(Token = "0x4001E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float minCalorie;

		[Token(Token = "0x4001E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Sprite sprite;

		[Token(Token = "0x6001629")]
		[Address(RVA = "0x1A31AC8", Offset = "0x1A31AC8", VA = "0x1A31AC8")]
		public CalorieBasedFoodImageItem()
		{
		}
	}
	[Token(Token = "0x200058C")]
	public class CalorieCalculator : MonoBehaviour
	{
		[Token(Token = "0x4001E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Settings")]
		[SerializeField]
		private IntensityMetsCalculator _intensityMetsCalculator;

		[Token(Token = "0x4001E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("Params")]
		[SerializeField]
		private float _baseMetsBronze;

		[Token(Token = "0x4001E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float _baseMetsSilver;

		[Token(Token = "0x4001E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float _baseMetsGold;

		[Token(Token = "0x4001E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float _baseMetsPlatinum;

		[Token(Token = "0x4001E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float _baseMetsEndless;

		[Token(Token = "0x4001E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[Header("ReadOnly Display")]
		[SerializeField]
		[ReadOnly]
		private bool _isWorking;

		[Token(Token = "0x4001E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[ReadOnly]
		private float _playTime;

		[Token(Token = "0x4001E85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		[ReadOnly]
		private float _completeRateDenominator;

		[Token(Token = "0x4001E86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[ReadOnly]
		private float _completeRateNumerator;

		[Token(Token = "0x4001E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		[ReadOnly]
		private float _intensityMets;

		[Token(Token = "0x4001E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float _startTime;

		[Token(Token = "0x170001F6")]
		[Inject]
		private ISubscriber<FPActionData> OnFPAction
		{
			[Token(Token = "0x600162A")]
			[Address(RVA = "0x1A31AD0", Offset = "0x1A31AD0", VA = "0x1A31AD0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600162B")]
			[Address(RVA = "0x1A31AD8", Offset = "0x1A31AD8", VA = "0x1A31AD8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x600162C")]
		[Address(RVA = "0x1A31AE0", Offset = "0x1A31AE0", VA = "0x1A31AE0")]
		private void Start()
		{
		}

		[Token(Token = "0x600162D")]
		[Address(RVA = "0x1A31BD8", Offset = "0x1A31BD8", VA = "0x1A31BD8")]
		public void StartCalculate()
		{
		}

		[Token(Token = "0x600162E")]
		[Address(RVA = "0x1A31C20", Offset = "0x1A31C20", VA = "0x1A31C20")]
		public void StopCalculate()
		{
		}

		[Token(Token = "0x600162F")]
		[Address(RVA = "0x1A31C80", Offset = "0x1A31C80", VA = "0x1A31C80")]
		public void ResetValue()
		{
		}

		[Token(Token = "0x6001630")]
		[Address(RVA = "0x1A31CAC", Offset = "0x1A31CAC", VA = "0x1A31CAC")]
		public float GetValue()
		{
			return default(float);
		}

		[Token(Token = "0x6001631")]
		[Address(RVA = "0x1A31DC4", Offset = "0x1A31DC4", VA = "0x1A31DC4")]
		public CalorieCalculator()
		{
		}
	}
	[Token(Token = "0x200058D")]
	public class CalorieData
	{
		[Token(Token = "0x4001E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float ThisCalorie;

		[Token(Token = "0x4001E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float TodayCalorie;

		[Token(Token = "0x4001E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CalorieBasedFoodImageItem FoodImage;

		[Token(Token = "0x6001633")]
		[Address(RVA = "0x1A31E34", Offset = "0x1A31E34", VA = "0x1A31E34")]
		public CalorieData()
		{
		}
	}
	[Token(Token = "0x200058E")]
	public class CalorieManager : SingletonMonoBehaviour<CalorieManager>
	{
		[StructLayout(3)]
		[Token(Token = "0x2000590")]
		[CompilerGenerated]
		private struct <GetCalorieDataAsync>d__16 : IAsyncStateMachine
		{
			[Token(Token = "0x4001E96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001E97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<CalorieData> <>t__builder;

			[Token(Token = "0x4001E98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CancellationToken token;

			[Token(Token = "0x4001E99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float timeout;

			[Token(Token = "0x4001E9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CalorieManager <>4__this;

			[Token(Token = "0x4001E9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <t>5__2;

			[Token(Token = "0x4001E9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6001642")]
			[Address(RVA = "0x1A327C8", Offset = "0x1A327C8", VA = "0x1A327C8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001643")]
			[Address(RVA = "0x1A32C74", Offset = "0x1A32C74", VA = "0x1A32C74", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("Settings")]
		[SerializeField]
		private CalorieCalculator _calorieCalculator;

		[Token(Token = "0x4001E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private CalorieBasedFoodImageSetting _foodImageSetting;

		[Token(Token = "0x4001E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[ReadOnly]
		[Header("ReadOnly Display")]
		[SerializeField]
		private float _thisCalorie;

		[Token(Token = "0x4001E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		[ReadOnly]
		private float _todayCalorie;

		[Token(Token = "0x4001E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _isGameGoing;

		[Token(Token = "0x4001E93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private readonly bool _dontDestroyOnLoad;

		[Token(Token = "0x170001F7")]
		[Inject]
		private ISubscriber<GameStatus> OnGameStatus
		{
			[Token(Token = "0x6001634")]
			[Address(RVA = "0x1A31E3C", Offset = "0x1A31E3C", VA = "0x1A31E3C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001635")]
			[Address(RVA = "0x1A31E44", Offset = "0x1A31E44", VA = "0x1A31E44")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170001F8")]
		protected override bool dontDestroyOnLoad
		{
			[Token(Token = "0x6001636")]
			[Address(RVA = "0x1A31E4C", Offset = "0x1A31E4C", VA = "0x1A31E4C", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001637")]
		[Address(RVA = "0x1A31E54", Offset = "0x1A31E54", VA = "0x1A31E54")]
		private void Start()
		{
		}

		[Token(Token = "0x6001638")]
		[Address(RVA = "0x1A322A8", Offset = "0x1A322A8", VA = "0x1A322A8")]
		private void OnMainGameStart()
		{
		}

		[Token(Token = "0x6001639")]
		[Address(RVA = "0x1A32340", Offset = "0x1A32340", VA = "0x1A32340")]
		private void OnMainGameFinish()
		{
		}

		[Token(Token = "0x600163A")]
		[Address(RVA = "0x1A323E0", Offset = "0x1A323E0", VA = "0x1A323E0")]
		private CalorieData GetCalorieData()
		{
			return null;
		}

		[Token(Token = "0x600163B")]
		[Address(RVA = "0x1A32588", Offset = "0x1A32588", VA = "0x1A32588")]
		[AsyncStateMachine(typeof(<GetCalorieDataAsync>d__16))]
		public UniTask<CalorieData> GetCalorieDataAsync(CancellationToken token, float timeout = 3f)
		{
			return default(UniTask<CalorieData>);
		}

		[Token(Token = "0x600163C")]
		[Address(RVA = "0x1A32694", Offset = "0x1A32694", VA = "0x1A32694")]
		public CalorieManager()
		{
		}
	}
	[Token(Token = "0x2000591")]
	public abstract class IntensityMetsCalculator : MonoBehaviour
	{
		[Token(Token = "0x4001E9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Params")]
		[SerializeField]
		protected float _maxMets;

		[Token(Token = "0x4001E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected AnimationCurve _curve;

		[Token(Token = "0x4001E9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected float _minIntensity;

		[Token(Token = "0x4001EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		protected float _maxIntensity;

		[Token(Token = "0x4001EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Header("ReadOnly Display")]
		[SerializeField]
		[ReadOnly]
		protected bool _isWorking;

		[Token(Token = "0x4001EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		[ReadOnly]
		protected float _intensity;

		[Token(Token = "0x6001644")]
		[Address(RVA = "0x1A32CCC", Offset = "0x1A32CCC", VA = "0x1A32CCC", Slot = "4")]
		public virtual float GetValue()
		{
			return default(float);
		}

		[Token(Token = "0x6001645")]
		[Address(RVA = "0x1A316FC", Offset = "0x1A316FC", VA = "0x1A316FC", Slot = "5")]
		public virtual void ResetValue()
		{
		}

		[Token(Token = "0x6001646")]
		[Address(RVA = "0x1A32D20", Offset = "0x1A32D20", VA = "0x1A32D20", Slot = "6")]
		public virtual void StartCalculate()
		{
		}

		[Token(Token = "0x6001647")]
		[Address(RVA = "0x1A32D2C", Offset = "0x1A32D2C", VA = "0x1A32D2C", Slot = "7")]
		public virtual void StopCalculate()
		{
		}

		[Token(Token = "0x6001648")]
		[Address(RVA = "0x1A31718", Offset = "0x1A31718", VA = "0x1A31718")]
		protected IntensityMetsCalculator()
		{
		}
	}
	[Token(Token = "0x2000592")]
	public class MotionIntensityMetsCalculator : IntensityMetsCalculator
	{
		[Token(Token = "0x4001EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Header("Settings")]
		[SerializeField]
		private List<Transform> _trackTargets;

		[Token(Token = "0x4001EA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Header("ReadOnly Display")]
		[SerializeField]
		[ReadOnly]
		private float _moveValue;

		[Token(Token = "0x4001EA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		[ReadOnly]
		private float _time;

		[Token(Token = "0x4001EA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3[] prePositions;

		[Token(Token = "0x6001649")]
		[Address(RVA = "0x1A32D34", Offset = "0x1A32D34", VA = "0x1A32D34")]
		private void Start()
		{
		}

		[Token(Token = "0x600164A")]
		[Address(RVA = "0x1A32FD4", Offset = "0x1A32FD4", VA = "0x1A32FD4")]
		private void Update()
		{
		}

		[Token(Token = "0x600164B")]
		[Address(RVA = "0x1A32FD8", Offset = "0x1A32FD8", VA = "0x1A32FD8")]
		private void OnUpdate()
		{
		}

		[Token(Token = "0x600164C")]
		[Address(RVA = "0x1A33184", Offset = "0x1A33184", VA = "0x1A33184", Slot = "5")]
		public override void ResetValue()
		{
		}

		[Token(Token = "0x600164D")]
		[Address(RVA = "0x1A33200", Offset = "0x1A33200", VA = "0x1A33200", Slot = "4")]
		public override float GetValue()
		{
			return default(float);
		}

		[Token(Token = "0x600164E")]
		[Address(RVA = "0x1A33220", Offset = "0x1A33220", VA = "0x1A33220")]
		public MotionIntensityMetsCalculator()
		{
		}
	}
}
namespace __Imacreate__.__Production__.GrooveFitGames.Core.AudioControll
{
	[Token(Token = "0x2000594")]
	public static class AudioTimePolice
	{
		[Serializable]
		[Token(Token = "0x2000595")]
		public class AudioParam
		{
			[Token(Token = "0x4001EAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AudioSource Audio;

			[Token(Token = "0x4001EAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GrooveFitAudioSource GrooveFitAudio;

			[Token(Token = "0x4001EAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool UnchangeablePitch;

			[Token(Token = "0x6001659")]
			[Address(RVA = "0x1A33EA0", Offset = "0x1A33EA0", VA = "0x1A33EA0")]
			public AudioParam()
			{
			}
		}

		[Token(Token = "0x4001EA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<int, AudioParam> _audioSources;

		[Token(Token = "0x4001EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static float _pitch;

		[Token(Token = "0x4001EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static AudioMixer _mixer;

		[Token(Token = "0x4001EAC")]
		private const string MIXER_PATH = "AudioMixers/GFIMaster";

		[Token(Token = "0x170001F9")]
		public static AudioMixer Mixer
		{
			[Token(Token = "0x6001651")]
			[Address(RVA = "0x1A33290", Offset = "0x1A33290", VA = "0x1A33290")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001652")]
		[Address(RVA = "0x1A333A0", Offset = "0x1A333A0", VA = "0x1A333A0")]
		public static void SetDictionary(AudioParam param)
		{
		}

		[Token(Token = "0x6001653")]
		[Address(RVA = "0x1A335EC", Offset = "0x1A335EC", VA = "0x1A335EC")]
		public static void DeleteFromDictionary(AudioSource audio)
		{
		}

		[Token(Token = "0x6001654")]
		[Address(RVA = "0x1A337A8", Offset = "0x1A337A8", VA = "0x1A337A8")]
		public static void Pause()
		{
		}

		[Token(Token = "0x6001655")]
		[Address(RVA = "0x1A3393C", Offset = "0x1A3393C", VA = "0x1A3393C")]
		public static void UnPause()
		{
		}

		[Token(Token = "0x6001656")]
		[Address(RVA = "0x1A33AD0", Offset = "0x1A33AD0", VA = "0x1A33AD0")]
		public static void SetSpeed(float pitch)
		{
		}

		[Token(Token = "0x6001657")]
		[Address(RVA = "0x1A33D38", Offset = "0x1A33D38", VA = "0x1A33D38")]
		public static void Initialize()
		{
		}
	}
	[Token(Token = "0x2000596")]
	[RequireComponent(typeof(AudioSource))]
	public class GrooveFitAmbientSound : MonoBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x2000597")]
		[CompilerGenerated]
		private struct <PauseAmbient>d__16 : IAsyncStateMachine
		{
			[Token(Token = "0x4001EB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001EB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001EBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool immediate;

			[Token(Token = "0x4001EBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public GrooveFitAmbientSound <>4__this;

			[Token(Token = "0x4001EBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private DOTweenAsyncExtensions.TweenAwaiter <>u__1;

			[Token(Token = "0x6001666")]
			[Address(RVA = "0x1A344B0", Offset = "0x1A344B0", VA = "0x1A344B0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001667")]
			[Address(RVA = "0x1A34700", Offset = "0x1A34700", VA = "0x1A34700", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioClip _ambientSound;

		[Token(Token = "0x4001EB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Inject]
		private GFSceneLoader _gFSceneLoader;

		[Token(Token = "0x4001EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AudioSource _audio;

		[Token(Token = "0x4001EB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Tweener _tweener;

		[Token(Token = "0x4001EB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool _isOnGame;

		[Token(Token = "0x4001EB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float _startVolume;

		[Token(Token = "0x170001FA")]
		[Inject]
		private ISubscriber<OnMusicGame> OnMusicGame
		{
			[Token(Token = "0x600165A")]
			[Address(RVA = "0x1A33EA8", Offset = "0x1A33EA8", VA = "0x1A33EA8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600165B")]
			[Address(RVA = "0x1A33EB0", Offset = "0x1A33EB0", VA = "0x1A33EB0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170001FB")]
		[Inject]
		private ISubscriber<OnPause> OnPauseEvent
		{
			[Token(Token = "0x600165C")]
			[Address(RVA = "0x1A33EB8", Offset = "0x1A33EB8", VA = "0x1A33EB8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600165D")]
			[Address(RVA = "0x1A33EC0", Offset = "0x1A33EC0", VA = "0x1A33EC0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x600165E")]
		[Address(RVA = "0x1A33EC8", Offset = "0x1A33EC8", VA = "0x1A33EC8")]
		private void Start()
		{
		}

		[Token(Token = "0x600165F")]
		[Address(RVA = "0x1A34264", Offset = "0x1A34264", VA = "0x1A34264")]
		private void PlayAmbient()
		{
		}

		[Token(Token = "0x6001660")]
		[Address(RVA = "0x1A342BC", Offset = "0x1A342BC", VA = "0x1A342BC")]
		[AsyncStateMachine(typeof(<PauseAmbient>d__16))]
		private void PauseAmbient(bool immediate = false)
		{
		}

		[Token(Token = "0x6001661")]
		[Address(RVA = "0x1A3437C", Offset = "0x1A3437C", VA = "0x1A3437C")]
		private void UnPauseAmbient(bool immediate = false)
		{
		}

		[Token(Token = "0x6001662")]
		[Address(RVA = "0x1A34434", Offset = "0x1A34434", VA = "0x1A34434")]
		public GrooveFitAmbientSound()
		{
		}
	}
	[Token(Token = "0x2000598")]
	[RequireComponent(typeof(AudioSource))]
	public class GrooveFitAudioSource : MonoBehaviour
	{
		[Token(Token = "0x4001EBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool _unchangeablePitch;

		[NonSerialized]
		[Token(Token = "0x4001EBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float _basePitch;

		[NonSerialized]
		[Token(Token = "0x4001EBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioSource _audio;

		[Token(Token = "0x6001668")]
		[Address(RVA = "0x1A3470C", Offset = "0x1A3470C", VA = "0x1A3470C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001669")]
		[Address(RVA = "0x1A347F4", Offset = "0x1A347F4", VA = "0x1A347F4")]
		public void MultiplyPitch(float value)
		{
		}

		[Token(Token = "0x600166A")]
		[Address(RVA = "0x1A34820", Offset = "0x1A34820", VA = "0x1A34820")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600166B")]
		[Address(RVA = "0x1A34878", Offset = "0x1A34878", VA = "0x1A34878")]
		public GrooveFitAudioSource()
		{
		}
	}
}
namespace __Imacreate__.__Production__.GrooveFitGames.Core.CsvLog
{
	[Token(Token = "0x2000599")]
	public static class CsvLogHandler
	{
		[Token(Token = "0x4001EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string _rootPath;

		[Token(Token = "0x4001EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly Encoding encoding;

		[Token(Token = "0x600166C")]
		[Address(RVA = "0x1A34880", Offset = "0x1A34880", VA = "0x1A34880")]
		public static void WriteLine(string path, string line)
		{
		}

		[Token(Token = "0x600166D")]
		[Address(RVA = "0x1A349D8", Offset = "0x1A349D8", VA = "0x1A349D8")]
		public static List<string> ReadLines(string path, int start = 0, int end = int.MaxValue)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x200059A")]
	public class PlayLogData
	{
		[Token(Token = "0x4001EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GrooveFitGame _grooveFitGame;

		[Token(Token = "0x4001EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public GameStatus.Difficulty _difficulty;

		[Token(Token = "0x4001EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameStatus.OptionRule _optionRule;

		[Token(Token = "0x4001EC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public GameStatus.EndlessLifeType _lifeType;

		[Token(Token = "0x4001EC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float _calorie;

		[Token(Token = "0x600166F")]
		[Address(RVA = "0x1A34D34", Offset = "0x1A34D34", VA = "0x1A34D34")]
		public string GetLineString()
		{
			return null;
		}

		[Token(Token = "0x6001670")]
		[Address(RVA = "0x1A34F54", Offset = "0x1A34F54", VA = "0x1A34F54")]
		public static PlayLogData Parse(string line)
		{
			return null;
		}

		[Token(Token = "0x6001671")]
		[Address(RVA = "0x1A350C0", Offset = "0x1A350C0", VA = "0x1A350C0", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001672")]
		[Address(RVA = "0x1A350B8", Offset = "0x1A350B8", VA = "0x1A350B8")]
		public PlayLogData()
		{
		}
	}
	[Token(Token = "0x200059B")]
	public static class PlayLogManager
	{
		[Token(Token = "0x4001EC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string FolderName;

		[Token(Token = "0x6001673")]
		[Address(RVA = "0x1A352FC", Offset = "0x1A352FC", VA = "0x1A352FC")]
		public static void AddLog(PlayLogData data, [Optional] DateTime dateTime)
		{
		}

		[Token(Token = "0x6001674")]
		[Address(RVA = "0x1A32094", Offset = "0x1A32094", VA = "0x1A32094")]
		public static List<PlayLogData> ReadLog([Optional] DateTime dateTime, int start = 0, int end = int.MaxValue)
		{
			return null;
		}

		[Token(Token = "0x6001675")]
		[Address(RVA = "0x1A354AC", Offset = "0x1A354AC", VA = "0x1A354AC")]
		public static List<PlayLogData> ReadSumLog(int start = 0, int end = int.MaxValue)
		{
			return null;
		}

		[Token(Token = "0x6001676")]
		[Address(RVA = "0x1A353FC", Offset = "0x1A353FC", VA = "0x1A353FC")]
		private static string GetPath(DateTime dateTime)
		{
			return null;
		}
	}
}
namespace __Imacreate__.__Production__.GrooveFitGames.Core.GameDirectionLogics
{
	[Token(Token = "0x200059C")]
	public class MedleyGameStatusDirector : MonoBehaviour
	{
		[Token(Token = "0x4001EC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool _playOnStart;

		[Token(Token = "0x4001EC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private EventDirector[] _gameStatuses;

		[Token(Token = "0x4001ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private IDisposable _disposable;

		[Token(Token = "0x4001ECC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CancellationTokenSource _tokenSource;

		[Token(Token = "0x170001FC")]
		[Inject]
		private ISubscriber<MedleyGameStatus> OnChangeStatus
		{
			[Token(Token = "0x6001678")]
			[Address(RVA = "0x1A356F8", Offset = "0x1A356F8", VA = "0x1A356F8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001679")]
			[Address(RVA = "0x1A35700", Offset = "0x1A35700", VA = "0x1A35700")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x600167A")]
		[Address(RVA = "0x1A35708", Offset = "0x1A35708", VA = "0x1A35708")]
		private void Awake()
		{
		}

		[Token(Token = "0x600167B")]
		[Address(RVA = "0x1A3596C", Offset = "0x1A3596C", VA = "0x1A3596C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600167C")]
		[Address(RVA = "0x1A35A5C", Offset = "0x1A35A5C", VA = "0x1A35A5C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600167D")]
		[Address(RVA = "0x1A35AD4", Offset = "0x1A35AD4", VA = "0x1A35AD4")]
		public MedleyGameStatusDirector()
		{
		}
	}
	[Token(Token = "0x200059D")]
	public class MedleyGameStatusMoveEvent : EventBlock
	{
		[StructLayout(3)]
		[Token(Token = "0x200059E")]
		[CompilerGenerated]
		private struct <SetEvent>d__5 : IAsyncStateMachine
		{
			[Token(Token = "0x4001ECF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001ED0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x4001ED1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CancellationToken token;

			[Token(Token = "0x4001ED2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MedleyGameStatusMoveEvent <>4__this;

			[Token(Token = "0x4001ED3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6001683")]
			[Address(RVA = "0x1A35D08", Offset = "0x1A35D08", VA = "0x1A35D08", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001684")]
			[Address(RVA = "0x1A36160", Offset = "0x1A36160", VA = "0x1A36160", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001ECD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MedleyGameStatus.Status _targetStatus;

		[Token(Token = "0x170001FD")]
		[Inject]
		private IPublisher<MedleyGameStatus> GameStatusChanger
		{
			[Token(Token = "0x600167F")]
			[Address(RVA = "0x1A35C14", Offset = "0x1A35C14", VA = "0x1A35C14")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001680")]
			[Address(RVA = "0x1A35C1C", Offset = "0x1A35C1C", VA = "0x1A35C1C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001681")]
		[Address(RVA = "0x1A35C24", Offset = "0x1A35C24", VA = "0x1A35C24", Slot = "4")]
		[AsyncStateMachine(typeof(<SetEvent>d__5))]
		public override UniTask<bool> SetEvent(CancellationToken token)
		{
			return default(UniTask<bool>);
		}

		[Token(Token = "0x6001682")]
		[Address(RVA = "0x1A35D00", Offset = "0x1A35D00", VA = "0x1A35D00")]
		public MedleyGameStatusMoveEvent()
		{
		}
	}
	[Token(Token = "0x200059F")]
	[RequireComponent(typeof(GrooveFitAudioSource))]
	public class CommonGameDirector : EventDirector
	{
		[StructLayout(3)]
		[Token(Token = "0x20005A0")]
		[CompilerGenerated]
		private struct <StartEvents>d__40 : IAsyncStateMachine
		{
			[Token(Token = "0x4001EEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001EF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001EF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public CommonGameDirector <>4__this;

			[Token(Token = "0x4001EF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CancellationToken token;

			[Token(Token = "0x4001EF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private bool <audioFinished>5__2;

			[Token(Token = "0x4001EF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <timeAfterAudio>5__3;

			[Token(Token = "0x4001EF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6001692")]
			[Address(RVA = "0x1A366D0", Offset = "0x1A366D0", VA = "0x1A366D0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001693")]
			[Address(RVA = "0x1A37FD4", Offset = "0x1A37FD4", VA = "0x1A37FD4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001ED4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Inject]
		private DiContainer _container;

		[NonSerialized]
		[Token(Token = "0x4001ED9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameStatus.Difficulty _difficulty;

		[NonSerialized]
		[Token(Token = "0x4001EDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public GameStatus.OptionRule _optionRule;

		[Token(Token = "0x4001EDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Header("Params")]
		[SerializeField]
		private GrooveFitBoxManager _grooveFitBox;

		[Token(Token = "0x4001EDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioClip _music;

		[Token(Token = "0x4001EDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private float _bpm;

		[Token(Token = "0x4001EDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private float _startDelayTime;

		[Token(Token = "0x4001EDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GFGameMessagePublisher _messagePublisher;

		[Token(Token = "0x4001EE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private SheetData _sheetData;

		[Token(Token = "0x4001EE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private AudioSource _audio;

		[Token(Token = "0x4001EE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _currentBeat;

		[Token(Token = "0x4001EE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int _count;

		[Token(Token = "0x4001EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool _sheetFinish;

		[Token(Token = "0x4001EE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[Header("MusicSheets")]
		[SerializeField]
		private TextAsset _bronze;

		[Token(Token = "0x4001EE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private TextAsset _silver;

		[Token(Token = "0x4001EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private TextAsset _gold;

		[Token(Token = "0x4001EE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private TextAsset _platinum;

		[Token(Token = "0x4001EE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[Header("Perfect Run")]
		[SerializeField]
		private PerfectRunManager _perfectRunManager;

		[Token(Token = "0x4001EEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool _perfectRunGameOvered;

		[Token(Token = "0x4001EEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
		[Header("Debug")]
		[SerializeField]
		private bool _changeBpm;

		[Token(Token = "0x4001EEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[SerializeField]
		private float _debugBpm;

		[Token(Token = "0x4001EED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private TextMeshProUGUI _debugText;

		[Token(Token = "0x4001EEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool? _skipped;

		[Token(Token = "0x170001FE")]
		[Inject]
		private IPublisher<BeatData> BeatDataMessage
		{
			[Token(Token = "0x6001685")]
			[Address(RVA = "0x1A361B8", Offset = "0x1A361B8", VA = "0x1A361B8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001686")]
			[Address(RVA = "0x1A361C0", Offset = "0x1A361C0", VA = "0x1A361C0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170001FF")]
		[Inject]
		private IPublisher<BPMData> BPMDataMessage
		{
			[Token(Token = "0x6001687")]
			[Address(RVA = "0x1A361C8", Offset = "0x1A361C8", VA = "0x1A361C8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001688")]
			[Address(RVA = "0x1A361D0", Offset = "0x1A361D0", VA = "0x1A361D0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000200")]
		[Inject]
		private IPublisher<OnMusicGame> OnMusicGameMessage
		{
			[Token(Token = "0x6001689")]
			[Address(RVA = "0x1A361D8", Offset = "0x1A361D8", VA = "0x1A361D8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600168A")]
			[Address(RVA = "0x1A361E0", Offset = "0x1A361E0", VA = "0x1A361E0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000201")]
		[Inject]
		private IPublisher<string> OnActionMessage
		{
			[Token(Token = "0x600168B")]
			[Address(RVA = "0x1A361E8", Offset = "0x1A361E8", VA = "0x1A361E8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600168C")]
			[Address(RVA = "0x1A361F0", Offset = "0x1A361F0", VA = "0x1A361F0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x600168D")]
		[Address(RVA = "0x1A361F8", Offset = "0x1A361F8", VA = "0x1A361F8", Slot = "4")]
		public override void StandBy()
		{
		}

		[Token(Token = "0x600168E")]
		[Address(RVA = "0x1A364F8", Offset = "0x1A364F8", VA = "0x1A364F8", Slot = "5")]
		[AsyncStateMachine(typeof(<StartEvents>d__40))]
		public override UniTask StartEvents(CancellationToken token)
		{
			return default(UniTask);
		}

		[Token(Token = "0x600168F")]
		[Address(RVA = "0x1A36674", Offset = "0x1A36674", VA = "0x1A36674")]
		private float SecondPerBeat(float bpm)
		{
			return default(float);
		}

		[Token(Token = "0x6001690")]
		[Address(RVA = "0x1A36690", Offset = "0x1A36690", VA = "0x1A36690")]
		public CommonGameDirector()
		{
		}
	}
	[Token(Token = "0x20005A1")]
	[RequireComponent(typeof(GrooveFitAudioSource))]
	public class EndlessGameDirector : EventDirector
	{
		[Token(Token = "0x20005A2")]
		private enum CurrentMode
		{
			[Token(Token = "0x4001F15")]
			Normal,
			[Token(Token = "0x4001F16")]
			Hard
		}

		[StructLayout(3)]
		[Token(Token = "0x20005A3")]
		[CompilerGenerated]
		private struct <StartEvents>d__47 : IAsyncStateMachine
		{
			[Token(Token = "0x4001F17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001F18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001F19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public EndlessGameDirector <>4__this;

			[Token(Token = "0x4001F1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CancellationToken token;

			[Token(Token = "0x4001F1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private bool <audioFinished>5__2;

			[Token(Token = "0x4001F1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <timeAfterAudio>5__3;

			[Token(Token = "0x4001F1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x60016A5")]
			[Address(RVA = "0x1A3867C", Offset = "0x1A3867C", VA = "0x1A3867C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60016A6")]
			[Address(RVA = "0x1A39D38", Offset = "0x1A39D38", VA = "0x1A39D38", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20005A4")]
		[CompilerGenerated]
		private struct <GameOver>d__49 : IAsyncStateMachine
		{
			[Token(Token = "0x4001F1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001F1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001F20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public EndlessGameDirector <>4__this;

			[Token(Token = "0x4001F21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CancellationToken token;

			[Token(Token = "0x4001F22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x60016A7")]
			[Address(RVA = "0x1A39D44", Offset = "0x1A39D44", VA = "0x1A39D44", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60016A8")]
			[Address(RVA = "0x1A3A644", Offset = "0x1A3A644", VA = "0x1A3A644", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Inject]
		private DiContainer _container;

		[Token(Token = "0x4001EFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Header("Setting")]
		[SerializeField]
		private GrooveFitBoxManager _grooveFitBox;

		[Token(Token = "0x4001EFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private EndlessJudgement _endlessJudgement;

		[Token(Token = "0x4001EFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioClip _music;

		[Token(Token = "0x4001EFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private float _startBpm;

		[Token(Token = "0x4001F00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		private float _startDelayTime;

		[Token(Token = "0x4001F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GFGameMessagePublisher _messagePublisher;

		[Token(Token = "0x4001F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[Header("UI Setting")]
		[SerializeField]
		private EndlessJingleManager _jingleManager;

		[Token(Token = "0x4001F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject _uiPivot;

		[Token(Token = "0x4001F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool _lifeAddable;

		[Token(Token = "0x4001F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[Header("GameOver Setting")]
		[SerializeField]
		private AudioClip _gameOverSound;

		[Token(Token = "0x4001F06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private SheetData _sheetData0;

		[Token(Token = "0x4001F07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private SheetData _sheetData1;

		[Token(Token = "0x4001F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private SheetData[] _sheetDatas;

		[Token(Token = "0x4001F09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private AudioSource _audio;

		[Token(Token = "0x4001F0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float _currentBeat;

		[Token(Token = "0x4001F0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private int _count;

		[Token(Token = "0x4001F0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float _speed;

		[Token(Token = "0x4001F0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private IDisposable _gameOverSubscriber;

		[Token(Token = "0x4001F0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private bool _gameOvered;

		[Token(Token = "0x4001F0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private CurrentMode _currentMode;

		[Token(Token = "0x4001F10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[Header("MusicSheets")]
		[SerializeField]
		private TextAsset _musicSheet0;

		[Token(Token = "0x4001F11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private TextAsset _musicSheet1;

		[Token(Token = "0x4001F12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[Header("Debug")]
		[SerializeField]
		private TextMeshProUGUI _debugText;

		[Token(Token = "0x4001F13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private bool? _skipped;

		[Token(Token = "0x17000202")]
		[Inject]
		private IPublisher<BeatData> BeatDataMessage
		{
			[Token(Token = "0x6001694")]
			[Address(RVA = "0x1A37FE0", Offset = "0x1A37FE0", VA = "0x1A37FE0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001695")]
			[Address(RVA = "0x1A37FE8", Offset = "0x1A37FE8", VA = "0x1A37FE8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000203")]
		[Inject]
		private IPublisher<BPMData> BPMDataMessage
		{
			[Token(Token = "0x6001696")]
			[Address(RVA = "0x1A37FF0", Offset = "0x1A37FF0", VA = "0x1A37FF0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001697")]
			[Address(RVA = "0x1A37FF8", Offset = "0x1A37FF8", VA = "0x1A37FF8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000204")]
		[Inject]
		private IPublisher<OnMusicGame> OnMusicGameMessage
		{
			[Token(Token = "0x6001698")]
			[Address(RVA = "0x1A38000", Offset = "0x1A38000", VA = "0x1A38000")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001699")]
			[Address(RVA = "0x1A38008", Offset = "0x1A38008", VA = "0x1A38008")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000205")]
		[Inject]
		private IPublisher<OnFitPatternsDelete> FitPatternsDelete
		{
			[Token(Token = "0x600169A")]
			[Address(RVA = "0x1A38010", Offset = "0x1A38010", VA = "0x1A38010")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600169B")]
			[Address(RVA = "0x1A38018", Offset = "0x1A38018", VA = "0x1A38018")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000206")]
		[Inject]
		private IPublisher<string> OnActionMessage
		{
			[Token(Token = "0x600169C")]
			[Address(RVA = "0x1A38020", Offset = "0x1A38020", VA = "0x1A38020")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600169D")]
			[Address(RVA = "0x1A38028", Offset = "0x1A38028", VA = "0x1A38028")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x600169E")]
		[Address(RVA = "0x1A38030", Offset = "0x1A38030", VA = "0x1A38030", Slot = "4")]
		public override void StandBy()
		{
		}

		[Token(Token = "0x600169F")]
		[Address(RVA = "0x1A38330", Offset = "0x1A38330", VA = "0x1A38330", Slot = "5")]
		[AsyncStateMachine(typeof(<StartEvents>d__47))]
		public override UniTask StartEvents(CancellationToken token)
		{
			return default(UniTask);
		}

		[Token(Token = "0x60016A0")]
		[Address(RVA = "0x1A384AC", Offset = "0x1A384AC", VA = "0x1A384AC")]
		private void SetEndlessLevel(GameStatus.EndlessLifeType lifeType)
		{
		}

		[Token(Token = "0x60016A1")]
		[Address(RVA = "0x1A384CC", Offset = "0x1A384CC", VA = "0x1A384CC")]
		[AsyncStateMachine(typeof(<GameOver>d__49))]
		private UniTask GameOver(CancellationToken token)
		{
			return default(UniTask);
		}

		[Token(Token = "0x60016A2")]
		[Address(RVA = "0x1A3864C", Offset = "0x1A3864C", VA = "0x1A3864C")]
		private float SecondPerBeat(float bpm)
		{
			return default(float);
		}

		[Token(Token = "0x60016A3")]
		[Address(RVA = "0x1A38668", Offset = "0x1A38668", VA = "0x1A38668")]
		public EndlessGameDirector()
		{
		}
	}
	[Token(Token = "0x20005A5")]
	public class GameStatusDirector : MonoBehaviour
	{
		[Token(Token = "0x4001F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool _playOnStart;

		[Token(Token = "0x4001F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private EventDirector[] _gameStatuses;

		[Token(Token = "0x4001F26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private IDisposable _disposable;

		[Token(Token = "0x4001F27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameStatus.Status _currenStatus;

		[Token(Token = "0x4001F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private CancellationTokenSource _tokenSource;

		[Token(Token = "0x17000207")]
		[Inject]
		private ISubscriber<GameStatus> OnChangeStatus
		{
			[Token(Token = "0x60016A9")]
			[Address(RVA = "0x1A3A650", Offset = "0x1A3A650", VA = "0x1A3A650")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60016AA")]
			[Address(RVA = "0x1A3A658", Offset = "0x1A3A658", VA = "0x1A3A658")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x60016AB")]
		[Address(RVA = "0x1A3A660", Offset = "0x1A3A660", VA = "0x1A3A660")]
		private void Awake()
		{
		}

		[Token(Token = "0x60016AC")]
		[Address(RVA = "0x1A3A8BC", Offset = "0x1A3A8BC", VA = "0x1A3A8BC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60016AD")]
		[Address(RVA = "0x1A3A9AC", Offset = "0x1A3A9AC", VA = "0x1A3A9AC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60016AE")]
		[Address(RVA = "0x1A3AA24", Offset = "0x1A3AA24", VA = "0x1A3AA24")]
		public GameStatusDirector()
		{
		}
	}
	[Token(Token = "0x20005A6")]
	public class GameStatusMoveEvent : EventBlock
	{
		[StructLayout(3)]
		[Token(Token = "0x20005A7")]
		[CompilerGenerated]
		private struct <SetEvent>d__2 : IAsyncStateMachine
		{
			[Token(Token = "0x4001F2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001F2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x4001F2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CancellationToken token;

			[Token(Token = "0x4001F2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GameStatusMoveEvent <>4__this;

			[Token(Token = "0x4001F2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x60016B2")]
			[Address(RVA = "0x1A3AC84", Offset = "0x1A3AC84", VA = "0x1A3AC84", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60016B3")]
			[Address(RVA = "0x1A3B08C", Offset = "0x1A3B08C", VA = "0x1A3B08C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameStatus.Status _targetStatus;

		[Token(Token = "0x4001F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GFGameMessagePublisher _messagePublisher;

		[Token(Token = "0x60016B0")]
		[Address(RVA = "0x1A3ABA0", Offset = "0x1A3ABA0", VA = "0x1A3ABA0", Slot = "4")]
		[AsyncStateMachine(typeof(<SetEvent>d__2))]
		public override UniTask<bool> SetEvent(CancellationToken token)
		{
			return default(UniTask<bool>);
		}

		[Token(Token = "0x60016B1")]
		[Address(RVA = "0x1A3AC7C", Offset = "0x1A3AC7C", VA = "0x1A3AC7C")]
		public GameStatusMoveEvent()
		{
		}
	}
	[Token(Token = "0x20005A8")]
	public class GFSceneTransitionManager : SingletonMonoBehaviour<GFSceneTransitionManager>
	{
		[Token(Token = "0x4001F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Deactivate when back to Menu")]
		[SerializeField]
		private List<GameObject> _deactivateObjs;

		[Token(Token = "0x4001F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Inject]
		private GFSceneLoader _gFSceneLoader;

		[Token(Token = "0x4001F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly bool _dontDestroyOnLoad;

		[Token(Token = "0x17000208")]
		protected override bool dontDestroyOnLoad
		{
			[Token(Token = "0x60016B4")]
			[Address(RVA = "0x1A3B0E4", Offset = "0x1A3B0E4", VA = "0x1A3B0E4", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000209")]
		[Inject]
		private IPublisher<OnFitPatternsDelete> FitPatternsDelete
		{
			[Token(Token = "0x60016B5")]
			[Address(RVA = "0x1A3B0EC", Offset = "0x1A3B0EC", VA = "0x1A3B0EC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60016B6")]
			[Address(RVA = "0x1A3B0F4", Offset = "0x1A3B0F4", VA = "0x1A3B0F4")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x60016B7")]
		[Address(RVA = "0x1A3B0FC", Offset = "0x1A3B0FC", VA = "0x1A3B0FC")]
		public void BackToGameSelect()
		{
		}

		[Token(Token = "0x60016B8")]
		[Address(RVA = "0x1A3B380", Offset = "0x1A3B380", VA = "0x1A3B380")]
		public void GoToEndroll()
		{
		}

		[Token(Token = "0x60016B9")]
		[Address(RVA = "0x1A3B618", Offset = "0x1A3B618", VA = "0x1A3B618")]
		public GFSceneTransitionManager()
		{
		}
	}
	[Token(Token = "0x20005A9")]
	public class MainGameSwitcher : EventDirector
	{
		[StructLayout(3)]
		[Token(Token = "0x20005AA")]
		[CompilerGenerated]
		private struct <StartEvents>d__5 : IAsyncStateMachine
		{
			[Token(Token = "0x4001F38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001F39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001F3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public MainGameSwitcher <>4__this;

			[Token(Token = "0x4001F3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CancellationToken token;

			[Token(Token = "0x4001F3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x60016BD")]
			[Address(RVA = "0x1A3B928", Offset = "0x1A3B928", VA = "0x1A3B928", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60016BE")]
			[Address(RVA = "0x1A3BF40", Offset = "0x1A3BF40", VA = "0x1A3BF40", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("GameTypes")]
		[SerializeField]
		private EventDirector _commonGame;

		[Token(Token = "0x4001F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private EventDirector _endlessGame;

		[Token(Token = "0x4001F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Header("Events")]
		[SerializeField]
		private EventDirector _onGameStartEvent;

		[Token(Token = "0x4001F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private EventDirector _currentGame;

		[Token(Token = "0x60016BA")]
		[Address(RVA = "0x1A3B660", Offset = "0x1A3B660", VA = "0x1A3B660", Slot = "4")]
		public override void StandBy()
		{
		}

		[Token(Token = "0x60016BB")]
		[Address(RVA = "0x1A3B7A0", Offset = "0x1A3B7A0", VA = "0x1A3B7A0", Slot = "5")]
		[AsyncStateMachine(typeof(<StartEvents>d__5))]
		public override UniTask StartEvents(CancellationToken token)
		{
			return default(UniTask);
		}

		[Token(Token = "0x60016BC")]
		[Address(RVA = "0x1A3B920", Offset = "0x1A3B920", VA = "0x1A3B920")]
		public MainGameSwitcher()
		{
		}
	}
	[Token(Token = "0x20005AB")]
	public class PerfectRunLife : MonoBehaviour
	{
		[Token(Token = "0x4001F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Image _image;

		[Token(Token = "0x4001F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Animator _animator;

		[Token(Token = "0x4001F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AudioSource _audio;

		[Token(Token = "0x4001F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _startSound;

		[Token(Token = "0x4001F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AudioClip _dissapearSound;

		[Token(Token = "0x4001F42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int Miss;

		[Token(Token = "0x4001F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float _secondPerBeat;

		[Token(Token = "0x60016BF")]
		[Address(RVA = "0x1A3BF4C", Offset = "0x1A3BF4C", VA = "0x1A3BF4C")]
		public void Initialize(float secondPerBeat)
		{
		}

		[Token(Token = "0x60016C0")]
		[Address(RVA = "0x1A3C0BC", Offset = "0x1A3C0BC", VA = "0x1A3C0BC")]
		public void GameOver()
		{
		}

		[Token(Token = "0x60016C1")]
		[Address(RVA = "0x1A3C16C", Offset = "0x1A3C16C", VA = "0x1A3C16C")]
		public void Dance()
		{
		}

		[Token(Token = "0x60016C2")]
		[Address(RVA = "0x1A3C274", Offset = "0x1A3C274", VA = "0x1A3C274")]
		public PerfectRunLife()
		{
		}
	}
	[Token(Token = "0x20005AC")]
	public class PerfectRunManager : MonoBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x20005AE")]
		[CompilerGenerated]
		private struct <GameOver>d__18 : IAsyncStateMachine
		{
			[Token(Token = "0x4001F51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001F52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001F53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public PerfectRunManager <>4__this;

			[Token(Token = "0x4001F54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CancellationToken token;

			[Token(Token = "0x4001F55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x4001F56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private DOTweenAsyncExtensions.TweenAwaiter <>u__2;

			[Token(Token = "0x60016CD")]
			[Address(RVA = "0x1A3C510", Offset = "0x1A3C510", VA = "0x1A3C510", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60016CE")]
			[Address(RVA = "0x1A3CDE4", Offset = "0x1A3CDE4", VA = "0x1A3CDE4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _ui;

		[Token(Token = "0x4001F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SpriteRenderer _gameOverSprite;

		[Token(Token = "0x4001F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip _gameOverSound;

		[Token(Token = "0x4001F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private PerfectRunLife _life;

		[NonSerialized]
		[Token(Token = "0x4001F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly BoolReactiveProperty OnGameOver;

		[NonSerialized]
		[Token(Token = "0x4001F49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool _effectFinished;

		[Token(Token = "0x4001F4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 _startPos;

		[Token(Token = "0x4001F4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Sequence _sequence;

		[Token(Token = "0x4001F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private AudioSource _audio;

		[Token(Token = "0x1700020A")]
		[Inject]
		private IPublisher<OnFitPatternsDelete> FitPatternsDelete
		{
			[Token(Token = "0x60016C4")]
			[Address(RVA = "0x1A3C2E4", Offset = "0x1A3C2E4", VA = "0x1A3C2E4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60016C5")]
			[Address(RVA = "0x1A3C2EC", Offset = "0x1A3C2EC", VA = "0x1A3C2EC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700020B")]
		[Inject]
		private ISubscriber<FPActionData> OnFPAction
		{
			[Token(Token = "0x60016C6")]
			[Address(RVA = "0x1A3C2F4", Offset = "0x1A3C2F4", VA = "0x1A3C2F4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60016C7")]
			[Address(RVA = "0x1A3C2FC", Offset = "0x1A3C2FC", VA = "0x1A3C2FC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x60016C8")]
		[Address(RVA = "0x1A37DB8", Offset = "0x1A37DB8", VA = "0x1A37DB8")]
		public void SetPerfectRunMode(float secondPerBeat, CancellationToken token)
		{
		}

		[Token(Token = "0x60016C9")]
		[Address(RVA = "0x1A3C30C", Offset = "0x1A3C30C", VA = "0x1A3C30C")]
		[AsyncStateMachine(typeof(<GameOver>d__18))]
		private void GameOver(CancellationToken token)
		{
		}

		[Token(Token = "0x60016CA")]
		[Address(RVA = "0x1A3C3E4", Offset = "0x1A3C3E4", VA = "0x1A3C3E4")]
		public PerfectRunManager()
		{
		}
	}
	[Token(Token = "0x20005AF")]
	public abstract class PracticeClearCounter : MonoBehaviour
	{
		[Token(Token = "0x1700020C")]
		public abstract BoolReactiveProperty ClearMessage
		{
			[Token(Token = "0x60016CF")]
			get;
			[Token(Token = "0x60016D0")]
			set;
		}

		[Token(Token = "0x60016D1")]
		[Address(RVA = "0x1A3CDF0", Offset = "0x1A3CDF0", VA = "0x1A3CDF0")]
		protected PracticeClearCounter()
		{
		}
	}
	[Token(Token = "0x20005B0")]
	[RequireComponent(typeof(GrooveFitAudioSource))]
	public class PracticeGameDirector : EventBlock
	{
		[StructLayout(3)]
		[Token(Token = "0x20005B1")]
		[CompilerGenerated]
		private struct <StandBy>d__34 : IAsyncStateMachine
		{
			[Token(Token = "0x4001F70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001F71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001F72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public PracticeGameDirector <>4__this;

			[Token(Token = "0x4001F73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CancellationToken token;

			[Token(Token = "0x4001F74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x60016DE")]
			[Address(RVA = "0x1A3D2EC", Offset = "0x1A3D2EC", VA = "0x1A3D2EC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60016DF")]
			[Address(RVA = "0x1A3D800", Offset = "0x1A3D800", VA = "0x1A3D800", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20005B2")]
		[CompilerGenerated]
		private struct <SetEvent>d__35 : IAsyncStateMachine
		{
			[Token(Token = "0x4001F75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001F76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x4001F77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PracticeGameDirector <>4__this;

			[Token(Token = "0x4001F78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken token;

			[Token(Token = "0x4001F79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private CompositeDisposable <>7__wrap1;

			[Token(Token = "0x4001F7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x60016E0")]
			[Address(RVA = "0x1A3D80C", Offset = "0x1A3D80C", VA = "0x1A3D80C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60016E1")]
			[Address(RVA = "0x1A3EBE4", Offset = "0x1A3EBE4", VA = "0x1A3EBE4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20005B3")]
		[CompilerGenerated]
		private struct <EightCount>d__36 : IAsyncStateMachine
		{
			[Token(Token = "0x4001F7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001F7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001F7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public PracticeGameDirector <>4__this;

			[Token(Token = "0x4001F7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CancellationToken token;

			[Token(Token = "0x4001F7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int[] <intervals>5__2;

			[Token(Token = "0x4001F80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <countNum>5__3;

			[Token(Token = "0x4001F81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <spb>5__4;

			[Token(Token = "0x4001F82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x60016E2")]
			[Address(RVA = "0x1A3EC3C", Offset = "0x1A3EC3C", VA = "0x1A3EC3C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60016E3")]
			[Address(RVA = "0x1A3F1E4", Offset = "0x1A3F1E4", VA = "0x1A3F1E4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Inject]
		private DiContainer _container;

		[Token(Token = "0x4001F5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Header("Practice Settings")]
		[SerializeField]
		private int _practiceFinishCount;

		[Token(Token = "0x4001F5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private int _assistAppearCount;

		[Token(Token = "0x4001F5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private PlayAssistMotion _playAssistMotion;

		[Token(Token = "0x4001F5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private RhythmAssistDirector _rhythmAssist;

		[Token(Token = "0x4001F5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private PracticeClearCounter _practiceClearCounter;

		[Token(Token = "0x4001F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int _clearCount;

		[Token(Token = "0x4001F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int _notClearCount;

		[Token(Token = "0x4001F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Header("Music Settings")]
		[SerializeField]
		private GrooveFitBoxManager _grooveFitBox;

		[Token(Token = "0x4001F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private TextAsset _musicSheet;

		[Token(Token = "0x4001F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private AudioClip _music;

		[Token(Token = "0x4001F65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private float _inputBpm;

		[Token(Token = "0x4001F66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private float _outputBpm;

		[Token(Token = "0x4001F67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private AudioClip _countAudioClip;

		[Token(Token = "0x4001F68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private SheetData _sheetData;

		[Token(Token = "0x4001F69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private AudioSource _audio;

		[Token(Token = "0x4001F6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float _currentBeat;

		[Token(Token = "0x4001F6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private int _count;

		[Token(Token = "0x4001F6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private bool _practiceCleared;

		[Token(Token = "0x4001F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		[Header("Debug")]
		[SerializeField]
		private bool _displayDebug;

		[Token(Token = "0x4001F6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private TextMeshPro _debugText;

		[Token(Token = "0x4001F6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private CompositeDisposable _disposables;

		[Token(Token = "0x1700020D")]
		[Inject]
		private IPublisher<BeatData> BeatDataMessage
		{
			[Token(Token = "0x60016D2")]
			[Address(RVA = "0x1A3CDF8", Offset = "0x1A3CDF8", VA = "0x1A3CDF8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60016D3")]
			[Address(RVA = "0x1A3CE00", Offset = "0x1A3CE00", VA = "0x1A3CE00")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700020E")]
		[Inject]
		private IPublisher<BPMData> BPMDataMessage
		{
			[Token(Token = "0x60016D4")]
			[Address(RVA = "0x1A3CE08", Offset = "0x1A3CE08", VA = "0x1A3CE08")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60016D5")]
			[Address(RVA = "0x1A3CE10", Offset = "0x1A3CE10", VA = "0x1A3CE10")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700020F")]
		[Inject]
		private IPublisher<OnMusicGame> OnMusicGameMessage
		{
			[Token(Token = "0x60016D6")]
			[Address(RVA = "0x1A3CE18", Offset = "0x1A3CE18", VA = "0x1A3CE18")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60016D7")]
			[Address(RVA = "0x1A3CE20", Offset = "0x1A3CE20", VA = "0x1A3CE20")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x60016D8")]
		[Address(RVA = "0x1A3CE28", Offset = "0x1A3CE28", VA = "0x1A3CE28")]
		[AsyncStateMachine(typeof(<StandBy>d__34))]
		private void StandBy(CancellationToken token)
		{
		}

		[Token(Token = "0x60016D9")]
		[Address(RVA = "0x1A3CF00", Offset = "0x1A3CF00", VA = "0x1A3CF00", Slot = "4")]
		[AsyncStateMachine(typeof(<SetEvent>d__35))]
		public override UniTask<bool> SetEvent(CancellationToken token)
		{
			return default(UniTask<bool>);
		}

		[Token(Token = "0x60016DA")]
		[Address(RVA = "0x1A3CFE0", Offset = "0x1A3CFE0", VA = "0x1A3CFE0")]
		[AsyncStateMachine(typeof(<EightCount>d__36))]
		private UniTask EightCount(CancellationToken token)
		{
			return default(UniTask);
		}

		[Token(Token = "0x60016DB")]
		[Address(RVA = "0x1A3D160", Offset = "0x1A3D160", VA = "0x1A3D160")]
		private float SecondPerBeat(float bpm)
		{
			return default(float);
		}

		[Token(Token = "0x60016DC")]
		[Address(RVA = "0x1A3D17C", Offset = "0x1A3D17C", VA = "0x1A3D17C")]
		public PracticeGameDirector()
		{
		}
	}
}
namespace __Imacreate__.__Production__.GrooveFitGames.Core.ComboAndScore
{
	[Token(Token = "0x20005B4")]
	public class MedleyGameScoreUIManager : MonoBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x20005B5")]
		[CompilerGenerated]
		private struct <CountUpScore>d__27 : IAsyncStateMachine
		{
			[Token(Token = "0x4001F90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001F91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001F92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MedleyGameScoreUIManager <>4__this;

			[Token(Token = "0x4001F93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public TextMeshProUGUI text;

			[Token(Token = "0x4001F94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float newScore;

			[Token(Token = "0x4001F95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <elaspedTime>5__2;

			[Token(Token = "0x4001F96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <time>5__3;

			[Token(Token = "0x4001F97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private Cysharp.Threading.Tasks.YieldAwaitable.Awaiter <>u__1;

			[Token(Token = "0x60016F6")]
			[Address(RVA = "0x1A3FCB8", Offset = "0x1A3FCB8", VA = "0x1A3FCB8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60016F7")]
			[Address(RVA = "0x1A3FF70", Offset = "0x1A3FF70", VA = "0x1A3FF70", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20005B6")]
		[CompilerGenerated]
		private struct <DecreaseScoreAnimation>d__28 : IAsyncStateMachine
		{
			[Token(Token = "0x4001F98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001F99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001F9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MedleyGameScoreUIManager <>4__this;

			[Token(Token = "0x4001F9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int decreaseScore;

			[Token(Token = "0x4001F9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private DOTweenAsyncExtensions.TweenAwaiter <>u__1;

			[Token(Token = "0x60016F8")]
			[Address(RVA = "0x1A3FF7C", Offset = "0x1A3FF7C", VA = "0x1A3FF7C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60016F9")]
			[Address(RVA = "0x1A40370", Offset = "0x1A40370", VA = "0x1A40370", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TextMeshProUGUI _scoreCommonText;

		[Token(Token = "0x4001F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TextMeshProUGUI _comboText;

		[Token(Token = "0x4001F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TextMeshProUGUI _decreaseScore;

		[Token(Token = "0x4001F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float _lastScore;

		[Token(Token = "0x4001F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Header("Gauge")]
		[SerializeField]
		private Slider _gaugeSlider;

		[Token(Token = "0x4001F88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject _rateUIPivot;

		[Token(Token = "0x4001F89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private TextMeshProUGUI _rateText;

		[Token(Token = "0x4001F8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float _currentComboRate;

		[Token(Token = "0x4001F8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float _secondPerBeat;

		[Token(Token = "0x17000210")]
		[Inject]
		private ISubscriber<RespawnMessage> RespawnSubscriber
		{
			[Token(Token = "0x60016E4")]
			[Address(RVA = "0x1A3F1F0", Offset = "0x1A3F1F0", VA = "0x1A3F1F0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60016E5")]
			[Address(RVA = "0x1A3F1F8", Offset = "0x1A3F1F8", VA = "0x1A3F1F8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000211")]
		[Inject]
		private ISubscriber<CurrentScoreData> CurrentScoreMessage
		{
			[Token(Token = "0x60016E6")]
			[Address(RVA = "0x1A3F200", Offset = "0x1A3F200", VA = "0x1A3F200")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60016E7")]
			[Address(RVA = "0x1A3F208", Offset = "0x1A3F208", VA = "0x1A3F208")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000212")]
		[Inject]
		private ISubscriber<DecreaseScoreData> DecreaseScoreMassage
		{
			[Token(Token = "0x60016E8")]
			[Address(RVA = "0x1A3F210", Offset = "0x1A3F210", VA = "0x1A3F210")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60016E9")]
			[Address(RVA = "0x1A3F218", Offset = "0x1A3F218", VA = "0x1A3F218")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000213")]
		[Inject]
		private ISubscriber<BPMData> BPMSubscriber
		{
			[Token(Token = "0x60016EA")]
			[Address(RVA = "0x1A3F220", Offset = "0x1A3F220", VA = "0x1A3F220")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60016EB")]
			[Address(RVA = "0x1A3F228", Offset = "0x1A3F228", VA = "0x1A3F228")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x60016EC")]
		[Address(RVA = "0x1A3F230", Offset = "0x1A3F230", VA = "0x1A3F230")]
		private void Awake()
		{
		}

		[Token(Token = "0x60016ED")]
		[Address(RVA = "0x1A3F448", Offset = "0x1A3F448", VA = "0x1A3F448")]
		private void Start()
		{
		}

		[Token(Token = "0x60016EE")]
		[Address(RVA = "0x1A3F74C", Offset = "0x1A3F74C", VA = "0x1A3F74C")]
		[AsyncStateMachine(typeof(<CountUpScore>d__27))]
		private void CountUpScore(TextMeshProUGUI text, float newScore)
		{
		}

		[Token(Token = "0x60016EF")]
		[Address(RVA = "0x1A3F834", Offset = "0x1A3F834", VA = "0x1A3F834")]
		[AsyncStateMachine(typeof(<DecreaseScoreAnimation>d__28))]
		private void DecreaseScoreAnimation(int decreaseScore)
		{
		}

		[Token(Token = "0x60016F0")]
		[Address(RVA = "0x1A3F688", Offset = "0x1A3F688", VA = "0x1A3F688")]
		private void Reset()
		{
		}

		[Token(Token = "0x60016F1")]
		[Address(RVA = "0x1A3F8F0", Offset = "0x1A3F8F0", VA = "0x1A3F8F0")]
		public MedleyGameScoreUIManager()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005B7")]
	public class CurrentScoreData
	{
		[Token(Token = "0x20005B8")]
		public enum SpecialKey
		{
			[Token(Token = "0x4001FA5")]
			Reset
		}

		[Token(Token = "0x4001F9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string key;

		[Token(Token = "0x4001F9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float currentScore;

		[Token(Token = "0x4001F9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float scaledCurrentScore;

		[Token(Token = "0x4001FA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float currentTotalScore;

		[Token(Token = "0x4001FA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int currentCombo;

		[Token(Token = "0x4001FA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public JudgeType currentJudge;

		[Token(Token = "0x4001FA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject fitPatternObj;

		[Token(Token = "0x60016FA")]
		[Address(RVA = "0x1A4037C", Offset = "0x1A4037C", VA = "0x1A4037C")]
		public CurrentScoreData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005B9")]
	public class DecreaseScoreData
	{
		[Token(Token = "0x4001FA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float decreaseScore;

		[Token(Token = "0x4001FA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float newScore;

		[Token(Token = "0x60016FB")]
		[Address(RVA = "0x1A40384", Offset = "0x1A40384", VA = "0x1A40384")]
		public DecreaseScoreData()
		{
		}
	}
	[Token(Token = "0x20005BA")]
	public class FitPatternMultiScoreView : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20005BB")]
		public class ScoreUI
		{
			[Token(Token = "0x4001FAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject _canvas;

			[Token(Token = "0x4001FAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ScoreUITargetKeys _targetKey;

			[Token(Token = "0x4001FB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform _visualizeTransform;

			[Token(Token = "0x4001FB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TextMeshProUGUI _currentScoreText;

			[Token(Token = "0x4001FB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool _isVisualize;

			[Token(Token = "0x4001FB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
			public bool _isVisualizeScore;

			[Token(Token = "0x4001FB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
			public bool _isVisualizeJudge;

			[Token(Token = "0x4001FB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public Vector3 _defaultSize;

			[NonSerialized]
			[Token(Token = "0x4001FB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public CanvasGroup _canvasGroup;

			[NonSerialized]
			[Token(Token = "0x4001FB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public bool _visualizeDone;

			[Token(Token = "0x6001704")]
			[Address(RVA = "0x1A4106C", Offset = "0x1A4106C", VA = "0x1A4106C")]
			public ScoreUI()
			{
			}
		}

		[Token(Token = "0x4001FA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Score View Settings")]
		[SerializeField]
		private ScoreUI[] _scoreUis;

		[Token(Token = "0x4001FA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("Force Quit Settings")]
		[SerializeField]
		private bool _enableForceQuit;

		[Token(Token = "0x4001FAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform refTf;

		[Token(Token = "0x4001FAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ScoreUI _forceQuitUi;

		[Token(Token = "0x4001FAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Inject]
		private ISubscriber<CurrentScoreData> _scoreSubscriber;

		[Token(Token = "0x4001FAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Inject]
		private MultilingualTextManager _multilingualTextManager;

		[Token(Token = "0x60016FC")]
		[Address(RVA = "0x1A4038C", Offset = "0x1A4038C", VA = "0x1A4038C")]
		private void Start()
		{
		}

		[Token(Token = "0x60016FD")]
		[Address(RVA = "0x1A40730", Offset = "0x1A40730", VA = "0x1A40730")]
		private void OnJudgeInput(CurrentScoreData currentScoreData)
		{
		}

		[Token(Token = "0x60016FE")]
		[Address(RVA = "0x1A40900", Offset = "0x1A40900", VA = "0x1A40900")]
		private void VisualizeScore(ScoreUI scoreUI, CurrentScoreData currentScoreData)
		{
		}

		[Token(Token = "0x60016FF")]
		[Address(RVA = "0x1A40BDC", Offset = "0x1A40BDC", VA = "0x1A40BDC")]
		private void ScoreEffect(ScoreUI scoreUI, bool isForceQuit = false)
		{
		}

		[Token(Token = "0x6001700")]
		[Address(RVA = "0x1A40EF0", Offset = "0x1A40EF0", VA = "0x1A40EF0")]
		public FitPatternMultiScoreView()
		{
		}
	}
	[Token(Token = "0x20005BD")]
	public enum ScoreUITargetKeys
	{
		[Token(Token = "0x4001FBC")]
		SmallFishAppear,
		[Token(Token = "0x4001FBD")]
		SmallFishSwim,
		[Token(Token = "0x4001FBE")]
		SmallFishRunAway,
		[Token(Token = "0x4001FBF")]
		SmallFishBite,
		[Token(Token = "0x4001FC0")]
		SmallFishGet,
		[Token(Token = "0x4001FC1")]
		BigFishAppear,
		[Token(Token = "0x4001FC2")]
		BigFishSwim,
		[Token(Token = "0x4001FC3")]
		BigFishRunAway,
		[Token(Token = "0x4001FC4")]
		BigFishBite,
		[Token(Token = "0x4001FC5")]
		BigFishFightLeft,
		[Token(Token = "0x4001FC6")]
		BigFishFightRight,
		[Token(Token = "0x4001FC7")]
		BigFishGet,
		[Token(Token = "0x4001FC8")]
		RightCatch,
		[Token(Token = "0x4001FC9")]
		LeftCatch,
		[Token(Token = "0x4001FCA")]
		RightPass,
		[Token(Token = "0x4001FCB")]
		LeftPass,
		[Token(Token = "0x4001FCC")]
		Dodge
	}
	[Token(Token = "0x20005BE")]
	public class FitPatternScoreView : MonoBehaviour
	{
		[Token(Token = "0x4001FCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform visualizeTransform;

		[Token(Token = "0x4001FCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Vector3 posOffset;

		[Token(Token = "0x4001FCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private Vector3 rotOffset;

		[Token(Token = "0x4001FD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private TextMeshProUGUI _currentScoreText;

		[Token(Token = "0x4001FD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private CanvasGroup _canvasGroup;

		[Token(Token = "0x4001FD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool isVisualize;

		[Token(Token = "0x4001FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		public bool isVisualizeScore;

		[Token(Token = "0x4001FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		public bool isVisualizeJudge;

		[Token(Token = "0x4001FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private Vector3 defaultSize;

		[Token(Token = "0x4001FD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Header("OptionalSetting")]
		[SerializeField]
		private string _judgeKey;

		[Token(Token = "0x4001FD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Inject]
		private ISubscriber<CurrentScoreData> _scoreSubscriber;

		[Token(Token = "0x4001FD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Inject]
		private MultilingualTextManager _multilingualTextManager;

		[Token(Token = "0x6001708")]
		[Address(RVA = "0x1A41304", Offset = "0x1A41304", VA = "0x1A41304")]
		private void Start()
		{
		}

		[Token(Token = "0x6001709")]
		[Address(RVA = "0x1A41578", Offset = "0x1A41578", VA = "0x1A41578")]
		private void OnJudgeInput(CurrentScoreData currentScoreData)
		{
		}

		[Token(Token = "0x600170A")]
		[Address(RVA = "0x1A41718", Offset = "0x1A41718", VA = "0x1A41718")]
		private void VisualizeScore(CurrentScoreData currentScoreData)
		{
		}

		[Token(Token = "0x600170B")]
		[Address(RVA = "0x1A419EC", Offset = "0x1A419EC", VA = "0x1A419EC")]
		private void ScoreEffect()
		{
		}

		[Token(Token = "0x600170C")]
		[Address(RVA = "0x1A41C60", Offset = "0x1A41C60", VA = "0x1A41C60")]
		public FitPatternScoreView()
		{
		}
	}
	[Token(Token = "0x20005BF")]
	[CreateAssetMenu(fileName = "GFScoreRateSettings", menuName = "ScriptableObjects/GFScoreRateSettings", order = 0)]
	public class GFScoreRateSettings : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x20005C0")]
		public class ScoreRateSetting
		{
			[Token(Token = "0x4001FDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool slowIsMoreExhausted;

			[Token(Token = "0x6001714")]
			[Address(RVA = "0x1A42278", Offset = "0x1A42278", VA = "0x1A42278")]
			public ScoreRateSetting()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20005C1")]
		public class GFScoreRate
		{
			[Token(Token = "0x4001FDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GrooveFitGame grooveFit;

			[Token(Token = "0x4001FDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ScoreRateSetting scoreRateSetting;

			[Token(Token = "0x6001715")]
			[Address(RVA = "0x1A42300", Offset = "0x1A42300", VA = "0x1A42300")]
			public GFScoreRate()
			{
			}
		}

		[Token(Token = "0x4001FD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<GFScoreRate> GFScoraRates;

		[Token(Token = "0x4001FDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<GrooveFitGame, ScoreRateSetting> gFScoreRateDictionary;

		[Token(Token = "0x6001711")]
		[Address(RVA = "0x1A41EDC", Offset = "0x1A41EDC", VA = "0x1A41EDC")]
		public (float, bool) CalcurateScoreRate(GrooveFitGame grooveFit, GameStatus.OptionRule option)
		{
			return default((float, bool));
		}

		[Token(Token = "0x6001712")]
		[Address(RVA = "0x1A422F8", Offset = "0x1A422F8", VA = "0x1A422F8")]
		public GFScoreRateSettings()
		{
		}
	}
	[Token(Token = "0x20005C3")]
	public class ScoreUIManager : MonoBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x20005C4")]
		[CompilerGenerated]
		private struct <CountUpScore>d__18 : IAsyncStateMachine
		{
			[Token(Token = "0x4001FEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001FEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001FEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ScoreUIManager <>4__this;

			[Token(Token = "0x4001FED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public TextMeshProUGUI text;

			[Token(Token = "0x4001FEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float newScore;

			[Token(Token = "0x4001FEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <elaspedTime>5__2;

			[Token(Token = "0x4001FF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <time>5__3;

			[Token(Token = "0x4001FF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private Cysharp.Threading.Tasks.YieldAwaitable.Awaiter <>u__1;

			[Token(Token = "0x6001721")]
			[Address(RVA = "0x1A42A00", Offset = "0x1A42A00", VA = "0x1A42A00", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001722")]
			[Address(RVA = "0x1A42CB8", Offset = "0x1A42CB8", VA = "0x1A42CB8", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001FE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TextMeshProUGUI _scoreCommonText;

		[Token(Token = "0x4001FE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TextMeshProUGUI _comboText;

		[Token(Token = "0x4001FE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float _secondPerBeat;

		[Token(Token = "0x4001FE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float _lastScore;

		[Token(Token = "0x4001FE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Header("Gauge")]
		[SerializeField]
		private Slider _gaugeSlider;

		[Token(Token = "0x4001FE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject _rateUIPivot;

		[Token(Token = "0x4001FE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private TextMeshProUGUI _rateText;

		[Token(Token = "0x4001FE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float _currentComboRate;

		[Token(Token = "0x17000214")]
		[Inject]
		private ISubscriber<BPMData> BPMDataMessage
		{
			[Token(Token = "0x6001716")]
			[Address(RVA = "0x1A42308", Offset = "0x1A42308", VA = "0x1A42308")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001717")]
			[Address(RVA = "0x1A42310", Offset = "0x1A42310", VA = "0x1A42310")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000215")]
		[Inject]
		private ISubscriber<CurrentScoreData> CurrentScoreMessage
		{
			[Token(Token = "0x6001718")]
			[Address(RVA = "0x1A42318", Offset = "0x1A42318", VA = "0x1A42318")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001719")]
			[Address(RVA = "0x1A42320", Offset = "0x1A42320", VA = "0x1A42320")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x600171A")]
		[Address(RVA = "0x1A42328", Offset = "0x1A42328", VA = "0x1A42328")]
		private void Awake()
		{
		}

		[Token(Token = "0x600171B")]
		[Address(RVA = "0x1A42454", Offset = "0x1A42454", VA = "0x1A42454")]
		private void Start()
		{
		}

		[Token(Token = "0x600171C")]
		[Address(RVA = "0x1A4264C", Offset = "0x1A4264C", VA = "0x1A4264C")]
		[AsyncStateMachine(typeof(<CountUpScore>d__18))]
		private void CountUpScore(TextMeshProUGUI text, float newScore)
		{
		}

		[Token(Token = "0x600171D")]
		[Address(RVA = "0x1A42588", Offset = "0x1A42588", VA = "0x1A42588")]
		private void Reset()
		{
		}

		[Token(Token = "0x600171E")]
		[Address(RVA = "0x1A42734", Offset = "0x1A42734", VA = "0x1A42734")]
		public ScoreUIManager()
		{
		}
	}
}
namespace __Imacreate__.Furuyama.Scripts.FirebaseGrooveFitIsland.FirebaseFunctions
{
	[Serializable]
	[Token(Token = "0x20005C5")]
	public class TwitterAuthLinkRequest
	{
		[Token(Token = "0x4001FF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool force;

		[Token(Token = "0x6001723")]
		[Address(RVA = "0x1A42CC4", Offset = "0x1A42CC4", VA = "0x1A42CC4")]
		public TwitterAuthLinkRequest()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005C6")]
	public class TwitterAuthLinkResponse
	{
		[Token(Token = "0x4001FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string status;

		[Token(Token = "0x4001FF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string authLinkUrl;

		[Token(Token = "0x6001724")]
		[Address(RVA = "0x1A42CCC", Offset = "0x1A42CCC", VA = "0x1A42CCC")]
		public TwitterAuthLinkResponse()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005C7")]
	public class TwitterOAuthPinRequest
	{
		[Token(Token = "0x4001FF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string pin;

		[Token(Token = "0x6001725")]
		[Address(RVA = "0x1A42CD4", Offset = "0x1A42CD4", VA = "0x1A42CD4")]
		public TwitterOAuthPinRequest()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005C8")]
	public class TwitterOAuthPinResponse
	{
		[Token(Token = "0x4001FF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string status;

		[Token(Token = "0x6001726")]
		[Address(RVA = "0x1A42CDC", Offset = "0x1A42CDC", VA = "0x1A42CDC")]
		public TwitterOAuthPinResponse()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005C9")]
	public class TwitterPostTweetResponse
	{
		[Token(Token = "0x4001FF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string status;

		[Token(Token = "0x6001727")]
		[Address(RVA = "0x1A42CE4", Offset = "0x1A42CE4", VA = "0x1A42CE4")]
		public TwitterPostTweetResponse()
		{
		}
	}
}
namespace Twity
{
	[Token(Token = "0x20005CA")]
	public class Oauth
	{
		[Token(Token = "0x17000216")]
		public static string consumerKey
		{
			[Token(Token = "0x6001728")]
			[Address(RVA = "0x1A42CEC", Offset = "0x1A42CEC", VA = "0x1A42CEC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001729")]
			[Address(RVA = "0x1A42D34", Offset = "0x1A42D34", VA = "0x1A42D34")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000217")]
		public static string consumerSecret
		{
			[Token(Token = "0x600172A")]
			[Address(RVA = "0x1A42D8C", Offset = "0x1A42D8C", VA = "0x1A42D8C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600172B")]
			[Address(RVA = "0x1A42DD4", Offset = "0x1A42DD4", VA = "0x1A42DD4")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000218")]
		public static string accessToken
		{
			[Token(Token = "0x600172C")]
			[Address(RVA = "0x1A42E24", Offset = "0x1A42E24", VA = "0x1A42E24")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600172D")]
			[Address(RVA = "0x1A42E6C", Offset = "0x1A42E6C", VA = "0x1A42E6C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000219")]
		public static string accessTokenSecret
		{
			[Token(Token = "0x600172E")]
			[Address(RVA = "0x1A42EBC", Offset = "0x1A42EBC", VA = "0x1A42EBC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600172F")]
			[Address(RVA = "0x1A42F04", Offset = "0x1A42F04", VA = "0x1A42F04")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700021A")]
		public static string bearerToken
		{
			[Token(Token = "0x6001730")]
			[Address(RVA = "0x1A42F54", Offset = "0x1A42F54", VA = "0x1A42F54")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001731")]
			[Address(RVA = "0x1A42F9C", Offset = "0x1A42F9C", VA = "0x1A42F9C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700021B")]
		public static string requestToken
		{
			[Token(Token = "0x6001732")]
			[Address(RVA = "0x1A42FEC", Offset = "0x1A42FEC", VA = "0x1A42FEC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001733")]
			[Address(RVA = "0x1A43034", Offset = "0x1A43034", VA = "0x1A43034")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700021C")]
		public static string requestTokenSecret
		{
			[Token(Token = "0x6001734")]
			[Address(RVA = "0x1A43084", Offset = "0x1A43084", VA = "0x1A43084")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001735")]
			[Address(RVA = "0x1A430CC", Offset = "0x1A430CC", VA = "0x1A430CC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700021D")]
		public static string authorizeURL
		{
			[Token(Token = "0x6001736")]
			[Address(RVA = "0x1A4311C", Offset = "0x1A4311C", VA = "0x1A4311C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001737")]
			[Address(RVA = "0x1A43164", Offset = "0x1A43164", VA = "0x1A43164")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001738")]
		[Address(RVA = "0x1A431B4", Offset = "0x1A431B4", VA = "0x1A431B4")]
		public static string GenerateHeaderWithAccessToken(SortedDictionary<string, string> parameters, string requestMethod, string requestURL)
		{
			return null;
		}

		[Token(Token = "0x6001739")]
		[Address(RVA = "0x1A4344C", Offset = "0x1A4344C", VA = "0x1A4344C")]
		private static string GenerateSignature(SortedDictionary<string, string> parameters, string requestMethod, string requestURL)
		{
			return null;
		}

		[Token(Token = "0x600173A")]
		[Address(RVA = "0x1A439D8", Offset = "0x1A439D8", VA = "0x1A439D8")]
		private static void AddDefaultOauthParams(SortedDictionary<string, string> parameters, string consumerKey)
		{
		}

		[Token(Token = "0x600173B")]
		[Address(RVA = "0x1A43B30", Offset = "0x1A43B30", VA = "0x1A43B30")]
		private static string GenerateTimeStamp()
		{
			return null;
		}

		[Token(Token = "0x600173C")]
		[Address(RVA = "0x1A43C24", Offset = "0x1A43C24", VA = "0x1A43C24")]
		private static string GenerateNonce()
		{
			return null;
		}

		[Token(Token = "0x600173D")]
		[Address(RVA = "0x1A43C88", Offset = "0x1A43C88", VA = "0x1A43C88")]
		public Oauth()
		{
		}
	}
	[Token(Token = "0x20005CB")]
	public delegate void TwitterCallback(bool success, string response);
	[Token(Token = "0x20005CC")]
	public delegate void TwitterAuthenticationCallback(bool success);
	[Token(Token = "0x20005CD")]
	public class Client
	{
		[Token(Token = "0x20005CE")]
		[CompilerGenerated]
		private sealed class <Get>d__1 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002001")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002002")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002003")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string APIPath;

			[Token(Token = "0x4002004")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Dictionary<string, string> APIParams;

			[Token(Token = "0x4002005")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public TwitterCallback callback;

			[Token(Token = "0x1700021E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001752")]
				[Address(RVA = "0x1A4479C", Offset = "0x1A4479C", VA = "0x1A4479C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700021F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001754")]
				[Address(RVA = "0x1A447E4", Offset = "0x1A447E4", VA = "0x1A447E4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600174F")]
			[Address(RVA = "0x1A44040", Offset = "0x1A44040", VA = "0x1A44040")]
			[DebuggerHidden]
			public <Get>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x6001750")]
			[Address(RVA = "0x1A44628", Offset = "0x1A44628", VA = "0x1A44628", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001751")]
			[Address(RVA = "0x1A4462C", Offset = "0x1A4462C", VA = "0x1A4462C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001753")]
			[Address(RVA = "0x1A447A4", Offset = "0x1A447A4", VA = "0x1A447A4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005CF")]
		[CompilerGenerated]
		private sealed class <Post>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002006")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002007")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002008")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string APIPath;

			[Token(Token = "0x4002009")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Dictionary<string, string> APIParams;

			[Token(Token = "0x400200A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public TwitterCallback callback;

			[Token(Token = "0x17000220")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001758")]
				[Address(RVA = "0x1A45170", Offset = "0x1A45170", VA = "0x1A45170", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000221")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600175A")]
				[Address(RVA = "0x1A451B8", Offset = "0x1A451B8", VA = "0x1A451B8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001755")]
			[Address(RVA = "0x1A4410C", Offset = "0x1A4410C", VA = "0x1A4410C")]
			[DebuggerHidden]
			public <Post>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x6001756")]
			[Address(RVA = "0x1A447EC", Offset = "0x1A447EC", VA = "0x1A447EC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001757")]
			[Address(RVA = "0x1A447F0", Offset = "0x1A447F0", VA = "0x1A447F0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001759")]
			[Address(RVA = "0x1A45178", Offset = "0x1A45178", VA = "0x1A45178", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005D0")]
		[CompilerGenerated]
		private sealed class <GetOauth2BearerToken>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400200B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400200C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400200D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TwitterAuthenticationCallback callback;

			[Token(Token = "0x400200E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private UnityWebRequest <request>5__2;

			[Token(Token = "0x17000222")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600175E")]
				[Address(RVA = "0x1A455A0", Offset = "0x1A455A0", VA = "0x1A455A0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000223")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001760")]
				[Address(RVA = "0x1A455E8", Offset = "0x1A455E8", VA = "0x1A455E8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600175B")]
			[Address(RVA = "0x1A441A8", Offset = "0x1A441A8", VA = "0x1A441A8")]
			[DebuggerHidden]
			public <GetOauth2BearerToken>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x600175C")]
			[Address(RVA = "0x1A451C0", Offset = "0x1A451C0", VA = "0x1A451C0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600175D")]
			[Address(RVA = "0x1A451C4", Offset = "0x1A451C4", VA = "0x1A451C4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600175F")]
			[Address(RVA = "0x1A455A8", Offset = "0x1A455A8", VA = "0x1A455A8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005D1")]
		[CompilerGenerated]
		private sealed class <GenerateRequestToken>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400200F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002010")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002011")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TwitterAuthenticationCallback callback;

			[Token(Token = "0x17000224")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001764")]
				[Address(RVA = "0x1A45680", Offset = "0x1A45680", VA = "0x1A45680", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000225")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001766")]
				[Address(RVA = "0x1A456C8", Offset = "0x1A456C8", VA = "0x1A456C8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001761")]
			[Address(RVA = "0x1A44244", Offset = "0x1A44244", VA = "0x1A44244")]
			[DebuggerHidden]
			public <GenerateRequestToken>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6001762")]
			[Address(RVA = "0x1A455F0", Offset = "0x1A455F0", VA = "0x1A455F0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001763")]
			[Address(RVA = "0x1A455F4", Offset = "0x1A455F4", VA = "0x1A455F4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001765")]
			[Address(RVA = "0x1A45688", Offset = "0x1A45688", VA = "0x1A45688", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005D2")]
		[CompilerGenerated]
		private sealed class <GenerateRequestToken>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002012")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002013")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002014")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string callbackURL;

			[Token(Token = "0x4002015")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TwitterAuthenticationCallback callback;

			[Token(Token = "0x4002016")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UnityWebRequest <request>5__2;

			[Token(Token = "0x17000226")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600176A")]
				[Address(RVA = "0x1A45C14", Offset = "0x1A45C14", VA = "0x1A45C14", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000227")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600176C")]
				[Address(RVA = "0x1A45C5C", Offset = "0x1A45C5C", VA = "0x1A45C5C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001767")]
			[Address(RVA = "0x1A442FC", Offset = "0x1A442FC", VA = "0x1A442FC")]
			[DebuggerHidden]
			public <GenerateRequestToken>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x6001768")]
			[Address(RVA = "0x1A456D0", Offset = "0x1A456D0", VA = "0x1A456D0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001769")]
			[Address(RVA = "0x1A456D4", Offset = "0x1A456D4", VA = "0x1A456D4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600176B")]
			[Address(RVA = "0x1A45C1C", Offset = "0x1A45C1C", VA = "0x1A45C1C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005D3")]
		[CompilerGenerated]
		private sealed class <GenerateAccessToken>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002017")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002018")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002019")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string pin;

			[Token(Token = "0x400201A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TwitterAuthenticationCallback callback;

			[Token(Token = "0x400201B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UnityWebRequest <request>5__2;

			[Token(Token = "0x17000228")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001770")]
				[Address(RVA = "0x1A46188", Offset = "0x1A46188", VA = "0x1A46188", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000229")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001772")]
				[Address(RVA = "0x1A461D0", Offset = "0x1A461D0", VA = "0x1A461D0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600176D")]
			[Address(RVA = "0x1A443B4", Offset = "0x1A443B4", VA = "0x1A443B4")]
			[DebuggerHidden]
			public <GenerateAccessToken>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x600176E")]
			[Address(RVA = "0x1A45C64", Offset = "0x1A45C64", VA = "0x1A45C64", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600176F")]
			[Address(RVA = "0x1A45C68", Offset = "0x1A45C68", VA = "0x1A45C68", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001771")]
			[Address(RVA = "0x1A46190", Offset = "0x1A46190", VA = "0x1A46190", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005D4")]
		[CompilerGenerated]
		private sealed class <SendRequest>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400201C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400201D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400201E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UnityWebRequest request;

			[Token(Token = "0x400201F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SortedDictionary<string, string> parameters;

			[Token(Token = "0x4002020")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string method;

			[Token(Token = "0x4002021")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string requestURL;

			[Token(Token = "0x4002022")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public TwitterCallback callback;

			[Token(Token = "0x1700022A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001776")]
				[Address(RVA = "0x1A46454", Offset = "0x1A46454", VA = "0x1A46454", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700022B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001778")]
				[Address(RVA = "0x1A4649C", Offset = "0x1A4649C", VA = "0x1A4649C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001773")]
			[Address(RVA = "0x1A444B0", Offset = "0x1A444B0", VA = "0x1A444B0")]
			[DebuggerHidden]
			public <SendRequest>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6001774")]
			[Address(RVA = "0x1A461D8", Offset = "0x1A461D8", VA = "0x1A461D8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001775")]
			[Address(RVA = "0x1A461DC", Offset = "0x1A461DC", VA = "0x1A461DC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001777")]
			[Address(RVA = "0x1A4645C", Offset = "0x1A4645C", VA = "0x1A4645C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002000")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string screenName;

		[Token(Token = "0x6001746")]
		[Address(RVA = "0x1A43F9C", Offset = "0x1A43F9C", VA = "0x1A43F9C")]
		[IteratorStateMachine(typeof(<Get>d__1))]
		public static IEnumerator Get(string APIPath, Dictionary<string, string> APIParams, TwitterCallback callback)
		{
			return null;
		}

		[Token(Token = "0x6001747")]
		[Address(RVA = "0x1A44068", Offset = "0x1A44068", VA = "0x1A44068")]
		[IteratorStateMachine(typeof(<Post>d__2))]
		public static IEnumerator Post(string APIPath, Dictionary<string, string> APIParams, TwitterCallback callback)
		{
			return null;
		}

		[Token(Token = "0x6001748")]
		[Address(RVA = "0x1A44134", Offset = "0x1A44134", VA = "0x1A44134")]
		[IteratorStateMachine(typeof(<GetOauth2BearerToken>d__3))]
		public static IEnumerator GetOauth2BearerToken(TwitterAuthenticationCallback callback)
		{
			return null;
		}

		[Token(Token = "0x6001749")]
		[Address(RVA = "0x1A441D0", Offset = "0x1A441D0", VA = "0x1A441D0")]
		[IteratorStateMachine(typeof(<GenerateRequestToken>d__4))]
		public static IEnumerator GenerateRequestToken(TwitterAuthenticationCallback callback)
		{
			return null;
		}

		[Token(Token = "0x600174A")]
		[Address(RVA = "0x1A4426C", Offset = "0x1A4426C", VA = "0x1A4426C")]
		[IteratorStateMachine(typeof(<GenerateRequestToken>d__5))]
		public static IEnumerator GenerateRequestToken(TwitterAuthenticationCallback callback, string callbackURL)
		{
			return null;
		}

		[Token(Token = "0x600174B")]
		[Address(RVA = "0x1A44324", Offset = "0x1A44324", VA = "0x1A44324")]
		[IteratorStateMachine(typeof(<GenerateAccessToken>d__6))]
		public static IEnumerator GenerateAccessToken(string pin, TwitterAuthenticationCallback callback)
		{
			return null;
		}

		[Token(Token = "0x600174C")]
		[Address(RVA = "0x1A443DC", Offset = "0x1A443DC", VA = "0x1A443DC")]
		[IteratorStateMachine(typeof(<SendRequest>d__7))]
		private static IEnumerator SendRequest(UnityWebRequest request, SortedDictionary<string, string> parameters, string method, string requestURL, TwitterCallback callback)
		{
			return null;
		}

		[Token(Token = "0x600174D")]
		[Address(RVA = "0x1A444D8", Offset = "0x1A444D8", VA = "0x1A444D8")]
		private static void ClearTokens()
		{
		}

		[Token(Token = "0x600174E")]
		[Address(RVA = "0x1A44620", Offset = "0x1A44620", VA = "0x1A44620")]
		public Client()
		{
		}
	}
	[Token(Token = "0x20005D5")]
	public delegate void TwitterStreamCallback(string response, StreamMessageType messageType);
	[Token(Token = "0x20005D6")]
	public class Stream
	{
		[Token(Token = "0x20005D7")]
		[CompilerGenerated]
		private sealed class <On>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002025")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002026")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002027")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Dictionary<string, string> APIParams;

			[Token(Token = "0x4002028")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Stream <>4__this;

			[Token(Token = "0x4002029")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public TwitterStreamCallback callback;

			[Token(Token = "0x1700022C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001783")]
				[Address(RVA = "0x1A46D90", Offset = "0x1A46D90", VA = "0x1A46D90", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700022D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001785")]
				[Address(RVA = "0x1A46DD8", Offset = "0x1A46DD8", VA = "0x1A46DD8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001780")]
			[Address(RVA = "0x1A46984", Offset = "0x1A46984", VA = "0x1A46984")]
			[DebuggerHidden]
			public <On>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6001781")]
			[Address(RVA = "0x1A46A2C", Offset = "0x1A46A2C", VA = "0x1A46A2C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001782")]
			[Address(RVA = "0x1A46A30", Offset = "0x1A46A30", VA = "0x1A46A30", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001784")]
			[Address(RVA = "0x1A46D98", Offset = "0x1A46D98", VA = "0x1A46D98", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string REQUEST_URL;

		[Token(Token = "0x4002024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private UnityWebRequest request;

		[Token(Token = "0x600177D")]
		[Address(RVA = "0x1A46640", Offset = "0x1A46640", VA = "0x1A46640")]
		public Stream(StreamType type)
		{
		}

		[Token(Token = "0x600177E")]
		[Address(RVA = "0x1A468E0", Offset = "0x1A468E0", VA = "0x1A468E0")]
		[IteratorStateMachine(typeof(<On>d__3))]
		public IEnumerator On(Dictionary<string, string> APIParams, TwitterStreamCallback callback)
		{
			return null;
		}

		[Token(Token = "0x600177F")]
		[Address(RVA = "0x1A469AC", Offset = "0x1A469AC", VA = "0x1A469AC")]
		public void Off()
		{
		}
	}
	[Token(Token = "0x20005D8")]
	public class StreamingDownloadHandler : DownloadHandlerScript
	{
		[Token(Token = "0x400202A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TwitterStreamCallback callback;

		[Token(Token = "0x400202B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private StreamMessageType messageType;

		[Token(Token = "0x6001786")]
		[Address(RVA = "0x1A46D60", Offset = "0x1A46D60", VA = "0x1A46D60")]
		public StreamingDownloadHandler(TwitterStreamCallback callback)
		{
		}

		[Token(Token = "0x6001787")]
		[Address(RVA = "0x1A46DE0", Offset = "0x1A46DE0", VA = "0x1A46DE0", Slot = "9")]
		protected override bool ReceiveData(byte[] data, int dataLength)
		{
			return default(bool);
		}

		[Token(Token = "0x6001788")]
		[Address(RVA = "0x1A46FE8", Offset = "0x1A46FE8", VA = "0x1A46FE8")]
		private void CheckMessageType(string data)
		{
		}
	}
	[Token(Token = "0x20005D9")]
	public class FilterTrack
	{
		[Token(Token = "0x400202C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<string> tracks;

		[Token(Token = "0x6001789")]
		[Address(RVA = "0x1A48368", Offset = "0x1A48368", VA = "0x1A48368")]
		public FilterTrack(string track)
		{
		}

		[Token(Token = "0x600178A")]
		[Address(RVA = "0x1A48480", Offset = "0x1A48480", VA = "0x1A48480")]
		public FilterTrack(List<string> tracks)
		{
		}

		[Token(Token = "0x600178B")]
		[Address(RVA = "0x1A484B0", Offset = "0x1A484B0", VA = "0x1A484B0")]
		public void AddTrack(string track)
		{
		}

		[Token(Token = "0x600178C")]
		[Address(RVA = "0x1A48560", Offset = "0x1A48560", VA = "0x1A48560")]
		public void AddTracks(List<string> tracks)
		{
		}

		[Token(Token = "0x600178D")]
		[Address(RVA = "0x1A48714", Offset = "0x1A48714", VA = "0x1A48714")]
		public string GetKey()
		{
			return null;
		}

		[Token(Token = "0x600178E")]
		[Address(RVA = "0x1A48754", Offset = "0x1A48754", VA = "0x1A48754")]
		public string GetValue()
		{
			return null;
		}
	}
	[Token(Token = "0x20005DA")]
	public class FilterLocations
	{
		[Token(Token = "0x400202D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<Coordinate> locations;

		[Token(Token = "0x600178F")]
		[Address(RVA = "0x1A48920", Offset = "0x1A48920", VA = "0x1A48920")]
		public FilterLocations()
		{
		}

		[Token(Token = "0x6001790")]
		[Address(RVA = "0x1A48B24", Offset = "0x1A48B24", VA = "0x1A48B24")]
		public FilterLocations(Coordinate southwest, Coordinate northeast)
		{
		}

		[Token(Token = "0x6001791")]
		[Address(RVA = "0x1A48CA8", Offset = "0x1A48CA8", VA = "0x1A48CA8")]
		public void AddLocation(Coordinate southwest, Coordinate northeast)
		{
		}

		[Token(Token = "0x6001792")]
		[Address(RVA = "0x1A48DD0", Offset = "0x1A48DD0", VA = "0x1A48DD0")]
		public string GetKey()
		{
			return null;
		}

		[Token(Token = "0x6001793")]
		[Address(RVA = "0x1A48E10", Offset = "0x1A48E10", VA = "0x1A48E10")]
		public string GetValue()
		{
			return null;
		}
	}
	[Token(Token = "0x20005DB")]
	public class Coordinate
	{
		[Token(Token = "0x1700022E")]
		public float lng
		{
			[Token(Token = "0x6001794")]
			[Address(RVA = "0x1A4903C", Offset = "0x1A4903C", VA = "0x1A4903C")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001795")]
			[Address(RVA = "0x1A49044", Offset = "0x1A49044", VA = "0x1A49044")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700022F")]
		public float lat
		{
			[Token(Token = "0x6001796")]
			[Address(RVA = "0x1A4904C", Offset = "0x1A4904C", VA = "0x1A4904C")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001797")]
			[Address(RVA = "0x1A49054", Offset = "0x1A49054", VA = "0x1A49054")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001798")]
		[Address(RVA = "0x1A48AF8", Offset = "0x1A48AF8", VA = "0x1A48AF8")]
		public Coordinate(float lng, float lat)
		{
		}
	}
	[Token(Token = "0x20005DC")]
	public class FilterFollow
	{
		[Token(Token = "0x4002030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<string> screen_names;

		[Token(Token = "0x4002031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<long> ids;

		[Token(Token = "0x6001799")]
		[Address(RVA = "0x1A4905C", Offset = "0x1A4905C", VA = "0x1A4905C")]
		public FilterFollow(List<string> screen_names)
		{
		}

		[Token(Token = "0x600179A")]
		[Address(RVA = "0x1A4908C", Offset = "0x1A4908C", VA = "0x1A4908C")]
		public FilterFollow(List<long> ids)
		{
		}

		[Token(Token = "0x600179B")]
		[Address(RVA = "0x1A490BC", Offset = "0x1A490BC", VA = "0x1A490BC")]
		public FilterFollow(long id)
		{
		}

		[Token(Token = "0x600179C")]
		[Address(RVA = "0x1A491CC", Offset = "0x1A491CC", VA = "0x1A491CC")]
		public void AddId(long id)
		{
		}

		[Token(Token = "0x600179D")]
		[Address(RVA = "0x1A49274", Offset = "0x1A49274", VA = "0x1A49274")]
		public void AddIds(List<long> ids)
		{
		}

		[Token(Token = "0x600179E")]
		[Address(RVA = "0x1A49430", Offset = "0x1A49430", VA = "0x1A49430")]
		public string GetKey()
		{
			return null;
		}

		[Token(Token = "0x600179F")]
		[Address(RVA = "0x1A49470", Offset = "0x1A49470", VA = "0x1A49470")]
		public string GetValue()
		{
			return null;
		}
	}
	[Token(Token = "0x20005DD")]
	public enum StreamMessageType
	{
		[Token(Token = "0x4002033")]
		Tweet,
		[Token(Token = "0x4002034")]
		StatusDeletionNotice,
		[Token(Token = "0x4002035")]
		LocationDeletionNotice,
		[Token(Token = "0x4002036")]
		LimitNotice,
		[Token(Token = "0x4002037")]
		WithheldContentNotice,
		[Token(Token = "0x4002038")]
		DisconnectMessage,
		[Token(Token = "0x4002039")]
		StallWarning,
		[Token(Token = "0x400203A")]
		FriendsList,
		[Token(Token = "0x400203B")]
		FriendsListStr,
		[Token(Token = "0x400203C")]
		DirectMessage,
		[Token(Token = "0x400203D")]
		StreamEvent,
		[Token(Token = "0x400203E")]
		None
	}
	[Token(Token = "0x20005DE")]
	public enum StreamType
	{
		[Token(Token = "0x4002040")]
		PublicFilter,
		[Token(Token = "0x4002041")]
		PublicSample,
		[Token(Token = "0x4002042")]
		User,
		[Token(Token = "0x4002043")]
		Site
	}
}
namespace Twity.Helpers
{
	[Token(Token = "0x20005DF")]
	public class JsonHelper
	{
		[Token(Token = "0x60017A0")]
		[Address(RVA = "0x1A49778", Offset = "0x1A49778", VA = "0x1A49778")]
		public static string ArrayToObject(string arrayString)
		{
			return null;
		}

		[Token(Token = "0x60017A1")]
		[Address(RVA = "0x1A4981C", Offset = "0x1A4981C", VA = "0x1A4981C")]
		public JsonHelper()
		{
		}
	}
	[Token(Token = "0x20005E0")]
	public class Helper
	{
		[Token(Token = "0x60017A2")]
		[Address(RVA = "0x1A49824", Offset = "0x1A49824", VA = "0x1A49824")]
		public static SortedDictionary<string, string> ConvertToSortedDictionary(Dictionary<string, string> APIParams)
		{
			return null;
		}

		[Token(Token = "0x60017A3")]
		[Address(RVA = "0x1A499D4", Offset = "0x1A499D4", VA = "0x1A499D4")]
		public static string GenerateRequestparams(SortedDictionary<string, string> parameters)
		{
			return null;
		}

		[Token(Token = "0x60017A4")]
		[Address(RVA = "0x1A49C0C", Offset = "0x1A49C0C", VA = "0x1A49C0C")]
		public static string UrlEncode(string s)
		{
			return null;
		}

		[Token(Token = "0x60017A5")]
		[Address(RVA = "0x1A49DC8", Offset = "0x1A49DC8", VA = "0x1A49DC8")]
		public Helper()
		{
		}
	}
}
namespace Twity.DataModels.Trends
{
	[Serializable]
	[Token(Token = "0x20005E1")]
	public class Trend
	{
		[Token(Token = "0x4002044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4002045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string url;

		[Token(Token = "0x4002046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string promoted_content;

		[Token(Token = "0x4002047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string query;

		[Token(Token = "0x4002048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int tweet_volume;

		[Token(Token = "0x60017A6")]
		[Address(RVA = "0x1A49DD0", Offset = "0x1A49DD0", VA = "0x1A49DD0")]
		public Trend()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005E2")]
	public class TrendsPlace
	{
		[Token(Token = "0x4002049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Trend[] trends;

		[Token(Token = "0x400204A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string as_of;

		[Token(Token = "0x400204B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string created_at;

		[Token(Token = "0x400204C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Woeid_location locaions;

		[Token(Token = "0x60017A7")]
		[Address(RVA = "0x1A49DD8", Offset = "0x1A49DD8", VA = "0x1A49DD8")]
		public TrendsPlace()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005E3")]
	public class Woeid_location
	{
		[Token(Token = "0x400204D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x400204E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int woeid;

		[Token(Token = "0x60017A8")]
		[Address(RVA = "0x1A49DE0", Offset = "0x1A49DE0", VA = "0x1A49DE0")]
		public Woeid_location()
		{
		}
	}
}
namespace Twity.DataModels.StreamMessages
{
	[Serializable]
	[Token(Token = "0x20005E4")]
	public class DeletedStatus
	{
		[Token(Token = "0x400204F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public long id;

		[Token(Token = "0x4002050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string id_str;

		[Token(Token = "0x4002051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public long user_id;

		[Token(Token = "0x4002052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string user_id_str;

		[Token(Token = "0x60017A9")]
		[Address(RVA = "0x1A49DE8", Offset = "0x1A49DE8", VA = "0x1A49DE8")]
		public DeletedStatus()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005E5")]
	public class Disconnect
	{
		[Token(Token = "0x4002053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int code;

		[Token(Token = "0x4002054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string stream_name;

		[Token(Token = "0x4002055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string reason;

		[Token(Token = "0x60017AA")]
		[Address(RVA = "0x1A49DF0", Offset = "0x1A49DF0", VA = "0x1A49DF0")]
		public Disconnect()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005E6")]
	public class DisconnectMessage
	{
		[Token(Token = "0x4002056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Disconnect disconnect;

		[Token(Token = "0x60017AB")]
		[Address(RVA = "0x1A49DF8", Offset = "0x1A49DF8", VA = "0x1A49DF8")]
		public DisconnectMessage()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005E7")]
	public class FriendsList
	{
		[Token(Token = "0x4002057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public long[] friends;

		[Token(Token = "0x60017AC")]
		[Address(RVA = "0x1A49E00", Offset = "0x1A49E00", VA = "0x1A49E00")]
		public FriendsList()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005E8")]
	public class LimitNotice
	{
		[Token(Token = "0x4002058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TrackLimit limit;

		[Token(Token = "0x60017AD")]
		[Address(RVA = "0x1A49E08", Offset = "0x1A49E08", VA = "0x1A49E08")]
		public LimitNotice()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005E9")]
	public class LocationDeletionNotice
	{
		[Token(Token = "0x4002059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ScrubGeo scrub_geo;

		[Token(Token = "0x60017AE")]
		[Address(RVA = "0x1A49E10", Offset = "0x1A49E10", VA = "0x1A49E10")]
		public LocationDeletionNotice()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005EA")]
	public class ScrubGeo
	{
		[Token(Token = "0x400205A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public long user_id;

		[Token(Token = "0x400205B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string user_id_str;

		[Token(Token = "0x400205C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public long up_to_status_id;

		[Token(Token = "0x400205D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string up_to_status_id_str;

		[Token(Token = "0x60017AF")]
		[Address(RVA = "0x1A49E18", Offset = "0x1A49E18", VA = "0x1A49E18")]
		public ScrubGeo()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005EB")]
	public class StallWarning
	{
		[Token(Token = "0x400205E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Warning warning;

		[Token(Token = "0x60017B0")]
		[Address(RVA = "0x1A49E20", Offset = "0x1A49E20", VA = "0x1A49E20")]
		public StallWarning()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005EC")]
	public class StatusDelete
	{
		[Token(Token = "0x400205F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public DeletedStatus status;

		[Token(Token = "0x60017B1")]
		[Address(RVA = "0x1A49E28", Offset = "0x1A49E28", VA = "0x1A49E28")]
		public StatusDelete()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005ED")]
	public class StatusDeletionNotice
	{
		[Token(Token = "0x4002060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public StatusDelete delete;

		[Token(Token = "0x60017B2")]
		[Address(RVA = "0x1A49E30", Offset = "0x1A49E30", VA = "0x1A49E30")]
		public StatusDeletionNotice()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005EE")]
	public class StatusWithheld
	{
		[Token(Token = "0x4002061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public long id;

		[Token(Token = "0x4002062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public long user_id;

		[Token(Token = "0x4002063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string[] withheld_in_countries;

		[Token(Token = "0x60017B3")]
		[Address(RVA = "0x1A49E38", Offset = "0x1A49E38", VA = "0x1A49E38")]
		public StatusWithheld()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005EF")]
	public class StreamEvent
	{
		[Token(Token = "0x4002064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string event_name;

		[Token(Token = "0x4002065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string created_at;

		[Token(Token = "0x4002066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TweetUser target;

		[Token(Token = "0x4002067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TweetUser source;

		[Token(Token = "0x4002068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string target_object;

		[Token(Token = "0x60017B4")]
		[Address(RVA = "0x1A49E40", Offset = "0x1A49E40", VA = "0x1A49E40")]
		public StreamEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005F0")]
	public class StringifyFriendsList
	{
		[Token(Token = "0x4002069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string[] friends_str;

		[Token(Token = "0x60017B5")]
		[Address(RVA = "0x1A49E48", Offset = "0x1A49E48", VA = "0x1A49E48")]
		public StringifyFriendsList()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005F1")]
	public class TrackLimit
	{
		[Token(Token = "0x400206A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int track;

		[Token(Token = "0x60017B6")]
		[Address(RVA = "0x1A49E50", Offset = "0x1A49E50", VA = "0x1A49E50")]
		public TrackLimit()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005F2")]
	public class UserWithheld
	{
		[Token(Token = "0x400206B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public long id;

		[Token(Token = "0x400206C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string[] withheld_in_countries;

		[Token(Token = "0x60017B7")]
		[Address(RVA = "0x1A49E58", Offset = "0x1A49E58", VA = "0x1A49E58")]
		public UserWithheld()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005F3")]
	public class Warning
	{
		[Token(Token = "0x400206D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string code;

		[Token(Token = "0x400206E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string message;

		[Token(Token = "0x400206F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int percent_full;

		[Token(Token = "0x4002070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int user_id;

		[Token(Token = "0x60017B8")]
		[Address(RVA = "0x1A49E60", Offset = "0x1A49E60", VA = "0x1A49E60")]
		public Warning()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005F4")]
	public class WithheldContentNotice
	{
		[Token(Token = "0x4002071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public StatusWithheld status_withheld;

		[Token(Token = "0x4002072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UserWithheld user_withheld;

		[Token(Token = "0x60017B9")]
		[Address(RVA = "0x1A49E68", Offset = "0x1A49E68", VA = "0x1A49E68")]
		public WithheldContentNotice()
		{
		}
	}
}
namespace Twity.DataModels.Responses
{
	[Serializable]
	[Token(Token = "0x20005F5")]
	public class ErrorResponse
	{
		[Token(Token = "0x4002073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Twity.DataModels.Errors.Error[] errors;

		[Token(Token = "0x60017BA")]
		[Address(RVA = "0x1A49E70", Offset = "0x1A49E70", VA = "0x1A49E70")]
		public ErrorResponse()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005F6")]
	public class FollowersListResponse
	{
		[Token(Token = "0x4002074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TweetUser[] users;

		[Token(Token = "0x60017BB")]
		[Address(RVA = "0x1A49E78", Offset = "0x1A49E78", VA = "0x1A49E78")]
		public FollowersListResponse()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005F7")]
	public class FriendsidsResponse
	{
		[Token(Token = "0x4002075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public long[] ids;

		[Token(Token = "0x60017BC")]
		[Address(RVA = "0x1A49E80", Offset = "0x1A49E80", VA = "0x1A49E80")]
		public FriendsidsResponse()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005F8")]
	public class FriendsListResponse
	{
		[Token(Token = "0x4002076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TweetUser[] users;

		[Token(Token = "0x60017BD")]
		[Address(RVA = "0x1A49E88", Offset = "0x1A49E88", VA = "0x1A49E88")]
		public FriendsListResponse()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005F9")]
	public class SearchTweetsResponse
	{
		[Token(Token = "0x4002077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Tweet[] statuses;

		[Token(Token = "0x60017BE")]
		[Address(RVA = "0x1A49E90", Offset = "0x1A49E90", VA = "0x1A49E90")]
		public SearchTweetsResponse()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005FA")]
	public class StatusesHomeTimelineResponse
	{
		[Token(Token = "0x4002078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Tweet[] items;

		[Token(Token = "0x60017BF")]
		[Address(RVA = "0x1A49E98", Offset = "0x1A49E98", VA = "0x1A49E98")]
		public StatusesHomeTimelineResponse()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005FB")]
	public class StatusesUserTimelineResponse
	{
		[Token(Token = "0x4002079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Tweet[] items;

		[Token(Token = "0x60017C0")]
		[Address(RVA = "0x1A49EA0", Offset = "0x1A49EA0", VA = "0x1A49EA0")]
		public StatusesUserTimelineResponse()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005FC")]
	public class TrendsPlaceResponse
	{
		[Token(Token = "0x400207A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TrendsPlace[] items;

		[Token(Token = "0x60017C1")]
		[Address(RVA = "0x1A49EA8", Offset = "0x1A49EA8", VA = "0x1A49EA8")]
		public TrendsPlaceResponse()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005FD")]
	public class Tweets
	{
		[Token(Token = "0x400207B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Tweet[] items;

		[Token(Token = "0x60017C2")]
		[Address(RVA = "0x1A49EB0", Offset = "0x1A49EB0", VA = "0x1A49EB0")]
		public Tweets()
		{
		}
	}
}
namespace Twity.DataModels.Oauth
{
	[Serializable]
	[Token(Token = "0x20005FE")]
	public class AccessToken
	{
		[Token(Token = "0x400207C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string oauth_token;

		[Token(Token = "0x400207D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string oauth_token_secret;

		[Token(Token = "0x400207E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool oauth_callback_confirmed;

		[Token(Token = "0x60017C3")]
		[Address(RVA = "0x1A49EB8", Offset = "0x1A49EB8", VA = "0x1A49EB8")]
		public AccessToken()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005FF")]
	public class BearerToken
	{
		[Token(Token = "0x400207F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string token_type;

		[Token(Token = "0x4002080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string access_token;

		[Token(Token = "0x60017C4")]
		[Address(RVA = "0x1A49EC0", Offset = "0x1A49EC0", VA = "0x1A49EC0")]
		public BearerToken()
		{
		}
	}
}
namespace Twity.DataModels.Errors
{
	[Serializable]
	[Token(Token = "0x2000600")]
	public class Error
	{
		[Token(Token = "0x4002081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int code;

		[Token(Token = "0x4002082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string message;

		[Token(Token = "0x60017C5")]
		[Address(RVA = "0x1A49EC8", Offset = "0x1A49EC8", VA = "0x1A49EC8")]
		public Error()
		{
		}
	}
}
namespace Twity.DataModels.Entities
{
	[Serializable]
	[Token(Token = "0x2000601")]
	public class Entities
	{
		[Token(Token = "0x4002083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Media[] media;

		[Token(Token = "0x4002084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UserMention[] user_mentions;

		[Token(Token = "0x4002085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HashTag[] hashtags;

		[Token(Token = "0x4002086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Url[] urls;

		[Token(Token = "0x60017C6")]
		[Address(RVA = "0x1A49ED0", Offset = "0x1A49ED0", VA = "0x1A49ED0")]
		public Entities()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000602")]
	public class Extended_Entities
	{
		[Token(Token = "0x4002087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Media[] media;

		[Token(Token = "0x60017C7")]
		[Address(RVA = "0x1A49ED8", Offset = "0x1A49ED8", VA = "0x1A49ED8")]
		public Extended_Entities()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000603")]
	public class HashTag
	{
		[Token(Token = "0x4002088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string text;

		[Token(Token = "0x60017C8")]
		[Address(RVA = "0x1A49EE0", Offset = "0x1A49EE0", VA = "0x1A49EE0")]
		public HashTag()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000604")]
	public class Media
	{
		[Token(Token = "0x4002089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int id;

		[Token(Token = "0x400208A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int id_str;

		[Token(Token = "0x400208B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string media_url;

		[Token(Token = "0x400208C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string media_url_https;

		[Token(Token = "0x400208D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string type;

		[Token(Token = "0x400208E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Video_Info video_info;

		[Token(Token = "0x60017C9")]
		[Address(RVA = "0x1A49EE8", Offset = "0x1A49EE8", VA = "0x1A49EE8")]
		public Media()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000605")]
	public class Symbol
	{
		[Token(Token = "0x400208F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string text;

		[Token(Token = "0x60017CA")]
		[Address(RVA = "0x1A49EF0", Offset = "0x1A49EF0", VA = "0x1A49EF0")]
		public Symbol()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000606")]
	public class Url
	{
		[Token(Token = "0x4002090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string url;

		[Token(Token = "0x4002091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string display_url;

		[Token(Token = "0x4002092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string expanded_url;

		[Token(Token = "0x60017CB")]
		[Address(RVA = "0x1A49EF8", Offset = "0x1A49EF8", VA = "0x1A49EF8")]
		public Url()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000607")]
	public class UserMention
	{
		[Token(Token = "0x4002093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public long id;

		[Token(Token = "0x4002094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string id_str;

		[Token(Token = "0x4002095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string screen_name;

		[Token(Token = "0x4002096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string name;

		[Token(Token = "0x60017CC")]
		[Address(RVA = "0x1A49F00", Offset = "0x1A49F00", VA = "0x1A49F00")]
		public UserMention()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000608")]
	public class Variant
	{
		[Token(Token = "0x4002097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int bitrate;

		[Token(Token = "0x4002098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string content_type;

		[Token(Token = "0x4002099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string url;

		[Token(Token = "0x60017CD")]
		[Address(RVA = "0x1A49F08", Offset = "0x1A49F08", VA = "0x1A49F08")]
		public Variant()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000609")]
	public class Video_Info
	{
		[Token(Token = "0x400209A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public long id;

		[Token(Token = "0x400209B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string id_str;

		[Token(Token = "0x400209C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string media_url;

		[Token(Token = "0x400209D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string type;

		[Token(Token = "0x400209E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Variant[] variants;

		[Token(Token = "0x60017CE")]
		[Address(RVA = "0x1A49F10", Offset = "0x1A49F10", VA = "0x1A49F10")]
		public Video_Info()
		{
		}
	}
}
namespace Twity.DataModels.DirectMessages
{
	[Serializable]
	[Token(Token = "0x200060A")]
	public class DirectMessage
	{
		[Token(Token = "0x400209F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string created_at;

		[Token(Token = "0x40020A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Twity.DataModels.Entities.Entities entities;

		[Token(Token = "0x40020A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public long id;

		[Token(Token = "0x40020A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string id_str;

		[Token(Token = "0x40020A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TweetUser recipient;

		[Token(Token = "0x40020A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public long recipient_id;

		[Token(Token = "0x40020A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string recipient_screen_name;

		[Token(Token = "0x40020A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public TweetUser sender;

		[Token(Token = "0x40020A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public long sender_id;

		[Token(Token = "0x40020A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string sender_screen_name;

		[Token(Token = "0x40020A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public string text;

		[Token(Token = "0x60017CF")]
		[Address(RVA = "0x1A49F18", Offset = "0x1A49F18", VA = "0x1A49F18")]
		public DirectMessage()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200060B")]
	public class DirectMessages
	{
		[Token(Token = "0x40020AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private DirectMessage[] items;

		[Token(Token = "0x60017D0")]
		[Address(RVA = "0x1A49F20", Offset = "0x1A49F20", VA = "0x1A49F20")]
		public DirectMessages()
		{
		}
	}
}
namespace Twity.DataModels.Core
{
	[Serializable]
	[Token(Token = "0x200060C")]
	public class List
	{
		[Token(Token = "0x40020AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string slug;

		[Token(Token = "0x40020AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string name;

		[Token(Token = "0x40020AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string created_at;

		[Token(Token = "0x40020AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string uri;

		[Token(Token = "0x40020AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int subscriber_count;

		[Token(Token = "0x40020B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public long id;

		[Token(Token = "0x40020B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string id_str;

		[Token(Token = "0x40020B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int member_count;

		[Token(Token = "0x40020B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string mode;

		[Token(Token = "0x40020B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string full_name;

		[Token(Token = "0x40020B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public string description;

		[Token(Token = "0x40020B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public TweetUser user;

		[Token(Token = "0x40020B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool following;

		[Token(Token = "0x60017D1")]
		[Address(RVA = "0x1A49F28", Offset = "0x1A49F28", VA = "0x1A49F28")]
		public List()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200060D")]
	public class Tweet : TweetObjectWithUser
	{
		[Token(Token = "0x40020B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public TweetObjectWithUser retweeted_status;

		[Token(Token = "0x60017D2")]
		[Address(RVA = "0x1A49F30", Offset = "0x1A49F30", VA = "0x1A49F30")]
		public Tweet()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200060E")]
	public class TweetObject
	{
		[Token(Token = "0x40020B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public long id;

		[Token(Token = "0x40020BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string id_str;

		[Token(Token = "0x40020BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string created_at;

		[Token(Token = "0x40020BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string text;

		[Token(Token = "0x40020BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string in_reply_to_screen_name;

		[Token(Token = "0x40020BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int in_reply_to_status_id;

		[Token(Token = "0x40020BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string in_reply_to_status_id_str;

		[Token(Token = "0x40020C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int in_reply_to_user_id;

		[Token(Token = "0x40020C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string in_reply_to_user_id_str;

		[Token(Token = "0x40020C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool retweeted;

		[Token(Token = "0x40020C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int retweet_count;

		[Token(Token = "0x40020C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool favorited;

		[Token(Token = "0x40020C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public int favorite_count;

		[Token(Token = "0x40020C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool is_quote_status;

		[Token(Token = "0x40020C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public int quoted_status_id;

		[Token(Token = "0x40020C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public string quoted_status_id_str;

		[Token(Token = "0x40020C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public string lang;

		[Token(Token = "0x40020CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Twity.DataModels.Entities.Entities entities;

		[Token(Token = "0x40020CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Extended_Entities extended_entities;

		[Token(Token = "0x60017D3")]
		[Address(RVA = "0x1A49F40", Offset = "0x1A49F40", VA = "0x1A49F40")]
		public TweetObject()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200060F")]
	public class TweetObjectWithUser : TweetObject
	{
		[Token(Token = "0x40020CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public TweetUser user;

		[Token(Token = "0x60017D4")]
		[Address(RVA = "0x1A49F38", Offset = "0x1A49F38", VA = "0x1A49F38")]
		public TweetObjectWithUser()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000610")]
	public class TweetUser
	{
		[Token(Token = "0x40020CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public long id;

		[Token(Token = "0x40020CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string id_str;

		[Token(Token = "0x40020CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string name;

		[Token(Token = "0x40020D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string screen_name;

		[Token(Token = "0x40020D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string location;

		[Token(Token = "0x40020D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string description;

		[Token(Token = "0x40020D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string url;

		[Token(Token = "0x40020D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool verified;

		[Token(Token = "0x40020D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string profile_text_color;

		[Token(Token = "0x40020D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool profile_user_background_image;

		[Token(Token = "0x40020D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public string profile_background_image_url;

		[Token(Token = "0x40020D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public string profile_background_image_url_https;

		[Token(Token = "0x40020D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public string profile_background_color;

		[Token(Token = "0x40020DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public string profile_banner_url;

		[Token(Token = "0x40020DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public bool profile_background_tile;

		[Token(Token = "0x40020DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public string profile_image_url;

		[Token(Token = "0x40020DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public int statuses_count;

		[Token(Token = "0x40020DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int friends_count;

		[Token(Token = "0x40020DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int followers_count;

		[Token(Token = "0x40020E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int favourites_count;

		[Token(Token = "0x40020E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public bool following;

		[Token(Token = "0x40020E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		public bool follow_request_sent;

		[Token(Token = "0x40020E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public int listed_count;

		[Token(Token = "0x40020E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public TweetObject status;

		[Token(Token = "0x60017D5")]
		[Address(RVA = "0x1A49F48", Offset = "0x1A49F48", VA = "0x1A49F48")]
		public TweetUser()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000611")]
	public class UploadMedia
	{
		[Token(Token = "0x40020E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public long media_id;

		[Token(Token = "0x40020E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string media_id_string;

		[Token(Token = "0x40020E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int size;

		[Token(Token = "0x40020E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int expires_after_secs;

		[Token(Token = "0x40020E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UploadMediaImage image;

		[Token(Token = "0x60017D6")]
		[Address(RVA = "0x1A49F50", Offset = "0x1A49F50", VA = "0x1A49F50")]
		public UploadMedia()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000612")]
	public class UploadMediaImage
	{
		[Token(Token = "0x40020EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string image_type;

		[Token(Token = "0x40020EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int w;

		[Token(Token = "0x40020EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int h;

		[Token(Token = "0x60017D7")]
		[Address(RVA = "0x1A49F58", Offset = "0x1A49F58", VA = "0x1A49F58")]
		public UploadMediaImage()
		{
		}
	}
}
namespace Photon.Voice.Fusion.Demo
{
	[Token(Token = "0x2000613")]
	public class PrefabSpawner : MonoBehaviour, INetworkRunnerCallbacks
	{
		[Token(Token = "0x40020ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private NetworkObject prefab;

		[Token(Token = "0x40020EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<PlayerRef, NetworkObject> spawnedPlayers;

		[Token(Token = "0x40020EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool debugLogs;

		[Token(Token = "0x60017D8")]
		[Address(RVA = "0x1A49F60", Offset = "0x1A49F60", VA = "0x1A49F60", Slot = "4")]
		private void Fusion.INetworkRunnerCallbacks.OnPlayerJoined(NetworkRunner runner, PlayerRef player)
		{
		}

		[Token(Token = "0x60017D9")]
		[Address(RVA = "0x1A4A454", Offset = "0x1A4A454", VA = "0x1A4A454", Slot = "5")]
		private void Fusion.INetworkRunnerCallbacks.OnPlayerLeft(NetworkRunner runner, PlayerRef player)
		{
		}

		[Token(Token = "0x60017DA")]
		[Address(RVA = "0x1A4A7BC", Offset = "0x1A4A7BC", VA = "0x1A4A7BC", Slot = "6")]
		private void Fusion.INetworkRunnerCallbacks.OnInput(NetworkRunner runner, NetworkInput input)
		{
		}

		[Token(Token = "0x60017DB")]
		[Address(RVA = "0x1A4A7C0", Offset = "0x1A4A7C0", VA = "0x1A4A7C0", Slot = "7")]
		private void Fusion.INetworkRunnerCallbacks.OnInputMissing(NetworkRunner runner, PlayerRef player, NetworkInput input)
		{
		}

		[Token(Token = "0x60017DC")]
		[Address(RVA = "0x1A4A7C4", Offset = "0x1A4A7C4", VA = "0x1A4A7C4", Slot = "8")]
		private void Fusion.INetworkRunnerCallbacks.OnShutdown(NetworkRunner runner, ShutdownReason shutdownReason)
		{
		}

		[Token(Token = "0x60017DD")]
		[Address(RVA = "0x1A4AAF8", Offset = "0x1A4AAF8", VA = "0x1A4AAF8", Slot = "9")]
		private void Fusion.INetworkRunnerCallbacks.OnConnectedToServer(NetworkRunner runner)
		{
		}

		[Token(Token = "0x60017DE")]
		[Address(RVA = "0x1A4ABF8", Offset = "0x1A4ABF8", VA = "0x1A4ABF8", Slot = "10")]
		private void Fusion.INetworkRunnerCallbacks.OnDisconnectedFromServer(NetworkRunner runner)
		{
		}

		[Token(Token = "0x60017DF")]
		[Address(RVA = "0x1A4ACF8", Offset = "0x1A4ACF8", VA = "0x1A4ACF8", Slot = "11")]
		private void Fusion.INetworkRunnerCallbacks.OnConnectRequest(NetworkRunner runner, NetworkRunnerCallbackArgs.ConnectRequest request, byte[] token)
		{
		}

		[Token(Token = "0x60017E0")]
		[Address(RVA = "0x1A4ACFC", Offset = "0x1A4ACFC", VA = "0x1A4ACFC", Slot = "12")]
		private void Fusion.INetworkRunnerCallbacks.OnConnectFailed(NetworkRunner runner, NetAddress remoteAddress, NetConnectFailedReason reason)
		{
		}

		[Token(Token = "0x60017E1")]
		[Address(RVA = "0x1A4AD00", Offset = "0x1A4AD00", VA = "0x1A4AD00", Slot = "13")]
		private void Fusion.INetworkRunnerCallbacks.OnUserSimulationMessage(NetworkRunner runner, SimulationMessagePtr message)
		{
		}

		[Token(Token = "0x60017E2")]
		[Address(RVA = "0x1A4AD04", Offset = "0x1A4AD04", VA = "0x1A4AD04", Slot = "14")]
		private void Fusion.INetworkRunnerCallbacks.OnSessionListUpdated(NetworkRunner runner, List<SessionInfo> sessionList)
		{
		}

		[Token(Token = "0x60017E3")]
		[Address(RVA = "0x1A4AD08", Offset = "0x1A4AD08", VA = "0x1A4AD08", Slot = "15")]
		private void Fusion.INetworkRunnerCallbacks.OnCustomAuthenticationResponse(NetworkRunner runner, Dictionary<string, object> data)
		{
		}

		[Token(Token = "0x60017E4")]
		[Address(RVA = "0x1A4AD0C", Offset = "0x1A4AD0C", VA = "0x1A4AD0C", Slot = "16")]
		private void Fusion.INetworkRunnerCallbacks.OnHostMigration(NetworkRunner runner, HostMigrationToken hostMigrationToken)
		{
		}

		[Token(Token = "0x60017E5")]
		[Address(RVA = "0x1A4AD10", Offset = "0x1A4AD10", VA = "0x1A4AD10", Slot = "17")]
		private void Fusion.INetworkRunnerCallbacks.OnReliableDataReceived(NetworkRunner runner, PlayerRef player, ArraySegment<byte> data)
		{
		}

		[Token(Token = "0x60017E6")]
		[Address(RVA = "0x1A4AD14", Offset = "0x1A4AD14", VA = "0x1A4AD14", Slot = "18")]
		private void Fusion.INetworkRunnerCallbacks.OnSceneLoadDone(NetworkRunner runner)
		{
		}

		[Token(Token = "0x60017E7")]
		[Address(RVA = "0x1A4AD18", Offset = "0x1A4AD18", VA = "0x1A4AD18", Slot = "19")]
		private void Fusion.INetworkRunnerCallbacks.OnSceneLoadStart(NetworkRunner runner)
		{
		}

		[Token(Token = "0x60017E8")]
		[Address(RVA = "0x1A4A0A0", Offset = "0x1A4A0A0", VA = "0x1A4A0A0")]
		private void SpawnPlayer(NetworkRunner runner, PlayerRef player)
		{
		}

		[Token(Token = "0x60017E9")]
		[Address(RVA = "0x1A4A594", Offset = "0x1A4A594", VA = "0x1A4A594")]
		private bool TryDespawnPlayer(NetworkRunner runner, PlayerRef player)
		{
			return default(bool);
		}

		[Token(Token = "0x60017EA")]
		[Address(RVA = "0x1A4AD1C", Offset = "0x1A4AD1C", VA = "0x1A4AD1C")]
		public PrefabSpawner()
		{
		}
	}
}
namespace OculusSampleFramework
{
	[Token(Token = "0x2000614")]
	public class ColorGrabbable : OVRGrabbable
	{
		[Token(Token = "0x40020F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Color COLOR_GRAB;

		[Token(Token = "0x40020F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Color COLOR_HIGHLIGHT;

		[Token(Token = "0x40020F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color m_color;

		[Token(Token = "0x40020F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MeshRenderer[] m_meshRenderers;

		[Token(Token = "0x40020F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_highlight;

		[Token(Token = "0x17000230")]
		public bool Highlight
		{
			[Token(Token = "0x60017EB")]
			[Address(RVA = "0x1A4ADA4", Offset = "0x1A4ADA4", VA = "0x1A4ADA4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60017EC")]
			[Address(RVA = "0x1A4ADAC", Offset = "0x1A4ADAC", VA = "0x1A4ADAC")]
			set
			{
			}
		}

		[Token(Token = "0x60017ED")]
		[Address(RVA = "0x1A4ADB8", Offset = "0x1A4ADB8", VA = "0x1A4ADB8")]
		protected void UpdateColor()
		{
		}

		[Token(Token = "0x60017EE")]
		[Address(RVA = "0x1A4AF58", Offset = "0x1A4AF58", VA = "0x1A4AF58", Slot = "4")]
		public override void GrabBegin(OVRGrabber hand, Collider grabPoint)
		{
		}

		[Token(Token = "0x60017EF")]
		[Address(RVA = "0x1A4AF74", Offset = "0x1A4AF74", VA = "0x1A4AF74", Slot = "5")]
		public override void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x60017F0")]
		[Address(RVA = "0x1A4AF90", Offset = "0x1A4AF90", VA = "0x1A4AF90")]
		private void Awake()
		{
		}

		[Token(Token = "0x60017F1")]
		[Address(RVA = "0x1A4AE64", Offset = "0x1A4AE64", VA = "0x1A4AE64")]
		private void SetColor(Color color)
		{
		}

		[Token(Token = "0x60017F2")]
		[Address(RVA = "0x1A4B244", Offset = "0x1A4B244", VA = "0x1A4B244")]
		public ColorGrabbable()
		{
		}
	}
	[Token(Token = "0x2000615")]
	public class DistanceGrabbable : OVRGrabbable
	{
		[Token(Token = "0x40020F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string m_materialColorField;

		[Token(Token = "0x40020F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GrabbableCrosshair m_crosshair;

		[Token(Token = "0x40020F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GrabManager m_crosshairManager;

		[Token(Token = "0x40020F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Renderer m_renderer;

		[Token(Token = "0x40020F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MaterialPropertyBlock m_mpb;

		[Token(Token = "0x40020FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_inRange;

		[Token(Token = "0x40020FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool m_targeted;

		[Token(Token = "0x17000231")]
		public bool InRange
		{
			[Token(Token = "0x60017F4")]
			[Address(RVA = "0x1A4B2BC", Offset = "0x1A4B2BC", VA = "0x1A4B2BC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60017F5")]
			[Address(RVA = "0x1A4B2C4", Offset = "0x1A4B2C4", VA = "0x1A4B2C4")]
			set
			{
			}
		}

		[Token(Token = "0x17000232")]
		public bool Targeted
		{
			[Token(Token = "0x60017F6")]
			[Address(RVA = "0x1A4B430", Offset = "0x1A4B430", VA = "0x1A4B430")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60017F7")]
			[Address(RVA = "0x1A4B438", Offset = "0x1A4B438", VA = "0x1A4B438")]
			set
			{
			}
		}

		[Token(Token = "0x60017F8")]
		[Address(RVA = "0x1A4B444", Offset = "0x1A4B444", VA = "0x1A4B444", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60017F9")]
		[Address(RVA = "0x1A4B2D0", Offset = "0x1A4B2D0", VA = "0x1A4B2D0")]
		private void RefreshCrosshair()
		{
		}

		[Token(Token = "0x60017FA")]
		[Address(RVA = "0x1A4B634", Offset = "0x1A4B634", VA = "0x1A4B634")]
		public DistanceGrabbable()
		{
		}
	}
	[Token(Token = "0x2000616")]
	[RequireComponent(typeof(Rigidbody))]
	public class DistanceGrabber : OVRGrabber
	{
		[Token(Token = "0x40020FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		private float m_spherecastRadius;

		[Token(Token = "0x40020FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private float m_noSnapThreshhold;

		[Token(Token = "0x40020FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		private bool m_useSpherecast;

		[Token(Token = "0x40020FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
		[SerializeField]
		public bool m_preventGrabThroughWalls;

		[Token(Token = "0x4002100")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private float m_objectPullVelocity;

		[Token(Token = "0x4002101")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float m_objectPullMaxRotationRate;

		[Token(Token = "0x4002102")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool m_movingObjectToHand;

		[Token(Token = "0x4002103")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private float m_maxGrabDistance;

		[Token(Token = "0x4002104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private int m_grabObjectsInLayer;

		[Token(Token = "0x4002105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		private int m_obstructionLayer;

		[Token(Token = "0x4002106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private DistanceGrabber m_otherHand;

		[Token(Token = "0x4002107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected DistanceGrabbable m_target;

		[Token(Token = "0x4002108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected Collider m_targetCollider;

		[Token(Token = "0x17000233")]
		public bool UseSpherecast
		{
			[Token(Token = "0x60017FB")]
			[Address(RVA = "0x1A4B63C", Offset = "0x1A4B63C", VA = "0x1A4B63C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60017FC")]
			[Address(RVA = "0x1A4B644", Offset = "0x1A4B644", VA = "0x1A4B644")]
			set
			{
			}
		}

		[Token(Token = "0x60017FD")]
		[Address(RVA = "0x1A4B660", Offset = "0x1A4B660", VA = "0x1A4B660", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60017FE")]
		[Address(RVA = "0x1A4B86C", Offset = "0x1A4B86C", VA = "0x1A4B86C", Slot = "6")]
		public override void Update()
		{
		}

		[Token(Token = "0x60017FF")]
		[Address(RVA = "0x1A4C158", Offset = "0x1A4C158", VA = "0x1A4C158", Slot = "7")]
		protected override void GrabBegin()
		{
		}

		[Token(Token = "0x6001800")]
		[Address(RVA = "0x1A4C6C0", Offset = "0x1A4C6C0", VA = "0x1A4C6C0", Slot = "8")]
		protected override void MoveGrabbedObject(Vector3 pos, Quaternion rot, bool forceTeleport = false)
		{
		}

		[Token(Token = "0x6001801")]
		[Address(RVA = "0x1A4CAD0", Offset = "0x1A4CAD0", VA = "0x1A4CAD0")]
		private static DistanceGrabbable HitInfoToGrabbable(RaycastHit hitInfo)
		{
			return null;
		}

		[Token(Token = "0x6001802")]
		[Address(RVA = "0x1A4BA94", Offset = "0x1A4BA94", VA = "0x1A4BA94")]
		protected bool FindTarget(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x6001803")]
		[Address(RVA = "0x1A4CBBC", Offset = "0x1A4CBBC", VA = "0x1A4CBBC")]
		protected bool FindTargetWithSpherecast(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x6001804")]
		[Address(RVA = "0x1A4CFBC", Offset = "0x1A4CFBC", VA = "0x1A4CFBC", Slot = "9")]
		protected override void GrabVolumeEnable(bool enabled)
		{
		}

		[Token(Token = "0x6001805")]
		[Address(RVA = "0x1A4CFD4", Offset = "0x1A4CFD4", VA = "0x1A4CFD4", Slot = "10")]
		protected override void OffhandGrabbed(OVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x6001806")]
		[Address(RVA = "0x1A4CFDC", Offset = "0x1A4CFDC", VA = "0x1A4CFDC")]
		public DistanceGrabber()
		{
		}
	}
	[Token(Token = "0x2000617")]
	public class GrabbableCrosshair : MonoBehaviour
	{
		[Token(Token = "0x2000618")]
		public enum CrosshairState
		{
			[Token(Token = "0x400210E")]
			Disabled,
			[Token(Token = "0x400210F")]
			Enabled,
			[Token(Token = "0x4002110")]
			Targeted
		}

		[Token(Token = "0x4002109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CrosshairState m_state;

		[Token(Token = "0x400210A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_centerEyeAnchor;

		[Token(Token = "0x400210B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_targetedCrosshair;

		[Token(Token = "0x400210C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_enabledCrosshair;

		[Token(Token = "0x6001807")]
		[Address(RVA = "0x1A4CFFC", Offset = "0x1A4CFFC", VA = "0x1A4CFFC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001808")]
		[Address(RVA = "0x1A4B5A8", Offset = "0x1A4B5A8", VA = "0x1A4B5A8")]
		public void SetState(CrosshairState cs)
		{
		}

		[Token(Token = "0x6001809")]
		[Address(RVA = "0x1A4D064", Offset = "0x1A4D064", VA = "0x1A4D064")]
		private void Update()
		{
		}

		[Token(Token = "0x600180A")]
		[Address(RVA = "0x1A4D09C", Offset = "0x1A4D09C", VA = "0x1A4D09C")]
		public GrabbableCrosshair()
		{
		}
	}
	[Token(Token = "0x2000619")]
	public class GrabManager : MonoBehaviour
	{
		[Token(Token = "0x4002111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Collider m_grabVolume;

		[Token(Token = "0x4002112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color OutlineColorInRange;

		[Token(Token = "0x4002113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color OutlineColorHighlighted;

		[Token(Token = "0x4002114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color OutlineColorOutOfRange;

		[Token(Token = "0x600180B")]
		[Address(RVA = "0x1A4D0A4", Offset = "0x1A4D0A4", VA = "0x1A4D0A4")]
		private void OnTriggerEnter(Collider otherCollider)
		{
		}

		[Token(Token = "0x600180C")]
		[Address(RVA = "0x1A4D150", Offset = "0x1A4D150", VA = "0x1A4D150")]
		private void OnTriggerExit(Collider otherCollider)
		{
		}

		[Token(Token = "0x600180D")]
		[Address(RVA = "0x1A4D1F8", Offset = "0x1A4D1F8", VA = "0x1A4D1F8")]
		public GrabManager()
		{
		}
	}
	[Token(Token = "0x200061A")]
	public class PauseOnInputLoss : MonoBehaviour
	{
		[Token(Token = "0x600180E")]
		[Address(RVA = "0x1A4D200", Offset = "0x1A4D200", VA = "0x1A4D200")]
		private void Start()
		{
		}

		[Token(Token = "0x600180F")]
		[Address(RVA = "0x1A4D2EC", Offset = "0x1A4D2EC", VA = "0x1A4D2EC")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6001810")]
		[Address(RVA = "0x1A4D2F8", Offset = "0x1A4D2F8", VA = "0x1A4D2F8")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6001811")]
		[Address(RVA = "0x1A4D304", Offset = "0x1A4D304", VA = "0x1A4D304")]
		public PauseOnInputLoss()
		{
		}
	}
	[Token(Token = "0x200061B")]
	public class BoneCapsuleTriggerLogic : MonoBehaviour
	{
		[Token(Token = "0x4002115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableToolTags ToolTags;

		[Token(Token = "0x4002116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HashSet<ColliderZone> CollidersTouchingUs;

		[Token(Token = "0x4002117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ColliderZone> _elementsToCleanUp;

		[Token(Token = "0x6001812")]
		[Address(RVA = "0x1A4D30C", Offset = "0x1A4D30C", VA = "0x1A4D30C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001813")]
		[Address(RVA = "0x1A4D35C", Offset = "0x1A4D35C", VA = "0x1A4D35C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001814")]
		[Address(RVA = "0x1A4D734", Offset = "0x1A4D734", VA = "0x1A4D734")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001815")]
		[Address(RVA = "0x1A4D820", Offset = "0x1A4D820", VA = "0x1A4D820")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001816")]
		[Address(RVA = "0x1A4D360", Offset = "0x1A4D360", VA = "0x1A4D360")]
		private void CleanUpDeadColliders()
		{
		}

		[Token(Token = "0x6001817")]
		[Address(RVA = "0x1A4D90C", Offset = "0x1A4D90C", VA = "0x1A4D90C")]
		public BoneCapsuleTriggerLogic()
		{
		}
	}
	[Token(Token = "0x200061C")]
	public class ButtonController : Interactable
	{
		[Token(Token = "0x200061D")]
		public enum ContactTest
		{
			[Token(Token = "0x4002127")]
			PerpenTest,
			[Token(Token = "0x4002128")]
			BackwardsPress
		}

		[Token(Token = "0x4002118")]
		private const float ENTRY_DOT_THRESHOLD = 0.8f;

		[Token(Token = "0x4002119")]
		private const float PERP_DOT_THRESHOLD = 0.5f;

		[Token(Token = "0x400211A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject _proximityZone;

		[Token(Token = "0x400211B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _contactZone;

		[Token(Token = "0x400211C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _actionZone;

		[Token(Token = "0x400211D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ContactTest[] _contactTests;

		[Token(Token = "0x400211E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform _buttonPlaneCenter;

		[Token(Token = "0x400211F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private bool _makeSureToolIsOnPositiveSide;

		[Token(Token = "0x4002120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private Vector3 _localButtonDirection;

		[Token(Token = "0x4002121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private InteractableToolTags[] _allValidToolsTags;

		[Token(Token = "0x4002122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int _toolTagsMask;

		[Token(Token = "0x4002123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		private bool _allowMultipleNearFieldInteraction;

		[Token(Token = "0x4002125")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Dictionary<InteractableTool, InteractableState> _toolToState;

		[Token(Token = "0x17000234")]
		public override int ValidToolTagsMask
		{
			[Token(Token = "0x6001818")]
			[Address(RVA = "0x1A4D9E4", Offset = "0x1A4D9E4", VA = "0x1A4D9E4", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000235")]
		public Vector3 LocalButtonDirection
		{
			[Token(Token = "0x6001819")]
			[Address(RVA = "0x1A4D9EC", Offset = "0x1A4D9EC", VA = "0x1A4D9EC")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000236")]
		public InteractableState CurrentButtonState
		{
			[Token(Token = "0x600181A")]
			[Address(RVA = "0x1A4D9F8", Offset = "0x1A4D9F8", VA = "0x1A4D9F8")]
			[CompilerGenerated]
			get
			{
				return default(InteractableState);
			}
			[Token(Token = "0x600181B")]
			[Address(RVA = "0x1A4DA00", Offset = "0x1A4DA00", VA = "0x1A4DA00")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x600181C")]
		[Address(RVA = "0x1A4DA08", Offset = "0x1A4DA08", VA = "0x1A4DA08", Slot = "9")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600181D")]
		[Address(RVA = "0x1A4DB58", Offset = "0x1A4DB58", VA = "0x1A4DB58")]
		private void FireInteractionEventsOnDepth(InteractableCollisionDepth oldDepth, InteractableTool collidingTool, InteractionType interactionType)
		{
		}

		[Token(Token = "0x600181E")]
		[Address(RVA = "0x1A4DD60", Offset = "0x1A4DD60", VA = "0x1A4DD60", Slot = "8")]
		public override void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth)
		{
		}

		[Token(Token = "0x600181F")]
		[Address(RVA = "0x1A4E324", Offset = "0x1A4E324", VA = "0x1A4E324")]
		private InteractableState GetUpcomingStateNearField(InteractableState oldState, InteractableCollisionDepth newCollisionDepth, bool toolIsInActionZone, bool toolIsInContactZone, bool toolIsInProximity, bool validContact, bool onPositiveSideOfInteractable)
		{
			return default(InteractableState);
		}

		[Token(Token = "0x6001820")]
		[Address(RVA = "0x1A4E48C", Offset = "0x1A4E48C", VA = "0x1A4E48C")]
		public void ForceResetButton()
		{
		}

		[Token(Token = "0x6001821")]
		[Address(RVA = "0x1A4E248", Offset = "0x1A4E248", VA = "0x1A4E248")]
		private bool IsValidContact(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6001822")]
		[Address(RVA = "0x1A4E598", Offset = "0x1A4E598", VA = "0x1A4E598")]
		private bool PassEntryTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6001823")]
		[Address(RVA = "0x1A4E6A4", Offset = "0x1A4E6A4", VA = "0x1A4E6A4")]
		private bool PassPerpTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6001824")]
		[Address(RVA = "0x1A4E72C", Offset = "0x1A4E72C", VA = "0x1A4E72C")]
		public ButtonController()
		{
		}
	}
	[Token(Token = "0x200061E")]
	public class ButtonTriggerZone : MonoBehaviour, ColliderZone
	{
		[Token(Token = "0x4002129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _parentInteractableObj;

		[Token(Token = "0x17000237")]
		public Collider Collider
		{
			[Token(Token = "0x6001825")]
			[Address(RVA = "0x1A4E850", Offset = "0x1A4E850", VA = "0x1A4E850", Slot = "4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001826")]
			[Address(RVA = "0x1A4E858", Offset = "0x1A4E858", VA = "0x1A4E858")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000238")]
		public Interactable ParentInteractable
		{
			[Token(Token = "0x6001827")]
			[Address(RVA = "0x1A4E860", Offset = "0x1A4E860", VA = "0x1A4E860", Slot = "5")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001828")]
			[Address(RVA = "0x1A4E868", Offset = "0x1A4E868", VA = "0x1A4E868")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000239")]
		public InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x6001829")]
			[Address(RVA = "0x1A4E870", Offset = "0x1A4E870", VA = "0x1A4E870", Slot = "6")]
			get
			{
				return default(InteractableCollisionDepth);
			}
		}

		[Token(Token = "0x600182A")]
		[Address(RVA = "0x1A4E8C0", Offset = "0x1A4E8C0", VA = "0x1A4E8C0")]
		private void Awake()
		{
		}

		[Token(Token = "0x600182B")]
		[Address(RVA = "0x1A4E954", Offset = "0x1A4E954", VA = "0x1A4E954")]
		public ButtonTriggerZone()
		{
		}
	}
	[Token(Token = "0x200061F")]
	public interface ColliderZone
	{
		[Token(Token = "0x1700023A")]
		Collider Collider
		{
			[Token(Token = "0x600182C")]
			get;
		}

		[Token(Token = "0x1700023B")]
		Interactable ParentInteractable
		{
			[Token(Token = "0x600182D")]
			get;
		}

		[Token(Token = "0x1700023C")]
		InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x600182E")]
			get;
		}
	}
	[Token(Token = "0x2000620")]
	public class ColliderZoneArgs : EventArgs
	{
		[Token(Token = "0x400212C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ColliderZone Collider;

		[Token(Token = "0x400212D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly float FrameTime;

		[Token(Token = "0x400212E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableTool CollidingTool;

		[Token(Token = "0x400212F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly InteractionType InteractionT;

		[Token(Token = "0x600182F")]
		[Address(RVA = "0x1A4DCB4", Offset = "0x1A4DCB4", VA = "0x1A4DCB4")]
		public ColliderZoneArgs(ColliderZone collider, float frameTime, InteractableTool collidingTool, InteractionType interactionType)
		{
		}
	}
	[Token(Token = "0x2000621")]
	public enum InteractionType
	{
		[Token(Token = "0x4002131")]
		Enter,
		[Token(Token = "0x4002132")]
		Stay,
		[Token(Token = "0x4002133")]
		Exit
	}
	[Token(Token = "0x2000622")]
	public class HandsManager : MonoBehaviour
	{
		[Token(Token = "0x2000623")]
		public enum HandsVisualMode
		{
			[Token(Token = "0x4002145")]
			Mesh,
			[Token(Token = "0x4002146")]
			Skeleton,
			[Token(Token = "0x4002147")]
			Both
		}

		[Token(Token = "0x2000624")]
		[CompilerGenerated]
		private sealed class <FindSkeletonVisualGameObjects>d__52 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002148")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002149")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400214A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HandsManager <>4__this;

			[Token(Token = "0x17000248")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001851")]
				[Address(RVA = "0x1A4FDB4", Offset = "0x1A4FDB4", VA = "0x1A4FDB4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000249")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001853")]
				[Address(RVA = "0x1A4FDFC", Offset = "0x1A4FDFC", VA = "0x1A4FDFC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600184E")]
			[Address(RVA = "0x1A4F3AC", Offset = "0x1A4F3AC", VA = "0x1A4F3AC")]
			[DebuggerHidden]
			public <FindSkeletonVisualGameObjects>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x600184F")]
			[Address(RVA = "0x1A4FB94", Offset = "0x1A4FB94", VA = "0x1A4FB94", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001850")]
			[Address(RVA = "0x1A4FB98", Offset = "0x1A4FB98", VA = "0x1A4FB98", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001852")]
			[Address(RVA = "0x1A4FDBC", Offset = "0x1A4FDBC", VA = "0x1A4FDBC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002134")]
		private const string SKELETON_VISUALIZER_NAME = "SkeletonRenderer";

		[Token(Token = "0x4002135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _leftHand;

		[Token(Token = "0x4002136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _rightHand;

		[Token(Token = "0x4002137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HandsVisualMode VisualMode;

		[Token(Token = "0x4002138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OVRHand[] _hand;

		[Token(Token = "0x4002139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private OVRSkeleton[] _handSkeleton;

		[Token(Token = "0x400213A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRSkeletonRenderer[] _handSkeletonRenderer;

		[Token(Token = "0x400213B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private OVRMesh[] _handMesh;

		[Token(Token = "0x400213C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private OVRMeshRenderer[] _handMeshRenderer;

		[Token(Token = "0x400213D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SkinnedMeshRenderer _leftMeshRenderer;

		[Token(Token = "0x400213E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SkinnedMeshRenderer _rightMeshRenderer;

		[Token(Token = "0x400213F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject _leftSkeletonVisual;

		[Token(Token = "0x4002140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject _rightSkeletonVisual;

		[Token(Token = "0x4002141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _currentHandAlpha;

		[Token(Token = "0x4002142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int HandAlphaId;

		[Token(Token = "0x1700023D")]
		public OVRHand RightHand
		{
			[Token(Token = "0x6001830")]
			[Address(RVA = "0x1A4E95C", Offset = "0x1A4E95C", VA = "0x1A4E95C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001831")]
			[Address(RVA = "0x1A4E988", Offset = "0x1A4E988", VA = "0x1A4E988")]
			private set
			{
			}
		}

		[Token(Token = "0x1700023E")]
		public OVRSkeleton RightHandSkeleton
		{
			[Token(Token = "0x6001832")]
			[Address(RVA = "0x1A4E9EC", Offset = "0x1A4E9EC", VA = "0x1A4E9EC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001833")]
			[Address(RVA = "0x1A4EA18", Offset = "0x1A4EA18", VA = "0x1A4EA18")]
			private set
			{
			}
		}

		[Token(Token = "0x1700023F")]
		public OVRSkeletonRenderer RightHandSkeletonRenderer
		{
			[Token(Token = "0x6001834")]
			[Address(RVA = "0x1A4EA7C", Offset = "0x1A4EA7C", VA = "0x1A4EA7C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001835")]
			[Address(RVA = "0x1A4EAA8", Offset = "0x1A4EAA8", VA = "0x1A4EAA8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000240")]
		public OVRMesh RightHandMesh
		{
			[Token(Token = "0x6001836")]
			[Address(RVA = "0x1A4EB0C", Offset = "0x1A4EB0C", VA = "0x1A4EB0C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001837")]
			[Address(RVA = "0x1A4EB38", Offset = "0x1A4EB38", VA = "0x1A4EB38")]
			private set
			{
			}
		}

		[Token(Token = "0x17000241")]
		public OVRMeshRenderer RightHandMeshRenderer
		{
			[Token(Token = "0x6001838")]
			[Address(RVA = "0x1A4EB9C", Offset = "0x1A4EB9C", VA = "0x1A4EB9C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001839")]
			[Address(RVA = "0x1A4EBC8", Offset = "0x1A4EBC8", VA = "0x1A4EBC8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000242")]
		public OVRHand LeftHand
		{
			[Token(Token = "0x600183A")]
			[Address(RVA = "0x1A4EC2C", Offset = "0x1A4EC2C", VA = "0x1A4EC2C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600183B")]
			[Address(RVA = "0x1A4EC54", Offset = "0x1A4EC54", VA = "0x1A4EC54")]
			private set
			{
			}
		}

		[Token(Token = "0x17000243")]
		public OVRSkeleton LeftHandSkeleton
		{
			[Token(Token = "0x600183C")]
			[Address(RVA = "0x1A4ECB4", Offset = "0x1A4ECB4", VA = "0x1A4ECB4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600183D")]
			[Address(RVA = "0x1A4ECDC", Offset = "0x1A4ECDC", VA = "0x1A4ECDC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000244")]
		public OVRSkeletonRenderer LeftHandSkeletonRenderer
		{
			[Token(Token = "0x600183E")]
			[Address(RVA = "0x1A4ED3C", Offset = "0x1A4ED3C", VA = "0x1A4ED3C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600183F")]
			[Address(RVA = "0x1A4ED64", Offset = "0x1A4ED64", VA = "0x1A4ED64")]
			private set
			{
			}
		}

		[Token(Token = "0x17000245")]
		public OVRMesh LeftHandMesh
		{
			[Token(Token = "0x6001840")]
			[Address(RVA = "0x1A4EDC4", Offset = "0x1A4EDC4", VA = "0x1A4EDC4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001841")]
			[Address(RVA = "0x1A4EDEC", Offset = "0x1A4EDEC", VA = "0x1A4EDEC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000246")]
		public OVRMeshRenderer LeftHandMeshRenderer
		{
			[Token(Token = "0x6001842")]
			[Address(RVA = "0x1A4EE4C", Offset = "0x1A4EE4C", VA = "0x1A4EE4C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001843")]
			[Address(RVA = "0x1A4EE74", Offset = "0x1A4EE74", VA = "0x1A4EE74")]
			private set
			{
			}
		}

		[Token(Token = "0x17000247")]
		public static HandsManager Instance
		{
			[Token(Token = "0x6001844")]
			[Address(RVA = "0x1A4EED4", Offset = "0x1A4EED4", VA = "0x1A4EED4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001845")]
			[Address(RVA = "0x1A4EF1C", Offset = "0x1A4EF1C", VA = "0x1A4EF1C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001846")]
		[Address(RVA = "0x1A4EF74", Offset = "0x1A4EF74", VA = "0x1A4EF74")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001847")]
		[Address(RVA = "0x1A4F330", Offset = "0x1A4F330", VA = "0x1A4F330")]
		private void Update()
		{
		}

		[Token(Token = "0x6001848")]
		[Address(RVA = "0x1A4F2BC", Offset = "0x1A4F2BC", VA = "0x1A4F2BC")]
		[IteratorStateMachine(typeof(<FindSkeletonVisualGameObjects>d__52))]
		private IEnumerator FindSkeletonVisualGameObjects()
		{
			return null;
		}

		[Token(Token = "0x6001849")]
		[Address(RVA = "0x1A4F3D4", Offset = "0x1A4F3D4", VA = "0x1A4F3D4")]
		public void SwitchVisualization()
		{
		}

		[Token(Token = "0x600184A")]
		[Address(RVA = "0x1A4F498", Offset = "0x1A4F498", VA = "0x1A4F498")]
		private void SetToCurrentVisualMode()
		{
		}

		[Token(Token = "0x600184B")]
		[Address(RVA = "0x1A4F668", Offset = "0x1A4F668", VA = "0x1A4F668")]
		public static List<OVRBoneCapsule> GetCapsulesPerBone(OVRSkeleton skeleton, OVRSkeleton.BoneId boneId)
		{
			return null;
		}

		[Token(Token = "0x600184C")]
		[Address(RVA = "0x1A4F8CC", Offset = "0x1A4F8CC", VA = "0x1A4F8CC")]
		public bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x600184D")]
		[Address(RVA = "0x1A4FA2C", Offset = "0x1A4FA2C", VA = "0x1A4FA2C")]
		public HandsManager()
		{
		}
	}
	[Token(Token = "0x2000625")]
	public abstract class Interactable : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000626")]
		public class InteractableStateArgsEvent : UnityEvent<InteractableStateArgs>
		{
			[Token(Token = "0x6001865")]
			[Address(RVA = "0x1A5044C", Offset = "0x1A5044C", VA = "0x1A5044C")]
			public InteractableStateArgsEvent()
			{
			}
		}

		[Token(Token = "0x400214B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected ColliderZone _proximityZoneCollider;

		[Token(Token = "0x400214C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected ColliderZone _contactZoneCollider;

		[Token(Token = "0x400214D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected ColliderZone _actionZoneCollider;

		[Token(Token = "0x4002151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InteractableStateArgsEvent InteractableStateChanged;

		[Token(Token = "0x1700024A")]
		public ColliderZone ProximityCollider
		{
			[Token(Token = "0x6001854")]
			[Address(RVA = "0x1A4FE04", Offset = "0x1A4FE04", VA = "0x1A4FE04")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700024B")]
		public ColliderZone ContactCollider
		{
			[Token(Token = "0x6001855")]
			[Address(RVA = "0x1A4FE0C", Offset = "0x1A4FE0C", VA = "0x1A4FE0C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700024C")]
		public ColliderZone ActionCollider
		{
			[Token(Token = "0x6001856")]
			[Address(RVA = "0x1A4FE14", Offset = "0x1A4FE14", VA = "0x1A4FE14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700024D")]
		public virtual int ValidToolTagsMask
		{
			[Token(Token = "0x6001857")]
			[Address(RVA = "0x1A4FE1C", Offset = "0x1A4FE1C", VA = "0x1A4FE1C", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x14000012")]
		public event Action<ColliderZoneArgs> ProximityZoneEvent
		{
			[Token(Token = "0x6001858")]
			[Address(RVA = "0x1A4FE24", Offset = "0x1A4FE24", VA = "0x1A4FE24")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001859")]
			[Address(RVA = "0x1A4FED4", Offset = "0x1A4FED4", VA = "0x1A4FED4")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000013")]
		public event Action<ColliderZoneArgs> ContactZoneEvent
		{
			[Token(Token = "0x600185B")]
			[Address(RVA = "0x1A4FFA0", Offset = "0x1A4FFA0", VA = "0x1A4FFA0")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600185C")]
			[Address(RVA = "0x1A50050", Offset = "0x1A50050", VA = "0x1A50050")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000014")]
		public event Action<ColliderZoneArgs> ActionZoneEvent
		{
			[Token(Token = "0x600185E")]
			[Address(RVA = "0x1A5011C", Offset = "0x1A5011C", VA = "0x1A5011C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600185F")]
			[Address(RVA = "0x1A501CC", Offset = "0x1A501CC", VA = "0x1A501CC")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x600185A")]
		[Address(RVA = "0x1A4FF84", Offset = "0x1A4FF84", VA = "0x1A4FF84", Slot = "5")]
		protected virtual void OnProximityZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x600185D")]
		[Address(RVA = "0x1A50100", Offset = "0x1A50100", VA = "0x1A50100", Slot = "6")]
		protected virtual void OnContactZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6001860")]
		[Address(RVA = "0x1A5027C", Offset = "0x1A5027C", VA = "0x1A5027C", Slot = "7")]
		protected virtual void OnActionZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6001861")]
		public abstract void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth);

		[Token(Token = "0x6001862")]
		[Address(RVA = "0x1A4DB04", Offset = "0x1A4DB04", VA = "0x1A4DB04", Slot = "9")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001863")]
		[Address(RVA = "0x1A50348", Offset = "0x1A50348", VA = "0x1A50348", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001864")]
		[Address(RVA = "0x1A4E848", Offset = "0x1A4E848", VA = "0x1A4E848")]
		protected Interactable()
		{
		}
	}
	[Token(Token = "0x2000627")]
	public enum InteractableCollisionDepth
	{
		[Token(Token = "0x4002153")]
		None,
		[Token(Token = "0x4002154")]
		Proximity,
		[Token(Token = "0x4002155")]
		Contact,
		[Token(Token = "0x4002156")]
		Action
	}
	[Token(Token = "0x2000628")]
	public enum InteractableState
	{
		[Token(Token = "0x4002158")]
		Default,
		[Token(Token = "0x4002159")]
		ProximityState,
		[Token(Token = "0x400215A")]
		ContactState,
		[Token(Token = "0x400215B")]
		ActionState
	}
	[Token(Token = "0x2000629")]
	public class InteractableStateArgs : EventArgs
	{
		[Token(Token = "0x400215C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Interactable Interactable;

		[Token(Token = "0x400215D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly InteractableTool Tool;

		[Token(Token = "0x400215E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableState OldInteractableState;

		[Token(Token = "0x400215F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly InteractableState NewInteractableState;

		[Token(Token = "0x4002160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ColliderZoneArgs ColliderArgs;

		[Token(Token = "0x6001866")]
		[Address(RVA = "0x1A4E3D4", Offset = "0x1A4E3D4", VA = "0x1A4E3D4")]
		public InteractableStateArgs(Interactable interactable, InteractableTool tool, InteractableState newInteractableState, InteractableState oldState, ColliderZoneArgs colliderArgs)
		{
		}
	}
	[Token(Token = "0x200062A")]
	public class InteractableRegistry : MonoBehaviour
	{
		[Token(Token = "0x4002161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static HashSet<Interactable> _interactables;

		[Token(Token = "0x1700024E")]
		public static HashSet<Interactable> Interactables
		{
			[Token(Token = "0x6001867")]
			[Address(RVA = "0x1A50494", Offset = "0x1A50494", VA = "0x1A50494")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001868")]
		[Address(RVA = "0x1A50298", Offset = "0x1A50298", VA = "0x1A50298")]
		public static void RegisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6001869")]
		[Address(RVA = "0x1A5039C", Offset = "0x1A5039C", VA = "0x1A5039C")]
		public static void UnregisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x600186A")]
		[Address(RVA = "0x1A504EC", Offset = "0x1A504EC", VA = "0x1A504EC")]
		public InteractableRegistry()
		{
		}
	}
	[Token(Token = "0x200062B")]
	public class InteractableToolsCreator : MonoBehaviour
	{
		[Token(Token = "0x200062C")]
		[CompilerGenerated]
		private sealed class <AttachToolsToHands>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002164")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002165")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002166")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform[] toolObjects;

			[Token(Token = "0x4002167")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool isRightHand;

			[Token(Token = "0x4002168")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public InteractableToolsCreator <>4__this;

			[Token(Token = "0x4002169")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private HandsManager <handsManagerObj>5__2;

			[Token(Token = "0x400216A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private HashSet<Transform>.Enumerator <>7__wrap2;

			[Token(Token = "0x400216B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Transform <toolObject>5__4;

			[Token(Token = "0x400216C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private OVRSkeleton <handSkeletonToAttachTo>5__5;

			[Token(Token = "0x1700024F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001874")]
				[Address(RVA = "0x1A50CAC", Offset = "0x1A50CAC", VA = "0x1A50CAC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000250")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001876")]
				[Address(RVA = "0x1A50CF4", Offset = "0x1A50CF4", VA = "0x1A50CF4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001870")]
			[Address(RVA = "0x1A50694", Offset = "0x1A50694", VA = "0x1A50694")]
			[DebuggerHidden]
			public <AttachToolsToHands>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6001871")]
			[Address(RVA = "0x1A507D0", Offset = "0x1A507D0", VA = "0x1A507D0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001872")]
			[Address(RVA = "0x1A507EC", Offset = "0x1A507EC", VA = "0x1A507EC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001873")]
			[Address(RVA = "0x1A50C5C", Offset = "0x1A50C5C", VA = "0x1A50C5C")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001875")]
			[Address(RVA = "0x1A50CB4", Offset = "0x1A50CB4", VA = "0x1A50CB4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform[] LeftHandTools;

		[Token(Token = "0x4002163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform[] RightHandTools;

		[Token(Token = "0x600186C")]
		[Address(RVA = "0x1A5058C", Offset = "0x1A5058C", VA = "0x1A5058C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600186D")]
		[Address(RVA = "0x1A505F8", Offset = "0x1A505F8", VA = "0x1A505F8")]
		[IteratorStateMachine(typeof(<AttachToolsToHands>d__3))]
		private IEnumerator AttachToolsToHands(Transform[] toolObjects, bool isRightHand)
		{
			return null;
		}

		[Token(Token = "0x600186E")]
		[Address(RVA = "0x1A506BC", Offset = "0x1A506BC", VA = "0x1A506BC")]
		private void AttachToolToHandTransform(Transform tool, bool isRightHanded)
		{
		}

		[Token(Token = "0x600186F")]
		[Address(RVA = "0x1A507C8", Offset = "0x1A507C8", VA = "0x1A507C8")]
		public InteractableToolsCreator()
		{
		}
	}
	[Token(Token = "0x200062D")]
	public class InteractableToolsInputRouter : MonoBehaviour
	{
		[Token(Token = "0x400216D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static InteractableToolsInputRouter _instance;

		[Token(Token = "0x400216E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _leftPinch;

		[Token(Token = "0x400216F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool _rightPinch;

		[Token(Token = "0x4002170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HashSet<InteractableTool> _leftHandNearTools;

		[Token(Token = "0x4002171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<InteractableTool> _leftHandFarTools;

		[Token(Token = "0x4002172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HashSet<InteractableTool> _rightHandNearTools;

		[Token(Token = "0x4002173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private HashSet<InteractableTool> _rightHandFarTools;

		[Token(Token = "0x17000251")]
		public static InteractableToolsInputRouter Instance
		{
			[Token(Token = "0x6001877")]
			[Address(RVA = "0x1A50CFC", Offset = "0x1A50CFC", VA = "0x1A50CFC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001878")]
		[Address(RVA = "0x1A50E58", Offset = "0x1A50E58", VA = "0x1A50E58")]
		public void RegisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x6001879")]
		[Address(RVA = "0x1A50EF4", Offset = "0x1A50EF4", VA = "0x1A50EF4")]
		public void UnregisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x600187A")]
		[Address(RVA = "0x1A50F90", Offset = "0x1A50F90", VA = "0x1A50F90")]
		private void Update()
		{
		}

		[Token(Token = "0x600187B")]
		[Address(RVA = "0x1A5122C", Offset = "0x1A5122C", VA = "0x1A5122C")]
		private bool UpdateToolsAndEnableState(HashSet<InteractableTool> tools, bool toolsAreEnabledThisFrame)
		{
			return default(bool);
		}

		[Token(Token = "0x600187C")]
		[Address(RVA = "0x1A51268", Offset = "0x1A51268", VA = "0x1A51268")]
		private bool UpdateTools(HashSet<InteractableTool> tools, bool resetCollisionData = false)
		{
			return default(bool);
		}

		[Token(Token = "0x600187D")]
		[Address(RVA = "0x1A51540", Offset = "0x1A51540", VA = "0x1A51540")]
		private void ToggleToolsEnableState(HashSet<InteractableTool> tools, bool enableState)
		{
		}

		[Token(Token = "0x600187E")]
		[Address(RVA = "0x1A51748", Offset = "0x1A51748", VA = "0x1A51748")]
		public InteractableToolsInputRouter()
		{
		}
	}
	[Token(Token = "0x200062E")]
	public class FingerTipPokeTool : InteractableTool
	{
		[Token(Token = "0x200062F")]
		[CompilerGenerated]
		private sealed class <AttachTriggerLogic>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400217F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002180")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002181")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FingerTipPokeTool <>4__this;

			[Token(Token = "0x17000256")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001890")]
				[Address(RVA = "0x1A52918", Offset = "0x1A52918", VA = "0x1A52918", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000257")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001892")]
				[Address(RVA = "0x1A52960", Offset = "0x1A52960", VA = "0x1A52960", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600188D")]
			[Address(RVA = "0x1A519E4", Offset = "0x1A519E4", VA = "0x1A519E4")]
			[DebuggerHidden]
			public <AttachTriggerLogic>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x600188E")]
			[Address(RVA = "0x1A52488", Offset = "0x1A52488", VA = "0x1A52488", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600188F")]
			[Address(RVA = "0x1A5248C", Offset = "0x1A5248C", VA = "0x1A5248C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001891")]
			[Address(RVA = "0x1A52920", Offset = "0x1A52920", VA = "0x1A52920", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002174")]
		private const int NUM_VELOCITY_FRAMES = 10;

		[Token(Token = "0x4002175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private FingerTipPokeToolView _fingerTipPokeToolView;

		[Token(Token = "0x4002176")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private OVRPlugin.HandFinger _fingerToFollow;

		[Token(Token = "0x4002177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3[] _velocityFrames;

		[Token(Token = "0x4002178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _currVelocityFrame;

		[Token(Token = "0x4002179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool _sampledMaxFramesAlready;

		[Token(Token = "0x400217A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 _position;

		[Token(Token = "0x400217B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BoneCapsuleTriggerLogic[] _boneCapsuleTriggerLogic;

		[Token(Token = "0x400217C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float _lastScale;

		[Token(Token = "0x400217D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool _isInitialized;

		[Token(Token = "0x400217E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private OVRBoneCapsule _capsuleToTrack;

		[Token(Token = "0x17000252")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x600187F")]
			[Address(RVA = "0x1A51850", Offset = "0x1A51850", VA = "0x1A51850", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x17000253")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x6001880")]
			[Address(RVA = "0x1A51858", Offset = "0x1A51858", VA = "0x1A51858", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x17000254")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x6001881")]
			[Address(RVA = "0x1A51860", Offset = "0x1A51860", VA = "0x1A51860", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000255")]
		public override bool EnableState
		{
			[Token(Token = "0x6001882")]
			[Address(RVA = "0x1A51868", Offset = "0x1A51868", VA = "0x1A51868", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001883")]
			[Address(RVA = "0x1A51890", Offset = "0x1A51890", VA = "0x1A51890", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6001884")]
		[Address(RVA = "0x1A518C0", Offset = "0x1A518C0", VA = "0x1A518C0", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6001885")]
		[Address(RVA = "0x1A51970", Offset = "0x1A51970", VA = "0x1A51970")]
		[IteratorStateMachine(typeof(<AttachTriggerLogic>d__21))]
		private IEnumerator AttachTriggerLogic()
		{
			return null;
		}

		[Token(Token = "0x6001886")]
		[Address(RVA = "0x1A51A0C", Offset = "0x1A51A0C", VA = "0x1A51A0C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001887")]
		[Address(RVA = "0x1A51C8C", Offset = "0x1A51C8C", VA = "0x1A51C8C")]
		private void UpdateAverageVelocity()
		{
		}

		[Token(Token = "0x6001888")]
		[Address(RVA = "0x1A51E48", Offset = "0x1A51E48", VA = "0x1A51E48")]
		private void CheckAndUpdateScale()
		{
		}

		[Token(Token = "0x6001889")]
		[Address(RVA = "0x1A51F30", Offset = "0x1A51F30", VA = "0x1A51F30", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x600188A")]
		[Address(RVA = "0x1A522C4", Offset = "0x1A522C4", VA = "0x1A522C4", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x600188B")]
		[Address(RVA = "0x1A522C8", Offset = "0x1A522C8", VA = "0x1A522C8", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x600188C")]
		[Address(RVA = "0x1A522CC", Offset = "0x1A522CC", VA = "0x1A522CC")]
		public FingerTipPokeTool()
		{
		}
	}
	[Token(Token = "0x2000630")]
	public class FingerTipPokeToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x4002182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _sphereMeshRenderer;

		[Token(Token = "0x17000258")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x6001893")]
			[Address(RVA = "0x1A52968", Offset = "0x1A52968", VA = "0x1A52968", Slot = "4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001894")]
			[Address(RVA = "0x1A52970", Offset = "0x1A52970", VA = "0x1A52970")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000259")]
		public bool EnableState
		{
			[Token(Token = "0x6001895")]
			[Address(RVA = "0x1A52978", Offset = "0x1A52978", VA = "0x1A52978", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001896")]
			[Address(RVA = "0x1A52994", Offset = "0x1A52994", VA = "0x1A52994", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x1700025A")]
		public bool ToolActivateState
		{
			[Token(Token = "0x6001897")]
			[Address(RVA = "0x1A529B4", Offset = "0x1A529B4", VA = "0x1A529B4", Slot = "8")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001898")]
			[Address(RVA = "0x1A529BC", Offset = "0x1A529BC", VA = "0x1A529BC", Slot = "9")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700025B")]
		public float SphereRadius
		{
			[Token(Token = "0x6001899")]
			[Address(RVA = "0x1A529C8", Offset = "0x1A529C8", VA = "0x1A529C8")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600189A")]
			[Address(RVA = "0x1A529D0", Offset = "0x1A529D0", VA = "0x1A529D0")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x600189B")]
		[Address(RVA = "0x1A529D8", Offset = "0x1A529D8", VA = "0x1A529D8")]
		private void Awake()
		{
		}

		[Token(Token = "0x600189C")]
		[Address(RVA = "0x1A52A14", Offset = "0x1A52A14", VA = "0x1A52A14", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x600189D")]
		[Address(RVA = "0x1A52A18", Offset = "0x1A52A18", VA = "0x1A52A18")]
		public FingerTipPokeToolView()
		{
		}
	}
	[Token(Token = "0x2000631")]
	[Flags]
	public enum InteractableToolTags
	{
		[Token(Token = "0x4002187")]
		None = 0,
		[Token(Token = "0x4002188")]
		Ray = 1,
		[Token(Token = "0x4002189")]
		Poke = 4,
		[Token(Token = "0x400218A")]
		All = -1
	}
	[Token(Token = "0x2000632")]
	public enum ToolInputState
	{
		[Token(Token = "0x400218C")]
		Inactive,
		[Token(Token = "0x400218D")]
		PrimaryInputDown,
		[Token(Token = "0x400218E")]
		PrimaryInputDownStay,
		[Token(Token = "0x400218F")]
		PrimaryInputUp
	}
	[Token(Token = "0x2000633")]
	public class InteractableCollisionInfo
	{
		[Token(Token = "0x4002190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ColliderZone InteractableCollider;

		[Token(Token = "0x4002191")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableCollisionDepth CollisionDepth;

		[Token(Token = "0x4002192")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractableTool CollidingTool;

		[Token(Token = "0x600189E")]
		[Address(RVA = "0x1A52270", Offset = "0x1A52270", VA = "0x1A52270")]
		public InteractableCollisionInfo(ColliderZone collider, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool)
		{
		}
	}
	[Token(Token = "0x2000634")]
	public abstract class InteractableTool : MonoBehaviour
	{
		[Token(Token = "0x4002196")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected List<InteractableCollisionInfo> _currentIntersectingObjects;

		[Token(Token = "0x4002197")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Interactable> _addedInteractables;

		[Token(Token = "0x4002198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Interactable> _removedInteractables;

		[Token(Token = "0x4002199")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Interactable> _remainingInteractables;

		[Token(Token = "0x400219A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<Interactable, InteractableCollisionInfo> _currInteractableToCollisionInfos;

		[Token(Token = "0x400219B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<Interactable, InteractableCollisionInfo> _prevInteractableToCollisionInfos;

		[Token(Token = "0x1700025C")]
		public Transform ToolTransform
		{
			[Token(Token = "0x600189F")]
			[Address(RVA = "0x1A4E724", Offset = "0x1A4E724", VA = "0x1A4E724")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700025D")]
		public bool IsRightHandedTool
		{
			[Token(Token = "0x60018A0")]
			[Address(RVA = "0x1A52A20", Offset = "0x1A52A20", VA = "0x1A52A20")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60018A1")]
			[Address(RVA = "0x1A52A28", Offset = "0x1A52A28", VA = "0x1A52A28")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700025E")]
		public abstract InteractableToolTags ToolTags
		{
			[Token(Token = "0x60018A2")]
			get;
		}

		[Token(Token = "0x1700025F")]
		public abstract ToolInputState ToolInputState
		{
			[Token(Token = "0x60018A3")]
			get;
		}

		[Token(Token = "0x17000260")]
		public abstract bool IsFarFieldTool
		{
			[Token(Token = "0x60018A4")]
			get;
		}

		[Token(Token = "0x17000261")]
		public Vector3 Velocity
		{
			[Token(Token = "0x60018A5")]
			[Address(RVA = "0x1A52A34", Offset = "0x1A52A34", VA = "0x1A52A34")]
			[CompilerGenerated]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60018A6")]
			[Address(RVA = "0x1A52A40", Offset = "0x1A52A40", VA = "0x1A52A40")]
			[CompilerGenerated]
			protected set
			{
			}
		}

		[Token(Token = "0x17000262")]
		public Vector3 InteractionPosition
		{
			[Token(Token = "0x60018A7")]
			[Address(RVA = "0x1A52A4C", Offset = "0x1A52A4C", VA = "0x1A52A4C")]
			[CompilerGenerated]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60018A8")]
			[Address(RVA = "0x1A52A58", Offset = "0x1A52A58", VA = "0x1A52A58")]
			[CompilerGenerated]
			protected set
			{
			}
		}

		[Token(Token = "0x17000263")]
		public abstract bool EnableState
		{
			[Token(Token = "0x60018AD")]
			get;
			[Token(Token = "0x60018AE")]
			set;
		}

		[Token(Token = "0x60018A9")]
		[Address(RVA = "0x1A52A64", Offset = "0x1A52A64", VA = "0x1A52A64")]
		public List<InteractableCollisionInfo> GetCurrentIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x60018AA")]
		public abstract List<InteractableCollisionInfo> GetNextIntersectingObjects();

		[Token(Token = "0x60018AB")]
		public abstract void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone);

		[Token(Token = "0x60018AC")]
		public abstract void DeFocus();

		[Token(Token = "0x60018AF")]
		public abstract void Initialize();

		[Token(Token = "0x60018B0")]
		[Address(RVA = "0x1A516B0", Offset = "0x1A516B0", VA = "0x1A516B0")]
		public KeyValuePair<Interactable, InteractableCollisionInfo> GetFirstCurrentCollisionInfo()
		{
			return default(KeyValuePair<Interactable, InteractableCollisionInfo>);
		}

		[Token(Token = "0x60018B1")]
		[Address(RVA = "0x1A516F8", Offset = "0x1A516F8", VA = "0x1A516F8")]
		public void ClearAllCurrentCollisionInfos()
		{
		}

		[Token(Token = "0x60018B2")]
		[Address(RVA = "0x1A52A6C", Offset = "0x1A52A6C", VA = "0x1A52A6C", Slot = "13")]
		public virtual void UpdateCurrentCollisionsBasedOnDepth()
		{
		}

		[Token(Token = "0x60018B3")]
		[Address(RVA = "0x1A52D34", Offset = "0x1A52D34", VA = "0x1A52D34", Slot = "14")]
		public virtual void UpdateLatestCollisionData()
		{
		}

		[Token(Token = "0x60018B4")]
		[Address(RVA = "0x1A522E0", Offset = "0x1A522E0", VA = "0x1A522E0")]
		protected InteractableTool()
		{
		}
	}
	[Token(Token = "0x2000635")]
	public interface InteractableToolView
	{
		[Token(Token = "0x17000264")]
		InteractableTool InteractableTool
		{
			[Token(Token = "0x60018B5")]
			get;
		}

		[Token(Token = "0x17000265")]
		bool EnableState
		{
			[Token(Token = "0x60018B7")]
			get;
			[Token(Token = "0x60018B8")]
			set;
		}

		[Token(Token = "0x17000266")]
		bool ToolActivateState
		{
			[Token(Token = "0x60018B9")]
			get;
			[Token(Token = "0x60018BA")]
			set;
		}

		[Token(Token = "0x60018B6")]
		void SetFocusedInteractable(Interactable interactable);
	}
	[Token(Token = "0x2000636")]
	public class PinchStateModule
	{
		[Token(Token = "0x2000637")]
		private enum PinchState
		{
			[Token(Token = "0x40021A0")]
			None,
			[Token(Token = "0x40021A1")]
			PinchDown,
			[Token(Token = "0x40021A2")]
			PinchStay,
			[Token(Token = "0x40021A3")]
			PinchUp
		}

		[Token(Token = "0x400219C")]
		private const float PINCH_STRENGTH_THRESHOLD = 1f;

		[Token(Token = "0x400219D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private PinchState _currPinchState;

		[Token(Token = "0x400219E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Interactable _firstFocusedInteractable;

		[Token(Token = "0x17000267")]
		public bool PinchUpAndDownOnFocusedObject
		{
			[Token(Token = "0x60018BB")]
			[Address(RVA = "0x1A535D0", Offset = "0x1A535D0", VA = "0x1A535D0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000268")]
		public bool PinchSteadyOnFocusedObject
		{
			[Token(Token = "0x60018BC")]
			[Address(RVA = "0x1A5364C", Offset = "0x1A5364C", VA = "0x1A5364C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000269")]
		public bool PinchDownOnFocusedObject
		{
			[Token(Token = "0x60018BD")]
			[Address(RVA = "0x1A536C8", Offset = "0x1A536C8", VA = "0x1A536C8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60018BE")]
		[Address(RVA = "0x1A53744", Offset = "0x1A53744", VA = "0x1A53744")]
		public PinchStateModule()
		{
		}

		[Token(Token = "0x60018BF")]
		[Address(RVA = "0x1A5376C", Offset = "0x1A5376C", VA = "0x1A5376C")]
		public void UpdateState(OVRHand hand, Interactable currFocusedInteractable)
		{
		}
	}
	[Token(Token = "0x2000638")]
	public class RayTool : InteractableTool
	{
		[Token(Token = "0x40021A4")]
		private const float MINIMUM_RAY_CAST_DISTANCE = 0.8f;

		[Token(Token = "0x40021A5")]
		private const float COLLIDER_RADIUS = 0.01f;

		[Token(Token = "0x40021A6")]
		private const int NUM_MAX_PRIMARY_HITS = 10;

		[Token(Token = "0x40021A7")]
		private const int NUM_MAX_SECONDARY_HITS = 25;

		[Token(Token = "0x40021A8")]
		private const int NUM_COLLIDERS_TO_TEST = 20;

		[Token(Token = "0x40021A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private RayToolView _rayToolView;

		[Token(Token = "0x40021AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[Range(0f, 45f)]
		[SerializeField]
		private float _coneAngleDegrees;

		[Token(Token = "0x40021AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float _farFieldMaxDistance;

		[Token(Token = "0x40021AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private PinchStateModule _pinchStateModule;

		[Token(Token = "0x40021AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Interactable _focusedInteractable;

		[Token(Token = "0x40021AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Collider[] _collidersOverlapped;

		[Token(Token = "0x40021AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Interactable _currInteractableCastedAgainst;

		[Token(Token = "0x40021B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float _coneAngleReleaseDegrees;

		[Token(Token = "0x40021B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RaycastHit[] _primaryHits;

		[Token(Token = "0x40021B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Collider[] _secondaryOverlapResults;

		[Token(Token = "0x40021B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool _initialized;

		[Token(Token = "0x1700026A")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x60018C0")]
			[Address(RVA = "0x1A538E4", Offset = "0x1A538E4", VA = "0x1A538E4", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x1700026B")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x60018C1")]
			[Address(RVA = "0x1A538EC", Offset = "0x1A538EC", VA = "0x1A538EC", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x1700026C")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x60018C2")]
			[Address(RVA = "0x1A53948", Offset = "0x1A53948", VA = "0x1A53948", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700026D")]
		public override bool EnableState
		{
			[Token(Token = "0x60018C3")]
			[Address(RVA = "0x1A53950", Offset = "0x1A53950", VA = "0x1A53950", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60018C4")]
			[Address(RVA = "0x1A53990", Offset = "0x1A53990", VA = "0x1A53990", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x60018C5")]
		[Address(RVA = "0x1A53A00", Offset = "0x1A53A00", VA = "0x1A53A00", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x60018C6")]
		[Address(RVA = "0x1A53A54", Offset = "0x1A53A54", VA = "0x1A53A54")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60018C7")]
		[Address(RVA = "0x1A53AE0", Offset = "0x1A53AE0", VA = "0x1A53AE0")]
		private void Update()
		{
		}

		[Token(Token = "0x60018C8")]
		[Address(RVA = "0x1A53D84", Offset = "0x1A53D84", VA = "0x1A53D84")]
		private Vector3 GetRayCastOrigin()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60018C9")]
		[Address(RVA = "0x1A53E00", Offset = "0x1A53E00", VA = "0x1A53E00", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x60018CA")]
		[Address(RVA = "0x1A541F4", Offset = "0x1A541F4", VA = "0x1A541F4")]
		private bool HasRayReleasedInteractable(Interactable focusedInteractable)
		{
			return default(bool);
		}

		[Token(Token = "0x60018CB")]
		[Address(RVA = "0x1A54390", Offset = "0x1A54390", VA = "0x1A54390")]
		private Interactable FindTargetInteractable()
		{
			return null;
		}

		[Token(Token = "0x60018CC")]
		[Address(RVA = "0x1A544A8", Offset = "0x1A544A8", VA = "0x1A544A8")]
		private Interactable FindPrimaryRaycastHit(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x60018CD")]
		[Address(RVA = "0x1A547CC", Offset = "0x1A547CC", VA = "0x1A547CC")]
		private Interactable FindInteractableViaConeTest(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x60018CE")]
		[Address(RVA = "0x1A54B48", Offset = "0x1A54B48", VA = "0x1A54B48", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x60018CF")]
		[Address(RVA = "0x1A54C20", Offset = "0x1A54C20", VA = "0x1A54C20", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x60018D0")]
		[Address(RVA = "0x1A54C50", Offset = "0x1A54C50", VA = "0x1A54C50")]
		public RayTool()
		{
		}
	}
	[Token(Token = "0x2000639")]
	public class RayToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x40021B4")]
		private const int NUM_RAY_LINE_POSITIONS = 25;

		[Token(Token = "0x40021B5")]
		private const float DEFAULT_RAY_CAST_DISTANCE = 3f;

		[Token(Token = "0x40021B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _targetTransform;

		[Token(Token = "0x40021B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LineRenderer _lineRenderer;

		[Token(Token = "0x40021B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _toolActivateState;

		[Token(Token = "0x40021B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform _focusedTransform;

		[Token(Token = "0x40021BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3[] linePositions;

		[Token(Token = "0x40021BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Gradient _oldColorGradient;

		[Token(Token = "0x40021BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Gradient _highLightColorGradient;

		[Token(Token = "0x1700026E")]
		public bool EnableState
		{
			[Token(Token = "0x60018D1")]
			[Address(RVA = "0x1A53974", Offset = "0x1A53974", VA = "0x1A53974", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60018D2")]
			[Address(RVA = "0x1A539AC", Offset = "0x1A539AC", VA = "0x1A539AC", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x1700026F")]
		public bool ToolActivateState
		{
			[Token(Token = "0x60018D3")]
			[Address(RVA = "0x1A54D64", Offset = "0x1A54D64", VA = "0x1A54D64", Slot = "8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60018D4")]
			[Address(RVA = "0x1A53D48", Offset = "0x1A53D48", VA = "0x1A53D48", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x17000270")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x60018D6")]
			[Address(RVA = "0x1A54F8C", Offset = "0x1A54F8C", VA = "0x1A54F8C", Slot = "4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60018D7")]
			[Address(RVA = "0x1A54F94", Offset = "0x1A54F94", VA = "0x1A54F94")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x60018D5")]
		[Address(RVA = "0x1A54D6C", Offset = "0x1A54D6C", VA = "0x1A54D6C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60018D8")]
		[Address(RVA = "0x1A54B80", Offset = "0x1A54B80", VA = "0x1A54B80", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x60018D9")]
		[Address(RVA = "0x1A54F9C", Offset = "0x1A54F9C", VA = "0x1A54F9C")]
		private void Update()
		{
		}

		[Token(Token = "0x60018DA")]
		[Address(RVA = "0x1A55248", Offset = "0x1A55248", VA = "0x1A55248")]
		public static Vector3 GetPointOnBezierCurve(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60018DB")]
		[Address(RVA = "0x1A552F0", Offset = "0x1A552F0", VA = "0x1A552F0")]
		public RayToolView()
		{
		}
	}
	[Token(Token = "0x200063A")]
	public class DistanceGrabberSample : MonoBehaviour
	{
		[Token(Token = "0x40021BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool useSpherecast;

		[Token(Token = "0x40021BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool allowGrabThroughWalls;

		[Token(Token = "0x40021C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DistanceGrabber[] m_grabbers;

		[Token(Token = "0x17000271")]
		public bool UseSpherecast
		{
			[Token(Token = "0x60018DC")]
			[Address(RVA = "0x1A55354", Offset = "0x1A55354", VA = "0x1A55354")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60018DD")]
			[Address(RVA = "0x1A5535C", Offset = "0x1A5535C", VA = "0x1A5535C")]
			set
			{
			}
		}

		[Token(Token = "0x17000272")]
		public bool AllowGrabThroughWalls
		{
			[Token(Token = "0x60018DE")]
			[Address(RVA = "0x1A553D8", Offset = "0x1A553D8", VA = "0x1A553D8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60018DF")]
			[Address(RVA = "0x1A553E0", Offset = "0x1A553E0", VA = "0x1A553E0")]
			set
			{
			}
		}

		[Token(Token = "0x60018E0")]
		[Address(RVA = "0x1A5543C", Offset = "0x1A5543C", VA = "0x1A5543C")]
		private void Start()
		{
		}

		[Token(Token = "0x60018E1")]
		[Address(RVA = "0x1A556DC", Offset = "0x1A556DC", VA = "0x1A556DC")]
		public void ToggleSphereCasting(Toggle t)
		{
		}

		[Token(Token = "0x60018E2")]
		[Address(RVA = "0x1A556EC", Offset = "0x1A556EC", VA = "0x1A556EC")]
		public void ToggleGrabThroughWalls(Toggle t)
		{
		}

		[Token(Token = "0x60018E3")]
		[Address(RVA = "0x1A556FC", Offset = "0x1A556FC", VA = "0x1A556FC")]
		public DistanceGrabberSample()
		{
		}
	}
	[Token(Token = "0x200063B")]
	public class ControllerBoxController : MonoBehaviour
	{
		[Token(Token = "0x40021C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TrainLocomotive _locomotive;

		[Token(Token = "0x40021C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CowController _cowController;

		[Token(Token = "0x60018E4")]
		[Address(RVA = "0x1A55704", Offset = "0x1A55704", VA = "0x1A55704")]
		private void Awake()
		{
		}

		[Token(Token = "0x60018E5")]
		[Address(RVA = "0x1A55708", Offset = "0x1A55708", VA = "0x1A55708")]
		public void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60018E6")]
		[Address(RVA = "0x1A55794", Offset = "0x1A55794", VA = "0x1A55794")]
		public void DecreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60018E7")]
		[Address(RVA = "0x1A55824", Offset = "0x1A55824", VA = "0x1A55824")]
		public void IncreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60018E8")]
		[Address(RVA = "0x1A558B4", Offset = "0x1A558B4", VA = "0x1A558B4")]
		public void SmokeButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60018E9")]
		[Address(RVA = "0x1A55960", Offset = "0x1A55960", VA = "0x1A55960")]
		public void WhistleButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60018EA")]
		[Address(RVA = "0x1A55A3C", Offset = "0x1A55A3C", VA = "0x1A55A3C")]
		public void ReverseButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60018EB")]
		[Address(RVA = "0x1A55A80", Offset = "0x1A55A80", VA = "0x1A55A80")]
		public void SwitchVisualization(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60018EC")]
		[Address(RVA = "0x1A55AE0", Offset = "0x1A55AE0", VA = "0x1A55AE0")]
		public void GoMoo(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60018ED")]
		[Address(RVA = "0x1A55B40", Offset = "0x1A55B40", VA = "0x1A55B40")]
		public ControllerBoxController()
		{
		}
	}
	[Token(Token = "0x200063C")]
	public class CowController : MonoBehaviour
	{
		[Token(Token = "0x40021C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animation _cowAnimation;

		[Token(Token = "0x40021C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource _mooCowAudioSource;

		[Token(Token = "0x60018EE")]
		[Address(RVA = "0x1A55B48", Offset = "0x1A55B48", VA = "0x1A55B48")]
		private void Start()
		{
		}

		[Token(Token = "0x60018EF")]
		[Address(RVA = "0x1A55B4C", Offset = "0x1A55B4C", VA = "0x1A55B4C")]
		public void PlayMooSound()
		{
		}

		[Token(Token = "0x60018F0")]
		[Address(RVA = "0x1A55B10", Offset = "0x1A55B10", VA = "0x1A55B10")]
		public void GoMooCowGo()
		{
		}

		[Token(Token = "0x60018F1")]
		[Address(RVA = "0x1A55B80", Offset = "0x1A55B80", VA = "0x1A55B80")]
		public CowController()
		{
		}
	}
	[Token(Token = "0x200063D")]
	public class PanelHMDFollower : MonoBehaviour
	{
		[Token(Token = "0x200063E")]
		[CompilerGenerated]
		private sealed class <LerpToHMD>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40021CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40021D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40021D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PanelHMDFollower <>4__this;

			[Token(Token = "0x40021D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <newPanelPosition>5__2;

			[Token(Token = "0x40021D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <startTime>5__3;

			[Token(Token = "0x40021D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <endTime>5__4;

			[Token(Token = "0x17000273")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60018FA")]
				[Address(RVA = "0x1A56200", Offset = "0x1A56200", VA = "0x1A56200", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000274")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60018FC")]
				[Address(RVA = "0x1A56248", Offset = "0x1A56248", VA = "0x1A56248", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60018F7")]
			[Address(RVA = "0x1A55F78", Offset = "0x1A55F78", VA = "0x1A55F78")]
			[DebuggerHidden]
			public <LerpToHMD>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x60018F8")]
			[Address(RVA = "0x1A56040", Offset = "0x1A56040", VA = "0x1A56040", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60018F9")]
			[Address(RVA = "0x1A56044", Offset = "0x1A56044", VA = "0x1A56044", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60018FB")]
			[Address(RVA = "0x1A56208", Offset = "0x1A56208", VA = "0x1A56208", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40021C5")]
		private const float TOTAL_DURATION = 3f;

		[Token(Token = "0x40021C6")]
		private const float HMD_MOVEMENT_THRESHOLD = 0.3f;

		[Token(Token = "0x40021C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _maxDistance;

		[Token(Token = "0x40021C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _minDistance;

		[Token(Token = "0x40021C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _minZDistance;

		[Token(Token = "0x40021CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OVRCameraRig _cameraRig;

		[Token(Token = "0x40021CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 _panelInitialPosition;

		[Token(Token = "0x40021CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _coroutine;

		[Token(Token = "0x40021CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 _prevPos;

		[Token(Token = "0x40021CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 _lastMovedToPos;

		[Token(Token = "0x60018F2")]
		[Address(RVA = "0x1A55B88", Offset = "0x1A55B88", VA = "0x1A55B88")]
		private void Awake()
		{
		}

		[Token(Token = "0x60018F3")]
		[Address(RVA = "0x1A55C28", Offset = "0x1A55C28", VA = "0x1A55C28")]
		private void Update()
		{
		}

		[Token(Token = "0x60018F4")]
		[Address(RVA = "0x1A55F38", Offset = "0x1A55F38", VA = "0x1A55F38")]
		private Vector3 CalculateIdealAnchorPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60018F5")]
		[Address(RVA = "0x1A55EC4", Offset = "0x1A55EC4", VA = "0x1A55EC4")]
		[IteratorStateMachine(typeof(<LerpToHMD>d__13))]
		private IEnumerator LerpToHMD()
		{
			return null;
		}

		[Token(Token = "0x60018F6")]
		[Address(RVA = "0x1A55FA0", Offset = "0x1A55FA0", VA = "0x1A55FA0")]
		public PanelHMDFollower()
		{
		}
	}
	[Token(Token = "0x200063F")]
	public class SelectionCylinder : MonoBehaviour
	{
		[Token(Token = "0x2000640")]
		public enum SelectionState
		{
			[Token(Token = "0x40021DC")]
			Off,
			[Token(Token = "0x40021DD")]
			Selected,
			[Token(Token = "0x40021DE")]
			Highlighted
		}

		[Token(Token = "0x40021D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _selectionMeshRenderer;

		[Token(Token = "0x40021D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _colorId;

		[Token(Token = "0x40021D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material[] _selectionMaterials;

		[Token(Token = "0x40021D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color[] _defaultSelectionColors;

		[Token(Token = "0x40021D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color[] _highlightColors;

		[Token(Token = "0x40021DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SelectionState _currSelectionState;

		[Token(Token = "0x17000275")]
		public SelectionState CurrSelectionState
		{
			[Token(Token = "0x60018FD")]
			[Address(RVA = "0x1A56250", Offset = "0x1A56250", VA = "0x1A56250")]
			get
			{
				return default(SelectionState);
			}
			[Token(Token = "0x60018FE")]
			[Address(RVA = "0x1A56258", Offset = "0x1A56258", VA = "0x1A56258")]
			set
			{
			}
		}

		[Token(Token = "0x60018FF")]
		[Address(RVA = "0x1A563AC", Offset = "0x1A563AC", VA = "0x1A563AC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001900")]
		[Address(RVA = "0x1A56570", Offset = "0x1A56570", VA = "0x1A56570")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001901")]
		[Address(RVA = "0x1A562CC", Offset = "0x1A562CC", VA = "0x1A562CC")]
		private void AffectSelectionColor(Color[] newColors)
		{
		}

		[Token(Token = "0x6001902")]
		[Address(RVA = "0x1A56638", Offset = "0x1A56638", VA = "0x1A56638")]
		public SelectionCylinder()
		{
		}
	}
	[Token(Token = "0x2000641")]
	public class TrackSegment : MonoBehaviour
	{
		[Token(Token = "0x2000642")]
		public enum SegmentType
		{
			[Token(Token = "0x40021ED")]
			Straight,
			[Token(Token = "0x40021EE")]
			LeftTurn,
			[Token(Token = "0x40021EF")]
			RightTurn,
			[Token(Token = "0x40021F0")]
			Switch
		}

		[Token(Token = "0x40021DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SegmentType _segmentType;

		[Token(Token = "0x40021E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshFilter _straight;

		[Token(Token = "0x40021E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshFilter _leftTurn;

		[Token(Token = "0x40021E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshFilter _rightTurn;

		[Token(Token = "0x40021E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _gridSize;

		[Token(Token = "0x40021E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int _subDivCount;

		[Token(Token = "0x40021E5")]
		private const float _originalGridSize = 0.8f;

		[Token(Token = "0x40021E6")]
		private const float _trackWidth = 0.15f;

		[Token(Token = "0x40021E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject _mesh;

		[Token(Token = "0x40021E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Pose _p1;

		[Token(Token = "0x40021EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Pose _p2;

		[Token(Token = "0x40021EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Pose _endPose;

		[Token(Token = "0x17000276")]
		public float StartDistance
		{
			[Token(Token = "0x6001904")]
			[Address(RVA = "0x1A566A8", Offset = "0x1A566A8", VA = "0x1A566A8")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001905")]
			[Address(RVA = "0x1A566B0", Offset = "0x1A566B0", VA = "0x1A566B0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000277")]
		public float GridSize
		{
			[Token(Token = "0x6001906")]
			[Address(RVA = "0x1A566B8", Offset = "0x1A566B8", VA = "0x1A566B8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001907")]
			[Address(RVA = "0x1A566C0", Offset = "0x1A566C0", VA = "0x1A566C0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000278")]
		public int SubDivCount
		{
			[Token(Token = "0x6001908")]
			[Address(RVA = "0x1A566C8", Offset = "0x1A566C8", VA = "0x1A566C8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001909")]
			[Address(RVA = "0x1A566D0", Offset = "0x1A566D0", VA = "0x1A566D0")]
			set
			{
			}
		}

		[Token(Token = "0x17000279")]
		public SegmentType Type
		{
			[Token(Token = "0x600190A")]
			[Address(RVA = "0x1A566D8", Offset = "0x1A566D8", VA = "0x1A566D8")]
			get
			{
				return default(SegmentType);
			}
		}

		[Token(Token = "0x1700027A")]
		public Pose EndPose
		{
			[Token(Token = "0x600190B")]
			[Address(RVA = "0x1A566E0", Offset = "0x1A566E0", VA = "0x1A566E0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700027B")]
		public float Radius
		{
			[Token(Token = "0x600190C")]
			[Address(RVA = "0x1A56AB4", Offset = "0x1A56AB4", VA = "0x1A56AB4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700027C")]
		public float SegmentLength
		{
			[Token(Token = "0x600190E")]
			[Address(RVA = "0x1A5673C", Offset = "0x1A5673C", VA = "0x1A5673C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600190D")]
		[Address(RVA = "0x1A56AC4", Offset = "0x1A56AC4", VA = "0x1A56AC4")]
		public float setGridSize(float size)
		{
			return default(float);
		}

		[Token(Token = "0x600190F")]
		[Address(RVA = "0x1A56ADC", Offset = "0x1A56ADC", VA = "0x1A56ADC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001910")]
		[Address(RVA = "0x1A5677C", Offset = "0x1A5677C", VA = "0x1A5677C")]
		public void UpdatePose(float distanceIntoSegment, Pose pose)
		{
		}

		[Token(Token = "0x6001911")]
		[Address(RVA = "0x1A56AE0", Offset = "0x1A56AE0", VA = "0x1A56AE0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001912")]
		[Address(RVA = "0x1A56AE4", Offset = "0x1A56AE4", VA = "0x1A56AE4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001913")]
		[Address(RVA = "0x1A56B40", Offset = "0x1A56B40", VA = "0x1A56B40")]
		private void DrawDebugLines()
		{
		}

		[Token(Token = "0x6001914")]
		[Address(RVA = "0x1A57474", Offset = "0x1A57474", VA = "0x1A57474")]
		public void RegenerateTrackAndMesh()
		{
		}

		[Token(Token = "0x6001915")]
		[Address(RVA = "0x1A576F8", Offset = "0x1A576F8", VA = "0x1A576F8")]
		public TrackSegment()
		{
		}
	}
	[Token(Token = "0x2000643")]
	public class TrainButtonVisualController : MonoBehaviour
	{
		[Token(Token = "0x2000644")]
		[CompilerGenerated]
		private sealed class <ResetPosition>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002202")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002203")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002204")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainButtonVisualController <>4__this;

			[Token(Token = "0x4002205")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <startTime>5__2;

			[Token(Token = "0x4002206")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <endTime>5__3;

			[Token(Token = "0x1700027D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001924")]
				[Address(RVA = "0x1A5821C", Offset = "0x1A5821C", VA = "0x1A5821C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700027E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001926")]
				[Address(RVA = "0x1A58264", Offset = "0x1A58264", VA = "0x1A58264", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001921")]
			[Address(RVA = "0x1A58050", Offset = "0x1A58050", VA = "0x1A58050")]
			[DebuggerHidden]
			public <ResetPosition>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x6001922")]
			[Address(RVA = "0x1A580A0", Offset = "0x1A580A0", VA = "0x1A580A0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001923")]
			[Address(RVA = "0x1A580A4", Offset = "0x1A580A4", VA = "0x1A580A4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001925")]
			[Address(RVA = "0x1A58224", Offset = "0x1A58224", VA = "0x1A58224", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40021F1")]
		private const float LERP_TO_OLD_POS_DURATION = 1f;

		[Token(Token = "0x40021F2")]
		private const float LOCAL_SIZE_HALVED = 0.5f;

		[Token(Token = "0x40021F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x40021F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshRenderer _glowRenderer;

		[Token(Token = "0x40021F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ButtonController _buttonController;

		[Token(Token = "0x40021F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color _buttonContactColor;

		[Token(Token = "0x40021F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Color _buttonActionColor;

		[Token(Token = "0x40021F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x40021F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioClip _actionSoundEffect;

		[Token(Token = "0x40021FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform _buttonContactTransform;

		[Token(Token = "0x40021FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float _contactMaxDisplacementDistance;

		[Token(Token = "0x40021FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material _buttonMaterial;

		[Token(Token = "0x40021FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Color _buttonDefaultColor;

		[Token(Token = "0x40021FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int _materialColorId;

		[Token(Token = "0x40021FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool _buttonInContactOrActionStates;

		[Token(Token = "0x4002200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Coroutine _lerpToOldPositionCr;

		[Token(Token = "0x4002201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 _oldPosition;

		[Token(Token = "0x6001916")]
		[Address(RVA = "0x1A57858", Offset = "0x1A57858", VA = "0x1A57858")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001917")]
		[Address(RVA = "0x1A57910", Offset = "0x1A57910", VA = "0x1A57910")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001918")]
		[Address(RVA = "0x1A579A0", Offset = "0x1A579A0", VA = "0x1A579A0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001919")]
		[Address(RVA = "0x1A57AE8", Offset = "0x1A57AE8", VA = "0x1A57AE8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600191A")]
		[Address(RVA = "0x1A57C74", Offset = "0x1A57C74", VA = "0x1A57C74")]
		private void ActionOrInContactZoneStayEvent(ColliderZoneArgs collisionArgs)
		{
		}

		[Token(Token = "0x600191B")]
		[Address(RVA = "0x1A57D84", Offset = "0x1A57D84", VA = "0x1A57D84")]
		private void InteractableStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600191C")]
		[Address(RVA = "0x1A57F88", Offset = "0x1A57F88", VA = "0x1A57F88")]
		private void PlaySound(AudioClip clip)
		{
		}

		[Token(Token = "0x600191D")]
		[Address(RVA = "0x1A57E94", Offset = "0x1A57E94", VA = "0x1A57E94")]
		private void StopResetLerping()
		{
		}

		[Token(Token = "0x600191E")]
		[Address(RVA = "0x1A57EA8", Offset = "0x1A57EA8", VA = "0x1A57EA8")]
		private void LerpToOldPosition()
		{
		}

		[Token(Token = "0x600191F")]
		[Address(RVA = "0x1A57FDC", Offset = "0x1A57FDC", VA = "0x1A57FDC")]
		[IteratorStateMachine(typeof(<ResetPosition>d__26))]
		private IEnumerator ResetPosition()
		{
			return null;
		}

		[Token(Token = "0x6001920")]
		[Address(RVA = "0x1A58078", Offset = "0x1A58078", VA = "0x1A58078")]
		public TrainButtonVisualController()
		{
		}
	}
	[Token(Token = "0x2000645")]
	public class TrainCar : TrainCarBase
	{
		[Token(Token = "0x4002207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TrainCarBase _parentLocomotive;

		[Token(Token = "0x4002208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		protected float _distanceBehindParent;

		[Token(Token = "0x1700027F")]
		public float DistanceBehindParentScaled
		{
			[Token(Token = "0x6001927")]
			[Address(RVA = "0x1A5826C", Offset = "0x1A5826C", VA = "0x1A5826C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001928")]
		[Address(RVA = "0x1A5827C", Offset = "0x1A5827C", VA = "0x1A5827C", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001929")]
		[Address(RVA = "0x1A58284", Offset = "0x1A58284", VA = "0x1A58284", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x600192A")]
		[Address(RVA = "0x1A585B4", Offset = "0x1A585B4", VA = "0x1A585B4")]
		public TrainCar()
		{
		}
	}
	[Token(Token = "0x2000646")]
	public abstract class TrainCarBase : MonoBehaviour
	{
		[Token(Token = "0x4002209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3 OFFSET;

		[Token(Token = "0x400220A")]
		private const float WHEEL_RADIUS = 0.027f;

		[Token(Token = "0x400220B")]
		private const float TWO_PI = (float)Math.PI * 2f;

		[Token(Token = "0x400220C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Transform _frontWheels;

		[Token(Token = "0x400220D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Transform _rearWheels;

		[Token(Token = "0x400220E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected TrainTrack _trainTrack;

		[Token(Token = "0x400220F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected Transform[] _individualWheels;

		[Token(Token = "0x4002211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected float scale;

		[Token(Token = "0x4002212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Pose _frontPose;

		[Token(Token = "0x4002213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Pose _rearPose;

		[Token(Token = "0x17000280")]
		public float Distance
		{
			[Token(Token = "0x600192B")]
			[Address(RVA = "0x1A586B0", Offset = "0x1A586B0", VA = "0x1A586B0")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600192C")]
			[Address(RVA = "0x1A586B8", Offset = "0x1A586B8", VA = "0x1A586B8")]
			[CompilerGenerated]
			protected set
			{
			}
		}

		[Token(Token = "0x17000281")]
		public float Scale
		{
			[Token(Token = "0x600192D")]
			[Address(RVA = "0x1A586C0", Offset = "0x1A586C0", VA = "0x1A586C0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600192E")]
			[Address(RVA = "0x1A586C8", Offset = "0x1A586C8", VA = "0x1A586C8")]
			set
			{
			}
		}

		[Token(Token = "0x600192F")]
		[Address(RVA = "0x1A58280", Offset = "0x1A58280", VA = "0x1A58280", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001930")]
		[Address(RVA = "0x1A586D0", Offset = "0x1A586D0", VA = "0x1A586D0")]
		public void UpdatePose(float distance, TrainCarBase train, Pose pose)
		{
		}

		[Token(Token = "0x6001931")]
		[Address(RVA = "0x1A582C0", Offset = "0x1A582C0", VA = "0x1A582C0")]
		protected void UpdateCarPosition()
		{
		}

		[Token(Token = "0x6001932")]
		[Address(RVA = "0x1A584D0", Offset = "0x1A584D0", VA = "0x1A584D0")]
		protected void RotateCarWheels()
		{
		}

		[Token(Token = "0x6001933")]
		public abstract void UpdatePosition();

		[Token(Token = "0x6001934")]
		[Address(RVA = "0x1A58614", Offset = "0x1A58614", VA = "0x1A58614")]
		protected TrainCarBase()
		{
		}
	}
	[Token(Token = "0x2000647")]
	public class TrainCrossingController : MonoBehaviour
	{
		[Token(Token = "0x2000648")]
		[CompilerGenerated]
		private sealed class <AnimateCrossing>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400221E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400221F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002220")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainCrossingController <>4__this;

			[Token(Token = "0x4002221")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float animationLength;

			[Token(Token = "0x4002222")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <animationEndTime>5__2;

			[Token(Token = "0x4002223")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <lightBlinkDuration>5__3;

			[Token(Token = "0x4002224")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <lightBlinkStartTime>5__4;

			[Token(Token = "0x4002225")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <lightBlinkEndTime>5__5;

			[Token(Token = "0x4002226")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Material <lightToBlinkOn>5__6;

			[Token(Token = "0x4002227")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Material <lightToBlinkOff>5__7;

			[Token(Token = "0x4002228")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Color <onColor>5__8;

			[Token(Token = "0x4002229")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Color <offColor>5__9;

			[Token(Token = "0x17000282")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001942")]
				[Address(RVA = "0x1A58FA0", Offset = "0x1A58FA0", VA = "0x1A58FA0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000283")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001944")]
				[Address(RVA = "0x1A58FE8", Offset = "0x1A58FE8", VA = "0x1A58FE8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600193F")]
			[Address(RVA = "0x1A58C14", Offset = "0x1A58C14", VA = "0x1A58C14")]
			[DebuggerHidden]
			public <AnimateCrossing>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6001940")]
			[Address(RVA = "0x1A58D88", Offset = "0x1A58D88", VA = "0x1A58D88", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001941")]
			[Address(RVA = "0x1A58D8C", Offset = "0x1A58D8C", VA = "0x1A58D8C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001943")]
			[Address(RVA = "0x1A58FA8", Offset = "0x1A58FA8", VA = "0x1A58FA8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4002215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip[] _crossingSounds;

		[Token(Token = "0x4002216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshRenderer _lightSide1Renderer;

		[Token(Token = "0x4002217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshRenderer _lightSide2Renderer;

		[Token(Token = "0x4002218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x4002219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material _lightsSide1Mat;

		[Token(Token = "0x400221A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material _lightsSide2Mat;

		[Token(Token = "0x400221B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _colorId;

		[Token(Token = "0x400221C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Coroutine _xingAnimationCr;

		[Token(Token = "0x400221D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x6001936")]
		[Address(RVA = "0x1A58840", Offset = "0x1A58840", VA = "0x1A58840")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001937")]
		[Address(RVA = "0x1A5889C", Offset = "0x1A5889C", VA = "0x1A5889C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001938")]
		[Address(RVA = "0x1A58974", Offset = "0x1A58974", VA = "0x1A58974")]
		public void CrossingButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001939")]
		[Address(RVA = "0x1A58AC8", Offset = "0x1A58AC8", VA = "0x1A58AC8")]
		private void Update()
		{
		}

		[Token(Token = "0x600193A")]
		[Address(RVA = "0x1A589D0", Offset = "0x1A589D0", VA = "0x1A589D0")]
		private void ActivateTrainCrossing()
		{
		}

		[Token(Token = "0x600193B")]
		[Address(RVA = "0x1A58B90", Offset = "0x1A58B90", VA = "0x1A58B90")]
		[IteratorStateMachine(typeof(<AnimateCrossing>d__15))]
		private IEnumerator AnimateCrossing(float animationLength)
		{
			return null;
		}

		[Token(Token = "0x600193C")]
		[Address(RVA = "0x1A58C3C", Offset = "0x1A58C3C", VA = "0x1A58C3C")]
		private void AffectMaterials(Material[] materials, Color newColor)
		{
		}

		[Token(Token = "0x600193D")]
		[Address(RVA = "0x1A58CD4", Offset = "0x1A58CD4", VA = "0x1A58CD4")]
		private void ToggleLightObjects(bool enableState)
		{
		}

		[Token(Token = "0x600193E")]
		[Address(RVA = "0x1A58D30", Offset = "0x1A58D30", VA = "0x1A58D30")]
		public TrainCrossingController()
		{
		}
	}
	[Token(Token = "0x2000649")]
	public class TrainLocomotive : TrainCarBase
	{
		[Token(Token = "0x200064A")]
		private enum EngineSoundState
		{
			[Token(Token = "0x4002248")]
			Start,
			[Token(Token = "0x4002249")]
			AccelerateOrSetProperSpeed,
			[Token(Token = "0x400224A")]
			Stop
		}

		[Token(Token = "0x200064B")]
		[CompilerGenerated]
		private sealed class <StartStopTrain>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400224B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400224C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400224D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool startTrain;

			[Token(Token = "0x400224E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TrainLocomotive <>4__this;

			[Token(Token = "0x400224F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <endSpeed>5__2;

			[Token(Token = "0x4002250")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <timePeriodForSpeedChange>5__3;

			[Token(Token = "0x4002251")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x4002252")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <endTime>5__5;

			[Token(Token = "0x4002253")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <startSpeed>5__6;

			[Token(Token = "0x17000284")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001957")]
				[Address(RVA = "0x1A59880", Offset = "0x1A59880", VA = "0x1A59880", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000285")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001959")]
				[Address(RVA = "0x1A598C8", Offset = "0x1A598C8", VA = "0x1A598C8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001954")]
			[Address(RVA = "0x1A59290", Offset = "0x1A59290", VA = "0x1A59290")]
			[DebuggerHidden]
			public <StartStopTrain>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x6001955")]
			[Address(RVA = "0x1A59658", Offset = "0x1A59658", VA = "0x1A59658", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001956")]
			[Address(RVA = "0x1A5965C", Offset = "0x1A5965C", VA = "0x1A5965C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001958")]
			[Address(RVA = "0x1A59888", Offset = "0x1A59888", VA = "0x1A59888", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400222A")]
		private const float MIN_SPEED = 0.2f;

		[Token(Token = "0x400222B")]
		private const float MAX_SPEED = 2.7f;

		[Token(Token = "0x400222C")]
		private const float SMOKE_SPEED_MULTIPLIER = 8f;

		[Token(Token = "0x400222D")]
		private const int MAX_PARTICLES_MULTIPLIER = 3;

		[Token(Token = "0x400222E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[Range(0.2f, 2.7f)]
		protected float _initialSpeed;

		[Token(Token = "0x400222F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x4002230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _decreaseSpeedButton;

		[Token(Token = "0x4002231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject _increaseSpeedButton;

		[Token(Token = "0x4002232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject _smokeButton;

		[Token(Token = "0x4002233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject _whistleButton;

		[Token(Token = "0x4002234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject _reverseButton;

		[Token(Token = "0x4002235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private AudioSource _whistleAudioSource;

		[Token(Token = "0x4002236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private AudioClip _whistleSound;

		[Token(Token = "0x4002237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private AudioSource _engineAudioSource;

		[Token(Token = "0x4002238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private AudioClip[] _accelerationSounds;

		[Token(Token = "0x4002239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private AudioClip[] _decelerationSounds;

		[Token(Token = "0x400223A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private AudioClip _startUpSound;

		[Token(Token = "0x400223B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private AudioSource _smokeStackAudioSource;

		[Token(Token = "0x400223C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private AudioClip _smokeSound;

		[Token(Token = "0x400223D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private ParticleSystem _smoke1;

		[Token(Token = "0x400223E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private ParticleSystem _smoke2;

		[Token(Token = "0x400223F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private TrainCarBase[] _childCars;

		[Token(Token = "0x4002240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool _isMoving;

		[Token(Token = "0x4002241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		private bool _reverse;

		[Token(Token = "0x4002242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float _currentSpeed;

		[Token(Token = "0x4002243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float _speedDiv;

		[Token(Token = "0x4002244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float _standardRateOverTimeMultiplier;

		[Token(Token = "0x4002245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int _standardMaxParticles;

		[Token(Token = "0x4002246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Coroutine _startStopTrainCr;

		[Token(Token = "0x6001945")]
		[Address(RVA = "0x1A58FF0", Offset = "0x1A58FF0", VA = "0x1A58FF0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001946")]
		[Address(RVA = "0x1A5914C", Offset = "0x1A5914C", VA = "0x1A5914C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001947")]
		[Address(RVA = "0x1A59158", Offset = "0x1A59158", VA = "0x1A59158", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x6001948")]
		[Address(RVA = "0x1A55738", Offset = "0x1A55738", VA = "0x1A55738")]
		public void StartStopStateChanged()
		{
		}

		[Token(Token = "0x6001949")]
		[Address(RVA = "0x1A590C4", Offset = "0x1A590C4", VA = "0x1A590C4")]
		[IteratorStateMachine(typeof(<StartStopTrain>d__34))]
		private IEnumerator StartStopTrain(bool startTrain)
		{
			return null;
		}

		[Token(Token = "0x600194A")]
		[Address(RVA = "0x1A592B8", Offset = "0x1A592B8", VA = "0x1A592B8")]
		private float PlayEngineSound(EngineSoundState engineSoundState)
		{
			return default(float);
		}

		[Token(Token = "0x600194B")]
		[Address(RVA = "0x1A59230", Offset = "0x1A59230", VA = "0x1A59230")]
		private void UpdateDistance()
		{
		}

		[Token(Token = "0x600194C")]
		[Address(RVA = "0x1A557C4", Offset = "0x1A557C4", VA = "0x1A557C4")]
		public void DecreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x600194D")]
		[Address(RVA = "0x1A55854", Offset = "0x1A55854", VA = "0x1A55854")]
		public void IncreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x600194E")]
		[Address(RVA = "0x1A594CC", Offset = "0x1A594CC", VA = "0x1A594CC")]
		private void UpdateSmokeEmissionBasedOnSpeed()
		{
		}

		[Token(Token = "0x600194F")]
		[Address(RVA = "0x1A595C0", Offset = "0x1A595C0", VA = "0x1A595C0")]
		private float GetCurrentSmokeEmission()
		{
			return default(float);
		}

		[Token(Token = "0x6001950")]
		[Address(RVA = "0x1A558E4", Offset = "0x1A558E4", VA = "0x1A558E4")]
		public void SmokeButtonStateChanged()
		{
		}

		[Token(Token = "0x6001951")]
		[Address(RVA = "0x1A55990", Offset = "0x1A55990", VA = "0x1A55990")]
		public void WhistleButtonStateChanged()
		{
		}

		[Token(Token = "0x6001952")]
		[Address(RVA = "0x1A55A70", Offset = "0x1A55A70", VA = "0x1A55A70")]
		public void ReverseButtonStateChanged()
		{
		}

		[Token(Token = "0x6001953")]
		[Address(RVA = "0x1A595FC", Offset = "0x1A595FC", VA = "0x1A595FC")]
		public TrainLocomotive()
		{
		}
	}
	[Token(Token = "0x200064C")]
	public class TrainTrack : MonoBehaviour
	{
		[Token(Token = "0x4002254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _gridSize;

		[Token(Token = "0x4002255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int _subDivCount;

		[Token(Token = "0x4002256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _segmentParent;

		[Token(Token = "0x4002257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _trainParent;

		[Token(Token = "0x4002258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool _regnerateTrackMeshOnAwake;

		[Token(Token = "0x4002259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _trainLength;

		[Token(Token = "0x400225A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TrackSegment[] _trackSegments;

		[Token(Token = "0x17000286")]
		public float TrackLength
		{
			[Token(Token = "0x600195A")]
			[Address(RVA = "0x1A598D0", Offset = "0x1A598D0", VA = "0x1A598D0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600195B")]
			[Address(RVA = "0x1A598D8", Offset = "0x1A598D8", VA = "0x1A598D8")]
			private set
			{
			}
		}

		[Token(Token = "0x600195C")]
		[Address(RVA = "0x1A598E0", Offset = "0x1A598E0", VA = "0x1A598E0")]
		private void Awake()
		{
		}

		[Token(Token = "0x600195D")]
		[Address(RVA = "0x1A58738", Offset = "0x1A58738", VA = "0x1A58738")]
		public TrackSegment GetSegment(float distance)
		{
			return null;
		}

		[Token(Token = "0x600195E")]
		[Address(RVA = "0x1A598E4", Offset = "0x1A598E4", VA = "0x1A598E4")]
		public void Regenerate()
		{
		}

		[Token(Token = "0x600195F")]
		[Address(RVA = "0x1A59ADC", Offset = "0x1A59ADC", VA = "0x1A59ADC")]
		private void SetScale(float ratio)
		{
		}

		[Token(Token = "0x6001960")]
		[Address(RVA = "0x1A59BBC", Offset = "0x1A59BBC", VA = "0x1A59BBC")]
		public TrainTrack()
		{
		}
	}
	[Token(Token = "0x200064D")]
	public class Pose
	{
		[Token(Token = "0x400225B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Position;

		[Token(Token = "0x400225C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion Rotation;

		[Token(Token = "0x6001961")]
		[Address(RVA = "0x1A577C0", Offset = "0x1A577C0", VA = "0x1A577C0")]
		public Pose()
		{
		}

		[Token(Token = "0x6001962")]
		[Address(RVA = "0x1A59BD8", Offset = "0x1A59BD8", VA = "0x1A59BD8")]
		public Pose(Vector3 position, Quaternion rotation)
		{
		}
	}
	[Token(Token = "0x200064E")]
	public class WindmillBladesController : MonoBehaviour
	{
		[Token(Token = "0x200064F")]
		[CompilerGenerated]
		private sealed class <LerpToSpeed>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002268")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002269")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400226A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x400226B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float goalSpeed;

			[Token(Token = "0x400226C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <totalTime>5__2;

			[Token(Token = "0x400226D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <startSpeed>5__3;

			[Token(Token = "0x17000288")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600196F")]
				[Address(RVA = "0x1A5A1CC", Offset = "0x1A5A1CC", VA = "0x1A5A1CC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000289")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001971")]
				[Address(RVA = "0x1A5A214", Offset = "0x1A5A214", VA = "0x1A5A214", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600196C")]
			[Address(RVA = "0x1A59EB4", Offset = "0x1A59EB4", VA = "0x1A59EB4")]
			[DebuggerHidden]
			public <LerpToSpeed>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x600196D")]
			[Address(RVA = "0x1A5A028", Offset = "0x1A5A028", VA = "0x1A5A028", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600196E")]
			[Address(RVA = "0x1A5A02C", Offset = "0x1A5A02C", VA = "0x1A5A02C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001970")]
			[Address(RVA = "0x1A5A1D4", Offset = "0x1A5A1D4", VA = "0x1A5A1D4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000650")]
		[CompilerGenerated]
		private sealed class <PlaySoundDelayed>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400226E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400226F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002270")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x4002271")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AudioClip initial;

			[Token(Token = "0x4002272")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float timeDelayAfterInitial;

			[Token(Token = "0x4002273")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public AudioClip clip;

			[Token(Token = "0x1700028A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001975")]
				[Address(RVA = "0x1A5A2F0", Offset = "0x1A5A2F0", VA = "0x1A5A2F0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700028B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001977")]
				[Address(RVA = "0x1A5A338", Offset = "0x1A5A338", VA = "0x1A5A338", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001972")]
			[Address(RVA = "0x1A59F90", Offset = "0x1A59F90", VA = "0x1A59F90")]
			[DebuggerHidden]
			public <PlaySoundDelayed>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6001973")]
			[Address(RVA = "0x1A5A21C", Offset = "0x1A5A21C", VA = "0x1A5A21C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001974")]
			[Address(RVA = "0x1A5A220", Offset = "0x1A5A220", VA = "0x1A5A220", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001976")]
			[Address(RVA = "0x1A5A2F8", Offset = "0x1A5A2F8", VA = "0x1A5A2F8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400225D")]
		private const float MAX_TIME = 1f;

		[Token(Token = "0x400225E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x400225F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip _windMillRotationSound;

		[Token(Token = "0x4002260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip _windMillStartSound;

		[Token(Token = "0x4002261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _windMillStopSound;

		[Token(Token = "0x4002263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _currentSpeed;

		[Token(Token = "0x4002264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _lerpSpeedCoroutine;

		[Token(Token = "0x4002265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Coroutine _audioChangeCr;

		[Token(Token = "0x4002266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion _originalRotation;

		[Token(Token = "0x4002267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _rotAngle;

		[Token(Token = "0x17000287")]
		public bool IsMoving
		{
			[Token(Token = "0x6001963")]
			[Address(RVA = "0x1A59C3C", Offset = "0x1A59C3C", VA = "0x1A59C3C")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001964")]
			[Address(RVA = "0x1A59C44", Offset = "0x1A59C44", VA = "0x1A59C44")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001965")]
		[Address(RVA = "0x1A59C50", Offset = "0x1A59C50", VA = "0x1A59C50")]
		private void Start()
		{
		}

		[Token(Token = "0x6001966")]
		[Address(RVA = "0x1A59C80", Offset = "0x1A59C80", VA = "0x1A59C80")]
		private void Update()
		{
		}

		[Token(Token = "0x6001967")]
		[Address(RVA = "0x1A59DC0", Offset = "0x1A59DC0", VA = "0x1A59DC0")]
		public void SetMoveState(bool newMoveState, float goalSpeed)
		{
		}

		[Token(Token = "0x6001968")]
		[Address(RVA = "0x1A59E30", Offset = "0x1A59E30", VA = "0x1A59E30")]
		[IteratorStateMachine(typeof(<LerpToSpeed>d__17))]
		private IEnumerator LerpToSpeed(float goalSpeed)
		{
			return null;
		}

		[Token(Token = "0x6001969")]
		[Address(RVA = "0x1A59EDC", Offset = "0x1A59EDC", VA = "0x1A59EDC")]
		[IteratorStateMachine(typeof(<PlaySoundDelayed>d__18))]
		private IEnumerator PlaySoundDelayed(AudioClip initial, AudioClip clip, float timeDelayAfterInitial)
		{
			return null;
		}

		[Token(Token = "0x600196A")]
		[Address(RVA = "0x1A59FB8", Offset = "0x1A59FB8", VA = "0x1A59FB8")]
		private void PlaySound(AudioClip clip, bool loop = false)
		{
		}

		[Token(Token = "0x600196B")]
		[Address(RVA = "0x1A5A020", Offset = "0x1A5A020", VA = "0x1A5A020")]
		public WindmillBladesController()
		{
		}
	}
	[Token(Token = "0x2000651")]
	public class WindmillController : MonoBehaviour
	{
		[Token(Token = "0x4002274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x4002275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _maxSpeed;

		[Token(Token = "0x4002276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x4002277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WindmillBladesController _bladesRotation;

		[Token(Token = "0x4002278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x6001978")]
		[Address(RVA = "0x1A5A340", Offset = "0x1A5A340", VA = "0x1A5A340")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001979")]
		[Address(RVA = "0x1A5A3B4", Offset = "0x1A5A3B4", VA = "0x1A5A3B4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600197A")]
		[Address(RVA = "0x1A5A47C", Offset = "0x1A5A47C", VA = "0x1A5A47C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600197B")]
		[Address(RVA = "0x1A5A58C", Offset = "0x1A5A58C", VA = "0x1A5A58C")]
		private void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600197C")]
		[Address(RVA = "0x1A5A608", Offset = "0x1A5A608", VA = "0x1A5A608")]
		private void Update()
		{
		}

		[Token(Token = "0x600197D")]
		[Address(RVA = "0x1A5A6D0", Offset = "0x1A5A6D0", VA = "0x1A5A6D0")]
		public WindmillController()
		{
		}
	}
	[Token(Token = "0x2000652")]
	public enum EUiDisplayType
	{
		[Token(Token = "0x400227A")]
		EUDT_WorldGeoQuad,
		[Token(Token = "0x400227B")]
		EUDT_OverlayQuad,
		[Token(Token = "0x400227C")]
		EUDT_None,
		[Token(Token = "0x400227D")]
		EUDT_MaxDislayTypes
	}
	[Token(Token = "0x2000653")]
	public class OVROverlaySample : MonoBehaviour
	{
		[Token(Token = "0x2000654")]
		[CompilerGenerated]
		private sealed class <WaitforOVROverlay>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002296")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002297")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002298")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OVROverlaySample <>4__this;

			[Token(Token = "0x1700028C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001991")]
				[Address(RVA = "0x1A5BD60", Offset = "0x1A5BD60", VA = "0x1A5BD60", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700028D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001993")]
				[Address(RVA = "0x1A5BDA8", Offset = "0x1A5BDA8", VA = "0x1A5BDA8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600198E")]
			[Address(RVA = "0x1A5B3F0", Offset = "0x1A5B3F0", VA = "0x1A5B3F0")]
			[DebuggerHidden]
			public <WaitforOVROverlay>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x600198F")]
			[Address(RVA = "0x1A5BB64", Offset = "0x1A5BB64", VA = "0x1A5BB64", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001990")]
			[Address(RVA = "0x1A5BB68", Offset = "0x1A5BB68", VA = "0x1A5BB68", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001992")]
			[Address(RVA = "0x1A5BD68", Offset = "0x1A5BD68", VA = "0x1A5BD68", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400227E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inMenu;

		[Token(Token = "0x400227F")]
		private const string ovrOverlayID = "OVROverlayID";

		[Token(Token = "0x4002280")]
		private const string applicationID = "ApplicationID";

		[Token(Token = "0x4002281")]
		private const string noneID = "NoneID";

		[Token(Token = "0x4002282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Toggle applicationRadioButton;

		[Token(Token = "0x4002283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Toggle noneRadioButton;

		[Token(Token = "0x4002284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Header("App vs Compositor Comparison Settings")]
		public GameObject mainCamera;

		[Token(Token = "0x4002285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject uiCamera;

		[Token(Token = "0x4002286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject uiGeoParent;

		[Token(Token = "0x4002287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject worldspaceGeoParent;

		[Token(Token = "0x4002288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public OVROverlay cameraRenderOverlay;

		[Token(Token = "0x4002289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public OVROverlay renderingLabelOverlay;

		[Token(Token = "0x400228A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Texture applicationLabelTexture;

		[Token(Token = "0x400228B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Texture compositorLabelTexture;

		[Token(Token = "0x400228C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[Header("Level Loading Sim Settings")]
		public GameObject prefabForLevelLoadSim;

		[Token(Token = "0x400228D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public OVROverlay cubemapOverlay;

		[Token(Token = "0x400228E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public OVROverlay loadingTextQuadOverlay;

		[Token(Token = "0x400228F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float distanceFromCamToLoadText;

		[Token(Token = "0x4002290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float cubeSpawnRadius;

		[Token(Token = "0x4002291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float heightBetweenItems;

		[Token(Token = "0x4002292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int numObjectsPerLevel;

		[Token(Token = "0x4002293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int numLevels;

		[Token(Token = "0x4002294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int numLoopsTrigger;

		[Token(Token = "0x4002295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<GameObject> spawnedCubes;

		[Token(Token = "0x600197E")]
		[Address(RVA = "0x1A5A6E0", Offset = "0x1A5A6E0", VA = "0x1A5A6E0")]
		private void Start()
		{
		}

		[Token(Token = "0x600197F")]
		[Address(RVA = "0x1A5AF20", Offset = "0x1A5AF20", VA = "0x1A5AF20")]
		private void Update()
		{
		}

		[Token(Token = "0x6001980")]
		[Address(RVA = "0x1A5B048", Offset = "0x1A5B048", VA = "0x1A5B048")]
		private void ActivateWorldGeo()
		{
		}

		[Token(Token = "0x6001981")]
		[Address(RVA = "0x1A5B178", Offset = "0x1A5B178", VA = "0x1A5B178")]
		private void ActivateOVROverlay()
		{
		}

		[Token(Token = "0x6001982")]
		[Address(RVA = "0x1A5B2A8", Offset = "0x1A5B2A8", VA = "0x1A5B2A8")]
		private void ActivateNone()
		{
		}

		[Token(Token = "0x6001983")]
		[Address(RVA = "0x1A5B028", Offset = "0x1A5B028", VA = "0x1A5B028")]
		private void TriggerLoad()
		{
		}

		[Token(Token = "0x6001984")]
		[Address(RVA = "0x1A5B37C", Offset = "0x1A5B37C", VA = "0x1A5B37C")]
		[IteratorStateMachine(typeof(<WaitforOVROverlay>d__30))]
		private IEnumerator WaitforOVROverlay()
		{
			return null;
		}

		[Token(Token = "0x6001985")]
		[Address(RVA = "0x1A5B418", Offset = "0x1A5B418", VA = "0x1A5B418")]
		private void TriggerUnload()
		{
		}

		[Token(Token = "0x6001986")]
		[Address(RVA = "0x1A5AB50", Offset = "0x1A5AB50", VA = "0x1A5AB50")]
		private void CameraAndRenderTargetSetup()
		{
		}

		[Token(Token = "0x6001987")]
		[Address(RVA = "0x1A5B560", Offset = "0x1A5B560", VA = "0x1A5B560")]
		private void SimulateLevelLoad()
		{
		}

		[Token(Token = "0x6001988")]
		[Address(RVA = "0x1A5B440", Offset = "0x1A5B440", VA = "0x1A5B440")]
		private void ClearObjects()
		{
		}

		[Token(Token = "0x6001989")]
		[Address(RVA = "0x1A5B8E8", Offset = "0x1A5B8E8", VA = "0x1A5B8E8")]
		public void RadioPressed(string radioLabel, string group, Toggle t)
		{
		}

		[Token(Token = "0x600198A")]
		[Address(RVA = "0x1A5B9D4", Offset = "0x1A5B9D4", VA = "0x1A5B9D4")]
		public OVROverlaySample()
		{
		}
	}
}
namespace OVRTouchSample
{
	[Token(Token = "0x2000655")]
	[RequireComponent(typeof(OVRGrabber))]
	public class Hand : MonoBehaviour
	{
		[Token(Token = "0x4002299")]
		public const string ANIM_LAYER_NAME_POINT = "Point Layer";

		[Token(Token = "0x400229A")]
		public const string ANIM_LAYER_NAME_THUMB = "Thumb Layer";

		[Token(Token = "0x400229B")]
		public const string ANIM_PARAM_NAME_FLEX = "Flex";

		[Token(Token = "0x400229C")]
		public const string ANIM_PARAM_NAME_POSE = "Pose";

		[Token(Token = "0x400229D")]
		public const float THRESH_COLLISION_FLEX = 0.9f;

		[Token(Token = "0x400229E")]
		public const float INPUT_RATE_CHANGE = 20f;

		[Token(Token = "0x400229F")]
		public const float COLLIDER_SCALE_MIN = 0.01f;

		[Token(Token = "0x40022A0")]
		public const float COLLIDER_SCALE_MAX = 1f;

		[Token(Token = "0x40022A1")]
		public const float COLLIDER_SCALE_PER_SECOND = 1f;

		[Token(Token = "0x40022A2")]
		public const float TRIGGER_DEBOUNCE_TIME = 0.05f;

		[Token(Token = "0x40022A3")]
		public const float THUMB_DEBOUNCE_TIME = 0.15f;

		[Token(Token = "0x40022A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x40022A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x40022A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HandPose m_defaultGrabPose;

		[Token(Token = "0x40022A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Collider[] m_colliders;

		[Token(Token = "0x40022A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_collisionEnabled;

		[Token(Token = "0x40022A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRGrabber m_grabber;

		[Token(Token = "0x40022AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Renderer> m_showAfterInputFocusAcquired;

		[Token(Token = "0x40022AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_animLayerIndexThumb;

		[Token(Token = "0x40022AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_animLayerIndexPoint;

		[Token(Token = "0x40022AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_animParamIndexFlex;

		[Token(Token = "0x40022AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_animParamIndexPose;

		[Token(Token = "0x40022AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_isPointing;

		[Token(Token = "0x40022B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool m_isGivingThumbsUp;

		[Token(Token = "0x40022B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_pointBlend;

		[Token(Token = "0x40022B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_thumbsUpBlend;

		[Token(Token = "0x40022B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x40022B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_collisionScaleCurrent;

		[Token(Token = "0x6001994")]
		[Address(RVA = "0x1A5BDB0", Offset = "0x1A5BDB0", VA = "0x1A5BDB0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001995")]
		[Address(RVA = "0x1A5BE08", Offset = "0x1A5BE08", VA = "0x1A5BE08")]
		private void Start()
		{
		}

		[Token(Token = "0x6001996")]
		[Address(RVA = "0x1A5C258", Offset = "0x1A5C258", VA = "0x1A5C258")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001997")]
		[Address(RVA = "0x1A5C344", Offset = "0x1A5C344", VA = "0x1A5C344")]
		private void Update()
		{
		}

		[Token(Token = "0x6001998")]
		[Address(RVA = "0x1A5C4A8", Offset = "0x1A5C4A8", VA = "0x1A5C4A8")]
		private void UpdateCapTouchStates()
		{
		}

		[Token(Token = "0x6001999")]
		[Address(RVA = "0x1A5C778", Offset = "0x1A5C778", VA = "0x1A5C778")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600199A")]
		[Address(RVA = "0x1A5C85C", Offset = "0x1A5C85C", VA = "0x1A5C85C")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x600199B")]
		[Address(RVA = "0x1A5CA0C", Offset = "0x1A5CA0C", VA = "0x1A5CA0C")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x600199C")]
		[Address(RVA = "0x1A5C534", Offset = "0x1A5C534", VA = "0x1A5C534")]
		private float InputValueRateChange(bool isDown, float value)
		{
			return default(float);
		}

		[Token(Token = "0x600199D")]
		[Address(RVA = "0x1A5C588", Offset = "0x1A5C588", VA = "0x1A5C588")]
		private void UpdateAnimStates()
		{
		}

		[Token(Token = "0x600199E")]
		[Address(RVA = "0x1A5C118", Offset = "0x1A5C118", VA = "0x1A5C118")]
		private void CollisionEnable(bool enabled)
		{
		}

		[Token(Token = "0x600199F")]
		[Address(RVA = "0x1A5CB30", Offset = "0x1A5CB30", VA = "0x1A5CB30")]
		public Hand()
		{
		}
	}
	[Token(Token = "0x2000657")]
	public enum HandPoseId
	{
		[Token(Token = "0x40022B8")]
		Default,
		[Token(Token = "0x40022B9")]
		Generic,
		[Token(Token = "0x40022BA")]
		PingPongBall,
		[Token(Token = "0x40022BB")]
		Controller
	}
	[Token(Token = "0x2000658")]
	public class HandPose : MonoBehaviour
	{
		[Token(Token = "0x40022BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_allowPointing;

		[Token(Token = "0x40022BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool m_allowThumbsUp;

		[Token(Token = "0x40022BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private HandPoseId m_poseId;

		[Token(Token = "0x1700028E")]
		public bool AllowPointing
		{
			[Token(Token = "0x60019A3")]
			[Address(RVA = "0x1A5DBE8", Offset = "0x1A5DBE8", VA = "0x1A5DBE8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700028F")]
		public bool AllowThumbsUp
		{
			[Token(Token = "0x60019A4")]
			[Address(RVA = "0x1A5DBF0", Offset = "0x1A5DBF0", VA = "0x1A5DBF0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000290")]
		public HandPoseId PoseId
		{
			[Token(Token = "0x60019A5")]
			[Address(RVA = "0x1A5DBF8", Offset = "0x1A5DBF8", VA = "0x1A5DBF8")]
			get
			{
				return default(HandPoseId);
			}
		}

		[Token(Token = "0x60019A6")]
		[Address(RVA = "0x1A5DC00", Offset = "0x1A5DC00", VA = "0x1A5DC00")]
		public HandPose()
		{
		}
	}
	[Token(Token = "0x2000659")]
	public class TouchController : MonoBehaviour
	{
		[Token(Token = "0x40022BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x40022C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x40022C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x60019A7")]
		[Address(RVA = "0x1A5DC08", Offset = "0x1A5DC08", VA = "0x1A5DC08")]
		private void Update()
		{
		}

		[Token(Token = "0x60019A8")]
		[Address(RVA = "0x1A5DED4", Offset = "0x1A5DED4", VA = "0x1A5DED4")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x60019A9")]
		[Address(RVA = "0x1A5DF24", Offset = "0x1A5DF24", VA = "0x1A5DF24")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x60019AA")]
		[Address(RVA = "0x1A5DF5C", Offset = "0x1A5DF5C", VA = "0x1A5DF5C")]
		public TouchController()
		{
		}
	}
}
namespace Imacreate.GrooveFitIsland
{
	[Token(Token = "0x200065A")]
	public class IyTest : MonoBehaviour
	{
		[Token(Token = "0x40022C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Debug")]
		[SerializeField]
		private GrooveFitGame[] _favoriteGames;

		[Token(Token = "0x40022C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Inject]
		private RunnerManagerProvider _runnerManagerProvider;

		[Token(Token = "0x60019AB")]
		[Address(RVA = "0x1A5DF64", Offset = "0x1A5DF64", VA = "0x1A5DF64")]
		private void Start()
		{
		}

		[Token(Token = "0x60019AC")]
		[Address(RVA = "0x1A5DFE0", Offset = "0x1A5DFE0", VA = "0x1A5DFE0")]
		private void Update()
		{
		}

		[Token(Token = "0x60019AD")]
		[Address(RVA = "0x1A5E51C", Offset = "0x1A5E51C", VA = "0x1A5E51C")]
		public IyTest()
		{
		}
	}
	[Token(Token = "0x200065C")]
	[NetworkBehaviourWeaved(7)]
	public class NetworkPartyGameSettings : NetworkBehaviour
	{
		[Token(Token = "0x40022C6")]
		private const int GF_NUM = 6;

		[Token(Token = "0x40022C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[DefaultForProperty("_selectedGrooveFits", 0, 6)]
		private int[] __selectedGrooveFits;

		[Token(Token = "0x40022C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[DefaultForProperty("_count", 6, 1)]
		private int __count;

		[Token(Token = "0x40022C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Changed<NetworkPartyGameSettings> $IL2CPP_CHANGED;

		[Token(Token = "0x40022CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static ChangedDelegate<NetworkPartyGameSettings> $IL2CPP_CHANGED_DELEGATE;

		[Token(Token = "0x40022CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static NetworkBehaviourCallbacks<NetworkPartyGameSettings> $IL2CPP_NETWORK_BEHAVIOUR_CALLBACKS;

		[Token(Token = "0x17000291")]
		[NetworkedWeaved(0, 6)]
		[Networked]
		[Capacity(6)]
		private NetworkArray<int> _selectedGrooveFits
		{
			[Token(Token = "0x60019B1")]
			[Address(RVA = "0x1A5E5E4", Offset = "0x1A5E5E4", VA = "0x1A5E5E4")]
			get
			{
				return default(NetworkArray<int>);
			}
		}

		[Token(Token = "0x17000292")]
		[Networked]
		[NetworkedWeaved(6, 1)]
		private int _count
		{
			[Token(Token = "0x60019B2")]
			[Address(RVA = "0x1A5E6A0", Offset = "0x1A5E6A0", VA = "0x1A5E6A0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60019B3")]
			[Address(RVA = "0x1A5E704", Offset = "0x1A5E704", VA = "0x1A5E704")]
			set
			{
			}
		}

		[Token(Token = "0x17000293")]
		public int SpawnedCount
		{
			[Token(Token = "0x60019B4")]
			[Address(RVA = "0x1A5E768", Offset = "0x1A5E768", VA = "0x1A5E768")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60019B5")]
		[Address(RVA = "0x1A5E76C", Offset = "0x1A5E76C", VA = "0x1A5E76C", Slot = "13")]
		public override void Spawned()
		{
		}

		[Token(Token = "0x60019B6")]
		[Address(RVA = "0x1A5E99C", Offset = "0x1A5E99C", VA = "0x1A5E99C")]
		public void SelectRandomGrooveFits(List<GrooveFitGame> games)
		{
		}

		[Token(Token = "0x60019B7")]
		[Address(RVA = "0x1A5E7EC", Offset = "0x1A5E7EC", VA = "0x1A5E7EC")]
		[Rpc(RpcSources.All, RpcTargets.StateAuthority, InvokeLocal = true)]
		private void RpcSpawnCountUp()
		{
		}

		[Token(Token = "0x60019B8")]
		[Address(RVA = "0x1A5EB14", Offset = "0x1A5EB14", VA = "0x1A5EB14")]
		public List<GrooveFitGame> GetSelectedGrooveFits()
		{
			return null;
		}

		[Token(Token = "0x60019B9")]
		[Address(RVA = "0x1A5ECB8", Offset = "0x1A5ECB8", VA = "0x1A5ECB8")]
		public bool CheckReady()
		{
			return default(bool);
		}

		[Token(Token = "0x60019BA")]
		[Address(RVA = "0x1A5EDEC", Offset = "0x1A5EDEC", VA = "0x1A5EDEC")]
		public NetworkPartyGameSettings()
		{
		}

		[Token(Token = "0x60019BB")]
		[Address(RVA = "0x1A5EE78", Offset = "0x1A5EE78", VA = "0x1A5EE78", Slot = "10")]
		public override void CopyBackingFieldsToState(bool P_0)
		{
		}

		[Token(Token = "0x60019BC")]
		[Address(RVA = "0x1A5EF50", Offset = "0x1A5EF50", VA = "0x1A5EF50", Slot = "11")]
		public override void CopyStateToBackingFields()
		{
		}

		[Token(Token = "0x60019BD")]
		[Address(RVA = "0x1A5F008", Offset = "0x1A5F008", VA = "0x1A5F008")]
		[NetworkRpcWeavedInvoker(1, 7, 1)]
		protected unsafe static void RpcSpawnCountUp@Invoker(NetworkBehaviour behaviour, SimulationMessage* message)
		{
		}
	}
	[Token(Token = "0x200065D")]
	public class NetworkPartyGameSettingsManager : SingletonMonoBehaviour<NetworkPartyGameSettingsManager>
	{
		[StructLayout(3)]
		[Token(Token = "0x200065E")]
		[CompilerGenerated]
		private struct <WaitUntilDataReady>d__6 : IAsyncStateMachine
		{
			[Token(Token = "0x40022D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40022D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<NetworkObject> <>t__builder;

			[Token(Token = "0x40022D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NetworkPartyGameSettingsManager <>4__this;

			[Token(Token = "0x40022D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken token;

			[Token(Token = "0x40022D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x60019C6")]
			[Address(RVA = "0x1A5F4D4", Offset = "0x1A5F4D4", VA = "0x1A5F4D4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60019C7")]
			[Address(RVA = "0x1A5F99C", Offset = "0x1A5F99C", VA = "0x1A5F99C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x200065F")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x40022D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public NetworkPartyGameSettingsManager <>4__this;

			[Token(Token = "0x40022D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public NetworkRunner runner;

			[Token(Token = "0x60019C8")]
			[Address(RVA = "0x1A5F9F4", Offset = "0x1A5F9F4", VA = "0x1A5F9F4")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x60019C9")]
			[Address(RVA = "0x1A5F9FC", Offset = "0x1A5F9FC", VA = "0x1A5F9FC")]
			internal bool <WaitUntilDataSpawnedInAllClients>b__0()
			{
				return default(bool);
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000660")]
		[CompilerGenerated]
		private struct <WaitUntilDataSpawnedInAllClients>d__7 : IAsyncStateMachine
		{
			[Token(Token = "0x40022D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40022D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<NetworkObject> <>t__builder;

			[Token(Token = "0x40022D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NetworkPartyGameSettingsManager <>4__this;

			[Token(Token = "0x40022DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken token;

			[Token(Token = "0x40022DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private <>c__DisplayClass7_0 <>8__1;

			[Token(Token = "0x40022DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UniTask<NetworkObject>.Awaiter <>u__1;

			[Token(Token = "0x40022DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private UniTask.Awaiter <>u__2;

			[Token(Token = "0x60019CA")]
			[Address(RVA = "0x1A5FA7C", Offset = "0x1A5FA7C", VA = "0x1A5FA7C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60019CB")]
			[Address(RVA = "0x1A60230", Offset = "0x1A60230", VA = "0x1A60230", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x40022CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private NetworkObject _dataObject;

		[Token(Token = "0x40022CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private NetworkPartyGameSettings _dataEntity;

		[Token(Token = "0x40022CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[Tooltip("must have component of NetworkPartyGameSettings")]
		private NetworkObject _dataObjectPrefab;

		[Token(Token = "0x40022CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Inject]
		private RunnerManagerProvider _runnerManagerProvider;

		[Token(Token = "0x17000294")]
		public NetworkPartyGameSettings Entity
		{
			[Token(Token = "0x60019BE")]
			[Address(RVA = "0x1A5F090", Offset = "0x1A5F090", VA = "0x1A5F090")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000295")]
		protected override bool dontDestroyOnLoad
		{
			[Token(Token = "0x60019C3")]
			[Address(RVA = "0x1A5F424", Offset = "0x1A5F424", VA = "0x1A5F424", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60019BF")]
		[Address(RVA = "0x1A5F098", Offset = "0x1A5F098", VA = "0x1A5F098")]
		[AsyncStateMachine(typeof(<WaitUntilDataReady>d__6))]
		private UniTask<NetworkObject> WaitUntilDataReady(CancellationToken token)
		{
			return default(UniTask<NetworkObject>);
		}

		[Token(Token = "0x60019C0")]
		[Address(RVA = "0x1A5F18C", Offset = "0x1A5F18C", VA = "0x1A5F18C")]
		[AsyncStateMachine(typeof(<WaitUntilDataSpawnedInAllClients>d__7))]
		public UniTask<NetworkObject> WaitUntilDataSpawnedInAllClients(CancellationToken token)
		{
			return default(UniTask<NetworkObject>);
		}

		[Token(Token = "0x60019C1")]
		[Address(RVA = "0x1A5F284", Offset = "0x1A5F284", VA = "0x1A5F284")]
		private void SpawnEntity()
		{
		}

		[Token(Token = "0x60019C2")]
		[Address(RVA = "0x1A5E96C", Offset = "0x1A5E96C", VA = "0x1A5E96C")]
		public void SetEntity(NetworkObject senderObject, NetworkPartyGameSettings senderEntity)
		{
		}

		[Token(Token = "0x60019C4")]
		[Address(RVA = "0x1A5F42C", Offset = "0x1A5F42C", VA = "0x1A5F42C")]
		public NetworkPartyGameSettingsManager()
		{
		}
	}
	[Token(Token = "0x2000661")]
	[NetworkBehaviourWeaved(45)]
	public class NetworkPlayerData : NetworkBehaviour
	{
		[Token(Token = "0x2000662")]
		private class PlayerLeftCallback : INetworkRunnerCallbacks
		{
			[Token(Token = "0x40022E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Action<NetworkRunner, PlayerRef> OnPlayerLeftAction;

			[Token(Token = "0x60019D9")]
			[Address(RVA = "0x1A60628", Offset = "0x1A60628", VA = "0x1A60628")]
			public PlayerLeftCallback(Action<NetworkRunner, PlayerRef> onPlayerLeft)
			{
			}

			[Token(Token = "0x60019DA")]
			[Address(RVA = "0x1A60E0C", Offset = "0x1A60E0C", VA = "0x1A60E0C", Slot = "5")]
			public void OnPlayerLeft(NetworkRunner runner, PlayerRef player)
			{
			}

			[Token(Token = "0x60019DB")]
			[Address(RVA = "0x1A60E34", Offset = "0x1A60E34", VA = "0x1A60E34", Slot = "4")]
			public void OnPlayerJoined(NetworkRunner runner, PlayerRef player)
			{
			}

			[Token(Token = "0x60019DC")]
			[Address(RVA = "0x1A60E38", Offset = "0x1A60E38", VA = "0x1A60E38", Slot = "6")]
			public void OnInput(NetworkRunner runner, NetworkInput input)
			{
			}

			[Token(Token = "0x60019DD")]
			[Address(RVA = "0x1A60E3C", Offset = "0x1A60E3C", VA = "0x1A60E3C", Slot = "7")]
			public void OnInputMissing(NetworkRunner runner, PlayerRef player, NetworkInput input)
			{
			}

			[Token(Token = "0x60019DE")]
			[Address(RVA = "0x1A60E40", Offset = "0x1A60E40", VA = "0x1A60E40", Slot = "8")]
			public void OnShutdown(NetworkRunner runner, ShutdownReason shutdownReason)
			{
			}

			[Token(Token = "0x60019DF")]
			[Address(RVA = "0x1A60E44", Offset = "0x1A60E44", VA = "0x1A60E44", Slot = "9")]
			public void OnConnectedToServer(NetworkRunner runner)
			{
			}

			[Token(Token = "0x60019E0")]
			[Address(RVA = "0x1A60E48", Offset = "0x1A60E48", VA = "0x1A60E48", Slot = "10")]
			public void OnDisconnectedFromServer(NetworkRunner runner)
			{
			}

			[Token(Token = "0x60019E1")]
			[Address(RVA = "0x1A60E4C", Offset = "0x1A60E4C", VA = "0x1A60E4C", Slot = "11")]
			public void OnConnectRequest(NetworkRunner runner, NetworkRunnerCallbackArgs.ConnectRequest request, byte[] token)
			{
			}

			[Token(Token = "0x60019E2")]
			[Address(RVA = "0x1A60E50", Offset = "0x1A60E50", VA = "0x1A60E50", Slot = "12")]
			public void OnConnectFailed(NetworkRunner runner, NetAddress remoteAddress, NetConnectFailedReason reason)
			{
			}

			[Token(Token = "0x60019E3")]
			[Address(RVA = "0x1A60E54", Offset = "0x1A60E54", VA = "0x1A60E54", Slot = "13")]
			public void OnUserSimulationMessage(NetworkRunner runner, SimulationMessagePtr message)
			{
			}

			[Token(Token = "0x60019E4")]
			[Address(RVA = "0x1A60E58", Offset = "0x1A60E58", VA = "0x1A60E58", Slot = "14")]
			public void OnSessionListUpdated(NetworkRunner runner, List<SessionInfo> sessionList)
			{
			}

			[Token(Token = "0x60019E5")]
			[Address(RVA = "0x1A60E5C", Offset = "0x1A60E5C", VA = "0x1A60E5C", Slot = "15")]
			public void OnCustomAuthenticationResponse(NetworkRunner runner, Dictionary<string, object> data)
			{
			}

			[Token(Token = "0x60019E6")]
			[Address(RVA = "0x1A60E60", Offset = "0x1A60E60", VA = "0x1A60E60", Slot = "16")]
			public void OnHostMigration(NetworkRunner runner, HostMigrationToken hostMigrationToken)
			{
			}

			[Token(Token = "0x60019E7")]
			[Address(RVA = "0x1A60E64", Offset = "0x1A60E64", VA = "0x1A60E64", Slot = "17")]
			public void OnReliableDataReceived(NetworkRunner runner, PlayerRef player, ArraySegment<byte> data)
			{
			}

			[Token(Token = "0x60019E8")]
			[Address(RVA = "0x1A60E68", Offset = "0x1A60E68", VA = "0x1A60E68", Slot = "18")]
			public void OnSceneLoadDone(NetworkRunner runner)
			{
			}

			[Token(Token = "0x60019E9")]
			[Address(RVA = "0x1A60E6C", Offset = "0x1A60E6C", VA = "0x1A60E6C", Slot = "19")]
			public void OnSceneLoadStart(NetworkRunner runner)
			{
			}
		}

		[Token(Token = "0x40022DE")]
		private const int MAX_PLAYERS = 6;

		[Token(Token = "0x40022DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private PlayerLeftCallback _playerLeftCallback;

		[Token(Token = "0x40022E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Changed<NetworkPlayerData> $IL2CPP_CHANGED;

		[Token(Token = "0x40022E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static ChangedDelegate<NetworkPlayerData> $IL2CPP_CHANGED_DELEGATE;

		[Token(Token = "0x40022E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static NetworkBehaviourCallbacks<NetworkPlayerData> $IL2CPP_NETWORK_BEHAVIOUR_CALLBACKS;

		[Token(Token = "0x40022E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[DefaultForProperty("Players", 0, 45)]
		private SerializableDictionary<int, PlayerData> _Players;

		[Token(Token = "0x17000296")]
		[Networked]
		[Capacity(6)]
		[NetworkedWeaved(0, 45)]
		private NetworkDictionary<int, PlayerData> Players
		{
			[Token(Token = "0x60019CC")]
			[Address(RVA = "0x1A60288", Offset = "0x1A60288", VA = "0x1A60288")]
			get
			{
				return default(NetworkDictionary<int, PlayerData>);
			}
		}

		[Token(Token = "0x17000297")]
		public int PlayerCount
		{
			[Token(Token = "0x60019CD")]
			[Address(RVA = "0x1A5E288", Offset = "0x1A5E288", VA = "0x1A5E288")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000298")]
		private GrooveFitGame[] DefaultFavoriteGFGames
		{
			[Token(Token = "0x60019D3")]
			[Address(RVA = "0x1A607CC", Offset = "0x1A607CC", VA = "0x1A607CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019CE")]
		[Address(RVA = "0x1A60360", Offset = "0x1A60360", VA = "0x1A60360", Slot = "13")]
		public override void Spawned()
		{
		}

		[Token(Token = "0x60019CF")]
		[Address(RVA = "0x1A60658", Offset = "0x1A60658", VA = "0x1A60658", Slot = "14")]
		public override void Despawned(NetworkRunner runner, bool hasState)
		{
		}

		[Token(Token = "0x60019D0")]
		[Address(RVA = "0x1A60554", Offset = "0x1A60554", VA = "0x1A60554")]
		private void RequestRegister()
		{
		}

		[Token(Token = "0x60019D1")]
		[Address(RVA = "0x1A60954", Offset = "0x1A60954", VA = "0x1A60954")]
		[Rpc(RpcSources.All, RpcTargets.StateAuthority)]
		private void RpcRegisterPlayer(int playerId, PlayerData playerData)
		{
		}

		[Token(Token = "0x60019D2")]
		[Address(RVA = "0x1A5E30C", Offset = "0x1A5E30C", VA = "0x1A5E30C")]
		public List<GrooveFitGame[]> GetFavoriteGFGames()
		{
			return null;
		}

		[Token(Token = "0x60019D4")]
		[Address(RVA = "0x1A60B3C", Offset = "0x1A60B3C", VA = "0x1A60B3C")]
		public NetworkPlayerData()
		{
		}

		[Token(Token = "0x60019D6")]
		[Address(RVA = "0x1A60BDC", Offset = "0x1A60BDC", VA = "0x1A60BDC", Slot = "10")]
		public override void CopyBackingFieldsToState(bool P_0)
		{
		}

		[Token(Token = "0x60019D7")]
		[Address(RVA = "0x1A60CB4", Offset = "0x1A60CB4", VA = "0x1A60CB4", Slot = "11")]
		public override void CopyStateToBackingFields()
		{
		}

		[Token(Token = "0x60019D8")]
		[Address(RVA = "0x1A60D70", Offset = "0x1A60D70", VA = "0x1A60D70")]
		[NetworkRpcWeavedInvoker(1, 7, 1)]
		protected unsafe static void RpcRegisterPlayer@Invoker(NetworkBehaviour behaviour, SimulationMessage* message)
		{
		}
	}
	[Token(Token = "0x2000664")]
	public class NetworkPlayerDataManager : SingletonMonoBehaviour<NetworkPlayerDataManager>
	{
		[StructLayout(3)]
		[Token(Token = "0x2000665")]
		[CompilerGenerated]
		private struct <WaitUntilDataReady>d__7 : IAsyncStateMachine
		{
			[Token(Token = "0x40022EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40022ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<NetworkObject> <>t__builder;

			[Token(Token = "0x40022EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NetworkPlayerDataManager <>4__this;

			[Token(Token = "0x40022EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken token;

			[Token(Token = "0x40022F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x60019F4")]
			[Address(RVA = "0x1A6142C", Offset = "0x1A6142C", VA = "0x1A6142C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60019F5")]
			[Address(RVA = "0x1A618F4", Offset = "0x1A618F4", VA = "0x1A618F4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x2000666")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x40022F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public NetworkPlayerDataManager <>4__this;

			[Token(Token = "0x40022F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public NetworkRunner runner;

			[Token(Token = "0x60019F6")]
			[Address(RVA = "0x1A6194C", Offset = "0x1A6194C", VA = "0x1A6194C")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x60019F7")]
			[Address(RVA = "0x1A61954", Offset = "0x1A61954", VA = "0x1A61954")]
			internal bool <WaitUntilDataSpawnedInAllClients>b__0()
			{
				return default(bool);
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000667")]
		[CompilerGenerated]
		private struct <WaitUntilDataSpawnedInAllClients>d__8 : IAsyncStateMachine
		{
			[Token(Token = "0x40022F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40022F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<NetworkObject> <>t__builder;

			[Token(Token = "0x40022F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NetworkPlayerDataManager <>4__this;

			[Token(Token = "0x40022F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken token;

			[Token(Token = "0x40022F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private <>c__DisplayClass8_0 <>8__1;

			[Token(Token = "0x40022F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UniTask<NetworkObject>.Awaiter <>u__1;

			[Token(Token = "0x40022F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private UniTask.Awaiter <>u__2;

			[Token(Token = "0x60019F8")]
			[Address(RVA = "0x1A619D4", Offset = "0x1A619D4", VA = "0x1A619D4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60019F9")]
			[Address(RVA = "0x1A62188", Offset = "0x1A62188", VA = "0x1A62188", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x40022E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool _dontDestroyOnLoad;

		[Token(Token = "0x40022E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[Tooltip("must have component of NetworkPlayerData")]
		private NetworkObject _dataObjectPrefab;

		[Token(Token = "0x40022E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private NetworkObject _dataObject;

		[Token(Token = "0x40022EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private NetworkPlayerData _dataEntity;

		[Token(Token = "0x40022EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Inject]
		private RunnerManagerProvider _runnerManagerProvider;

		[Token(Token = "0x17000299")]
		public NetworkPlayerData Entity
		{
			[Token(Token = "0x60019EC")]
			[Address(RVA = "0x1A610CC", Offset = "0x1A610CC", VA = "0x1A610CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700029A")]
		protected override bool dontDestroyOnLoad
		{
			[Token(Token = "0x60019F1")]
			[Address(RVA = "0x1A6137C", Offset = "0x1A6137C", VA = "0x1A6137C", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60019ED")]
		[Address(RVA = "0x1A610D4", Offset = "0x1A610D4", VA = "0x1A610D4")]
		[AsyncStateMachine(typeof(<WaitUntilDataReady>d__7))]
		public UniTask<NetworkObject> WaitUntilDataReady(CancellationToken token)
		{
			return default(UniTask<NetworkObject>);
		}

		[Token(Token = "0x60019EE")]
		[Address(RVA = "0x1A5E424", Offset = "0x1A5E424", VA = "0x1A5E424")]
		[AsyncStateMachine(typeof(<WaitUntilDataSpawnedInAllClients>d__8))]
		public UniTask<NetworkObject> WaitUntilDataSpawnedInAllClients(CancellationToken token)
		{
			return default(UniTask<NetworkObject>);
		}

		[Token(Token = "0x60019EF")]
		[Address(RVA = "0x1A611C8", Offset = "0x1A611C8", VA = "0x1A611C8")]
		private void SpawnEntity()
		{
		}

		[Token(Token = "0x60019F0")]
		[Address(RVA = "0x1A60524", Offset = "0x1A60524", VA = "0x1A60524")]
		public void SetEntity(NetworkObject dataObject, NetworkPlayerData favoriteGfEntity)
		{
		}

		[Token(Token = "0x60019F2")]
		[Address(RVA = "0x1A61384", Offset = "0x1A61384", VA = "0x1A61384")]
		public NetworkPlayerDataManager()
		{
		}
	}
	[StructLayout(2)]
	[Token(Token = "0x2000668")]
	[NetworkStructWeaved(3)]
	public struct PlayerData : INetworkStruct
	{
		[Token(Token = "0x40022FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[FixedBufferProperty(typeof(NetworkArray<int>), typeof(UnityArraySurrogate@ReaderWriter@System_Int32), 3, order = -2147483647)]
		private FixedStorage@3 _favoriteGrooveFits;

		[Token(Token = "0x1700029B")]
		[Networked]
		[Capacity(3)]
		private NetworkArray<int> favoriteGrooveFits
		{
			[Token(Token = "0x60019FA")]
			[Address(RVA = "0x1A621E0", Offset = "0x1A621E0", VA = "0x1A621E0")]
			get
			{
				return default(NetworkArray<int>);
			}
		}

		[Token(Token = "0x60019FB")]
		[Address(RVA = "0x1A60844", Offset = "0x1A60844", VA = "0x1A60844")]
		public PlayerData(GrooveFitGame[] favoriteGames)
		{
		}

		[Token(Token = "0x60019FC")]
		[Address(RVA = "0x1A60F54", Offset = "0x1A60F54", VA = "0x1A60F54")]
		public GrooveFitGame[] GetFavoriteGFGames()
		{
			return null;
		}
	}
	[Token(Token = "0x200066A")]
	public interface IStartJingleSelector
	{
		[Token(Token = "0x6001A00")]
		MedleyStartJingle GetJingle();
	}
	[Token(Token = "0x200066B")]
	[CreateAssetMenu(menuName = "ScriptableObjects/MedleyStartJingle")]
	public class MedleyStartJingle : ScriptableObject
	{
		[Token(Token = "0x40022FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip Clip;

		[Token(Token = "0x40022FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float BPM;

		[Token(Token = "0x6001A01")]
		[Address(RVA = "0x1A622DC", Offset = "0x1A622DC", VA = "0x1A622DC")]
		public MedleyStartJingle()
		{
		}
	}
	[Token(Token = "0x200066C")]
	public class RandomStartJingleSelector : MonoBehaviour, IStartJingleSelector
	{
		[Token(Token = "0x40022FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<MedleyStartJingle> _candidates;

		[Token(Token = "0x6001A02")]
		[Address(RVA = "0x1A622EC", Offset = "0x1A622EC", VA = "0x1A622EC", Slot = "4")]
		public MedleyStartJingle GetJingle()
		{
			return null;
		}

		[Token(Token = "0x6001A03")]
		[Address(RVA = "0x1A62360", Offset = "0x1A62360", VA = "0x1A62360")]
		public RandomStartJingleSelector()
		{
		}
	}
	[Token(Token = "0x200066D")]
	public class TransformVelocityCalcurater : MonoBehaviour
	{
		[Token(Token = "0x4002300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int _bufferFrames;

		[Token(Token = "0x4002301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Queue<Vector3> _velocities;

		[Token(Token = "0x4002302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 previousPosition;

		[Token(Token = "0x1700029C")]
		public Vector3 Velocity
		{
			[Token(Token = "0x6001A06")]
			[Address(RVA = "0x1A62568", Offset = "0x1A62568", VA = "0x1A62568")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700029D")]
		public float SquaredSpeed
		{
			[Token(Token = "0x6001A07")]
			[Address(RVA = "0x1A626E4", Offset = "0x1A626E4", VA = "0x1A626E4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700029E")]
		public float Speed
		{
			[Token(Token = "0x6001A08")]
			[Address(RVA = "0x1A6281C", Offset = "0x1A6281C", VA = "0x1A6281C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001A04")]
		[Address(RVA = "0x1A623E8", Offset = "0x1A623E8", VA = "0x1A623E8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A05")]
		[Address(RVA = "0x1A624C8", Offset = "0x1A624C8", VA = "0x1A624C8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001A09")]
		[Address(RVA = "0x1A62830", Offset = "0x1A62830", VA = "0x1A62830")]
		public TransformVelocityCalcurater()
		{
		}
	}
	[Token(Token = "0x200066F")]
	public class MultilingualRankingUpdateText : MonoBehaviour
	{
		[Token(Token = "0x4002306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string _keyDefault;

		[Token(Token = "0x4002307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string _keyPicoChina;

		[Token(Token = "0x4002308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Header("Dubeg")]
		[SerializeField]
		private bool _forceChina;

		[Token(Token = "0x4002309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TextMeshPro _textMeshPro;

		[Token(Token = "0x400230A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _defaultFontSize;

		[Token(Token = "0x400230B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Inject]
		private MultilingualTextManager _multilingualTextManager;

		[Token(Token = "0x400230C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool _isFirst;

		[Token(Token = "0x6001A0E")]
		[Address(RVA = "0x1A62964", Offset = "0x1A62964", VA = "0x1A62964")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A0F")]
		[Address(RVA = "0x1A6296C", Offset = "0x1A6296C", VA = "0x1A6296C")]
		private void SetTextMeshPro(string key)
		{
		}

		[Token(Token = "0x6001A10")]
		[Address(RVA = "0x1A62B14", Offset = "0x1A62B14", VA = "0x1A62B14")]
		public MultilingualRankingUpdateText()
		{
		}
	}
	[Token(Token = "0x2000670")]
	public class GolfClubHead : TransformVelocityCalcurater
	{
		[Token(Token = "0x400230D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		public bool IsMirrored;

		[Token(Token = "0x1700029F")]
		public Vector3 HitDirection
		{
			[Token(Token = "0x6001A11")]
			[Address(RVA = "0x1A62B24", Offset = "0x1A62B24", VA = "0x1A62B24")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6001A12")]
		[Address(RVA = "0x1A62B5C", Offset = "0x1A62B5C", VA = "0x1A62B5C")]
		public GolfClubHead()
		{
		}
	}
}
namespace Imacreate.GrooveFitIsland.S1_Title
{
	[Token(Token = "0x2000671")]
	[HelpURL("https://nvjob.github.io/unity/nvjob-boids")]
	[AddComponentMenu("#NVJOB/Boids/Simple Boids")]
	public class NVBoids : MonoBehaviour
	{
		[Token(Token = "0x2000672")]
		[CompilerGenerated]
		private sealed class <Danger>d__46 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002338")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002339")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400233A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NVBoids <>4__this;

			[Token(Token = "0x170002A0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001A20")]
				[Address(RVA = "0x1A63CF0", Offset = "0x1A63CF0", VA = "0x1A63CF0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002A1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001A22")]
				[Address(RVA = "0x1A63D38", Offset = "0x1A63D38", VA = "0x1A63D38", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A1D")]
			[Address(RVA = "0x1A6395C", Offset = "0x1A6395C", VA = "0x1A6395C")]
			[DebuggerHidden]
			public <Danger>d__46(int <>1__state)
			{
			}

			[Token(Token = "0x6001A1E")]
			[Address(RVA = "0x1A63AC8", Offset = "0x1A63AC8", VA = "0x1A63AC8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001A1F")]
			[Address(RVA = "0x1A63ACC", Offset = "0x1A63ACC", VA = "0x1A63ACC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A21")]
			[Address(RVA = "0x1A63CF8", Offset = "0x1A63CF8", VA = "0x1A63CF8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000673")]
		[CompilerGenerated]
		private sealed class <BehavioralChange>d__47 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400233B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400233C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400233D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NVBoids <>4__this;

			[Token(Token = "0x170002A2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001A26")]
				[Address(RVA = "0x1A63F7C", Offset = "0x1A63F7C", VA = "0x1A63F7C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002A3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001A28")]
				[Address(RVA = "0x1A63FC4", Offset = "0x1A63FC4", VA = "0x1A63FC4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A23")]
			[Address(RVA = "0x1A63984", Offset = "0x1A63984", VA = "0x1A63984")]
			[DebuggerHidden]
			public <BehavioralChange>d__47(int <>1__state)
			{
			}

			[Token(Token = "0x6001A24")]
			[Address(RVA = "0x1A63D40", Offset = "0x1A63D40", VA = "0x1A63D40", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001A25")]
			[Address(RVA = "0x1A63D44", Offset = "0x1A63D44", VA = "0x1A63D44", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A27")]
			[Address(RVA = "0x1A63F84", Offset = "0x1A63F84", VA = "0x1A63F84", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400230E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("General Settings")]
		public Vector2 behavioralCh;

		[Token(Token = "0x400230F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool debug;

		[Token(Token = "0x4002310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Header("Flock Settings")]
		[Range(1f, 150f)]
		public int flockNum;

		[Token(Token = "0x4002311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Range(0f, 5000f)]
		public int fragmentedFlock;

		[Token(Token = "0x4002312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[Range(0f, 1f)]
		public float fragmentedFlockYLimit;

		[Token(Token = "0x4002313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Range(0f, 1f)]
		public float migrationFrequency;

		[Token(Token = "0x4002314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[Range(0f, 1f)]
		public float posChangeFrequency;

		[Token(Token = "0x4002315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Range(0f, 100f)]
		public float smoothChFrequency;

		[Token(Token = "0x4002316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Header("Bird Settings")]
		public GameObject birdPref;

		[Token(Token = "0x4002317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Range(1f, 9999f)]
		public int birdsNum;

		[Token(Token = "0x4002318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[Range(0f, 150f)]
		public float birdSpeed;

		[Token(Token = "0x4002319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Range(0f, 100f)]
		public int fragmentedBirds;

		[Token(Token = "0x400231A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[Range(0f, 1f)]
		public float fragmentedBirdsYLimit;

		[Token(Token = "0x400231B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Range(0f, 10f)]
		public float soaring;

		[Token(Token = "0x400231C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[Range(0.01f, 500f)]
		public float verticalWawe;

		[Token(Token = "0x400231D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool rotationClamp;

		[Token(Token = "0x400231E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[Range(0f, 360f)]
		public float rotationClampValue;

		[Token(Token = "0x400231F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Vector2 scaleRandom;

		[Token(Token = "0x4002320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[Header("Danger Settings (one flock)")]
		public bool danger;

		[Token(Token = "0x4002321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float dangerRadius;

		[Token(Token = "0x4002322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float dangerSpeed;

		[Token(Token = "0x4002323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float dangerSoaring;

		[Token(Token = "0x4002324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public LayerMask dangerLayer;

		[Token(Token = "0x4002325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[Header("Information")]
		public string HelpURL;

		[Token(Token = "0x4002326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public string ReportAProblem;

		[Token(Token = "0x4002327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public string Patrons;

		[Token(Token = "0x4002328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Transform thisTransform;

		[Token(Token = "0x4002329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Transform dangerTransform;

		[Token(Token = "0x400232A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private int dangerBird;

		[Token(Token = "0x400232B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Transform[] birdsTransform;

		[Token(Token = "0x400232C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Transform[] flocksTransform;

		[Token(Token = "0x400232D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Vector3[] rdTargetPos;

		[Token(Token = "0x400232E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Vector3[] flockPos;

		[Token(Token = "0x400232F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Vector3[] velFlocks;

		[Token(Token = "0x4002330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private float[] birdsSpeed;

		[Token(Token = "0x4002331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float[] birdsSpeedCur;

		[Token(Token = "0x4002332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private float[] spVelocity;

		[Token(Token = "0x4002333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private int[] curentFlock;

		[Token(Token = "0x4002334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private float dangerSpeedCh;

		[Token(Token = "0x4002335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private float dangerSoaringCh;

		[Token(Token = "0x4002336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private float timeTime;

		[Token(Token = "0x4002337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static WaitForSeconds delay0;

		[Token(Token = "0x6001A13")]
		[Address(RVA = "0x1A62B60", Offset = "0x1A62B60", VA = "0x1A62B60")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A14")]
		[Address(RVA = "0x1A63380", Offset = "0x1A63380", VA = "0x1A63380")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001A15")]
		[Address(RVA = "0x1A63398", Offset = "0x1A63398", VA = "0x1A63398")]
		private void FlocksMove()
		{
		}

		[Token(Token = "0x6001A16")]
		[Address(RVA = "0x1A634D8", Offset = "0x1A634D8", VA = "0x1A634D8")]
		private void BirdsMove()
		{
		}

		[Token(Token = "0x6001A17")]
		[Address(RVA = "0x1A6330C", Offset = "0x1A6330C", VA = "0x1A6330C")]
		[IteratorStateMachine(typeof(<Danger>d__46))]
		private IEnumerator Danger()
		{
			return null;
		}

		[Token(Token = "0x6001A18")]
		[Address(RVA = "0x1A63298", Offset = "0x1A63298", VA = "0x1A63298")]
		[IteratorStateMachine(typeof(<BehavioralChange>d__47))]
		private IEnumerator BehavioralChange()
		{
			return null;
		}

		[Token(Token = "0x6001A19")]
		[Address(RVA = "0x1A62BC4", Offset = "0x1A62BC4", VA = "0x1A62BC4")]
		private void CreateFlock()
		{
		}

		[Token(Token = "0x6001A1A")]
		[Address(RVA = "0x1A62EE0", Offset = "0x1A62EE0", VA = "0x1A62EE0")]
		private void CreateBird()
		{
		}

		[Token(Token = "0x6001A1B")]
		[Address(RVA = "0x1A638D8", Offset = "0x1A638D8", VA = "0x1A638D8")]
		private static Quaternion BirdsRotationClamp(Quaternion rotationCur, float rotationClampValue)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001A1C")]
		[Address(RVA = "0x1A639AC", Offset = "0x1A639AC", VA = "0x1A639AC")]
		public NVBoids()
		{
		}
	}
	[Token(Token = "0x2000674")]
	public class ObjectRotater : MonoBehaviour
	{
		[Token(Token = "0x400233E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _propeller;

		[Token(Token = "0x400233F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _speed;

		[Token(Token = "0x6001A29")]
		[Address(RVA = "0x1A63FCC", Offset = "0x1A63FCC", VA = "0x1A63FCC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A2A")]
		[Address(RVA = "0x1A64034", Offset = "0x1A64034", VA = "0x1A64034")]
		public ObjectRotater()
		{
		}
	}
	[Token(Token = "0x2000675")]
	public class OpeningResetter : MonoBehaviour
	{
		[Token(Token = "0x6001A2B")]
		[Address(RVA = "0x1A64044", Offset = "0x1A64044", VA = "0x1A64044")]
		public OpeningResetter()
		{
		}
	}
	[Token(Token = "0x2000676")]
	public class PressTriggerAwaitEvent : EventBlock
	{
		[StructLayout(3)]
		[Token(Token = "0x2000677")]
		[CompilerGenerated]
		private struct <SetEvent>d__4 : IAsyncStateMachine
		{
			[Token(Token = "0x4002343")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002344")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x4002345")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PressTriggerAwaitEvent <>4__this;

			[Token(Token = "0x4002346")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken token;

			[Token(Token = "0x4002347")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private bool <triggerPressed>5__2;

			[Token(Token = "0x4002348")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <time>5__3;

			[Token(Token = "0x4002349")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6001A2F")]
			[Address(RVA = "0x1A64154", Offset = "0x1A64154", VA = "0x1A64154", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001A30")]
			[Address(RVA = "0x1A64628", Offset = "0x1A64628", VA = "0x1A64628", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4002340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Renderer _pressTriggerObg;

		[Token(Token = "0x4002341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _interval;

		[Token(Token = "0x4002342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Inject]
		private InputProvider _inputProvider;

		[Token(Token = "0x6001A2C")]
		[Address(RVA = "0x1A6404C", Offset = "0x1A6404C", VA = "0x1A6404C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A2D")]
		[Address(RVA = "0x1A6406C", Offset = "0x1A6406C", VA = "0x1A6406C", Slot = "4")]
		[AsyncStateMachine(typeof(<SetEvent>d__4))]
		public override UniTask<bool> SetEvent(CancellationToken token)
		{
			return default(UniTask<bool>);
		}

		[Token(Token = "0x6001A2E")]
		[Address(RVA = "0x1A6414C", Offset = "0x1A6414C", VA = "0x1A6414C")]
		public PressTriggerAwaitEvent()
		{
		}
	}
	[Token(Token = "0x2000678")]
	public class TitleDanceEvent : EventBlock
	{
		[Token(Token = "0x2000679")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass15_0
		{
			[Token(Token = "0x4002358")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float secondsPerBeat;

			[Token(Token = "0x4002359")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public CancellationToken token;

			[Token(Token = "0x400235A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TitleDanceEvent <>4__this;

			[Token(Token = "0x400235B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 logoLiteScale;

			[Token(Token = "0x6001A34")]
			[Address(RVA = "0x1A647C4", Offset = "0x1A647C4", VA = "0x1A647C4")]
			public <>c__DisplayClass15_0()
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200067B")]
		[CompilerGenerated]
		private struct <SetEvent>d__15 : IAsyncStateMachine
		{
			[Token(Token = "0x4002360")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002361")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x4002362")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CancellationToken token;

			[Token(Token = "0x4002363")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TitleDanceEvent <>4__this;

			[Token(Token = "0x4002364")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private <>c__DisplayClass15_0 <>8__1;

			[Token(Token = "0x4002365")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private bool <triggerPressed>5__2;

			[Token(Token = "0x4002366")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private Vector3 <logoTopScale>5__3;

			[Token(Token = "0x4002367")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Vector3 <note0Scale>5__4;

			[Token(Token = "0x4002368")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private Quaternion <note0Rot>5__5;

			[Token(Token = "0x4002369")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			private Vector3 <note1Scale>5__6;

			[Token(Token = "0x400236A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private Quaternion <note1Rot>5__7;

			[Token(Token = "0x400236B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			private Vector3 <logoBottomScale>5__8;

			[Token(Token = "0x400236C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6001A38")]
			[Address(RVA = "0x1A64CD8", Offset = "0x1A64CD8", VA = "0x1A64CD8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001A39")]
			[Address(RVA = "0x1A66348", Offset = "0x1A66348", VA = "0x1A66348", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x400234A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _bgm;

		[Token(Token = "0x400234B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int _danceDelayBeat;

		[Token(Token = "0x400234C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private CanvasGroup _logoBaseCanvas;

		[Token(Token = "0x400234D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform _logoTop;

		[Token(Token = "0x400234E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Transform _note_0;

		[Token(Token = "0x400234F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Transform _note_1;

		[Token(Token = "0x4002350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Transform _logoBottom;

		[Token(Token = "0x4002351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private SpriteRenderer _pressTriggerBG;

		[Token(Token = "0x4002352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private MeshRenderer _pressTriggerText;

		[Token(Token = "0x4002353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Inject]
		private InputProvider _inputProvider;

		[Token(Token = "0x4002354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Header("AppLabOnly")]
		[SerializeField]
		private Transform _logoLite;

		[Token(Token = "0x4002355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private readonly float _bpm;

		[Token(Token = "0x4002356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int _currentBeat;

		[Token(Token = "0x4002357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool _achivflag;

		[Token(Token = "0x6001A31")]
		[Address(RVA = "0x1A64680", Offset = "0x1A64680", VA = "0x1A64680")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A32")]
		[Address(RVA = "0x1A646D8", Offset = "0x1A646D8", VA = "0x1A646D8", Slot = "4")]
		[AsyncStateMachine(typeof(<SetEvent>d__15))]
		public override UniTask<bool> SetEvent(CancellationToken token)
		{
			return default(UniTask<bool>);
		}

		[Token(Token = "0x6001A33")]
		[Address(RVA = "0x1A647AC", Offset = "0x1A647AC", VA = "0x1A647AC")]
		public TitleDanceEvent()
		{
		}
	}
	[Token(Token = "0x200067C")]
	[RequireComponent(typeof(AudioSource))]
	public class TitleExitEvent : EventBlock
	{
		[StructLayout(3)]
		[Token(Token = "0x200067D")]
		[CompilerGenerated]
		private struct <SetEvent>d__4 : IAsyncStateMachine
		{
			[Token(Token = "0x4002371")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002372")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x4002373")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TitleExitEvent <>4__this;

			[Token(Token = "0x4002374")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken token;

			[Token(Token = "0x4002375")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private bool <openingFinished>5__2;

			[Token(Token = "0x4002376")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private string <nextScene>5__3;

			[Token(Token = "0x4002377")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6001A3C")]
			[Address(RVA = "0x1A66488", Offset = "0x1A66488", VA = "0x1A66488", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001A3D")]
			[Address(RVA = "0x1A66EB8", Offset = "0x1A66EB8", VA = "0x1A66EB8", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x400236D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioClip _enterSound;

		[Token(Token = "0x400236E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource _bgmSource;

		[Token(Token = "0x400236F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AudioSource _audio;

		[Token(Token = "0x4002370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Inject]
		private InputProvider _inputProvider;

		[Token(Token = "0x6001A3A")]
		[Address(RVA = "0x1A663A0", Offset = "0x1A663A0", VA = "0x1A663A0", Slot = "4")]
		[AsyncStateMachine(typeof(<SetEvent>d__4))]
		public override UniTask<bool> SetEvent(CancellationToken token)
		{
			return default(UniTask<bool>);
		}

		[Token(Token = "0x6001A3B")]
		[Address(RVA = "0x1A66480", Offset = "0x1A66480", VA = "0x1A66480")]
		public TitleExitEvent()
		{
		}
	}
	[Token(Token = "0x200067E")]
	public class TitleFadeInEvent : EventBlock
	{
		[StructLayout(3)]
		[Token(Token = "0x200067F")]
		[CompilerGenerated]
		private struct <SetEvent>d__1 : IAsyncStateMachine
		{
			[Token(Token = "0x4002379")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400237A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x400237B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TitleFadeInEvent <>4__this;

			[Token(Token = "0x400237C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken token;

			[Token(Token = "0x400237D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6001A41")]
			[Address(RVA = "0x1A670A8", Offset = "0x1A670A8", VA = "0x1A670A8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001A42")]
			[Address(RVA = "0x1A67718", Offset = "0x1A67718", VA = "0x1A67718", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000680")]
		[CompilerGenerated]
		private struct <ActivateDarkAreaDetector>d__2 : IAsyncStateMachine
		{
			[Token(Token = "0x400237E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400237F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4002380")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TitleFadeInEvent <>4__this;

			[Token(Token = "0x4002381")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6001A43")]
			[Address(RVA = "0x1A67770", Offset = "0x1A67770", VA = "0x1A67770", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001A44")]
			[Address(RVA = "0x1A67AAC", Offset = "0x1A67AAC", VA = "0x1A67AAC", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4002378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Inject]
		private InputProvider _inputProvider;

		[Token(Token = "0x6001A3E")]
		[Address(RVA = "0x1A66F10", Offset = "0x1A66F10", VA = "0x1A66F10", Slot = "4")]
		[AsyncStateMachine(typeof(<SetEvent>d__1))]
		public override UniTask<bool> SetEvent(CancellationToken token)
		{
			return default(UniTask<bool>);
		}

		[Token(Token = "0x6001A3F")]
		[Address(RVA = "0x1A66FEC", Offset = "0x1A66FEC", VA = "0x1A66FEC")]
		[AsyncStateMachine(typeof(<ActivateDarkAreaDetector>d__2))]
		private void ActivateDarkAreaDetector()
		{
		}

		[Token(Token = "0x6001A40")]
		[Address(RVA = "0x1A670A0", Offset = "0x1A670A0", VA = "0x1A670A0")]
		public TitleFadeInEvent()
		{
		}
	}
	[Token(Token = "0x2000681")]
	public class TitleManager : MonoBehaviour
	{
		[Token(Token = "0x4002382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private EventBlockDirector _eventBlockDirector;

		[Token(Token = "0x4002383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CancellationTokenSource _token;

		[Token(Token = "0x4002384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Inject]
		private InputProvider _inputProvider;

		[Token(Token = "0x6001A45")]
		[Address(RVA = "0x1A67AB8", Offset = "0x1A67AB8", VA = "0x1A67AB8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A46")]
		[Address(RVA = "0x1A67B6C", Offset = "0x1A67B6C", VA = "0x1A67B6C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001A47")]
		[Address(RVA = "0x1A67B9C", Offset = "0x1A67B9C", VA = "0x1A67B9C")]
		public TitleManager()
		{
		}
	}
}
namespace Imacreate.GrooveFitIsland.S0_Splash
{
	[Token(Token = "0x2000682")]
	public class SplashSceneController : MonoBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x2000683")]
		[CompilerGenerated]
		private struct <Start>d__8 : IAsyncStateMachine
		{
			[Token(Token = "0x400238D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400238E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x400238F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SplashSceneController <>4__this;

			[Token(Token = "0x4002390")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private CancellationToken <token>5__2;

			[Token(Token = "0x4002391")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6001A4E")]
			[Address(RVA = "0x1A67D6C", Offset = "0x1A67D6C", VA = "0x1A67D6C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001A4F")]
			[Address(RVA = "0x1A68B14", Offset = "0x1A68B14", VA = "0x1A68B14", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000684")]
		[CompilerGenerated]
		private struct <MoveScene>d__9 : IAsyncStateMachine
		{
			[Token(Token = "0x4002392")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002393")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4002394")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SplashSceneController <>4__this;

			[Token(Token = "0x4002395")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6001A50")]
			[Address(RVA = "0x1A68B20", Offset = "0x1A68B20", VA = "0x1A68B20", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001A51")]
			[Address(RVA = "0x1A68F88", Offset = "0x1A68F88", VA = "0x1A68F88", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4002385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Inject]
		private InputProvider _inputProvider;

		[Token(Token = "0x4002386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string _nextScene;

		[Token(Token = "0x4002387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float _startVideoTime;

		[Token(Token = "0x4002388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float _startFadeTime;

		[Token(Token = "0x4002389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private VideoPlayer _videoPlayer;

		[Token(Token = "0x400238A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private RenderTexture _renderTexture;

		[Token(Token = "0x400238B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject _hideRawImageSphere;

		[Token(Token = "0x400238C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private RawImage _videoTexture;

		[Token(Token = "0x6001A48")]
		[Address(RVA = "0x1A67BA4", Offset = "0x1A67BA4", VA = "0x1A67BA4")]
		[AsyncStateMachine(typeof(<Start>d__8))]
		private void Start()
		{
		}

		[Token(Token = "0x6001A49")]
		[Address(RVA = "0x1A67C5C", Offset = "0x1A67C5C", VA = "0x1A67C5C")]
		[AsyncStateMachine(typeof(<MoveScene>d__9))]
		private void MoveScene()
		{
		}

		[Token(Token = "0x6001A4A")]
		[Address(RVA = "0x1A67D10", Offset = "0x1A67D10", VA = "0x1A67D10")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001A4B")]
		[Address(RVA = "0x1A67D2C", Offset = "0x1A67D2C", VA = "0x1A67D2C")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6001A4C")]
		[Address(RVA = "0x1A67D48", Offset = "0x1A67D48", VA = "0x1A67D48")]
		public SplashSceneController()
		{
		}
	}
}
namespace Imacreate.GrooveFitIsland.M2_Party
{
	[Token(Token = "0x2000685")]
	public class AllPlayersStandByEventBlock : EventBlock
	{
		[StructLayout(3)]
		[Token(Token = "0x2000687")]
		[CompilerGenerated]
		private struct <SetEvent>d__1 : IAsyncStateMachine
		{
			[Token(Token = "0x4002399")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400239A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x400239B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AllPlayersStandByEventBlock <>4__this;

			[Token(Token = "0x400239C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken token;

			[Token(Token = "0x400239D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6001A57")]
			[Address(RVA = "0x1A69140", Offset = "0x1A69140", VA = "0x1A69140", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001A58")]
			[Address(RVA = "0x1A697F8", Offset = "0x1A697F8", VA = "0x1A697F8", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4002396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool isNetworkIgnoreDebug;

		[Token(Token = "0x6001A52")]
		[Address(RVA = "0x1A68F94", Offset = "0x1A68F94", VA = "0x1A68F94", Slot = "4")]
		[AsyncStateMachine(typeof(<SetEvent>d__1))]
		public override UniTask<bool> SetEvent(CancellationToken token)
		{
			return default(UniTask<bool>);
		}

		[Token(Token = "0x6001A53")]
		[Address(RVA = "0x1A69070", Offset = "0x1A69070", VA = "0x1A69070")]
		public AllPlayersStandByEventBlock()
		{
		}
	}
	[Token(Token = "0x2000688")]
	public class MedleyPartyInitializer : MonoBehaviour
	{
		[Token(Token = "0x2000689")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x40023A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public NetworkedAvatarManager v;

			[Token(Token = "0x6001A5B")]
			[Address(RVA = "0x1A69914", Offset = "0x1A69914", VA = "0x1A69914")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x6001A5C")]
			[Address(RVA = "0x1A6991C", Offset = "0x1A6991C", VA = "0x1A6991C")]
			internal bool <InitializePlayerPosition>b__1()
			{
				return default(bool);
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200068B")]
		[CompilerGenerated]
		private struct <InitializePlayerPosition>d__8 : IAsyncStateMachine
		{
			[Token(Token = "0x40023A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40023AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40023AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MedleyPartyInitializer <>4__this;

			[Token(Token = "0x40023AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private <>c__DisplayClass8_0 <>8__1;

			[Token(Token = "0x40023AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private List<Transform> <unitTf>5__2;

			[Token(Token = "0x40023AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private List<NetworkedAvatarManager>.Enumerator <>7__wrap2;

			[Token(Token = "0x40023AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6001A60")]
			[Address(RVA = "0x1A69A0C", Offset = "0x1A69A0C", VA = "0x1A69A0C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001A61")]
			[Address(RVA = "0x1A6A504", Offset = "0x1A6A504", VA = "0x1A6A504", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x400239E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Inject]
		private RunnerManagerProvider _runnerManagerProvider;

		[Token(Token = "0x400239F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Inject]
		private PhotonAvatarSpawner _photonAvatarSpawner;

		[Token(Token = "0x40023A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject unit;

		[Token(Token = "0x40023A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private List<Transform> unitTf2;

		[Token(Token = "0x40023A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private List<Transform> unitTf3;

		[Token(Token = "0x40023A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private List<Transform> unitTf4;

		[Token(Token = "0x40023A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private List<Transform> unitTf5;

		[Token(Token = "0x40023A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private List<Transform> unitTf6;

		[Token(Token = "0x6001A59")]
		[Address(RVA = "0x1A69850", Offset = "0x1A69850", VA = "0x1A69850")]
		[AsyncStateMachine(typeof(<InitializePlayerPosition>d__8))]
		public void InitializePlayerPosition()
		{
		}

		[Token(Token = "0x6001A5A")]
		[Address(RVA = "0x1A6990C", Offset = "0x1A6990C", VA = "0x1A6990C")]
		public MedleyPartyInitializer()
		{
		}
	}
	[Token(Token = "0x200068C")]
	[NetworkBehaviourWeaved(1)]
	public class NetworkedMedleyGameScoreAndLifeModel : NetworkBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x200068D")]
		[CompilerGenerated]
		private struct <Start>d__22 : IAsyncStateMachine
		{
			[Token(Token = "0x40023BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40023C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40023C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public NetworkedMedleyGameScoreAndLifeModel <>4__this;

			[Token(Token = "0x40023C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6001A7B")]
			[Address(RVA = "0x1A6B244", Offset = "0x1A6B244", VA = "0x1A6B244", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001A7C")]
			[Address(RVA = "0x1A6B96C", Offset = "0x1A6B96C", VA = "0x1A6B96C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200068E")]
		[CompilerGenerated]
		private struct <CountUpScore>d__24 : IAsyncStateMachine
		{
			[Token(Token = "0x40023C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40023C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40023C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public NetworkedMedleyGameScoreAndLifeModel <>4__this;

			[Token(Token = "0x40023C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float newScore;

			[Token(Token = "0x40023C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <elaspedTime>5__2;

			[Token(Token = "0x40023C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <time>5__3;

			[Token(Token = "0x40023C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6001A7D")]
			[Address(RVA = "0x1A6B978", Offset = "0x1A6B978", VA = "0x1A6B978", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001A7E")]
			[Address(RVA = "0x1A6BD90", Offset = "0x1A6BD90", VA = "0x1A6BD90", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x40023B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private RunnerManagerProvider _runnerManagerProvider;

		[Token(Token = "0x40023B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[Inject]
		private ISubscriber<LifeChangeData> _lifeChangeDataSubscriber;

		[Token(Token = "0x40023B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[DefaultForProperty("playerID", 0, 1)]
		private int _playerID;

		[Token(Token = "0x40023B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private bool isLocal;

		[Token(Token = "0x40023B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Action<string> OnCountUpScoreViewAction;

		[Token(Token = "0x40023B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Action<int> OnDecreaseScoreViewAction;

		[Token(Token = "0x40023B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Action OnResetViewAction;

		[Token(Token = "0x40023B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Action<bool> OnIsVisualizable;

		[Token(Token = "0x40023BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Action<LifeChangeData.LifeChangeState, int> OnLifeChangedAction;

		[Token(Token = "0x40023BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float _lastScore;

		[Token(Token = "0x40023BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Changed<NetworkedMedleyGameScoreAndLifeModel> $IL2CPP_CHANGED;

		[Token(Token = "0x40023BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static ChangedDelegate<NetworkedMedleyGameScoreAndLifeModel> $IL2CPP_CHANGED_DELEGATE;

		[Token(Token = "0x40023BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static NetworkBehaviourCallbacks<NetworkedMedleyGameScoreAndLifeModel> $IL2CPP_NETWORK_BEHAVIOUR_CALLBACKS;

		[Token(Token = "0x170002A4")]
		[Inject]
		private ISubscriber<CurrentScoreData> CurrentScoreMessage
		{
			[Token(Token = "0x6001A63")]
			[Address(RVA = "0x1A6A518", Offset = "0x1A6A518", VA = "0x1A6A518")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A64")]
			[Address(RVA = "0x1A6A520", Offset = "0x1A6A520", VA = "0x1A6A520")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002A5")]
		[Inject]
		private ISubscriber<DecreaseScoreData> DecreaseScoreMassage
		{
			[Token(Token = "0x6001A65")]
			[Address(RVA = "0x1A6A528", Offset = "0x1A6A528", VA = "0x1A6A528")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A66")]
			[Address(RVA = "0x1A6A530", Offset = "0x1A6A530", VA = "0x1A6A530")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002A6")]
		[Networked]
		[NetworkedWeaved(0, 1)]
		private int playerID
		{
			[Token(Token = "0x6001A67")]
			[Address(RVA = "0x1A6A538", Offset = "0x1A6A538", VA = "0x1A6A538")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001A68")]
			[Address(RVA = "0x1A6A59C", Offset = "0x1A6A59C", VA = "0x1A6A59C")]
			set
			{
			}
		}

		[Token(Token = "0x6001A62")]
		[Address(RVA = "0x1A6A510", Offset = "0x1A6A510", VA = "0x1A6A510")]
		[Inject]
		private void Injection(RunnerManagerProvider runnerManagerProvider)
		{
		}

		[Token(Token = "0x6001A69")]
		[Address(RVA = "0x1A6A600", Offset = "0x1A6A600", VA = "0x1A6A600")]
		[AsyncStateMachine(typeof(<Start>d__22))]
		private void Start()
		{
		}

		[Token(Token = "0x6001A6A")]
		[Address(RVA = "0x1A6A6B4", Offset = "0x1A6A6B4", VA = "0x1A6A6B4")]
		public void PlayerIDSet(int id)
		{
		}

		[Token(Token = "0x6001A6B")]
		[Address(RVA = "0x1A6A6B8", Offset = "0x1A6A6B8", VA = "0x1A6A6B8")]
		[AsyncStateMachine(typeof(<CountUpScore>d__24))]
		private void CountUpScore(float newScore)
		{
		}

		[Token(Token = "0x6001A6C")]
		[Address(RVA = "0x1A6A780", Offset = "0x1A6A780", VA = "0x1A6A780")]
		[Rpc(RpcSources.All, RpcTargets.All)]
		private void Rpc_Reset()
		{
		}

		[Token(Token = "0x6001A6D")]
		[Address(RVA = "0x1A6A900", Offset = "0x1A6A900", VA = "0x1A6A900")]
		[Rpc(RpcSources.All, RpcTargets.All)]
		private void Rpc_SetSharedScore(float score)
		{
		}

		[Token(Token = "0x6001A6E")]
		[Address(RVA = "0x1A6AAC4", Offset = "0x1A6AAC4", VA = "0x1A6AAC4")]
		[Rpc(RpcSources.All, RpcTargets.All)]
		private void Rpc_SetSharedScoreWithDecreaseScoreAnimation(float score, int decreaseScore)
		{
		}

		[Token(Token = "0x6001A6F")]
		[Address(RVA = "0x1A6ACA8", Offset = "0x1A6ACA8", VA = "0x1A6ACA8")]
		[Rpc(RpcSources.All, RpcTargets.All)]
		private void Rpc_ChangeLifeView(LifeChangeData.LifeChangeState state, int StartLifeNum)
		{
		}

		[Token(Token = "0x6001A70")]
		[Address(RVA = "0x1A6AE48", Offset = "0x1A6AE48", VA = "0x1A6AE48")]
		public NetworkedMedleyGameScoreAndLifeModel()
		{
		}

		[Token(Token = "0x6001A75")]
		[Address(RVA = "0x1A6AFC0", Offset = "0x1A6AFC0", VA = "0x1A6AFC0", Slot = "10")]
		public override void CopyBackingFieldsToState(bool P_0)
		{
		}

		[Token(Token = "0x6001A76")]
		[Address(RVA = "0x1A6AFC8", Offset = "0x1A6AFC8", VA = "0x1A6AFC8", Slot = "11")]
		public override void CopyStateToBackingFields()
		{
		}

		[Token(Token = "0x6001A77")]
		[Address(RVA = "0x1A6AFE0", Offset = "0x1A6AFE0", VA = "0x1A6AFE0")]
		[NetworkRpcWeavedInvoker(1, 7, 7)]
		protected unsafe static void Rpc_Reset@Invoker(NetworkBehaviour behaviour, SimulationMessage* message)
		{
		}

		[Token(Token = "0x6001A78")]
		[Address(RVA = "0x1A6B068", Offset = "0x1A6B068", VA = "0x1A6B068")]
		[NetworkRpcWeavedInvoker(2, 7, 7)]
		protected unsafe static void Rpc_SetSharedScore@Invoker(NetworkBehaviour behaviour, SimulationMessage* message)
		{
		}

		[Token(Token = "0x6001A79")]
		[Address(RVA = "0x1A6B108", Offset = "0x1A6B108", VA = "0x1A6B108")]
		[NetworkRpcWeavedInvoker(3, 7, 7)]
		protected unsafe static void Rpc_SetSharedScoreWithDecreaseScoreAnimation@Invoker(NetworkBehaviour behaviour, SimulationMessage* message)
		{
		}

		[Token(Token = "0x6001A7A")]
		[Address(RVA = "0x1A6B1B0", Offset = "0x1A6B1B0", VA = "0x1A6B1B0")]
		[NetworkRpcWeavedInvoker(4, 7, 7)]
		protected unsafe static void Rpc_ChangeLifeView@Invoker(NetworkBehaviour behaviour, SimulationMessage* message)
		{
		}
	}
	[Token(Token = "0x200068F")]
	public class NetworkedMedleyGameScoreAndLifePresenter : MonoBehaviour
	{
		[Token(Token = "0x40023CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private NetworkedMedleyGameScoreAndLifeModel model;

		[Token(Token = "0x40023CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject viewPrefab;

		[Token(Token = "0x40023CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private NetworkedMedleyGameScoreView scoreView;

		[Token(Token = "0x40023CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private NetworkedMedleyLifeView lifeView;

		[Token(Token = "0x6001A7F")]
		[Address(RVA = "0x1A6BD9C", Offset = "0x1A6BD9C", VA = "0x1A6BD9C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A80")]
		[Address(RVA = "0x1A6C240", Offset = "0x1A6C240", VA = "0x1A6C240")]
		public NetworkedMedleyGameScoreAndLifePresenter()
		{
		}
	}
	[Token(Token = "0x2000690")]
	public class NetworkedMedleyGameScoreManager : SingletonMonoNetworkRunnerCallbacks<NetworkedMedleyGameScoreManager>
	{
		[Token(Token = "0x40023CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _dontDestroyOnLoad;

		[Token(Token = "0x40023CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject MedleyNetworkedGameScorePrefab;

		[Token(Token = "0x40023D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform ScoreListUIRoot;

		[Token(Token = "0x170002A7")]
		protected override bool dontDestroyOnLoad
		{
			[Token(Token = "0x6001A81")]
			[Address(RVA = "0x1A6C248", Offset = "0x1A6C248", VA = "0x1A6C248", Slot = "39")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001A82")]
		[Address(RVA = "0x1A6C250", Offset = "0x1A6C250", VA = "0x1A6C250")]
		[Inject]
		private void Injection(RunnerManagerProvider runnerManagerProvider)
		{
		}

		[Token(Token = "0x6001A83")]
		[Address(RVA = "0x1A6C258", Offset = "0x1A6C258", VA = "0x1A6C258", Slot = "37")]
		public override void OnSceneLoadDone(NetworkRunner runner)
		{
		}

		[Token(Token = "0x6001A84")]
		[Address(RVA = "0x1A6C49C", Offset = "0x1A6C49C", VA = "0x1A6C49C")]
		public NetworkedMedleyGameScoreManager()
		{
		}
	}
	[Token(Token = "0x2000691")]
	public class NetworkedMedleyGameScoreView : MonoBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x2000692")]
		[CompilerGenerated]
		private struct <DecreaseScoreAnimation>d__5 : IAsyncStateMachine
		{
			[Token(Token = "0x40023D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40023D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40023D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public NetworkedMedleyGameScoreView <>4__this;

			[Token(Token = "0x40023D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int decreaseScore;

			[Token(Token = "0x40023D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6001A8B")]
			[Address(RVA = "0x1A6C680", Offset = "0x1A6C680", VA = "0x1A6C680", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001A8C")]
			[Address(RVA = "0x1A6CAC0", Offset = "0x1A6CAC0", VA = "0x1A6CAC0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x40023D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TextMeshProUGUI _scoreCommonText;

		[Token(Token = "0x40023D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TextMeshProUGUI _decreaseScore;

		[Token(Token = "0x6001A85")]
		[Address(RVA = "0x1A6C4E4", Offset = "0x1A6C4E4", VA = "0x1A6C4E4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A86")]
		[Address(RVA = "0x1A6C510", Offset = "0x1A6C510", VA = "0x1A6C510")]
		public void ResetView()
		{
		}

		[Token(Token = "0x6001A87")]
		[Address(RVA = "0x1A6C56C", Offset = "0x1A6C56C", VA = "0x1A6C56C")]
		public void UpdateScore(string newScore)
		{
		}

		[Token(Token = "0x6001A88")]
		[Address(RVA = "0x1A6C590", Offset = "0x1A6C590", VA = "0x1A6C590")]
		[AsyncStateMachine(typeof(<DecreaseScoreAnimation>d__5))]
		public void DecreaseScoreAnimation(int decreaseScore)
		{
		}

		[Token(Token = "0x6001A89")]
		[Address(RVA = "0x1A6C650", Offset = "0x1A6C650", VA = "0x1A6C650")]
		public void OnIsVisualizable(bool isVisualizable)
		{
		}

		[Token(Token = "0x6001A8A")]
		[Address(RVA = "0x1A6C678", Offset = "0x1A6C678", VA = "0x1A6C678")]
		public NetworkedMedleyGameScoreView()
		{
		}
	}
	[Token(Token = "0x2000693")]
	public class NetworkedMedleyLifeView : MonoBehaviour
	{
		[Token(Token = "0x40023D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _lifePrefab;

		[Token(Token = "0x40023D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _lifeParent;

		[Token(Token = "0x40023DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly List<GameObject> _lifeObjs;

		[Token(Token = "0x40023DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int miss;

		[Token(Token = "0x6001A8D")]
		[Address(RVA = "0x1A6CACC", Offset = "0x1A6CACC", VA = "0x1A6CACC")]
		public void OnChanged(LifeChangeData.LifeChangeState state, int StartLifeNum)
		{
		}

		[Token(Token = "0x6001A8E")]
		[Address(RVA = "0x1A6CB34", Offset = "0x1A6CB34", VA = "0x1A6CB34")]
		private void OnLifeAdd()
		{
		}

		[Token(Token = "0x6001A8F")]
		[Address(RVA = "0x1A6CD68", Offset = "0x1A6CD68", VA = "0x1A6CD68")]
		private void OnDamaged()
		{
		}

		[Token(Token = "0x6001A90")]
		[Address(RVA = "0x1A6CEC0", Offset = "0x1A6CEC0", VA = "0x1A6CEC0")]
		public NetworkedMedleyLifeView()
		{
		}
	}
	[Token(Token = "0x2000694")]
	public class NetworkedMedleyResultManager : SingletonMonoNetworkRunnerCallbacks<NetworkedMedleyResultManager>
	{
		[Token(Token = "0x40023DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _dontDestroyOnLoad;

		[Token(Token = "0x40023DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject NetworkedMedleyResultPrefab;

		[Token(Token = "0x40023DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform ResultListUIRoot;

		[Token(Token = "0x170002A8")]
		protected override bool dontDestroyOnLoad
		{
			[Token(Token = "0x6001A92")]
			[Address(RVA = "0x1A6CFB0", Offset = "0x1A6CFB0", VA = "0x1A6CFB0", Slot = "39")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002A9")]
		public bool isResult
		{
			[Token(Token = "0x6001A94")]
			[Address(RVA = "0x1A6CFC0", Offset = "0x1A6CFC0", VA = "0x1A6CFC0")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A95")]
			[Address(RVA = "0x1A6CFC8", Offset = "0x1A6CFC8", VA = "0x1A6CFC8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001A93")]
		[Address(RVA = "0x1A6CFB8", Offset = "0x1A6CFB8", VA = "0x1A6CFB8")]
		[Inject]
		private void Injection(RunnerManagerProvider runnerManagerProvider)
		{
		}

		[Token(Token = "0x6001A96")]
		[Address(RVA = "0x1A6CFD4", Offset = "0x1A6CFD4", VA = "0x1A6CFD4", Slot = "37")]
		public override void OnSceneLoadDone(NetworkRunner runner)
		{
		}

		[Token(Token = "0x6001A97")]
		[Address(RVA = "0x1A6D21C", Offset = "0x1A6D21C", VA = "0x1A6D21C")]
		public NetworkedMedleyResultManager()
		{
		}
	}
	[Token(Token = "0x2000695")]
	[NetworkBehaviourWeaved(1)]
	public class NetworkedMedleyResultModel : NetworkBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x2000697")]
		[CompilerGenerated]
		private struct <Start>d__9 : IAsyncStateMachine
		{
			[Token(Token = "0x40023EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40023EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40023EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public NetworkedMedleyResultModel <>4__this;

			[Token(Token = "0x40023ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6001AA6")]
			[Address(RVA = "0x1A6D818", Offset = "0x1A6D818", VA = "0x1A6D818", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001AA7")]
			[Address(RVA = "0x1A6DF74", Offset = "0x1A6DF74", VA = "0x1A6DF74", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x40023E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private RunnerManagerProvider _runnerManagerProvider;

		[Token(Token = "0x40023E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[DefaultForProperty("playerID", 0, 1)]
		private int _playerID;

		[Token(Token = "0x40023E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private bool isLocal;

		[Token(Token = "0x40023E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Action<float, float, int> OnSetNetworkedMedleyResultViewAction;

		[Token(Token = "0x40023E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Action<bool> OnIsVisualizable;

		[Token(Token = "0x40023E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Changed<NetworkedMedleyResultModel> $IL2CPP_CHANGED;

		[Token(Token = "0x40023E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static ChangedDelegate<NetworkedMedleyResultModel> $IL2CPP_CHANGED_DELEGATE;

		[Token(Token = "0x40023E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static NetworkBehaviourCallbacks<NetworkedMedleyResultModel> $IL2CPP_NETWORK_BEHAVIOUR_CALLBACKS;

		[Token(Token = "0x170002AA")]
		[Networked]
		[NetworkedWeaved(0, 1)]
		private int playerID
		{
			[Token(Token = "0x6001A99")]
			[Address(RVA = "0x1A6D26C", Offset = "0x1A6D26C", VA = "0x1A6D26C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001A9A")]
			[Address(RVA = "0x1A6D2D0", Offset = "0x1A6D2D0", VA = "0x1A6D2D0")]
			set
			{
			}
		}

		[Token(Token = "0x6001A98")]
		[Address(RVA = "0x1A6D264", Offset = "0x1A6D264", VA = "0x1A6D264")]
		[Inject]
		private void Injection(RunnerManagerProvider runnerManagerProvider)
		{
		}

		[Token(Token = "0x6001A9B")]
		[Address(RVA = "0x1A6D334", Offset = "0x1A6D334", VA = "0x1A6D334")]
		[AsyncStateMachine(typeof(<Start>d__9))]
		private void Start()
		{
		}

		[Token(Token = "0x6001A9C")]
		[Address(RVA = "0x1A6D218", Offset = "0x1A6D218", VA = "0x1A6D218")]
		public void PlayerIDSet(int id)
		{
		}

		[Token(Token = "0x6001A9D")]
		[Address(RVA = "0x1A6D3E8", Offset = "0x1A6D3E8", VA = "0x1A6D3E8")]
		[Rpc(RpcSources.All, RpcTargets.All)]
		private void Rpc_SetNetworkedMedleyResult(float score, float calorie, int respawnCount)
		{
		}

		[Token(Token = "0x6001A9E")]
		[Address(RVA = "0x1A6D5F0", Offset = "0x1A6D5F0", VA = "0x1A6D5F0")]
		public NetworkedMedleyResultModel()
		{
		}

		[Token(Token = "0x6001AA0")]
		[Address(RVA = "0x1A6D67C", Offset = "0x1A6D67C", VA = "0x1A6D67C", Slot = "10")]
		public override void CopyBackingFieldsToState(bool P_0)
		{
		}

		[Token(Token = "0x6001AA1")]
		[Address(RVA = "0x1A6D684", Offset = "0x1A6D684", VA = "0x1A6D684", Slot = "11")]
		public override void CopyStateToBackingFields()
		{
		}

		[Token(Token = "0x6001AA2")]
		[Address(RVA = "0x1A6D69C", Offset = "0x1A6D69C", VA = "0x1A6D69C")]
		[NetworkRpcWeavedInvoker(1, 7, 7)]
		protected unsafe static void Rpc_SetNetworkedMedleyResult@Invoker(NetworkBehaviour behaviour, SimulationMessage* message)
		{
		}
	}
	[Token(Token = "0x2000698")]
	public class NetworkedMedleyResultPresenter : MonoBehaviour
	{
		[Token(Token = "0x40023EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private NetworkedMedleyResultModel model;

		[Token(Token = "0x40023EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject viewPrefab;

		[Token(Token = "0x40023F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private NetworkedMedleyResultView view;

		[Token(Token = "0x6001AA8")]
		[Address(RVA = "0x1A6DF80", Offset = "0x1A6DF80", VA = "0x1A6DF80")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001AA9")]
		[Address(RVA = "0x1A6E1D8", Offset = "0x1A6E1D8", VA = "0x1A6E1D8")]
		public NetworkedMedleyResultPresenter()
		{
		}
	}
	[Token(Token = "0x2000699")]
	public class NetworkedMedleyResultView : MonoBehaviour
	{
		[Token(Token = "0x40023F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TextMeshProUGUI _scoreText;

		[Token(Token = "0x40023F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TextMeshProUGUI _thisCalorieText;

		[Token(Token = "0x40023F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TextMeshProUGUI _respawnCountText;

		[Token(Token = "0x6001AAA")]
		[Address(RVA = "0x1A6E1E0", Offset = "0x1A6E1E0", VA = "0x1A6E1E0")]
		public void SetNetworkedMedleyResult(float score, float calorie, int respawnCount)
		{
		}

		[Token(Token = "0x6001AAB")]
		[Address(RVA = "0x1A6E364", Offset = "0x1A6E364", VA = "0x1A6E364")]
		public void OnIsVisualizable(bool isVisualizable)
		{
		}

		[Token(Token = "0x6001AAC")]
		[Address(RVA = "0x1A6E38C", Offset = "0x1A6E38C", VA = "0x1A6E38C")]
		public NetworkedMedleyResultView()
		{
		}
	}
	[Token(Token = "0x200069A")]
	public class PartySceneLoadedCallbacks : SingletonMonoNetworkRunnerCallbacks<PartySceneLoadedCallbacks>
	{
		[StructLayout(3)]
		[Token(Token = "0x200069C")]
		[CompilerGenerated]
		private struct <SubscribePlayersSceneLoad>d__11 : IAsyncStateMachine
		{
			[Token(Token = "0x40023FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40023FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x40023FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public PartySceneLoadedCallbacks <>4__this;

			[Token(Token = "0x40023FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6001AB9")]
			[Address(RVA = "0x1A6EB8C", Offset = "0x1A6EB8C", VA = "0x1A6EB8C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001ABA")]
			[Address(RVA = "0x1A6F308", Offset = "0x1A6F308", VA = "0x1A6F308", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x40023F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private PlayersSceneLoadSubscriber _playersSceneLoadSubscriberPrefab;

		[NonSerialized]
		[Token(Token = "0x40023F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PlayersSceneLoadSubscriber playersSceneLoadSubscriber;

		[Token(Token = "0x40023F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEvent PartySceneLoadedCallbackEvent;

		[Token(Token = "0x40023F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool _dontDestroyOnLoad;

		[Token(Token = "0x170002AB")]
		public bool IsAllPlayersSceneLoaded
		{
			[Token(Token = "0x6001AAD")]
			[Address(RVA = "0x1A6E394", Offset = "0x1A6E394", VA = "0x1A6E394")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001AAE")]
			[Address(RVA = "0x1A6E39C", Offset = "0x1A6E39C", VA = "0x1A6E39C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170002AC")]
		protected override bool dontDestroyOnLoad
		{
			[Token(Token = "0x6001AAF")]
			[Address(RVA = "0x1A6E3A8", Offset = "0x1A6E3A8", VA = "0x1A6E3A8", Slot = "39")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001AB0")]
		[Address(RVA = "0x1A6E3B0", Offset = "0x1A6E3B0", VA = "0x1A6E3B0", Slot = "37")]
		public override void OnSceneLoadDone(NetworkRunner runner)
		{
		}

		[Token(Token = "0x6001AB1")]
		[Address(RVA = "0x1A6E688", Offset = "0x1A6E688", VA = "0x1A6E688")]
		[AsyncStateMachine(typeof(<SubscribePlayersSceneLoad>d__11))]
		private UniTask SubscribePlayersSceneLoad()
		{
			return default(UniTask);
		}

		[Token(Token = "0x6001AB2")]
		[Address(RVA = "0x1A6E7E4", Offset = "0x1A6E7E4", VA = "0x1A6E7E4")]
		public PartySceneLoadedCallbacks()
		{
		}
	}
	[Token(Token = "0x200069D")]
	[NetworkBehaviourWeaved(2)]
	public class PartySharedParameters : NetworkBehaviour
	{
		[Token(Token = "0x40023FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		[DefaultForProperty("RemainingSeconds", 0, 1)]
		private float _RemainingSeconds;

		[Token(Token = "0x4002400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[DefaultForProperty("sharedCombo", 1, 1)]
		private int _sharedCombo;

		[Token(Token = "0x4002401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Changed<PartySharedParameters> $IL2CPP_CHANGED;

		[Token(Token = "0x4002402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static ChangedDelegate<PartySharedParameters> $IL2CPP_CHANGED_DELEGATE;

		[Token(Token = "0x4002403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static NetworkBehaviourCallbacks<PartySharedParameters> $IL2CPP_NETWORK_BEHAVIOUR_CALLBACKS;

		[Token(Token = "0x170002AD")]
		[Networked]
		[NetworkedWeaved(0, 1)]
		public float RemainingSeconds
		{
			[Token(Token = "0x6001ABB")]
			[Address(RVA = "0x1A6F314", Offset = "0x1A6F314", VA = "0x1A6F314")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001ABC")]
			[Address(RVA = "0x1A6F388", Offset = "0x1A6F388", VA = "0x1A6F388")]
			private set
			{
			}
		}

		[Token(Token = "0x170002AE")]
		[Networked]
		[NetworkedWeaved(1, 1)]
		private int sharedCombo
		{
			[Token(Token = "0x6001ABD")]
			[Address(RVA = "0x1A6F428", Offset = "0x1A6F428", VA = "0x1A6F428")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001ABE")]
			[Address(RVA = "0x1A6F48C", Offset = "0x1A6F48C", VA = "0x1A6F48C")]
			set
			{
			}
		}

		[Token(Token = "0x6001ABF")]
		[Address(RVA = "0x1A6F4F0", Offset = "0x1A6F4F0", VA = "0x1A6F4F0")]
		public PartySharedParameters()
		{
		}

		[Token(Token = "0x6001AC0")]
		[Address(RVA = "0x1A6F4F8", Offset = "0x1A6F4F8", VA = "0x1A6F4F8", Slot = "10")]
		public override void CopyBackingFieldsToState(bool P_0)
		{
		}

		[Token(Token = "0x6001AC1")]
		[Address(RVA = "0x1A6F518", Offset = "0x1A6F518", VA = "0x1A6F518", Slot = "11")]
		public override void CopyStateToBackingFields()
		{
		}
	}
	[Token(Token = "0x200069E")]
	[NetworkBehaviourWeaved(1)]
	public class PlayersSceneLoadSubscriber : NetworkBehaviour
	{
		[Token(Token = "0x4002404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		[DefaultForProperty("SceneLoadedPlayersCount", 0, 1)]
		private int _SceneLoadedPlayersCount;

		[Token(Token = "0x4002405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Changed<PlayersSceneLoadSubscriber> $IL2CPP_CHANGED;

		[Token(Token = "0x4002406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static ChangedDelegate<PlayersSceneLoadSubscriber> $IL2CPP_CHANGED_DELEGATE;

		[Token(Token = "0x4002407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static NetworkBehaviourCallbacks<PlayersSceneLoadSubscriber> $IL2CPP_NETWORK_BEHAVIOUR_CALLBACKS;

		[Token(Token = "0x170002AF")]
		[Networked]
		[NetworkedWeaved(0, 1)]
		public int SceneLoadedPlayersCount
		{
			[Token(Token = "0x6001AC2")]
			[Address(RVA = "0x1A6EAAC", Offset = "0x1A6EAAC", VA = "0x1A6EAAC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001AC3")]
			[Address(RVA = "0x1A6F53C", Offset = "0x1A6F53C", VA = "0x1A6F53C")]
			private set
			{
			}
		}

		[Token(Token = "0x6001AC4")]
		[Address(RVA = "0x1A6F5A0", Offset = "0x1A6F5A0", VA = "0x1A6F5A0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001AC5")]
		[Address(RVA = "0x1A6E8A4", Offset = "0x1A6E8A4", VA = "0x1A6E8A4")]
		[Rpc(RpcSources.All, RpcTargets.StateAuthority)]
		public void Rpc_AddSceneLoadedCounter()
		{
		}

		[Token(Token = "0x6001AC6")]
		[Address(RVA = "0x1A6F650", Offset = "0x1A6F650", VA = "0x1A6F650")]
		public PlayersSceneLoadSubscriber()
		{
		}

		[Token(Token = "0x6001AC7")]
		[Address(RVA = "0x1A6F658", Offset = "0x1A6F658", VA = "0x1A6F658", Slot = "10")]
		public override void CopyBackingFieldsToState(bool P_0)
		{
		}

		[Token(Token = "0x6001AC8")]
		[Address(RVA = "0x1A6F660", Offset = "0x1A6F660", VA = "0x1A6F660", Slot = "11")]
		public override void CopyStateToBackingFields()
		{
		}

		[Token(Token = "0x6001AC9")]
		[Address(RVA = "0x1A6F678", Offset = "0x1A6F678", VA = "0x1A6F678")]
		[NetworkRpcWeavedInvoker(1, 7, 1)]
		protected unsafe static void Rpc_AddSceneLoadedCounter@Invoker(NetworkBehaviour behaviour, SimulationMessage* message)
		{
		}
	}
}
namespace Imacreate.GrooveFitIsland.__Production__.Core.LanguageSelectProtein
{
	[Token(Token = "0x200069F")]
	[RequireComponent(typeof(AudioSource))]
	public class LanguageProteinInteraction : GrabbableObject
	{
		[Token(Token = "0x20006A0")]
		private enum ProteinState
		{
			[Token(Token = "0x400241B")]
			OnPivot,
			[Token(Token = "0x400241C")]
			Grabbed,
			[Token(Token = "0x400241D")]
			Free
		}

		[StructLayout(3)]
		[Token(Token = "0x20006A1")]
		[CompilerGenerated]
		private struct <ChangeLanguageWithEffect>d__22 : IAsyncStateMachine
		{
			[Token(Token = "0x400241E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400241F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4002420")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LanguageProteinInteraction <>4__this;

			[Token(Token = "0x4002421")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <volume>5__2;

			[Token(Token = "0x4002422")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6001ADA")]
			[Address(RVA = "0x1A701A0", Offset = "0x1A701A0", VA = "0x1A701A0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001ADB")]
			[Address(RVA = "0x1A7099C", Offset = "0x1A7099C", VA = "0x1A7099C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20006A2")]
		[CompilerGenerated]
		private struct <ReturnTimer>d__29 : IAsyncStateMachine
		{
			[Token(Token = "0x4002423")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002424")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4002425")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CancellationToken token;

			[Token(Token = "0x4002426")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float timeToReturn;

			[Token(Token = "0x4002427")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LanguageProteinInteraction <>4__this;

			[Token(Token = "0x4002428")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <_time>5__2;

			[Token(Token = "0x4002429")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private Cysharp.Threading.Tasks.YieldAwaitable.Awaiter <>u__1;

			[Token(Token = "0x6001ADC")]
			[Address(RVA = "0x1A709A8", Offset = "0x1A709A8", VA = "0x1A709A8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001ADD")]
			[Address(RVA = "0x1A70D9C", Offset = "0x1A70D9C", VA = "0x1A70D9C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4002408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[Header("Grab Setting")]
		[SerializeField]
		private GameObject _hoveredSphere;

		[Token(Token = "0x4002409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		private Transform _cap;

		[Token(Token = "0x400240A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private Vector3 _capDefaultRot;

		[Token(Token = "0x400240B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		[Header("Language Setting")]
		[SerializeField]
		private LanguageSetting.Language _selectedLanguage;

		[Token(Token = "0x400240C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[SerializeField]
		private SettingLanguageEvent _languageEvent;

		[Token(Token = "0x400240D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[SerializeField]
		private Transform _drinkPoint;

		[Token(Token = "0x400240E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[Inject]
		private MultilingualTextManager _multilingualTextManager;

		[Token(Token = "0x400240F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool isDrinking;

		[Token(Token = "0x4002410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[Header("Protein Pivot Setting")]
		[SerializeField]
		private float _disappearTime;

		[Token(Token = "0x4002411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[SerializeField]
		private Transform _proteinPivot;

		[Token(Token = "0x4002412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		[Header("Sound Setting")]
		[SerializeField]
		private AudioClip _hoverSound;

		[Token(Token = "0x4002413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		[SerializeField]
		private AudioClip _grabSound;

		[Token(Token = "0x4002414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		[SerializeField]
		private AudioClip _releaseSound;

		[Token(Token = "0x4002415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		[SerializeField]
		private AudioClip _drinkSound;

		[Token(Token = "0x4002416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private AudioSource _audio;

		[Token(Token = "0x4002417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private ProteinState _state;

		[Token(Token = "0x4002418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private Tweener _positionTweener;

		[Token(Token = "0x4002419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		private Tweener _rotationTweener;

		[Token(Token = "0x6001ACA")]
		[Address(RVA = "0x1A6F700", Offset = "0x1A6F700", VA = "0x1A6F700")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001ACB")]
		[Address(RVA = "0x1A6F748", Offset = "0x1A6F748", VA = "0x1A6F748", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001ACC")]
		[Address(RVA = "0x1A6F80C", Offset = "0x1A6F80C", VA = "0x1A6F80C", Slot = "5")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6001ACD")]
		[Address(RVA = "0x1A6FA00", Offset = "0x1A6FA00", VA = "0x1A6FA00")]
		[AsyncStateMachine(typeof(<ChangeLanguageWithEffect>d__22))]
		private void ChangeLanguageWithEffect()
		{
		}

		[Token(Token = "0x6001ACE")]
		[Address(RVA = "0x1A6FD6C", Offset = "0x1A6FD6C", VA = "0x1A6FD6C", Slot = "9")]
		public override void OnHovered(VRHand.HandType hand)
		{
		}

		[Token(Token = "0x6001ACF")]
		[Address(RVA = "0x1A6FDAC", Offset = "0x1A6FDAC", VA = "0x1A6FDAC", Slot = "10")]
		protected override void OnUnHoveredWithoutGrab(VRHand.HandType hand)
		{
		}

		[Token(Token = "0x6001AD0")]
		[Address(RVA = "0x1A6FDEC", Offset = "0x1A6FDEC", VA = "0x1A6FDEC", Slot = "11")]
		protected override void OnUnHoveredWithGrab(VRHand.HandType unHoveredHand, VRHand.HandType grabHand)
		{
		}

		[Token(Token = "0x6001AD1")]
		[Address(RVA = "0x1A6FE18", Offset = "0x1A6FE18", VA = "0x1A6FE18", Slot = "6")]
		public override void OnGrab(GameObject handObj, GameObject parentObj, VRHand.HandType hand)
		{
		}

		[Token(Token = "0x6001AD2")]
		[Address(RVA = "0x1A6FEFC", Offset = "0x1A6FEFC", VA = "0x1A6FEFC", Slot = "7")]
		public override void OnRelease(GameObject handObj, VRHand.HandType hand)
		{
		}

		[Token(Token = "0x6001AD3")]
		[Address(RVA = "0x1A6FAB8", Offset = "0x1A6FAB8", VA = "0x1A6FAB8")]
		private void ReturnToPivot(bool tween = false, bool force = false)
		{
		}

		[Token(Token = "0x6001AD4")]
		[Address(RVA = "0x1A6FFA4", Offset = "0x1A6FFA4", VA = "0x1A6FFA4")]
		[AsyncStateMachine(typeof(<ReturnTimer>d__29))]
		private UniTaskVoid ReturnTimer(float timeToReturn, CancellationToken token)
		{
			return default(UniTaskVoid);
		}

		[Token(Token = "0x6001AD5")]
		[Address(RVA = "0x1A6FEC0", Offset = "0x1A6FEC0", VA = "0x1A6FEC0")]
		private void CancelTween()
		{
		}

		[Token(Token = "0x6001AD6")]
		[Address(RVA = "0x1A70074", Offset = "0x1A70074", VA = "0x1A70074")]
		private void CheckProteinAchievement()
		{
		}

		[Token(Token = "0x6001AD7")]
		[Address(RVA = "0x1A70178", Offset = "0x1A70178", VA = "0x1A70178")]
		public void SetLanguage(LanguageSetting.Language lang)
		{
		}

		[Token(Token = "0x6001AD8")]
		[Address(RVA = "0x1A70180", Offset = "0x1A70180", VA = "0x1A70180")]
		public void SetSettingLanguageEvent([CanBeNull] SettingLanguageEvent languageEvent)
		{
		}

		[Token(Token = "0x6001AD9")]
		[Address(RVA = "0x1A70190", Offset = "0x1A70190", VA = "0x1A70190")]
		public LanguageProteinInteraction()
		{
		}
	}
}
namespace Imacreate.GrooveFitIsland.OjamaSystem
{
	[Token(Token = "0x20006A3")]
	public class HitTargetOjamableFitPattern : OjamableFitPatternBase
	{
		[Token(Token = "0x400242A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject _disableTarget;

		[Token(Token = "0x400242B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GameObject _gnuBombModelPrefab;

		[Token(Token = "0x400242C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject _muteSpeakerModelPrefab;

		[Token(Token = "0x400242D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private UnityEvent _onHitEvent;

		[Token(Token = "0x400242E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Inject]
		private DiContainer _container;

		[Token(Token = "0x400242F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject _alternativeObjectInstance;

		[Token(Token = "0x6001ADE")]
		[Address(RVA = "0x1A70DA8", Offset = "0x1A70DA8", VA = "0x1A70DA8", Slot = "4")]
		public override void ActivateOjamaNotes(MIItemName type)
		{
		}

		[Token(Token = "0x6001ADF")]
		[Address(RVA = "0x1A710B8", Offset = "0x1A710B8", VA = "0x1A710B8", Slot = "5")]
		protected override void OnHit()
		{
		}

		[Token(Token = "0x6001AE0")]
		[Address(RVA = "0x1A71334", Offset = "0x1A71334", VA = "0x1A71334")]
		public HitTargetOjamableFitPattern()
		{
		}
	}
	[Token(Token = "0x20006A4")]
	public interface IOjamaInvoker
	{
		[Token(Token = "0x6001AE1")]
		UniTask InvokeOjamaEffect(Vector3 position, CancellationToken token);
	}
	[Token(Token = "0x20006A5")]
	internal class OjamaActionPublisher : IPublisher<FPActionData>
	{
		[Token(Token = "0x4002430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Inject]
		private IPublisher<FPActionData> _messagePipePublisher;

		[Token(Token = "0x4002431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly OjamaEvent _onHitEvent;

		[Token(Token = "0x6001AE2")]
		[Address(RVA = "0x1A71344", Offset = "0x1A71344", VA = "0x1A71344")]
		public OjamaActionPublisher(OjamaEvent onHit)
		{
		}

		[Token(Token = "0x6001AE3")]
		[Address(RVA = "0x1A71374", Offset = "0x1A71374", VA = "0x1A71374", Slot = "4")]
		public void Publish(FPActionData message)
		{
		}
	}
	[Token(Token = "0x20006A6")]
	public abstract class OjamableFitPatternBase : MonoBehaviour
	{
		[Token(Token = "0x4002432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected MIItemName _type;

		[Token(Token = "0x4002433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected FitPatternBoxManager _fitPatternBox;

		[Token(Token = "0x4002434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private JudgeActionBase _judgeAction;

		[Token(Token = "0x4002435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Inject]
		private DiContainer _container;

		[Token(Token = "0x4002436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private OjamaEvent onHitEvent;

		[Token(Token = "0x170002B0")]
		public MIItemName Type
		{
			[Token(Token = "0x6001AE8")]
			[Address(RVA = "0x1A71788", Offset = "0x1A71788", VA = "0x1A71788")]
			get
			{
				return default(MIItemName);
			}
		}

		[Token(Token = "0x6001AE4")]
		[Address(RVA = "0x1A71568", Offset = "0x1A71568", VA = "0x1A71568")]
		private void Start()
		{
		}

		[Token(Token = "0x6001AE5")]
		[Address(RVA = "0x1A70F40", Offset = "0x1A70F40", VA = "0x1A70F40", Slot = "4")]
		public virtual void ActivateOjamaNotes(MIItemName type)
		{
		}

		[Token(Token = "0x6001AE6")]
		protected abstract void OnHit();

		[Token(Token = "0x6001AE7")]
		[Address(RVA = "0x1A71720", Offset = "0x1A71720", VA = "0x1A71720")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001AE9")]
		[Address(RVA = "0x1A7133C", Offset = "0x1A7133C", VA = "0x1A7133C")]
		protected OjamableFitPatternBase()
		{
		}
	}
	[Token(Token = "0x20006A7")]
	public class OjamaEffectManager : SingletonMonoBehaviour<OjamaEffectManager>
	{
		[Token(Token = "0x4002437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OjamaGnuBomb _gnuBomb;

		[Token(Token = "0x4002438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private OjamaMuteSpeaker _muteSpeaker;

		[Token(Token = "0x4002439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private OjamaMirror _mirror;

		[Token(Token = "0x400243A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private OjamaRocketGnu _gnuTackle;

		[Token(Token = "0x400243B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private OjamaHeal _heal;

		[Token(Token = "0x170002B1")]
		protected override bool dontDestroyOnLoad
		{
			[Token(Token = "0x6001AED")]
			[Address(RVA = "0x1A71ED4", Offset = "0x1A71ED4", VA = "0x1A71ED4", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001AEA")]
		[Address(RVA = "0x1A71790", Offset = "0x1A71790", VA = "0x1A71790")]
		public void InvokeEffect(int i)
		{
		}

		[Token(Token = "0x6001AEB")]
		[Address(RVA = "0x1A717A0", Offset = "0x1A717A0", VA = "0x1A717A0")]
		public void InvokeEffect(string s)
		{
		}

		[Token(Token = "0x6001AEC")]
		[Address(RVA = "0x1A7115C", Offset = "0x1A7115C", VA = "0x1A7115C")]
		public void InvokeEffect(MIItemName type, Vector3 position)
		{
		}

		[Token(Token = "0x6001AEE")]
		[Address(RVA = "0x1A71EDC", Offset = "0x1A71EDC", VA = "0x1A71EDC")]
		public OjamaEffectManager()
		{
		}
	}
	[Token(Token = "0x20006A8")]
	public delegate void OjamaEvent();
	[Token(Token = "0x20006A9")]
	public class OjamaGnuBomb : MonoBehaviour, IOjamaInvoker
	{
		[StructLayout(3)]
		[Token(Token = "0x20006AA")]
		[CompilerGenerated]
		private struct <InvokeOjamaEffect>d__2 : IAsyncStateMachine
		{
			[Token(Token = "0x400243E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400243F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4002440")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public OjamaGnuBomb <>4__this;

			[Token(Token = "0x4002441")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 position;

			[Token(Token = "0x4002442")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CancellationToken token;

			[Token(Token = "0x4002443")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6001AF5")]
			[Address(RVA = "0x1A71F6C", Offset = "0x1A71F6C", VA = "0x1A71F6C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001AF6")]
			[Address(RVA = "0x1A72448", Offset = "0x1A72448", VA = "0x1A72448", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x400243C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MedleyGameDirector _medleyGameDirector;

		[Token(Token = "0x400243D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _effectPrefab;

		[Token(Token = "0x6001AF3")]
		[Address(RVA = "0x1A71830", Offset = "0x1A71830", VA = "0x1A71830", Slot = "4")]
		[AsyncStateMachine(typeof(<InvokeOjamaEffect>d__2))]
		public UniTask InvokeOjamaEffect(Vector3 position, CancellationToken token)
		{
			return default(UniTask);
		}

		[Token(Token = "0x6001AF4")]
		[Address(RVA = "0x1A71F64", Offset = "0x1A71F64", VA = "0x1A71F64")]
		public OjamaGnuBomb()
		{
		}
	}
	[Token(Token = "0x20006AB")]
	public class OjamaHeal : MonoBehaviour, IOjamaInvoker
	{
		[StructLayout(3)]
		[Token(Token = "0x20006AC")]
		[CompilerGenerated]
		private struct <InvokeOjamaEffect>d__2 : IAsyncStateMachine
		{
			[Token(Token = "0x4002446")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002447")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4002448")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public OjamaHeal <>4__this;

			[Token(Token = "0x4002449")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 position;

			[Token(Token = "0x400244A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CancellationToken token;

			[Token(Token = "0x400244B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6001AF9")]
			[Address(RVA = "0x1A7245C", Offset = "0x1A7245C", VA = "0x1A7245C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001AFA")]
			[Address(RVA = "0x1A72938", Offset = "0x1A72938", VA = "0x1A72938", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4002444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MedleyGameDirector _medleyGameDirector;

		[Token(Token = "0x4002445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _effectPrefab;

		[Token(Token = "0x6001AF7")]
		[Address(RVA = "0x1A71D30", Offset = "0x1A71D30", VA = "0x1A71D30", Slot = "4")]
		[AsyncStateMachine(typeof(<InvokeOjamaEffect>d__2))]
		public UniTask InvokeOjamaEffect(Vector3 position, CancellationToken token)
		{
			return default(UniTask);
		}

		[Token(Token = "0x6001AF8")]
		[Address(RVA = "0x1A72454", Offset = "0x1A72454", VA = "0x1A72454")]
		public OjamaHeal()
		{
		}
	}
	[Token(Token = "0x20006AD")]
	public class OjamaMirror : MonoBehaviour, IOjamaInvoker
	{
		[Token(Token = "0x20006AE")]
		private enum MirrorType
		{
			[Token(Token = "0x400245E")]
			RightLeft,
			[Token(Token = "0x400245F")]
			UpDown,
			[Token(Token = "0x4002460")]
			FrontBack
		}

		[StructLayout(3)]
		[Token(Token = "0x20006AF")]
		[CompilerGenerated]
		private struct <InvokeOjamaEffect>d__20 : IAsyncStateMachine
		{
			[Token(Token = "0x4002461")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002462")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4002463")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public OjamaMirror <>4__this;

			[Token(Token = "0x4002464")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 position;

			[Token(Token = "0x4002465")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CancellationToken token;

			[Token(Token = "0x4002466")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6001B03")]
			[Address(RVA = "0x1A73520", Offset = "0x1A73520", VA = "0x1A73520", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001B04")]
			[Address(RVA = "0x1A73D54", Offset = "0x1A73D54", VA = "0x1A73D54", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x400244C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _startEffectPrefab;

		[Token(Token = "0x400244D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _endEffectPrefab;

		[Token(Token = "0x400244E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float _duration;

		[Token(Token = "0x400244F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Inject]
		private InputProvider _inputProvider;

		[Token(Token = "0x4002450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Vector3 _origin;

		[Token(Token = "0x4002451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool _isWorking;

		[Token(Token = "0x4002452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[ReadOnly]
		private float _time;

		[Token(Token = "0x4002453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Transform _leftDummyAnchor;

		[Token(Token = "0x4002454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Transform _rightDummyAnchor;

		[Token(Token = "0x4002455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private readonly Transform[] _dummyAnchor;

		[Token(Token = "0x4002456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private readonly Transform[] _handAnchor;

		[Token(Token = "0x4002457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private readonly Transform[] _hand;

		[Token(Token = "0x4002458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Transform _head;

		[Token(Token = "0x4002459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private readonly Vector3[] _localPosition;

		[Token(Token = "0x400245A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private readonly Quaternion[] _localRotation;

		[Token(Token = "0x400245B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float _sholderHeight;

		[Token(Token = "0x400245C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[Header("Debug")]
		[SerializeField]
		private MirrorType _type;

		[Token(Token = "0x6001AFB")]
		[Address(RVA = "0x1A72944", Offset = "0x1A72944", VA = "0x1A72944")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001AFC")]
		[Address(RVA = "0x1A72A3C", Offset = "0x1A72A3C", VA = "0x1A72A3C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001AFD")]
		[Address(RVA = "0x1A71B8C", Offset = "0x1A71B8C", VA = "0x1A71B8C", Slot = "4")]
		[AsyncStateMachine(typeof(<InvokeOjamaEffect>d__20))]
		public UniTask InvokeOjamaEffect(Vector3 position, CancellationToken token)
		{
			return default(UniTask);
		}

		[Token(Token = "0x6001AFE")]
		[Address(RVA = "0x1A72BC8", Offset = "0x1A72BC8", VA = "0x1A72BC8")]
		private void StartMirroring(VRHand.HandType hand)
		{
		}

		[Token(Token = "0x6001AFF")]
		[Address(RVA = "0x1A72D60", Offset = "0x1A72D60", VA = "0x1A72D60")]
		private void DummyMove(VRHand.HandType hand)
		{
		}

		[Token(Token = "0x6001B00")]
		[Address(RVA = "0x1A73198", Offset = "0x1A73198", VA = "0x1A73198")]
		private void EndMirroring(VRHand.HandType hand)
		{
		}

		[Token(Token = "0x6001B01")]
		[Address(RVA = "0x1A732F8", Offset = "0x1A732F8", VA = "0x1A732F8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B02")]
		[Address(RVA = "0x1A73414", Offset = "0x1A73414", VA = "0x1A73414")]
		public OjamaMirror()
		{
		}
	}
	[Token(Token = "0x20006B0")]
	public class OjamaMuteSpeaker : MonoBehaviour, IOjamaInvoker
	{
		[StructLayout(3)]
		[Token(Token = "0x20006B1")]
		[CompilerGenerated]
		private struct <InvokeOjamaEffect>d__10 : IAsyncStateMachine
		{
			[Token(Token = "0x4002470")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002471")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4002472")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public OjamaMuteSpeaker <>4__this;

			[Token(Token = "0x4002473")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 position;

			[Token(Token = "0x4002474")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CancellationToken token;

			[Token(Token = "0x4002475")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6001B0B")]
			[Address(RVA = "0x1A740F0", Offset = "0x1A740F0", VA = "0x1A740F0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001B0C")]
			[Address(RVA = "0x1A746A8", Offset = "0x1A746A8", VA = "0x1A746A8", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20006B2")]
		[CompilerGenerated]
		private struct <OjamaProcess>d__11 : IAsyncStateMachine
		{
			[Token(Token = "0x4002476")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002477")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4002478")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public OjamaMuteSpeaker <>4__this;

			[Token(Token = "0x4002479")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 position;

			[Token(Token = "0x400247A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CancellationToken token;

			[Token(Token = "0x400247B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <t>5__2;

			[Token(Token = "0x400247C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6001B0D")]
			[Address(RVA = "0x1A746B4", Offset = "0x1A746B4", VA = "0x1A746B4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001B0E")]
			[Address(RVA = "0x1A75034", Offset = "0x1A75034", VA = "0x1A75034", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4002467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _effectPrefab;

		[Token(Token = "0x4002468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _transitionDuration;

		[Token(Token = "0x4002469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float _muteDuration;

		[Token(Token = "0x400246A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool _affectMusic;

		[Token(Token = "0x400246B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[SerializeField]
		private bool _affectSE;

		[Token(Token = "0x400246C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AudioMixer _audioMixer;

		[Token(Token = "0x400246D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _currentVolumeValue;

		[Token(Token = "0x400246E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private CancellationTokenSource _tokenSource;

		[Token(Token = "0x400246F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool _isAlreadyWorking;

		[Token(Token = "0x6001B05")]
		[Address(RVA = "0x1A73D60", Offset = "0x1A73D60", VA = "0x1A73D60")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B06")]
		[Address(RVA = "0x1A719D4", Offset = "0x1A719D4", VA = "0x1A719D4", Slot = "4")]
		[AsyncStateMachine(typeof(<InvokeOjamaEffect>d__10))]
		public UniTask InvokeOjamaEffect(Vector3 position, CancellationToken token)
		{
			return default(UniTask);
		}

		[Token(Token = "0x6001B07")]
		[Address(RVA = "0x1A73EF0", Offset = "0x1A73EF0", VA = "0x1A73EF0")]
		[AsyncStateMachine(typeof(<OjamaProcess>d__11))]
		private UniTask OjamaProcess(Vector3 position, CancellationToken token)
		{
			return default(UniTask);
		}

		[Token(Token = "0x6001B08")]
		[Address(RVA = "0x1A73E10", Offset = "0x1A73E10", VA = "0x1A73E10")]
		private void SetVolume(float t)
		{
		}

		[Token(Token = "0x6001B09")]
		[Address(RVA = "0x1A740A8", Offset = "0x1A740A8", VA = "0x1A740A8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001B0A")]
		[Address(RVA = "0x1A740D4", Offset = "0x1A740D4", VA = "0x1A740D4")]
		public OjamaMuteSpeaker()
		{
		}
	}
	[Token(Token = "0x20006B3")]
	public class OjamaReceiver : SingletonMonoBehaviour<OjamaReceiver>
	{
		[StructLayout(3)]
		[Token(Token = "0x20006B4")]
		[CompilerGenerated]
		private struct <EnqueueOjamaNotesWithDelay>d__9 : IAsyncStateMachine
		{
			[Token(Token = "0x4002484")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002485")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4002486")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public MIItemName type;

			[Token(Token = "0x4002487")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float delay;

			[Token(Token = "0x4002488")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CancellationToken token;

			[Token(Token = "0x4002489")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public OjamaReceiver <>4__this;

			[Token(Token = "0x400248A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6001B16")]
			[Address(RVA = "0x1A75640", Offset = "0x1A75640", VA = "0x1A75640", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001B17")]
			[Address(RVA = "0x1A75BA8", Offset = "0x1A75BA8", VA = "0x1A75BA8", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x400247D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _ojamaNotesDelay;

		[Token(Token = "0x400247E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool IsInvincible;

		[Token(Token = "0x400247F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Queue<MIItemName> OjamaNotesQueue;

		[Token(Token = "0x4002480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CancellationToken _token;

		[Token(Token = "0x4002481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Inject]
		private ItemPadController _itemPad;

		[Token(Token = "0x4002482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Inject]
		private ISubscriber<MedleyGameStatus> _gameStatusSubscriber;

		[Token(Token = "0x4002483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool _isOnGame;

		[Token(Token = "0x170002B2")]
		protected override bool dontDestroyOnLoad
		{
			[Token(Token = "0x6001B13")]
			[Address(RVA = "0x1A754FC", Offset = "0x1A754FC", VA = "0x1A754FC", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001B0F")]
		[Address(RVA = "0x1A75040", Offset = "0x1A75040", VA = "0x1A75040")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B10")]
		[Address(RVA = "0x1A75194", Offset = "0x1A75194", VA = "0x1A75194")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B11")]
		[Address(RVA = "0x1A752DC", Offset = "0x1A752DC", VA = "0x1A752DC")]
		[AsyncStateMachine(typeof(<EnqueueOjamaNotesWithDelay>d__9))]
		private UniTask EnqueueOjamaNotesWithDelay(MIItemName type, float delay, CancellationToken token)
		{
			return default(UniTask);
		}

		[Token(Token = "0x6001B12")]
		[Address(RVA = "0x1A75470", Offset = "0x1A75470", VA = "0x1A75470")]
		public void OnFitPatternInstanciated(OjamableFitPatternBase fitPattern)
		{
		}

		[Token(Token = "0x6001B14")]
		[Address(RVA = "0x1A75504", Offset = "0x1A75504", VA = "0x1A75504")]
		public OjamaReceiver()
		{
		}
	}
	[Token(Token = "0x20006B5")]
	public class OjamaRocketGnu : MonoBehaviour, IOjamaInvoker
	{
		[StructLayout(3)]
		[Token(Token = "0x20006B6")]
		[CompilerGenerated]
		private struct <InvokeOjamaEffect>d__21 : IAsyncStateMachine
		{
			[Token(Token = "0x400249C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400249D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x400249E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public OjamaRocketGnu <>4__this;

			[Token(Token = "0x400249F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CancellationToken token;

			[Token(Token = "0x40024A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6001B20")]
			[Address(RVA = "0x1A764C4", Offset = "0x1A764C4", VA = "0x1A764C4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001B21")]
			[Address(RVA = "0x1A77060", Offset = "0x1A77060", VA = "0x1A77060", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x400248B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _effect;

		[Token(Token = "0x400248C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MedleyGameDirector _medleyGameDirector;

		[Token(Token = "0x400248D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _gnu;

		[Token(Token = "0x400248E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Animator _gnuAnimator;

		[Token(Token = "0x400248F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _isWorking;

		[Token(Token = "0x4002490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int OpponentTackle;

		[Token(Token = "0x4002491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int OpponentResetPos;

		[Token(Token = "0x4002492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly int StartRunning;

		[Token(Token = "0x4002493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static readonly int StopRunning;

		[Token(Token = "0x4002494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Transform _tackleStartPos;

		[Token(Token = "0x4002495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Transform _tackleTarget;

		[Token(Token = "0x4002496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private float _tackleDuration;

		[Token(Token = "0x4002498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Inject]
		private InputProvider _inputProvider;

		[Token(Token = "0x4002499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float _secondPerBeat;

		[Token(Token = "0x400249A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool _judged;

		[Token(Token = "0x400249B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private RugbyFPDodgeJudge _dodgeJudge;

		[Token(Token = "0x170002B3")]
		[Inject]
		private ISubscriber<BPMData> BPMDataMessageSubscriber
		{
			[Token(Token = "0x6001B18")]
			[Address(RVA = "0x1A75BB4", Offset = "0x1A75BB4", VA = "0x1A75BB4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B19")]
			[Address(RVA = "0x1A75BBC", Offset = "0x1A75BBC", VA = "0x1A75BBC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001B1A")]
		[Address(RVA = "0x1A75BC4", Offset = "0x1A75BC4", VA = "0x1A75BC4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B1B")]
		[Address(RVA = "0x1A75CF0", Offset = "0x1A75CF0", VA = "0x1A75CF0", Slot = "4")]
		[AsyncStateMachine(typeof(<InvokeOjamaEffect>d__21))]
		public UniTask InvokeOjamaEffect(Vector3 position, CancellationToken token)
		{
			return default(UniTask);
		}

		[Token(Token = "0x6001B1C")]
		[Address(RVA = "0x1A75E70", Offset = "0x1A75E70", VA = "0x1A75E70")]
		private void Judge()
		{
		}

		[Token(Token = "0x6001B1D")]
		[Address(RVA = "0x1A762EC", Offset = "0x1A762EC", VA = "0x1A762EC")]
		public OjamaRocketGnu()
		{
		}
	}
}
namespace Imacreate.GrooveFitIsland._99_ORGANIZE_LATER.Nishizawa.MedleyGame.Scripts.ItemPad
{
	[Token(Token = "0x20006B7")]
	public class ItemPadButton : MonoBehaviour
	{
		[Token(Token = "0x40024A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PushButtonManager Button;

		[Token(Token = "0x40024A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SpriteRenderer SpriteRenderer;

		[Token(Token = "0x6001B22")]
		[Address(RVA = "0x1A7706C", Offset = "0x1A7706C", VA = "0x1A7706C")]
		public ItemPadButton()
		{
		}
	}
}
namespace Imacreate.GrooveFitIsland.MedleyGame
{
	[Token(Token = "0x20006B8")]
	public class MedleyGameRespawnEffect : MonoBehaviour
	{
		[Token(Token = "0x20006B9")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass21_0
		{
			[Token(Token = "0x40024B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MedleyGameRespawnEffect <>4__this;

			[Token(Token = "0x40024B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float currentBeatSave;

			[Token(Token = "0x40024B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int cnt;

			[Token(Token = "0x6001B2C")]
			[Address(RVA = "0x1A77468", Offset = "0x1A77468", VA = "0x1A77468")]
			public <>c__DisplayClass21_0()
			{
			}

			[Token(Token = "0x6001B2D")]
			[Address(RVA = "0x1A77470", Offset = "0x1A77470", VA = "0x1A77470")]
			internal bool <OnRespawned>b__0()
			{
				return default(bool);
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20006BA")]
		[CompilerGenerated]
		private struct <OnRespawned>d__21 : IAsyncStateMachine
		{
			[Token(Token = "0x40024B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40024B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x40024B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MedleyGameRespawnEffect <>4__this;

			[Token(Token = "0x40024B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int waitBeat;

			[Token(Token = "0x40024B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private <>c__DisplayClass21_0 <>8__1;

			[Token(Token = "0x40024B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public CancellationToken token;

			[Token(Token = "0x40024BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6001B2E")]
			[Address(RVA = "0x1A774A8", Offset = "0x1A774A8", VA = "0x1A774A8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001B2F")]
			[Address(RVA = "0x1A78578", Offset = "0x1A78578", VA = "0x1A78578", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x40024A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip _respawnSE1;

		[Token(Token = "0x40024A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip _respawnSE2;

		[Token(Token = "0x40024A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject _respawnTimeImageCanvas;

		[Token(Token = "0x40024A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Image _respawnTimeImage;

		[Token(Token = "0x40024A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private AudioMixer _auiomiMixer;

		[Token(Token = "0x40024A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private AudioSource _source;

		[Token(Token = "0x40024AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x40024AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float _bgmVolumeSave;

		[Token(Token = "0x40024AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float _secondPerBeat;

		[Token(Token = "0x40024AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private AudioSource _mainAudio;

		[Token(Token = "0x40024AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float _currentBeat;

		[Token(Token = "0x40024B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float _respawnGuageRatio;

		[Token(Token = "0x170002B4")]
		[Inject]
		private ISubscriber<BeatData> OnBeat
		{
			[Token(Token = "0x6001B23")]
			[Address(RVA = "0x1A77074", Offset = "0x1A77074", VA = "0x1A77074")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B24")]
			[Address(RVA = "0x1A7707C", Offset = "0x1A7707C", VA = "0x1A7707C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002B5")]
		[Inject]
		private ISubscriber<BPMData> _bpmSubscriber
		{
			[Token(Token = "0x6001B25")]
			[Address(RVA = "0x1A77084", Offset = "0x1A77084", VA = "0x1A77084")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B26")]
			[Address(RVA = "0x1A7708C", Offset = "0x1A7708C", VA = "0x1A7708C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001B27")]
		[Address(RVA = "0x1A77094", Offset = "0x1A77094", VA = "0x1A77094")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B28")]
		[Address(RVA = "0x1A77308", Offset = "0x1A77308", VA = "0x1A77308")]
		[AsyncStateMachine(typeof(<OnRespawned>d__21))]
		public Task OnRespawned(int waitBeat, CancellationToken token)
		{
			return null;
		}

		[Token(Token = "0x6001B29")]
		[Address(RVA = "0x1A7741C", Offset = "0x1A7741C", VA = "0x1A7741C")]
		public MedleyGameRespawnEffect()
		{
		}
	}
	[Token(Token = "0x20006BB")]
	public class SectionMessage
	{
		[Token(Token = "0x20006BC")]
		public enum MessageKey
		{
			[Token(Token = "0x40024BF")]
			SectionStart,
			[Token(Token = "0x40024C0")]
			IntroToBody,
			[Token(Token = "0x40024C1")]
			BodyToOutro,
			[Token(Token = "0x40024C2")]
			SectionFinish
		}

		[Token(Token = "0x40024BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MessageKey Key;

		[Token(Token = "0x40024BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public GrooveFitGame GFGame;

		[Token(Token = "0x40024BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int SectionCount;

		[Token(Token = "0x6001B30")]
		[Address(RVA = "0x1A78584", Offset = "0x1A78584", VA = "0x1A78584")]
		public SectionMessage()
		{
		}
	}
	[Token(Token = "0x20006BD")]
	public class BlockMessage
	{
		[Token(Token = "0x20006BE")]
		public enum MessageKey
		{
			[Token(Token = "0x40024C6")]
			BlockStart,
			[Token(Token = "0x40024C7")]
			BlockFinish
		}

		[Token(Token = "0x40024C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MessageKey Key;

		[Token(Token = "0x40024C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GrooveFitGame[] GFGames;

		[Token(Token = "0x6001B31")]
		[Address(RVA = "0x1A7858C", Offset = "0x1A7858C", VA = "0x1A7858C")]
		public BlockMessage()
		{
		}
	}
	[Token(Token = "0x20006BF")]
	public class RespawnMessage
	{
		[Token(Token = "0x20006C0")]
		public enum MessageKey
		{
			[Token(Token = "0x40024CA")]
			RespawnEffectStart,
			[Token(Token = "0x40024CB")]
			RespawnEffectFinish
		}

		[Token(Token = "0x40024C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MessageKey Key;

		[Token(Token = "0x6001B32")]
		[Address(RVA = "0x1A78594", Offset = "0x1A78594", VA = "0x1A78594")]
		public RespawnMessage()
		{
		}
	}
	[Token(Token = "0x20006C1")]
	public class MedleyGameAudioUtility : MonoBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x20006C2")]
		[CompilerGenerated]
		private struct <DOCrossFade>d__15 : IAsyncStateMachine
		{
			[Token(Token = "0x40024D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40024D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x40024D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public MedleyGameAudioUtility <>4__this;

			[Token(Token = "0x40024D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AudioClip clip;

			[Token(Token = "0x40024D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float duration;

			[Token(Token = "0x40024D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CancellationToken token;

			[Token(Token = "0x40024D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6001B3C")]
			[Address(RVA = "0x1A78880", Offset = "0x1A78880", VA = "0x1A78880", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001B3D")]
			[Address(RVA = "0x1A78E20", Offset = "0x1A78E20", VA = "0x1A78E20", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x40024CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _bgmSource;

		[Token(Token = "0x40024CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource _bgmSource2;

		[Token(Token = "0x40024CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AudioSource _mainAudio;

		[Token(Token = "0x40024CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AudioSource _subAudio;

		[Token(Token = "0x40024D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AudioSource SESource;

		[Token(Token = "0x40024D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Header("AudioClip")]
		[SerializeField]
		private AudioClip _gameOverMusic;

		[Token(Token = "0x170002B6")]
		public AudioSource MainAudio
		{
			[Token(Token = "0x6001B33")]
			[Address(RVA = "0x1A7859C", Offset = "0x1A7859C", VA = "0x1A7859C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B7")]
		public AudioSource SubAudio
		{
			[Token(Token = "0x6001B34")]
			[Address(RVA = "0x1A785A4", Offset = "0x1A785A4", VA = "0x1A785A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B35")]
		[Address(RVA = "0x1A785AC", Offset = "0x1A785AC", VA = "0x1A785AC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B36")]
		[Address(RVA = "0x1A785D4", Offset = "0x1A785D4", VA = "0x1A785D4")]
		public void PlaySE(AudioClip clip)
		{
		}

		[Token(Token = "0x6001B37")]
		[Address(RVA = "0x1A78624", Offset = "0x1A78624", VA = "0x1A78624")]
		public void StopBGMs()
		{
		}

		[Token(Token = "0x6001B38")]
		[Address(RVA = "0x1A7867C", Offset = "0x1A7867C", VA = "0x1A7867C")]
		public void PlayGameOverMusic()
		{
		}

		[Token(Token = "0x6001B39")]
		[Address(RVA = "0x1A78684", Offset = "0x1A78684", VA = "0x1A78684")]
		public void PlayMainAudio(AudioClip clip)
		{
		}

		[Token(Token = "0x6001B3A")]
		[Address(RVA = "0x1A786C8", Offset = "0x1A786C8", VA = "0x1A786C8")]
		[AsyncStateMachine(typeof(<DOCrossFade>d__15))]
		public UniTask DOCrossFade(AudioClip clip, float duration, CancellationToken token)
		{
			return default(UniTask);
		}

		[Token(Token = "0x6001B3B")]
		[Address(RVA = "0x1A78878", Offset = "0x1A78878", VA = "0x1A78878")]
		public MedleyGameAudioUtility()
		{
		}
	}
	[Token(Token = "0x20006C3")]
	public class MedleyGameCalorieCalculator : MonoBehaviour, IAutoSetUp
	{
		[Token(Token = "0x40024D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Settings")]
		[SerializeField]
		private IntensityMetsCalculator _intensityMetsCalculator;

		[Token(Token = "0x40024DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("Params")]
		[SerializeField]
		private float _baseMets;

		[Token(Token = "0x40024DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool _isWorking;

		[Token(Token = "0x40024DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float _playTime;

		[Token(Token = "0x40024DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float _completeRateDenominator;

		[Token(Token = "0x40024DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float _completeRateNumerator;

		[Token(Token = "0x40024DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _intensityMets;

		[Token(Token = "0x40024E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float _startTime;

		[Token(Token = "0x170002B8")]
		[Inject]
		private ISubscriber<FPActionData> OnFPAction
		{
			[Token(Token = "0x6001B3E")]
			[Address(RVA = "0x1A78E2C", Offset = "0x1A78E2C", VA = "0x1A78E2C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B3F")]
			[Address(RVA = "0x1A78E34", Offset = "0x1A78E34", VA = "0x1A78E34")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001B40")]
		[Address(RVA = "0x1A78E3C", Offset = "0x1A78E3C", VA = "0x1A78E3C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B41")]
		[Address(RVA = "0x1A78F34", Offset = "0x1A78F34", VA = "0x1A78F34")]
		public void StartCalculate()
		{
		}

		[Token(Token = "0x6001B42")]
		[Address(RVA = "0x1A78F7C", Offset = "0x1A78F7C", VA = "0x1A78F7C")]
		public void StopCalculate()
		{
		}

		[Token(Token = "0x6001B43")]
		[Address(RVA = "0x1A78FDC", Offset = "0x1A78FDC", VA = "0x1A78FDC")]
		public void ResetValue()
		{
		}

		[Token(Token = "0x6001B44")]
		[Address(RVA = "0x1A79008", Offset = "0x1A79008", VA = "0x1A79008")]
		public float GetValue()
		{
			return default(float);
		}

		[Token(Token = "0x6001B45")]
		[Address(RVA = "0x1A79094", Offset = "0x1A79094", VA = "0x1A79094", Slot = "4")]
		public void AutoSetUp()
		{
		}

		[Token(Token = "0x6001B46")]
		[Address(RVA = "0x1A791FC", Offset = "0x1A791FC", VA = "0x1A791FC")]
		public MedleyGameCalorieCalculator()
		{
		}
	}
	[Token(Token = "0x20006C4")]
	public class MedleyGameCalorieManager : SingletonMonoBehaviour<MedleyGameCalorieManager>
	{
		[Token(Token = "0x40024E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Inject]
		private ISubscriber<MedleyGameStatus> _statusSubscriber;

		[Token(Token = "0x40024E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Inject]
		private ISubscriber<SectionMessage> _sectionMessageSubscriber;

		[Token(Token = "0x40024E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Inject]
		private ISubscriber<BlockMessage> _blockMessageSubscriber;

		[Token(Token = "0x40024E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Inject]
		private MedleyGameGFDependentsManager _gfDependents;

		[Token(Token = "0x40024E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _blockCalorie;

		[Token(Token = "0x40024E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _gameCalorie;

		[Token(Token = "0x40024E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private MedleyGameCalorieCalculator _calculator;

		[Token(Token = "0x170002B9")]
		protected override bool dontDestroyOnLoad
		{
			[Token(Token = "0x6001B4F")]
			[Address(RVA = "0x1A798A4", Offset = "0x1A798A4", VA = "0x1A798A4", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002BA")]
		public float GameCalorie
		{
			[Token(Token = "0x6001B50")]
			[Address(RVA = "0x1A798AC", Offset = "0x1A798AC", VA = "0x1A798AC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001B48")]
		[Address(RVA = "0x1A79264", Offset = "0x1A79264", VA = "0x1A79264")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B49")]
		[Address(RVA = "0x1A79560", Offset = "0x1A79560", VA = "0x1A79560")]
		private void OnSectionStart(GrooveFitGame game)
		{
		}

		[Token(Token = "0x6001B4A")]
		[Address(RVA = "0x1A795F0", Offset = "0x1A795F0", VA = "0x1A795F0")]
		private void OnSectionFinish(GrooveFitGame game)
		{
		}

		[Token(Token = "0x6001B4B")]
		[Address(RVA = "0x1A7970C", Offset = "0x1A7970C", VA = "0x1A7970C")]
		private void OnBlockStart()
		{
		}

		[Token(Token = "0x6001B4C")]
		[Address(RVA = "0x1A79714", Offset = "0x1A79714", VA = "0x1A79714")]
		private void OnBlockFinish()
		{
		}

		[Token(Token = "0x6001B4D")]
		[Address(RVA = "0x1A797D8", Offset = "0x1A797D8", VA = "0x1A797D8")]
		private void OnGameStart()
		{
		}

		[Token(Token = "0x6001B4E")]
		[Address(RVA = "0x1A797E0", Offset = "0x1A797E0", VA = "0x1A797E0")]
		private void OnGameFinish()
		{
		}

		[Token(Token = "0x6001B51")]
		[Address(RVA = "0x1A798B4", Offset = "0x1A798B4", VA = "0x1A798B4")]
		public MedleyGameCalorieManager()
		{
		}
	}
	[Token(Token = "0x20006C5")]
	public class MedleyGameDirector : EventDirector
	{
		[StructLayout(3)]
		[Token(Token = "0x20006C6")]
		[CompilerGenerated]
		private struct <PrepareGFGames>d__58 : IAsyncStateMachine
		{
			[Token(Token = "0x400251F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002520")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4002521")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public MedleyGameDirector <>4__this;

			[Token(Token = "0x4002522")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<GrooveFitGame> games;

			[Token(Token = "0x4002523")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken token;

			[Token(Token = "0x4002524")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6001B69")]
			[Address(RVA = "0x1A7AA64", Offset = "0x1A7AA64", VA = "0x1A7AA64", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001B6A")]
			[Address(RVA = "0x1A7B0A0", Offset = "0x1A7B0A0", VA = "0x1A7B0A0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x20006C7")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass59_0
		{
			[StructLayout(3)]
			[Token(Token = "0x20006C8")]
			private struct <<StartEvents>b__0>d : IAsyncStateMachine
			{
				[Token(Token = "0x400252D")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public int <>1__state;

				[Token(Token = "0x400252E")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public AsyncUniTaskMethodBuilder <>t__builder;

				[Token(Token = "0x400252F")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public <>c__DisplayClass59_0 <>4__this;

				[Token(Token = "0x4002530")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				private UniTask.Awaiter <>u__1;

				[Token(Token = "0x6001B73")]
				[Address(RVA = "0x1A7B300", Offset = "0x1A7B300", VA = "0x1A7B300", Slot = "4")]
				private void MoveNext()
				{
				}

				[Token(Token = "0x6001B74")]
				[Address(RVA = "0x1A7B890", Offset = "0x1A7B890", VA = "0x1A7B890", Slot = "5")]
				[DebuggerHidden]
				private void SetStateMachine(IAsyncStateMachine stateMachine)
				{
				}
			}

			[Token(Token = "0x4002525")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MedleyGameDirector <>4__this;

			[Token(Token = "0x4002526")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public CancellationToken token;

			[Token(Token = "0x4002527")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Func<bool> <>9__2;

			[Token(Token = "0x4002528")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Func<bool> <>9__3;

			[Token(Token = "0x4002529")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Func<bool> <>9__4;

			[Token(Token = "0x400252A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Func<bool> <>9__5;

			[Token(Token = "0x400252B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Func<bool> <>9__6;

			[Token(Token = "0x400252C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public TweenCallback<float> <>9__7;

			[Token(Token = "0x6001B6B")]
			[Address(RVA = "0x1A7B0AC", Offset = "0x1A7B0AC", VA = "0x1A7B0AC")]
			public <>c__DisplayClass59_0()
			{
			}

			[Token(Token = "0x6001B6C")]
			[Address(RVA = "0x1A7B0B4", Offset = "0x1A7B0B4", VA = "0x1A7B0B4")]
			[AsyncStateMachine(typeof(<<StartEvents>b__0>d))]
			internal UniTask <StartEvents>b__0()
			{
				return default(UniTask);
			}

			[Token(Token = "0x6001B6D")]
			[Address(RVA = "0x1A7B210", Offset = "0x1A7B210", VA = "0x1A7B210")]
			internal bool <StartEvents>b__2()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B6E")]
			[Address(RVA = "0x1A7B238", Offset = "0x1A7B238", VA = "0x1A7B238")]
			internal bool <StartEvents>b__3()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B6F")]
			[Address(RVA = "0x1A7B264", Offset = "0x1A7B264", VA = "0x1A7B264")]
			internal bool <StartEvents>b__4()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B70")]
			[Address(RVA = "0x1A7B290", Offset = "0x1A7B290", VA = "0x1A7B290")]
			internal bool <StartEvents>b__5()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B71")]
			[Address(RVA = "0x1A7B2BC", Offset = "0x1A7B2BC", VA = "0x1A7B2BC")]
			internal bool <StartEvents>b__6()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B72")]
			[Address(RVA = "0x1A7B2E8", Offset = "0x1A7B2E8", VA = "0x1A7B2E8")]
			internal void <StartEvents>b__7(float value)
			{
			}
		}

		[Token(Token = "0x20006C9")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass59_1
		{
			[StructLayout(3)]
			[Token(Token = "0x20006CA")]
			private struct <<StartEvents>b__1>d : IAsyncStateMachine
			{
				[Token(Token = "0x4002534")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public int <>1__state;

				[Token(Token = "0x4002535")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public AsyncUniTaskMethodBuilder <>t__builder;

				[Token(Token = "0x4002536")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public <>c__DisplayClass59_1 <>4__this;

				[Token(Token = "0x4002537")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				private UniTask.Awaiter <>u__1;

				[Token(Token = "0x6001B77")]
				[Address(RVA = "0x1A7BA00", Offset = "0x1A7BA00", VA = "0x1A7BA00", Slot = "4")]
				private void MoveNext()
				{
				}

				[Token(Token = "0x6001B78")]
				[Address(RVA = "0x1A7C77C", Offset = "0x1A7C77C", VA = "0x1A7C77C", Slot = "5")]
				[DebuggerHidden]
				private void SetStateMachine(IAsyncStateMachine stateMachine)
				{
				}
			}

			[Token(Token = "0x4002531")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CancellationTokenSource frameLoopToken;

			[Token(Token = "0x4002532")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int count;

			[Token(Token = "0x4002533")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public <>c__DisplayClass59_0 CS$<>8__locals1;

			[Token(Token = "0x6001B75")]
			[Address(RVA = "0x1A7B89C", Offset = "0x1A7B89C", VA = "0x1A7B89C")]
			public <>c__DisplayClass59_1()
			{
			}

			[Token(Token = "0x6001B76")]
			[Address(RVA = "0x1A7B8A4", Offset = "0x1A7B8A4", VA = "0x1A7B8A4")]
			[AsyncStateMachine(typeof(<<StartEvents>b__1>d))]
			internal UniTask <StartEvents>b__1()
			{
				return default(UniTask);
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20006CC")]
		[CompilerGenerated]
		private struct <StartEvents>d__59 : IAsyncStateMachine
		{
			[Token(Token = "0x400253B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400253C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x400253D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public MedleyGameDirector <>4__this;

			[Token(Token = "0x400253E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CancellationToken token;

			[Token(Token = "0x400253F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private <>c__DisplayClass59_0 <>8__1;

			[Token(Token = "0x4002540")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private <>c__DisplayClass59_1 <>8__2;

			[Token(Token = "0x4002541")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private CancellationTokenSource <RespawnToken>5__2;

			[Token(Token = "0x4002542")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private int <blockCountInGame>5__3;

			[Token(Token = "0x4002543")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x4002544")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private int <blockCountInModule>5__4;

			[Token(Token = "0x4002545")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			private int <musicBlockCount>5__5;

			[Token(Token = "0x4002546")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private float <startBeat>5__6;

			[Token(Token = "0x6001B7D")]
			[Address(RVA = "0x1A7C8D0", Offset = "0x1A7C8D0", VA = "0x1A7C8D0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001B7E")]
			[Address(RVA = "0x1A80258", Offset = "0x1A80258", VA = "0x1A80258", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20006CD")]
		[CompilerGenerated]
		private struct <StartJingle>d__61 : IAsyncStateMachine
		{
			[Token(Token = "0x4002547")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002548")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4002549")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public MedleyGameDirector <>4__this;

			[Token(Token = "0x400254A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MedleyStartJingle jingle;

			[Token(Token = "0x400254B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken token;

			[Token(Token = "0x400254C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6001B7F")]
			[Address(RVA = "0x1A80264", Offset = "0x1A80264", VA = "0x1A80264", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001B80")]
			[Address(RVA = "0x1A80894", Offset = "0x1A80894", VA = "0x1A80894", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20006CE")]
		[CompilerGenerated]
		private struct <PrepareNextBlock>d__62 : IAsyncStateMachine
		{
			[Token(Token = "0x400254D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400254E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x400254F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public MedleyGameDirector <>4__this;

			[Token(Token = "0x4002550")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CancellationToken token;

			[Token(Token = "0x4002551")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private GrooveFitGame <second>5__2;

			[Token(Token = "0x4002552")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private GrooveFitGame <third>5__3;

			[Token(Token = "0x4002553")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6001B81")]
			[Address(RVA = "0x1A808A0", Offset = "0x1A808A0", VA = "0x1A808A0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001B82")]
			[Address(RVA = "0x1A81028", Offset = "0x1A81028", VA = "0x1A81028", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20006CF")]
		[CompilerGenerated]
		private struct <Respawn>d__66 : IAsyncStateMachine
		{
			[Token(Token = "0x4002554")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002555")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4002556")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MedleyGameDirector <>4__this;

			[Token(Token = "0x4002557")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CancellationToken token;

			[Token(Token = "0x4002558")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6001B83")]
			[Address(RVA = "0x1A81034", Offset = "0x1A81034", VA = "0x1A81034", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001B84")]
			[Address(RVA = "0x1A817B4", Offset = "0x1A817B4", VA = "0x1A817B4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x40024E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MedleyGameMusicSheetReader _reader;

		[Token(Token = "0x40024EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MedleyGameSlotEffect _slotEffect;

		[Token(Token = "0x40024EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MedleyGameRespawnEffect _respawnEffect;

		[Token(Token = "0x40024EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MedleyGameAudioUtility _audioUtility;

		[Token(Token = "0x40024ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private int _blocksPerGame;

		[Token(Token = "0x40024EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private TempoSetting _tempoSetting;

		[Token(Token = "0x40024EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private int _respawnWaitBeatNum;

		[Token(Token = "0x40024F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private int _maxLife;

		[Token(Token = "0x40024F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GameObject _lifePrefab;

		[Token(Token = "0x40024F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Transform _lifeParent;

		[Token(Token = "0x40024F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioClip _dissappearSound;

		[Token(Token = "0x40024F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private readonly List<GameObject> _lifeObjs;

		[Token(Token = "0x40024F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int miss;

		[Token(Token = "0x40024F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int _startLifeNum;

		[Token(Token = "0x40024F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private int _nowlifeNum;

		[Token(Token = "0x40024F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float _currentSpeed;

		[Token(Token = "0x40024F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<GrooveFitGame> _gfLottery;

		[Token(Token = "0x40024FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private IDisposable _fpActionDisposable;

		[Token(Token = "0x40024FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[Header("Debug Settings")]
		[SerializeField]
		private bool _useDebugGames;

		[Token(Token = "0x40024FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private List<GrooveFitGame> _debugGames;

		[Token(Token = "0x40024FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private bool _debugDontDie;

		[Token(Token = "0x40024FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		[SerializeField]
		private bool _debugFixedOrder;

		[Token(Token = "0x40024FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private int beatForLog;

		[Token(Token = "0x4002500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[Inject]
		private MedleyGameGFDependentsManager _gfDependents;

		[Token(Token = "0x4002501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[Inject]
		private IPublisher<OnFitPatternsDelete> _fitPatternsDelete;

		[Token(Token = "0x4002502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[Inject]
		private IPublisher<OnMusicGame> _onMusicGameMessage;

		[Token(Token = "0x4002503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[Inject]
		private IPublisher<SectionMessage> _sectionMessagePublisher;

		[Token(Token = "0x4002504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[Inject]
		private IPublisher<BlockMessage> _blockMessagePublisher;

		[Token(Token = "0x4002505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[Inject]
		private IPublisher<RespawnMessage> _respawnMessagePublisher;

		[Token(Token = "0x4002506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[Inject]
		private IPublisher<MedleyGameStatus> _gameStatusChanger;

		[Token(Token = "0x4002507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[Inject]
		private IPublisher<BPMData> _bpmPublisher;

		[Token(Token = "0x4002508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[Inject]
		private IPublisher<BeatData> _beatPublisher;

		[Token(Token = "0x4002509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[Inject]
		private IPublisher<LifeChangeData> _lifeChangeDataPublisher;

		[Token(Token = "0x400250A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[Inject]
		private ISubscriber<FPActionData> _onFPAction;

		[Token(Token = "0x400250B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private List<GrooveFitGame> _gfGames;

		[Token(Token = "0x400250C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private GrooveFitGame[] _playingBlock;

		[Token(Token = "0x400250D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private GrooveFitGame[] _nextBlock;

		[Token(Token = "0x400250E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private readonly Queue<SheetData> _sheetDataQueue;

		[Token(Token = "0x400250F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private IStartJingleSelector _startJingleSelector;

		[Token(Token = "0x4002510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private IMedleyModuleSelector _moduleSelector;

		[Token(Token = "0x4002511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private MedleyModule _musicUtils;

		[Token(Token = "0x4002512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private float _blockBeat;

		[Token(Token = "0x4002513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private CancellationTokenSource _tokenSource;

		[Token(Token = "0x4002514")]
		private const float BEAT_1 = 9f;

		[Token(Token = "0x4002515")]
		private const float BEAT_1_2 = 73f;

		[Token(Token = "0x4002516")]
		private const float BEAT_2 = 81f;

		[Token(Token = "0x4002517")]
		private const float BEAT_2_3 = 145f;

		[Token(Token = "0x4002518")]
		private const float BEAT_3 = 153f;

		[Token(Token = "0x4002519")]
		private const float BEAT_3_OUTRO = 217f;

		[Token(Token = "0x400251A")]
		private const float BEAT_FINISH = 225f;

		[Token(Token = "0x400251B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private bool _audioFinished;

		[Token(Token = "0x400251C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		private float _timeAfterAudio;

		[Token(Token = "0x400251D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private int _sectionCount;

		[Token(Token = "0x400251E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		private bool _skipFlag;

		[Token(Token = "0x6001B55")]
		[Address(RVA = "0x1A7999C", Offset = "0x1A7999C", VA = "0x1A7999C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B56")]
		[Address(RVA = "0x1A799F4", Offset = "0x1A799F4", VA = "0x1A799F4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B57")]
		[Address(RVA = "0x1A79B20", Offset = "0x1A79B20", VA = "0x1A79B20", Slot = "4")]
		public override void StandBy()
		{
		}

		[Token(Token = "0x6001B58")]
		[Address(RVA = "0x1A79E38", Offset = "0x1A79E38", VA = "0x1A79E38")]
		public void PrepareModuleSelector(IMedleyModuleSelector selector)
		{
		}

		[Token(Token = "0x6001B59")]
		[Address(RVA = "0x1A79E48", Offset = "0x1A79E48", VA = "0x1A79E48")]
		[AsyncStateMachine(typeof(<PrepareGFGames>d__58))]
		public UniTask PrepareGFGames(List<GrooveFitGame> games, CancellationToken token)
		{
			return default(UniTask);
		}

		[Token(Token = "0x6001B5A")]
		[Address(RVA = "0x1A79FD8", Offset = "0x1A79FD8", VA = "0x1A79FD8", Slot = "5")]
		[AsyncStateMachine(typeof(<StartEvents>d__59))]
		public override UniTask StartEvents(CancellationToken token)
		{
			return default(UniTask);
		}

		[Token(Token = "0x6001B5B")]
		[Address(RVA = "0x1A7A15C", Offset = "0x1A7A15C", VA = "0x1A7A15C")]
		private void SetSpeed(float speed)
		{
		}

		[Token(Token = "0x6001B5C")]
		[Address(RVA = "0x1A7A2E0", Offset = "0x1A7A2E0", VA = "0x1A7A2E0")]
		[AsyncStateMachine(typeof(<StartJingle>d__61))]
		private UniTask StartJingle(MedleyStartJingle jingle, CancellationToken token)
		{
			return default(UniTask);
		}

		[Token(Token = "0x6001B5D")]
		[Address(RVA = "0x1A7A470", Offset = "0x1A7A470", VA = "0x1A7A470")]
		[AsyncStateMachine(typeof(<PrepareNextBlock>d__62))]
		private UniTask PrepareNextBlock(CancellationToken token)
		{
			return default(UniTask);
		}

		[Token(Token = "0x6001B5E")]
		[Address(RVA = "0x1A75F2C", Offset = "0x1A75F2C", VA = "0x1A75F2C")]
		public void Damage()
		{
		}

		[Token(Token = "0x6001B5F")]
		[Address(RVA = "0x1A79B64", Offset = "0x1A79B64", VA = "0x1A79B64")]
		private void AddLife()
		{
		}

		[Token(Token = "0x6001B60")]
		[Address(RVA = "0x1A7A6C0", Offset = "0x1A7A6C0", VA = "0x1A7A6C0")]
		public void Heal()
		{
		}

		[Token(Token = "0x6001B61")]
		[Address(RVA = "0x1A7A5EC", Offset = "0x1A7A5EC", VA = "0x1A7A5EC")]
		[AsyncStateMachine(typeof(<Respawn>d__66))]
		private void Respawn(CancellationToken token)
		{
		}

		[Token(Token = "0x6001B62")]
		[Address(RVA = "0x1A7A6E0", Offset = "0x1A7A6E0", VA = "0x1A7A6E0")]
		private GrooveFitGame GFGameRandomSelect()
		{
			return default(GrooveFitGame);
		}

		[Token(Token = "0x6001B63")]
		[Address(RVA = "0x1A7A814", Offset = "0x1A7A814", VA = "0x1A7A814")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001B64")]
		[Address(RVA = "0x1A7A828", Offset = "0x1A7A828", VA = "0x1A7A828")]
		public MedleyGameDirector()
		{
		}
	}
	[Token(Token = "0x20006D0")]
	internal enum TempoSetting
	{
		[Token(Token = "0x400255A")]
		UpTempo,
		[Token(Token = "0x400255B")]
		KeepTempo
	}
	[Token(Token = "0x20006D1")]
	public enum PartyOption
	{
		[Token(Token = "0x400255D")]
		GFMusicsMedley,
		[Token(Token = "0x400255E")]
		Throughout
	}
	[Token(Token = "0x20006D2")]
	public class MedleyGameGFDependents : MonoBehaviour, IAutoSetUp
	{
		[Token(Token = "0x400255F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GrooveFitGame GFGame;

		[Token(Token = "0x4002560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GrooveFitBoxManager GFBox;

		[Token(Token = "0x4002561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MedleyGameCalorieCalculator CalorieCalculator;

		[Token(Token = "0x4002562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private IMedleyGameSectionEventBase[] _sectionEvents;

		[Token(Token = "0x4002563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private IGFDTransition[] _transitions;

		[Token(Token = "0x4002564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool _isClosed;

		[Token(Token = "0x6001B85")]
		[Address(RVA = "0x1A817C0", Offset = "0x1A817C0", VA = "0x1A817C0")]
		public void Prepare()
		{
		}

		[Token(Token = "0x6001B86")]
		[Address(RVA = "0x1A8192C", Offset = "0x1A8192C", VA = "0x1A8192C")]
		public void OpenUpdate(float t)
		{
		}

		[Token(Token = "0x6001B87")]
		[Address(RVA = "0x1A81A38", Offset = "0x1A81A38", VA = "0x1A81A38")]
		public void CloseUpdate(float t)
		{
		}

		[Token(Token = "0x6001B88")]
		[Address(RVA = "0x1A81C04", Offset = "0x1A81C04", VA = "0x1A81C04")]
		public void OpenSectionEvents()
		{
		}

		[Token(Token = "0x6001B89")]
		[Address(RVA = "0x1A81D1C", Offset = "0x1A81D1C", VA = "0x1A81D1C")]
		public void CloseSectionEvents()
		{
		}

		[Token(Token = "0x6001B8A")]
		[Address(RVA = "0x1A81E34", Offset = "0x1A81E34", VA = "0x1A81E34", Slot = "4")]
		public void AutoSetUp()
		{
		}

		[Token(Token = "0x6001B8B")]
		[Address(RVA = "0x1A81FEC", Offset = "0x1A81FEC", VA = "0x1A81FEC")]
		public MedleyGameGFDependents()
		{
		}
	}
	[Token(Token = "0x20006D6")]
	public class MedleyGameGFDependentsManager : MonoBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x20006D7")]
		[CompilerGenerated]
		private struct <Preload>d__16 : IAsyncStateMachine
		{
			[Token(Token = "0x400257B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400257C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x400257D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<GrooveFitGame> gfGames;

			[Token(Token = "0x400257E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MedleyGameGFDependentsManager <>4__this;

			[Token(Token = "0x400257F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken token;

			[Token(Token = "0x4002580")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private List<GrooveFitGame>.Enumerator <>7__wrap1;

			[Token(Token = "0x4002581")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6001B9F")]
			[Address(RVA = "0x1A82748", Offset = "0x1A82748", VA = "0x1A82748", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001BA0")]
			[Address(RVA = "0x1A82D94", Offset = "0x1A82D94", VA = "0x1A82D94", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20006D8")]
		[CompilerGenerated]
		private struct <To>d__18 : IAsyncStateMachine
		{
			[Token(Token = "0x4002582")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002583")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4002584")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GrooveFitGame gfGame;

			[Token(Token = "0x4002585")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float duration;

			[Token(Token = "0x4002586")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MedleyGameGFDependentsManager <>4__this;

			[Token(Token = "0x4002587")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken token;

			[Token(Token = "0x4002588")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x4002589")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private MedleyGameGFDependents <openGF>5__2;

			[Token(Token = "0x400258A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private MedleyGameGFDependents <closeGF>5__3;

			[Token(Token = "0x400258B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private float <t>5__4;

			[Token(Token = "0x6001BA1")]
			[Address(RVA = "0x1A82DA0", Offset = "0x1A82DA0", VA = "0x1A82DA0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001BA2")]
			[Address(RVA = "0x1A83980", Offset = "0x1A83980", VA = "0x1A83980", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x400256C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<GrooveFitGame, MedleyGameGFDependents> _gfDependentsDict;

		[Token(Token = "0x400256D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("Prefabs")]
		[SerializeField]
		private GameObject _gfDependentsPrefab_GF0;

		[Token(Token = "0x400256E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject _gfDependentsPrefab_GF1;

		[Token(Token = "0x400256F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject _gfDependentsPrefab_GF2;

		[Token(Token = "0x4002570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject _gfDependentsPrefab_GF4;

		[Token(Token = "0x4002571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject _gfDependentsPrefab_GF10;

		[Token(Token = "0x4002572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GameObject _gfDependentsPrefab_GF11;

		[Token(Token = "0x4002573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject _gfDependentsPrefab_GF12;

		[Token(Token = "0x4002574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _gfDependentsPrefab_GF18;

		[Token(Token = "0x4002575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _gfDependentsPrefab_GF22;

		[Token(Token = "0x4002576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject _gfDependentsPrefab_GF23;

		[Token(Token = "0x4002577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject _gfDependentsPrefab_GF24;

		[Token(Token = "0x4002578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject _gfDependentsPrefab_GF27;

		[Token(Token = "0x4002579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[Inject]
		private DiContainer _container;

		[Token(Token = "0x400257A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private GrooveFitGame? _currentMainGF;

		[Token(Token = "0x6001B96")]
		[Address(RVA = "0x1A82464", Offset = "0x1A82464", VA = "0x1A82464")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B97")]
		[Address(RVA = "0x1A7AF08", Offset = "0x1A7AF08", VA = "0x1A7AF08")]
		[AsyncStateMachine(typeof(<Preload>d__16))]
		public UniTask Preload(List<GrooveFitGame> gfGames, CancellationToken token)
		{
			return default(UniTask);
		}

		[Token(Token = "0x6001B98")]
		[Address(RVA = "0x1A82580", Offset = "0x1A82580", VA = "0x1A82580")]
		public MedleyGameGFDependents Get(GrooveFitGame gfGame)
		{
			return null;
		}

		[Token(Token = "0x6001B99")]
		[Address(RVA = "0x1A7FF20", Offset = "0x1A7FF20", VA = "0x1A7FF20")]
		[AsyncStateMachine(typeof(<To>d__18))]
		public UniTask To(GrooveFitGame gfGame, float duration, CancellationToken token)
		{
			return default(UniTask);
		}

		[Token(Token = "0x6001B9A")]
		[Address(RVA = "0x1A800BC", Offset = "0x1A800BC", VA = "0x1A800BC")]
		public GrooveFitBoxManager GetGFBoxManager(GrooveFitGame gfGame)
		{
			return null;
		}

		[Token(Token = "0x6001B9B")]
		[Address(RVA = "0x1A7958C", Offset = "0x1A7958C", VA = "0x1A7958C")]
		public MedleyGameCalorieCalculator GetCalorieCalculator(GrooveFitGame gfGame)
		{
			return null;
		}

		[Token(Token = "0x6001B9C")]
		[Address(RVA = "0x1A825D8", Offset = "0x1A825D8", VA = "0x1A825D8")]
		private GameObject GetPrefab(GrooveFitGame game)
		{
			return null;
		}

		[Token(Token = "0x6001B9D")]
		[Address(RVA = "0x1A826E0", Offset = "0x1A826E0", VA = "0x1A826E0")]
		public MedleyGameGFDependentsManager()
		{
		}
	}
	[Token(Token = "0x20006D9")]
	public class MedleyGameMusicSheetReader : MonoBehaviour
	{
		[Token(Token = "0x400258C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SheetData _sheetData;

		[Token(Token = "0x400258D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int _fpcount;

		[Token(Token = "0x400258E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GrooveFitBoxManager _gfBox;

		[Token(Token = "0x400258F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float _bpm;

		[Token(Token = "0x4002590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Inject]
		private IPublisher<string> _actionPublisher;

		[Token(Token = "0x4002591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Inject]
		private ItemPadController _itemPad;

		[Token(Token = "0x4002592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Inject]
		private ISubscriber<RespawnMessage> _respawnSubscriber;

		[Token(Token = "0x4002593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Inject]
		private DiContainer _container;

		[Token(Token = "0x4002594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool _skipped;

		[Token(Token = "0x4002595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool _respawnNow;

		[Token(Token = "0x170002BB")]
		private bool CanGenerateFitPattern
		{
			[Token(Token = "0x6001BA3")]
			[Address(RVA = "0x1A8398C", Offset = "0x1A8398C", VA = "0x1A8398C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001BA4")]
		[Address(RVA = "0x1A839C0", Offset = "0x1A839C0", VA = "0x1A839C0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001BA5")]
		[Address(RVA = "0x1A80120", Offset = "0x1A80120", VA = "0x1A80120")]
		public void SetSheetData(SheetData data, float musicBPM, GrooveFitBoxManager gfBox, float startBeat)
		{
		}

		[Token(Token = "0x6001BA6")]
		[Address(RVA = "0x1A7C428", Offset = "0x1A7C428", VA = "0x1A7C428")]
		public void OnBeat(float currentBeat)
		{
		}

		[Token(Token = "0x6001BA7")]
		[Address(RVA = "0x1A7C414", Offset = "0x1A7C414", VA = "0x1A7C414")]
		public void Skip()
		{
		}

		[Token(Token = "0x6001BA8")]
		[Address(RVA = "0x1A83AF4", Offset = "0x1A83AF4", VA = "0x1A83AF4")]
		private float SecondPerBeat(float bpm)
		{
			return default(float);
		}

		[Token(Token = "0x6001BA9")]
		[Address(RVA = "0x1A83B10", Offset = "0x1A83B10", VA = "0x1A83B10")]
		public MedleyGameMusicSheetReader()
		{
		}
	}
	[Token(Token = "0x20006DB")]
	public class MedleyGameScoreManager : SingletonMonoBehaviour<MedleyGameScoreManager>
	{
		[Token(Token = "0x4002597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Inject]
		private ISubscriber<MedleyGameStatus> _statusSubscriber;

		[Token(Token = "0x4002598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Inject]
		private ISubscriber<SectionMessage> _sectionMessageSubscriber;

		[Token(Token = "0x4002599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Inject]
		private ISubscriber<BlockMessage> _blockMessageSubscriber;

		[Token(Token = "0x400259A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Inject]
		private ISubscriber<RespawnMessage> _respawnSubscriber;

		[Token(Token = "0x400259B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[ReadOnly]
		private float _sectionScore;

		[Token(Token = "0x400259C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		[ReadOnly]
		private float _blockScore;

		[Token(Token = "0x400259D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[ReadOnly]
		private float _gameScore;

		[Token(Token = "0x400259E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		[ReadOnly]
		private int _maxCombo;

		[Token(Token = "0x400259F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[ReadOnly]
		private int _greatCount;

		[Token(Token = "0x40025A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		[ReadOnly]
		private int _okCount;

		[Token(Token = "0x40025A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[ReadOnly]
		private int _badCount;

		[Token(Token = "0x40025A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		[ReadOnly]
		private int _respawnCount;

		[Token(Token = "0x40025A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float _coefficient;

		[Token(Token = "0x40025A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float _comboScaleFactor;

		[Token(Token = "0x40025A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _scaleFactorBase;

		[Token(Token = "0x40025A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float _respawnScorePenalty;

		[Token(Token = "0x40025A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int _currentCombo;

		[Token(Token = "0x40025A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool _comboOnGoing;

		[Token(Token = "0x40025A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private SingletonMonoBehaviour<MedleyGameScoreManager> _singletonMonoBehaviourImplementation;

		[Token(Token = "0x40025AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private readonly bool _dontDestroyOnLoad;

		[Token(Token = "0x170002BC")]
		protected override bool dontDestroyOnLoad
		{
			[Token(Token = "0x6001BAD")]
			[Address(RVA = "0x1A83B64", Offset = "0x1A83B64", VA = "0x1A83B64", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002BD")]
		[Inject]
		private ISubscriber<FPActionData> OnFPAction
		{
			[Token(Token = "0x6001BAE")]
			[Address(RVA = "0x1A83B6C", Offset = "0x1A83B6C", VA = "0x1A83B6C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001BAF")]
			[Address(RVA = "0x1A83B74", Offset = "0x1A83B74", VA = "0x1A83B74")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002BE")]
		[Inject]
		private IPublisher<CurrentScoreData> CurrentScoreMessage
		{
			[Token(Token = "0x6001BB0")]
			[Address(RVA = "0x1A83B7C", Offset = "0x1A83B7C", VA = "0x1A83B7C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001BB1")]
			[Address(RVA = "0x1A83B84", Offset = "0x1A83B84", VA = "0x1A83B84")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002BF")]
		[Inject]
		private IPublisher<DecreaseScoreData> DecreaseScoreMassage
		{
			[Token(Token = "0x6001BB2")]
			[Address(RVA = "0x1A83B8C", Offset = "0x1A83B8C", VA = "0x1A83B8C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001BB3")]
			[Address(RVA = "0x1A83B94", Offset = "0x1A83B94", VA = "0x1A83B94")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001BB4")]
		[Address(RVA = "0x1A83B9C", Offset = "0x1A83B9C", VA = "0x1A83B9C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001BB5")]
		[Address(RVA = "0x1A84040", Offset = "0x1A84040", VA = "0x1A84040")]
		private void AddScore(FPActionData value)
		{
		}

		[Token(Token = "0x6001BB6")]
		[Address(RVA = "0x1A84268", Offset = "0x1A84268", VA = "0x1A84268")]
		public void ChangeComboScaleFactor(float scale)
		{
		}

		[Token(Token = "0x6001BB7")]
		[Address(RVA = "0x1A84270", Offset = "0x1A84270", VA = "0x1A84270")]
		private void OnSectionStart()
		{
		}

		[Token(Token = "0x6001BB8")]
		[Address(RVA = "0x1A84278", Offset = "0x1A84278", VA = "0x1A84278")]
		private void OnSectionFinish()
		{
		}

		[Token(Token = "0x6001BB9")]
		[Address(RVA = "0x1A8433C", Offset = "0x1A8433C", VA = "0x1A8433C")]
		private void OnBlockStart()
		{
		}

		[Token(Token = "0x6001BBA")]
		[Address(RVA = "0x1A84344", Offset = "0x1A84344", VA = "0x1A84344")]
		private void OnBlockFinish()
		{
		}

		[Token(Token = "0x6001BBB")]
		[Address(RVA = "0x1A84408", Offset = "0x1A84408", VA = "0x1A84408")]
		private void OnGameStart()
		{
		}

		[Token(Token = "0x6001BBC")]
		[Address(RVA = "0x1A8441C", Offset = "0x1A8441C", VA = "0x1A8441C")]
		private void OnRespawn()
		{
		}

		[Token(Token = "0x6001BBD")]
		[Address(RVA = "0x1A8452C", Offset = "0x1A8452C", VA = "0x1A8452C")]
		private void OnGameFinish()
		{
		}

		[Token(Token = "0x6001BBE")]
		[Address(RVA = "0x1A845F0", Offset = "0x1A845F0", VA = "0x1A845F0")]
		public ScoreData GetScoreData()
		{
			return null;
		}

		[Token(Token = "0x6001BBF")]
		[Address(RVA = "0x1A84660", Offset = "0x1A84660", VA = "0x1A84660")]
		public int GetRespawnCount()
		{
			return default(int);
		}

		[Token(Token = "0x6001BC0")]
		[Address(RVA = "0x1A84668", Offset = "0x1A84668", VA = "0x1A84668")]
		public MedleyGameScoreManager()
		{
		}
	}
	[Token(Token = "0x20006DC")]
	public class MedleyGameSlotEffect : MonoBehaviour
	{
		[Token(Token = "0x40025AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioClip _slotCreate;

		[Token(Token = "0x40025AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip _slotStart;

		[Token(Token = "0x40025B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip _slotStop;

		[Token(Token = "0x40025B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _slotGoAway;

		[Token(Token = "0x6001BC5")]
		[Address(RVA = "0x1A84784", Offset = "0x1A84784", VA = "0x1A84784")]
		public void StartSlot(GrooveFitGame first, GrooveFitGame second, GrooveFitGame third, CancellationToken token)
		{
		}

		[Token(Token = "0x6001BC6")]
		[Address(RVA = "0x1A7B860", Offset = "0x1A7B860", VA = "0x1A7B860")]
		public void StartSlot(GrooveFitGame[] games, CancellationToken token)
		{
		}

		[Token(Token = "0x6001BC7")]
		[Address(RVA = "0x1A8488C", Offset = "0x1A8488C", VA = "0x1A8488C")]
		public MedleyGameSlotEffect()
		{
		}
	}
	[Token(Token = "0x20006DF")]
	public class MedleyGameStatus
	{
		[Token(Token = "0x20006E0")]
		public enum Status
		{
			[Token(Token = "0x40025B8")]
			Standby,
			[Token(Token = "0x40025B9")]
			Main,
			[Token(Token = "0x40025BA")]
			Result
		}

		[Token(Token = "0x40025B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Status status;

		[Token(Token = "0x6001BCD")]
		[Address(RVA = "0x1A80250", Offset = "0x1A80250", VA = "0x1A80250")]
		public MedleyGameStatus()
		{
		}
	}
	[Token(Token = "0x20006E1")]
	public class MedleyGameZenjectInstaller : MonoInstaller
	{
		[Token(Token = "0x6001BCE")]
		[Address(RVA = "0x1A84B10", Offset = "0x1A84B10", VA = "0x1A84B10", Slot = "8")]
		public override void InstallBindings()
		{
		}

		[Token(Token = "0x6001BCF")]
		[Address(RVA = "0x1A84F04", Offset = "0x1A84F04", VA = "0x1A84F04")]
		public MedleyGameZenjectInstaller()
		{
		}
	}
	[Token(Token = "0x20006E2")]
	public abstract class MedleyModule : ScriptableObject
	{
		[Token(Token = "0x20006E3")]
		public enum ModuleType
		{
			[Token(Token = "0x40025C0")]
			SectionMedley,
			[Token(Token = "0x40025C1")]
			InterSection
		}

		[Token(Token = "0x40025BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _bpm;

		[Token(Token = "0x40025BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		[ReadOnly]
		private float _secondPerBeat;

		[Token(Token = "0x40025BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ModuleType Type;

		[Token(Token = "0x40025BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int BlockLength;

		[Token(Token = "0x170002C0")]
		public float BPM
		{
			[Token(Token = "0x6001BD3")]
			[Address(RVA = "0x1A84F40", Offset = "0x1A84F40", VA = "0x1A84F40")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002C1")]
		public float SecondPerBeat
		{
			[Token(Token = "0x6001BD4")]
			[Address(RVA = "0x1A84F48", Offset = "0x1A84F48", VA = "0x1A84F48")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001BD0")]
		public abstract AudioClip GetClip(GrooveFitGame grooveFitGame);

		[Token(Token = "0x6001BD1")]
		public abstract TextAsset GetSheet(GrooveFitGame grooveFitGame);

		[Token(Token = "0x6001BD2")]
		[Address(RVA = "0x1A84F0C", Offset = "0x1A84F0C", VA = "0x1A84F0C")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001BD5")]
		[Address(RVA = "0x1A84F50", Offset = "0x1A84F50", VA = "0x1A84F50")]
		protected MedleyModule()
		{
		}
	}
	[Token(Token = "0x20006E4")]
	public class MedleySceneTransision : SingletonMonoBehaviour<MedleySceneTransision>
	{
		[StructLayout(3)]
		[Token(Token = "0x20006E5")]
		[CompilerGenerated]
		private struct <TransitionAndStartGame>d__4 : IAsyncStateMachine
		{
			[Token(Token = "0x40025C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40025C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x40025C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public MedleySceneTransision <>4__this;

			[Token(Token = "0x40025C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CancellationToken token;

			[Token(Token = "0x40025CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public List<GrooveFitGame> gfGames;

			[Token(Token = "0x40025CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private IStartableDirector <director>5__2;

			[Token(Token = "0x40025CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x40025CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private UnityAsyncExtensions.AsyncOperationAwaiter <>u__2;

			[Token(Token = "0x6001BD9")]
			[Address(RVA = "0x1A85148", Offset = "0x1A85148", VA = "0x1A85148", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001BDA")]
			[Address(RVA = "0x1A85E88", Offset = "0x1A85E88", VA = "0x1A85E88", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x40025C2")]
		private const bool _dontDestroyOnLoad = true;

		[Token(Token = "0x40025C3")]
		private const string MEDLEY_GAME_SCENE = "MG2_MedleyGame";

		[Token(Token = "0x40025C4")]
		private const string MEDLEY_DIRECTOR_TAG = "MedleyDirector";

		[Token(Token = "0x40025C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Inject]
		private InputProvider _inputProvider;

		[Token(Token = "0x170002C2")]
		protected override bool dontDestroyOnLoad
		{
			[Token(Token = "0x6001BD7")]
			[Address(RVA = "0x1A850F8", Offset = "0x1A850F8", VA = "0x1A850F8", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001BD6")]
		[Address(RVA = "0x1A84F60", Offset = "0x1A84F60", VA = "0x1A84F60")]
		[AsyncStateMachine(typeof(<TransitionAndStartGame>d__4))]
		public UniTask TransitionAndStartGame(List<GrooveFitGame> gfGames, CancellationToken token)
		{
			return default(UniTask);
		}

		[Token(Token = "0x6001BD8")]
		[Address(RVA = "0x1A85100", Offset = "0x1A85100", VA = "0x1A85100")]
		public MedleySceneTransision()
		{
		}
	}
	[Token(Token = "0x20006E6")]
	public class MedleySelectZenjectInstaller : MonoInstaller
	{
		[Token(Token = "0x6001BDB")]
		[Address(RVA = "0x1A85E94", Offset = "0x1A85E94", VA = "0x1A85E94", Slot = "8")]
		public override void InstallBindings()
		{
		}

		[Token(Token = "0x6001BDC")]
		[Address(RVA = "0x1A85E98", Offset = "0x1A85E98", VA = "0x1A85E98")]
		public MedleySelectZenjectInstaller()
		{
		}
	}
	[Token(Token = "0x20006E7")]
	public class PrepareMedleyDirector : EventBlock
	{
		[StructLayout(3)]
		[Token(Token = "0x20006E8")]
		[CompilerGenerated]
		private struct <SetEvent>d__4 : IAsyncStateMachine
		{
			[Token(Token = "0x40025D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40025D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x40025D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PrepareMedleyDirector <>4__this;

			[Token(Token = "0x40025D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken token;

			[Token(Token = "0x40025D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6001BE0")]
			[Address(RVA = "0x1A86104", Offset = "0x1A86104", VA = "0x1A86104", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001BE1")]
			[Address(RVA = "0x1A865A4", Offset = "0x1A865A4", VA = "0x1A865A4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20006E9")]
		[CompilerGenerated]
		private struct <SetGF>d__5 : IAsyncStateMachine
		{
			[Token(Token = "0x40025D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40025D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x40025D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public CancellationToken token;

			[Token(Token = "0x40025DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PrepareMedleyDirector <>4__this;

			[Token(Token = "0x40025DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private NetworkPartyGameSettings <settingSender>5__2;

			[Token(Token = "0x40025DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask<(NetworkObject, NetworkObject)>.Awaiter <>u__1;

			[Token(Token = "0x40025DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private UniTask.Awaiter <>u__2;

			[Token(Token = "0x6001BE2")]
			[Address(RVA = "0x1A865FC", Offset = "0x1A865FC", VA = "0x1A865FC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001BE3")]
			[Address(RVA = "0x1A87108", Offset = "0x1A87108", VA = "0x1A87108", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x40025CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MedleyGameDirector _director;

		[Token(Token = "0x40025CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private PartyOption _type;

		[Token(Token = "0x40025D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ConstantModuleSelector ThroughOutSelector;

		[Token(Token = "0x40025D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ConstantModuleSelector GFMedleySelector;

		[Token(Token = "0x6001BDD")]
		[Address(RVA = "0x1A85EA0", Offset = "0x1A85EA0", VA = "0x1A85EA0", Slot = "4")]
		[AsyncStateMachine(typeof(<SetEvent>d__4))]
		public override UniTask<bool> SetEvent(CancellationToken token)
		{
			return default(UniTask<bool>);
		}

		[Token(Token = "0x6001BDE")]
		[Address(RVA = "0x1A85F7C", Offset = "0x1A85F7C", VA = "0x1A85F7C")]
		[AsyncStateMachine(typeof(<SetGF>d__5))]
		private UniTask SetGF(CancellationToken token)
		{
			return default(UniTask);
		}

		[Token(Token = "0x6001BDF")]
		[Address(RVA = "0x1A860FC", Offset = "0x1A860FC", VA = "0x1A860FC")]
		public PrepareMedleyDirector()
		{
		}
	}
	[Token(Token = "0x20006EA")]
	public interface IGFDTransition
	{
		[Token(Token = "0x6001BE4")]
		void OpenUpdate(float t);

		[Token(Token = "0x6001BE5")]
		void CloseUpdate(float t);
	}
	[Token(Token = "0x20006EB")]
	public class MedleyGameAxeGrab : MonoBehaviour, IMedleyGameSectionEventBase
	{
		[Token(Token = "0x40025DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _axe;

		[Token(Token = "0x40025DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private WoodChopperCheckBothHand _checkBothHand;

		[Token(Token = "0x40025E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Inject]
		private InputProvider _inputProvider;

		[Token(Token = "0x40025E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Inject]
		private ISubscriber<OnPause> _onPauseSubscriber;

		[Token(Token = "0x40025E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform _defaultParent;

		[Token(Token = "0x40025E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private VRHand.HandType _savedHand;

		[Token(Token = "0x40025E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private IDisposable _disposable;

		[Token(Token = "0x6001BE6")]
		[Address(RVA = "0x1A87114", Offset = "0x1A87114", VA = "0x1A87114")]
		private void Start()
		{
		}

		[Token(Token = "0x6001BE7")]
		[Address(RVA = "0x1A87168", Offset = "0x1A87168", VA = "0x1A87168", Slot = "4")]
		public void OnStartSection()
		{
		}

		[Token(Token = "0x6001BE8")]
		[Address(RVA = "0x1A87574", Offset = "0x1A87574", VA = "0x1A87574", Slot = "5")]
		public void OnFinishSection()
		{
		}

		[Token(Token = "0x6001BE9")]
		[Address(RVA = "0x1A87658", Offset = "0x1A87658", VA = "0x1A87658")]
		public MedleyGameAxeGrab()
		{
		}
	}
	[Token(Token = "0x20006EC")]
	public class MedleyGameHandItemsRoot : MonoBehaviour, IMedleyGameSectionEventBase
	{
		[Token(Token = "0x40025E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private VRHand.HandType _handType;

		[Token(Token = "0x40025E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Inject]
		private InputProvider _inputProvider;

		[Token(Token = "0x40025E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<Transform> _children;

		[Token(Token = "0x6001BEB")]
		[Address(RVA = "0x1A876C4", Offset = "0x1A876C4", VA = "0x1A876C4", Slot = "4")]
		public void OnStartSection()
		{
		}

		[Token(Token = "0x6001BEC")]
		[Address(RVA = "0x1A87B4C", Offset = "0x1A87B4C", VA = "0x1A87B4C", Slot = "5")]
		public void OnFinishSection()
		{
		}

		[Token(Token = "0x6001BED")]
		[Address(RVA = "0x1A87D3C", Offset = "0x1A87D3C", VA = "0x1A87D3C")]
		public MedleyGameHandItemsRoot()
		{
		}
	}
	[Token(Token = "0x20006ED")]
	public class MedleyGameHeadItemsRoot : MonoBehaviour, IMedleyGameSectionEventBase
	{
		[Token(Token = "0x40025E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Inject]
		private InputProvider _inputProvider;

		[Token(Token = "0x40025E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<Transform> _children;

		[Token(Token = "0x6001BEE")]
		[Address(RVA = "0x1A87D44", Offset = "0x1A87D44", VA = "0x1A87D44", Slot = "4")]
		public void OnStartSection()
		{
		}

		[Token(Token = "0x6001BEF")]
		[Address(RVA = "0x1A881C8", Offset = "0x1A881C8", VA = "0x1A881C8", Slot = "5")]
		public void OnFinishSection()
		{
		}

		[Token(Token = "0x6001BF0")]
		[Address(RVA = "0x1A883B8", Offset = "0x1A883B8", VA = "0x1A883B8")]
		public MedleyGameHeadItemsRoot()
		{
		}
	}
	[Token(Token = "0x20006EE")]
	public class MedleyGameRacketGrab : MonoBehaviour, IMedleyGameSectionEventBase
	{
		[Token(Token = "0x40025EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ESKeys _esKeys;

		[Token(Token = "0x40025EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _racket;

		[Token(Token = "0x40025EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MedleyGameRacketHaptics _haptics;

		[Token(Token = "0x40025ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Inject]
		private InputProvider _inputProvider;

		[Token(Token = "0x40025EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Inject]
		private ISubscriber<OnPause> _onPauseSubscriber;

		[Token(Token = "0x40025EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform _defaultParent;

		[Token(Token = "0x40025F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private IDisposable _disposable;

		[Token(Token = "0x40025F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private VRHand.HandType _savedHand;

		[Token(Token = "0x6001BF1")]
		[Address(RVA = "0x1A883C0", Offset = "0x1A883C0", VA = "0x1A883C0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001BF2")]
		[Address(RVA = "0x1A88414", Offset = "0x1A88414", VA = "0x1A88414", Slot = "4")]
		public void OnStartSection()
		{
		}

		[Token(Token = "0x6001BF3")]
		[Address(RVA = "0x1A88AB8", Offset = "0x1A88AB8", VA = "0x1A88AB8", Slot = "5")]
		public void OnFinishSection()
		{
		}

		[Token(Token = "0x6001BF4")]
		[Address(RVA = "0x1A88D10", Offset = "0x1A88D10", VA = "0x1A88D10")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001BF5")]
		[Address(RVA = "0x1A88DB8", Offset = "0x1A88DB8", VA = "0x1A88DB8")]
		public MedleyGameRacketGrab()
		{
		}
	}
	[Token(Token = "0x20006EF")]
	public class MedleyGameRacketHaptics : MonoBehaviour
	{
		[Token(Token = "0x40025F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Inject]
		private InputProvider _inputProvider;

		[Token(Token = "0x40025F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float _strength;

		[Token(Token = "0x40025F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float _time;

		[Token(Token = "0x40025F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private IDisposable _disposable;

		[Token(Token = "0x170002C3")]
		[Inject]
		private ISubscriber<FPActionData> OnFPAction
		{
			[Token(Token = "0x6001BF7")]
			[Address(RVA = "0x1A88E2C", Offset = "0x1A88E2C", VA = "0x1A88E2C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001BF8")]
			[Address(RVA = "0x1A88E34", Offset = "0x1A88E34", VA = "0x1A88E34")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001BF9")]
		[Address(RVA = "0x1A88824", Offset = "0x1A88824", VA = "0x1A88824")]
		public void SetRacketHaptics(VRHand.HandType hand)
		{
		}

		[Token(Token = "0x6001BFA")]
		[Address(RVA = "0x1A88C64", Offset = "0x1A88C64", VA = "0x1A88C64")]
		public void DisposeRacketHaptics()
		{
		}

		[Token(Token = "0x6001BFB")]
		[Address(RVA = "0x1A88E44", Offset = "0x1A88E44", VA = "0x1A88E44")]
		public MedleyGameRacketHaptics()
		{
		}
	}
	[Token(Token = "0x20006F1")]
	public class MedleyGameRodGrab : MonoBehaviour, IMedleyGameSectionEventBase
	{
		[Token(Token = "0x40025F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _rod;

		[Token(Token = "0x40025FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private FishingCheckBothHand _checkBothHand;

		[Token(Token = "0x40025FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GrabRodHandController _grabRodHandController;

		[Token(Token = "0x40025FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private RodController _rodController;

		[Token(Token = "0x40025FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ObiSolver _obiSolver;

		[Token(Token = "0x40025FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private ObiFixedUpdater _updater;

		[Token(Token = "0x40025FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Inject]
		private InputProvider _inputProvider;

		[Token(Token = "0x4002600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Inject]
		private ISubscriber<OnPause> _onPauseSubscriber;

		[Token(Token = "0x4002601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform _defaultParent;

		[Token(Token = "0x4002602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private VRHand.HandType _savedHand;

		[Token(Token = "0x4002603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private IDisposable _disposable;

		[Token(Token = "0x6001BFE")]
		[Address(RVA = "0x1A88F5C", Offset = "0x1A88F5C", VA = "0x1A88F5C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001BFF")]
		[Address(RVA = "0x1A88FD4", Offset = "0x1A88FD4", VA = "0x1A88FD4", Slot = "4")]
		public void OnStartSection()
		{
		}

		[Token(Token = "0x6001C00")]
		[Address(RVA = "0x1A892DC", Offset = "0x1A892DC", VA = "0x1A892DC")]
		private void SetRodReady()
		{
		}

		[Token(Token = "0x6001C01")]
		[Address(RVA = "0x1A89430", Offset = "0x1A89430", VA = "0x1A89430", Slot = "5")]
		public void OnFinishSection()
		{
		}

		[Token(Token = "0x6001C02")]
		[Address(RVA = "0x1A89564", Offset = "0x1A89564", VA = "0x1A89564")]
		public MedleyGameRodGrab()
		{
		}
	}
	[Token(Token = "0x20006F2")]
	public class MedleyGameRugbyMove : MonoBehaviour, IMedleyGameSectionEventBase
	{
		[Token(Token = "0x4002604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private RugbyObjectMover[] _objectMovers;

		[Token(Token = "0x4002605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TeammateManager[] _teammateManagers;

		[Token(Token = "0x4002606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TeammateEventManager _teammateEventManager;

		[Token(Token = "0x6001C04")]
		[Address(RVA = "0x1A895D0", Offset = "0x1A895D0", VA = "0x1A895D0", Slot = "4")]
		public void OnStartSection()
		{
		}

		[Token(Token = "0x6001C05")]
		[Address(RVA = "0x1A89850", Offset = "0x1A89850", VA = "0x1A89850", Slot = "5")]
		public void OnFinishSection()
		{
		}

		[Token(Token = "0x6001C06")]
		[Address(RVA = "0x1A89A20", Offset = "0x1A89A20", VA = "0x1A89A20")]
		public MedleyGameRugbyMove()
		{
		}
	}
	[Token(Token = "0x20006F4")]
	public class MedleyGameSelectBatHand : MonoBehaviour, IMedleyGameSectionEventBase
	{
		[Token(Token = "0x400260C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _bat;

		[Token(Token = "0x400260D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GrabBatCheckBothHand _grabBatCheckBothHand;

		[Token(Token = "0x400260E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private BaseballHaptics _hapticsProvider;

		[Token(Token = "0x400260F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GrabBatHandController _grabBatHandController;

		[Token(Token = "0x4002610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Inject]
		private InputProvider _inputProvider;

		[Token(Token = "0x4002611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private List<Transform> _objectToAdjust;

		[Token(Token = "0x4002612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private List<FitPatternBoxManager> _positionAdjustFitPatterns;

		[Token(Token = "0x4002613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Vector3 _rightBoxCenter;

		[Token(Token = "0x4002614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private Vector3 _leftBoxCenter;

		[Token(Token = "0x4002615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform _defaultParent;

		[Token(Token = "0x4002616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private VRHand.HandType _savedHand;

		[Token(Token = "0x4002617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private SelectBatHandEvent.BatterType _savedBatterType;

		[Token(Token = "0x4002618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool _setUpDone;

		[Token(Token = "0x6001C0E")]
		[Address(RVA = "0x1A89B1C", Offset = "0x1A89B1C", VA = "0x1A89B1C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C0F")]
		[Address(RVA = "0x1A89BA0", Offset = "0x1A89BA0", VA = "0x1A89BA0", Slot = "4")]
		public void OnStartSection()
		{
		}

		[Token(Token = "0x6001C10")]
		[Address(RVA = "0x1A89CF0", Offset = "0x1A89CF0", VA = "0x1A89CF0")]
		private void SetUp()
		{
		}

		[Token(Token = "0x6001C11")]
		[Address(RVA = "0x1A8A234", Offset = "0x1A8A234", VA = "0x1A8A234", Slot = "5")]
		public void OnFinishSection()
		{
		}

		[Token(Token = "0x6001C12")]
		[Address(RVA = "0x1A8A270", Offset = "0x1A8A270", VA = "0x1A8A270")]
		public MedleyGameSelectBatHand()
		{
		}
	}
	[Token(Token = "0x20006F5")]
	public class MedleyGameSelectClubHand : MonoBehaviour, IMedleyGameSectionEventBase
	{
		[Token(Token = "0x4002619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _club;

		[Token(Token = "0x400261A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GrabClubCheckBothHand _grabClubCheckBothHand;

		[Token(Token = "0x400261B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GolfHaptics _hapticsProvider;

		[Token(Token = "0x400261C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GolfClubSwitcher _golfClubSwitcher;

		[Token(Token = "0x400261D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GrabClubHandController _grabClubHandController;

		[Token(Token = "0x400261E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GolfUITransformLRFlip _uiTransformLrFlip;

		[Token(Token = "0x400261F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GolfClubHead _clubHead;

		[Token(Token = "0x4002620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Inject]
		private InputProvider _inputProvider;

		[Token(Token = "0x4002621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private List<SelectClubHandEvent.LRAdjustObject> _lrAdjustObjects;

		[Token(Token = "0x4002622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform _defaultParent;

		[Token(Token = "0x4002623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private VRHand.HandType _savedHand;

		[Token(Token = "0x4002624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private SelectClubHandEvent.GolferSwingType _savedSwingType;

		[Token(Token = "0x4002625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool _setUpDone;

		[Token(Token = "0x6001C13")]
		[Address(RVA = "0x1A8A278", Offset = "0x1A8A278", VA = "0x1A8A278")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C14")]
		[Address(RVA = "0x1A8A2FC", Offset = "0x1A8A2FC", VA = "0x1A8A2FC", Slot = "4")]
		public void OnStartSection()
		{
		}

		[Token(Token = "0x6001C15")]
		[Address(RVA = "0x1A8A474", Offset = "0x1A8A474", VA = "0x1A8A474")]
		private void SetUp()
		{
		}

		[Token(Token = "0x6001C16")]
		[Address(RVA = "0x1A8A814", Offset = "0x1A8A814", VA = "0x1A8A814", Slot = "5")]
		public void OnFinishSection()
		{
		}

		[Token(Token = "0x6001C17")]
		[Address(RVA = "0x1A8A850", Offset = "0x1A8A850", VA = "0x1A8A850")]
		public MedleyGameSelectClubHand()
		{
		}
	}
	[Token(Token = "0x20006F6")]
	public class SinglePlayMedleySelectUI : MonoBehaviour
	{
		[Token(Token = "0x4002626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<GrooveFitGame> _gfGames;

		[Token(Token = "0x4002627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _isLoading;

		[Token(Token = "0x4002628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextMeshProUGUI _textMeshPro;

		[Token(Token = "0x4002629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Inject]
		private DiContainer _container;

		[Token(Token = "0x6001C18")]
		[Address(RVA = "0x1A8A858", Offset = "0x1A8A858", VA = "0x1A8A858")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C19")]
		[Address(RVA = "0x1A8AA64", Offset = "0x1A8AA64", VA = "0x1A8AA64")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C1A")]
		[Address(RVA = "0x1A8AA90", Offset = "0x1A8AA90", VA = "0x1A8AA90")]
		public void OnGameStartPushed()
		{
		}

		[Token(Token = "0x6001C1B")]
		[Address(RVA = "0x1A8AB4C", Offset = "0x1A8AB4C", VA = "0x1A8AB4C")]
		public void OnGFAddPushed(GrooveFitGame game)
		{
		}

		[Token(Token = "0x6001C1C")]
		[Address(RVA = "0x1A8ABF4", Offset = "0x1A8ABF4", VA = "0x1A8ABF4")]
		public void OnGFAddPushed(int gfid)
		{
		}

		[Token(Token = "0x6001C1D")]
		[Address(RVA = "0x1A8ABF8", Offset = "0x1A8ABF8", VA = "0x1A8ABF8")]
		public void OnRemovePushed()
		{
		}

		[Token(Token = "0x6001C1E")]
		[Address(RVA = "0x1A8A85C", Offset = "0x1A8A85C", VA = "0x1A8A85C")]
		public void UpdateView()
		{
		}

		[Token(Token = "0x6001C1F")]
		[Address(RVA = "0x1A8AC68", Offset = "0x1A8AC68", VA = "0x1A8AC68")]
		public SinglePlayMedleySelectUI()
		{
		}
	}
	[Token(Token = "0x20006F7")]
	public interface IMedleyModuleSelector
	{
		[Token(Token = "0x6001C20")]
		MedleyModule GetNextModule();
	}
}
namespace Imacreate.GrooveFitIsland.M1_Lobby
{
	[Token(Token = "0x20006F8")]
	public class JoinLobbyManager : SingletonMonoBehaviour<JoinLobbyManager>
	{
		[Token(Token = "0x400262A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _dontDestroyOnLoad;

		[Token(Token = "0x400262B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _joinLobbySelectCanvas;

		[Token(Token = "0x170002C4")]
		protected override bool dontDestroyOnLoad
		{
			[Token(Token = "0x6001C21")]
			[Address(RVA = "0x1A8ACF0", Offset = "0x1A8ACF0", VA = "0x1A8ACF0", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002C5")]
		public GameObject JoinLobbySelectCanvas
		{
			[Token(Token = "0x6001C22")]
			[Address(RVA = "0x1A8ACF8", Offset = "0x1A8ACF8", VA = "0x1A8ACF8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C23")]
		[Address(RVA = "0x1A8AD00", Offset = "0x1A8AD00", VA = "0x1A8AD00")]
		public JoinLobbyManager()
		{
		}
	}
	[Token(Token = "0x20006F9")]
	public class RandomPanelManager : SingletonMonoBehaviour<RandomPanelManager>
	{
		[Token(Token = "0x400262C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _dontDestroyOnLoad;

		[Token(Token = "0x400262D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private RandomPanelView _randomPanelView;

		[Token(Token = "0x170002C6")]
		protected override bool dontDestroyOnLoad
		{
			[Token(Token = "0x6001C24")]
			[Address(RVA = "0x1A8AD48", Offset = "0x1A8AD48", VA = "0x1A8AD48", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002C7")]
		public RandomPanelView RandomPanelView
		{
			[Token(Token = "0x6001C25")]
			[Address(RVA = "0x1A8AD50", Offset = "0x1A8AD50", VA = "0x1A8AD50")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C26")]
		[Address(RVA = "0x1A8AD58", Offset = "0x1A8AD58", VA = "0x1A8AD58")]
		public RandomPanelManager()
		{
		}
	}
	[Token(Token = "0x20006FA")]
	public class RandomPanelPresenter : MonoBehaviour
	{
		[Token(Token = "0x400262E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private RandomPanelUseCase _randomPanelUseCase;

		[Token(Token = "0x400262F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private RandomPanelView _randomPanelView;

		[Token(Token = "0x6001C27")]
		[Address(RVA = "0x1A8ADA0", Offset = "0x1A8ADA0", VA = "0x1A8ADA0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C28")]
		[Address(RVA = "0x1A8AFD8", Offset = "0x1A8AFD8", VA = "0x1A8AFD8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C29")]
		[Address(RVA = "0x1A8B0D8", Offset = "0x1A8B0D8", VA = "0x1A8B0D8")]
		public RandomPanelPresenter()
		{
		}
	}
	[Token(Token = "0x20006FB")]
	public class RandomPanelUseCase : MonoBehaviour
	{
		[Token(Token = "0x20006FC")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass11_0
		{
			[Token(Token = "0x4002637")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public NetworkRunner runner;

			[Token(Token = "0x6001C31")]
			[Address(RVA = "0x1A8B248", Offset = "0x1A8B248", VA = "0x1A8B248")]
			public <>c__DisplayClass11_0()
			{
			}

			[Token(Token = "0x6001C32")]
			[Address(RVA = "0x1A8B250", Offset = "0x1A8B250", VA = "0x1A8B250")]
			internal bool <OnStartGame>b__1()
			{
				return default(bool);
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20006FD")]
		[CompilerGenerated]
		private struct <OnStartGame>d__11 : IAsyncStateMachine
		{
			[Token(Token = "0x4002638")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002639")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x400263A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public RandomPanelUseCase <>4__this;

			[Token(Token = "0x400263B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private <>c__DisplayClass11_0 <>8__1;

			[Token(Token = "0x400263C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UniTask<StartGameResult>.Awaiter <>u__1;

			[Token(Token = "0x400263D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private UniTask.Awaiter <>u__2;

			[Token(Token = "0x6001C33")]
			[Address(RVA = "0x1A8B274", Offset = "0x1A8B274", VA = "0x1A8B274", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001C34")]
			[Address(RVA = "0x1A8BD68", Offset = "0x1A8BD68", VA = "0x1A8BD68", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4002630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Inject]
		private RunnerManagerProvider _runnerManagerProvider;

		[Token(Token = "0x4002631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private NetworkObject _randomMatchManagerPrefab;

		[Token(Token = "0x4002632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly Subject<bool> _startRandomSubject;

		[Token(Token = "0x4002633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly float _randomWaitSeconds;

		[Token(Token = "0x4002634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private readonly float _randomLobbySeconds;

		[Token(Token = "0x4002635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int _randomPlayerMaxCount;

		[Token(Token = "0x4002636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int _randomPlayerMinCount;

		[Token(Token = "0x170002C8")]
		private IObserver<bool> _startRandomPublisher
		{
			[Token(Token = "0x6001C2C")]
			[Address(RVA = "0x1A8B134", Offset = "0x1A8B134", VA = "0x1A8B134")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C9")]
		public IObservable<bool> OnStartRandom
		{
			[Token(Token = "0x6001C2D")]
			[Address(RVA = "0x1A8B13C", Offset = "0x1A8B13C", VA = "0x1A8B13C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C2E")]
		[Address(RVA = "0x1A8B020", Offset = "0x1A8B020", VA = "0x1A8B020")]
		[AsyncStateMachine(typeof(<OnStartGame>d__11))]
		public void OnStartGame()
		{
		}

		[Token(Token = "0x6001C2F")]
		[Address(RVA = "0x1A8B144", Offset = "0x1A8B144", VA = "0x1A8B144")]
		public RandomPanelUseCase()
		{
		}
	}
	[Token(Token = "0x20006FE")]
	public class RandomPanelView : MonoBehaviour
	{
		[Token(Token = "0x400263E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Button _randomButton;

		[Token(Token = "0x400263F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _selectCanvas;

		[Token(Token = "0x4002640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject _coverCanvas;

		[Token(Token = "0x170002CA")]
		public Button RandomButton
		{
			[Token(Token = "0x6001C35")]
			[Address(RVA = "0x1AA1AF0", Offset = "0x1AA1AF0", VA = "0x1AA1AF0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C36")]
		[Address(RVA = "0x1AA1AF8", Offset = "0x1AA1AF8", VA = "0x1AA1AF8")]
		public void ChangeWindow(RandomPanelState state)
		{
		}

		[Token(Token = "0x6001C37")]
		[Address(RVA = "0x1AA1B80", Offset = "0x1AA1B80", VA = "0x1AA1B80")]
		public RandomPanelView()
		{
		}
	}
	[Token(Token = "0x20006FF")]
	public enum RandomPanelState
	{
		[Token(Token = "0x4002642")]
		None,
		[Token(Token = "0x4002643")]
		Select,
		[Token(Token = "0x4002644")]
		Covered
	}
	[Token(Token = "0x2000700")]
	[NetworkBehaviourWeaved(2)]
	public class RandomPrepareUseCase : NetworkBehaviour
	{
		[Token(Token = "0x4002645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private RunnerManagerProvider _runnerManagerProvider;

		[Token(Token = "0x4002646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool _isPartySceneManagerSet;

		[Token(Token = "0x4002647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		private bool _isInjectionComplete;

		[Token(Token = "0x4002648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		[DefaultForProperty("RemainingSeconds", 0, 1)]
		private float _RemainingSeconds;

		[Token(Token = "0x4002649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[DefaultForProperty("PreparedCount", 1, 1)]
		private int _PreparedCount;

		[Token(Token = "0x400264A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private readonly Subject<float> _randomPrepareTimeUpdatedSubject;

		[Token(Token = "0x400264B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private float _initialWaitSeconds;

		[Token(Token = "0x400264C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private bool _isInitialized;

		[Token(Token = "0x400264D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int _targetTick;

		[Token(Token = "0x400264E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private int _initialTick;

		[Token(Token = "0x400264F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float _maxRemainingSeconds;

		[Token(Token = "0x4002650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool _prepared;

		[Token(Token = "0x4002651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA5")]
		private bool _isChangeSceneStarted;

		[Token(Token = "0x4002652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA6")]
		private bool _goToPartyScene;

		[Token(Token = "0x4002653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Changed<RandomPrepareUseCase> $IL2CPP_CHANGED;

		[Token(Token = "0x4002654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static ChangedDelegate<RandomPrepareUseCase> $IL2CPP_CHANGED_DELEGATE;

		[Token(Token = "0x4002655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static NetworkBehaviourCallbacks<RandomPrepareUseCase> $IL2CPP_NETWORK_BEHAVIOUR_CALLBACKS;

		[Token(Token = "0x170002CB")]
		[Networked]
		[NetworkedWeaved(0, 1)]
		public float RemainingSeconds
		{
			[Token(Token = "0x6001C39")]
			[Address(RVA = "0x1AA1BAC", Offset = "0x1AA1BAC", VA = "0x1AA1BAC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C3A")]
			[Address(RVA = "0x1AA1C20", Offset = "0x1AA1C20", VA = "0x1AA1C20")]
			private set
			{
			}
		}

		[Token(Token = "0x170002CC")]
		[Networked]
		[NetworkedWeaved(1, 1)]
		private int PreparedCount
		{
			[Token(Token = "0x6001C3B")]
			[Address(RVA = "0x1AA1CC0", Offset = "0x1AA1CC0", VA = "0x1AA1CC0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001C3C")]
			[Address(RVA = "0x1AA1D24", Offset = "0x1AA1D24", VA = "0x1AA1D24")]
			set
			{
			}
		}

		[Token(Token = "0x170002CD")]
		private IObserver<float> _randomPrepareTimeUpdatedPublisher
		{
			[Token(Token = "0x6001C3D")]
			[Address(RVA = "0x1AA1D88", Offset = "0x1AA1D88", VA = "0x1AA1D88")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002CE")]
		public IObservable<float> OnRandomPrepareTimeUpdated
		{
			[Token(Token = "0x6001C3E")]
			[Address(RVA = "0x1AA1D90", Offset = "0x1AA1D90", VA = "0x1AA1D90")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C38")]
		[Address(RVA = "0x1AA1B88", Offset = "0x1AA1B88", VA = "0x1AA1B88")]
		[Inject]
		private void Injection(RunnerManagerProvider runnerManagerProvider)
		{
		}

		[Token(Token = "0x6001C3F")]
		[Address(RVA = "0x1AA1D98", Offset = "0x1AA1D98", VA = "0x1AA1D98")]
		public bool OnLobbyPrepared()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C40")]
		[Address(RVA = "0x1AA1F5C", Offset = "0x1AA1F5C", VA = "0x1AA1F5C")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001C41")]
		[Address(RVA = "0x1AA206C", Offset = "0x1AA206C", VA = "0x1AA206C", Slot = "5")]
		public override void FixedUpdateNetwork()
		{
		}

		[Token(Token = "0x6001C42")]
		[Address(RVA = "0x1AA1DC4", Offset = "0x1AA1DC4", VA = "0x1AA1DC4")]
		[Rpc(RpcSources.All, RpcTargets.StateAuthority)]
		private void Rpc_Prepared(bool isPrepared)
		{
		}

		[Token(Token = "0x6001C43")]
		[Address(RVA = "0x1AA23C4", Offset = "0x1AA23C4", VA = "0x1AA23C4")]
		public RandomPrepareUseCase()
		{
		}

		[Token(Token = "0x6001C44")]
		[Address(RVA = "0x1AA2454", Offset = "0x1AA2454", VA = "0x1AA2454", Slot = "10")]
		public override void CopyBackingFieldsToState(bool P_0)
		{
		}

		[Token(Token = "0x6001C45")]
		[Address(RVA = "0x1AA2474", Offset = "0x1AA2474", VA = "0x1AA2474", Slot = "11")]
		public override void CopyStateToBackingFields()
		{
		}

		[Token(Token = "0x6001C46")]
		[Address(RVA = "0x1AA2498", Offset = "0x1AA2498", VA = "0x1AA2498")]
		[NetworkRpcWeavedInvoker(1, 7, 1)]
		protected unsafe static void Rpc_Prepared@Invoker(NetworkBehaviour behaviour, SimulationMessage* message)
		{
		}
	}
	[Token(Token = "0x2000701")]
	public class JoinLobbyPresenter : MonoBehaviour
	{
		[Token(Token = "0x4002656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private JoinLobbyUseCase joinLobbyUseCase;

		[Token(Token = "0x4002657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private JoinLobbyView joinLobbyView;

		[Token(Token = "0x6001C47")]
		[Address(RVA = "0x1AA2530", Offset = "0x1AA2530", VA = "0x1AA2530")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C48")]
		[Address(RVA = "0x1AA2C60", Offset = "0x1AA2C60", VA = "0x1AA2C60")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C49")]
		[Address(RVA = "0x1AA2D30", Offset = "0x1AA2D30", VA = "0x1AA2D30")]
		public JoinLobbyPresenter()
		{
		}
	}
	[Token(Token = "0x2000702")]
	public class JoinLobbyUseCase : SingletonMonoNetworkRunnerCallbacks<JoinLobbyUseCase>
	{
		[StructLayout(3)]
		[Token(Token = "0x2000704")]
		[CompilerGenerated]
		private struct <OnStartGame>d__14 : IAsyncStateMachine
		{
			[Token(Token = "0x4002666")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002667")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4002668")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public JoinLobbyUseCase <>4__this;

			[Token(Token = "0x4002669")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameMode mode;

			[Token(Token = "0x400266A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private UniTask<StartGameResult>.Awaiter <>u__1;

			[Token(Token = "0x6001C6A")]
			[Address(RVA = "0x1AA512C", Offset = "0x1AA512C", VA = "0x1AA512C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001C6B")]
			[Address(RVA = "0x1AA5C04", Offset = "0x1AA5C04", VA = "0x1AA5C04", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000705")]
		[CompilerGenerated]
		private struct <OnClientJoinSession>d__15 : IAsyncStateMachine
		{
			[Token(Token = "0x400266B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400266C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x400266D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public JoinLobbyUseCase <>4__this;

			[Token(Token = "0x400266E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SessionInfo sessionInfo;

			[Token(Token = "0x400266F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private UniTask<StartGameResult>.Awaiter <>u__1;

			[Token(Token = "0x6001C6C")]
			[Address(RVA = "0x1AA5C10", Offset = "0x1AA5C10", VA = "0x1AA5C10", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001C6D")]
			[Address(RVA = "0x1AA6294", Offset = "0x1AA6294", VA = "0x1AA6294", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4002658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly LobbyEntity _lobbyEntity;

		[Token(Token = "0x4002659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private LobbyPrepareUseCase lobbyPrepareUseCasePrefab;

		[Token(Token = "0x400265A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private RandomMatchUseCase randomMatchUseCasePrefab;

		[Token(Token = "0x400265B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private int _randomPlayerCount;

		[NonSerialized]
		[Token(Token = "0x400265C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public LobbyPrepareUseCase LobbyPrepareUseCase;

		[NonSerialized]
		[Token(Token = "0x400265D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public RandomMatchUseCase RandomMatchUseCase;

		[Token(Token = "0x400265E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool _isRandom;

		[Token(Token = "0x400265F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private readonly float _initialWaitSeconds;

		[Token(Token = "0x4002660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private readonly float _addWaitSeconds;

		[Token(Token = "0x4002661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private readonly float _randomWaitSeconds;

		[Token(Token = "0x4002662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private readonly float _randomLobbySeconds;

		[Token(Token = "0x4002663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool _dontDestroyOnLoad;

		[Token(Token = "0x170002CF")]
		protected override bool dontDestroyOnLoad
		{
			[Token(Token = "0x6001C5F")]
			[Address(RVA = "0x1AA4C24", Offset = "0x1AA4C24", VA = "0x1AA4C24", Slot = "39")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001C54")]
		[Address(RVA = "0x1AA38D8", Offset = "0x1AA38D8", VA = "0x1AA38D8", Slot = "21")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001C55")]
		[Address(RVA = "0x1AA3C6C", Offset = "0x1AA3C6C", VA = "0x1AA3C6C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001C56")]
		[Address(RVA = "0x1AA3D90", Offset = "0x1AA3D90", VA = "0x1AA3D90")]
		[AsyncStateMachine(typeof(<OnStartGame>d__14))]
		private UniTask OnStartGame(GameMode mode)
		{
			return default(UniTask);
		}

		[Token(Token = "0x6001C57")]
		[Address(RVA = "0x1AA3EF4", Offset = "0x1AA3EF4", VA = "0x1AA3EF4")]
		[AsyncStateMachine(typeof(<OnClientJoinSession>d__15))]
		private UniTask OnClientJoinSession(SessionInfo sessionInfo)
		{
			return default(UniTask);
		}

		[Token(Token = "0x6001C58")]
		[Address(RVA = "0x1AA4070", Offset = "0x1AA4070", VA = "0x1AA4070")]
		private void OnPressedLobbyPrepared()
		{
		}

		[Token(Token = "0x6001C59")]
		[Address(RVA = "0x1AA3C70", Offset = "0x1AA3C70", VA = "0x1AA3C70")]
		private void LobbyWaitTimeUpdatedPublisher()
		{
		}

		[Token(Token = "0x6001C5A")]
		[Address(RVA = "0x1AA422C", Offset = "0x1AA422C", VA = "0x1AA422C")]
		private void RandomMatchTimeUpdatedPublisher()
		{
		}

		[Token(Token = "0x6001C5B")]
		[Address(RVA = "0x1AA4354", Offset = "0x1AA4354", VA = "0x1AA4354")]
		private void OnRandomMatchCompleted(bool res)
		{
		}

		[Token(Token = "0x6001C5C")]
		[Address(RVA = "0x1AA46F4", Offset = "0x1AA46F4", VA = "0x1AA46F4", Slot = "37")]
		public override void OnSceneLoadDone(NetworkRunner runner)
		{
		}

		[Token(Token = "0x6001C5D")]
		[Address(RVA = "0x1AA4918", Offset = "0x1AA4918", VA = "0x1AA4918", Slot = "23")]
		public override void OnPlayerJoined(NetworkRunner runner, PlayerRef player)
		{
		}

		[Token(Token = "0x6001C5E")]
		[Address(RVA = "0x1AA4B10", Offset = "0x1AA4B10", VA = "0x1AA4B10", Slot = "33")]
		public override void OnSessionListUpdated(NetworkRunner runner, List<SessionInfo> sessionList)
		{
		}

		[Token(Token = "0x6001C60")]
		[Address(RVA = "0x1AA4C2C", Offset = "0x1AA4C2C", VA = "0x1AA4C2C")]
		public JoinLobbyUseCase()
		{
		}
	}
	[Token(Token = "0x2000706")]
	public class JoinLobbyView : MonoBehaviour
	{
		[Token(Token = "0x4002670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Button _hostButton;

		[Token(Token = "0x4002671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Button _clientButton;

		[Token(Token = "0x4002672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Button _randomButton;

		[Token(Token = "0x4002673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject _cover;

		[Token(Token = "0x4002674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject _selectCanvas;

		[Token(Token = "0x4002675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject _lobbyCanvas;

		[Token(Token = "0x4002676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GameObject _preparedCanvas;

		[Token(Token = "0x4002677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject _randomCanvas;

		[Token(Token = "0x4002678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _content;

		[Token(Token = "0x4002679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private PartySessionBlock _sessionBlock;

		[Token(Token = "0x400267A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Button _prepareButton;

		[Token(Token = "0x400267B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public TextMeshProUGUI _lobbyTimerText;

		[Token(Token = "0x400267C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public TextMeshProUGUI _randomMatchTimerText;

		[Token(Token = "0x400267D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private readonly Subject<SessionInfo> _onSelectSession;

		[Token(Token = "0x170002D0")]
		private IObserver<SessionInfo> OnPressedSessionButton
		{
			[Token(Token = "0x6001C6E")]
			[Address(RVA = "0x1AA62A0", Offset = "0x1AA62A0", VA = "0x1AA62A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D1")]
		public IObservable<SessionInfo> OnSelectSession
		{
			[Token(Token = "0x6001C6F")]
			[Address(RVA = "0x1AA62A8", Offset = "0x1AA62A8", VA = "0x1AA62A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C70")]
		[Address(RVA = "0x1AA30D8", Offset = "0x1AA30D8", VA = "0x1AA30D8")]
		public void ManageWindow(PartyLobbyWindow window)
		{
		}

		[Token(Token = "0x6001C71")]
		[Address(RVA = "0x1AA32A4", Offset = "0x1AA32A4", VA = "0x1AA32A4")]
		public void MakeSessionList(List<SessionInfo> sessionList)
		{
		}

		[Token(Token = "0x6001C72")]
		[Address(RVA = "0x1AA3698", Offset = "0x1AA3698", VA = "0x1AA3698")]
		public void OnLobbyWaitTimeUpdated(float lobbyWaitTime)
		{
		}

		[Token(Token = "0x6001C73")]
		[Address(RVA = "0x1AA3808", Offset = "0x1AA3808", VA = "0x1AA3808")]
		public void OnRandomMatchTimeUpdated(float randomMatchTime)
		{
		}

		[Token(Token = "0x6001C74")]
		[Address(RVA = "0x1AA3784", Offset = "0x1AA3784", VA = "0x1AA3784")]
		public void OnPrepareStateUpdated(bool isPrepared)
		{
		}

		[Token(Token = "0x6001C75")]
		[Address(RVA = "0x1AA64D4", Offset = "0x1AA64D4", VA = "0x1AA64D4")]
		public JoinLobbyView()
		{
		}
	}
	[Token(Token = "0x2000707")]
	public enum PartyLobbyWindow
	{
		[Token(Token = "0x400267F")]
		None,
		[Token(Token = "0x4002680")]
		Select,
		[Token(Token = "0x4002681")]
		Lobby,
		[Token(Token = "0x4002682")]
		Covered,
		[Token(Token = "0x4002683")]
		Ready,
		[Token(Token = "0x4002684")]
		Random
	}
	[Token(Token = "0x2000708")]
	public class LobbyEntity
	{
		[Token(Token = "0x4002685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Subject<GameMode> _startGameSubject;

		[Token(Token = "0x4002686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Subject<PartyLobbyWindow> _changeLobbyWindowSubject;

		[Token(Token = "0x4002687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Subject<List<SessionInfo>> _sessionListAcquiredSubject;

		[Token(Token = "0x4002688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly Subject<SessionInfo> _clientJoinSessionSubject;

		[Token(Token = "0x4002689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly Subject<float> _lobbyWaitTimeUpdatedSubject;

		[Token(Token = "0x400268A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly Subject<bool> _preparedSubject;

		[Token(Token = "0x400268B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly Subject<bool> _prepareStateUpdatedSubject;

		[Token(Token = "0x400268C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly Subject<float> _randomMatchTimeUpdatedSubject;

		[Token(Token = "0x400268D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly Subject<bool> _randomMatchCompleteSubject;

		[Token(Token = "0x170002D2")]
		public IObserver<GameMode> StartGamePublisher
		{
			[Token(Token = "0x6001C76")]
			[Address(RVA = "0x1AA655C", Offset = "0x1AA655C", VA = "0x1AA655C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D3")]
		public IObservable<GameMode> OnStartGame
		{
			[Token(Token = "0x6001C77")]
			[Address(RVA = "0x1AA6564", Offset = "0x1AA6564", VA = "0x1AA6564")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D4")]
		public IObserver<PartyLobbyWindow> ChangeEntranceWindowPublisher
		{
			[Token(Token = "0x6001C78")]
			[Address(RVA = "0x1AA656C", Offset = "0x1AA656C", VA = "0x1AA656C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D5")]
		public IObservable<PartyLobbyWindow> OnChangeEntranceWindow
		{
			[Token(Token = "0x6001C79")]
			[Address(RVA = "0x1AA6574", Offset = "0x1AA6574", VA = "0x1AA6574")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D6")]
		public IObserver<List<SessionInfo>> SessionListAcquiredPublisher
		{
			[Token(Token = "0x6001C7A")]
			[Address(RVA = "0x1AA657C", Offset = "0x1AA657C", VA = "0x1AA657C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D7")]
		public IObservable<List<SessionInfo>> OnSessionListAcquired
		{
			[Token(Token = "0x6001C7B")]
			[Address(RVA = "0x1AA6584", Offset = "0x1AA6584", VA = "0x1AA6584")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D8")]
		public IObserver<SessionInfo> ClientJoinSessionPublisher
		{
			[Token(Token = "0x6001C7C")]
			[Address(RVA = "0x1AA658C", Offset = "0x1AA658C", VA = "0x1AA658C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D9")]
		public IObservable<SessionInfo> OnClientJoinSession
		{
			[Token(Token = "0x6001C7D")]
			[Address(RVA = "0x1AA6594", Offset = "0x1AA6594", VA = "0x1AA6594")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002DA")]
		public IObserver<float> LobbyWaitTimeUpdatedPublisher
		{
			[Token(Token = "0x6001C7E")]
			[Address(RVA = "0x1AA659C", Offset = "0x1AA659C", VA = "0x1AA659C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002DB")]
		public IObservable<float> OnLobbyWaitTimeUpdated
		{
			[Token(Token = "0x6001C7F")]
			[Address(RVA = "0x1AA65A4", Offset = "0x1AA65A4", VA = "0x1AA65A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002DC")]
		public IObserver<bool> PreparedPublisher
		{
			[Token(Token = "0x6001C80")]
			[Address(RVA = "0x1AA65AC", Offset = "0x1AA65AC", VA = "0x1AA65AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002DD")]
		public IObservable<bool> OnPrepared
		{
			[Token(Token = "0x6001C81")]
			[Address(RVA = "0x1AA65B4", Offset = "0x1AA65B4", VA = "0x1AA65B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002DE")]
		public IObserver<bool> PrepareStateUpdatedPublisher
		{
			[Token(Token = "0x6001C82")]
			[Address(RVA = "0x1AA65BC", Offset = "0x1AA65BC", VA = "0x1AA65BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002DF")]
		public IObservable<bool> OnPrepareStateUpdated
		{
			[Token(Token = "0x6001C83")]
			[Address(RVA = "0x1AA65C4", Offset = "0x1AA65C4", VA = "0x1AA65C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E0")]
		public IObserver<float> RandomMatchTimeUpdatedPublisher
		{
			[Token(Token = "0x6001C84")]
			[Address(RVA = "0x1AA65CC", Offset = "0x1AA65CC", VA = "0x1AA65CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E1")]
		public IObservable<float> OnRandomMatchTimeUpdated
		{
			[Token(Token = "0x6001C85")]
			[Address(RVA = "0x1AA65D4", Offset = "0x1AA65D4", VA = "0x1AA65D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E2")]
		public IObserver<bool> RandomMatchCompletePublisher
		{
			[Token(Token = "0x6001C86")]
			[Address(RVA = "0x1AA65DC", Offset = "0x1AA65DC", VA = "0x1AA65DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E3")]
		public IObservable<bool> OnRandomMatchComplete
		{
			[Token(Token = "0x6001C87")]
			[Address(RVA = "0x1AA65E4", Offset = "0x1AA65E4", VA = "0x1AA65E4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C88")]
		[Address(RVA = "0x1AA4CC4", Offset = "0x1AA4CC4", VA = "0x1AA4CC4")]
		public LobbyEntity()
		{
		}
	}
	[Token(Token = "0x2000709")]
	[NetworkBehaviourWeaved(2)]
	public class LobbyPrepareUseCase : NetworkBehaviour
	{
		[Token(Token = "0x400268E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private RunnerManagerProvider _runnerManagerProvider;

		[Token(Token = "0x400268F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private string partyScenePath;

		[Token(Token = "0x4002690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool _isPartySceneManagerSet;

		[Token(Token = "0x4002691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
		private bool _isInjectionComplete;

		[Token(Token = "0x4002692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		[DefaultForProperty("RemainingSeconds", 0, 1)]
		private float _RemainingSeconds;

		[Token(Token = "0x4002693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[DefaultForProperty("PreparedCount", 1, 1)]
		private int _PreparedCount;

		[Token(Token = "0x4002694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private int _targetTick;

		[Token(Token = "0x4002695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int _initialTick;

		[Token(Token = "0x4002696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private float _maxRemainingSeconds;

		[Token(Token = "0x4002697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool _prepared;

		[Token(Token = "0x4002698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		private bool _isChangeSceneStarted;

		[Token(Token = "0x4002699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9A")]
		private bool _goToPartyScene;

		[Token(Token = "0x400269A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Changed<LobbyPrepareUseCase> $IL2CPP_CHANGED;

		[Token(Token = "0x400269B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static ChangedDelegate<LobbyPrepareUseCase> $IL2CPP_CHANGED_DELEGATE;

		[Token(Token = "0x400269C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static NetworkBehaviourCallbacks<LobbyPrepareUseCase> $IL2CPP_NETWORK_BEHAVIOUR_CALLBACKS;

		[Token(Token = "0x170002E4")]
		[Networked]
		[NetworkedWeaved(0, 1)]
		public float RemainingSeconds
		{
			[Token(Token = "0x6001C8A")]
			[Address(RVA = "0x1AA41B8", Offset = "0x1AA41B8", VA = "0x1AA41B8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C8B")]
			[Address(RVA = "0x1AA6610", Offset = "0x1AA6610", VA = "0x1AA6610")]
			private set
			{
			}
		}

		[Token(Token = "0x170002E5")]
		[Networked]
		[NetworkedWeaved(1, 1)]
		private int PreparedCount
		{
			[Token(Token = "0x6001C8C")]
			[Address(RVA = "0x1AA66B0", Offset = "0x1AA66B0", VA = "0x1AA66B0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001C8D")]
			[Address(RVA = "0x1AA6714", Offset = "0x1AA6714", VA = "0x1AA6714")]
			set
			{
			}
		}

		[Token(Token = "0x6001C89")]
		[Address(RVA = "0x1AA65EC", Offset = "0x1AA65EC", VA = "0x1AA65EC")]
		[Inject]
		private void Injection(RunnerManagerProvider runnerManagerProvider)
		{
		}

		[Token(Token = "0x6001C8E")]
		[Address(RVA = "0x1AA5010", Offset = "0x1AA5010", VA = "0x1AA5010")]
		public void SetUp(float initialWaitSeconds, LobbyEntity lobbyEntity)
		{
		}

		[Token(Token = "0x6001C8F")]
		[Address(RVA = "0x1AA49BC", Offset = "0x1AA49BC", VA = "0x1AA49BC")]
		public void AddSeconds(float addSeconds)
		{
		}

		[Token(Token = "0x6001C90")]
		[Address(RVA = "0x1AA418C", Offset = "0x1AA418C", VA = "0x1AA418C")]
		public bool OnLobbyPrepared()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C91")]
		[Address(RVA = "0x1AA6910", Offset = "0x1AA6910", VA = "0x1AA6910")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C92")]
		[Address(RVA = "0x1AA6ADC", Offset = "0x1AA6ADC", VA = "0x1AA6ADC", Slot = "5")]
		public override void FixedUpdateNetwork()
		{
		}

		[Token(Token = "0x6001C93")]
		[Address(RVA = "0x1AA6778", Offset = "0x1AA6778", VA = "0x1AA6778")]
		[Rpc(RpcSources.All, RpcTargets.StateAuthority)]
		private void Rpc_Prepared(bool isPrepared)
		{
		}

		[Token(Token = "0x6001C94")]
		[Address(RVA = "0x1AA6E98", Offset = "0x1AA6E98", VA = "0x1AA6E98")]
		public LobbyPrepareUseCase()
		{
		}

		[Token(Token = "0x6001C95")]
		[Address(RVA = "0x1AA6EF0", Offset = "0x1AA6EF0", VA = "0x1AA6EF0", Slot = "10")]
		public override void CopyBackingFieldsToState(bool P_0)
		{
		}

		[Token(Token = "0x6001C96")]
		[Address(RVA = "0x1AA6F10", Offset = "0x1AA6F10", VA = "0x1AA6F10", Slot = "11")]
		public override void CopyStateToBackingFields()
		{
		}

		[Token(Token = "0x6001C97")]
		[Address(RVA = "0x1AA6F34", Offset = "0x1AA6F34", VA = "0x1AA6F34")]
		[NetworkRpcWeavedInvoker(1, 7, 1)]
		protected unsafe static void Rpc_Prepared@Invoker(NetworkBehaviour behaviour, SimulationMessage* message)
		{
		}
	}
	[Token(Token = "0x200070A")]
	[NetworkBehaviourWeaved(2)]
	public class PartyLobbyModel : NetworkBehaviour
	{
		[Token(Token = "0x400269D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private RunnerManagerProvider _runnerManagerProvider;

		[Token(Token = "0x400269E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool _isPartySceneManagerSet;

		[Token(Token = "0x400269F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		private bool _isInjectionComplete;

		[Token(Token = "0x40026A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		[DefaultForProperty("RemainingSeconds", 0, 1)]
		private float _RemainingSeconds;

		[Token(Token = "0x40026A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[DefaultForProperty("PreparedCount", 1, 1)]
		private int _PreparedCount;

		[Token(Token = "0x40026A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int _targetTick;

		[Token(Token = "0x40026A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int _initialTick;

		[Token(Token = "0x40026A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool _prepared;

		[Token(Token = "0x40026A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8D")]
		private bool _isChangeSceneStarted;

		[Token(Token = "0x40026A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Changed<PartyLobbyModel> $IL2CPP_CHANGED;

		[Token(Token = "0x40026A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static ChangedDelegate<PartyLobbyModel> $IL2CPP_CHANGED_DELEGATE;

		[Token(Token = "0x40026A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static NetworkBehaviourCallbacks<PartyLobbyModel> $IL2CPP_NETWORK_BEHAVIOUR_CALLBACKS;

		[Token(Token = "0x170002E6")]
		[Networked]
		[NetworkedWeaved(0, 1)]
		public float RemainingSeconds
		{
			[Token(Token = "0x6001C99")]
			[Address(RVA = "0x1AA6FF0", Offset = "0x1AA6FF0", VA = "0x1AA6FF0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C9A")]
			[Address(RVA = "0x1AA7064", Offset = "0x1AA7064", VA = "0x1AA7064")]
			set
			{
			}
		}

		[Token(Token = "0x170002E7")]
		[Networked]
		[NetworkedWeaved(1, 1)]
		private int PreparedCount
		{
			[Token(Token = "0x6001C9B")]
			[Address(RVA = "0x1AA7104", Offset = "0x1AA7104", VA = "0x1AA7104")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001C9C")]
			[Address(RVA = "0x1AA7168", Offset = "0x1AA7168", VA = "0x1AA7168")]
			set
			{
			}
		}

		[Token(Token = "0x6001C98")]
		[Address(RVA = "0x1AA6FCC", Offset = "0x1AA6FCC", VA = "0x1AA6FCC")]
		[Inject]
		private void Injection(RunnerManagerProvider runnerManagerProvider)
		{
		}

		[Token(Token = "0x6001C9D")]
		[Address(RVA = "0x1AA71CC", Offset = "0x1AA71CC", VA = "0x1AA71CC")]
		public void SetUp(float initialWaitSeconds)
		{
		}

		[Token(Token = "0x6001C9E")]
		[Address(RVA = "0x1AA71D0", Offset = "0x1AA71D0", VA = "0x1AA71D0")]
		public void AddSeconds(float addSeconds)
		{
		}

		[Token(Token = "0x6001C9F")]
		[Address(RVA = "0x1AA7278", Offset = "0x1AA7278", VA = "0x1AA7278")]
		private void Start()
		{
		}

		[Token(Token = "0x6001CA0")]
		[Address(RVA = "0x1AA74C0", Offset = "0x1AA74C0", VA = "0x1AA74C0", Slot = "5")]
		public override void FixedUpdateNetwork()
		{
		}

		[Token(Token = "0x6001CA1")]
		[Address(RVA = "0x1AA780C", Offset = "0x1AA780C", VA = "0x1AA780C")]
		[Rpc(RpcSources.All, RpcTargets.StateAuthority)]
		private void Rpc_Prepared(bool isPrepared)
		{
		}

		[Token(Token = "0x6001CA2")]
		[Address(RVA = "0x1AA79A4", Offset = "0x1AA79A4", VA = "0x1AA79A4")]
		public PartyLobbyModel()
		{
		}

		[Token(Token = "0x6001CA4")]
		[Address(RVA = "0x1AA7A80", Offset = "0x1AA7A80", VA = "0x1AA7A80", Slot = "10")]
		public override void CopyBackingFieldsToState(bool P_0)
		{
		}

		[Token(Token = "0x6001CA5")]
		[Address(RVA = "0x1AA7AA0", Offset = "0x1AA7AA0", VA = "0x1AA7AA0", Slot = "11")]
		public override void CopyStateToBackingFields()
		{
		}

		[Token(Token = "0x6001CA6")]
		[Address(RVA = "0x1AA7AC4", Offset = "0x1AA7AC4", VA = "0x1AA7AC4")]
		[NetworkRpcWeavedInvoker(1, 7, 1)]
		protected unsafe static void Rpc_Prepared@Invoker(NetworkBehaviour behaviour, SimulationMessage* message)
		{
		}
	}
	[Token(Token = "0x200070B")]
	public class PartyMyAvatarSetUseCase : MonoBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x200070C")]
		[CompilerGenerated]
		private struct <SetAvatarUnitask>d__4 : IAsyncStateMachine
		{
			[Token(Token = "0x40026AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40026AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40026AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CancellationToken token;

			[Token(Token = "0x40026AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public PartyMyAvatarSetUseCase <>4__this;

			[Token(Token = "0x40026B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string prefabName;

			[Token(Token = "0x40026B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private string <path>5__2;

			[Token(Token = "0x40026B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private GameObject <avatar>5__3;

			[Token(Token = "0x40026B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UniTask<bool>.Awaiter <>u__1;

			[Token(Token = "0x40026B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private UniTask.Awaiter <>u__2;

			[Token(Token = "0x40026B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private UnityAsyncExtensions.ResourceRequestAwaiter <>u__3;

			[Token(Token = "0x6001CAB")]
			[Address(RVA = "0x1AA7DB0", Offset = "0x1AA7DB0", VA = "0x1AA7DB0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001CAC")]
			[Address(RVA = "0x1AA8AB4", Offset = "0x1AA8AB4", VA = "0x1AA8AB4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x40026A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string _avatarPrefabFolder;

		[Token(Token = "0x40026AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string _avatarName;

		[Token(Token = "0x40026AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private VRIK _vrik;

		[Token(Token = "0x6001CA7")]
		[Address(RVA = "0x1AA7B5C", Offset = "0x1AA7B5C", VA = "0x1AA7B5C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001CA8")]
		[Address(RVA = "0x1AA7BA8", Offset = "0x1AA7BA8", VA = "0x1AA7BA8")]
		[AsyncStateMachine(typeof(<SetAvatarUnitask>d__4))]
		private UniTaskVoid SetAvatarUnitask(string prefabName, CancellationToken token)
		{
			return default(UniTaskVoid);
		}

		[Token(Token = "0x6001CA9")]
		[Address(RVA = "0x1AA7C8C", Offset = "0x1AA7C8C", VA = "0x1AA7C8C")]
		public PartyMyAvatarSetUseCase()
		{
		}
	}
	[Token(Token = "0x200070D")]
	public class PartySessionBlock : MonoBehaviour
	{
		[Token(Token = "0x40026B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Button _sessionButton;

		[Token(Token = "0x40026B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TMP_Text _sessionNameText;

		[Token(Token = "0x40026B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private SessionInfo _sessionInfo;

		[Token(Token = "0x6001CAD")]
		[Address(RVA = "0x1AA62B0", Offset = "0x1AA62B0", VA = "0x1AA62B0")]
		public void Initialize(SessionInfo sessionInfo, IObserver<SessionInfo> OnPressedSessionButton)
		{
		}

		[Token(Token = "0x6001CAE")]
		[Address(RVA = "0x1AA8AC8", Offset = "0x1AA8AC8", VA = "0x1AA8AC8")]
		public PartySessionBlock()
		{
		}
	}
}
namespace Imacreate.GrooveFitIsland.Furuyama.Scripts.FirebaseGrooveFitIsland.FirebaseFunctions
{
	[Serializable]
	[Token(Token = "0x200070F")]
	public class GetPlayDataOnSpecificDayRequest
	{
		[Token(Token = "0x40026BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string referenceUTCDateTime;

		[Token(Token = "0x6001CB1")]
		[Address(RVA = "0x1AA8B80", Offset = "0x1AA8B80", VA = "0x1AA8B80")]
		public GetPlayDataOnSpecificDayRequest()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000710")]
	public class GetPlayDataOnSpecificDayResponseEntry
	{
		[Serializable]
		[Token(Token = "0x2000711")]
		public class RawPlayData
		{
			[Token(Token = "0x40026BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string game;

			[Token(Token = "0x40026BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string option;

			[Token(Token = "0x40026C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string life_type;

			[Token(Token = "0x40026C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float calorie;

			[Token(Token = "0x40026C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public int timestamp;

			[Token(Token = "0x6001CB3")]
			[Address(RVA = "0x1AA8B90", Offset = "0x1AA8B90", VA = "0x1AA8B90")]
			public RawPlayData()
			{
			}
		}

		[Token(Token = "0x40026BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string difficulty;

		[Token(Token = "0x40026BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<RawPlayData> list;

		[Token(Token = "0x6001CB2")]
		[Address(RVA = "0x1AA8B88", Offset = "0x1AA8B88", VA = "0x1AA8B88")]
		public GetPlayDataOnSpecificDayResponseEntry()
		{
		}
	}
}
namespace Imacreate.GrooveFitIsland.FirebaseFunctions
{
	[Serializable]
	[Token(Token = "0x2000712")]
	public class AddPlayDataResponse
	{
		[Serializable]
		[Token(Token = "0x2000713")]
		public class ScoreRankingUser
		{
			[Token(Token = "0x40026C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string displayName;

			[Token(Token = "0x40026C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float value;

			[Token(Token = "0x40026C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public bool rankUp;

			[Token(Token = "0x6001CB5")]
			[Address(RVA = "0x1AA8C20", Offset = "0x1AA8C20", VA = "0x1AA8C20")]
			public ScoreRankingUser()
			{
			}
		}

		[Token(Token = "0x40026C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool success;

		[Token(Token = "0x40026C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<ScoreRankingUser> scoreRankingUsers;

		[Token(Token = "0x6001CB4")]
		[Address(RVA = "0x1AA8B98", Offset = "0x1AA8B98", VA = "0x1AA8B98")]
		public AddPlayDataResponse()
		{
		}
	}
}
namespace Imacreate.GrooveFitIsland.Firebase
{
	[Token(Token = "0x2000714")]
	public class FirebaseApiSample : MonoBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x2000716")]
		[CompilerGenerated]
		private struct <Start>d__2 : IAsyncStateMachine
		{
			[Token(Token = "0x40026CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40026CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40026D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6001CC2")]
			[Address(RVA = "0x1AA92B8", Offset = "0x1AA92B8", VA = "0x1AA92B8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001CC3")]
			[Address(RVA = "0x1AA9858", Offset = "0x1AA9858", VA = "0x1AA9858", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000717")]
		[CompilerGenerated]
		private struct <Update>d__9 : IAsyncStateMachine
		{
			[Token(Token = "0x40026D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40026D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40026D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public FirebaseApiSample <>4__this;

			[Token(Token = "0x40026D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask<SignupResponse>.Awaiter <>u__1;

			[Token(Token = "0x40026D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private UniTask<UpdateProfileResponse>.Awaiter <>u__2;

			[Token(Token = "0x40026D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private UniTask<IdTokenResponse>.Awaiter <>u__3;

			[Token(Token = "0x40026D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private CancellationToken <token>5__2;

			[Token(Token = "0x40026D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			private UniTask.Awaiter <>u__4;

			[Token(Token = "0x40026D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			private UniTask<AchievementFields>.Awaiter <>u__5;

			[Token(Token = "0x40026DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			private UniTask<AddPlayDataResponse>.Awaiter <>u__6;

			[Token(Token = "0x40026DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			private UniTask<List<RankingDataEntry>>.Awaiter <>u__7;

			[Token(Token = "0x40026DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			private UniTask<UserCalorieData>.Awaiter <>u__8;

			[Token(Token = "0x40026DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
			private UniTask<List<List<PlayLogData>>>.Awaiter <>u__9;

			[Token(Token = "0x40026DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
			private UniTask<List<PlayLogData>>.Awaiter <>u__10;

			[Token(Token = "0x40026DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
			private UniTask<TwitterAuthLinkResponse>.Awaiter <>u__11;

			[Token(Token = "0x40026E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
			private UniTask<TwitterOAuthPinResponse>.Awaiter <>u__12;

			[Token(Token = "0x40026E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
			private UniTask<TwitterPostTweetResponse>.Awaiter <>u__13;

			[Token(Token = "0x6001CC4")]
			[Address(RVA = "0x1AA9864", Offset = "0x1AA9864", VA = "0x1AA9864", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001CC5")]
			[Address(RVA = "0x1AAD754", Offset = "0x1AAD754", VA = "0x1AAD754", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x40026C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string twitterPinCode;

		[Token(Token = "0x40026C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string tweetText;

		[Token(Token = "0x170002E8")]
		private static FirebaseUserInfo User
		{
			[Token(Token = "0x6001CB7")]
			[Address(RVA = "0x1AA8CC4", Offset = "0x1AA8CC4", VA = "0x1AA8CC4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E9")]
		private static FirebaseApi Api
		{
			[Token(Token = "0x6001CB8")]
			[Address(RVA = "0x1AA8E08", Offset = "0x1AA8E08", VA = "0x1AA8E08")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CB6")]
		[Address(RVA = "0x1AA8C28", Offset = "0x1AA8C28", VA = "0x1AA8C28")]
		[AsyncStateMachine(typeof(<Start>d__2))]
		private void Start()
		{
		}

		[Token(Token = "0x6001CB9")]
		[Address(RVA = "0x1AA8D70", Offset = "0x1AA8D70", VA = "0x1AA8D70")]
		private static FieldInfo GetFieldOfFirebaseApiProvider(string fieldName)
		{
			return null;
		}

		[Token(Token = "0x6001CBA")]
		[Address(RVA = "0x1AA8EB4", Offset = "0x1AA8EB4", VA = "0x1AA8EB4")]
		private static MethodInfo GetMethodOfFirebaseApiProvider(string methodName)
		{
			return null;
		}

		[Token(Token = "0x6001CBB")]
		[Address(RVA = "0x1AA8F44", Offset = "0x1AA8F44", VA = "0x1AA8F44")]
		[AsyncStateMachine(typeof(<Update>d__9))]
		private void Update()
		{
		}

		[Token(Token = "0x6001CBC")]
		[Address(RVA = "0x1AA8FF8", Offset = "0x1AA8FF8", VA = "0x1AA8FF8")]
		public FirebaseApiSample()
		{
		}
	}
	[Token(Token = "0x2000718")]
	public class JsonTest : MonoBehaviour
	{
		[Token(Token = "0x6001CC6")]
		[Address(RVA = "0x1AAD760", Offset = "0x1AAD760", VA = "0x1AAD760")]
		private void Update()
		{
		}

		[Token(Token = "0x6001CC7")]
		[Address(RVA = "0x1AAE26C", Offset = "0x1AAE26C", VA = "0x1AAE26C")]
		public JsonTest()
		{
		}
	}
}
namespace Imacreate.GrooveFitIsland.Firebase.Firestore
{
	[Serializable]
	[Token(Token = "0x2000719")]
	public class AchievementDoc
	{
		[Token(Token = "0x40026E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MapField<AchievementFields> achievement;

		[Token(Token = "0x6001CC8")]
		[Address(RVA = "0x1AAE274", Offset = "0x1AAE274", VA = "0x1AAE274")]
		private bool SetValue(string name, ValueType value)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CC9")]
		[Address(RVA = "0x1AAE4E8", Offset = "0x1AAE4E8", VA = "0x1AAE4E8")]
		public static Tuple<AchievementDoc, List<string>> Create(Dictionary<string, ValueType> values)
		{
			return null;
		}

		[Token(Token = "0x6001CCA")]
		[Address(RVA = "0x1AAE7C4", Offset = "0x1AAE7C4", VA = "0x1AAE7C4")]
		public AchievementDoc()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200071A")]
	public sealed class AchievementFieldsEmpty
	{
		[Token(Token = "0x6001CCB")]
		[Address(RVA = "0x1AAE84C", Offset = "0x1AAE84C", VA = "0x1AAE84C")]
		public AchievementFieldsEmpty()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200071B")]
	public class AchievementFields
	{
		[Token(Token = "0x40026E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BooleanField DrankSomeShaker;

		[Token(Token = "0x40026E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BooleanField InputYourName;

		[Token(Token = "0x40026E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BooleanField FirstCalibrated;

		[Token(Token = "0x40026E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BooleanField FirstGFClear;

		[Token(Token = "0x40026E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public BooleanField FirstPause;

		[Token(Token = "0x40026E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public BooleanField FirstTwitterShare;

		[Token(Token = "0x40026E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public BooleanField FirstPracticeSkip;

		[Token(Token = "0x40026EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public BooleanField FirstReturnHome;

		[Token(Token = "0x40026EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public BooleanField FirstGFRetry;

		[Token(Token = "0x40026EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public BooleanField PlayBronze;

		[Token(Token = "0x40026ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public BooleanField PlaySilver;

		[Token(Token = "0x40026EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public BooleanField PlayGold;

		[Token(Token = "0x40026EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public BooleanField PlayPlatinum;

		[Token(Token = "0x40026F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BooleanField PlaySlow;

		[Token(Token = "0x40026F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BooleanField PlayFast;

		[Token(Token = "0x40026F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public BooleanField PlayPerfectRun;

		[Token(Token = "0x40026F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public BooleanField GetSSRank;

		[Token(Token = "0x40026F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public BooleanField GetFullCombo;

		[Token(Token = "0x40026F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public BooleanField Get12GF;

		[Token(Token = "0x40026F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public BooleanField FirstClearEndroll;

		[Token(Token = "0x40026F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public BooleanField PlayEndless;

		[Token(Token = "0x40026F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public BooleanField WorldRanking15;

		[Token(Token = "0x40026F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public BooleanField WorldRanking10;

		[Token(Token = "0x40026FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public BooleanField WorldRanking5;

		[Token(Token = "0x40026FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public BooleanField WorldRanking1;

		[Token(Token = "0x40026FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public BooleanField UseBuildInAvatar;

		[Token(Token = "0x40026FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public BooleanField ConnectVRoidHub;

		[Token(Token = "0x40026FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public BooleanField UseVRoidAvatar;

		[Token(Token = "0x40026FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public BooleanField ChangeAudioSettings;

		[Token(Token = "0x4002700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public BooleanField CalibrateAgain;

		[Token(Token = "0x4002701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public BooleanField BrowseFitLog;

		[Token(Token = "0x4002702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public BooleanField BrowseCalendar;

		[Token(Token = "0x4002703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public BooleanField SetMonitorAudience;

		[Token(Token = "0x4002704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public BooleanField TennisBothHand;

		[Token(Token = "0x4002705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public BooleanField WoodChopperBothHand;

		[Token(Token = "0x4002706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public BooleanField FishingBothHand;

		[Token(Token = "0x4002707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public BooleanField GolfBothHand;

		[Token(Token = "0x4002708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public BooleanField BaseballBothHand;

		[Token(Token = "0x4002709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public BooleanField TableTennisBothHand;

		[Token(Token = "0x400270A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public BooleanField DiedImmediatelyPerfectRun;

		[Token(Token = "0x400270B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public BooleanField AllBadPlay;

		[Token(Token = "0x400270C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public BooleanField DrinkEnProtein;

		[Token(Token = "0x400270D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public BooleanField DrinkJaProtein;

		[Token(Token = "0x400270E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public BooleanField DrinkDeProtein;

		[Token(Token = "0x400270F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public BooleanField DrinkFrProtein;

		[Token(Token = "0x4002710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public BooleanField DrinkEsProtein;

		[Token(Token = "0x4002711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public BooleanField DrinkKoProtein;

		[Token(Token = "0x4002712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public BooleanField AllMutePlay;

		[Token(Token = "0x4002713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public BooleanField ListenFullTitleMusic;

		[Token(Token = "0x4002714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public BooleanField PerfectClearEndroll;

		[Token(Token = "0x4002715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public BooleanField HitSphereLoeStatue;

		[Token(Token = "0x4002716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public IntegerField TotalLoginDays;

		[Token(Token = "0x4002717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		public IntegerField TappedDrumButtonNum;

		[Token(Token = "0x4002718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		public IntegerField SplitWoodNum;

		[Token(Token = "0x4002719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		public IntegerField PunchedNum;

		[Token(Token = "0x400271A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		public IntegerField SquattedNum;

		[Token(Token = "0x400271B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		public IntegerField FishedNum;

		[Token(Token = "0x400271C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		public FloatField TotalCalorie;

		[Token(Token = "0x400271D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		public FloatField DistancePizzaDelivered;

		[Token(Token = "0x400271E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		public FloatField DistanceRanRoad;

		[Token(Token = "0x400271F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		public FloatField DurationDancingParaPara;

		[Token(Token = "0x4002720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		public IntegerField ConsecutiveLoginDays;

		[Token(Token = "0x4002721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		public FloatField DailyTotalCalorie;

		[Token(Token = "0x6001CCC")]
		[Address(RVA = "0x1AAE854", Offset = "0x1AAE854", VA = "0x1AAE854")]
		public AchievementFields()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200071C")]
	public abstract class AnalyticsBaseEvent
	{
		[Token(Token = "0x200071D")]
		public abstract class BaseBuilder<T> where T : AnalyticsBaseEvent
		{
			[Token(Token = "0x4002729")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string userid;

			[Token(Token = "0x400272A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string language;

			[Token(Token = "0x400272B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string platform;

			[Token(Token = "0x400272C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string steamHmd;

			[Token(Token = "0x400272D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string device;

			[Token(Token = "0x6001CCE")]
			protected abstract T BuildEvent();

			[Token(Token = "0x6001CCF")]
			public T Build()
			{
				return null;
			}

			[Token(Token = "0x6001CD0")]
			protected BaseBuilder()
			{
			}
		}

		[Token(Token = "0x4002722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		protected StringField event_type;

		[Token(Token = "0x4002723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected TimestampField timestamp;

		[Token(Token = "0x4002724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected StringField userid;

		[Token(Token = "0x4002725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected StringField language;

		[Token(Token = "0x4002726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected StringField platform;

		[Token(Token = "0x4002727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		protected StringField steamHmd;

		[Token(Token = "0x4002728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		protected StringField device;

		[Token(Token = "0x6001CCD")]
		[Address(RVA = "0x1AAE85C", Offset = "0x1AAE85C", VA = "0x1AAE85C")]
		protected AnalyticsBaseEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200071E")]
	public class AnalyticsLanguageEvent : AnalyticsBaseEvent
	{
		[Token(Token = "0x200071F")]
		public class Builder : BaseBuilder<AnalyticsLanguageEvent>
		{
			[Token(Token = "0x6001CD2")]
			[Address(RVA = "0x1AAE950", Offset = "0x1AAE950", VA = "0x1AAE950", Slot = "4")]
			protected override AnalyticsLanguageEvent BuildEvent()
			{
				return null;
			}

			[Token(Token = "0x6001CD3")]
			[Address(RVA = "0x1AAE9A8", Offset = "0x1AAE9A8", VA = "0x1AAE9A8")]
			public Builder()
			{
			}
		}

		[Token(Token = "0x6001CD1")]
		[Address(RVA = "0x1AAE94C", Offset = "0x1AAE94C", VA = "0x1AAE94C")]
		private AnalyticsLanguageEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000720")]
	public class AnalyticsPauseHomeEvent : AnalyticsBaseEvent
	{
		[Token(Token = "0x2000721")]
		public class Builder : BaseBuilder<AnalyticsPauseHomeEvent>
		{
			[Token(Token = "0x4002736")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public GrooveFitGame game;

			[Token(Token = "0x4002737")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public GameStatus.Difficulty difficulty;

			[Token(Token = "0x4002738")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public GameStatus.OptionRule? option_rule;

			[Token(Token = "0x4002739")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public GameStatus.EndlessLifeType? endless_life_type;

			[Token(Token = "0x400273A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public string current_event;

			[Token(Token = "0x400273B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public GameStatus.Status? current_status;

			[Token(Token = "0x400273C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public float total_time;

			[Token(Token = "0x400273D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			public float play_time;

			[Token(Token = "0x6001CD5")]
			[Address(RVA = "0x1AAEB14", Offset = "0x1AAEB14", VA = "0x1AAEB14", Slot = "4")]
			protected override AnalyticsPauseHomeEvent BuildEvent()
			{
				return null;
			}

			[Token(Token = "0x6001CD6")]
			[Address(RVA = "0x1AAEF5C", Offset = "0x1AAEF5C", VA = "0x1AAEF5C")]
			public Builder()
			{
			}
		}

		[Token(Token = "0x400272E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private StringField game;

		[Token(Token = "0x400272F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private StringField difficulty;

		[Token(Token = "0x4002730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private StringField option_rule;

		[Token(Token = "0x4002731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private StringField current_event;

		[Token(Token = "0x4002732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private FloatField total_time;

		[Token(Token = "0x4002733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private StringField endless_life_type;

		[Token(Token = "0x4002734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private FloatField play_time;

		[Token(Token = "0x4002735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private StringField current_status;

		[Token(Token = "0x6001CD4")]
		[Address(RVA = "0x1AAE9F0", Offset = "0x1AAE9F0", VA = "0x1AAE9F0")]
		private AnalyticsPauseHomeEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000722")]
	public class AnalyticsPauseSkipEvent : AnalyticsBaseEvent
	{
		[Token(Token = "0x2000723")]
		public class Builder : BaseBuilder<AnalyticsPauseSkipEvent>
		{
			[Token(Token = "0x4002743")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public GrooveFitGame game;

			[Token(Token = "0x4002744")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public GameStatus.Difficulty difficulty;

			[Token(Token = "0x4002745")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public GameStatus.OptionRule option_rule;

			[Token(Token = "0x4002746")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public string current_event;

			[Token(Token = "0x4002747")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public float total_time;

			[Token(Token = "0x6001CD8")]
			[Address(RVA = "0x1AAF074", Offset = "0x1AAF074", VA = "0x1AAF074", Slot = "4")]
			protected override AnalyticsPauseSkipEvent BuildEvent()
			{
				return null;
			}

			[Token(Token = "0x6001CD9")]
			[Address(RVA = "0x1AAF190", Offset = "0x1AAF190", VA = "0x1AAF190")]
			public Builder()
			{
			}
		}

		[Token(Token = "0x400273E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private StringField game;

		[Token(Token = "0x400273F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private StringField difficulty;

		[Token(Token = "0x4002740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private StringField option_rule;

		[Token(Token = "0x4002741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private StringField current_event;

		[Token(Token = "0x4002742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private FloatField total_time;

		[Token(Token = "0x6001CD7")]
		[Address(RVA = "0x1AAEFA4", Offset = "0x1AAEFA4", VA = "0x1AAEFA4")]
		private AnalyticsPauseSkipEvent()
		{
		}
	}
	[Token(Token = "0x2000724")]
	public static class CalorieDataPerDayUtils
	{
		[Token(Token = "0x6001CDA")]
		[Address(RVA = "0x1AADDF0", Offset = "0x1AADDF0", VA = "0x1AADDF0")]
		public static FirestoreQuery<StructuredQuerySupportWhere<TimeRangeWhere>> BuildQuery(List<string> fieldPaths, DateTime from, DateTime to, int limit)
		{
			return null;
		}

		[Token(Token = "0x6001CDB")]
		[Address(RVA = "0x1AAF1E8", Offset = "0x1AAF1E8", VA = "0x1AAF1E8")]
		public static SortedDictionary<DateTime, PlayLogData> GroupByLocalDateTime(UserGameSummaryPerHourResponse response)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000725")]
	public class UserGameSummaryPerHourDoc
	{
		[Token(Token = "0x4002748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TimestampField date;

		[Token(Token = "0x4002749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public NumberField total_calorie;

		[Token(Token = "0x6001CDC")]
		[Address(RVA = "0x1AAF53C", Offset = "0x1AAF53C", VA = "0x1AAF53C")]
		public UserGameSummaryPerHourDoc()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000726")]
	public class UserGameSummaryPerHourResponse
	{
		[Token(Token = "0x400274A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<DocumentConteinerInStructuredQueryResponse<UserGameSummaryPerHourDoc>> docs;

		[Token(Token = "0x6001CDD")]
		[Address(RVA = "0x1AAF544", Offset = "0x1AAF544", VA = "0x1AAF544")]
		public UserGameSummaryPerHourResponse()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000727")]
	public class TimeRangeWhere
	{
		[Serializable]
		[Token(Token = "0x2000728")]
		public class CompositeFilter
		{
			[Token(Token = "0x400274C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<TimestampFilter> filters;

			[Token(Token = "0x400274D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string op;

			[Token(Token = "0x6001CDF")]
			[Address(RVA = "0x1AAF1E0", Offset = "0x1AAF1E0", VA = "0x1AAF1E0")]
			public CompositeFilter()
			{
			}
		}

		[Token(Token = "0x400274B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CompositeFilter compositeFilter;

		[Token(Token = "0x6001CDE")]
		[Address(RVA = "0x1AAF1D8", Offset = "0x1AAF1D8", VA = "0x1AAF1D8")]
		public TimeRangeWhere()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000729")]
	public class GameUserSummaryDocument
	{
		[Token(Token = "0x400274E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public NumberField best_score;

		[Token(Token = "0x400274F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public NumberField total_calorie;

		[Token(Token = "0x6001CE0")]
		[Address(RVA = "0x1AAF5CC", Offset = "0x1AAF5CC", VA = "0x1AAF5CC")]
		public GameUserSummaryDocument()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200072A")]
	public class UserDoc
	{
		[Token(Token = "0x4002750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MapField<AchievementFieldsEmpty> achievement;

		[Token(Token = "0x4002751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TimestampField created_at;

		[Token(Token = "0x6001CE1")]
		[Address(RVA = "0x1AAF668", Offset = "0x1AAF668", VA = "0x1AAF668")]
		public UserDoc()
		{
		}
	}
}
namespace Imacreate.GrooveFitIsland.Firebase.FirebaseFunctions
{
	[Serializable]
	[Token(Token = "0x200072B")]
	public abstract class AddPlayDataBaseRequest
	{
		[Token(Token = "0x200072C")]
		public abstract class BaseBuilder<T>
		{
			[Token(Token = "0x400275F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GrooveFitGame game;

			[Token(Token = "0x4002760")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GameStatus.Difficulty difficulty;

			[Token(Token = "0x4002761")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string platform;

			[Token(Token = "0x4002762")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string device;

			[Token(Token = "0x4002763")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string language;

			[Token(Token = "0x4002764")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float score;

			[Token(Token = "0x4002765")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float calorie;

			[Token(Token = "0x4002766")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int great;

			[Token(Token = "0x4002767")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int ok;

			[Token(Token = "0x4002768")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int bad;

			[Token(Token = "0x4002769")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool avatar_usage;

			[Token(Token = "0x400276A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool paramReturnRanking;

			[Token(Token = "0x400276B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int paramRankingCount;

			[Token(Token = "0x6001CE3")]
			protected void PopulateBaseFields(AddPlayDataBaseRequest request)
			{
			}

			[Token(Token = "0x6001CE4")]
			public BaseBuilder<T> Set(ScoreData scoreData)
			{
				return null;
			}

			[Token(Token = "0x6001CE5")]
			public abstract T Build();

			[Token(Token = "0x6001CE6")]
			protected BaseBuilder()
			{
			}
		}

		[Token(Token = "0x4002752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		protected string game;

		[Token(Token = "0x4002753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected string difficulty;

		[Token(Token = "0x4002754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected string platform;

		[Token(Token = "0x4002755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected string device;

		[Token(Token = "0x4002756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected string language;

		[Token(Token = "0x4002757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		protected float score;

		[Token(Token = "0x4002758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		protected float calorie;

		[Token(Token = "0x4002759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		protected int great;

		[Token(Token = "0x400275A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		protected int ok;

		[Token(Token = "0x400275B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		protected int bad;

		[Token(Token = "0x400275C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		protected bool avatar_usage;

		[Token(Token = "0x400275D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		[SerializeField]
		protected bool paramReturnRanking;

		[Token(Token = "0x400275E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		protected int paramRankingCount;

		[Token(Token = "0x6001CE2")]
		[Address(RVA = "0x1AAF734", Offset = "0x1AAF734", VA = "0x1AAF734")]
		protected AddPlayDataBaseRequest()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200072D")]
	public class AddPlayDataEndlessRequest : AddPlayDataBaseRequest
	{
		[Token(Token = "0x200072E")]
		public class Builder : BaseBuilder<AddPlayDataEndlessRequest>
		{
			[Token(Token = "0x400276F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public int cycle;

			[Token(Token = "0x4002770")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public GameStatus.EndlessLifeType endless_life_type;

			[Token(Token = "0x4002771")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public float play_time;

			[Token(Token = "0x6001CE8")]
			[Address(RVA = "0x1AAF794", Offset = "0x1AAF794", VA = "0x1AAF794", Slot = "4")]
			public override AddPlayDataEndlessRequest Build()
			{
				return null;
			}

			[Token(Token = "0x6001CE9")]
			[Address(RVA = "0x1AAF86C", Offset = "0x1AAF86C", VA = "0x1AAF86C")]
			public Builder()
			{
			}
		}

		[Token(Token = "0x400276C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private int cycle;

		[Token(Token = "0x400276D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private string endless_life_type;

		[Token(Token = "0x400276E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private float play_time;

		[Token(Token = "0x6001CE7")]
		[Address(RVA = "0x1AAF73C", Offset = "0x1AAF73C", VA = "0x1AAF73C")]
		public AddPlayDataEndlessRequest()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200072F")]
	public class AddPlayDataRequest : AddPlayDataBaseRequest
	{
		[Token(Token = "0x2000730")]
		public class Builder : BaseBuilder<AddPlayDataRequest>
		{
			[Token(Token = "0x4002776")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public int max_combo;

			[Token(Token = "0x4002777")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public GameStatus.OptionRule option_rule;

			[Token(Token = "0x4002778")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public float practice_time;

			[Token(Token = "0x6001CEB")]
			[Address(RVA = "0x1AAF91C", Offset = "0x1AAF91C", VA = "0x1AAF91C", Slot = "4")]
			public override AddPlayDataRequest Build()
			{
				return null;
			}

			[Token(Token = "0x6001CEC")]
			[Address(RVA = "0x1AAF9F4", Offset = "0x1AAF9F4", VA = "0x1AAF9F4")]
			public Builder()
			{
			}
		}

		[Token(Token = "0x4002772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int max_combo;

		[Token(Token = "0x4002773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string option_rule;

		[Token(Token = "0x4002774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public string life_type;

		[Token(Token = "0x4002775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float practice_time;

		[Token(Token = "0x6001CEA")]
		[Address(RVA = "0x1AAF8B4", Offset = "0x1AAF8B4", VA = "0x1AAF8B4")]
		public AddPlayDataRequest()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000731")]
	public class GetTopPlayersRequest
	{
		[Token(Token = "0x2000732")]
		public class Builder
		{
			[Token(Token = "0x400277E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GrooveFitGame game;

			[Token(Token = "0x400277F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public GameStatus.Difficulty difficulty;

			[Token(Token = "0x4002780")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int count;

			[Token(Token = "0x4002781")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public GameStatus.OptionRule option_rule;

			[Token(Token = "0x4002782")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameStatus.EndlessLifeType endless_life_type;

			[Token(Token = "0x4002783")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public SortType type;

			[Token(Token = "0x6001CEE")]
			[Address(RVA = "0x1AAFA44", Offset = "0x1AAFA44", VA = "0x1AAFA44")]
			public GetTopPlayersRequest Build()
			{
				return null;
			}

			[Token(Token = "0x6001CEF")]
			[Address(RVA = "0x1AAFB6C", Offset = "0x1AAFB6C", VA = "0x1AAFB6C")]
			public Builder()
			{
			}
		}

		[Token(Token = "0x2000733")]
		public enum SortType
		{
			[Token(Token = "0x4002785")]
			Score,
			[Token(Token = "0x4002786")]
			Calorie
		}

		[Token(Token = "0x4002779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private string game;

		[Token(Token = "0x400277A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string difficulty;

		[Token(Token = "0x400277B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int count;

		[Token(Token = "0x400277C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private string option;

		[Token(Token = "0x400277D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private int type;

		[Token(Token = "0x6001CED")]
		[Address(RVA = "0x1AAFA3C", Offset = "0x1AAFA3C", VA = "0x1AAFA3C")]
		public GetTopPlayersRequest()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000734")]
	public class RankingDataEntry
	{
		[Token(Token = "0x4002787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string displayName;

		[Token(Token = "0x4002788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float value;

		[Token(Token = "0x6001CF0")]
		[Address(RVA = "0x1AAFB74", Offset = "0x1AAFB74", VA = "0x1AAFB74")]
		public RankingDataEntry()
		{
		}
	}
}
namespace Imacreate.GrooveFitIsland.Firebase.Extension
{
	[Token(Token = "0x2000735")]
	public static class CodeExtension
	{
		[Token(Token = "0x4002789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Dictionary<GameStatus.Difficulty, string> difficultyToCode;

		[Token(Token = "0x400278A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly Dictionary<string, GameStatus.Difficulty> codeToDifficulty;

		[Token(Token = "0x400278B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly Dictionary<GameStatus.OptionRule, string> optionRuleToCode;

		[Token(Token = "0x400278C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly Dictionary<string, GameStatus.OptionRule> codeToOptionRule;

		[Token(Token = "0x400278D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static readonly Dictionary<GameStatus.EndlessLifeType, string> endlessLifeTypeToCode;

		[Token(Token = "0x400278E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static readonly Dictionary<string, GameStatus.EndlessLifeType> codeToEndlessLifeType;

		[Token(Token = "0x400278F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static readonly Dictionary<Type, string> analyticsTypeToCode;

		[Token(Token = "0x4002790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static readonly Dictionary<GameStatus.Status, string> gameStatusToCode;

		[Token(Token = "0x4002791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static readonly Dictionary<string, GrooveFitGame> codeToGrooveFitGame;

		[Token(Token = "0x6001CF1")]
		[Address(RVA = "0x1AADD60", Offset = "0x1AADD60", VA = "0x1AADD60")]
		public static string ToCode(this GrooveFitGame game)
		{
			return null;
		}

		[Token(Token = "0x6001CF2")]
		[Address(RVA = "0x1AAED5C", Offset = "0x1AAED5C", VA = "0x1AAED5C")]
		public static string ToCode(this GameStatus.Difficulty difficulty)
		{
			return null;
		}

		[Token(Token = "0x6001CF3")]
		[Address(RVA = "0x1AAEDDC", Offset = "0x1AAEDDC", VA = "0x1AAEDDC")]
		public static string ToCode(this GameStatus.OptionRule optionRule)
		{
			return null;
		}

		[Token(Token = "0x6001CF4")]
		[Address(RVA = "0x1AAEE5C", Offset = "0x1AAEE5C", VA = "0x1AAEE5C")]
		public static string ToCode(this GameStatus.EndlessLifeType lifeType)
		{
			return null;
		}

		[Token(Token = "0x6001CF5")]
		[Address(RVA = "0x1AAFB7C", Offset = "0x1AAFB7C", VA = "0x1AAFB7C")]
		public static string ToCode(this AnalyticsBaseEvent analyticsEvent)
		{
			return null;
		}

		[Token(Token = "0x6001CF6")]
		[Address(RVA = "0x1AAEEDC", Offset = "0x1AAEEDC", VA = "0x1AAEEDC")]
		public static string ToCode(this GameStatus.Status gameStatus)
		{
			return null;
		}

		[Token(Token = "0x6001CF7")]
		[Address(RVA = "0x1AAFC10", Offset = "0x1AAFC10", VA = "0x1AAFC10")]
		public static GrooveFitGame ToGrooveFitGame(this string code)
		{
			return default(GrooveFitGame);
		}

		[Token(Token = "0x6001CF8")]
		[Address(RVA = "0x1AAFC8C", Offset = "0x1AAFC8C", VA = "0x1AAFC8C")]
		public static GameStatus.Difficulty ToDifficulty(this string code)
		{
			return default(GameStatus.Difficulty);
		}

		[Token(Token = "0x6001CF9")]
		[Address(RVA = "0x1AAFD08", Offset = "0x1AAFD08", VA = "0x1AAFD08")]
		public static GameStatus.OptionRule ToOptionRule(this string code)
		{
			return default(GameStatus.OptionRule);
		}

		[Token(Token = "0x6001CFA")]
		[Address(RVA = "0x1AAFD84", Offset = "0x1AAFD84", VA = "0x1AAFD84")]
		public static GameStatus.EndlessLifeType ToEndlessLifeType(this string code)
		{
			return default(GameStatus.EndlessLifeType);
		}
	}
	[Token(Token = "0x2000737")]
	public static class GameDataManagerExtension
	{
		[StructLayout(3)]
		[Token(Token = "0x2000738")]
		[CompilerGenerated]
		private struct <StoreAnalyticsData>d__0<BUILDER, EVENT> : IAsyncStateMachine where BUILDER : AnalyticsBaseEvent.BaseBuilder<EVENT> where EVENT : AnalyticsBaseEvent
		{
			[Token(Token = "0x4002793")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002794")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4002795")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public BUILDER requestBuilder;

			[Token(Token = "0x4002796")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FirebaseUserInfo userInfo;

			[Token(Token = "0x4002797")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FirebaseTokenManager tokenManager;

			[Token(Token = "0x4002798")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CancellationToken token;

			[Token(Token = "0x4002799")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FirebaseApi api;

			[Token(Token = "0x400279A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private UniTask<IdTokenResponse>.Awaiter <>u__1;

			[Token(Token = "0x400279B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private UniTask.Awaiter <>u__2;

			[Token(Token = "0x6001D05")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001D06")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000739")]
		[CompilerGenerated]
		private struct <GetCalorieDataPerDayInRange>d__1 : IAsyncStateMachine
		{
			[Token(Token = "0x400279C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400279D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<List<List<PlayLogData>>> <>t__builder;

			[Token(Token = "0x400279E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DateTime referenceLocalDate;

			[Token(Token = "0x400279F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int daysBackFrom;

			[Token(Token = "0x40027A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public int daysBackUntil;

			[Token(Token = "0x40027A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public FirebaseTokenManager tokenManager;

			[Token(Token = "0x40027A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public CancellationToken token;

			[Token(Token = "0x40027A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public FirebaseApi api;

			[Token(Token = "0x40027A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public FirebaseUserInfo userInfo;

			[Token(Token = "0x40027A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private List<string> <fieldPaths>5__2;

			[Token(Token = "0x40027A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private DateTime <start>5__3;

			[Token(Token = "0x40027A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private DateTime <end>5__4;

			[Token(Token = "0x40027A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private int <days>5__5;

			[Token(Token = "0x40027A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private UniTask<IdTokenResponse>.Awaiter <>u__1;

			[Token(Token = "0x40027AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			private UniTask<string>.Awaiter <>u__2;

			[Token(Token = "0x6001D07")]
			[Address(RVA = "0x1AB0E2C", Offset = "0x1AB0E2C", VA = "0x1AB0E2C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001D08")]
			[Address(RVA = "0x1AB1AA8", Offset = "0x1AB1AA8", VA = "0x1AB1AA8", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200073A")]
		[CompilerGenerated]
		private struct <GetCalorieDataOnSpecificDay>d__2 : IAsyncStateMachine
		{
			[Token(Token = "0x40027AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40027AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<List<PlayLogData>> <>t__builder;

			[Token(Token = "0x40027AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FirebaseTokenManager tokenManager;

			[Token(Token = "0x40027AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken token;

			[Token(Token = "0x40027AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public FirebaseApi api;

			[Token(Token = "0x40027B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public DateTime referenceDateTime;

			[Token(Token = "0x40027B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private UniTask<IdTokenResponse>.Awaiter <>u__1;

			[Token(Token = "0x40027B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private UniTask<List<Imacreate.GrooveFitIsland.Furuyama.Scripts.FirebaseGrooveFitIsland.FirebaseFunctions.GetPlayDataOnSpecificDayResponseEntry>>.Awaiter <>u__2;

			[Token(Token = "0x6001D09")]
			[Address(RVA = "0x1AB1B00", Offset = "0x1AB1B00", VA = "0x1AB1B00", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001D0A")]
			[Address(RVA = "0x1AB2734", Offset = "0x1AB2734", VA = "0x1AB2734", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200073B")]
		[CompilerGenerated]
		private struct <GetCalorieData>d__3 : IAsyncStateMachine
		{
			[Token(Token = "0x40027B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40027B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<UserCalorieData> <>t__builder;

			[Token(Token = "0x40027B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FirebaseTokenManager tokenManager;

			[Token(Token = "0x40027B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken token;

			[Token(Token = "0x40027B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public FirebaseApi api;

			[Token(Token = "0x40027B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public GrooveFitGame game;

			[Token(Token = "0x40027B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public FirebaseUserInfo userInfo;

			[Token(Token = "0x40027BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private IdTokenResponse <tokenId>5__2;

			[Token(Token = "0x40027BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Dictionary<GameStatus.Difficulty, float> <calories>5__3;

			[Token(Token = "0x40027BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private float <totalCalorie>5__4;

			[Token(Token = "0x40027BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private UniTask<IdTokenResponse>.Awaiter <>u__1;

			[Token(Token = "0x40027BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private IEnumerator<GameStatus.Difficulty> <>7__wrap4;

			[Token(Token = "0x40027BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			private GameStatus.Difficulty <difficulty>5__6;

			[Token(Token = "0x40027C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			private UniTask<string>.Awaiter <>u__2;

			[Token(Token = "0x6001D0B")]
			[Address(RVA = "0x1AB278C", Offset = "0x1AB278C", VA = "0x1AB278C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001D0C")]
			[Address(RVA = "0x1AB39B0", Offset = "0x1AB39B0", VA = "0x1AB39B0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200073C")]
		[CompilerGenerated]
		private struct <GetTopPlayers>d__4 : IAsyncStateMachine
		{
			[Token(Token = "0x40027C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40027C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<List<RankingDataEntry>> <>t__builder;

			[Token(Token = "0x40027C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FirebaseTokenManager tokenManager;

			[Token(Token = "0x40027C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken token;

			[Token(Token = "0x40027C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public FirebaseApi api;

			[Token(Token = "0x40027C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public GetTopPlayersRequest.Builder requestBuilder;

			[Token(Token = "0x40027C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private UniTask<IdTokenResponse>.Awaiter <>u__1;

			[Token(Token = "0x40027C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private UniTask<List<RankingDataEntry>>.Awaiter <>u__2;

			[Token(Token = "0x6001D0D")]
			[Address(RVA = "0x1AB3A08", Offset = "0x1AB3A08", VA = "0x1AB3A08", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001D0E")]
			[Address(RVA = "0x1AB41AC", Offset = "0x1AB41AC", VA = "0x1AB41AC", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200073D")]
		[CompilerGenerated]
		private struct <AddPlayData>d__5<T> : IAsyncStateMachine
		{
			[Token(Token = "0x40027C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40027CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AsyncUniTaskMethodBuilder<AddPlayDataResponse> <>t__builder;

			[Token(Token = "0x40027CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FirebaseTokenManager tokenManager;

			[Token(Token = "0x40027CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CancellationToken token;

			[Token(Token = "0x40027CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AddPlayDataBaseRequest.BaseBuilder<T> requestBuilder;

			[Token(Token = "0x40027CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FirebaseApi api;

			[Token(Token = "0x40027CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private UniTask<IdTokenResponse>.Awaiter <>u__1;

			[Token(Token = "0x40027D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private UniTask<AddPlayDataResponse>.Awaiter <>u__2;

			[Token(Token = "0x6001D0F")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001D10")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x6001CFF")]
		[AsyncStateMachine(typeof(<StoreAnalyticsData>d__0<, >))]
		public static UniTask StoreAnalyticsData<BUILDER, EVENT>(this FirebaseApi api, FirebaseTokenManager tokenManager, BUILDER requestBuilder, FirebaseUserInfo userInfo, CancellationToken token) where BUILDER : AnalyticsBaseEvent.BaseBuilder<EVENT> where EVENT : AnalyticsBaseEvent
		{
			return default(UniTask);
		}

		[Token(Token = "0x6001D00")]
		[Address(RVA = "0x1AB0954", Offset = "0x1AB0954", VA = "0x1AB0954")]
		[AsyncStateMachine(typeof(<GetCalorieDataPerDayInRange>d__1))]
		public static UniTask<List<List<PlayLogData>>> GetCalorieDataPerDayInRange(this FirebaseApi api, FirebaseTokenManager tokenManager, FirebaseUserInfo userInfo, CancellationToken token, DateTime referenceLocalDate, int daysBackFrom = 6, int daysBackUntil = 0)
		{
			return default(UniTask<List<List<PlayLogData>>>);
		}

		[Token(Token = "0x6001D01")]
		[Address(RVA = "0x1AB0A94", Offset = "0x1AB0A94", VA = "0x1AB0A94")]
		[AsyncStateMachine(typeof(<GetCalorieDataOnSpecificDay>d__2))]
		public static UniTask<List<PlayLogData>> GetCalorieDataOnSpecificDay(this FirebaseApi api, FirebaseTokenManager tokenManager, DateTime referenceDateTime, CancellationToken token)
		{
			return default(UniTask<List<PlayLogData>>);
		}

		[Token(Token = "0x6001D02")]
		[Address(RVA = "0x1AB0BC0", Offset = "0x1AB0BC0", VA = "0x1AB0BC0")]
		[AsyncStateMachine(typeof(<GetCalorieData>d__3))]
		public static UniTask<UserCalorieData> GetCalorieData(this FirebaseApi api, FirebaseTokenManager tokenManager, FirebaseUserInfo userInfo, GrooveFitGame game, CancellationToken token)
		{
			return default(UniTask<UserCalorieData>);
		}

		[Token(Token = "0x6001D03")]
		[Address(RVA = "0x1AB0CF4", Offset = "0x1AB0CF4", VA = "0x1AB0CF4")]
		[AsyncStateMachine(typeof(<GetTopPlayers>d__4))]
		public static UniTask<List<RankingDataEntry>> GetTopPlayers(this FirebaseApi api, FirebaseTokenManager tokenManager, GetTopPlayersRequest.Builder requestBuilder, CancellationToken token)
		{
			return default(UniTask<List<RankingDataEntry>>);
		}

		[Token(Token = "0x6001D04")]
		[AsyncStateMachine(typeof(<AddPlayData>d__5<>))]
		public static UniTask<AddPlayDataResponse> AddPlayData<T>(this FirebaseApi api, FirebaseTokenManager tokenManager, AddPlayDataBaseRequest.BaseBuilder<T> requestBuilder, CancellationToken token)
		{
			return default(UniTask<AddPlayDataResponse>);
		}
	}
	[Token(Token = "0x200073E")]
	public static class TwitterExtension
	{
		[StructLayout(3)]
		[Token(Token = "0x200073F")]
		[CompilerGenerated]
		private struct <TwitterAuthLink>d__0 : IAsyncStateMachine
		{
			[Token(Token = "0x40027D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40027D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<TwitterAuthLinkResponse> <>t__builder;

			[Token(Token = "0x40027D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FirebaseTokenManager tokenManager;

			[Token(Token = "0x40027D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken token;

			[Token(Token = "0x40027D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public FirebaseApi api;

			[Token(Token = "0x40027D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public TwitterAuthLinkRequest request;

			[Token(Token = "0x40027D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private UniTask<IdTokenResponse>.Awaiter <>u__1;

			[Token(Token = "0x40027D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private UniTask<TwitterAuthLinkResponse>.Awaiter <>u__2;

			[Token(Token = "0x6001D14")]
			[Address(RVA = "0x1AB45C4", Offset = "0x1AB45C4", VA = "0x1AB45C4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001D15")]
			[Address(RVA = "0x1AB4D50", Offset = "0x1AB4D50", VA = "0x1AB4D50", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000740")]
		[CompilerGenerated]
		private struct <TwitterOauthPin>d__1 : IAsyncStateMachine
		{
			[Token(Token = "0x40027D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40027DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<TwitterOAuthPinResponse> <>t__builder;

			[Token(Token = "0x40027DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FirebaseTokenManager tokenManager;

			[Token(Token = "0x40027DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken token;

			[Token(Token = "0x40027DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public FirebaseApi api;

			[Token(Token = "0x40027DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string pin;

			[Token(Token = "0x40027DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private UniTask<IdTokenResponse>.Awaiter <>u__1;

			[Token(Token = "0x40027E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private UniTask<TwitterOAuthPinResponse>.Awaiter <>u__2;

			[Token(Token = "0x6001D16")]
			[Address(RVA = "0x1AB4DA8", Offset = "0x1AB4DA8", VA = "0x1AB4DA8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001D17")]
			[Address(RVA = "0x1AB5588", Offset = "0x1AB5588", VA = "0x1AB5588", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000741")]
		[CompilerGenerated]
		private struct <TwitterPostTweet>d__2 : IAsyncStateMachine
		{
			[Token(Token = "0x40027E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40027E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<TwitterPostTweetResponse> <>t__builder;

			[Token(Token = "0x40027E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string tweetText;

			[Token(Token = "0x40027E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public byte[] imageBytes;

			[Token(Token = "0x40027E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public FirebaseTokenManager tokenManager;

			[Token(Token = "0x40027E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public CancellationToken token;

			[Token(Token = "0x40027E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public FirebaseApi api;

			[Token(Token = "0x40027E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private WWWForm <form>5__2;

			[Token(Token = "0x40027E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private UniTask<IdTokenResponse>.Awaiter <>u__1;

			[Token(Token = "0x40027EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private UniTask<string>.Awaiter <>u__2;

			[Token(Token = "0x6001D18")]
			[Address(RVA = "0x1AB55E0", Offset = "0x1AB55E0", VA = "0x1AB55E0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001D19")]
			[Address(RVA = "0x1AB5E68", Offset = "0x1AB5E68", VA = "0x1AB5E68", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x6001D11")]
		[Address(RVA = "0x1AB4204", Offset = "0x1AB4204", VA = "0x1AB4204")]
		[AsyncStateMachine(typeof(<TwitterAuthLink>d__0))]
		public static UniTask<TwitterAuthLinkResponse> TwitterAuthLink(this FirebaseApi api, FirebaseTokenManager tokenManager, TwitterAuthLinkRequest request, CancellationToken token)
		{
			return default(UniTask<TwitterAuthLinkResponse>);
		}

		[Token(Token = "0x6001D12")]
		[Address(RVA = "0x1AB433C", Offset = "0x1AB433C", VA = "0x1AB433C")]
		[AsyncStateMachine(typeof(<TwitterOauthPin>d__1))]
		public static UniTask<TwitterOAuthPinResponse> TwitterOauthPin(this FirebaseApi api, FirebaseTokenManager tokenManager, string pin, CancellationToken token)
		{
			return default(UniTask<TwitterOAuthPinResponse>);
		}

		[Token(Token = "0x6001D13")]
		[Address(RVA = "0x1AB4474", Offset = "0x1AB4474", VA = "0x1AB4474")]
		[AsyncStateMachine(typeof(<TwitterPostTweet>d__2))]
		public static UniTask<TwitterPostTweetResponse> TwitterPostTweet(this FirebaseApi api, FirebaseTokenManager tokenManager, byte[] imageBytes, string tweetText, CancellationToken token)
		{
			return default(UniTask<TwitterPostTweetResponse>);
		}
	}
}
namespace Imacreate.GrooveFitIsland.Firebase.Dto
{
	[Token(Token = "0x2000742")]
	public class UserCalorieData
	{
		[Token(Token = "0x40027EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly GrooveFitGame _game;

		[Token(Token = "0x40027EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly IDictionary<GameStatus.Difficulty, float> _calories;

		[Token(Token = "0x40027ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly float _totalCalorie;

		[Token(Token = "0x6001D1A")]
		[Address(RVA = "0x1AB3964", Offset = "0x1AB3964", VA = "0x1AB3964")]
		public UserCalorieData(GrooveFitGame game, IDictionary<GameStatus.Difficulty, float> calories, float totalCalorie)
		{
		}
	}
}
namespace Imacreate.GrooveFitIsland.Core
{
	[Token(Token = "0x2000743")]
	public class GrabbableObject : MonoBehaviour
	{
		[Token(Token = "0x40027EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Inject]
		protected InputProvider _inputProvider;

		[Token(Token = "0x40027EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("Grab Setting")]
		[SerializeField]
		protected GameObject _rootObject;

		[Token(Token = "0x40027F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HandShapeUtils.HandShapeKey _handShape;

		[Token(Token = "0x40027F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private Vector3 _offsetPosLeftGrab;

		[Token(Token = "0x40027F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Vector3 _offsetRotLeftGrab;

		[Token(Token = "0x40027F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private Vector3 _offsetPosRightGrab;

		[Token(Token = "0x40027F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Vector3 _offsetRotRightGrab;

		[Token(Token = "0x40027F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public bool _takableAcrossScenes;

		[Token(Token = "0x40027F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
		[SerializeField]
		public bool _isAttachHand;

		[Token(Token = "0x40027F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Sequence _grabSequence;

		[Token(Token = "0x40027F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected Rigidbody _rigidbody;

		[Token(Token = "0x40027F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float _rbMassSave;

		[Token(Token = "0x40027FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float _rbDragSave;

		[Token(Token = "0x40027FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _rbAngularDrag;

		[Token(Token = "0x40027FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private bool _isHaveRigidbody;

		[NonSerialized]
		[Token(Token = "0x40027FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
		public bool _isOnGrabbing;

		[Token(Token = "0x40027FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7E")]
		private bool _isUseGravity;

		[Token(Token = "0x40027FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool[] _isHovered;

		[Token(Token = "0x4002800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private GameObject _parentObjSave;

		[NonSerialized]
		[Token(Token = "0x4002801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public bool _isHoverable;

		[Token(Token = "0x4002802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[Header("Event")]
		[SerializeField]
		public UnityEvent _hoverEvent;

		[Token(Token = "0x4002803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		public UnityEvent _unhoverEvent;

		[Token(Token = "0x4002804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		public UnityEvent _grabEvent;

		[Token(Token = "0x4002805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		public UnityEvent _releaseEvent;

		[NonSerialized]
		[Token(Token = "0x4002806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public VRHand.HandType _nowGrabbedHand;

		[Token(Token = "0x4002807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected GameObject _nowGrabbedHandObj;

		[Token(Token = "0x4002808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private readonly List<Vector3> _velocitylist;

		[Token(Token = "0x4002809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private readonly List<Vector3> _angularVelocitylist;

		[Token(Token = "0x400280A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Vector3 _posNew;

		[Token(Token = "0x400280B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private Vector3 _velocity;

		[Token(Token = "0x400280C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Vector3 _posOld;

		[Token(Token = "0x400280D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		private Vector3 _estimatedAngularVelocity;

		[Token(Token = "0x400280E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Quaternion _rotationPrevious;

		[Token(Token = "0x400280F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Vector3[] offsetPos;

		[Token(Token = "0x4002810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Vector3[] offsetRot;

		[Token(Token = "0x4002811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private bool _isLateUpdateOK;

		[Token(Token = "0x4002812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private GameObject _transformOffsetPosObj;

		[Token(Token = "0x4002813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private GameObject _transformhandAttachPosObj;

		[Token(Token = "0x4002814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private bool _isAttachHandSave;

		[Token(Token = "0x4002815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private ConfigurableJoint _jointSave;

		[Token(Token = "0x4002816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private GameObject _thisObjParentSave;

		[Token(Token = "0x6001D1B")]
		[Address(RVA = "0x1AB5EC0", Offset = "0x1AB5EC0", VA = "0x1AB5EC0", Slot = "4")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6001D1C")]
		[Address(RVA = "0x1AB60B4", Offset = "0x1AB60B4", VA = "0x1AB60B4", Slot = "5")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6001D1D")]
		[Address(RVA = "0x1AB6838", Offset = "0x1AB6838", VA = "0x1AB6838")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001D1E")]
		[Address(RVA = "0x1AB6D78", Offset = "0x1AB6D78", VA = "0x1AB6D78", Slot = "6")]
		public virtual void OnGrab(GameObject handObj, GameObject parentObj, VRHand.HandType hand)
		{
		}

		[Token(Token = "0x6001D1F")]
		[Address(RVA = "0x1AB7C60", Offset = "0x1AB7C60", VA = "0x1AB7C60", Slot = "7")]
		public virtual void OnRelease(GameObject handObj, VRHand.HandType hand)
		{
		}

		[Token(Token = "0x6001D20")]
		[Address(RVA = "0x1AB82E8", Offset = "0x1AB82E8", VA = "0x1AB82E8", Slot = "8")]
		public virtual void OnRemoved(GameObject handObj, VRHand.HandType hand)
		{
		}

		[Token(Token = "0x6001D21")]
		[Address(RVA = "0x1AB86FC", Offset = "0x1AB86FC", VA = "0x1AB86FC", Slot = "9")]
		public virtual void OnHovered(VRHand.HandType hand)
		{
		}

		[Token(Token = "0x6001D22")]
		[Address(RVA = "0x1AB873C", Offset = "0x1AB873C", VA = "0x1AB873C")]
		public void OnUnHovered(VRHand.HandType hand)
		{
		}

		[Token(Token = "0x6001D23")]
		[Address(RVA = "0x1AB876C", Offset = "0x1AB876C", VA = "0x1AB876C", Slot = "10")]
		protected virtual void OnUnHoveredWithoutGrab(VRHand.HandType hand)
		{
		}

		[Token(Token = "0x6001D24")]
		[Address(RVA = "0x1AB87FC", Offset = "0x1AB87FC", VA = "0x1AB87FC", Slot = "11")]
		protected virtual void OnUnHoveredWithGrab(VRHand.HandType unHoveredHand, VRHand.HandType grabHand)
		{
		}

		[Token(Token = "0x6001D25")]
		[Address(RVA = "0x1AB6514", Offset = "0x1AB6514", VA = "0x1AB6514")]
		private void CalculateVelocity()
		{
		}

		[Token(Token = "0x6001D26")]
		[Address(RVA = "0x1AB8110", Offset = "0x1AB8110", VA = "0x1AB8110")]
		private void Throw()
		{
		}

		[Token(Token = "0x6001D27")]
		[Address(RVA = "0x1AB882C", Offset = "0x1AB882C", VA = "0x1AB882C")]
		private void AddConfigurableJoint(VRHand.HandType hand)
		{
		}

		[Token(Token = "0x6001D28")]
		[Address(RVA = "0x1AB8C78", Offset = "0x1AB8C78", VA = "0x1AB8C78")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001D29")]
		[Address(RVA = "0x1AB8D58", Offset = "0x1AB8D58", VA = "0x1AB8D58")]
		public GrabbableObject()
		{
		}
	}
	[Token(Token = "0x2000746")]
	[RequireComponent(typeof(PlayHandShape))]
	public class GrabController : MonoBehaviour
	{
		[Token(Token = "0x2000747")]
		private enum HandType
		{
			[Token(Token = "0x4002833")]
			Left,
			[Token(Token = "0x4002834")]
			Right
		}

		[Token(Token = "0x400281D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Inject]
		private InputProvider _inputProvider;

		[Token(Token = "0x400281E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("Hand Setting")]
		[SerializeField]
		private HandType _handType;

		[Token(Token = "0x400281F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject _handGrabObj;

		[Token(Token = "0x4002820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject _grabRaycaster;

		[Token(Token = "0x4002821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float _rayLength;

		[Token(Token = "0x4002822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private VRHand.HandType _hand;

		[Token(Token = "0x4002823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float defaultLength;

		[Token(Token = "0x4002824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly List<GameObject> _grabbablObjs;

		[Token(Token = "0x4002825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GameObject _grabbableObj;

		[Token(Token = "0x4002826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GameObject _grabbableObjByRay;

		[Token(Token = "0x4002827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private GameObject _grabbableObjSave;

		[Token(Token = "0x4002828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float _grabbableObjDistanceSave;

		[Token(Token = "0x4002829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private LayerMask _layerMask;

		[Token(Token = "0x400282A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private RaycastHit _hitInfo;

		[Token(Token = "0x400282B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private LineRenderer _lineRenderer;

		[Token(Token = "0x400282C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private GameObject _grabbingObj;

		[Token(Token = "0x400282D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Tweener _hoverRayTweener;

		[Token(Token = "0x400282E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private bool _isGrabbing;

		[Token(Token = "0x400282F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[Header("Grabbable Setting")]
		[SerializeField]
		private HandMaterialChanger _materialChanger;

		[Token(Token = "0x4002830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private bool _isFirstHover;

		[Token(Token = "0x4002831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private readonly float _hoverableAngle;

		[Token(Token = "0x170002EA")]
		public HandMaterialChanger MaterialChanger
		{
			[Token(Token = "0x6001D2F")]
			[Address(RVA = "0x1AB9374", Offset = "0x1AB9374", VA = "0x1AB9374")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D30")]
		[Address(RVA = "0x1AB937C", Offset = "0x1AB937C", VA = "0x1AB937C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D31")]
		[Address(RVA = "0x1AB9628", Offset = "0x1AB9628", VA = "0x1AB9628")]
		private void Update()
		{
		}

		[Token(Token = "0x6001D32")]
		[Address(RVA = "0x1ABA894", Offset = "0x1ABA894", VA = "0x1ABA894")]
		private void SetHoverRay(bool active)
		{
		}

		[Token(Token = "0x6001D33")]
		[Address(RVA = "0x1ABA928", Offset = "0x1ABA928", VA = "0x1ABA928")]
		private void Release()
		{
		}

		[Token(Token = "0x6001D34")]
		[Address(RVA = "0x1AB7C54", Offset = "0x1AB7C54", VA = "0x1AB7C54")]
		public void SwapGrabHand()
		{
		}

		[Token(Token = "0x6001D35")]
		[Address(RVA = "0x1ABAAFC", Offset = "0x1ABAAFC", VA = "0x1ABAAFC")]
		private void ChangeGrabbableObj()
		{
		}

		[Token(Token = "0x6001D36")]
		[Address(RVA = "0x1ABA728", Offset = "0x1ABA728", VA = "0x1ABA728")]
		public void ResetGrabHand()
		{
		}

		[Token(Token = "0x6001D37")]
		[Address(RVA = "0x1ABAF58", Offset = "0x1ABAF58", VA = "0x1ABAF58")]
		public void ReleaseAndResetGrabHand()
		{
		}

		[Token(Token = "0x6001D38")]
		[Address(RVA = "0x1ABAF70", Offset = "0x1ABAF70", VA = "0x1ABAF70")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001D39")]
		[Address(RVA = "0x1ABB0A8", Offset = "0x1ABB0A8", VA = "0x1ABB0A8")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001D3A")]
		[Address(RVA = "0x1ABB190", Offset = "0x1ABB190", VA = "0x1ABB190")]
		private void OnActiveSceneChanged(Scene preScene, Scene postScene)
		{
		}

		[Token(Token = "0x6001D3B")]
		[Address(RVA = "0x1ABB59C", Offset = "0x1ABB59C", VA = "0x1ABB59C")]
		public GrabController()
		{
		}
	}
	[Token(Token = "0x2000748")]
	public class HandMaterialChanger : MonoBehaviour
	{
		[Token(Token = "0x4002835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Material _grabbableHandMaterial;

		[Token(Token = "0x4002836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SkinnedMeshRenderer _handSkinnedMeshRenderer;

		[Token(Token = "0x4002837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Material _saveMaterial;

		[Token(Token = "0x4002838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int FadeProperty;

		[Token(Token = "0x4002839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Tweener _fadeTweener;

		[Token(Token = "0x6001D3C")]
		[Address(RVA = "0x1ABC63C", Offset = "0x1ABC63C", VA = "0x1ABC63C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D3D")]
		[Address(RVA = "0x1ABC66C", Offset = "0x1ABC66C", VA = "0x1ABC66C")]
		public void ChangeMaterial(Material to)
		{
		}

		[Token(Token = "0x6001D3E")]
		[Address(RVA = "0x1ABC7FC", Offset = "0x1ABC7FC", VA = "0x1ABC7FC")]
		public void ChangeMaterialToDefault()
		{
		}

		[Token(Token = "0x6001D3F")]
		[Address(RVA = "0x1ABC804", Offset = "0x1ABC804", VA = "0x1ABC804")]
		public void ChangeMaterialToGrabbable()
		{
		}

		[Token(Token = "0x6001D40")]
		[Address(RVA = "0x1ABC80C", Offset = "0x1ABC80C", VA = "0x1ABC80C")]
		public void ChangeSaveMaterial(Material mat)
		{
		}

		[Token(Token = "0x6001D41")]
		[Address(RVA = "0x1ABC838", Offset = "0x1ABC838", VA = "0x1ABC838")]
		public void FadeValueTo(float to, float duration = 0.25f)
		{
		}

		[Token(Token = "0x6001D42")]
		[Address(RVA = "0x1ABC9EC", Offset = "0x1ABC9EC", VA = "0x1ABC9EC")]
		public HandMaterialChanger()
		{
		}
	}
	[Token(Token = "0x2000749")]
	[RequireComponent(typeof(AudioSource))]
	public class PushButtonManager : MonoBehaviour
	{
		[Token(Token = "0x400283A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Push Button Setting")]
		public UnityEvent ButtonDown;

		[Token(Token = "0x400283B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent ButtonUp;

		[Token(Token = "0x400283C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected internal Transform _moveingPartObj;

		[Token(Token = "0x400283D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 Axis;

		[Token(Token = "0x400283E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[Tooltip("How far the button must travel to become pressed.")]
		public float Threshold;

		[Token(Token = "0x400283F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Tooltip("Threshold to hit on the return to allow the button to be pressed again.")]
		public float UpThreshold;

		[Token(Token = "0x4002840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[Tooltip("The resting position of the button")]
		public Vector3 StartPosition;

		[Token(Token = "0x4002841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool _isPressed;

		[Token(Token = "0x4002842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		private bool _isActive;

		[Token(Token = "0x4002843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AudioClip AudioButtonDown;

		[Token(Token = "0x4002844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public AudioClip AudioButtonUp;

		[Token(Token = "0x4002845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private AudioSource _audio;

		[Token(Token = "0x4002846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private HandColliderDetector _handColSave;

		[Token(Token = "0x4002847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[Inject]
		private InputProvider _inputProvider;

		[Token(Token = "0x6001D45")]
		[Address(RVA = "0x1ABCAF0", Offset = "0x1ABCAF0", VA = "0x1ABCAF0", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001D46")]
		[Address(RVA = "0x1ABCCB8", Offset = "0x1ABCCB8", VA = "0x1ABCCB8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001D47")]
		[Address(RVA = "0x1ABCE64", Offset = "0x1ABCE64", VA = "0x1ABCE64")]
		private void ClampBounds()
		{
		}

		[Token(Token = "0x6001D48")]
		[Address(RVA = "0x1ABCF88", Offset = "0x1ABCF88", VA = "0x1ABCF88")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001D49")]
		[Address(RVA = "0x1ABCF8C", Offset = "0x1ABCF8C", VA = "0x1ABCF8C", Slot = "5")]
		public virtual void SetActive(bool active)
		{
		}

		[Token(Token = "0x6001D4A")]
		[Address(RVA = "0x1ABCF98", Offset = "0x1ABCF98", VA = "0x1ABCF98", Slot = "6")]
		protected virtual void OnButtonDown()
		{
		}

		[Token(Token = "0x6001D4B")]
		[Address(RVA = "0x1ABD020", Offset = "0x1ABD020", VA = "0x1ABD020", Slot = "7")]
		protected virtual void OnButtonUp()
		{
		}

		[Token(Token = "0x6001D4C")]
		[Address(RVA = "0x1ABCDC8", Offset = "0x1ABCDC8", VA = "0x1ABCDC8")]
		private void Vibrate()
		{
		}

		[Token(Token = "0x6001D4D")]
		[Address(RVA = "0x1ABD0A8", Offset = "0x1ABD0A8", VA = "0x1ABD0A8")]
		public PushButtonManager()
		{
		}
	}
	[Token(Token = "0x200074A")]
	[CreateAssetMenu(fileName = "EachPlatformCameraRigSettings", menuName = "ScriptableObjects/EachPlatformCameraRigSettings", order = 0)]
	public class EachPlatformCameraRigSettings : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x200074B")]
		public class CameraRigComponent
		{
			[Token(Token = "0x400284C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject cameraRigPrefab;

			[Token(Token = "0x400284D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 leftHandOffset;

			[Token(Token = "0x400284E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Vector3 rightHandOffset;

			[Token(Token = "0x6001D50")]
			[Address(RVA = "0x1ABD218", Offset = "0x1ABD218", VA = "0x1ABD218")]
			public CameraRigComponent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200074C")]
		public class SteamCameraRigComponent
		{
			[Token(Token = "0x400284F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public VRDeviceType.HMD hmdType;

			[Token(Token = "0x4002850")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Vector3 leftHandPosOffset;

			[Token(Token = "0x4002851")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 rightHandPosOffset;

			[Token(Token = "0x4002852")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public Vector3 leftHandRotOffset;

			[Token(Token = "0x4002853")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Vector3 rightHandRotOffset;

			[Token(Token = "0x6001D51")]
			[Address(RVA = "0x1ABD220", Offset = "0x1ABD220", VA = "0x1ABD220")]
			public SteamCameraRigComponent()
			{
			}
		}

		[Token(Token = "0x4002848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Each Platform")]
		public CameraRigComponent oculus;

		[Token(Token = "0x4002849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CameraRigComponent steam;

		[Token(Token = "0x400284A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CameraRigComponent pico;

		[Token(Token = "0x400284B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Header("Steam")]
		public SteamCameraRigComponent[] steamDevices;

		[Token(Token = "0x6001D4F")]
		[Address(RVA = "0x1ABD210", Offset = "0x1ABD210", VA = "0x1ABD210")]
		public EachPlatformCameraRigSettings()
		{
		}
	}
	[Token(Token = "0x200074D")]
	[RequireComponent(typeof(LineRenderer))]
	public class PlayerRayManager : MonoBehaviour
	{
		[Token(Token = "0x200074E")]
		private class ActiveHand
		{
			[Token(Token = "0x400285E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform Transform;

			[Token(Token = "0x400285F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public VRHand.HandType Type;

			[Token(Token = "0x6001D56")]
			[Address(RVA = "0x1ABDC08", Offset = "0x1ABDC08", VA = "0x1ABDC08")]
			public ActiveHand()
			{
			}
		}

		[Token(Token = "0x4002854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _rayAngle;

		[Token(Token = "0x4002855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _rayLength;

		[Token(Token = "0x4002856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Inject]
		private InputProvider _inputProvider;

		[Token(Token = "0x4002857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private LineRenderer _lineRenderer;

		[Token(Token = "0x4002858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly ActiveHand _activeHand;

		[Token(Token = "0x4002859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform _lasthit;

		[Token(Token = "0x400285A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly bool[] _hit;

		[Token(Token = "0x400285B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[ReadOnly]
		public bool _raycastActive;

		[Token(Token = "0x400285C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		[ReadOnly]
		public bool _raySelectionActive;

		[Token(Token = "0x400285D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 _rayHitPos;

		[Token(Token = "0x6001D52")]
		[Address(RVA = "0x1ABD228", Offset = "0x1ABD228", VA = "0x1ABD228")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D53")]
		[Address(RVA = "0x1ABD2F8", Offset = "0x1ABD2F8", VA = "0x1ABD2F8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001D54")]
		[Address(RVA = "0x1ABD2D0", Offset = "0x1ABD2D0", VA = "0x1ABD2D0")]
		public void SetRayCast(bool isActive)
		{
		}

		[Token(Token = "0x6001D55")]
		[Address(RVA = "0x1ABDB50", Offset = "0x1ABDB50", VA = "0x1ABDB50")]
		public PlayerRayManager()
		{
		}
	}
	[Token(Token = "0x200074F")]
	public class PlayerRayReceiver : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000750")]
		public class HoverEvent : UnityEvent<VRHand.HandType>
		{
			[Token(Token = "0x6001D5E")]
			[Address(RVA = "0x1ABDCC0", Offset = "0x1ABDCC0", VA = "0x1ABDCC0")]
			public HoverEvent()
			{
			}
		}

		[Token(Token = "0x4002860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Object Movement on Ray")]
		[SerializeField]
		private HoverEvent onHover;

		[Token(Token = "0x4002861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private HoverEvent onHoverExit;

		[Token(Token = "0x4002862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HoverEvent onEnter;

		[Token(Token = "0x4002863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private HoverEvent onEnterUp;

		[Token(Token = "0x4002864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Collider _collider;

		[Token(Token = "0x6001D57")]
		[Address(RVA = "0x1ABDC10", Offset = "0x1ABDC10", VA = "0x1ABDC10")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D58")]
		[Address(RVA = "0x1ABDC68", Offset = "0x1ABDC68", VA = "0x1ABDC68")]
		private void Update()
		{
		}

		[Token(Token = "0x6001D59")]
		[Address(RVA = "0x1ABDA48", Offset = "0x1ABDA48", VA = "0x1ABDA48")]
		public void Hover(VRHand.HandType hand)
		{
		}

		[Token(Token = "0x6001D5A")]
		[Address(RVA = "0x1ABDAA0", Offset = "0x1ABDAA0", VA = "0x1ABDAA0")]
		public void Enter(VRHand.HandType hand)
		{
		}

		[Token(Token = "0x6001D5B")]
		[Address(RVA = "0x1ABD9F0", Offset = "0x1ABD9F0", VA = "0x1ABD9F0")]
		public void Exit(VRHand.HandType hand)
		{
		}

		[Token(Token = "0x6001D5C")]
		[Address(RVA = "0x1ABDAF8", Offset = "0x1ABDAF8", VA = "0x1ABDAF8")]
		public void EnterUp(VRHand.HandType hand)
		{
		}

		[Token(Token = "0x6001D5D")]
		[Address(RVA = "0x1ABDCB8", Offset = "0x1ABDCB8", VA = "0x1ABDCB8")]
		public PlayerRayReceiver()
		{
		}
	}
}
namespace Imacreate.GrooveFitIsland.Core.SceneChange
{
	[Token(Token = "0x2000751")]
	[RequireComponent(typeof(AudioSource))]
	public class GFSceneLoader : MonoBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x2000752")]
		[CompilerGenerated]
		private struct <GFSceneLoad>d__22 : IAsyncStateMachine
		{
			[Token(Token = "0x4002874")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002875")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4002876")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GFSceneLoader <>4__this;

			[Token(Token = "0x4002877")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool isReverseDistortion;

			[Token(Token = "0x4002878")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string nextSceneName;

			[Token(Token = "0x4002879")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private GameObject <_onLoading>5__2;

			[Token(Token = "0x400287A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Scene <currentScene>5__3;

			[Token(Token = "0x400287B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private ThreadPriority <currentPriority>5__4;

			[Token(Token = "0x400287C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private UniTask <task1>5__5;

			[Token(Token = "0x400287D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private UniTask <task2>5__6;

			[Token(Token = "0x400287E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x400287F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private Cysharp.Threading.Tasks.YieldAwaitable.Awaiter <>u__2;

			[Token(Token = "0x4002880")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private UnityAsyncExtensions.AsyncOperationAwaiter <>u__3;

			[Token(Token = "0x6001D68")]
			[Address(RVA = "0x1ABE2A8", Offset = "0x1ABE2A8", VA = "0x1ABE2A8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001D69")]
			[Address(RVA = "0x1ABF434", Offset = "0x1ABF434", VA = "0x1ABF434", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4002865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Inject]
		private InputProvider _inputProvider;

		[Token(Token = "0x4002866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private LensDistortionController ldc;

		[Token(Token = "0x4002867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject _distortionCameras;

		[Token(Token = "0x4002868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AsyncOperation _asyncLoad;

		[Token(Token = "0x4002869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Scene _loadingScene;

		[Token(Token = "0x400286A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private AudioSource _audio;

		[Token(Token = "0x400286B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private AudioClip _warpSound;

		[Token(Token = "0x400286C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioClip _diveSound;

		[Token(Token = "0x400286D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _steamOnLoadingOverlay;

		[Token(Token = "0x400286E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _questOnLoadingOverlay;

		[Token(Token = "0x400286F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject _picoOnLoadingOverlay;

		[Token(Token = "0x4002870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Material _warpSkybox;

		[NonSerialized]
		[Token(Token = "0x4002871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public readonly BoolReactiveProperty _backToGameSelect;

		[Token(Token = "0x170002EB")]
		public string _previousScene
		{
			[Token(Token = "0x6001D5F")]
			[Address(RVA = "0x1ABDD08", Offset = "0x1ABDD08", VA = "0x1ABDD08")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D60")]
			[Address(RVA = "0x1ABDD10", Offset = "0x1ABDD10", VA = "0x1ABDD10")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170002EC")]
		private string _currentScene
		{
			[Token(Token = "0x6001D61")]
			[Address(RVA = "0x1ABDD18", Offset = "0x1ABDD18", VA = "0x1ABDD18")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D62")]
			[Address(RVA = "0x1ABDD20", Offset = "0x1ABDD20", VA = "0x1ABDD20")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001D63")]
		[Address(RVA = "0x1ABDD28", Offset = "0x1ABDD28", VA = "0x1ABDD28")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D64")]
		[Address(RVA = "0x1ABDE04", Offset = "0x1ABDE04", VA = "0x1ABDE04")]
		[AsyncStateMachine(typeof(<GFSceneLoad>d__22))]
		public UniTask GFSceneLoad(string nextSceneName, bool isReverseDistortion = false)
		{
			return default(UniTask);
		}

		[Token(Token = "0x6001D65")]
		[Address(RVA = "0x1ABDF8C", Offset = "0x1ABDF8C", VA = "0x1ABDF8C")]
		private void ChangeActiveScene(Scene current, Scene next)
		{
		}

		[Token(Token = "0x6001D66")]
		[Address(RVA = "0x1ABE218", Offset = "0x1ABE218", VA = "0x1ABE218")]
		public GFSceneLoader()
		{
		}
	}
	[Token(Token = "0x2000753")]
	public class LensDistortionController : MonoBehaviour
	{
		[Token(Token = "0x2000754")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x4002886")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float _fov;

			[Token(Token = "0x4002887")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public bool _finish;

			[Token(Token = "0x4002888")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float _alpha;

			[Token(Token = "0x4002889")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public bool _alphafinish;

			[Token(Token = "0x6001D70")]
			[Address(RVA = "0x1ABF5AC", Offset = "0x1ABF5AC", VA = "0x1ABF5AC")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x6001D71")]
			[Address(RVA = "0x1ABF5B4", Offset = "0x1ABF5B4", VA = "0x1ABF5B4")]
			internal float <Distortion>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x6001D72")]
			[Address(RVA = "0x1ABF5BC", Offset = "0x1ABF5BC", VA = "0x1ABF5BC")]
			internal void <Distortion>b__1(float num)
			{
			}

			[Token(Token = "0x6001D73")]
			[Address(RVA = "0x1ABF5C4", Offset = "0x1ABF5C4", VA = "0x1ABF5C4")]
			internal void <Distortion>b__2()
			{
			}

			[Token(Token = "0x6001D74")]
			[Address(RVA = "0x1ABF5CC", Offset = "0x1ABF5CC", VA = "0x1ABF5CC")]
			internal float <Distortion>b__3()
			{
				return default(float);
			}

			[Token(Token = "0x6001D75")]
			[Address(RVA = "0x1ABF5D4", Offset = "0x1ABF5D4", VA = "0x1ABF5D4")]
			internal void <Distortion>b__4(float num)
			{
			}

			[Token(Token = "0x6001D76")]
			[Address(RVA = "0x1ABF5DC", Offset = "0x1ABF5DC", VA = "0x1ABF5DC")]
			internal void <Distortion>b__5()
			{
			}
		}

		[Token(Token = "0x2000755")]
		[CompilerGenerated]
		private sealed class <Distortion>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400288A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400288B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400288C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LensDistortionController <>4__this;

			[Token(Token = "0x400288D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private <>c__DisplayClass7_0 <>8__1;

			[Token(Token = "0x170002ED")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D7A")]
				[Address(RVA = "0x1ABFA34", Offset = "0x1ABFA34", VA = "0x1ABFA34", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002EE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D7C")]
				[Address(RVA = "0x1ABFA7C", Offset = "0x1ABFA7C", VA = "0x1ABFA7C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D77")]
			[Address(RVA = "0x1ABF4D8", Offset = "0x1ABF4D8", VA = "0x1ABF4D8")]
			[DebuggerHidden]
			public <Distortion>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6001D78")]
			[Address(RVA = "0x1ABF5E4", Offset = "0x1ABF5E4", VA = "0x1ABF5E4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D79")]
			[Address(RVA = "0x1ABF5E8", Offset = "0x1ABF5E8", VA = "0x1ABF5E8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D7B")]
			[Address(RVA = "0x1ABFA3C", Offset = "0x1ABFA3C", VA = "0x1ABFA3C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000756")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass9_0
		{
			[Token(Token = "0x400288E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float _fov;

			[Token(Token = "0x400288F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public bool _finish;

			[Token(Token = "0x4002890")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float _alpha;

			[Token(Token = "0x4002891")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public bool _alphafinish;

			[Token(Token = "0x6001D7D")]
			[Address(RVA = "0x1ABFA84", Offset = "0x1ABFA84", VA = "0x1ABFA84")]
			public <>c__DisplayClass9_0()
			{
			}

			[Token(Token = "0x6001D7E")]
			[Address(RVA = "0x1ABFA8C", Offset = "0x1ABFA8C", VA = "0x1ABFA8C")]
			internal float <ReverseDistortion>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x6001D7F")]
			[Address(RVA = "0x1ABFA94", Offset = "0x1ABFA94", VA = "0x1ABFA94")]
			internal void <ReverseDistortion>b__1(float num)
			{
			}

			[Token(Token = "0x6001D80")]
			[Address(RVA = "0x1ABFA9C", Offset = "0x1ABFA9C", VA = "0x1ABFA9C")]
			internal void <ReverseDistortion>b__2()
			{
			}

			[Token(Token = "0x6001D81")]
			[Address(RVA = "0x1ABFAA4", Offset = "0x1ABFAA4", VA = "0x1ABFAA4")]
			internal float <ReverseDistortion>b__3()
			{
				return default(float);
			}

			[Token(Token = "0x6001D82")]
			[Address(RVA = "0x1ABFAAC", Offset = "0x1ABFAAC", VA = "0x1ABFAAC")]
			internal void <ReverseDistortion>b__4(float num)
			{
			}

			[Token(Token = "0x6001D83")]
			[Address(RVA = "0x1ABFAB4", Offset = "0x1ABFAB4", VA = "0x1ABFAB4")]
			internal void <ReverseDistortion>b__5()
			{
			}
		}

		[Token(Token = "0x2000757")]
		[CompilerGenerated]
		private sealed class <ReverseDistortion>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002892")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002893")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002894")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LensDistortionController <>4__this;

			[Token(Token = "0x4002895")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private <>c__DisplayClass9_0 <>8__1;

			[Token(Token = "0x170002EF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D87")]
				[Address(RVA = "0x1ABFF0C", Offset = "0x1ABFF0C", VA = "0x1ABFF0C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002F0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D89")]
				[Address(RVA = "0x1ABFF54", Offset = "0x1ABFF54", VA = "0x1ABFF54", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D84")]
			[Address(RVA = "0x1ABF574", Offset = "0x1ABF574", VA = "0x1ABF574")]
			[DebuggerHidden]
			public <ReverseDistortion>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6001D85")]
			[Address(RVA = "0x1ABFABC", Offset = "0x1ABFABC", VA = "0x1ABFABC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D86")]
			[Address(RVA = "0x1ABFAC0", Offset = "0x1ABFAC0", VA = "0x1ABFAC0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D88")]
			[Address(RVA = "0x1ABFF14", Offset = "0x1ABFF14", VA = "0x1ABFF14", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Camera _renderCameras;

		[Token(Token = "0x4002882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Renderer _renderTextures;

		[Token(Token = "0x4002883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Camera _mainCamera;

		[Token(Token = "0x4002884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float _time;

		[Token(Token = "0x4002885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float startFieldOfView;

		[Token(Token = "0x6001D6A")]
		[Address(RVA = "0x1ABF440", Offset = "0x1ABF440", VA = "0x1ABF440")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D6B")]
		[Address(RVA = "0x1ABF39C", Offset = "0x1ABF39C", VA = "0x1ABF39C")]
		public void StartDistortion()
		{
		}

		[Token(Token = "0x6001D6C")]
		[Address(RVA = "0x1ABF464", Offset = "0x1ABF464", VA = "0x1ABF464")]
		[IteratorStateMachine(typeof(<Distortion>d__7))]
		private IEnumerator Distortion()
		{
			return null;
		}

		[Token(Token = "0x6001D6D")]
		[Address(RVA = "0x1ABF3E8", Offset = "0x1ABF3E8", VA = "0x1ABF3E8")]
		public void StartReverseDistortion()
		{
		}

		[Token(Token = "0x6001D6E")]
		[Address(RVA = "0x1ABF500", Offset = "0x1ABF500", VA = "0x1ABF500")]
		[IteratorStateMachine(typeof(<ReverseDistortion>d__9))]
		private IEnumerator ReverseDistortion()
		{
			return null;
		}

		[Token(Token = "0x6001D6F")]
		[Address(RVA = "0x1ABF59C", Offset = "0x1ABF59C", VA = "0x1ABF59C")]
		public LensDistortionController()
		{
		}
	}
	[Token(Token = "0x2000758")]
	public class PicoLoadingImageChanger : MonoBehaviour
	{
		[Token(Token = "0x4002896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PXR_OverLay _pxrOverLay;

		[Token(Token = "0x4002897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Texture[] textures;

		[Token(Token = "0x4002898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float intervalSec;

		[Token(Token = "0x4002899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int count;

		[Token(Token = "0x6001D8A")]
		[Address(RVA = "0x1ABFF5C", Offset = "0x1ABFF5C", VA = "0x1ABFF5C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D8B")]
		[Address(RVA = "0x1AC00AC", Offset = "0x1AC00AC", VA = "0x1AC00AC")]
		public PicoLoadingImageChanger()
		{
		}
	}
	[Token(Token = "0x2000759")]
	public class QuestLoadingImageChanger : MonoBehaviour
	{
		[Token(Token = "0x400289A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVROverlay _overlay;

		[Token(Token = "0x400289B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Texture[] textures;

		[Token(Token = "0x400289C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float intervalSec;

		[Token(Token = "0x400289D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int count;

		[Token(Token = "0x6001D8D")]
		[Address(RVA = "0x1AC01C0", Offset = "0x1AC01C0", VA = "0x1AC01C0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D8E")]
		[Address(RVA = "0x1AC0310", Offset = "0x1AC0310", VA = "0x1AC0310")]
		public QuestLoadingImageChanger()
		{
		}
	}
	[Token(Token = "0x200075A")]
	public class SteamLoadingImageChanger : MonoBehaviour
	{
		[Token(Token = "0x400289E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Renderer _renderer;

		[Token(Token = "0x400289F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Texture[] _textures;

		[Token(Token = "0x40028A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float intervalSec;

		[Token(Token = "0x40028A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int count;

		[Token(Token = "0x6001D90")]
		[Address(RVA = "0x1AC046C", Offset = "0x1AC046C", VA = "0x1AC046C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D91")]
		[Address(RVA = "0x1AC05BC", Offset = "0x1AC05BC", VA = "0x1AC05BC")]
		public SteamLoadingImageChanger()
		{
		}
	}
}
namespace Imacreate.GrooveFitIsland.Core.PlayerLocomotion
{
	[Token(Token = "0x200075B")]
	public class GFILocomotionTeleport : MonoBehaviour
	{
		[Token(Token = "0x200075C")]
		public enum States
		{
			[Token(Token = "0x40028BD")]
			Ready,
			[Token(Token = "0x40028BE")]
			Aim,
			[Token(Token = "0x40028BF")]
			CancelAim,
			[Token(Token = "0x40028C0")]
			PreTeleport,
			[Token(Token = "0x40028C1")]
			CancelTeleport,
			[Token(Token = "0x40028C2")]
			Teleporting,
			[Token(Token = "0x40028C3")]
			PostTeleport
		}

		[Token(Token = "0x200075D")]
		public enum TeleportIntentions
		{
			[Token(Token = "0x40028C5")]
			None,
			[Token(Token = "0x40028C6")]
			Aim,
			[Token(Token = "0x40028C7")]
			PreTeleport,
			[Token(Token = "0x40028C8")]
			Teleport
		}

		[Token(Token = "0x200075E")]
		public enum AimCollisionTypes
		{
			[Token(Token = "0x40028CA")]
			Point,
			[Token(Token = "0x40028CB")]
			Sphere,
			[Token(Token = "0x40028CC")]
			Capsule
		}

		[Token(Token = "0x200075F")]
		public class AimData
		{
			[Token(Token = "0x40028CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RaycastHit TargetHitInfo;

			[Token(Token = "0x40028CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public bool TargetValid;

			[Token(Token = "0x40028CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Vector3? Destination;

			[Token(Token = "0x40028D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public float Radius;

			[Token(Token = "0x170002F4")]
			public List<Vector3> Points
			{
				[Token(Token = "0x6001DC6")]
				[Address(RVA = "0x1AC241C", Offset = "0x1AC241C", VA = "0x1AC241C")]
				[CompilerGenerated]
				get
				{
					return null;
				}
				[Token(Token = "0x6001DC7")]
				[Address(RVA = "0x1AC2424", Offset = "0x1AC2424", VA = "0x1AC2424")]
				[CompilerGenerated]
				private set
				{
				}
			}

			[Token(Token = "0x6001DC5")]
			[Address(RVA = "0x1AC2394", Offset = "0x1AC2394", VA = "0x1AC2394")]
			public AimData()
			{
			}

			[Token(Token = "0x6001DC8")]
			[Address(RVA = "0x1AC242C", Offset = "0x1AC242C", VA = "0x1AC242C")]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x2000760")]
		[CompilerGenerated]
		private sealed class <ReadyStateCoroutine>d__41 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40028D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40028D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40028D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GFILocomotionTeleport <>4__this;

			[Token(Token = "0x170002F5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DCC")]
				[Address(RVA = "0x1AC2584", Offset = "0x1AC2584", VA = "0x1AC2584", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002F6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DCE")]
				[Address(RVA = "0x1AC25CC", Offset = "0x1AC25CC", VA = "0x1AC25CC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DC9")]
			[Address(RVA = "0x1AC0F64", Offset = "0x1AC0F64", VA = "0x1AC0F64")]
			[DebuggerHidden]
			public <ReadyStateCoroutine>d__41(int <>1__state)
			{
			}

			[Token(Token = "0x6001DCA")]
			[Address(RVA = "0x1AC2484", Offset = "0x1AC2484", VA = "0x1AC2484", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DCB")]
			[Address(RVA = "0x1AC2488", Offset = "0x1AC2488", VA = "0x1AC2488", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DCD")]
			[Address(RVA = "0x1AC258C", Offset = "0x1AC258C", VA = "0x1AC258C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000761")]
		[CompilerGenerated]
		private sealed class <AimStateCoroutine>d__53 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40028D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40028D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40028D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GFILocomotionTeleport <>4__this;

			[Token(Token = "0x170002F7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DD2")]
				[Address(RVA = "0x1AC2720", Offset = "0x1AC2720", VA = "0x1AC2720", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002F8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DD4")]
				[Address(RVA = "0x1AC2768", Offset = "0x1AC2768", VA = "0x1AC2768", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DCF")]
			[Address(RVA = "0x1AC13EC", Offset = "0x1AC13EC", VA = "0x1AC13EC")]
			[DebuggerHidden]
			public <AimStateCoroutine>d__53(int <>1__state)
			{
			}

			[Token(Token = "0x6001DD0")]
			[Address(RVA = "0x1AC25D4", Offset = "0x1AC25D4", VA = "0x1AC25D4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DD1")]
			[Address(RVA = "0x1AC25D8", Offset = "0x1AC25D8", VA = "0x1AC25D8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DD3")]
			[Address(RVA = "0x1AC2728", Offset = "0x1AC2728", VA = "0x1AC2728", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000762")]
		[CompilerGenerated]
		private sealed class <CancelAimStateCoroutine>d__57 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40028D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40028D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40028DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GFILocomotionTeleport <>4__this;

			[Token(Token = "0x170002F9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DD8")]
				[Address(RVA = "0x1AC2820", Offset = "0x1AC2820", VA = "0x1AC2820", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002FA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DDA")]
				[Address(RVA = "0x1AC2868", Offset = "0x1AC2868", VA = "0x1AC2868", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DD5")]
			[Address(RVA = "0x1AC15C0", Offset = "0x1AC15C0", VA = "0x1AC15C0")]
			[DebuggerHidden]
			public <CancelAimStateCoroutine>d__57(int <>1__state)
			{
			}

			[Token(Token = "0x6001DD6")]
			[Address(RVA = "0x1AC2770", Offset = "0x1AC2770", VA = "0x1AC2770", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DD7")]
			[Address(RVA = "0x1AC2774", Offset = "0x1AC2774", VA = "0x1AC2774", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DD9")]
			[Address(RVA = "0x1AC2828", Offset = "0x1AC2828", VA = "0x1AC2828", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000763")]
		[CompilerGenerated]
		private sealed class <PreTeleportStateCoroutine>d__61 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40028DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40028DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40028DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GFILocomotionTeleport <>4__this;

			[Token(Token = "0x170002FB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DDE")]
				[Address(RVA = "0x1AC2948", Offset = "0x1AC2948", VA = "0x1AC2948", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002FC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DE0")]
				[Address(RVA = "0x1AC2990", Offset = "0x1AC2990", VA = "0x1AC2990", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DDB")]
			[Address(RVA = "0x1AC1794", Offset = "0x1AC1794", VA = "0x1AC1794")]
			[DebuggerHidden]
			public <PreTeleportStateCoroutine>d__61(int <>1__state)
			{
			}

			[Token(Token = "0x6001DDC")]
			[Address(RVA = "0x1AC2870", Offset = "0x1AC2870", VA = "0x1AC2870", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DDD")]
			[Address(RVA = "0x1AC2874", Offset = "0x1AC2874", VA = "0x1AC2874", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DDF")]
			[Address(RVA = "0x1AC2950", Offset = "0x1AC2950", VA = "0x1AC2950", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000764")]
		[CompilerGenerated]
		private sealed class <CancelTeleportStateCoroutine>d__65 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40028DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40028DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40028E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GFILocomotionTeleport <>4__this;

			[Token(Token = "0x170002FD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DE4")]
				[Address(RVA = "0x1AC2A48", Offset = "0x1AC2A48", VA = "0x1AC2A48", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002FE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DE6")]
				[Address(RVA = "0x1AC2A90", Offset = "0x1AC2A90", VA = "0x1AC2A90", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DE1")]
			[Address(RVA = "0x1AC1968", Offset = "0x1AC1968", VA = "0x1AC1968")]
			[DebuggerHidden]
			public <CancelTeleportStateCoroutine>d__65(int <>1__state)
			{
			}

			[Token(Token = "0x6001DE2")]
			[Address(RVA = "0x1AC2998", Offset = "0x1AC2998", VA = "0x1AC2998", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DE3")]
			[Address(RVA = "0x1AC299C", Offset = "0x1AC299C", VA = "0x1AC299C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DE5")]
			[Address(RVA = "0x1AC2A50", Offset = "0x1AC2A50", VA = "0x1AC2A50", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000765")]
		[CompilerGenerated]
		private sealed class <TeleportingStateCoroutine>d__69 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40028E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40028E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40028E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GFILocomotionTeleport <>4__this;

			[Token(Token = "0x170002FF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DEA")]
				[Address(RVA = "0x1AC2B6C", Offset = "0x1AC2B6C", VA = "0x1AC2B6C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000300")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DEC")]
				[Address(RVA = "0x1AC2BB4", Offset = "0x1AC2BB4", VA = "0x1AC2BB4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DE7")]
			[Address(RVA = "0x1AC1B3C", Offset = "0x1AC1B3C", VA = "0x1AC1B3C")]
			[DebuggerHidden]
			public <TeleportingStateCoroutine>d__69(int <>1__state)
			{
			}

			[Token(Token = "0x6001DE8")]
			[Address(RVA = "0x1AC2A98", Offset = "0x1AC2A98", VA = "0x1AC2A98", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DE9")]
			[Address(RVA = "0x1AC2A9C", Offset = "0x1AC2A9C", VA = "0x1AC2A9C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DEB")]
			[Address(RVA = "0x1AC2B74", Offset = "0x1AC2B74", VA = "0x1AC2B74", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000766")]
		[CompilerGenerated]
		private sealed class <PostTeleportStateCoroutine>d__73 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40028E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40028E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40028E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GFILocomotionTeleport <>4__this;

			[Token(Token = "0x17000301")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DF0")]
				[Address(RVA = "0x1AC2CAC", Offset = "0x1AC2CAC", VA = "0x1AC2CAC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000302")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DF2")]
				[Address(RVA = "0x1AC2CF4", Offset = "0x1AC2CF4", VA = "0x1AC2CF4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DED")]
			[Address(RVA = "0x1AC1D10", Offset = "0x1AC1D10", VA = "0x1AC1D10")]
			[DebuggerHidden]
			public <PostTeleportStateCoroutine>d__73(int <>1__state)
			{
			}

			[Token(Token = "0x6001DEE")]
			[Address(RVA = "0x1AC2BBC", Offset = "0x1AC2BBC", VA = "0x1AC2BBC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DEF")]
			[Address(RVA = "0x1AC2BC0", Offset = "0x1AC2BC0", VA = "0x1AC2BC0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DF1")]
			[Address(RVA = "0x1AC2CB4", Offset = "0x1AC2CB4", VA = "0x1AC2CB4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[NonSerialized]
		[Token(Token = "0x40028A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GFITeleportAimHandler AimHandler;

		[Token(Token = "0x40028A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Tooltip("This prefab will be instantiated as needed and updated to match the current aim target.")]
		public GFITeleportDestination TeleportDestinationPrefab;

		[Token(Token = "0x40028A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Tooltip("TeleportDestinationPrefab will be instantiated into this layer.")]
		public int TeleportDestinationLayer;

		[NonSerialized]
		[Token(Token = "0x40028A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GFITeleportInputHandler InputHandler;

		[NonSerialized]
		[Token(Token = "0x40028A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public TeleportIntentions CurrentIntention;

		[NonSerialized]
		[Token(Token = "0x40028A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool IsPreTeleportRequested;

		[NonSerialized]
		[Token(Token = "0x40028AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		public bool IsTransitioning;

		[NonSerialized]
		[Token(Token = "0x40028AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
		public bool IsPostTeleportRequested;

		[Token(Token = "0x40028AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GFITeleportDestination _teleportDestination;

		[Token(Token = "0x40028AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("When aiming at possible destinations, the aim collision type determines which shape to use for collision tests.")]
		public AimCollisionTypes AimCollisionType;

		[Token(Token = "0x40028AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[Tooltip("Use the character collision radius/height/skinwidth for sphere/capsule collision tests.")]
		public bool UseCharacterCollisionData;

		[Token(Token = "0x40028B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Tooltip("Radius of the sphere or capsule used for collision testing when aiming to possible teleport destinations. Ignored if UseCharacterCollisionData is true.")]
		public float AimCollisionRadius;

		[Token(Token = "0x40028B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[Tooltip("Height of the capsule used for collision testing when aiming to possible teleport destinations. Ignored if UseCharacterCollisionData is true.")]
		public float AimCollisionHeight;

		[Token(Token = "0x170002F1")]
		public States CurrentState
		{
			[Token(Token = "0x6001D93")]
			[Address(RVA = "0x1AC0648", Offset = "0x1AC0648", VA = "0x1AC0648")]
			[CompilerGenerated]
			get
			{
				return default(States);
			}
			[Token(Token = "0x6001D94")]
			[Address(RVA = "0x1AC0650", Offset = "0x1AC0650", VA = "0x1AC0650")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170002F2")]
		public Quaternion DestinationRotation
		{
			[Token(Token = "0x6001D98")]
			[Address(RVA = "0x1AC0820", Offset = "0x1AC0820", VA = "0x1AC0820")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x170002F3")]
		public CharacterController characterController
		{
			[Token(Token = "0x6001D99")]
			[Address(RVA = "0x1AC0844", Offset = "0x1AC0844", VA = "0x1AC0844")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D9A")]
			[Address(RVA = "0x1AC084C", Offset = "0x1AC084C", VA = "0x1AC084C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x14000015")]
		public event Action<bool, Vector3?, Quaternion?, Quaternion?> UpdateTeleportDestination
		{
			[Token(Token = "0x6001D95")]
			[Address(RVA = "0x1AC0658", Offset = "0x1AC0658", VA = "0x1AC0658")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001D96")]
			[Address(RVA = "0x1AC0708", Offset = "0x1AC0708", VA = "0x1AC0708")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000016")]
		public event Action EnterStateReady
		{
			[Token(Token = "0x6001DA3")]
			[Address(RVA = "0x1AC0E2C", Offset = "0x1AC0E2C", VA = "0x1AC0E2C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001DA4")]
			[Address(RVA = "0x1AC0EC8", Offset = "0x1AC0EC8", VA = "0x1AC0EC8")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000017")]
		public event Action EnterStateAim
		{
			[Token(Token = "0x6001DA6")]
			[Address(RVA = "0x1AC0F8C", Offset = "0x1AC0F8C", VA = "0x1AC0F8C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001DA7")]
			[Address(RVA = "0x1AC1028", Offset = "0x1AC1028", VA = "0x1AC1028")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000018")]
		public event Action<AimData> UpdateAimData
		{
			[Token(Token = "0x6001DA8")]
			[Address(RVA = "0x1AC10C4", Offset = "0x1AC10C4", VA = "0x1AC10C4")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001DA9")]
			[Address(RVA = "0x1AC1174", Offset = "0x1AC1174", VA = "0x1AC1174")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000019")]
		public event Action ExitStateAim
		{
			[Token(Token = "0x6001DAB")]
			[Address(RVA = "0x1AC1240", Offset = "0x1AC1240", VA = "0x1AC1240")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001DAC")]
			[Address(RVA = "0x1AC12DC", Offset = "0x1AC12DC", VA = "0x1AC12DC")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400001A")]
		public event Action EnterStateCancelAim
		{
			[Token(Token = "0x6001DAE")]
			[Address(RVA = "0x1AC1414", Offset = "0x1AC1414", VA = "0x1AC1414")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001DAF")]
			[Address(RVA = "0x1AC14B0", Offset = "0x1AC14B0", VA = "0x1AC14B0")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400001B")]
		public event Action EnterStatePreTeleport
		{
			[Token(Token = "0x6001DB1")]
			[Address(RVA = "0x1AC15E8", Offset = "0x1AC15E8", VA = "0x1AC15E8")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001DB2")]
			[Address(RVA = "0x1AC1684", Offset = "0x1AC1684", VA = "0x1AC1684")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400001C")]
		public event Action EnterStateCancelTeleport
		{
			[Token(Token = "0x6001DB4")]
			[Address(RVA = "0x1AC17BC", Offset = "0x1AC17BC", VA = "0x1AC17BC")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001DB5")]
			[Address(RVA = "0x1AC1858", Offset = "0x1AC1858", VA = "0x1AC1858")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400001D")]
		public event Action EnterStateTeleporting
		{
			[Token(Token = "0x6001DB7")]
			[Address(RVA = "0x1AC1990", Offset = "0x1AC1990", VA = "0x1AC1990")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001DB8")]
			[Address(RVA = "0x1AC1A2C", Offset = "0x1AC1A2C", VA = "0x1AC1A2C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400001E")]
		public event Action EnterStatePostTeleport
		{
			[Token(Token = "0x6001DBA")]
			[Address(RVA = "0x1AC1B64", Offset = "0x1AC1B64", VA = "0x1AC1B64")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001DBB")]
			[Address(RVA = "0x1AC1C00", Offset = "0x1AC1C00", VA = "0x1AC1C00")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400001F")]
		public event Action<Transform, Vector3, Quaternion> Teleported
		{
			[Token(Token = "0x6001DBD")]
			[Address(RVA = "0x1AC1D38", Offset = "0x1AC1D38", VA = "0x1AC1D38")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001DBE")]
			[Address(RVA = "0x1AC1DE8", Offset = "0x1AC1DE8", VA = "0x1AC1DE8")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001D97")]
		[Address(RVA = "0x1AC07B8", Offset = "0x1AC07B8", VA = "0x1AC07B8")]
		public void OnUpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
		{
		}

		[Token(Token = "0x6001D9B")]
		[Address(RVA = "0x1AC0854", Offset = "0x1AC0854", VA = "0x1AC0854")]
		public bool AimCollisionTest(Vector3 start, Vector3 end, LayerMask aimCollisionLayerMask, out RaycastHit hitInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D9C")]
		[Address(RVA = "0x1AC0B08", Offset = "0x1AC0B08", VA = "0x1AC0B08")]
		[Conditional("DEBUG_TELEPORT_STATES")]
		protected void LogState(string msg)
		{
		}

		[Token(Token = "0x6001D9D")]
		[Address(RVA = "0x1AC0BB0", Offset = "0x1AC0BB0", VA = "0x1AC0BB0")]
		protected void CreateNewTeleportDestination()
		{
		}

		[Token(Token = "0x6001D9E")]
		[Address(RVA = "0x1AC0C9C", Offset = "0x1AC0C9C", VA = "0x1AC0C9C")]
		private void DeactivateDestination()
		{
		}

		[Token(Token = "0x6001D9F")]
		[Address(RVA = "0x1AC0CD8", Offset = "0x1AC0CD8", VA = "0x1AC0CD8")]
		public void RecycleTeleportDestination(GFITeleportDestination oldDestination)
		{
		}

		[Token(Token = "0x6001DA0")]
		[Address(RVA = "0x1AC0D88", Offset = "0x1AC0D88", VA = "0x1AC0D88")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001DA1")]
		[Address(RVA = "0x1AC0D8C", Offset = "0x1AC0D8C", VA = "0x1AC0D8C")]
		public void StartTeleport()
		{
		}

		[Token(Token = "0x6001DA2")]
		[Address(RVA = "0x1AC0E24", Offset = "0x1AC0E24", VA = "0x1AC0E24")]
		public void StopTeleport()
		{
		}

		[Token(Token = "0x6001DA5")]
		[Address(RVA = "0x1AC0DB0", Offset = "0x1AC0DB0", VA = "0x1AC0DB0")]
		[IteratorStateMachine(typeof(<ReadyStateCoroutine>d__41))]
		protected IEnumerator ReadyStateCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6001DAA")]
		[Address(RVA = "0x1AC1224", Offset = "0x1AC1224", VA = "0x1AC1224")]
		public void OnUpdateAimData(AimData aimData)
		{
		}

		[Token(Token = "0x6001DAD")]
		[Address(RVA = "0x1AC1378", Offset = "0x1AC1378", VA = "0x1AC1378")]
		[IteratorStateMachine(typeof(<AimStateCoroutine>d__53))]
		protected IEnumerator AimStateCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6001DB0")]
		[Address(RVA = "0x1AC154C", Offset = "0x1AC154C", VA = "0x1AC154C")]
		[IteratorStateMachine(typeof(<CancelAimStateCoroutine>d__57))]
		protected IEnumerator CancelAimStateCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6001DB3")]
		[Address(RVA = "0x1AC1720", Offset = "0x1AC1720", VA = "0x1AC1720")]
		[IteratorStateMachine(typeof(<PreTeleportStateCoroutine>d__61))]
		protected IEnumerator PreTeleportStateCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6001DB6")]
		[Address(RVA = "0x1AC18F4", Offset = "0x1AC18F4", VA = "0x1AC18F4")]
		[IteratorStateMachine(typeof(<CancelTeleportStateCoroutine>d__65))]
		protected IEnumerator CancelTeleportStateCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6001DB9")]
		[Address(RVA = "0x1AC1AC8", Offset = "0x1AC1AC8", VA = "0x1AC1AC8")]
		[IteratorStateMachine(typeof(<TeleportingStateCoroutine>d__69))]
		protected IEnumerator TeleportingStateCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6001DBC")]
		[Address(RVA = "0x1AC1C9C", Offset = "0x1AC1C9C", VA = "0x1AC1C9C")]
		[IteratorStateMachine(typeof(<PostTeleportStateCoroutine>d__73))]
		protected IEnumerator PostTeleportStateCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6001DBF")]
		[Address(RVA = "0x1AC1E98", Offset = "0x1AC1E98", VA = "0x1AC1E98")]
		public void DoTeleport()
		{
		}

		[Token(Token = "0x6001DC0")]
		[Address(RVA = "0x1AC1F8C", Offset = "0x1AC1F8C", VA = "0x1AC1F8C")]
		private void ResetOrientation()
		{
		}

		[Token(Token = "0x6001DC1")]
		[Address(RVA = "0x1AC2170", Offset = "0x1AC2170", VA = "0x1AC2170")]
		public Vector3 GetCharacterPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001DC2")]
		[Address(RVA = "0x1AC2198", Offset = "0x1AC2198", VA = "0x1AC2198")]
		public Quaternion GetHeadRotationY()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001DC3")]
		[Address(RVA = "0x1AC22D4", Offset = "0x1AC22D4", VA = "0x1AC22D4")]
		public void DoWarp(Vector3 startPos, float positionPercent)
		{
		}

		[Token(Token = "0x6001DC4")]
		[Address(RVA = "0x1AC238C", Offset = "0x1AC238C", VA = "0x1AC238C")]
		public GFILocomotionTeleport()
		{
		}
	}
	[Token(Token = "0x2000767")]
	public class GFIPlayerLocomotionController : SingletonMonoBehaviour<GFIPlayerLocomotionController>
	{
		[Token(Token = "0x2000768")]
		public enum LocomotionType
		{
			[Token(Token = "0x400290E")]
			Smooth,
			[Token(Token = "0x400290F")]
			Teleport
		}

		[Token(Token = "0x40028E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Inject]
		private InputProvider _inputProvider;

		[Token(Token = "0x40028E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("General")]
		[SerializeField]
		private GFILocomotionTeleport _gfiLocomotionTeleport;

		[Token(Token = "0x40028E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool isDebug;

		[Token(Token = "0x40028EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public LocomotionType locomotionType;

		[Token(Token = "0x40028EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly ReactiveProperty<LocomotionType> locomotionTypeReactiveProperty;

		[Token(Token = "0x40028EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly BoolReactiveProperty isGroundedReactiveProperty;

		[Token(Token = "0x40028ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Header("Smooth")]
		public float Acceleration;

		[Token(Token = "0x40028EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float Damping;

		[Token(Token = "0x40028EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float BackAndSideDampen;

		[Token(Token = "0x40028F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float JumpForce;

		[Token(Token = "0x40028F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float RotationAmount;

		[Token(Token = "0x40028F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float RotationRatchet;

		[Token(Token = "0x40028F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The player will rotate in fixed steps if Snap Rotation is enabled.")]
		public bool SnapRotation;

		[Token(Token = "0x40028F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		[Tooltip("[Deprecated] When enabled, snap rotation will happen about the center of the guardian rather than the center of the player/camera viewpoint. This (legacy) option should be left off except for edge cases that require extreme behavioral backwards compatibility.")]
		public bool RotateAroundGuardianCenter;

		[Token(Token = "0x40028F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[Tooltip("How many fixed speeds to use with linear movement? 0=linear control")]
		public int FixedSpeedSteps;

		[Token(Token = "0x40028F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool HmdRotatesY;

		[Token(Token = "0x40028F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float GravityModifier;

		[NonSerialized]
		[Token(Token = "0x40028F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool Teleported;

		[Token(Token = "0x40028FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool EnableLinearMovement;

		[Token(Token = "0x40028FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		public bool EnableRotation;

		[Token(Token = "0x40028FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private CharacterController Controller;

		[Token(Token = "0x40028FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float MoveScale;

		[Token(Token = "0x4002900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Vector3 MoveThrottle;

		[Token(Token = "0x4002901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private float FallSpeed;

		[Token(Token = "0x4002903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float MoveScaleMultiplier;

		[Token(Token = "0x4002904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private float RotationScaleMultiplier;

		[Token(Token = "0x4002905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private bool SkipMouseRotation;

		[Token(Token = "0x4002906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
		private bool HaltUpdateMovement;

		[Token(Token = "0x4002907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private readonly float SimulationRate;

		[Token(Token = "0x4002908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool ReadyToSnapTurn;

		[Token(Token = "0x4002909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[Header("Teleport")]
		public float JumpHeight;

		[Token(Token = "0x400290A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public float JumpDuration;

		[Token(Token = "0x400290B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private bool isJumpingTeleportMode;

		[Token(Token = "0x400290C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
		private bool _dontDestroyOnLoad;

		[Token(Token = "0x17000303")]
		protected override bool dontDestroyOnLoad
		{
			[Token(Token = "0x6001DF3")]
			[Address(RVA = "0x1AC2CFC", Offset = "0x1AC2CFC", VA = "0x1AC2CFC", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000304")]
		public IReadOnlyReactiveProperty<bool> IsGroundedReactiveProperty
		{
			[Token(Token = "0x6001DF4")]
			[Address(RVA = "0x1AC2D04", Offset = "0x1AC2D04", VA = "0x1AC2D04")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000305")]
		private float InitialYRotation
		{
			[Token(Token = "0x6001DFF")]
			[Address(RVA = "0x1AC3E78", Offset = "0x1AC3E78", VA = "0x1AC3E78")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001E00")]
			[Address(RVA = "0x1AC3E80", Offset = "0x1AC3E80", VA = "0x1AC3E80")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x14000020")]
		public event Action<Transform> TransformUpdated
		{
			[Token(Token = "0x6001DF9")]
			[Address(RVA = "0x1AC3AA8", Offset = "0x1AC3AA8", VA = "0x1AC3AA8")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001DFA")]
			[Address(RVA = "0x1AC3B58", Offset = "0x1AC3B58", VA = "0x1AC3B58")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000021")]
		public event Action CameraUpdated
		{
			[Token(Token = "0x6001DFB")]
			[Address(RVA = "0x1AC3C08", Offset = "0x1AC3C08", VA = "0x1AC3C08")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001DFC")]
			[Address(RVA = "0x1AC3CA4", Offset = "0x1AC3CA4", VA = "0x1AC3CA4")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000022")]
		public event Action PreCharacterMove
		{
			[Token(Token = "0x6001DFD")]
			[Address(RVA = "0x1AC3D40", Offset = "0x1AC3D40", VA = "0x1AC3D40")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001DFE")]
			[Address(RVA = "0x1AC3DDC", Offset = "0x1AC3DDC", VA = "0x1AC3DDC")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001DF5")]
		[Address(RVA = "0x1AC2D0C", Offset = "0x1AC2D0C", VA = "0x1AC2D0C", Slot = "5")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001DF6")]
		[Address(RVA = "0x1AC3178", Offset = "0x1AC3178", VA = "0x1AC3178")]
		private void Update()
		{
		}

		[Token(Token = "0x6001DF7")]
		[Address(RVA = "0x1AC39A0", Offset = "0x1AC39A0", VA = "0x1AC39A0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001DF8")]
		[Address(RVA = "0x1AC349C", Offset = "0x1AC349C", VA = "0x1AC349C")]
		private void DoSnapRotation()
		{
		}

		[Token(Token = "0x6001E01")]
		[Address(RVA = "0x1AC3E88", Offset = "0x1AC3E88", VA = "0x1AC3E88", Slot = "6")]
		protected virtual void UpdateController()
		{
		}

		[Token(Token = "0x6001E02")]
		[Address(RVA = "0x1AC4384", Offset = "0x1AC4384", VA = "0x1AC4384", Slot = "7")]
		public virtual void UpdateMovement()
		{
		}

		[Token(Token = "0x6001E03")]
		[Address(RVA = "0x1AC3298", Offset = "0x1AC3298", VA = "0x1AC3298")]
		public void UpdateTransform()
		{
		}

		[Token(Token = "0x6001E04")]
		[Address(RVA = "0x1AC377C", Offset = "0x1AC377C", VA = "0x1AC377C")]
		public bool Jump()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E05")]
		[Address(RVA = "0x1AC4C68", Offset = "0x1AC4C68", VA = "0x1AC4C68")]
		public void Stop()
		{
		}

		[Token(Token = "0x6001E06")]
		[Address(RVA = "0x1AC4D0C", Offset = "0x1AC4D0C", VA = "0x1AC4D0C")]
		public void GetMoveScaleMultiplier(ref float moveScaleMultiplier)
		{
		}

		[Token(Token = "0x6001E07")]
		[Address(RVA = "0x1AC4D18", Offset = "0x1AC4D18", VA = "0x1AC4D18")]
		public void SetMoveScaleMultiplier(float moveScaleMultiplier)
		{
		}

		[Token(Token = "0x6001E08")]
		[Address(RVA = "0x1AC4D20", Offset = "0x1AC4D20", VA = "0x1AC4D20")]
		public void GetRotationScaleMultiplier(ref float rotationScaleMultiplier)
		{
		}

		[Token(Token = "0x6001E09")]
		[Address(RVA = "0x1AC4D2C", Offset = "0x1AC4D2C", VA = "0x1AC4D2C")]
		public void SetRotationScaleMultiplier(float rotationScaleMultiplier)
		{
		}

		[Token(Token = "0x6001E0A")]
		[Address(RVA = "0x1AC4D34", Offset = "0x1AC4D34", VA = "0x1AC4D34")]
		public void GetSkipMouseRotation(ref bool skipMouseRotation)
		{
		}

		[Token(Token = "0x6001E0B")]
		[Address(RVA = "0x1AC4D40", Offset = "0x1AC4D40", VA = "0x1AC4D40")]
		public void SetSkipMouseRotation(bool skipMouseRotation)
		{
		}

		[Token(Token = "0x6001E0C")]
		[Address(RVA = "0x1AC4D4C", Offset = "0x1AC4D4C", VA = "0x1AC4D4C")]
		public void GetHaltUpdateMovement(ref bool haltUpdateMovement)
		{
		}

		[Token(Token = "0x6001E0D")]
		[Address(RVA = "0x1AC4D58", Offset = "0x1AC4D58", VA = "0x1AC4D58")]
		public void SetHaltUpdateMovement(bool haltUpdateMovement)
		{
		}

		[Token(Token = "0x6001E0E")]
		[Address(RVA = "0x1AC3844", Offset = "0x1AC3844", VA = "0x1AC3844")]
		private void JumpTeleportMode()
		{
		}

		[Token(Token = "0x6001E0F")]
		[Address(RVA = "0x1AC4D64", Offset = "0x1AC4D64", VA = "0x1AC4D64")]
		public GFIPlayerLocomotionController()
		{
		}
	}
	[Token(Token = "0x200076A")]
	public abstract class GFITeleportAimHandler : GFITeleportSupport
	{
		[Token(Token = "0x6001E16")]
		[Address(RVA = "0x1AC50AC", Offset = "0x1AC50AC", VA = "0x1AC50AC", Slot = "4")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001E17")]
		[Address(RVA = "0x1AC513C", Offset = "0x1AC513C", VA = "0x1AC513C", Slot = "5")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6001E18")]
		public abstract void GetPoints(List<Vector3> points);

		[Token(Token = "0x6001E19")]
		[Address(RVA = "0x1AC520C", Offset = "0x1AC520C", VA = "0x1AC520C")]
		protected GFITeleportAimHandler()
		{
		}
	}
	[Token(Token = "0x200076B")]
	public class GFITeleportAimHandlerLaser : GFITeleportAimHandler
	{
		[Token(Token = "0x4002912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Tooltip("Maximum range for aiming.")]
		public float Range;

		[Token(Token = "0x6001E1A")]
		[Address(RVA = "0x1AC521C", Offset = "0x1AC521C", VA = "0x1AC521C", Slot = "8")]
		public override void GetPoints(List<Vector3> points)
		{
		}

		[Token(Token = "0x6001E1B")]
		[Address(RVA = "0x1AC53AC", Offset = "0x1AC53AC", VA = "0x1AC53AC")]
		public GFITeleportAimHandlerLaser()
		{
		}
	}
	[Token(Token = "0x200076C")]
	public class GFITeleportAimHandlerParabolic : GFITeleportAimHandler
	{
		[Token(Token = "0x4002913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Tooltip("Maximum range for aiming.")]
		public float Range;

		[Token(Token = "0x4002914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Tooltip("The MinimumElevation is relative to the AimPosition.")]
		public float MinimumElevation;

		[Token(Token = "0x4002915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[Tooltip("The Gravity is used in conjunction with AimVelocity and the aim direction to simulate a projectile.")]
		public float Gravity;

		[Token(Token = "0x4002916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Tooltip("The AimVelocity is the initial speed of the faked projectile.")]
		[Range(0.001f, 50f)]
		public float AimVelocity;

		[Token(Token = "0x4002917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[Tooltip("The AimStep is the how much to subdivide the iteration.")]
		[Range(0.001f, 1f)]
		public float AimStep;

		[Token(Token = "0x6001E1C")]
		[Address(RVA = "0x1AC53BC", Offset = "0x1AC53BC", VA = "0x1AC53BC", Slot = "8")]
		public override void GetPoints(List<Vector3> points)
		{
		}

		[Token(Token = "0x6001E1D")]
		[Address(RVA = "0x1AC5590", Offset = "0x1AC5590", VA = "0x1AC5590")]
		public GFITeleportAimHandlerParabolic()
		{
		}
	}
	[Token(Token = "0x200076D")]
	public class GFITeleportAimVisualLaser : GFITeleportSupport
	{
		[Token(Token = "0x4002918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Tooltip("This prefab will be instantiated when the aim visual is awakened, and will be set active when the user is aiming, and deactivated when they are done aiming.")]
		public LineRenderer LaserPrefab;

		[Token(Token = "0x4002919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly Action _enterAimStateAction;

		[Token(Token = "0x400291A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly Action _exitAimStateAction;

		[Token(Token = "0x400291B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly Action<GFILocomotionTeleport.AimData> _updateAimDataAction;

		[Token(Token = "0x400291C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private LineRenderer _lineRenderer;

		[Token(Token = "0x400291D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3[] _linePoints;

		[Token(Token = "0x6001E1E")]
		[Address(RVA = "0x1AC55A4", Offset = "0x1AC55A4", VA = "0x1AC55A4")]
		public GFITeleportAimVisualLaser()
		{
		}

		[Token(Token = "0x6001E1F")]
		[Address(RVA = "0x1AC56D0", Offset = "0x1AC56D0", VA = "0x1AC56D0")]
		private void EnterAimState()
		{
		}

		[Token(Token = "0x6001E20")]
		[Address(RVA = "0x1AC56FC", Offset = "0x1AC56FC", VA = "0x1AC56FC")]
		private void ExitAimState()
		{
		}

		[Token(Token = "0x6001E21")]
		[Address(RVA = "0x1AC5728", Offset = "0x1AC5728", VA = "0x1AC5728")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001E22")]
		[Address(RVA = "0x1AC57CC", Offset = "0x1AC57CC", VA = "0x1AC57CC", Slot = "6")]
		protected override void AddEventHandlers()
		{
		}

		[Token(Token = "0x6001E23")]
		[Address(RVA = "0x1AC5820", Offset = "0x1AC5820", VA = "0x1AC5820", Slot = "7")]
		protected override void RemoveEventHandlers()
		{
		}

		[Token(Token = "0x6001E24")]
		[Address(RVA = "0x1AC5870", Offset = "0x1AC5870", VA = "0x1AC5870")]
		private void UpdateAimData(GFILocomotionTeleport.AimData obj)
		{
		}
	}
	[Token(Token = "0x200076E")]
	public class GFITeleportDestination : MonoBehaviour
	{
		[Token(Token = "0x400291F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("If the target handler provides a target position, this transform will be moved to that position and it's game object enabled. A target position being provided does not mean the position is valid, only that the aim handler found something to test as a destination.")]
		public Transform PositionIndicator;

		[Token(Token = "0x4002920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Tooltip("This transform will be rotated to match the rotation of the aiming target. Simple teleport destinations should assign this to the object containing this component. More complex teleport destinations might assign this to a sub-object that is used to indicate the landing orientation independently from the rest of the destination indicator, such as when world space effects are required. This will typically be a child of the PositionIndicator.")]
		public Transform OrientationIndicator;

		[Token(Token = "0x4002921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Tooltip("After the player teleports, the character controller will have it's rotation set to this value. It is different from the OrientationIndicator transform.rotation in order to support both head-relative and forward-facing teleport modes (See TeleportOrientationHandlerThumbstick.cs).")]
		public Quaternion LandingRotation;

		[NonSerialized]
		[Token(Token = "0x4002922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GFILocomotionTeleport LocomotionTeleport;

		[NonSerialized]
		[Token(Token = "0x4002923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GFILocomotionTeleport.States TeleportState;

		[Token(Token = "0x4002924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly Action<bool, Vector3?, Quaternion?, Quaternion?> _updateTeleportDestinationAction;

		[Token(Token = "0x4002925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool _eventsActive;

		[Token(Token = "0x17000306")]
		public bool IsValidDestination
		{
			[Token(Token = "0x6001E25")]
			[Address(RVA = "0x1AC596C", Offset = "0x1AC596C", VA = "0x1AC596C")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E26")]
			[Address(RVA = "0x1AC5974", Offset = "0x1AC5974", VA = "0x1AC5974")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x14000023")]
		public event Action<GFITeleportDestination> Deactivated
		{
			[Token(Token = "0x6001E2B")]
			[Address(RVA = "0x1AC5AFC", Offset = "0x1AC5AFC", VA = "0x1AC5AFC")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001E2C")]
			[Address(RVA = "0x1AC5BAC", Offset = "0x1AC5BAC", VA = "0x1AC5BAC")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001E27")]
		[Address(RVA = "0x1AC5980", Offset = "0x1AC5980", VA = "0x1AC5980")]
		private GFITeleportDestination()
		{
		}

		[Token(Token = "0x6001E28")]
		[Address(RVA = "0x1AC5A04", Offset = "0x1AC5A04", VA = "0x1AC5A04")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6001E29")]
		[Address(RVA = "0x1AC5AC8", Offset = "0x1AC5AC8", VA = "0x1AC5AC8")]
		private void TryDisableEventHandlers()
		{
		}

		[Token(Token = "0x6001E2A")]
		[Address(RVA = "0x1AC5AF8", Offset = "0x1AC5AF8", VA = "0x1AC5AF8")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6001E2D")]
		[Address(RVA = "0x1AC0CB4", Offset = "0x1AC0CB4", VA = "0x1AC0CB4")]
		public void OnDeactivated()
		{
		}

		[Token(Token = "0x6001E2E")]
		[Address(RVA = "0x1AC5C5C", Offset = "0x1AC5C5C", VA = "0x1AC5C5C")]
		public void Recycle()
		{
		}

		[Token(Token = "0x6001E2F")]
		[Address(RVA = "0x1AC5C78", Offset = "0x1AC5C78", VA = "0x1AC5C78", Slot = "4")]
		public virtual void UpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
		{
		}
	}
	[Token(Token = "0x200076F")]
	public abstract class GFITeleportInputHandler : GFITeleportSupport
	{
		[Token(Token = "0x2000770")]
		[CompilerGenerated]
		private sealed class <TeleportReadyCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002929")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400292A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400292B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GFITeleportInputHandler <>4__this;

			[Token(Token = "0x17000307")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E3C")]
				[Address(RVA = "0x1AC6240", Offset = "0x1AC6240", VA = "0x1AC6240", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000308")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E3E")]
				[Address(RVA = "0x1AC6288", Offset = "0x1AC6288", VA = "0x1AC6288", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E39")]
			[Address(RVA = "0x1AC60AC", Offset = "0x1AC60AC", VA = "0x1AC60AC")]
			[DebuggerHidden]
			public <TeleportReadyCoroutine>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x6001E3A")]
			[Address(RVA = "0x1AC61B0", Offset = "0x1AC61B0", VA = "0x1AC61B0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E3B")]
			[Address(RVA = "0x1AC61B4", Offset = "0x1AC61B4", VA = "0x1AC61B4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E3D")]
			[Address(RVA = "0x1AC6248", Offset = "0x1AC6248", VA = "0x1AC6248", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000771")]
		[CompilerGenerated]
		private sealed class <TeleportAimCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400292C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400292D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400292E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GFITeleportInputHandler <>4__this;

			[Token(Token = "0x17000309")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E42")]
				[Address(RVA = "0x1AC632C", Offset = "0x1AC632C", VA = "0x1AC632C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700030A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E44")]
				[Address(RVA = "0x1AC6374", Offset = "0x1AC6374", VA = "0x1AC6374", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E3F")]
			[Address(RVA = "0x1AC6148", Offset = "0x1AC6148", VA = "0x1AC6148")]
			[DebuggerHidden]
			public <TeleportAimCoroutine>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6001E40")]
			[Address(RVA = "0x1AC6290", Offset = "0x1AC6290", VA = "0x1AC6290", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E41")]
			[Address(RVA = "0x1AC6294", Offset = "0x1AC6294", VA = "0x1AC6294", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E43")]
			[Address(RVA = "0x1AC6334", Offset = "0x1AC6334", VA = "0x1AC6334", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly Action _startReadyAction;

		[Token(Token = "0x4002928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly Action _startAimAction;

		[Token(Token = "0x6001E30")]
		[Address(RVA = "0x1AC5E6C", Offset = "0x1AC5E6C", VA = "0x1AC5E6C")]
		protected GFITeleportInputHandler()
		{
		}

		[Token(Token = "0x6001E31")]
		[Address(RVA = "0x1AC5F40", Offset = "0x1AC5F40", VA = "0x1AC5F40", Slot = "6")]
		protected override void AddEventHandlers()
		{
		}

		[Token(Token = "0x6001E32")]
		[Address(RVA = "0x1AC5F8C", Offset = "0x1AC5F8C", VA = "0x1AC5F8C", Slot = "7")]
		protected override void RemoveEventHandlers()
		{
		}

		[Token(Token = "0x6001E33")]
		[Address(RVA = "0x1AC6038", Offset = "0x1AC6038", VA = "0x1AC6038")]
		[IteratorStateMachine(typeof(<TeleportReadyCoroutine>d__5))]
		private IEnumerator TeleportReadyCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6001E34")]
		[Address(RVA = "0x1AC60D4", Offset = "0x1AC60D4", VA = "0x1AC60D4")]
		[IteratorStateMachine(typeof(<TeleportAimCoroutine>d__6))]
		private IEnumerator TeleportAimCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6001E35")]
		public abstract GFILocomotionTeleport.TeleportIntentions GetIntention();

		[Token(Token = "0x6001E36")]
		public abstract void GetAimData(out Ray aimRay);
	}
	[Token(Token = "0x2000772")]
	public class GFITeleportInputHandlerThumbstick : GFITeleportInputHandler
	{
		[Token(Token = "0x2000773")]
		public enum InputModes
		{
			[Token(Token = "0x4002934")]
			ThumbstickTeleport
		}

		[Token(Token = "0x400292F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Inject]
		private InputProvider _inputProvider;

		[Token(Token = "0x4002930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private InputModes InputMode;

		[Token(Token = "0x4002931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[Tooltip("The thumbstick magnitude required to trigger aiming and teleports when InputMode==InputModes.ThumbstickTeleport")]
		public float ThumbstickTeleportThreshold;

		[Token(Token = "0x4002932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Tooltip("When true, the system will not use the PreTeleport intention which will allow a teleport to occur on a button downpress. When false, the button downpress will trigger the PreTeleport intention and the Teleport intention when the button is released.")]
		public bool FastTeleport;

		[Token(Token = "0x6001E45")]
		[Address(RVA = "0x1AC637C", Offset = "0x1AC637C", VA = "0x1AC637C", Slot = "8")]
		public override GFILocomotionTeleport.TeleportIntentions GetIntention()
		{
			return default(GFILocomotionTeleport.TeleportIntentions);
		}

		[Token(Token = "0x6001E46")]
		[Address(RVA = "0x1AC647C", Offset = "0x1AC647C", VA = "0x1AC647C", Slot = "9")]
		public override void GetAimData(out Ray aimRay)
		{
		}

		[Token(Token = "0x6001E47")]
		[Address(RVA = "0x1AC6528", Offset = "0x1AC6528", VA = "0x1AC6528")]
		public GFITeleportInputHandlerThumbstick()
		{
		}
	}
	[Token(Token = "0x2000774")]
	public abstract class GFITeleportOrientationHandler : GFITeleportSupport
	{
		[Token(Token = "0x2000775")]
		public enum OrientationModes
		{
			[Token(Token = "0x400293A")]
			HeadRelative,
			[Token(Token = "0x400293B")]
			ForwardFacing
		}

		[Token(Token = "0x2000776")]
		[CompilerGenerated]
		private sealed class <UpdateOrientationCoroutine>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400293C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400293D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400293E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GFITeleportOrientationHandler <>4__this;

			[Token(Token = "0x1700030B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E54")]
				[Address(RVA = "0x1AC6900", Offset = "0x1AC6900", VA = "0x1AC6900", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700030C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E56")]
				[Address(RVA = "0x1AC6948", Offset = "0x1AC6948", VA = "0x1AC6948", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E51")]
			[Address(RVA = "0x1AC6704", Offset = "0x1AC6704", VA = "0x1AC6704")]
			[DebuggerHidden]
			public <UpdateOrientationCoroutine>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6001E52")]
			[Address(RVA = "0x1AC6850", Offset = "0x1AC6850", VA = "0x1AC6850", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E53")]
			[Address(RVA = "0x1AC6854", Offset = "0x1AC6854", VA = "0x1AC6854", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E55")]
			[Address(RVA = "0x1AC6908", Offset = "0x1AC6908", VA = "0x1AC6908", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Inject]
		protected InputProvider _inputProvider;

		[Token(Token = "0x4002936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly Action _updateOrientationAction;

		[Token(Token = "0x4002937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly Action<GFILocomotionTeleport.AimData> _updateAimDataAction;

		[Token(Token = "0x4002938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected GFILocomotionTeleport.AimData AimData;

		[Token(Token = "0x6001E48")]
		[Address(RVA = "0x1AC6534", Offset = "0x1AC6534", VA = "0x1AC6534")]
		protected GFITeleportOrientationHandler()
		{
		}

		[Token(Token = "0x6001E49")]
		[Address(RVA = "0x1AC661C", Offset = "0x1AC661C", VA = "0x1AC661C")]
		private void UpdateAimData(GFILocomotionTeleport.AimData aimData)
		{
		}

		[Token(Token = "0x6001E4A")]
		[Address(RVA = "0x1AC6624", Offset = "0x1AC6624", VA = "0x1AC6624", Slot = "6")]
		protected override void AddEventHandlers()
		{
		}

		[Token(Token = "0x6001E4B")]
		[Address(RVA = "0x1AC665C", Offset = "0x1AC665C", VA = "0x1AC665C", Slot = "7")]
		protected override void RemoveEventHandlers()
		{
		}

		[Token(Token = "0x6001E4C")]
		[Address(RVA = "0x1AC6690", Offset = "0x1AC6690", VA = "0x1AC6690")]
		[IteratorStateMachine(typeof(<UpdateOrientationCoroutine>d__8))]
		private IEnumerator UpdateOrientationCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6001E4D")]
		protected abstract void InitializeTeleportDestination();

		[Token(Token = "0x6001E4E")]
		protected abstract void UpdateTeleportDestination();

		[Token(Token = "0x6001E4F")]
		[Address(RVA = "0x1AC672C", Offset = "0x1AC672C", VA = "0x1AC672C")]
		protected Quaternion GetLandingOrientation(OrientationModes mode, Quaternion rotation)
		{
			return default(Quaternion);
		}
	}
	[Token(Token = "0x2000777")]
	public class GFITeleportOrientationHandlerThumbstick : GFITeleportOrientationHandler
	{
		[Token(Token = "0x400293F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Tooltip("HeadRelative=Character will orient to match the arrow. ForwardFacing=When user orients to match the arrow, they will be facing the sensors.")]
		public OrientationModes OrientationMode;

		[Token(Token = "0x4002940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[Tooltip("The orientation will only change if the thumbstick magnitude is above this value. This will usually be larger than the TeleportInputHandlerTouch.ThumbstickTeleportThreshold.")]
		public float RotateStickThreshold;

		[Token(Token = "0x4002941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion _initialRotation;

		[Token(Token = "0x4002942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Quaternion _currentRotation;

		[Token(Token = "0x4002943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector2 _lastValidDirection;

		[Token(Token = "0x6001E57")]
		[Address(RVA = "0x1AC6950", Offset = "0x1AC6950", VA = "0x1AC6950", Slot = "8")]
		protected override void InitializeTeleportDestination()
		{
		}

		[Token(Token = "0x6001E58")]
		[Address(RVA = "0x1AC6984", Offset = "0x1AC6984", VA = "0x1AC6984", Slot = "9")]
		protected override void UpdateTeleportDestination()
		{
		}

		[Token(Token = "0x6001E59")]
		[Address(RVA = "0x1AC6D80", Offset = "0x1AC6D80", VA = "0x1AC6D80")]
		public GFITeleportOrientationHandlerThumbstick()
		{
		}
	}
	[Token(Token = "0x2000778")]
	public abstract class GFITeleportSupport : MonoBehaviour
	{
		[Token(Token = "0x4002945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _eventsActive;

		[Token(Token = "0x1700030D")]
		protected GFILocomotionTeleport LocomotionTeleport
		{
			[Token(Token = "0x6001E5A")]
			[Address(RVA = "0x1AC6D90", Offset = "0x1AC6D90", VA = "0x1AC6D90")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E5B")]
			[Address(RVA = "0x1AC6D98", Offset = "0x1AC6D98", VA = "0x1AC6D98")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001E5C")]
		[Address(RVA = "0x1AC50D4", Offset = "0x1AC50D4", VA = "0x1AC50D4", Slot = "4")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001E5D")]
		[Address(RVA = "0x1AC51E4", Offset = "0x1AC51E4", VA = "0x1AC51E4", Slot = "5")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001E5E")]
		[Address(RVA = "0x1AC6DA0", Offset = "0x1AC6DA0", VA = "0x1AC6DA0")]
		[Conditional("DEBUG_TELEPORT_EVENT_HANDLERS")]
		private void LogEventHandler(string msg)
		{
		}

		[Token(Token = "0x6001E5F")]
		[Address(RVA = "0x1AC5814", Offset = "0x1AC5814", VA = "0x1AC5814", Slot = "6")]
		protected virtual void AddEventHandlers()
		{
		}

		[Token(Token = "0x6001E60")]
		[Address(RVA = "0x1AC5868", Offset = "0x1AC5868", VA = "0x1AC5868", Slot = "7")]
		protected virtual void RemoveEventHandlers()
		{
		}

		[Token(Token = "0x6001E61")]
		[Address(RVA = "0x1AC5214", Offset = "0x1AC5214", VA = "0x1AC5214")]
		protected GFITeleportSupport()
		{
		}
	}
	[Token(Token = "0x2000779")]
	public abstract class GFITeleportTargetHandler : GFITeleportSupport
	{
		[Token(Token = "0x200077A")]
		[CompilerGenerated]
		private sealed class <TargetAimCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400294B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400294C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400294D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GFITeleportTargetHandler <>4__this;

			[Token(Token = "0x1700030E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E6D")]
				[Address(RVA = "0x1AC74A4", Offset = "0x1AC74A4", VA = "0x1AC74A4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700030F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E6F")]
				[Address(RVA = "0x1AC74EC", Offset = "0x1AC74EC", VA = "0x1AC74EC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E6A")]
			[Address(RVA = "0x1AC7048", Offset = "0x1AC7048", VA = "0x1AC7048")]
			[DebuggerHidden]
			public <TargetAimCoroutine>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6001E6B")]
			[Address(RVA = "0x1AC71BC", Offset = "0x1AC71BC", VA = "0x1AC71BC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E6C")]
			[Address(RVA = "0x1AC71C0", Offset = "0x1AC71C0", VA = "0x1AC71C0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E6E")]
			[Address(RVA = "0x1AC74AC", Offset = "0x1AC74AC", VA = "0x1AC74AC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Tooltip("This bitmask controls which game object layers will be included in the targeting collision tests.")]
		public LayerMask AimCollisionLayerMask;

		[Token(Token = "0x4002947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected readonly GFILocomotionTeleport.AimData AimData;

		[Token(Token = "0x4002948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly Action _startAimAction;

		[Token(Token = "0x4002949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly List<Vector3> _aimPoints;

		[Token(Token = "0x400294A")]
		private const float ERROR_MARGIN = 0.1f;

		[Token(Token = "0x6001E62")]
		[Address(RVA = "0x1AC6E70", Offset = "0x1AC6E70", VA = "0x1AC6E70")]
		protected GFITeleportTargetHandler()
		{
		}

		[Token(Token = "0x6001E63")]
		[Address(RVA = "0x1AC6F88", Offset = "0x1AC6F88", VA = "0x1AC6F88", Slot = "6")]
		protected override void AddEventHandlers()
		{
		}

		[Token(Token = "0x6001E64")]
		[Address(RVA = "0x1AC6FB0", Offset = "0x1AC6FB0", VA = "0x1AC6FB0", Slot = "7")]
		protected override void RemoveEventHandlers()
		{
		}

		[Token(Token = "0x6001E65")]
		[Address(RVA = "0x1AC6FD4", Offset = "0x1AC6FD4", VA = "0x1AC6FD4")]
		[IteratorStateMachine(typeof(<TargetAimCoroutine>d__7))]
		private IEnumerator TargetAimCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6001E66")]
		[Address(RVA = "0x1AC7070", Offset = "0x1AC7070", VA = "0x1AC7070", Slot = "8")]
		protected virtual void ResetAimData()
		{
		}

		[Token(Token = "0x6001E67")]
		protected abstract bool ConsiderTeleport(Vector3 start, ref Vector3 end);

		[Token(Token = "0x6001E68")]
		[Address(RVA = "0x1AC7088", Offset = "0x1AC7088", VA = "0x1AC7088", Slot = "10")]
		public virtual Vector3? ConsiderDestination(Vector3 location)
		{
			return null;
		}
	}
	[Token(Token = "0x200077B")]
	public class GFITeleportTargetHandlerPhysical : GFITeleportTargetHandler
	{
		[Token(Token = "0x6001E70")]
		[Address(RVA = "0x1AC74F4", Offset = "0x1AC74F4", VA = "0x1AC74F4", Slot = "9")]
		protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E71")]
		[Address(RVA = "0x1AC765C", Offset = "0x1AC765C", VA = "0x1AC765C")]
		public GFITeleportTargetHandlerPhysical()
		{
		}
	}
	[Token(Token = "0x200077C")]
	public abstract class GFITeleportTransition : GFITeleportSupport
	{
		[Token(Token = "0x6001E72")]
		[Address(RVA = "0x1AC7660", Offset = "0x1AC7660", VA = "0x1AC7660", Slot = "6")]
		protected override void AddEventHandlers()
		{
		}

		[Token(Token = "0x6001E73")]
		[Address(RVA = "0x1AC76E4", Offset = "0x1AC76E4", VA = "0x1AC76E4", Slot = "7")]
		protected override void RemoveEventHandlers()
		{
		}

		[Token(Token = "0x6001E74")]
		protected abstract void LocomotionTeleportOnEnterStateTeleporting();

		[Token(Token = "0x6001E75")]
		[Address(RVA = "0x1AC7764", Offset = "0x1AC7764", VA = "0x1AC7764")]
		protected GFITeleportTransition()
		{
		}
	}
	[Token(Token = "0x200077D")]
	public class GFITeleportTransitionBlink : GFITeleportTransition
	{
		[StructLayout(3)]
		[Token(Token = "0x200077E")]
		[CompilerGenerated]
		private struct <Blink>d__4 : IAsyncStateMachine
		{
			[Token(Token = "0x4002951")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002952")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4002953")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GFITeleportTransitionBlink <>4__this;

			[Token(Token = "0x4002954")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6001E79")]
			[Address(RVA = "0x1AC78EC", Offset = "0x1AC78EC", VA = "0x1AC78EC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001E7A")]
			[Address(RVA = "0x1AC7EEC", Offset = "0x1AC7EEC", VA = "0x1AC7EEC", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x400294E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Inject]
		private InputProvider _inputProvider;

		[Token(Token = "0x400294F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Tooltip("How long the transition takes. Usually this is greater than Teleport Delay.")]
		[Range(0.01f, 2f)]
		public float TransitionDuration;

		[Token(Token = "0x4002950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[Tooltip("At what percentage of the elapsed transition time does the teleport occur?")]
		[Range(0f, 1f)]
		public float TeleportDelay;

		[Token(Token = "0x6001E76")]
		[Address(RVA = "0x1AC776C", Offset = "0x1AC776C", VA = "0x1AC776C", Slot = "8")]
		protected override void LocomotionTeleportOnEnterStateTeleporting()
		{
		}

		[Token(Token = "0x6001E77")]
		[Address(RVA = "0x1AC7780", Offset = "0x1AC7780", VA = "0x1AC7780")]
		[AsyncStateMachine(typeof(<Blink>d__4))]
		private UniTask Blink()
		{
			return default(UniTask);
		}

		[Token(Token = "0x6001E78")]
		[Address(RVA = "0x1AC78DC", Offset = "0x1AC78DC", VA = "0x1AC78DC")]
		public GFITeleportTransitionBlink()
		{
		}
	}
}
namespace Imacreate.GrooveFitIsland.Core.GFIAvatarSystem
{
	[Token(Token = "0x200077F")]
	public class ActivateAvatarIKSnap : MonoBehaviour
	{
		[Token(Token = "0x4002955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _squareDistanceThreshold;

		[Token(Token = "0x4002956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _angleCosThreshold;

		[Token(Token = "0x4002957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _bendCosThreshold;

		[Token(Token = "0x4002958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private VRAvatarIKFootTarget _ikFoot;

		[Token(Token = "0x4002959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Inject]
		private InputProvider _inputProvider;

		[Token(Token = "0x6001E7B")]
		[Address(RVA = "0x1AC7EF8", Offset = "0x1AC7EF8", VA = "0x1AC7EF8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E7C")]
		[Address(RVA = "0x1AC8190", Offset = "0x1AC8190", VA = "0x1AC8190")]
		public ActivateAvatarIKSnap()
		{
		}
	}
	[Token(Token = "0x2000780")]
	public class AvatarFootBendIKTarget : MonoBehaviour
	{
		[Token(Token = "0x400295A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _rightTarget;

		[Token(Token = "0x400295B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _leftTarget;

		[Token(Token = "0x400295C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float _weight;

		[Token(Token = "0x400295D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private bool _dontDestoroy;

		[Token(Token = "0x400295E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform _avatar;

		[Token(Token = "0x400295F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _isActive;

		[Token(Token = "0x4002960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform _defaultRightTarget;

		[Token(Token = "0x4002961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform _defaultLeftTarget;

		[Token(Token = "0x4002962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float _defaultWeight;

		[Token(Token = "0x4002963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Dictionary<string, AvatarFootBendIKTarget> DontDestoroyTargets;

		[Token(Token = "0x17000310")]
		private string key
		{
			[Token(Token = "0x6001E7D")]
			[Address(RVA = "0x1AC81AC", Offset = "0x1AC81AC", VA = "0x1AC81AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E7E")]
		[Address(RVA = "0x1AC824C", Offset = "0x1AC824C", VA = "0x1AC824C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E7F")]
		[Address(RVA = "0x1AC853C", Offset = "0x1AC853C", VA = "0x1AC853C")]
		private void Activate()
		{
		}

		[Token(Token = "0x6001E80")]
		[Address(RVA = "0x1AC8734", Offset = "0x1AC8734", VA = "0x1AC8734")]
		private void Deactivate()
		{
		}

		[Token(Token = "0x6001E81")]
		[Address(RVA = "0x1AC8874", Offset = "0x1AC8874", VA = "0x1AC8874")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E82")]
		[Address(RVA = "0x1AC8904", Offset = "0x1AC8904", VA = "0x1AC8904")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001E83")]
		[Address(RVA = "0x1AC8908", Offset = "0x1AC8908", VA = "0x1AC8908")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001E84")]
		[Address(RVA = "0x1AC890C", Offset = "0x1AC890C", VA = "0x1AC890C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001E85")]
		[Address(RVA = "0x1AC8A8C", Offset = "0x1AC8A8C", VA = "0x1AC8A8C")]
		public AvatarFootBendIKTarget()
		{
		}
	}
	[Token(Token = "0x2000781")]
	public class AvatarHeightSetter : MonoBehaviour
	{
		[Token(Token = "0x6001E88")]
		[Address(RVA = "0x1AC8B38", Offset = "0x1AC8B38", VA = "0x1AC8B38")]
		public AvatarHeightSetter()
		{
		}
	}
	[Token(Token = "0x2000782")]
	public class AvatarInfoSetter : MonoBehaviour
	{
		[Token(Token = "0x4002964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private RawImage _image;

		[Token(Token = "0x4002965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TextMeshProUGUI _titleText;

		[Token(Token = "0x4002966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Inject]
		private MultilingualTextManager _multilingualTextManager;

		[Token(Token = "0x4002967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Header("Optinal")]
		[SerializeField]
		private Slider _slider;

		[Token(Token = "0x4002968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private TMP_Text _scaleText;

		[Token(Token = "0x4002969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float size_cached;

		[Token(Token = "0x6001E89")]
		[Address(RVA = "0x1AC8B40", Offset = "0x1AC8B40", VA = "0x1AC8B40")]
		public AvatarInfoSetter()
		{
		}
	}
	[Token(Token = "0x2000783")]
	public class AvatarRemover : MonoBehaviour
	{
		[Token(Token = "0x400296A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UnityEvent OnRemoved;

		[Token(Token = "0x6001E8A")]
		[Address(RVA = "0x1AC8B50", Offset = "0x1AC8B50", VA = "0x1AC8B50")]
		public AvatarRemover()
		{
		}
	}
	[Token(Token = "0x2000784")]
	public class AvatarScaleMagnificationSlider : MonoBehaviour
	{
		[Token(Token = "0x400296B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Slider _slider;

		[Token(Token = "0x400296C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Inject]
		private InputProvider _inputProvider;

		[Token(Token = "0x6001E8B")]
		[Address(RVA = "0x1AC8B58", Offset = "0x1AC8B58", VA = "0x1AC8B58")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E8C")]
		[Address(RVA = "0x1AC8D10", Offset = "0x1AC8D10", VA = "0x1AC8D10")]
		public AvatarScaleMagnificationSlider()
		{
		}
	}
	[Token(Token = "0x2000785")]
	public class CheckAvaterSet : MonoBehaviour
	{
		[Token(Token = "0x400296D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Button _avatarFullTrackingButton;

		[Token(Token = "0x6001E8D")]
		[Address(RVA = "0x1AC8D18", Offset = "0x1AC8D18", VA = "0x1AC8D18")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E8E")]
		[Address(RVA = "0x1AC8EBC", Offset = "0x1AC8EBC", VA = "0x1AC8EBC")]
		public CheckAvaterSet()
		{
		}
	}
	[Token(Token = "0x2000786")]
	public class CountDownController : MonoBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x2000787")]
		[CompilerGenerated]
		private struct <CountDown>d__11 : IAsyncStateMachine
		{
			[Token(Token = "0x4002979")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400297A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x400297B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CountDownController <>4__this;

			[Token(Token = "0x400297C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <NumSave>5__2;

			[Token(Token = "0x400297D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UniTask<bool>.Awaiter <>u__1;

			[Token(Token = "0x6001E93")]
			[Address(RVA = "0x1AC9030", Offset = "0x1AC9030", VA = "0x1AC9030", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001E94")]
			[Address(RVA = "0x1AC9618", Offset = "0x1AC9618", VA = "0x1AC9618", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x400296E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Settings")]
		[SerializeField]
		private GameObject _countDownStartButtonObj;

		[Token(Token = "0x400296F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TextMeshProUGUI _countDownText;

		[Token(Token = "0x4002970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private int _countDownNum;

		[Token(Token = "0x4002971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4002972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AudioClip _countDownSE;

		[Token(Token = "0x4002973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private AudioClip _finishCalibrationSE;

		[Token(Token = "0x4002974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private UnityEvent _finishCountDownEvent;

		[Token(Token = "0x4002975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Header("Option")]
		[SerializeField]
		private AudioSource _bgmAudioSource;

		[Token(Token = "0x4002976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float _volume;

		[Token(Token = "0x4002977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private CancellationTokenSource token;

		[Token(Token = "0x4002978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool _isStopCountDown;

		[Token(Token = "0x6001E90")]
		[Address(RVA = "0x1AC8EE4", Offset = "0x1AC8EE4", VA = "0x1AC8EE4")]
		[AsyncStateMachine(typeof(<CountDown>d__11))]
		public void CountDown()
		{
		}

		[Token(Token = "0x6001E91")]
		[Address(RVA = "0x1AC8F9C", Offset = "0x1AC8F9C", VA = "0x1AC8F9C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001E92")]
		[Address(RVA = "0x1AC9028", Offset = "0x1AC9028", VA = "0x1AC9028")]
		public CountDownController()
		{
		}
	}
	[Token(Token = "0x2000788")]
	[RequireComponent(typeof(AvatarInfoSetter))]
	public class CurrentAvatarInfoSetter : MonoBehaviour
	{
		[Token(Token = "0x400297E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Action _action;

		[Token(Token = "0x400297F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AvatarInfoSetter _target;

		[Token(Token = "0x6001E95")]
		[Address(RVA = "0x1AC9624", Offset = "0x1AC9624", VA = "0x1AC9624")]
		public CurrentAvatarInfoSetter()
		{
		}
	}
	[Token(Token = "0x2000789")]
	public class FadeOnAvatarSet : SingletonMonoBehaviour<FadeOnAvatarSet>
	{
		[StructLayout(3)]
		[Token(Token = "0x200078A")]
		[CompilerGenerated]
		private struct <StartAvatarChanging>d__5 : IAsyncStateMachine
		{
			[Token(Token = "0x4002983")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002984")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x4002985")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FadeOnAvatarSet <>4__this;

			[Token(Token = "0x4002986")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken token;

			[Token(Token = "0x4002987")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool alreadyFaded;

			[Token(Token = "0x4002988")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6001E9C")]
			[Address(RVA = "0x1AC9A08", Offset = "0x1AC9A08", VA = "0x1AC9A08", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001E9D")]
			[Address(RVA = "0x1AC9ED0", Offset = "0x1AC9ED0", VA = "0x1AC9ED0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4002980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Inject]
		private InputProvider _inputProvider;

		[Token(Token = "0x4002981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4002982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool isChangingAvatar;

		[Token(Token = "0x17000311")]
		protected override bool dontDestroyOnLoad
		{
			[Token(Token = "0x6001E99")]
			[Address(RVA = "0x1AC999C", Offset = "0x1AC999C", VA = "0x1AC999C", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001E96")]
		[Address(RVA = "0x1AC962C", Offset = "0x1AC962C", VA = "0x1AC962C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E97")]
		[Address(RVA = "0x1AC9754", Offset = "0x1AC9754", VA = "0x1AC9754")]
		public void FinishChanging(bool v)
		{
		}

		[Token(Token = "0x6001E98")]
		[Address(RVA = "0x1AC98B4", Offset = "0x1AC98B4", VA = "0x1AC98B4")]
		[AsyncStateMachine(typeof(<StartAvatarChanging>d__5))]
		public UniTask<bool> StartAvatarChanging(CancellationToken token, bool alreadyFaded = false)
		{
			return default(UniTask<bool>);
		}

		[Token(Token = "0x6001E9A")]
		[Address(RVA = "0x1AC99A4", Offset = "0x1AC99A4", VA = "0x1AC99A4")]
		public FadeOnAvatarSet()
		{
		}
	}
	[Token(Token = "0x200078B")]
	[RequireComponent(typeof(AvatarInfoSetter))]
	public class FavoriteAvatarInfoSetter : MonoBehaviour
	{
		[Token(Token = "0x4002989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Action _action;

		[Token(Token = "0x400298A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AvatarInfoSetter _target;

		[Token(Token = "0x6001E9E")]
		[Address(RVA = "0x1AC9F28", Offset = "0x1AC9F28", VA = "0x1AC9F28")]
		public FavoriteAvatarInfoSetter()
		{
		}
	}
	[Token(Token = "0x200078C")]
	public class FullTrackingChecker : MonoBehaviour
	{
		[Token(Token = "0x6001E9F")]
		[Address(RVA = "0x1AC9F30", Offset = "0x1AC9F30", VA = "0x1AC9F30")]
		private void Start()
		{
		}

		[Token(Token = "0x6001EA0")]
		[Address(RVA = "0x1AC9FD0", Offset = "0x1AC9FD0", VA = "0x1AC9FD0")]
		public FullTrackingChecker()
		{
		}
	}
	[Token(Token = "0x200078D")]
	public class GFIAvatarHandBlend : MonoBehaviour
	{
		[Token(Token = "0x400298B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Inject]
		private InputProvider _inputProvider;

		[Token(Token = "0x6001EA1")]
		[Address(RVA = "0x1AC9FD8", Offset = "0x1AC9FD8", VA = "0x1AC9FD8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001EA2")]
		[Address(RVA = "0x1ACA128", Offset = "0x1ACA128", VA = "0x1ACA128")]
		public GFIAvatarHandBlend()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200078E")]
	public class GFIAvatarInfo
	{
		[Token(Token = "0x400298C")]
		private const string NOAVATAR_IMAGE_PATH = "no_avatar_image";

		[Token(Token = "0x400298D")]
		private const string NOAVATAR_NAME = "NO_AVATAR";

		[Token(Token = "0x400298E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string FAVORITE_AVATAR_THUMBNAIL;

		[Token(Token = "0x400298F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Texture2D NoAvatarImage;

		[Token(Token = "0x4002990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action OnCurrentAvatarUpdated;

		[Token(Token = "0x4002991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Action FavoriteAvatarSaved;

		[Token(Token = "0x4002992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static GFIAvatarInfo current;

		[Token(Token = "0x4002993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GFIAvatarInfo favorite;

		[Token(Token = "0x4002994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private GFIAvatarType _type;

		[Token(Token = "0x4002995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string _id;

		[Token(Token = "0x4002996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string _title;

		[Token(Token = "0x4002997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Texture2D _thumbnail;

		[Token(Token = "0x4002998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float _size;

		[Token(Token = "0x17000312")]
		public static GFIAvatarInfo Current
		{
			[Token(Token = "0x6001EA3")]
			[Address(RVA = "0x1ACA130", Offset = "0x1ACA130", VA = "0x1ACA130")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000313")]
		public static GFIAvatarInfo Favorite
		{
			[Token(Token = "0x6001EA4")]
			[Address(RVA = "0x1ACA2A0", Offset = "0x1ACA2A0", VA = "0x1ACA2A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000314")]
		public GFIAvatarType Type
		{
			[Token(Token = "0x6001EAC")]
			[Address(RVA = "0x1ACA9F0", Offset = "0x1ACA9F0", VA = "0x1ACA9F0")]
			get
			{
				return default(GFIAvatarType);
			}
		}

		[Token(Token = "0x17000315")]
		public string Id
		{
			[Token(Token = "0x6001EAD")]
			[Address(RVA = "0x1ACA9F8", Offset = "0x1ACA9F8", VA = "0x1ACA9F8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000316")]
		public string Name
		{
			[Token(Token = "0x6001EAE")]
			[Address(RVA = "0x1ACAA00", Offset = "0x1ACAA00", VA = "0x1ACAA00")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000317")]
		public Texture2D Thumbnail
		{
			[Token(Token = "0x6001EAF")]
			[Address(RVA = "0x1ACA5B8", Offset = "0x1ACA5B8", VA = "0x1ACA5B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000318")]
		public float Size
		{
			[Token(Token = "0x6001EB0")]
			[Address(RVA = "0x1ACAA6C", Offset = "0x1ACAA6C", VA = "0x1ACAA6C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000319")]
		public bool IsUseAvatar
		{
			[Token(Token = "0x6001EB1")]
			[Address(RVA = "0x1ACAA5C", Offset = "0x1ACAA5C", VA = "0x1ACAA5C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001EA5")]
		[Address(RVA = "0x1ACA328", Offset = "0x1ACA328", VA = "0x1ACA328")]
		private static void loadFavorite()
		{
		}

		[Token(Token = "0x6001EA6")]
		[Address(RVA = "0x1ACA4B0", Offset = "0x1ACA4B0", VA = "0x1ACA4B0")]
		public static void SaveCurrentToFavorite()
		{
		}

		[Token(Token = "0x6001EA7")]
		[Address(RVA = "0x1ACA750", Offset = "0x1ACA750", VA = "0x1ACA750")]
		private static void SetCurrent(GFIAvatarType type, string id, string title, Texture2D thumbnailSprite, float size = 1f)
		{
		}

		[Token(Token = "0x6001EA8")]
		[Address(RVA = "0x1ACA838", Offset = "0x1ACA838", VA = "0x1ACA838")]
		private static void SetCurrent(GFIAvatarType type, string id, VRMMeta vrmMeta, float size = 1f)
		{
		}

		[Token(Token = "0x6001EA9")]
		[Address(RVA = "0x1ACA8D0", Offset = "0x1ACA8D0", VA = "0x1ACA8D0")]
		public static void SetCurrent(GFIAvatarType type, string id, GameObject vrmObject, float size = 1f)
		{
		}

		[Token(Token = "0x6001EAA")]
		[Address(RVA = "0x1ACA97C", Offset = "0x1ACA97C", VA = "0x1ACA97C")]
		public static void SetCurrentToNoavatar()
		{
		}

		[Token(Token = "0x6001EAB")]
		[Address(RVA = "0x1AC8C78", Offset = "0x1AC8C78", VA = "0x1AC8C78")]
		public static void SetCurrentSize(float size)
		{
		}

		[Token(Token = "0x6001EB2")]
		[Address(RVA = "0x1ACA240", Offset = "0x1ACA240", VA = "0x1ACA240")]
		public GFIAvatarInfo()
		{
		}
	}
	[Token(Token = "0x2000790")]
	public enum GFIAvatarType
	{
		[Token(Token = "0x400299B")]
		NoAvatar,
		[Token(Token = "0x400299C")]
		BuiltInAvatar,
		[Token(Token = "0x400299D")]
		VRoidAvatar
	}
	[Token(Token = "0x2000791")]
	public class UseAvatarWithFade : MonoBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x2000792")]
		[CompilerGenerated]
		private struct <UseCharacterModelUnitask>d__1 : IAsyncStateMachine
		{
			[Token(Token = "0x400299E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400299F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40029A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CancellationToken token;

			[Token(Token = "0x40029A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6001EBB")]
			[Address(RVA = "0x1ACAD38", Offset = "0x1ACAD38", VA = "0x1ACAD38", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001EBC")]
			[Address(RVA = "0x1ACB1CC", Offset = "0x1ACB1CC", VA = "0x1ACB1CC", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x6001EB8")]
		[Address(RVA = "0x1ACAC5C", Offset = "0x1ACAC5C", VA = "0x1ACAC5C")]
		public void UseCharacterModel()
		{
		}

		[Token(Token = "0x6001EB9")]
		[Address(RVA = "0x1ACAC90", Offset = "0x1ACAC90", VA = "0x1ACAC90")]
		[AsyncStateMachine(typeof(<UseCharacterModelUnitask>d__1))]
		private UniTaskVoid UseCharacterModelUnitask(CancellationToken token)
		{
			return default(UniTaskVoid);
		}

		[Token(Token = "0x6001EBA")]
		[Address(RVA = "0x1ACAD30", Offset = "0x1ACAD30", VA = "0x1ACAD30")]
		public UseAvatarWithFade()
		{
		}
	}
	[Token(Token = "0x2000793")]
	public class UsualAvatarLoader : MonoBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x2000794")]
		[CompilerGenerated]
		private struct <PutOnFavoriteAvatar>d__2 : IAsyncStateMachine
		{
			[Token(Token = "0x40029A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40029A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x40029A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public UsualAvatarLoader <>4__this;

			[Token(Token = "0x40029A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CancellationToken token;

			[Token(Token = "0x40029A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6001EBF")]
			[Address(RVA = "0x1ACB3B0", Offset = "0x1ACB3B0", VA = "0x1ACB3B0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001EC0")]
			[Address(RVA = "0x1ACB804", Offset = "0x1ACB804", VA = "0x1ACB804", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x40029A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string _avatarPrefabFolder;

		[Token(Token = "0x40029A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool inProgress;

		[Token(Token = "0x6001EBD")]
		[Address(RVA = "0x1ACB1D8", Offset = "0x1ACB1D8", VA = "0x1ACB1D8")]
		[AsyncStateMachine(typeof(<PutOnFavoriteAvatar>d__2))]
		public UniTask PutOnFavoriteAvatar(CancellationToken token)
		{
			return default(UniTask);
		}

		[Token(Token = "0x6001EBE")]
		[Address(RVA = "0x1ACB358", Offset = "0x1ACB358", VA = "0x1ACB358")]
		public UsualAvatarLoader()
		{
		}
	}
	[Token(Token = "0x2000795")]
	public class VRAvatarIKFootTarget : MonoBehaviour
	{
		[Token(Token = "0x40029A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _targetRight;

		[Token(Token = "0x40029AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _targetLeft;

		[Token(Token = "0x40029AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float _weightPosition;

		[Token(Token = "0x40029AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float _weightRotation;

		[Token(Token = "0x40029AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float _defaultWeightPosition;

		[Token(Token = "0x40029AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _defaultWeightRotaion;

		[Token(Token = "0x40029AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform _defaultTargetRight;

		[Token(Token = "0x40029B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform _defaultTargetLeft;

		[Token(Token = "0x6001EC1")]
		[Address(RVA = "0x1ACB810", Offset = "0x1ACB810", VA = "0x1ACB810")]
		private void SetIK()
		{
		}

		[Token(Token = "0x6001EC2")]
		[Address(RVA = "0x1ACB940", Offset = "0x1ACB940", VA = "0x1ACB940")]
		private void ResetIK()
		{
		}

		[Token(Token = "0x6001EC3")]
		[Address(RVA = "0x1ACBA9C", Offset = "0x1ACBA9C", VA = "0x1ACBA9C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001EC4")]
		[Address(RVA = "0x1ACBAA0", Offset = "0x1ACBAA0", VA = "0x1ACBAA0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001EC5")]
		[Address(RVA = "0x1ACBAA4", Offset = "0x1ACBAA4", VA = "0x1ACBAA4")]
		public VRAvatarIKFootTarget()
		{
		}
	}
	[Token(Token = "0x2000796")]
	public class VRMAvatarIKSetOnGame : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000797")]
		private struct Setting
		{
			[Token(Token = "0x40029B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[RestrictedStringByEnum(typeof(FieldKey))]
			public string key;

			[Token(Token = "0x40029B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float value;
		}

		[Token(Token = "0x2000798")]
		private enum FieldKey
		{
			[Token(Token = "0x40029B9")]
			FootDistance,
			[Token(Token = "0x40029BA")]
			StepThreshold
		}

		[Token(Token = "0x40029B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Inject]
		private ISubscriber<OnMusicGame> _subscriber;

		[Token(Token = "0x40029B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Setting[] _settings;

		[Token(Token = "0x40029B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly Dictionary<FieldKey, float> _defaultValue;

		[Token(Token = "0x40029B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int _defaultMode;

		[Token(Token = "0x40029B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[CanBeNull]
		private AvatarFootBendIKTarget _bendIKTarget;

		[Token(Token = "0x6001EC6")]
		[Address(RVA = "0x1ACBAB4", Offset = "0x1ACBAB4", VA = "0x1ACBAB4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001EC7")]
		[Address(RVA = "0x1ACBBE0", Offset = "0x1ACBBE0", VA = "0x1ACBBE0")]
		private void SetIK()
		{
		}

		[Token(Token = "0x6001EC8")]
		[Address(RVA = "0x1ACBDAC", Offset = "0x1ACBDAC", VA = "0x1ACBDAC")]
		private void ResetIK()
		{
		}

		[Token(Token = "0x6001EC9")]
		[Address(RVA = "0x1ACBF6C", Offset = "0x1ACBF6C", VA = "0x1ACBF6C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001ECA")]
		[Address(RVA = "0x1ACBF70", Offset = "0x1ACBF70", VA = "0x1ACBF70")]
		public VRMAvatarIKSetOnGame()
		{
		}
	}
	[Token(Token = "0x200079B")]
	public class VRMAvatarRunOnGame : MonoBehaviour
	{
		[Token(Token = "0x40029BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Vector3 _velocity;

		[Token(Token = "0x40029BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private Vector2 _animSpeed;

		[Token(Token = "0x40029C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool isRunning;

		[Token(Token = "0x40029C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Inject]
		private ISubscriber<OnMusicGame> _gameSubscriber;

		[Token(Token = "0x40029C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Inject]
		private ISubscriber<OnPause> _pauseSubscriber;

		[Token(Token = "0x40029C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int _defaultMode;

		[Token(Token = "0x40029C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector2 _defaultAnimSpeed;

		[Token(Token = "0x6001ED0")]
		[Address(RVA = "0x1ACC2A4", Offset = "0x1ACC2A4", VA = "0x1ACC2A4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001ED1")]
		[Address(RVA = "0x1ACC4BC", Offset = "0x1ACC4BC", VA = "0x1ACC4BC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001ED2")]
		[Address(RVA = "0x1ACC608", Offset = "0x1ACC608", VA = "0x1ACC608")]
		private void StartRun()
		{
		}

		[Token(Token = "0x6001ED3")]
		[Address(RVA = "0x1ACC780", Offset = "0x1ACC780", VA = "0x1ACC780")]
		private void StopRun()
		{
		}

		[Token(Token = "0x6001ED4")]
		[Address(RVA = "0x1ACC8B0", Offset = "0x1ACC8B0", VA = "0x1ACC8B0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001ED5")]
		[Address(RVA = "0x1ACC8C0", Offset = "0x1ACC8C0", VA = "0x1ACC8C0")]
		public VRMAvatarRunOnGame()
		{
		}
	}
	[Token(Token = "0x200079C")]
	public static class VRoidAvatarGFIES3Manager
	{
		[Token(Token = "0x6001ED8")]
		[Address(RVA = "0x1ACC9E4", Offset = "0x1ACC9E4", VA = "0x1ACC9E4")]
		public static void Save(string VRoidModelId)
		{
		}
	}
	[Token(Token = "0x200079D")]
	public class VRoidLangageSwitcher : MonoBehaviour
	{
		[Token(Token = "0x40029C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _routesObject;

		[Token(Token = "0x40029C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Inject]
		private MultilingualTextManager _multilingualTextManager;

		[Token(Token = "0x6001ED9")]
		[Address(RVA = "0x1ACC9E8", Offset = "0x1ACC9E8", VA = "0x1ACC9E8")]
		public void ApplyGFILangToVRoidLang()
		{
		}

		[Token(Token = "0x6001EDA")]
		[Address(RVA = "0x1ACCA50", Offset = "0x1ACCA50", VA = "0x1ACCA50")]
		public VRoidLangageSwitcher()
		{
		}
	}
}
namespace Imacreate.GrooveFitIsland.Core.DataManagement
{
	[Token(Token = "0x200079E")]
	public static class GameSelectSceneDetector
	{
		[Token(Token = "0x6001EDB")]
		[Address(RVA = "0x1ACCA58", Offset = "0x1ACCA58", VA = "0x1ACCA58")]
		public static string CurrentGameSelectScene()
		{
			return null;
		}
	}
	[Token(Token = "0x200079F")]
	public static class GFIES3
	{
		[Token(Token = "0x6001EDC")]
		public static void Save<T>(ESKeys key, T value)
		{
		}

		[Token(Token = "0x6001EDD")]
		public static T Load<T>(ESKeys key)
		{
			return (T)null;
		}

		[Token(Token = "0x6001EDE")]
		public static T Load<T>(ESKeys key, T defaultValue)
		{
			return (T)null;
		}

		[Token(Token = "0x6001EDF")]
		[Address(RVA = "0x1ACCAE4", Offset = "0x1ACCAE4", VA = "0x1ACCAE4")]
		public static bool KeyExists(ESKeys key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EE0")]
		[Address(RVA = "0x1ACCB5C", Offset = "0x1ACCB5C", VA = "0x1ACCB5C")]
		public static void DeleteKey(ESKeys key)
		{
		}

		[Token(Token = "0x6001EE1")]
		[Address(RVA = "0x1ACCAF8", Offset = "0x1ACCAF8", VA = "0x1ACCAF8")]
		private static string ToStringKey(this ESKeys key)
		{
			return null;
		}
	}
	[Token(Token = "0x20007A0")]
	public enum ESKeys
	{
		[Token(Token = "0x40029C8")]
		OpeningFinished,
		[Token(Token = "0x40029C9")]
		HeadHeight,
		[Token(Token = "0x40029CA")]
		LeftHandLength,
		[Token(Token = "0x40029CB")]
		RightHandLength,
		[Token(Token = "0x40029CC")]
		RhythmTennisRacketHand,
		[Token(Token = "0x40029CD")]
		FishingRodHand,
		[Token(Token = "0x40029CE")]
		Name,
		[Token(Token = "0x40029CF")]
		Difficulty,
		[Token(Token = "0x40029D0")]
		OptionRule,
		[Token(Token = "0x40029D1")]
		ReleaseType,
		[Token(Token = "0x40029D2")]
		LastGFIGameClearStateIndex,
		[Token(Token = "0x40029D3")]
		SavedLanguage,
		[Token(Token = "0x40029D4")]
		FirebaseUserInfo,
		[Token(Token = "0x40029D5")]
		WoodChopperHand,
		[Token(Token = "0x40029D6")]
		EndlessLifeType,
		[Token(Token = "0x40029D7")]
		GameSelectTutorialFinished,
		[Token(Token = "0x40029D8")]
		AllGameCleared,
		[Token(Token = "0x40029D9")]
		MonitorIsAudience,
		[Token(Token = "0x40029DA")]
		UsualAvatarType,
		[Token(Token = "0x40029DB")]
		UsualAvatarId,
		[Token(Token = "0x40029DC")]
		TwitterConsumerKey,
		[Token(Token = "0x40029DD")]
		TwitterAccessToken,
		[Token(Token = "0x40029DE")]
		BaseballBatHand,
		[Token(Token = "0x40029DF")]
		BaseballBatterType,
		[Token(Token = "0x40029E0")]
		TableTennisRacketHand,
		[Token(Token = "0x40029E1")]
		GolfClubHand,
		[Token(Token = "0x40029E2")]
		GolferSwingType,
		[Token(Token = "0x40029E3")]
		LogInList,
		[Token(Token = "0x40029E4")]
		ThirdViewCameraPos__OLD,
		[Token(Token = "0x40029E5")]
		GFPlayCountDictionary,
		[Token(Token = "0x40029E6")]
		GFHighScoreDictionary,
		[Token(Token = "0x40029E7")]
		AchievementFlagTutorial,
		[Token(Token = "0x40029E8")]
		AchievementFlagSecret,
		[Token(Token = "0x40029E9")]
		AchievementCountUpInt,
		[Token(Token = "0x40029EA")]
		AchievementCountUpFloat,
		[Token(Token = "0x40029EB")]
		AchievementHighestInt_HighestValue,
		[Token(Token = "0x40029EC")]
		AchievementHighestInt_CurrentValue,
		[Token(Token = "0x40029ED")]
		AchievementHighestFloat_HighestValue,
		[Token(Token = "0x40029EE")]
		AchievementHighestFloat_CurrentValue,
		[Token(Token = "0x40029EF")]
		VisitedMissions,
		[Token(Token = "0x40029F0")]
		PlayedHand,
		[Token(Token = "0x40029F1")]
		UsingFullTracking,
		[Token(Token = "0x40029F2")]
		NewToEndlessLever,
		[Token(Token = "0x40029F3")]
		AudioSettings_Volume_Music,
		[Token(Token = "0x40029F4")]
		AudioSettings_Volume_Voice,
		[Token(Token = "0x40029F5")]
		AudioSettings_Volume_SE,
		[Token(Token = "0x40029F6")]
		FavoriteAvatar,
		[Token(Token = "0x40029F7")]
		ThirdViewCameraPos__NEW,
		[Token(Token = "0x40029F8")]
		PicoUserID,
		[Token(Token = "0x40029F9")]
		GroovePoint,
		[Token(Token = "0x40029FA")]
		MIRank,
		[Token(Token = "0x40029FB")]
		Octave,
		[Token(Token = "0x40029FC")]
		MITrophyDictionary,
		[Token(Token = "0x40029FD")]
		MIItemDiscDictionary,
		[Token(Token = "0x40029FE")]
		MIItemRibbonDictionary,
		[Token(Token = "0x40029FF")]
		MICostumeDictionary,
		[Token(Token = "0x4002A00")]
		MIItemMisangas,
		[Token(Token = "0x4002A01")]
		SelectedItemDiscList,
		[Token(Token = "0x4002A02")]
		FavoriteGFGames
	}
	[Token(Token = "0x20007A1")]
	public enum GrooveFitGame
	{
		[Token(Token = "0x4002A04")]
		GF0_Tennis = 0,
		[Token(Token = "0x4002A05")]
		GF1_Boxing = 1,
		[Token(Token = "0x4002A06")]
		GF2_PizzaDelivery = 2,
		[Token(Token = "0x4002A07")]
		GF4_WoodChopper = 4,
		[Token(Token = "0x4002A08")]
		GF10_Fishing = 10,
		[Token(Token = "0x4002A09")]
		GF11_Rugby = 11,
		[Token(Token = "0x4002A0A")]
		GF12_ParaPara = 12,
		[Token(Token = "0x4002A0B")]
		GF18_SilverMan = 18,
		[Token(Token = "0x4002A0C")]
		GF22_Kendama = 22,
		[Token(Token = "0x4002A0D")]
		GF23_Golf = 23,
		[Token(Token = "0x4002A0E")]
		GF24_Baseball = 24,
		[Token(Token = "0x4002A0F")]
		GF27_TableTennis = 27,
		[Token(Token = "0x4002A10")]
		GF999_UNKNOWN = 999
	}
	[Token(Token = "0x20007A2")]
	public static class ReleaseType
	{
		[Token(Token = "0x20007A3")]
		public enum Type
		{
			[Token(Token = "0x4002A13")]
			Product,
			[Token(Token = "0x4002A14")]
			OpenBetaTypeA,
			[Token(Token = "0x4002A15")]
			OpenBetaTypeB,
			[Token(Token = "0x4002A16")]
			AppLab
		}

		[Token(Token = "0x4002A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Type CurrentReleaseType;
	}
}
namespace Imacreate.GrooveFitIsland.Core.Achievement
{
	[Token(Token = "0x20007A4")]
	public static class AchievementDataManager
	{
		[StructLayout(3)]
		[Token(Token = "0x20007A6")]
		[CompilerGenerated]
		private struct <StoreAllCount>d__5 : IAsyncStateMachine
		{
			[Token(Token = "0x4002A1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002A1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x6001EFC")]
			[Address(RVA = "0x1ACF640", Offset = "0x1ACF640", VA = "0x1ACF640", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001EFD")]
			[Address(RVA = "0x1ACF910", Offset = "0x1ACF910", VA = "0x1ACF910", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4002A17")]
		private const string SETTINGPATH = "Achievement/RecordMissionSettings";

		[Token(Token = "0x4002A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static RecordMissionSettings _recordMissionSettings;

		[Token(Token = "0x4002A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly Dictionary<string, int> countStack;

		[Token(Token = "0x1700031A")]
		public static RecordMissionSettings RecordMissionSettings
		{
			[Token(Token = "0x6001EE2")]
			[Address(RVA = "0x1ACCB70", Offset = "0x1ACCB70", VA = "0x1ACCB70")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001EE3")]
		private static Dictionary<S, T> CheckLogExist<S, T>(ESKeys esKey, S dictKey) where T : new()
		{
			return null;
		}

		[Token(Token = "0x6001EE4")]
		[Address(RVA = "0x1ACCCA4", Offset = "0x1ACCCA4", VA = "0x1ACCCA4")]
		[AsyncStateMachine(typeof(<StoreAllCount>d__5))]
		public static UniTask StoreAllCount([Optional] CancellationToken token)
		{
			return default(UniTask);
		}

		[Token(Token = "0x6001EE5")]
		[Address(RVA = "0x1ACCDE8", Offset = "0x1ACCDE8", VA = "0x1ACCDE8")]
		public static void AddPlayCount(GFGameSettings gfGameSettings)
		{
		}

		[Token(Token = "0x6001EE6")]
		[Address(RVA = "0x1ACD364", Offset = "0x1ACD364", VA = "0x1ACD364")]
		public static GFPlayCounts GetPlayCounts(GrooveFitGame grooveFitGame)
		{
			return null;
		}

		[Token(Token = "0x6001EE7")]
		[Address(RVA = "0x1ACD3FC", Offset = "0x1ACD3FC", VA = "0x1ACD3FC")]
		public static bool UpdateHighScore(GFGameSettings gfGameSettings, out float highScore, [Optional] ScoreData scoreData)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EE8")]
		[Address(RVA = "0x1ACD548", Offset = "0x1ACD548", VA = "0x1ACD548")]
		public static GFHighScores GetHighScores(GrooveFitGame grooveFitGame)
		{
			return null;
		}

		[Token(Token = "0x6001EE9")]
		[Address(RVA = "0x1ACD148", Offset = "0x1ACD148", VA = "0x1ACD148")]
		public static void SetFlagTutorial(AchvFlagTutorial key, [Optional] CancellationToken token)
		{
		}

		[Token(Token = "0x6001EEA")]
		[Address(RVA = "0x1ACD700", Offset = "0x1ACD700", VA = "0x1ACD700")]
		public static bool GetFlagTutorial(AchvFlagTutorial key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EEB")]
		[Address(RVA = "0x1ACD808", Offset = "0x1ACD808", VA = "0x1ACD808")]
		public static void SetFlagSecret(AchvFlagSecret key, [Optional] CancellationToken token)
		{
		}

		[Token(Token = "0x6001EEC")]
		[Address(RVA = "0x1ACDA24", Offset = "0x1ACDA24", VA = "0x1ACDA24")]
		public static bool GetFlagSecret(AchvFlagSecret key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EED")]
		[Address(RVA = "0x1ACDB2C", Offset = "0x1ACDB2C", VA = "0x1ACDB2C")]
		public static int CountUpInt(AchvCountUpInt key, int deltaValue = 1)
		{
			return default(int);
		}

		[Token(Token = "0x6001EEE")]
		[Address(RVA = "0x1ACDE2C", Offset = "0x1ACDE2C", VA = "0x1ACDE2C")]
		public static int GetCurrentCountInt(AchvCountUpInt key)
		{
			return default(int);
		}

		[Token(Token = "0x6001EEF")]
		[Address(RVA = "0x1ACDF30", Offset = "0x1ACDF30", VA = "0x1ACDF30")]
		public static float CountUpFloat(AchvCountUpFloat key, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6001EF0")]
		[Address(RVA = "0x1ACE238", Offset = "0x1ACE238", VA = "0x1ACE238")]
		public static float GetCurrentCountFloat(AchvCountUpFloat key)
		{
			return default(float);
		}

		[Token(Token = "0x6001EF1")]
		[Address(RVA = "0x1ACE33C", Offset = "0x1ACE33C", VA = "0x1ACE33C")]
		public static bool SetCurrentValue(AchvHighestInt key, int value)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EF2")]
		[Address(RVA = "0x1ACE6A4", Offset = "0x1ACE6A4", VA = "0x1ACE6A4")]
		public static bool CountUpCurrentValue(AchvHighestInt key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EF3")]
		[Address(RVA = "0x1ACEA50", Offset = "0x1ACEA50", VA = "0x1ACEA50")]
		public static int GetCurrentValue(AchvHighestInt key)
		{
			return default(int);
		}

		[Token(Token = "0x6001EF4")]
		[Address(RVA = "0x1ACEB54", Offset = "0x1ACEB54", VA = "0x1ACEB54")]
		public static int GetHighestValue(AchvHighestInt key)
		{
			return default(int);
		}

		[Token(Token = "0x6001EF5")]
		[Address(RVA = "0x1ACEC58", Offset = "0x1ACEC58", VA = "0x1ACEC58")]
		public static bool SetCurrentValue(AchvHighestFloat key, float value)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EF6")]
		[Address(RVA = "0x1ACEFE0", Offset = "0x1ACEFE0", VA = "0x1ACEFE0")]
		public static bool CountUpCurrentValue(AchvHighestFloat key, float deltaValue)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EF7")]
		[Address(RVA = "0x1ACF3A8", Offset = "0x1ACF3A8", VA = "0x1ACF3A8")]
		public static float GetCurrentValue(AchvHighestFloat key)
		{
			return default(float);
		}

		[Token(Token = "0x6001EF8")]
		[Address(RVA = "0x1ACF4AC", Offset = "0x1ACF4AC", VA = "0x1ACF4AC")]
		public static float GetHighestValue(AchvHighestFloat key)
		{
			return default(float);
		}

		[Token(Token = "0x6001EF9")]
		[Address(RVA = "0x1ACD5E0", Offset = "0x1ACD5E0", VA = "0x1ACD5E0")]
		private static void UnlockAchievement(string key)
		{
		}
	}
	[Token(Token = "0x20007A8")]
	public enum AchvFlagTutorial
	{
		[Token(Token = "0x4002A20")]
		DrankSomeShaker,
		[Token(Token = "0x4002A21")]
		InputYourName,
		[Token(Token = "0x4002A22")]
		FirstCalibrated,
		[Token(Token = "0x4002A23")]
		FirstGFClear,
		[Token(Token = "0x4002A24")]
		FirstPause,
		[Token(Token = "0x4002A25")]
		FirstTwitterShare,
		[Token(Token = "0x4002A26")]
		FirstPracticeSkip,
		[Token(Token = "0x4002A27")]
		FirstReturnHome,
		[Token(Token = "0x4002A28")]
		FirstGFRetry,
		[Token(Token = "0x4002A29")]
		PlayBronze,
		[Token(Token = "0x4002A2A")]
		PlaySilver,
		[Token(Token = "0x4002A2B")]
		PlayGold,
		[Token(Token = "0x4002A2C")]
		PlayPlatinum,
		[Token(Token = "0x4002A2D")]
		PlaySlow,
		[Token(Token = "0x4002A2E")]
		PlayFast,
		[Token(Token = "0x4002A2F")]
		PlayPerfectRun,
		[Token(Token = "0x4002A30")]
		GetSSRank,
		[Token(Token = "0x4002A31")]
		GetFullCombo,
		[Token(Token = "0x4002A32")]
		Get12GF,
		[Token(Token = "0x4002A33")]
		FirstClearEndroll,
		[Token(Token = "0x4002A34")]
		PlayEndless,
		[Token(Token = "0x4002A35")]
		WorldRanking15,
		[Token(Token = "0x4002A36")]
		WorldRanking10,
		[Token(Token = "0x4002A37")]
		WorldRanking5,
		[Token(Token = "0x4002A38")]
		WorldRanking1,
		[Token(Token = "0x4002A39")]
		UseBuildInAvatar,
		[Token(Token = "0x4002A3A")]
		ConnectVRoidHub,
		[Token(Token = "0x4002A3B")]
		UseVRoidAvatar,
		[Token(Token = "0x4002A3C")]
		ChangeAudioSettings,
		[Token(Token = "0x4002A3D")]
		CalibrateAgain,
		[Token(Token = "0x4002A3E")]
		BrowseFitLog,
		[Token(Token = "0x4002A3F")]
		SetMonitorAudience
	}
	[Token(Token = "0x20007A9")]
	public enum AchvFlagSecret
	{
		[Token(Token = "0x4002A41")]
		TennisBothHand,
		[Token(Token = "0x4002A42")]
		WoodChopperBothHand,
		[Token(Token = "0x4002A43")]
		FishingBothHand,
		[Token(Token = "0x4002A44")]
		GolfBothHand,
		[Token(Token = "0x4002A45")]
		BaseballBothHand,
		[Token(Token = "0x4002A46")]
		TableTennisBothHand,
		[Token(Token = "0x4002A47")]
		DiedImmediatelyPerfectRun,
		[Token(Token = "0x4002A48")]
		AllBadPlay,
		[Token(Token = "0x4002A49")]
		DrinkEnProtein,
		[Token(Token = "0x4002A4A")]
		DrinkJaProtein,
		[Token(Token = "0x4002A4B")]
		DrinkDeProtein,
		[Token(Token = "0x4002A4C")]
		DrinkFrProtein,
		[Token(Token = "0x4002A4D")]
		DrinkEsProtein,
		[Token(Token = "0x4002A4E")]
		DrinkKoProtein,
		[Token(Token = "0x4002A4F")]
		AllMutePlay,
		[Token(Token = "0x4002A50")]
		ListenFullTitleMusic,
		[Token(Token = "0x4002A51")]
		PerfectClearEndroll,
		[Token(Token = "0x4002A52")]
		HitSphereLoeStatue
	}
	[Token(Token = "0x20007AA")]
	public enum AchvCountUpInt
	{
		[Token(Token = "0x4002A54")]
		TotalLoginDays,
		[Token(Token = "0x4002A55")]
		TappedDrumButtonNum,
		[Token(Token = "0x4002A56")]
		SplitWoodNum,
		[Token(Token = "0x4002A57")]
		PunchedNum,
		[Token(Token = "0x4002A58")]
		SquattedNum,
		[Token(Token = "0x4002A59")]
		FishedNum
	}
	[Token(Token = "0x20007AB")]
	public enum AchvCountUpFloat
	{
		[Token(Token = "0x4002A5B")]
		TotalCalorie,
		[Token(Token = "0x4002A5C")]
		DistancePizzaDelivered,
		[Token(Token = "0x4002A5D")]
		DistanceRanRoad,
		[Token(Token = "0x4002A5E")]
		DurationDancingParaPara
	}
	[Token(Token = "0x20007AC")]
	public enum AchvHighestInt
	{
		[Token(Token = "0x4002A60")]
		ConsecutiveLoginDays
	}
	[Token(Token = "0x20007AD")]
	public enum AchvHighestFloat
	{
		[Token(Token = "0x4002A62")]
		DailyTotalCalorie
	}
	[Token(Token = "0x20007AE")]
	public class GFPlayCounts
	{
		[Token(Token = "0x4002A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int BronzePlayCount;

		[Token(Token = "0x4002A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int SilverPlayCount;

		[Token(Token = "0x4002A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int GoldPlayCount;

		[Token(Token = "0x4002A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int PlatinumPlayCount;

		[Token(Token = "0x4002A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int EndlessPlayCount;

		[Token(Token = "0x4002A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool _initialized;

		[Token(Token = "0x6001F01")]
		[Address(RVA = "0x1ACCF7C", Offset = "0x1ACCF7C", VA = "0x1ACCF7C")]
		public int AddPlayCount(GameStatus.Difficulty difficulty)
		{
			return default(int);
		}

		[Token(Token = "0x6001F02")]
		[Address(RVA = "0x1ACFB04", Offset = "0x1ACFB04", VA = "0x1ACFB04")]
		public int GetPlayCount(GameStatus.Difficulty difficulty)
		{
			return default(int);
		}

		[Token(Token = "0x6001F03")]
		[Address(RVA = "0x1ACFBD4", Offset = "0x1ACFBD4", VA = "0x1ACFBD4")]
		public int GetTotalPlayCount()
		{
			return default(int);
		}

		[Token(Token = "0x6001F04")]
		[Address(RVA = "0x1ACFBEC", Offset = "0x1ACFBEC", VA = "0x1ACFBEC")]
		public GFPlayCounts()
		{
		}
	}
	[Token(Token = "0x20007AF")]
	public static class SteamAchievementManager
	{
	}
}
namespace Imacreate.GrooveFitIsland.Core.Photon
{
	[Token(Token = "0x20007B0")]
	[NetworkBehaviourWeaved(0)]
	public class RandomMatchPresenter : NetworkBehaviour
	{
		[Token(Token = "0x4002A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private RandomMatchUseCase _randomMatchUseCase;

		[Token(Token = "0x4002A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private RandomPrepareUseCase _randomPrepareUseCase;

		[Token(Token = "0x4002A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private RandomMatchView _randomMatchViewPrefab;

		[Token(Token = "0x4002A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private RandomMatchView _randomMatchView;

		[Token(Token = "0x4002A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Changed<RandomMatchPresenter> $IL2CPP_CHANGED;

		[Token(Token = "0x4002A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static ChangedDelegate<RandomMatchPresenter> $IL2CPP_CHANGED_DELEGATE;

		[Token(Token = "0x4002A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static NetworkBehaviourCallbacks<RandomMatchPresenter> $IL2CPP_NETWORK_BEHAVIOUR_CALLBACKS;

		[Token(Token = "0x6001F05")]
		[Address(RVA = "0x1ACFBF4", Offset = "0x1ACFBF4", VA = "0x1ACFBF4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F06")]
		[Address(RVA = "0x1ACFFB8", Offset = "0x1ACFFB8", VA = "0x1ACFFB8")]
		public RandomMatchPresenter()
		{
		}
	}
	[Token(Token = "0x20007B2")]
	public class RandomMatchView : MonoBehaviour
	{
		[Token(Token = "0x4002A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _randomMatchCanvas;

		[Token(Token = "0x4002A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _matchingCanvas;

		[Token(Token = "0x4002A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject _prepareCanvas;

		[Token(Token = "0x4002A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject _coverCanvas;

		[Token(Token = "0x4002A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Button _prepareButton;

		[Token(Token = "0x4002A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private TextMeshProUGUI _lobbyTimerText;

		[Token(Token = "0x4002A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private TextMeshProUGUI _randomMatchTimerText;

		[Token(Token = "0x1700031B")]
		public Button PrepareButton
		{
			[Token(Token = "0x6001F0D")]
			[Address(RVA = "0x1AD0624", Offset = "0x1AD0624", VA = "0x1AD0624")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F0E")]
		[Address(RVA = "0x1ACFFD8", Offset = "0x1ACFFD8", VA = "0x1ACFFD8")]
		public void OnRandomMatchTimeUpdated(float randomMatchTime)
		{
		}

		[Token(Token = "0x6001F0F")]
		[Address(RVA = "0x1AD0180", Offset = "0x1AD0180", VA = "0x1AD0180")]
		public void OnRandomPrepareTimeUpdated(float lobbyWaitTime)
		{
		}

		[Token(Token = "0x6001F10")]
		[Address(RVA = "0x1AD062C", Offset = "0x1AD062C", VA = "0x1AD062C")]
		public void OnPrepareStateUpdated(bool isPrepared)
		{
		}

		[Token(Token = "0x6001F11")]
		[Address(RVA = "0x1AD0538", Offset = "0x1AD0538", VA = "0x1AD0538")]
		public void ManageWindow(RandomMatchWindow window)
		{
		}

		[Token(Token = "0x6001F12")]
		[Address(RVA = "0x1AD0698", Offset = "0x1AD0698", VA = "0x1AD0698")]
		public RandomMatchView()
		{
		}
	}
	[Token(Token = "0x20007B3")]
	public enum RandomMatchWindow
	{
		[Token(Token = "0x4002A7D")]
		None,
		[Token(Token = "0x4002A7E")]
		Matching,
		[Token(Token = "0x4002A7F")]
		Prepare,
		[Token(Token = "0x4002A80")]
		Covered
	}
	[StructLayout(2)]
	[Token(Token = "0x20007B4")]
	[NetworkInputWeaved(38)]
	public struct FusionInputProvider : INetworkInput
	{
		[Token(Token = "0x4002A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 HeadPosition;

		[Token(Token = "0x4002A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 HandPositionRight;

		[Token(Token = "0x4002A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 HandPositionLeft;

		[Token(Token = "0x4002A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Quaternion HeadRotation;

		[Token(Token = "0x4002A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Quaternion HandRotationRight;

		[Token(Token = "0x4002A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Quaternion HandRotationLeft;

		[Token(Token = "0x4002A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public bool GetTriggerRight;

		[Token(Token = "0x4002A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool GetTriggerLeft;

		[Token(Token = "0x4002A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public bool GetHoldRight;

		[Token(Token = "0x4002A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool GetHoldLeft;

		[Token(Token = "0x4002A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public bool GetStickRight;

		[Token(Token = "0x4002A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool GetStickLeft;

		[Token(Token = "0x4002A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public bool GetAButton;

		[Token(Token = "0x4002A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool GetControllerTrackedRight;

		[Token(Token = "0x4002A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public bool GetControllerTrackedLeft;

		[Token(Token = "0x4002A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float RawAxis1DTriggerRight;

		[Token(Token = "0x4002A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float RawAxis1DTriggerLeft;

		[Token(Token = "0x4002A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float RawAxis1DHoldRight;

		[Token(Token = "0x4002A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float RawAxis1DHoldLeft;

		[Token(Token = "0x4002A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Vector2 RawAxis2DStickRight;

		[Token(Token = "0x4002A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Vector2 RawAxis2DStickLeft;
	}
	[Token(Token = "0x20007B5")]
	public class FusionSceneZenjectInstaller : MonoInstaller
	{
		[Token(Token = "0x4002A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _photonAvatarSpawnerPrefab;

		[Token(Token = "0x6001F13")]
		[Address(RVA = "0x1AD06A0", Offset = "0x1AD06A0", VA = "0x1AD06A0", Slot = "8")]
		public override void InstallBindings()
		{
		}

		[Token(Token = "0x6001F14")]
		[Address(RVA = "0x1AD0738", Offset = "0x1AD0738", VA = "0x1AD0738")]
		public FusionSceneZenjectInstaller()
		{
		}
	}
	[Token(Token = "0x20007B6")]
	public class GFNetworkManager : SingletonMonoNetworkRunnerCallbacks<GFNetworkManager>
	{
		[StructLayout(3)]
		[Token(Token = "0x20007B7")]
		[CompilerGenerated]
		private struct <Start>d__14 : IAsyncStateMachine
		{
			[Token(Token = "0x4002A9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002AA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4002AA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GFNetworkManager <>4__this;

			[Token(Token = "0x6001F27")]
			[Address(RVA = "0x1AD1D38", Offset = "0x1AD1D38", VA = "0x1AD1D38", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001F28")]
			[Address(RVA = "0x1AD1E04", Offset = "0x1AD1E04", VA = "0x1AD1E04", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20007B8")]
		[CompilerGenerated]
		private struct <OnHostMigration>d__20 : IAsyncStateMachine
		{
			[Token(Token = "0x4002AA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002AA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4002AA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public NetworkRunner runner;

			[Token(Token = "0x4002AA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public GFNetworkManager <>4__this;

			[Token(Token = "0x4002AA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public HostMigrationToken hostMigrationToken;

			[Token(Token = "0x4002AA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x4002AA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private TaskAwaiter<StartGameResult> <>u__2;

			[Token(Token = "0x6001F29")]
			[Address(RVA = "0x1AD1E10", Offset = "0x1AD1E10", VA = "0x1AD1E10", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001F2A")]
			[Address(RVA = "0x1AD22C4", Offset = "0x1AD22C4", VA = "0x1AD22C4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20007BA")]
		[CompilerGenerated]
		private struct <StartGame>d__23 : IAsyncStateMachine
		{
			[Token(Token = "0x4002AAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002AAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<StartGameResult> <>t__builder;

			[Token(Token = "0x4002AAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameMode mode;

			[Token(Token = "0x4002AAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GFNetworkManager <>4__this;

			[Token(Token = "0x4002AAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string sessionName;

			[Token(Token = "0x4002AAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public int playerCount;

			[Token(Token = "0x4002AB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter<StartGameResult> <>u__1;

			[Token(Token = "0x6001F2D")]
			[Address(RVA = "0x1AD23A0", Offset = "0x1AD23A0", VA = "0x1AD23A0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001F2E")]
			[Address(RVA = "0x1AD2F48", Offset = "0x1AD2F48", VA = "0x1AD2F48", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20007BB")]
		[CompilerGenerated]
		private struct <StartGame>d__24 : IAsyncStateMachine
		{
			[Token(Token = "0x4002AB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002AB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<StartGameResult> <>t__builder;

			[Token(Token = "0x4002AB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GFNetworkManager <>4__this;

			[Token(Token = "0x4002AB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GameMode mode;

			[Token(Token = "0x4002AB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string sessionName;

			[Token(Token = "0x4002AB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter<StartGameResult> <>u__1;

			[Token(Token = "0x6001F2F")]
			[Address(RVA = "0x1AD2FA0", Offset = "0x1AD2FA0", VA = "0x1AD2FA0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001F30")]
			[Address(RVA = "0x1AD3B1C", Offset = "0x1AD3B1C", VA = "0x1AD3B1C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20007BC")]
		[CompilerGenerated]
		private struct <JoinSessionLobby>d__25 : IAsyncStateMachine
		{
			[Token(Token = "0x4002AB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002AB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<StartGameResult> <>t__builder;

			[Token(Token = "0x4002AB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GFNetworkManager <>4__this;

			[Token(Token = "0x4002ABA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TaskAwaiter<StartGameResult> <>u__1;

			[Token(Token = "0x6001F31")]
			[Address(RVA = "0x1AD3B74", Offset = "0x1AD3B74", VA = "0x1AD3B74", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001F32")]
			[Address(RVA = "0x1AD3FB0", Offset = "0x1AD3FB0", VA = "0x1AD3FB0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4002A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Inject]
		protected InputProvider _inputProvider;

		[Token(Token = "0x4002A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Inject]
		private PhotonAvatarSpawner _photonAvatarSpawner;

		[Token(Token = "0x4002A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected bool _isForceRun;

		[Token(Token = "0x4002A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[SerializeField]
		protected bool _isHost;

		[Token(Token = "0x4002A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		protected string _sessionName;

		[Token(Token = "0x4002A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		protected int _maxPlayerCount;

		[Token(Token = "0x4002A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		private bool _dontDestroyOnLoad;

		[Token(Token = "0x1700031C")]
		public bool _doSpawnAvatars
		{
			[Token(Token = "0x6001F15")]
			[Address(RVA = "0x1AD0740", Offset = "0x1AD0740", VA = "0x1AD0740")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F16")]
			[Address(RVA = "0x1AD0748", Offset = "0x1AD0748", VA = "0x1AD0748")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700031D")]
		protected override bool dontDestroyOnLoad
		{
			[Token(Token = "0x6001F17")]
			[Address(RVA = "0x1AD0754", Offset = "0x1AD0754", VA = "0x1AD0754", Slot = "39")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001F18")]
		[Address(RVA = "0x1AD075C", Offset = "0x1AD075C", VA = "0x1AD075C", Slot = "20")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001F19")]
		[Address(RVA = "0x1AD07C8", Offset = "0x1AD07C8", VA = "0x1AD07C8", Slot = "21")]
		[AsyncStateMachine(typeof(<Start>d__14))]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001F1A")]
		[Address(RVA = "0x1AD087C", Offset = "0x1AD087C", VA = "0x1AD087C", Slot = "22")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6001F1B")]
		[Address(RVA = "0x1AD09DC", Offset = "0x1AD09DC", VA = "0x1AD09DC", Slot = "23")]
		public override void OnPlayerJoined(NetworkRunner runner, PlayerRef player)
		{
		}

		[Token(Token = "0x6001F1C")]
		[Address(RVA = "0x1AD0A3C", Offset = "0x1AD0A3C", VA = "0x1AD0A3C", Slot = "24")]
		public override void OnPlayerLeft(NetworkRunner runner, PlayerRef player)
		{
		}

		[Token(Token = "0x6001F1D")]
		[Address(RVA = "0x1AD0A9C", Offset = "0x1AD0A9C", VA = "0x1AD0A9C", Slot = "25")]
		public override void OnInput(NetworkRunner runner, NetworkInput input)
		{
		}

		[Token(Token = "0x6001F1E")]
		[Address(RVA = "0x1AD1010", Offset = "0x1AD1010", VA = "0x1AD1010", Slot = "26")]
		public override void OnInputMissing(NetworkRunner runner, PlayerRef player, NetworkInput input)
		{
		}

		[Token(Token = "0x6001F1F")]
		[Address(RVA = "0x1AD1014", Offset = "0x1AD1014", VA = "0x1AD1014", Slot = "35")]
		[AsyncStateMachine(typeof(<OnHostMigration>d__20))]
		public override void OnHostMigration(NetworkRunner runner, HostMigrationToken hostMigrationToken)
		{
		}

		[Token(Token = "0x6001F20")]
		[Address(RVA = "0x1AD1100", Offset = "0x1AD1100", VA = "0x1AD1100", Slot = "37")]
		public override void OnSceneLoadDone(NetworkRunner runner)
		{
		}

		[Token(Token = "0x6001F21")]
		[Address(RVA = "0x1AD1420", Offset = "0x1AD1420", VA = "0x1AD1420")]
		private void HostMigrationResume(NetworkRunner runner)
		{
		}

		[Token(Token = "0x6001F22")]
		[Address(RVA = "0x1AD19A4", Offset = "0x1AD19A4", VA = "0x1AD19A4")]
		[AsyncStateMachine(typeof(<StartGame>d__23))]
		public UniTask<StartGameResult> StartGame(GameMode mode, string sessionName, int playerCount)
		{
			return default(UniTask<StartGameResult>);
		}

		[Token(Token = "0x6001F23")]
		[Address(RVA = "0x1AD1AD0", Offset = "0x1AD1AD0", VA = "0x1AD1AD0")]
		[AsyncStateMachine(typeof(<StartGame>d__24))]
		public UniTask<StartGameResult> StartGame(GameMode mode, string sessionName)
		{
			return default(UniTask<StartGameResult>);
		}

		[Token(Token = "0x6001F24")]
		[Address(RVA = "0x1AD1BEC", Offset = "0x1AD1BEC", VA = "0x1AD1BEC")]
		[AsyncStateMachine(typeof(<JoinSessionLobby>d__25))]
		public UniTask<StartGameResult> JoinSessionLobby()
		{
			return default(UniTask<StartGameResult>);
		}

		[Token(Token = "0x6001F25")]
		[Address(RVA = "0x1AD1CE0", Offset = "0x1AD1CE0", VA = "0x1AD1CE0")]
		public GFNetworkManager()
		{
		}
	}
	[Token(Token = "0x20007BD")]
	public class MedleyPartyGameCallbacks : MonoBehaviour
	{
		[Token(Token = "0x4002ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Inject]
		private RunnerManagerProvider _runnerManagerProvider;

		[Token(Token = "0x6001F33")]
		[Address(RVA = "0x1AD4008", Offset = "0x1AD4008", VA = "0x1AD4008")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F34")]
		[Address(RVA = "0x1AD40A4", Offset = "0x1AD40A4", VA = "0x1AD40A4")]
		public MedleyPartyGameCallbacks()
		{
		}
	}
	[Token(Token = "0x20007BE")]
	public class MonoNetworkRunnerCallbacks : MonoBehaviour, INetworkRunnerCallbacks
	{
		[Token(Token = "0x4002ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Inject]
		protected RunnerManagerProvider _runnerManagerProvider;

		[Token(Token = "0x6001F35")]
		[Address(RVA = "0x1AD40AC", Offset = "0x1AD40AC", VA = "0x1AD40AC", Slot = "20")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001F36")]
		[Address(RVA = "0x1AD40B0", Offset = "0x1AD40B0", VA = "0x1AD40B0", Slot = "21")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6001F37")]
		[Address(RVA = "0x1AD41B8", Offset = "0x1AD41B8", VA = "0x1AD41B8", Slot = "22")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001F38")]
		[Address(RVA = "0x1AD42C0", Offset = "0x1AD42C0", VA = "0x1AD42C0", Slot = "23")]
		public virtual void OnPlayerJoined(NetworkRunner runner, PlayerRef player)
		{
		}

		[Token(Token = "0x6001F39")]
		[Address(RVA = "0x1AD42C4", Offset = "0x1AD42C4", VA = "0x1AD42C4", Slot = "24")]
		public virtual void OnPlayerLeft(NetworkRunner runner, PlayerRef player)
		{
		}

		[Token(Token = "0x6001F3A")]
		[Address(RVA = "0x1AD42C8", Offset = "0x1AD42C8", VA = "0x1AD42C8", Slot = "25")]
		public virtual void OnInput(NetworkRunner runner, NetworkInput input)
		{
		}

		[Token(Token = "0x6001F3B")]
		[Address(RVA = "0x1AD42CC", Offset = "0x1AD42CC", VA = "0x1AD42CC", Slot = "26")]
		public virtual void OnInputMissing(NetworkRunner runner, PlayerRef player, NetworkInput input)
		{
		}

		[Token(Token = "0x6001F3C")]
		[Address(RVA = "0x1AD42D0", Offset = "0x1AD42D0", VA = "0x1AD42D0", Slot = "27")]
		public virtual void OnShutdown(NetworkRunner runner, ShutdownReason shutdownReason)
		{
		}

		[Token(Token = "0x6001F3D")]
		[Address(RVA = "0x1AD45F4", Offset = "0x1AD45F4", VA = "0x1AD45F4", Slot = "28")]
		public virtual void OnConnectedToServer(NetworkRunner runner)
		{
		}

		[Token(Token = "0x6001F3E")]
		[Address(RVA = "0x1AD45F8", Offset = "0x1AD45F8", VA = "0x1AD45F8", Slot = "29")]
		public virtual void OnDisconnectedFromServer(NetworkRunner runner)
		{
		}

		[Token(Token = "0x6001F3F")]
		[Address(RVA = "0x1AD45FC", Offset = "0x1AD45FC", VA = "0x1AD45FC", Slot = "30")]
		public virtual void OnConnectRequest(NetworkRunner runner, NetworkRunnerCallbackArgs.ConnectRequest request, byte[] token)
		{
		}

		[Token(Token = "0x6001F40")]
		[Address(RVA = "0x1AD4600", Offset = "0x1AD4600", VA = "0x1AD4600", Slot = "31")]
		public virtual void OnConnectFailed(NetworkRunner runner, NetAddress remoteAddress, NetConnectFailedReason reason)
		{
		}

		[Token(Token = "0x6001F41")]
		[Address(RVA = "0x1AD4604", Offset = "0x1AD4604", VA = "0x1AD4604", Slot = "32")]
		public virtual void OnUserSimulationMessage(NetworkRunner runner, SimulationMessagePtr message)
		{
		}

		[Token(Token = "0x6001F42")]
		[Address(RVA = "0x1AD4608", Offset = "0x1AD4608", VA = "0x1AD4608", Slot = "33")]
		public virtual void OnSessionListUpdated(NetworkRunner runner, List<SessionInfo> sessionList)
		{
		}

		[Token(Token = "0x6001F43")]
		[Address(RVA = "0x1AD460C", Offset = "0x1AD460C", VA = "0x1AD460C", Slot = "34")]
		public virtual void OnCustomAuthenticationResponse(NetworkRunner runner, Dictionary<string, object> data)
		{
		}

		[Token(Token = "0x6001F44")]
		[Address(RVA = "0x1AD4610", Offset = "0x1AD4610", VA = "0x1AD4610", Slot = "35")]
		public virtual void OnHostMigration(NetworkRunner runner, HostMigrationToken hostMigrationToken)
		{
		}

		[Token(Token = "0x6001F45")]
		[Address(RVA = "0x1AD4614", Offset = "0x1AD4614", VA = "0x1AD4614", Slot = "36")]
		public virtual void OnReliableDataReceived(NetworkRunner runner, PlayerRef player, ArraySegment<byte> data)
		{
		}

		[Token(Token = "0x6001F46")]
		[Address(RVA = "0x1AD4618", Offset = "0x1AD4618", VA = "0x1AD4618", Slot = "37")]
		public virtual void OnSceneLoadDone(NetworkRunner runner)
		{
		}

		[Token(Token = "0x6001F47")]
		[Address(RVA = "0x1AD461C", Offset = "0x1AD461C", VA = "0x1AD461C", Slot = "38")]
		public virtual void OnSceneLoadStart(NetworkRunner runner)
		{
		}

		[Token(Token = "0x6001F48")]
		[Address(RVA = "0x1AD4620", Offset = "0x1AD4620", VA = "0x1AD4620")]
		public MonoNetworkRunnerCallbacks()
		{
		}
	}
	[Token(Token = "0x20007BF")]
	[NetworkBehaviourWeaved(2)]
	public class NetworkedAvatarManager : NetworkBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x20007C0")]
		[CompilerGenerated]
		private struct <Start>d__19 : IAsyncStateMachine
		{
			[Token(Token = "0x4002ACA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002ACB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4002ACC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public NetworkedAvatarManager <>4__this;

			[Token(Token = "0x4002ACD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6001F5D")]
			[Address(RVA = "0x1AD526C", Offset = "0x1AD526C", VA = "0x1AD526C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001F5E")]
			[Address(RVA = "0x1AD5794", Offset = "0x1AD5794", VA = "0x1AD5794", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20007C1")]
		[CompilerGenerated]
		private struct <SetAvatarUnitask>d__23 : IAsyncStateMachine
		{
			[Token(Token = "0x4002ACE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002ACF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4002AD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public NetworkedAvatarManager <>4__this;

			[Token(Token = "0x4002AD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string prefabName;

			[Token(Token = "0x4002AD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private string <path>5__2;

			[Token(Token = "0x4002AD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private UnityAsyncExtensions.ResourceRequestAwaiter <>u__1;

			[Token(Token = "0x6001F5F")]
			[Address(RVA = "0x1AD57A0", Offset = "0x1AD57A0", VA = "0x1AD57A0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001F60")]
			[Address(RVA = "0x1AD5E10", Offset = "0x1AD5E10", VA = "0x1AD5E10", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4002ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private string _avatarPrefabFolder;

		[Token(Token = "0x4002ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Transform headIKTransform;

		[Token(Token = "0x4002ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Transform leftIKTransform;

		[Token(Token = "0x4002AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Transform rightIKTransform;

		[Token(Token = "0x4002AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool isLocalTracking;

		[Token(Token = "0x4002AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private VRIK _vrik;

		[Token(Token = "0x4002AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private GameObject avatar;

		[Token(Token = "0x4002AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		[DefaultForProperty("playerID", 0, 1)]
		private int _playerID;

		[Token(Token = "0x4002AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[DefaultForProperty("isJumping", 1, 1)]
		private NetworkBool _isJumping;

		[Token(Token = "0x4002AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Changed<NetworkedAvatarManager> $IL2CPP_CHANGED;

		[Token(Token = "0x4002AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static ChangedDelegate<NetworkedAvatarManager> $IL2CPP_CHANGED_DELEGATE;

		[Token(Token = "0x4002AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static NetworkBehaviourCallbacks<NetworkedAvatarManager> $IL2CPP_NETWORK_BEHAVIOUR_CALLBACKS;

		[Token(Token = "0x1700031E")]
		[Networked]
		[NetworkedWeaved(0, 1)]
		public int playerID
		{
			[Token(Token = "0x6001F49")]
			[Address(RVA = "0x1AD4628", Offset = "0x1AD4628", VA = "0x1AD4628")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001F4A")]
			[Address(RVA = "0x1AD468C", Offset = "0x1AD468C", VA = "0x1AD468C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700031F")]
		[Networked]
		[NetworkedWeaved(1, 1)]
		private NetworkBool isJumping
		{
			[Token(Token = "0x6001F4B")]
			[Address(RVA = "0x1AD46F0", Offset = "0x1AD46F0", VA = "0x1AD46F0")]
			get
			{
				return default(NetworkBool);
			}
			[Token(Token = "0x6001F4C")]
			[Address(RVA = "0x1AD4754", Offset = "0x1AD4754", VA = "0x1AD4754")]
			set
			{
			}
		}

		[Token(Token = "0x17000320")]
		public bool isInitialized
		{
			[Token(Token = "0x6001F4D")]
			[Address(RVA = "0x1AD47B8", Offset = "0x1AD47B8", VA = "0x1AD47B8")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F4E")]
			[Address(RVA = "0x1AD47C0", Offset = "0x1AD47C0", VA = "0x1AD47C0")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001F4F")]
		[Address(RVA = "0x1AD47CC", Offset = "0x1AD47CC", VA = "0x1AD47CC")]
		[AsyncStateMachine(typeof(<Start>d__19))]
		private void Start()
		{
		}

		[Token(Token = "0x6001F50")]
		[Address(RVA = "0x1AD4880", Offset = "0x1AD4880", VA = "0x1AD4880")]
		[Rpc(RpcSources.All, RpcTargets.StateAuthority)]
		private void RpcSetIsJumping(bool value)
		{
		}

		[Token(Token = "0x6001F51")]
		[Address(RVA = "0x1AD4A10", Offset = "0x1AD4A10", VA = "0x1AD4A10", Slot = "5")]
		public override void FixedUpdateNetwork()
		{
		}

		[Token(Token = "0x6001F52")]
		[Address(RVA = "0x1AD4AE4", Offset = "0x1AD4AE4", VA = "0x1AD4AE4")]
		public void PlayerIDSet(int id)
		{
		}

		[Token(Token = "0x6001F53")]
		[Address(RVA = "0x1AD4AE8", Offset = "0x1AD4AE8", VA = "0x1AD4AE8")]
		[AsyncStateMachine(typeof(<SetAvatarUnitask>d__23))]
		private UniTaskVoid SetAvatarUnitask(string prefabName, CancellationToken token)
		{
			return default(UniTaskVoid);
		}

		[Token(Token = "0x6001F54")]
		[Address(RVA = "0x1AD4BA8", Offset = "0x1AD4BA8", VA = "0x1AD4BA8")]
		private void SetVRIK(GameObject avatar, bool tryGetComponent = true)
		{
		}

		[Token(Token = "0x6001F55")]
		[Address(RVA = "0x1AD4D60", Offset = "0x1AD4D60", VA = "0x1AD4D60")]
		[Rpc(RpcSources.All, RpcTargets.All)]
		public void Rpc_InitializeAvatarTransform(int id, Vector3 targetPos)
		{
		}

		[Token(Token = "0x6001F56")]
		[Address(RVA = "0x1AD5050", Offset = "0x1AD5050", VA = "0x1AD5050")]
		public NetworkedAvatarManager()
		{
		}

		[Token(Token = "0x6001F59")]
		[Address(RVA = "0x1AD50D4", Offset = "0x1AD50D4", VA = "0x1AD50D4", Slot = "10")]
		public override void CopyBackingFieldsToState(bool P_0)
		{
		}

		[Token(Token = "0x6001F5A")]
		[Address(RVA = "0x1AD50F4", Offset = "0x1AD50F4", VA = "0x1AD50F4", Slot = "11")]
		public override void CopyStateToBackingFields()
		{
		}

		[Token(Token = "0x6001F5B")]
		[Address(RVA = "0x1AD5118", Offset = "0x1AD5118", VA = "0x1AD5118")]
		[NetworkRpcWeavedInvoker(1, 7, 1)]
		protected unsafe static void RpcSetIsJumping@Invoker(NetworkBehaviour behaviour, SimulationMessage* message)
		{
		}

		[Token(Token = "0x6001F5C")]
		[Address(RVA = "0x1AD51B0", Offset = "0x1AD51B0", VA = "0x1AD51B0")]
		[NetworkRpcWeavedInvoker(2, 7, 7)]
		protected unsafe static void Rpc_InitializeAvatarTransform@Invoker(NetworkBehaviour behaviour, SimulationMessage* message)
		{
		}
	}
	[Token(Token = "0x20007C2")]
	public class NetworkSceneChanger : MonoBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x20007C3")]
		[CompilerGenerated]
		private struct <ChangeScene>d__1 : IAsyncStateMachine
		{
			[Token(Token = "0x4002AD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002AD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4002AD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public NetworkSceneChanger <>4__this;

			[Token(Token = "0x4002AD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NetworkRunner runner;

			[Token(Token = "0x4002AD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int buildIndex;

			[Token(Token = "0x4002ADA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private Cysharp.Threading.Tasks.YieldAwaitable.Awaiter <>u__1;

			[Token(Token = "0x4002ADB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask.Awaiter <>u__2;

			[Token(Token = "0x6001F63")]
			[Address(RVA = "0x1AD5FA8", Offset = "0x1AD5FA8", VA = "0x1AD5FA8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001F64")]
			[Address(RVA = "0x1AD6690", Offset = "0x1AD6690", VA = "0x1AD6690", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4002AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Inject]
		private InputProvider _inputProvider;

		[Token(Token = "0x6001F61")]
		[Address(RVA = "0x1AD5E1C", Offset = "0x1AD5E1C", VA = "0x1AD5E1C")]
		[AsyncStateMachine(typeof(<ChangeScene>d__1))]
		public UniTask ChangeScene(NetworkRunner runner, int buildIndex)
		{
			return default(UniTask);
		}

		[Token(Token = "0x6001F62")]
		[Address(RVA = "0x1AD5FA0", Offset = "0x1AD5FA0", VA = "0x1AD5FA0")]
		public NetworkSceneChanger()
		{
		}
	}
	[Token(Token = "0x20007C4")]
	[NetworkBehaviourWeaved(1)]
	public class PhotonAvatarController : NetworkBehaviour
	{
		[Token(Token = "0x4002ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private PhotonAvatarType _photonAvatarType;

		[Token(Token = "0x4002ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[DefaultForProperty("_photonAvatarTypeNum", 0, 1)]
		private int __photonAvatarTypeNum;

		[Token(Token = "0x4002ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Changed<PhotonAvatarController> $IL2CPP_CHANGED;

		[Token(Token = "0x4002ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static ChangedDelegate<PhotonAvatarController> $IL2CPP_CHANGED_DELEGATE;

		[Token(Token = "0x4002AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static NetworkBehaviourCallbacks<PhotonAvatarController> $IL2CPP_NETWORK_BEHAVIOUR_CALLBACKS;

		[Token(Token = "0x17000321")]
		[Networked]
		[NetworkedWeaved(0, 1)]
		private int _photonAvatarTypeNum
		{
			[Token(Token = "0x6001F65")]
			[Address(RVA = "0x1AD669C", Offset = "0x1AD669C", VA = "0x1AD669C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001F66")]
			[Address(RVA = "0x1AD6700", Offset = "0x1AD6700", VA = "0x1AD6700")]
			set
			{
			}
		}

		[Token(Token = "0x17000322")]
		public int PhotonAvatarTypeNum
		{
			[Token(Token = "0x6001F67")]
			[Address(RVA = "0x1AD6764", Offset = "0x1AD6764", VA = "0x1AD6764")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001F68")]
		[Address(RVA = "0x1AD6768", Offset = "0x1AD6768", VA = "0x1AD6768")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F69")]
		[Address(RVA = "0x1AD6770", Offset = "0x1AD6770", VA = "0x1AD6770", Slot = "5")]
		public override void FixedUpdateNetwork()
		{
		}

		[Token(Token = "0x6001F6A")]
		[Address(RVA = "0x1AD68EC", Offset = "0x1AD68EC", VA = "0x1AD68EC")]
		public PhotonAvatarController()
		{
		}

		[Token(Token = "0x6001F6B")]
		[Address(RVA = "0x1AD68F4", Offset = "0x1AD68F4", VA = "0x1AD68F4", Slot = "10")]
		public override void CopyBackingFieldsToState(bool P_0)
		{
		}

		[Token(Token = "0x6001F6C")]
		[Address(RVA = "0x1AD68FC", Offset = "0x1AD68FC", VA = "0x1AD68FC", Slot = "11")]
		public override void CopyStateToBackingFields()
		{
		}
	}
	[Token(Token = "0x20007C5")]
	public enum PhotonAvatarType
	{
		[Token(Token = "0x4002AE2")]
		Head,
		[Token(Token = "0x4002AE3")]
		RightHand,
		[Token(Token = "0x4002AE4")]
		LeftHand
	}
	[StructLayout(2)]
	[Token(Token = "0x20007C6")]
	[NetworkInputWeaved(21)]
	public struct PhotonAvatarInputData : INetworkInput
	{
		[Token(Token = "0x4002AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 HeadPosition;

		[Token(Token = "0x4002AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 RightHandPosition;

		[Token(Token = "0x4002AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 LeftHandPosition;

		[Token(Token = "0x4002AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Quaternion HeadRotation;

		[Token(Token = "0x4002AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Quaternion RightHandRotation;

		[Token(Token = "0x4002AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Quaternion LeftHandRotation;
	}
	[Token(Token = "0x20007C7")]
	public class PhotonAvatarSpawner : MonoBehaviour
	{
		[Token(Token = "0x4002AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<PhotonAvatar> _avatarPrefabDict;

		[Token(Token = "0x4002AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private NetworkObject _playerNetworkObject;

		[Token(Token = "0x17000323")]
		public List<NetworkObject> _spawnedPlayerNetworkObjects
		{
			[Token(Token = "0x6001F6D")]
			[Address(RVA = "0x1AD6914", Offset = "0x1AD6914", VA = "0x1AD6914")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F6E")]
			[Address(RVA = "0x1AD691C", Offset = "0x1AD691C", VA = "0x1AD691C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001F6F")]
		[Address(RVA = "0x1AD6924", Offset = "0x1AD6924", VA = "0x1AD6924")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001F70")]
		[Address(RVA = "0x1AD69A0", Offset = "0x1AD69A0", VA = "0x1AD69A0")]
		public void Spawn(NetworkRunner runner, PlayerRef player)
		{
		}

		[Token(Token = "0x6001F71")]
		[Address(RVA = "0x1AD6D9C", Offset = "0x1AD6D9C", VA = "0x1AD6D9C")]
		public void Despawn(NetworkRunner runner, PlayerRef player)
		{
		}

		[Token(Token = "0x6001F72")]
		[Address(RVA = "0x1AD70B0", Offset = "0x1AD70B0", VA = "0x1AD70B0")]
		public void ResetPhotonAvatars()
		{
		}

		[Token(Token = "0x6001F73")]
		[Address(RVA = "0x1AD712C", Offset = "0x1AD712C", VA = "0x1AD712C")]
		public PhotonAvatarSpawner()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20007C8")]
	public class PhotonAvatar
	{
		[Token(Token = "0x4002AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private PhotonAvatarType _photonAvatarType;

		[Token(Token = "0x4002AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PhotonAvatarController _photonAvatarPrefab;

		[Token(Token = "0x17000324")]
		public PhotonAvatarType PhotonAvatarType
		{
			[Token(Token = "0x6001F75")]
			[Address(RVA = "0x1AD71E4", Offset = "0x1AD71E4", VA = "0x1AD71E4")]
			get
			{
				return default(PhotonAvatarType);
			}
		}

		[Token(Token = "0x17000325")]
		public PhotonAvatarController PhotonAvatarPrefab
		{
			[Token(Token = "0x6001F76")]
			[Address(RVA = "0x1AD71EC", Offset = "0x1AD71EC", VA = "0x1AD71EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F77")]
		[Address(RVA = "0x1AD71F4", Offset = "0x1AD71F4", VA = "0x1AD71F4")]
		public PhotonAvatar()
		{
		}
	}
	[Token(Token = "0x20007C9")]
	[NetworkBehaviourWeaved(0)]
	public class PlayerVoiceManager : VoiceNetworkObject
	{
		[Token(Token = "0x4002AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private InputProvider _inputProvider;

		[Token(Token = "0x4002AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Changed<PlayerVoiceManager> $IL2CPP_CHANGED;

		[Token(Token = "0x4002AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static ChangedDelegate<PlayerVoiceManager> $IL2CPP_CHANGED_DELEGATE;

		[Token(Token = "0x4002AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static NetworkBehaviourCallbacks<PlayerVoiceManager> $IL2CPP_NETWORK_BEHAVIOUR_CALLBACKS;

		[Token(Token = "0x6001F78")]
		[Address(RVA = "0x1AD71FC", Offset = "0x1AD71FC", VA = "0x1AD71FC")]
		[Inject]
		private void Injection(InputProvider inputProvider)
		{
		}

		[Token(Token = "0x6001F79")]
		[Address(RVA = "0x1AD7204", Offset = "0x1AD7204", VA = "0x1AD7204")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F7A")]
		[Address(RVA = "0x1AD75A4", Offset = "0x1AD75A4", VA = "0x1AD75A4", Slot = "5")]
		public override void FixedUpdateNetwork()
		{
		}

		[Token(Token = "0x6001F7B")]
		[Address(RVA = "0x1AD7368", Offset = "0x1AD7368", VA = "0x1AD7368")]
		[Rpc(RpcSources.All, RpcTargets.All)]
		public void RPC_OnMuteChanged(int playerId, bool isMuted)
		{
		}

		[Token(Token = "0x6001F7C")]
		[Address(RVA = "0x1AD765C", Offset = "0x1AD765C", VA = "0x1AD765C")]
		public PlayerVoiceManager()
		{
		}

		[Token(Token = "0x6001F7D")]
		[Address(RVA = "0x1AD7664", Offset = "0x1AD7664", VA = "0x1AD7664")]
		[NetworkRpcWeavedInvoker(1, 7, 7)]
		protected unsafe static void RPC_OnMuteChanged@Invoker(NetworkBehaviour behaviour, SimulationMessage* message)
		{
		}
	}
	[Token(Token = "0x20007CA")]
	[NetworkBehaviourWeaved(2)]
	public class RandomMatchUseCase : NetworkBehaviour
	{
		[Token(Token = "0x4002AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		[DefaultForProperty("RemainingSeconds", 0, 1)]
		private float _RemainingSeconds;

		[Token(Token = "0x4002AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[DefaultForProperty("PreparedCount", 1, 1)]
		private int _PreparedCount;

		[Token(Token = "0x4002AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private readonly Subject<float> _randomMatchTimeUpdatedSubject;

		[Token(Token = "0x4002AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private readonly Subject<bool> _randomMatchCompleteSubject;

		[Token(Token = "0x4002AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int _targetTick;

		[Token(Token = "0x4002AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private int _initialTick;

		[Token(Token = "0x4002AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float _maxRemainingSeconds;

		[Token(Token = "0x4002AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private int _minPlayersCount;

		[Token(Token = "0x4002AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int _maxPlayersCount;

		[Token(Token = "0x4002AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Changed<RandomMatchUseCase> $IL2CPP_CHANGED;

		[Token(Token = "0x4002AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static ChangedDelegate<RandomMatchUseCase> $IL2CPP_CHANGED_DELEGATE;

		[Token(Token = "0x4002AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static NetworkBehaviourCallbacks<RandomMatchUseCase> $IL2CPP_NETWORK_BEHAVIOUR_CALLBACKS;

		[Token(Token = "0x17000326")]
		[Networked]
		[NetworkedWeaved(0, 1)]
		public float RemainingSeconds
		{
			[Token(Token = "0x6001F7E")]
			[Address(RVA = "0x1AD7700", Offset = "0x1AD7700", VA = "0x1AD7700")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F7F")]
			[Address(RVA = "0x1AD7774", Offset = "0x1AD7774", VA = "0x1AD7774")]
			private set
			{
			}
		}

		[Token(Token = "0x17000327")]
		[Networked]
		[NetworkedWeaved(1, 1)]
		private int PreparedCount
		{
			[Token(Token = "0x6001F80")]
			[Address(RVA = "0x1AD7814", Offset = "0x1AD7814", VA = "0x1AD7814")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001F81")]
			[Address(RVA = "0x1AD7878", Offset = "0x1AD7878", VA = "0x1AD7878")]
			set
			{
			}
		}

		[Token(Token = "0x17000328")]
		private IObserver<float> RandomMatchTimeUpdatedPublisher
		{
			[Token(Token = "0x6001F82")]
			[Address(RVA = "0x1AD78DC", Offset = "0x1AD78DC", VA = "0x1AD78DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000329")]
		public IObservable<float> OnRandomMatchTimeUpdated
		{
			[Token(Token = "0x6001F83")]
			[Address(RVA = "0x1AD78E4", Offset = "0x1AD78E4", VA = "0x1AD78E4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700032A")]
		private IObserver<bool> RandomMatchCompletePublisher
		{
			[Token(Token = "0x6001F84")]
			[Address(RVA = "0x1AD78EC", Offset = "0x1AD78EC", VA = "0x1AD78EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700032B")]
		public IObservable<bool> OnRandomMatchComplete
		{
			[Token(Token = "0x6001F85")]
			[Address(RVA = "0x1AD78F4", Offset = "0x1AD78F4", VA = "0x1AD78F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F86")]
		[Address(RVA = "0x1AD78FC", Offset = "0x1AD78FC", VA = "0x1AD78FC")]
		public void SetUp(float initialWaitSeconds, int minPlayersCount, int maxPlayersCount)
		{
		}

		[Token(Token = "0x6001F87")]
		[Address(RVA = "0x1AD7934", Offset = "0x1AD7934", VA = "0x1AD7934")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F88")]
		[Address(RVA = "0x1AD7A18", Offset = "0x1AD7A18", VA = "0x1AD7A18", Slot = "5")]
		public override void FixedUpdateNetwork()
		{
		}

		[Token(Token = "0x6001F89")]
		[Address(RVA = "0x1AD7CE8", Offset = "0x1AD7CE8", VA = "0x1AD7CE8")]
		public RandomMatchUseCase()
		{
		}

		[Token(Token = "0x6001F8A")]
		[Address(RVA = "0x1AD7DC0", Offset = "0x1AD7DC0", VA = "0x1AD7DC0", Slot = "10")]
		public override void CopyBackingFieldsToState(bool P_0)
		{
		}

		[Token(Token = "0x6001F8B")]
		[Address(RVA = "0x1AD7DE0", Offset = "0x1AD7DE0", VA = "0x1AD7DE0", Slot = "11")]
		public override void CopyStateToBackingFields()
		{
		}
	}
	[Token(Token = "0x20007CB")]
	public class RunnerManager : MonoBehaviour
	{
		[Token(Token = "0x4002B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private NetworkRunner _runner;

		[Token(Token = "0x4002B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private FusionVoiceClient _voiceClient;

		[Token(Token = "0x4002B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private NetworkSceneChanger _networkSceneChanger;

		[Token(Token = "0x1700032C")]
		public NetworkRunner Runner
		{
			[Token(Token = "0x6001F8C")]
			[Address(RVA = "0x1AD7E04", Offset = "0x1AD7E04", VA = "0x1AD7E04")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700032D")]
		public FusionVoiceClient VoiceClient
		{
			[Token(Token = "0x6001F8D")]
			[Address(RVA = "0x1AD7E0C", Offset = "0x1AD7E0C", VA = "0x1AD7E0C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700032E")]
		public NetworkSceneChanger NetworkSceneChanger
		{
			[Token(Token = "0x6001F8E")]
			[Address(RVA = "0x1AD7E14", Offset = "0x1AD7E14", VA = "0x1AD7E14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F8F")]
		[Address(RVA = "0x1AD7E1C", Offset = "0x1AD7E1C", VA = "0x1AD7E1C")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6001F90")]
		[Address(RVA = "0x1AD7E3C", Offset = "0x1AD7E3C", VA = "0x1AD7E3C")]
		public RunnerManager()
		{
		}
	}
	[Token(Token = "0x20007CC")]
	public class RunnerManagerProvider : MonoBehaviour
	{
		[Token(Token = "0x4002B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Inject]
		private DiContainer _container;

		[Token(Token = "0x4002B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private RunnerManager _runnerManagerPrefab;

		[Token(Token = "0x4002B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RunnerManager _runnerManager;

		[Token(Token = "0x1700032F")]
		public RunnerManager RunnerManager
		{
			[Token(Token = "0x6001F91")]
			[Address(RVA = "0x1AD7E44", Offset = "0x1AD7E44", VA = "0x1AD7E44")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F92")]
		[Address(RVA = "0x1AD4518", Offset = "0x1AD4518", VA = "0x1AD4518")]
		public void OnEnter()
		{
		}

		[Token(Token = "0x6001F93")]
		[Address(RVA = "0x1AD4458", Offset = "0x1AD4458", VA = "0x1AD4458")]
		public void OnLeaveMultiPlay()
		{
		}

		[Token(Token = "0x6001F94")]
		[Address(RVA = "0x1AD7E4C", Offset = "0x1AD7E4C", VA = "0x1AD7E4C")]
		public RunnerManagerProvider()
		{
		}
	}
	[Token(Token = "0x20007CD")]
	public abstract class SingletonMonoNetworkRunnerCallbacks<T> : MonoNetworkRunnerCallbacks where T : MonoNetworkRunnerCallbacks
	{
		[Token(Token = "0x4002B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static T instance;

		[Token(Token = "0x17000330")]
		protected abstract bool dontDestroyOnLoad
		{
			[Token(Token = "0x6001F95")]
			get;
		}

		[Token(Token = "0x17000331")]
		public static bool HasInstance
		{
			[Token(Token = "0x6001F96")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000332")]
		public static T Instance
		{
			[Token(Token = "0x6001F97")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F98")]
		public static T GetOrCreateInstance([Optional] GameObject attachTo)
		{
			return null;
		}

		[Token(Token = "0x6001F99")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001F9A")]
		protected SingletonMonoNetworkRunnerCallbacks()
		{
		}
	}
}
namespace Imacreate.GrooveFitIsland.Core.Utils
{
	[Token(Token = "0x20007CE")]
	public static class CommonUtils
	{
		[Token(Token = "0x6001F9B")]
		public static IEnumerable<T> IterateEnum<T>() where T : Enum
		{
			return null;
		}

		[Token(Token = "0x6001F9C")]
		[Address(RVA = "0x1AD7E54", Offset = "0x1AD7E54", VA = "0x1AD7E54")]
		public static string ToISO8601_UTC(this DateTime utcDateTime)
		{
			return null;
		}

		[Token(Token = "0x6001F9D")]
		public static Dictionary<TValue, TKey> Reverse<TKey, TValue>(this IDictionary<TKey, TValue> source)
		{
			return null;
		}

		[Token(Token = "0x6001F9E")]
		public static TYPE GetDefaultIfMissing<TYPE>(this Dictionary<string, TYPE> dict, string key, [Optional] TYPE deafultValue) where TYPE : Enum
		{
			return (TYPE)null;
		}
	}
	[Token(Token = "0x20007CF")]
	public class MinimumFirebaseApiProviderZenjectInstaller : MonoInstaller
	{
		[Token(Token = "0x20007D0")]
		private class DummySubsciber : ISubscriber<GameStatus>
		{
			[Token(Token = "0x6001FA1")]
			[Address(RVA = "0x1AD7F58", Offset = "0x1AD7F58", VA = "0x1AD7F58", Slot = "4")]
			public IDisposable Subscribe(IMessageHandler<GameStatus> handler, params MessageHandlerFilter<GameStatus>[] filters)
			{
				return null;
			}

			[Token(Token = "0x6001FA2")]
			[Address(RVA = "0x1AD7FBC", Offset = "0x1AD7FBC", VA = "0x1AD7FBC")]
			public DummySubsciber()
			{
			}
		}

		[Token(Token = "0x20007D1")]
		private class Disposable : IDisposable
		{
			[Token(Token = "0x6001FA3")]
			[Address(RVA = "0x1AD7FC4", Offset = "0x1AD7FC4", VA = "0x1AD7FC4", Slot = "4")]
			public void Dispose()
			{
			}

			[Token(Token = "0x6001FA4")]
			[Address(RVA = "0x1AD7FB4", Offset = "0x1AD7FB4", VA = "0x1AD7FB4")]
			public Disposable()
			{
			}
		}

		[Token(Token = "0x6001F9F")]
		[Address(RVA = "0x1AD7ED4", Offset = "0x1AD7ED4", VA = "0x1AD7ED4", Slot = "8")]
		public override void InstallBindings()
		{
		}

		[Token(Token = "0x6001FA0")]
		[Address(RVA = "0x1AD7F50", Offset = "0x1AD7F50", VA = "0x1AD7F50")]
		public MinimumFirebaseApiProviderZenjectInstaller()
		{
		}
	}
}
namespace Imacreate.GrooveFitIsland.Core.PicoCoreLibrary
{
	[Token(Token = "0x20007D2")]
	public static class PicoApi
	{
	}
}
namespace Imacreate.GrooveFitIsland.Core.FirebaseCoreLibrary
{
	[Token(Token = "0x20007D3")]
	public class FirebaseApi
	{
		[StructLayout(3)]
		[Token(Token = "0x20007D4")]
		[CompilerGenerated]
		private struct <CreateDocument>d__5<T> : IAsyncStateMachine
		{
			[Token(Token = "0x4002B09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002B0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4002B0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T data;

			[Token(Token = "0x4002B0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FirebaseApi <>4__this;

			[Token(Token = "0x4002B0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string path;

			[Token(Token = "0x4002B0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string documentId;

			[Token(Token = "0x4002B0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string idToken;

			[Token(Token = "0x4002B10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CancellationToken token;

			[Token(Token = "0x4002B11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private UnityWebRequest <req>5__2;

			[Token(Token = "0x4002B12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private UniTask<UnityWebRequest>.Awaiter <>u__1;

			[Token(Token = "0x6001FBB")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001FBC")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20007D5")]
		[CompilerGenerated]
		private struct <SaveToFirestore>d__6<T> : IAsyncStateMachine
		{
			[Token(Token = "0x4002B13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002B14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4002B15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T data;

			[Token(Token = "0x4002B16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FirebaseApi <>4__this;

			[Token(Token = "0x4002B17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string documentPath;

			[Token(Token = "0x4002B18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string idToken;

			[Token(Token = "0x4002B19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CancellationToken token;

			[Token(Token = "0x4002B1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6001FBD")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001FBE")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20007D6")]
		[CompilerGenerated]
		private struct <SaveToFirestore>d__7 : IAsyncStateMachine
		{
			[Token(Token = "0x4002B1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002B1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4002B1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public FirebaseApi <>4__this;

			[Token(Token = "0x4002B1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string path;

			[Token(Token = "0x4002B1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string jsonStr;

			[Token(Token = "0x4002B20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string idToken;

			[Token(Token = "0x4002B21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public CancellationToken token;

			[Token(Token = "0x4002B22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private UnityWebRequest <req>5__2;

			[Token(Token = "0x4002B23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private UniTask<UnityWebRequest>.Awaiter <>u__1;

			[Token(Token = "0x6001FBF")]
			[Address(RVA = "0x1AD96EC", Offset = "0x1AD96EC", VA = "0x1AD96EC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001FC0")]
			[Address(RVA = "0x1AD9DEC", Offset = "0x1AD9DEC", VA = "0x1AD9DEC", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20007D8")]
		[CompilerGenerated]
		private struct <UpdateDocumentInFirestore>d__8 : IAsyncStateMachine
		{
			[Token(Token = "0x4002B27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002B28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4002B29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string[] fields;

			[Token(Token = "0x4002B2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FirebaseApi <>4__this;

			[Token(Token = "0x4002B2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string path;

			[Token(Token = "0x4002B2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string jsonStr;

			[Token(Token = "0x4002B2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string idToken;

			[Token(Token = "0x4002B2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public CancellationToken token;

			[Token(Token = "0x4002B2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private UnityWebRequest <req>5__2;

			[Token(Token = "0x4002B30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private UniTask<UnityWebRequest>.Awaiter <>u__1;

			[Token(Token = "0x6001FC5")]
			[Address(RVA = "0x1AD9F70", Offset = "0x1AD9F70", VA = "0x1AD9F70", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001FC6")]
			[Address(RVA = "0x1ADA7E8", Offset = "0x1ADA7E8", VA = "0x1ADA7E8", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20007D9")]
		[CompilerGenerated]
		private struct <GetFromFirestore>d__9 : IAsyncStateMachine
		{
			[Token(Token = "0x4002B31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002B32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<string> <>t__builder;

			[Token(Token = "0x4002B33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string[] fields;

			[Token(Token = "0x4002B34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public FirebaseApi <>4__this;

			[Token(Token = "0x4002B35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string path;

			[Token(Token = "0x4002B36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string idToken;

			[Token(Token = "0x4002B37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public CancellationToken token;

			[Token(Token = "0x4002B38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private UnityWebRequest <req>5__2;

			[Token(Token = "0x4002B39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private UniTask<UnityWebRequest>.Awaiter <>u__1;

			[Token(Token = "0x6001FC7")]
			[Address(RVA = "0x1ADA7F4", Offset = "0x1ADA7F4", VA = "0x1ADA7F4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001FC8")]
			[Address(RVA = "0x1ADB144", Offset = "0x1ADB144", VA = "0x1ADB144", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20007DA")]
		[CompilerGenerated]
		private struct <RunQueryOnFirestore>d__10 : IAsyncStateMachine
		{
			[Token(Token = "0x4002B3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002B3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<string> <>t__builder;

			[Token(Token = "0x4002B3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FirebaseApi <>4__this;

			[Token(Token = "0x4002B3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string path;

			[Token(Token = "0x4002B3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string query;

			[Token(Token = "0x4002B3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string idToken;

			[Token(Token = "0x4002B40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public CancellationToken token;

			[Token(Token = "0x4002B41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private UnityWebRequest <req>5__2;

			[Token(Token = "0x4002B42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private UniTask<UnityWebRequest>.Awaiter <>u__1;

			[Token(Token = "0x6001FC9")]
			[Address(RVA = "0x1ADB19C", Offset = "0x1ADB19C", VA = "0x1ADB19C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001FCA")]
			[Address(RVA = "0x1ADB918", Offset = "0x1ADB918", VA = "0x1ADB918", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20007DB")]
		[CompilerGenerated]
		private struct <SignUpWithPassword>d__11 : IAsyncStateMachine
		{
			[Token(Token = "0x4002B43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002B44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<SignupResponse> <>t__builder;

			[Token(Token = "0x4002B45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string email;

			[Token(Token = "0x4002B46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string password;

			[Token(Token = "0x4002B47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public FirebaseApi <>4__this;

			[Token(Token = "0x4002B48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public CancellationToken token;

			[Token(Token = "0x4002B49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private UniTask<SignupResponse>.Awaiter <>u__1;

			[Token(Token = "0x6001FCB")]
			[Address(RVA = "0x1ADB970", Offset = "0x1ADB970", VA = "0x1ADB970", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001FCC")]
			[Address(RVA = "0x1ADBEB4", Offset = "0x1ADBEB4", VA = "0x1ADBEB4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20007DC")]
		[CompilerGenerated]
		private struct <SignInWithPassword>d__12 : IAsyncStateMachine
		{
			[Token(Token = "0x4002B4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002B4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<SignupResponse> <>t__builder;

			[Token(Token = "0x4002B4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string email;

			[Token(Token = "0x4002B4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string password;

			[Token(Token = "0x4002B4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public FirebaseApi <>4__this;

			[Token(Token = "0x4002B4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public CancellationToken token;

			[Token(Token = "0x4002B50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private UniTask<SignupResponse>.Awaiter <>u__1;

			[Token(Token = "0x6001FCD")]
			[Address(RVA = "0x1ADBF0C", Offset = "0x1ADBF0C", VA = "0x1ADBF0C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001FCE")]
			[Address(RVA = "0x1ADC440", Offset = "0x1ADC440", VA = "0x1ADC440", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20007DD")]
		[CompilerGenerated]
		private struct <SignUpWithDisplayName>d__13 : IAsyncStateMachine
		{
			[Token(Token = "0x4002B51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002B52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<UpdateProfileResponse> <>t__builder;

			[Token(Token = "0x4002B53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string email;

			[Token(Token = "0x4002B54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string password;

			[Token(Token = "0x4002B55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public FirebaseApi <>4__this;

			[Token(Token = "0x4002B56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public CancellationToken token;

			[Token(Token = "0x4002B57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public string displayName;

			[Token(Token = "0x4002B58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private SignupResponse <signupResponse>5__2;

			[Token(Token = "0x4002B59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private UniTask<SignupResponse>.Awaiter <>u__1;

			[Token(Token = "0x4002B5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private UniTask<IdTokenResponse>.Awaiter <>u__2;

			[Token(Token = "0x4002B5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			private UniTask<UpdateProfileResponse>.Awaiter <>u__3;

			[Token(Token = "0x6001FCF")]
			[Address(RVA = "0x1ADC498", Offset = "0x1ADC498", VA = "0x1ADC498", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001FD0")]
			[Address(RVA = "0x1ADD094", Offset = "0x1ADD094", VA = "0x1ADD094", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20007DE")]
		[CompilerGenerated]
		private struct <SignUpAnonymousWithDisplayName>d__14 : IAsyncStateMachine
		{
			[Token(Token = "0x4002B5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002B5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<UpdateProfileResponse> <>t__builder;

			[Token(Token = "0x4002B5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FirebaseApi <>4__this;

			[Token(Token = "0x4002B5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken token;

			[Token(Token = "0x4002B60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string displayName;

			[Token(Token = "0x4002B61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private SignupResponse <signupResponse>5__2;

			[Token(Token = "0x4002B62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private UniTask<SignupResponse>.Awaiter <>u__1;

			[Token(Token = "0x4002B63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private UniTask<IdTokenResponse>.Awaiter <>u__2;

			[Token(Token = "0x4002B64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private UniTask<UpdateProfileResponse>.Awaiter <>u__3;

			[Token(Token = "0x6001FD1")]
			[Address(RVA = "0x1ADD0EC", Offset = "0x1ADD0EC", VA = "0x1ADD0EC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001FD2")]
			[Address(RVA = "0x1ADDC38", Offset = "0x1ADDC38", VA = "0x1ADDC38", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20007DF")]
		[CompilerGenerated]
		private struct <RetrieveIdToken>d__15 : IAsyncStateMachine
		{
			[Token(Token = "0x4002B65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002B66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<IdTokenResponse> <>t__builder;

			[Token(Token = "0x4002B67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FirebaseApi <>4__this;

			[Token(Token = "0x4002B68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string refresh_token;

			[Token(Token = "0x4002B69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CancellationToken token;

			[Token(Token = "0x4002B6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UnityWebRequest <req>5__2;

			[Token(Token = "0x4002B6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private UniTask<UnityWebRequest>.Awaiter <>u__1;

			[Token(Token = "0x6001FD3")]
			[Address(RVA = "0x1ADDC90", Offset = "0x1ADDC90", VA = "0x1ADDC90", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001FD4")]
			[Address(RVA = "0x1ADE5D0", Offset = "0x1ADE5D0", VA = "0x1ADE5D0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20007E0")]
		[CompilerGenerated]
		private struct <UpdateProfile>d__16 : IAsyncStateMachine
		{
			[Token(Token = "0x4002B6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002B6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<UpdateProfileResponse> <>t__builder;

			[Token(Token = "0x4002B6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FirebaseApi <>4__this;

			[Token(Token = "0x4002B6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public UpdateProfileRequest request;

			[Token(Token = "0x4002B70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CancellationToken token;

			[Token(Token = "0x4002B71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UniTask<UpdateProfileResponse>.Awaiter <>u__1;

			[Token(Token = "0x6001FD5")]
			[Address(RVA = "0x1ADE628", Offset = "0x1ADE628", VA = "0x1ADE628", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001FD6")]
			[Address(RVA = "0x1ADEAE4", Offset = "0x1ADEAE4", VA = "0x1ADEAE4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20007E1")]
		[CompilerGenerated]
		private struct <GetUserData>d__17 : IAsyncStateMachine
		{
			[Token(Token = "0x4002B72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002B73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4002B74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string idToken;

			[Token(Token = "0x4002B75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FirebaseApi <>4__this;

			[Token(Token = "0x4002B76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken token;

			[Token(Token = "0x4002B77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask<GetUserResponse>.Awaiter <>u__1;

			[Token(Token = "0x6001FD7")]
			[Address(RVA = "0x1ADEB3C", Offset = "0x1ADEB3C", VA = "0x1ADEB3C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001FD8")]
			[Address(RVA = "0x1ADF1E4", Offset = "0x1ADF1E4", VA = "0x1ADF1E4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20007E2")]
		[CompilerGenerated]
		private struct <SendJsonRequestToIdentityToolKit>d__19<T> : IAsyncStateMachine
		{
			[Token(Token = "0x4002B78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002B79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AsyncUniTaskMethodBuilder<T> <>t__builder;

			[Token(Token = "0x4002B7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string path;

			[Token(Token = "0x4002B7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FirebaseApi <>4__this;

			[Token(Token = "0x4002B7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public object request;

			[Token(Token = "0x4002B7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CancellationToken token;

			[Token(Token = "0x4002B7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private UnityWebRequest <req>5__2;

			[Token(Token = "0x4002B7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private UniTask<UnityWebRequest>.Awaiter <>u__1;

			[Token(Token = "0x6001FD9")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001FDA")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20007E3")]
		[CompilerGenerated]
		private struct <CallFirebaseFunction>d__20<TRequest, TResponse> : IAsyncStateMachine
		{
			[Token(Token = "0x4002B80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002B81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AsyncUniTaskMethodBuilder<TResponse> <>t__builder;

			[Token(Token = "0x4002B82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public TRequest requestData;

			[Token(Token = "0x4002B83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string path;

			[Token(Token = "0x4002B84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string region;

			[Token(Token = "0x4002B85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FirebaseApi <>4__this;

			[Token(Token = "0x4002B86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string idToken;

			[Token(Token = "0x4002B87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CancellationToken token;

			[Token(Token = "0x4002B88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private UnityWebRequest <req>5__2;

			[Token(Token = "0x4002B89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private UniTask<UnityWebRequest>.Awaiter <>u__1;

			[Token(Token = "0x6001FDB")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001FDC")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20007E4")]
		[CompilerGenerated]
		private struct <PostFormRequest>d__22 : IAsyncStateMachine
		{
			[Token(Token = "0x4002B8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002B8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<string> <>t__builder;

			[Token(Token = "0x4002B8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string path;

			[Token(Token = "0x4002B8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string region;

			[Token(Token = "0x4002B8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public FirebaseApi <>4__this;

			[Token(Token = "0x4002B8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public WWWForm form;

			[Token(Token = "0x4002B90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public string idToken;

			[Token(Token = "0x4002B91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public CancellationToken token;

			[Token(Token = "0x4002B92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private UnityWebRequest <req>5__2;

			[Token(Token = "0x4002B93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private UniTask<UnityWebRequest>.Awaiter <>u__1;

			[Token(Token = "0x6001FDD")]
			[Address(RVA = "0x1ADF1F0", Offset = "0x1ADF1F0", VA = "0x1ADF1F0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001FDE")]
			[Address(RVA = "0x1ADF9FC", Offset = "0x1ADF9FC", VA = "0x1ADF9FC", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4002B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly string _apiKey;

		[Token(Token = "0x4002B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly string _projectId;

		[Token(Token = "0x17000333")]
		private string FirestoreRestApiURL
		{
			[Token(Token = "0x6001FA5")]
			[Address(RVA = "0x1AD7FC8", Offset = "0x1AD7FC8", VA = "0x1AD7FC8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FA6")]
		[Address(RVA = "0x1AD8034", Offset = "0x1AD8034", VA = "0x1AD8034")]
		public FirebaseApi(string apiKey, string projectId)
		{
		}

		[Token(Token = "0x6001FA7")]
		[AsyncStateMachine(typeof(<CreateDocument>d__5<>))]
		public UniTask CreateDocument<T>(T data, string path, string documentId, string idToken, CancellationToken token)
		{
			return default(UniTask);
		}

		[Token(Token = "0x6001FA8")]
		[AsyncStateMachine(typeof(<SaveToFirestore>d__6<>))]
		public UniTask SaveToFirestore<T>(T data, string documentPath, string idToken, CancellationToken token)
		{
			return default(UniTask);
		}

		[Token(Token = "0x6001FA9")]
		[Address(RVA = "0x1AD8078", Offset = "0x1AD8078", VA = "0x1AD8078")]
		[AsyncStateMachine(typeof(<SaveToFirestore>d__7))]
		public UniTask SaveToFirestore(string path, string idToken, string jsonStr, CancellationToken token)
		{
			return default(UniTask);
		}

		[Token(Token = "0x6001FAA")]
		[Address(RVA = "0x1AD8248", Offset = "0x1AD8248", VA = "0x1AD8248")]
		[AsyncStateMachine(typeof(<UpdateDocumentInFirestore>d__8))]
		public UniTask UpdateDocumentInFirestore(string path, string idToken, string jsonStr, CancellationToken token, params string[] fields)
		{
			return default(UniTask);
		}

		[Token(Token = "0x6001FAB")]
		[Address(RVA = "0x1AD843C", Offset = "0x1AD843C", VA = "0x1AD843C")]
		[AsyncStateMachine(typeof(<GetFromFirestore>d__9))]
		public UniTask<string> GetFromFirestore(string path, string idToken, CancellationToken token, params string[] fields)
		{
			return default(UniTask<string>);
		}

		[Token(Token = "0x6001FAC")]
		[Address(RVA = "0x1AD858C", Offset = "0x1AD858C", VA = "0x1AD858C")]
		[AsyncStateMachine(typeof(<RunQueryOnFirestore>d__10))]
		public UniTask<string> RunQueryOnFirestore(string path, string query, string idToken, CancellationToken token)
		{
			return default(UniTask<string>);
		}

		[Token(Token = "0x6001FAD")]
		[Address(RVA = "0x1AD86DC", Offset = "0x1AD86DC", VA = "0x1AD86DC")]
		[AsyncStateMachine(typeof(<SignUpWithPassword>d__11))]
		public UniTask<SignupResponse> SignUpWithPassword(string email, string password, CancellationToken token)
		{
			return default(UniTask<SignupResponse>);
		}

		[Token(Token = "0x6001FAE")]
		[Address(RVA = "0x1AD8814", Offset = "0x1AD8814", VA = "0x1AD8814")]
		[AsyncStateMachine(typeof(<SignInWithPassword>d__12))]
		public UniTask<SignupResponse> SignInWithPassword(string email, string password, CancellationToken token)
		{
			return default(UniTask<SignupResponse>);
		}

		[Token(Token = "0x6001FAF")]
		[Address(RVA = "0x1AD894C", Offset = "0x1AD894C", VA = "0x1AD894C")]
		[AsyncStateMachine(typeof(<SignUpWithDisplayName>d__13))]
		public UniTask<UpdateProfileResponse> SignUpWithDisplayName(string email, string password, string displayName, CancellationToken token)
		{
			return default(UniTask<UpdateProfileResponse>);
		}

		[Token(Token = "0x6001FB0")]
		[Address(RVA = "0x1AD8A8C", Offset = "0x1AD8A8C", VA = "0x1AD8A8C")]
		[AsyncStateMachine(typeof(<SignUpAnonymousWithDisplayName>d__14))]
		public UniTask<UpdateProfileResponse> SignUpAnonymousWithDisplayName(string displayName, CancellationToken token)
		{
			return default(UniTask<UpdateProfileResponse>);
		}

		[Token(Token = "0x6001FB1")]
		[Address(RVA = "0x1AD8B94", Offset = "0x1AD8B94", VA = "0x1AD8B94")]
		[AsyncStateMachine(typeof(<RetrieveIdToken>d__15))]
		public UniTask<IdTokenResponse> RetrieveIdToken(string refresh_token, CancellationToken token)
		{
			return default(UniTask<IdTokenResponse>);
		}

		[Token(Token = "0x6001FB2")]
		[Address(RVA = "0x1AD8CB0", Offset = "0x1AD8CB0", VA = "0x1AD8CB0")]
		[AsyncStateMachine(typeof(<UpdateProfile>d__16))]
		public UniTask<UpdateProfileResponse> UpdateProfile(UpdateProfileRequest request, CancellationToken token)
		{
			return default(UniTask<UpdateProfileResponse>);
		}

		[Token(Token = "0x6001FB3")]
		[Address(RVA = "0x1AD8DC8", Offset = "0x1AD8DC8", VA = "0x1AD8DC8")]
		[AsyncStateMachine(typeof(<GetUserData>d__17))]
		public UniTask GetUserData(string idToken, CancellationToken token)
		{
			return default(UniTask);
		}

		[Token(Token = "0x6001FB4")]
		[Address(RVA = "0x1AD8F5C", Offset = "0x1AD8F5C", VA = "0x1AD8F5C")]
		private static string CreateXwwwFormUrlencodedString(NameValueCollection nvs)
		{
			return null;
		}

		[Token(Token = "0x6001FB5")]
		[AsyncStateMachine(typeof(<SendJsonRequestToIdentityToolKit>d__19<>))]
		public UniTask<T> SendJsonRequestToIdentityToolKit<T>(string path, object request, CancellationToken token)
		{
			return default(UniTask<T>);
		}

		[Token(Token = "0x6001FB6")]
		[AsyncStateMachine(typeof(<CallFirebaseFunction>d__20<, >))]
		public UniTask<TResponse> CallFirebaseFunction<TRequest, TResponse>(string path, TRequest requestData, string idToken, CancellationToken token, string region = "asia-northeast1")
		{
			return default(UniTask<TResponse>);
		}

		[Token(Token = "0x6001FB7")]
		[Address(RVA = "0x1AD9134", Offset = "0x1AD9134", VA = "0x1AD9134")]
		private static UnityWebRequest CreateJsonRequest(string url, string jsonStr, string method = "POST")
		{
			return null;
		}

		[Token(Token = "0x6001FB8")]
		[Address(RVA = "0x1AD928C", Offset = "0x1AD928C", VA = "0x1AD928C")]
		[AsyncStateMachine(typeof(<PostFormRequest>d__22))]
		public UniTask<string> PostFormRequest(string path, WWWForm form, string idToken, CancellationToken token, string region = "asia-northeast1")
		{
			return default(UniTask<string>);
		}

		[Token(Token = "0x6001FB9")]
		[Address(RVA = "0x1AD93F4", Offset = "0x1AD93F4", VA = "0x1AD93F4")]
		private static string CreateErrorLogMessage(UnityWebRequest req)
		{
			return null;
		}

		[Token(Token = "0x6001FBA")]
		[Address(RVA = "0x1AD94C0", Offset = "0x1AD94C0", VA = "0x1AD94C0")]
		private static string GetFunctionUrl(string path, string region, string projectId)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x20007E5")]
	public class FirebaseDebugData
	{
		[Token(Token = "0x4002B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<FirebaseProject> projects;

		[Token(Token = "0x6001FDF")]
		[Address(RVA = "0x1ADFA54", Offset = "0x1ADFA54", VA = "0x1ADFA54")]
		public FirebaseDebugData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20007E6")]
	public class FirebaseProject
	{
		[Token(Token = "0x4002B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string projectId;

		[Token(Token = "0x4002B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string apiKey;

		[Token(Token = "0x4002B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string env;

		[Token(Token = "0x4002B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<FirebaseUserInfo> users;

		[Token(Token = "0x6001FE0")]
		[Address(RVA = "0x1ADFA5C", Offset = "0x1ADFA5C", VA = "0x1ADFA5C")]
		public FirebaseProject()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20007E7")]
	public class FirebaseTemplateRequest<T>
	{
		[Token(Token = "0x4002B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T data;

		[Token(Token = "0x6001FE1")]
		public FirebaseTemplateRequest()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20007E8")]
	public class FirebaseTemplateResponse<T>
	{
		[Token(Token = "0x4002B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T result;

		[Token(Token = "0x6001FE2")]
		public FirebaseTemplateResponse()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20007E9")]
	public class IdTokenResponse
	{
		[Token(Token = "0x4002B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string expires_in;

		[Token(Token = "0x4002B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string token_type;

		[Token(Token = "0x4002B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string refresh_token;

		[Token(Token = "0x4002B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string id_token;

		[Token(Token = "0x4002B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string user_id;

		[Token(Token = "0x4002BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string project_id;

		[Token(Token = "0x6001FE3")]
		[Address(RVA = "0x1ADFA64", Offset = "0x1ADFA64", VA = "0x1ADFA64")]
		public IdTokenResponse()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20007EA")]
	public class SignupResponse
	{
		[Token(Token = "0x4002BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string idToken;

		[Token(Token = "0x4002BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string email;

		[Token(Token = "0x4002BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string refreshToken;

		[Token(Token = "0x4002BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string expiresIn;

		[Token(Token = "0x4002BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string localId;

		[Token(Token = "0x6001FE4")]
		[Address(RVA = "0x1ADFA6C", Offset = "0x1ADFA6C", VA = "0x1ADFA6C")]
		public SignupResponse()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20007EB")]
	public class RefreshSecureTokenRequest
	{
		[Token(Token = "0x6001FE5")]
		[Address(RVA = "0x1ADFA74", Offset = "0x1ADFA74", VA = "0x1ADFA74")]
		public RefreshSecureTokenRequest()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20007EC")]
	public class GetUserResponse
	{
		[Serializable]
		[Token(Token = "0x20007ED")]
		public class User
		{
			[Token(Token = "0x4002BA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string localId;

			[Token(Token = "0x4002BA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string email;

			[Token(Token = "0x4002BA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string emailVerified;

			[Token(Token = "0x4002BAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string displayName;

			[Token(Token = "0x4002BAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public List<Dictionary<string, string>> providerUserInfo;

			[Token(Token = "0x4002BAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string photoUrl;

			[Token(Token = "0x4002BAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public string passwordHash;

			[Token(Token = "0x4002BAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public string passwordUpdatedAt;

			[Token(Token = "0x4002BAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public string validSince;

			[Token(Token = "0x4002BB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public string disabled;

			[Token(Token = "0x4002BB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public string lastLoginAt;

			[Token(Token = "0x4002BB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public string createdAt;

			[Token(Token = "0x4002BB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public string customAuth;

			[Token(Token = "0x6001FE7")]
			[Address(RVA = "0x1ADFB04", Offset = "0x1ADFB04", VA = "0x1ADFB04")]
			public User()
			{
			}
		}

		[Token(Token = "0x4002BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<User> users;

		[Token(Token = "0x6001FE6")]
		[Address(RVA = "0x1ADFA7C", Offset = "0x1ADFA7C", VA = "0x1ADFA7C")]
		public GetUserResponse()
		{
		}
	}
	[Token(Token = "0x20007EE")]
	public class GetUserRequest
	{
		[Token(Token = "0x4002BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string idToken;

		[Token(Token = "0x6001FE8")]
		[Address(RVA = "0x1ADF1DC", Offset = "0x1ADF1DC", VA = "0x1ADF1DC")]
		public GetUserRequest()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20007EF")]
	public class EmailPasswordSignupRequest
	{
		[Token(Token = "0x4002BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string email;

		[Token(Token = "0x4002BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string password;

		[Token(Token = "0x4002BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool returnSecureToken;

		[Token(Token = "0x6001FE9")]
		[Address(RVA = "0x1ADBEA4", Offset = "0x1ADBEA4", VA = "0x1ADBEA4")]
		public EmailPasswordSignupRequest()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20007F0")]
	public class EmailPasswordSignInRequest
	{
		[Token(Token = "0x4002BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string email;

		[Token(Token = "0x4002BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string password;

		[Token(Token = "0x4002BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool returnSecureToken;

		[Token(Token = "0x6001FEA")]
		[Address(RVA = "0x1ADC438", Offset = "0x1ADC438", VA = "0x1ADC438")]
		public EmailPasswordSignInRequest()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20007F1")]
	public class AnonymousSignUpRequest
	{
		[Token(Token = "0x4002BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool returnSecureToken;

		[Token(Token = "0x4002BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string tenantId;

		[Token(Token = "0x6001FEB")]
		[Address(RVA = "0x1ADDC28", Offset = "0x1ADDC28", VA = "0x1ADDC28")]
		public AnonymousSignUpRequest()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20007F2")]
	public class UpdateProfileRequest
	{
		[Token(Token = "0x4002BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string idToken;

		[Token(Token = "0x4002BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string displayName;

		[Token(Token = "0x4002BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string photoUrl;

		[Token(Token = "0x4002BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<string> deleteAttributes;

		[Token(Token = "0x4002BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool returnSecureToken;

		[Token(Token = "0x6001FEC")]
		[Address(RVA = "0x1ADD004", Offset = "0x1ADD004", VA = "0x1ADD004")]
		public UpdateProfileRequest()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20007F3")]
	public class UpdateProfileResponse
	{
		[Token(Token = "0x4002BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string localId;

		[Token(Token = "0x4002BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string email;

		[Token(Token = "0x4002BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string displayName;

		[Token(Token = "0x4002BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string photoUrl;

		[Token(Token = "0x4002BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string passwordHash;

		[Token(Token = "0x4002BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<Dictionary<string, string>> providerUserInfo;

		[Token(Token = "0x4002BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string idToken;

		[Token(Token = "0x4002BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string refreshToken;

		[Token(Token = "0x4002BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string expiresIn;

		[Token(Token = "0x6001FED")]
		[Address(RVA = "0x1ADFB0C", Offset = "0x1ADFB0C", VA = "0x1ADFB0C")]
		public UpdateProfileResponse()
		{
		}
	}
	[Token(Token = "0x20007F4")]
	public class FirebaseTokenManager
	{
		[StructLayout(3)]
		[Token(Token = "0x20007F5")]
		[CompilerGenerated]
		private struct <RetrieveIdToken>d__14 : IAsyncStateMachine
		{
			[Token(Token = "0x4002BCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002BD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<IdTokenResponse> <>t__builder;

			[Token(Token = "0x4002BD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FirebaseTokenManager <>4__this;

			[Token(Token = "0x4002BD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool forceUpdate;

			[Token(Token = "0x4002BD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CancellationToken token;

			[Token(Token = "0x4002BD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UniTask<IdTokenResponse>.Awaiter <>u__1;

			[Token(Token = "0x6001FF6")]
			[Address(RVA = "0x1ADFC80", Offset = "0x1ADFC80", VA = "0x1ADFC80", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001FF7")]
			[Address(RVA = "0x1AE0340", Offset = "0x1AE0340", VA = "0x1AE0340", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4002BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly FirebaseApi _firebaseApi;

		[Token(Token = "0x17000334")]
		public string refresh_token
		{
			[Token(Token = "0x6001FEE")]
			[Address(RVA = "0x1ADFB14", Offset = "0x1ADFB14", VA = "0x1ADFB14")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001FEF")]
			[Address(RVA = "0x1ADFB1C", Offset = "0x1ADFB1C", VA = "0x1ADFB1C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000335")]
		public IdTokenResponse idToken
		{
			[Token(Token = "0x6001FF0")]
			[Address(RVA = "0x1ADFB24", Offset = "0x1ADFB24", VA = "0x1ADFB24")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001FF1")]
			[Address(RVA = "0x1ADFB2C", Offset = "0x1ADFB2C", VA = "0x1ADFB2C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000336")]
		public DateTime expiresIn
		{
			[Token(Token = "0x6001FF2")]
			[Address(RVA = "0x1ADFB34", Offset = "0x1ADFB34", VA = "0x1ADFB34")]
			[CompilerGenerated]
			get
			{
				return default(DateTime);
			}
			[Token(Token = "0x6001FF3")]
			[Address(RVA = "0x1ADFB3C", Offset = "0x1ADFB3C", VA = "0x1ADFB3C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001FF4")]
		[Address(RVA = "0x1ADFB44", Offset = "0x1ADFB44", VA = "0x1ADFB44")]
		public FirebaseTokenManager(FirebaseApi firebaseApi)
		{
		}

		[Token(Token = "0x6001FF5")]
		[Address(RVA = "0x1ADFB74", Offset = "0x1ADFB74", VA = "0x1ADFB74")]
		[AsyncStateMachine(typeof(<RetrieveIdToken>d__14))]
		public UniTask<IdTokenResponse> RetrieveIdToken(CancellationToken token, bool forceUpdate = false)
		{
			return default(UniTask<IdTokenResponse>);
		}
	}
	[Serializable]
	[Token(Token = "0x20007F6")]
	public class FirebaseUserInfo
	{
		[Token(Token = "0x4002BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string email;

		[Token(Token = "0x4002BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string uid;

		[Token(Token = "0x4002BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string refresh_token;

		[Token(Token = "0x4002BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string displayName;

		[Token(Token = "0x6001FF8")]
		[Address(RVA = "0x1AE0398", Offset = "0x1AE0398", VA = "0x1AE0398")]
		public FirebaseUserInfo()
		{
		}
	}
	[Token(Token = "0x20007F7")]
	public static class FirebaseUtils
	{
		[Token(Token = "0x6001FF9")]
		[Address(RVA = "0x1AE03A0", Offset = "0x1AE03A0", VA = "0x1AE03A0")]
		public static FirebaseUserInfo ToFirebaseUserInfo(this SignupResponse response)
		{
			return null;
		}

		[Token(Token = "0x6001FFA")]
		[Address(RVA = "0x1AE0434", Offset = "0x1AE0434", VA = "0x1AE0434")]
		public static FirebaseUserInfo ToFirebaseUserInfo(this UpdateProfileResponse response)
		{
			return null;
		}
	}
	[Token(Token = "0x20007F8")]
	public static class FirestoreFields
	{
		[Token(Token = "0x6001FFB")]
		[Address(RVA = "0x1AE04D8", Offset = "0x1AE04D8", VA = "0x1AE04D8")]
		public static StringField String(string value)
		{
			return null;
		}

		[Token(Token = "0x6001FFC")]
		[Address(RVA = "0x1AE0550", Offset = "0x1AE0550", VA = "0x1AE0550")]
		public static BooleanField Boolean(bool value)
		{
			return null;
		}

		[Token(Token = "0x6001FFD")]
		[Address(RVA = "0x1AE05C0", Offset = "0x1AE05C0", VA = "0x1AE05C0")]
		public static TimestampField Timestamp(DateTime value)
		{
			return null;
		}

		[Token(Token = "0x6001FFE")]
		[Address(RVA = "0x1AE067C", Offset = "0x1AE067C", VA = "0x1AE067C")]
		public static FloatField Float(float value)
		{
			return null;
		}

		[Token(Token = "0x6001FFF")]
		[Address(RVA = "0x1AE06F0", Offset = "0x1AE06F0", VA = "0x1AE06F0")]
		public static IntegerField Integer(int value)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x20007F9")]
	public class Document<T>
	{
		[Token(Token = "0x4002BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T fields;

		[Token(Token = "0x6002000")]
		public Document()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20007FA")]
	public class StringField
	{
		[Token(Token = "0x4002BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string stringValue;

		[Token(Token = "0x6002001")]
		[Address(RVA = "0x1AE0548", Offset = "0x1AE0548", VA = "0x1AE0548")]
		public StringField()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20007FB")]
	public class BooleanField
	{
		[Token(Token = "0x4002BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool booleanValue;

		[Token(Token = "0x6002002")]
		[Address(RVA = "0x1AE05B8", Offset = "0x1AE05B8", VA = "0x1AE05B8")]
		public BooleanField()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20007FC")]
	public class FloatField
	{
		[Token(Token = "0x4002BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float doubleValue;

		[Token(Token = "0x6002003")]
		[Address(RVA = "0x1AE06E8", Offset = "0x1AE06E8", VA = "0x1AE06E8")]
		public FloatField()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20007FD")]
	public class IntegerField
	{
		[Token(Token = "0x4002BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int integerValue;

		[Token(Token = "0x6002004")]
		[Address(RVA = "0x1AE0754", Offset = "0x1AE0754", VA = "0x1AE0754")]
		public IntegerField()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20007FE")]
	public class NumberField
	{
		[Token(Token = "0x4002BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private int integerValue;

		[Token(Token = "0x4002BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private float doubleValue;

		[Token(Token = "0x17000337")]
		public float floatValue
		{
			[Token(Token = "0x6002005")]
			[Address(RVA = "0x1AE075C", Offset = "0x1AE075C", VA = "0x1AE075C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002006")]
		[Address(RVA = "0x1AE0774", Offset = "0x1AE0774", VA = "0x1AE0774")]
		public NumberField()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20007FF")]
	public class TimestampField
	{
		[Token(Token = "0x4002BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string timestampValue;

		[Token(Token = "0x6002007")]
		[Address(RVA = "0x1AE0674", Offset = "0x1AE0674", VA = "0x1AE0674")]
		public TimestampField()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000800")]
	public class MapField<T> where T : new()
	{
		[Token(Token = "0x4002BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MapFieldValue<T> mapValue;

		[Token(Token = "0x6002008")]
		public MapField()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000801")]
	public class MapFieldValue<T> where T : new()
	{
		[Token(Token = "0x4002BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T fields;

		[Token(Token = "0x6002009")]
		public MapFieldValue()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000802")]
	public class DocumentConteinerInStructuredQueryResponse<FIELDS>
	{
		[Serializable]
		[Token(Token = "0x2000803")]
		public class Document
		{
			[Token(Token = "0x4002BE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string name;

			[Token(Token = "0x4002BE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FIELDS fields;

			[Token(Token = "0x600200B")]
			public Document()
			{
			}
		}

		[Token(Token = "0x4002BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Document document;

		[Token(Token = "0x600200A")]
		public DocumentConteinerInStructuredQueryResponse()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000804")]
	public class FirestoreQuery<QUERY> where QUERY : StructuredQuery
	{
		[Token(Token = "0x4002BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public QUERY structuredQuery;

		[Token(Token = "0x600200C")]
		public FirestoreQuery()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000805")]
	public class StructuredQuery
	{
		[Serializable]
		[Token(Token = "0x2000806")]
		public class Select
		{
			[Token(Token = "0x4002BEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<Field> fields;

			[Token(Token = "0x600200F")]
			[Address(RVA = "0x1AE0918", Offset = "0x1AE0918", VA = "0x1AE0918")]
			public static Select CreateSelectFields(List<string> fieldPaths)
			{
				return null;
			}

			[Token(Token = "0x6002010")]
			[Address(RVA = "0x1AE0A78", Offset = "0x1AE0A78", VA = "0x1AE0A78")]
			public Select()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000808")]
		public class Field
		{
			[Token(Token = "0x4002BEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string fieldPath;

			[Token(Token = "0x6002014")]
			[Address(RVA = "0x1AE0908", Offset = "0x1AE0908", VA = "0x1AE0908")]
			public Field()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000809")]
		public class From
		{
			[Token(Token = "0x4002BEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string collectionId;

			[Token(Token = "0x4002BF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool allDescendants;

			[Token(Token = "0x6002015")]
			[Address(RVA = "0x1AE0B68", Offset = "0x1AE0B68", VA = "0x1AE0B68")]
			public From()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200080A")]
		public class OrderByItem
		{
			[Token(Token = "0x4002BF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Field field;

			[Token(Token = "0x4002BF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string direction;

			[Token(Token = "0x6002016")]
			[Address(RVA = "0x1AE0900", Offset = "0x1AE0900", VA = "0x1AE0900")]
			public OrderByItem()
			{
			}
		}

		[Token(Token = "0x4002BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int limit;

		[Token(Token = "0x4002BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Select select;

		[Token(Token = "0x4002BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<From> from;

		[Token(Token = "0x4002BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<OrderByItem> orderBy;

		[Token(Token = "0x600200D")]
		[Address(RVA = "0x1AE077C", Offset = "0x1AE077C", VA = "0x1AE077C")]
		public static List<OrderByItem> CreateSingleOrderBy(string fieldPath, string direction)
		{
			return null;
		}

		[Token(Token = "0x600200E")]
		[Address(RVA = "0x1AE0910", Offset = "0x1AE0910", VA = "0x1AE0910")]
		public StructuredQuery()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200080B")]
	public class StructuredQuerySupportWhere<WHERE> : StructuredQuery
	{
		[Token(Token = "0x4002BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public WHERE where;

		[Token(Token = "0x6002017")]
		public StructuredQuerySupportWhere()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200080C")]
	public class TimestampFilter
	{
		[Serializable]
		[Token(Token = "0x200080D")]
		public class FieldFilter
		{
			[Token(Token = "0x4002BF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public StructuredQuery.Field field;

			[Token(Token = "0x4002BF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string op;

			[Token(Token = "0x4002BF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TimestampField value;

			[Token(Token = "0x600201A")]
			[Address(RVA = "0x1AE0CDC", Offset = "0x1AE0CDC", VA = "0x1AE0CDC")]
			public FieldFilter()
			{
			}
		}

		[Token(Token = "0x4002BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FieldFilter fieldFilter;

		[Token(Token = "0x6002018")]
		[Address(RVA = "0x1AE0B70", Offset = "0x1AE0B70", VA = "0x1AE0B70")]
		public static TimestampFilter Create(string fieldPath, string op, DateTime timestampValue)
		{
			return null;
		}

		[Token(Token = "0x6002019")]
		[Address(RVA = "0x1AE0CD4", Offset = "0x1AE0CD4", VA = "0x1AE0CD4")]
		public TimestampFilter()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200080E")]
	public class StringFilter
	{
		[Serializable]
		[Token(Token = "0x200080F")]
		public class FieldFilter
		{
			[Token(Token = "0x4002BF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public StructuredQuery.Field field;

			[Token(Token = "0x4002BFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string op;

			[Token(Token = "0x4002BFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public StringField value;

			[Token(Token = "0x600201D")]
			[Address(RVA = "0x1AE0E48", Offset = "0x1AE0E48", VA = "0x1AE0E48")]
			public FieldFilter()
			{
			}
		}

		[Token(Token = "0x4002BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FieldFilter fieldFilter;

		[Token(Token = "0x600201B")]
		[Address(RVA = "0x1AE0CE4", Offset = "0x1AE0CE4", VA = "0x1AE0CE4")]
		public static StringFilter Create(string fieldPath, string op, string value)
		{
			return null;
		}

		[Token(Token = "0x600201C")]
		[Address(RVA = "0x1AE0E40", Offset = "0x1AE0E40", VA = "0x1AE0E40")]
		public StringFilter()
		{
		}
	}
}
namespace Imacreate_AvatarSystem.VRoidHubUtils
{
	[Token(Token = "0x2000810")]
	public class PasteOnlyInputField : MonoBehaviour
	{
		[Token(Token = "0x600201E")]
		[Address(RVA = "0x1AE0E50", Offset = "0x1AE0E50", VA = "0x1AE0E50")]
		public PasteOnlyInputField()
		{
		}
	}
	[Token(Token = "0x2000811")]
	public class VRoidModelDownloader : MonoBehaviour
	{
		[Token(Token = "0x600201F")]
		[Address(RVA = "0x1AE0E58", Offset = "0x1AE0E58", VA = "0x1AE0E58")]
		public VRoidModelDownloader()
		{
		}
	}
	[Token(Token = "0x2000812")]
	public class VRoidWindowManager : MonoBehaviour
	{
		[Token(Token = "0x6002020")]
		[Address(RVA = "0x1AE0E60", Offset = "0x1AE0E60", VA = "0x1AE0E60")]
		public VRoidWindowManager()
		{
		}
	}
}
namespace Imacreate_AvatarSystem.VRMAvatarSystem
{
	[Token(Token = "0x2000813")]
	public class FingerColliderSynchronizer : MonoBehaviour
	{
		[Token(Token = "0x4002BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Transform _parent;

		[Token(Token = "0x4002BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Quaternion _rotationOffset;

		[Token(Token = "0x6002021")]
		[Address(RVA = "0x1AE0E68", Offset = "0x1AE0E68", VA = "0x1AE0E68")]
		public void SetSynchronize(Transform parent)
		{
		}

		[Token(Token = "0x6002022")]
		[Address(RVA = "0x1AE1038", Offset = "0x1AE1038", VA = "0x1AE1038")]
		private void Update()
		{
		}

		[Token(Token = "0x6002023")]
		[Address(RVA = "0x1AE112C", Offset = "0x1AE112C", VA = "0x1AE112C")]
		public FingerColliderSynchronizer()
		{
		}
	}
	[Token(Token = "0x2000814")]
	public static class HumanoidColliderBuilder
	{
		[StructLayout(3)]
		[Token(Token = "0x2000815")]
		[CompilerGenerated]
		private struct <BuildFiveFingeredHand>d__1 : IAsyncStateMachine
		{
			[Token(Token = "0x4002BFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002C00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Dictionary<HumanBodyBones, CapsuleCollider>> <>t__builder;

			[Token(Token = "0x4002C01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Animator animator;

			[Token(Token = "0x4002C02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken token;

			[Token(Token = "0x4002C03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private GameObject <bakedCollider>5__2;

			[Token(Token = "0x4002C04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Dictionary<HumanBodyBones, CapsuleCollider> <boneColliders>5__3;

			[Token(Token = "0x4002C05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private UniTask<GameObject>.Awaiter <>u__1;

			[Token(Token = "0x4002C06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private UniTask.Awaiter <>u__2;

			[Token(Token = "0x600202A")]
			[Address(RVA = "0x1AE183C", Offset = "0x1AE183C", VA = "0x1AE183C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600202B")]
			[Address(RVA = "0x1AE22E0", Offset = "0x1AE22E0", VA = "0x1AE22E0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000816")]
		[CompilerGenerated]
		private struct <CreateBakedMeshGameObject>d__2 : IAsyncStateMachine
		{
			[Token(Token = "0x4002C07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002C08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<GameObject> <>t__builder;

			[Token(Token = "0x4002C09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Animator animator;

			[Token(Token = "0x4002C0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken token;

			[Token(Token = "0x4002C0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private GameObject <colliderObj>5__2;

			[Token(Token = "0x4002C0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x4002C0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private SkinnedMeshRenderer[] <>7__wrap2;

			[Token(Token = "0x4002C0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private int <>7__wrap3;

			[Token(Token = "0x600202C")]
			[Address(RVA = "0x1AE2338", Offset = "0x1AE2338", VA = "0x1AE2338", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600202D")]
			[Address(RVA = "0x1AE2D64", Offset = "0x1AE2D64", VA = "0x1AE2D64", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4002BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int TposeProperty;

		[Token(Token = "0x6002024")]
		[Address(RVA = "0x1AE1134", Offset = "0x1AE1134", VA = "0x1AE1134")]
		[AsyncStateMachine(typeof(<BuildFiveFingeredHand>d__1))]
		public static UniTask<Dictionary<HumanBodyBones, CapsuleCollider>> BuildFiveFingeredHand(Animator animator, CancellationToken token)
		{
			return default(UniTask<Dictionary<HumanBodyBones, CapsuleCollider>>);
		}

		[Token(Token = "0x6002025")]
		[Address(RVA = "0x1AE1230", Offset = "0x1AE1230", VA = "0x1AE1230")]
		[AsyncStateMachine(typeof(<CreateBakedMeshGameObject>d__2))]
		private static UniTask<GameObject> CreateBakedMeshGameObject(Animator animator, CancellationToken token)
		{
			return default(UniTask<GameObject>);
		}

		[Token(Token = "0x6002026")]
		[Address(RVA = "0x1AE132C", Offset = "0x1AE132C", VA = "0x1AE132C")]
		private static CapsuleCollider CreateCapsuleCollider(Transform root, Transform end)
		{
			return null;
		}

		[Token(Token = "0x6002027")]
		[Address(RVA = "0x1AE15FC", Offset = "0x1AE15FC", VA = "0x1AE15FC")]
		private static CapsuleCollider CreateDirectedCapsuleCollider(Transform root, Vector3 direction, float max_len = 0.1f)
		{
			return null;
		}

		[Token(Token = "0x6002028")]
		[Address(RVA = "0x1AE13C0", Offset = "0x1AE13C0", VA = "0x1AE13C0")]
		private static CapsuleCollider CreateCapsuleCollider(Transform root, Vector3 endPosition)
		{
			return null;
		}
	}
	[Token(Token = "0x2000817")]
	public abstract class SingletonMonoBehaviour<T> : MonoBehaviour where T : MonoBehaviour
	{
		[Token(Token = "0x4002C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static T instance;

		[Token(Token = "0x17000338")]
		protected abstract bool dontDestroyOnLoad
		{
			[Token(Token = "0x600202E")]
			get;
		}

		[Token(Token = "0x17000339")]
		public static bool HasInstance
		{
			[Token(Token = "0x600202F")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700033A")]
		public static T Instance
		{
			[Token(Token = "0x6002030")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002031")]
		public static T GetOrCreateInstance([Optional] GameObject attachTo)
		{
			return null;
		}

		[Token(Token = "0x6002032")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6002033")]
		protected SingletonMonoBehaviour()
		{
		}
	}
	[Token(Token = "0x2000818")]
	public class VRMAvatar : SingletonMonoBehaviour<VRMAvatar>
	{
		[StructLayout(3)]
		[Token(Token = "0x2000819")]
		[CompilerGenerated]
		private struct <SetVRM>d__24 : IAsyncStateMachine
		{
			[Token(Token = "0x4002C1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002C20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4002C21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public VRMAvatar <>4__this;

			[Token(Token = "0x4002C22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameObject vrmObject;

			[Token(Token = "0x4002C23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken token;

			[Token(Token = "0x4002C24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private GameObject <previousVrm>5__2;

			[Token(Token = "0x4002C25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6002048")]
			[Address(RVA = "0x1AE40C4", Offset = "0x1AE40C4", VA = "0x1AE40C4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002049")]
			[Address(RVA = "0x1AE4EC8", Offset = "0x1AE4EC8", VA = "0x1AE4EC8", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200081A")]
		[CompilerGenerated]
		private struct <CheckFingers>d__29 : IAsyncStateMachine
		{
			[Token(Token = "0x4002C26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002C27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4002C28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public VRMAvatar <>4__this;

			[Token(Token = "0x4002C29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CancellationToken token;

			[Token(Token = "0x4002C2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x600204A")]
			[Address(RVA = "0x1AE4ED4", Offset = "0x1AE4ED4", VA = "0x1AE4ED4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600204B")]
			[Address(RVA = "0x1AE53E4", Offset = "0x1AE53E4", VA = "0x1AE53E4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200081B")]
		[CompilerGenerated]
		private struct <SetAvatarHand>d__30 : IAsyncStateMachine
		{
			[Token(Token = "0x4002C2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002C2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4002C2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public VRMAvatar <>4__this;

			[Token(Token = "0x4002C2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CancellationToken token;

			[Token(Token = "0x4002C2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Dictionary<HumanBodyBones, CapsuleCollider> <boneColliders>5__2;

			[Token(Token = "0x4002C30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private List<CapsuleCollider> <boneCollidersR>5__3;

			[Token(Token = "0x4002C31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private List<CapsuleCollider> <boneCollidersL>5__4;

			[Token(Token = "0x4002C32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private UniTask<Dictionary<HumanBodyBones, CapsuleCollider>>.Awaiter <>u__1;

			[Token(Token = "0x4002C33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private UniTask.Awaiter <>u__2;

			[Token(Token = "0x600204C")]
			[Address(RVA = "0x1AE53F0", Offset = "0x1AE53F0", VA = "0x1AE53F0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600204D")]
			[Address(RVA = "0x1AE6614", Offset = "0x1AE6614", VA = "0x1AE6614", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4002C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static VRMAvatarHead Head;

		[Token(Token = "0x4002C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static VRMAvatarHand RightHand;

		[Token(Token = "0x4002C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static VRMAvatarHand LeftHand;

		[Token(Token = "0x4002C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static float eyeHeight;

		[Token(Token = "0x4002C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static readonly UnityEvent<bool> OnAvatarSet;

		[Token(Token = "0x4002C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private VRMMeta _vrmMeta;

		[Token(Token = "0x4002C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private VRIK _vrik;

		[Token(Token = "0x4002C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject _vrmObject;

		[Token(Token = "0x4002C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Animator _animator;

		[Token(Token = "0x4002C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _hasFingers;

		[Token(Token = "0x4002C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 _firstPersonOffset;

		[Token(Token = "0x4002C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float _scaleFactor;

		[Token(Token = "0x4002C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[Range(0.5f, 2f)]
		private float _scaleFactorMagnification;

		[Token(Token = "0x4002C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private RuntimeAnimatorController _animatorController;

		[Token(Token = "0x4002C1E")]
		private const string AnimatorResoursePath = "VRMAvatarAnimator";

		[Token(Token = "0x1700033B")]
		public VRIK IK
		{
			[Token(Token = "0x6002034")]
			[Address(RVA = "0x1AE2DBC", Offset = "0x1AE2DBC", VA = "0x1AE2DBC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700033C")]
		public GameObject VRMObject
		{
			[Token(Token = "0x6002035")]
			[Address(RVA = "0x1AE2DC4", Offset = "0x1AE2DC4", VA = "0x1AE2DC4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700033D")]
		public static bool HasAvatar
		{
			[Token(Token = "0x6002036")]
			[Address(RVA = "0x1AE2DCC", Offset = "0x1AE2DCC", VA = "0x1AE2DCC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700033E")]
		protected override bool dontDestroyOnLoad
		{
			[Token(Token = "0x6002037")]
			[Address(RVA = "0x1AE2E80", Offset = "0x1AE2E80", VA = "0x1AE2E80", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002038")]
		[Address(RVA = "0x1AE2E88", Offset = "0x1AE2E88", VA = "0x1AE2E88", Slot = "5")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6002039")]
		[Address(RVA = "0x1AE2FB4", Offset = "0x1AE2FB4", VA = "0x1AE2FB4")]
		[AsyncStateMachine(typeof(<SetVRM>d__24))]
		public UniTask SetVRM(GameObject vrmObject, CancellationToken token)
		{
			return default(UniTask);
		}

		[Token(Token = "0x600203A")]
		[Address(RVA = "0x1AE3148", Offset = "0x1AE3148", VA = "0x1AE3148")]
		public void ResetVRM()
		{
		}

		[Token(Token = "0x600203B")]
		[Address(RVA = "0x1AE3444", Offset = "0x1AE3444", VA = "0x1AE3444")]
		private void SetFirstPerson()
		{
		}

		[Token(Token = "0x600203C")]
		[Address(RVA = "0x1AE3544", Offset = "0x1AE3544", VA = "0x1AE3544")]
		private void SetVRIK(bool tryGetComponent = true)
		{
		}

		[Token(Token = "0x600203D")]
		[Address(RVA = "0x1AE3750", Offset = "0x1AE3750", VA = "0x1AE3750")]
		private void AddRigidBody()
		{
		}

		[Token(Token = "0x600203E")]
		[Address(RVA = "0x1AE37C4", Offset = "0x1AE37C4", VA = "0x1AE37C4")]
		[AsyncStateMachine(typeof(<CheckFingers>d__29))]
		private UniTask CheckFingers(CancellationToken token)
		{
			return default(UniTask);
		}

		[Token(Token = "0x600203F")]
		[Address(RVA = "0x1AE3944", Offset = "0x1AE3944", VA = "0x1AE3944")]
		[AsyncStateMachine(typeof(<SetAvatarHand>d__30))]
		private UniTask SetAvatarHand(CancellationToken token)
		{
			return default(UniTask);
		}

		[Token(Token = "0x6002040")]
		[Address(RVA = "0x1AE3AC8", Offset = "0x1AE3AC8", VA = "0x1AE3AC8")]
		private void CheckScaleFactor()
		{
		}

		[Token(Token = "0x6002041")]
		[Address(RVA = "0x1AE3BE4", Offset = "0x1AE3BE4", VA = "0x1AE3BE4")]
		private void ApplyScaleFactor()
		{
		}

		[Token(Token = "0x6002042")]
		[Address(RVA = "0x1AE3DD4", Offset = "0x1AE3DD4", VA = "0x1AE3DD4")]
		public void SetScaleMagnification(float multiplier, bool applyNow = true)
		{
		}

		[Token(Token = "0x6002043")]
		[Address(RVA = "0x1AE3DE4", Offset = "0x1AE3DE4", VA = "0x1AE3DE4")]
		public VRMMeta GetAvatarMeta()
		{
			return null;
		}

		[Token(Token = "0x6002044")]
		[Address(RVA = "0x1AE3DEC", Offset = "0x1AE3DEC", VA = "0x1AE3DEC")]
		public static void SetEyeHeight(float val)
		{
		}

		[Token(Token = "0x6002045")]
		[Address(RVA = "0x1AE3EB4", Offset = "0x1AE3EB4", VA = "0x1AE3EB4")]
		public static VRMAvatarHand GetHand(VRHand.HandType handType)
		{
			return null;
		}

		[Token(Token = "0x6002046")]
		[Address(RVA = "0x1AE3F88", Offset = "0x1AE3F88", VA = "0x1AE3F88")]
		public VRMAvatar()
		{
		}
	}
	[Token(Token = "0x200081C")]
	public class VRMAvatarHand : MonoBehaviour
	{
		[Token(Token = "0x4002C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private VRHand.HandType _handType;

		[Token(Token = "0x4002C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform IkTarget;

		[Token(Token = "0x4002C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject _defaultHand;

		[Token(Token = "0x4002C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform _colliderRoot;

		[Token(Token = "0x4002C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject _touchTriggerObject;

		[Token(Token = "0x4002C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject _touchUIPointer;

		[Token(Token = "0x4002C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool isDefaultHand;

		[Token(Token = "0x4002C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool isHideHand;

		[Token(Token = "0x4002C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 _touchTriggerPosition;

		[Token(Token = "0x4002C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Quaternion _touchTriggerRotation;

		[Token(Token = "0x4002C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 _touchTriggerScale;

		[Token(Token = "0x4002C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Vector3 _UIPointerPosition;

		[Token(Token = "0x4002C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Quaternion _UIPointerrRotation;

		[Token(Token = "0x4002C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3 _UIPointerScale;

		[Token(Token = "0x4002C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Transform _touchTriggerParent;

		[Token(Token = "0x4002C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private CapsuleCollider _capsuleCollider;

		[Token(Token = "0x4002C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector3 _capsuleCenter;

		[Token(Token = "0x4002C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private float _capsuleRadius;

		[Token(Token = "0x4002C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float _capsuleHeight;

		[Token(Token = "0x4002C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private int _capsuleDirection;

		[Token(Token = "0x4002C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Animator _animator;

		[Token(Token = "0x4002C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private HandMaterialChanger _materialChanger;

		[Token(Token = "0x600204E")]
		[Address(RVA = "0x1AE6620", Offset = "0x1AE6620", VA = "0x1AE6620")]
		private void Start()
		{
		}

		[Token(Token = "0x600204F")]
		[Address(RVA = "0x1AE6964", Offset = "0x1AE6964", VA = "0x1AE6964")]
		private void RemoveCurrentHand()
		{
		}

		[Token(Token = "0x6002050")]
		[Address(RVA = "0x1AE60B8", Offset = "0x1AE60B8", VA = "0x1AE60B8")]
		public void SetCurrentHand(Animator animator, CapsuleCollider[] colliders, CapsuleCollider indexDisital)
		{
		}

		[Token(Token = "0x6002051")]
		[Address(RVA = "0x1AE3294", Offset = "0x1AE3294", VA = "0x1AE3294")]
		public void ResetCurrentHand()
		{
		}

		[Token(Token = "0x6002052")]
		[Address(RVA = "0x1AE653C", Offset = "0x1AE653C", VA = "0x1AE653C")]
		public void SetHandShape(HandShapeUtils.HandShapeKey shapeKey)
		{
		}

		[Token(Token = "0x6002053")]
		[Address(RVA = "0x1AE6D0C", Offset = "0x1AE6D0C", VA = "0x1AE6D0C")]
		public void SetHandBlend(bool thumbUp, float trigger, float grip)
		{
		}

		[Token(Token = "0x6002054")]
		[Address(RVA = "0x1AE6E58", Offset = "0x1AE6E58", VA = "0x1AE6E58")]
		public void SetHideHand(bool val)
		{
		}

		[Token(Token = "0x6002055")]
		[Address(RVA = "0x1AE6E64", Offset = "0x1AE6E64", VA = "0x1AE6E64")]
		public VRMAvatarHand()
		{
		}
	}
	[Token(Token = "0x200081D")]
	public class VRMAvatarHead : MonoBehaviour
	{
		[Token(Token = "0x4002C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform IkTarget;

		[Token(Token = "0x6002056")]
		[Address(RVA = "0x1AE6E74", Offset = "0x1AE6E74", VA = "0x1AE6E74")]
		private void Start()
		{
		}

		[Token(Token = "0x6002057")]
		[Address(RVA = "0x1AE34F4", Offset = "0x1AE34F4", VA = "0x1AE34F4")]
		public void SetFirstPersonOffset(Vector3 offset)
		{
		}

		[Token(Token = "0x6002058")]
		[Address(RVA = "0x1AE6EDC", Offset = "0x1AE6EDC", VA = "0x1AE6EDC")]
		public VRMAvatarHead()
		{
		}
	}
	[Token(Token = "0x200081E")]
	public static class VRMShaderChanger
	{
		[Token(Token = "0x4002C4B")]
		private const string ORI_STANDARD = "Standard";

		[Token(Token = "0x4002C4C")]
		private const string ALT_STANDARD = "Universal Render Pipeline/Lit";

		[Token(Token = "0x4002C4D")]
		private const string ORI_MTOON = "VRM/MToon";

		[Token(Token = "0x4002C4E")]
		private const string ALT_MTOON = "Shader Graphs/MToon";

		[Token(Token = "0x4002C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<string, Shader> _alternativeShaders;

		[Token(Token = "0x4002C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly int Surface;

		[Token(Token = "0x4002C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static readonly int Mode;

		[Token(Token = "0x4002C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly int BaseMap;

		[Token(Token = "0x4002C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static readonly int AlphaClip;

		[Token(Token = "0x1700033F")]
		private static Dictionary<string, Shader> AltanativeShaders
		{
			[Token(Token = "0x6002059")]
			[Address(RVA = "0x1AE6EE4", Offset = "0x1AE6EE4", VA = "0x1AE6EE4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600205A")]
		[Address(RVA = "0x1AE7098", Offset = "0x1AE7098", VA = "0x1AE7098")]
		public static void ReplaceShader(Material mat)
		{
		}
	}
}
namespace Fusion
{
	[Token(Token = "0x200081F")]
	internal static class FusionRuntimeCheck
	{
		[Token(Token = "0x600205C")]
		[Address(RVA = "0x1AE75F0", Offset = "0x1AE75F0", VA = "0x1AE75F0")]
		[RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.BeforeSceneLoad)]
		private static void RuntimeCheck()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000820")]
	public class FusionUnityLogger : ILogger
	{
		[Token(Token = "0x4002C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private StringBuilder _builder;

		[Token(Token = "0x4002C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool UseGlobalPrefix;

		[Token(Token = "0x4002C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool UseColorTags;

		[Token(Token = "0x4002C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string GlobalPrefixColor;

		[Token(Token = "0x4002C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color32 MinRandomColor;

		[Token(Token = "0x4002C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Color32 MaxRandomColor;

		[Token(Token = "0x4002C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color ServerColor;

		[Token(Token = "0x17000340")]
		public Func<object, int> GetColor
		{
			[Token(Token = "0x600205D")]
			[Address(RVA = "0x1AE7610", Offset = "0x1AE7610", VA = "0x1AE7610")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600205E")]
			[Address(RVA = "0x1AE7618", Offset = "0x1AE7618", VA = "0x1AE7618")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x600205F")]
		[Address(RVA = "0x1AE7620", Offset = "0x1AE7620", VA = "0x1AE7620")]
		public FusionUnityLogger()
		{
		}

		[Token(Token = "0x6002060")]
		public void Log<T>(LogType logType, string prefix, ref T context, string message) where T : ILogBuilder
		{
		}

		[Token(Token = "0x6002061")]
		public void LogException<T>(string prefix, ref T context, Exception ex) where T : ILogBuilder
		{
		}

		[Token(Token = "0x6002062")]
		[Address(RVA = "0x1AE77B8", Offset = "0x1AE77B8", VA = "0x1AE77B8")]
		private int GetRandomColor(int seed)
		{
			return default(int);
		}

		[Token(Token = "0x6002063")]
		[Address(RVA = "0x1AE7A9C", Offset = "0x1AE7A9C", VA = "0x1AE7A9C")]
		private static int GetRandomColor(int seed, Color32 min, Color32 max, Color32 svr)
		{
			return default(int);
		}

		[Token(Token = "0x6002064")]
		[Address(RVA = "0x1AE7BA4", Offset = "0x1AE7BA4", VA = "0x1AE7BA4")]
		private static int Color32ToRGB24(Color32 c)
		{
			return default(int);
		}

		[Token(Token = "0x6002065")]
		[Address(RVA = "0x1AE772C", Offset = "0x1AE772C", VA = "0x1AE772C")]
		private static string Color32ToRGBString(Color32 c)
		{
			return null;
		}

		[Token(Token = "0x6002066")]
		[Address(RVA = "0x1AE7BB8", Offset = "0x1AE7BB8", VA = "0x1AE7BB8")]
		[RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.SubsystemRegistration)]
		private static void Initialize()
		{
		}
	}
	[Token(Token = "0x2000821")]
	public static class NetworkRunnerExtensions
	{
		[Token(Token = "0x6002068")]
		[Address(RVA = "0x1AE7CA4", Offset = "0x1AE7CA4", VA = "0x1AE7CA4")]
		public static bool SetActiveScene(this NetworkRunner runner, string sceneNameOrPath)
		{
			return default(bool);
		}

		[Token(Token = "0x6002069")]
		[Address(RVA = "0x1AE7D04", Offset = "0x1AE7D04", VA = "0x1AE7D04")]
		private static bool TryGetSceneBuildIndex(string nameOrPath, out int buildIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x600206A")]
		[Address(RVA = "0x1AE7E2C", Offset = "0x1AE7E2C", VA = "0x1AE7E2C")]
		private static void GetFileNameWithoutExtensionPosition(string nameOrPath, out int index, out int length)
		{
		}
	}
	[Token(Token = "0x2000822")]
	public abstract class NetworkSceneManagerBase : Behaviour, INetworkSceneManager
	{
		[Token(Token = "0x2000823")]
		protected delegate void FinishedLoadingDelegate(IEnumerable<NetworkObject> sceneObjects);

		[Token(Token = "0x2000824")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass26_0
		{
			[Token(Token = "0x4002C62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool finishCalled;

			[Token(Token = "0x4002C63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Dictionary<Guid, NetworkObject> sceneObjects;

			[Token(Token = "0x6002084")]
			[Address(RVA = "0x1AE8D88", Offset = "0x1AE8D88", VA = "0x1AE8D88")]
			public <>c__DisplayClass26_0()
			{
			}

			[Token(Token = "0x6002085")]
			[Address(RVA = "0x1AE8D90", Offset = "0x1AE8D90", VA = "0x1AE8D90")]
			internal void <SwitchSceneWrapper>b__0(IEnumerable<NetworkObject> objects)
			{
			}
		}

		[Token(Token = "0x2000825")]
		[CompilerGenerated]
		private sealed class <SwitchSceneWrapper>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002C64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002C65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002C66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NetworkSceneManagerBase <>4__this;

			[Token(Token = "0x4002C67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SceneRef prevScene;

			[Token(Token = "0x4002C68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public SceneRef newScene;

			[Token(Token = "0x4002C69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private <>c__DisplayClass26_0 <>8__1;

			[Token(Token = "0x4002C6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Exception <error>5__2;

			[Token(Token = "0x4002C6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private IEnumerator <coro>5__3;

			[Token(Token = "0x4002C6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private bool <next>5__4;

			[Token(Token = "0x17000342")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600208A")]
				[Address(RVA = "0x1AE9734", Offset = "0x1AE9734", VA = "0x1AE9734", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000343")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600208C")]
				[Address(RVA = "0x1AE977C", Offset = "0x1AE977C", VA = "0x1AE977C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002086")]
			[Address(RVA = "0x1AE8B38", Offset = "0x1AE8B38", VA = "0x1AE8B38")]
			[DebuggerHidden]
			public <SwitchSceneWrapper>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x6002087")]
			[Address(RVA = "0x1AE90D0", Offset = "0x1AE90D0", VA = "0x1AE90D0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002088")]
			[Address(RVA = "0x1AE90EC", Offset = "0x1AE90EC", VA = "0x1AE90EC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002089")]
			[Address(RVA = "0x1AE9694", Offset = "0x1AE9694", VA = "0x1AE9694")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x600208B")]
			[Address(RVA = "0x1AE973C", Offset = "0x1AE973C", VA = "0x1AE973C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static WeakReference<NetworkSceneManagerBase> s_currentlyLoading;

		[Token(Token = "0x4002C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[InlineHelp]
		[ToggleLeft]
		[MultiPropertyDrawersFix]
		public bool ShowHierarchyWindowOverlay;

		[Token(Token = "0x4002C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private IEnumerator _runningCoroutine;

		[Token(Token = "0x4002C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _currentSceneOutdated;

		[Token(Token = "0x4002C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private SceneRef _currentScene;

		[Token(Token = "0x17000341")]
		public NetworkRunner Runner
		{
			[Token(Token = "0x600206B")]
			[Address(RVA = "0x1AE7E94", Offset = "0x1AE7E94", VA = "0x1AE7E94")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600206C")]
			[Address(RVA = "0x1AE7E9C", Offset = "0x1AE7E9C", VA = "0x1AE7E9C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x600206D")]
		[Address(RVA = "0x1AE7EA4", Offset = "0x1AE7EA4", VA = "0x1AE7EA4", Slot = "7")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x600206E")]
		[Address(RVA = "0x1AE7EA8", Offset = "0x1AE7EA8", VA = "0x1AE7EA8", Slot = "8")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x600206F")]
		[Address(RVA = "0x1AE7EAC", Offset = "0x1AE7EAC", VA = "0x1AE7EAC", Slot = "9")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x6002070")]
		[Address(RVA = "0x1AE80F4", Offset = "0x1AE80F4", VA = "0x1AE80F4")]
		public static bool IsScenePathOrNameEqual(Scene scene, string nameOrPath)
		{
			return default(bool);
		}

		[Token(Token = "0x6002071")]
		[Address(RVA = "0x1AE8150", Offset = "0x1AE8150", VA = "0x1AE8150")]
		public static bool TryGetScenePathFromBuildSettings(SceneRef sceneRef, out string path)
		{
			return default(bool);
		}

		[Token(Token = "0x6002072")]
		[Address(RVA = "0x1AE81FC", Offset = "0x1AE81FC", VA = "0x1AE81FC")]
		public bool IsScenePathOrNameEqual(Scene scene, SceneRef sceneRef)
		{
			return default(bool);
		}

		[Token(Token = "0x6002073")]
		[Address(RVA = "0x1AE8298", Offset = "0x1AE8298", VA = "0x1AE8298")]
		public List<NetworkObject> FindNetworkObjects(Scene scene, bool disable = true, bool addVisibilityNodes = false)
		{
			return null;
		}

		[Token(Token = "0x6002074")]
		[Address(RVA = "0x1AE8714", Offset = "0x1AE8714", VA = "0x1AE8714", Slot = "4")]
		private void Fusion.INetworkSceneManager.Initialize(NetworkRunner runner)
		{
		}

		[Token(Token = "0x6002075")]
		[Address(RVA = "0x1AE8720", Offset = "0x1AE8720", VA = "0x1AE8720", Slot = "5")]
		private void Fusion.INetworkSceneManager.Shutdown(NetworkRunner runner)
		{
		}

		[Token(Token = "0x6002076")]
		[Address(RVA = "0x1AE872C", Offset = "0x1AE872C", VA = "0x1AE872C", Slot = "6")]
		private bool Fusion.INetworkSceneManager.IsReady(NetworkRunner runner)
		{
			return default(bool);
		}

		[Token(Token = "0x6002077")]
		[Address(RVA = "0x1AE8780", Offset = "0x1AE8780", VA = "0x1AE8780", Slot = "10")]
		protected virtual void Initialize(NetworkRunner runner)
		{
		}

		[Token(Token = "0x6002078")]
		[Address(RVA = "0x1AE8788", Offset = "0x1AE8788", VA = "0x1AE8788", Slot = "11")]
		protected virtual void Shutdown(NetworkRunner runner)
		{
		}

		[Token(Token = "0x6002079")]
		protected abstract IEnumerator SwitchScene(SceneRef prevScene, SceneRef newScene, FinishedLoadingDelegate finished);

		[Token(Token = "0x600207A")]
		[Address(RVA = "0x1AE8A54", Offset = "0x1AE8A54", VA = "0x1AE8A54")]
		[Conditional("FUSION_NETWORK_SCENE_MANAGER_TRACE")]
		protected void LogTrace(string msg)
		{
		}

		[Token(Token = "0x600207B")]
		[Address(RVA = "0x1AE8A58", Offset = "0x1AE8A58", VA = "0x1AE8A58")]
		protected void LogError(string msg)
		{
		}

		[Token(Token = "0x600207C")]
		[Address(RVA = "0x1AE8974", Offset = "0x1AE8974", VA = "0x1AE8974")]
		protected void LogWarn(string msg)
		{
		}

		[Token(Token = "0x600207D")]
		[Address(RVA = "0x1AE806C", Offset = "0x1AE806C", VA = "0x1AE806C")]
		[IteratorStateMachine(typeof(<SwitchSceneWrapper>d__26))]
		private IEnumerator SwitchSceneWrapper(SceneRef prevScene, SceneRef newScene)
		{
			return null;
		}

		[Token(Token = "0x600207E")]
		[Address(RVA = "0x1AE8B60", Offset = "0x1AE8B60", VA = "0x1AE8B60")]
		protected NetworkSceneManagerBase()
		{
		}
	}
	[Token(Token = "0x2000826")]
	public class NetworkSceneManagerDefault : NetworkSceneManagerBase
	{
		[Token(Token = "0x2000828")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x4002C72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Scene loadedScene;

			[Token(Token = "0x6002096")]
			[Address(RVA = "0x1AE9D78", Offset = "0x1AE9D78", VA = "0x1AE9D78")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x6002097")]
			[Address(RVA = "0x1AE9D80", Offset = "0x1AE9D80", VA = "0x1AE9D80")]
			internal void <SwitchSceneMultiplePeer>b__0(Scene scene)
			{
			}
		}

		[Token(Token = "0x2000829")]
		[CompilerGenerated]
		private sealed class <SwitchSceneMultiplePeer>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002C73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002C74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002C75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SceneRef prevScene;

			[Token(Token = "0x4002C76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public NetworkSceneManagerDefault <>4__this;

			[Token(Token = "0x4002C77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SceneRef newScene;

			[Token(Token = "0x4002C78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private <>c__DisplayClass4_0 <>8__1;

			[Token(Token = "0x4002C79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public FinishedLoadingDelegate finished;

			[Token(Token = "0x4002C7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private LoadSceneParameters <loadSceneParameters>5__2;

			[Token(Token = "0x4002C7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Scene <sceneToUnload>5__3;

			[Token(Token = "0x4002C7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private GameObject[] <tempSceneSpawnedPrefabs>5__4;

			[Token(Token = "0x4002C7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private List<NetworkObject> <sceneObjects>5__5;

			[Token(Token = "0x17000344")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600209B")]
				[Address(RVA = "0x1AEA36C", Offset = "0x1AEA36C", VA = "0x1AEA36C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000345")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600209D")]
				[Address(RVA = "0x1AEA3B4", Offset = "0x1AEA3B4", VA = "0x1AEA3B4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002098")]
			[Address(RVA = "0x1AE9B18", Offset = "0x1AE9B18", VA = "0x1AE9B18")]
			[DebuggerHidden]
			public <SwitchSceneMultiplePeer>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6002099")]
			[Address(RVA = "0x1AE9D88", Offset = "0x1AE9D88", VA = "0x1AE9D88", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600209A")]
			[Address(RVA = "0x1AE9D8C", Offset = "0x1AE9D8C", VA = "0x1AE9D8C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600209C")]
			[Address(RVA = "0x1AEA374", Offset = "0x1AEA374", VA = "0x1AEA374", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200082A")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x4002C7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Scene loadedScene;

			[Token(Token = "0x600209E")]
			[Address(RVA = "0x1AEA3BC", Offset = "0x1AEA3BC", VA = "0x1AEA3BC")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x600209F")]
			[Address(RVA = "0x1AEA3C4", Offset = "0x1AEA3C4", VA = "0x1AEA3C4")]
			internal void <SwitchSceneSinglePeer>b__0(Scene scene)
			{
			}
		}

		[Token(Token = "0x200082B")]
		[CompilerGenerated]
		private sealed class <SwitchSceneSinglePeer>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002C7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002C80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002C81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SceneRef prevScene;

			[Token(Token = "0x4002C82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public NetworkSceneManagerDefault <>4__this;

			[Token(Token = "0x4002C83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SceneRef newScene;

			[Token(Token = "0x4002C84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private <>c__DisplayClass5_0 <>8__1;

			[Token(Token = "0x4002C85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public FinishedLoadingDelegate finished;

			[Token(Token = "0x4002C86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private int <i>5__2;

			[Token(Token = "0x17000346")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60020A3")]
				[Address(RVA = "0x1AEA6C0", Offset = "0x1AEA6C0", VA = "0x1AEA6C0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000347")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60020A5")]
				[Address(RVA = "0x1AEA708", Offset = "0x1AEA708", VA = "0x1AEA708", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60020A0")]
			[Address(RVA = "0x1AE9BE8", Offset = "0x1AE9BE8", VA = "0x1AE9BE8")]
			[DebuggerHidden]
			public <SwitchSceneSinglePeer>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x60020A1")]
			[Address(RVA = "0x1AEA3CC", Offset = "0x1AEA3CC", VA = "0x1AEA3CC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60020A2")]
			[Address(RVA = "0x1AEA3D0", Offset = "0x1AEA3D0", VA = "0x1AEA3D0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60020A4")]
			[Address(RVA = "0x1AEA6C8", Offset = "0x1AEA6C8", VA = "0x1AEA6C8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Header("Single Peer Options")]
		public int PostLoadDelayFrames;

		[Token(Token = "0x600208D")]
		[Address(RVA = "0x1AE9784", Offset = "0x1AE9784", VA = "0x1AE9784", Slot = "13")]
		protected virtual YieldInstruction LoadSceneAsync(SceneRef sceneRef, LoadSceneParameters parameters, Action<Scene> loaded)
		{
			return null;
		}

		[Token(Token = "0x600208E")]
		[Address(RVA = "0x1AE99D0", Offset = "0x1AE99D0", VA = "0x1AE99D0", Slot = "14")]
		protected virtual YieldInstruction UnloadSceneAsync(Scene scene)
		{
			return null;
		}

		[Token(Token = "0x600208F")]
		[Address(RVA = "0x1AE9A28", Offset = "0x1AE9A28", VA = "0x1AE9A28", Slot = "12")]
		protected override IEnumerator SwitchScene(SceneRef prevScene, SceneRef newScene, FinishedLoadingDelegate finished)
		{
			return null;
		}

		[Token(Token = "0x6002090")]
		[Address(RVA = "0x1AE9A70", Offset = "0x1AE9A70", VA = "0x1AE9A70", Slot = "15")]
		[IteratorStateMachine(typeof(<SwitchSceneMultiplePeer>d__4))]
		protected virtual IEnumerator SwitchSceneMultiplePeer(SceneRef prevScene, SceneRef newScene, FinishedLoadingDelegate finished)
		{
			return null;
		}

		[Token(Token = "0x6002091")]
		[Address(RVA = "0x1AE9B40", Offset = "0x1AE9B40", VA = "0x1AE9B40", Slot = "16")]
		[IteratorStateMachine(typeof(<SwitchSceneSinglePeer>d__5))]
		protected virtual IEnumerator SwitchSceneSinglePeer(SceneRef prevScene, SceneRef newScene, FinishedLoadingDelegate finished)
		{
			return null;
		}

		[Token(Token = "0x6002092")]
		[Address(RVA = "0x1AE9C10", Offset = "0x1AE9C10", VA = "0x1AE9C10")]
		public NetworkSceneManagerDefault()
		{
		}
	}
}
namespace Fusion.Editor
{
	[Token(Token = "0x200082C")]
	public static class BoundsTools
	{
		[Token(Token = "0x200082D")]
		public enum BoundsType
		{
			[Token(Token = "0x4002C8F")]
			Both,
			[Token(Token = "0x4002C90")]
			MeshRenderer,
			[Token(Token = "0x4002C91")]
			Collider,
			[Token(Token = "0x4002C92")]
			Manual
		}

		[Token(Token = "0x4002C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly List<MeshFilter> meshFilters;

		[Token(Token = "0x4002C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly List<Renderer> meshRenderers;

		[Token(Token = "0x4002C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly List<Collider> colliders;

		[Token(Token = "0x4002C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly List<Collider> validColliders;

		[Token(Token = "0x4002C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static readonly List<SpriteRenderer> spriteRenderers;

		[Token(Token = "0x4002C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static readonly List<Collider2D> colliders2D;

		[Token(Token = "0x4002C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static readonly List<Collider2D> validColliders2D;

		[Token(Token = "0x60020A6")]
		[Address(RVA = "0x1AEA710", Offset = "0x1AEA710", VA = "0x1AEA710")]
		public static Bounds CollectMyBounds(this GameObject go, BoundsType factorIn, out int numOfBoundsFound, bool includeChildren = true, bool includeInactive = false)
		{
			return default(Bounds);
		}

		[Token(Token = "0x60020A7")]
		[Address(RVA = "0x1AEB60C", Offset = "0x1AEB60C", VA = "0x1AEB60C")]
		public static Bounds CollectMyBounds(GameObject go, BoundsType factorIn, bool includeChildren = true)
		{
			return default(Bounds);
		}
	}
}
namespace Fusion.StatsInternal
{
	[Token(Token = "0x200082E")]
	public interface IFusionStatsView
	{
		[Token(Token = "0x17000348")]
		bool isActiveAndEnabled
		{
			[Token(Token = "0x60020AC")]
			get;
		}

		[Token(Token = "0x17000349")]
		Transform transform
		{
			[Token(Token = "0x60020AD")]
			get;
		}

		[Token(Token = "0x60020A9")]
		void Initialize();

		[Token(Token = "0x60020AA")]
		void CalculateLayout();

		[Token(Token = "0x60020AB")]
		void Refresh();
	}
	[Token(Token = "0x200082F")]
	public static class FusionStatsUtilities
	{
		[Token(Token = "0x4002C93")]
		public const int PAD = 10;

		[Token(Token = "0x4002C94")]
		public const int MARGIN = 6;

		[Token(Token = "0x4002C95")]
		public const int FONT_SIZE = 12;

		[Token(Token = "0x4002C96")]
		public const int FONT_SIZE_MIN = 4;

		[Token(Token = "0x4002C97")]
		public const int FONT_SIZE_MAX = 200;

		[Token(Token = "0x4002C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<string> _cachedGraphVisualizationNames;

		[Token(Token = "0x4002C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Font _font;

		[Token(Token = "0x4002C9A")]
		private const int METER_TEXTURE_WIDTH = 512;

		[Token(Token = "0x4002C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Texture2D _meterTexture;

		[Token(Token = "0x4002C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Sprite _meterSprite;

		[Token(Token = "0x4002C9D")]
		private const int R = 64;

		[Token(Token = "0x4002C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static Texture2D _circle32Texture;

		[Token(Token = "0x4002C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static Sprite _circle32Sprite;

		[Token(Token = "0x4002CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static Color DARK_GREEN;

		[Token(Token = "0x4002CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static Color DARK_BLUE;

		[Token(Token = "0x4002CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static Color DARK_RED;

		[Token(Token = "0x4002CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public static List<NetworkRunner> _reusableList;

		[Token(Token = "0x4002CA4")]
		public const float BTTN_LBL_NORM_HGHT = 0.175f;

		[Token(Token = "0x4002CA5")]
		private const int BTTN_FONT_SIZE_MAX = 100;

		[Token(Token = "0x4002CA6")]
		private const float BTTN_ALPHA = 0.925f;

		[Token(Token = "0x4002CA7")]
		private const float GUIDE_MARGIN = 0.01f;

		[Token(Token = "0x4002CA8")]
		private const float GUIDE_MARGIN_HALF = 0.005f;

		[Token(Token = "0x1700034A")]
		public static List<string> CachedTelemetryNames
		{
			[Token(Token = "0x60020AE")]
			[Address(RVA = "0x1AEB8F4", Offset = "0x1AEB8F4", VA = "0x1AEB8F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700034B")]
		public static Font Font
		{
			[Token(Token = "0x60020AF")]
			[Address(RVA = "0x1AEBD48", Offset = "0x1AEBD48", VA = "0x1AEBD48")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700034C")]
		private static Texture2D MeterTexture
		{
			[Token(Token = "0x60020B0")]
			[Address(RVA = "0x1AEBE58", Offset = "0x1AEBE58", VA = "0x1AEBE58")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700034D")]
		public static Sprite MeterSprite
		{
			[Token(Token = "0x60020B1")]
			[Address(RVA = "0x1AEBFE8", Offset = "0x1AEBFE8", VA = "0x1AEBFE8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700034E")]
		private static Texture2D Circle32Texture
		{
			[Token(Token = "0x60020B2")]
			[Address(RVA = "0x1AEC110", Offset = "0x1AEC110", VA = "0x1AEC110")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700034F")]
		public static Sprite CircleSprite
		{
			[Token(Token = "0x60020B3")]
			[Address(RVA = "0x1AEC394", Offset = "0x1AEC394", VA = "0x1AEC394")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60020B4")]
		[Address(RVA = "0x1AEC4D8", Offset = "0x1AEC4D8", VA = "0x1AEC4D8")]
		public static bool TryFindActiveRunner(FusionStats fusionStats, out NetworkRunner runner, [Optional] SimulationModes? mode)
		{
			return default(bool);
		}

		[Token(Token = "0x60020B5")]
		[Address(RVA = "0x1AEC6D4", Offset = "0x1AEC6D4", VA = "0x1AEC6D4")]
		public static RectTransform CreateRectTransform(this Transform parent, string name, bool expand = false)
		{
			return null;
		}

		[Token(Token = "0x60020B6")]
		[Address(RVA = "0x1AEC934", Offset = "0x1AEC934", VA = "0x1AEC934")]
		[Obsolete]
		internal static RectTransform CreateRectTransform(string name, Transform parent, bool expand = false)
		{
			return null;
		}

		[Token(Token = "0x60020B7")]
		[Address(RVA = "0x1AECA58", Offset = "0x1AECA58", VA = "0x1AECA58")]
		public static Dropdown CreateDropdown(this RectTransform rt, float padding, Color fontColor)
		{
			return null;
		}

		[Token(Token = "0x60020B8")]
		[Address(RVA = "0x1AED17C", Offset = "0x1AED17C", VA = "0x1AED17C")]
		public static Text AddText(this RectTransform rt, string label, TextAnchor anchor, Color FontColor)
		{
			return null;
		}

		[Token(Token = "0x60020B9")]
		[Address(RVA = "0x1AED2F0", Offset = "0x1AED2F0", VA = "0x1AED2F0")]
		internal static void MakeButton(this RectTransform parent, ref Button button, string iconText, string labelText, out Text icon, out Text text, UnityAction action)
		{
		}

		[Token(Token = "0x60020BA")]
		[Address(RVA = "0x1AED76C", Offset = "0x1AED76C", VA = "0x1AED76C")]
		public static RectTransform AddHorizontalLayoutGroup(this RectTransform rt, float spacing, [Optional] int? rgtPad, [Optional] int? lftPad, [Optional] int? topPad, [Optional] int? botPad)
		{
			return null;
		}

		[Token(Token = "0x60020BB")]
		[Address(RVA = "0x1AED92C", Offset = "0x1AED92C", VA = "0x1AED92C")]
		public static RectTransform AddVerticalLayoutGroup(this RectTransform rt, float spacing, [Optional] int? rgtPad, [Optional] int? lftPad, [Optional] int? topPad, [Optional] int? botPad)
		{
			return null;
		}

		[Token(Token = "0x60020BC")]
		[Address(RVA = "0x1AED9D0", Offset = "0x1AED9D0", VA = "0x1AED9D0")]
		public static GridLayoutGroup AddGridlLayoutGroup(this RectTransform rt, float spacing, [Optional] int? rgtPad, [Optional] int? lftPad, [Optional] int? topPad, [Optional] int? botPad)
		{
			return null;
		}

		[Token(Token = "0x60020BD")]
		[Address(RVA = "0x1AEDA58", Offset = "0x1AEDA58", VA = "0x1AEDA58")]
		public static RectTransform AddImage(this RectTransform rt, Color color)
		{
			return null;
		}

		[Token(Token = "0x60020BE")]
		[Address(RVA = "0x1AEDB1C", Offset = "0x1AEDB1C", VA = "0x1AEDB1C")]
		public static RectTransform AddCircleSprite(this RectTransform rt, Color color)
		{
			return null;
		}

		[Token(Token = "0x60020BF")]
		[Address(RVA = "0x1AEDBB4", Offset = "0x1AEDBB4", VA = "0x1AEDBB4")]
		public static RectTransform AddCircleSprite(this RectTransform rt, Color color, out Image image)
		{
			return null;
		}

		[Token(Token = "0x60020C0")]
		[Address(RVA = "0x1AEC7F8", Offset = "0x1AEC7F8", VA = "0x1AEC7F8")]
		public static RectTransform ExpandAnchor(this RectTransform rt, [Optional] float? padding)
		{
			return null;
		}

		[Token(Token = "0x60020C1")]
		[Address(RVA = "0x1AECF5C", Offset = "0x1AECF5C", VA = "0x1AECF5C")]
		public static RectTransform ExpandTopAnchor(this RectTransform rt, [Optional] float? padding)
		{
			return null;
		}

		[Token(Token = "0x60020C2")]
		[Address(RVA = "0x1AEDCFC", Offset = "0x1AEDCFC", VA = "0x1AEDCFC")]
		public static RectTransform ExpandMiddleLeft(this RectTransform rt)
		{
			return null;
		}

		[Token(Token = "0x60020C3")]
		[Address(RVA = "0x1AED158", Offset = "0x1AED158", VA = "0x1AED158")]
		public static RectTransform SetSizeDelta(this RectTransform rt, float offsetX, float offsetY)
		{
			return null;
		}

		[Token(Token = "0x60020C4")]
		[Address(RVA = "0x1AED09C", Offset = "0x1AED09C", VA = "0x1AED09C")]
		public static RectTransform SetOffsets(this RectTransform rt, float minX, float maxX, float minY, float maxY)
		{
			return null;
		}

		[Token(Token = "0x60020C5")]
		[Address(RVA = "0x1AED134", Offset = "0x1AED134", VA = "0x1AED134")]
		public static RectTransform SetPivot(this RectTransform rt, float pivotX, float pivotY)
		{
			return null;
		}

		[Token(Token = "0x60020C6")]
		[Address(RVA = "0x1AED0E8", Offset = "0x1AED0E8", VA = "0x1AED0E8")]
		public static RectTransform SetAnchors(this RectTransform rt, float minX, float maxX, float minY, float maxY)
		{
			return null;
		}

		[Token(Token = "0x60020C7")]
		[Address(RVA = "0x1AEDD5C", Offset = "0x1AEDD5C", VA = "0x1AEDD5C")]
		internal static RectTransform MakeGuides(this RectTransform parent)
		{
			return null;
		}
	}
}
namespace Fusion.Fluid
{
	[Token(Token = "0x2000830")]
	[RequireComponent(typeof(Rigidbody))]
	public abstract class BaseFluidInteractor : MonoBehaviour
	{
		[Token(Token = "0x4002CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public Rigidbody rb;

		[Token(Token = "0x4002CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public Collider coll;

		[Token(Token = "0x4002CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public float volume;

		[Token(Token = "0x4002CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float customVolume;

		[Token(Token = "0x4002CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float dampeningFactor;

		[Token(Token = "0x4002CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float waterDrag;

		[Token(Token = "0x4002CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float waterAngularDrag;

		[Token(Token = "0x4002CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[HideInInspector]
		private float airDrag;

		[Token(Token = "0x4002CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		private float airAngularDrag;

		[Token(Token = "0x4002CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[HideInInspector]
		public int inFluidCount;

		[Token(Token = "0x4002CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public Fluid fluid;

		[Token(Token = "0x4002CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool simulateWaterTurbulence;

		[Token(Token = "0x4002CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[Range(0f, 5f)]
		public float turbulenceStrength;

		[Token(Token = "0x4002CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public float[] rndTimeOffset;

		[Token(Token = "0x4002CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float time;

		[Token(Token = "0x4002CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float floatStrength;

		[Token(Token = "0x60020C9")]
		public abstract void FluidUpdate();

		[Token(Token = "0x60020CA")]
		[Address(RVA = "0x1AEF238", Offset = "0x1AEF238", VA = "0x1AEF238", Slot = "5")]
		public virtual void Start()
		{
		}

		[Token(Token = "0x60020CB")]
		[Address(RVA = "0x1AEF3E4", Offset = "0x1AEF3E4", VA = "0x1AEF3E4")]
		private void Update()
		{
		}

		[Token(Token = "0x60020CC")]
		[Address(RVA = "0x1AEF3F8", Offset = "0x1AEF3F8", VA = "0x1AEF3F8")]
		public void Awake()
		{
		}

		[Token(Token = "0x60020CD")]
		[Address(RVA = "0x1AEF4A4", Offset = "0x1AEF4A4", VA = "0x1AEF4A4")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60020CE")]
		[Address(RVA = "0x1AEF4FC", Offset = "0x1AEF4FC", VA = "0x1AEF4FC")]
		public Vector3 GenerateTurbulence()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60020CF")]
		[Address(RVA = "0x1AEF644", Offset = "0x1AEF644", VA = "0x1AEF644")]
		public void EnterFluid(Fluid enteredFluid)
		{
		}

		[Token(Token = "0x60020D0")]
		[Address(RVA = "0x1AEF6AC", Offset = "0x1AEF6AC", VA = "0x1AEF6AC")]
		public void ExitFluid(Fluid fluidToExit)
		{
		}

		[Token(Token = "0x60020D1")]
		[Address(RVA = "0x1AEF318", Offset = "0x1AEF318", VA = "0x1AEF318")]
		public float CalculateVolume()
		{
			return default(float);
		}

		[Token(Token = "0x60020D2")]
		[Address(RVA = "0x1AEF77C", Offset = "0x1AEF77C", VA = "0x1AEF77C")]
		protected BaseFluidInteractor()
		{
		}
	}
	[Token(Token = "0x2000831")]
	[AddComponentMenu("FusionWater/BasicFluidInteractor")]
	public class BasicFluidInteractor : BaseFluidInteractor
	{
		[Token(Token = "0x60020D3")]
		[Address(RVA = "0x1AEF800", Offset = "0x1AEF800", VA = "0x1AEF800", Slot = "4")]
		public override void FluidUpdate()
		{
		}

		[Token(Token = "0x60020D4")]
		[Address(RVA = "0x1AEFAA4", Offset = "0x1AEFAA4", VA = "0x1AEFAA4")]
		public BasicFluidInteractor()
		{
		}
	}
	[Token(Token = "0x2000832")]
	[AddComponentMenu("FusionWater/ComplexFluidInteractor")]
	public class ComplexFluidInteractor : BaseFluidInteractor
	{
		[Token(Token = "0x4002CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public List<Transform> floaters;

		[Token(Token = "0x60020D5")]
		[Address(RVA = "0x1AEFAA8", Offset = "0x1AEFAA8", VA = "0x1AEFAA8", Slot = "5")]
		public override void Start()
		{
		}

		[Token(Token = "0x60020D6")]
		[Address(RVA = "0x1AEFB58", Offset = "0x1AEFB58", VA = "0x1AEFB58", Slot = "4")]
		public override void FluidUpdate()
		{
		}

		[Token(Token = "0x60020D7")]
		[Address(RVA = "0x1AEFF2C", Offset = "0x1AEFF2C", VA = "0x1AEFF2C")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60020D8")]
		[Address(RVA = "0x1AF0158", Offset = "0x1AF0158", VA = "0x1AF0158")]
		public bool IsPointUnderWater(Vector3 point)
		{
			return default(bool);
		}

		[Token(Token = "0x60020D9")]
		[Address(RVA = "0x1AF0214", Offset = "0x1AF0214", VA = "0x1AF0214")]
		public Vector3[] DefineCorners()
		{
			return null;
		}

		[Token(Token = "0x60020DA")]
		[Address(RVA = "0x1AF0364", Offset = "0x1AF0364", VA = "0x1AF0364")]
		public ComplexFluidInteractor()
		{
		}
	}
	[Token(Token = "0x2000833")]
	[AddComponentMenu("FusionWater/ComplexFluidInteractorWithPause")]
	public class ComplexFluidInteractorWithPause : BaseFluidInteractor
	{
		[Token(Token = "0x4002CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public List<Transform> floaters;

		[Token(Token = "0x17000350")]
		[Inject]
		private ISubscriber<OnPause> OnPauseMessage
		{
			[Token(Token = "0x60020DB")]
			[Address(RVA = "0x1AF03E8", Offset = "0x1AF03E8", VA = "0x1AF03E8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60020DC")]
			[Address(RVA = "0x1AF03F0", Offset = "0x1AF03F0", VA = "0x1AF03F0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x60020DD")]
		[Address(RVA = "0x1AF03F8", Offset = "0x1AF03F8", VA = "0x1AF03F8", Slot = "5")]
		public override void Start()
		{
		}

		[Token(Token = "0x60020DE")]
		[Address(RVA = "0x1AF05B4", Offset = "0x1AF05B4", VA = "0x1AF05B4", Slot = "4")]
		public override void FluidUpdate()
		{
		}

		[Token(Token = "0x60020DF")]
		[Address(RVA = "0x1AF0988", Offset = "0x1AF0988", VA = "0x1AF0988")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60020E0")]
		[Address(RVA = "0x1AF0BB4", Offset = "0x1AF0BB4", VA = "0x1AF0BB4")]
		public bool IsPointUnderWater(Vector3 point)
		{
			return default(bool);
		}

		[Token(Token = "0x60020E1")]
		[Address(RVA = "0x1AF0C70", Offset = "0x1AF0C70", VA = "0x1AF0C70")]
		public Vector3[] DefineCorners()
		{
			return null;
		}

		[Token(Token = "0x60020E2")]
		[Address(RVA = "0x1AF0DC0", Offset = "0x1AF0DC0", VA = "0x1AF0DC0")]
		public ComplexFluidInteractorWithPause()
		{
		}
	}
	[Token(Token = "0x2000834")]
	[AddComponentMenu("FusionWater/Fluid")]
	public class Fluid : MonoBehaviour
	{
		[Token(Token = "0x4002CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float density;

		[Token(Token = "0x4002CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float drag;

		[Token(Token = "0x4002CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float angularDrag;

		[Token(Token = "0x60020E4")]
		[Address(RVA = "0x1AF0EBC", Offset = "0x1AF0EBC", VA = "0x1AF0EBC")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60020E5")]
		[Address(RVA = "0x1AF0F38", Offset = "0x1AF0F38", VA = "0x1AF0F38")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x60020E6")]
		[Address(RVA = "0x1AF0FB4", Offset = "0x1AF0FB4", VA = "0x1AF0FB4")]
		public Fluid()
		{
		}
	}
}
namespace ETFXPEL
{
	[Token(Token = "0x2000835")]
	public class ParticleEffectsLibrary : MonoBehaviour
	{
		[Token(Token = "0x4002CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ParticleEffectsLibrary GlobalAccess;

		[Token(Token = "0x4002CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int TotalEffects;

		[Token(Token = "0x4002CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int CurrentParticleEffectIndex;

		[Token(Token = "0x4002CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int CurrentParticleEffectNum;

		[Token(Token = "0x4002CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3[] ParticleEffectSpawnOffsets;

		[Token(Token = "0x4002CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float[] ParticleEffectLifetimes;

		[Token(Token = "0x4002CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject[] ParticleEffectPrefabs;

		[Token(Token = "0x4002CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string effectNameString;

		[Token(Token = "0x4002CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Transform> currentActivePEList;

		[Token(Token = "0x4002CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 spawnPosition;

		[Token(Token = "0x60020E7")]
		[Address(RVA = "0x1AF0FCC", Offset = "0x1AF0FCC", VA = "0x1AF0FCC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60020E8")]
		[Address(RVA = "0x1AF139C", Offset = "0x1AF139C", VA = "0x1AF139C")]
		private void Start()
		{
		}

		[Token(Token = "0x60020E9")]
		[Address(RVA = "0x1AF13A0", Offset = "0x1AF13A0", VA = "0x1AF13A0")]
		public string GetCurrentPENameString()
		{
			return null;
		}

		[Token(Token = "0x60020EA")]
		[Address(RVA = "0x1AF1614", Offset = "0x1AF1614", VA = "0x1AF1614")]
		public void PreviousParticleEffect()
		{
		}

		[Token(Token = "0x60020EB")]
		[Address(RVA = "0x1AF19F0", Offset = "0x1AF19F0", VA = "0x1AF19F0")]
		public void NextParticleEffect()
		{
		}

		[Token(Token = "0x60020EC")]
		[Address(RVA = "0x1AF1DDC", Offset = "0x1AF1DDC", VA = "0x1AF1DDC")]
		public void SpawnParticleEffect(Vector3 positionInWorldToSpawn)
		{
		}

		[Token(Token = "0x60020ED")]
		[Address(RVA = "0x1AF2120", Offset = "0x1AF2120", VA = "0x1AF2120")]
		public ParticleEffectsLibrary()
		{
		}
	}
	[Token(Token = "0x2000836")]
	public enum ButtonTypes
	{
		[Token(Token = "0x4002CCA")]
		NotDefined,
		[Token(Token = "0x4002CCB")]
		Previous,
		[Token(Token = "0x4002CCC")]
		Next
	}
	[Token(Token = "0x2000837")]
	public class PEButtonScript : MonoBehaviour, IEventSystemHandler, IPointerEnterHandler, IPointerExitHandler
	{
		[Token(Token = "0x4002CCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Button myButton;

		[Token(Token = "0x4002CCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ButtonTypes ButtonType;

		[Token(Token = "0x60020EE")]
		[Address(RVA = "0x1AF21B8", Offset = "0x1AF21B8", VA = "0x1AF21B8")]
		private void Start()
		{
		}

		[Token(Token = "0x60020EF")]
		[Address(RVA = "0x1AF2220", Offset = "0x1AF2220", VA = "0x1AF2220", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60020F0")]
		[Address(RVA = "0x1AF2368", Offset = "0x1AF2368", VA = "0x1AF2368", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60020F1")]
		[Address(RVA = "0x1AF2460", Offset = "0x1AF2460", VA = "0x1AF2460")]
		public void OnButtonClicked()
		{
		}

		[Token(Token = "0x60020F2")]
		[Address(RVA = "0x1AF24D4", Offset = "0x1AF24D4", VA = "0x1AF24D4")]
		public PEButtonScript()
		{
		}
	}
	[Token(Token = "0x2000838")]
	public class UICanvasManager : MonoBehaviour
	{
		[Token(Token = "0x4002CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static UICanvasManager GlobalAccess;

		[Token(Token = "0x4002CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool MouseOverButton;

		[Token(Token = "0x4002CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text PENameText;

		[Token(Token = "0x4002CD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Text ToolTipText;

		[Token(Token = "0x4002CD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private RaycastHit rayHit;

		[Token(Token = "0x60020F3")]
		[Address(RVA = "0x1AF24DC", Offset = "0x1AF24DC", VA = "0x1AF24DC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60020F4")]
		[Address(RVA = "0x1AF2534", Offset = "0x1AF2534", VA = "0x1AF2534")]
		private void Start()
		{
		}

		[Token(Token = "0x60020F5")]
		[Address(RVA = "0x1AF25F0", Offset = "0x1AF25F0", VA = "0x1AF25F0")]
		private void Update()
		{
		}

		[Token(Token = "0x60020F6")]
		[Address(RVA = "0x1AF2280", Offset = "0x1AF2280", VA = "0x1AF2280")]
		public void UpdateToolTip(ButtonTypes toolTipType)
		{
		}

		[Token(Token = "0x60020F7")]
		[Address(RVA = "0x1AF23BC", Offset = "0x1AF23BC", VA = "0x1AF23BC")]
		public void ClearToolTip()
		{
		}

		[Token(Token = "0x60020F8")]
		[Address(RVA = "0x1AF2714", Offset = "0x1AF2714", VA = "0x1AF2714")]
		private void SelectPreviousPE()
		{
		}

		[Token(Token = "0x60020F9")]
		[Address(RVA = "0x1AF27E4", Offset = "0x1AF27E4", VA = "0x1AF27E4")]
		private void SelectNextPE()
		{
		}

		[Token(Token = "0x60020FA")]
		[Address(RVA = "0x1AF2654", Offset = "0x1AF2654", VA = "0x1AF2654")]
		private void SpawnCurrentParticleEffect()
		{
		}

		[Token(Token = "0x60020FB")]
		[Address(RVA = "0x1AF24B8", Offset = "0x1AF24B8", VA = "0x1AF24B8")]
		public void UIButtonClick(ButtonTypes buttonTypeClicked)
		{
		}

		[Token(Token = "0x60020FC")]
		[Address(RVA = "0x1AF28B4", Offset = "0x1AF28B4", VA = "0x1AF28B4")]
		public UICanvasManager()
		{
		}
	}
}
namespace EpicToonFX
{
	[Token(Token = "0x2000839")]
	public class ETFXButtonScript : MonoBehaviour
	{
		[Token(Token = "0x4002CD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject Button;

		[Token(Token = "0x4002CD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Text MyButtonText;

		[Token(Token = "0x4002CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string projectileParticleName;

		[Token(Token = "0x4002CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ETFXFireProjectile effectScript;

		[Token(Token = "0x4002CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ETFXProjectileScript projectileScript;

		[Token(Token = "0x4002CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float buttonsX;

		[Token(Token = "0x4002CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float buttonsY;

		[Token(Token = "0x4002CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float buttonsSizeX;

		[Token(Token = "0x4002CDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float buttonsSizeY;

		[Token(Token = "0x4002CDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float buttonsDistance;

		[Token(Token = "0x60020FD")]
		[Address(RVA = "0x1AF28BC", Offset = "0x1AF28BC", VA = "0x1AF28BC")]
		private void Start()
		{
		}

		[Token(Token = "0x60020FE")]
		[Address(RVA = "0x1AF2A78", Offset = "0x1AF2A78", VA = "0x1AF2A78")]
		private void Update()
		{
		}

		[Token(Token = "0x60020FF")]
		[Address(RVA = "0x1AF29C4", Offset = "0x1AF29C4", VA = "0x1AF29C4")]
		public void getProjectileNames()
		{
		}

		[Token(Token = "0x6002100")]
		[Address(RVA = "0x1AF2AA4", Offset = "0x1AF2AA4", VA = "0x1AF2AA4")]
		public bool overButton()
		{
			return default(bool);
		}

		[Token(Token = "0x6002101")]
		[Address(RVA = "0x1AF2B7C", Offset = "0x1AF2B7C", VA = "0x1AF2B7C")]
		public ETFXButtonScript()
		{
		}
	}
	[Token(Token = "0x200083A")]
	public class ETFXEffectController : MonoBehaviour
	{
		[Token(Token = "0x200083B")]
		[CompilerGenerated]
		private sealed class <EffectLoop>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002CEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002CEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002CED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ETFXEffectController <>4__this;

			[Token(Token = "0x4002CEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private ParticleSystem <particleSystem>5__2;

			[Token(Token = "0x17000351")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600210F")]
				[Address(RVA = "0x1AF3498", Offset = "0x1AF3498", VA = "0x1AF3498", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000352")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002111")]
				[Address(RVA = "0x1AF34E0", Offset = "0x1AF34E0", VA = "0x1AF34E0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600210C")]
			[Address(RVA = "0x1AF2FAC", Offset = "0x1AF2FAC", VA = "0x1AF2FAC")]
			[DebuggerHidden]
			public <EffectLoop>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x600210D")]
			[Address(RVA = "0x1AF2FFC", Offset = "0x1AF2FFC", VA = "0x1AF2FFC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600210E")]
			[Address(RVA = "0x1AF3000", Offset = "0x1AF3000", VA = "0x1AF3000", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002110")]
			[Address(RVA = "0x1AF34A0", Offset = "0x1AF34A0", VA = "0x1AF34A0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002CDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] effects;

		[Token(Token = "0x4002CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int effectIndex;

		[Token(Token = "0x4002CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Space(10f)]
		[Header("Spawn Settings")]
		public bool disableLights;

		[Token(Token = "0x4002CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool disableSound;

		[Token(Token = "0x4002CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float startDelay;

		[Token(Token = "0x4002CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float respawnDelay;

		[Token(Token = "0x4002CE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool slideshowMode;

		[Token(Token = "0x4002CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool autoRotation;

		[Token(Token = "0x4002CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[Range(0.001f, 0.5f)]
		public float autoRotationSpeed;

		[Token(Token = "0x4002CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject currentEffect;

		[Token(Token = "0x4002CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Text effectNameText;

		[Token(Token = "0x4002CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Text effectIndexText;

		[Token(Token = "0x4002CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private ETFXMouseOrbit etfxMouseOrbit;

		[Token(Token = "0x6002102")]
		[Address(RVA = "0x1AF2B84", Offset = "0x1AF2B84", VA = "0x1AF2B84")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002103")]
		[Address(RVA = "0x1AF2C8C", Offset = "0x1AF2C8C", VA = "0x1AF2C8C")]
		private void Start()
		{
		}

		[Token(Token = "0x6002104")]
		[Address(RVA = "0x1AF2D30", Offset = "0x1AF2D30", VA = "0x1AF2D30")]
		private void Update()
		{
		}

		[Token(Token = "0x6002105")]
		[Address(RVA = "0x1AF2DF4", Offset = "0x1AF2DF4", VA = "0x1AF2DF4")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6002106")]
		[Address(RVA = "0x1AF2E70", Offset = "0x1AF2E70", VA = "0x1AF2E70")]
		public void InitializeLoop()
		{
		}

		[Token(Token = "0x6002107")]
		[Address(RVA = "0x1AF2D94", Offset = "0x1AF2D94", VA = "0x1AF2D94")]
		public void NextEffect()
		{
		}

		[Token(Token = "0x6002108")]
		[Address(RVA = "0x1AF2DC4", Offset = "0x1AF2DC4", VA = "0x1AF2DC4")]
		public void PreviousEffect()
		{
		}

		[Token(Token = "0x6002109")]
		[Address(RVA = "0x1AF2F04", Offset = "0x1AF2F04", VA = "0x1AF2F04")]
		private void CleanCurrentEffect()
		{
		}

		[Token(Token = "0x600210A")]
		[Address(RVA = "0x1AF2E90", Offset = "0x1AF2E90", VA = "0x1AF2E90")]
		[IteratorStateMachine(typeof(<EffectLoop>d__21))]
		private IEnumerator EffectLoop()
		{
			return null;
		}

		[Token(Token = "0x600210B")]
		[Address(RVA = "0x1AF2FD4", Offset = "0x1AF2FD4", VA = "0x1AF2FD4")]
		public ETFXEffectController()
		{
		}
	}
	[Token(Token = "0x200083C")]
	public class ETFXEffectControllerPooled : MonoBehaviour
	{
		[Token(Token = "0x200083D")]
		[CompilerGenerated]
		private sealed class <EffectLoop>d__22 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002CFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002CFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002CFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ETFXEffectControllerPooled <>4__this;

			[Token(Token = "0x4002D00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private ParticleSystem <particleSystem>5__2;

			[Token(Token = "0x17000353")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600211F")]
				[Address(RVA = "0x1AF3F20", Offset = "0x1AF3F20", VA = "0x1AF3F20", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000354")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002121")]
				[Address(RVA = "0x1AF3F68", Offset = "0x1AF3F68", VA = "0x1AF3F68", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600211C")]
			[Address(RVA = "0x1AF3AD4", Offset = "0x1AF3AD4", VA = "0x1AF3AD4")]
			[DebuggerHidden]
			public <EffectLoop>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x600211D")]
			[Address(RVA = "0x1AF3B24", Offset = "0x1AF3B24", VA = "0x1AF3B24", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600211E")]
			[Address(RVA = "0x1AF3B28", Offset = "0x1AF3B28", VA = "0x1AF3B28", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002120")]
			[Address(RVA = "0x1AF3F28", Offset = "0x1AF3F28", VA = "0x1AF3F28", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] effects;

		[Token(Token = "0x4002CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<GameObject> effectsPool;

		[Token(Token = "0x4002CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int effectIndex;

		[Token(Token = "0x4002CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[Space(10f)]
		[Header("Spawn Settings")]
		public bool disableLights;

		[Token(Token = "0x4002CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		public bool disableSound;

		[Token(Token = "0x4002CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float startDelay;

		[Token(Token = "0x4002CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float respawnDelay;

		[Token(Token = "0x4002CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool slideshowMode;

		[Token(Token = "0x4002CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool autoRotation;

		[Token(Token = "0x4002CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[Range(0.001f, 0.5f)]
		public float autoRotationSpeed;

		[Token(Token = "0x4002CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject currentEffect;

		[Token(Token = "0x4002CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Text effectNameText;

		[Token(Token = "0x4002CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Text effectIndexText;

		[Token(Token = "0x4002CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private ETFXMouseOrbit etfxMouseOrbit;

		[Token(Token = "0x6002112")]
		[Address(RVA = "0x1AF34E8", Offset = "0x1AF34E8", VA = "0x1AF34E8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002113")]
		[Address(RVA = "0x1AF3838", Offset = "0x1AF3838", VA = "0x1AF3838")]
		private void Start()
		{
		}

		[Token(Token = "0x6002114")]
		[Address(RVA = "0x1AF3888", Offset = "0x1AF3888", VA = "0x1AF3888")]
		private void Update()
		{
		}

		[Token(Token = "0x6002115")]
		[Address(RVA = "0x1AF394C", Offset = "0x1AF394C", VA = "0x1AF394C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6002116")]
		[Address(RVA = "0x1AF39A0", Offset = "0x1AF39A0", VA = "0x1AF39A0")]
		public void InitializeLoop()
		{
		}

		[Token(Token = "0x6002117")]
		[Address(RVA = "0x1AF38EC", Offset = "0x1AF38EC", VA = "0x1AF38EC")]
		public void NextEffect()
		{
		}

		[Token(Token = "0x6002118")]
		[Address(RVA = "0x1AF391C", Offset = "0x1AF391C", VA = "0x1AF391C")]
		public void PreviousEffect()
		{
		}

		[Token(Token = "0x6002119")]
		[Address(RVA = "0x1AF3A34", Offset = "0x1AF3A34", VA = "0x1AF3A34")]
		private void CleanCurrentEffect()
		{
		}

		[Token(Token = "0x600211A")]
		[Address(RVA = "0x1AF39C0", Offset = "0x1AF39C0", VA = "0x1AF39C0")]
		[IteratorStateMachine(typeof(<EffectLoop>d__22))]
		private IEnumerator EffectLoop()
		{
			return null;
		}

		[Token(Token = "0x600211B")]
		[Address(RVA = "0x1AF3AFC", Offset = "0x1AF3AFC", VA = "0x1AF3AFC")]
		public ETFXEffectControllerPooled()
		{
		}
	}
	[Token(Token = "0x200083E")]
	public class ETFXEffectCycler : MonoBehaviour
	{
		[Token(Token = "0x200083F")]
		[CompilerGenerated]
		private sealed class <EffectLoop>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ETFXEffectCycler <>4__this;

			[Token(Token = "0x4002D0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private GameObject <instantiatedEffect>5__2;

			[Token(Token = "0x17000355")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002129")]
				[Address(RVA = "0x1AF4458", Offset = "0x1AF4458", VA = "0x1AF4458", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000356")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600212B")]
				[Address(RVA = "0x1AF44A0", Offset = "0x1AF44A0", VA = "0x1AF44A0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002126")]
			[Address(RVA = "0x1AF40B4", Offset = "0x1AF40B4", VA = "0x1AF40B4")]
			[DebuggerHidden]
			public <EffectLoop>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6002127")]
			[Address(RVA = "0x1AF40F4", Offset = "0x1AF40F4", VA = "0x1AF40F4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002128")]
			[Address(RVA = "0x1AF40F8", Offset = "0x1AF40F8", VA = "0x1AF40F8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600212A")]
			[Address(RVA = "0x1AF4460", Offset = "0x1AF4460", VA = "0x1AF4460", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<GameObject> listOfEffects;

		[Token(Token = "0x4002D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int effectIndex;

		[Token(Token = "0x4002D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Header("Spawn Settings")]
		[SerializeField]
		[Space(10f)]
		public float loopLength;

		[Token(Token = "0x4002D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float startDelay;

		[Token(Token = "0x4002D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool disableLights;

		[Token(Token = "0x4002D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		public bool disableSound;

		[Token(Token = "0x6002122")]
		[Address(RVA = "0x1AF3F70", Offset = "0x1AF3F70", VA = "0x1AF3F70")]
		private void Start()
		{
		}

		[Token(Token = "0x6002123")]
		[Address(RVA = "0x1AF3FC0", Offset = "0x1AF3FC0", VA = "0x1AF3FC0")]
		public void PlayEffect()
		{
		}

		[Token(Token = "0x6002124")]
		[Address(RVA = "0x1AF4040", Offset = "0x1AF4040", VA = "0x1AF4040")]
		[IteratorStateMachine(typeof(<EffectLoop>d__8))]
		private IEnumerator EffectLoop()
		{
			return null;
		}

		[Token(Token = "0x6002125")]
		[Address(RVA = "0x1AF40DC", Offset = "0x1AF40DC", VA = "0x1AF40DC")]
		public ETFXEffectCycler()
		{
		}
	}
	[Token(Token = "0x2000840")]
	public class ETFXFireProjectile : MonoBehaviour
	{
		[Token(Token = "0x4002D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public GameObject[] projectiles;

		[Token(Token = "0x4002D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("Missile spawns at attached game object")]
		public Transform spawnPosition;

		[Token(Token = "0x4002D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public int currentProjectile;

		[Token(Token = "0x4002D0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float speed;

		[Token(Token = "0x4002D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ETFXButtonScript selectedProjectileButton;

		[Token(Token = "0x4002D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private RaycastHit hit;

		[Token(Token = "0x600212C")]
		[Address(RVA = "0x1AF44A8", Offset = "0x1AF44A8", VA = "0x1AF44A8")]
		private void Start()
		{
		}

		[Token(Token = "0x600212D")]
		[Address(RVA = "0x1AF4524", Offset = "0x1AF4524", VA = "0x1AF4524")]
		private void Update()
		{
		}

		[Token(Token = "0x600212E")]
		[Address(RVA = "0x1AF48F4", Offset = "0x1AF48F4", VA = "0x1AF48F4")]
		public void nextEffect()
		{
		}

		[Token(Token = "0x600212F")]
		[Address(RVA = "0x1AF4930", Offset = "0x1AF4930", VA = "0x1AF4930")]
		public void previousEffect()
		{
		}

		[Token(Token = "0x6002130")]
		[Address(RVA = "0x1AF496C", Offset = "0x1AF496C", VA = "0x1AF496C")]
		public void AdjustSpeed(float newSpeed)
		{
		}

		[Token(Token = "0x6002131")]
		[Address(RVA = "0x1AF4974", Offset = "0x1AF4974", VA = "0x1AF4974")]
		public ETFXFireProjectile()
		{
		}
	}
	[Token(Token = "0x2000841")]
	public class ETFXLoopScript : MonoBehaviour
	{
		[Token(Token = "0x2000842")]
		[CompilerGenerated]
		private sealed class <EffectLoop>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ETFXLoopScript <>4__this;

			[Token(Token = "0x4002D18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private GameObject <effectPlayer>5__2;

			[Token(Token = "0x17000357")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002139")]
				[Address(RVA = "0x1AF4D40", Offset = "0x1AF4D40", VA = "0x1AF4D40", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000358")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600213B")]
				[Address(RVA = "0x1AF4D88", Offset = "0x1AF4D88", VA = "0x1AF4D88", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002136")]
			[Address(RVA = "0x1AF4A48", Offset = "0x1AF4A48", VA = "0x1AF4A48")]
			[DebuggerHidden]
			public <EffectLoop>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6002137")]
			[Address(RVA = "0x1AF4A88", Offset = "0x1AF4A88", VA = "0x1AF4A88", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002138")]
			[Address(RVA = "0x1AF4A8C", Offset = "0x1AF4A8C", VA = "0x1AF4A8C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600213A")]
			[Address(RVA = "0x1AF4D48", Offset = "0x1AF4D48", VA = "0x1AF4D48", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject chosenEffect;

		[Token(Token = "0x4002D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float loopTimeLimit;

		[Token(Token = "0x4002D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Header("Spawn without")]
		public bool disableLights;

		[Token(Token = "0x4002D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool disableSound;

		[Token(Token = "0x6002132")]
		[Address(RVA = "0x1AF4984", Offset = "0x1AF4984", VA = "0x1AF4984")]
		private void Start()
		{
		}

		[Token(Token = "0x6002133")]
		[Address(RVA = "0x1AF4988", Offset = "0x1AF4988", VA = "0x1AF4988")]
		public void PlayEffect()
		{
		}

		[Token(Token = "0x6002134")]
		[Address(RVA = "0x1AF49D4", Offset = "0x1AF49D4", VA = "0x1AF49D4")]
		[IteratorStateMachine(typeof(<EffectLoop>d__6))]
		private IEnumerator EffectLoop()
		{
			return null;
		}

		[Token(Token = "0x6002135")]
		[Address(RVA = "0x1AF4A70", Offset = "0x1AF4A70", VA = "0x1AF4A70")]
		public ETFXLoopScript()
		{
		}
	}
	[Token(Token = "0x2000843")]
	public class ETFXMouseOrbit : MonoBehaviour
	{
		[Token(Token = "0x2000844")]
		[CompilerGenerated]
		private sealed class <AutoRotate>d__25 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ETFXMouseOrbit <>4__this;

			[Token(Token = "0x4002D2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <lerpSteps>5__2;

			[Token(Token = "0x17000359")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002148")]
				[Address(RVA = "0x1AF55AC", Offset = "0x1AF55AC", VA = "0x1AF55AC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700035A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600214A")]
				[Address(RVA = "0x1AF55F4", Offset = "0x1AF55F4", VA = "0x1AF55F4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002145")]
			[Address(RVA = "0x1AF5408", Offset = "0x1AF5408", VA = "0x1AF5408")]
			[DebuggerHidden]
			public <AutoRotate>d__25(int <>1__state)
			{
			}

			[Token(Token = "0x6002146")]
			[Address(RVA = "0x1AF5464", Offset = "0x1AF5464", VA = "0x1AF5464", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002147")]
			[Address(RVA = "0x1AF5468", Offset = "0x1AF5468", VA = "0x1AF5468", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002149")]
			[Address(RVA = "0x1AF55B4", Offset = "0x1AF55B4", VA = "0x1AF55B4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform target;

		[Token(Token = "0x4002D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float distance;

		[Token(Token = "0x4002D1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float xSpeed;

		[Token(Token = "0x4002D1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float ySpeed;

		[Token(Token = "0x4002D1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float yMinLimit;

		[Token(Token = "0x4002D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float yMaxLimit;

		[Token(Token = "0x4002D1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float distanceMin;

		[Token(Token = "0x4002D20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float distanceMax;

		[Token(Token = "0x4002D21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float smoothTime;

		[Token(Token = "0x4002D22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float rotationYAxis;

		[Token(Token = "0x4002D23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float rotationXAxis;

		[Token(Token = "0x4002D24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float velocityX;

		[Token(Token = "0x4002D25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float maxVelocityX;

		[Token(Token = "0x4002D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float velocityY;

		[Token(Token = "0x4002D27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private readonly float autoRotationSmoothing;

		[Token(Token = "0x4002D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public bool isAutoRotating;

		[Token(Token = "0x4002D29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public ETFXEffectController etfxEffectController;

		[Token(Token = "0x4002D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public ETFXEffectControllerPooled etfxEffectControllerPooled;

		[Token(Token = "0x600213C")]
		[Address(RVA = "0x1AF4D90", Offset = "0x1AF4D90", VA = "0x1AF4D90")]
		private void Start()
		{
		}

		[Token(Token = "0x600213D")]
		[Address(RVA = "0x1AF4E5C", Offset = "0x1AF4E5C", VA = "0x1AF4E5C")]
		private void Update()
		{
		}

		[Token(Token = "0x600213E")]
		[Address(RVA = "0x1AF5070", Offset = "0x1AF5070", VA = "0x1AF5070")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600213F")]
		[Address(RVA = "0x1AF5350", Offset = "0x1AF5350", VA = "0x1AF5350")]
		public static float ClampAngle(float angle, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x6002140")]
		[Address(RVA = "0x1AF2E48", Offset = "0x1AF2E48", VA = "0x1AF2E48")]
		public void InitializeAutoRotation()
		{
		}

		[Token(Token = "0x6002141")]
		[Address(RVA = "0x1AF5400", Offset = "0x1AF5400", VA = "0x1AF5400")]
		public void SetAutoRotationSpeed(float rotationSpeed)
		{
		}

		[Token(Token = "0x6002142")]
		[Address(RVA = "0x1AF4FB8", Offset = "0x1AF4FB8", VA = "0x1AF4FB8")]
		private void StopAutoRotation()
		{
		}

		[Token(Token = "0x6002143")]
		[Address(RVA = "0x1AF538C", Offset = "0x1AF538C", VA = "0x1AF538C")]
		[IteratorStateMachine(typeof(<AutoRotate>d__25))]
		private IEnumerator AutoRotate()
		{
			return null;
		}

		[Token(Token = "0x6002144")]
		[Address(RVA = "0x1AF5430", Offset = "0x1AF5430", VA = "0x1AF5430")]
		public ETFXMouseOrbit()
		{
		}
	}
	[Token(Token = "0x2000845")]
	public class ETFXProjectileScript : MonoBehaviour
	{
		[Token(Token = "0x4002D2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject impactParticle;

		[Token(Token = "0x4002D30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject projectileParticle;

		[Token(Token = "0x4002D31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject muzzleParticle;

		[Token(Token = "0x4002D32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Header("Adjust if not using Sphere Collider")]
		public float colliderRadius;

		[Token(Token = "0x4002D33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[Range(0f, 1f)]
		public float collideOffset;

		[Token(Token = "0x600214B")]
		[Address(RVA = "0x1AF55FC", Offset = "0x1AF55FC", VA = "0x1AF55FC")]
		private void Start()
		{
		}

		[Token(Token = "0x600214C")]
		[Address(RVA = "0x1AF5824", Offset = "0x1AF5824", VA = "0x1AF5824")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600214D")]
		[Address(RVA = "0x1AF5E6C", Offset = "0x1AF5E6C", VA = "0x1AF5E6C")]
		public ETFXProjectileScript()
		{
		}
	}
	[Token(Token = "0x2000846")]
	public class ETFXSceneManager : MonoBehaviour
	{
		[Token(Token = "0x4002D34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool GUIHide;

		[Token(Token = "0x4002D35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool GUIHide2;

		[Token(Token = "0x4002D36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool GUIHide3;

		[Token(Token = "0x4002D37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		public bool GUIHide4;

		[Token(Token = "0x600214E")]
		[Address(RVA = "0x1AF5E80", Offset = "0x1AF5E80", VA = "0x1AF5E80")]
		public void LoadScene2DDemo()
		{
		}

		[Token(Token = "0x600214F")]
		[Address(RVA = "0x1AF5EE8", Offset = "0x1AF5EE8", VA = "0x1AF5EE8")]
		public void LoadSceneCards()
		{
		}

		[Token(Token = "0x6002150")]
		[Address(RVA = "0x1AF5F50", Offset = "0x1AF5F50", VA = "0x1AF5F50")]
		public void LoadSceneCombat()
		{
		}

		[Token(Token = "0x6002151")]
		[Address(RVA = "0x1AF5FB8", Offset = "0x1AF5FB8", VA = "0x1AF5FB8")]
		public void LoadSceneDecals()
		{
		}

		[Token(Token = "0x6002152")]
		[Address(RVA = "0x1AF6020", Offset = "0x1AF6020", VA = "0x1AF6020")]
		public void LoadSceneDecals2()
		{
		}

		[Token(Token = "0x6002153")]
		[Address(RVA = "0x1AF6088", Offset = "0x1AF6088", VA = "0x1AF6088")]
		public void LoadSceneEmojis()
		{
		}

		[Token(Token = "0x6002154")]
		[Address(RVA = "0x1AF60F0", Offset = "0x1AF60F0", VA = "0x1AF60F0")]
		public void LoadSceneEmojis2()
		{
		}

		[Token(Token = "0x6002155")]
		[Address(RVA = "0x1AF6158", Offset = "0x1AF6158", VA = "0x1AF6158")]
		public void LoadSceneExplosions()
		{
		}

		[Token(Token = "0x6002156")]
		[Address(RVA = "0x1AF61C0", Offset = "0x1AF61C0", VA = "0x1AF61C0")]
		public void LoadSceneExplosions2()
		{
		}

		[Token(Token = "0x6002157")]
		[Address(RVA = "0x1AF6228", Offset = "0x1AF6228", VA = "0x1AF6228")]
		public void LoadSceneFire()
		{
		}

		[Token(Token = "0x6002158")]
		[Address(RVA = "0x1AF6290", Offset = "0x1AF6290", VA = "0x1AF6290")]
		public void LoadSceneOnomatopoeia()
		{
		}

		[Token(Token = "0x6002159")]
		[Address(RVA = "0x1AF62F8", Offset = "0x1AF62F8", VA = "0x1AF62F8")]
		public void LoadSceneFireworks()
		{
		}

		[Token(Token = "0x600215A")]
		[Address(RVA = "0x1AF6360", Offset = "0x1AF6360", VA = "0x1AF6360")]
		public void LoadSceneFlares()
		{
		}

		[Token(Token = "0x600215B")]
		[Address(RVA = "0x1AF63C8", Offset = "0x1AF63C8", VA = "0x1AF63C8")]
		public void LoadSceneMagic()
		{
		}

		[Token(Token = "0x600215C")]
		[Address(RVA = "0x1AF6430", Offset = "0x1AF6430", VA = "0x1AF6430")]
		public void LoadSceneMagic2()
		{
		}

		[Token(Token = "0x600215D")]
		[Address(RVA = "0x1AF6498", Offset = "0x1AF6498", VA = "0x1AF6498")]
		public void LoadSceneMagic3()
		{
		}

		[Token(Token = "0x600215E")]
		[Address(RVA = "0x1AF6500", Offset = "0x1AF6500", VA = "0x1AF6500")]
		public void LoadSceneMainDemo()
		{
		}

		[Token(Token = "0x600215F")]
		[Address(RVA = "0x1AF6568", Offset = "0x1AF6568", VA = "0x1AF6568")]
		public void LoadSceneMissiles()
		{
		}

		[Token(Token = "0x6002160")]
		[Address(RVA = "0x1AF65D0", Offset = "0x1AF65D0", VA = "0x1AF65D0")]
		public void LoadScenePortals()
		{
		}

		[Token(Token = "0x6002161")]
		[Address(RVA = "0x1AF6638", Offset = "0x1AF6638", VA = "0x1AF6638")]
		public void LoadScenePortals2()
		{
		}

		[Token(Token = "0x6002162")]
		[Address(RVA = "0x1AF66A0", Offset = "0x1AF66A0", VA = "0x1AF66A0")]
		public void LoadScenePowerups()
		{
		}

		[Token(Token = "0x6002163")]
		[Address(RVA = "0x1AF6708", Offset = "0x1AF6708", VA = "0x1AF6708")]
		public void LoadScenePowerups2()
		{
		}

		[Token(Token = "0x6002164")]
		[Address(RVA = "0x1AF6770", Offset = "0x1AF6770", VA = "0x1AF6770")]
		public void LoadScenePowerups3()
		{
		}

		[Token(Token = "0x6002165")]
		[Address(RVA = "0x1AF67D8", Offset = "0x1AF67D8", VA = "0x1AF67D8")]
		public void LoadSceneSparkles()
		{
		}

		[Token(Token = "0x6002166")]
		[Address(RVA = "0x1AF6840", Offset = "0x1AF6840", VA = "0x1AF6840")]
		public void LoadSceneSwordCombat()
		{
		}

		[Token(Token = "0x6002167")]
		[Address(RVA = "0x1AF68A8", Offset = "0x1AF68A8", VA = "0x1AF68A8")]
		public void LoadSceneSwordCombat2()
		{
		}

		[Token(Token = "0x6002168")]
		[Address(RVA = "0x1AF6910", Offset = "0x1AF6910", VA = "0x1AF6910")]
		public void LoadSceneMoney()
		{
		}

		[Token(Token = "0x6002169")]
		[Address(RVA = "0x1AF6978", Offset = "0x1AF6978", VA = "0x1AF6978")]
		public void LoadSceneHealing()
		{
		}

		[Token(Token = "0x600216A")]
		[Address(RVA = "0x1AF69E0", Offset = "0x1AF69E0", VA = "0x1AF69E0")]
		public void LoadSceneWind()
		{
		}

		[Token(Token = "0x600216B")]
		[Address(RVA = "0x1AF6A48", Offset = "0x1AF6A48", VA = "0x1AF6A48")]
		public void LoadSceneWater()
		{
		}

		[Token(Token = "0x600216C")]
		[Address(RVA = "0x1AF6AB0", Offset = "0x1AF6AB0", VA = "0x1AF6AB0")]
		private void Update()
		{
		}

		[Token(Token = "0x600216D")]
		[Address(RVA = "0x1AF6C70", Offset = "0x1AF6C70", VA = "0x1AF6C70")]
		public ETFXSceneManager()
		{
		}
	}
	[Token(Token = "0x2000847")]
	public class ETFXTarget : MonoBehaviour
	{
		[Token(Token = "0x2000848")]
		[CompilerGenerated]
		private sealed class <Respawn>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ETFXTarget <>4__this;

			[Token(Token = "0x1700035B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002176")]
				[Address(RVA = "0x1AF7158", Offset = "0x1AF7158", VA = "0x1AF7158", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700035C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002178")]
				[Address(RVA = "0x1AF71A0", Offset = "0x1AF71A0", VA = "0x1AF71A0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002173")]
			[Address(RVA = "0x1AF7078", Offset = "0x1AF7078", VA = "0x1AF7078")]
			[DebuggerHidden]
			public <Respawn>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6002174")]
			[Address(RVA = "0x1AF70A8", Offset = "0x1AF70A8", VA = "0x1AF70A8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002175")]
			[Address(RVA = "0x1AF70AC", Offset = "0x1AF70AC", VA = "0x1AF70AC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002177")]
			[Address(RVA = "0x1AF7160", Offset = "0x1AF7160", VA = "0x1AF7160", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002D38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Effect shown on target hit")]
		public GameObject hitParticle;

		[Token(Token = "0x4002D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("Effect shown on target respawn")]
		public GameObject respawnParticle;

		[Token(Token = "0x4002D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Renderer targetRenderer;

		[Token(Token = "0x4002D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Collider targetCollider;

		[Token(Token = "0x600216E")]
		[Address(RVA = "0x1AF6C78", Offset = "0x1AF6C78", VA = "0x1AF6C78")]
		private void Start()
		{
		}

		[Token(Token = "0x600216F")]
		[Address(RVA = "0x1AF6D08", Offset = "0x1AF6D08", VA = "0x1AF6D08")]
		private void SpawnTarget()
		{
		}

		[Token(Token = "0x6002170")]
		[Address(RVA = "0x1AF6E38", Offset = "0x1AF6E38", VA = "0x1AF6E38")]
		private void OnTriggerEnter(Collider col)
		{
		}

		[Token(Token = "0x6002171")]
		[Address(RVA = "0x1AF7004", Offset = "0x1AF7004", VA = "0x1AF7004")]
		[IteratorStateMachine(typeof(<Respawn>d__7))]
		private IEnumerator Respawn()
		{
			return null;
		}

		[Token(Token = "0x6002172")]
		[Address(RVA = "0x1AF70A0", Offset = "0x1AF70A0", VA = "0x1AF70A0")]
		public ETFXTarget()
		{
		}
	}
	[Token(Token = "0x2000849")]
	public class ETFXLightFade : MonoBehaviour
	{
		[Token(Token = "0x4002D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Seconds to dim the light")]
		public float life;

		[Token(Token = "0x4002D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool killAfterLife;

		[Token(Token = "0x4002D41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Light li;

		[Token(Token = "0x4002D42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float initIntensity;

		[Token(Token = "0x6002179")]
		[Address(RVA = "0x1AF71A8", Offset = "0x1AF71A8", VA = "0x1AF71A8")]
		private void Start()
		{
		}

		[Token(Token = "0x600217A")]
		[Address(RVA = "0x1AF72C4", Offset = "0x1AF72C4", VA = "0x1AF72C4")]
		private void Update()
		{
		}

		[Token(Token = "0x600217B")]
		[Address(RVA = "0x1AF7418", Offset = "0x1AF7418", VA = "0x1AF7418")]
		public ETFXLightFade()
		{
		}
	}
	[Token(Token = "0x200084A")]
	public class ETFXPitchRandomizer : MonoBehaviour
	{
		[Token(Token = "0x4002D43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float randomPercent;

		[Token(Token = "0x600217C")]
		[Address(RVA = "0x1AF7434", Offset = "0x1AF7434", VA = "0x1AF7434")]
		private void Start()
		{
		}

		[Token(Token = "0x600217D")]
		[Address(RVA = "0x1AF74E4", Offset = "0x1AF74E4", VA = "0x1AF74E4")]
		public ETFXPitchRandomizer()
		{
		}
	}
	[Token(Token = "0x200084B")]
	public class ETFXRotation : MonoBehaviour
	{
		[Token(Token = "0x200084C")]
		public enum spaceEnum
		{
			[Token(Token = "0x4002D47")]
			Local,
			[Token(Token = "0x4002D48")]
			World
		}

		[Token(Token = "0x4002D44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Rotate axises by degrees per second")]
		public Vector3 rotateVector;

		[Token(Token = "0x4002D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public spaceEnum rotateSpace;

		[Token(Token = "0x600217E")]
		[Address(RVA = "0x1AF74F4", Offset = "0x1AF74F4", VA = "0x1AF74F4")]
		private void Start()
		{
		}

		[Token(Token = "0x600217F")]
		[Address(RVA = "0x1AF74F8", Offset = "0x1AF74F8", VA = "0x1AF74F8")]
		private void Update()
		{
		}

		[Token(Token = "0x6002180")]
		[Address(RVA = "0x1AF75CC", Offset = "0x1AF75CC", VA = "0x1AF75CC")]
		public ETFXRotation()
		{
		}
	}
}
namespace AGIA
{
	[Token(Token = "0x200084D")]
	public class AGIAFree_sample : MonoBehaviour
	{
		[Token(Token = "0x4002D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Animator animator;

		[Token(Token = "0x4002D4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int animBase;

		[Token(Token = "0x4002D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int animLayer;

		[Token(Token = "0x6002181")]
		[Address(RVA = "0x1AF762C", Offset = "0x1AF762C", VA = "0x1AF762C")]
		private void Start()
		{
		}

		[Token(Token = "0x6002182")]
		[Address(RVA = "0x1AF76B4", Offset = "0x1AF76B4", VA = "0x1AF76B4")]
		private void Update()
		{
		}

		[Token(Token = "0x6002183")]
		[Address(RVA = "0x1AF76B8", Offset = "0x1AF76B8", VA = "0x1AF76B8")]
		public void animBaseChange()
		{
		}

		[Token(Token = "0x6002184")]
		[Address(RVA = "0x1AF7990", Offset = "0x1AF7990", VA = "0x1AF7990")]
		public void animLayerChange()
		{
		}

		[Token(Token = "0x6002185")]
		[Address(RVA = "0x1AF7B38", Offset = "0x1AF7B38", VA = "0x1AF7B38")]
		public void animOtherChange()
		{
		}

		[Token(Token = "0x6002186")]
		[Address(RVA = "0x1AF7C6C", Offset = "0x1AF7C6C", VA = "0x1AF7C6C")]
		public AGIAFree_sample()
		{
		}
	}
}
namespace Fusion.CodeGen
{
	[Serializable]
	[StructLayout(2)]
	[Token(Token = "0x2000854")]
	[NetworkStructWeaved(3)]
	internal struct FixedStorage@3 : INetworkStruct
	{
		[Token(Token = "0x4002D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public unsafe fixed int Data[3];

		[NonSerialized]
		[Token(Token = "0x4002D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private int _1;

		[NonSerialized]
		[Token(Token = "0x4002D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int _2;
	}
	[Token(Token = "0x2000856")]
	internal struct ReaderWriter@System_Int32 : IElementReaderWriter<int>
	{
		[Token(Token = "0x4002D5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static IElementReaderWriter<int> Instance;

		[Token(Token = "0x6002187")]
		[Address(RVA = "0x1AF7C74", Offset = "0x1AF7C74", VA = "0x1AF7C74", Slot = "4")]
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		public unsafe int Read(byte* data, int index)
		{
			return default(int);
		}

		[Token(Token = "0x6002188")]
		[Address(RVA = "0x1AF7C80", Offset = "0x1AF7C80", VA = "0x1AF7C80", Slot = "5")]
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		public unsafe void Write(byte* data, int index, int val)
		{
		}

		[Token(Token = "0x6002189")]
		[Address(RVA = "0x1AF7C8C", Offset = "0x1AF7C8C", VA = "0x1AF7C8C", Slot = "6")]
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		public int GetElementWordCount()
		{
			return default(int);
		}

		[Token(Token = "0x600218A")]
		[Address(RVA = "0x1AF7C94", Offset = "0x1AF7C94", VA = "0x1AF7C94")]
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		public static IElementReaderWriter<int> GetInstance()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000857")]
	internal class UnityArraySurrogate@ReaderWriter@System_Int32 : UnityArraySurrogate<int, ReaderWriter@System_Int32>
	{
		[Token(Token = "0x4002D5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int[] Data;

		[Token(Token = "0x1700035D")]
		public override int[] DataProperty
		{
			[Token(Token = "0x600218B")]
			[Address(RVA = "0x1AF7D18", Offset = "0x1AF7D18", VA = "0x1AF7D18", Slot = "8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600218C")]
			[Address(RVA = "0x1AF7D20", Offset = "0x1AF7D20", VA = "0x1AF7D20", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x600218D")]
		[Address(RVA = "0x1AF7D28", Offset = "0x1AF7D28", VA = "0x1AF7D28")]
		public UnityArraySurrogate@ReaderWriter@System_Int32()
		{
		}
	}
	[Token(Token = "0x2000858")]
	internal struct ReaderWriter@Imacreate_GrooveFitIsland_PlayerData : IElementReaderWriter<PlayerData>
	{
		[Token(Token = "0x4002D5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static IElementReaderWriter<PlayerData> Instance;

		[Token(Token = "0x600218E")]
		[Address(RVA = "0x1AF7DD0", Offset = "0x1AF7DD0", VA = "0x1AF7DD0", Slot = "4")]
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		public unsafe PlayerData Read(byte* data, int index)
		{
			return default(PlayerData);
		}

		[Token(Token = "0x600218F")]
		[Address(RVA = "0x1AF7DE8", Offset = "0x1AF7DE8", VA = "0x1AF7DE8", Slot = "5")]
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		public unsafe void Write(byte* data, int index, PlayerData val)
		{
		}

		[Token(Token = "0x6002190")]
		[Address(RVA = "0x1AF7E00", Offset = "0x1AF7E00", VA = "0x1AF7E00", Slot = "6")]
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		public int GetElementWordCount()
		{
			return default(int);
		}

		[Token(Token = "0x6002191")]
		[Address(RVA = "0x1AF7E08", Offset = "0x1AF7E08", VA = "0x1AF7E08")]
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		public static IElementReaderWriter<PlayerData> GetInstance()
		{
			return null;
		}
	}
}
