using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Runtime.Serialization;
using BezierSolution;
using Bhaptics.Tact;
using Bhaptics.Tact.Unity;
using CrisisVRigade.UI;
using DG.Tweening;
using DG.Tweening.Core;
using DG.Tweening.Plugins.Core.PathCore;
using DG.Tweening.Plugins.Options;
using ExitGames.Client.Photon;
using Il2CppDummyDll;
using NewtonVR;
using Photon.Chat;
using Photon.Pun;
using Photon.Pun.Demo.Shared;
using Photon.Pun.Demo.SlotRacer.Utils;
using Photon.Pun.UtilityScripts;
using Photon.Realtime;
using RootMotion.FinalIK;
using Sumalab.Util;
using Sumalab_Hands;
using Sumalab_Weapons;
using TMPro;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.SceneManagement;
using UnityEngine.Scripting;
using UnityEngine.UI;
using UnityEngine.XR;
using UnitySA.Utility;
using VRigade.online;
using VRrigade;
using VolumetricLines;
using ch.sycoforge.Decal;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
public class AndroidBuildDisable : MonoBehaviour
{
	[Token(Token = "0x6000001")]
	[Address(RVA = "0x86BDF8", Offset = "0x86BDF8", VA = "0x86BDF8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000002")]
	[Address(RVA = "0x86BE1C", Offset = "0x86BE1C", VA = "0x86BE1C")]
	public AndroidBuildDisable()
	{
	}
}
[Token(Token = "0x2000003")]
public class BhapticsAndroidBasicExample : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000004")]
	public struct BhapticsAndroidExampleButtons
	{
		[Token(Token = "0x4000006")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Button ping;

		[Token(Token = "0x4000007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Button toggle;
	}

	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BhapticsAndroidExampleButtons talButtons;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public BhapticsAndroidExampleButtons suitButtons;

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public BhapticsAndroidExampleButtons armsLeftButtons;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public BhapticsAndroidExampleButtons armsRightButtons;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Text pairedDevicesCount;

	[Token(Token = "0x6000003")]
	[Address(RVA = "0x86BE24", Offset = "0x86BE24", VA = "0x86BE24")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000004")]
	[Address(RVA = "0x86BEC8", Offset = "0x86BEC8", VA = "0x86BEC8")]
	private void Refresh()
	{
	}

	[Token(Token = "0x6000005")]
	[Address(RVA = "0x86C124", Offset = "0x86C124", VA = "0x86C124")]
	public void PingTactal()
	{
	}

	[Token(Token = "0x6000006")]
	[Address(RVA = "0x86C19C", Offset = "0x86C19C", VA = "0x86C19C")]
	public void PingTactSuit()
	{
	}

	[Token(Token = "0x6000007")]
	[Address(RVA = "0x86C1BC", Offset = "0x86C1BC", VA = "0x86C1BC")]
	public void PingTactosyArms(bool isLeft)
	{
	}

	[Token(Token = "0x6000008")]
	[Address(RVA = "0x86C1DC", Offset = "0x86C1DC", VA = "0x86C1DC")]
	public void ToggleTactosyArms(bool isLeft)
	{
	}

	[Token(Token = "0x6000009")]
	[Address(RVA = "0x86C144", Offset = "0x86C144", VA = "0x86C144")]
	private void PingPairedDevice(PositionType deviceType)
	{
	}

	[Token(Token = "0x600000A")]
	[Address(RVA = "0x86C2DC", Offset = "0x86C2DC", VA = "0x86C2DC")]
	public BhapticsAndroidBasicExample()
	{
	}
}
[Token(Token = "0x2000005")]
public class BhapticsAndroidScanExample : MonoBehaviour
{
	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AndroidWidget_ControlButton[] controlButtons;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool open;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Button activeButton;

	[Token(Token = "0x600000B")]
	[Address(RVA = "0x86C2E4", Offset = "0x86C2E4", VA = "0x86C2E4")]
	private void Start()
	{
	}

	[Token(Token = "0x600000C")]
	[Address(RVA = "0x86C4D0", Offset = "0x86C4D0", VA = "0x86C4D0")]
	private void Refresh()
	{
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0x86C71C", Offset = "0x86C71C", VA = "0x86C71C")]
	public void Toggle()
	{
	}

	[Token(Token = "0x600000E")]
	[Address(RVA = "0x86C734", Offset = "0x86C734", VA = "0x86C734")]
	private void Open()
	{
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0x86C3F4", Offset = "0x86C3F4", VA = "0x86C3F4")]
	private void Close()
	{
	}

	[Token(Token = "0x6000010")]
	[Address(RVA = "0x86C810", Offset = "0x86C810", VA = "0x86C810")]
	public BhapticsAndroidScanExample()
	{
	}
}
[Token(Token = "0x2000006")]
public class BhapticsCharacterController : MonoBehaviour
{
	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float jumpSpeed;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float gravity;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float rotationSpeedH;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float rotationSpeedV;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool isEnableControl;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 moveDirection;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private HapticSender tactSender;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Header("Shooting with raycasting or with Physical bullet")]
	public bool IsRaycastingShooting;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Transform shootingPoint;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[Header("Physical bullet setting")]
	[SerializeField]
	private GameObject bulletPrefab;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private CharacterController characterController;

	[Token(Token = "0x6000011")]
	[Address(RVA = "0x86C818", Offset = "0x86C818", VA = "0x86C818")]
	private void Start()
	{
	}

	[Token(Token = "0x6000012")]
	[Address(RVA = "0x86C954", Offset = "0x86C954", VA = "0x86C954")]
	private void Update()
	{
	}

	[Token(Token = "0x6000013")]
	[Address(RVA = "0x86C974", Offset = "0x86C974", VA = "0x86C974")]
	private void ShootPlayer()
	{
	}

	[Token(Token = "0x6000014")]
	[Address(RVA = "0x86CFD0", Offset = "0x86CFD0", VA = "0x86CFD0")]
	private void RotatePlayer()
	{
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0x86CE78", Offset = "0x86CE78", VA = "0x86CE78")]
	private void MovePlayer()
	{
	}

	[Token(Token = "0x6000016")]
	[Address(RVA = "0x86D210", Offset = "0x86D210", VA = "0x86D210")]
	public BhapticsCharacterController()
	{
	}
}
[Token(Token = "0x2000007")]
public class BhapticsCustomHapticReceiver : MonoBehaviour
{
	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool IsActive;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public PositionTag PositionTag;

	[Token(Token = "0x6000017")]
	[Address(RVA = "0x86D28C", Offset = "0x86D28C", VA = "0x86D28C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000018")]
	[Address(RVA = "0x86D4A4", Offset = "0x86D4A4", VA = "0x86D4A4")]
	private void OnTriggerEnter(Collider bullet)
	{
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0x86D648", Offset = "0x86D648", VA = "0x86D648")]
	private void OnCollisionEnter(Collision bullet)
	{
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0x86D560", Offset = "0x86D560", VA = "0x86D560")]
	private void Handle(Vector3 contactPoint, HapticSender tactSender)
	{
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0x86D100", Offset = "0x86D100", VA = "0x86D100")]
	public void ReflectHandle(Vector3 contactPoint, HapticSender tactSender)
	{
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0x86D720", Offset = "0x86D720", VA = "0x86D720")]
	public BhapticsCustomHapticReceiver()
	{
	}
}
[Token(Token = "0x2000008")]
public class BhapticsDotPointControllerExample : MonoBehaviour
{
	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HapticClipPositionType clipPositionType;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public List<DotPoint> dotPointList;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string key;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int duration;

	[Token(Token = "0x600001D")]
	[Address(RVA = "0x86D730", Offset = "0x86D730", VA = "0x86D730")]
	private void Awake()
	{
	}

	[Token(Token = "0x600001E")]
	[Address(RVA = "0x86D7A4", Offset = "0x86D7A4", VA = "0x86D7A4")]
	private void Update()
	{
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0x86DB18", Offset = "0x86DB18", VA = "0x86DB18")]
	public void Toggle(DotPoint dot)
	{
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0x86DC28", Offset = "0x86DC28", VA = "0x86DC28")]
	private bool AddToList(DotPoint dot)
	{
		return default(bool);
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0x86DB94", Offset = "0x86DB94", VA = "0x86DB94")]
	private bool RemoveAtList(DotPoint dot)
	{
		return default(bool);
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0x86DD04", Offset = "0x86DD04", VA = "0x86DD04")]
	public BhapticsDotPointControllerExample()
	{
	}
}
[Token(Token = "0x2000009")]
public class BhapticsDotPointExample : MonoBehaviour
{
	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int motorIndex;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int motorIntensity;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private BhapticsDotPointControllerExample controller;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private DotPoint dotPoint;

	[Token(Token = "0x6000023")]
	[Address(RVA = "0x86DD4C", Offset = "0x86DD4C", VA = "0x86DD4C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0x86DDE4", Offset = "0x86DDE4", VA = "0x86DDE4")]
	public void Toggle()
	{
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0x86DE68", Offset = "0x86DE68", VA = "0x86DE68")]
	public BhapticsDotPointExample()
	{
	}
}
[Token(Token = "0x200000A")]
public class BhapticsFpsView : MonoBehaviour
{
	[Token(Token = "0x200000B")]
	[CompilerGenerated]
	private sealed class <FPS>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BhapticsFpsView <>4__this;

		[Token(Token = "0x4000026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float[] <buffer>5__2;

		[Token(Token = "0x4000027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <index>5__3;

		[Token(Token = "0x4000028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <frequency>5__4;

		[Token(Token = "0x4000029")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool <initial>5__5;

		[Token(Token = "0x400002A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int <lastFrameCount>5__6;

		[Token(Token = "0x400002B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <lastTime>5__7;

		[Token(Token = "0x17000001")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600002F")]
			[Address(RVA = "0x86E784", Offset = "0x86E784", VA = "0x86E784", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000002")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000031")]
			[Address(RVA = "0x86E7CC", Offset = "0x86E7CC", VA = "0x86E7CC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600002C")]
		[Address(RVA = "0x86DF50", Offset = "0x86DF50", VA = "0x86DF50")]
		[DebuggerHidden]
		public <FPS>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x600002D")]
		[Address(RVA = "0x86E13C", Offset = "0x86E13C", VA = "0x86E13C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600002E")]
		[Address(RVA = "0x86E140", Offset = "0x86E140", VA = "0x86E140", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000030")]
		[Address(RVA = "0x86E78C", Offset = "0x86E78C", VA = "0x86E78C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Text fpsText;

	[Token(Token = "0x6000026")]
	[Address(RVA = "0x86DE78", Offset = "0x86DE78", VA = "0x86DE78")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0x86DEC8", Offset = "0x86DEC8", VA = "0x86DEC8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0x86DEE8", Offset = "0x86DEE8", VA = "0x86DEE8")]
	[IteratorStateMachine(typeof(<FPS>d__3))]
	private IEnumerator FPS()
	{
		return null;
	}

	[Token(Token = "0x6000029")]
	[Address(RVA = "0x86DF78", Offset = "0x86DF78", VA = "0x86DF78")]
	private float Average(float[] floats)
	{
		return default(float);
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0x86DFE0", Offset = "0x86DFE0", VA = "0x86DFE0")]
	public float Percentile(float[] sequence, float excelPercentile)
	{
		return default(float);
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0x86E134", Offset = "0x86E134", VA = "0x86E134")]
	public BhapticsFpsView()
	{
	}
}
[Token(Token = "0x200000C")]
public class BhapticsHapticBullet : MonoBehaviour
{
	[Token(Token = "0x6000032")]
	[Address(RVA = "0x86E7D4", Offset = "0x86E7D4", VA = "0x86E7D4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0x86E844", Offset = "0x86E844", VA = "0x86E844")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0x86E8B0", Offset = "0x86E8B0", VA = "0x86E8B0")]
	public BhapticsHapticBullet()
	{
	}
}
[Token(Token = "0x200000D")]
public class BhapticsHapticClipExample : MonoBehaviour
{
	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HapticClip hapticClip;

	[Token(Token = "0x6000035")]
	[Address(RVA = "0x86E8B8", Offset = "0x86E8B8", VA = "0x86E8B8")]
	public void Play()
	{
	}

	[Token(Token = "0x6000036")]
	[Address(RVA = "0x86E940", Offset = "0x86E940", VA = "0x86E940")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000037")]
	[Address(RVA = "0x86E9CC", Offset = "0x86E9CC", VA = "0x86E9CC")]
	public BhapticsHapticClipExample()
	{
	}
}
[Token(Token = "0x200000E")]
public class BhapticsIdentifierPlayExample : MonoBehaviour
{
	[Token(Token = "0x200000F")]
	[CompilerGenerated]
	private sealed class <PlayCor>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BhapticsIdentifierPlayExample <>4__this;

		[Token(Token = "0x4000034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <bufferSize>5__2;

		[Token(Token = "0x4000035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <index>5__3;

		[Token(Token = "0x4000036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string <identifier>5__4;

		[Token(Token = "0x17000003")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000041")]
			[Address(RVA = "0x86EDE8", Offset = "0x86EDE8", VA = "0x86EDE8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000004")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000043")]
			[Address(RVA = "0x86EE30", Offset = "0x86EE30", VA = "0x86EE30", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600003E")]
		[Address(RVA = "0x86EBA8", Offset = "0x86EBA8", VA = "0x86EBA8")]
		[DebuggerHidden]
		public <PlayCor>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x600003F")]
		[Address(RVA = "0x86EBD8", Offset = "0x86EBD8", VA = "0x86EBD8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000040")]
		[Address(RVA = "0x86EBDC", Offset = "0x86EBDC", VA = "0x86EBDC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000042")]
		[Address(RVA = "0x86EDF0", Offset = "0x86EDF0", VA = "0x86EDF0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FileHapticClip clip;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text identifierText;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Coroutine currentCoroutine;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool applyIdentifier;

	[Token(Token = "0x6000038")]
	[Address(RVA = "0x86E9D4", Offset = "0x86E9D4", VA = "0x86E9D4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0x86EA34", Offset = "0x86EA34", VA = "0x86EA34")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600003A")]
	[Address(RVA = "0x86EA58", Offset = "0x86EA58", VA = "0x86EA58")]
	private void Update()
	{
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0x86E9D8", Offset = "0x86E9D8", VA = "0x86E9D8")]
	private void Play()
	{
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0x86EB40", Offset = "0x86EB40", VA = "0x86EB40")]
	[IteratorStateMachine(typeof(<PlayCor>d__8))]
	private IEnumerator PlayCor()
	{
		return null;
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0x86EBD0", Offset = "0x86EBD0", VA = "0x86EBD0")]
	public BhapticsIdentifierPlayExample()
	{
	}
}
[Token(Token = "0x2000010")]
public class BhapticsIsConnectIsPlayingExample : MonoBehaviour
{
	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FileHapticClip[] clips;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text isConnectText;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text clipText;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text isPlayingText;

	[Token(Token = "0x6000044")]
	[Address(RVA = "0x86EE38", Offset = "0x86EE38", VA = "0x86EE38")]
	private void Start()
	{
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0x86F008", Offset = "0x86F008", VA = "0x86F008")]
	private void Update()
	{
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0x86F8F4", Offset = "0x86F8F4", VA = "0x86F8F4")]
	private void PlayClips()
	{
	}

	[Token(Token = "0x6000047")]
	[Address(RVA = "0x86F958", Offset = "0x86F958", VA = "0x86F958")]
	public BhapticsIsConnectIsPlayingExample()
	{
	}
}
[Token(Token = "0x2000011")]
public class BhapticsLongTest : MonoBehaviour
{
	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private HapticClip[] tactClips;

	[Token(Token = "0x6000048")]
	[Address(RVA = "0x86F960", Offset = "0x86F960", VA = "0x86F960")]
	private void Start()
	{
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0x86F9E4", Offset = "0x86F9E4", VA = "0x86F9E4")]
	private void TriggerPlay()
	{
	}

	[Token(Token = "0x600004A")]
	[Address(RVA = "0x86FA48", Offset = "0x86FA48", VA = "0x86FA48")]
	private void ReloadScene()
	{
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0x86FB6C", Offset = "0x86FB6C", VA = "0x86FB6C")]
	public BhapticsLongTest()
	{
	}
}
[Token(Token = "0x2000012")]
public class BhapticsProfiler : MonoBehaviour
{
	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private int numOfTactClips;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public HapticClip[] tactClips;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool hapticEnable;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int targetFrameRate;

	[Token(Token = "0x600004C")]
	[Address(RVA = "0x86FB74", Offset = "0x86FB74", VA = "0x86FB74")]
	private void Awake()
	{
	}

	[Token(Token = "0x600004D")]
	[Address(RVA = "0x86FBD4", Offset = "0x86FBD4", VA = "0x86FBD4")]
	private void TriggerPlay()
	{
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0x86FD74", Offset = "0x86FD74", VA = "0x86FD74")]
	public BhapticsProfiler()
	{
	}
}
[Token(Token = "0x2000013")]
public class BhapticsReflectExample : MonoBehaviour
{
	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ArmsHapticClip armsHapticClip;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isReflect;

	[Token(Token = "0x600004F")]
	[Address(RVA = "0x86FD8C", Offset = "0x86FD8C", VA = "0x86FD8C")]
	public void Play()
	{
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0x86FE14", Offset = "0x86FE14", VA = "0x86FE14")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0x86FEA0", Offset = "0x86FEA0", VA = "0x86FEA0")]
	public void OnClickToggle(Toggle toggle)
	{
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0x86FF58", Offset = "0x86FF58", VA = "0x86FF58")]
	public BhapticsReflectExample()
	{
	}
}
[Token(Token = "0x2000014")]
public class BhapticsRotate : MonoBehaviour
{
	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool isRandom;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float rotationSpeed;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Vector3 axis;

	[Token(Token = "0x6000053")]
	[Address(RVA = "0x86FF60", Offset = "0x86FF60", VA = "0x86FF60")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0x86FFB4", Offset = "0x86FFB4", VA = "0x86FFB4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0x870000", Offset = "0x870000", VA = "0x870000")]
	private void Update()
	{
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0x87002C", Offset = "0x87002C", VA = "0x87002C")]
	private void RandomAxis()
	{
	}

	[Token(Token = "0x6000057")]
	[Address(RVA = "0x870098", Offset = "0x870098", VA = "0x870098")]
	public BhapticsRotate()
	{
	}
}
[Token(Token = "0x2000015")]
public class BhapticsRotateExample : MonoBehaviour
{
	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VestHapticClip vestHapticClip;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Space]
	public Text angleXText;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text offsetYText;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float angleX;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float offsetY;

	[Token(Token = "0x6000058")]
	[Address(RVA = "0x8700B0", Offset = "0x8700B0", VA = "0x8700B0")]
	public void PlayWithRotate()
	{
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0x870158", Offset = "0x870158", VA = "0x870158")]
	public void Stop()
	{
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0x8701E4", Offset = "0x8701E4", VA = "0x8701E4")]
	public void OnAngleXChanged(Slider slider)
	{
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0x870380", Offset = "0x870380", VA = "0x870380")]
	public void OnOffsetYChanged(Slider slider)
	{
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0x870538", Offset = "0x870538", VA = "0x870538")]
	public BhapticsRotateExample()
	{
	}
}
[Token(Token = "0x2000016")]
public class BhapticsShootingCharacter : MonoBehaviour
{
	[Token(Token = "0x2000017")]
	[CompilerGenerated]
	private sealed class <RepeatShoot>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BhapticsShootingCharacter <>4__this;

		[Token(Token = "0x17000005")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000068")]
			[Address(RVA = "0x870C24", Offset = "0x870C24", VA = "0x870C24", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000006")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600006A")]
			[Address(RVA = "0x870C6C", Offset = "0x870C6C", VA = "0x870C6C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000065")]
		[Address(RVA = "0x8707A4", Offset = "0x8707A4", VA = "0x8707A4")]
		[DebuggerHidden]
		public <RepeatShoot>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6000066")]
		[Address(RVA = "0x870B34", Offset = "0x870B34", VA = "0x870B34", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000067")]
		[Address(RVA = "0x870B38", Offset = "0x870B38", VA = "0x870B38", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000069")]
		[Address(RVA = "0x870C2C", Offset = "0x870C2C", VA = "0x870C2C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform target;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform shootPointLeft;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform shootPointRight;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject bulletPrefab;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[Space]
	private Transform[] lookingTransforms;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Animator animator;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int shootCount;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float shootDelay;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float bulletSpeed;

	[Token(Token = "0x600005D")]
	[Address(RVA = "0x870540", Offset = "0x870540", VA = "0x870540")]
	private void Awake()
	{
	}

	[Token(Token = "0x600005E")]
	[Address(RVA = "0x870590", Offset = "0x870590", VA = "0x870590")]
	private void Update()
	{
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0x870714", Offset = "0x870714", VA = "0x870714")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0x87079C", Offset = "0x87079C", VA = "0x87079C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000061")]
	[Address(RVA = "0x870734", Offset = "0x870734", VA = "0x870734")]
	[IteratorStateMachine(typeof(<RepeatShoot>d__13))]
	private IEnumerator RepeatShoot()
	{
		return null;
	}

	[Token(Token = "0x6000062")]
	[Address(RVA = "0x8707CC", Offset = "0x8707CC", VA = "0x8707CC")]
	private void ShootTarget(int hand)
	{
	}

	[Token(Token = "0x6000063")]
	[Address(RVA = "0x870594", Offset = "0x870594", VA = "0x870594")]
	private void Looking()
	{
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0x870B18", Offset = "0x870B18", VA = "0x870B18")]
	public BhapticsShootingCharacter()
	{
	}
}
[Token(Token = "0x2000018")]
public class BhapticsStreamingTest : MonoBehaviour
{
	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Button button;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text text;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private HapticClip clip;

	[Token(Token = "0x600006B")]
	[Address(RVA = "0x870C74", Offset = "0x870C74", VA = "0x870C74")]
	private void Start()
	{
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0x870CC8", Offset = "0x870CC8", VA = "0x870CC8")]
	private void Update()
	{
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0x870CCC", Offset = "0x870CCC", VA = "0x870CCC")]
	private void Check()
	{
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0x871214", Offset = "0x871214", VA = "0x871214")]
	public void Toggle()
	{
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0x871264", Offset = "0x871264", VA = "0x871264")]
	public BhapticsStreamingTest()
	{
	}
}
[Token(Token = "0x2000019")]
public class BhapticsTeleportPoint : MonoBehaviour
{
	[Token(Token = "0x6000070")]
	[Address(RVA = "0x87126C", Offset = "0x87126C", VA = "0x87126C")]
	public BhapticsTeleportPoint()
	{
	}
}
[Token(Token = "0x200001A")]
public class BhapticsTestScript : MonoBehaviour
{
	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private HapticClip[] tactClips;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Slider intensitySlider;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Slider durationSlider;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Slider offsetXSlider;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Slider offsetYSlider;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Toggle reflectToggle;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Button openBluetoothSettingButton;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Button playButton;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Button toggleEnableAllButton;

	[Token(Token = "0x6000071")]
	[Address(RVA = "0x871274", Offset = "0x871274", VA = "0x871274")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0x871454", Offset = "0x871454", VA = "0x871454")]
	private void ToggleEnable()
	{
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0x8715C4", Offset = "0x8715C4", VA = "0x8715C4")]
	private void Open()
	{
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0x871614", Offset = "0x871614", VA = "0x871614")]
	private void Play()
	{
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0x8717E8", Offset = "0x8717E8", VA = "0x8717E8")]
	public BhapticsTestScript()
	{
	}
}
[Token(Token = "0x200001B")]
public class BhapticsVisualFeedbackOnMotors : MonoBehaviour
{
	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public PositionType tactPositionType;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject visualMotorsObject;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Gradient hapticColor;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject[] visualMotors;

	[Token(Token = "0x6000076")]
	[Address(RVA = "0x8717F0", Offset = "0x8717F0", VA = "0x8717F0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0x871A90", Offset = "0x871A90", VA = "0x871A90")]
	private void Update()
	{
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0x871B54", Offset = "0x871B54", VA = "0x871B54")]
	private void ShowFeedbackEffect(int[] feedback)
	{
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0x871CA0", Offset = "0x871CA0", VA = "0x871CA0")]
	public BhapticsVisualFeedbackOnMotors()
	{
	}
}
[Token(Token = "0x200001C")]
public class BhapticsVRBody : MonoBehaviour
{
	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform camera;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float distance;

	[Token(Token = "0x600007A")]
	[Address(RVA = "0x871CA8", Offset = "0x871CA8", VA = "0x871CA8")]
	private void Update()
	{
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0x871CAC", Offset = "0x871CAC", VA = "0x871CAC")]
	private void FollowCamera()
	{
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0x871D98", Offset = "0x871D98", VA = "0x871D98")]
	public BhapticsVRBody()
	{
	}
}
[Token(Token = "0x200001D")]
public class BhapticsWidgetInstiate : MonoBehaviour
{
	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AndroidWidget_UI widgetPrefab;

	[Token(Token = "0x600007D")]
	[Address(RVA = "0x871DA0", Offset = "0x871DA0", VA = "0x871DA0")]
	private void Start()
	{
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0x871DF0", Offset = "0x871DF0", VA = "0x871DF0")]
	private void CreateWidget()
	{
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0x871E60", Offset = "0x871E60", VA = "0x871E60")]
	public BhapticsWidgetInstiate()
	{
	}
}
[Token(Token = "0x200001E")]
[CreateAssetMenu(fileName = "Data", menuName = "Bhaptics/Create Config", order = 1)]
public class BhapticsConfig : ScriptableObject
{
	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Windows Settings")]
	public bool launchPlayerIfNotRunning;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("Android Settings")]
	public BhapticsAndroidManager AndroidManagerPrefab;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("If you set it true, you don't need to define permissions and external bHaptics VR Player(beta) on SideQuest will be required.")]
	public bool UseOnlyBackgroundMode;

	[Token(Token = "0x6000080")]
	[Address(RVA = "0x871E68", Offset = "0x871E68", VA = "0x871E68")]
	public BhapticsConfig()
	{
	}
}
[Token(Token = "0x200001F")]
public class BhapticsLogger
{
	[Token(Token = "0x2000020")]
	public enum LogLevel
	{
		[Token(Token = "0x400006E")]
		Debug,
		[Token(Token = "0x400006F")]
		Info,
		[Token(Token = "0x4000070")]
		Error
	}

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static LogLevel level;

	[Token(Token = "0x6000081")]
	[Address(RVA = "0x86C644", Offset = "0x86C644", VA = "0x86C644")]
	public static void LogDebug(string format, params object[] args)
	{
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0x86D3C8", Offset = "0x86D3C8", VA = "0x86D3C8")]
	public static void LogInfo(string format, params object[] args)
	{
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0x8719FC", Offset = "0x8719FC", VA = "0x8719FC")]
	public static void LogError(string format, params object[] args)
	{
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0x871E78", Offset = "0x871E78", VA = "0x871E78")]
	public BhapticsLogger()
	{
	}
}
[Token(Token = "0x2000021")]
public class BhapticsManager
{
	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IHaptic Haptic;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool Init;

	[Token(Token = "0x6000086")]
	[Address(RVA = "0x86D88C", Offset = "0x86D88C", VA = "0x86D88C")]
	public static IHaptic GetHaptic()
	{
		return null;
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0x871ECC", Offset = "0x871ECC", VA = "0x871ECC")]
	public static void Initialize()
	{
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0x871ED0", Offset = "0x871ED0", VA = "0x871ED0")]
	public static void Dispose()
	{
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0x8720B0", Offset = "0x8720B0", VA = "0x8720B0")]
	public BhapticsManager()
	{
	}
}
[Token(Token = "0x2000022")]
public class BhapticsVisualizer : MonoBehaviour
{
	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private VisualFeedback[] visualFeedback;

	[Token(Token = "0x600008A")]
	[Address(RVA = "0x8720B8", Offset = "0x8720B8", VA = "0x8720B8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0x872108", Offset = "0x872108", VA = "0x872108")]
	private void Update()
	{
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0x872228", Offset = "0x872228", VA = "0x872228")]
	public BhapticsVisualizer()
	{
	}
}
[Token(Token = "0x2000023")]
public class Bhaptics_Setup : MonoBehaviour
{
	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public BhapticsConfig Config;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Bhaptics_Setup instance;

	[Token(Token = "0x600008D")]
	[Address(RVA = "0x872230", Offset = "0x872230", VA = "0x872230")]
	private void Awake()
	{
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0x8725EC", Offset = "0x8725EC", VA = "0x8725EC")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0x872324", Offset = "0x872324", VA = "0x872324")]
	private void Initialize()
	{
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0x8725F0", Offset = "0x8725F0", VA = "0x8725F0")]
	public Bhaptics_Setup()
	{
	}
}
[Token(Token = "0x2000024")]
public class ExplodingProjectileExplosion2 : MonoBehaviour
{
	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject impactPrefab;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject explosionPrefab;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float thrust;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Rigidbody thisRigidbody;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject particleKillGroup;

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Collider thisCollider;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool LookRotation;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool Missile;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform missileTarget;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float projectileSpeed;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float projectileSpeedMultiplier;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool explodeOnTimer;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float explosionTimer;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float timer;

	[Token(Token = "0x6000091")]
	[Address(RVA = "0x8725F8", Offset = "0x8725F8", VA = "0x8725F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0x8726A8", Offset = "0x8726A8", VA = "0x8726A8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0x872860", Offset = "0x872860", VA = "0x872860")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0x8728F0", Offset = "0x8728F0", VA = "0x8728F0")]
	private void CheckCollision(Vector3 prevPos)
	{
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0x872C58", Offset = "0x872C58", VA = "0x872C58")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0x872740", Offset = "0x872740", VA = "0x872740")]
	private void Explode()
	{
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0x872F10", Offset = "0x872F10", VA = "0x872F10")]
	public ExplodingProjectileExplosion2()
	{
	}
}
[Token(Token = "0x2000025")]
public class projectileActorExplosion2 : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000026")]
	public class projectile
	{
		[Token(Token = "0x400008F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4000090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Rigidbody bombPrefab;

		[Token(Token = "0x4000091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool Torque;

		[Token(Token = "0x4000092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float min;

		[Token(Token = "0x4000093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float max;

		[Token(Token = "0x4000094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float Tor_min;

		[Token(Token = "0x4000095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float Tor_max;

		[Token(Token = "0x600009F")]
		[Address(RVA = "0x873560", Offset = "0x873560", VA = "0x873560")]
		public projectile()
		{
		}
	}

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform spawnLocator;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public projectile[] bombList;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string FauxName;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text UiText;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int bombType;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ParticleSystem muzzleflare;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool swarmMissileLauncher;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int projectileSimFire;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool MinorRotate;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	public bool MajorRotate;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int seq;

	[Token(Token = "0x6000098")]
	[Address(RVA = "0x872F20", Offset = "0x872F20", VA = "0x872F20")]
	private void Start()
	{
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0x872FA8", Offset = "0x872FA8", VA = "0x872FA8")]
	private void Update()
	{
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0x873064", Offset = "0x873064", VA = "0x873064")]
	public void Switch(int value)
	{
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0x8730FC", Offset = "0x8730FC", VA = "0x8730FC")]
	public void Fire()
	{
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0x873388", Offset = "0x873388", VA = "0x873388")]
	private void RandomizeRotation()
	{
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0x873488", Offset = "0x873488", VA = "0x873488")]
	private void Major_RandomizeRotation()
	{
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0x873550", Offset = "0x873550", VA = "0x873550")]
	public projectileActorExplosion2()
	{
	}
}
[Token(Token = "0x2000027")]
public class SpawnEffectOnMouse : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000028")]
	public class chainEffect
	{
		[NonSerialized]
		[Token(Token = "0x400009B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int firstvariableisinvisible;

		[Token(Token = "0x400009C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string name;

		[Token(Token = "0x400009D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool isPlayed;

		[Token(Token = "0x400009E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float Yoffset;

		[Token(Token = "0x400009F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool RotateRandomizer;

		[Token(Token = "0x40000A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject Effect;

		[Token(Token = "0x60000A5")]
		[Address(RVA = "0x873930", Offset = "0x873930", VA = "0x873930")]
		public chainEffect()
		{
		}
	}

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public chainEffect[] chainEffectList;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int activevariation;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text UIText;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Ray ray;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RaycastHit hit;

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0x873568", Offset = "0x873568", VA = "0x873568")]
	private void Start()
	{
	}

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0x87362C", Offset = "0x87362C", VA = "0x87362C")]
	private void Update()
	{
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0x8738CC", Offset = "0x8738CC", VA = "0x8738CC")]
	private void NextEffect(bool increase)
	{
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0x87356C", Offset = "0x87356C", VA = "0x87356C")]
	private void CheckName()
	{
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0x873928", Offset = "0x873928", VA = "0x873928")]
	public SpawnEffectOnMouse()
	{
	}
}
[Token(Token = "0x2000029")]
public class CameraShake : MonoBehaviour
{
	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform camTransform;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float shakeDuration;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static float shakeAmount;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float decreaseFactor;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 originalPos;

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0x873938", Offset = "0x873938", VA = "0x873938")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0x873A50", Offset = "0x873A50", VA = "0x873A50")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0x873A7C", Offset = "0x873A7C", VA = "0x873A7C")]
	private void Update()
	{
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0x873C30", Offset = "0x873C30", VA = "0x873C30")]
	public CameraShake()
	{
	}
}
[Token(Token = "0x200002A")]
public class CameraShakeCaller : MonoBehaviour
{
	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float ProjectileShakeDuration;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ProjectileShakeAmount;

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0x873C90", Offset = "0x873C90", VA = "0x873C90")]
	private void Start()
	{
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0x873CF8", Offset = "0x873CF8", VA = "0x873CF8")]
	private void Update()
	{
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0x873CFC", Offset = "0x873CFC", VA = "0x873CFC")]
	public CameraShakeCaller()
	{
	}
}
[Token(Token = "0x200002B")]
public class CameraShakeProjectile : MonoBehaviour
{
	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator CamerShakeAnimator;

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0x873D10", Offset = "0x873D10", VA = "0x873D10")]
	private void Start()
	{
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0x873D14", Offset = "0x873D14", VA = "0x873D14")]
	private void Update()
	{
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0x873D18", Offset = "0x873D18", VA = "0x873D18")]
	public void ShakeCamera()
	{
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0x873D6C", Offset = "0x873D6C", VA = "0x873D6C")]
	public CameraShakeProjectile()
	{
	}
}
[Token(Token = "0x200002C")]
public class EffectActor : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200002D")]
	public class projectile
	{
		[Token(Token = "0x40000B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x40000B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject bombPrefab;

		[Token(Token = "0x40000B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform bombPrefabTransform;

		[Token(Token = "0x60000B9")]
		[Address(RVA = "0x8743C8", Offset = "0x8743C8", VA = "0x8743C8")]
		public projectile()
		{
		}
	}

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform spawnLocator;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public projectile[] bombList;

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string FauxName;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text UiText;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int bombType;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float min;

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float max;

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool MinorRotate;

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	public bool MajorRotate;

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int seq;

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0x873D74", Offset = "0x873D74", VA = "0x873D74")]
	private void Start()
	{
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0x873E68", Offset = "0x873E68", VA = "0x873E68")]
	private void Update()
	{
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0x873F24", Offset = "0x873F24", VA = "0x873F24")]
	public void Switch(int value)
	{
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0x874060", Offset = "0x874060", VA = "0x874060")]
	public void Fire()
	{
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0x8741E0", Offset = "0x8741E0", VA = "0x8741E0")]
	private void RandomizeRotation()
	{
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0x8742E0", Offset = "0x8742E0", VA = "0x8742E0")]
	private void Major_RandomizeRotation()
	{
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0x8743C0", Offset = "0x8743C0", VA = "0x8743C0")]
	public EffectActor()
	{
	}
}
[Token(Token = "0x200002E")]
public class ExplodingProjectile : MonoBehaviour
{
	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject impactPrefab;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject explosionPrefab;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float thrust;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Rigidbody thisRigidbody;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject particleKillGroup;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Collider thisCollider;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool LookRotation;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool Missile;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform missileTarget;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float projectileSpeed;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float projectileSpeedMultiplier;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool ignorePrevRotation;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	public bool explodeOnTimer;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float explosionTimer;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float timer;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 previousPosition;

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0x8743D0", Offset = "0x8743D0", VA = "0x8743D0")]
	private void Start()
	{
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0x8744A0", Offset = "0x8744A0", VA = "0x8744A0")]
	private void Update()
	{
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0x874610", Offset = "0x874610", VA = "0x874610")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0x874724", Offset = "0x874724", VA = "0x874724")]
	private void CheckCollision(Vector3 prevPos)
	{
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0x874A8C", Offset = "0x874A8C", VA = "0x874A8C")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0x8744F0", Offset = "0x8744F0", VA = "0x8744F0")]
	private void Explode()
	{
	}

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0x874D60", Offset = "0x874D60", VA = "0x874D60")]
	public ExplodingProjectile()
	{
	}
}
[Token(Token = "0x200002F")]
public class Projectile2 : MonoBehaviour
{
	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float disappearAfterTime;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float disappearTimer;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isActive;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 direction;

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 startPosition;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float movementSpeed;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 targetPosition;

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float distanceToTarget;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float movementValue;

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0x874D70", Offset = "0x874D70", VA = "0x874D70")]
	private void Start()
	{
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0x874D74", Offset = "0x874D74", VA = "0x874D74")]
	private void Update()
	{
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0x874E24", Offset = "0x874E24", VA = "0x874E24")]
	private void Move()
	{
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0x874E8C", Offset = "0x874E8C", VA = "0x874E8C")]
	private void MoveWithoutTargetHit()
	{
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0x874FB8", Offset = "0x874FB8", VA = "0x874FB8")]
	public void Fire(Vector3 target, Vector3 spawnPosition, Vector3 Direction, float speed)
	{
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0x874E18", Offset = "0x874E18", VA = "0x874E18")]
	private void Explode()
	{
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0x8751A0", Offset = "0x8751A0", VA = "0x8751A0")]
	public bool GetIsActive()
	{
		return default(bool);
	}

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0x8751A8", Offset = "0x8751A8", VA = "0x8751A8")]
	public Projectile2()
	{
	}
}
[Token(Token = "0x2000030")]
public class projectileActor : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000031")]
	public class projectile
	{
		[Token(Token = "0x40000E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x40000E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Rigidbody bombPrefab;

		[Token(Token = "0x40000E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject muzzleflare;

		[Token(Token = "0x40000E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float min;

		[Token(Token = "0x40000EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float max;

		[Token(Token = "0x40000EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool rapidFire;

		[Token(Token = "0x40000EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float rapidFireCooldown;

		[Token(Token = "0x40000ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool shotgunBehavior;

		[Token(Token = "0x40000EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int shotgunPellets;

		[Token(Token = "0x40000EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject shellPrefab;

		[Token(Token = "0x40000F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool hasShells;

		[Token(Token = "0x60000D0")]
		[Address(RVA = "0x875C7C", Offset = "0x875C7C", VA = "0x875C7C")]
		public projectile()
		{
		}
	}

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform spawnLocator;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform spawnLocatorMuzzleFlare;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform shellLocator;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Animator recoilAnimator;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform[] shotgunLocator;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public projectile[] bombList;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string FauxName;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text UiText;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool UImaster;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool CameraShake;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float rapidFireDelay;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public CameraShakeProjectile CameraShakeCaller;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float firingTimer;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public bool firing;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public int bombType;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public bool swarmMissileLauncher;

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int projectileSimFire;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool Torque;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float Tor_min;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float Tor_max;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool MinorRotate;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
	public bool MajorRotate;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private int seq;

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0x8751C0", Offset = "0x8751C0", VA = "0x8751C0")]
	private void Start()
	{
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0x875250", Offset = "0x875250", VA = "0x875250")]
	private void Update()
	{
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0x875470", Offset = "0x875470", VA = "0x875470")]
	public void Switch(int value)
	{
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0x875518", Offset = "0x875518", VA = "0x875518")]
	public void Fire()
	{
	}

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0x875A84", Offset = "0x875A84", VA = "0x875A84")]
	private void RandomizeRotation()
	{
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0x875B84", Offset = "0x875B84", VA = "0x875B84")]
	private void Major_RandomizeRotation()
	{
	}

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0x875C64", Offset = "0x875C64", VA = "0x875C64")]
	public projectileActor()
	{
	}
}
[Token(Token = "0x2000032")]
public class destroyMe : MonoBehaviour
{
	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float timer;

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float deathtimer;

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0x875C84", Offset = "0x875C84", VA = "0x875C84")]
	private void Start()
	{
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0x875C88", Offset = "0x875C88", VA = "0x875C88")]
	private void Update()
	{
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0x875D2C", Offset = "0x875D2C", VA = "0x875D2C")]
	public destroyMe()
	{
	}
}
[Token(Token = "0x2000033")]
[ExecuteInEditMode]
public class particleColorChangerMaster : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000034")]
	public class colorChange
	{
		[Token(Token = "0x40000F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Name;

		[Token(Token = "0x40000F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ParticleSystem[] colored_ParticleSystem;

		[Token(Token = "0x40000F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Gradient Gradient_custom;

		[Token(Token = "0x60000D7")]
		[Address(RVA = "0x875EDC", Offset = "0x875EDC", VA = "0x875EDC")]
		public colorChange()
		{
		}
	}

	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Speed_custom;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public colorChange[] colorChangeList;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool applyChanges;

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool Keep_applyChanges;

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0x875D3C", Offset = "0x875D3C", VA = "0x875D3C")]
	private void Start()
	{
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0x875D40", Offset = "0x875D40", VA = "0x875D40")]
	private void Update()
	{
	}

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0x875ECC", Offset = "0x875ECC", VA = "0x875ECC")]
	public particleColorChangerMaster()
	{
	}
}
[Serializable]
[Token(Token = "0x2000035")]
public class Floor_PlanarReflection : MonoBehaviour
{
	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int renderTextureSize;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float clipPlaneOffset;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool disablePixelLights;

	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RenderTexture renderTexture;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int restorePixelLightCount;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Camera sourceCamera;

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0x875EE4", Offset = "0x875EE4", VA = "0x875EE4", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0x8760AC", Offset = "0x8760AC", VA = "0x8760AC", Slot = "5")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0x876334", Offset = "0x876334", VA = "0x876334", Slot = "6")]
	public virtual void OnDisable()
	{
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0x876390", Offset = "0x876390", VA = "0x876390", Slot = "7")]
	public virtual void LateUpdate()
	{
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0x87648C", Offset = "0x87648C", VA = "0x87648C", Slot = "8")]
	public virtual void OnPreCull()
	{
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0x87695C", Offset = "0x87695C", VA = "0x87695C", Slot = "9")]
	public virtual void OnPreRender()
	{
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0x87698C", Offset = "0x87698C", VA = "0x87698C", Slot = "10")]
	public virtual void OnPostRender()
	{
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0x8769C0", Offset = "0x8769C0", VA = "0x8769C0", Slot = "11")]
	public virtual Vector4 CameraSpacePlane(Vector3 pos, Vector3 normal)
	{
		return default(Vector4);
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0x876BA8", Offset = "0x876BA8", VA = "0x876BA8")]
	public static float sgn(float a)
	{
		return default(float);
	}

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0x8767D8", Offset = "0x8767D8", VA = "0x8767D8")]
	public static Matrix4x4 CalculateObliqueMatrix(Matrix4x4 projection, Vector4 clipPlane)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0x876744", Offset = "0x876744", VA = "0x876744")]
	public static Matrix4x4 CalculateReflectionMatrix(Vector4 plane)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0x876BC8", Offset = "0x876BC8", VA = "0x876BC8")]
	public Floor_PlanarReflection()
	{
	}
}
[Token(Token = "0x2000036")]
public class Floor_ReflectionScriptCamera : MonoBehaviour
{
	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform[] reflectiveObjects;

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LayerMask reflectionMask;

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material[] reflectiveMaterials;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform reflectiveSurfaceHeight;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Shader replacementShader;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool highQuality;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Color clearColor;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string reflectionSampler;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float clipPlaneOffset;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 oldpos;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Camera reflectionCamera;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Dictionary<Camera, bool> helperCameras;

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Texture[] initialReflectionTextures;

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0x876BF8", Offset = "0x876BF8", VA = "0x876BF8")]
	public void Start()
	{
	}

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0x876CE4", Offset = "0x876CE4", VA = "0x876CE4")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0x876D68", Offset = "0x876D68", VA = "0x876D68")]
	private Camera CreateReflectionCameraFor(Camera cam)
	{
		return null;
	}

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0x8772C4", Offset = "0x8772C4", VA = "0x8772C4")]
	public void HighQuality()
	{
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0x8770C8", Offset = "0x8770C8", VA = "0x8770C8")]
	private void SetStandardCameraParameter(Camera cam, LayerMask mask)
	{
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0x877130", Offset = "0x877130", VA = "0x877130")]
	private RenderTexture CreateTextureFor(Camera cam)
	{
		return null;
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0x8772D0", Offset = "0x8772D0", VA = "0x8772D0")]
	public void RenderHelpCameras(Camera currentCam)
	{
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0x8778F4", Offset = "0x8778F4", VA = "0x8778F4")]
	public void LateUpdate()
	{
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0x877AB8", Offset = "0x877AB8", VA = "0x877AB8")]
	private void ObjectBeingRendered(Transform tr, Camera currentCam)
	{
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0x8774DC", Offset = "0x8774DC", VA = "0x8774DC")]
	private void RenderReflectionFor(Camera cam, Camera reflectCamera)
	{
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0x877B48", Offset = "0x877B48", VA = "0x877B48")]
	private void SaneCameraSettings(Camera helperCam)
	{
	}

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0x877DFC", Offset = "0x877DFC", VA = "0x877DFC")]
	private static Matrix4x4 CalculateObliqueMatrix(Matrix4x4 projection, Vector4 clipPlane)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0x877BA8", Offset = "0x877BA8", VA = "0x877BA8")]
	private static Matrix4x4 CalculateReflectionMatrix(Matrix4x4 reflectionMat, Vector4 plane)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0x877F68", Offset = "0x877F68", VA = "0x877F68")]
	private static float sgn(float a)
	{
		return default(float);
	}

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0x877C4C", Offset = "0x877C4C", VA = "0x877C4C")]
	private Vector4 CameraSpacePlane(Camera cam, Vector3 pos, Vector3 normal, float sideSign)
	{
		return default(Vector4);
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0x877F88", Offset = "0x877F88", VA = "0x877F88")]
	public Floor_ReflectionScriptCamera()
	{
	}
}
[Token(Token = "0x2000037")]
[ExecuteInEditMode]
public class MirrorReflection : MonoBehaviour
{
	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool m_DisablePixelLights;

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int m_TextureSize;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_ClipPlaneOffset;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public LayerMask m_ReflectLayers;

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private System.Collections.Hashtable m_ReflectionCameras;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RenderTexture m_ReflectionTexture;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int m_OldReflectionTextureSize;

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool s_InsideRendering;

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0x878030", Offset = "0x878030", VA = "0x878030")]
	public void OnWillRenderObject()
	{
	}

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0x87942C", Offset = "0x87942C", VA = "0x87942C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0x878DC8", Offset = "0x878DC8", VA = "0x878DC8")]
	private void UpdateCameraModes(Camera src, Camera dest)
	{
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0x8788E4", Offset = "0x8788E4", VA = "0x8788E4")]
	private void CreateMirrorObjects(Camera currentCamera, out Camera reflectionCamera)
	{
	}

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0x8797EC", Offset = "0x8797EC", VA = "0x8797EC")]
	private static float sgn(float a)
	{
		return default(float);
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0x87912C", Offset = "0x87912C", VA = "0x87912C")]
	private Vector4 CameraSpacePlane(Camera cam, Vector3 pos, Vector3 normal, float sideSign)
	{
		return default(Vector4);
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0x8792DC", Offset = "0x8792DC", VA = "0x8792DC")]
	private static void CalculateObliqueMatrix(ref Matrix4x4 projection, Vector4 clipPlane)
	{
	}

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0x879098", Offset = "0x879098", VA = "0x879098")]
	private static void CalculateReflectionMatrix(ref Matrix4x4 reflectionMat, Vector4 plane)
	{
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0x87980C", Offset = "0x87980C", VA = "0x87980C")]
	public MirrorReflection()
	{
	}
}
[Serializable]
[Token(Token = "0x2000038")]
public class Rotate : MonoBehaviour
{
	[Token(Token = "0x60000FD")]
	[Address(RVA = "0x87989C", Offset = "0x87989C", VA = "0x87989C", Slot = "4")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0x8798E0", Offset = "0x8798E0", VA = "0x8798E0")]
	public Rotate()
	{
	}
}
[Token(Token = "0x2000039")]
public class LightMapData : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200003A")]
	public struct RendererInfo
	{
		[Token(Token = "0x4000116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Renderer renderer;

		[Token(Token = "0x4000117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int lightmapIndex;

		[Token(Token = "0x4000118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector4 lightmapOffsetScale;
	}

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public RendererInfo m_RendererInfo;

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0x8798E8", Offset = "0x8798E8", VA = "0x8798E8")]
	public void GetInfo()
	{
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0x8799AC", Offset = "0x8799AC", VA = "0x8799AC")]
	public LightMapData()
	{
	}
}
[Serializable]
[Token(Token = "0x200003B")]
public class LightMapDataContainerObject : ScriptableObject
{
	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int[] lightmapIndexes;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector4[] lightmapOffsetScales;

	[Token(Token = "0x6000101")]
	[Address(RVA = "0x8799B4", Offset = "0x8799B4", VA = "0x8799B4")]
	public LightMapDataContainerObject()
	{
	}
}
[Token(Token = "0x200003C")]
[ExecuteInEditMode]
public class LightmappingManager : MonoBehaviour
{
	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public Renderer[] sceneRenderers;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LightMapDataContainerObject lighmapDataContainer;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	public Texture2D[] lightMapTexturesFar;

	[Token(Token = "0x6000102")]
	[Address(RVA = "0x8799BC", Offset = "0x8799BC", VA = "0x8799BC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000103")]
	[Address(RVA = "0x879B2C", Offset = "0x879B2C", VA = "0x879B2C")]
	public void SetLightMapTextures()
	{
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0x8799D4", Offset = "0x8799D4", VA = "0x8799D4")]
	public void SetLightMapData()
	{
	}

	[Token(Token = "0x6000105")]
	[Address(RVA = "0x879C68", Offset = "0x879C68", VA = "0x879C68")]
	public LightmappingManager()
	{
	}
}
[Token(Token = "0x200003D")]
public class Checkpoint : MonoBehaviour
{
	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Action CheckpointActivated;

	[Token(Token = "0x6000106")]
	[Address(RVA = "0x879C70", Offset = "0x879C70", VA = "0x879C70")]
	private void Start()
	{
	}

	[Token(Token = "0x6000107")]
	[Address(RVA = "0x879C74", Offset = "0x879C74", VA = "0x879C74")]
	private void Update()
	{
	}

	[Token(Token = "0x6000108")]
	[Address(RVA = "0x879C78", Offset = "0x879C78", VA = "0x879C78")]
	private void OnTriggerEnter()
	{
	}

	[Token(Token = "0x6000109")]
	[Address(RVA = "0x879D08", Offset = "0x879D08", VA = "0x879D08")]
	public Checkpoint()
	{
	}
}
[Token(Token = "0x200003E")]
public class CheckpointController : MonoBehaviour
{
	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Checkpoint[] CheckpointsList;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LookAtTargetController Arrow;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Checkpoint CurrentCheckpoint;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int CheckpointId;

	[Token(Token = "0x600010A")]
	[Address(RVA = "0x879D10", Offset = "0x879D10", VA = "0x879D10")]
	private void Start()
	{
	}

	[Token(Token = "0x600010B")]
	[Address(RVA = "0x879DAC", Offset = "0x879DAC", VA = "0x879DAC")]
	private void SetCurrentCheckpoint(Checkpoint checkpoint)
	{
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0x879F7C", Offset = "0x879F7C", VA = "0x879F7C")]
	private void CheckpointActivated()
	{
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0x87A0C4", Offset = "0x87A0C4", VA = "0x87A0C4")]
	private void Update()
	{
	}

	[Token(Token = "0x600010E")]
	[Address(RVA = "0x87A0C8", Offset = "0x87A0C8", VA = "0x87A0C8")]
	public CheckpointController()
	{
	}
}
[Token(Token = "0x200003F")]
public class ControlPanel : MonoBehaviour
{
	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource MusicSound;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private KeyCode SpeedUp;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private KeyCode SpeedDown;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private KeyCode Forward;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private KeyCode Back;

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private KeyCode Left;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private KeyCode Right;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private KeyCode TurnLeft;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private KeyCode TurnRight;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private KeyCode MusicOffOn;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private KeyCode[] keyCodes;

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Action<PressedKeyCode[]> KeyPressed;

	[Token(Token = "0x600010F")]
	[Address(RVA = "0x87A0D0", Offset = "0x87A0D0", VA = "0x87A0D0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000110")]
	[Address(RVA = "0x87A1AC", Offset = "0x87A1AC", VA = "0x87A1AC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0x87A1B0", Offset = "0x87A1B0", VA = "0x87A1B0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000112")]
	[Address(RVA = "0x87A374", Offset = "0x87A374", VA = "0x87A374")]
	public ControlPanel()
	{
	}
}
[Token(Token = "0x2000040")]
public class FollowTargetCamera : MonoBehaviour
{
	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform Target;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float PositionFolowForce;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float RotationFolowForce;

	[Token(Token = "0x6000113")]
	[Address(RVA = "0x87A398", Offset = "0x87A398", VA = "0x87A398")]
	private void Start()
	{
	}

	[Token(Token = "0x6000114")]
	[Address(RVA = "0x87A39C", Offset = "0x87A39C", VA = "0x87A39C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000115")]
	[Address(RVA = "0x87A664", Offset = "0x87A664", VA = "0x87A664")]
	public FollowTargetCamera()
	{
	}
}
[Token(Token = "0x2000041")]
public class HelicopterController : MonoBehaviour
{
	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource HelicopterSound;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ControlPanel ControlPanel;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Rigidbody HelicopterModel;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public HeliRotorController MainRotorController;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public HeliRotorController SubRotorController;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float TurnForce;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float ForwardForce;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float ForwardTiltForce;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float TurnTiltForce;

	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float EffectiveHeight;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float turnTiltForcePercent;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float turnForcePercent;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float _engineForce;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector2 hMove;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Vector2 hTilt;

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float hTurn;

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public bool IsOnGround;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3 movement;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Vector3 prevpos;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector3 newpos;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector3 fwd;

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Vector3 vright;

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private Vector3 lastRotation;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public bool forward;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
	public bool backward;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC2")]
	public bool right;

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC3")]
	public bool left;

	[Token(Token = "0x17000007")]
	public float EngineForce
	{
		[Token(Token = "0x6000116")]
		[Address(RVA = "0x87A674", Offset = "0x87A674", VA = "0x87A674")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000117")]
		[Address(RVA = "0x87A67C", Offset = "0x87A67C", VA = "0x87A67C")]
		set
		{
		}
	}

	[Token(Token = "0x6000118")]
	[Address(RVA = "0x87A740", Offset = "0x87A740", VA = "0x87A740")]
	private void Start()
	{
	}

	[Token(Token = "0x6000119")]
	[Address(RVA = "0x87A744", Offset = "0x87A744", VA = "0x87A744")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600011A")]
	[Address(RVA = "0x87A858", Offset = "0x87A858", VA = "0x87A858")]
	private void MoveProcess()
	{
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0x87A9A8", Offset = "0x87A9A8", VA = "0x87A9A8")]
	private void LiftProcess()
	{
	}

	[Token(Token = "0x600011C")]
	[Address(RVA = "0x87A748", Offset = "0x87A748", VA = "0x87A748")]
	private void TiltProcess()
	{
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0x87AA94", Offset = "0x87AA94", VA = "0x87AA94")]
	private void Update()
	{
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0x87AC98", Offset = "0x87AC98", VA = "0x87AC98")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0x87AD28", Offset = "0x87AD28", VA = "0x87AD28")]
	private void OnKeyPressed(PressedKeyCode[] obj)
	{
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0x87AF7C", Offset = "0x87AF7C", VA = "0x87AF7C")]
	private void OnCollisionEnter()
	{
	}

	[Token(Token = "0x6000121")]
	[Address(RVA = "0x87AF88", Offset = "0x87AF88", VA = "0x87AF88")]
	private void OnCollisionExit()
	{
	}

	[Token(Token = "0x6000122")]
	[Address(RVA = "0x87AF90", Offset = "0x87AF90", VA = "0x87AF90")]
	public HelicopterController()
	{
	}
}
[Token(Token = "0x2000042")]
public class HeliRotorController : MonoBehaviour
{
	[Token(Token = "0x2000043")]
	public enum Axis
	{
		[Token(Token = "0x4000152")]
		X,
		[Token(Token = "0x4000153")]
		Y,
		[Token(Token = "0x4000154")]
		Z
	}

	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Axis RotateAxis;

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float _rotarSpeed;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float rotateDegree;

	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 OriginalRotate;

	[Token(Token = "0x17000008")]
	public float RotarSpeed
	{
		[Token(Token = "0x6000123")]
		[Address(RVA = "0x87B020", Offset = "0x87B020", VA = "0x87B020")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000124")]
		[Address(RVA = "0x87A720", Offset = "0x87A720", VA = "0x87A720")]
		set
		{
		}
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0x87B028", Offset = "0x87B028", VA = "0x87B028")]
	private void Start()
	{
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0x87B058", Offset = "0x87B058", VA = "0x87B058")]
	private void Update()
	{
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0x87B130", Offset = "0x87B130", VA = "0x87B130")]
	public HeliRotorController()
	{
	}
}
[Token(Token = "0x2000044")]
public class LookAtTargetController : MonoBehaviour
{
	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform Target;

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool smooth;

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float damping;

	[Token(Token = "0x6000128")]
	[Address(RVA = "0x87B138", Offset = "0x87B138", VA = "0x87B138")]
	private void Start()
	{
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0x87B13C", Offset = "0x87B13C", VA = "0x87B13C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0x87B308", Offset = "0x87B308", VA = "0x87B308")]
	public LookAtTargetController()
	{
	}
}
[Token(Token = "0x2000045")]
public enum PressedKeyCode
{
	[Token(Token = "0x4000159")]
	SpeedUpPressed,
	[Token(Token = "0x400015A")]
	SpeedDownPressed,
	[Token(Token = "0x400015B")]
	ForwardPressed,
	[Token(Token = "0x400015C")]
	BackPressed,
	[Token(Token = "0x400015D")]
	LeftPressed,
	[Token(Token = "0x400015E")]
	RightPressed,
	[Token(Token = "0x400015F")]
	TurnLeftPressed,
	[Token(Token = "0x4000160")]
	TurnRightPressed
}
[Token(Token = "0x2000046")]
public class UIGameController : MonoBehaviour
{
	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text EngineForceView;

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject RestartButton;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject InfoButton;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject InfoPanel;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static UIGameController runtime;

	[Token(Token = "0x600012B")]
	[Address(RVA = "0x87B320", Offset = "0x87B320", VA = "0x87B320")]
	private void Awake()
	{
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0x87B36C", Offset = "0x87B36C", VA = "0x87B36C")]
	private void Start()
	{
	}

	[Token(Token = "0x600012D")]
	[Address(RVA = "0x87B37C", Offset = "0x87B37C", VA = "0x87B37C")]
	private void Update()
	{
	}

	[Token(Token = "0x600012E")]
	[Address(RVA = "0x87B380", Offset = "0x87B380", VA = "0x87B380")]
	private void ShowInfoPanel(bool isShow)
	{
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0x87B374", Offset = "0x87B374", VA = "0x87B374")]
	public void ShowInfo()
	{
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0x87B408", Offset = "0x87B408", VA = "0x87B408")]
	public void HideInfo()
	{
	}

	[Token(Token = "0x6000131")]
	[Address(RVA = "0x87B410", Offset = "0x87B410", VA = "0x87B410")]
	public void RestartGame()
	{
	}

	[Token(Token = "0x6000132")]
	[Address(RVA = "0x87B454", Offset = "0x87B454", VA = "0x87B454")]
	public UIGameController()
	{
	}
}
[Token(Token = "0x2000047")]
[RequireComponent(typeof(ParticleSystem))]
public class CFX_AutoStopLoopedEffect : MonoBehaviour
{
	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float effectDuration;

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float d;

	[Token(Token = "0x6000133")]
	[Address(RVA = "0x87B45C", Offset = "0x87B45C", VA = "0x87B45C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0x87B468", Offset = "0x87B468", VA = "0x87B468")]
	private void Update()
	{
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0x87B580", Offset = "0x87B580", VA = "0x87B580")]
	public CFX_AutoStopLoopedEffect()
	{
	}
}
[Token(Token = "0x2000048")]
public class CFX_Demo_RandomDir : MonoBehaviour
{
	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 min;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 max;

	[Token(Token = "0x6000136")]
	[Address(RVA = "0x87B590", Offset = "0x87B590", VA = "0x87B590")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000137")]
	[Address(RVA = "0x87B618", Offset = "0x87B618", VA = "0x87B618")]
	public CFX_Demo_RandomDir()
	{
	}
}
[Token(Token = "0x2000049")]
public class CFX_Demo_RotateCamera : MonoBehaviour
{
	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool rotating;

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform rotationCenter;

	[Token(Token = "0x6000138")]
	[Address(RVA = "0x87B630", Offset = "0x87B630", VA = "0x87B630")]
	private void Update()
	{
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0x87B76C", Offset = "0x87B76C", VA = "0x87B76C")]
	public CFX_Demo_RotateCamera()
	{
	}
}
[Token(Token = "0x200004A")]
public class CFX_Demo_Translate : MonoBehaviour
{
	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 rotation;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 axis;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool gravity;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 dir;

	[Token(Token = "0x600013B")]
	[Address(RVA = "0x87B7C8", Offset = "0x87B7C8", VA = "0x87B7C8")]
	private void Start()
	{
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0x87B868", Offset = "0x87B868", VA = "0x87B868")]
	private void Update()
	{
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0x87B8D8", Offset = "0x87B8D8", VA = "0x87B8D8")]
	public CFX_Demo_Translate()
	{
	}
}
[Token(Token = "0x200004B")]
public class WFX_Demo : MonoBehaviour
{
	[Token(Token = "0x200004C")]
	[CompilerGenerated]
	private sealed class <RandomSpawnsCoroutine>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400018C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400018D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400018E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WFX_Demo <>4__this;

		[Token(Token = "0x17000009")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600014E")]
			[Address(RVA = "0x87D8C4", Offset = "0x87D8C4", VA = "0x87D8C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700000A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000150")]
			[Address(RVA = "0x87D90C", Offset = "0x87D90C", VA = "0x87D90C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600014B")]
		[Address(RVA = "0x87CB00", Offset = "0x87CB00", VA = "0x87CB00")]
		[DebuggerHidden]
		public <RandomSpawnsCoroutine>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x600014C")]
		[Address(RVA = "0x87D6EC", Offset = "0x87D6EC", VA = "0x87D6EC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600014D")]
		[Address(RVA = "0x87D6F0", Offset = "0x87D6F0", VA = "0x87D6F0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600014F")]
		[Address(RVA = "0x87D8CC", Offset = "0x87D8CC", VA = "0x87D8CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float cameraSpeed;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool orderedSpawns;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float step;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float range;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float order;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject walls;

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject bulletholes;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject[] ParticleExamples;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int exampleIndex;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string randomSpawnsDelay;

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool randomSpawns;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool slowMo;

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	private bool rotateCam;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Material wood;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Material concrete;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Material metal;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Material checker;

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Material woodWall;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Material concreteWall;

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Material metalWall;

	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Material checkerWall;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private string groundTextureStr;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private List<string> groundTextures;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject m4;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject m4fps;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool rotate_m4;

	[Token(Token = "0x600013E")]
	[Address(RVA = "0x87B954", Offset = "0x87B954", VA = "0x87B954")]
	private void OnMouseDown()
	{
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0x87BAD4", Offset = "0x87BAD4", VA = "0x87BAD4")]
	public GameObject spawnParticle()
	{
		return null;
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0x87BD30", Offset = "0x87BD30", VA = "0x87BD30")]
	private void SetActiveCrossVersions(GameObject obj, bool active)
	{
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0x87BDD4", Offset = "0x87BDD4", VA = "0x87BDD4")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000142")]
	[Address(RVA = "0x87CA98", Offset = "0x87CA98", VA = "0x87CA98")]
	[IteratorStateMachine(typeof(<RandomSpawnsCoroutine>d__30))]
	private IEnumerator RandomSpawnsCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0x87CB28", Offset = "0x87CB28", VA = "0x87CB28")]
	private void Update()
	{
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0x87C948", Offset = "0x87C948", VA = "0x87C948")]
	private void prevTexture()
	{
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0x87C9F4", Offset = "0x87C9F4", VA = "0x87C9F4")]
	private void nextTexture()
	{
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0x87CCC8", Offset = "0x87CCC8", VA = "0x87CCC8")]
	private void selectMaterial()
	{
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0x87C8E0", Offset = "0x87C8E0", VA = "0x87C8E0")]
	private void prevParticle()
	{
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0x87C914", Offset = "0x87C914", VA = "0x87C914")]
	private void nextParticle()
	{
	}

	[Token(Token = "0x6000149")]
	[Address(RVA = "0x87D000", Offset = "0x87D000", VA = "0x87D000")]
	private void showHideStuff()
	{
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0x87D4DC", Offset = "0x87D4DC", VA = "0x87D4DC")]
	public WFX_Demo()
	{
	}
}
[Token(Token = "0x200004D")]
public class WFX_Demo_DeleteAfterDelay : MonoBehaviour
{
	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float delay;

	[Token(Token = "0x6000151")]
	[Address(RVA = "0x87E914", Offset = "0x87E914", VA = "0x87E914")]
	private void Update()
	{
	}

	[Token(Token = "0x6000152")]
	[Address(RVA = "0x87E9B4", Offset = "0x87E9B4", VA = "0x87E9B4")]
	public WFX_Demo_DeleteAfterDelay()
	{
	}
}
[Token(Token = "0x200004E")]
public class WFX_Demo_New : MonoBehaviour
{
	[Token(Token = "0x200004F")]
	[CompilerGenerated]
	private sealed class <CheckForDeletedParticles>d__41 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WFX_Demo_New <>4__this;

		[Token(Token = "0x1700000B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000168")]
			[Address(RVA = "0x8805D8", Offset = "0x8805D8", VA = "0x8805D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700000C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600016A")]
			[Address(RVA = "0x880620", Offset = "0x880620", VA = "0x880620", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000165")]
		[Address(RVA = "0x87F814", Offset = "0x87F814", VA = "0x87F814")]
		[DebuggerHidden]
		public <CheckForDeletedParticles>d__41(int <>1__state)
		{
		}

		[Token(Token = "0x6000166")]
		[Address(RVA = "0x880468", Offset = "0x880468", VA = "0x880468", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000167")]
		[Address(RVA = "0x88046C", Offset = "0x88046C", VA = "0x88046C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000169")]
		[Address(RVA = "0x8805E0", Offset = "0x8805E0", VA = "0x8805E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Renderer groundRenderer;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Collider groundCollider;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Space]
	[Space]
	public Image slowMoBtn;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text slowMoLabel;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Image camRotBtn;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text camRotLabel;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Image groundBtn;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text groundLabel;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Space]
	public Text EffectLabel;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Text EffectIndexLabel;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject[] AdditionalEffects;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject ground;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject walls;

	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject bulletholes;

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject m4;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject m4fps;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Material wood;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Material concrete;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Material metal;

	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Material checker;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Material woodWall;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Material concreteWall;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Material metalWall;

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Material checkerWall;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private string groundTextureStr;

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private List<string> groundTextures;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private GameObject[] ParticleExamples;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private int exampleIndex;

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private bool slowMo;

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Vector3 defaultCamPosition;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private Quaternion defaultCamRotation;

	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private List<GameObject> onScreenParticles;

	[Token(Token = "0x6000153")]
	[Address(RVA = "0x87E9C4", Offset = "0x87E9C4", VA = "0x87E9C4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000154")]
	[Address(RVA = "0x87ECF8", Offset = "0x87ECF8", VA = "0x87ECF8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0x87F574", Offset = "0x87F574", VA = "0x87F574")]
	public void OnToggleGround()
	{
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0x87F634", Offset = "0x87F634", VA = "0x87F634")]
	public void OnToggleCamera()
	{
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0x87F704", Offset = "0x87F704", VA = "0x87F704")]
	public void OnToggleSlowMo()
	{
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0x87F7A4", Offset = "0x87F7A4", VA = "0x87F7A4")]
	public void OnPreviousEffect()
	{
	}

	[Token(Token = "0x6000159")]
	[Address(RVA = "0x87F7A8", Offset = "0x87F7A8", VA = "0x87F7A8")]
	public void OnNextEffect()
	{
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0x87EBCC", Offset = "0x87EBCC", VA = "0x87EBCC")]
	private void UpdateUI()
	{
	}

	[Token(Token = "0x600015B")]
	[Address(RVA = "0x87F190", Offset = "0x87F190", VA = "0x87F190")]
	public GameObject spawnParticle()
	{
		return null;
	}

	[Token(Token = "0x600015C")]
	[Address(RVA = "0x87F7AC", Offset = "0x87F7AC", VA = "0x87F7AC")]
	[IteratorStateMachine(typeof(<CheckForDeletedParticles>d__41))]
	private IEnumerator CheckForDeletedParticles()
	{
		return null;
	}

	[Token(Token = "0x600015D")]
	[Address(RVA = "0x87EFD8", Offset = "0x87EFD8", VA = "0x87EFD8")]
	private void prevParticle()
	{
	}

	[Token(Token = "0x600015E")]
	[Address(RVA = "0x87F01C", Offset = "0x87F01C", VA = "0x87F01C")]
	private void nextParticle()
	{
	}

	[Token(Token = "0x600015F")]
	[Address(RVA = "0x87F060", Offset = "0x87F060", VA = "0x87F060")]
	private void destroyParticles()
	{
	}

	[Token(Token = "0x6000160")]
	[Address(RVA = "0x87FDA8", Offset = "0x87FDA8", VA = "0x87FDA8")]
	private void prevTexture()
	{
	}

	[Token(Token = "0x6000161")]
	[Address(RVA = "0x8801BC", Offset = "0x8801BC", VA = "0x8801BC")]
	private void nextTexture()
	{
	}

	[Token(Token = "0x6000162")]
	[Address(RVA = "0x87FE54", Offset = "0x87FE54", VA = "0x87FE54")]
	private void selectMaterial()
	{
	}

	[Token(Token = "0x6000163")]
	[Address(RVA = "0x87F83C", Offset = "0x87F83C", VA = "0x87F83C")]
	private void showHideStuff()
	{
	}

	[Token(Token = "0x6000164")]
	[Address(RVA = "0x880260", Offset = "0x880260", VA = "0x880260")]
	public WFX_Demo_New()
	{
	}
}
[Token(Token = "0x2000050")]
public class WFX_Demo_RandomDir : MonoBehaviour
{
	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 min;

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 max;

	[Token(Token = "0x600016B")]
	[Address(RVA = "0x880628", Offset = "0x880628", VA = "0x880628")]
	private void Awake()
	{
	}

	[Token(Token = "0x600016C")]
	[Address(RVA = "0x8806B0", Offset = "0x8806B0", VA = "0x8806B0")]
	public WFX_Demo_RandomDir()
	{
	}
}
[Token(Token = "0x2000051")]
public class WFX_Demo_Wall : MonoBehaviour
{
	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public WFX_Demo_New demo;

	[Token(Token = "0x600016D")]
	[Address(RVA = "0x8806C8", Offset = "0x8806C8", VA = "0x8806C8")]
	private void OnMouseDown()
	{
	}

	[Token(Token = "0x600016E")]
	[Address(RVA = "0x88086C", Offset = "0x88086C", VA = "0x88086C")]
	public WFX_Demo_Wall()
	{
	}
}
[Token(Token = "0x2000052")]
[RequireComponent(typeof(ParticleSystem))]
public class CFX_AutoDestructShuriken : MonoBehaviour
{
	[Token(Token = "0x2000053")]
	[CompilerGenerated]
	private sealed class <CheckIfAlive>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CFX_AutoDestructShuriken <>4__this;

		[Token(Token = "0x1700000D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000175")]
			[Address(RVA = "0x880A90", Offset = "0x880A90", VA = "0x880A90", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700000E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000177")]
			[Address(RVA = "0x880AD8", Offset = "0x880AD8", VA = "0x880AD8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000172")]
		[Address(RVA = "0x880928", Offset = "0x880928", VA = "0x880928")]
		[DebuggerHidden]
		public <CheckIfAlive>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6000173")]
		[Address(RVA = "0x880958", Offset = "0x880958", VA = "0x880958", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000174")]
		[Address(RVA = "0x88095C", Offset = "0x88095C", VA = "0x88095C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000176")]
		[Address(RVA = "0x880A98", Offset = "0x880A98", VA = "0x880A98", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool OnlyDeactivate;

	[Token(Token = "0x600016F")]
	[Address(RVA = "0x880874", Offset = "0x880874", VA = "0x880874")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000170")]
	[Address(RVA = "0x8808C0", Offset = "0x8808C0", VA = "0x8808C0")]
	[IteratorStateMachine(typeof(<CheckIfAlive>d__2))]
	private IEnumerator CheckIfAlive()
	{
		return null;
	}

	[Token(Token = "0x6000171")]
	[Address(RVA = "0x880950", Offset = "0x880950", VA = "0x880950")]
	public CFX_AutoDestructShuriken()
	{
	}
}
[Token(Token = "0x2000054")]
[RequireComponent(typeof(Light))]
public class CFX_LightIntensityFade : MonoBehaviour
{
	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float duration;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float delay;

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float finalIntensity;

	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float baseIntensity;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool autodestruct;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float p_lifetime;

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float p_delay;

	[Token(Token = "0x6000178")]
	[Address(RVA = "0x880AE0", Offset = "0x880AE0", VA = "0x880AE0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000179")]
	[Address(RVA = "0x880B40", Offset = "0x880B40", VA = "0x880B40")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600017A")]
	[Address(RVA = "0x880BBC", Offset = "0x880BBC", VA = "0x880BBC")]
	private void Update()
	{
	}

	[Token(Token = "0x600017B")]
	[Address(RVA = "0x880D20", Offset = "0x880D20", VA = "0x880D20")]
	public CFX_LightIntensityFade()
	{
	}
}
[Token(Token = "0x2000055")]
[RequireComponent(typeof(MeshFilter))]
public class WFX_BulletHoleDecal : MonoBehaviour
{
	[Token(Token = "0x2000056")]
	[CompilerGenerated]
	private sealed class <holeUpdate>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WFX_BulletHoleDecal <>4__this;

		[Token(Token = "0x1700000F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000184")]
			[Address(RVA = "0x8812F0", Offset = "0x8812F0", VA = "0x8812F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000010")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000186")]
			[Address(RVA = "0x881338", Offset = "0x881338", VA = "0x881338", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000181")]
		[Address(RVA = "0x8810E8", Offset = "0x8810E8", VA = "0x8810E8")]
		[DebuggerHidden]
		public <holeUpdate>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6000182")]
		[Address(RVA = "0x8811DC", Offset = "0x8811DC", VA = "0x8811DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000183")]
		[Address(RVA = "0x8811E0", Offset = "0x8811E0", VA = "0x8811E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000185")]
		[Address(RVA = "0x8812F8", Offset = "0x8812F8", VA = "0x8812F8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Vector2[] quadUVs;

	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float lifetime;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fadeoutpercent;

	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector2 frames;

	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool randomRotation;

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool deactivate;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float life;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float fadeout;

	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Color color;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float orgAlpha;

	[Token(Token = "0x600017C")]
	[Address(RVA = "0x880D30", Offset = "0x880D30", VA = "0x880D30")]
	private void Awake()
	{
	}

	[Token(Token = "0x600017D")]
	[Address(RVA = "0x880DBC", Offset = "0x880DBC", VA = "0x880DBC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600017E")]
	[Address(RVA = "0x881080", Offset = "0x881080", VA = "0x881080")]
	[IteratorStateMachine(typeof(<holeUpdate>d__12))]
	private IEnumerator holeUpdate()
	{
		return null;
	}

	[Token(Token = "0x600017F")]
	[Address(RVA = "0x881110", Offset = "0x881110", VA = "0x881110")]
	public WFX_BulletHoleDecal()
	{
	}
}
[Token(Token = "0x2000057")]
[RequireComponent(typeof(Light))]
public class WFX_LightFlicker : MonoBehaviour
{
	[Token(Token = "0x2000058")]
	[CompilerGenerated]
	private sealed class <Flicker>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WFX_LightFlicker <>4__this;

		[Token(Token = "0x17000011")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600018D")]
			[Address(RVA = "0x881534", Offset = "0x881534", VA = "0x881534", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000012")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600018F")]
			[Address(RVA = "0x88157C", Offset = "0x88157C", VA = "0x88157C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600018A")]
		[Address(RVA = "0x8813FC", Offset = "0x8813FC", VA = "0x8813FC")]
		[DebuggerHidden]
		public <Flicker>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x600018B")]
		[Address(RVA = "0x881438", Offset = "0x881438", VA = "0x881438", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600018C")]
		[Address(RVA = "0x88143C", Offset = "0x88143C", VA = "0x88143C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600018E")]
		[Address(RVA = "0x88153C", Offset = "0x88153C", VA = "0x88153C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float time;

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float timer;

	[Token(Token = "0x6000187")]
	[Address(RVA = "0x881340", Offset = "0x881340", VA = "0x881340")]
	private void Start()
	{
	}

	[Token(Token = "0x6000188")]
	[Address(RVA = "0x881394", Offset = "0x881394", VA = "0x881394")]
	[IteratorStateMachine(typeof(<Flicker>d__3))]
	private IEnumerator Flicker()
	{
		return null;
	}

	[Token(Token = "0x6000189")]
	[Address(RVA = "0x881424", Offset = "0x881424", VA = "0x881424")]
	public WFX_LightFlicker()
	{
	}
}
[Token(Token = "0x2000059")]
public class CFX_SpawnSystem : MonoBehaviour
{
	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static CFX_SpawnSystem instance;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] objectsToPreload;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int[] objectsToPreloadTimes;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool hideObjectsInHierarchy;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool spawnAsChildren;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public bool onlyGetInactiveObjects;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
	public bool instantiateIfNeeded;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool allObjectsLoaded;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<int, List<GameObject>> instantiatedObjects;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<int, int> poolCursors;

	[Token(Token = "0x17000013")]
	public static bool AllObjectsLoaded
	{
		[Token(Token = "0x6000193")]
		[Address(RVA = "0x882430", Offset = "0x882430", VA = "0x882430")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0x881584", Offset = "0x881584", VA = "0x881584")]
	public static GameObject GetNextObject(GameObject sourceObj, bool activateObject = true)
	{
		return null;
	}

	[Token(Token = "0x6000191")]
	[Address(RVA = "0x881C98", Offset = "0x881C98", VA = "0x881C98")]
	public static void PreloadObject(GameObject sourceObj, int poolSize = 1)
	{
	}

	[Token(Token = "0x6000192")]
	[Address(RVA = "0x882038", Offset = "0x882038", VA = "0x882038")]
	public static void UnloadObjects(GameObject sourceObj)
	{
	}

	[Token(Token = "0x6000194")]
	[Address(RVA = "0x881D00", Offset = "0x881D00", VA = "0x881D00")]
	private void addObjectToPool(GameObject sourceObject, int number)
	{
	}

	[Token(Token = "0x6000195")]
	[Address(RVA = "0x882090", Offset = "0x882090", VA = "0x882090")]
	private void removeObjectsFromPool(GameObject sourceObject)
	{
	}

	[Token(Token = "0x6000196")]
	[Address(RVA = "0x881B38", Offset = "0x881B38", VA = "0x881B38")]
	private void increasePoolCursor(int uniqueId)
	{
	}

	[Token(Token = "0x6000197")]
	[Address(RVA = "0x882484", Offset = "0x882484", VA = "0x882484")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0x882578", Offset = "0x882578", VA = "0x882578")]
	private void Start()
	{
	}

	[Token(Token = "0x6000199")]
	[Address(RVA = "0x8825F8", Offset = "0x8825F8", VA = "0x8825F8")]
	public CFX_SpawnSystem()
	{
	}
}
[Token(Token = "0x200005A")]
public class BFX_MouseOrbit : MonoBehaviour
{
	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject target;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float distance;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float xSpeed;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float ySpeed;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float yMinLimit;

	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float yMaxLimit;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float x;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float y;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float prevDistance;

	[Token(Token = "0x600019A")]
	[Address(RVA = "0x882710", Offset = "0x882710", VA = "0x882710")]
	private void Start()
	{
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0x88273C", Offset = "0x88273C", VA = "0x88273C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600019C")]
	[Address(RVA = "0x882B94", Offset = "0x882B94", VA = "0x882B94")]
	private static float ClampAngle(float angle, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x600019D")]
	[Address(RVA = "0x882BD0", Offset = "0x882BD0", VA = "0x882BD0")]
	public BFX_MouseOrbit()
	{
	}
}
[Token(Token = "0x200005B")]
public class DemoGUI : MonoBehaviour
{
	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] Prefabs;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int currentNomber;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject currentInstance;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GUIStyle guiStyleHeader;

	[Token(Token = "0x600019E")]
	[Address(RVA = "0x882BEC", Offset = "0x882BEC", VA = "0x882BEC")]
	private void Start()
	{
	}

	[Token(Token = "0x600019F")]
	[Address(RVA = "0x882D50", Offset = "0x882D50", VA = "0x882D50")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0x882F4C", Offset = "0x882F4C", VA = "0x882F4C")]
	private void ChangeCurrent(int delta)
	{
	}

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0x8830EC", Offset = "0x8830EC", VA = "0x8830EC")]
	public DemoGUI()
	{
	}
}
[Token(Token = "0x200005C")]
public class DemoReactivator : MonoBehaviour
{
	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float TimeDelayToReactivate;

	[Token(Token = "0x60001A2")]
	[Address(RVA = "0x883154", Offset = "0x883154", VA = "0x883154")]
	private void Start()
	{
	}

	[Token(Token = "0x60001A3")]
	[Address(RVA = "0x8831A8", Offset = "0x8831A8", VA = "0x8831A8")]
	private void Reactivate()
	{
	}

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0x883270", Offset = "0x883270", VA = "0x883270")]
	public DemoReactivator()
	{
	}
}
[Token(Token = "0x200005D")]
internal class UVTextureAnimator : MonoBehaviour
{
	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int Rows;

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int Columns;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Fps;

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int OffsetMat;

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float StartDelay;

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool IsInterpolateFrames;

	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public BFX_TextureShaderProperties[] TextureNames;

	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationCurve FrameOverTime;

	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Renderer currentRenderer;

	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Projector projector;

	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Material instanceMaterial;

	[Token(Token = "0x40001F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float animationStartTime;

	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool canUpdate;

	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int previousIndex;

	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int totalFrames;

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float currentInterpolatedTime;

	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int currentIndex;

	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector2 size;

	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool isInitialized;

	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	private bool startDelayIsBroken;

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0x883280", Offset = "0x883280", VA = "0x883280")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0x8834B4", Offset = "0x8834B4", VA = "0x8834B4")]
	private void Start()
	{
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0x8834D0", Offset = "0x8834D0", VA = "0x8834D0")]
	private void Update()
	{
	}

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0x8834E0", Offset = "0x8834E0", VA = "0x8834E0")]
	private void ManualUpdate()
	{
	}

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0x883A4C", Offset = "0x883A4C", VA = "0x883A4C")]
	private void StartDelayFunc()
	{
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0x883290", Offset = "0x883290", VA = "0x883290")]
	private void InitDefaultVariables()
	{
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0x883A70", Offset = "0x883A70", VA = "0x883A70")]
	private void InitializeMaterial()
	{
	}

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0x883518", Offset = "0x883518", VA = "0x883518")]
	private void UpdateMaterial()
	{
	}

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0x8836C8", Offset = "0x8836C8", VA = "0x8836C8")]
	private void SetSpriteAnimation()
	{
	}

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0x8838F4", Offset = "0x8838F4", VA = "0x8838F4")]
	private void SetSpriteAnimationIterpolated()
	{
	}

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0x883C98", Offset = "0x883C98", VA = "0x883C98")]
	public UVTextureAnimator()
	{
	}
}
[Token(Token = "0x200005E")]
public enum BFX_TextureShaderProperties
{
	[Token(Token = "0x4000200")]
	_MainTex,
	[Token(Token = "0x4000201")]
	_DistortTex,
	[Token(Token = "0x4000202")]
	_Mask,
	[Token(Token = "0x4000203")]
	_Cutout,
	[Token(Token = "0x4000204")]
	_CutoutTex,
	[Token(Token = "0x4000205")]
	_Bump,
	[Token(Token = "0x4000206")]
	_BumpTex,
	[Token(Token = "0x4000207")]
	_EmissionTex
}
[Token(Token = "0x200005F")]
public class EarthSpinScript : MonoBehaviour
{
	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0x883D24", Offset = "0x883D24", VA = "0x883D24")]
	private void Update()
	{
	}

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0x883DC0", Offset = "0x883DC0", VA = "0x883DC0")]
	public EarthSpinScript()
	{
	}
}
[Token(Token = "0x2000060")]
[ExecuteInEditMode]
public class ListMeshVertCount : MonoBehaviour
{
	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool includeInActive;

	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool listVertCount;

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0x883DD0", Offset = "0x883DD0", VA = "0x883DD0")]
	private void Update()
	{
	}

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0x883DE4", Offset = "0x883DE4", VA = "0x883DE4")]
	private void ListVertCount()
	{
	}

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0x8840C0", Offset = "0x8840C0", VA = "0x8840C0")]
	public ListMeshVertCount()
	{
	}
}
[Token(Token = "0x2000061")]
public class NetworkControllerTest : MonoBehaviour
{
	[Token(Token = "0x60001B5")]
	[Address(RVA = "0x8840C8", Offset = "0x8840C8", VA = "0x8840C8")]
	private void Start()
	{
	}

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0x884118", Offset = "0x884118", VA = "0x884118")]
	private void Update()
	{
	}

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0x88411C", Offset = "0x88411C", VA = "0x88411C")]
	private void Connect()
	{
	}

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0x884180", Offset = "0x884180", VA = "0x884180")]
	private void Join()
	{
	}

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0x8841FC", Offset = "0x8841FC", VA = "0x8841FC")]
	public NetworkControllerTest()
	{
	}
}
[Token(Token = "0x2000062")]
public class OnlinePS4Hack : HitTarget
{
	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int counter;

	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float lastHit;

	[Token(Token = "0x60001BA")]
	[Address(RVA = "0x884204", Offset = "0x884204", VA = "0x884204")]
	private void Start()
	{
	}

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0x884208", Offset = "0x884208", VA = "0x884208")]
	private void Update()
	{
	}

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0x88420C", Offset = "0x88420C", VA = "0x88420C", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0x88431C", Offset = "0x88431C", VA = "0x88431C")]
	public OnlinePS4Hack()
	{
	}
}
[Token(Token = "0x2000063")]
public class ChannelSelector : MonoBehaviour, IPointerClickHandler, IEventSystemHandler
{
	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string Channel;

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0x88432C", Offset = "0x88432C", VA = "0x88432C")]
	public void SetChannel(string channel)
	{
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0x8843A0", Offset = "0x8843A0", VA = "0x8843A0", Slot = "4")]
	public void OnPointerClick(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0x8846A0", Offset = "0x8846A0", VA = "0x8846A0")]
	public ChannelSelector()
	{
	}
}
[Token(Token = "0x2000064")]
[ExecuteInEditMode]
public class ChatAppIdCheckerUI : MonoBehaviour
{
	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text Description;

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0x8846A8", Offset = "0x8846A8", VA = "0x8846A8")]
	public void Update()
	{
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0x8847DC", Offset = "0x8847DC", VA = "0x8847DC")]
	public ChatAppIdCheckerUI()
	{
	}
}
[Token(Token = "0x2000065")]
public class ChatGui : MonoBehaviour, IChatClientListener
{
	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string[] ChannelsToJoinOnConnect;

	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string[] FriendsList;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int HistoryLengthToFetch;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string selectedChannelName;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ChatClient chatClient;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected internal AppSettings chatAppSettings;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject missingAppIdErrorPanel;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject ConnectingLabel;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public RectTransform ChatPanel;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject UserIdFormPanel;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public InputField InputFieldChat;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Text CurrentChannelText;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Toggle ChannelToggleToInstantiate;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject FriendListUiItemtoInstantiate;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private readonly Dictionary<string, Toggle> channelToggles;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private readonly Dictionary<string, FriendItem> friendListItemLUT;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public bool ShowState;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject Title;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Text StateText;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Text UserIdText;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string HelpText;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public int TestLength;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private byte[] testBytes;

	[Token(Token = "0x17000014")]
	public string UserName
	{
		[Token(Token = "0x60001C3")]
		[Address(RVA = "0x8847E4", Offset = "0x8847E4", VA = "0x8847E4")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60001C4")]
		[Address(RVA = "0x8847EC", Offset = "0x8847EC", VA = "0x8847EC")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0x8847F4", Offset = "0x8847F4", VA = "0x8847F4")]
	public void Start()
	{
	}

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0x884A94", Offset = "0x884A94", VA = "0x884A94")]
	public void Connect()
	{
	}

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0x884C2C", Offset = "0x884C2C", VA = "0x884C2C")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0x884C40", Offset = "0x884C40", VA = "0x884C40")]
	public void OnApplicationQuit()
	{
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0x884C54", Offset = "0x884C54", VA = "0x884C54")]
	public void Update()
	{
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0x884D24", Offset = "0x884D24", VA = "0x884D24")]
	public void OnEnterSend()
	{
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0x8857FC", Offset = "0x8857FC", VA = "0x8857FC")]
	public void OnClickSend()
	{
	}

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0x884DB8", Offset = "0x884DB8", VA = "0x884DB8")]
	private void SendChatMessage(string inputLine)
	{
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0x8858AC", Offset = "0x8858AC", VA = "0x8858AC")]
	public void PostHelpToCurrentChannel()
	{
	}

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0x885950", Offset = "0x885950", VA = "0x885950", Slot = "4")]
	public void DebugReturn(DebugLevel level, string message)
	{
	}

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0x8859F8", Offset = "0x8859F8", VA = "0x8859F8", Slot = "6")]
	public void OnConnected()
	{
	}

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0x885D34", Offset = "0x885D34", VA = "0x885D34", Slot = "5")]
	public void OnDisconnected()
	{
	}

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0x885D54", Offset = "0x885D54", VA = "0x885D54", Slot = "7")]
	public void OnChatStateChange(ChatState state)
	{
	}

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0x885DE8", Offset = "0x885DE8", VA = "0x885DE8", Slot = "10")]
	public void OnSubscribed(string[] channels, bool[] results)
	{
	}

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0x885F7C", Offset = "0x885F7C", VA = "0x885F7C")]
	private void InstantiateChannelButton(string channelName)
	{
	}

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0x885BDC", Offset = "0x885BDC", VA = "0x885BDC")]
	private void InstantiateFriendButton(string friendId)
	{
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0x88615C", Offset = "0x88615C", VA = "0x88615C", Slot = "11")]
	public void OnUnsubscribed(string[] channels)
	{
	}

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0x8865A0", Offset = "0x8865A0", VA = "0x8865A0", Slot = "8")]
	public void OnGetMessages(string channelName, string[] senders, object[] messages)
	{
	}

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0x8865E0", Offset = "0x8865E0", VA = "0x8865E0", Slot = "9")]
	public void OnPrivateMessage(string sender, object message, string channelName)
	{
	}

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0x8866F4", Offset = "0x8866F4", VA = "0x8866F4", Slot = "12")]
	public void OnStatusUpdate(string user, int status, bool gotMessage, object message)
	{
	}

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0x886A34", Offset = "0x886A34", VA = "0x886A34", Slot = "13")]
	public void OnUserSubscribed(string channel, string user)
	{
	}

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0x886B38", Offset = "0x886B38", VA = "0x886B38", Slot = "14")]
	public void OnUserUnsubscribed(string channel, string user)
	{
	}

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0x886C3C", Offset = "0x886C3C", VA = "0x886C3C")]
	public void AddMessageToSelectedChannel(string msg)
	{
	}

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0x884418", Offset = "0x884418", VA = "0x884418")]
	public void ShowChannel(string channelName)
	{
	}

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0x886D28", Offset = "0x886D28", VA = "0x886D28")]
	public void OpenDashboard()
	{
	}

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0x886D6C", Offset = "0x886D6C", VA = "0x886D6C")]
	public ChatGui()
	{
	}
}
[Token(Token = "0x2000066")]
public class FriendItem : MonoBehaviour
{
	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text NameLabel;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text StatusLabel;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text Health;

	[Token(Token = "0x17000015")]
	[HideInInspector]
	public string FriendId
	{
		[Token(Token = "0x60001E1")]
		[Address(RVA = "0x886EC0", Offset = "0x886EC0", VA = "0x886EC0")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001E0")]
		[Address(RVA = "0x886138", Offset = "0x886138", VA = "0x886138")]
		set
		{
		}
	}

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0x886EE4", Offset = "0x886EE4", VA = "0x886EE4")]
	public void Awake()
	{
	}

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0x8868B4", Offset = "0x8868B4", VA = "0x8868B4")]
	public void OnFriendStatusUpdate(int status, bool gotMessage, object message)
	{
	}

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0x886F48", Offset = "0x886F48", VA = "0x886F48")]
	public FriendItem()
	{
	}
}
[Token(Token = "0x2000067")]
public class IgnoreUiRaycastWhenInactive : MonoBehaviour, ICanvasRaycastFilter
{
	[Token(Token = "0x60001E5")]
	[Address(RVA = "0x886F50", Offset = "0x886F50", VA = "0x886F50", Slot = "4")]
	public bool IsRaycastLocationValid(Vector2 screenPoint, Camera eventCamera)
	{
		return default(bool);
	}

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0x886F70", Offset = "0x886F70", VA = "0x886F70")]
	public IgnoreUiRaycastWhenInactive()
	{
	}
}
[Token(Token = "0x2000068")]
[RequireComponent(typeof(ChatGui))]
public class NamePickGui : MonoBehaviour
{
	[Token(Token = "0x400022A")]
	private const string UserNamePlayerPref = "NamePickUserName";

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ChatGui chatNewComponent;

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public InputField idInput;

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0x886F78", Offset = "0x886F78", VA = "0x886F78")]
	public void Start()
	{
	}

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0x887038", Offset = "0x887038", VA = "0x887038")]
	public void EndEditOnEnter()
	{
	}

	[Token(Token = "0x60001E9")]
	[Address(RVA = "0x887074", Offset = "0x887074", VA = "0x887074")]
	public void StartChat()
	{
	}

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0x887140", Offset = "0x887140", VA = "0x887140")]
	public NamePickGui()
	{
	}
}
[Token(Token = "0x2000069")]
public class ScoreHelper : MonoBehaviour
{
	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int Score;

	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int _currentScore;

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0x887148", Offset = "0x887148", VA = "0x887148")]
	private void Start()
	{
	}

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0x88714C", Offset = "0x88714C", VA = "0x88714C")]
	private void Update()
	{
	}

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0x8871E4", Offset = "0x8871E4", VA = "0x8871E4")]
	public ScoreHelper()
	{
	}
}
[Token(Token = "0x200006A")]
public class pseudorandomtest : MonoBehaviour
{
	[Token(Token = "0x60001EE")]
	[Address(RVA = "0x8871EC", Offset = "0x8871EC", VA = "0x8871EC")]
	private void Start()
	{
	}

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0x887260", Offset = "0x887260", VA = "0x887260")]
	private void Update()
	{
	}

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0x887264", Offset = "0x887264", VA = "0x887264")]
	public pseudorandomtest()
	{
	}
}
[Token(Token = "0x200006B")]
public class ScreenFadeControl : MonoBehaviour
{
	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material fadeMaterial;

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0x88726C", Offset = "0x88726C", VA = "0x88726C")]
	private void OnCustomPostRender()
	{
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0x887334", Offset = "0x887334", VA = "0x887334")]
	public ScreenFadeControl()
	{
	}
}
[Token(Token = "0x200006C")]
public class ScreenFader : MonoBehaviour
{
	[Token(Token = "0x200006D")]
	[CompilerGenerated]
	private sealed class <FadeOut>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400023A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ScreenFader <>4__this;

		[Token(Token = "0x400023B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x400023C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Color <color>5__3;

		[Token(Token = "0x17000016")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001FD")]
			[Address(RVA = "0x8878A8", Offset = "0x8878A8", VA = "0x8878A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000017")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001FF")]
			[Address(RVA = "0x8878F0", Offset = "0x8878F0", VA = "0x8878F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001FA")]
		[Address(RVA = "0x887548", Offset = "0x887548", VA = "0x887548")]
		[DebuggerHidden]
		public <FadeOut>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x60001FB")]
		[Address(RVA = "0x887764", Offset = "0x887764", VA = "0x887764", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001FC")]
		[Address(RVA = "0x887768", Offset = "0x887768", VA = "0x887768", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001FE")]
		[Address(RVA = "0x8878B0", Offset = "0x8878B0", VA = "0x8878B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200006E")]
	[CompilerGenerated]
	private sealed class <FadeIn>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400023D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400023E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400023F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ScreenFader <>4__this;

		[Token(Token = "0x4000240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x4000241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Color <color>5__3;

		[Token(Token = "0x17000018")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000203")]
			[Address(RVA = "0x887A5C", Offset = "0x887A5C", VA = "0x887A5C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000019")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000205")]
			[Address(RVA = "0x887AA4", Offset = "0x887AA4", VA = "0x887AA4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000200")]
		[Address(RVA = "0x8875D8", Offset = "0x8875D8", VA = "0x8875D8")]
		[DebuggerHidden]
		public <FadeIn>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6000201")]
		[Address(RVA = "0x8878F8", Offset = "0x8878F8", VA = "0x8878F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000202")]
		[Address(RVA = "0x8878FC", Offset = "0x8878FC", VA = "0x8878FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000204")]
		[Address(RVA = "0x887A64", Offset = "0x887A64", VA = "0x887A64", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200006F")]
	[CompilerGenerated]
	private sealed class <DoFade>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ScreenFader <>4__this;

		[Token(Token = "0x1700001A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000209")]
			[Address(RVA = "0x887DDC", Offset = "0x887DDC", VA = "0x887DDC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600020B")]
			[Address(RVA = "0x887E24", Offset = "0x887E24", VA = "0x887E24", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000206")]
		[Address(RVA = "0x8876A4", Offset = "0x8876A4", VA = "0x8876A4")]
		[DebuggerHidden]
		public <DoFade>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6000207")]
		[Address(RVA = "0x887AAC", Offset = "0x887AAC", VA = "0x887AAC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000208")]
		[Address(RVA = "0x887AB0", Offset = "0x887AB0", VA = "0x887AB0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600020A")]
		[Address(RVA = "0x887DE4", Offset = "0x887DE4", VA = "0x887DE4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool fadeIn;

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fadeTime;

	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color fadeColor;

	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material fadeMaterial;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool faded;

	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool lastFadeIn;

	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<ScreenFadeControl> fadeControls;

	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ScreenFader Instance;

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0x88733C", Offset = "0x88733C", VA = "0x88733C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0x887388", Offset = "0x887388", VA = "0x887388")]
	private void SetFadersEnabled(bool value)
	{
	}

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0x8874E0", Offset = "0x8874E0", VA = "0x8874E0")]
	[IteratorStateMachine(typeof(<FadeOut>d__10))]
	public IEnumerator FadeOut()
	{
		return null;
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0x887570", Offset = "0x887570", VA = "0x887570")]
	[IteratorStateMachine(typeof(<FadeIn>d__11))]
	public IEnumerator FadeIn()
	{
		return null;
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0x887600", Offset = "0x887600", VA = "0x887600")]
	public void Update()
	{
	}

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0x88763C", Offset = "0x88763C", VA = "0x88763C")]
	[IteratorStateMachine(typeof(<DoFade>d__13))]
	public IEnumerator DoFade()
	{
		return null;
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0x8876CC", Offset = "0x8876CC", VA = "0x8876CC")]
	public ScreenFader()
	{
	}
}
[Token(Token = "0x2000070")]
public class AimTarget : HitTarget
{
	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform aimTarget;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool isAlive;

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool aimable;

	[Token(Token = "0x600020C")]
	[Address(RVA = "0x887E2C", Offset = "0x887E2C", VA = "0x887E2C", Slot = "7")]
	public virtual void OnBulletConsumed(Bullet bullet)
	{
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0x887E30", Offset = "0x887E30", VA = "0x887E30")]
	public AimTarget()
	{
	}
}
[Token(Token = "0x2000071")]
public class AimZurdMode : MonoBehaviour
{
	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool zurd;

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CrisisWeapon weapon;

	[Token(Token = "0x600020E")]
	[Address(RVA = "0x887E40", Offset = "0x887E40", VA = "0x887E40")]
	public AimZurdMode()
	{
	}
}
[Token(Token = "0x2000072")]
public class AmbientMusic : MonoBehaviour
{
	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip[] inGameMusic;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int count;

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AudioSource audioSource;

	[Token(Token = "0x600020F")]
	[Address(RVA = "0x887E48", Offset = "0x887E48", VA = "0x887E48")]
	private void Start()
	{
	}

	[Token(Token = "0x6000210")]
	[Address(RVA = "0x888000", Offset = "0x888000", VA = "0x888000")]
	private void Play()
	{
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0x887EA4", Offset = "0x887EA4", VA = "0x887EA4")]
	private void RandomizeClips()
	{
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0x8880DC", Offset = "0x8880DC", VA = "0x8880DC")]
	public AmbientMusic()
	{
	}
}
[Token(Token = "0x2000073")]
public class AmbientSound : MonoBehaviour
{
	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip office;

	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip street;

	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip port;

	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AudioSource audioSource;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AmbientSound instance;

	[Token(Token = "0x6000213")]
	[Address(RVA = "0x8880E4", Offset = "0x8880E4", VA = "0x8880E4")]
	public static AmbientSound getInstance()
	{
		return null;
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0x88812C", Offset = "0x88812C", VA = "0x88812C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000215")]
	[Address(RVA = "0x8881A4", Offset = "0x8881A4", VA = "0x8881A4")]
	public void setAmbientSound(AmbientSoundType type)
	{
	}

	[Token(Token = "0x6000216")]
	[Address(RVA = "0x888280", Offset = "0x888280", VA = "0x888280")]
	public void setStreetAmbientSound()
	{
	}

	[Token(Token = "0x6000217")]
	[Address(RVA = "0x8882B4", Offset = "0x8882B4", VA = "0x8882B4")]
	public AmbientSound()
	{
	}
}
[Token(Token = "0x2000074")]
public enum AmbientSoundType
{
	[Token(Token = "0x4000253")]
	Office,
	[Token(Token = "0x4000254")]
	Street,
	[Token(Token = "0x4000255")]
	Port,
	[Token(Token = "0x4000256")]
	None
}
[Token(Token = "0x2000075")]
public class AnimTest : MonoBehaviour
{
	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator anim;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AimController aimController;

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform aimTarget;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public CommonCharacterController character;

	[Token(Token = "0x6000218")]
	[Address(RVA = "0x8882BC", Offset = "0x8882BC", VA = "0x8882BC")]
	public AnimTest()
	{
	}
}
[Token(Token = "0x2000076")]
public class BackgroundMusic : MonoBehaviour
{
	[Token(Token = "0x400025B")]
	private const string MISSION_ACCOMPLISHED = "missionaccomplished";

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static BackgroundMusic instance;

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip introMusic;

	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip thanksMusic;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip thanksMusicSpa;

	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AudioSource audioSource;

	[Token(Token = "0x6000219")]
	[Address(RVA = "0x8882C4", Offset = "0x8882C4", VA = "0x8882C4")]
	public static BackgroundMusic getInstance()
	{
		return null;
	}

	[Token(Token = "0x600021A")]
	[Address(RVA = "0x88830C", Offset = "0x88830C", VA = "0x88830C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600021B")]
	[Address(RVA = "0x888384", Offset = "0x888384", VA = "0x888384")]
	public void PlayIntroMusic()
	{
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0x888418", Offset = "0x888418", VA = "0x888418")]
	public void PlayThanksMusic()
	{
	}

	[Token(Token = "0x600021D")]
	[Address(RVA = "0x8884D4", Offset = "0x8884D4", VA = "0x8884D4")]
	public BackgroundMusic()
	{
	}
}
[Token(Token = "0x2000077")]
public class Barrel : MonoBehaviour
{
	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform triggerPoint;

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool killCharacters;

	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 lastPosition;

	[Token(Token = "0x600021E")]
	[Address(RVA = "0x8884DC", Offset = "0x8884DC", VA = "0x8884DC")]
	private void Start()
	{
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0x888598", Offset = "0x888598", VA = "0x888598")]
	private void Update()
	{
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0x888A9C", Offset = "0x888A9C", VA = "0x888A9C")]
	public Barrel()
	{
	}
}
[Token(Token = "0x2000078")]
public class TestA : MonoBehaviour
{
	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationClip animationClip;

	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform root;

	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform clips;

	[Token(Token = "0x6000221")]
	[Address(RVA = "0x888AA4", Offset = "0x888AA4", VA = "0x888AA4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0x888AA8", Offset = "0x888AA8", VA = "0x888AA8")]
	public void test()
	{
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0x888B5C", Offset = "0x888B5C", VA = "0x888B5C")]
	private void save(AnimationClip clip, Transform obj, Transform root)
	{
	}

	[Token(Token = "0x6000224")]
	[Address(RVA = "0x888F6C", Offset = "0x888F6C", VA = "0x888F6C")]
	private string getName(Transform obj, Transform root)
	{
		return null;
	}

	[Token(Token = "0x6000225")]
	[Address(RVA = "0x8890F8", Offset = "0x8890F8", VA = "0x8890F8")]
	public TestA()
	{
	}
}
[Token(Token = "0x2000079")]
public class ButtonHandler : HitTarget, IKeyboardPointable
{
	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 initScale;

	[Token(Token = "0x6000226")]
	[Address(RVA = "0x889100", Offset = "0x889100", VA = "0x889100")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000227")]
	[Address(RVA = "0x889130", Offset = "0x889130", VA = "0x889130", Slot = "7")]
	public void OnHoverAnimation(bool isHover)
	{
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0x88937C", Offset = "0x88937C", VA = "0x88937C", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000229")]
	[Address(RVA = "0x889524", Offset = "0x889524", VA = "0x889524")]
	public ButtonHandler()
	{
	}
}
[Token(Token = "0x200007A")]
public class CV2_BHapticsButton : UIButton
{
	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject[] menu;

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool open;

	[Token(Token = "0x600022A")]
	[Address(RVA = "0x889584", Offset = "0x889584", VA = "0x889584", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0x889658", Offset = "0x889658", VA = "0x889658")]
	public CV2_BHapticsButton()
	{
	}
}
[Token(Token = "0x200007B")]
public class BinarySerializer
{
	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Dictionary<Type, FieldInfo[]> fieldCache;

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static byte NULL;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	private static byte BYTES2;

	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private byte[] byteBuffer;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private object[] param1Buffer;

	[Token(Token = "0x600022C")]
	[Address(RVA = "0x889660", Offset = "0x889660", VA = "0x889660")]
	public byte[] serialize(object o)
	{
		return null;
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0x889718", Offset = "0x889718", VA = "0x889718")]
	public void serialize(object o, BinaryWriter os)
	{
	}

	[Token(Token = "0x600022E")]
	[Address(RVA = "0x88A278", Offset = "0x88A278", VA = "0x88A278")]
	public object deserialize(Type type, byte[] data)
	{
		return null;
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0x88A324", Offset = "0x88A324", VA = "0x88A324")]
	public object deserialize(Type type, BinaryReader br)
	{
		return null;
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0x889EE8", Offset = "0x889EE8", VA = "0x889EE8")]
	private void writeSize(int iSize, BinaryWriter os)
	{
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0x88AB48", Offset = "0x88AB48", VA = "0x88AB48")]
	private int readSize(BinaryReader br)
	{
		return default(int);
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0x88A7D8", Offset = "0x88A7D8", VA = "0x88A7D8")]
	private object deserializeArray(Type type, BinaryReader br)
	{
		return null;
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0x88AC18", Offset = "0x88AC18", VA = "0x88AC18")]
	private object deserializeList(Type type, BinaryReader br)
	{
		return null;
	}

	[Token(Token = "0x6000234")]
	[Address(RVA = "0x889E78", Offset = "0x889E78", VA = "0x889E78")]
	private byte[] getByteBuffer(int iSize)
	{
		return null;
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0x889C1C", Offset = "0x889C1C", VA = "0x889C1C")]
	private void serializeArray(object array, BinaryWriter os)
	{
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0x889FB4", Offset = "0x889FB4", VA = "0x889FB4")]
	private void serializeList(object list, BinaryWriter os)
	{
	}

	[Token(Token = "0x6000237")]
	[Address(RVA = "0x88A160", Offset = "0x88A160", VA = "0x88A160")]
	private FieldInfo[] getFields(Type type)
	{
		return null;
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0x889D00", Offset = "0x889D00", VA = "0x889D00")]
	private void WriteInt32(int i, BinaryWriter bw)
	{
	}

	[Token(Token = "0x6000239")]
	[Address(RVA = "0x88A988", Offset = "0x88A988", VA = "0x88A988")]
	private int ReadInt32(BinaryReader br)
	{
		return default(int);
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0x88AD60", Offset = "0x88AD60", VA = "0x88AD60")]
	private void WriteInt16(short i, BinaryWriter bw)
	{
	}

	[Token(Token = "0x600023B")]
	[Address(RVA = "0x88AE14", Offset = "0x88AE14", VA = "0x88AE14")]
	private short ReadInt16(BinaryReader br)
	{
		return default(short);
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0x889DB4", Offset = "0x889DB4", VA = "0x889DB4")]
	private void WriteFloat(float i, BinaryWriter bw)
	{
	}

	[Token(Token = "0x600023D")]
	[Address(RVA = "0x88AA68", Offset = "0x88AA68", VA = "0x88AA68")]
	private float ReadFloat(BinaryReader br)
	{
		return default(float);
	}

	[Token(Token = "0x600023E")]
	[Address(RVA = "0x88AEFC", Offset = "0x88AEFC", VA = "0x88AEFC")]
	private static void Main(string[] args)
	{
	}

	[Token(Token = "0x600023F")]
	[Address(RVA = "0x88AFE8", Offset = "0x88AFE8", VA = "0x88AFE8")]
	public BinarySerializer()
	{
	}
}
[Token(Token = "0x200007C")]
internal class FieldInfoComparer : IComparer<FieldInfo>
{
	[Token(Token = "0x6000241")]
	[Address(RVA = "0x88B220", Offset = "0x88B220", VA = "0x88B220", Slot = "4")]
	public int Compare(FieldInfo x, FieldInfo y)
	{
		return default(int);
	}

	[Token(Token = "0x6000242")]
	[Address(RVA = "0x88AEF4", Offset = "0x88AEF4", VA = "0x88AEF4")]
	public FieldInfoComparer()
	{
	}
}
[Token(Token = "0x200007D")]
internal class Test
{
	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int field1;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int field2;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float field3;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float field4;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float[] farray;

	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Test2 test2;

	[Token(Token = "0x6000243")]
	[Address(RVA = "0x88B278", Offset = "0x88B278", VA = "0x88B278")]
	public Test()
	{
	}
}
[Token(Token = "0x200007E")]
internal class Test2
{
	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<string> funciona;

	[Token(Token = "0x6000244")]
	[Address(RVA = "0x88B088", Offset = "0x88B088", VA = "0x88B088")]
	public Test2()
	{
	}
}
[Token(Token = "0x200007F")]
public class BlinkText : MonoBehaviour
{
	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TextMeshPro[] textsToBlink;

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool enableBlink;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float blinkSpeed;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float currentAlpha;

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int modifier;

	[Token(Token = "0x6000245")]
	[Address(RVA = "0x88B340", Offset = "0x88B340", VA = "0x88B340")]
	private void Start()
	{
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0x88B390", Offset = "0x88B390", VA = "0x88B390")]
	private void Update()
	{
	}

	[Token(Token = "0x6000247")]
	[Address(RVA = "0x88B3B0", Offset = "0x88B3B0", VA = "0x88B3B0")]
	private void updateColorAlpha()
	{
	}

	[Token(Token = "0x6000248")]
	[Address(RVA = "0x88B48C", Offset = "0x88B48C", VA = "0x88B48C")]
	public BlinkText()
	{
	}
}
[Token(Token = "0x2000080")]
public class BombHitArea : HitTarget
{
	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float lastTimeSound;

	[Token(Token = "0x6000249")]
	[Address(RVA = "0x88B4A4", Offset = "0x88B4A4", VA = "0x88B4A4")]
	private void Start()
	{
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0x88B4C0", Offset = "0x88B4C0", VA = "0x88B4C0", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x600024B")]
	[Address(RVA = "0x88B5F4", Offset = "0x88B5F4", VA = "0x88B5F4")]
	public BombHitArea()
	{
	}
}
[Token(Token = "0x2000081")]
public class BombHitTarget : HitTarget
{
	[Token(Token = "0x600024C")]
	[Address(RVA = "0x88B5FC", Offset = "0x88B5FC", VA = "0x88B5FC", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0x88B890", Offset = "0x88B890", VA = "0x88B890")]
	public BombHitTarget()
	{
	}
}
[Token(Token = "0x2000082")]
public class BombRandomDelay : MonoBehaviour
{
	[Token(Token = "0x2000083")]
	[CompilerGenerated]
	private sealed class <boomCoroutine>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400027C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400027D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400027E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool bForce;

		[Token(Token = "0x400027F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BombRandomDelay <>4__this;

		[Token(Token = "0x1700001C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000254")]
			[Address(RVA = "0x88BB9C", Offset = "0x88BB9C", VA = "0x88BB9C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000256")]
			[Address(RVA = "0x88BBE4", Offset = "0x88BBE4", VA = "0x88BBE4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000251")]
		[Address(RVA = "0x88B914", Offset = "0x88B914", VA = "0x88B914")]
		[DebuggerHidden]
		public <boomCoroutine>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x6000252")]
		[Address(RVA = "0x88B944", Offset = "0x88B944", VA = "0x88B944", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000253")]
		[Address(RVA = "0x88B948", Offset = "0x88B948", VA = "0x88B948", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000255")]
		[Address(RVA = "0x88BBA4", Offset = "0x88BBA4", VA = "0x88BBA4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x600024E")]
	[Address(RVA = "0x88B7FC", Offset = "0x88B7FC", VA = "0x88B7FC")]
	public void boom(bool bForce = false)
	{
	}

	[Token(Token = "0x600024F")]
	[Address(RVA = "0x88B898", Offset = "0x88B898", VA = "0x88B898")]
	[IteratorStateMachine(typeof(<boomCoroutine>d__1))]
	private IEnumerator boomCoroutine(bool bForce = false)
	{
		return null;
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0x88B93C", Offset = "0x88B93C", VA = "0x88B93C")]
	public BombRandomDelay()
	{
	}
}
[Token(Token = "0x2000084")]
public class BoxItem : HitTarget
{
	[Token(Token = "0x2000085")]
	public enum Item
	{
		[Token(Token = "0x4000286")]
		caja_AK1,
		[Token(Token = "0x4000287")]
		caja_M16,
		[Token(Token = "0x4000288")]
		caja_SMG,
		[Token(Token = "0x4000289")]
		caja_medkit,
		[Token(Token = "0x400028A")]
		caja_vacia
	}

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Item item;

	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool randomItem;

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool randomWeapon;

	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	private bool firstHit;

	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private System.Random randomGenerator;

	[Token(Token = "0x6000257")]
	[Address(RVA = "0x88BBEC", Offset = "0x88BBEC", VA = "0x88BBEC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0x88BBF0", Offset = "0x88BBF0", VA = "0x88BBF0")]
	private void initialise()
	{
	}

	[Token(Token = "0x6000259")]
	[Address(RVA = "0x88BED8", Offset = "0x88BED8", VA = "0x88BED8", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x600025A")]
	[Address(RVA = "0x88C0B0", Offset = "0x88C0B0", VA = "0x88C0B0")]
	private void showItemIcon()
	{
	}

	[Token(Token = "0x600025B")]
	[Address(RVA = "0x88C218", Offset = "0x88C218", VA = "0x88C218")]
	public BoxItem()
	{
	}
}
[Token(Token = "0x2000086")]
public class BreakableCoverage : HitTarget
{
	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int resistance;

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PoolManager.PoolType noBreakAnimation;

	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public PoolManager.PoolType breakAnimation;

	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Animation anim;

	[Token(Token = "0x600025C")]
	[Address(RVA = "0x88C220", Offset = "0x88C220", VA = "0x88C220")]
	private void Start()
	{
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0x88C284", Offset = "0x88C284", VA = "0x88C284", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x600025E")]
	[Address(RVA = "0x88C420", Offset = "0x88C420", VA = "0x88C420")]
	public BreakableCoverage()
	{
	}
}
[Token(Token = "0x2000087")]
public class BreakGlass : HitTarget
{
	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public MeshRenderer optionalMeshRenderer;

	[Token(Token = "0x600025F")]
	[Address(RVA = "0x88C428", Offset = "0x88C428", VA = "0x88C428")]
	private void Start()
	{
	}

	[Token(Token = "0x6000260")]
	[Address(RVA = "0x88C534", Offset = "0x88C534", VA = "0x88C534", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0x88C79C", Offset = "0x88C79C", VA = "0x88C79C")]
	public BreakGlass()
	{
	}
}
[Token(Token = "0x2000088")]
public class BreakGlassAnim : HitTarget
{
	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public MeshRenderer[] glassList;

	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject associatedVoronoi;

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float aliveTime;

	[Token(Token = "0x6000262")]
	[Address(RVA = "0x88C7A4", Offset = "0x88C7A4", VA = "0x88C7A4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000263")]
	[Address(RVA = "0x88C83C", Offset = "0x88C83C", VA = "0x88C83C", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000264")]
	[Address(RVA = "0x88C9C8", Offset = "0x88C9C8", VA = "0x88C9C8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000265")]
	[Address(RVA = "0x88CA14", Offset = "0x88CA14", VA = "0x88CA14")]
	private void timeOut()
	{
	}

	[Token(Token = "0x6000266")]
	[Address(RVA = "0x88CA38", Offset = "0x88CA38", VA = "0x88CA38")]
	public BreakGlassAnim()
	{
	}
}
[Token(Token = "0x2000089")]
public class ButtonsHelper : MonoBehaviour
{
	[Token(Token = "0x200008A")]
	private class ButtonData
	{
		[Token(Token = "0x40002A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform enabledButton;

		[Token(Token = "0x40002A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform disabledButton;

		[Token(Token = "0x40002A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMesh text;

		[Token(Token = "0x40002A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string defaultText;

		[Token(Token = "0x40002AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool init;

		[Token(Token = "0x6000274")]
		[Address(RVA = "0x88DA80", Offset = "0x88DA80", VA = "0x88DA80")]
		public ButtonData(Transform enabledButton, Transform disabledButton)
		{
		}

		[Token(Token = "0x6000275")]
		[Address(RVA = "0x88DEBC", Offset = "0x88DEBC", VA = "0x88DEBC")]
		public void setButtonState(bool enable, string text = "")
		{
		}
	}

	[Token(Token = "0x200008B")]
	public enum ButtonState
	{
		[Token(Token = "0x40002AC")]
		None,
		[Token(Token = "0x40002AD")]
		Grab,
		[Token(Token = "0x40002AE")]
		Trigger,
		[Token(Token = "0x40002AF")]
		Drop,
		[Token(Token = "0x40002B0")]
		All
	}

	[Token(Token = "0x4000293")]
	public const string BH_PREFIX = "BH_";

	[Token(Token = "0x4000294")]
	public const string BH_HTC = "Vive";

	[Token(Token = "0x4000295")]
	public const string BH_WMR = "WMR_";

	[Token(Token = "0x4000296")]
	public const string BH_OCULUSRIFT = "OculusRift_";

	[Token(Token = "0x4000297")]
	public const string BH_OCULUSQUESTRIFTS = "OculusQuestRiftS_";

	[Token(Token = "0x4000298")]
	public const string BH_PSMOVE = "PSMove";

	[Token(Token = "0x4000299")]
	public const string BH_AIMCONTROLLER = "AimController";

	[Token(Token = "0x400029A")]
	public const string BH_DUALSHOCK = "Dualshock";

	[Token(Token = "0x400029B")]
	public const string BH_PICONEO2 = "PicoNeo2_";

	[Token(Token = "0x400029C")]
	public const string BH_PICONEO3 = "PicoNeo3_";

	[Token(Token = "0x400029D")]
	public const string BH_PICONEO4 = "PicoNeo4_";

	[Token(Token = "0x400029E")]
	public const string BH_QIYU = "Qiyu_";

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private NVRHand hand;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string buttonsHelperName;

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform buttonsHelper;

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ButtonData triggerButton;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ButtonData grabButton;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ButtonData actionButton;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private ButtonData menuButton;

	[Token(Token = "0x6000267")]
	[Address(RVA = "0x88CA48", Offset = "0x88CA48", VA = "0x88CA48")]
	private void Start()
	{
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0x88CAEC", Offset = "0x88CAEC", VA = "0x88CAEC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000269")]
	[Address(RVA = "0x88CB90", Offset = "0x88CB90", VA = "0x88CB90")]
	private void initialise()
	{
	}

	[Token(Token = "0x600026A")]
	[Address(RVA = "0x88CB98", Offset = "0x88CB98", VA = "0x88CB98")]
	private void initialise(NVRHand _hand)
	{
	}

	[Token(Token = "0x600026B")]
	[Address(RVA = "0x88D1E0", Offset = "0x88D1E0", VA = "0x88D1E0")]
	public void updateButtonsHelper()
	{
	}

	[Token(Token = "0x600026C")]
	[Address(RVA = "0x88D244", Offset = "0x88D244", VA = "0x88D244")]
	public void updateButtonsHelper(int config)
	{
	}

	[Token(Token = "0x600026D")]
	[Address(RVA = "0x88CD70", Offset = "0x88CD70", VA = "0x88CD70")]
	private void setHelperName()
	{
	}

	[Token(Token = "0x600026E")]
	[Address(RVA = "0x88D814", Offset = "0x88D814", VA = "0x88D814")]
	private string getConfig(int config)
	{
		return null;
	}

	[Token(Token = "0x600026F")]
	[Address(RVA = "0x88D8B4", Offset = "0x88D8B4", VA = "0x88D8B4")]
	public void setLineRenderer(Transform buttonHelper)
	{
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0x88DB94", Offset = "0x88DB94", VA = "0x88DB94")]
	private string getLineRendererPointName(int p, int s)
	{
		return null;
	}

	[Token(Token = "0x6000271")]
	[Address(RVA = "0x88D710", Offset = "0x88D710", VA = "0x88D710")]
	private void clear()
	{
	}

	[Token(Token = "0x6000272")]
	[Address(RVA = "0x88DC70", Offset = "0x88DC70", VA = "0x88DC70")]
	public void setButtonState(ButtonState buttonState)
	{
	}

	[Token(Token = "0x6000273")]
	[Address(RVA = "0x88E020", Offset = "0x88E020", VA = "0x88E020")]
	public ButtonsHelper()
	{
	}
}
[Token(Token = "0x200008C")]
public class CameraMovement : MonoBehaviour
{
	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float speed;

	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float zoomSpeed;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float minX;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float maxX;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float minY;

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float maxY;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float sensX;

	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float sensY;

	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float rotationY;

	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float rotationX;

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Camera cam;

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool showCam;

	[Token(Token = "0x6000276")]
	[Address(RVA = "0x88E028", Offset = "0x88E028", VA = "0x88E028")]
	private void Start()
	{
	}

	[Token(Token = "0x6000277")]
	[Address(RVA = "0x88E078", Offset = "0x88E078", VA = "0x88E078")]
	private void Update()
	{
	}

	[Token(Token = "0x6000278")]
	[Address(RVA = "0x88E624", Offset = "0x88E624", VA = "0x88E624")]
	public bool touchPadPressed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000279")]
	[Address(RVA = "0x88E710", Offset = "0x88E710", VA = "0x88E710")]
	public CameraMovement()
	{
	}
}
[Token(Token = "0x200008D")]
public class CameraRenderDepthTexture : MonoBehaviour
{
	[Token(Token = "0x600027A")]
	[Address(RVA = "0x88E738", Offset = "0x88E738", VA = "0x88E738")]
	private void Awake()
	{
	}

	[Token(Token = "0x600027B")]
	[Address(RVA = "0x88E794", Offset = "0x88E794", VA = "0x88E794")]
	public CameraRenderDepthTexture()
	{
	}
}
[Token(Token = "0x200008E")]
public class CarefulBombs : MonoBehaviour
{
	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int sceneId;

	[Token(Token = "0x600027C")]
	[Address(RVA = "0x88E79C", Offset = "0x88E79C", VA = "0x88E79C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600027D")]
	[Address(RVA = "0x88E894", Offset = "0x88E894", VA = "0x88E894")]
	private void onSceneInitialise(int sceneId)
	{
	}

	[Token(Token = "0x600027E")]
	[Address(RVA = "0x88E900", Offset = "0x88E900", VA = "0x88E900")]
	public void communication()
	{
	}

	[Token(Token = "0x600027F")]
	[Address(RVA = "0x88E958", Offset = "0x88E958", VA = "0x88E958")]
	public CarefulBombs()
	{
	}
}
[Token(Token = "0x200008F")]
public class CensoredGameObject : MonoBehaviour
{
	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject censored;

	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject uncensored;

	[Token(Token = "0x6000280")]
	[Address(RVA = "0x88E960", Offset = "0x88E960", VA = "0x88E960")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000281")]
	[Address(RVA = "0x88E998", Offset = "0x88E998", VA = "0x88E998")]
	public CensoredGameObject()
	{
	}
}
[Token(Token = "0x2000090")]
public class CharacterMaterials : MonoBehaviour
{
	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material[] materialsList;

	[Token(Token = "0x6000282")]
	[Address(RVA = "0x88E9A0", Offset = "0x88E9A0", VA = "0x88E9A0")]
	public Material getRandomMaterial()
	{
		return null;
	}

	[Token(Token = "0x6000283")]
	[Address(RVA = "0x88E9F0", Offset = "0x88E9F0", VA = "0x88E9F0")]
	public CharacterMaterials()
	{
	}
}
[Token(Token = "0x2000091")]
public class CharacterSphereRaycastItem : SphereHitRaycastItem
{
	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private CommonCharacterController m_character;

	[Token(Token = "0x6000284")]
	[Address(RVA = "0x88E9F8", Offset = "0x88E9F8", VA = "0x88E9F8", Slot = "4")]
	public override void changeToPhysicsColliders(bool bValue)
	{
	}

	[Token(Token = "0x6000285")]
	[Address(RVA = "0x88EC98", Offset = "0x88EC98", VA = "0x88EC98", Slot = "5")]
	public override bool OnHit(Bullet bullet, SphereHit sphereCollision)
	{
		return default(bool);
	}

	[Token(Token = "0x6000286")]
	[Address(RVA = "0x888A08", Offset = "0x888A08", VA = "0x888A08")]
	public CommonCharacterController getCharacter()
	{
		return null;
	}

	[Token(Token = "0x6000287")]
	[Address(RVA = "0x88EE04", Offset = "0x88EE04", VA = "0x88EE04")]
	public CharacterSphereRaycastItem()
	{
	}
}
[Token(Token = "0x2000092")]
public class CharacterVoices : MonoBehaviour
{
	[Token(Token = "0x2000093")]
	public enum Voice
	{
		[Token(Token = "0x40002C7")]
		femaleA,
		[Token(Token = "0x40002C8")]
		femaleB,
		[Token(Token = "0x40002C9")]
		femaleC,
		[Token(Token = "0x40002CA")]
		femaleD,
		[Token(Token = "0x40002CB")]
		maleA,
		[Token(Token = "0x40002CC")]
		maleB,
		[Token(Token = "0x40002CD")]
		maleC,
		[Token(Token = "0x40002CE")]
		maleD
	}

	[Token(Token = "0x2000094")]
	public enum Phrases
	{
		[Token(Token = "0x40002D0")]
		clear,
		[Token(Token = "0x40002D1")]
		fire_in_the_hole,
		[Token(Token = "0x40002D2")]
		gogogo,
		[Token(Token = "0x40002D3")]
		keep_firing,
		[Token(Token = "0x40002D4")]
		take_cover,
		[Token(Token = "0x40002D5")]
		watch_my_back,
		[Token(Token = "0x40002D6")]
		lookout_behind_you,
		[Token(Token = "0x40002D7")]
		cover_me,
		[Token(Token = "0x40002D8")]
		target_destroy,
		[Token(Token = "0x40002D9")]
		die,
		[Token(Token = "0x40002DA")]
		everywhere,
		[Token(Token = "0x40002DB")]
		flancs,
		[Token(Token = "0x40002DC")]
		getdown,
		[Token(Token = "0x40002DD")]
		lookout,
		[Token(Token = "0x40002DE")]
		multiple_enemies,
		[Token(Token = "0x40002DF")]
		reloading,
		[Token(Token = "0x40002E0")]
		reloading_2,
		[Token(Token = "0x40002E1")]
		target,
		[Token(Token = "0x40002E2")]
		watch_out
	}

	[Token(Token = "0x40002C2")]
	private const string SOUNDS_PATH = "CharacterVoices";

	[Token(Token = "0x40002C3")]
	private const string SLASH = "/";

	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static CharacterVoices Instance;

	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<Voice, AudioClip[]> phrases;

	[Token(Token = "0x6000288")]
	[Address(RVA = "0x88EE0C", Offset = "0x88EE0C", VA = "0x88EE0C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000289")]
	[Address(RVA = "0x88EF4C", Offset = "0x88EF4C", VA = "0x88EF4C")]
	private void loadClips()
	{
	}

	[Token(Token = "0x600028A")]
	[Address(RVA = "0x88F168", Offset = "0x88F168", VA = "0x88F168")]
	public AudioClip getPhrase(Voice voice, Phrases phrase)
	{
		return null;
	}

	[Token(Token = "0x600028B")]
	[Address(RVA = "0x88F280", Offset = "0x88F280", VA = "0x88F280")]
	public CharacterVoices()
	{
	}
}
[Token(Token = "0x2000095")]
public class CinematicScreen : MonoBehaviour
{
	[Token(Token = "0x40002E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform topBand;

	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform bottomBand;

	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float timeToMove;

	[Token(Token = "0x600028C")]
	[Address(RVA = "0x88F2FC", Offset = "0x88F2FC", VA = "0x88F2FC")]
	public void Show()
	{
	}

	[Token(Token = "0x600028D")]
	[Address(RVA = "0x88F3B0", Offset = "0x88F3B0", VA = "0x88F3B0")]
	public void Hide()
	{
	}

	[Token(Token = "0x600028E")]
	[Address(RVA = "0x88F4B4", Offset = "0x88F4B4", VA = "0x88F4B4")]
	private void Update()
	{
	}

	[Token(Token = "0x600028F")]
	[Address(RVA = "0x88F508", Offset = "0x88F508", VA = "0x88F508")]
	public CinematicScreen()
	{
	}
}
[Token(Token = "0x2000096")]
public class CommonCharacterController : AimTarget
{
	[Token(Token = "0x2000097")]
	private class TransformStore
	{
		[Token(Token = "0x400030C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform transform;

		[Token(Token = "0x400030D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 localPosition;

		[Token(Token = "0x400030E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 localRotation;

		[Token(Token = "0x60002C0")]
		[Address(RVA = "0x88F9EC", Offset = "0x88F9EC", VA = "0x88F9EC")]
		public TransformStore()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000098")]
	public enum MoveMode
	{
		[Token(Token = "0x4000310")]
		Directional,
		[Token(Token = "0x4000311")]
		Strafe
	}

	[Token(Token = "0x2000099")]
	[CompilerGenerated]
	private sealed class <ApplyForce>d__48 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CommonCharacterController <>4__this;

		[Token(Token = "0x4000315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Rigidbody _rigidbodyHit;

		[Token(Token = "0x4000316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 _hitVector;

		[Token(Token = "0x4000317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float _bulletHitForce;

		[Token(Token = "0x1700001E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002C4")]
			[Address(RVA = "0x893014", Offset = "0x893014", VA = "0x893014", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002C6")]
			[Address(RVA = "0x89305C", Offset = "0x89305C", VA = "0x89305C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002C1")]
		[Address(RVA = "0x8907D8", Offset = "0x8907D8", VA = "0x8907D8")]
		[DebuggerHidden]
		public <ApplyForce>d__48(int <>1__state)
		{
		}

		[Token(Token = "0x60002C2")]
		[Address(RVA = "0x892F80", Offset = "0x892F80", VA = "0x892F80", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002C3")]
		[Address(RVA = "0x892F84", Offset = "0x892F84", VA = "0x892F84", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002C5")]
		[Address(RVA = "0x89301C", Offset = "0x89301C", VA = "0x89301C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200009A")]
	[CompilerGenerated]
	private sealed class <backToHitColliderCoroutine>d__58 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400031A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CommonCharacterController <>4__this;

		[Token(Token = "0x17000020")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002CA")]
			[Address(RVA = "0x8E2560", Offset = "0x8E2560", VA = "0x8E2560", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000021")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002CC")]
			[Address(RVA = "0x8E25A8", Offset = "0x8E25A8", VA = "0x8E25A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002C7")]
		[Address(RVA = "0x8E246C", Offset = "0x8E246C", VA = "0x8E246C")]
		[DebuggerHidden]
		public <backToHitColliderCoroutine>d__58(int <>1__state)
		{
		}

		[Token(Token = "0x60002C8")]
		[Address(RVA = "0x8E2494", Offset = "0x8E2494", VA = "0x8E2494", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002C9")]
		[Address(RVA = "0x8E2498", Offset = "0x8E2498", VA = "0x8E2498", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002CB")]
		[Address(RVA = "0x8E2568", Offset = "0x8E2568", VA = "0x8E2568", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002E6")]
	private const float CENSORED_ENABLED_DELAY = 1f;

	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public RagdollUtility ragdoll;

	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float timeOutWhenDead;

	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool isRagdoll;

	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	private bool firstHit;

	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float SECOND_HIT_FORCE;

	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int currentAction;

	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool isMoving;

	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	public bool male;

	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	public bool disableOnDead;

	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public List<CharacterActionNew> actions;

	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<OverwriteAnimTransform> overwriteAnimTransforms;

	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Dictionary<string, TransformStore> bones;

	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool kinematicOnDead;

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private CharacterSphereRaycastItem m_sphereRaycast;

	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Dictionary<string, CommonCharacterController> s_charactersCache;

	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public bool actionsStarted;

	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float lastHit;

	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public UnityEvent OnDead;

	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[Space]
	[Header("Movement")]
	public MoveMode moveMode;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float smoothAccelerationTime;

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float linearAccelerationSpeed;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[Header("Rotation")]
	public bool lookInCameraDirection;

	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public float turnSpeed;

	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public float stationaryTurnSpeedMlp;

	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Vector3 moveDirection;

	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Animator animator;

	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Vector3 moveDirectionVelocity;

	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	[SerializeField]
	private float turnSensitivity;

	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	[Range(0.1f, 3f)]
	private float animSpeedMultiplier;

	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private Vector3 lastForwardAnimator;

	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private NetworkCharacterController remoteCharacterController;

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Transform m_root;

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Transform m_hips;

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public bool bInitiated;

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Collider[] characterColliders;

	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private Coroutine backCoroutine;

	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public bool pendingAction;

	[Token(Token = "0x6000291")]
	[Address(RVA = "0x88F53C", Offset = "0x88F53C", VA = "0x88F53C")]
	public static CommonCharacterController GetCharacter(string strName)
	{
		return null;
	}

	[Token(Token = "0x6000292")]
	[Address(RVA = "0x88F610", Offset = "0x88F610", VA = "0x88F610")]
	public static void ClearCharacterChache()
	{
	}

	[Token(Token = "0x6000293")]
	[Address(RVA = "0x88F688", Offset = "0x88F688", VA = "0x88F688", Slot = "8")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6000294")]
	[Address(RVA = "0x88F9F4", Offset = "0x88F9F4", VA = "0x88F9F4")]
	public void init()
	{
	}

	[Token(Token = "0x6000295")]
	[Address(RVA = "0x88FE38", Offset = "0x88FE38", VA = "0x88FE38", Slot = "9")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000296")]
	[Address(RVA = "0x88FEDC", Offset = "0x88FEDC", VA = "0x88FEDC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0x88FD6C", Offset = "0x88FD6C", VA = "0x88FD6C")]
	public NetworkCharacterController GetNetworkCharacterController()
	{
		return null;
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0x88FFE4", Offset = "0x88FFE4", VA = "0x88FFE4")]
	public void saveBones()
	{
	}

	[Token(Token = "0x6000299")]
	[Address(RVA = "0x89019C", Offset = "0x89019C", VA = "0x89019C")]
	public void updateBones()
	{
	}

	[Token(Token = "0x600029A")]
	[Address(RVA = "0x890354", Offset = "0x890354", VA = "0x890354", Slot = "10")]
	public virtual void AimToggle(bool state, bool setRootMotion = true)
	{
	}

	[Token(Token = "0x600029B")]
	[Address(RVA = "0x8903A8", Offset = "0x8903A8", VA = "0x8903A8", Slot = "11")]
	public virtual void EnemyHit(Rigidbody _rigidbodyHit, Vector3 _hitVector, float _bulletHitForce)
	{
	}

	[Token(Token = "0x600029C")]
	[Address(RVA = "0x89073C", Offset = "0x89073C", VA = "0x89073C")]
	[IteratorStateMachine(typeof(<ApplyForce>d__48))]
	private IEnumerator ApplyForce(Vector3 _hitVector, Rigidbody _rigidbodyHit, float _bulletHitForce)
	{
		return null;
	}

	[Token(Token = "0x600029D")]
	[Address(RVA = "0x890800", Offset = "0x890800", VA = "0x890800")]
	private void timeOut()
	{
	}

	[Token(Token = "0x600029E")]
	[Address(RVA = "0x89084C", Offset = "0x89084C", VA = "0x89084C")]
	public void setSceneDataEditor(PoliceThiefData data)
	{
	}

	[Token(Token = "0x600029F")]
	[Address(RVA = "0x88EA4C", Offset = "0x88EA4C", VA = "0x88EA4C")]
	public void activateBodyColliders(bool bActivate, bool bActivateRigidbody = false)
	{
	}

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0x8909C8", Offset = "0x8909C8", VA = "0x8909C8", Slot = "5")]
	protected override void ShowImpactEffect(Ray ray, RaycastHit hit)
	{
	}

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0x890A2C", Offset = "0x890A2C", VA = "0x890A2C", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0x890B84", Offset = "0x890B84", VA = "0x890B84", Slot = "12")]
	public virtual bool OnHit(Bullet bullet, Ray ray, RaycastHit hit, Collider collider, bool bRemote = false)
	{
		return default(bool);
	}

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0x890F14", Offset = "0x890F14", VA = "0x890F14", Slot = "13")]
	public virtual Rigidbody getHips()
	{
		return null;
	}

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0x890960", Offset = "0x890960", VA = "0x890960")]
	[IteratorStateMachine(typeof(<backToHitColliderCoroutine>d__58))]
	private IEnumerator backToHitColliderCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0x891010", Offset = "0x891010", VA = "0x891010")]
	public void startActions()
	{
	}

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0x891024", Offset = "0x891024", VA = "0x891024")]
	public void startNextAction()
	{
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0x8911AC", Offset = "0x8911AC", VA = "0x8911AC")]
	public void executeAction(CharacterActionNew action)
	{
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0x891478", Offset = "0x891478", VA = "0x891478")]
	public void executeAction(int iAction)
	{
	}

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0x890528", Offset = "0x890528", VA = "0x890528")]
	public void stopActions()
	{
	}

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0x8911A0", Offset = "0x8911A0", VA = "0x8911A0")]
	public void executeNextAction()
	{
	}

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0x89129C", Offset = "0x89129C", VA = "0x89129C")]
	public void executeNewAction(int nextAction)
	{
	}

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0x891850", Offset = "0x891850", VA = "0x891850")]
	public bool hasActionActive()
	{
		return default(bool);
	}

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0x8918B0", Offset = "0x8918B0", VA = "0x8918B0")]
	public CharacterActionNew getCurrentAction()
	{
		return null;
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0x891B3C", Offset = "0x891B3C", VA = "0x891B3C", Slot = "14")]
	public virtual void setWeaponStateRunning(bool state)
	{
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0x891B40", Offset = "0x891B40", VA = "0x891B40", Slot = "6")]
	public override void OnTarget()
	{
	}

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0x891BC4", Offset = "0x891BC4", VA = "0x891BC4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0x891DDC", Offset = "0x891DDC", VA = "0x891DDC")]
	public void AddOverwriteTransform(OverwriteAnimTransform toAdd)
	{
	}

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0x891E84", Offset = "0x891E84", VA = "0x891E84")]
	public void RemoveOverwriteTransform(OverwriteAnimTransform toRemove)
	{
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0x891EDC", Offset = "0x891EDC", VA = "0x891EDC")]
	public void UpdateAnimator(Vector3 movement)
	{
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0x892104", Offset = "0x892104", VA = "0x892104")]
	private Vector3 GetMoveDirection(Vector3 movement)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0x8924C4", Offset = "0x8924C4", VA = "0x8924C4")]
	private void Rotate(Vector3 movement)
	{
	}

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0x892824", Offset = "0x892824", VA = "0x892824")]
	private float GetAngleFromForward(Transform obj, Vector3 worldDirection)
	{
		return default(float);
	}

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0x8910F8", Offset = "0x8910F8", VA = "0x8910F8")]
	public bool isLocalControlled()
	{
		return default(bool);
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0x8917A8", Offset = "0x8917A8", VA = "0x8917A8")]
	public bool isRemoteMaster()
	{
		return default(bool);
	}

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0x890AF0", Offset = "0x890AF0", VA = "0x890AF0")]
	public bool isConnected()
	{
		return default(bool);
	}

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0x892858", Offset = "0x892858", VA = "0x892858")]
	public bool isRemoteControllerActive()
	{
		return default(bool);
	}

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0x8928EC", Offset = "0x8928EC", VA = "0x8928EC")]
	public Transform getPlayerTarget()
	{
		return null;
	}

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0x8929C0", Offset = "0x8929C0", VA = "0x8929C0")]
	public void reload()
	{
	}

	[Token(Token = "0x60002BD")]
	[Address(RVA = "0x890618", Offset = "0x890618", VA = "0x890618")]
	protected bool IsCensored()
	{
		return default(bool);
	}

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0x892DE0", Offset = "0x892DE0", VA = "0x892DE0")]
	public CommonCharacterController()
	{
	}
}
[Token(Token = "0x200009B")]
public class ComputerHitTarget : HitTarget
{
	[Token(Token = "0x60002CD")]
	[Address(RVA = "0x8E25B0", Offset = "0x8E25B0", VA = "0x8E25B0")]
	private void Start()
	{
	}

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0x8E25B4", Offset = "0x8E25B4", VA = "0x8E25B4")]
	private void Update()
	{
	}

	[Token(Token = "0x60002CF")]
	[Address(RVA = "0x8E25B8", Offset = "0x8E25B8", VA = "0x8E25B8", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x60002D0")]
	[Address(RVA = "0x8E2624", Offset = "0x8E2624", VA = "0x8E2624")]
	public ComputerHitTarget()
	{
	}
}
[Token(Token = "0x200009C")]
public class CopyAnimationTransform : MonoBehaviour
{
	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool copy;

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0x8E262C", Offset = "0x8E262C", VA = "0x8E262C")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0x8E2640", Offset = "0x8E2640", VA = "0x8E2640")]
	private void copyAnimation()
	{
	}

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0x8E295C", Offset = "0x8E295C", VA = "0x8E295C")]
	public CopyAnimationTransform()
	{
	}
}
[Token(Token = "0x200009D")]
public class CopyComponentUtil
{
	[Token(Token = "0x60002D4")]
	public static T CopyComponent<T>(T original, GameObject destination) where T : Component
	{
		return null;
	}

	[Token(Token = "0x60002D5")]
	[Address(RVA = "0x8E2964", Offset = "0x8E2964", VA = "0x8E2964")]
	public CopyComponentUtil()
	{
	}
}
[Token(Token = "0x200009E")]
public class CountDown : MonoBehaviour
{
	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TextMeshPro text;

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int currentTime;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int[] timeSplit;

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0x8E296C", Offset = "0x8E296C", VA = "0x8E296C")]
	private void Start()
	{
	}

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0x8E29C0", Offset = "0x8E29C0", VA = "0x8E29C0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0x8E2BB0", Offset = "0x8E2BB0", VA = "0x8E2BB0")]
	private void updateTime()
	{
	}

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0x8E2E5C", Offset = "0x8E2E5C", VA = "0x8E2E5C")]
	public CountDown()
	{
	}
}
[Token(Token = "0x200009F")]
public class Crane : HitTarget
{
	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Rigidbody barrelPlatform;

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public SceneData scene;

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool hitted;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool init;

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0x8E2ECC", Offset = "0x8E2ECC", VA = "0x8E2ECC")]
	private void Start()
	{
	}

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0x8E2F98", Offset = "0x8E2F98", VA = "0x8E2F98")]
	private void OnSceneInitialise(int sceneId)
	{
	}

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0x8E3018", Offset = "0x8E3018", VA = "0x8E3018")]
	private void communication()
	{
	}

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0x8E3070", Offset = "0x8E3070", VA = "0x8E3070", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0x8E3150", Offset = "0x8E3150", VA = "0x8E3150")]
	public Crane()
	{
	}
}
[Token(Token = "0x20000A0")]
public class CraneBarrels : MonoBehaviour
{
	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform triggerPoint;

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0x8E3158", Offset = "0x8E3158", VA = "0x8E3158")]
	private void Update()
	{
	}

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0x8E3514", Offset = "0x8E3514", VA = "0x8E3514")]
	public CraneBarrels()
	{
	}
}
[Token(Token = "0x20000A1")]
public class CrisisVRigadeData : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20000A2")]
	public struct CharacterData
	{
		[Token(Token = "0x4000329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SkinnedMeshRenderer skinnedMesh;

		[Token(Token = "0x400032A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public MeshRenderer[] meshes;
	}

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CharacterData[] characterTemplates;

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject sceneManagerPrefab;

	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject sceneDataPrefab;

	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject thiefPolicePrefab;

	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<ThiefPoliceController> teammates;

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0x8E351C", Offset = "0x8E351C", VA = "0x8E351C")]
	public void test()
	{
	}

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0x8E393C", Offset = "0x8E393C", VA = "0x8E393C")]
	public void updateCharacterMaterials()
	{
	}

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0x8E3CDC", Offset = "0x8E3CDC", VA = "0x8E3CDC")]
	public void updateFireActions()
	{
	}

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0x8E3E5C", Offset = "0x8E3E5C", VA = "0x8E3E5C")]
	public void updateGotoActions()
	{
	}

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0x8E3FBC", Offset = "0x8E3FBC", VA = "0x8E3FBC")]
	public CrisisVRigadeData()
	{
	}
}
[Token(Token = "0x20000A3")]
public class CrisisVrigade_PS4Trophies
{
	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int FIRST_SHOT;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int FIRST_HEADSHOT;

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int FIRST_SCENE_COMPLETED;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int KILL_BUDDIE;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int FIRST_SHOT_BONUSWEAPON;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static int FIRST_HEADSHOT_SLOWMOTION;

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static int BOMBS_EXPLODED;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public static int GAMEPLAY_100;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static int MISSION_ACCOMPLISHED_ALLHOSTAGEALIVE;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public static int HEADSHOTS_1000;

	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static int MISSION_ACCOMPLISHED;

	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public static int MISSION_ACCOMPLISHED_HELLMODE;

	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static bool firstShot;

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public static bool firstHeadshot;

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public static bool firstSceneCompleted;

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	public static bool killBuddie;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public static bool firstShotBonusWeapon;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public static bool firstHeadshotSlowMotion;

	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
	public static bool bombsExploded;

	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x37")]
	public static bool gameplay100;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static bool missionAccomplishedAllHostageAlive;

	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public static bool headshots1000;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	public static bool missionAccomplished;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
	public static bool missionAccomplishedHellMode;

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0x8E4038", Offset = "0x8E4038", VA = "0x8E4038")]
	public CrisisVrigade_PS4Trophies()
	{
	}
}
[Token(Token = "0x20000A4")]
public class CrisisWatch : MonoBehaviour
{
	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform watch;

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private TextMeshPro lifes;

	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private PlayerHit playerHit;

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0x8E40AC", Offset = "0x8E40AC", VA = "0x8E40AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0x8E41B8", Offset = "0x8E41B8", VA = "0x8E41B8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0x8E430C", Offset = "0x8E430C", VA = "0x8E430C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0x8E42B4", Offset = "0x8E42B4", VA = "0x8E42B4")]
	public void updateLifes()
	{
	}

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0x8E43A0", Offset = "0x8E43A0", VA = "0x8E43A0")]
	public CrisisWatch()
	{
	}
}
[Token(Token = "0x20000A5")]
public class CrisisWeapon : Weapon
{
	[Token(Token = "0x4000346")]
	private const float NOT_SHOOTING_DURATION = 15f;

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private Transform aimHand;

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0x8E43A8", Offset = "0x8E43A8", VA = "0x8E43A8", Slot = "22")]
	protected override void init()
	{
	}

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0x8E4474", Offset = "0x8E4474", VA = "0x8E4474", Slot = "23")]
	protected override void Update()
	{
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0x8E45C4", Offset = "0x8E45C4", VA = "0x8E45C4", Slot = "25")]
	protected override void reloadUpdate()
	{
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0x8E4824", Offset = "0x8E4824", VA = "0x8E4824", Slot = "10")]
	public override void BeginInteraction(NVRHand hand)
	{
	}

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0x8E4964", Offset = "0x8E4964", VA = "0x8E4964", Slot = "15")]
	public override void EndInteraction(NVRHand hand)
	{
	}

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0x8E4A38", Offset = "0x8E4A38", VA = "0x8E4A38", Slot = "27")]
	protected override void decreaseBulletIcon()
	{
	}

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0x8E4644", Offset = "0x8E4644", VA = "0x8E4644")]
	public void changeWeapon(bool forceReload = false)
	{
	}

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0x8E460C", Offset = "0x8E460C", VA = "0x8E460C")]
	public bool isDefaultWeapon()
	{
		return default(bool);
	}

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0x8E4AEC", Offset = "0x8E4AEC", VA = "0x8E4AEC")]
	public void changeHands()
	{
	}

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0x8E4BC4", Offset = "0x8E4BC4", VA = "0x8E4BC4")]
	public void setHands()
	{
	}

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0x8E4C7C", Offset = "0x8E4C7C", VA = "0x8E4C7C", Slot = "21")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0x8E4C80", Offset = "0x8E4C80", VA = "0x8E4C80", Slot = "26")]
	public override void dropMagazine()
	{
	}

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0x8E4D08", Offset = "0x8E4D08", VA = "0x8E4D08", Slot = "28")]
	public override void reload(bool bAnimate = false, bool bRemote = false)
	{
	}

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0x8E4F00", Offset = "0x8E4F00", VA = "0x8E4F00")]
	public CrisisWeapon()
	{
	}
}
[Token(Token = "0x20000A6")]
public class CustomRenderQueue : MonoBehaviour
{
	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int custom_render_queue;

	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool modifychildren;

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0x8E4F58", Offset = "0x8E4F58", VA = "0x8E4F58")]
	private void Start()
	{
	}

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0x8E4F5C", Offset = "0x8E4F5C", VA = "0x8E4F5C")]
	private void modifyRenderQueue()
	{
	}

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0x8E5050", Offset = "0x8E5050", VA = "0x8E5050")]
	public CustomRenderQueue()
	{
	}
}
[Token(Token = "0x20000A7")]
public class DebugCommand : MonoBehaviour
{
	[Token(Token = "0x20000A8")]
	public enum Command
	{
		[Token(Token = "0x400034C")]
		SceneSelection,
		[Token(Token = "0x400034D")]
		Player,
		[Token(Token = "0x400034E")]
		Polices,
		[Token(Token = "0x400034F")]
		Thiefs,
		[Token(Token = "0x4000350")]
		Hostages,
		[Token(Token = "0x4000351")]
		Characters,
		[Token(Token = "0x4000352")]
		BulletTime
	}

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Command command;

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0x8E5060", Offset = "0x8E5060", VA = "0x8E5060")]
	public DebugCommand()
	{
	}
}
[Token(Token = "0x20000A9")]
public class DebugPointer : MonoBehaviour
{
	[Token(Token = "0x6000300")]
	[Address(RVA = "0x8E5068", Offset = "0x8E5068", VA = "0x8E5068")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000301")]
	[Address(RVA = "0x8E536C", Offset = "0x8E536C", VA = "0x8E536C")]
	public DebugPointer()
	{
	}
}
[Token(Token = "0x20000AA")]
public class DebugModeObject : HitTarget
{
	[Token(Token = "0x6000302")]
	[Address(RVA = "0x8E5374", Offset = "0x8E5374", VA = "0x8E5374")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000303")]
	[Address(RVA = "0x8E5398", Offset = "0x8E5398", VA = "0x8E5398", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000304")]
	[Address(RVA = "0x8E5524", Offset = "0x8E5524", VA = "0x8E5524")]
	public DebugModeObject()
	{
	}
}
[Token(Token = "0x20000AB")]
public class Door : SceneAction
{
	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform openDoorTransform;

	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SceneData openDoorScene;

	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AudioSource audioSource;

	[Token(Token = "0x6000305")]
	[Address(RVA = "0x8E552C", Offset = "0x8E552C", VA = "0x8E552C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000306")]
	[Address(RVA = "0x8E557C", Offset = "0x8E557C", VA = "0x8E557C", Slot = "4")]
	public override void executeAction()
	{
	}

	[Token(Token = "0x6000307")]
	[Address(RVA = "0x8E55DC", Offset = "0x8E55DC", VA = "0x8E55DC")]
	private void openDoor()
	{
	}

	[Token(Token = "0x6000308")]
	[Address(RVA = "0x8E56E0", Offset = "0x8E56E0", VA = "0x8E56E0")]
	public void closeDoor()
	{
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0x8E56E4", Offset = "0x8E56E4", VA = "0x8E56E4")]
	public Door()
	{
	}
}
[Token(Token = "0x20000AC")]
public class EnemyBullet : MonoBehaviour
{
	[Token(Token = "0x600030A")]
	[Address(RVA = "0x8E56EC", Offset = "0x8E56EC", VA = "0x8E56EC")]
	public EnemyBullet()
	{
	}
}
[Token(Token = "0x20000AD")]
public class ExcludeFromPlatformBuild : MonoBehaviour
{
	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool exclude_pc;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool exclude_quest;

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool exclude_pico;

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool exclude_nolo;

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool exclude_ps4;

	[Token(Token = "0x600030B")]
	[Address(RVA = "0x8E56F4", Offset = "0x8E56F4", VA = "0x8E56F4")]
	private void Start()
	{
	}

	[Token(Token = "0x600030C")]
	[Address(RVA = "0x8E5728", Offset = "0x8E5728", VA = "0x8E5728")]
	public ExcludeFromPlatformBuild()
	{
	}
}
[Token(Token = "0x20000AE")]
public class ExitButton : UIButton
{
	[Token(Token = "0x600030D")]
	[Address(RVA = "0x8E5730", Offset = "0x8E5730", VA = "0x8E5730", Slot = "8")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600030E")]
	[Address(RVA = "0x8E5738", Offset = "0x8E5738", VA = "0x8E5738", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x600030F")]
	[Address(RVA = "0x8E5804", Offset = "0x8E5804", VA = "0x8E5804")]
	private void exitGame()
	{
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0x8E580C", Offset = "0x8E580C", VA = "0x8E580C")]
	public ExitButton()
	{
	}
}
[Token(Token = "0x20000AF")]
public class ExplosiveItem : HitTarget
{
	[Token(Token = "0x20000B0")]
	[CompilerGenerated]
	private sealed class <test>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<Rigidbody> rbs;

		[Token(Token = "0x4000365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ExplosiveItem <>4__this;

		[Token(Token = "0x17000022")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600031B")]
			[Address(RVA = "0x8E65D0", Offset = "0x8E65D0", VA = "0x8E65D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000023")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600031D")]
			[Address(RVA = "0x8E6618", Offset = "0x8E6618", VA = "0x8E6618", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000318")]
		[Address(RVA = "0x8E62F8", Offset = "0x8E62F8", VA = "0x8E62F8")]
		[DebuggerHidden]
		public <test>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6000319")]
		[Address(RVA = "0x8E63B4", Offset = "0x8E63B4", VA = "0x8E63B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600031A")]
		[Address(RVA = "0x8E63B8", Offset = "0x8E63B8", VA = "0x8E63B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600031C")]
		[Address(RVA = "0x8E65D8", Offset = "0x8E65D8", VA = "0x8E65D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000B1")]
	[CompilerGenerated]
	private sealed class <test2>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<Rigidbody> rbs;

		[Token(Token = "0x4000369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ExplosiveItem <>4__this;

		[Token(Token = "0x17000024")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000321")]
			[Address(RVA = "0x8E6978", Offset = "0x8E6978", VA = "0x8E6978", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000025")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000323")]
			[Address(RVA = "0x8E69C0", Offset = "0x8E69C0", VA = "0x8E69C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600031E")]
		[Address(RVA = "0x8E6320", Offset = "0x8E6320", VA = "0x8E6320")]
		[DebuggerHidden]
		public <test2>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x600031F")]
		[Address(RVA = "0x8E6620", Offset = "0x8E6620", VA = "0x8E6620", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000320")]
		[Address(RVA = "0x8E6624", Offset = "0x8E6624", VA = "0x8E6624", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000322")]
		[Address(RVA = "0x8E6980", Offset = "0x8E6980", VA = "0x8E6980", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject item;

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject explosion;

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float explosionRadius;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float force;

	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float upForce;

	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float force2;

	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool checkCharacters;

	[Token(Token = "0x6000311")]
	[Address(RVA = "0x8E5814", Offset = "0x8E5814", VA = "0x8E5814", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000312")]
	[Address(RVA = "0x8E5D58", Offset = "0x8E5D58", VA = "0x8E5D58")]
	private List<CommonCharacterController> getCharactersHitted()
	{
		return null;
	}

	[Token(Token = "0x6000313")]
	[Address(RVA = "0x8E62A0", Offset = "0x8E62A0", VA = "0x8E62A0")]
	private void startCommunication()
	{
	}

	[Token(Token = "0x6000314")]
	[Address(RVA = "0x8E61B8", Offset = "0x8E61B8", VA = "0x8E61B8")]
	[IteratorStateMachine(typeof(<test>d__10))]
	private IEnumerator test(List<Rigidbody> rbs)
	{
		return null;
	}

	[Token(Token = "0x6000315")]
	[Address(RVA = "0x8E622C", Offset = "0x8E622C", VA = "0x8E622C")]
	[IteratorStateMachine(typeof(<test2>d__11))]
	private IEnumerator test2(List<Rigidbody> rbs)
	{
		return null;
	}

	[Token(Token = "0x6000316")]
	[Address(RVA = "0x8E6348", Offset = "0x8E6348", VA = "0x8E6348")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0x8E6398", Offset = "0x8E6398", VA = "0x8E6398")]
	public ExplosiveItem()
	{
	}
}
[Token(Token = "0x20000B2")]
public class FollowTransform : MonoBehaviour
{
	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform transformToFollow;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float deltaY;

	[Token(Token = "0x6000324")]
	[Address(RVA = "0x8E69C8", Offset = "0x8E69C8", VA = "0x8E69C8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000325")]
	[Address(RVA = "0x8E6A54", Offset = "0x8E6A54", VA = "0x8E6A54")]
	public FollowTransform()
	{
	}
}
[Token(Token = "0x20000B3")]
public class GameObjectAnimator : MonoBehaviour
{
	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 initPosition;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 initRotation;

	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 initScale;

	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 animatedPosition;

	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 animatedRotation;

	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 animatedScale;

	[Token(Token = "0x6000326")]
	[Address(RVA = "0x8E6A5C", Offset = "0x8E6A5C", VA = "0x8E6A5C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000327")]
	[Address(RVA = "0x8E6BE4", Offset = "0x8E6BE4", VA = "0x8E6BE4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000328")]
	[Address(RVA = "0x8E6BF4", Offset = "0x8E6BF4", VA = "0x8E6BF4")]
	public void setAnimation(bool enable, float time)
	{
	}

	[Token(Token = "0x6000329")]
	[Address(RVA = "0x8E6D38", Offset = "0x8E6D38", VA = "0x8E6D38")]
	public GameObjectAnimator()
	{
	}
}
[Token(Token = "0x20000B4")]
public class GameOver : MonoBehaviour
{
	[Token(Token = "0x20000B5")]
	[CompilerGenerated]
	private sealed class <retryMenu>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameOver <>4__this;

		[Token(Token = "0x17000026")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000340")]
			[Address(RVA = "0x8E92E4", Offset = "0x8E92E4", VA = "0x8E92E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000027")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000342")]
			[Address(RVA = "0x8E932C", Offset = "0x8E932C", VA = "0x8E932C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600033D")]
		[Address(RVA = "0x8E7490", Offset = "0x8E7490", VA = "0x8E7490")]
		[DebuggerHidden]
		public <retryMenu>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x600033E")]
		[Address(RVA = "0x8E89E4", Offset = "0x8E89E4", VA = "0x8E89E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600033F")]
		[Address(RVA = "0x8E89E8", Offset = "0x8E89E8", VA = "0x8E89E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000341")]
		[Address(RVA = "0x8E92EC", Offset = "0x8E92EC", VA = "0x8E92EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000B6")]
	[CompilerGenerated]
	private sealed class <volumeOff>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameOver <>4__this;

		[Token(Token = "0x4000386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AudioSource[] <audioSources>5__2;

		[Token(Token = "0x4000387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <volume>5__3;

		[Token(Token = "0x4000388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool <bFirst>5__4;

		[Token(Token = "0x17000028")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000346")]
			[Address(RVA = "0x8E9684", Offset = "0x8E9684", VA = "0x8E9684", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000029")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000348")]
			[Address(RVA = "0x8E96CC", Offset = "0x8E96CC", VA = "0x8E96CC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000343")]
		[Address(RVA = "0x8E7618", Offset = "0x8E7618", VA = "0x8E7618")]
		[DebuggerHidden]
		public <volumeOff>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6000344")]
		[Address(RVA = "0x8E9334", Offset = "0x8E9334", VA = "0x8E9334", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000345")]
		[Address(RVA = "0x8E9338", Offset = "0x8E9338", VA = "0x8E9338", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000347")]
		[Address(RVA = "0x8E968C", Offset = "0x8E968C", VA = "0x8E968C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000B7")]
	[CompilerGenerated]
	private sealed class <volumeOn>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400038A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400038B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameOver <>4__this;

		[Token(Token = "0x400038C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AudioSource[] <audioSources>5__2;

		[Token(Token = "0x400038D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <volume>5__3;

		[Token(Token = "0x1700002A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600034C")]
			[Address(RVA = "0x8E9AB8", Offset = "0x8E9AB8", VA = "0x8E9AB8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600034E")]
			[Address(RVA = "0x8E9B00", Offset = "0x8E9B00", VA = "0x8E9B00", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000349")]
		[Address(RVA = "0x8E76A8", Offset = "0x8E76A8", VA = "0x8E76A8")]
		[DebuggerHidden]
		public <volumeOn>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x600034A")]
		[Address(RVA = "0x8E96D4", Offset = "0x8E96D4", VA = "0x8E96D4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600034B")]
		[Address(RVA = "0x8E96D8", Offset = "0x8E96D8", VA = "0x8E96D8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600034D")]
		[Address(RVA = "0x8E9AC0", Offset = "0x8E9AC0", VA = "0x8E9AC0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000B8")]
	[CompilerGenerated]
	private sealed class <retryCountdownCoroutine>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400038E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400038F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameOver <>4__this;

		[Token(Token = "0x4000391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x1700002C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000352")]
			[Address(RVA = "0x8E9CA8", Offset = "0x8E9CA8", VA = "0x8E9CA8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000354")]
			[Address(RVA = "0x8E9CF0", Offset = "0x8E9CF0", VA = "0x8E9CF0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600034F")]
		[Address(RVA = "0x8E7738", Offset = "0x8E7738", VA = "0x8E7738")]
		[DebuggerHidden]
		public <retryCountdownCoroutine>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x6000350")]
		[Address(RVA = "0x8E9B08", Offset = "0x8E9B08", VA = "0x8E9B08", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000351")]
		[Address(RVA = "0x8E9B0C", Offset = "0x8E9B0C", VA = "0x8E9B0C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000353")]
		[Address(RVA = "0x8E9CB0", Offset = "0x8E9CB0", VA = "0x8E9CB0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000372")]
	private const int RETRY_COUNTDOWN = 9;

	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform retryTransform;

	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform gameOverTransform;

	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject newScore;

	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private TextMeshPro nameScoreInput;

	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshPro retryCountdown;

	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private LayerMask oldCullingMask;

	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Color oldBackgroundColor;

	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private CameraClearFlags oldClearFlags;

	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Dictionary<AudioSource, float> originalVolumes;

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public WalkieTalkie.CommunicationEvent gameOverCommunicationEvent;

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public bool isSpectator;

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	private bool bRetry;

	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x66")]
	private bool bBackToOffice;

	[Token(Token = "0x600032A")]
	[Address(RVA = "0x8E6D40", Offset = "0x8E6D40", VA = "0x8E6D40")]
	private void Awake()
	{
	}

	[Token(Token = "0x600032B")]
	[Address(RVA = "0x8E700C", Offset = "0x8E700C", VA = "0x8E700C")]
	public void Show()
	{
	}

	[Token(Token = "0x600032C")]
	[Address(RVA = "0x8E7268", Offset = "0x8E7268", VA = "0x8E7268")]
	private void communication()
	{
	}

	[Token(Token = "0x600032D")]
	[Address(RVA = "0x8E734C", Offset = "0x8E734C", VA = "0x8E734C")]
	private void portTimeCommunication()
	{
	}

	[Token(Token = "0x600032E")]
	[Address(RVA = "0x8E73A4", Offset = "0x8E73A4", VA = "0x8E73A4")]
	private void gameOver()
	{
	}

	[Token(Token = "0x600032F")]
	[Address(RVA = "0x8E7428", Offset = "0x8E7428", VA = "0x8E7428")]
	[IteratorStateMachine(typeof(<retryMenu>d__17))]
	private IEnumerator retryMenu()
	{
		return null;
	}

	[Token(Token = "0x6000330")]
	[Address(RVA = "0x8E74B8", Offset = "0x8E74B8", VA = "0x8E74B8")]
	private CrisisWeapon getWeapon()
	{
		return null;
	}

	[Token(Token = "0x6000331")]
	[Address(RVA = "0x8E75B0", Offset = "0x8E75B0", VA = "0x8E75B0")]
	[IteratorStateMachine(typeof(<volumeOff>d__19))]
	private IEnumerator volumeOff()
	{
		return null;
	}

	[Token(Token = "0x6000332")]
	[Address(RVA = "0x8E7640", Offset = "0x8E7640", VA = "0x8E7640")]
	[IteratorStateMachine(typeof(<volumeOn>d__20))]
	private IEnumerator volumeOn()
	{
		return null;
	}

	[Token(Token = "0x6000333")]
	[Address(RVA = "0x8E76D0", Offset = "0x8E76D0", VA = "0x8E76D0")]
	[IteratorStateMachine(typeof(<retryCountdownCoroutine>d__21))]
	private IEnumerator retryCountdownCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000334")]
	[Address(RVA = "0x8E7760", Offset = "0x8E7760", VA = "0x8E7760")]
	private void retry(UIButton button)
	{
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0x8E8050", Offset = "0x8E8050", VA = "0x8E8050")]
	public void backToOffice([Optional] UIButton button)
	{
	}

	[Token(Token = "0x6000336")]
	[Address(RVA = "0x8E7D90", Offset = "0x8E7D90", VA = "0x8E7D90")]
	private void restartGame()
	{
	}

	[Token(Token = "0x6000337")]
	[Address(RVA = "0x8E8238", Offset = "0x8E8238", VA = "0x8E8238")]
	private void backToBase()
	{
	}

	[Token(Token = "0x6000338")]
	[Address(RVA = "0x8E8284", Offset = "0x8E8284", VA = "0x8E8284")]
	private void hideAll()
	{
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0x8E82D4", Offset = "0x8E82D4", VA = "0x8E82D4")]
	public void showAll()
	{
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0x8E7E54", Offset = "0x8E7E54", VA = "0x8E7E54")]
	private void backToGameAsViewer()
	{
	}

	[Token(Token = "0x600033B")]
	[Address(RVA = "0x8E86AC", Offset = "0x8E86AC", VA = "0x8E86AC")]
	private bool isBestScore(int currentScore)
	{
		return default(bool);
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0x8E8960", Offset = "0x8E8960", VA = "0x8E8960")]
	public GameOver()
	{
	}
}
[Token(Token = "0x20000B9")]
public class HarborAnimationEvents : MonoBehaviour
{
	[Token(Token = "0x20000BA")]
	[CompilerGenerated]
	private sealed class <wheelCollision>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HarborAnimationEvents <>4__this;

		[Token(Token = "0x1700002E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000365")]
			[Address(RVA = "0x8EA2A8", Offset = "0x8EA2A8", VA = "0x8EA2A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000367")]
			[Address(RVA = "0x8EA2F0", Offset = "0x8EA2F0", VA = "0x8EA2F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000362")]
		[Address(RVA = "0x8EA188", Offset = "0x8EA188", VA = "0x8EA188")]
		[DebuggerHidden]
		public <wheelCollision>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x6000363")]
		[Address(RVA = "0x8EA1B8", Offset = "0x8EA1B8", VA = "0x8EA1B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000364")]
		[Address(RVA = "0x8EA1BC", Offset = "0x8EA1BC", VA = "0x8EA1BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000366")]
		[Address(RVA = "0x8EA2B0", Offset = "0x8EA2B0", VA = "0x8EA2B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000392")]
	private const float POLICE_CAR_CRASH_FIRE_DELAY = 2f;

	[Token(Token = "0x4000393")]
	private const float SWAT_WHEEL_IMPACT_FORCE = 100f;

	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ThiefPoliceController swat;

	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Rigidbody swatHead;

	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource[] audios;

	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject wheel;

	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject policeCarCrashSmoke;

	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject policeCarCrashFire;

	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject policeCarCrashModel;

	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ParticleSystem policeCarExplosion;

	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public ParticleSystem policeCarTruckExplosion;

	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ParticleSystem craneFX;

	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public SceneData sceneData;

	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject animationModelReplacement;

	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject oldModel;

	[Token(Token = "0x6000355")]
	[Address(RVA = "0x8E9CF8", Offset = "0x8E9CF8", VA = "0x8E9CF8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000356")]
	[Address(RVA = "0x8E9DC4", Offset = "0x8E9DC4", VA = "0x8E9DC4")]
	private void replaceAnimation(int sceneId)
	{
	}

	[Token(Token = "0x6000357")]
	[Address(RVA = "0x8E9E4C", Offset = "0x8E9E4C", VA = "0x8E9E4C")]
	public void OnAnimationPlay()
	{
	}

	[Token(Token = "0x6000358")]
	[Address(RVA = "0x8E9EAC", Offset = "0x8E9EAC", VA = "0x8E9EAC")]
	public void OnThrowedWheel()
	{
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0x8E9F68", Offset = "0x8E9F68", VA = "0x8E9F68")]
	public void ThrowedWheelAudio()
	{
	}

	[Token(Token = "0x600035A")]
	[Address(RVA = "0x8E9FD8", Offset = "0x8E9FD8", VA = "0x8E9FD8")]
	public void OnPoliceCarAndTruckCrash()
	{
	}

	[Token(Token = "0x600035B")]
	[Address(RVA = "0x8EA018", Offset = "0x8EA018", VA = "0x8EA018")]
	public void OnPoliceCarAndCraneCrash()
	{
	}

	[Token(Token = "0x600035C")]
	[Address(RVA = "0x8EA0D8", Offset = "0x8EA0D8", VA = "0x8EA0D8")]
	public void OnPoliceCarCrash()
	{
	}

	[Token(Token = "0x600035D")]
	[Address(RVA = "0x8EA0B8", Offset = "0x8EA0B8", VA = "0x8EA0B8")]
	private void showPoliceCarCrashSmoke()
	{
	}

	[Token(Token = "0x600035E")]
	[Address(RVA = "0x8EA128", Offset = "0x8EA128", VA = "0x8EA128")]
	private void showPoliceCarCrashFire()
	{
	}

	[Token(Token = "0x600035F")]
	[Address(RVA = "0x8EA148", Offset = "0x8EA148", VA = "0x8EA148")]
	public void OnCraneCrash()
	{
	}

	[Token(Token = "0x6000360")]
	[Address(RVA = "0x8E9F00", Offset = "0x8E9F00", VA = "0x8E9F00")]
	[IteratorStateMachine(typeof(<wheelCollision>d__26))]
	private IEnumerator wheelCollision()
	{
		return null;
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0x8EA1B0", Offset = "0x8EA1B0", VA = "0x8EA1B0")]
	public HarborAnimationEvents()
	{
	}
}
[Token(Token = "0x20000BB")]
public class HarborCrash : SceneAction
{
	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ThiefPoliceController[] charactersToDeadBeforeAnimation;

	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ThiefPoliceController[] charactersAfterAnimation;

	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Animation anim;

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int deadsCount;

	[Token(Token = "0x6000368")]
	[Address(RVA = "0x8EA2F8", Offset = "0x8EA2F8", VA = "0x8EA2F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000369")]
	[Address(RVA = "0x8EA304", Offset = "0x8EA304", VA = "0x8EA304", Slot = "4")]
	public override void executeAction()
	{
	}

	[Token(Token = "0x600036A")]
	[Address(RVA = "0x8EA3F0", Offset = "0x8EA3F0", VA = "0x8EA3F0")]
	private void OnDeadCharacter()
	{
	}

	[Token(Token = "0x600036B")]
	[Address(RVA = "0x8EA4C8", Offset = "0x8EA4C8", VA = "0x8EA4C8")]
	public HarborCrash()
	{
	}
}
[Token(Token = "0x20000BC")]
public class HelicopterRotorKiller : MonoBehaviour
{
	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool playerKilled;

	[Token(Token = "0x600036C")]
	[Address(RVA = "0x8EA4D0", Offset = "0x8EA4D0", VA = "0x8EA4D0")]
	public void throwToPlayer(Vector3 playerPosition)
	{
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0x8EA820", Offset = "0x8EA820", VA = "0x8EA820")]
	private void missionAccomplished()
	{
	}

	[Token(Token = "0x600036E")]
	[Address(RVA = "0x8EA938", Offset = "0x8EA938", VA = "0x8EA938")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x600036F")]
	[Address(RVA = "0x8EAA60", Offset = "0x8EAA60", VA = "0x8EAA60")]
	private void detectCollisions()
	{
	}

	[Token(Token = "0x6000370")]
	[Address(RVA = "0x8EAABC", Offset = "0x8EAABC", VA = "0x8EAABC")]
	public HelicopterRotorKiller()
	{
	}
}
[Token(Token = "0x20000BD")]
public class Helper : MonoBehaviour
{
	[Token(Token = "0x20000BE")]
	public enum HelperState
	{
		[Token(Token = "0x40003B0")]
		GrabWeapon,
		[Token(Token = "0x40003B1")]
		DropMagazine,
		[Token(Token = "0x40003B2")]
		GrabMagazine,
		[Token(Token = "0x40003B3")]
		InsertMagazine,
		[Token(Token = "0x40003B4")]
		CockWeapon,
		[Token(Token = "0x40003B5")]
		Shot
	}

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool enableInstructions;

	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Weapon weapon;

	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform screens;

	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public HelperState helperState;

	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool initialised;

	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	private bool twoHandsActive;

	[Token(Token = "0x6000371")]
	[Address(RVA = "0x8EAAC4", Offset = "0x8EAAC4", VA = "0x8EAAC4")]
	public void init()
	{
	}

	[Token(Token = "0x6000372")]
	[Address(RVA = "0x8EAF10", Offset = "0x8EAF10", VA = "0x8EAF10")]
	private bool checkHandsActive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0x8EAFB4", Offset = "0x8EAFB4", VA = "0x8EAFB4")]
	private void _showHelper(bool enable)
	{
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0x8EB214", Offset = "0x8EB214", VA = "0x8EB214")]
	private void showHelper(bool enable)
	{
	}

	[Token(Token = "0x6000375")]
	[Address(RVA = "0x8EAC58", Offset = "0x8EAC58", VA = "0x8EAC58")]
	private void setHelperState(HelperState helperState)
	{
	}

	[Token(Token = "0x6000376")]
	[Address(RVA = "0x8EB134", Offset = "0x8EB134", VA = "0x8EB134")]
	private void setHandHelperState(NVRHand hand, ButtonsHelper.ButtonState buttonState)
	{
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0x8EB22C", Offset = "0x8EB22C", VA = "0x8EB22C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000378")]
	[Address(RVA = "0x8EB620", Offset = "0x8EB620", VA = "0x8EB620")]
	public Helper()
	{
	}
}
[Token(Token = "0x20000BF")]
public class HitTargetRigidbody : HitTarget
{
	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float m_bulletForceFactor;

	[Token(Token = "0x600037A")]
	[Address(RVA = "0x8EB67C", Offset = "0x8EB67C", VA = "0x8EB67C")]
	private void Start()
	{
	}

	[Token(Token = "0x600037B")]
	[Address(RVA = "0x8EB680", Offset = "0x8EB680", VA = "0x8EB680")]
	private void Update()
	{
	}

	[Token(Token = "0x600037C")]
	[Address(RVA = "0x8EB684", Offset = "0x8EB684", VA = "0x8EB684", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x600037D")]
	[Address(RVA = "0x8EB898", Offset = "0x8EB898", VA = "0x8EB898")]
	public HitTargetRigidbody()
	{
	}
}
[Token(Token = "0x20000C0")]
public class HostageController : CommonCharacterController
{
	[Token(Token = "0x600037E")]
	[Address(RVA = "0x8EB8A8", Offset = "0x8EB8A8", VA = "0x8EB8A8", Slot = "8")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600037F")]
	[Address(RVA = "0x8EB8B0", Offset = "0x8EB8B0", VA = "0x8EB8B0", Slot = "9")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000380")]
	[Address(RVA = "0x8EB998", Offset = "0x8EB998", VA = "0x8EB998", Slot = "12")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit, Collider c, bool bRemote = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6000381")]
	[Address(RVA = "0x8EBC08", Offset = "0x8EBC08", VA = "0x8EBC08")]
	public HostageController()
	{
	}
}
[Token(Token = "0x20000C1")]
public class InGameMessage : MonoBehaviour
{
	[Token(Token = "0x20000C2")]
	public enum MessageType
	{
		[Token(Token = "0x40003BC")]
		Message_TeammateDisconnected
	}

	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UIButton button;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject messageObj;

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshPro textMesh;

	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool showMessage;

	[Token(Token = "0x6000382")]
	[Address(RVA = "0x8EBC60", Offset = "0x8EBC60", VA = "0x8EBC60")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000383")]
	[Address(RVA = "0x8EBDE4", Offset = "0x8EBDE4", VA = "0x8EBDE4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0x8EBE9C", Offset = "0x8EBE9C", VA = "0x8EBE9C")]
	public void ShowMessage(MessageType messageType)
	{
	}

	[Token(Token = "0x6000385")]
	[Address(RVA = "0x8EC0AC", Offset = "0x8EC0AC", VA = "0x8EC0AC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000386")]
	[Address(RVA = "0x8EC228", Offset = "0x8EC228", VA = "0x8EC228")]
	private void OnTeammateDisconnected()
	{
	}

	[Token(Token = "0x6000387")]
	[Address(RVA = "0x8EC2C8", Offset = "0x8EC2C8", VA = "0x8EC2C8")]
	private void OnButtonPressed(UIButton button)
	{
	}

	[Token(Token = "0x6000388")]
	[Address(RVA = "0x8EC2F0", Offset = "0x8EC2F0", VA = "0x8EC2F0")]
	public InGameMessage()
	{
	}
}
[Token(Token = "0x20000C3")]
public interface IKeyboardPointable
{
	[Token(Token = "0x6000389")]
	void OnHoverAnimation(bool isHover);
}
[Token(Token = "0x20000C4")]
public class KeyboardPointer : MonoBehaviour
{
	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static SumalabEvent OnLaserPointerEvent;

	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool laserEnabled;

	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
	private static bool laserEquipped;

	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject holder;

	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject pointer;

	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 axis;

	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float thickness;

	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float maxDistance;

	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private IKeyboardPointable previousContact;

	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RaycastHit hit;

	[Token(Token = "0x600038A")]
	[Address(RVA = "0x8EC2F8", Offset = "0x8EC2F8", VA = "0x8EC2F8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600038B")]
	[Address(RVA = "0x8EC45C", Offset = "0x8EC45C", VA = "0x8EC45C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600038C")]
	[Address(RVA = "0x8EC3EC", Offset = "0x8EC3EC", VA = "0x8EC3EC")]
	private void OnLaserPointerStateChanged()
	{
	}

	[Token(Token = "0x600038D")]
	[Address(RVA = "0x8EC514", Offset = "0x8EC514", VA = "0x8EC514")]
	private void Update()
	{
	}

	[Token(Token = "0x600038E")]
	[Address(RVA = "0x8E81CC", Offset = "0x8E81CC", VA = "0x8E81CC")]
	public static void SetLaserPointer(bool enable)
	{
	}

	[Token(Token = "0x600038F")]
	[Address(RVA = "0x8EC910", Offset = "0x8EC910", VA = "0x8EC910")]
	public static void SetLaserPointerEquipped(bool enable)
	{
	}

	[Token(Token = "0x6000390")]
	[Address(RVA = "0x8EC96C", Offset = "0x8EC96C", VA = "0x8EC96C")]
	public static bool GetLaserPointerEquipped()
	{
		return default(bool);
	}

	[Token(Token = "0x6000391")]
	[Address(RVA = "0x8EC9C4", Offset = "0x8EC9C4", VA = "0x8EC9C4")]
	public static bool GetLaserPointer()
	{
		return default(bool);
	}

	[Token(Token = "0x6000392")]
	[Address(RVA = "0x8ECA1C", Offset = "0x8ECA1C", VA = "0x8ECA1C")]
	public KeyboardPointer()
	{
	}
}
[Token(Token = "0x20000C5")]
public class Line : VolumetricLineBehavior
{
	[Token(Token = "0x6000394")]
	[Address(RVA = "0x8ECAB0", Offset = "0x8ECAB0", VA = "0x8ECAB0")]
	public void drawLine(Vector3 initPoint, Vector3 endPoint)
	{
	}

	[Token(Token = "0x6000395")]
	[Address(RVA = "0x8ECC0C", Offset = "0x8ECC0C", VA = "0x8ECC0C")]
	public void showLine()
	{
	}

	[Token(Token = "0x6000396")]
	[Address(RVA = "0x8ECC98", Offset = "0x8ECC98", VA = "0x8ECC98")]
	public void hideLine(float delay = 0f)
	{
	}

	[Token(Token = "0x6000397")]
	[Address(RVA = "0x8ECDB4", Offset = "0x8ECDB4", VA = "0x8ECDB4")]
	public void invokeHideLine()
	{
	}

	[Token(Token = "0x6000398")]
	[Address(RVA = "0x8ECE40", Offset = "0x8ECE40", VA = "0x8ECE40")]
	public Line()
	{
	}
}
[Token(Token = "0x20000C6")]
public class LoadSaveData : MonoBehaviour
{
	[Token(Token = "0x20000C7")]
	public enum LoadSaveResult
	{
		[Token(Token = "0x40003D2")]
		Ok,
		[Token(Token = "0x40003D3")]
		CorruptFile,
		[Token(Token = "0x40003D4")]
		GenericError,
		[Token(Token = "0x40003D5")]
		NoData,
		[Token(Token = "0x40003D6")]
		TimeOut
	}

	[Token(Token = "0x20000C8")]
	[CompilerGenerated]
	private sealed class <loadData>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LoadSaveData <>4__this;

		[Token(Token = "0x17000030")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003AB")]
			[Address(RVA = "0x8EDD8C", Offset = "0x8EDD8C", VA = "0x8EDD8C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000031")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003AD")]
			[Address(RVA = "0x8EDDD4", Offset = "0x8EDDD4", VA = "0x8EDDD4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003A8")]
		[Address(RVA = "0x8ED490", Offset = "0x8ED490", VA = "0x8ED490")]
		[DebuggerHidden]
		public <loadData>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x60003A9")]
		[Address(RVA = "0x8ED928", Offset = "0x8ED928", VA = "0x8ED928", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003AA")]
		[Address(RVA = "0x8ED92C", Offset = "0x8ED92C", VA = "0x8ED92C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003AC")]
		[Address(RVA = "0x8EDD94", Offset = "0x8EDD94", VA = "0x8EDD94", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003C7")]
	private const float WAIT_TIME = 2f;

	[Token(Token = "0x40003C8")]
	private const string SLASH = "/";

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static LoadSaveData Instance;

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject game;

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SerializableGlobalData globalData;

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SerializableSettings settingsData;

	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private UnityAction<SerializableGlobalData> OnLoadGlobalDataAction;

	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private UnityAction<SerializableSettings> OnLoadSettingsAction;

	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool globalDataInit;

	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
	private static bool settingsDataInit;

	[Token(Token = "0x6000399")]
	[Address(RVA = "0x8ECE48", Offset = "0x8ECE48", VA = "0x8ECE48")]
	private void Start()
	{
	}

	[Token(Token = "0x600039A")]
	[Address(RVA = "0x8ED2C0", Offset = "0x8ED2C0", VA = "0x8ED2C0")]
	private void OnLoadGameData(SerializableGlobalData data)
	{
	}

	[Token(Token = "0x600039B")]
	[Address(RVA = "0x8ED3A8", Offset = "0x8ED3A8", VA = "0x8ED3A8")]
	private void OnLoadSettings(SerializableSettings data)
	{
	}

	[Token(Token = "0x600039C")]
	[Address(RVA = "0x8ECFA0", Offset = "0x8ECFA0", VA = "0x8ECFA0")]
	[IteratorStateMachine(typeof(<loadData>d__14))]
	private IEnumerator loadData()
	{
		return null;
	}

	[Token(Token = "0x600039D")]
	[Address(RVA = "0x8ED008", Offset = "0x8ED008", VA = "0x8ED008")]
	private void startGame()
	{
	}

	[Token(Token = "0x600039E")]
	[Address(RVA = "0x8ED630", Offset = "0x8ED630", VA = "0x8ED630")]
	private int GetSystemLanguage()
	{
		return default(int);
	}

	[Token(Token = "0x600039F")]
	[Address(RVA = "0x8E7BC4", Offset = "0x8E7BC4", VA = "0x8E7BC4")]
	public void SaveScores()
	{
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0x8ED744", Offset = "0x8ED744", VA = "0x8ED744")]
	public void SaveSettings()
	{
	}

	[Token(Token = "0x60003A1")]
	public static void LoadFile<T>(string fileName, Action<LoadSaveResult, T> onLoadComplete)
	{
	}

	[Token(Token = "0x60003A2")]
	public static void SaveFile<T>(string fileName, T data, Action<LoadSaveResult> onSaveComplete)
	{
	}

	[Token(Token = "0x60003A3")]
	public static void SavePrefs<T>(string pref, T data)
	{
	}

	[Token(Token = "0x60003A4")]
	public static T LoadPrefs<T>(string pref)
	{
		return (T)null;
	}

	[Token(Token = "0x60003A5")]
	[Address(RVA = "0x8ED910", Offset = "0x8ED910", VA = "0x8ED910")]
	public LoadSaveData()
	{
	}
}
[Serializable]
[Token(Token = "0x20000C9")]
public class SerializableScoreData
{
	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string username;

	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string date;

	[Token(Token = "0x40003DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int score;

	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int gameLevel;

	[Token(Token = "0x60003AE")]
	[Address(RVA = "0x8E7BBC", Offset = "0x8E7BBC", VA = "0x8E7BBC")]
	public SerializableScoreData()
	{
	}
}
[Serializable]
[Token(Token = "0x20000CA")]
public class SerializableGlobalData
{
	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float CURRENT_DATA_VERSION;

	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float version;

	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int totalHeadshots;

	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int totalGameplays;

	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int bestScoreGallery;

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool bankMissionAccomplished;

	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool portMissionAccomplished;

	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool officeMissionAccomplished;

	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<SerializableScoreData> scoresData;

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<SerializableScoreData> scoresPort;

	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<SerializableScoreData> scoresOffice;

	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	internal string userName;

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0x8EDDDC", Offset = "0x8EDDDC", VA = "0x8EDDDC")]
	[OnDeserializing]
	internal void OnDeserializingMethod(StreamingContext context)
	{
	}

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0x8ED4B8", Offset = "0x8ED4B8", VA = "0x8ED4B8")]
	public SerializableGlobalData()
	{
	}
}
[Serializable]
[Token(Token = "0x20000CB")]
public class SerializableSettings
{
	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float CURRENT_SETTINGS_VERSION;

	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float version;

	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float playerHeight;

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int reloadMode;

	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int language;

	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int buttonConfig;

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string onlineNickName;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string onlineDefaultJoinGamePassword;

	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool walkieTalkieEnabled;

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0x8EDEE4", Offset = "0x8EDEE4", VA = "0x8EDEE4")]
	[OnDeserializing]
	internal void OnDeserializingMethod(StreamingContext context)
	{
	}

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0x8EDF74", Offset = "0x8EDF74", VA = "0x8EDF74")]
	[OnDeserialized]
	internal void OnDeserializedMethod(StreamingContext context)
	{
	}

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0x8ED580", Offset = "0x8ED580", VA = "0x8ED580")]
	public SerializableSettings()
	{
	}
}
[Serializable]
[Token(Token = "0x20000CC")]
public class LocalizationData
{
	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public LocalizationItem[] items;

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0x8EE050", Offset = "0x8EE050", VA = "0x8EE050")]
	public LocalizationData()
	{
	}
}
[Serializable]
[Token(Token = "0x20000CD")]
public class LocalizationItem
{
	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string key;

	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string value;

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0x8EE058", Offset = "0x8EE058", VA = "0x8EE058")]
	public LocalizationItem()
	{
	}
}
[Serializable]
[Token(Token = "0x20000CE")]
public class LocalizationDataLegacy
{
	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public LocalizationItemLegacy[] localization;

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0x8EE060", Offset = "0x8EE060", VA = "0x8EE060")]
	public LocalizationDataLegacy()
	{
	}
}
[Serializable]
[Token(Token = "0x20000CF")]
public class LocalizationItemLegacy
{
	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string StringIdentifier;

	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string English;

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string Chinese;

	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string Japanese;

	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string Korean;

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0x8EE068", Offset = "0x8EE068", VA = "0x8EE068")]
	public LocalizationItemLegacy()
	{
	}
}
[Token(Token = "0x20000D0")]
public class LocalizationManager : MonoBehaviour
{
	[Token(Token = "0x20000D1")]
	public delegate void LocalizationEventHandler();

	[Token(Token = "0x20000D2")]
	public enum Language
	{
		[Token(Token = "0x4000405")]
		en = 1,
		[Token(Token = "0x4000406")]
		es,
		[Token(Token = "0x4000407")]
		cn,
		[Token(Token = "0x4000408")]
		jp,
		[Token(Token = "0x4000409")]
		kr
	}

	[Token(Token = "0x40003FC")]
	private const string LOCALIZATION_PATH = "Localization/";

	[Token(Token = "0x40003FD")]
	private const string LOCALIZATION_FILE_PATTERN = "localization_";

	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static LocalizationManager Instance;

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Language language;

	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<string, string> localizedText;

	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isReady;

	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string missingTextString;

	[Token(Token = "0x14000001")]
	public event LocalizationEventHandler OnLocalizationChanged
	{
		[Token(Token = "0x60003BA")]
		[Address(RVA = "0x8EE070", Offset = "0x8EE070", VA = "0x8EE070")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60003BB")]
		[Address(RVA = "0x8EE10C", Offset = "0x8EE10C", VA = "0x8EE10C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0x8EE1A8", Offset = "0x8EE1A8", VA = "0x8EE1A8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003BD")]
	[Address(RVA = "0x8EE2C8", Offset = "0x8EE2C8", VA = "0x8EE2C8")]
	private void LoadLocalizedText(string fileName)
	{
	}

	[Token(Token = "0x60003BE")]
	[Address(RVA = "0x8ED69C", Offset = "0x8ED69C", VA = "0x8ED69C")]
	public void SetLocalization(Language language)
	{
	}

	[Token(Token = "0x60003BF")]
	[Address(RVA = "0x8EBF88", Offset = "0x8EBF88", VA = "0x8EBF88")]
	public string GetLocalizedValue(string key)
	{
		return null;
	}

	[Token(Token = "0x60003C0")]
	[Address(RVA = "0x8EE59C", Offset = "0x8EE59C", VA = "0x8EE59C")]
	public bool GetIsReady()
	{
		return default(bool);
	}

	[Token(Token = "0x60003C1")]
	[Address(RVA = "0x8EE5A4", Offset = "0x8EE5A4", VA = "0x8EE5A4")]
	public LocalizationManager()
	{
	}
}
[Token(Token = "0x20000D3")]
public class LocalizedText : MonoBehaviour
{
	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string key;

	[Token(Token = "0x400040B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int layer;

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0x8EE6F8", Offset = "0x8EE6F8", VA = "0x8EE6F8")]
	private void Start()
	{
	}

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0x8EEAFC", Offset = "0x8EEAFC", VA = "0x8EEAFC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60003C8")]
	[Address(RVA = "0x8EE8D8", Offset = "0x8EE8D8", VA = "0x8EE8D8")]
	private void OnLocalizationChanged()
	{
	}

	[Token(Token = "0x60003C9")]
	[Address(RVA = "0x8EEBA4", Offset = "0x8EEBA4", VA = "0x8EEBA4")]
	public void UpdateText()
	{
	}

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0x8EEBA8", Offset = "0x8EEBA8", VA = "0x8EEBA8")]
	public LocalizedText()
	{
	}
}
[Token(Token = "0x20000D4")]
public class MaskHeadshot : MonoBehaviour
{
	[Token(Token = "0x60003CB")]
	[Address(RVA = "0x8EEBB8", Offset = "0x8EEBB8", VA = "0x8EEBB8")]
	private void Start()
	{
	}

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0x8EEC14", Offset = "0x8EEC14", VA = "0x8EEC14")]
	public void activate(RaycastHit hit, Ray ray)
	{
	}

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0x8EEDD0", Offset = "0x8EEDD0", VA = "0x8EEDD0")]
	public MaskHeadshot()
	{
	}
}
[Token(Token = "0x20000D5")]
public class MipMapTest : MonoBehaviour
{
	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture[] textures;

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0x8EEDD8", Offset = "0x8EEDD8", VA = "0x8EEDD8")]
	private void Start()
	{
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0x8EEE48", Offset = "0x8EEE48", VA = "0x8EEE48")]
	public MipMapTest()
	{
	}
}
[Token(Token = "0x20000D6")]
public class Newspaper : MonoBehaviour
{
	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform newspaperTransform;

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0x8EEE50", Offset = "0x8EEE50", VA = "0x8EEE50")]
	public void Show()
	{
	}

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0x8EF3B4", Offset = "0x8EF3B4", VA = "0x8EF3B4")]
	public void Hide()
	{
	}

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0x8EF3FC", Offset = "0x8EF3FC", VA = "0x8EF3FC")]
	public Newspaper()
	{
	}
}
[Token(Token = "0x20000D7")]
public class NoInterlude : MonoBehaviour
{
	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] objectsToHide;

	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int sceneId;

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0x8EF404", Offset = "0x8EF404", VA = "0x8EF404")]
	public void Hide(int currentSceneId)
	{
	}

	[Token(Token = "0x60003D4")]
	[Address(RVA = "0x8EF474", Offset = "0x8EF474", VA = "0x8EF474")]
	public NoInterlude()
	{
	}
}
[Token(Token = "0x20000D8")]
[ExecuteInEditMode]
public class AudioSourceEditor : MonoBehaviour
{
	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool play;

	[Token(Token = "0x60003D5")]
	[Address(RVA = "0x8EF47C", Offset = "0x8EF47C", VA = "0x8EF47C")]
	private void Update()
	{
	}

	[Token(Token = "0x60003D6")]
	[Address(RVA = "0x8EF4EC", Offset = "0x8EF4EC", VA = "0x8EF4EC")]
	public AudioSourceEditor()
	{
	}
}
[Token(Token = "0x20000D9")]
public class BrokenGlass : HitTarget
{
	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UnityEvent OnGlassBroken;

	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool onlyPlayer;

	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject glassIntact;

	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject glassBroken;

	[Token(Token = "0x60003D7")]
	[Address(RVA = "0x8EF4F4", Offset = "0x8EF4F4", VA = "0x8EF4F4", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x60003D8")]
	[Address(RVA = "0x8EF5FC", Offset = "0x8EF5FC", VA = "0x8EF5FC")]
	public void breakGlass()
	{
	}

	[Token(Token = "0x60003D9")]
	[Address(RVA = "0x8EF69C", Offset = "0x8EF69C", VA = "0x8EF69C")]
	public BrokenGlass()
	{
	}
}
[Token(Token = "0x20000DA")]
public class ColumnBrokenGroup : HitTarget
{
	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject brokenTile;

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject brokenGroup;

	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject tile;

	[Token(Token = "0x4000418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool disable;

	[Token(Token = "0x4000419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	public bool android_enabled;

	[Token(Token = "0x60003DA")]
	[Address(RVA = "0x8EF704", Offset = "0x8EF704", VA = "0x8EF704", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x60003DB")]
	[Address(RVA = "0x8EF8B0", Offset = "0x8EF8B0", VA = "0x8EF8B0")]
	private void disableGroup()
	{
	}

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0x8EF8DC", Offset = "0x8EF8DC", VA = "0x8EF8DC")]
	public ColumnBrokenGroup()
	{
	}
}
[Token(Token = "0x20000DB")]
public class Elevator : MonoBehaviour
{
	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip openDoorsClip;

	[Token(Token = "0x400041B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource audioSource;

	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform door1;

	[Token(Token = "0x400041D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform door2;

	[Token(Token = "0x400041E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform door3;

	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform door4;

	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform door1_openPosition;

	[Token(Token = "0x4000421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform door2_openPosition;

	[Token(Token = "0x4000422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform door3_openPosition;

	[Token(Token = "0x4000423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform door4_openPosition;

	[Token(Token = "0x4000424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 door1_closePosition;

	[Token(Token = "0x4000425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Vector3 door2_closePosition;

	[Token(Token = "0x4000426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 door3_closePosition;

	[Token(Token = "0x4000427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Vector3 door4_closePosition;

	[Token(Token = "0x4000428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private TextMeshPro floorText;

	[Token(Token = "0x4000429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public bool doorsOpen;

	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float speed;

	[Token(Token = "0x60003DD")]
	[Address(RVA = "0x8EF8E4", Offset = "0x8EF8E4", VA = "0x8EF8E4")]
	private void Start()
	{
	}

	[Token(Token = "0x60003DE")]
	[Address(RVA = "0x8EF9C8", Offset = "0x8EF9C8", VA = "0x8EF9C8")]
	public void openDoors(bool animate = true)
	{
	}

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0x8EFB8C", Offset = "0x8EFB8C", VA = "0x8EFB8C")]
	public void closeDoors(bool animate = true)
	{
	}

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0x8EFD14", Offset = "0x8EFD14", VA = "0x8EFD14")]
	public void setFloor(int floor)
	{
	}

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0x8EFD5C", Offset = "0x8EFD5C", VA = "0x8EFD5C")]
	public Elevator()
	{
	}
}
[Token(Token = "0x20000DC")]
public class ElevatorScene : NextSceneData
{
	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Elevator elevator;

	[Token(Token = "0x60003E2")]
	[Address(RVA = "0x8EFD70", Offset = "0x8EFD70", VA = "0x8EFD70", Slot = "4")]
	protected override void OnFirstFade()
	{
	}

	[Token(Token = "0x60003E3")]
	[Address(RVA = "0x8EFD8C", Offset = "0x8EFD8C", VA = "0x8EFD8C", Slot = "6")]
	protected override void OnComplete()
	{
	}

	[Token(Token = "0x60003E4")]
	[Address(RVA = "0x8EFDCC", Offset = "0x8EFDCC", VA = "0x8EFDCC")]
	public ElevatorScene()
	{
	}
}
[Token(Token = "0x20000DD")]
public class EnemyWaves : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20000DE")]
	public class Wave
	{
		[Token(Token = "0x4000433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PoliceThiefData[] enemies;

		[Token(Token = "0x60003EB")]
		[Address(RVA = "0x8F064C", Offset = "0x8F064C", VA = "0x8F064C")]
		public Wave()
		{
		}
	}

	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Wave[] waves;

	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float startDelay;

	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float wavesDelay;

	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SceneData sceneData;

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int currentWave;

	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int enemyDeads;

	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int currentEnemy;

	[Token(Token = "0x60003E5")]
	[Address(RVA = "0x8EFDD4", Offset = "0x8EFDD4", VA = "0x8EFDD4")]
	public string getCurrentEnemyName(GameObject enemy)
	{
		return null;
	}

	[Token(Token = "0x60003E6")]
	[Address(RVA = "0x8EFFD0", Offset = "0x8EFFD0", VA = "0x8EFFD0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003E7")]
	[Address(RVA = "0x8F00CC", Offset = "0x8F00CC", VA = "0x8F00CC")]
	private void OnSceneInitialised(int sceneId)
	{
	}

	[Token(Token = "0x60003E8")]
	[Address(RVA = "0x8F0144", Offset = "0x8F0144", VA = "0x8F0144")]
	private void StartWaves()
	{
	}

	[Token(Token = "0x60003E9")]
	[Address(RVA = "0x8F0570", Offset = "0x8F0570", VA = "0x8F0570")]
	private void OnEnemyDead()
	{
	}

	[Token(Token = "0x60003EA")]
	[Address(RVA = "0x8F0644", Offset = "0x8F0644", VA = "0x8F0644")]
	public EnemyWaves()
	{
	}
}
[Token(Token = "0x20000DF")]
public class Extinguisher : HitTarget
{
	[Token(Token = "0x4000434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject model;

	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject fx;

	[Token(Token = "0x60003EC")]
	[Address(RVA = "0x8F0654", Offset = "0x8F0654", VA = "0x8F0654", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x60003ED")]
	[Address(RVA = "0x8F071C", Offset = "0x8F071C", VA = "0x8F071C")]
	public Extinguisher()
	{
	}
}
[Token(Token = "0x20000E0")]
public class Office_Bomb : HitTarget
{
	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Office_Bombs bombsController;

	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool exploded;

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0x8F0724", Offset = "0x8F0724", VA = "0x8F0724", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0x8F07E0", Offset = "0x8F07E0", VA = "0x8F07E0")]
	public void explode()
	{
	}

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0x8F090C", Offset = "0x8F090C", VA = "0x8F090C")]
	public Office_Bomb()
	{
	}
}
[Token(Token = "0x20000E1")]
public class Office_Bombs : MonoBehaviour
{
	[Token(Token = "0x20000E2")]
	[CompilerGenerated]
	private sealed class <explodeBombsCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400043B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400043C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400043D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool gameOver;

		[Token(Token = "0x400043E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Office_Bombs <>4__this;

		[Token(Token = "0x400043F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Office_Bomb[] <>7__wrap1;

		[Token(Token = "0x4000440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <>7__wrap2;

		[Token(Token = "0x17000032")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003F9")]
			[Address(RVA = "0x8F0D6C", Offset = "0x8F0D6C", VA = "0x8F0D6C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000033")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003FB")]
			[Address(RVA = "0x8F0DB4", Offset = "0x8F0DB4", VA = "0x8F0DB4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003F6")]
		[Address(RVA = "0x8F0A8C", Offset = "0x8F0A8C", VA = "0x8F0A8C")]
		[DebuggerHidden]
		public <explodeBombsCoroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60003F7")]
		[Address(RVA = "0x8F0ABC", Offset = "0x8F0ABC", VA = "0x8F0ABC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003F8")]
		[Address(RVA = "0x8F0AC0", Offset = "0x8F0AC0", VA = "0x8F0AC0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003FA")]
		[Address(RVA = "0x8F0D74", Offset = "0x8F0D74", VA = "0x8F0D74", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform parentCharacters;

	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform bombsParent;

	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Office_Room room;

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0x8F0914", Offset = "0x8F0914", VA = "0x8F0914")]
	private void Start()
	{
	}

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0x8F0918", Offset = "0x8F0918", VA = "0x8F0918")]
	public void explodePresident()
	{
	}

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0x8F08E8", Offset = "0x8F08E8", VA = "0x8F08E8")]
	public void explodeBombs(bool gameOver)
	{
	}

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0x8F0A10", Offset = "0x8F0A10", VA = "0x8F0A10")]
	[IteratorStateMachine(typeof(<explodeBombsCoroutine>d__6))]
	private IEnumerator explodeBombsCoroutine(bool gameOver)
	{
		return null;
	}

	[Token(Token = "0x60003F5")]
	[Address(RVA = "0x8F0AB4", Offset = "0x8F0AB4", VA = "0x8F0AB4")]
	public Office_Bombs()
	{
	}
}
[Token(Token = "0x20000E3")]
public class Office_BulletTimeNextScene : NextSceneData
{
	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Animation helicopter;

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0x8F0DBC", Offset = "0x8F0DBC", VA = "0x8F0DBC", Slot = "4")]
	protected override void OnFirstFade()
	{
	}

	[Token(Token = "0x60003FD")]
	[Address(RVA = "0x8F0EE8", Offset = "0x8F0EE8", VA = "0x8F0EE8", Slot = "5")]
	protected override float getFadeTime(int fadeIndex)
	{
		return default(float);
	}

	[Token(Token = "0x60003FE")]
	[Address(RVA = "0x8F0F00", Offset = "0x8F0F00", VA = "0x8F0F00", Slot = "6")]
	protected override void OnComplete()
	{
	}

	[Token(Token = "0x60003FF")]
	[Address(RVA = "0x8F0F50", Offset = "0x8F0F50", VA = "0x8F0F50")]
	public Office_BulletTimeNextScene()
	{
	}
}
[Token(Token = "0x20000E4")]
public class Office_BulletTimeSceneAction : SceneAction
{
	[Token(Token = "0x20000E5")]
	[CompilerGenerated]
	private sealed class <FinishCoroutine>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Office_BulletTimeSceneAction <>4__this;

		[Token(Token = "0x17000034")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600040B")]
			[Address(RVA = "0x8F1A60", Offset = "0x8F1A60", VA = "0x8F1A60", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000035")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600040D")]
			[Address(RVA = "0x8F1AA8", Offset = "0x8F1AA8", VA = "0x8F1AA8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000408")]
		[Address(RVA = "0x8F17C8", Offset = "0x8F17C8", VA = "0x8F17C8")]
		[DebuggerHidden]
		public <FinishCoroutine>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6000409")]
		[Address(RVA = "0x8F17F8", Offset = "0x8F17F8", VA = "0x8F17F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600040A")]
		[Address(RVA = "0x8F17FC", Offset = "0x8F17FC", VA = "0x8F17FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600040C")]
		[Address(RVA = "0x8F1A68", Offset = "0x8F1A68", VA = "0x8F1A68", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ThiefPoliceController smith;

	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Animation helicopter;

	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool bulletTime;

	[Token(Token = "0x6000400")]
	[Address(RVA = "0x8F0F58", Offset = "0x8F0F58", VA = "0x8F0F58")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000401")]
	[Address(RVA = "0x8F10C0", Offset = "0x8F10C0", VA = "0x8F10C0", Slot = "4")]
	public override void executeAction()
	{
	}

	[Token(Token = "0x6000402")]
	[Address(RVA = "0x8F12D8", Offset = "0x8F12D8", VA = "0x8F12D8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000403")]
	[Address(RVA = "0x8F13D4", Offset = "0x8F13D4", VA = "0x8F13D4")]
	private void BulletTime()
	{
	}

	[Token(Token = "0x6000404")]
	[Address(RVA = "0x8F1724", Offset = "0x8F1724", VA = "0x8F1724")]
	private void startnext()
	{
	}

	[Token(Token = "0x6000405")]
	[Address(RVA = "0x8F1740", Offset = "0x8F1740", VA = "0x8F1740")]
	private void Finish()
	{
	}

	[Token(Token = "0x6000406")]
	[Address(RVA = "0x8F1760", Offset = "0x8F1760", VA = "0x8F1760")]
	[IteratorStateMachine(typeof(<FinishCoroutine>d__9))]
	private IEnumerator FinishCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000407")]
	[Address(RVA = "0x8F17F0", Offset = "0x8F17F0", VA = "0x8F17F0")]
	public Office_BulletTimeSceneAction()
	{
	}
}
[Token(Token = "0x20000E6")]
[ExecuteInEditMode]
public class Office_Chair : HitTarget
{
	[Token(Token = "0x4000448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool right;

	[Token(Token = "0x600040E")]
	[Address(RVA = "0x8F1AB0", Offset = "0x8F1AB0", VA = "0x8F1AB0", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x600040F")]
	[Address(RVA = "0x8F1BD4", Offset = "0x8F1BD4", VA = "0x8F1BD4")]
	public Office_Chair()
	{
	}
}
[Token(Token = "0x20000E7")]
public class Office_HallScene : SceneData
{
	[Token(Token = "0x6000410")]
	[Address(RVA = "0x8F1BDC", Offset = "0x8F1BDC", VA = "0x8F1BDC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000411")]
	[Address(RVA = "0x8F1BE0", Offset = "0x8F1BE0", VA = "0x8F1BE0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000412")]
	[Address(RVA = "0x8F1BE4", Offset = "0x8F1BE4", VA = "0x8F1BE4")]
	public Office_HallScene()
	{
	}
}
[Token(Token = "0x20000E8")]
public class Office_HallSceneAction : SceneAction
{
	[Token(Token = "0x20000E9")]
	[CompilerGenerated]
	private sealed class <Play>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400044C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400044D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400044E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Office_HallSceneAction <>4__this;

		[Token(Token = "0x17000036")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600041B")]
			[Address(RVA = "0x8F2068", Offset = "0x8F2068", VA = "0x8F2068", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000037")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600041D")]
			[Address(RVA = "0x8F20B0", Offset = "0x8F20B0", VA = "0x8F20B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000418")]
		[Address(RVA = "0x8F1EC4", Offset = "0x8F1EC4", VA = "0x8F1EC4")]
		[DebuggerHidden]
		public <Play>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000419")]
		[Address(RVA = "0x8F1EF4", Offset = "0x8F1EF4", VA = "0x8F1EF4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600041A")]
		[Address(RVA = "0x8F1EF8", Offset = "0x8F1EF8", VA = "0x8F1EF8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600041C")]
		[Address(RVA = "0x8F2070", Offset = "0x8F2070", VA = "0x8F2070", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Elevator[] elevators;

	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ThiefPoliceController[] enemies;

	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ThiefPoliceController immortalTeammate;

	[Token(Token = "0x6000413")]
	[Address(RVA = "0x8F1C3C", Offset = "0x8F1C3C", VA = "0x8F1C3C", Slot = "4")]
	public override void executeAction()
	{
	}

	[Token(Token = "0x6000414")]
	[Address(RVA = "0x8F1DC0", Offset = "0x8F1DC0", VA = "0x8F1DC0")]
	private void OnSceneDeactivate(int sceneId)
	{
	}

	[Token(Token = "0x6000415")]
	[Address(RVA = "0x8F1E6C", Offset = "0x8F1E6C", VA = "0x8F1E6C")]
	private void communication()
	{
	}

	[Token(Token = "0x6000416")]
	[Address(RVA = "0x8F1D58", Offset = "0x8F1D58", VA = "0x8F1D58")]
	[IteratorStateMachine(typeof(<Play>d__6))]
	private IEnumerator Play()
	{
		return null;
	}

	[Token(Token = "0x6000417")]
	[Address(RVA = "0x8F1EEC", Offset = "0x8F1EEC", VA = "0x8F1EEC")]
	public Office_HallSceneAction()
	{
	}
}
[Token(Token = "0x20000EA")]
public class Office_Helicopter : MonoBehaviour
{
	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HeliRotorController mainRotor;

	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public HeliRotorController backRotor;

	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private BezierSolution.BezierSpline path;

	[Token(Token = "0x4000452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float speed;

	[Token(Token = "0x4000453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private UnityAction onPathComplete;

	[Token(Token = "0x4000454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Quaternion initRotation;

	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion targetRotation;

	[Token(Token = "0x4000456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool lookRotation;

	[Token(Token = "0x4000457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Tween pathTween;

	[Token(Token = "0x600041E")]
	[Address(RVA = "0x8F20B8", Offset = "0x8F20B8", VA = "0x8F20B8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600041F")]
	[Address(RVA = "0x8F20C4", Offset = "0x8F20C4", VA = "0x8F20C4")]
	public void Move(Transform initTransform, Transform targetTransform, BezierSolution.BezierSpline path, UnityAction onPathComplete, float speed = 1f)
	{
	}

	[Token(Token = "0x6000420")]
	[Address(RVA = "0x8F21A8", Offset = "0x8F21A8", VA = "0x8F21A8")]
	public void Move(BezierSolution.BezierSpline path, UnityAction onPathComplete, float speed = 1f)
	{
	}

	[Token(Token = "0x6000421")]
	[Address(RVA = "0x8F25B4", Offset = "0x8F25B4", VA = "0x8F25B4")]
	public void CompleteCurrentPath()
	{
	}

	[Token(Token = "0x6000422")]
	[Address(RVA = "0x8F25E8", Offset = "0x8F25E8", VA = "0x8F25E8")]
	private void OnPathComplete()
	{
	}

	[Token(Token = "0x6000423")]
	[Address(RVA = "0x8F2624", Offset = "0x8F2624", VA = "0x8F2624")]
	private void Update()
	{
	}

	[Token(Token = "0x6000424")]
	[Address(RVA = "0x8F2628", Offset = "0x8F2628", VA = "0x8F2628")]
	private void UpdatePath()
	{
	}

	[Token(Token = "0x6000425")]
	[Address(RVA = "0x8F26F0", Offset = "0x8F26F0", VA = "0x8F26F0")]
	public Office_Helicopter()
	{
	}
}
[Token(Token = "0x20000EB")]
public class Office_HelicopterSceneAction : SceneData
{
	[Token(Token = "0x4000458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Tromp tromp;

	[Token(Token = "0x4000459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public EnemySpawnerController spawner1;

	[Token(Token = "0x400045A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public EnemySpawnerController spawner2;

	[Token(Token = "0x400045B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Office_Helicopter helicopter;

	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public BezierSolution.BezierSpline helicopterPathRoofTop;

	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public BezierSolution.BezierSpline helicopterPathBuilding;

	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform roof;

	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Transform building;

	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Transform officeCharactersParent;

	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Transform helicopterFinalPose;

	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Office_Room[] rooms;

	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Office_Room kidnapRoom;

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public List<Transform> roomPositions;

	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Transform playerTransform;

	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private int scenePhase;

	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private bool roofTopPathComplete;

	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE5")]
	private bool buildingPathComplete;

	[Token(Token = "0x6000426")]
	[Address(RVA = "0x8F2700", Offset = "0x8F2700", VA = "0x8F2700", Slot = "4")]
	public override void initialise()
	{
	}

	[Token(Token = "0x6000427")]
	[Address(RVA = "0x8F2950", Offset = "0x8F2950", VA = "0x8F2950")]
	public void moveHelicopter(int iMovement)
	{
	}

	[Token(Token = "0x6000428")]
	[Address(RVA = "0x8F2A38", Offset = "0x8F2A38", VA = "0x8F2A38")]
	public void moveHelicopterImpl(int iMovement)
	{
	}

	[Token(Token = "0x6000429")]
	[Address(RVA = "0x8F2D80", Offset = "0x8F2D80", VA = "0x8F2D80", Slot = "5")]
	public override void activate()
	{
	}

	[Token(Token = "0x600042A")]
	[Address(RVA = "0x8F315C", Offset = "0x8F315C", VA = "0x8F315C", Slot = "7")]
	public override void deactivate()
	{
	}

	[Token(Token = "0x600042B")]
	[Address(RVA = "0x8F31CC", Offset = "0x8F31CC", VA = "0x8F31CC", Slot = "8")]
	protected override void OnThiefDead()
	{
	}

	[Token(Token = "0x600042C")]
	[Address(RVA = "0x8F3274", Offset = "0x8F3274", VA = "0x8F3274")]
	public void CheckIfStartNextScenePhase()
	{
	}

	[Token(Token = "0x600042D")]
	[Address(RVA = "0x8F33AC", Offset = "0x8F33AC", VA = "0x8F33AC")]
	public void startNextScenePhaseRemote(int iPhase)
	{
	}

	[Token(Token = "0x600042E")]
	[Address(RVA = "0x8F32C4", Offset = "0x8F32C4", VA = "0x8F32C4")]
	public void NextScenePhase(int iPhase)
	{
	}

	[Token(Token = "0x600042F")]
	[Address(RVA = "0x8F33B0", Offset = "0x8F33B0", VA = "0x8F33B0")]
	public void NextScenePhaseImpl(int iPhase)
	{
	}

	[Token(Token = "0x6000430")]
	[Address(RVA = "0x8F3864", Offset = "0x8F3864", VA = "0x8F3864")]
	private void OnRoofTopPathComplete()
	{
	}

	[Token(Token = "0x6000431")]
	[Address(RVA = "0x8F358C", Offset = "0x8F358C", VA = "0x8F358C")]
	private void StartBuilding()
	{
	}

	[Token(Token = "0x6000432")]
	[Address(RVA = "0x8F38D0", Offset = "0x8F38D0", VA = "0x8F38D0")]
	private void initOfficeCharacters()
	{
	}

	[Token(Token = "0x6000433")]
	[Address(RVA = "0x8F3A48", Offset = "0x8F3A48", VA = "0x8F3A48")]
	private void hideRoofTop()
	{
	}

	[Token(Token = "0x6000434")]
	[Address(RVA = "0x8F3A74", Offset = "0x8F3A74", VA = "0x8F3A74")]
	private void showBuilding()
	{
	}

	[Token(Token = "0x6000435")]
	[Address(RVA = "0x8F3AA0", Offset = "0x8F3AA0", VA = "0x8F3AA0")]
	private void OnBuildingPathComplete()
	{
	}

	[Token(Token = "0x6000436")]
	[Address(RVA = "0x8F2C58", Offset = "0x8F2C58", VA = "0x8F2C58")]
	private void PlayJumpAnimation()
	{
	}

	[Token(Token = "0x6000437")]
	[Address(RVA = "0x8F2770", Offset = "0x8F2770", VA = "0x8F2770")]
	private void RandomRooms()
	{
	}

	[Token(Token = "0x6000438")]
	[Address(RVA = "0x8F3AC0", Offset = "0x8F3AC0", VA = "0x8F3AC0")]
	private void setRoom(Office_Room room, Transform roomPosition)
	{
	}

	[Token(Token = "0x6000439")]
	[Address(RVA = "0x8F3DE4", Offset = "0x8F3DE4", VA = "0x8F3DE4")]
	public void enableAllGlasses()
	{
	}

	[Token(Token = "0x600043A")]
	[Address(RVA = "0x8F3F88", Offset = "0x8F3F88", VA = "0x8F3F88", Slot = "9")]
	public override void onlinePlayerBecomesMainClient()
	{
	}

	[Token(Token = "0x600043B")]
	[Address(RVA = "0x8F3F8C", Offset = "0x8F3F8C", VA = "0x8F3F8C")]
	public Office_HelicopterSceneAction()
	{
	}
}
[Token(Token = "0x20000ED")]
public class Office_ObjectAnimation : HitTarget
{
	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject model;

	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Animation anim;

	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public NVRCollisionSoundMaterials hitSound;

	[Token(Token = "0x6000442")]
	[Address(RVA = "0x8F425C", Offset = "0x8F425C", VA = "0x8F425C", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000443")]
	[Address(RVA = "0x8F4318", Offset = "0x8F4318", VA = "0x8F4318")]
	public Office_ObjectAnimation()
	{
	}
}
[Token(Token = "0x20000EE")]
public class Office_OfficeScene : SceneAction
{
	[Token(Token = "0x20000EF")]
	[CompilerGenerated]
	private sealed class <ElevatorPlay>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Office_OfficeScene <>4__this;

		[Token(Token = "0x4000473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <floor>5__2;

		[Token(Token = "0x17000038")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600044C")]
			[Address(RVA = "0x8F4780", Offset = "0x8F4780", VA = "0x8F4780", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000039")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600044E")]
			[Address(RVA = "0x8F47C8", Offset = "0x8F47C8", VA = "0x8F47C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000449")]
		[Address(RVA = "0x8F4478", Offset = "0x8F4478", VA = "0x8F4478")]
		[DebuggerHidden]
		public <ElevatorPlay>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x600044A")]
		[Address(RVA = "0x8F45E0", Offset = "0x8F45E0", VA = "0x8F45E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600044B")]
		[Address(RVA = "0x8F45E4", Offset = "0x8F45E4", VA = "0x8F45E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600044D")]
		[Address(RVA = "0x8F4788", Offset = "0x8F4788", VA = "0x8F4788", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000F0")]
	[CompilerGenerated]
	private sealed class <turnOffMusic>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Office_OfficeScene <>4__this;

		[Token(Token = "0x1700003A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000452")]
			[Address(RVA = "0x8F4864", Offset = "0x8F4864", VA = "0x8F4864", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000454")]
			[Address(RVA = "0x8F48AC", Offset = "0x8F48AC", VA = "0x8F48AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600044F")]
		[Address(RVA = "0x8F45B0", Offset = "0x8F45B0", VA = "0x8F45B0")]
		[DebuggerHidden]
		public <turnOffMusic>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000450")]
		[Address(RVA = "0x8F47D0", Offset = "0x8F47D0", VA = "0x8F47D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000451")]
		[Address(RVA = "0x8F47D4", Offset = "0x8F47D4", VA = "0x8F47D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000453")]
		[Address(RVA = "0x8F486C", Offset = "0x8F486C", VA = "0x8F486C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400046E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Elevator elevator;

	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource audioSource;

	[Token(Token = "0x6000444")]
	[Address(RVA = "0x8F4320", Offset = "0x8F4320", VA = "0x8F4320", Slot = "4")]
	public override void executeAction()
	{
	}

	[Token(Token = "0x6000445")]
	[Address(RVA = "0x8F4410", Offset = "0x8F4410", VA = "0x8F4410")]
	[IteratorStateMachine(typeof(<ElevatorPlay>d__3))]
	private IEnumerator ElevatorPlay()
	{
		return null;
	}

	[Token(Token = "0x6000446")]
	[Address(RVA = "0x8F44A0", Offset = "0x8F44A0", VA = "0x8F44A0")]
	private void OnSceneDeactivate(int sceneId)
	{
	}

	[Token(Token = "0x6000447")]
	[Address(RVA = "0x8F4548", Offset = "0x8F4548", VA = "0x8F4548")]
	[IteratorStateMachine(typeof(<turnOffMusic>d__5))]
	private IEnumerator turnOffMusic()
	{
		return null;
	}

	[Token(Token = "0x6000448")]
	[Address(RVA = "0x8F45D8", Offset = "0x8F45D8", VA = "0x8F45D8")]
	public Office_OfficeScene()
	{
	}
}
[Token(Token = "0x20000F1")]
public class Office_Room : MonoBehaviour
{
	[Token(Token = "0x20000F2")]
	[CompilerGenerated]
	private sealed class <startCharacters>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400047D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400047E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400047F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Office_Room <>4__this;

		[Token(Token = "0x4000480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private System.Random <random>5__2;

		[Token(Token = "0x4000481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <i>5__3;

		[Token(Token = "0x1700003C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600045F")]
			[Address(RVA = "0x8F4BBC", Offset = "0x8F4BBC", VA = "0x8F4BBC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000461")]
			[Address(RVA = "0x8F4C04", Offset = "0x8F4C04", VA = "0x8F4C04", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600045C")]
		[Address(RVA = "0x8F4934", Offset = "0x8F4934", VA = "0x8F4934")]
		[DebuggerHidden]
		public <startCharacters>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x600045D")]
		[Address(RVA = "0x8F4964", Offset = "0x8F4964", VA = "0x8F4964", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600045E")]
		[Address(RVA = "0x8F4968", Offset = "0x8F4968", VA = "0x8F4968", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000460")]
		[Address(RVA = "0x8F4BC4", Offset = "0x8F4BC4", VA = "0x8F4BC4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Office_HelicopterSceneAction helicopterScene;

	[Token(Token = "0x4000478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PoliceThiefData[] enemies;

	[Token(Token = "0x4000479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private BrokenGlass[] brokenGlasses;

	[Token(Token = "0x400047A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform characters;

	[Token(Token = "0x400047B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool enableGlass;

	[Token(Token = "0x400047C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool isActive;

	[Token(Token = "0x6000455")]
	[Address(RVA = "0x8F3C04", Offset = "0x8F3C04", VA = "0x8F3C04")]
	public void init(Office_HelicopterSceneAction helicopterScene, BrokenGlass[] brokenGlasses)
	{
	}

	[Token(Token = "0x6000456")]
	[Address(RVA = "0x8F3870", Offset = "0x8F3870", VA = "0x8F3870")]
	public void activate()
	{
	}

	[Token(Token = "0x6000457")]
	[Address(RVA = "0x8F491C", Offset = "0x8F491C", VA = "0x8F491C")]
	public void EnableAllGlasses()
	{
	}

	[Token(Token = "0x6000458")]
	[Address(RVA = "0x8F3E4C", Offset = "0x8F3E4C", VA = "0x8F3E4C")]
	public void EnableGlasses()
	{
	}

	[Token(Token = "0x6000459")]
	[Address(RVA = "0x8F48B4", Offset = "0x8F48B4", VA = "0x8F48B4")]
	[IteratorStateMachine(typeof(<startCharacters>d__10))]
	private IEnumerator startCharacters()
	{
		return null;
	}

	[Token(Token = "0x600045A")]
	[Address(RVA = "0x8F0D10", Offset = "0x8F0D10", VA = "0x8F0D10")]
	public void breakGlasses()
	{
	}

	[Token(Token = "0x600045B")]
	[Address(RVA = "0x8F495C", Offset = "0x8F495C", VA = "0x8F495C")]
	public Office_Room()
	{
	}
}
[Token(Token = "0x20000F3")]
public class Office_StairsNextScene : NextSceneData
{
	[Token(Token = "0x6000462")]
	[Address(RVA = "0x8F4C0C", Offset = "0x8F4C0C", VA = "0x8F4C0C", Slot = "4")]
	protected override void OnFirstFade()
	{
	}

	[Token(Token = "0x6000463")]
	[Address(RVA = "0x8F4C10", Offset = "0x8F4C10", VA = "0x8F4C10", Slot = "6")]
	protected override void OnComplete()
	{
	}

	[Token(Token = "0x6000464")]
	[Address(RVA = "0x8F4C40", Offset = "0x8F4C40", VA = "0x8F4C40")]
	public Office_StairsNextScene()
	{
	}
}
[Token(Token = "0x20000F4")]
public class Office_StairsSceneAction : SceneAction
{
	[Token(Token = "0x4000482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Animation swatFallingAnimation;

	[Token(Token = "0x4000483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource swatFallingAS;

	[Token(Token = "0x6000465")]
	[Address(RVA = "0x8F4C48", Offset = "0x8F4C48", VA = "0x8F4C48", Slot = "4")]
	public override void executeAction()
	{
	}

	[Token(Token = "0x6000466")]
	[Address(RVA = "0x8F4C98", Offset = "0x8F4C98", VA = "0x8F4C98")]
	public Office_StairsSceneAction()
	{
	}
}
[Token(Token = "0x20000F5")]
public class Tromp : CommonCharacterController
{
	[Token(Token = "0x4000484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public ThiefPoliceController trompAssasin;

	[Token(Token = "0x4000485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public Office_Bombs bombs;

	[Token(Token = "0x6000467")]
	[Address(RVA = "0x8F4CA0", Offset = "0x8F4CA0", VA = "0x8F4CA0", Slot = "8")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000468")]
	[Address(RVA = "0x8F4CC0", Offset = "0x8F4CC0", VA = "0x8F4CC0", Slot = "6")]
	public override void OnTarget()
	{
	}

	[Token(Token = "0x6000469")]
	[Address(RVA = "0x8F4108", Offset = "0x8F4108", VA = "0x8F4108")]
	public void Jump()
	{
	}

	[Token(Token = "0x600046A")]
	[Address(RVA = "0x8F4D34", Offset = "0x8F4D34", VA = "0x8F4D34")]
	public void TrompAssasin()
	{
	}

	[Token(Token = "0x600046B")]
	[Address(RVA = "0x8F4E0C", Offset = "0x8F4E0C", VA = "0x8F4E0C")]
	public void ExplodeBarrels()
	{
	}

	[Token(Token = "0x600046C")]
	[Address(RVA = "0x8F4E4C", Offset = "0x8F4E4C", VA = "0x8F4E4C")]
	public void FinishGame()
	{
	}

	[Token(Token = "0x600046D")]
	[Address(RVA = "0x8F4F54", Offset = "0x8F4F54", VA = "0x8F4F54", Slot = "11")]
	public override void EnemyHit(Rigidbody _rigidbodyHit, Vector3 _hitVector, float _bulletHitForce)
	{
	}

	[Token(Token = "0x600046E")]
	[Address(RVA = "0x8F5010", Offset = "0x8F5010", VA = "0x8F5010")]
	public Tromp()
	{
	}
}
[Token(Token = "0x20000F6")]
public class PS4NetworkUtils : MonoBehaviour
{
	[Token(Token = "0x600046F")]
	[Address(RVA = "0x8F5068", Offset = "0x8F5068", VA = "0x8F5068")]
	public PS4NetworkUtils()
	{
	}
}
[Token(Token = "0x20000F7")]
public class BodyHeadFollower : MonoBehaviour
{
	[Token(Token = "0x4000486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform head;

	[Token(Token = "0x4000487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Tweener tweener;

	[Token(Token = "0x6000470")]
	[Address(RVA = "0x8F5070", Offset = "0x8F5070", VA = "0x8F5070")]
	private void Start()
	{
	}

	[Token(Token = "0x6000471")]
	[Address(RVA = "0x8F5074", Offset = "0x8F5074", VA = "0x8F5074")]
	private void Update()
	{
	}

	[Token(Token = "0x6000472")]
	[Address(RVA = "0x8F520C", Offset = "0x8F520C", VA = "0x8F520C")]
	public BodyHeadFollower()
	{
	}
}
[Token(Token = "0x20000F8")]
public class NetworkBulletController : MonoBehaviourPun, IPunObservable
{
	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static NetworkBulletController Instance;

	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int m_iCurrentBulletId;

	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool sendBullets;

	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<string, Bullet> m_hmRemoteBullets;

	[Token(Token = "0x6000473")]
	[Address(RVA = "0x8F5214", Offset = "0x8F5214", VA = "0x8F5214")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000474")]
	[Address(RVA = "0x8F52EC", Offset = "0x8F52EC", VA = "0x8F52EC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000475")]
	[Address(RVA = "0x8F5394", Offset = "0x8F5394", VA = "0x8F5394")]
	private void Update()
	{
	}

	[Token(Token = "0x6000476")]
	[Address(RVA = "0x8F5398", Offset = "0x8F5398", VA = "0x8F5398")]
	public string createBulletId()
	{
		return null;
	}

	[Token(Token = "0x6000477")]
	[Address(RVA = "0x8F547C", Offset = "0x8F547C", VA = "0x8F547C")]
	public void sendCreateBullet(string bulletId, string owner, string parent, Vector3 position, Quaternion rotation, Vector3 finalPosition, bool isRemotePlayer, int bulletsCount)
	{
	}

	[Token(Token = "0x6000478")]
	[Address(RVA = "0x8F57A0", Offset = "0x8F57A0", VA = "0x8F57A0")]
	[PunRPC]
	private void CreateBullet(string bulletId, string owner, string parent, Vector3 position, Quaternion rotation, Vector3 finalPosition, bool isRemotePlayer, int bulletsCount)
	{
	}

	[Token(Token = "0x6000479")]
	[Address(RVA = "0x8F5C08", Offset = "0x8F5C08", VA = "0x8F5C08")]
	internal void sendMiniGunStartFire()
	{
	}

	[Token(Token = "0x600047A")]
	[Address(RVA = "0x8F5D2C", Offset = "0x8F5D2C", VA = "0x8F5D2C")]
	[PunRPC]
	private void MiniGunStartFire(string owner)
	{
	}

	[Token(Token = "0x600047B")]
	[Address(RVA = "0x8F5E4C", Offset = "0x8F5E4C", VA = "0x8F5E4C")]
	internal void sendMiniGunStopFire()
	{
	}

	[Token(Token = "0x600047C")]
	[Address(RVA = "0x8F5F64", Offset = "0x8F5F64", VA = "0x8F5F64")]
	[PunRPC]
	private void MiniGunStopFire(string owner)
	{
	}

	[Token(Token = "0x600047D")]
	[Address(RVA = "0x8F3480", Offset = "0x8F3480", VA = "0x8F3480")]
	public void sendStartNextScenePhase(int iPhase)
	{
	}

	[Token(Token = "0x600047E")]
	[Address(RVA = "0x8F6084", Offset = "0x8F6084", VA = "0x8F6084")]
	[PunRPC]
	public void StartNextScenePhase(int iPhase)
	{
	}

	[Token(Token = "0x600047F")]
	[Address(RVA = "0x8F2B4C", Offset = "0x8F2B4C", VA = "0x8F2B4C")]
	public void sendMoveHelipter(int iMovement)
	{
	}

	[Token(Token = "0x6000480")]
	[Address(RVA = "0x8F6110", Offset = "0x8F6110", VA = "0x8F6110")]
	[PunRPC]
	public void MoveHelicopter(int iMovement)
	{
	}

	[Token(Token = "0x6000481")]
	[Address(RVA = "0x8F619C", Offset = "0x8F619C", VA = "0x8F619C")]
	public Bullet getRemoteBullet(string bulletId)
	{
		return null;
	}

	[Token(Token = "0x6000482")]
	[Address(RVA = "0x8F6234", Offset = "0x8F6234", VA = "0x8F6234")]
	public void sendBulletTime(float time)
	{
	}

	[Token(Token = "0x6000483")]
	[Address(RVA = "0x8F6348", Offset = "0x8F6348", VA = "0x8F6348")]
	[PunRPC]
	private void BulletTime(float time)
	{
	}

	[Token(Token = "0x6000484")]
	[Address(RVA = "0x8F63A8", Offset = "0x8F63A8", VA = "0x8F63A8")]
	public void sendOnHitSceneButton(string buttonName)
	{
	}

	[Token(Token = "0x6000485")]
	[Address(RVA = "0x8F64DC", Offset = "0x8F64DC", VA = "0x8F64DC")]
	[PunRPC]
	private void OnHitSceneButton(string buttonName)
	{
	}

	[Token(Token = "0x6000486")]
	[Address(RVA = "0x8F66A0", Offset = "0x8F66A0", VA = "0x8F66A0")]
	public void sendChangeMission(int missionSelected)
	{
	}

	[Token(Token = "0x6000487")]
	[Address(RVA = "0x8F681C", Offset = "0x8F681C", VA = "0x8F681C")]
	[PunRPC]
	public void ChangeMission(int missionSelected)
	{
	}

	[Token(Token = "0x6000488")]
	[Address(RVA = "0x8F6940", Offset = "0x8F6940", VA = "0x8F6940")]
	public void sendOnHitMenuButton(string buttonName, int expectedOnlinePlayers)
	{
	}

	[Token(Token = "0x6000489")]
	[Address(RVA = "0x8F6A78", Offset = "0x8F6A78", VA = "0x8F6A78")]
	[PunRPC]
	private void OnHitMenuButton(string buttonName, int expectedOnlinePlayers)
	{
	}

	[Token(Token = "0x600048A")]
	[Address(RVA = "0x8F6C90", Offset = "0x8F6C90", VA = "0x8F6C90")]
	public void sendDrawLine(Vector3 initPosition, Vector3 endPosition)
	{
	}

	[Token(Token = "0x600048B")]
	[Address(RVA = "0x8F6EBC", Offset = "0x8F6EBC", VA = "0x8F6EBC")]
	[PunRPC]
	private void DrawLine(Vector3 initPosition, Vector3 endPosition)
	{
	}

	[Token(Token = "0x600048C")]
	[Address(RVA = "0x8F71B8", Offset = "0x8F71B8", VA = "0x8F71B8")]
	public void sendExplodeBombs()
	{
	}

	[Token(Token = "0x600048D")]
	[Address(RVA = "0x8F72C4", Offset = "0x8F72C4", VA = "0x8F72C4")]
	[PunRPC]
	private void ExplodeBombs()
	{
	}

	[Token(Token = "0x600048E")]
	[Address(RVA = "0x8F7370", Offset = "0x8F7370", VA = "0x8F7370")]
	public void sendRPGHelicopterDown(Vector3 playerPosition)
	{
	}

	[Token(Token = "0x600048F")]
	[Address(RVA = "0x8F7498", Offset = "0x8F7498", VA = "0x8F7498")]
	[PunRPC]
	private void RPGHelicopterDown(Vector3 playerPosition)
	{
	}

	[Token(Token = "0x6000490")]
	[Address(RVA = "0x8F758C", Offset = "0x8F758C", VA = "0x8F758C", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000491")]
	[Address(RVA = "0x8F7590", Offset = "0x8F7590", VA = "0x8F7590")]
	public void sendReloadManualWeapon(string strOwner)
	{
	}

	[Token(Token = "0x6000492")]
	[Address(RVA = "0x8F7668", Offset = "0x8F7668", VA = "0x8F7668")]
	[PunRPC]
	private void ReloadManualWeapon(string strOwner)
	{
	}

	[Token(Token = "0x6000493")]
	[Address(RVA = "0x8F7780", Offset = "0x8F7780", VA = "0x8F7780")]
	public void sendStartSceneForDebug(int iScene)
	{
	}

	[Token(Token = "0x6000494")]
	[Address(RVA = "0x8F788C", Offset = "0x8F788C", VA = "0x8F788C")]
	[PunRPC]
	private void StartSceneForDebug(int iScene)
	{
	}

	[Token(Token = "0x6000495")]
	[Address(RVA = "0x8F78E8", Offset = "0x8F78E8", VA = "0x8F78E8")]
	public void sendTest()
	{
	}

	[Token(Token = "0x6000496")]
	[Address(RVA = "0x8F79B0", Offset = "0x8F79B0", VA = "0x8F79B0")]
	[PunRPC]
	private void Test()
	{
	}

	[Token(Token = "0x6000497")]
	[Address(RVA = "0x8F7A18", Offset = "0x8F7A18", VA = "0x8F7A18")]
	public NetworkBulletController()
	{
	}
}
[Token(Token = "0x20000F9")]
public class NetworkWeaponTakeableController : MonoBehaviourPun, IPunObservable
{
	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static NetworkWeaponTakeableController Instance;

	[Token(Token = "0x400048D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int m_iCurrentWeaponTakeableId;

	[Token(Token = "0x6000498")]
	[Address(RVA = "0x8F7A9C", Offset = "0x8F7A9C", VA = "0x8F7A9C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000499")]
	[Address(RVA = "0x8F7AE8", Offset = "0x8F7AE8", VA = "0x8F7AE8")]
	private void Start()
	{
	}

	[Token(Token = "0x600049A")]
	[Address(RVA = "0x8F7B90", Offset = "0x8F7B90", VA = "0x8F7B90")]
	private void Update()
	{
	}

	[Token(Token = "0x600049B")]
	[Address(RVA = "0x8F7B94", Offset = "0x8F7B94", VA = "0x8F7B94")]
	public string createWeaponTakeableId()
	{
		return null;
	}

	[Token(Token = "0x600049C")]
	[Address(RVA = "0x8F7C78", Offset = "0x8F7C78", VA = "0x8F7C78")]
	public void sendShowWeaponTakeable(WeaponTakeable wt, string owner, int currentBullets = -1)
	{
	}

	[Token(Token = "0x600049D")]
	[Address(RVA = "0x8F8120", Offset = "0x8F8120", VA = "0x8F8120")]
	[PunRPC]
	private void ShowWeaponTakeable(string id, WeaponTakeable.BonusType bonusType, WeaponModel weaponModel, string owner, Vector3 position, int currentBullets)
	{
	}

	[Token(Token = "0x600049E")]
	[Address(RVA = "0x8F854C", Offset = "0x8F854C", VA = "0x8F854C")]
	public void sendHideWeaponTakeable(WeaponTakeable wt, string player, bool exclusive = false)
	{
	}

	[Token(Token = "0x600049F")]
	[Address(RVA = "0x8F86C8", Offset = "0x8F86C8", VA = "0x8F86C8")]
	[PunRPC]
	private void HideWeaponTakeable(string id, string player, bool exclusive)
	{
	}

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0x8F8A54", Offset = "0x8F8A54", VA = "0x8F8A54", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60004A1")]
	[Address(RVA = "0x8F8A58", Offset = "0x8F8A58", VA = "0x8F8A58")]
	public NetworkWeaponTakeableController()
	{
	}
}
[Token(Token = "0x20000FA")]
public class OnlineSceneModifier : MonoBehaviour
{
	[Token(Token = "0x400048E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] swat1DisabledItems;

	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] swat1EnabledItems;

	[Token(Token = "0x4000490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] swat2DisabledItems;

	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] swat2EnabledItems;

	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public SceneData sceneData;

	[Token(Token = "0x60004A2")]
	[Address(RVA = "0x8F9A60", Offset = "0x8F9A60", VA = "0x8F9A60")]
	public void ModifyScene()
	{
	}

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0x8F9B94", Offset = "0x8F9B94", VA = "0x8F9B94")]
	private void disableBots(GameObject[] data)
	{
	}

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0x8F9D9C", Offset = "0x8F9D9C", VA = "0x8F9D9C")]
	private void enableBots(GameObject[] data)
	{
	}

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0x8F9F24", Offset = "0x8F9F24", VA = "0x8F9F24")]
	public OnlineSceneModifier()
	{
	}
}
[Token(Token = "0x20000FB")]
public abstract class AbstractPlayerID
{
	[Token(Token = "0x60004A6")]
	[Address(RVA = "0x8F9F2C", Offset = "0x8F9F2C", VA = "0x8F9F2C", Slot = "4")]
	public virtual string getPlayerName()
	{
		return null;
	}

	[Token(Token = "0x60004A7")]
	[Address(RVA = "0x8F9F34", Offset = "0x8F9F34", VA = "0x8F9F34", Slot = "5")]
	public virtual string getPlayerID()
	{
		return null;
	}

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0x8F9F3C", Offset = "0x8F9F3C", VA = "0x8F9F3C", Slot = "6")]
	public virtual bool isReady()
	{
		return default(bool);
	}

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0x8F9F44", Offset = "0x8F9F44", VA = "0x8F9F44")]
	protected AbstractPlayerID()
	{
	}
}
[Token(Token = "0x20000FC")]
public class PlayerIDDummy : AbstractPlayerID
{
	[Token(Token = "0x60004AA")]
	[Address(RVA = "0x8F9F4C", Offset = "0x8F9F4C", VA = "0x8F9F4C", Slot = "4")]
	public override string getPlayerName()
	{
		return null;
	}

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0x8FA140", Offset = "0x8FA140", VA = "0x8FA140", Slot = "5")]
	public override string getPlayerID()
	{
		return null;
	}

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0x8FA180", Offset = "0x8FA180", VA = "0x8FA180")]
	public PlayerIDDummy()
	{
	}
}
[Token(Token = "0x20000FD")]
public class PlayerIDFactory
{
	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private AbstractPlayerID playerID;

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0x8FA188", Offset = "0x8FA188", VA = "0x8FA188")]
	public string getPlayerID()
	{
		return null;
	}

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0x8FA2B4", Offset = "0x8FA2B4", VA = "0x8FA2B4")]
	public PlayerIDFactory()
	{
	}
}
[Token(Token = "0x20000FE")]
public class PlayerIDPS4 : AbstractPlayerID
{
	[Token(Token = "0x60004AF")]
	[Address(RVA = "0x8FA2BC", Offset = "0x8FA2BC", VA = "0x8FA2BC")]
	public PlayerIDPS4()
	{
	}
}
[Token(Token = "0x20000FF")]
public class PlayerIDSteam : AbstractPlayerID
{
	[Token(Token = "0x60004B0")]
	[Address(RVA = "0x8FA2C4", Offset = "0x8FA2C4", VA = "0x8FA2C4")]
	public PlayerIDSteam()
	{
	}
}
[Token(Token = "0x2000100")]
public class RemoteHandController : MonoBehaviour
{
	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private NVRHand Hand;

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0x8FA2CC", Offset = "0x8FA2CC", VA = "0x8FA2CC")]
	private void Start()
	{
	}

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0x8FA3F8", Offset = "0x8FA3F8", VA = "0x8FA3F8")]
	public void checkStartingWeapon()
	{
	}

	[Token(Token = "0x60004B3")]
	[Address(RVA = "0x8FA704", Offset = "0x8FA704", VA = "0x8FA704")]
	private void Update()
	{
	}

	[Token(Token = "0x60004B4")]
	[Address(RVA = "0x8FA438", Offset = "0x8FA438", VA = "0x8FA438")]
	private void BeginInteraction(NVRInteractable interactable)
	{
	}

	[Token(Token = "0x60004B5")]
	[Address(RVA = "0x8FA708", Offset = "0x8FA708", VA = "0x8FA708")]
	private void EndInteraction(NVRInteractable interactable)
	{
	}

	[Token(Token = "0x60004B6")]
	[Address(RVA = "0x8FA7FC", Offset = "0x8FA7FC", VA = "0x8FA7FC")]
	public RemoteHandController()
	{
	}
}
[Token(Token = "0x2000101")]
public class TestLauncer : MonoBehaviour
{
	[Token(Token = "0x2000104")]
	[CompilerGenerated]
	private sealed class <CheckPlayerReady>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400049E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400049F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TestLauncer <>4__this;

		[Token(Token = "0x1700003E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60004CB")]
			[Address(RVA = "0x8FB7B0", Offset = "0x8FB7B0", VA = "0x8FB7B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004CD")]
			[Address(RVA = "0x8FB7F8", Offset = "0x8FB7F8", VA = "0x8FB7F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004C8")]
		[Address(RVA = "0x8FB20C", Offset = "0x8FB20C", VA = "0x8FB20C")]
		[DebuggerHidden]
		public <CheckPlayerReady>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60004C9")]
		[Address(RVA = "0x8FB670", Offset = "0x8FB670", VA = "0x8FB670", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004CA")]
		[Address(RVA = "0x8FB674", Offset = "0x8FB674", VA = "0x8FB674", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004CC")]
		[Address(RVA = "0x8FB7B8", Offset = "0x8FB7B8", VA = "0x8FB7B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int connected;

	[Token(Token = "0x4000496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshPro log;

	[Token(Token = "0x4000497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool nickNameSet;

	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SumalabInvoke.SumalabInvokeHandler handler;

	[Token(Token = "0x60004B7")]
	[Address(RVA = "0x8FA804", Offset = "0x8FA804", VA = "0x8FA804")]
	private void cancel(object test, string str)
	{
	}

	[Token(Token = "0x60004B8")]
	[Address(RVA = "0x8FA86C", Offset = "0x8FA86C", VA = "0x8FA86C")]
	private void Start()
	{
	}

	[Token(Token = "0x60004B9")]
	[Address(RVA = "0x8FACF8", Offset = "0x8FACF8", VA = "0x8FACF8")]
	private void Update()
	{
	}

	[Token(Token = "0x60004BA")]
	[Address(RVA = "0x8FB1A4", Offset = "0x8FB1A4", VA = "0x8FB1A4")]
	[IteratorStateMachine(typeof(<CheckPlayerReady>d__7))]
	private IEnumerator CheckPlayerReady()
	{
		return null;
	}

	[Token(Token = "0x60004BB")]
	[Address(RVA = "0x8FB234", Offset = "0x8FB234", VA = "0x8FB234")]
	private void OnGameConnected()
	{
	}

	[Token(Token = "0x60004BC")]
	[Address(RVA = "0x8FB27C", Offset = "0x8FB27C", VA = "0x8FB27C")]
	private void OnGameJoined()
	{
	}

	[Token(Token = "0x60004BD")]
	[Address(RVA = "0x8FB374", Offset = "0x8FB374", VA = "0x8FB374")]
	private void OnGameDisconnected(DisconnectCause cause)
	{
	}

	[Token(Token = "0x60004BE")]
	[Address(RVA = "0x8FB3BC", Offset = "0x8FB3BC", VA = "0x8FB3BC")]
	private void launchBankScene()
	{
	}

	[Token(Token = "0x60004BF")]
	[Address(RVA = "0x8FB120", Offset = "0x8FB120", VA = "0x8FB120")]
	private void Log(string str)
	{
	}

	[Token(Token = "0x60004C0")]
	[Address(RVA = "0x8FB464", Offset = "0x8FB464", VA = "0x8FB464")]
	private void Test(string str)
	{
	}

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0x8FB4BC", Offset = "0x8FB4BC", VA = "0x8FB4BC")]
	public TestLauncer()
	{
	}
}
[Token(Token = "0x2000105")]
public class TestInvoke
{
	[Token(Token = "0x40004A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string name;

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0x8FB4E4", Offset = "0x8FB4E4", VA = "0x8FB4E4")]
	public void test(string str)
	{
	}

	[Token(Token = "0x60004CF")]
	[Address(RVA = "0x8FACF0", Offset = "0x8FACF0", VA = "0x8FACF0")]
	public TestInvoke()
	{
	}
}
[Token(Token = "0x2000106")]
public class OnlineChangeNickNamePanel : MonoBehaviour
{
	[Token(Token = "0x40004A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public KeyboardScreen screen;

	[Token(Token = "0x40004A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Keyboard keyboard;

	[Token(Token = "0x40004A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UIButton OkButton;

	[Token(Token = "0x40004A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private OnlineGameManager onlineGameManager;

	[Token(Token = "0x60004D0")]
	[Address(RVA = "0x8FB800", Offset = "0x8FB800", VA = "0x8FB800")]
	private void Start()
	{
	}

	[Token(Token = "0x60004D1")]
	[Address(RVA = "0x8FB944", Offset = "0x8FB944", VA = "0x8FB944")]
	private void Update()
	{
	}

	[Token(Token = "0x60004D2")]
	[Address(RVA = "0x8FB948", Offset = "0x8FB948", VA = "0x8FB948")]
	private void OnKeyboardOk()
	{
	}

	[Token(Token = "0x60004D3")]
	[Address(RVA = "0x8FB9BC", Offset = "0x8FB9BC", VA = "0x8FB9BC")]
	private void OnButtonOk(UIButton button)
	{
	}

	[Token(Token = "0x60004D4")]
	[Address(RVA = "0x8FBBFC", Offset = "0x8FBBFC", VA = "0x8FBBFC")]
	public OnlineChangeNickNamePanel()
	{
	}
}
[Token(Token = "0x2000107")]
public class OnlineCreateJoinKeyPanel : MonoBehaviour
{
	[Token(Token = "0x40004A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public KeyboardScreen screen;

	[Token(Token = "0x40004A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Keyboard keyboard;

	[Token(Token = "0x40004A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UIButton OkButton;

	[Token(Token = "0x40004A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshPro errorInfo;

	[Token(Token = "0x40004AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OnlineGameManager onlineGameManager;

	[Token(Token = "0x40004AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string password;

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0x8FBC04", Offset = "0x8FBC04", VA = "0x8FBC04")]
	private void Start()
	{
	}

	[Token(Token = "0x60004D6")]
	[Address(RVA = "0x8FBD48", Offset = "0x8FBD48", VA = "0x8FBD48")]
	private void Update()
	{
	}

	[Token(Token = "0x60004D7")]
	[Address(RVA = "0x8FBD4C", Offset = "0x8FBD4C", VA = "0x8FBD4C")]
	private void OnKeyboardOk()
	{
	}

	[Token(Token = "0x60004D8")]
	[Address(RVA = "0x8FBDC0", Offset = "0x8FBDC0", VA = "0x8FBDC0")]
	private void OnButtonOk(UIButton button)
	{
	}

	[Token(Token = "0x60004D9")]
	[Address(RVA = "0x8FBF70", Offset = "0x8FBF70", VA = "0x8FBF70")]
	public OnlineCreateJoinKeyPanel()
	{
	}
}
[Token(Token = "0x2000108")]
public class OnlineGameManager : MonoBehaviour
{
	[Token(Token = "0x2000109")]
	[CompilerGenerated]
	private sealed class <waitForMyPlayer>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000040")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000500")]
			[Address(RVA = "0x8FDFF0", Offset = "0x8FDFF0", VA = "0x8FDFF0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000041")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000502")]
			[Address(RVA = "0x8FE038", Offset = "0x8FE038", VA = "0x8FE038", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004FD")]
		[Address(RVA = "0x8FDE00", Offset = "0x8FDE00", VA = "0x8FDE00")]
		[DebuggerHidden]
		public <waitForMyPlayer>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x60004FE")]
		[Address(RVA = "0x8FDE34", Offset = "0x8FDE34", VA = "0x8FDE34", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004FF")]
		[Address(RVA = "0x8FDE38", Offset = "0x8FDE38", VA = "0x8FDE38", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000501")]
		[Address(RVA = "0x8FDFF8", Offset = "0x8FDFF8", VA = "0x8FDFF8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004AC")]
	private const string CONNECTING = "online_connecting";

	[Token(Token = "0x40004AD")]
	private const string ONLINE = "online";

	[Token(Token = "0x40004AE")]
	private const string JOIN_RANDOM_GAME = "online_joinrandom";

	[Token(Token = "0x40004AF")]
	private const string RANDOM_ROOM = "online_randomroom";

	[Token(Token = "0x40004B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UIButton connectButton;

	[Token(Token = "0x40004B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UIButton disconnectButton;

	[Token(Token = "0x40004B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UIButton backToMainPanelButton;

	[Token(Token = "0x40004B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform OnlineWindow;

	[Token(Token = "0x40004B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public OnlineMainPanel mainPanel;

	[Token(Token = "0x40004B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public OnlineWaitingPlayersPanel waitingPlayersPanel;

	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public OnlineCreateJoinKeyPanel createJoinKeyPanel;

	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public OnlineChangeNickNamePanel changeNickNamePanel;

	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform onlineNetworkErrorPanel;

	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform infoPanels;

	[Token(Token = "0x40004BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public TextMeshPro myName;

	[Token(Token = "0x40004BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[HideInInspector]
	public string defaultNickName;

	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[HideInInspector]
	public string defaultJoinPassword;

	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static OnlineGameManager Instance;

	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool m_bOnlineGameStarted;

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private MenuButton[] menuButtons;

	[Token(Token = "0x40004C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private SumalabInvoke.SumalabInvokeHandler invokeHandler;

	[Token(Token = "0x60004DA")]
	[Address(RVA = "0x8FBF78", Offset = "0x8FBF78", VA = "0x8FBF78")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0x8FBFC4", Offset = "0x8FBFC4", VA = "0x8FBFC4")]
	private void Start()
	{
	}

	[Token(Token = "0x60004DC")]
	[Address(RVA = "0x8FC258", Offset = "0x8FC258", VA = "0x8FC258")]
	private void finishStart()
	{
	}

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0x8FC854", Offset = "0x8FC854", VA = "0x8FC854")]
	private void Update()
	{
	}

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0x8FC858", Offset = "0x8FC858", VA = "0x8FC858")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0x8FC388", Offset = "0x8FC388", VA = "0x8FC388")]
	public void startOnlineConnection(UIButton button)
	{
	}

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0x8FCBBC", Offset = "0x8FCBBC", VA = "0x8FCBBC")]
	private void onGamePlayerEnteredRoom()
	{
	}

	[Token(Token = "0x60004E1")]
	[Address(RVA = "0x8FCBC0", Offset = "0x8FCBC0", VA = "0x8FCBC0")]
	private void sendChangeMission()
	{
	}

	[Token(Token = "0x60004E2")]
	[Address(RVA = "0x8FC860", Offset = "0x8FC860", VA = "0x8FC860")]
	public void resetListening(bool bResetDisconnect = true)
	{
	}

	[Token(Token = "0x60004E3")]
	[Address(RVA = "0x8FCD2C", Offset = "0x8FCD2C", VA = "0x8FCD2C")]
	public void stopOnlineConnection(UIButton button)
	{
	}

	[Token(Token = "0x60004E4")]
	[Address(RVA = "0x8FCDD4", Offset = "0x8FCDD4", VA = "0x8FCDD4")]
	public void joinRandomGame()
	{
	}

	[Token(Token = "0x60004E5")]
	[Address(RVA = "0x8FCEB4", Offset = "0x8FCEB4", VA = "0x8FCEB4")]
	public void showJoinPasswordGamePanel()
	{
	}

	[Token(Token = "0x60004E6")]
	[Address(RVA = "0x8FD1BC", Offset = "0x8FD1BC", VA = "0x8FD1BC")]
	public void showChangeNickNamePanel()
	{
	}

	[Token(Token = "0x60004E7")]
	[Address(RVA = "0x8FD278", Offset = "0x8FD278", VA = "0x8FD278")]
	private void showDisconnectError()
	{
	}

	[Token(Token = "0x60004E8")]
	[Address(RVA = "0x8FD2B8", Offset = "0x8FD2B8", VA = "0x8FD2B8")]
	private void backToMainPanel(UIButton arg0)
	{
	}

	[Token(Token = "0x60004E9")]
	[Address(RVA = "0x8FBE84", Offset = "0x8FBE84", VA = "0x8FBE84")]
	public void joinGame(string password)
	{
	}

	[Token(Token = "0x60004EA")]
	[Address(RVA = "0x8FBA7C", Offset = "0x8FBA7C", VA = "0x8FBA7C")]
	public void setNickName(string str)
	{
	}

	[Token(Token = "0x60004EB")]
	[Address(RVA = "0x8FD740", Offset = "0x8FD740", VA = "0x8FD740")]
	private void onGameConnected()
	{
	}

	[Token(Token = "0x60004EC")]
	[Address(RVA = "0x8FCAC8", Offset = "0x8FCAC8", VA = "0x8FCAC8")]
	private void checkCanPlayRoutine()
	{
	}

	[Token(Token = "0x60004ED")]
	[Address(RVA = "0x8FD7D0", Offset = "0x8FD7D0", VA = "0x8FD7D0")]
	private void checkCanPlay()
	{
	}

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0x8FD8F8", Offset = "0x8FD8F8", VA = "0x8FD8F8")]
	private void stopCheckCanPlay()
	{
	}

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0x8FD058", Offset = "0x8FD058", VA = "0x8FD058")]
	private void showInfoPanel(Transform panel)
	{
	}

	[Token(Token = "0x60004F0")]
	[Address(RVA = "0x8FDA18", Offset = "0x8FDA18", VA = "0x8FDA18")]
	private void onGameDisconnected(DisconnectCause cause)
	{
	}

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0x8FDC58", Offset = "0x8FDC58", VA = "0x8FDC58")]
	private void onGameJoinRoomError(string errorMessage)
	{
	}

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0x8FD2BC", Offset = "0x8FD2BC", VA = "0x8FD2BC")]
	private void showMainPanel()
	{
	}

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0x8FCA78", Offset = "0x8FCA78", VA = "0x8FCA78")]
	private void showOnlineWindow()
	{
	}

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0x8FC174", Offset = "0x8FC174", VA = "0x8FC174")]
	private void hideOnlineWindow()
	{
	}

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0x8FDCA0", Offset = "0x8FDCA0", VA = "0x8FDCA0")]
	public void closeRoomForNewPlayers()
	{
	}

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0x8FDD04", Offset = "0x8FDD04", VA = "0x8FDD04")]
	private void onGameJoinedRoom()
	{
	}

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0x8FDD38", Offset = "0x8FDD38", VA = "0x8FDD38")]
	private void startGame()
	{
	}

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0x8FC6A4", Offset = "0x8FC6A4", VA = "0x8FC6A4")]
	private void waitingForPlayers(bool bBlock = false)
	{
	}

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0x8FDDA0", Offset = "0x8FDDA0", VA = "0x8FDDA0")]
	[IteratorStateMachine(typeof(<waitForMyPlayer>d__52))]
	private IEnumerator waitForMyPlayer()
	{
		return null;
	}

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0x8FD628", Offset = "0x8FD628", VA = "0x8FD628")]
	private void saveSettings()
	{
	}

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0x8FDE28", Offset = "0x8FDE28", VA = "0x8FDE28")]
	public OnlineGameManager()
	{
	}
}
[Token(Token = "0x200010A")]
public class OnlineMainPanel : MonoBehaviour
{
	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UIButton joinRandomGameButton;

	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UIButton joinPasswordGameButton;

	[Token(Token = "0x40004C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UIButton changeNickNameButton;

	[Token(Token = "0x40004C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private OnlineGameManager onlineGameManager;

	[Token(Token = "0x6000503")]
	[Address(RVA = "0x8FE040", Offset = "0x8FE040", VA = "0x8FE040")]
	private void Start()
	{
	}

	[Token(Token = "0x6000504")]
	[Address(RVA = "0x8FE1CC", Offset = "0x8FE1CC", VA = "0x8FE1CC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000505")]
	[Address(RVA = "0x8FE1D0", Offset = "0x8FE1D0", VA = "0x8FE1D0")]
	public void joinRandomGame(UIButton button)
	{
	}

	[Token(Token = "0x6000506")]
	[Address(RVA = "0x8FE1E8", Offset = "0x8FE1E8", VA = "0x8FE1E8")]
	public void joinPasswordGame(UIButton button)
	{
	}

	[Token(Token = "0x6000507")]
	[Address(RVA = "0x8FE200", Offset = "0x8FE200", VA = "0x8FE200")]
	public void changeNickName(UIButton button)
	{
	}

	[Token(Token = "0x6000508")]
	[Address(RVA = "0x8FE218", Offset = "0x8FE218", VA = "0x8FE218")]
	public OnlineMainPanel()
	{
	}
}
[Token(Token = "0x200010B")]
public class OnlineWaitingPlayersPanel : MonoBehaviour
{
	[Token(Token = "0x40004C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshPro titleText;

	[Token(Token = "0x40004C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshPro infoText;

	[Token(Token = "0x40004C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshPro playersText;

	[Token(Token = "0x40004CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UIButton playButton;

	[Token(Token = "0x40004CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool block;

	[Token(Token = "0x40004CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OnlineGameManager onlineGameManager;

	[Token(Token = "0x6000509")]
	[Address(RVA = "0x8FE220", Offset = "0x8FE220", VA = "0x8FE220")]
	private void Start()
	{
	}

	[Token(Token = "0x600050A")]
	[Address(RVA = "0x8FE2FC", Offset = "0x8FE2FC", VA = "0x8FE2FC")]
	private void Update()
	{
	}

	[Token(Token = "0x600050B")]
	[Address(RVA = "0x8FE300", Offset = "0x8FE300", VA = "0x8FE300")]
	private void Play(UIButton button)
	{
	}

	[Token(Token = "0x600050C")]
	[Address(RVA = "0x8FE318", Offset = "0x8FE318", VA = "0x8FE318")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600050D")]
	[Address(RVA = "0x8FE3B0", Offset = "0x8FE3B0", VA = "0x8FE3B0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600050E")]
	[Address(RVA = "0x8FE428", Offset = "0x8FE428", VA = "0x8FE428")]
	private void checkPlayers()
	{
	}

	[Token(Token = "0x600050F")]
	[Address(RVA = "0x8FE6FC", Offset = "0x8FE6FC", VA = "0x8FE6FC")]
	public OnlineWaitingPlayersPanel()
	{
	}
}
[Token(Token = "0x200010C")]
public class OOpaHeadMovement : MonoBehaviour
{
	[Token(Token = "0x6000510")]
	[Address(RVA = "0x8FE704", Offset = "0x8FE704", VA = "0x8FE704")]
	private void Start()
	{
	}

	[Token(Token = "0x6000511")]
	[Address(RVA = "0x8FE800", Offset = "0x8FE800", VA = "0x8FE800")]
	public OOpaHeadMovement()
	{
	}
}
[Token(Token = "0x200010D")]
public class OutOfPlayArea : MonoBehaviour
{
	[Token(Token = "0x40004CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<Collider, Shader> default_Materials;

	[Token(Token = "0x40004CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject oopa_screen;

	[Token(Token = "0x40004CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private HashSet<Collider> m_colliders;

	[Token(Token = "0x40004D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<Collider> m_collidersDisabled;

	[Token(Token = "0x6000512")]
	[Address(RVA = "0x8FE808", Offset = "0x8FE808", VA = "0x8FE808")]
	private void Start()
	{
	}

	[Token(Token = "0x6000513")]
	[Address(RVA = "0x8FE980", Offset = "0x8FE980", VA = "0x8FE980")]
	private void OnRecenterEdit()
	{
	}

	[Token(Token = "0x6000514")]
	[Address(RVA = "0x8FEA30", Offset = "0x8FEA30", VA = "0x8FEA30")]
	private void OnSceneActivate(int sceneId)
	{
	}

	[Token(Token = "0x6000515")]
	[Address(RVA = "0x8FEA38", Offset = "0x8FEA38", VA = "0x8FEA38")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000516")]
	[Address(RVA = "0x8FEE88", Offset = "0x8FEE88", VA = "0x8FEE88")]
	private void OnTriggerEnter(Collider collider)
	{
	}

	[Token(Token = "0x6000517")]
	[Address(RVA = "0x8FF0A0", Offset = "0x8FF0A0", VA = "0x8FF0A0")]
	private void OnTriggerExit(Collider collider)
	{
	}

	[Token(Token = "0x6000518")]
	[Address(RVA = "0x8FF034", Offset = "0x8FF034", VA = "0x8FF034")]
	private void pauseGame()
	{
	}

	[Token(Token = "0x6000519")]
	[Address(RVA = "0x8FEE24", Offset = "0x8FEE24", VA = "0x8FEE24")]
	private void resumeGame()
	{
	}

	[Token(Token = "0x600051A")]
	[Address(RVA = "0x8FF134", Offset = "0x8FF134", VA = "0x8FF134")]
	public void restoreShaders()
	{
	}

	[Token(Token = "0x600051B")]
	[Address(RVA = "0x8FE988", Offset = "0x8FE988", VA = "0x8FE988")]
	public void ResetColliders(bool unlockPlayer = true)
	{
	}

	[Token(Token = "0x600051C")]
	[Address(RVA = "0x8FF374", Offset = "0x8FF374", VA = "0x8FF374")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600051D")]
	[Address(RVA = "0x8FEF5C", Offset = "0x8FEF5C", VA = "0x8FEF5C")]
	private bool gameStarted()
	{
		return default(bool);
	}

	[Token(Token = "0x600051E")]
	[Address(RVA = "0x8FF37C", Offset = "0x8FF37C", VA = "0x8FF37C")]
	public OutOfPlayArea()
	{
	}
}
[Token(Token = "0x200010E")]
public class OverwriteAnimTransform : MonoBehaviour
{
	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string type;

	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform boneTransform;

	[Token(Token = "0x40004D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform overwriteTransform;

	[Token(Token = "0x600051F")]
	[Address(RVA = "0x8FF480", Offset = "0x8FF480", VA = "0x8FF480")]
	public OverwriteAnimTransform()
	{
	}
}
[Token(Token = "0x200010F")]
public class PathWaypoints : MonoBehaviour
{
	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Waypoint[] waypoints;

	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3[] wayPointsVector3;

	[Token(Token = "0x40004D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float totalDistance;

	[Token(Token = "0x6000520")]
	[Address(RVA = "0x8FF488", Offset = "0x8FF488", VA = "0x8FF488")]
	private void Start()
	{
	}

	[Token(Token = "0x6000521")]
	[Address(RVA = "0x8FF728", Offset = "0x8FF728", VA = "0x8FF728")]
	public Waypoint[] getWaypoints()
	{
		return null;
	}

	[Token(Token = "0x6000522")]
	[Address(RVA = "0x8FF730", Offset = "0x8FF730", VA = "0x8FF730")]
	public Vector3[] getWaypointsVector3()
	{
		return null;
	}

	[Token(Token = "0x6000523")]
	[Address(RVA = "0x8FF738", Offset = "0x8FF738", VA = "0x8FF738")]
	public float getTotalDistance()
	{
		return default(float);
	}

	[Token(Token = "0x6000524")]
	[Address(RVA = "0x8FF740", Offset = "0x8FF740", VA = "0x8FF740")]
	public PathWaypoints()
	{
	}
}
[Token(Token = "0x2000110")]
public class PlayerHit : AimTarget
{
	[Token(Token = "0x2000111")]
	[CompilerGenerated]
	private sealed class <playerHit>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerHit <>4__this;

		[Token(Token = "0x40004F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color <color>5__2;

		[Token(Token = "0x17000042")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000540")]
			[Address(RVA = "0x90153C", Offset = "0x90153C", VA = "0x90153C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000043")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000542")]
			[Address(RVA = "0x901584", Offset = "0x901584", VA = "0x901584", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600053D")]
		[Address(RVA = "0x9006F8", Offset = "0x9006F8", VA = "0x9006F8")]
		[DebuggerHidden]
		public <playerHit>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x600053E")]
		[Address(RVA = "0x9010BC", Offset = "0x9010BC", VA = "0x9010BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600053F")]
		[Address(RVA = "0x9010C0", Offset = "0x9010C0", VA = "0x9010C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000541")]
		[Address(RVA = "0x901544", Offset = "0x901544", VA = "0x901544", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000112")]
	[CompilerGenerated]
	private sealed class <UnsetBulletTimeCoroutine>d__41 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool bShowBulletTimeScreen;

		[Token(Token = "0x40004F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PlayerHit <>4__this;

		[Token(Token = "0x17000044")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000546")]
			[Address(RVA = "0x901718", Offset = "0x901718", VA = "0x901718", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000045")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000548")]
			[Address(RVA = "0x901760", Offset = "0x901760", VA = "0x901760", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000543")]
		[Address(RVA = "0x900E0C", Offset = "0x900E0C", VA = "0x900E0C")]
		[DebuggerHidden]
		public <UnsetBulletTimeCoroutine>d__41(int <>1__state)
		{
		}

		[Token(Token = "0x6000544")]
		[Address(RVA = "0x90158C", Offset = "0x90158C", VA = "0x90158C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000545")]
		[Address(RVA = "0x901590", Offset = "0x901590", VA = "0x901590", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000547")]
		[Address(RVA = "0x901720", Offset = "0x901720", VA = "0x901720", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000113")]
	[CompilerGenerated]
	private sealed class <bulletTimeCoroutine>d__42 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerHit <>4__this;

		[Token(Token = "0x40004FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool bShowBulletTimeScreen;

		[Token(Token = "0x40004FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float bulletTime;

		[Token(Token = "0x17000046")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600054C")]
			[Address(RVA = "0x901A10", Offset = "0x901A10", VA = "0x901A10", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000047")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600054E")]
			[Address(RVA = "0x901A58", Offset = "0x901A58", VA = "0x901A58", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000549")]
		[Address(RVA = "0x900E34", Offset = "0x900E34", VA = "0x900E34")]
		[DebuggerHidden]
		public <bulletTimeCoroutine>d__42(int <>1__state)
		{
		}

		[Token(Token = "0x600054A")]
		[Address(RVA = "0x901768", Offset = "0x901768", VA = "0x901768", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600054B")]
		[Address(RVA = "0x90176C", Offset = "0x90176C", VA = "0x90176C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600054D")]
		[Address(RVA = "0x901A18", Offset = "0x901A18", VA = "0x901A18", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004D7")]
	private const float DAMAGE_SCREEN_FADE_TIME = 0.5f;

	[Token(Token = "0x40004D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	public UnityEvent onLifesUpdated;

	[Token(Token = "0x40004D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public SumalabEvent<Bullet, Ray, RaycastHit> OnPlayerHit;

	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public SumalabEvent OnPlayerDead;

	[Token(Token = "0x40004DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public SumalabEvent OnIncreaseLife;

	[Token(Token = "0x40004DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public SumalabEvent<Vector3> OnExplosion;

	[Token(Token = "0x40004DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public SumalabEvent<Vector3> OnExplosionWave;

	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Line deadLine;

	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private GameObject damageScreen;

	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private GameObject bulletTimeScreen;

	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Renderer damageScreenRenderer;

	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Renderer bulletTimeScreenRenderer;

	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool playerHitActive;

	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private int shotFailed;

	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int shotFailedHitTarget;

	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private int lifes;

	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private int rocketsCount;

	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Coroutine bulletTimeCoroutineHandle;

	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public bool inmortal;

	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
	public bool bulletTimeLocked;

	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private List<AudioSource> audioSourcesTimeScaled;

	[Token(Token = "0x40004EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private AudioSource hit;

	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private AudioSource breathHit;

	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private AudioSource breathDie;

	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Collider[] playerColliders;

	[Token(Token = "0x40004F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool m_bUnvulnerable;

	[Token(Token = "0x6000525")]
	[Address(RVA = "0x8FF748", Offset = "0x8FF748", VA = "0x8FF748")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000526")]
	[Address(RVA = "0x8FF844", Offset = "0x8FF844", VA = "0x8FF844")]
	protected void Start()
	{
	}

	[Token(Token = "0x6000527")]
	[Address(RVA = "0x8FFA90", Offset = "0x8FFA90", VA = "0x8FFA90")]
	private void OnSceneInitialized(int sceneId)
	{
	}

	[Token(Token = "0x6000528")]
	[Address(RVA = "0x8FFD30", Offset = "0x8FFD30", VA = "0x8FFD30", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000529")]
	[Address(RVA = "0x9002EC", Offset = "0x9002EC", VA = "0x9002EC", Slot = "7")]
	public override void OnBulletConsumed(Bullet bullet)
	{
	}

	[Token(Token = "0x600052A")]
	[Address(RVA = "0x900060", Offset = "0x900060", VA = "0x900060")]
	public void killPlayer(bool hit = true, WalkieTalkie.CommunicationEvent gameOverCommunication = WalkieTalkie.CommunicationEvent.game_over)
	{
	}

	[Token(Token = "0x600052B")]
	[Address(RVA = "0x900284", Offset = "0x900284", VA = "0x900284")]
	[IteratorStateMachine(typeof(<playerHit>d__32))]
	private IEnumerator playerHit()
	{
		return null;
	}

	[Token(Token = "0x600052C")]
	[Address(RVA = "0x900720", Offset = "0x900720", VA = "0x900720")]
	public void hideDamageScreen()
	{
	}

	[Token(Token = "0x600052D")]
	[Address(RVA = "0x9007C4", Offset = "0x9007C4", VA = "0x9007C4")]
	public void setUnvulnerable(bool bValue)
	{
	}

	[Token(Token = "0x600052E")]
	[Address(RVA = "0x9007D0", Offset = "0x9007D0", VA = "0x9007D0")]
	public bool isUnvulnerable()
	{
		return default(bool);
	}

	[Token(Token = "0x600052F")]
	[Address(RVA = "0x9007D8", Offset = "0x9007D8", VA = "0x9007D8")]
	public void CancelBulletTime()
	{
	}

	[Token(Token = "0x6000530")]
	[Address(RVA = "0x90082C", Offset = "0x90082C", VA = "0x90082C")]
	public void CancellBulletTimeImpl()
	{
	}

	[Token(Token = "0x6000531")]
	[Address(RVA = "0x900698", Offset = "0x900698", VA = "0x900698")]
	public void bulletTime(float fBulletTime, bool bShowBulletTimeScreen = false)
	{
	}

	[Token(Token = "0x6000532")]
	[Address(RVA = "0x900B08", Offset = "0x900B08", VA = "0x900B08")]
	public void SetBulletTime(bool bShowBulletTimeScreen = false)
	{
	}

	[Token(Token = "0x6000533")]
	[Address(RVA = "0x900CE8", Offset = "0x900CE8", VA = "0x900CE8")]
	public void UnsetBulletTime(bool bShowBulletTimeScreen = false)
	{
	}

	[Token(Token = "0x6000534")]
	[Address(RVA = "0x900D90", Offset = "0x900D90", VA = "0x900D90")]
	[IteratorStateMachine(typeof(<UnsetBulletTimeCoroutine>d__41))]
	private IEnumerator UnsetBulletTimeCoroutine(bool bShowBulletTimeScreen)
	{
		return null;
	}

	[Token(Token = "0x6000535")]
	[Address(RVA = "0x900A7C", Offset = "0x900A7C", VA = "0x900A7C")]
	[IteratorStateMachine(typeof(<bulletTimeCoroutine>d__42))]
	private IEnumerator bulletTimeCoroutine(float bulletTime, bool bShowBulletTimeScreen)
	{
		return null;
	}

	[Token(Token = "0x6000536")]
	[Address(RVA = "0x900920", Offset = "0x900920", VA = "0x900920")]
	private void setAudioSourcesPitch(float pitch)
	{
	}

	[Token(Token = "0x6000537")]
	[Address(RVA = "0x900E5C", Offset = "0x900E5C", VA = "0x900E5C")]
	private void removeHitIndicatorCorroutine()
	{
	}

	[Token(Token = "0x6000538")]
	[Address(RVA = "0x9004A0", Offset = "0x9004A0", VA = "0x9004A0")]
	public void setLifes(int lifes)
	{
	}

	[Token(Token = "0x6000539")]
	[Address(RVA = "0x900ED0", Offset = "0x900ED0", VA = "0x900ED0")]
	public void increaseLife()
	{
	}

	[Token(Token = "0x600053A")]
	[Address(RVA = "0x900EFC", Offset = "0x900EFC", VA = "0x900EFC")]
	public void decreaseLife()
	{
	}

	[Token(Token = "0x600053B")]
	[Address(RVA = "0x900F08", Offset = "0x900F08", VA = "0x900F08")]
	public int getLifes()
	{
		return default(int);
	}

	[Token(Token = "0x600053C")]
	[Address(RVA = "0x900F10", Offset = "0x900F10", VA = "0x900F10")]
	public PlayerHit()
	{
	}
}
[Token(Token = "0x2000114")]
public class PlayerViewerTest : MonoBehaviour
{
	[Token(Token = "0x600054F")]
	[Address(RVA = "0x901A60", Offset = "0x901A60", VA = "0x901A60")]
	private void Start()
	{
	}

	[Token(Token = "0x6000550")]
	[Address(RVA = "0x901A64", Offset = "0x901A64", VA = "0x901A64")]
	private void Update()
	{
	}

	[Token(Token = "0x6000551")]
	[Address(RVA = "0x901A68", Offset = "0x901A68", VA = "0x901A68")]
	public PlayerViewerTest()
	{
	}
}
[Token(Token = "0x2000115")]
public class PruebaMesh : MonoBehaviour
{
	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject originRoot;

	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject targetRoot;

	[Token(Token = "0x6000552")]
	[Address(RVA = "0x901A70", Offset = "0x901A70", VA = "0x901A70")]
	public PruebaMesh()
	{
	}
}
[Token(Token = "0x2000116")]
public class RayCastHitDecalTest : MonoBehaviour
{
	[Token(Token = "0x6000553")]
	[Address(RVA = "0x901A78", Offset = "0x901A78", VA = "0x901A78")]
	private void Start()
	{
	}

	[Token(Token = "0x6000554")]
	[Address(RVA = "0x901A7C", Offset = "0x901A7C", VA = "0x901A7C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000555")]
	[Address(RVA = "0x901BAC", Offset = "0x901BAC", VA = "0x901BAC")]
	public RayCastHitDecalTest()
	{
	}
}
[Token(Token = "0x2000117")]
public class ReadySetGo : MonoBehaviour
{
	[Token(Token = "0x4000500")]
	private const string TAKECOVER = "takecover";

	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip takeCoverSpa;

	[Token(Token = "0x6000556")]
	[Address(RVA = "0x901BB4", Offset = "0x901BB4", VA = "0x901BB4")]
	public void Show()
	{
	}

	[Token(Token = "0x6000557")]
	[Address(RVA = "0x901D5C", Offset = "0x901D5C", VA = "0x901D5C")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000558")]
	[Address(RVA = "0x901D80", Offset = "0x901D80", VA = "0x901D80")]
	public ReadySetGo()
	{
	}
}
[Token(Token = "0x2000118")]
public class ReadySetGoItem : MonoBehaviour
{
	[Token(Token = "0x6000559")]
	[Address(RVA = "0x901D88", Offset = "0x901D88", VA = "0x901D88")]
	private void Start()
	{
	}

	[Token(Token = "0x600055A")]
	[Address(RVA = "0x901D8C", Offset = "0x901D8C", VA = "0x901D8C")]
	private void Update()
	{
	}

	[Token(Token = "0x600055B")]
	[Address(RVA = "0x901D90", Offset = "0x901D90", VA = "0x901D90")]
	public ReadySetGoItem()
	{
	}
}
[Token(Token = "0x2000119")]
public interface RemoteCharacterController
{
	[Token(Token = "0x600055C")]
	void OnHit(Bullet bullet, Ray ray, Rigidbody rb);

	[Token(Token = "0x600055D")]
	void ExecuteAction(int currentAction);

	[Token(Token = "0x600055E")]
	void sendCover(bool v);

	[Token(Token = "0x600055F")]
	void sendSetTarget(Vector3 v);

	[Token(Token = "0x6000560")]
	void sendShowWeaponTakeable(WeaponTakeable weaponTakeable, string name);

	[Token(Token = "0x6000561")]
	void sendPlayPath();
}
[Token(Token = "0x200011A")]
public class ResetTransform : MonoBehaviour
{
	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 initPosition;

	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Quaternion initRotation;

	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool initialise;

	[Token(Token = "0x6000562")]
	[Address(RVA = "0x901D98", Offset = "0x901D98", VA = "0x901D98")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000563")]
	[Address(RVA = "0x901DF0", Offset = "0x901DF0", VA = "0x901DF0")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000564")]
	[Address(RVA = "0x901E50", Offset = "0x901E50", VA = "0x901E50")]
	public ResetTransform()
	{
	}
}
[Token(Token = "0x200011B")]
public class Rotator : MonoBehaviour
{
	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float speedModifier;

	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 rotationAxis;

	[Token(Token = "0x4000508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float currentSpeed;

	[Token(Token = "0x6000565")]
	[Address(RVA = "0x901E58", Offset = "0x901E58", VA = "0x901E58")]
	private void Update()
	{
	}

	[Token(Token = "0x6000566")]
	[Address(RVA = "0x901F1C", Offset = "0x901F1C", VA = "0x901F1C")]
	public Rotator()
	{
	}
}
[Token(Token = "0x200011C")]
public class CharacterAction : MonoBehaviour
{
	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CommonCharacterController character;

	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent OnActionComplete;

	[Token(Token = "0x400050B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool removeOnComplete;

	[Token(Token = "0x400050C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float timeToComplete;

	[Token(Token = "0x400050D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float timeToCompleteRandomEnd;

	[Token(Token = "0x400050E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string idleAnimation;

	[Token(Token = "0x400050F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool applyRootMotionToIdleAnimation;

	[Token(Token = "0x4000510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool aimableDuringAction;

	[Token(Token = "0x6000567")]
	[Address(RVA = "0x901F24", Offset = "0x901F24", VA = "0x901F24")]
	public void setCharacter(CommonCharacterController character)
	{
	}

	[Token(Token = "0x6000568")]
	[Address(RVA = "0x901F2C", Offset = "0x901F2C", VA = "0x901F2C", Slot = "4")]
	public virtual void activate()
	{
	}

	[Token(Token = "0x6000569")]
	[Address(RVA = "0x901F90", Offset = "0x901F90", VA = "0x901F90")]
	private void activateDelay()
	{
	}

	[Token(Token = "0x600056A")]
	[Address(RVA = "0x9020BC", Offset = "0x9020BC", VA = "0x9020BC")]
	private void endAction()
	{
	}

	[Token(Token = "0x600056B")]
	[Address(RVA = "0x9020EC", Offset = "0x9020EC", VA = "0x9020EC", Slot = "5")]
	public virtual void deactivate()
	{
	}

	[Token(Token = "0x600056C")]
	[Address(RVA = "0x9021A0", Offset = "0x9021A0", VA = "0x9021A0", Slot = "6")]
	public virtual void OnTarget()
	{
	}

	[Token(Token = "0x600056D")]
	[Address(RVA = "0x9021A4", Offset = "0x9021A4", VA = "0x9021A4", Slot = "7")]
	public virtual void OnHit()
	{
	}

	[Token(Token = "0x600056E")]
	[Address(RVA = "0x9021A8", Offset = "0x9021A8", VA = "0x9021A8")]
	public CharacterAction()
	{
	}
}
[Token(Token = "0x200011D")]
public class CharacterActionFire : CharacterAction
{
	[Token(Token = "0x200011E")]
	[CompilerGenerated]
	private sealed class <shoot>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400052A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400052B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CharacterActionFire <>4__this;

		[Token(Token = "0x17000048")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000583")]
			[Address(RVA = "0x903798", Offset = "0x903798", VA = "0x903798", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000049")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000585")]
			[Address(RVA = "0x9037E0", Offset = "0x9037E0", VA = "0x9037E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000580")]
		[Address(RVA = "0x902A5C", Offset = "0x902A5C", VA = "0x902A5C")]
		[DebuggerHidden]
		public <shoot>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x6000581")]
		[Address(RVA = "0x903554", Offset = "0x903554", VA = "0x903554", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000582")]
		[Address(RVA = "0x903558", Offset = "0x903558", VA = "0x903558", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000584")]
		[Address(RVA = "0x9037A0", Offset = "0x9037A0", VA = "0x9037A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200011F")]
	[CompilerGenerated]
	private sealed class <cover>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400052C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400052D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400052E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CharacterActionFire <>4__this;

		[Token(Token = "0x400052F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <weaponReloadTime>5__2;

		[Token(Token = "0x1700004A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000589")]
			[Address(RVA = "0x9039D0", Offset = "0x9039D0", VA = "0x9039D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600058B")]
			[Address(RVA = "0x903A18", Offset = "0x903A18", VA = "0x903A18", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000586")]
		[Address(RVA = "0x902A94", Offset = "0x902A94", VA = "0x902A94")]
		[DebuggerHidden]
		public <cover>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x6000587")]
		[Address(RVA = "0x9037E8", Offset = "0x9037E8", VA = "0x9037E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000588")]
		[Address(RVA = "0x9037EC", Offset = "0x9037EC", VA = "0x9037EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600058A")]
		[Address(RVA = "0x9039D8", Offset = "0x9039D8", VA = "0x9039D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000120")]
	[CompilerGenerated]
	private sealed class <setFireAnimation>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CharacterActionFire <>4__this;

		[Token(Token = "0x1700004C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600058F")]
			[Address(RVA = "0x903ED8", Offset = "0x903ED8", VA = "0x903ED8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000591")]
			[Address(RVA = "0x903F20", Offset = "0x903F20", VA = "0x903F20", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600058C")]
		[Address(RVA = "0x902B24", Offset = "0x902B24", VA = "0x902B24")]
		[DebuggerHidden]
		public <setFireAnimation>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x600058D")]
		[Address(RVA = "0x903A20", Offset = "0x903A20", VA = "0x903A20", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600058E")]
		[Address(RVA = "0x903A24", Offset = "0x903A24", VA = "0x903A24", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000590")]
		[Address(RVA = "0x903EE0", Offset = "0x903EE0", VA = "0x903EE0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000121")]
	[CompilerGenerated]
	private sealed class <setCoverAnimationCoroutine>d__31 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CharacterActionFire <>4__this;

		[Token(Token = "0x1700004E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000595")]
			[Address(RVA = "0x90438C", Offset = "0x90438C", VA = "0x90438C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000597")]
			[Address(RVA = "0x9043D4", Offset = "0x9043D4", VA = "0x9043D4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000592")]
		[Address(RVA = "0x902BB4", Offset = "0x902BB4", VA = "0x902BB4")]
		[DebuggerHidden]
		public <setCoverAnimationCoroutine>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x6000593")]
		[Address(RVA = "0x903F28", Offset = "0x903F28", VA = "0x903F28", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000594")]
		[Address(RVA = "0x903F2C", Offset = "0x903F2C", VA = "0x903F2C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000596")]
		[Address(RVA = "0x904394", Offset = "0x904394", VA = "0x904394", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000122")]
	[CompilerGenerated]
	private sealed class <doEndCoroutine>d__36 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CharacterActionFire <>4__this;

		[Token(Token = "0x17000050")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600059B")]
			[Address(RVA = "0x9044D8", Offset = "0x9044D8", VA = "0x9044D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000051")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600059D")]
			[Address(RVA = "0x904520", Offset = "0x904520", VA = "0x904520", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000598")]
		[Address(RVA = "0x903354", Offset = "0x903354", VA = "0x903354")]
		[DebuggerHidden]
		public <doEndCoroutine>d__36(int <>1__state)
		{
		}

		[Token(Token = "0x6000599")]
		[Address(RVA = "0x9043DC", Offset = "0x9043DC", VA = "0x9043DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600059A")]
		[Address(RVA = "0x9043E0", Offset = "0x9043E0", VA = "0x9043E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600059C")]
		[Address(RVA = "0x9044E0", Offset = "0x9044E0", VA = "0x9044E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000123")]
	[CompilerGenerated]
	private sealed class <forceCoverCoroutine>d__38 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400053A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400053B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CharacterActionFire <>4__this;

		[Token(Token = "0x17000052")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005A1")]
			[Address(RVA = "0x9045FC", Offset = "0x9045FC", VA = "0x9045FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000053")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005A3")]
			[Address(RVA = "0x904644", Offset = "0x904644", VA = "0x904644", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600059E")]
		[Address(RVA = "0x9034C4", Offset = "0x9034C4", VA = "0x9034C4")]
		[DebuggerHidden]
		public <forceCoverCoroutine>d__38(int <>1__state)
		{
		}

		[Token(Token = "0x600059F")]
		[Address(RVA = "0x904528", Offset = "0x904528", VA = "0x904528", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005A0")]
		[Address(RVA = "0x90452C", Offset = "0x90452C", VA = "0x90452C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005A2")]
		[Address(RVA = "0x904604", Offset = "0x904604", VA = "0x904604", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float ACCURACY_BROKEN_DISTANCE;

	[Token(Token = "0x4000512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float minAccuracy;

	[Token(Token = "0x4000513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float targetChangeProbability;

	[Token(Token = "0x4000514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static float MIN_COVER_TIME;

	[Token(Token = "0x4000515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static float MAX_COVER_TIME;

	[Token(Token = "0x4000516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static float SET_TARGET_DELAY;

	[Token(Token = "0x4000517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<AimTarget> targets;

	[Token(Token = "0x4000518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public CoverAnimation coverAnimation;

	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string fireAnimation;

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string hideAnimation;

	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float coverTime;

	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float currentAccuracy;

	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int currentTarget;

	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Vector3 lastEnemyAimTargetPosition;

	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Transform enemyAimTarget;

	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private WeaponData weaponData;

	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool fire;

	[Token(Token = "0x4000522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
	private bool hasTargets;

	[Token(Token = "0x4000523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9A")]
	public bool isCover;

	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9B")]
	private bool forceCover;

	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private bool bEnd;

	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float startDelay;

	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public bool forceActive;

	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA5")]
	public bool coverDisabled;

	[Token(Token = "0x600056F")]
	[Address(RVA = "0x902208", Offset = "0x902208", VA = "0x902208", Slot = "5")]
	public override void deactivate()
	{
	}

	[Token(Token = "0x6000570")]
	[Address(RVA = "0x9022F8", Offset = "0x9022F8", VA = "0x9022F8", Slot = "4")]
	public override void activate()
	{
	}

	[Token(Token = "0x6000571")]
	[Address(RVA = "0x90236C", Offset = "0x90236C", VA = "0x90236C")]
	private void _activate()
	{
	}

	[Token(Token = "0x6000572")]
	[Address(RVA = "0x90298C", Offset = "0x90298C", VA = "0x90298C")]
	[IteratorStateMachine(typeof(<shoot>d__27))]
	private IEnumerator shoot()
	{
		return null;
	}

	[Token(Token = "0x6000573")]
	[Address(RVA = "0x902A84", Offset = "0x902A84", VA = "0x902A84")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000574")]
	[Address(RVA = "0x9029F4", Offset = "0x9029F4", VA = "0x9029F4")]
	[IteratorStateMachine(typeof(<cover>d__29))]
	private IEnumerator cover()
	{
		return null;
	}

	[Token(Token = "0x6000575")]
	[Address(RVA = "0x902ABC", Offset = "0x902ABC", VA = "0x902ABC")]
	[IteratorStateMachine(typeof(<setFireAnimation>d__30))]
	private IEnumerator setFireAnimation()
	{
		return null;
	}

	[Token(Token = "0x6000576")]
	[Address(RVA = "0x902B4C", Offset = "0x902B4C", VA = "0x902B4C")]
	[IteratorStateMachine(typeof(<setCoverAnimationCoroutine>d__31))]
	private IEnumerator setCoverAnimationCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000577")]
	[Address(RVA = "0x902BDC", Offset = "0x902BDC", VA = "0x902BDC")]
	private bool findAimableTarget()
	{
		return default(bool);
	}

	[Token(Token = "0x6000578")]
	[Address(RVA = "0x902CA0", Offset = "0x902CA0", VA = "0x902CA0")]
	private float setTarget()
	{
		return default(float);
	}

	[Token(Token = "0x6000579")]
	[Address(RVA = "0x902614", Offset = "0x902614", VA = "0x902614")]
	private void updateAimTargets()
	{
	}

	[Token(Token = "0x600057A")]
	[Address(RVA = "0x9032CC", Offset = "0x9032CC", VA = "0x9032CC")]
	private void doEnd()
	{
	}

	[Token(Token = "0x600057B")]
	[Address(RVA = "0x9032EC", Offset = "0x9032EC", VA = "0x9032EC")]
	[IteratorStateMachine(typeof(<doEndCoroutine>d__36))]
	private IEnumerator doEndCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600057C")]
	[Address(RVA = "0x90337C", Offset = "0x90337C", VA = "0x90337C", Slot = "6")]
	public override void OnTarget()
	{
	}

	[Token(Token = "0x600057D")]
	[Address(RVA = "0x90345C", Offset = "0x90345C", VA = "0x90345C")]
	[IteratorStateMachine(typeof(<forceCoverCoroutine>d__38))]
	private IEnumerator forceCoverCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600057E")]
	[Address(RVA = "0x9034EC", Offset = "0x9034EC", VA = "0x9034EC")]
	public CharacterActionFire()
	{
	}
}
[Token(Token = "0x2000124")]
public enum CoverAnimation
{
	[Token(Token = "0x400053D")]
	Crouch,
	[Token(Token = "0x400053E")]
	LowCrouch,
	[Token(Token = "0x400053F")]
	ColumnLeft,
	[Token(Token = "0x4000540")]
	ColumnRight,
	[Token(Token = "0x4000541")]
	PeekRight,
	[Token(Token = "0x4000542")]
	PeekLeft,
	[Token(Token = "0x4000543")]
	None
}
[Token(Token = "0x2000125")]
public class CharacterActionGoTo : CharacterAction
{
	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float RUN_SPEED;

	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static float STRAFE_SPEED;

	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public MoveAnimation moveAnimation;

	[Token(Token = "0x4000547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ThiefPoliceController moveOnDeadCharacter;

	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float duration;

	[Token(Token = "0x4000549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 lastPosition;

	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool active;

	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	public bool debugAutoActivate;

	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float startDelay;

	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool forceActive;

	[Token(Token = "0x60005A4")]
	[Address(RVA = "0x90464C", Offset = "0x90464C", VA = "0x90464C")]
	private void Start()
	{
	}

	[Token(Token = "0x60005A5")]
	[Address(RVA = "0x904664", Offset = "0x904664", VA = "0x904664", Slot = "4")]
	public override void activate()
	{
	}

	[Token(Token = "0x60005A6")]
	[Address(RVA = "0x9046D8", Offset = "0x9046D8", VA = "0x9046D8")]
	private void _activate()
	{
	}

	[Token(Token = "0x60005A7")]
	[Address(RVA = "0x9048B8", Offset = "0x9048B8", VA = "0x9048B8", Slot = "5")]
	public override void deactivate()
	{
	}

	[Token(Token = "0x60005A8")]
	[Address(RVA = "0x9048E8", Offset = "0x9048E8", VA = "0x9048E8")]
	private void Update()
	{
	}

	[Token(Token = "0x60005A9")]
	[Address(RVA = "0x90480C", Offset = "0x90480C", VA = "0x90480C")]
	private void startAction()
	{
	}

	[Token(Token = "0x60005AA")]
	[Address(RVA = "0x904AB4", Offset = "0x904AB4", VA = "0x904AB4")]
	private void startActionImpl()
	{
	}

	[Token(Token = "0x60005AB")]
	[Address(RVA = "0x904EB0", Offset = "0x904EB0", VA = "0x904EB0")]
	private void OnPathComplete()
	{
	}

	[Token(Token = "0x60005AC")]
	[Address(RVA = "0x904DE4", Offset = "0x904DE4", VA = "0x904DE4")]
	private void setDuration(DOTweenPath pathData)
	{
	}

	[Token(Token = "0x60005AD")]
	[Address(RVA = "0x905004", Offset = "0x905004", VA = "0x905004")]
	public float getDuration()
	{
		return default(float);
	}

	[Token(Token = "0x60005AE")]
	[Address(RVA = "0x905060", Offset = "0x905060", VA = "0x905060")]
	public CharacterActionGoTo()
	{
	}
}
[Token(Token = "0x2000126")]
public enum MoveAnimation
{
	[Token(Token = "0x400054F")]
	Run,
	[Token(Token = "0x4000550")]
	Strafe
}
[Token(Token = "0x2000127")]
[RequireComponent(typeof(CharacterActionNew))]
public class CharacterActionModule : MonoBehaviour
{
	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public UnityEvent OnComplete;

	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected CommonCharacterController character;

	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected bool active;

	[Token(Token = "0x60005B0")]
	[Address(RVA = "0x9050B4", Offset = "0x9050B4", VA = "0x9050B4", Slot = "4")]
	public virtual void Activate(CommonCharacterController character)
	{
	}

	[Token(Token = "0x60005B1")]
	[Address(RVA = "0x9050C4", Offset = "0x9050C4", VA = "0x9050C4", Slot = "5")]
	public virtual void Deactivate()
	{
	}

	[Token(Token = "0x60005B2")]
	[Address(RVA = "0x905110", Offset = "0x905110", VA = "0x905110", Slot = "6")]
	protected virtual void Complete()
	{
	}

	[Token(Token = "0x60005B3")]
	[Address(RVA = "0x905144", Offset = "0x905144", VA = "0x905144", Slot = "7")]
	public virtual void OnTarget()
	{
	}

	[Token(Token = "0x60005B4")]
	[Address(RVA = "0x905148", Offset = "0x905148", VA = "0x905148")]
	public bool isActive()
	{
		return default(bool);
	}

	[Token(Token = "0x60005B5")]
	[Address(RVA = "0x905150", Offset = "0x905150", VA = "0x905150", Slot = "8")]
	public virtual void reloadModule()
	{
	}

	[Token(Token = "0x60005B6")]
	[Address(RVA = "0x905154", Offset = "0x905154", VA = "0x905154")]
	public CharacterActionModule()
	{
	}
}
[Token(Token = "0x2000128")]
public class CharacterActionNew : MonoBehaviour
{
	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public UnityEvent OnComplete;

	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CommonCharacterController character;

	[Token(Token = "0x4000556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public CharacterActionModule characterActionModule;

	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public CommonCharacterController[] startActionOnDead;

	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool removeOnComplete;

	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool aimableDuringAction;

	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	public bool characterActiveBeforeStartAction;

	[Token(Token = "0x400055B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float startDelay;

	[Token(Token = "0x400055C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float timeToComplete;

	[Token(Token = "0x400055D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float timeToCompleteRandomEnd;

	[Token(Token = "0x400055E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool actionActive;

	[Token(Token = "0x400055F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float characterDeads;

	[Token(Token = "0x60005B7")]
	[Address(RVA = "0x90515C", Offset = "0x90515C", VA = "0x90515C")]
	public void Execute()
	{
	}

	[Token(Token = "0x60005B8")]
	[Address(RVA = "0x905508", Offset = "0x905508", VA = "0x905508")]
	public void Stop()
	{
	}

	[Token(Token = "0x60005B9")]
	[Address(RVA = "0x90567C", Offset = "0x90567C", VA = "0x90567C")]
	private void Complete()
	{
	}

	[Token(Token = "0x60005BA")]
	[Address(RVA = "0x9057A4", Offset = "0x9057A4", VA = "0x9057A4")]
	public void OnTarget()
	{
	}

	[Token(Token = "0x60005BB")]
	[Address(RVA = "0x905830", Offset = "0x905830", VA = "0x905830")]
	public bool isActive()
	{
		return default(bool);
	}

	[Token(Token = "0x60005BC")]
	[Address(RVA = "0x905838", Offset = "0x905838", VA = "0x905838")]
	private void OnCharacterDead()
	{
	}

	[Token(Token = "0x60005BD")]
	[Address(RVA = "0x9054A0", Offset = "0x9054A0", VA = "0x9054A0")]
	private void startAction()
	{
	}

	[Token(Token = "0x60005BE")]
	[Address(RVA = "0x905878", Offset = "0x905878", VA = "0x905878")]
	private void startActionDelay()
	{
	}

	[Token(Token = "0x60005BF")]
	[Address(RVA = "0x905A6C", Offset = "0x905A6C", VA = "0x905A6C")]
	public void reloadAction()
	{
	}

	[Token(Token = "0x60005C0")]
	[Address(RVA = "0x905C1C", Offset = "0x905C1C", VA = "0x905C1C")]
	private void TimeReached()
	{
	}

	[Token(Token = "0x60005C1")]
	[Address(RVA = "0x905D6C", Offset = "0x905D6C", VA = "0x905D6C")]
	public CharacterActionNew()
	{
	}
}
[Token(Token = "0x2000129")]
public class CharacterActionTakeHostage : CharacterAction
{
	[Token(Token = "0x4000560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public HostageController victim;

	[Token(Token = "0x4000561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<OverwriteAnimTransform> takeHostageTransforms;

	[Token(Token = "0x4000562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<OverwriteAnimTransform> fireTransforms;

	[Token(Token = "0x4000563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool isTakingHostage;

	[Token(Token = "0x4000564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool active;

	[Token(Token = "0x4000565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	public bool killingHostage;

	[Token(Token = "0x4000566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private WeaponData weaponData;

	[Token(Token = "0x60005C2")]
	[Address(RVA = "0x905D84", Offset = "0x905D84", VA = "0x905D84")]
	private void Update()
	{
	}

	[Token(Token = "0x60005C3")]
	[Address(RVA = "0x905ECC", Offset = "0x905ECC", VA = "0x905ECC", Slot = "4")]
	public override void activate()
	{
	}

	[Token(Token = "0x60005C4")]
	[Address(RVA = "0x90633C", Offset = "0x90633C", VA = "0x90633C", Slot = "5")]
	public override void deactivate()
	{
	}

	[Token(Token = "0x60005C5")]
	[Address(RVA = "0x905FB4", Offset = "0x905FB4", VA = "0x905FB4")]
	private void takeHostage(bool enable)
	{
	}

	[Token(Token = "0x60005C6")]
	[Address(RVA = "0x90642C", Offset = "0x90642C", VA = "0x90642C", Slot = "6")]
	public override void OnTarget()
	{
	}

	[Token(Token = "0x60005C7")]
	[Address(RVA = "0x9064E0", Offset = "0x9064E0", VA = "0x9064E0")]
	private void killHostage()
	{
	}

	[Token(Token = "0x60005C8")]
	[Address(RVA = "0x90663C", Offset = "0x90663C", VA = "0x90663C")]
	public CharacterActionTakeHostage()
	{
	}
}
[Token(Token = "0x200012A")]
public class CharacterHelicopterWaypoint : CharacterWaypoint
{
	[Token(Token = "0x4000567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Office_Helicopter helicopter;

	[Token(Token = "0x60005C9")]
	[Address(RVA = "0x9066D8", Offset = "0x9066D8", VA = "0x9066D8", Slot = "4")]
	public override MoveModule.MoveMode getMoveMode(CommonCharacterController character)
	{
		return default(MoveModule.MoveMode);
	}

	[Token(Token = "0x60005CA")]
	[Address(RVA = "0x906748", Offset = "0x906748", VA = "0x906748")]
	public CharacterHelicopterWaypoint()
	{
	}
}
[Token(Token = "0x200012B")]
public class CharacterWaypoint : MonoBehaviour
{
	[Token(Token = "0x4000568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool stopFire;

	[Token(Token = "0x4000569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool overrideMoveMode;

	[Token(Token = "0x400056A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public MoveModule.MoveMode moveMode;

	[Token(Token = "0x400056B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float minStopTime;

	[Token(Token = "0x400056C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float maxStopTime;

	[Token(Token = "0x60005CB")]
	[Address(RVA = "0x906758", Offset = "0x906758", VA = "0x906758", Slot = "4")]
	public virtual MoveModule.MoveMode getMoveMode(CommonCharacterController character)
	{
		return default(MoveModule.MoveMode);
	}

	[Token(Token = "0x60005CC")]
	[Address(RVA = "0x906750", Offset = "0x906750", VA = "0x906750")]
	public CharacterWaypoint()
	{
	}
}
[Token(Token = "0x200012C")]
public class FireModule : CharacterActionModule
{
	[Token(Token = "0x200012D")]
	public enum CoverAnimation
	{
		[Token(Token = "0x4000585")]
		Crouch,
		[Token(Token = "0x4000586")]
		LowCrouch,
		[Token(Token = "0x4000587")]
		ColumnFireL,
		[Token(Token = "0x4000588")]
		ColumnFireR
	}

	[Token(Token = "0x200012E")]
	[CompilerGenerated]
	private sealed class <startFireModulueCoroutine>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400058A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400058B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FireModule <>4__this;

		[Token(Token = "0x17000054")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005E8")]
			[Address(RVA = "0x9085FC", Offset = "0x9085FC", VA = "0x9085FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000055")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005EA")]
			[Address(RVA = "0x908644", Offset = "0x908644", VA = "0x908644", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005E5")]
		[Address(RVA = "0x906B44", Offset = "0x906B44", VA = "0x906B44")]
		[DebuggerHidden]
		public <startFireModulueCoroutine>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x60005E6")]
		[Address(RVA = "0x9084D8", Offset = "0x9084D8", VA = "0x9084D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005E7")]
		[Address(RVA = "0x9084DC", Offset = "0x9084DC", VA = "0x9084DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005E9")]
		[Address(RVA = "0x908604", Offset = "0x908604", VA = "0x908604", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200012F")]
	[CompilerGenerated]
	private sealed class <shootAlways>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400058C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400058D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400058E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FireModule <>4__this;

		[Token(Token = "0x17000056")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005EE")]
			[Address(RVA = "0x908870", Offset = "0x908870", VA = "0x908870", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000057")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005F0")]
			[Address(RVA = "0x9088B8", Offset = "0x9088B8", VA = "0x9088B8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005EB")]
		[Address(RVA = "0x907B60", Offset = "0x907B60", VA = "0x907B60")]
		[DebuggerHidden]
		public <shootAlways>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x60005EC")]
		[Address(RVA = "0x90864C", Offset = "0x90864C", VA = "0x90864C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005ED")]
		[Address(RVA = "0x908650", Offset = "0x908650", VA = "0x908650", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005EF")]
		[Address(RVA = "0x908878", Offset = "0x908878", VA = "0x908878", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000130")]
	[CompilerGenerated]
	private sealed class <shoot>d__34 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400058F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FireModule <>4__this;

		[Token(Token = "0x17000058")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005F4")]
			[Address(RVA = "0x908A60", Offset = "0x908A60", VA = "0x908A60", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000059")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005F6")]
			[Address(RVA = "0x908AA8", Offset = "0x908AA8", VA = "0x908AA8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005F1")]
		[Address(RVA = "0x907B88", Offset = "0x907B88", VA = "0x907B88")]
		[DebuggerHidden]
		public <shoot>d__34(int <>1__state)
		{
		}

		[Token(Token = "0x60005F2")]
		[Address(RVA = "0x9088C0", Offset = "0x9088C0", VA = "0x9088C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005F3")]
		[Address(RVA = "0x9088C4", Offset = "0x9088C4", VA = "0x9088C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005F5")]
		[Address(RVA = "0x908A68", Offset = "0x908A68", VA = "0x908A68", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000131")]
	[CompilerGenerated]
	private sealed class <cover>d__36 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FireModule <>4__this;

		[Token(Token = "0x4000595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <weaponReloadTime>5__2;

		[Token(Token = "0x1700005A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005FA")]
			[Address(RVA = "0x908C50", Offset = "0x908C50", VA = "0x908C50", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005FC")]
			[Address(RVA = "0x908C98", Offset = "0x908C98", VA = "0x908C98", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005F7")]
		[Address(RVA = "0x907DB0", Offset = "0x907DB0", VA = "0x907DB0")]
		[DebuggerHidden]
		public <cover>d__36(int <>1__state)
		{
		}

		[Token(Token = "0x60005F8")]
		[Address(RVA = "0x908AB0", Offset = "0x908AB0", VA = "0x908AB0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005F9")]
		[Address(RVA = "0x908AB4", Offset = "0x908AB4", VA = "0x908AB4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005FB")]
		[Address(RVA = "0x908C58", Offset = "0x908C58", VA = "0x908C58", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000132")]
	[CompilerGenerated]
	private sealed class <setFireAnimation>d__39 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FireModule <>4__this;

		[Token(Token = "0x1700005C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000600")]
			[Address(RVA = "0x908E98", Offset = "0x908E98", VA = "0x908E98", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000602")]
			[Address(RVA = "0x908EE0", Offset = "0x908EE0", VA = "0x908EE0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005FD")]
		[Address(RVA = "0x907EE8", Offset = "0x907EE8", VA = "0x907EE8")]
		[DebuggerHidden]
		public <setFireAnimation>d__39(int <>1__state)
		{
		}

		[Token(Token = "0x60005FE")]
		[Address(RVA = "0x908CA0", Offset = "0x908CA0", VA = "0x908CA0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005FF")]
		[Address(RVA = "0x908CA4", Offset = "0x908CA4", VA = "0x908CA4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000601")]
		[Address(RVA = "0x908EA0", Offset = "0x908EA0", VA = "0x908EA0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000133")]
	[CompilerGenerated]
	private sealed class <setCoverAnimation>d__40 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400059A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400059B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FireModule <>4__this;

		[Token(Token = "0x1700005E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000606")]
			[Address(RVA = "0x909070", Offset = "0x909070", VA = "0x909070", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000608")]
			[Address(RVA = "0x9090B8", Offset = "0x9090B8", VA = "0x9090B8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000603")]
		[Address(RVA = "0x907F10", Offset = "0x907F10", VA = "0x907F10")]
		[DebuggerHidden]
		public <setCoverAnimation>d__40(int <>1__state)
		{
		}

		[Token(Token = "0x6000604")]
		[Address(RVA = "0x908EE8", Offset = "0x908EE8", VA = "0x908EE8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000605")]
		[Address(RVA = "0x908EEC", Offset = "0x908EEC", VA = "0x908EEC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000607")]
		[Address(RVA = "0x909078", Offset = "0x909078", VA = "0x909078", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400056D")]
	private const float ACCURACY_BROKEN_DISTANCE = 0.5f;

	[Token(Token = "0x400056E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float minAccuracy;

	[Token(Token = "0x400056F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float targetChangeProbability;

	[Token(Token = "0x4000570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float minCoverTime;

	[Token(Token = "0x4000571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float maxCoverTime;

	[Token(Token = "0x4000572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool fireOnStart;

	[Token(Token = "0x4000573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	public bool alwaysShooting;

	[Token(Token = "0x4000574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
	public bool ignoreTime;

	[Token(Token = "0x4000575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<AimTarget> targets;

	[Token(Token = "0x4000576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public CoverAnimation coverAnimation;

	[Token(Token = "0x4000577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float coverRotation;

	[Token(Token = "0x4000578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool completeTargets;

	[Token(Token = "0x4000579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private ThiefPoliceController thiefPolice;

	[Token(Token = "0x400057A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 lastEnemyAimTargetPosition;

	[Token(Token = "0x400057B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Transform enemyAimTarget;

	[Token(Token = "0x400057C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private WeaponData weaponData;

	[Token(Token = "0x400057D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float currentCoverTime;

	[Token(Token = "0x400057E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float currentAccuracy;

	[Token(Token = "0x400057F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int currentTarget;

	[Token(Token = "0x4000580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool readyToFire;

	[Token(Token = "0x4000581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8D")]
	private bool isCover;

	[Token(Token = "0x4000582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8E")]
	private bool forceCover;

	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int coverAnimationHash;

	[Token(Token = "0x60005CD")]
	[Address(RVA = "0x906760", Offset = "0x906760", VA = "0x906760", Slot = "4")]
	public override void Activate(CommonCharacterController character)
	{
	}

	[Token(Token = "0x60005CE")]
	[Address(RVA = "0x906970", Offset = "0x906970", VA = "0x906970")]
	[IteratorStateMachine(typeof(<startFireModulueCoroutine>d__25))]
	private IEnumerator startFireModulueCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60005CF")]
	[Address(RVA = "0x9069D8", Offset = "0x9069D8", VA = "0x9069D8")]
	private void startFireModule()
	{
	}

	[Token(Token = "0x60005D0")]
	[Address(RVA = "0x906FEC", Offset = "0x906FEC", VA = "0x906FEC")]
	private void startFiring()
	{
	}

	[Token(Token = "0x60005D1")]
	[Address(RVA = "0x9077C8", Offset = "0x9077C8", VA = "0x9077C8", Slot = "6")]
	protected override void Complete()
	{
	}

	[Token(Token = "0x60005D2")]
	[Address(RVA = "0x907860", Offset = "0x907860", VA = "0x907860", Slot = "5")]
	public override void Deactivate()
	{
	}

	[Token(Token = "0x60005D3")]
	[Address(RVA = "0x9078F8", Offset = "0x9078F8", VA = "0x9078F8", Slot = "7")]
	public override void OnTarget()
	{
	}

	[Token(Token = "0x60005D4")]
	[Address(RVA = "0x90798C", Offset = "0x90798C", VA = "0x90798C")]
	public void fire()
	{
	}

	[Token(Token = "0x60005D5")]
	[Address(RVA = "0x907A8C", Offset = "0x907A8C", VA = "0x907A8C")]
	public void stopFire()
	{
	}

	[Token(Token = "0x60005D6")]
	[Address(RVA = "0x907690", Offset = "0x907690", VA = "0x907690")]
	[IteratorStateMachine(typeof(<shootAlways>d__33))]
	private IEnumerator shootAlways()
	{
		return null;
	}

	[Token(Token = "0x60005D7")]
	[Address(RVA = "0x9076F8", Offset = "0x9076F8", VA = "0x9076F8")]
	[IteratorStateMachine(typeof(<shoot>d__34))]
	private IEnumerator shoot()
	{
		return null;
	}

	[Token(Token = "0x60005D8")]
	[Address(RVA = "0x907BB0", Offset = "0x907BB0", VA = "0x907BB0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60005D9")]
	[Address(RVA = "0x907760", Offset = "0x907760", VA = "0x907760")]
	[IteratorStateMachine(typeof(<cover>d__36))]
	private IEnumerator cover()
	{
		return null;
	}

	[Token(Token = "0x60005DA")]
	[Address(RVA = "0x907DD8", Offset = "0x907DD8", VA = "0x907DD8")]
	public void startFireAnimation()
	{
	}

	[Token(Token = "0x60005DB")]
	[Address(RVA = "0x907E60", Offset = "0x907E60", VA = "0x907E60")]
	public void startCoverAnimation()
	{
	}

	[Token(Token = "0x60005DC")]
	[Address(RVA = "0x907DF8", Offset = "0x907DF8", VA = "0x907DF8")]
	[IteratorStateMachine(typeof(<setFireAnimation>d__39))]
	private IEnumerator setFireAnimation()
	{
		return null;
	}

	[Token(Token = "0x60005DD")]
	[Address(RVA = "0x907E80", Offset = "0x907E80", VA = "0x907E80")]
	[IteratorStateMachine(typeof(<setCoverAnimation>d__40))]
	private IEnumerator setCoverAnimation()
	{
		return null;
	}

	[Token(Token = "0x60005DE")]
	[Address(RVA = "0x907F38", Offset = "0x907F38", VA = "0x907F38")]
	public void setTarget(Vector3 target)
	{
	}

	[Token(Token = "0x60005DF")]
	[Address(RVA = "0x907F74", Offset = "0x907F74", VA = "0x907F74")]
	private bool selectRandomTarget()
	{
		return default(bool);
	}

	[Token(Token = "0x60005E0")]
	[Address(RVA = "0x90724C", Offset = "0x90724C", VA = "0x90724C")]
	private float setTarget()
	{
		return default(float);
	}

	[Token(Token = "0x60005E1")]
	[Address(RVA = "0x906B6C", Offset = "0x906B6C", VA = "0x906B6C")]
	private void updateAimTargets()
	{
	}

	[Token(Token = "0x60005E2")]
	[Address(RVA = "0x908220", Offset = "0x908220", VA = "0x908220")]
	public static void addTarget(AimTarget t, List<AimTarget> targets)
	{
	}

	[Token(Token = "0x60005E3")]
	[Address(RVA = "0x9082F0", Offset = "0x9082F0", VA = "0x9082F0", Slot = "8")]
	public override void reloadModule()
	{
	}

	[Token(Token = "0x60005E4")]
	[Address(RVA = "0x9084A8", Offset = "0x9084A8", VA = "0x9084A8")]
	public FireModule()
	{
	}
}
[Token(Token = "0x2000134")]
public class IdleModule : CharacterActionModule
{
	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool hideCharacter;

	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string anim;

	[Token(Token = "0x6000609")]
	[Address(RVA = "0x9090C0", Offset = "0x9090C0", VA = "0x9090C0", Slot = "4")]
	public override void Activate(CommonCharacterController character)
	{
	}

	[Token(Token = "0x600060A")]
	[Address(RVA = "0x909278", Offset = "0x909278", VA = "0x909278")]
	private void setAnim()
	{
	}

	[Token(Token = "0x600060B")]
	[Address(RVA = "0x90931C", Offset = "0x90931C", VA = "0x90931C")]
	private void Update()
	{
	}

	[Token(Token = "0x600060C")]
	[Address(RVA = "0x909320", Offset = "0x909320", VA = "0x909320")]
	public IdleModule()
	{
	}
}
[Token(Token = "0x2000135")]
[RequireComponent(typeof(BezierSolution.BezierSpline))]
public class MoveModule : CharacterActionModule
{
	[Token(Token = "0x2000136")]
	public enum MoveMode
	{
		[Token(Token = "0x40005AE")]
		Crouch,
		[Token(Token = "0x40005AF")]
		Walk,
		[Token(Token = "0x40005B0")]
		Strafe,
		[Token(Token = "0x40005B1")]
		Run
	}

	[Token(Token = "0x2000137")]
	[CompilerGenerated]
	private sealed class <Move>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoveModule <>4__this;

		[Token(Token = "0x40005B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<Vector3> waypoints;

		[Token(Token = "0x17000060")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600061C")]
			[Address(RVA = "0x90A3F8", Offset = "0x90A3F8", VA = "0x90A3F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000061")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600061E")]
			[Address(RVA = "0x90A440", Offset = "0x90A440", VA = "0x90A440", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000619")]
		[Address(RVA = "0x909728", Offset = "0x909728", VA = "0x909728")]
		[DebuggerHidden]
		public <Move>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x600061A")]
		[Address(RVA = "0x90A14C", Offset = "0x90A14C", VA = "0x90A14C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600061B")]
		[Address(RVA = "0x90A150", Offset = "0x90A150", VA = "0x90A150", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600061D")]
		[Address(RVA = "0x90A400", Offset = "0x90A400", VA = "0x90A400", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400059E")]
	private const float WALK_SPEED = 1.5f;

	[Token(Token = "0x400059F")]
	private const float RUN_SPEED = 4.5f;

	[Token(Token = "0x40005A0")]
	private const float CROUCH_SPEED = 1f;

	[Token(Token = "0x40005A1")]
	private const float BASE_SPEED = 1f;

	[Token(Token = "0x40005A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int loops;

	[Token(Token = "0x40005A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float overrideSpeed;

	[Token(Token = "0x40005A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public MoveMode moveMode;

	[Token(Token = "0x40005A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected List<BezierPoint> bezierPoints;

	[Token(Token = "0x40005A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected Tween path;

	[Token(Token = "0x40005A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected float speed;

	[Token(Token = "0x40005A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	protected float animationSpeed;

	[Token(Token = "0x40005A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected float currentAnimationSpeed;

	[Token(Token = "0x40005AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	protected bool complete;

	[Token(Token = "0x40005AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public FireModule fireModule;

	[Token(Token = "0x40005AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int moveAnimationHash;

	[Token(Token = "0x600060D")]
	[Address(RVA = "0x909328", Offset = "0x909328", VA = "0x909328", Slot = "4")]
	public override void Activate(CommonCharacterController character)
	{
	}

	[Token(Token = "0x600060E")]
	[Address(RVA = "0x9096B4", Offset = "0x9096B4", VA = "0x9096B4")]
	[IteratorStateMachine(typeof(<Move>d__17))]
	private IEnumerator Move(List<Vector3> waypoints)
	{
		return null;
	}

	[Token(Token = "0x600060F")]
	[Address(RVA = "0x909750", Offset = "0x909750", VA = "0x909750", Slot = "9")]
	protected virtual void onWaypointChanged(int waypointIndex)
	{
	}

	[Token(Token = "0x6000610")]
	[Address(RVA = "0x9099C0", Offset = "0x9099C0", VA = "0x9099C0")]
	private void PausePath()
	{
	}

	[Token(Token = "0x6000611")]
	[Address(RVA = "0x909A08", Offset = "0x909A08", VA = "0x909A08")]
	public void PlayPath()
	{
	}

	[Token(Token = "0x6000612")]
	[Address(RVA = "0x909AD4", Offset = "0x909AD4", VA = "0x909AD4", Slot = "5")]
	public override void Deactivate()
	{
	}

	[Token(Token = "0x6000613")]
	[Address(RVA = "0x909C14", Offset = "0x909C14", VA = "0x909C14", Slot = "6")]
	protected override void Complete()
	{
	}

	[Token(Token = "0x6000614")]
	[Address(RVA = "0x909CEC", Offset = "0x909CEC", VA = "0x909CEC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000615")]
	[Address(RVA = "0x909EF0", Offset = "0x909EF0", VA = "0x909EF0", Slot = "10")]
	protected virtual void setMoveMode(MoveMode moveMode)
	{
	}

	[Token(Token = "0x6000616")]
	[Address(RVA = "0x90A03C", Offset = "0x90A03C", VA = "0x90A03C", Slot = "8")]
	public override void reloadModule()
	{
	}

	[Token(Token = "0x6000617")]
	[Address(RVA = "0x90A130", Offset = "0x90A130", VA = "0x90A130")]
	public MoveModule()
	{
	}
}
[Token(Token = "0x2000138")]
public class MoveOldModule : CharacterActionModule
{
	[Token(Token = "0x2000139")]
	[CompilerGenerated]
	private sealed class <Move>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoveOldModule <>4__this;

		[Token(Token = "0x40005BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public DOTweenPath pathData;

		[Token(Token = "0x17000062")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000629")]
			[Address(RVA = "0x90AE6C", Offset = "0x90AE6C", VA = "0x90AE6C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000063")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600062B")]
			[Address(RVA = "0x90AEB4", Offset = "0x90AEB4", VA = "0x90AEB4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000626")]
		[Address(RVA = "0x90A8B8", Offset = "0x90A8B8", VA = "0x90A8B8")]
		[DebuggerHidden]
		public <Move>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000627")]
		[Address(RVA = "0x90AB88", Offset = "0x90AB88", VA = "0x90AB88", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000628")]
		[Address(RVA = "0x90AB8C", Offset = "0x90AB8C", VA = "0x90AB8C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600062A")]
		[Address(RVA = "0x90AE74", Offset = "0x90AE74", VA = "0x90AE74", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float RUN_SPEED;

	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 lastPosition;

	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int moveAnimationHash;

	[Token(Token = "0x600061F")]
	[Address(RVA = "0x90A448", Offset = "0x90A448", VA = "0x90A448", Slot = "4")]
	public override void Activate(CommonCharacterController character)
	{
	}

	[Token(Token = "0x6000620")]
	[Address(RVA = "0x90A844", Offset = "0x90A844", VA = "0x90A844")]
	[IteratorStateMachine(typeof(<Move>d__4))]
	private IEnumerator Move(DOTweenPath pathData)
	{
		return null;
	}

	[Token(Token = "0x6000621")]
	[Address(RVA = "0x90A8E0", Offset = "0x90A8E0", VA = "0x90A8E0", Slot = "5")]
	public override void Deactivate()
	{
	}

	[Token(Token = "0x6000622")]
	[Address(RVA = "0x90A9A4", Offset = "0x90A9A4", VA = "0x90A9A4", Slot = "6")]
	protected override void Complete()
	{
	}

	[Token(Token = "0x6000623")]
	[Address(RVA = "0x90AA68", Offset = "0x90AA68", VA = "0x90AA68")]
	private void OnPathComplete()
	{
	}

	[Token(Token = "0x6000624")]
	[Address(RVA = "0x90AB34", Offset = "0x90AB34", VA = "0x90AB34")]
	public MoveOldModule()
	{
	}
}
[Token(Token = "0x200013A")]
[RequireComponent(typeof(BezierSolution.BezierSpline))]
public class MovePoliceStationModule : MoveModule
{
	[Token(Token = "0x40005BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public SkinnedMeshRenderer[] skins;

	[Token(Token = "0x40005BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private SkinnedMeshRenderer currentSkin;

	[Token(Token = "0x600062C")]
	[Address(RVA = "0x90AEBC", Offset = "0x90AEBC", VA = "0x90AEBC", Slot = "4")]
	public override void Activate(CommonCharacterController character)
	{
	}

	[Token(Token = "0x600062D")]
	[Address(RVA = "0x90AFC4", Offset = "0x90AFC4", VA = "0x90AFC4", Slot = "9")]
	protected override void onWaypointChanged(int waypointIndex)
	{
	}

	[Token(Token = "0x600062E")]
	[Address(RVA = "0x90B098", Offset = "0x90B098", VA = "0x90B098")]
	private void changeSkin()
	{
	}

	[Token(Token = "0x600062F")]
	[Address(RVA = "0x90B120", Offset = "0x90B120", VA = "0x90B120")]
	public MovePoliceStationModule()
	{
	}
}
[Token(Token = "0x200013B")]
public class RPGModule : CharacterActionModule
{
	[Token(Token = "0x40005BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ThiefPoliceController thiefPolice;

	[Token(Token = "0x40005C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool readyToFire;

	[Token(Token = "0x40005C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float fireDelay;

	[Token(Token = "0x40005C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform target;

	[Token(Token = "0x6000630")]
	[Address(RVA = "0x90B130", Offset = "0x90B130", VA = "0x90B130", Slot = "4")]
	public override void Activate(CommonCharacterController character)
	{
	}

	[Token(Token = "0x6000631")]
	[Address(RVA = "0x90B324", Offset = "0x90B324", VA = "0x90B324")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000632")]
	[Address(RVA = "0x90B41C", Offset = "0x90B41C", VA = "0x90B41C")]
	private void fire()
	{
	}

	[Token(Token = "0x6000633")]
	[Address(RVA = "0x90B44C", Offset = "0x90B44C", VA = "0x90B44C")]
	internal void setTarget(Vector3 target)
	{
	}

	[Token(Token = "0x6000634")]
	[Address(RVA = "0x90B50C", Offset = "0x90B50C", VA = "0x90B50C")]
	public RPGModule()
	{
	}
}
[Token(Token = "0x200013C")]
public class TakeHostageModule : CharacterActionModule
{
	[Token(Token = "0x40005C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public HostageController victim;

	[Token(Token = "0x40005C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ThiefPoliceController thiefPolice;

	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool isTakingHostage;

	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool killingHostage;

	[Token(Token = "0x6000635")]
	[Address(RVA = "0x90B51C", Offset = "0x90B51C", VA = "0x90B51C", Slot = "4")]
	public override void Activate(CommonCharacterController character)
	{
	}

	[Token(Token = "0x6000636")]
	[Address(RVA = "0x90B840", Offset = "0x90B840", VA = "0x90B840", Slot = "6")]
	protected override void Complete()
	{
	}

	[Token(Token = "0x6000637")]
	[Address(RVA = "0x90B8A0", Offset = "0x90B8A0", VA = "0x90B8A0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000638")]
	[Address(RVA = "0x90B5E0", Offset = "0x90B5E0", VA = "0x90B5E0")]
	private void takeHostage(bool enable)
	{
	}

	[Token(Token = "0x6000639")]
	[Address(RVA = "0x90B8E0", Offset = "0x90B8E0", VA = "0x90B8E0", Slot = "7")]
	public override void OnTarget()
	{
	}

	[Token(Token = "0x600063A")]
	[Address(RVA = "0x90B950", Offset = "0x90B950", VA = "0x90B950")]
	private void killHostage()
	{
	}

	[Token(Token = "0x600063B")]
	[Address(RVA = "0x90BAB0", Offset = "0x90BAB0", VA = "0x90BAB0")]
	public TakeHostageModule()
	{
	}
}
[Token(Token = "0x200013D")]
public class CharacterData : MonoBehaviour
{
	[Token(Token = "0x40005C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CommonCharacterController character;

	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool debug;

	[Token(Token = "0x600063C")]
	[Address(RVA = "0x90BAB8", Offset = "0x90BAB8", VA = "0x90BAB8")]
	public void Start()
	{
	}

	[Token(Token = "0x600063D")]
	[Address(RVA = "0x90BAF4", Offset = "0x90BAF4", VA = "0x90BAF4", Slot = "4")]
	public virtual void setCharacterActions()
	{
	}

	[Token(Token = "0x600063E")]
	[Address(RVA = "0x90BD04", Offset = "0x90BD04", VA = "0x90BD04")]
	public CharacterData()
	{
	}
}
[Token(Token = "0x200013E")]
public class CharacterMeshSetter : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200013F")]
	public class CharacterTemplate
	{
		[Token(Token = "0x40005CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SkinnedMeshRenderer[] skinnedMesh;

		[Token(Token = "0x40005CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MeshRenderer[] meshRenderer;

		[Token(Token = "0x40005CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SkinnedMeshRenderer[] heads;

		[Token(Token = "0x6000643")]
		[Address(RVA = "0x90C518", Offset = "0x90C518", VA = "0x90C518")]
		public CharacterTemplate()
		{
		}
	}

	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CharacterTemplate[] templates;

	[Token(Token = "0x600063F")]
	[Address(RVA = "0x90BD0C", Offset = "0x90BD0C", VA = "0x90BD0C")]
	public void SetCharactersRandom()
	{
	}

	[Token(Token = "0x6000640")]
	[Address(RVA = "0x90C238", Offset = "0x90C238", VA = "0x90C238")]
	private bool isParent(string name, Transform obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000641")]
	[Address(RVA = "0x90C2EC", Offset = "0x90C2EC", VA = "0x90C2EC")]
	public void test()
	{
	}

	[Token(Token = "0x6000642")]
	[Address(RVA = "0x90C510", Offset = "0x90C510", VA = "0x90C510")]
	public CharacterMeshSetter()
	{
	}
}
[Token(Token = "0x2000140")]
public class EnemySpawner : MonoBehaviour
{
	[Token(Token = "0x40005CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PoliceThiefData[] enemySpawn;

	[Token(Token = "0x40005CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<PoliceThiefData> spawnsPool;

	[Token(Token = "0x40005CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float startDelay;

	[Token(Token = "0x40005D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float spawnDelay;

	[Token(Token = "0x40005D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int maxSpawns;

	[Token(Token = "0x40005D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SceneData sceneData;

	[Token(Token = "0x40005D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private System.Random randomGenerator;

	[Token(Token = "0x40005D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int currentEnemy;

	[Token(Token = "0x6000644")]
	[Address(RVA = "0x90C520", Offset = "0x90C520", VA = "0x90C520")]
	private void Start()
	{
	}

	[Token(Token = "0x6000645")]
	[Address(RVA = "0x90C660", Offset = "0x90C660", VA = "0x90C660")]
	public void Init(SceneData sceneData)
	{
	}

	[Token(Token = "0x6000646")]
	[Address(RVA = "0x90C6C0", Offset = "0x90C6C0", VA = "0x90C6C0")]
	public void Finish()
	{
	}

	[Token(Token = "0x6000647")]
	[Address(RVA = "0x90C604", Offset = "0x90C604", VA = "0x90C604")]
	private void Prewarm()
	{
	}

	[Token(Token = "0x6000648")]
	[Address(RVA = "0x90C870", Offset = "0x90C870", VA = "0x90C870")]
	private void CreateSpawns(PoliceThiefData data)
	{
	}

	[Token(Token = "0x6000649")]
	[Address(RVA = "0x90C938", Offset = "0x90C938", VA = "0x90C938")]
	private PoliceThiefData createSpawn(PoliceThiefData data)
	{
		return null;
	}

	[Token(Token = "0x600064A")]
	[Address(RVA = "0x90D1D4", Offset = "0x90D1D4", VA = "0x90D1D4")]
	private PoliceThiefData getSpawn()
	{
		return null;
	}

	[Token(Token = "0x600064B")]
	[Address(RVA = "0x90CB8C", Offset = "0x90CB8C", VA = "0x90CB8C")]
	public string getCurrentEnemyName(GameObject enemy)
	{
		return null;
	}

	[Token(Token = "0x600064C")]
	[Address(RVA = "0x90D3D0", Offset = "0x90D3D0", VA = "0x90D3D0")]
	private void SpawnEnemy()
	{
	}

	[Token(Token = "0x600064D")]
	[Address(RVA = "0x90D698", Offset = "0x90D698", VA = "0x90D698")]
	private bool SpawnIsAllowed()
	{
		return default(bool);
	}

	[Token(Token = "0x600064E")]
	[Address(RVA = "0x90D75C", Offset = "0x90D75C", VA = "0x90D75C")]
	public EnemySpawner()
	{
	}
}
[Token(Token = "0x2000141")]
public class EnemySpawnerController : MonoBehaviour
{
	[Token(Token = "0x40005D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EnemySpawner[] spawners;

	[Token(Token = "0x40005D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int spawns;

	[Token(Token = "0x40005D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool startAuto;

	[Token(Token = "0x40005D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SceneData sceneData;

	[Token(Token = "0x600064F")]
	[Address(RVA = "0x90D7E0", Offset = "0x90D7E0", VA = "0x90D7E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000650")]
	[Address(RVA = "0x90D950", Offset = "0x90D950", VA = "0x90D950")]
	public void StartSpawners()
	{
	}

	[Token(Token = "0x6000651")]
	[Address(RVA = "0x90D9F0", Offset = "0x90D9F0", VA = "0x90D9F0")]
	public void FinishSpawners()
	{
	}

	[Token(Token = "0x6000652")]
	[Address(RVA = "0x90DA4C", Offset = "0x90DA4C", VA = "0x90DA4C")]
	private void OnSceneInitialised(int sceneId)
	{
	}

	[Token(Token = "0x6000653")]
	[Address(RVA = "0x90DA78", Offset = "0x90DA78", VA = "0x90DA78")]
	private void OnSceneDeactivate(int sceneId)
	{
	}

	[Token(Token = "0x6000654")]
	[Address(RVA = "0x90DAA4", Offset = "0x90DAA4", VA = "0x90DAA4")]
	public EnemySpawnerController()
	{
	}
}
[Token(Token = "0x2000142")]
public class NextSceneButton : HitTarget
{
	[Token(Token = "0x40005D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public NextSceneData nextSceneData;

	[Token(Token = "0x40005DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public SceneAction[] sceneActions;

	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool bHitImpl;

	[Token(Token = "0x6000655")]
	[Address(RVA = "0x90DAB4", Offset = "0x90DAB4", VA = "0x90DAB4", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000656")]
	[Address(RVA = "0x90DCEC", Offset = "0x90DCEC", VA = "0x90DCEC")]
	public void OnHitImpl()
	{
	}

	[Token(Token = "0x6000657")]
	[Address(RVA = "0x90E098", Offset = "0x90E098", VA = "0x90E098")]
	public void Show()
	{
	}

	[Token(Token = "0x6000658")]
	[Address(RVA = "0x90E3DC", Offset = "0x90E3DC", VA = "0x90E3DC")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000659")]
	[Address(RVA = "0x90E418", Offset = "0x90E418", VA = "0x90E418")]
	public NextSceneButton()
	{
	}
}
[Token(Token = "0x2000144")]
public class NextSceneData : MonoBehaviour
{
	[Token(Token = "0x2000145")]
	[CompilerGenerated]
	private sealed class <movePlayerToNextScene>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NextSceneData <>4__this;

		[Token(Token = "0x40005E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform <playerPositions>5__2;

		[Token(Token = "0x40005E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <i>5__3;

		[Token(Token = "0x17000064")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000669")]
			[Address(RVA = "0x90F520", Offset = "0x90F520", VA = "0x90F520", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000065")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600066B")]
			[Address(RVA = "0x90F568", Offset = "0x90F568", VA = "0x90F568", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000666")]
		[Address(RVA = "0x90E724", Offset = "0x90E724", VA = "0x90E724")]
		[DebuggerHidden]
		public <movePlayerToNextScene>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000667")]
		[Address(RVA = "0x90ED4C", Offset = "0x90ED4C", VA = "0x90ED4C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000668")]
		[Address(RVA = "0x90ED50", Offset = "0x90ED50", VA = "0x90ED50", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600066A")]
		[Address(RVA = "0x90F528", Offset = "0x90F528", VA = "0x90F528", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SceneData nextScene;

	[Token(Token = "0x600065C")]
	[Address(RVA = "0x90DE10", Offset = "0x90DE10", VA = "0x90DE10")]
	public void Activate()
	{
	}

	[Token(Token = "0x600065D")]
	[Address(RVA = "0x90E520", Offset = "0x90E520", VA = "0x90E520")]
	private void overriteReadySetGoPosition()
	{
	}

	[Token(Token = "0x600065E")]
	[Address(RVA = "0x90E4B8", Offset = "0x90E4B8", VA = "0x90E4B8")]
	[IteratorStateMachine(typeof(<movePlayerToNextScene>d__3))]
	private IEnumerator movePlayerToNextScene()
	{
		return null;
	}

	[Token(Token = "0x600065F")]
	[Address(RVA = "0x90E74C", Offset = "0x90E74C", VA = "0x90E74C")]
	public Transform getPlayerPositions()
	{
		return null;
	}

	[Token(Token = "0x6000660")]
	[Address(RVA = "0x90E944", Offset = "0x90E944", VA = "0x90E944", Slot = "4")]
	protected virtual void OnFirstFade()
	{
	}

	[Token(Token = "0x6000661")]
	[Address(RVA = "0x90E964", Offset = "0x90E964", VA = "0x90E964", Slot = "5")]
	protected virtual float getFadeTime(int fadeIndex)
	{
		return default(float);
	}

	[Token(Token = "0x6000662")]
	[Address(RVA = "0x90E96C", Offset = "0x90E96C", VA = "0x90E96C", Slot = "6")]
	protected virtual void OnComplete()
	{
	}

	[Token(Token = "0x6000663")]
	[Address(RVA = "0x90E9E4", Offset = "0x90E9E4", VA = "0x90E9E4")]
	public void startSceneForDebug()
	{
	}

	[Token(Token = "0x6000664")]
	[Address(RVA = "0x90ECA4", Offset = "0x90ECA4", VA = "0x90ECA4")]
	private float getPlayerPointDuration(Vector3 point, Vector3 nextPoint)
	{
		return default(float);
	}

	[Token(Token = "0x6000665")]
	[Address(RVA = "0x90ED44", Offset = "0x90ED44", VA = "0x90ED44")]
	public NextSceneData()
	{
	}
}
[Token(Token = "0x2000146")]
public class NextScenePlayerPosition : MonoBehaviour
{
	[Token(Token = "0x40005E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float timeToNextPosition;

	[Token(Token = "0x40005E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool activateNextScene;

	[Token(Token = "0x600066C")]
	[Address(RVA = "0x90F570", Offset = "0x90F570", VA = "0x90F570")]
	public NextScenePlayerPosition()
	{
	}
}
[Token(Token = "0x2000147")]
public class PoliceStation : SceneData
{
	[Token(Token = "0x40005E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform playerTransform;

	[Token(Token = "0x40005E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool menuButtonDown;

	[Token(Token = "0x40005E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	private bool initialised;

	[Token(Token = "0x600066D")]
	[Address(RVA = "0x90F578", Offset = "0x90F578", VA = "0x90F578", Slot = "4")]
	public override void initialise()
	{
	}

	[Token(Token = "0x600066E")]
	[Address(RVA = "0x90F65C", Offset = "0x90F65C", VA = "0x90F65C", Slot = "5")]
	public override void activate()
	{
	}

	[Token(Token = "0x600066F")]
	[Address(RVA = "0x90F9D4", Offset = "0x90F9D4", VA = "0x90F9D4", Slot = "7")]
	public override void deactivate()
	{
	}

	[Token(Token = "0x6000670")]
	[Address(RVA = "0x90F9D8", Offset = "0x90F9D8", VA = "0x90F9D8")]
	public PoliceStation()
	{
	}
}
[Token(Token = "0x2000148")]
public class PoliceThiefData : MonoBehaviour
{
	[Token(Token = "0x40005E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ThiefPoliceController character;

	[Token(Token = "0x40005EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool debug;

	[Token(Token = "0x6000671")]
	[Address(RVA = "0x90FA98", Offset = "0x90FA98", VA = "0x90FA98")]
	public void Start()
	{
	}

	[Token(Token = "0x6000672")]
	[Address(RVA = "0x90CD88", Offset = "0x90CD88", VA = "0x90CD88")]
	public void setCharacterActions()
	{
	}

	[Token(Token = "0x6000673")]
	[Address(RVA = "0x90FACC", Offset = "0x90FACC", VA = "0x90FACC")]
	public PoliceThiefData()
	{
	}
}
[Token(Token = "0x2000149")]
public class PseudoRandomGenerator
{
	[Token(Token = "0x40005EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int m_iCurrentRandom;

	[Token(Token = "0x40005EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float[] m_adRandomArray;

	[Token(Token = "0x6000674")]
	[Address(RVA = "0x90FAD4", Offset = "0x90FAD4", VA = "0x90FAD4")]
	public void init(int seed, int size)
	{
	}

	[Token(Token = "0x6000675")]
	[Address(RVA = "0x90FC98", Offset = "0x90FC98", VA = "0x90FC98")]
	public bool isInitialized()
	{
		return default(bool);
	}

	[Token(Token = "0x6000676")]
	[Address(RVA = "0x90FBA0", Offset = "0x90FBA0", VA = "0x90FBA0")]
	internal void log()
	{
	}

	[Token(Token = "0x6000677")]
	[Address(RVA = "0x90FCA8", Offset = "0x90FCA8", VA = "0x90FCA8")]
	public int Range(int min, int max)
	{
		return default(int);
	}

	[Token(Token = "0x6000678")]
	[Address(RVA = "0x90FDD4", Offset = "0x90FDD4", VA = "0x90FDD4")]
	public PseudoRandomGenerator()
	{
	}
}
[Token(Token = "0x200014A")]
public class SceneAction : MonoBehaviour
{
	[Token(Token = "0x40005ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent OnComplete;

	[Token(Token = "0x6000679")]
	[Address(RVA = "0x90FDDC", Offset = "0x90FDDC", VA = "0x90FDDC", Slot = "4")]
	public virtual void executeAction()
	{
	}

	[Token(Token = "0x600067A")]
	[Address(RVA = "0x90FDE0", Offset = "0x90FDE0", VA = "0x90FDE0")]
	public SceneAction()
	{
	}
}
[Serializable]
[Token(Token = "0x200014B")]
public class SceneEvent : UnityEvent<int>
{
	[Token(Token = "0x600067B")]
	[Address(RVA = "0x90FDE8", Offset = "0x90FDE8", VA = "0x90FDE8")]
	public SceneEvent()
	{
	}
}
[Token(Token = "0x200014C")]
public class SceneData : MonoBehaviour
{
	[Token(Token = "0x200014D")]
	[CompilerGenerated]
	private sealed class <test>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SceneData <>4__this;

		[Token(Token = "0x17000066")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000691")]
			[Address(RVA = "0x911A64", Offset = "0x911A64", VA = "0x911A64", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000067")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000693")]
			[Address(RVA = "0x911AAC", Offset = "0x911AAC", VA = "0x911AAC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600068E")]
		[Address(RVA = "0x910BB4", Offset = "0x910BB4", VA = "0x910BB4")]
		[DebuggerHidden]
		public <test>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x600068F")]
		[Address(RVA = "0x9115A4", Offset = "0x9115A4", VA = "0x9115A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000690")]
		[Address(RVA = "0x9115A8", Offset = "0x9115A8", VA = "0x9115A8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000692")]
		[Address(RVA = "0x911A6C", Offset = "0x911A6C", VA = "0x911A6C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int SceneId;

	[Token(Token = "0x40005EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public PoliceThiefData[] policesThievesData;

	[Token(Token = "0x40005F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public CharacterData[] hostagesData;

	[Token(Token = "0x40005F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public NextSceneButton[] nextSceneButtons;

	[Token(Token = "0x40005F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int thiefCount;

	[Token(Token = "0x40005F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int thiefDeads;

	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int policeCount;

	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int policeDeads;

	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SceneEvent OnSceneInitialise;

	[Token(Token = "0x40005F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public SceneEvent OnPreSceneInitialise;

	[Token(Token = "0x40005F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static SceneEvent OnSceneActive;

	[Token(Token = "0x40005F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static SceneEvent OnSceneDeactivate;

	[Token(Token = "0x40005FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AmbientSoundType ambientSound;

	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float musicOffset;

	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool masterClientScenefinished;

	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int enemySpawns;

	[Token(Token = "0x40005FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public SceneAction sceneActiveAction;

	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public OnlineSceneModifier onlineSceneModifier;

	[Token(Token = "0x600067C")]
	[Address(RVA = "0x90FE30", Offset = "0x90FE30", VA = "0x90FE30", Slot = "4")]
	public virtual void initialise()
	{
	}

	[Token(Token = "0x600067D")]
	[Address(RVA = "0x910264", Offset = "0x910264", VA = "0x910264", Slot = "5")]
	public virtual void activate()
	{
	}

	[Token(Token = "0x600067E")]
	[Address(RVA = "0x9108BC", Offset = "0x9108BC", VA = "0x9108BC")]
	private void prepareReadySetGoPosition()
	{
	}

	[Token(Token = "0x600067F")]
	[Address(RVA = "0x910A7C", Offset = "0x910A7C", VA = "0x910A7C", Slot = "6")]
	public virtual void activateCompleted()
	{
	}

	[Token(Token = "0x6000680")]
	[Address(RVA = "0x910B4C", Offset = "0x910B4C", VA = "0x910B4C")]
	[IteratorStateMachine(typeof(<test>d__22))]
	private IEnumerator test()
	{
		return null;
	}

	[Token(Token = "0x6000681")]
	[Address(RVA = "0x910BDC", Offset = "0x910BDC", VA = "0x910BDC")]
	private void waitForMoaningUserToBeAwareOfTheSituation()
	{
	}

	[Token(Token = "0x6000682")]
	[Address(RVA = "0x910CEC", Offset = "0x910CEC", VA = "0x910CEC", Slot = "7")]
	public virtual void deactivate()
	{
	}

	[Token(Token = "0x6000683")]
	[Address(RVA = "0x9110D0", Offset = "0x9110D0", VA = "0x9110D0", Slot = "8")]
	protected virtual void OnThiefDead()
	{
	}

	[Token(Token = "0x6000684")]
	[Address(RVA = "0x911398", Offset = "0x911398", VA = "0x911398")]
	private void OnPoliceDead()
	{
	}

	[Token(Token = "0x6000685")]
	[Address(RVA = "0x90F4C4", Offset = "0x90F4C4", VA = "0x90F4C4")]
	public void hideNextSceneButtons()
	{
	}

	[Token(Token = "0x6000686")]
	[Address(RVA = "0x911038", Offset = "0x911038", VA = "0x911038")]
	private void showNextSceneButtons()
	{
	}

	[Token(Token = "0x6000687")]
	[Address(RVA = "0x911414", Offset = "0x911414", VA = "0x911414")]
	private void communication()
	{
	}

	[Token(Token = "0x6000688")]
	[Address(RVA = "0x90D9D4", Offset = "0x90D9D4", VA = "0x90D9D4")]
	public void setSpawns(int spawns)
	{
	}

	[Token(Token = "0x6000689")]
	[Address(RVA = "0x90D6B4", Offset = "0x90D6B4", VA = "0x90D6B4")]
	public bool SpawnIsAllowed()
	{
		return default(bool);
	}

	[Token(Token = "0x600068A")]
	[Address(RVA = "0x90D6C4", Offset = "0x90D6C4", VA = "0x90D6C4")]
	public void RegisterEnemy(ThiefPoliceController enemy)
	{
	}

	[Token(Token = "0x600068B")]
	[Address(RVA = "0x9114EC", Offset = "0x9114EC", VA = "0x9114EC", Slot = "9")]
	public virtual void onlinePlayerBecomesMainClient()
	{
	}

	[Token(Token = "0x600068C")]
	[Address(RVA = "0x90FA2C", Offset = "0x90FA2C", VA = "0x90FA2C")]
	public SceneData()
	{
	}
}
[Token(Token = "0x200014E")]
public class ScoreData
{
	[Token(Token = "0x4000603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int THIEF_DEADS_MULTIPLIER;

	[Token(Token = "0x4000604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int HEADSHOTS_MULTIPLIER;

	[Token(Token = "0x4000605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int POLICE_DEADS_MULTIPLIER;

	[Token(Token = "0x4000606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static int FRIENDLYFIRE_MULTIPLIER;

	[Token(Token = "0x4000607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static int HOSTAGE_DEADS_MULTIPLIER;

	[Token(Token = "0x4000608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private static int HOSTAGE_SAVED_MULTIPLIER;

	[Token(Token = "0x4000609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static int USED_BULLETS_MULTIPLIER;

	[Token(Token = "0x400060A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private static int EXPLODE_BOMBS;

	[Token(Token = "0x400060B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static int SCENE_COMPLETE;

	[Token(Token = "0x400060C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static int MISSION_COMPLETE;

	[Token(Token = "0x400060D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static int HELL_LEVEL_MULTIPLIER;

	[Token(Token = "0x400060E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private static int TIME_MAX_POINTS;

	[Token(Token = "0x400060F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static int TROMP_DEAD;

	[Token(Token = "0x4000610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int thiefDeads;

	[Token(Token = "0x4000611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int thiefHeadshots;

	[Token(Token = "0x4000612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int policeDeads;

	[Token(Token = "0x4000613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int friendlyFire;

	[Token(Token = "0x4000614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int hostageDeads;

	[Token(Token = "0x4000615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int hostageSaved;

	[Token(Token = "0x4000616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int usedBullets;

	[Token(Token = "0x4000617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int scenesCompleted;

	[Token(Token = "0x4000618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float timeToComplete;

	[Token(Token = "0x4000619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool bombsExploded;

	[Token(Token = "0x400061A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool trompDead;

	[Token(Token = "0x400061B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
	public bool gameOver;

	[Token(Token = "0x400061C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Skill.GameLevel gameLevel;

	[Token(Token = "0x400061D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public GameScene gameScene;

	[Token(Token = "0x400061E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int totalScore;

	[Token(Token = "0x6000694")]
	[Address(RVA = "0x911AB4", Offset = "0x911AB4", VA = "0x911AB4")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000695")]
	[Address(RVA = "0x911AD0", Offset = "0x911AD0", VA = "0x911AD0")]
	public bool isClear()
	{
		return default(bool);
	}

	[Token(Token = "0x6000696")]
	[Address(RVA = "0x911B28", Offset = "0x911B28", VA = "0x911B28")]
	public int getTotalScore()
	{
		return default(int);
	}

	[Token(Token = "0x6000697")]
	[Address(RVA = "0x911DAC", Offset = "0x911DAC", VA = "0x911DAC")]
	public ScoreData()
	{
	}
}
[Token(Token = "0x200014F")]
public class ShootingGallery : SceneData
{
	[Token(Token = "0x2000152")]
	[CompilerGenerated]
	private sealed class <playRandomSounds>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ShootingGallery <>4__this;

		[Token(Token = "0x17000068")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006AC")]
			[Address(RVA = "0x913204", Offset = "0x913204", VA = "0x913204", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000069")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006AE")]
			[Address(RVA = "0x91324C", Offset = "0x91324C", VA = "0x91324C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006A9")]
		[Address(RVA = "0x912E88", Offset = "0x912E88", VA = "0x912E88")]
		[DebuggerHidden]
		public <playRandomSounds>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x60006AA")]
		[Address(RVA = "0x913064", Offset = "0x913064", VA = "0x913064", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006AB")]
		[Address(RVA = "0x913068", Offset = "0x913068", VA = "0x913068", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006AD")]
		[Address(RVA = "0x91320C", Offset = "0x91320C", VA = "0x91320C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400061F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform playerTransform;

	[Token(Token = "0x4000620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float gameDuration;

	[Token(Token = "0x4000621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ShootingGalleryButton startButton;

	[Token(Token = "0x4000622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public ShootingGalleryButton distanceButton;

	[Token(Token = "0x4000623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public ShootingTarget shootingTarget;

	[Token(Token = "0x4000624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Transform[] otherShootingTarget;

	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform otherShootingPositions;

	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public TextMeshPro currentScore;

	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public TextMeshPro highestScore;

	[Token(Token = "0x4000628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public AudioClip ringtone;

	[Token(Token = "0x4000629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public AudioClip startSound;

	[Token(Token = "0x400062A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public AudioClip errorStartSound;

	[Token(Token = "0x400062B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Radio radio;

	[Token(Token = "0x400062C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private AudioSource audioSource;

	[Token(Token = "0x400062D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private bool initialized;

	[Token(Token = "0x400062E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
	private bool inGame;

	[Token(Token = "0x400062F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE2")]
	private bool ringtonePlayed;

	[Token(Token = "0x6000699")]
	[Address(RVA = "0x911E2C", Offset = "0x911E2C", VA = "0x911E2C", Slot = "4")]
	public override void initialise()
	{
	}

	[Token(Token = "0x600069A")]
	[Address(RVA = "0x9123A4", Offset = "0x9123A4", VA = "0x9123A4", Slot = "5")]
	public override void activate()
	{
	}

	[Token(Token = "0x600069B")]
	[Address(RVA = "0x9126E8", Offset = "0x9126E8", VA = "0x9126E8", Slot = "7")]
	public override void deactivate()
	{
	}

	[Token(Token = "0x600069C")]
	[Address(RVA = "0x91272C", Offset = "0x91272C", VA = "0x91272C")]
	public void addPoints(int points)
	{
	}

	[Token(Token = "0x600069D")]
	[Address(RVA = "0x9127F8", Offset = "0x9127F8", VA = "0x9127F8")]
	private void startGame()
	{
	}

	[Token(Token = "0x600069E")]
	[Address(RVA = "0x912DB0", Offset = "0x912DB0", VA = "0x912DB0")]
	private void _startGame()
	{
	}

	[Token(Token = "0x600069F")]
	[Address(RVA = "0x912AC4", Offset = "0x912AC4", VA = "0x912AC4")]
	private void endGame()
	{
	}

	[Token(Token = "0x60006A0")]
	[Address(RVA = "0x912E18", Offset = "0x912E18", VA = "0x912E18")]
	private void setTargetDistance()
	{
	}

	[Token(Token = "0x60006A1")]
	[Address(RVA = "0x912680", Offset = "0x912680", VA = "0x912680")]
	[IteratorStateMachine(typeof(<playRandomSounds>d__25))]
	private IEnumerator playRandomSounds()
	{
		return null;
	}

	[Token(Token = "0x60006A2")]
	[Address(RVA = "0x912EB0", Offset = "0x912EB0", VA = "0x912EB0")]
	public ShootingGallery()
	{
	}
}
[Token(Token = "0x2000153")]
public class SpawnerController : MonoBehaviour
{
	[Token(Token = "0x4000637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int enemySpawns;

	[Token(Token = "0x60006AF")]
	[Address(RVA = "0x913254", Offset = "0x913254", VA = "0x913254")]
	private void Start()
	{
	}

	[Token(Token = "0x60006B0")]
	[Address(RVA = "0x913258", Offset = "0x913258", VA = "0x913258")]
	private void Update()
	{
	}

	[Token(Token = "0x60006B1")]
	[Address(RVA = "0x91325C", Offset = "0x91325C", VA = "0x91325C")]
	public SpawnerController()
	{
	}
}
[Token(Token = "0x2000154")]
public class SceneHide : MonoBehaviour
{
	[Token(Token = "0x4000638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool Street;

	[Token(Token = "0x4000639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool Hall;

	[Token(Token = "0x400063A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool MeetingRoom;

	[Token(Token = "0x400063B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool TellerService;

	[Token(Token = "0x400063C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool Office;

	[Token(Token = "0x400063D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool HallDesk;

	[Token(Token = "0x400063E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	public bool OfficeSecondFloor;

	[Token(Token = "0x400063F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	public bool SecondFloor;

	[Token(Token = "0x4000640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool JewelsRoom;

	[Token(Token = "0x4000641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool BusRoom;

	[Token(Token = "0x4000642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool SafeRoom;

	[Token(Token = "0x4000643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	public bool SafeRoomInside;

	[Token(Token = "0x60006B2")]
	[Address(RVA = "0x913264", Offset = "0x913264", VA = "0x913264")]
	public bool getBool(int sceneId)
	{
		return default(bool);
	}

	[Token(Token = "0x60006B3")]
	[Address(RVA = "0x9132F8", Offset = "0x9132F8", VA = "0x9132F8")]
	public SceneHide()
	{
	}
}
[Token(Token = "0x2000155")]
public class SceneSelectionForDebug : MonoBehaviour
{
	[Token(Token = "0x4000644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool keysPressed;

	[Token(Token = "0x4000645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool autoReloading;

	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool PlayerImmortal;

	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool autoConnectRandom;

	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SceneSelectionForDebug Instance;

	[Token(Token = "0x4000649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private PlayerHit playerHit;

	[Token(Token = "0x60006B4")]
	[Address(RVA = "0x913300", Offset = "0x913300", VA = "0x913300")]
	private void Start()
	{
	}

	[Token(Token = "0x60006B5")]
	[Address(RVA = "0x913674", Offset = "0x913674", VA = "0x913674")]
	public void startScene(int sceneId)
	{
	}

	[Token(Token = "0x60006B6")]
	[Address(RVA = "0x9138A0", Offset = "0x9138A0", VA = "0x9138A0")]
	private void ButtonEventHandler(Button button)
	{
	}

	[Token(Token = "0x60006B7")]
	[Address(RVA = "0x913C4C", Offset = "0x913C4C", VA = "0x913C4C")]
	private void playerColliders(bool enable)
	{
	}

	[Token(Token = "0x60006B8")]
	[Address(RVA = "0x913D2C", Offset = "0x913D2C", VA = "0x913D2C")]
	private void Update()
	{
	}

	[Token(Token = "0x60006B9")]
	[Address(RVA = "0x913E50", Offset = "0x913E50", VA = "0x913E50")]
	private void updateKeysPressed()
	{
	}

	[Token(Token = "0x60006BA")]
	[Address(RVA = "0x91405C", Offset = "0x91405C", VA = "0x91405C")]
	private void toggleDebugEnable()
	{
	}

	[Token(Token = "0x60006BB")]
	[Address(RVA = "0x913630", Offset = "0x913630", VA = "0x913630")]
	private void setDebugEnable(bool enable)
	{
	}

	[Token(Token = "0x60006BC")]
	[Address(RVA = "0x9140E8", Offset = "0x9140E8", VA = "0x9140E8")]
	private bool isDebugEnable()
	{
		return default(bool);
	}

	[Token(Token = "0x60006BD")]
	[Address(RVA = "0x914124", Offset = "0x914124", VA = "0x914124")]
	public SceneSelectionForDebug()
	{
	}
}
[Token(Token = "0x2000158")]
public class ScoreManager : MonoBehaviour
{
	[Token(Token = "0x400064E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ScoreManager Instance;

	[Token(Token = "0x400064F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ScoreData scoreData;

	[Token(Token = "0x60006C4")]
	[Address(RVA = "0x914350", Offset = "0x914350", VA = "0x914350")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006C5")]
	[Address(RVA = "0x914488", Offset = "0x914488", VA = "0x914488")]
	public ScoreData getScoreData()
	{
		return null;
	}

	[Token(Token = "0x60006C6")]
	[Address(RVA = "0x914490", Offset = "0x914490", VA = "0x914490")]
	public void setGameLevel(Skill.GameLevel gameLevel)
	{
	}

	[Token(Token = "0x60006C7")]
	[Address(RVA = "0x9144AC", Offset = "0x9144AC", VA = "0x9144AC")]
	public Skill.GameLevel getGameLevel()
	{
		return default(Skill.GameLevel);
	}

	[Token(Token = "0x60006C8")]
	[Address(RVA = "0x9144C8", Offset = "0x9144C8", VA = "0x9144C8")]
	public void AddThiefDead()
	{
	}

	[Token(Token = "0x60006C9")]
	[Address(RVA = "0x9144EC", Offset = "0x9144EC", VA = "0x9144EC")]
	public void AddThiefHeadshot()
	{
	}

	[Token(Token = "0x60006CA")]
	[Address(RVA = "0x914644", Offset = "0x914644", VA = "0x914644")]
	public void AddPoliceDead()
	{
	}

	[Token(Token = "0x60006CB")]
	[Address(RVA = "0x9146B8", Offset = "0x9146B8", VA = "0x9146B8")]
	public void AddFriendlyFire()
	{
	}

	[Token(Token = "0x60006CC")]
	[Address(RVA = "0x9146DC", Offset = "0x9146DC", VA = "0x9146DC")]
	public void AddHostageDead()
	{
	}

	[Token(Token = "0x60006CD")]
	[Address(RVA = "0x914790", Offset = "0x914790", VA = "0x914790")]
	public void AddTrompDead()
	{
	}

	[Token(Token = "0x60006CE")]
	[Address(RVA = "0x9147B0", Offset = "0x9147B0", VA = "0x9147B0")]
	public void AddHostageDeads(int deads)
	{
	}

	[Token(Token = "0x60006CF")]
	[Address(RVA = "0x911014", Offset = "0x911014", VA = "0x911014")]
	public void AddHostageSaved()
	{
	}

	[Token(Token = "0x60006D0")]
	[Address(RVA = "0x914870", Offset = "0x914870", VA = "0x914870")]
	public void AddUsedBullet(CrisisWeapon playerWeapon)
	{
	}

	[Token(Token = "0x60006D1")]
	[Address(RVA = "0x910F8C", Offset = "0x910F8C", VA = "0x910F8C")]
	public void AddSceneComplete()
	{
	}

	[Token(Token = "0x60006D2")]
	[Address(RVA = "0x914930", Offset = "0x914930", VA = "0x914930")]
	public void SetBombsExploded()
	{
	}

	[Token(Token = "0x60006D3")]
	[Address(RVA = "0x9149A0", Offset = "0x9149A0", VA = "0x9149A0")]
	public void SetTimeToComplete(float timeToComplete)
	{
	}

	[Token(Token = "0x60006D4")]
	[Address(RVA = "0x9149BC", Offset = "0x9149BC", VA = "0x9149BC")]
	public void setGameOver(bool missionFailed)
	{
	}

	[Token(Token = "0x60006D5")]
	[Address(RVA = "0x914B10", Offset = "0x914B10", VA = "0x914B10")]
	public ScoreManager()
	{
	}
}
[Token(Token = "0x2000159")]
public class SetPlayerForTesting : MonoBehaviour
{
	[Token(Token = "0x4000650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private NVRPlayer player;

	[Token(Token = "0x4000651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 testPosition;

	[Token(Token = "0x60006D6")]
	[Address(RVA = "0x914B84", Offset = "0x914B84", VA = "0x914B84")]
	public void Start()
	{
	}

	[Token(Token = "0x60006D7")]
	[Address(RVA = "0x914CE0", Offset = "0x914CE0", VA = "0x914CE0")]
	public SetPlayerForTesting()
	{
	}
}
[Token(Token = "0x200015A")]
public class AudioController : MonoBehaviour
{
	[Token(Token = "0x4000652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Voices")]
	public AudioSource player;

	[Token(Token = "0x4000653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource walkieTalkie;

	[Token(Token = "0x4000654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Space]
	[Header("Effects")]
	public AudioSource ambientSound;

	[Token(Token = "0x4000655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioSource impactSounds;

	[Token(Token = "0x4000656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Range(0f, 1f)]
	public float playerVolume;

	[Token(Token = "0x4000657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[Range(0f, 1f)]
	public float walkieTalkieVolume;

	[Token(Token = "0x4000658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 1f)]
	public float ambientSoundVolume;

	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(0f, 1f)]
	public float impactSoundsVolume;

	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(0f, 1f)]
	public float charactersVolume;

	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float playerDefaultVolume;

	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float walkieTalkieDefaultVolume;

	[Token(Token = "0x400065D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float ambientSoundDefaultVolume;

	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float impactSoundsDefaultVolume;

	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float charactersDefaultVolume;

	[Token(Token = "0x60006D8")]
	[Address(RVA = "0x914CE8", Offset = "0x914CE8", VA = "0x914CE8")]
	private void Start()
	{
	}

	[Token(Token = "0x60006D9")]
	[Address(RVA = "0x914CEC", Offset = "0x914CEC", VA = "0x914CEC")]
	public void setMusicVolume(float volume)
	{
	}

	[Token(Token = "0x60006DA")]
	[Address(RVA = "0x914CF0", Offset = "0x914CF0", VA = "0x914CF0")]
	public void setEffectsVolume(float volume)
	{
	}

	[Token(Token = "0x60006DB")]
	[Address(RVA = "0x914CF4", Offset = "0x914CF4", VA = "0x914CF4")]
	public AudioController()
	{
	}
}
[Token(Token = "0x200015B")]
public class BestScoresManager : MonoBehaviour
{
	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string DEFAULT_NAME_1;

	[Token(Token = "0x4000661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string DEFAULT_NAME;

	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MissionSelector missionSelector;

	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] bankAccomplishedObjs;

	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] portAccomplishedObjs;

	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] officeAccomplishedObjs;

	[Token(Token = "0x4000666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject[] officeUnlockedObjs;

	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public BestScoresMenu bestScoresBank;

	[Token(Token = "0x4000668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public BestScoresMenu bestScoresPort;

	[Token(Token = "0x4000669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public BestScoresMenu bestScoresOffice;

	[Token(Token = "0x400066A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Keyboard keyboard;

	[Token(Token = "0x60006DC")]
	[Address(RVA = "0x914D14", Offset = "0x914D14", VA = "0x914D14")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006DD")]
	[Address(RVA = "0x914D18", Offset = "0x914D18", VA = "0x914D18")]
	private void Start()
	{
	}

	[Token(Token = "0x60006DE")]
	[Address(RVA = "0x915488", Offset = "0x915488", VA = "0x915488")]
	private void Update()
	{
	}

	[Token(Token = "0x60006DF")]
	[Address(RVA = "0x914D7C", Offset = "0x914D7C", VA = "0x914D7C")]
	private void showBestScores()
	{
	}

	[Token(Token = "0x60006E0")]
	[Address(RVA = "0x915E64", Offset = "0x915E64", VA = "0x915E64")]
	private void portUnlocked()
	{
	}

	[Token(Token = "0x60006E1")]
	[Address(RVA = "0x915EBC", Offset = "0x915EBC", VA = "0x915EBC")]
	private void officeUnlocked()
	{
	}

	[Token(Token = "0x60006E2")]
	[Address(RVA = "0x915F14", Offset = "0x915F14", VA = "0x915F14")]
	public void saveScores()
	{
	}

	[Token(Token = "0x60006E3")]
	[Address(RVA = "0x91599C", Offset = "0x91599C", VA = "0x91599C")]
	private void updateMissionAccomplishedVisibility()
	{
	}

	[Token(Token = "0x60006E4")]
	[Address(RVA = "0x915B00", Offset = "0x915B00", VA = "0x915B00")]
	private void updateMissionUnlockedVisibility(int levelUnlock)
	{
	}

	[Token(Token = "0x60006E5")]
	[Address(RVA = "0x9162A4", Offset = "0x9162A4", VA = "0x9162A4")]
	public BestScoresManager()
	{
	}
}
[Token(Token = "0x200015C")]
public class BestScoresMenu : MonoBehaviour
{
	[Token(Token = "0x400066B")]
	private const string ROOKIE_COLOR = "#043C4F";

	[Token(Token = "0x400066C")]
	private const string HELL_COLOR = "#9A0000";

	[Token(Token = "0x400066D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<SerializableScoreData> bestScores;

	[Token(Token = "0x60006E7")]
	[Address(RVA = "0x91631C", Offset = "0x91631C", VA = "0x91631C")]
	public void show()
	{
	}

	[Token(Token = "0x60006E8")]
	[Address(RVA = "0x916340", Offset = "0x916340", VA = "0x916340")]
	public void hide()
	{
	}

	[Token(Token = "0x60006E9")]
	[Address(RVA = "0x9155C8", Offset = "0x9155C8", VA = "0x9155C8")]
	public void setBestScores(List<SerializableScoreData> bestScores)
	{
	}

	[Token(Token = "0x60006EA")]
	[Address(RVA = "0x9168A4", Offset = "0x9168A4", VA = "0x9168A4")]
	public List<SerializableScoreData> getBestScores()
	{
		return null;
	}

	[Token(Token = "0x60006EB")]
	[Address(RVA = "0x9156B8", Offset = "0x9156B8", VA = "0x9156B8")]
	public KeyboardScreen addScore(SerializableScoreData newScore)
	{
		return null;
	}

	[Token(Token = "0x60006EC")]
	[Address(RVA = "0x916364", Offset = "0x916364", VA = "0x916364")]
	private void updateBestScores()
	{
	}

	[Token(Token = "0x60006ED")]
	[Address(RVA = "0x916A58", Offset = "0x916A58", VA = "0x916A58")]
	private void setText(Transform t, string text)
	{
	}

	[Token(Token = "0x60006EE")]
	[Address(RVA = "0x916AC4", Offset = "0x916AC4", VA = "0x916AC4")]
	private void setColor(Transform t, Color color)
	{
	}

	[Token(Token = "0x60006EF")]
	[Address(RVA = "0x916A28", Offset = "0x916A28", VA = "0x916A28")]
	private Color getColor(string hexColor)
	{
		return default(Color);
	}

	[Token(Token = "0x60006F0")]
	[Address(RVA = "0x916B58", Offset = "0x916B58", VA = "0x916B58")]
	private Color getRookieColor()
	{
		return default(Color);
	}

	[Token(Token = "0x60006F1")]
	[Address(RVA = "0x9168AC", Offset = "0x9168AC", VA = "0x9168AC")]
	private void sort(ref List<SerializableScoreData> scores)
	{
	}

	[Token(Token = "0x60006F2")]
	[Address(RVA = "0x916BB8", Offset = "0x916BB8", VA = "0x916BB8")]
	public BestScoresMenu()
	{
	}
}
[Token(Token = "0x200015D")]
public class ButtonConfig : UIButton
{
	[Token(Token = "0x400066E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool locked;

	[Token(Token = "0x400066F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	public bool isOn;

	[Token(Token = "0x60006F3")]
	[Address(RVA = "0x916BC0", Offset = "0x916BC0", VA = "0x916BC0")]
	public void init(int config)
	{
	}

	[Token(Token = "0x60006F4")]
	[Address(RVA = "0x916F5C", Offset = "0x916F5C", VA = "0x916F5C", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x60006F5")]
	[Address(RVA = "0x917188", Offset = "0x917188", VA = "0x917188")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60006F6")]
	[Address(RVA = "0x9171C8", Offset = "0x9171C8", VA = "0x9171C8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60006F7")]
	[Address(RVA = "0x916BCC", Offset = "0x916BCC", VA = "0x916BCC")]
	private void setConfig0()
	{
	}

	[Token(Token = "0x60006F8")]
	[Address(RVA = "0x916D60", Offset = "0x916D60", VA = "0x916D60")]
	private void setConfig1()
	{
	}

	[Token(Token = "0x60006F9")]
	[Address(RVA = "0x91724C", Offset = "0x91724C", VA = "0x91724C")]
	private void setConfig(int config, NVRButtons[] grabButtons, NVRButtons[] dropButtons, NVRButtons[] reloadButtons, NVRButtons triggerButton, NVRButtons useButton)
	{
	}

	[Token(Token = "0x60006FA")]
	[Address(RVA = "0x917414", Offset = "0x917414", VA = "0x917414")]
	public int getConfig()
	{
		return default(int);
	}

	[Token(Token = "0x60006FB")]
	[Address(RVA = "0x91741C", Offset = "0x91741C", VA = "0x91741C")]
	public ButtonConfig()
	{
	}
}
[Token(Token = "0x200015E")]
public class LanguageSettings : UIButton
{
	[Token(Token = "0x4000670")]
	private const string ENGLISH = "settings_english";

	[Token(Token = "0x4000671")]
	private const string SPANISH = "settings_spanish";

	[Token(Token = "0x4000672")]
	private const string CHINESE = "settings_chinese";

	[Token(Token = "0x4000673")]
	private const string JAPANESE = "settings_japanese";

	[Token(Token = "0x4000674")]
	private const string KOREAN = "settings_korean";

	[Token(Token = "0x4000675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool locked;

	[Token(Token = "0x4000676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	private bool isFront;

	[Token(Token = "0x4000677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private TextMeshPro front;

	[Token(Token = "0x4000678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private TextMeshPro back;

	[Token(Token = "0x60006FD")]
	[Address(RVA = "0x9174FC", Offset = "0x9174FC", VA = "0x9174FC")]
	public void init()
	{
	}

	[Token(Token = "0x60006FE")]
	[Address(RVA = "0x91770C", Offset = "0x91770C", VA = "0x91770C", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x60006FF")]
	[Address(RVA = "0x917990", Offset = "0x917990", VA = "0x917990")]
	public LocalizationManager.Language getLanguage()
	{
		return default(LocalizationManager.Language);
	}

	[Token(Token = "0x6000700")]
	[Address(RVA = "0x9179E4", Offset = "0x9179E4", VA = "0x9179E4")]
	public LanguageSettings()
	{
	}
}
[Token(Token = "0x200015F")]
public class MissionButton : UIButton
{
	[Token(Token = "0x6000702")]
	[Address(RVA = "0x9179F8", Offset = "0x9179F8", VA = "0x9179F8", Slot = "9")]
	public override void OnHoverAnimation(bool enable)
	{
	}

	[Token(Token = "0x6000703")]
	[Address(RVA = "0x917A54", Offset = "0x917A54", VA = "0x917A54")]
	public MissionButton()
	{
	}
}
[Token(Token = "0x2000160")]
public class MissionScoresMenu : MonoBehaviour
{
	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMesh thiefDeads;

	[Token(Token = "0x400067A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMesh thiefHeadshots;

	[Token(Token = "0x400067B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMesh policeDeads;

	[Token(Token = "0x400067C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMesh friendlyFire;

	[Token(Token = "0x400067D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMesh hostageDeads;

	[Token(Token = "0x400067E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMesh usedBullets;

	[Token(Token = "0x400067F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMesh timeToComplete;

	[Token(Token = "0x4000680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TextMesh score;

	[Token(Token = "0x6000704")]
	[Address(RVA = "0x917A58", Offset = "0x917A58", VA = "0x917A58")]
	private void Start()
	{
	}

	[Token(Token = "0x6000705")]
	[Address(RVA = "0x917AEC", Offset = "0x917AEC", VA = "0x917AEC")]
	private void setMissionScores(ScoreData scoreData)
	{
	}

	[Token(Token = "0x6000706")]
	[Address(RVA = "0x917C44", Offset = "0x917C44", VA = "0x917C44")]
	private string getTimeToComplete(float timeToComplete)
	{
		return null;
	}

	[Token(Token = "0x6000707")]
	[Address(RVA = "0x91805C", Offset = "0x91805C", VA = "0x91805C")]
	public MissionScoresMenu()
	{
	}
}
[Token(Token = "0x2000161")]
public class MissionSelector : UIToggle
{
	[Token(Token = "0x4000681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int _missionSelected;

	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private UIButton bankButton;

	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private UIButton portButton;

	[Token(Token = "0x4000684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private UIButton officeButton;

	[Token(Token = "0x4000685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int levelUnlock;

	[Token(Token = "0x1700006A")]
	public int missionSelected
	{
		[Token(Token = "0x6000708")]
		[Address(RVA = "0x918064", Offset = "0x918064", VA = "0x918064")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000709")]
		[Address(RVA = "0x91806C", Offset = "0x91806C", VA = "0x91806C")]
		set
		{
		}
	}

	[Token(Token = "0x600070A")]
	[Address(RVA = "0x918120", Offset = "0x918120", VA = "0x918120")]
	private void Start()
	{
	}

	[Token(Token = "0x600070B")]
	[Address(RVA = "0x918228", Offset = "0x918228", VA = "0x918228")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600070C")]
	[Address(RVA = "0x9182E0", Offset = "0x9182E0", VA = "0x9182E0")]
	private void onDisconnected(DisconnectCause cause)
	{
	}

	[Token(Token = "0x600070D")]
	[Address(RVA = "0x915B6C", Offset = "0x915B6C", VA = "0x915B6C")]
	public void init(int levelUnlock)
	{
	}

	[Token(Token = "0x600070E")]
	[Address(RVA = "0x9185B0", Offset = "0x9185B0", VA = "0x9185B0", Slot = "6")]
	protected override void ButtonPressed(UIButton button)
	{
	}

	[Token(Token = "0x600070F")]
	[Address(RVA = "0x918540", Offset = "0x918540", VA = "0x918540")]
	private void ForceButtonPressed(UIButton button, bool bForce = false)
	{
	}

	[Token(Token = "0x6000710")]
	[Address(RVA = "0x918A20", Offset = "0x918A20", VA = "0x918A20")]
	private void disableLockedButtons()
	{
	}

	[Token(Token = "0x6000711")]
	[Address(RVA = "0x9186F4", Offset = "0x9186F4", VA = "0x9186F4")]
	private void selectMission(UIButton button, bool bForce = false, bool bPlaySound = true)
	{
	}

	[Token(Token = "0x6000712")]
	[Address(RVA = "0x918320", Offset = "0x918320", VA = "0x918320")]
	private void selectButton(UIButton button, bool bForce = false, bool bPlaySound = true)
	{
	}

	[Token(Token = "0x6000713")]
	[Address(RVA = "0x918A98", Offset = "0x918A98", VA = "0x918A98", Slot = "7")]
	protected override void ButtonHover(UIButton button, bool isHover)
	{
	}

	[Token(Token = "0x6000714")]
	[Address(RVA = "0x918B58", Offset = "0x918B58", VA = "0x918B58")]
	private void updateHover(UIButton button, bool hover)
	{
	}

	[Token(Token = "0x6000715")]
	[Address(RVA = "0x918D1C", Offset = "0x918D1C", VA = "0x918D1C")]
	public void changeMission(int newMission)
	{
	}

	[Token(Token = "0x6000716")]
	[Address(RVA = "0x918E08", Offset = "0x918E08", VA = "0x918E08")]
	public int getMissionSelected()
	{
		return default(int);
	}

	[Token(Token = "0x6000717")]
	[Address(RVA = "0x9155A4", Offset = "0x9155A4", VA = "0x9155A4")]
	public GameScene GetGameScene()
	{
		return default(GameScene);
	}

	[Token(Token = "0x6000718")]
	[Address(RVA = "0x918E10", Offset = "0x918E10", VA = "0x918E10")]
	public MissionSelector()
	{
	}
}
[Token(Token = "0x2000162")]
public class PhysicalButton : UIButton
{
	[Token(Token = "0x6000719")]
	[Address(RVA = "0x918E20", Offset = "0x918E20", VA = "0x918E20", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x600071A")]
	[Address(RVA = "0x918F40", Offset = "0x918F40", VA = "0x918F40", Slot = "9")]
	public override void OnHoverAnimation(bool enable)
	{
	}

	[Token(Token = "0x600071B")]
	[Address(RVA = "0x918F44", Offset = "0x918F44", VA = "0x918F44")]
	public PhysicalButton()
	{
	}
}
[Token(Token = "0x2000163")]
public class PlayerHeight : MonoBehaviour
{
	[Token(Token = "0x4000686")]
	private const float DELTA_HEIGHT = 0.05f;

	[Token(Token = "0x4000687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float DeltaPlayerHeightHead;

	[Token(Token = "0x4000688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static float DeltaPlayerHeight;

	[Token(Token = "0x4000689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float maxHeight;

	[Token(Token = "0x400068A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float minHeight;

	[Token(Token = "0x400068B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private UIButton upHeight;

	[Token(Token = "0x400068C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private UIButton downHeight;

	[Token(Token = "0x400068D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private UIButton resetHeight;

	[Token(Token = "0x600071C")]
	[Address(RVA = "0x918F48", Offset = "0x918F48", VA = "0x918F48")]
	public void init(float playerHeight)
	{
	}

	[Token(Token = "0x600071D")]
	[Address(RVA = "0x9192E4", Offset = "0x9192E4", VA = "0x9192E4")]
	private void setDeltaPlayerHeight(float deltaPlayerHeight)
	{
	}

	[Token(Token = "0x600071E")]
	[Address(RVA = "0x919344", Offset = "0x919344", VA = "0x919344")]
	private void resetPlayerHeight()
	{
	}

	[Token(Token = "0x600071F")]
	[Address(RVA = "0x919168", Offset = "0x919168", VA = "0x919168")]
	private void setPlayerHeight(float playerHeight)
	{
	}

	[Token(Token = "0x6000720")]
	[Address(RVA = "0x919550", Offset = "0x919550", VA = "0x919550")]
	public PlayerHeight()
	{
	}
}
[Token(Token = "0x2000164")]
public class ReloadMode : UIButton
{
	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool locked;

	[Token(Token = "0x400068F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	private bool isManual;

	[Token(Token = "0x6000724")]
	[Address(RVA = "0x919580", Offset = "0x919580", VA = "0x919580")]
	public void init(Weapon.ReloadType reloadType)
	{
	}

	[Token(Token = "0x6000725")]
	[Address(RVA = "0x9195DC", Offset = "0x9195DC", VA = "0x9195DC", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000726")]
	[Address(RVA = "0x9196F8", Offset = "0x9196F8", VA = "0x9196F8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000727")]
	[Address(RVA = "0x919844", Offset = "0x919844", VA = "0x919844")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000728")]
	[Address(RVA = "0x91964C", Offset = "0x91964C", VA = "0x91964C")]
	private void toggle()
	{
	}

	[Token(Token = "0x6000729")]
	[Address(RVA = "0x9198D0", Offset = "0x9198D0", VA = "0x9198D0")]
	public Weapon.ReloadType getReloadType()
	{
		return default(Weapon.ReloadType);
	}

	[Token(Token = "0x600072A")]
	[Address(RVA = "0x919928", Offset = "0x919928", VA = "0x919928")]
	private void Update()
	{
	}

	[Token(Token = "0x600072B")]
	[Address(RVA = "0x9197A0", Offset = "0x9197A0", VA = "0x9197A0")]
	private bool manualReloadAllowed()
	{
		return default(bool);
	}

	[Token(Token = "0x600072C")]
	[Address(RVA = "0x919AF8", Offset = "0x919AF8", VA = "0x919AF8")]
	public ReloadMode()
	{
	}
}
[Token(Token = "0x2000165")]
public class OnButtonPressed : UnityEvent<UIButton>
{
	[Token(Token = "0x600072F")]
	[Address(RVA = "0x919B0C", Offset = "0x919B0C", VA = "0x919B0C")]
	public OnButtonPressed()
	{
	}
}
[Token(Token = "0x2000166")]
public class OnButtonHover : UnityEvent<UIButton, bool>
{
	[Token(Token = "0x6000730")]
	[Address(RVA = "0x919B54", Offset = "0x919B54", VA = "0x919B54")]
	public OnButtonHover()
	{
	}
}
[Token(Token = "0x2000167")]
public class UIButton : HitTarget, IKeyboardPointable
{
	[Token(Token = "0x2000168")]
	public enum UIButtonState
	{
		[Token(Token = "0x4000697")]
		Selected,
		[Token(Token = "0x4000698")]
		Enabled,
		[Token(Token = "0x4000699")]
		Disabled
	}

	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public OnButtonPressed onButtonPressed;

	[Token(Token = "0x4000691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public OnButtonHover onButtonHover;

	[Token(Token = "0x4000692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UIButtonState state;

	[Token(Token = "0x4000693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string command;

	[Token(Token = "0x4000694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 initScale;

	[Token(Token = "0x4000695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public TextMesh text;

	[Token(Token = "0x6000731")]
	[Address(RVA = "0x919B9C", Offset = "0x919B9C", VA = "0x919B9C", Slot = "8")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6000732")]
	[Address(RVA = "0x919BCC", Offset = "0x919BCC", VA = "0x919BCC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000733")]
	[Address(RVA = "0x9170B8", Offset = "0x9170B8", VA = "0x9170B8", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000734")]
	[Address(RVA = "0x9184DC", Offset = "0x9184DC", VA = "0x9184DC")]
	public void setButtonState(UIButtonState buttonState)
	{
	}

	[Token(Token = "0x6000735")]
	[Address(RVA = "0x919C88", Offset = "0x919C88", VA = "0x919C88")]
	private void setButtonEnabled(bool enabled)
	{
	}

	[Token(Token = "0x6000736")]
	[Address(RVA = "0x919D50", Offset = "0x919D50", VA = "0x919D50")]
	private void setButtonDisabled(bool disabled)
	{
	}

	[Token(Token = "0x6000737")]
	[Address(RVA = "0x919E18", Offset = "0x919E18", VA = "0x919E18")]
	private void setButtonSelected(bool selected)
	{
	}

	[Token(Token = "0x6000738")]
	[Address(RVA = "0x919EE0", Offset = "0x919EE0", VA = "0x919EE0", Slot = "9")]
	public virtual void OnHoverAnimation(bool enable)
	{
	}

	[Token(Token = "0x6000739")]
	[Address(RVA = "0x917420", Offset = "0x917420", VA = "0x917420")]
	public UIButton()
	{
	}
}
[Token(Token = "0x2000169")]
public class UIToggle : MonoBehaviour
{
	[Token(Token = "0x400069A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool initOnAwake;

	[Token(Token = "0x400069B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected UIButton[] toggleButtons;

	[Token(Token = "0x600073A")]
	[Address(RVA = "0x919FB4", Offset = "0x919FB4", VA = "0x919FB4", Slot = "4")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x600073B")]
	[Address(RVA = "0x91835C", Offset = "0x91835C", VA = "0x91835C", Slot = "5")]
	protected virtual void init()
	{
	}

	[Token(Token = "0x600073C")]
	[Address(RVA = "0x918930", Offset = "0x918930", VA = "0x918930", Slot = "6")]
	protected virtual void ButtonPressed(UIButton button)
	{
	}

	[Token(Token = "0x600073D")]
	[Address(RVA = "0x919FCC", Offset = "0x919FCC", VA = "0x919FCC", Slot = "7")]
	protected virtual void ButtonHover(UIButton button, bool isHover)
	{
	}

	[Token(Token = "0x600073E")]
	[Address(RVA = "0x918E18", Offset = "0x918E18", VA = "0x918E18")]
	public UIToggle()
	{
	}
}
[Token(Token = "0x200016A")]
public class WalkieTalkieSettings : UIButton
{
	[Token(Token = "0x400069C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool locked;

	[Token(Token = "0x600073F")]
	[Address(RVA = "0x919FD0", Offset = "0x919FD0", VA = "0x919FD0")]
	public void init(bool enabled)
	{
	}

	[Token(Token = "0x6000740")]
	[Address(RVA = "0x91A02C", Offset = "0x91A02C", VA = "0x91A02C", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000741")]
	[Address(RVA = "0x91A1CC", Offset = "0x91A1CC", VA = "0x91A1CC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000742")]
	[Address(RVA = "0x91A258", Offset = "0x91A258", VA = "0x91A258")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000743")]
	[Address(RVA = "0x91A09C", Offset = "0x91A09C", VA = "0x91A09C")]
	private void toggle()
	{
	}

	[Token(Token = "0x6000744")]
	[Address(RVA = "0x91A2DC", Offset = "0x91A2DC", VA = "0x91A2DC")]
	public bool getState()
	{
		return default(bool);
	}

	[Token(Token = "0x6000745")]
	[Address(RVA = "0x91A330", Offset = "0x91A330", VA = "0x91A330")]
	public WalkieTalkieSettings()
	{
	}
}
[Token(Token = "0x200016B")]
public class Ship : SceneAction
{
	[Serializable]
	[Token(Token = "0x200016C")]
	public class CheckPoint
	{
		[Token(Token = "0x40006A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform target;

		[Token(Token = "0x40006A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject characters;

		[Token(Token = "0x600074E")]
		[Address(RVA = "0x91AD4C", Offset = "0x91AD4C", VA = "0x91AD4C")]
		public CheckPoint()
		{
		}
	}

	[Token(Token = "0x400069D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform ship;

	[Token(Token = "0x400069E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float speed;

	[Token(Token = "0x400069F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SceneData scene;

	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public CheckPoint[] checkPoints;

	[Token(Token = "0x40006A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int currentCheckpoint;

	[Token(Token = "0x40006A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioSource audioSource;

	[Token(Token = "0x40006A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform playerTransform;

	[Token(Token = "0x6000747")]
	[Address(RVA = "0x91A33C", Offset = "0x91A33C", VA = "0x91A33C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000748")]
	[Address(RVA = "0x91A4CC", Offset = "0x91A4CC", VA = "0x91A4CC")]
	private void randomHorn()
	{
	}

	[Token(Token = "0x6000749")]
	[Address(RVA = "0x91A540", Offset = "0x91A540", VA = "0x91A540")]
	private void OnSceneActive(int sceneId)
	{
	}

	[Token(Token = "0x600074A")]
	[Address(RVA = "0x91A758", Offset = "0x91A758", VA = "0x91A758")]
	private void moveShip()
	{
	}

	[Token(Token = "0x600074B")]
	[Address(RVA = "0x91AB88", Offset = "0x91AB88", VA = "0x91AB88")]
	private void OnSceneDeactivate(int sceneId)
	{
	}

	[Token(Token = "0x600074C")]
	[Address(RVA = "0x91AC34", Offset = "0x91AC34", VA = "0x91AC34")]
	public Ship()
	{
	}
}
[Token(Token = "0x200016D")]
public class George : HitTarget
{
	[Token(Token = "0x200016E")]
	[CompilerGenerated]
	private sealed class <HitSound>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public George <>4__this;

		[Token(Token = "0x1700006B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000759")]
			[Address(RVA = "0x91B22C", Offset = "0x91B22C", VA = "0x91B22C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600075B")]
			[Address(RVA = "0x91B274", Offset = "0x91B274", VA = "0x91B274", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000756")]
		[Address(RVA = "0x91B054", Offset = "0x91B054", VA = "0x91B054")]
		[DebuggerHidden]
		public <HitSound>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6000757")]
		[Address(RVA = "0x91B084", Offset = "0x91B084", VA = "0x91B084", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000758")]
		[Address(RVA = "0x91B088", Offset = "0x91B088", VA = "0x91B088", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600075A")]
		[Address(RVA = "0x91B234", Offset = "0x91B234", VA = "0x91B234", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioSource audioSource;

	[Token(Token = "0x40006A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioClip sleepSound;

	[Token(Token = "0x40006A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioClip hitSound;

	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool hitted;

	[Token(Token = "0x600074F")]
	[Address(RVA = "0x91AD54", Offset = "0x91AD54", VA = "0x91AD54")]
	private void Start()
	{
	}

	[Token(Token = "0x6000750")]
	[Address(RVA = "0x91AE20", Offset = "0x91AE20", VA = "0x91AE20")]
	private void sleep(int sceneId)
	{
	}

	[Token(Token = "0x6000751")]
	[Address(RVA = "0x91AF40", Offset = "0x91AF40", VA = "0x91AF40", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000752")]
	[Address(RVA = "0x91B04C", Offset = "0x91B04C", VA = "0x91B04C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000753")]
	[Address(RVA = "0x91AFE4", Offset = "0x91AFE4", VA = "0x91AFE4")]
	[IteratorStateMachine(typeof(<HitSound>d__8))]
	private IEnumerator HitSound()
	{
		return null;
	}

	[Token(Token = "0x6000754")]
	[Address(RVA = "0x91AEE8", Offset = "0x91AEE8", VA = "0x91AEE8")]
	private void SleepSound()
	{
	}

	[Token(Token = "0x6000755")]
	[Address(RVA = "0x91B07C", Offset = "0x91B07C", VA = "0x91B07C")]
	public George()
	{
	}
}
[Token(Token = "0x200016F")]
public class PoliceStationCharacter : HitTarget
{
	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public NVRCollisionSoundMaterials hitSound;

	[Token(Token = "0x40006AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int hitAnimations;

	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Animator animator;

	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float lastHit;

	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float lastHitSound;

	[Token(Token = "0x600075C")]
	[Address(RVA = "0x91B27C", Offset = "0x91B27C", VA = "0x91B27C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600075D")]
	[Address(RVA = "0x91B2CC", Offset = "0x91B2CC", VA = "0x91B2CC", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x600075E")]
	[Address(RVA = "0x91B444", Offset = "0x91B444", VA = "0x91B444")]
	public PoliceStationCharacter()
	{
	}
}
[Token(Token = "0x2000170")]
public class Radio : HitDynamicTarget
{
	[Token(Token = "0x2000171")]
	[CompilerGenerated]
	private sealed class <Play>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Radio <>4__this;

		[Token(Token = "0x1700006D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600076F")]
			[Address(RVA = "0x91BF84", Offset = "0x91BF84", VA = "0x91BF84", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000771")]
			[Address(RVA = "0x91BFCC", Offset = "0x91BFCC", VA = "0x91BFCC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600076C")]
		[Address(RVA = "0x91BC24", Offset = "0x91BC24", VA = "0x91BC24")]
		[DebuggerHidden]
		public <Play>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x600076D")]
		[Address(RVA = "0x91BCAC", Offset = "0x91BCAC", VA = "0x91BCAC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600076E")]
		[Address(RVA = "0x91BCB0", Offset = "0x91BCB0", VA = "0x91BCB0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000770")]
		[Address(RVA = "0x91BF8C", Offset = "0x91BF8C", VA = "0x91BF8C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip brokenClip;

	[Token(Token = "0x40006B3")]
	private const string SOUNDS_PATH = "RadioSounds";

	[Token(Token = "0x40006B4")]
	private const string SONGS_PATH = "songs";

	[Token(Token = "0x40006B5")]
	private const string NEWS_PATH = "news";

	[Token(Token = "0x40006B6")]
	private const string SLASH = "/";

	[Token(Token = "0x40006B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private AudioClip[] songs;

	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AudioClip[] news;

	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private AudioSource audioSource;

	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int currentSong;

	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int currentNews;

	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool broken;

	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool lastPlayedNews;

	[Token(Token = "0x600075F")]
	[Address(RVA = "0x91B458", Offset = "0x91B458", VA = "0x91B458")]
	private void Start()
	{
	}

	[Token(Token = "0x6000760")]
	[Address(RVA = "0x91B8E0", Offset = "0x91B8E0", VA = "0x91B8E0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000761")]
	[Address(RVA = "0x91BA30", Offset = "0x91BA30", VA = "0x91BA30")]
	private void updateNewsLanguage()
	{
	}

	[Token(Token = "0x6000762")]
	[Address(RVA = "0x91BAF4", Offset = "0x91BAF4", VA = "0x91BAF4")]
	private void updateNewsLanguage(int sceneId)
	{
	}

	[Token(Token = "0x6000763")]
	[Address(RVA = "0x91B6BC", Offset = "0x91B6BC", VA = "0x91B6BC")]
	private LocalizationManager.Language GetLanguage()
	{
		return default(LocalizationManager.Language);
	}

	[Token(Token = "0x6000764")]
	[Address(RVA = "0x91BB00", Offset = "0x91BB00", VA = "0x91BB00", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000765")]
	[Address(RVA = "0x91270C", Offset = "0x91270C", VA = "0x91270C")]
	public void TurnOff()
	{
	}

	[Token(Token = "0x6000766")]
	[Address(RVA = "0x912660", Offset = "0x912660", VA = "0x912660")]
	public void TurnOn()
	{
	}

	[Token(Token = "0x6000767")]
	[Address(RVA = "0x91BC1C", Offset = "0x91BC1C", VA = "0x91BC1C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000768")]
	[Address(RVA = "0x91B878", Offset = "0x91B878", VA = "0x91B878")]
	[IteratorStateMachine(typeof(<Play>d__21))]
	private IEnumerator Play()
	{
		return null;
	}

	[Token(Token = "0x6000769")]
	[Address(RVA = "0x91BC4C", Offset = "0x91BC4C", VA = "0x91BC4C")]
	private void radioBroken()
	{
	}

	[Token(Token = "0x600076A")]
	[Address(RVA = "0x91B71C", Offset = "0x91B71C", VA = "0x91B71C")]
	private void RandomizeClips()
	{
	}

	[Token(Token = "0x600076B")]
	[Address(RVA = "0x91BCA4", Offset = "0x91BCA4", VA = "0x91BCA4")]
	public Radio()
	{
	}
}
[Token(Token = "0x2000172")]
public class RotateTo : MonoBehaviour
{
	[Token(Token = "0x40006C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x6000772")]
	[Address(RVA = "0x91BFD4", Offset = "0x91BFD4", VA = "0x91BFD4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000773")]
	[Address(RVA = "0x91C06C", Offset = "0x91C06C", VA = "0x91C06C")]
	public RotateTo()
	{
	}
}
[Token(Token = "0x2000173")]
public class ScaleTo : MonoBehaviour
{
	[Token(Token = "0x40006C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float animTime;

	[Token(Token = "0x40006C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Ease ease;

	[Token(Token = "0x40006C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 defaultPosition;

	[Token(Token = "0x40006C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 defaultScale;

	[Token(Token = "0x40006C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 enabledPosition;

	[Token(Token = "0x40006C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 enabledScale;

	[Token(Token = "0x40006C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool initialised;

	[Token(Token = "0x6000774")]
	[Address(RVA = "0x91C07C", Offset = "0x91C07C", VA = "0x91C07C")]
	private void init()
	{
	}

	[Token(Token = "0x6000775")]
	[Address(RVA = "0x91C184", Offset = "0x91C184", VA = "0x91C184")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000776")]
	[Address(RVA = "0x91C234", Offset = "0x91C234", VA = "0x91C234")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000777")]
	[Address(RVA = "0x91C298", Offset = "0x91C298", VA = "0x91C298")]
	public ScaleTo()
	{
	}
}
[Token(Token = "0x2000174")]
public class ShootingGalleryButton : HitTarget
{
	[Token(Token = "0x40006C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UnityEvent onButtonPressed;

	[Token(Token = "0x40006CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 initPosition;

	[Token(Token = "0x40006CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 pressPosition;

	[Token(Token = "0x40006CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool pressed;

	[Token(Token = "0x6000778")]
	[Address(RVA = "0x91C2AC", Offset = "0x91C2AC", VA = "0x91C2AC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000779")]
	[Address(RVA = "0x91C40C", Offset = "0x91C40C", VA = "0x91C40C", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x600077A")]
	[Address(RVA = "0x91C614", Offset = "0x91C614", VA = "0x91C614")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600077B")]
	[Address(RVA = "0x91C480", Offset = "0x91C480", VA = "0x91C480")]
	private void pressButton()
	{
	}

	[Token(Token = "0x600077C")]
	[Address(RVA = "0x91C618", Offset = "0x91C618", VA = "0x91C618")]
	public void activate()
	{
	}

	[Token(Token = "0x600077D")]
	[Address(RVA = "0x91C61C", Offset = "0x91C61C", VA = "0x91C61C")]
	public void deactivate()
	{
	}

	[Token(Token = "0x600077E")]
	[Address(RVA = "0x91C620", Offset = "0x91C620", VA = "0x91C620")]
	public ShootingGalleryButton()
	{
	}
}
[Token(Token = "0x2000175")]
public class ShootingGalleryDoor : HitTarget, IKeyboardPointable
{
	[Token(Token = "0x2000176")]
	[CompilerGenerated]
	private sealed class <changeScene>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SceneData oldScene;

		[Token(Token = "0x40006D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SceneData newScene;

		[Token(Token = "0x1700006F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000787")]
			[Address(RVA = "0x91CB74", Offset = "0x91CB74", VA = "0x91CB74", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000070")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000789")]
			[Address(RVA = "0x91CBBC", Offset = "0x91CBBC", VA = "0x91CBBC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000784")]
		[Address(RVA = "0x91C7F4", Offset = "0x91C7F4", VA = "0x91C7F4")]
		[DebuggerHidden]
		public <changeScene>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000785")]
		[Address(RVA = "0x91C98C", Offset = "0x91C98C", VA = "0x91C98C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000786")]
		[Address(RVA = "0x91C990", Offset = "0x91C990", VA = "0x91C990", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000788")]
		[Address(RVA = "0x91CB7C", Offset = "0x91CB7C", VA = "0x91CB7C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ShootingGallery shootingGallery;

	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public PoliceStation policeStation;

	[Token(Token = "0x40006CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform enterSign;

	[Token(Token = "0x40006D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform exitSign;

	[Token(Token = "0x6000780")]
	[Address(RVA = "0x91C630", Offset = "0x91C630", VA = "0x91C630", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000781")]
	[Address(RVA = "0x91C780", Offset = "0x91C780", VA = "0x91C780")]
	[IteratorStateMachine(typeof(<changeScene>d__5))]
	private IEnumerator changeScene(SceneData oldScene, SceneData newScene)
	{
		return null;
	}

	[Token(Token = "0x6000782")]
	[Address(RVA = "0x91C81C", Offset = "0x91C81C", VA = "0x91C81C", Slot = "7")]
	public void OnHoverAnimation(bool enable)
	{
	}

	[Token(Token = "0x6000783")]
	[Address(RVA = "0x91C984", Offset = "0x91C984", VA = "0x91C984")]
	public ShootingGalleryDoor()
	{
	}
}
[Token(Token = "0x2000177")]
public class ShootingTarget : HitTarget
{
	[Token(Token = "0x40006D5")]
	private const float DURATION = 2f;

	[Token(Token = "0x40006D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ShootingGallery controller;

	[Token(Token = "0x40006D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform soporte;

	[Token(Token = "0x40006D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform diana;

	[Token(Token = "0x40006D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform dianaColliders;

	[Token(Token = "0x40006DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform[] positions;

	[Token(Token = "0x40006DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool moving;

	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private AudioSource audioSource;

	[Token(Token = "0x40006DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public int currentPosition;

	[Token(Token = "0x600078A")]
	[Address(RVA = "0x91CBC4", Offset = "0x91CBC4", VA = "0x91CBC4")]
	private void Start()
	{
	}

	[Token(Token = "0x600078B")]
	[Address(RVA = "0x91CC38", Offset = "0x91CC38", VA = "0x91CC38", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x600078C")]
	[Address(RVA = "0x912E08", Offset = "0x912E08", VA = "0x912E08")]
	public void setDefaultPosition()
	{
	}

	[Token(Token = "0x600078D")]
	[Address(RVA = "0x912E48", Offset = "0x912E48", VA = "0x912E48")]
	public void setNextPosition()
	{
	}

	[Token(Token = "0x600078E")]
	[Address(RVA = "0x9129C8", Offset = "0x9129C8", VA = "0x9129C8")]
	public void clearDecals()
	{
	}

	[Token(Token = "0x600078F")]
	[Address(RVA = "0x91CEC0", Offset = "0x91CEC0", VA = "0x91CEC0")]
	private void updatePosition()
	{
	}

	[Token(Token = "0x6000790")]
	[Address(RVA = "0x91D080", Offset = "0x91D080", VA = "0x91D080")]
	public ShootingTarget()
	{
	}
}
[Token(Token = "0x2000178")]
public class WeaponSelector : HitTarget
{
	[Token(Token = "0x2000179")]
	[CompilerGenerated]
	private sealed class <selectWeapon>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Weapon newWeapon;

		[Token(Token = "0x40006E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public NVRHand hand;

		[Token(Token = "0x40006E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public NVRHand otherHand;

		[Token(Token = "0x17000071")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000799")]
			[Address(RVA = "0x91D5E4", Offset = "0x91D5E4", VA = "0x91D5E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000072")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600079B")]
			[Address(RVA = "0x91D62C", Offset = "0x91D62C", VA = "0x91D62C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000796")]
		[Address(RVA = "0x91D3CC", Offset = "0x91D3CC", VA = "0x91D3CC")]
		[DebuggerHidden]
		public <selectWeapon>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000797")]
		[Address(RVA = "0x91D3FC", Offset = "0x91D3FC", VA = "0x91D3FC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000798")]
		[Address(RVA = "0x91D400", Offset = "0x91D400", VA = "0x91D400", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600079A")]
		[Address(RVA = "0x91D5EC", Offset = "0x91D5EC", VA = "0x91D5EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public PoolManager.PoolType weaponPool;

	[Token(Token = "0x6000792")]
	[Address(RVA = "0x91D090", Offset = "0x91D090", VA = "0x91D090")]
	private void Update()
	{
	}

	[Token(Token = "0x6000793")]
	[Address(RVA = "0x91D1B8", Offset = "0x91D1B8", VA = "0x91D1B8", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000794")]
	[Address(RVA = "0x91D350", Offset = "0x91D350", VA = "0x91D350")]
	[IteratorStateMachine(typeof(<selectWeapon>d__3))]
	private IEnumerator selectWeapon(NVRHand hand, NVRHand otherHand, Weapon newWeapon)
	{
		return null;
	}

	[Token(Token = "0x6000795")]
	[Address(RVA = "0x91D3F4", Offset = "0x91D3F4", VA = "0x91D3F4")]
	public WeaponSelector()
	{
	}
}
[Token(Token = "0x200017A")]
public class Skill
{
	[Token(Token = "0x200017B")]
	public enum SkillLevel
	{
		[Token(Token = "0x40006EC")]
		Idiot,
		[Token(Token = "0x40006ED")]
		Normal,
		[Token(Token = "0x40006EE")]
		Smart,
		[Token(Token = "0x40006EF")]
		JackBauer
	}

	[Token(Token = "0x200017C")]
	public enum GameLevel
	{
		[Token(Token = "0x40006F1")]
		rookie,
		[Token(Token = "0x40006F2")]
		hell
	}

	[Token(Token = "0x40006E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Dictionary<SkillLevel, float> coverOnHitPercents;

	[Token(Token = "0x40006E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Dictionary<SkillLevel, float> accuracyPercents;

	[Token(Token = "0x40006E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Dictionary<SkillLevel, float> maxAccuracyPercents;

	[Token(Token = "0x40006E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static float skillModifier;

	[Token(Token = "0x40006E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public static GameLevel gameLevel;

	[Token(Token = "0x40006E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static float adaptativeSkillModifier;

	[Token(Token = "0x40006EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static int MAX_SCORE_ADAPTATIVE;

	[Token(Token = "0x600079C")]
	[Address(RVA = "0x91D634", Offset = "0x91D634", VA = "0x91D634")]
	public Skill()
	{
	}

	[Token(Token = "0x600079D")]
	[Address(RVA = "0x91D858", Offset = "0x91D858", VA = "0x91D858")]
	public static bool coverOnHit(ThiefPoliceController character)
	{
		return default(bool);
	}

	[Token(Token = "0x600079E")]
	[Address(RVA = "0x91D928", Offset = "0x91D928", VA = "0x91D928")]
	public static float getAccurary(ThiefPoliceController character)
	{
		return default(float);
	}

	[Token(Token = "0x600079F")]
	[Address(RVA = "0x91D9E4", Offset = "0x91D9E4", VA = "0x91D9E4")]
	private static float getModifier(ThiefPoliceController character)
	{
		return default(float);
	}

	[Token(Token = "0x60007A0")]
	[Address(RVA = "0x91DAF4", Offset = "0x91DAF4", VA = "0x91DAF4")]
	public static float getMaxAccuracy(ThiefPoliceController character)
	{
		return default(float);
	}

	[Token(Token = "0x60007A1")]
	[Address(RVA = "0x91DBB0", Offset = "0x91DBB0", VA = "0x91DBB0")]
	public static void setLevel(GameLevel level)
	{
	}

	[Token(Token = "0x60007A2")]
	[Address(RVA = "0x91DC34", Offset = "0x91DC34", VA = "0x91DC34")]
	public static int getLifes()
	{
		return default(int);
	}

	[Token(Token = "0x60007A3")]
	[Address(RVA = "0x91DC98", Offset = "0x91DC98", VA = "0x91DC98")]
	public static float getRandomAccuracy(float randomMax)
	{
		return default(float);
	}

	[Token(Token = "0x60007A4")]
	[Address(RVA = "0x91DD24", Offset = "0x91DD24", VA = "0x91DD24")]
	public static void adjustScoreAdaptativeSkill(int iScore)
	{
	}

	[Token(Token = "0x60007A5")]
	[Address(RVA = "0x91073C", Offset = "0x91073C", VA = "0x91073C")]
	public static void increaseAdaptativeSkill()
	{
	}

	[Token(Token = "0x60007A6")]
	[Address(RVA = "0x91DE64", Offset = "0x91DE64", VA = "0x91DE64")]
	private void OnSceneActive()
	{
	}
}
[Token(Token = "0x200017D")]
public class SlowMotion : MonoBehaviour
{
	[Token(Token = "0x40006F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Rigidbody[] m_rigidBodys;

	[Token(Token = "0x40006F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<Rigidbody, SlowMotionData> m_data;

	[Token(Token = "0x40006F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float slowMotionDrag;

	[Token(Token = "0x40006F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float slowMotionAngularDrag;

	[Token(Token = "0x40006F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float slowMotionDuration;

	[Token(Token = "0x40006F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<Rigidbody> m_lRbForces;

	[Token(Token = "0x40006F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<Vector3> m_lRbForcesForce;

	[Token(Token = "0x40006FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool m_bActive;

	[Token(Token = "0x60007A8")]
	[Address(RVA = "0x91DF9C", Offset = "0x91DF9C", VA = "0x91DF9C")]
	private void Start()
	{
	}

	[Token(Token = "0x60007A9")]
	[Address(RVA = "0x91DFA0", Offset = "0x91DFA0", VA = "0x91DFA0")]
	private void Update()
	{
	}

	[Token(Token = "0x60007AA")]
	[Address(RVA = "0x91DFA4", Offset = "0x91DFA4", VA = "0x91DFA4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60007AB")]
	[Address(RVA = "0x91E1EC", Offset = "0x91E1EC", VA = "0x91E1EC")]
	public void ResetTransforms()
	{
	}

	[Token(Token = "0x60007AC")]
	[Address(RVA = "0x91E350", Offset = "0x91E350", VA = "0x91E350")]
	public void ActivateSlowMotion()
	{
	}

	[Token(Token = "0x60007AD")]
	[Address(RVA = "0x91E400", Offset = "0x91E400", VA = "0x91E400")]
	public void AddRigidbodyVelocity(Rigidbody r, Vector3 force)
	{
	}

	[Token(Token = "0x60007AE")]
	[Address(RVA = "0x91E54C", Offset = "0x91E54C", VA = "0x91E54C")]
	private void DeactivateSlowMotion()
	{
	}

	[Token(Token = "0x60007AF")]
	[Address(RVA = "0x91E61C", Offset = "0x91E61C", VA = "0x91E61C")]
	public SlowMotion()
	{
	}
}
[Token(Token = "0x200017E")]
internal class SlowMotionData
{
	[Token(Token = "0x40006FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float drag;

	[Token(Token = "0x40006FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float angularDrag;

	[Token(Token = "0x60007B0")]
	[Address(RVA = "0x91E1E4", Offset = "0x91E1E4", VA = "0x91E1E4")]
	public SlowMotionData()
	{
	}
}
[Token(Token = "0x200017F")]
public class FastSphereCollider : MonoBehaviour
{
	[Token(Token = "0x60007B1")]
	[Address(RVA = "0x91E734", Offset = "0x91E734", VA = "0x91E734")]
	private void Start()
	{
	}

	[Token(Token = "0x60007B2")]
	[Address(RVA = "0x91E738", Offset = "0x91E738", VA = "0x91E738")]
	private void Update()
	{
	}

	[Token(Token = "0x60007B3")]
	[Address(RVA = "0x91E73C", Offset = "0x91E73C", VA = "0x91E73C")]
	public FastSphereCollider()
	{
	}
}
[Token(Token = "0x2000180")]
public class Subtitler : MonoBehaviour
{
	[Token(Token = "0x2000181")]
	[CompilerGenerated]
	private sealed class <WriteCoroutine>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Subtitler <>4__this;

		[Token(Token = "0x4000706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string stext;

		[Token(Token = "0x4000707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private char[] <textArray>5__2;

		[Token(Token = "0x4000708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <i>5__3;

		[Token(Token = "0x17000073")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007BF")]
			[Address(RVA = "0x91EDAC", Offset = "0x91EDAC", VA = "0x91EDAC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000074")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007C1")]
			[Address(RVA = "0x91EDF4", Offset = "0x91EDF4", VA = "0x91EDF4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007BC")]
		[Address(RVA = "0x91EB3C", Offset = "0x91EB3C", VA = "0x91EB3C")]
		[DebuggerHidden]
		public <WriteCoroutine>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x60007BD")]
		[Address(RVA = "0x91EBCC", Offset = "0x91EBCC", VA = "0x91EBCC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007BE")]
		[Address(RVA = "0x91EBD0", Offset = "0x91EBD0", VA = "0x91EBD0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007C0")]
		[Address(RVA = "0x91EDB4", Offset = "0x91EDB4", VA = "0x91EDB4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Subtitler Instance;

	[Token(Token = "0x40006FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TextMeshPro text;

	[Token(Token = "0x40006FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Coroutine writeCoroutine;

	[Token(Token = "0x4000700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject subtitles;

	[Token(Token = "0x4000701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform subtitlesTransform;

	[Token(Token = "0x4000702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool rightHand;

	[Token(Token = "0x60007B4")]
	[Address(RVA = "0x91E744", Offset = "0x91E744", VA = "0x91E744")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007B5")]
	[Address(RVA = "0x91E888", Offset = "0x91E888", VA = "0x91E888")]
	private void Start()
	{
	}

	[Token(Token = "0x60007B6")]
	[Address(RVA = "0x91E9A0", Offset = "0x91E9A0", VA = "0x91E9A0")]
	private void Update()
	{
	}

	[Token(Token = "0x60007B7")]
	[Address(RVA = "0x91EA18", Offset = "0x91EA18", VA = "0x91EA18")]
	private void WriteInternal(string key)
	{
	}

	[Token(Token = "0x60007B8")]
	[Address(RVA = "0x91EAC8", Offset = "0x91EAC8", VA = "0x91EAC8")]
	[IteratorStateMachine(typeof(<WriteCoroutine>d__10))]
	private IEnumerator WriteCoroutine(string stext)
	{
		return null;
	}

	[Token(Token = "0x60007B9")]
	[Address(RVA = "0x91E88C", Offset = "0x91E88C", VA = "0x91E88C")]
	private void UpdateSubtitler()
	{
	}

	[Token(Token = "0x60007BA")]
	[Address(RVA = "0x91BED4", Offset = "0x91BED4", VA = "0x91BED4")]
	public static void Write(string key)
	{
	}

	[Token(Token = "0x60007BB")]
	[Address(RVA = "0x91EB64", Offset = "0x91EB64", VA = "0x91EB64")]
	public Subtitler()
	{
	}
}
[Token(Token = "0x2000182")]
public class TextSettings : MonoBehaviour
{
	[Token(Token = "0x60007C2")]
	[Address(RVA = "0x91EDFC", Offset = "0x91EDFC", VA = "0x91EDFC")]
	private void Start()
	{
	}

	[Token(Token = "0x60007C3")]
	[Address(RVA = "0x91EE00", Offset = "0x91EE00", VA = "0x91EE00")]
	private void Update()
	{
	}

	[Token(Token = "0x60007C4")]
	[Address(RVA = "0x91EE04", Offset = "0x91EE04", VA = "0x91EE04")]
	public TextSettings()
	{
	}
}
[Token(Token = "0x2000183")]
public class ThiefPoliceController : CommonCharacterController
{
	[Token(Token = "0x4000709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[HideInInspector]
	public AimIK aimIK;

	[Token(Token = "0x400070A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[HideInInspector]
	public AimController aimController;

	[Token(Token = "0x400070B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public WeaponData weaponData;

	[Token(Token = "0x400070C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public Skill.SkillLevel skillLevel;

	[Token(Token = "0x400070D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private Skill.SkillLevel coverSkillLevel;

	[Token(Token = "0x400070E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public bool isPolice;

	[Token(Token = "0x400070F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x149")]
	public bool immortal;

	[Token(Token = "0x4000710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14A")]
	private bool isRunning;

	[Token(Token = "0x60007C5")]
	[Address(RVA = "0x91EE0C", Offset = "0x91EE0C", VA = "0x91EE0C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007C6")]
	[Address(RVA = "0x91EEB8", Offset = "0x91EEB8", VA = "0x91EEB8", Slot = "8")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60007C7")]
	[Address(RVA = "0x91F3F8", Offset = "0x91F3F8", VA = "0x91F3F8", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x60007C8")]
	[Address(RVA = "0x91F4FC", Offset = "0x91F4FC", VA = "0x91F4FC", Slot = "12")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit, Collider collider, bool bRemote = false)
	{
		return default(bool);
	}

	[Token(Token = "0x60007C9")]
	[Address(RVA = "0x91F9B8", Offset = "0x91F9B8", VA = "0x91F9B8")]
	public void showWeaponTakeable(WeaponTakeable.BonusType bonusType, WeaponModel weaponModel)
	{
	}

	[Token(Token = "0x60007CA")]
	[Address(RVA = "0x91FA8C", Offset = "0x91FA8C", VA = "0x91FA8C", Slot = "10")]
	public override void AimToggle(bool state, bool setRootMotion = true)
	{
	}

	[Token(Token = "0x60007CB")]
	[Address(RVA = "0x91FB00", Offset = "0x91FB00", VA = "0x91FB00", Slot = "14")]
	public override void setWeaponStateRunning(bool state)
	{
	}

	[Token(Token = "0x60007CC")]
	[Address(RVA = "0x91FB28", Offset = "0x91FB28", VA = "0x91FB28")]
	public void setCoverSkillLevel(Skill.SkillLevel coverSkillLevel)
	{
	}

	[Token(Token = "0x60007CD")]
	[Address(RVA = "0x91FB30", Offset = "0x91FB30", VA = "0x91FB30")]
	public Skill.SkillLevel getCoverSkillLevel()
	{
		return default(Skill.SkillLevel);
	}

	[Token(Token = "0x60007CE")]
	[Address(RVA = "0x91FB38", Offset = "0x91FB38", VA = "0x91FB38")]
	public void cover(bool cover)
	{
	}

	[Token(Token = "0x60007CF")]
	[Address(RVA = "0x91FC94", Offset = "0x91FC94", VA = "0x91FC94")]
	public void setTarget(Vector3 target)
	{
	}

	[Token(Token = "0x60007D0")]
	[Address(RVA = "0x91FE88", Offset = "0x91FE88", VA = "0x91FE88")]
	public ThiefPoliceController()
	{
	}
}
[Token(Token = "0x2000184")]
public class TimeScreen : MonoBehaviour
{
	[Token(Token = "0x2000185")]
	[CompilerGenerated]
	private sealed class <showCoroutine>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400071A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TimeScreen <>4__this;

		[Token(Token = "0x400071B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool bShowTime;

		[Token(Token = "0x17000075")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007DF")]
			[Address(RVA = "0x92078C", Offset = "0x92078C", VA = "0x92078C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000076")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007E1")]
			[Address(RVA = "0x9207D4", Offset = "0x9207D4", VA = "0x9207D4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007DC")]
		[Address(RVA = "0x920590", Offset = "0x920590", VA = "0x920590")]
		[DebuggerHidden]
		public <showCoroutine>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x60007DD")]
		[Address(RVA = "0x9205B8", Offset = "0x9205B8", VA = "0x9205B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007DE")]
		[Address(RVA = "0x9205BC", Offset = "0x9205BC", VA = "0x9205BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007E0")]
		[Address(RVA = "0x920794", Offset = "0x920794", VA = "0x920794", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000186")]
	[CompilerGenerated]
	private sealed class <hideCoroutine>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400071C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400071D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400071E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TimeScreen <>4__this;

		[Token(Token = "0x17000077")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007E5")]
			[Address(RVA = "0x9209C8", Offset = "0x9209C8", VA = "0x9209C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000078")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007E7")]
			[Address(RVA = "0x920A10", Offset = "0x920A10", VA = "0x920A10", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007E2")]
		[Address(RVA = "0x9207DC", Offset = "0x9207DC", VA = "0x9207DC")]
		[DebuggerHidden]
		public <hideCoroutine>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x60007E3")]
		[Address(RVA = "0x920804", Offset = "0x920804", VA = "0x920804", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007E4")]
		[Address(RVA = "0x920808", Offset = "0x920808", VA = "0x920808", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007E6")]
		[Address(RVA = "0x9209D0", Offset = "0x9209D0", VA = "0x9209D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int currentTime;

	[Token(Token = "0x4000712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private TextMeshPro text;

	[Token(Token = "0x4000713")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material plane;

	[Token(Token = "0x4000714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Material time;

	[Token(Token = "0x4000715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static TimeScreen Instance;

	[Token(Token = "0x4000716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int defaultCameraCullingMask;

	[Token(Token = "0x4000717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int[] timeSplit;

	[Token(Token = "0x60007D1")]
	[Address(RVA = "0x91FEE0", Offset = "0x91FEE0", VA = "0x91FEE0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007D2")]
	[Address(RVA = "0x920014", Offset = "0x920014", VA = "0x920014")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60007D3")]
	[Address(RVA = "0x9200B4", Offset = "0x9200B4", VA = "0x9200B4")]
	private void updateTime()
	{
	}

	[Token(Token = "0x60007D4")]
	[Address(RVA = "0x917FD0", Offset = "0x917FD0", VA = "0x917FD0")]
	public static string parseTime(int i)
	{
		return null;
	}

	[Token(Token = "0x60007D5")]
	[Address(RVA = "0x9202BC", Offset = "0x9202BC", VA = "0x9202BC")]
	public void show(bool bShowTime, bool bFade)
	{
	}

	[Token(Token = "0x60007D6")]
	[Address(RVA = "0x920350", Offset = "0x920350", VA = "0x920350")]
	[IteratorStateMachine(typeof(<showCoroutine>d__11))]
	private IEnumerator showCoroutine(bool bShowTime)
	{
		return null;
	}

	[Token(Token = "0x60007D7")]
	[Address(RVA = "0x917E5C", Offset = "0x917E5C", VA = "0x917E5C")]
	public static int[] getTimeSplit(float time)
	{
		return null;
	}

	[Token(Token = "0x60007D8")]
	[Address(RVA = "0x9203CC", Offset = "0x9203CC", VA = "0x9203CC")]
	public void hide()
	{
	}

	[Token(Token = "0x60007D9")]
	[Address(RVA = "0x9204B8", Offset = "0x9204B8", VA = "0x9204B8")]
	[IteratorStateMachine(typeof(<hideCoroutine>d__15))]
	private IEnumerator hideCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60007DA")]
	[Address(RVA = "0x920520", Offset = "0x920520", VA = "0x920520")]
	public TimeScreen()
	{
	}
}
[Token(Token = "0x2000187")]
public class TriggerTest : MonoBehaviour
{
	[Token(Token = "0x60007E8")]
	[Address(RVA = "0x920A18", Offset = "0x920A18", VA = "0x920A18")]
	private void Start()
	{
	}

	[Token(Token = "0x60007E9")]
	[Address(RVA = "0x920A1C", Offset = "0x920A1C", VA = "0x920A1C")]
	private void Update()
	{
	}

	[Token(Token = "0x60007EA")]
	[Address(RVA = "0x920A20", Offset = "0x920A20", VA = "0x920A20")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60007EB")]
	[Address(RVA = "0x920B0C", Offset = "0x920B0C", VA = "0x920B0C")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60007EC")]
	[Address(RVA = "0x920BF8", Offset = "0x920BF8", VA = "0x920BF8")]
	public TriggerTest()
	{
	}
}
[Token(Token = "0x2000188")]
public class DummyTrophyManager : TrophyManager
{
	[Token(Token = "0x60007ED")]
	[Address(RVA = "0x920C00", Offset = "0x920C00", VA = "0x920C00")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007EE")]
	[Address(RVA = "0x920C98", Offset = "0x920C98", VA = "0x920C98")]
	public DummyTrophyManager()
	{
	}
}
[Token(Token = "0x2000189")]
public class SteamTrophyManager : TrophyManager
{
	[Token(Token = "0x400071F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<Trophy> unlockedTrophies;

	[Token(Token = "0x4000720")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool initialized;

	[Token(Token = "0x60007EF")]
	[Address(RVA = "0x920CA8", Offset = "0x920CA8", VA = "0x920CA8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007F0")]
	[Address(RVA = "0x920D40", Offset = "0x920D40", VA = "0x920D40")]
	private void setTrophyUnlocked()
	{
	}

	[Token(Token = "0x60007F1")]
	[Address(RVA = "0x920D44", Offset = "0x920D44", VA = "0x920D44", Slot = "4")]
	public override void UnlockTrophy(Trophy trophy)
	{
	}

	[Token(Token = "0x60007F2")]
	[Address(RVA = "0x920D48", Offset = "0x920D48", VA = "0x920D48")]
	public SteamTrophyManager()
	{
	}
}
[Token(Token = "0x200018A")]
public class TrophyManager : MonoBehaviour
{
	[Token(Token = "0x200018B")]
	public enum Trophy
	{
		[Token(Token = "0x4000723")]
		FirstShot,
		[Token(Token = "0x4000724")]
		FirstHeadshot,
		[Token(Token = "0x4000725")]
		FirstSceneCompleted,
		[Token(Token = "0x4000726")]
		KillBuddie,
		[Token(Token = "0x4000727")]
		FirstShotBonusWeapon,
		[Token(Token = "0x4000728")]
		FirstHeadshotSlowMotion,
		[Token(Token = "0x4000729")]
		BombsExploded,
		[Token(Token = "0x400072A")]
		Gameplay100,
		[Token(Token = "0x400072B")]
		AllHostageAlive,
		[Token(Token = "0x400072C")]
		Headshots1000,
		[Token(Token = "0x400072D")]
		MissionAccomplished,
		[Token(Token = "0x400072E")]
		MissionAccomplishedHellMode
	}

	[Token(Token = "0x4000721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static TrophyManager Instance;

	[Token(Token = "0x60007F3")]
	[Address(RVA = "0x920DC4", Offset = "0x920DC4", VA = "0x920DC4", Slot = "4")]
	public virtual void UnlockTrophy(Trophy trophy)
	{
	}

	[Token(Token = "0x60007F4")]
	[Address(RVA = "0x920CA0", Offset = "0x920CA0", VA = "0x920CA0")]
	public TrophyManager()
	{
	}
}
[Token(Token = "0x200018C")]
public class WalkieTalkie : MonoBehaviour
{
	[Token(Token = "0x200018D")]
	public enum CommunicationEvent
	{
		[Token(Token = "0x400073D")]
		alone,
		[Token(Token = "0x400073E")]
		ammo,
		[Token(Token = "0x400073F")]
		barrel_expl,
		[Token(Token = "0x4000740")]
		careful_bombs,
		[Token(Token = "0x4000741")]
		careful_hostages,
		[Token(Token = "0x4000742")]
		full_ammo,
		[Token(Token = "0x4000743")]
		gallery_badscore,
		[Token(Token = "0x4000744")]
		gallery_book,
		[Token(Token = "0x4000745")]
		gallery_goodscore,
		[Token(Token = "0x4000746")]
		gallery_headphone,
		[Token(Token = "0x4000747")]
		gallery_newrecord,
		[Token(Token = "0x4000748")]
		gallery_phone,
		[Token(Token = "0x4000749")]
		gallery_radio,
		[Token(Token = "0x400074A")]
		gallery_random,
		[Token(Token = "0x400074B")]
		game_over,
		[Token(Token = "0x400074C")]
		headshot,
		[Token(Token = "0x400074D")]
		hit_comp,
		[Token(Token = "0x400074E")]
		hit_player,
		[Token(Token = "0x400074F")]
		items_extra_life,
		[Token(Token = "0x4000750")]
		items_time,
		[Token(Token = "0x4000751")]
		items_weapon,
		[Token(Token = "0x4000752")]
		kill_comp,
		[Token(Token = "0x4000753")]
		kill_comp_male,
		[Token(Token = "0x4000754")]
		kill_comp_female,
		[Token(Token = "0x4000755")]
		last_enemy,
		[Token(Token = "0x4000756")]
		last_life,
		[Token(Token = "0x4000757")]
		menu_bank,
		[Token(Token = "0x4000758")]
		menu_gallery,
		[Token(Token = "0x4000759")]
		menu_hell,
		[Token(Token = "0x400075A")]
		menu_office,
		[Token(Token = "0x400075B")]
		menu_officelocked,
		[Token(Token = "0x400075C")]
		menu_officeunlocked,
		[Token(Token = "0x400075D")]
		menu_port,
		[Token(Token = "0x400075E")]
		menu_portlocked,
		[Token(Token = "0x400075F")]
		menu_portunlocked,
		[Token(Token = "0x4000760")]
		menu_welcome,
		[Token(Token = "0x4000761")]
		mission_bank_clown,
		[Token(Token = "0x4000762")]
		mission_bank_fox,
		[Token(Token = "0x4000763")]
		mission_bank_gasmask,
		[Token(Token = "0x4000764")]
		mission_bank_horse,
		[Token(Token = "0x4000765")]
		mission_bank_hostagebomb,
		[Token(Token = "0x4000766")]
		mission_bank_trump,
		[Token(Token = "0x4000767")]
		mission_port_3missiles,
		[Token(Token = "0x4000768")]
		mission_port_bazooka,
		[Token(Token = "0x4000769")]
		mission_port_crane,
		[Token(Token = "0x400076A")]
		mission_port_enemybazooka,
		[Token(Token = "0x400076B")]
		mission_port_gameovertime,
		[Token(Token = "0x400076C")]
		mission_port_helicopter,
		[Token(Token = "0x400076D")]
		mission_port_persecution,
		[Token(Token = "0x400076E")]
		mission_office_killtromp,
		[Token(Token = "0x400076F")]
		mission_office_rooftop,
		[Token(Token = "0x4000770")]
		mission_office_spoon,
		[Token(Token = "0x4000771")]
		mission_office_touch_this,
		[Token(Token = "0x4000772")]
		next_area,
		[Token(Token = "0x4000773")]
		no_aim,
		[Token(Token = "0x4000774")]
		no_aim_menu,
		[Token(Token = "0x4000775")]
		not_shooting,
		[Token(Token = "0x4000776")]
		time_bank,
		[Token(Token = "0x4000777")]
		time_port
	}

	[Token(Token = "0x200018E")]
	private class CommunicationEventData
	{
		[Token(Token = "0x4000778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private AudioClip[] clips;

		[Token(Token = "0x4000779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int currentClip;

		[Token(Token = "0x400077A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int priority;

		[Token(Token = "0x400077B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool repeat;

		[Token(Token = "0x400077C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float reproduceProbability;

		[Token(Token = "0x6000803")]
		[Address(RVA = "0x92198C", Offset = "0x92198C", VA = "0x92198C")]
		public CommunicationEventData(AudioClip[] clips, int priority, bool repeat, float reproduceProbability)
		{
		}

		[Token(Token = "0x6000804")]
		[Address(RVA = "0x92163C", Offset = "0x92163C", VA = "0x92163C")]
		public AudioClip getClip()
		{
			return null;
		}

		[Token(Token = "0x6000805")]
		[Address(RVA = "0x921808", Offset = "0x921808", VA = "0x921808")]
		public AudioClip getClip(string clipName)
		{
			return null;
		}

		[Token(Token = "0x6000806")]
		[Address(RVA = "0x921548", Offset = "0x921548", VA = "0x921548")]
		public bool higher(CommunicationEventData eventData)
		{
			return default(bool);
		}

		[Token(Token = "0x6000807")]
		[Address(RVA = "0x921568", Offset = "0x921568", VA = "0x921568")]
		public bool isPlayable()
		{
			return default(bool);
		}

		[Token(Token = "0x6000808")]
		[Address(RVA = "0x9219E0", Offset = "0x9219E0", VA = "0x9219E0")]
		private void RandomizeClips()
		{
		}
	}

	[Token(Token = "0x200018F")]
	[CompilerGenerated]
	private sealed class <loadClipsCoroutine>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400077D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400077E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400077F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WalkieTalkie <>4__this;

		[Token(Token = "0x4000780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LocalizationManager.Language language;

		[Token(Token = "0x4000781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <counter>5__2;

		[Token(Token = "0x4000782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string[] <soundsData>5__3;

		[Token(Token = "0x4000783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string <soundsPath>5__4;

		[Token(Token = "0x4000784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int <i>5__5;

		[Token(Token = "0x17000079")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600080C")]
			[Address(RVA = "0x921F24", Offset = "0x921F24", VA = "0x921F24", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600080E")]
			[Address(RVA = "0x921F6C", Offset = "0x921F6C", VA = "0x921F6C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000809")]
		[Address(RVA = "0x921318", Offset = "0x921318", VA = "0x921318")]
		[DebuggerHidden]
		public <loadClipsCoroutine>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x600080A")]
		[Address(RVA = "0x921B3C", Offset = "0x921B3C", VA = "0x921B3C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600080B")]
		[Address(RVA = "0x921B40", Offset = "0x921B40", VA = "0x921B40", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600080D")]
		[Address(RVA = "0x921F2C", Offset = "0x921F2C", VA = "0x921F2C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000190")]
	[CompilerGenerated]
	private sealed class <PlayCoroutine>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WalkieTalkie <>4__this;

		[Token(Token = "0x4000788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioClip clip;

		[Token(Token = "0x1700007B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000812")]
			[Address(RVA = "0x922218", Offset = "0x922218", VA = "0x922218", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000814")]
			[Address(RVA = "0x922260", Offset = "0x922260", VA = "0x922260", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600080F")]
		[Address(RVA = "0x9218E8", Offset = "0x9218E8", VA = "0x9218E8")]
		[DebuggerHidden]
		public <PlayCoroutine>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x6000810")]
		[Address(RVA = "0x921F74", Offset = "0x921F74", VA = "0x921F74", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000811")]
		[Address(RVA = "0x921F78", Offset = "0x921F78", VA = "0x921F78", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000813")]
		[Address(RVA = "0x922220", Offset = "0x922220", VA = "0x922220", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400072F")]
	private const string SOUNDS_PATH = "WalkieTalkieSounds";

	[Token(Token = "0x4000730")]
	private const string SLASH = "/";

	[Token(Token = "0x4000731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool mute;

	[Token(Token = "0x4000732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextAsset metadata;

	[Token(Token = "0x4000733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static WalkieTalkie Instance;

	[Token(Token = "0x4000734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip startCommunication;

	[Token(Token = "0x4000735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip endCommuncation;

	[Token(Token = "0x4000736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AudioSource audioSource;

	[Token(Token = "0x4000737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Dictionary<CommunicationEvent, CommunicationEventData> communicationEvents;

	[Token(Token = "0x4000738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private CommunicationEventData currentCommunicationEventData;

	[Token(Token = "0x4000739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Coroutine playCoroutineHandle;

	[Token(Token = "0x400073A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool subtitlesEnable;

	[Token(Token = "0x400073B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool walkieTalkieEnabled;

	[Token(Token = "0x60007F5")]
	[Address(RVA = "0x920DC8", Offset = "0x920DC8", VA = "0x920DC8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007F6")]
	[Address(RVA = "0x920FD0", Offset = "0x920FD0", VA = "0x920FD0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60007F7")]
	[Address(RVA = "0x9210D4", Offset = "0x9210D4", VA = "0x9210D4")]
	public void SetState(bool enable)
	{
	}

	[Token(Token = "0x60007F8")]
	[Address(RVA = "0x9211D8", Offset = "0x9211D8", VA = "0x9211D8")]
	public bool IsEnable()
	{
		return default(bool);
	}

	[Token(Token = "0x60007F9")]
	[Address(RVA = "0x9211E0", Offset = "0x9211E0", VA = "0x9211E0")]
	public void ForceStop()
	{
	}

	[Token(Token = "0x60007FA")]
	[Address(RVA = "0x9210E8", Offset = "0x9210E8", VA = "0x9210E8")]
	public void loadClips()
	{
	}

	[Token(Token = "0x60007FB")]
	[Address(RVA = "0x9212A0", Offset = "0x9212A0", VA = "0x9212A0")]
	[IteratorStateMachine(typeof(<loadClipsCoroutine>d__20))]
	private IEnumerator loadClipsCoroutine(LocalizationManager.Language language)
	{
		return null;
	}

	[Token(Token = "0x60007FC")]
	[Address(RVA = "0x921340", Offset = "0x921340", VA = "0x921340")]
	private string getSoundsPath(LocalizationManager.Language language)
	{
		return null;
	}

	[Token(Token = "0x60007FD")]
	[Address(RVA = "0x921454", Offset = "0x921454", VA = "0x921454")]
	public void Play(CommunicationEvent communicationEvent)
	{
	}

	[Token(Token = "0x60007FE")]
	[Address(RVA = "0x921714", Offset = "0x921714", VA = "0x921714")]
	private void communication()
	{
	}

	[Token(Token = "0x60007FF")]
	[Address(RVA = "0x92171C", Offset = "0x92171C", VA = "0x92171C")]
	public void PlayTime(CommunicationEvent communicationEvent, string minute)
	{
	}

	[Token(Token = "0x6000800")]
	[Address(RVA = "0x9218A8", Offset = "0x9218A8", VA = "0x9218A8")]
	private AudioClip getClip(AudioClip[] clips)
	{
		return null;
	}

	[Token(Token = "0x6000801")]
	[Address(RVA = "0x9216A0", Offset = "0x9216A0", VA = "0x9216A0")]
	[IteratorStateMachine(typeof(<PlayCoroutine>d__26))]
	private IEnumerator PlayCoroutine(AudioClip clip)
	{
		return null;
	}

	[Token(Token = "0x6000802")]
	[Address(RVA = "0x921910", Offset = "0x921910", VA = "0x921910")]
	public WalkieTalkie()
	{
	}
}
[Token(Token = "0x2000191")]
public class Waypoint : MonoBehaviour
{
	[Token(Token = "0x4000789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float distanceToNextWayPoint;

	[Token(Token = "0x6000815")]
	[Address(RVA = "0x922268", Offset = "0x922268", VA = "0x922268")]
	public Waypoint()
	{
	}
}
[Token(Token = "0x2000192")]
public class WeaponSwitcher : MonoBehaviour
{
	[Token(Token = "0x400078A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static WeaponSwitcher Instance;

	[Token(Token = "0x400078B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public WeaponModel currentWeapon;

	[Token(Token = "0x6000816")]
	[Address(RVA = "0x922270", Offset = "0x922270", VA = "0x922270")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000817")]
	[Address(RVA = "0x9222C8", Offset = "0x9222C8", VA = "0x9222C8")]
	public WeaponSwitcher()
	{
	}
}
[Token(Token = "0x2000193")]
public class WeaponTakeable : HitTarget
{
	[Token(Token = "0x2000194")]
	public enum BonusType
	{
		[Token(Token = "0x40007A0")]
		weapon,
		[Token(Token = "0x40007A1")]
		life,
		[Token(Token = "0x40007A2")]
		bulletTime
	}

	[Token(Token = "0x400078C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float WEAPON_TAKEABLE_PROBABILITY;

	[Token(Token = "0x400078D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int MAX_LIFES;

	[Token(Token = "0x400078E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool disableWeapons;

	[Token(Token = "0x400078F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static SumalabEvent OnBulletTime;

	[Token(Token = "0x4000790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform m_tube;

	[Token(Token = "0x4000791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform m_weapon;

	[Token(Token = "0x4000792")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Weapon weapon;

	[Token(Token = "0x4000793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static float s_bonusProbability;

	[Token(Token = "0x4000794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private static float s_lifeProbability;

	[Token(Token = "0x4000795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public BonusType bonusType;

	[Token(Token = "0x4000796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool showIconAlways;

	[Token(Token = "0x4000797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float takeableTime;

	[Token(Token = "0x4000798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public WeaponModel weaponModel;

	[Token(Token = "0x4000799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool exclusive;

	[Token(Token = "0x400079A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool exclusiveUsed;

	[Token(Token = "0x400079B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	public bool onlinePermanent;

	[Token(Token = "0x400079C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
	public bool onlinePermanentFixed;

	[Token(Token = "0x400079D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Vector3 onlinePermanentDeltaPosition;

	[Token(Token = "0x400079E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool allowOnDisabledWeapons;

	[Token(Token = "0x1700007D")]
	protected static float TAKE_WEAPON_DURATION
	{
		[Token(Token = "0x6000818")]
		[Address(RVA = "0x9222D8", Offset = "0x9222D8", VA = "0x9222D8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000819")]
	[Address(RVA = "0x9222F8", Offset = "0x9222F8", VA = "0x9222F8", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x600081A")]
	[Address(RVA = "0x9234B4", Offset = "0x9234B4", VA = "0x9234B4")]
	public void hideWeaponIcon()
	{
	}

	[Token(Token = "0x600081B")]
	[Address(RVA = "0x922788", Offset = "0x922788", VA = "0x922788")]
	public void OnHitImpl()
	{
	}

	[Token(Token = "0x600081C")]
	[Address(RVA = "0x923B38", Offset = "0x923B38", VA = "0x923B38")]
	private void catchBonus(Transform go, Transform destination)
	{
	}

	[Token(Token = "0x600081D")]
	[Address(RVA = "0x923D48", Offset = "0x923D48", VA = "0x923D48")]
	public bool activate()
	{
		return default(bool);
	}

	[Token(Token = "0x600081E")]
	[Address(RVA = "0x924198", Offset = "0x924198", VA = "0x924198")]
	private bool prepareWeaponIcon()
	{
		return default(bool);
	}

	[Token(Token = "0x600081F")]
	[Address(RVA = "0x924828", Offset = "0x924828", VA = "0x924828")]
	public bool isWeaponAcceptable(WeaponModel weaponModel)
	{
		return default(bool);
	}

	[Token(Token = "0x6000820")]
	[Address(RVA = "0x923E5C", Offset = "0x923E5C", VA = "0x923E5C")]
	public void activate(BonusType bonusType, WeaponModel weaponModel, int currentBullets = -1)
	{
	}

	[Token(Token = "0x6000821")]
	[Address(RVA = "0x924974", Offset = "0x924974", VA = "0x924974")]
	private void showWeaponIcon()
	{
	}

	[Token(Token = "0x6000822")]
	[Address(RVA = "0x9248D0", Offset = "0x9248D0", VA = "0x9248D0")]
	private bool twoHandsInitialized()
	{
		return default(bool);
	}

	[Token(Token = "0x6000823")]
	[Address(RVA = "0x924B1C", Offset = "0x924B1C", VA = "0x924B1C")]
	public WeaponTakeable()
	{
	}
}
[Token(Token = "0x2000197")]
public class InfoBubble : MonoBehaviour
{
	[Token(Token = "0x40007A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 WobbleAxis;

	[Token(Token = "0x40007A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float WobbleFrequency;

	[Token(Token = "0x40007A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float WobbleAmplitude;

	[Token(Token = "0x40007AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform TrackTarget;

	[Token(Token = "0x40007AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 startOffsetTarget;

	[Token(Token = "0x600082A")]
	[Address(RVA = "0x924E0C", Offset = "0x924E0C", VA = "0x924E0C")]
	private void Start()
	{
	}

	[Token(Token = "0x600082B")]
	[Address(RVA = "0x924E74", Offset = "0x924E74", VA = "0x924E74")]
	private void Update()
	{
	}

	[Token(Token = "0x600082C")]
	[Address(RVA = "0x924F40", Offset = "0x924F40", VA = "0x924F40")]
	public InfoBubble()
	{
	}
}
[Token(Token = "0x2000198")]
public class RuntimeDecalCombiner
{
	[Token(Token = "0x600082D")]
	[Address(RVA = "0x924FAC", Offset = "0x924FAC", VA = "0x924FAC")]
	public static List<GameObject> Combine(IList<EasyDecal> decals)
	{
		return null;
	}

	[Token(Token = "0x600082E")]
	[Address(RVA = "0x925470", Offset = "0x925470", VA = "0x925470")]
	private static List<GameObject> Combine(Dictionary<DecalTextureAtlas, List<EasyDecal>> mappings)
	{
		return null;
	}

	[Token(Token = "0x600082F")]
	[Address(RVA = "0x925A18", Offset = "0x925A18", VA = "0x925A18")]
	private static GameObject Combine(IList<EasyDecal> decals, DecalTextureAtlas atlas)
	{
		return null;
	}

	[Token(Token = "0x6000830")]
	[Address(RVA = "0x925F9C", Offset = "0x925F9C", VA = "0x925F9C")]
	public RuntimeDecalCombiner()
	{
	}
}
[Token(Token = "0x2000199")]
public class SparksExecutioner : MonoBehaviour
{
	[Token(Token = "0x40007AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Lifetime;

	[Token(Token = "0x6000831")]
	[Address(RVA = "0x925FA4", Offset = "0x925FA4", VA = "0x925FA4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000832")]
	[Address(RVA = "0x925FF4", Offset = "0x925FF4", VA = "0x925FF4")]
	private void Kill()
	{
	}

	[Token(Token = "0x6000833")]
	[Address(RVA = "0x926060", Offset = "0x926060", VA = "0x926060")]
	public SparksExecutioner()
	{
	}
}
[Token(Token = "0x200019A")]
public class ButtonAnimator : MonoBehaviour
{
	[Token(Token = "0x200019B")]
	public delegate void PhysicalHandsOnHoldButtonPressed(bool state);

	[Token(Token = "0x200019C")]
	private class ButtonData
	{
		[Token(Token = "0x40007BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform button;

		[Token(Token = "0x40007BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public NVRButtonInputs buttonInput;

		[Token(Token = "0x40007BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 initialPosition;

		[Token(Token = "0x40007C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 pressedPosition;

		[Token(Token = "0x40007C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AnimatedElementData[] animatedElements;

		[Token(Token = "0x600084F")]
		[Address(RVA = "0x928168", Offset = "0x928168", VA = "0x928168")]
		public ButtonData()
		{
		}
	}

	[Token(Token = "0x200019D")]
	private class AnimatedElementData
	{
		[Token(Token = "0x40007C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform transform;

		[Token(Token = "0x40007C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 initRotation;

		[Token(Token = "0x40007C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 deltaRotation;

		[Token(Token = "0x6000850")]
		[Address(RVA = "0x928170", Offset = "0x928170", VA = "0x928170")]
		public AnimatedElementData()
		{
		}
	}

	[Token(Token = "0x40007AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ButtonData[] positionAnimatedButtons;

	[Token(Token = "0x40007AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ButtonData[] rotationAnimatedButtons;

	[Token(Token = "0x40007AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ButtonData[] stickButtons;

	[Token(Token = "0x40007B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private TutorialHelper tutorialHelper;

	[Token(Token = "0x40007B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform elements;

	[Token(Token = "0x40007B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform buttons;

	[Token(Token = "0x40007B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform buttonsPressed;

	[Token(Token = "0x40007B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform elementsPressed;

	[Token(Token = "0x40007B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private NVRHand Hand;

	[Token(Token = "0x40007B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Rigidbody Rigidbody;

	[Token(Token = "0x40007B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private SphereCollider triggerCollider;

	[Token(Token = "0x40007B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Material sphereTriggerMaterial;

	[Token(Token = "0x40007B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Material spherePhysicalMaterial;

	[Token(Token = "0x40007BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool CollisionsEnabled;

	[Token(Token = "0x40007BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float HoldButtonPressedDuration;

	[Token(Token = "0x14000002")]
	public static event PhysicalHandsOnHoldButtonPressed OnPhysicalHandChanged
	{
		[Token(Token = "0x6000834")]
		[Address(RVA = "0x926070", Offset = "0x926070", VA = "0x926070")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000835")]
		[Address(RVA = "0x926128", Offset = "0x926128", VA = "0x926128")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000836")]
	[Address(RVA = "0x9261E0", Offset = "0x9261E0", VA = "0x9261E0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000837")]
	[Address(RVA = "0x926620", Offset = "0x926620", VA = "0x926620")]
	public void Initialize(NVRHand hand, GameObject model)
	{
	}

	[Token(Token = "0x6000838")]
	[Address(RVA = "0x926C6C", Offset = "0x926C6C", VA = "0x926C6C")]
	private void setSteamVR_ViveButtons(GameObject model, NVRHand hand)
	{
	}

	[Token(Token = "0x6000839")]
	[Address(RVA = "0x926964", Offset = "0x926964", VA = "0x926964")]
	private void setSteamVR_WindowsMRButtons(GameObject model, NVRHand hand)
	{
	}

	[Token(Token = "0x600083A")]
	[Address(RVA = "0x926F44", Offset = "0x926F44", VA = "0x926F44")]
	private void setOculusButtons(GameObject model, NVRHand hand)
	{
	}

	[Token(Token = "0x600083B")]
	[Address(RVA = "0x927384", Offset = "0x927384", VA = "0x927384")]
	private void setPSMoveButtons(GameObject model, NVRHand hand)
	{
	}

	[Token(Token = "0x600083C")]
	[Address(RVA = "0x9275F0", Offset = "0x9275F0", VA = "0x9275F0")]
	private void setDualshockButtons(GameObject model, NVRHand hand)
	{
	}

	[Token(Token = "0x600083D")]
	[Address(RVA = "0x927FA0", Offset = "0x927FA0", VA = "0x927FA0")]
	private ButtonData createPositionButtonData(NVRButtonInputs buttonInput, string buttonName)
	{
		return null;
	}

	[Token(Token = "0x600083E")]
	[Address(RVA = "0x927B00", Offset = "0x927B00", VA = "0x927B00")]
	private ButtonData createRotationButtonData(NVRButtonInputs buttonInput, string buttonName)
	{
		return null;
	}

	[Token(Token = "0x600083F")]
	[Address(RVA = "0x928074", Offset = "0x928074", VA = "0x928074")]
	private ButtonData createStickButtonData(NVRButtonInputs buttonInput, string buttonName, Vector2 direction)
	{
		return null;
	}

	[Token(Token = "0x6000840")]
	[Address(RVA = "0x9280D0", Offset = "0x9280D0", VA = "0x9280D0")]
	private ButtonData createButtonData(NVRButtonInputs buttonInput, string buttonName)
	{
		return null;
	}

	[Token(Token = "0x6000841")]
	[Address(RVA = "0x927BD4", Offset = "0x927BD4", VA = "0x927BD4")]
	private AnimatedElementData[] GetTriggerAnimatedElementsData()
	{
		return null;
	}

	[Token(Token = "0x6000842")]
	[Address(RVA = "0x928178", Offset = "0x928178", VA = "0x928178")]
	private Vector3 getDeltaRotation(Vector3 initialRotation, Vector3 finalRotation)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000843")]
	[Address(RVA = "0x92821C", Offset = "0x92821C", VA = "0x92821C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000844")]
	[Address(RVA = "0x928308", Offset = "0x928308", VA = "0x928308")]
	private void UpdateHandMode()
	{
	}

	[Token(Token = "0x6000845")]
	[Address(RVA = "0x926524", Offset = "0x926524", VA = "0x926524")]
	public void detectCollisions(bool detectCollisions)
	{
	}

	[Token(Token = "0x6000846")]
	[Address(RVA = "0x928234", Offset = "0x928234", VA = "0x928234")]
	private void UpdateButtons()
	{
	}

	[Token(Token = "0x6000847")]
	[Address(RVA = "0x928468", Offset = "0x928468", VA = "0x928468")]
	private void updateButtonRotation(ButtonData buttonData)
	{
	}

	[Token(Token = "0x6000848")]
	[Address(RVA = "0x9286A8", Offset = "0x9286A8", VA = "0x9286A8")]
	private void updateButtonPosition(ButtonData buttonData)
	{
	}

	[Token(Token = "0x6000849")]
	[Address(RVA = "0x92872C", Offset = "0x92872C", VA = "0x92872C")]
	private void updateStickButton(ButtonData buttonData)
	{
	}

	[Token(Token = "0x600084A")]
	[Address(RVA = "0x9287E4", Offset = "0x9287E4", VA = "0x9287E4")]
	public ButtonAnimator()
	{
	}
}
[Token(Token = "0x200019E")]
public class CustomNVRHand : NVRHand
{
	[Token(Token = "0x200019F")]
	public delegate void HandInitializedEvent(NVRHand hand);

	[Token(Token = "0x40007C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[HideInInspector]
	public NVRTeleportPointer teleportPointer;

	[Token(Token = "0x40007C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private float pressedDuration;

	[Token(Token = "0x40007C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static float RESET_POSITION_DURATION;

	[Token(Token = "0x14000003")]
	public static event HandInitializedEvent OnHandInitialized
	{
		[Token(Token = "0x6000851")]
		[Address(RVA = "0x92895C", Offset = "0x92895C", VA = "0x92895C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000852")]
		[Address(RVA = "0x928A34", Offset = "0x928A34", VA = "0x928A34")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000853")]
	[Address(RVA = "0x928B0C", Offset = "0x928B0C", VA = "0x928B0C", Slot = "16")]
	public override void Initialize()
	{
	}

	[Token(Token = "0x6000854")]
	[Address(RVA = "0x928BF8", Offset = "0x928BF8", VA = "0x928BF8")]
	public Transform getTeleportPointer()
	{
		return null;
	}

	[Token(Token = "0x6000855")]
	[Address(RVA = "0x928C74", Offset = "0x928C74", VA = "0x928C74", Slot = "5")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000856")]
	[Address(RVA = "0x928D34", Offset = "0x928D34", VA = "0x928D34")]
	private bool recenterButtonPressed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000857")]
	[Address(RVA = "0x928DD0", Offset = "0x928DD0", VA = "0x928DD0")]
	public CustomNVRHand()
	{
	}
}
[Token(Token = "0x20001A0")]
public static class ExtensionMethods
{
	[Token(Token = "0x600085D")]
	[Address(RVA = "0x9244B4", Offset = "0x9244B4", VA = "0x9244B4")]
	public static Transform FindDeepChild(this Transform aParent, string aName)
	{
		return null;
	}

	[Token(Token = "0x600085E")]
	[Address(RVA = "0x923840", Offset = "0x923840", VA = "0x923840")]
	public static void SetLayerRecursively(this GameObject obj, int layer)
	{
	}
}
[Token(Token = "0x20001A1")]
[ExecuteInEditMode]
public class RenderDepth : MonoBehaviour
{
	[Token(Token = "0x600085F")]
	[Address(RVA = "0x928FE0", Offset = "0x928FE0", VA = "0x928FE0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000860")]
	[Address(RVA = "0x92903C", Offset = "0x92903C", VA = "0x92903C")]
	public RenderDepth()
	{
	}
}
[Token(Token = "0x20001A2")]
public class FPSDisplay : MonoBehaviour
{
	[Token(Token = "0x40007C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float deltaTime;

	[Token(Token = "0x40007CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshPro textMesh;

	[Token(Token = "0x6000861")]
	[Address(RVA = "0x929044", Offset = "0x929044", VA = "0x929044")]
	private void Start()
	{
	}

	[Token(Token = "0x6000862")]
	[Address(RVA = "0x929070", Offset = "0x929070", VA = "0x929070")]
	private void Update()
	{
	}

	[Token(Token = "0x6000863")]
	[Address(RVA = "0x929178", Offset = "0x929178", VA = "0x929178")]
	public FPSDisplay()
	{
	}
}
[Token(Token = "0x20001A3")]
public class LinePainter : MonoBehaviour
{
	[Token(Token = "0x40007CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int segmentCount;

	[Token(Token = "0x40007CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Tooltip("Value with scale 1")]
	[SerializeField]
	private float thickness;

	[Token(Token = "0x40007CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("The amount of time in seconds to predict the motion of the projectile.")]
	public float arcDuration;

	[Token(Token = "0x40007CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Tooltip("The amount of time in seconds between each segment of the projectile.")]
	public float segmentBreak;

	[Token(Token = "0x40007CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("The speed at which the line segments of the arc move.")]
	public float arcSpeed;

	[Token(Token = "0x40007D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material material;

	[Token(Token = "0x40007D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public int traceLayerMask;

	[Token(Token = "0x40007D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private LineRenderer[] lineRenderers;

	[Token(Token = "0x40007D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float arcTimeOffset;

	[Token(Token = "0x40007D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float prevThickness;

	[Token(Token = "0x40007D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int prevSegmentCount;

	[Token(Token = "0x40007D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool showArc;

	[Token(Token = "0x40007D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 startPos;

	[Token(Token = "0x40007D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 endPos;

	[Token(Token = "0x40007D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 curvePos;

	[Token(Token = "0x40007DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Vector3 projectileVelocity;

	[Token(Token = "0x40007DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool useGravity;

	[Token(Token = "0x40007DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Transform arcObjectsTransfrom;

	[Token(Token = "0x40007DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool arcInvalid;

	[Token(Token = "0x6000864")]
	[Address(RVA = "0x929180", Offset = "0x929180", VA = "0x929180")]
	private void Start()
	{
	}

	[Token(Token = "0x6000865")]
	[Address(RVA = "0x92919C", Offset = "0x92919C", VA = "0x92919C")]
	private void CreateLineRendererObjects()
	{
	}

	[Token(Token = "0x6000866")]
	[Address(RVA = "0x929630", Offset = "0x929630", VA = "0x929630")]
	public void SetArcData(Vector3 startPosition, Vector3 endPosition)
	{
	}

	[Token(Token = "0x6000867")]
	[Address(RVA = "0x9296C4", Offset = "0x9296C4", VA = "0x9296C4")]
	public void SetArcData(Vector3 startPosition, Vector3 endPosition, Vector3 curvePosition)
	{
	}

	[Token(Token = "0x6000868")]
	[Address(RVA = "0x9296E4", Offset = "0x9296E4", VA = "0x9296E4")]
	public void Show()
	{
	}

	[Token(Token = "0x6000869")]
	[Address(RVA = "0x9296FC", Offset = "0x9296FC", VA = "0x9296FC")]
	public void Hide()
	{
	}

	[Token(Token = "0x600086A")]
	[Address(RVA = "0x929798", Offset = "0x929798", VA = "0x929798")]
	public bool DrawArc()
	{
		return default(bool);
	}

	[Token(Token = "0x600086B")]
	[Address(RVA = "0x929C60", Offset = "0x929C60", VA = "0x929C60")]
	private void DrawArcSegment(int index, float startTime, float endTime)
	{
	}

	[Token(Token = "0x600086C")]
	[Address(RVA = "0x929D40", Offset = "0x929D40", VA = "0x929D40")]
	public void SetColor(Color color)
	{
	}

	[Token(Token = "0x600086D")]
	[Address(RVA = "0x92999C", Offset = "0x92999C", VA = "0x92999C")]
	private float FindProjectileCollision()
	{
		return default(float);
	}

	[Token(Token = "0x600086E")]
	[Address(RVA = "0x929B30", Offset = "0x929B30", VA = "0x929B30")]
	public Vector3 GetArcPositionAtTime(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600086F")]
	[Address(RVA = "0x929728", Offset = "0x929728", VA = "0x929728")]
	private void HideLineSegments(int startSegment, int endSegment)
	{
	}

	[Token(Token = "0x6000870")]
	[Address(RVA = "0x929E10", Offset = "0x929E10", VA = "0x929E10")]
	public LinePainter()
	{
	}
}
[Token(Token = "0x20001A4")]
public class LoadingTextAnimation : MonoBehaviour
{
	[Token(Token = "0x6000871")]
	[Address(RVA = "0x929E8C", Offset = "0x929E8C", VA = "0x929E8C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000872")]
	[Address(RVA = "0x92A058", Offset = "0x92A058", VA = "0x92A058")]
	public LoadingTextAnimation()
	{
	}
}
[Token(Token = "0x20001A5")]
public class LookAt : MonoBehaviour
{
	[Token(Token = "0x40007DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool headLookAt;

	[Token(Token = "0x40007DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject objectToLookAt;

	[Token(Token = "0x6000873")]
	[Address(RVA = "0x92A060", Offset = "0x92A060", VA = "0x92A060")]
	private void Start()
	{
	}

	[Token(Token = "0x6000874")]
	[Address(RVA = "0x92A0DC", Offset = "0x92A0DC", VA = "0x92A0DC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000875")]
	[Address(RVA = "0x92A190", Offset = "0x92A190", VA = "0x92A190")]
	public LookAt()
	{
	}
}
[Token(Token = "0x20001A6")]
public class NVRManager : MonoBehaviour
{
	[Token(Token = "0x20001A7")]
	[CompilerGenerated]
	private sealed class <loadSceneCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NVRManager <>4__this;

		[Token(Token = "0x40007E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string sceneName;

		[Token(Token = "0x1700007E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000880")]
			[Address(RVA = "0x92A85C", Offset = "0x92A85C", VA = "0x92A85C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000882")]
			[Address(RVA = "0x92A8A4", Offset = "0x92A8A4", VA = "0x92A8A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600087D")]
		[Address(RVA = "0x92A490", Offset = "0x92A490", VA = "0x92A490")]
		[DebuggerHidden]
		public <loadSceneCoroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x600087E")]
		[Address(RVA = "0x92A774", Offset = "0x92A774", VA = "0x92A774", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600087F")]
		[Address(RVA = "0x92A778", Offset = "0x92A778", VA = "0x92A778", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000881")]
		[Address(RVA = "0x92A864", Offset = "0x92A864", VA = "0x92A864", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001A8")]
	[CompilerGenerated]
	private sealed class <enableReprojectionCameraCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float seconds;

		[Token(Token = "0x40007EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool enable;

		[Token(Token = "0x40007EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public NVRManager <>4__this;

		[Token(Token = "0x17000080")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000886")]
			[Address(RVA = "0x92AA2C", Offset = "0x92AA2C", VA = "0x92AA2C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000081")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000888")]
			[Address(RVA = "0x92AA74", Offset = "0x92AA74", VA = "0x92AA74", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000883")]
		[Address(RVA = "0x92A4B8", Offset = "0x92A4B8", VA = "0x92A4B8")]
		[DebuggerHidden]
		public <enableReprojectionCameraCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000884")]
		[Address(RVA = "0x92A8AC", Offset = "0x92A8AC", VA = "0x92A8AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000885")]
		[Address(RVA = "0x92A8B0", Offset = "0x92A8B0", VA = "0x92A8B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000887")]
		[Address(RVA = "0x92AA34", Offset = "0x92AA34", VA = "0x92AA34", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static NVRManager Instance;

	[Token(Token = "0x40007E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject game;

	[Token(Token = "0x40007E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Camera reprojectionCamera;

	[Token(Token = "0x40007E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Coroutine reprojectionCameraCoroutine;

	[Token(Token = "0x6000876")]
	[Address(RVA = "0x92A198", Offset = "0x92A198", VA = "0x92A198")]
	public void enableReprojectionCamera(bool enable, float seconds = 0f)
	{
	}

	[Token(Token = "0x6000877")]
	[Address(RVA = "0x92A3FC", Offset = "0x92A3FC", VA = "0x92A3FC")]
	public void loadScene(string sceneName)
	{
	}

	[Token(Token = "0x6000878")]
	[Address(RVA = "0x92A41C", Offset = "0x92A41C", VA = "0x92A41C")]
	[IteratorStateMachine(typeof(<loadSceneCoroutine>d__6))]
	private IEnumerator loadSceneCoroutine(string sceneName)
	{
		return null;
	}

	[Token(Token = "0x6000879")]
	[Address(RVA = "0x92A370", Offset = "0x92A370", VA = "0x92A370")]
	[IteratorStateMachine(typeof(<enableReprojectionCameraCoroutine>d__7))]
	private IEnumerator enableReprojectionCameraCoroutine(bool enable, float seconds = 0f)
	{
		return null;
	}

	[Token(Token = "0x600087A")]
	[Address(RVA = "0x92A4E0", Offset = "0x92A4E0", VA = "0x92A4E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600087B")]
	[Address(RVA = "0x92A738", Offset = "0x92A738", VA = "0x92A738")]
	private void Start()
	{
	}

	[Token(Token = "0x600087C")]
	[Address(RVA = "0x92A76C", Offset = "0x92A76C", VA = "0x92A76C")]
	public NVRManager()
	{
	}
}
[Token(Token = "0x20001A9")]
public class NVRRenderModelManager : MonoBehaviour
{
	[Token(Token = "0x40007ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public NVRRenderModelType DefaultRenderModelType;

	[Token(Token = "0x40007EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<NVRRenderModel> GenericRenderModels;

	[Token(Token = "0x40007EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<NVRRenderModel> OculusRenderModels;

	[Token(Token = "0x40007F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<NVRRenderModel> WindowsMRRenderModels;

	[Token(Token = "0x40007F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<NVRRenderModel> ViveRenderModels;

	[Token(Token = "0x40007F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<NVRRenderModel> PSVRRenderModels;

	[Token(Token = "0x6000889")]
	[Address(RVA = "0x92AA7C", Offset = "0x92AA7C", VA = "0x92AA7C")]
	public NVRRenderModelManager()
	{
	}
}
[Serializable]
[Token(Token = "0x20001AA")]
public struct NVRRenderModel
{
	[Token(Token = "0x40007F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public NVRRenderModelType Type;

	[Token(Token = "0x40007F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public GameObject LeftHand;

	[Token(Token = "0x40007F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject RightHand;

	[Token(Token = "0x40007F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject PhysicalLeftHand;

	[Token(Token = "0x40007F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject PhysicalRightHand;
}
[Token(Token = "0x20001AB")]
public enum NVRRenderModelType
{
	[Token(Token = "0x40007F9")]
	Gamepad,
	[Token(Token = "0x40007FA")]
	AlternativeGamepad,
	[Token(Token = "0x40007FB")]
	Hand,
	[Token(Token = "0x40007FC")]
	None
}
[Token(Token = "0x20001AC")]
public class NVRRotater : MonoBehaviour
{
	[Token(Token = "0x20001AD")]
	private enum RotationState
	{
		[Token(Token = "0x4000801")]
		none,
		[Token(Token = "0x4000802")]
		left,
		[Token(Token = "0x4000803")]
		right,
		[Token(Token = "0x4000804")]
		up,
		[Token(Token = "0x4000805")]
		down,
		[Token(Token = "0x4000806")]
		panright,
		[Token(Token = "0x4000807")]
		panleft
	}

	[Token(Token = "0x40007FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RotationState[] m_rotationState;

	[Token(Token = "0x40007FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private NVRPlayer m_player;

	[Token(Token = "0x40007FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float deltaRotation;

	[Token(Token = "0x600088A")]
	[Address(RVA = "0x92AA84", Offset = "0x92AA84", VA = "0x92AA84")]
	private void Start()
	{
	}

	[Token(Token = "0x600088B")]
	[Address(RVA = "0x92AAD4", Offset = "0x92AAD4", VA = "0x92AAD4")]
	private void Update()
	{
	}

	[Token(Token = "0x600088C")]
	[Address(RVA = "0x92AC8C", Offset = "0x92AC8C", VA = "0x92AC8C")]
	private RotationState GetRotationState()
	{
		return default(RotationState);
	}

	[Token(Token = "0x600088D")]
	[Address(RVA = "0x92B2D4", Offset = "0x92B2D4", VA = "0x92B2D4")]
	public NVRRotater()
	{
	}
}
[Token(Token = "0x20001AE")]
public class NVRTeleporter : MonoBehaviour
{
	[Token(Token = "0x4000808")]
	protected const float BEAM_ADJUST_OFFSET = 0.0001f;

	[Token(Token = "0x4000809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("The valid teleport position color.")]
	public Color validCollisionColor;

	[Token(Token = "0x400080A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("The invalid teleport position color.")]
	public Color invalidCollisionColor;

	[Token(Token = "0x400080B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[Tooltip("The maximum length the pointer tracer can reach (value with scale 1)")]
	private float maximumLength;

	[Token(Token = "0x400080C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[Tooltip("The scale factor to scale the pointer tracer object by.")]
	public float scaleFactor;

	[Token(Token = "0x400080D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Tooltip("The scale multiplier to scale the pointer cursor object by in relation to the `Scale Factor`.")]
	public float cursorScaleMultiplier;

	[Token(Token = "0x400080E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Tooltip("The cursor will be rotated to match the angle of the target surface if this is true, if it is false then the pointer cursor will always be horizontal.")]
	public bool cursorMatchTargetRotation;

	[Token(Token = "0x400080F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	[Tooltip("Rescale the cursor proportionally to the distance from the tracer origin.")]
	public bool cursorDistanceRescale;

	[Token(Token = "0x4000810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Tooltip("The maximum scale the cursor is allowed to reach. This is only used when rescaling the cursor proportionally to the distance from the tracer origin.")]
	public Vector3 maximumCursorScale;

	[Token(Token = "0x4000811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[Tooltip("The layers to ignore by the pointer.")]
	public LayerMask layersToAccept;

	[Token(Token = "0x4000812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject m_cursor;

	[Token(Token = "0x4000813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GameObject m_tracer;

	[Token(Token = "0x4000814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private GameObject m_pointer;

	[Token(Token = "0x4000815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private NVRPlayer m_player;

	[Token(Token = "0x4000816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private NVRHand m_currentHand;

	[Token(Token = "0x4000817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Transform m_currentTeleportPointer;

	[Token(Token = "0x4000818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 m_cursorOriginalScale;

	[Token(Token = "0x4000819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Color m_previusColor;

	[Token(Token = "0x400081A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private NVRTeleportArc teleportArc;

	[Token(Token = "0x400081B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private NVRTeleportableIF currentTeleportableObj;

	[Token(Token = "0x400081C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private NVRTeleportableIF exitTeleporterAction;

	[Token(Token = "0x400081D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool actionExecuted;

	[Token(Token = "0x600088E")]
	[Address(RVA = "0x92B334", Offset = "0x92B334", VA = "0x92B334")]
	private void Start()
	{
	}

	[Token(Token = "0x600088F")]
	[Address(RVA = "0x92B564", Offset = "0x92B564", VA = "0x92B564")]
	private void Update()
	{
	}

	[Token(Token = "0x6000890")]
	[Address(RVA = "0x92C2F8", Offset = "0x92C2F8", VA = "0x92C2F8")]
	private void hidePointer()
	{
	}

	[Token(Token = "0x6000891")]
	[Address(RVA = "0x92B894", Offset = "0x92B894", VA = "0x92B894")]
	private void showPointer()
	{
	}

	[Token(Token = "0x6000892")]
	[Address(RVA = "0x92B834", Offset = "0x92B834", VA = "0x92B834")]
	private NVRHand checkHandActive()
	{
		return null;
	}

	[Token(Token = "0x6000893")]
	[Address(RVA = "0x92C0D8", Offset = "0x92C0D8", VA = "0x92C0D8")]
	private void doTeleport(Vector3 endPoint)
	{
	}

	[Token(Token = "0x6000894")]
	[Address(RVA = "0x92B92C", Offset = "0x92B92C", VA = "0x92B92C")]
	private bool renderPointer(out Vector3 endPoint)
	{
		return default(bool);
	}

	[Token(Token = "0x6000895")]
	[Address(RVA = "0x92C57C", Offset = "0x92C57C", VA = "0x92C57C", Slot = "4")]
	protected virtual void SetupMaterialRenderer(GameObject givenObject)
	{
	}

	[Token(Token = "0x6000896")]
	[Address(RVA = "0x92B40C", Offset = "0x92B40C", VA = "0x92B40C")]
	private void createPointer()
	{
	}

	[Token(Token = "0x6000897")]
	[Address(RVA = "0x92C7B8", Offset = "0x92C7B8", VA = "0x92C7B8")]
	private GameObject createTracer()
	{
		return null;
	}

	[Token(Token = "0x6000898")]
	[Address(RVA = "0x92C6AC", Offset = "0x92C6AC", VA = "0x92C6AC")]
	private void createCursor()
	{
	}

	[Token(Token = "0x6000899")]
	[Address(RVA = "0x92C390", Offset = "0x92C390", VA = "0x92C390")]
	private bool checkHandActive(NVRHand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x600089A")]
	[Address(RVA = "0x92BFB0", Offset = "0x92BFB0", VA = "0x92BFB0")]
	private bool checkHandInactive(NVRHand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x600089B")]
	[Address(RVA = "0x92C528", Offset = "0x92C528", VA = "0x92C528")]
	private void ChangeColor(Color givenColor)
	{
	}

	[Token(Token = "0x600089C")]
	[Address(RVA = "0x92C908", Offset = "0x92C908", VA = "0x92C908")]
	private void ChangeMaterial(Color givenColor)
	{
	}

	[Token(Token = "0x600089D")]
	[Address(RVA = "0x92CA20", Offset = "0x92CA20", VA = "0x92CA20", Slot = "5")]
	protected virtual void SetGameObjectColor(GameObject cursorObject, Color color)
	{
	}

	[Token(Token = "0x600089E")]
	[Address(RVA = "0x92CB94", Offset = "0x92CB94", VA = "0x92CB94", Slot = "6")]
	protected virtual void SetPointerAppearance(float tracerLength, RaycastHit destinationHit)
	{
	}

	[Token(Token = "0x600089F")]
	[Address(RVA = "0x92D108", Offset = "0x92D108", VA = "0x92D108")]
	public NVRTeleporter()
	{
	}
}
[Token(Token = "0x20001AF")]
public interface NVRTeleportableIF
{
	[Token(Token = "0x60008A0")]
	bool OnHoverEnter();

	[Token(Token = "0x60008A1")]
	bool OnHoverExit();

	[Token(Token = "0x60008A2")]
	bool OnTeleportEnter();

	[Token(Token = "0x60008A3")]
	bool OnTeleportExit();
}
[Token(Token = "0x20001B0")]
public class NVRTeleportPointer : MonoBehaviour
{
	[Token(Token = "0x60008A4")]
	[Address(RVA = "0x92D158", Offset = "0x92D158", VA = "0x92D158")]
	public NVRTeleportPointer()
	{
	}
}
[Token(Token = "0x20001B1")]
public class Pool
{
	[Token(Token = "0x400081E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private GameObject pooledObject;

	[Token(Token = "0x400081F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool grow;

	[Token(Token = "0x4000820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<GameObject> pooledObjects;

	[Token(Token = "0x4000821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int poolSize;

	[Token(Token = "0x60008A5")]
	[Address(RVA = "0x92D160", Offset = "0x92D160", VA = "0x92D160")]
	public void initialise(GameObject pooledObject, int poolSize, bool grow)
	{
	}

	[Token(Token = "0x60008A6")]
	[Address(RVA = "0x9235A0", Offset = "0x9235A0", VA = "0x9235A0")]
	public GameObject getPooledObject()
	{
		return null;
	}

	[Token(Token = "0x60008A7")]
	[Address(RVA = "0x92D2D4", Offset = "0x92D2D4", VA = "0x92D2D4")]
	public Pool()
	{
	}
}
[Token(Token = "0x20001B2")]
public class PoolManager : MonoBehaviour
{
	[Token(Token = "0x20001B3")]
	public enum PoolType
	{
		[Token(Token = "0x4000826")]
		Null,
		[Token(Token = "0x4000827")]
		BloodFx,
		[Token(Token = "0x4000828")]
		AimWeapon,
		[Token(Token = "0x4000829")]
		AK47,
		[Token(Token = "0x400082A")]
		M4,
		[Token(Token = "0x400082B")]
		SMG,
		[Token(Token = "0x400082C")]
		RPG,
		[Token(Token = "0x400082D")]
		RPGRocket,
		[Token(Token = "0x400082E")]
		Bullet,
		[Token(Token = "0x400082F")]
		WastedBulletS,
		[Token(Token = "0x4000830")]
		WastedBulletL,
		[Token(Token = "0x4000831")]
		SplinterS,
		[Token(Token = "0x4000832")]
		SplinterM,
		[Token(Token = "0x4000833")]
		Sparks,
		[Token(Token = "0x4000834")]
		Line,
		[Token(Token = "0x4000835")]
		Explosion,
		[Token(Token = "0x4000836")]
		Enemy,
		[Token(Token = "0x4000837")]
		TwoGlock,
		[Token(Token = "0x4000838")]
		DeadLine,
		[Token(Token = "0x4000839")]
		Glock,
		[Token(Token = "0x400083A")]
		ColumnHit,
		[Token(Token = "0x400083B")]
		WastedBulletMiniGun,
		[Token(Token = "0x400083C")]
		MinuGun
	}

	[Serializable]
	[Token(Token = "0x20001B4")]
	public class PoolData
	{
		[Token(Token = "0x400083D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PoolType poolType;

		[Token(Token = "0x400083E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject poolObject;

		[Token(Token = "0x400083F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int poolSize;

		[Token(Token = "0x4000840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool growable;

		[Token(Token = "0x60008AB")]
		[Address(RVA = "0x92D498", Offset = "0x92D498", VA = "0x92D498")]
		public PoolData()
		{
		}
	}

	[Token(Token = "0x4000822")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PoolData[] poolData;

	[Token(Token = "0x4000823")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PoolManager Instance;

	[Token(Token = "0x4000824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<PoolType, Pool> pools;

	[Token(Token = "0x60008A8")]
	[Address(RVA = "0x92D2E4", Offset = "0x92D2E4", VA = "0x92D2E4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008A9")]
	[Address(RVA = "0x923548", Offset = "0x923548", VA = "0x923548")]
	public Pool getPool(PoolType poolType)
	{
		return null;
	}

	[Token(Token = "0x60008AA")]
	[Address(RVA = "0x92D41C", Offset = "0x92D41C", VA = "0x92D41C")]
	public PoolManager()
	{
	}
}
[Token(Token = "0x20001B5")]
public static class ResourceManager
{
	[Token(Token = "0x4000841")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Dictionary<string, Texture> textures;

	[Token(Token = "0x4000842")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Dictionary<string, Material> materials;

	[Token(Token = "0x60008AC")]
	[Address(RVA = "0x92D4AC", Offset = "0x92D4AC", VA = "0x92D4AC")]
	public static Texture getTexture(string textureName)
	{
		return null;
	}

	[Token(Token = "0x60008AD")]
	[Address(RVA = "0x9263AC", Offset = "0x9263AC", VA = "0x9263AC")]
	public static Material getMaterial(string materialName)
	{
		return null;
	}
}
[Token(Token = "0x20001B6")]
public class TimeOutAlive : MonoBehaviour
{
	[Token(Token = "0x4000843")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float aliveTime;

	[Token(Token = "0x4000844")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool destroy;

	[Token(Token = "0x60008AF")]
	[Address(RVA = "0x92D6FC", Offset = "0x92D6FC", VA = "0x92D6FC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60008B0")]
	[Address(RVA = "0x92D74C", Offset = "0x92D74C", VA = "0x92D74C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60008B1")]
	[Address(RVA = "0x92D798", Offset = "0x92D798", VA = "0x92D798")]
	private void timeOut()
	{
	}

	[Token(Token = "0x60008B2")]
	[Address(RVA = "0x92D8A4", Offset = "0x92D8A4", VA = "0x92D8A4")]
	public TimeOutAlive()
	{
	}
}
[Token(Token = "0x20001B7")]
public class TransformAnimator : MonoBehaviour
{
	[Token(Token = "0x20001B8")]
	private class ButtonData
	{
		[Token(Token = "0x4000848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform button;

		[Token(Token = "0x4000849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public NVRButtonInputs buttonInput;

		[Token(Token = "0x400084A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 initialPosition;

		[Token(Token = "0x400084B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 pressedPosition;

		[Token(Token = "0x400084C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AnimatedElementData[] animatedElements;

		[Token(Token = "0x60008BB")]
		[Address(RVA = "0x92E01C", Offset = "0x92E01C", VA = "0x92E01C")]
		public ButtonData()
		{
		}
	}

	[Token(Token = "0x20001B9")]
	private class AnimatedElementData
	{
		[Token(Token = "0x400084D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform transform;

		[Token(Token = "0x400084E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 initRotation;

		[Token(Token = "0x400084F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 deltaRotation;

		[Token(Token = "0x60008BC")]
		[Address(RVA = "0x92E0A0", Offset = "0x92E0A0", VA = "0x92E0A0")]
		public AnimatedElementData()
		{
		}
	}

	[Token(Token = "0x4000845")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Transform> animatedTransforms;

	[Token(Token = "0x4000846")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ButtonData[] rotationAnimatedButtons;

	[Token(Token = "0x4000847")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public NVRHand hand;

	[Token(Token = "0x60008B3")]
	[Address(RVA = "0x92D8B4", Offset = "0x92D8B4", VA = "0x92D8B4")]
	private void Start()
	{
	}

	[Token(Token = "0x60008B4")]
	[Address(RVA = "0x92DC60", Offset = "0x92DC60", VA = "0x92DC60")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x60008B5")]
	[Address(RVA = "0x92DE08", Offset = "0x92DE08", VA = "0x92DE08")]
	private void Update()
	{
	}

	[Token(Token = "0x60008B6")]
	[Address(RVA = "0x92DEB0", Offset = "0x92DEB0", VA = "0x92DEB0")]
	private void updateButtonRotation(ButtonData buttonData)
	{
	}

	[Token(Token = "0x60008B7")]
	[Address(RVA = "0x92DB88", Offset = "0x92DB88", VA = "0x92DB88")]
	private ButtonData createRotationButtonData(NVRButtonInputs buttonInput, Transform buttonName)
	{
		return null;
	}

	[Token(Token = "0x60008B8")]
	[Address(RVA = "0x92DF08", Offset = "0x92DF08", VA = "0x92DF08")]
	private ButtonData createButtonData(NVRButtonInputs buttonInput, Transform buttonName)
	{
		return null;
	}

	[Token(Token = "0x60008B9")]
	[Address(RVA = "0x92DF78", Offset = "0x92DF78", VA = "0x92DF78")]
	private Vector3 getDeltaRotation(Vector3 initialRotation, Vector3 finalRotation)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60008BA")]
	[Address(RVA = "0x92E024", Offset = "0x92E024", VA = "0x92E024")]
	public TransformAnimator()
	{
	}
}
[Token(Token = "0x20001BA")]
public class TutorialHelper : MonoBehaviour
{
	[Token(Token = "0x4000850")]
	private const string HELPER_RESOURCES_PATH = "TutorialHelper/";

	[Token(Token = "0x4000851")]
	private const string WINDOWSMR_HELPER = "WindowsMRHelper";

	[Token(Token = "0x4000852")]
	private const string OCULUS_HELPER = "OculusHelper";

	[Token(Token = "0x4000853")]
	private const string HTC_HELPER = "HTCHelper";

	[Token(Token = "0x4000854")]
	private const string PSMOVE_HELPER = "PSMoveHelper";

	[Token(Token = "0x4000855")]
	private const string DUALSHOCK_HELPER = "DualshockHelper";

	[Token(Token = "0x4000856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool firstMenuButtonInteraction;

	[Token(Token = "0x4000857")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public static bool firstGrabInteraction;

	[Token(Token = "0x4000858")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
	public static bool firstActionPieceInteraction;

	[Token(Token = "0x4000859")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private NVRHand hand;

	[Token(Token = "0x400085A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject helper;

	[Token(Token = "0x400085B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material defaultMaterial;

	[Token(Token = "0x400085C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Material sphereMaterial;

	[Token(Token = "0x400085D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material menuMaterial;

	[Token(Token = "0x400085E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material teleportMaterial;

	[Token(Token = "0x400085F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Material teleportDefaultMaterialVive;

	[Token(Token = "0x4000860")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Material teleportMaterialVive;

	[Token(Token = "0x4000861")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material grabMaterial;

	[Token(Token = "0x4000862")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material actionMaterial;

	[Token(Token = "0x4000863")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Material grabSphereMaterial;

	[Token(Token = "0x4000864")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Material actionSphereMaterial;

	[Token(Token = "0x4000865")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Renderer menuButton;

	[Token(Token = "0x4000866")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Renderer teleportButton;

	[Token(Token = "0x4000867")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Renderer grabButton;

	[Token(Token = "0x4000868")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Renderer actionButton;

	[Token(Token = "0x4000869")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Renderer actionButton2;

	[Token(Token = "0x400086A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Renderer sphere;

	[Token(Token = "0x400086B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private GameObject menuArrow;

	[Token(Token = "0x400086C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private GameObject grabArrow;

	[Token(Token = "0x400086D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private GameObject actionArrow;

	[Token(Token = "0x400086E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private HelperState m_state;

	[Token(Token = "0x400086F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Dictionary<NVRHand, TutorialHelper> s_helpers;

	[Token(Token = "0x60008BD")]
	[Address(RVA = "0x92685C", Offset = "0x92685C", VA = "0x92685C")]
	public static TutorialHelper getTutorialHelper(NVRHand hand)
	{
		return null;
	}

	[Token(Token = "0x60008BE")]
	[Address(RVA = "0x92E0A8", Offset = "0x92E0A8", VA = "0x92E0A8")]
	public static void MenuArrowVisibility(bool state)
	{
	}

	[Token(Token = "0x60008BF")]
	[Address(RVA = "0x92E2A4", Offset = "0x92E2A4", VA = "0x92E2A4")]
	public static void ActionArrowVisibility(bool state)
	{
	}

	[Token(Token = "0x60008C0")]
	[Address(RVA = "0x92E4A0", Offset = "0x92E4A0", VA = "0x92E4A0")]
	public static void GrabArrowVisibility(bool state)
	{
	}

	[Token(Token = "0x60008C1")]
	[Address(RVA = "0x92E69C", Offset = "0x92E69C", VA = "0x92E69C")]
	public static void HandState(NVRHand hand, bool grab, bool action, bool teleport, bool menu)
	{
	}

	[Token(Token = "0x60008C2")]
	[Address(RVA = "0x92EA40", Offset = "0x92EA40", VA = "0x92EA40")]
	private void Start()
	{
	}

	[Token(Token = "0x60008C3")]
	[Address(RVA = "0x92EC4C", Offset = "0x92EC4C", VA = "0x92EC4C")]
	public void removeTutorialHelper()
	{
	}

	[Token(Token = "0x60008C4")]
	[Address(RVA = "0x92EB64", Offset = "0x92EB64", VA = "0x92EB64")]
	public void initializateTutorialHelper()
	{
	}

	[Token(Token = "0x60008C5")]
	[Address(RVA = "0x92ED4C", Offset = "0x92ED4C", VA = "0x92ED4C")]
	public void initializateTutorialHelper(NVRHand helperHand, GameObject helperParent)
	{
	}

	[Token(Token = "0x60008C6")]
	[Address(RVA = "0x92FCB4", Offset = "0x92FCB4", VA = "0x92FCB4")]
	private void setTutorialHelper(GameObject helperParent, string helperName, string[] components, string[] buttonMapping)
	{
	}

	[Token(Token = "0x60008C7")]
	[Address(RVA = "0x92E878", Offset = "0x92E878", VA = "0x92E878")]
	private void setHandState(bool bGrab, bool bAction, bool bTeleport, bool bMenu)
	{
	}

	[Token(Token = "0x60008C8")]
	[Address(RVA = "0x92879C", Offset = "0x92879C", VA = "0x92879C")]
	public void setSphereState(bool action, bool grab)
	{
	}

	[Token(Token = "0x60008C9")]
	[Address(RVA = "0x930384", Offset = "0x930384", VA = "0x930384")]
	private Material getStateMaterial(bool state, Material activeMaterial, Material defaultMaterial)
	{
		return null;
	}

	[Token(Token = "0x60008CA")]
	[Address(RVA = "0x930390", Offset = "0x930390", VA = "0x930390")]
	public TutorialHelper()
	{
	}
}
[Token(Token = "0x20001BB")]
internal class HelperState
{
	[Token(Token = "0x4000870")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool m_bGrab;

	[Token(Token = "0x4000871")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public bool m_bAction;

	[Token(Token = "0x4000872")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	public bool m_bTeleport;

	[Token(Token = "0x4000873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
	public bool m_bMenu;

	[Token(Token = "0x60008CC")]
	[Address(RVA = "0x93030C", Offset = "0x93030C", VA = "0x93030C")]
	public bool setNewState(bool bGrab, bool bAction, bool bTeleport, bool bMenu)
	{
		return default(bool);
	}

	[Token(Token = "0x60008CD")]
	[Address(RVA = "0x9303F8", Offset = "0x9303F8", VA = "0x9303F8")]
	public HelperState()
	{
	}
}
[Token(Token = "0x20001BC")]
public class NVRInput : MonoBehaviour
{
	[Token(Token = "0x60008CE")]
	[Address(RVA = "0x9304A4", Offset = "0x9304A4", VA = "0x9304A4")]
	private void Start()
	{
	}

	[Token(Token = "0x60008CF")]
	[Address(RVA = "0x9304A8", Offset = "0x9304A8", VA = "0x9304A8")]
	private void Update()
	{
	}

	[Token(Token = "0x60008D0")]
	[Address(RVA = "0x9304AC", Offset = "0x9304AC", VA = "0x9304AC")]
	public NVRInput()
	{
	}
}
[Token(Token = "0x20001BD")]
public class PS4LoadSave : MonoBehaviour
{
	[Token(Token = "0x60008D1")]
	[Address(RVA = "0x9304B4", Offset = "0x9304B4", VA = "0x9304B4")]
	public PS4LoadSave()
	{
	}
}
[Token(Token = "0x20001BE")]
public class PS4TrophyManager : TrophyManager
{
	[Token(Token = "0x60008D2")]
	[Address(RVA = "0x9304BC", Offset = "0x9304BC", VA = "0x9304BC")]
	public PS4TrophyManager()
	{
	}
}
[Token(Token = "0x20001BF")]
public class SetAnimatorPositions : MonoBehaviour
{
	[Token(Token = "0x20001C0")]
	private class Positions
	{
		[Token(Token = "0x400087B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 position;

		[Token(Token = "0x400087C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion rotation;

		[Token(Token = "0x400087D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 scale;

		[Token(Token = "0x60008D8")]
		[Address(RVA = "0x9307AC", Offset = "0x9307AC", VA = "0x9307AC")]
		public Positions()
		{
		}
	}

	[Token(Token = "0x4000874")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator animator;

	[Token(Token = "0x4000875")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string animationName;

	[Token(Token = "0x4000876")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int layer;

	[Token(Token = "0x4000877")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float normalizedTime;

	[Token(Token = "0x4000878")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool savePositions;

	[Token(Token = "0x4000879")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool savingPositions;

	[Token(Token = "0x400087A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<string, Positions> data;

	[Token(Token = "0x60008D3")]
	[Address(RVA = "0x9304C4", Offset = "0x9304C4", VA = "0x9304C4")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60008D4")]
	[Address(RVA = "0x930508", Offset = "0x930508", VA = "0x930508")]
	private void setAnimationFrame()
	{
	}

	[Token(Token = "0x60008D5")]
	[Address(RVA = "0x9305F0", Offset = "0x9305F0", VA = "0x9305F0")]
	private void _savePositions()
	{
	}

	[Token(Token = "0x60008D6")]
	[Address(RVA = "0x9307B4", Offset = "0x9307B4", VA = "0x9307B4")]
	private void _applyPositions()
	{
	}

	[Token(Token = "0x60008D7")]
	[Address(RVA = "0x9309B8", Offset = "0x9309B8", VA = "0x9309B8")]
	public SetAnimatorPositions()
	{
	}
}
[Token(Token = "0x20001C1")]
public class FireEffect : MonoBehaviour
{
	[Token(Token = "0x60008D9")]
	[Address(RVA = "0x930A58", Offset = "0x930A58", VA = "0x930A58", Slot = "4")]
	public virtual void showEffect()
	{
	}

	[Token(Token = "0x60008DA")]
	[Address(RVA = "0x930A5C", Offset = "0x930A5C", VA = "0x930A5C")]
	public FireEffect()
	{
	}
}
[Token(Token = "0x20001C2")]
public class FireParticlesFX : FireEffect
{
	[Token(Token = "0x20001C3")]
	[CompilerGenerated]
	private sealed class <showEffectCoroutine>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400087F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FireParticlesFX <>4__this;

		[Token(Token = "0x4000882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform <parent>5__2;

		[Token(Token = "0x17000082")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008E1")]
			[Address(RVA = "0x930CB8", Offset = "0x930CB8", VA = "0x930CB8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000083")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008E3")]
			[Address(RVA = "0x930D00", Offset = "0x930D00", VA = "0x930D00", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008DE")]
		[Address(RVA = "0x930B0C", Offset = "0x930B0C", VA = "0x930B0C")]
		[DebuggerHidden]
		public <showEffectCoroutine>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x60008DF")]
		[Address(RVA = "0x930B3C", Offset = "0x930B3C", VA = "0x930B3C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008E0")]
		[Address(RVA = "0x930B40", Offset = "0x930B40", VA = "0x930B40", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008E2")]
		[Address(RVA = "0x930CC0", Offset = "0x930CC0", VA = "0x930CC0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400087E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject particles;

	[Token(Token = "0x60008DB")]
	[Address(RVA = "0x930A64", Offset = "0x930A64", VA = "0x930A64", Slot = "4")]
	public override void showEffect()
	{
	}

	[Token(Token = "0x60008DC")]
	[Address(RVA = "0x930AA4", Offset = "0x930AA4", VA = "0x930AA4")]
	[IteratorStateMachine(typeof(<showEffectCoroutine>d__2))]
	private IEnumerator showEffectCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60008DD")]
	[Address(RVA = "0x930B34", Offset = "0x930B34", VA = "0x930B34")]
	public FireParticlesFX()
	{
	}
}
[Token(Token = "0x20001C4")]
public class MuzzleFlash : FireEffect
{
	[Token(Token = "0x4000883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float showTime;

	[Token(Token = "0x4000884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform m_flash;

	[Token(Token = "0x4000885")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float m_scale;

	[Token(Token = "0x4000886")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float m_fDeltaSize;

	[Token(Token = "0x4000887")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool initialised;

	[Token(Token = "0x60008E4")]
	[Address(RVA = "0x930D08", Offset = "0x930D08", VA = "0x930D08")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008E5")]
	[Address(RVA = "0x930D94", Offset = "0x930D94", VA = "0x930D94", Slot = "4")]
	public override void showEffect()
	{
	}

	[Token(Token = "0x60008E6")]
	[Address(RVA = "0x930D98", Offset = "0x930D98", VA = "0x930D98")]
	private void showFlash()
	{
	}

	[Token(Token = "0x60008E7")]
	[Address(RVA = "0x930EC4", Offset = "0x930EC4", VA = "0x930EC4")]
	private void showBlastImpl()
	{
	}

	[Token(Token = "0x60008E8")]
	[Address(RVA = "0x930D0C", Offset = "0x930D0C", VA = "0x930D0C")]
	private void init()
	{
	}

	[Token(Token = "0x60008E9")]
	[Address(RVA = "0x930EE8", Offset = "0x930EE8", VA = "0x930EE8")]
	public MuzzleFlash()
	{
	}
}
[Token(Token = "0x20001C5")]
public class RaycastHitDecal : MonoBehaviour
{
	[Token(Token = "0x4000888")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EasyDecal DecalPrefab;

	[Token(Token = "0x4000889")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float CastRadius;

	[Token(Token = "0x60008EA")]
	[Address(RVA = "0x930F08", Offset = "0x930F08", VA = "0x930F08")]
	private void Start()
	{
	}

	[Token(Token = "0x60008EB")]
	[Address(RVA = "0x930F0C", Offset = "0x930F0C", VA = "0x930F0C")]
	public void addDecalHit(Ray ray, RaycastHit initialHit)
	{
	}

	[Token(Token = "0x60008EC")]
	[Address(RVA = "0x931250", Offset = "0x931250", VA = "0x931250")]
	public RaycastHitDecal()
	{
	}
}
[Token(Token = "0x20001C6")]
[AddComponentMenu("Rendering/SetRenderQueue")]
public class RedDotSightRender : MonoBehaviour
{
	[Token(Token = "0x400088A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected int[] m_queues;

	[Token(Token = "0x60008ED")]
	[Address(RVA = "0x931260", Offset = "0x931260", VA = "0x931260")]
	protected void Awake()
	{
	}

	[Token(Token = "0x60008EE")]
	[Address(RVA = "0x93132C", Offset = "0x93132C", VA = "0x93132C")]
	public RedDotSightRender()
	{
	}
}
[Token(Token = "0x20001C7")]
public class Rocket : MonoBehaviour
{
	[Token(Token = "0x60008EF")]
	[Address(RVA = "0x9313A0", Offset = "0x9313A0", VA = "0x9313A0")]
	private void Start()
	{
	}

	[Token(Token = "0x60008F0")]
	[Address(RVA = "0x9313A4", Offset = "0x9313A4", VA = "0x9313A4")]
	private void Update()
	{
	}

	[Token(Token = "0x60008F1")]
	[Address(RVA = "0x9313A8", Offset = "0x9313A8", VA = "0x9313A8")]
	public Rocket()
	{
	}
}
[Token(Token = "0x20001C8")]
public class WeaponConfiguration : MonoBehaviour
{
	[Token(Token = "0x400088B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static WeaponConfiguration Instance;

	[Token(Token = "0x400088C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public NVRButtons triggerButton;

	[Token(Token = "0x400088D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public NVRButtons[] grabButtons;

	[Token(Token = "0x400088E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public NVRButtons[] dropButtons;

	[Token(Token = "0x400088F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public NVRButtons[] reloadButtons;

	[Token(Token = "0x60008F2")]
	[Address(RVA = "0x9313B0", Offset = "0x9313B0", VA = "0x9313B0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008F3")]
	[Address(RVA = "0x9315AC", Offset = "0x9315AC", VA = "0x9315AC")]
	public bool TriggerButtonUp(NVRHand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x60008F4")]
	[Address(RVA = "0x931614", Offset = "0x931614", VA = "0x931614")]
	public bool TriggerButtonDown(NVRHand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x60008F5")]
	[Address(RVA = "0x93167C", Offset = "0x93167C", VA = "0x93167C")]
	public bool TriggerButtonPressed(NVRHand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x60008F6")]
	[Address(RVA = "0x9316E4", Offset = "0x9316E4", VA = "0x9316E4")]
	public bool GrabButtonDown(NVRHand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x60008F7")]
	[Address(RVA = "0x93179C", Offset = "0x93179C", VA = "0x93179C")]
	public bool DropButtonDown(NVRHand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x60008F8")]
	[Address(RVA = "0x931854", Offset = "0x931854", VA = "0x931854")]
	public bool ReloadButtonDown(NVRHand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x60008F9")]
	[Address(RVA = "0x93190C", Offset = "0x93190C", VA = "0x93190C")]
	public WeaponConfiguration()
	{
	}
}
[Token(Token = "0x20001C9")]
public class PadPositionRotation : MonoBehaviour
{
	[Token(Token = "0x4000890")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshPro posX;

	[Token(Token = "0x4000891")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshPro posY;

	[Token(Token = "0x4000892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshPro posZ;

	[Token(Token = "0x4000893")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshPro rotX;

	[Token(Token = "0x4000894")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshPro rotY;

	[Token(Token = "0x4000895")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshPro rotZ;

	[Token(Token = "0x60008FA")]
	[Address(RVA = "0x9319D0", Offset = "0x9319D0", VA = "0x9319D0")]
	private void Update()
	{
	}

	[Token(Token = "0x60008FB")]
	[Address(RVA = "0x931CB4", Offset = "0x931CB4", VA = "0x931CB4")]
	public PadPositionRotation()
	{
	}
}
[Token(Token = "0x20001CA")]
public class PadPositionRotationButton : HitTarget
{
	[Token(Token = "0x4000896")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector3 position;

	[Token(Token = "0x4000897")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector3 rotation;

	[Token(Token = "0x4000898")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float delta;

	[Token(Token = "0x60008FC")]
	[Address(RVA = "0x931CBC", Offset = "0x931CBC", VA = "0x931CBC", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x60008FD")]
	[Address(RVA = "0x9322BC", Offset = "0x9322BC", VA = "0x9322BC")]
	public PadPositionRotationButton()
	{
	}
}
[Token(Token = "0x20001CB")]
public class CannonBehavior : MonoBehaviour
{
	[Token(Token = "0x4000899")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform m_cannonRot;

	[Token(Token = "0x400089A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform m_muzzle;

	[Token(Token = "0x400089B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_shotPrefab;

	[Token(Token = "0x400089C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture2D m_guiTexture;

	[Token(Token = "0x60008FE")]
	[Address(RVA = "0x9322C4", Offset = "0x9322C4", VA = "0x9322C4")]
	private void Start()
	{
	}

	[Token(Token = "0x60008FF")]
	[Address(RVA = "0x9322C8", Offset = "0x9322C8", VA = "0x9322C8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000900")]
	[Address(RVA = "0x932504", Offset = "0x932504", VA = "0x932504")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000901")]
	[Address(RVA = "0x9325E0", Offset = "0x9325E0", VA = "0x9325E0")]
	public CannonBehavior()
	{
	}
}
[Token(Token = "0x20001CC")]
public class CreateSinShapedLineStrip : MonoBehaviour
{
	[Token(Token = "0x400089D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int m_numVertices;

	[Token(Token = "0x400089E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material m_volumetricLineStripMaterial;

	[Token(Token = "0x400089F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color m_color;

	[Token(Token = "0x40008A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float m_start;

	[Token(Token = "0x40008A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float m_end;

	[Token(Token = "0x6000902")]
	[Address(RVA = "0x9325E8", Offset = "0x9325E8", VA = "0x9325E8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000903")]
	[Address(RVA = "0x933644", Offset = "0x933644", VA = "0x933644")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000904")]
	[Address(RVA = "0x933730", Offset = "0x933730", VA = "0x933730")]
	public CreateSinShapedLineStrip()
	{
	}
}
[Token(Token = "0x20001CD")]
public class ShotBehavior : MonoBehaviour
{
	[Token(Token = "0x6000905")]
	[Address(RVA = "0x93374C", Offset = "0x93374C", VA = "0x93374C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000906")]
	[Address(RVA = "0x933750", Offset = "0x933750", VA = "0x933750")]
	private void Update()
	{
	}

	[Token(Token = "0x6000907")]
	[Address(RVA = "0x933808", Offset = "0x933808", VA = "0x933808")]
	public ShotBehavior()
	{
	}
}
[Token(Token = "0x20001CE")]
public class VolumetricLineSettings : MonoBehaviour
{
	[Token(Token = "0x40008A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool m_disableFieldOfViewScaling;

	[Token(Token = "0x6000908")]
	[Address(RVA = "0x933810", Offset = "0x933810", VA = "0x933810")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000909")]
	[Address(RVA = "0x93386C", Offset = "0x93386C", VA = "0x93386C")]
	public VolumetricLineSettings()
	{
	}
}
namespace VolumetricLines
{
	[Token(Token = "0x20001CF")]
	[RequireComponent(typeof(MeshFilter))]
	[RequireComponent(typeof(MeshRenderer))]
	[ExecuteInEditMode]
	public class VolumetricLineBehavior : MonoBehaviour
	{
		[Token(Token = "0x40008A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public Material m_templateMaterial;

		[Token(Token = "0x40008A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool m_doNotOverwriteTemplateMaterialProperties;

		[Token(Token = "0x40008A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private Vector3 m_startPos;

		[Token(Token = "0x40008A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Vector3 m_endPos;

		[Token(Token = "0x40008A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private Color m_lineColor;

		[Token(Token = "0x40008A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private float m_lineWidth;

		[Token(Token = "0x40008A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[Range(0f, 1f)]
		private float m_lightSaberFactor;

		[Token(Token = "0x40008AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Material m_material;

		[Token(Token = "0x40008AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private MeshFilter m_meshFilter;

		[Token(Token = "0x17000084")]
		public Material TemplateMaterial
		{
			[Token(Token = "0x600090A")]
			[Address(RVA = "0x933874", Offset = "0x933874", VA = "0x933874")]
			get
			{
				return null;
			}
			[Token(Token = "0x600090B")]
			[Address(RVA = "0x93387C", Offset = "0x93387C", VA = "0x93387C")]
			set
			{
			}
		}

		[Token(Token = "0x17000085")]
		public bool DoNotOverwriteTemplateMaterialProperties
		{
			[Token(Token = "0x600090C")]
			[Address(RVA = "0x933884", Offset = "0x933884", VA = "0x933884")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600090D")]
			[Address(RVA = "0x93388C", Offset = "0x93388C", VA = "0x93388C")]
			set
			{
			}
		}

		[Token(Token = "0x17000086")]
		public Color LineColor
		{
			[Token(Token = "0x600090E")]
			[Address(RVA = "0x933898", Offset = "0x933898", VA = "0x933898")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x600090F")]
			[Address(RVA = "0x9338A4", Offset = "0x9338A4", VA = "0x9338A4")]
			set
			{
			}
		}

		[Token(Token = "0x17000087")]
		public float LineWidth
		{
			[Token(Token = "0x6000910")]
			[Address(RVA = "0x933A88", Offset = "0x933A88", VA = "0x933A88")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000911")]
			[Address(RVA = "0x933A90", Offset = "0x933A90", VA = "0x933A90")]
			set
			{
			}
		}

		[Token(Token = "0x17000088")]
		public float LightSaberFactor
		{
			[Token(Token = "0x6000912")]
			[Address(RVA = "0x933B4C", Offset = "0x933B4C", VA = "0x933B4C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000913")]
			[Address(RVA = "0x933B54", Offset = "0x933B54", VA = "0x933B54")]
			set
			{
			}
		}

		[Token(Token = "0x17000089")]
		public Vector3 StartPos
		{
			[Token(Token = "0x6000914")]
			[Address(RVA = "0x933C10", Offset = "0x933C10", VA = "0x933C10")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000915")]
			[Address(RVA = "0x933C1C", Offset = "0x933C1C", VA = "0x933C1C")]
			set
			{
			}
		}

		[Token(Token = "0x1700008A")]
		public Vector3 EndPos
		{
			[Token(Token = "0x6000916")]
			[Address(RVA = "0x933E98", Offset = "0x933E98", VA = "0x933E98")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000917")]
			[Address(RVA = "0x933EA4", Offset = "0x933EA4", VA = "0x933EA4")]
			set
			{
			}
		}

		[Token(Token = "0x6000918")]
		[Address(RVA = "0x933970", Offset = "0x933970", VA = "0x933970")]
		private void CreateMaterial()
		{
		}

		[Token(Token = "0x6000919")]
		[Address(RVA = "0x934004", Offset = "0x934004", VA = "0x934004")]
		private void DestroyMaterial()
		{
		}

		[Token(Token = "0x600091A")]
		[Address(RVA = "0x933EC4", Offset = "0x933EC4", VA = "0x933EC4")]
		private void SetAllMaterialProperties()
		{
		}

		[Token(Token = "0x600091B")]
		[Address(RVA = "0x933C30", Offset = "0x933C30", VA = "0x933C30")]
		public void SetStartAndEndPoints(Vector3 startPoint, Vector3 endPoint)
		{
		}

		[Token(Token = "0x600091C")]
		[Address(RVA = "0x934090", Offset = "0x934090", VA = "0x934090")]
		private void Start()
		{
		}

		[Token(Token = "0x600091D")]
		[Address(RVA = "0x934394", Offset = "0x934394", VA = "0x934394")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600091E")]
		[Address(RVA = "0x934398", Offset = "0x934398", VA = "0x934398")]
		private void Update()
		{
		}

		[Token(Token = "0x600091F")]
		[Address(RVA = "0x934468", Offset = "0x934468", VA = "0x934468")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000920")]
		[Address(RVA = "0x934480", Offset = "0x934480", VA = "0x934480")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6000921")]
		[Address(RVA = "0x93453C", Offset = "0x93453C", VA = "0x93453C")]
		public VolumetricLineBehavior()
		{
		}
	}
	[Token(Token = "0x20001D0")]
	[RequireComponent(typeof(MeshFilter))]
	[RequireComponent(typeof(MeshRenderer))]
	[ExecuteInEditMode]
	public class VolumetricLineStripBehavior : MonoBehaviour
	{
		[Token(Token = "0x40008AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public Material m_templateMaterial;

		[Token(Token = "0x40008AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool m_doNotOverwriteTemplateMaterialProperties;

		[Token(Token = "0x40008AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private Color m_lineColor;

		[Token(Token = "0x40008AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float m_lineWidth;

		[Token(Token = "0x40008B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[Range(0f, 1f)]
		private float m_lightSaberFactor;

		[Token(Token = "0x40008B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material m_material;

		[Token(Token = "0x40008B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private MeshFilter m_meshFilter;

		[Token(Token = "0x40008B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Vector3[] m_lineVertices;

		[Token(Token = "0x1700008B")]
		public Material TemplateMaterial
		{
			[Token(Token = "0x6000922")]
			[Address(RVA = "0x934550", Offset = "0x934550", VA = "0x934550")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000923")]
			[Address(RVA = "0x934558", Offset = "0x934558", VA = "0x934558")]
			set
			{
			}
		}

		[Token(Token = "0x1700008C")]
		public bool DoNotOverwriteTemplateMaterialProperties
		{
			[Token(Token = "0x6000924")]
			[Address(RVA = "0x934560", Offset = "0x934560", VA = "0x934560")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000925")]
			[Address(RVA = "0x934568", Offset = "0x934568", VA = "0x934568")]
			set
			{
			}
		}

		[Token(Token = "0x1700008D")]
		public Color LineColor
		{
			[Token(Token = "0x6000926")]
			[Address(RVA = "0x934574", Offset = "0x934574", VA = "0x934574")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000927")]
			[Address(RVA = "0x932810", Offset = "0x932810", VA = "0x932810")]
			set
			{
			}
		}

		[Token(Token = "0x1700008E")]
		public float LineWidth
		{
			[Token(Token = "0x6000928")]
			[Address(RVA = "0x934698", Offset = "0x934698", VA = "0x934698")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000929")]
			[Address(RVA = "0x9328DC", Offset = "0x9328DC", VA = "0x9328DC")]
			set
			{
			}
		}

		[Token(Token = "0x1700008F")]
		public float LightSaberFactor
		{
			[Token(Token = "0x600092A")]
			[Address(RVA = "0x9346A0", Offset = "0x9346A0", VA = "0x9346A0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600092B")]
			[Address(RVA = "0x932998", Offset = "0x932998", VA = "0x932998")]
			set
			{
			}
		}

		[Token(Token = "0x17000090")]
		public Vector3[] LineVertices
		{
			[Token(Token = "0x600092C")]
			[Address(RVA = "0x9346A8", Offset = "0x9346A8", VA = "0x9346A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600092D")]
		[Address(RVA = "0x934580", Offset = "0x934580", VA = "0x934580")]
		private void CreateMaterial()
		{
		}

		[Token(Token = "0x600092E")]
		[Address(RVA = "0x9347E8", Offset = "0x9347E8", VA = "0x9347E8")]
		private void DestroyMaterial()
		{
		}

		[Token(Token = "0x600092F")]
		[Address(RVA = "0x9346B0", Offset = "0x9346B0", VA = "0x9346B0")]
		private void SetAllMaterialProperties()
		{
		}

		[Token(Token = "0x6000930")]
		[Address(RVA = "0x932A54", Offset = "0x932A54", VA = "0x932A54")]
		public void UpdateLineVertices(Vector3[] m_newSetOfVertices)
		{
		}

		[Token(Token = "0x6000931")]
		[Address(RVA = "0x934874", Offset = "0x934874", VA = "0x934874")]
		private void Start()
		{
		}

		[Token(Token = "0x6000932")]
		[Address(RVA = "0x934890", Offset = "0x934890", VA = "0x934890")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000933")]
		[Address(RVA = "0x934894", Offset = "0x934894", VA = "0x934894")]
		private void Update()
		{
		}

		[Token(Token = "0x6000934")]
		[Address(RVA = "0x934964", Offset = "0x934964", VA = "0x934964")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000935")]
		[Address(RVA = "0x93497C", Offset = "0x93497C", VA = "0x93497C")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6000936")]
		[Address(RVA = "0x934AD0", Offset = "0x934AD0", VA = "0x934AD0")]
		public VolumetricLineStripBehavior()
		{
		}
	}
	[Token(Token = "0x20001D1")]
	public static class VolumetricLineVertexData
	{
		[Token(Token = "0x40008B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Vector2[] TexCoords;

		[Token(Token = "0x40008B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly Vector2[] VertexOffsets;

		[Token(Token = "0x40008B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly int[] Indices;
	}
	[Token(Token = "0x20001D2")]
	public class VolumetricMultiLineBehavior : MonoBehaviour
	{
		[Token(Token = "0x40008B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public Material m_templateMaterial;

		[Token(Token = "0x40008B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool m_doNotOverwriteTemplateMaterialProperties;

		[Token(Token = "0x40008B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private Color m_lineColor;

		[Token(Token = "0x40008BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float m_lineWidth;

		[Token(Token = "0x40008BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[Range(0f, 1f)]
		private float m_lightSaberFactor;

		[Token(Token = "0x40008BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Vector3[] m_lineVertices;

		[Token(Token = "0x40008BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private VolumetricLineBehavior[] m_volumetricLines;

		[Token(Token = "0x17000091")]
		public Material TemplateMaterial
		{
			[Token(Token = "0x6000938")]
			[Address(RVA = "0x934CB4", Offset = "0x934CB4", VA = "0x934CB4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000939")]
			[Address(RVA = "0x934CBC", Offset = "0x934CBC", VA = "0x934CBC")]
			set
			{
			}
		}

		[Token(Token = "0x17000092")]
		public bool DoNotOverwriteTemplateMaterialProperties
		{
			[Token(Token = "0x600093A")]
			[Address(RVA = "0x934CC4", Offset = "0x934CC4", VA = "0x934CC4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600093B")]
			[Address(RVA = "0x934CCC", Offset = "0x934CCC", VA = "0x934CCC")]
			set
			{
			}
		}

		[Token(Token = "0x17000093")]
		public Color LineColor
		{
			[Token(Token = "0x600093C")]
			[Address(RVA = "0x934CD8", Offset = "0x934CD8", VA = "0x934CD8")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x600093D")]
			[Address(RVA = "0x934CE4", Offset = "0x934CE4", VA = "0x934CE4")]
			set
			{
			}
		}

		[Token(Token = "0x17000094")]
		public float LineWidth
		{
			[Token(Token = "0x600093E")]
			[Address(RVA = "0x934E20", Offset = "0x934E20", VA = "0x934E20")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600093F")]
			[Address(RVA = "0x934E28", Offset = "0x934E28", VA = "0x934E28")]
			set
			{
			}
		}

		[Token(Token = "0x17000095")]
		public float LightSaberFactor
		{
			[Token(Token = "0x6000940")]
			[Address(RVA = "0x934F40", Offset = "0x934F40", VA = "0x934F40")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000941")]
			[Address(RVA = "0x934F48", Offset = "0x934F48", VA = "0x934F48")]
			set
			{
			}
		}

		[Token(Token = "0x6000942")]
		[Address(RVA = "0x935060", Offset = "0x935060", VA = "0x935060")]
		public void CreateAllVolumetricLines()
		{
		}

		[Token(Token = "0x6000943")]
		[Address(RVA = "0x935398", Offset = "0x935398", VA = "0x935398")]
		public void DestroyAllVolumetricLines()
		{
		}

		[Token(Token = "0x6000944")]
		[Address(RVA = "0x9354E4", Offset = "0x9354E4", VA = "0x9354E4")]
		public void UpdateLineVertices(Vector3[] newSetOfVertices)
		{
		}

		[Token(Token = "0x6000945")]
		[Address(RVA = "0x93550C", Offset = "0x93550C", VA = "0x93550C")]
		private void SetAllMaterialProperties()
		{
		}

		[Token(Token = "0x6000946")]
		[Address(RVA = "0x93553C", Offset = "0x93553C", VA = "0x93553C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000947")]
		[Address(RVA = "0x935540", Offset = "0x935540", VA = "0x935540")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000948")]
		[Address(RVA = "0x935544", Offset = "0x935544", VA = "0x935544")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000949")]
		[Address(RVA = "0x935548", Offset = "0x935548", VA = "0x935548")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x600094A")]
		[Address(RVA = "0x93569C", Offset = "0x93569C", VA = "0x93569C")]
		public VolumetricMultiLineBehavior()
		{
		}
	}
}
namespace VolumetricLines.Utils
{
	[Token(Token = "0x20001D3")]
	public static class TransformExtensionMethods
	{
		[Token(Token = "0x600094B")]
		[Address(RVA = "0x9356A4", Offset = "0x9356A4", VA = "0x9356A4")]
		public static float GetGlobalUniformScaleForLineWidth(this Transform trans)
		{
			return default(float);
		}
	}
}
namespace UB
{
	[Token(Token = "0x20001D4")]
	public class SimpleRotater : MonoBehaviour
	{
		[Token(Token = "0x40008BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float XSpeed;

		[Token(Token = "0x40008BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float YSpeed;

		[Token(Token = "0x40008C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float ZSpeed;

		[Token(Token = "0x600094C")]
		[Address(RVA = "0x9356FC", Offset = "0x9356FC", VA = "0x9356FC")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600094D")]
		[Address(RVA = "0x935738", Offset = "0x935738", VA = "0x935738")]
		public SimpleRotater()
		{
		}
	}
}
namespace Sumalab.Util
{
	[Token(Token = "0x20001D5")]
	public class SumalabEvent
	{
		[Token(Token = "0x14000004")]
		private event Action _event
		{
			[Token(Token = "0x600094E")]
			[Address(RVA = "0x935740", Offset = "0x935740", VA = "0x935740")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600094F")]
			[Address(RVA = "0x9357DC", Offset = "0x9357DC", VA = "0x9357DC")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6000950")]
		[Address(RVA = "0x935878", Offset = "0x935878", VA = "0x935878")]
		public void Listen(Action action)
		{
		}

		[Token(Token = "0x6000951")]
		[Address(RVA = "0x93587C", Offset = "0x93587C", VA = "0x93587C")]
		public void Remove(Action action)
		{
		}

		[Token(Token = "0x6000952")]
		[Address(RVA = "0x935880", Offset = "0x935880", VA = "0x935880")]
		public void Clear()
		{
		}

		[Token(Token = "0x6000953")]
		[Address(RVA = "0x935888", Offset = "0x935888", VA = "0x935888")]
		public void Send()
		{
		}

		[Token(Token = "0x6000954")]
		[Address(RVA = "0x93597C", Offset = "0x93597C", VA = "0x93597C")]
		public SumalabEvent()
		{
		}
	}
	[Token(Token = "0x20001D6")]
	public class SumalabEvent<T0>
	{
		[Token(Token = "0x14000005")]
		private event Action<T0> _event
		{
			[Token(Token = "0x6000955")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6000956")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6000957")]
		public void Listen(Action<T0> action)
		{
		}

		[Token(Token = "0x6000958")]
		public void Remove(Action<T0> action)
		{
		}

		[Token(Token = "0x6000959")]
		public void Clear()
		{
		}

		[Token(Token = "0x600095A")]
		public void Send(T0 arg0)
		{
		}

		[Token(Token = "0x600095B")]
		public SumalabEvent()
		{
		}
	}
	[Token(Token = "0x20001D7")]
	public class SumalabEvent<T0, T1>
	{
		[Token(Token = "0x14000006")]
		private event Action<T0, T1> _event
		{
			[Token(Token = "0x600095C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600095D")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x600095E")]
		public void Listen(Action<T0, T1> action)
		{
		}

		[Token(Token = "0x600095F")]
		public void Remove(Action<T0, T1> action)
		{
		}

		[Token(Token = "0x6000960")]
		public void Clear()
		{
		}

		[Token(Token = "0x6000961")]
		public void Send(T0 arg0, T1 arg1)
		{
		}

		[Token(Token = "0x6000962")]
		public SumalabEvent()
		{
		}
	}
	[Token(Token = "0x20001D8")]
	public class SumalabEvent<T0, T1, T2>
	{
		[Token(Token = "0x14000007")]
		private event Action<T0, T1, T2> _event
		{
			[Token(Token = "0x6000963")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6000964")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6000965")]
		public void Listen(Action<T0, T1, T2> action)
		{
		}

		[Token(Token = "0x6000966")]
		public void Remove(Action<T0, T1, T2> action)
		{
		}

		[Token(Token = "0x6000967")]
		public void Clear()
		{
		}

		[Token(Token = "0x6000968")]
		public void Send(T0 arg0, T1 arg1, T2 arg2)
		{
		}

		[Token(Token = "0x6000969")]
		public SumalabEvent()
		{
		}
	}
	[Token(Token = "0x20001D9")]
	public class SumalabInvoke : MonoBehaviour
	{
		[Token(Token = "0x20001DA")]
		public class SumalabInvokeHandler
		{
			[Token(Token = "0x40008CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public object[] arguments;

			[Token(Token = "0x40008CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string name;

			[Token(Token = "0x40008D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public object o;

			[Token(Token = "0x40008D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float start;

			[Token(Token = "0x40008D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float delay;

			[Token(Token = "0x40008D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float repeat;

			[Token(Token = "0x40008D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float end;

			[Token(Token = "0x40008D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Action action;

			[Token(Token = "0x40008D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public bool canceled;

			[Token(Token = "0x40008D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
			public bool repeated;

			[Token(Token = "0x40008D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
			public bool realTime;

			[Token(Token = "0x6000984")]
			[Address(RVA = "0x937594", Offset = "0x937594", VA = "0x937594")]
			public void execute()
			{
			}

			[Token(Token = "0x6000985")]
			[Address(RVA = "0x9374D0", Offset = "0x9374D0", VA = "0x9374D0")]
			internal bool finished()
			{
				return default(bool);
			}

			[Token(Token = "0x6000986")]
			[Address(RVA = "0x937CDC", Offset = "0x937CDC", VA = "0x937CDC")]
			internal float getNextRepeatTime()
			{
				return default(float);
			}

			[Token(Token = "0x6000987")]
			[Address(RVA = "0x937B18", Offset = "0x937B18", VA = "0x937B18")]
			public SumalabInvokeHandler()
			{
			}
		}

		[Token(Token = "0x20001DB")]
		private class DecendingComparer : IComparer
		{
			[Token(Token = "0x6000988")]
			[Address(RVA = "0x937CE4", Offset = "0x937CE4", VA = "0x937CE4", Slot = "4")]
			public int Compare(object x, object y)
			{
				return default(int);
			}

			[Token(Token = "0x6000989")]
			[Address(RVA = "0x937C80", Offset = "0x937C80", VA = "0x937C80")]
			public DecendingComparer()
			{
			}
		}

		[Token(Token = "0x40008C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static float NEXT_FRAME;

		[Token(Token = "0x40008C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SortedList pendingTasks;

		[Token(Token = "0x40008C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SortedList pendingTasksRealTime;

		[Token(Token = "0x40008C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<object, object> cancelTasksCache;

		[Token(Token = "0x40008C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool m_bIsExecutingTasks;

		[Token(Token = "0x40008CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<SumalabInvokeHandler> addInvokeLater;

		[Token(Token = "0x40008CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static SumalabInvoke Instance;

		[Token(Token = "0x40008CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static float currentTime;

		[Token(Token = "0x40008CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static float currentRealTime;

		[Token(Token = "0x600096A")]
		[Address(RVA = "0x935984", Offset = "0x935984", VA = "0x935984")]
		private void Awake()
		{
		}

		[Token(Token = "0x600096B")]
		[Address(RVA = "0x9359E0", Offset = "0x9359E0", VA = "0x9359E0")]
		public static SumalabInvokeHandler Invoke(object target, string methodName, float delay, params object[] arguments)
		{
			return null;
		}

		[Token(Token = "0x600096C")]
		[Address(RVA = "0x935C20", Offset = "0x935C20", VA = "0x935C20")]
		public static SumalabInvokeHandler InvokeRealTime(object target, string methodName, float delay, params object[] arguments)
		{
			return null;
		}

		[Token(Token = "0x600096D")]
		[Address(RVA = "0x935CAC", Offset = "0x935CAC", VA = "0x935CAC")]
		public static SumalabInvokeHandler InvokeRepeat(object target, string methodName, float start, float delay, float end, params object[] arguments)
		{
			return null;
		}

		[Token(Token = "0x600096E")]
		[Address(RVA = "0x935D48", Offset = "0x935D48", VA = "0x935D48")]
		public static SumalabInvokeHandler InvokeRepeatRealTime(object target, string methodName, float start, float delay, float end, params object[] arguments)
		{
			return null;
		}

		[Token(Token = "0x600096F")]
		[Address(RVA = "0x935DE4", Offset = "0x935DE4", VA = "0x935DE4")]
		public static SumalabInvokeHandler Invoke(object o, Action action, float delay)
		{
			return null;
		}

		[Token(Token = "0x6000970")]
		[Address(RVA = "0x935EC4", Offset = "0x935EC4", VA = "0x935EC4")]
		public static SumalabInvokeHandler InvokeRealTime(object o, Action action, float delay)
		{
			return null;
		}

		[Token(Token = "0x6000971")]
		[Address(RVA = "0x935FA4", Offset = "0x935FA4", VA = "0x935FA4")]
		public static SumalabInvokeHandler InvokeRepeat(object o, Action action, float start, float delay, float end)
		{
			return null;
		}

		[Token(Token = "0x6000972")]
		[Address(RVA = "0x936094", Offset = "0x936094", VA = "0x936094")]
		public static SumalabInvokeHandler InvokeRepeatRealTime(object o, Action action, float start, float delay, float end)
		{
			return null;
		}

		[Token(Token = "0x6000973")]
		[Address(RVA = "0x936184", Offset = "0x936184", VA = "0x936184")]
		public static SumalabInvokeHandler Invoke(object o, string label, Action action, float delay)
		{
			return null;
		}

		[Token(Token = "0x6000974")]
		[Address(RVA = "0x936268", Offset = "0x936268", VA = "0x936268")]
		public static SumalabInvokeHandler InvokeRealTime(object o, string label, Action action, float delay)
		{
			return null;
		}

		[Token(Token = "0x6000975")]
		[Address(RVA = "0x93634C", Offset = "0x93634C", VA = "0x93634C")]
		public static SumalabInvokeHandler InvokeRepeat(object o, string label, Action action, float start, float delay, float end, params object[] arguments)
		{
			return null;
		}

		[Token(Token = "0x6000976")]
		[Address(RVA = "0x9363F4", Offset = "0x9363F4", VA = "0x9363F4")]
		public static SumalabInvokeHandler InvokeRepeatRealTime(object o, string label, Action action, float start, float delay, float end, params object[] arguments)
		{
			return null;
		}

		[Token(Token = "0x6000977")]
		[Address(RVA = "0x93649C", Offset = "0x93649C", VA = "0x93649C")]
		public static void CancelInvoke(object o, SumalabInvokeHandler invokeHandler)
		{
		}

		[Token(Token = "0x6000978")]
		[Address(RVA = "0x936668", Offset = "0x936668", VA = "0x936668")]
		public static void CancelInvoke(object o, [Optional] string name)
		{
		}

		[Token(Token = "0x6000979")]
		[Address(RVA = "0x936918", Offset = "0x936918", VA = "0x936918")]
		private void Update()
		{
		}

		[Token(Token = "0x600097A")]
		[Address(RVA = "0x936AA0", Offset = "0x936AA0", VA = "0x936AA0")]
		private void executePendingTasks(SortedList pendingTasks, bool realTime)
		{
		}

		[Token(Token = "0x600097B")]
		[Address(RVA = "0x9373A8", Offset = "0x9373A8", VA = "0x9373A8")]
		private void executeTask(SumalabInvokeHandler task)
		{
		}

		[Token(Token = "0x600097C")]
		[Address(RVA = "0x937258", Offset = "0x937258", VA = "0x937258")]
		private void executeTaskList(List<SumalabInvokeHandler> _pendingTasks)
		{
		}

		[Token(Token = "0x600097D")]
		[Address(RVA = "0x936558", Offset = "0x936558", VA = "0x936558")]
		public static void init()
		{
		}

		[Token(Token = "0x600097E")]
		[Address(RVA = "0x936D64", Offset = "0x936D64", VA = "0x936D64")]
		private void addInvoke(SumalabInvokeHandler data, float delay)
		{
		}

		[Token(Token = "0x600097F")]
		[Address(RVA = "0x93780C", Offset = "0x93780C", VA = "0x93780C")]
		private void addTaskToCancelCache(SumalabInvokeHandler handler)
		{
		}

		[Token(Token = "0x6000980")]
		[Address(RVA = "0x9376B4", Offset = "0x9376B4", VA = "0x9376B4")]
		private void removeTaskFromCancelCache(SumalabInvokeHandler handler)
		{
		}

		[Token(Token = "0x6000981")]
		[Address(RVA = "0x935A6C", Offset = "0x935A6C", VA = "0x935A6C")]
		private static SumalabInvokeHandler addInvoke(Action action, float fRepeat, float fEnd, object o, string methodName, float fTime, bool realTime, params object[] arguments)
		{
			return null;
		}

		[Token(Token = "0x6000982")]
		[Address(RVA = "0x937B20", Offset = "0x937B20", VA = "0x937B20")]
		public SumalabInvoke()
		{
		}
	}
}
namespace SumalabVR.Weapons
{
	[Token(Token = "0x20001DC")]
	public class BulletIndicatorDisplay : MonoBehaviour
	{
		[Token(Token = "0x40008D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TextMeshPro display;

		[Token(Token = "0x40008DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Weapon weapon;

		[Token(Token = "0x600098A")]
		[Address(RVA = "0x937D9C", Offset = "0x937D9C", VA = "0x937D9C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600098B")]
		[Address(RVA = "0x937E18", Offset = "0x937E18", VA = "0x937E18")]
		private void OnFire()
		{
		}

		[Token(Token = "0x600098C")]
		[Address(RVA = "0x937E84", Offset = "0x937E84", VA = "0x937E84")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600098D")]
		[Address(RVA = "0x937F3C", Offset = "0x937F3C", VA = "0x937F3C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600098E")]
		[Address(RVA = "0x937E48", Offset = "0x937E48", VA = "0x937E48")]
		private string getBullets()
		{
			return null;
		}

		[Token(Token = "0x600098F")]
		[Address(RVA = "0x937FF4", Offset = "0x937FF4", VA = "0x937FF4")]
		public BulletIndicatorDisplay()
		{
		}
	}
}
namespace Sumalab_Weapons
{
	[Token(Token = "0x20001DD")]
	public class Body : MonoBehaviour
	{
		[Token(Token = "0x40008DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public NVRHead head;

		[Token(Token = "0x40008DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Tweener tweener;

		[Token(Token = "0x6000990")]
		[Address(RVA = "0x937FFC", Offset = "0x937FFC", VA = "0x937FFC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000991")]
		[Address(RVA = "0x9380B4", Offset = "0x9380B4", VA = "0x9380B4")]
		public Body()
		{
		}
	}
	[Token(Token = "0x20001DE")]
	public class Bullet : MonoBehaviour
	{
		[Token(Token = "0x40008DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool DisableOnHit;

		[Token(Token = "0x40008DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public static bool UIMode;

		[Token(Token = "0x40008DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float speed;

		[Token(Token = "0x40008E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WeaponData weapon;

		[Token(Token = "0x40008E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public AimTarget owner;

		[Token(Token = "0x40008E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static LayerMask layersToIgnore;

		[Token(Token = "0x40008E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool remote;

		[Token(Token = "0x40008E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool isRemotePlayer;

		[Token(Token = "0x40008E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 lastPosition;

		[Token(Token = "0x40008E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 initPosition;

		[Token(Token = "0x40008E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 currentPosition;

		[Token(Token = "0x40008E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 newPosition;

		[Token(Token = "0x40008E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool _bRepeatCheck;

		[Token(Token = "0x40008EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float DecalCastRadius;

		[Token(Token = "0x40008EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public EasyDecal DefaultDecalPrefab;

		[Token(Token = "0x40008EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static float speedModifier;

		[Token(Token = "0x40008ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static float MAX_DECAL_DISTANCE;

		[Token(Token = "0x40008EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static float MAX_SOUND_DISTANCE;

		[Token(Token = "0x40008EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static float MIN_BULLET_FLY_SOUND_DISTANCE;

		[Token(Token = "0x40008F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool m_bPlayerSound;

		[Token(Token = "0x40008F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private HitTarget hitTarget;

		[Token(Token = "0x40008F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private List<SphereHit> m_lRaycastItemsHit;

		[Token(Token = "0x40008F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Renderer bulletRenderer;

		[Token(Token = "0x40008F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private TrailRenderer trailRenderer;

		[Token(Token = "0x40008F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static int LAYERS_UI;

		[Token(Token = "0x40008F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private static int LAYERS_PLAYERWEAPONS_IGNOREBULLETS;

		[Token(Token = "0x40008F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public GameObject bulletHole;

		[Token(Token = "0x6000992")]
		[Address(RVA = "0x9380BC", Offset = "0x9380BC", VA = "0x9380BC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000993")]
		[Address(RVA = "0x9382C0", Offset = "0x9382C0", VA = "0x9382C0")]
		public void Fire(Vector3 initPosition)
		{
		}

		[Token(Token = "0x6000994")]
		[Address(RVA = "0x938500", Offset = "0x938500", VA = "0x938500")]
		public void Fire(Vector3 initPosition, Vector3 finalPosition)
		{
		}

		[Token(Token = "0x6000995")]
		[Address(RVA = "0x9383A0", Offset = "0x9383A0", VA = "0x9383A0")]
		private void enableImpl()
		{
		}

		[Token(Token = "0x6000996")]
		[Address(RVA = "0x9386D0", Offset = "0x9386D0", VA = "0x9386D0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000997")]
		[Address(RVA = "0x9387F0", Offset = "0x9387F0", VA = "0x9387F0")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000998")]
		[Address(RVA = "0x938808", Offset = "0x938808", VA = "0x938808")]
		private void checkPlayerSound()
		{
		}

		[Token(Token = "0x6000999")]
		[Address(RVA = "0x9389B8", Offset = "0x9389B8", VA = "0x9389B8")]
		private void MoveBullet()
		{
		}

		[Token(Token = "0x600099A")]
		[Address(RVA = "0x938D10", Offset = "0x938D10", VA = "0x938D10")]
		private void CheckHit()
		{
		}

		[Token(Token = "0x600099B")]
		[Address(RVA = "0x939CC4", Offset = "0x939CC4", VA = "0x939CC4")]
		public void repeatCheck()
		{
		}

		[Token(Token = "0x600099C")]
		[Address(RVA = "0x939CD0", Offset = "0x939CD0", VA = "0x939CD0")]
		public void disableBullet()
		{
		}

		[Token(Token = "0x600099D")]
		[Address(RVA = "0x93A430", Offset = "0x93A430", VA = "0x93A430")]
		private void disableImpl()
		{
		}

		[Token(Token = "0x600099E")]
		[Address(RVA = "0x939D84", Offset = "0x939D84", VA = "0x939D84")]
		private void addDecalHit(HitTarget hitTarget, Ray ray, RaycastHit initialHit)
		{
		}

		[Token(Token = "0x600099F")]
		[Address(RVA = "0x93A45C", Offset = "0x93A45C", VA = "0x93A45C")]
		private void CheckTarget()
		{
		}

		[Token(Token = "0x60009A0")]
		[Address(RVA = "0x938AEC", Offset = "0x938AEC", VA = "0x938AEC")]
		public bool isPlayerBullet()
		{
			return default(bool);
		}

		[Token(Token = "0x60009A1")]
		[Address(RVA = "0x93A460", Offset = "0x93A460", VA = "0x93A460")]
		public Vector3 getInitPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60009A2")]
		[Address(RVA = "0x93A46C", Offset = "0x93A46C", VA = "0x93A46C")]
		public HitTarget getTargetHitted()
		{
			return null;
		}

		[Token(Token = "0x60009A3")]
		[Address(RVA = "0x93A474", Offset = "0x93A474", VA = "0x93A474")]
		public Bullet()
		{
		}
	}
	[Token(Token = "0x20001DF")]
	public class BulletModel : MonoBehaviour
	{
		[Token(Token = "0x40008F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject bullet;

		[Token(Token = "0x40008F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject wastedBullet;

		[Token(Token = "0x60009A5")]
		[Address(RVA = "0x93A598", Offset = "0x93A598", VA = "0x93A598", Slot = "4")]
		protected virtual void showBullet(bool wasted)
		{
		}

		[Token(Token = "0x60009A6")]
		[Address(RVA = "0x93A5E0", Offset = "0x93A5E0", VA = "0x93A5E0", Slot = "5")]
		public virtual void throwBullet(Weapon weapon, bool wasted)
		{
		}

		[Token(Token = "0x60009A7")]
		[Address(RVA = "0x93A88C", Offset = "0x93A88C", VA = "0x93A88C")]
		protected void bulletShellSound()
		{
		}

		[Token(Token = "0x60009A8")]
		[Address(RVA = "0x93A8BC", Offset = "0x93A8BC", VA = "0x93A8BC")]
		public BulletModel()
		{
		}
	}
	[Token(Token = "0x20001E0")]
	public class BulletModel_MiniGun : BulletModel
	{
		[Token(Token = "0x60009A9")]
		[Address(RVA = "0x93A8C4", Offset = "0x93A8C4", VA = "0x93A8C4", Slot = "4")]
		protected override void showBullet(bool wasted)
		{
		}

		[Token(Token = "0x60009AA")]
		[Address(RVA = "0x93A8FC", Offset = "0x93A8FC", VA = "0x93A8FC", Slot = "5")]
		public override void throwBullet(Weapon weapon, bool wasted)
		{
		}

		[Token(Token = "0x60009AB")]
		[Address(RVA = "0x93ABA4", Offset = "0x93ABA4", VA = "0x93ABA4")]
		private void throwBullet(Transform bullet, Vector3 force, Vector3 angularForce)
		{
		}

		[Token(Token = "0x60009AC")]
		[Address(RVA = "0x93AD8C", Offset = "0x93AD8C", VA = "0x93AD8C")]
		public BulletModel_MiniGun()
		{
		}
	}
	[Token(Token = "0x20001E1")]
	public class Cartridge : NVRInteractable
	{
		[Token(Token = "0x40008FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public WeaponModel weaponModel;

		[Token(Token = "0x40008FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Weapon weaponSaved;

		[Token(Token = "0x60009AD")]
		[Address(RVA = "0x93AD94", Offset = "0x93AD94", VA = "0x93AD94", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60009AE")]
		[Address(RVA = "0x93AE5C", Offset = "0x93AE5C", VA = "0x93AE5C", Slot = "10")]
		public override void BeginInteraction(NVRHand hand)
		{
		}

		[Token(Token = "0x60009AF")]
		[Address(RVA = "0x93AE60", Offset = "0x93AE60", VA = "0x93AE60", Slot = "15")]
		public override void EndInteraction(NVRHand hand)
		{
		}

		[Token(Token = "0x60009B0")]
		[Address(RVA = "0x93AE64", Offset = "0x93AE64", VA = "0x93AE64", Slot = "13")]
		public override void HoveringUpdate(NVRHand hand, float forTime)
		{
		}

		[Token(Token = "0x60009B1")]
		[Address(RVA = "0x93B150", Offset = "0x93B150", VA = "0x93B150")]
		public void saveWeapon(Weapon weapon)
		{
		}

		[Token(Token = "0x60009B2")]
		[Address(RVA = "0x93B2EC", Offset = "0x93B2EC", VA = "0x93B2EC")]
		public Weapon getWeapon()
		{
			return null;
		}

		[Token(Token = "0x60009B3")]
		[Address(RVA = "0x93B2FC", Offset = "0x93B2FC", VA = "0x93B2FC", Slot = "8")]
		public override void UpdateColliders()
		{
		}

		[Token(Token = "0x60009B4")]
		[Address(RVA = "0x93B300", Offset = "0x93B300", VA = "0x93B300", Slot = "21")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x60009B5")]
		[Address(RVA = "0x93B304", Offset = "0x93B304", VA = "0x93B304")]
		public Cartridge()
		{
		}
	}
	[Token(Token = "0x20001E2")]
	public class ChangeWeaponHand : MonoBehaviour
	{
		[Token(Token = "0x40008FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static float DETECTION_DISTANCE;

		[Token(Token = "0x40008FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool initialised;

		[Token(Token = "0x40008FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Weapon weapon;

		[Token(Token = "0x60009B6")]
		[Address(RVA = "0x93B35C", Offset = "0x93B35C", VA = "0x93B35C")]
		private void Update()
		{
		}

		[Token(Token = "0x60009B7")]
		[Address(RVA = "0x93B568", Offset = "0x93B568", VA = "0x93B568")]
		private void changeWeaponHand()
		{
		}

		[Token(Token = "0x60009B8")]
		[Address(RVA = "0x93B5B8", Offset = "0x93B5B8", VA = "0x93B5B8")]
		public void init(Weapon weapon)
		{
		}

		[Token(Token = "0x60009B9")]
		[Address(RVA = "0x93B5EC", Offset = "0x93B5EC", VA = "0x93B5EC")]
		public void activate()
		{
		}

		[Token(Token = "0x60009BA")]
		[Address(RVA = "0x93B5C8", Offset = "0x93B5C8", VA = "0x93B5C8")]
		public void deactivate()
		{
		}

		[Token(Token = "0x60009BB")]
		[Address(RVA = "0x93B610", Offset = "0x93B610", VA = "0x93B610")]
		public ChangeWeaponHand()
		{
		}
	}
	[Token(Token = "0x20001E3")]
	public class DualWield : MonoBehaviour
	{
		[Token(Token = "0x40008FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Weapon mainWeapon;

		[Token(Token = "0x4000900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Weapon secondaryWeapon;

		[Token(Token = "0x60009BD")]
		[Address(RVA = "0x93B668", Offset = "0x93B668", VA = "0x93B668")]
		public void BeginInteraction(NVRHand mainHand)
		{
		}

		[Token(Token = "0x60009BE")]
		[Address(RVA = "0x93B6FC", Offset = "0x93B6FC", VA = "0x93B6FC")]
		public DualWield()
		{
		}
	}
	[Token(Token = "0x20001E4")]
	public class HitDynamicTarget : HitTarget
	{
		[Token(Token = "0x4000901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float force;

		[Token(Token = "0x60009BF")]
		[Address(RVA = "0x93B704", Offset = "0x93B704", VA = "0x93B704", Slot = "4")]
		public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
		{
			return default(bool);
		}

		[Token(Token = "0x60009C0")]
		[Address(RVA = "0x93B9D8", Offset = "0x93B9D8", VA = "0x93B9D8")]
		public HitDynamicTarget()
		{
		}
	}
	[Token(Token = "0x20001E5")]
	public class HitTarget : MonoBehaviour
	{
		[Token(Token = "0x4000902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool showDecal;

		[Token(Token = "0x4000903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool alwaysShow;

		[Token(Token = "0x4000904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EasyDecal decal;

		[Token(Token = "0x4000905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public NVRCollisionSoundMaterials[] decalSound;

		[Token(Token = "0x4000906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PoolManager.PoolType ImpactParticles;

		[Token(Token = "0x60009C1")]
		[Address(RVA = "0x93B850", Offset = "0x93B850", VA = "0x93B850", Slot = "4")]
		public virtual bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
		{
			return default(bool);
		}

		[Token(Token = "0x60009C2")]
		[Address(RVA = "0x93BA60", Offset = "0x93BA60", VA = "0x93BA60", Slot = "5")]
		protected virtual void ShowImpactEffect(Ray ray, RaycastHit hit)
		{
		}

		[Token(Token = "0x60009C3")]
		[Address(RVA = "0x93BBD4", Offset = "0x93BBD4", VA = "0x93BBD4", Slot = "6")]
		public virtual void OnTarget()
		{
		}

		[Token(Token = "0x60009C4")]
		[Address(RVA = "0x93B9E4", Offset = "0x93B9E4", VA = "0x93B9E4")]
		public HitTarget()
		{
		}
	}
	[Token(Token = "0x20001E6")]
	public class MagDetector : MonoBehaviour
	{
		[Token(Token = "0x4000907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool MagTriggered;

		[Token(Token = "0x4000908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Weapon weapon;

		[Token(Token = "0x4000909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WeaponMag mag;

		[Token(Token = "0x400090A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool initialised;

		[Token(Token = "0x60009C5")]
		[Address(RVA = "0x93BBD8", Offset = "0x93BBD8", VA = "0x93BBD8")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60009C6")]
		[Address(RVA = "0x93BCE0", Offset = "0x93BCE0", VA = "0x93BCE0")]
		public WeaponMag getTriggeredMag()
		{
			return null;
		}

		[Token(Token = "0x60009C7")]
		[Address(RVA = "0x93BCF0", Offset = "0x93BCF0", VA = "0x93BCF0")]
		public void init(Weapon gunTrigger)
		{
		}

		[Token(Token = "0x60009C8")]
		[Address(RVA = "0x93BD2C", Offset = "0x93BD2C", VA = "0x93BD2C")]
		public void activate()
		{
		}

		[Token(Token = "0x60009C9")]
		[Address(RVA = "0x93BD00", Offset = "0x93BD00", VA = "0x93BD00")]
		public void deactivate()
		{
		}

		[Token(Token = "0x60009CA")]
		[Address(RVA = "0x93BD50", Offset = "0x93BD50", VA = "0x93BD50")]
		public MagDetector()
		{
		}
	}
	[Token(Token = "0x20001E7")]
	public class MiniGunCannon : MonoBehaviour
	{
		[Token(Token = "0x20001E8")]
		[CompilerGenerated]
		private sealed class <Play>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000915")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000916")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000917")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MiniGunCannon <>4__this;

			[Token(Token = "0x17000096")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60009D3")]
				[Address(RVA = "0x93C308", Offset = "0x93C308", VA = "0x93C308", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000097")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60009D5")]
				[Address(RVA = "0x93C350", Offset = "0x93C350", VA = "0x93C350", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60009D0")]
			[Address(RVA = "0x93BDC0", Offset = "0x93BDC0", VA = "0x93BDC0")]
			[DebuggerHidden]
			public <Play>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x60009D1")]
			[Address(RVA = "0x93C198", Offset = "0x93C198", VA = "0x93C198", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60009D2")]
			[Address(RVA = "0x93C19C", Offset = "0x93C19C", VA = "0x93C19C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60009D4")]
			[Address(RVA = "0x93C310", Offset = "0x93C310", VA = "0x93C310", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400090B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioSource audioSource;

		[Token(Token = "0x400090C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Weapon weapon;

		[Token(Token = "0x400090D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Animator animator;

		[Token(Token = "0x400090E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioClip windUp;

		[Token(Token = "0x400090F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AudioClip loop;

		[Token(Token = "0x4000910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AudioClip shutdown;

		[Token(Token = "0x4000911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float speed;

		[Token(Token = "0x4000912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float currentSpeed;

		[Token(Token = "0x4000913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float targetSpeed;

		[Token(Token = "0x4000914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private bool m_bRemote;

		[Token(Token = "0x60009CB")]
		[Address(RVA = "0x93BD58", Offset = "0x93BD58", VA = "0x93BD58")]
		[IteratorStateMachine(typeof(<Play>d__10))]
		private IEnumerator Play()
		{
			return null;
		}

		[Token(Token = "0x60009CC")]
		[Address(RVA = "0x93BDE8", Offset = "0x93BDE8", VA = "0x93BDE8")]
		public void StartFiring(bool bRemote = false)
		{
		}

		[Token(Token = "0x60009CD")]
		[Address(RVA = "0x93BEC4", Offset = "0x93BEC4", VA = "0x93BEC4")]
		public void StopFiring(bool bRemote = false)
		{
		}

		[Token(Token = "0x60009CE")]
		[Address(RVA = "0x93BFD4", Offset = "0x93BFD4", VA = "0x93BFD4")]
		private void Update()
		{
		}

		[Token(Token = "0x60009CF")]
		[Address(RVA = "0x93C188", Offset = "0x93C188", VA = "0x93C188")]
		public MiniGunCannon()
		{
		}
	}
	[Token(Token = "0x20001E9")]
	public class WeaponsPool : MonoBehaviour
	{
		[Token(Token = "0x4000918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject bulletPrefab;

		[Token(Token = "0x4000919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int bulletPoolSize;

		[Token(Token = "0x400091A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Space]
		public GameObject wastedBulletSPrefab;

		[Token(Token = "0x400091B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int wastedBulletSSize;

		[Token(Token = "0x400091C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Space]
		public GameObject wastedBulletLPrefab;

		[Token(Token = "0x400091D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int wastedBulletLSize;

		[Token(Token = "0x400091E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static WeaponsPool instance;

		[Token(Token = "0x400091F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Pool bulletPool;

		[Token(Token = "0x4000920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Pool wastedBulletSPool;

		[Token(Token = "0x4000921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Pool wastedBulletLPool;

		[Token(Token = "0x60009D6")]
		[Address(RVA = "0x93C358", Offset = "0x93C358", VA = "0x93C358", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60009D7")]
		[Address(RVA = "0x93C464", Offset = "0x93C464", VA = "0x93C464")]
		public static WeaponsPool getInstance()
		{
			return null;
		}

		[Token(Token = "0x60009D8")]
		[Address(RVA = "0x93C4AC", Offset = "0x93C4AC", VA = "0x93C4AC")]
		public GameObject getBullet()
		{
			return null;
		}

		[Token(Token = "0x60009D9")]
		[Address(RVA = "0x93C4C8", Offset = "0x93C4C8", VA = "0x93C4C8")]
		public GameObject getWastedBulletS()
		{
			return null;
		}

		[Token(Token = "0x60009DA")]
		[Address(RVA = "0x93C4E4", Offset = "0x93C4E4", VA = "0x93C4E4")]
		public GameObject getWastedBulletL()
		{
			return null;
		}

		[Token(Token = "0x60009DB")]
		[Address(RVA = "0x93C500", Offset = "0x93C500", VA = "0x93C500")]
		public WeaponsPool()
		{
		}
	}
	[Token(Token = "0x20001EA")]
	public class SecondHandDetector : MonoBehaviour
	{
		[Token(Token = "0x4000922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool detectionWithButton;

		[Token(Token = "0x4000923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float DetectionDistance;

		[Token(Token = "0x4000924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool SecondHandEnabled;

		[Token(Token = "0x4000925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool initialised;

		[Token(Token = "0x4000926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Weapon weapon;

		[Token(Token = "0x4000927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool showingHighlightHand;

		[Token(Token = "0x60009DC")]
		[Address(RVA = "0x93C508", Offset = "0x93C508", VA = "0x93C508")]
		private void Update()
		{
		}

		[Token(Token = "0x60009DD")]
		[Address(RVA = "0x93CA90", Offset = "0x93CA90", VA = "0x93CA90")]
		private void showHighlightHand(bool enable)
		{
		}

		[Token(Token = "0x60009DE")]
		[Address(RVA = "0x93C974", Offset = "0x93C974", VA = "0x93C974")]
		private void enableSecondHand()
		{
		}

		[Token(Token = "0x60009DF")]
		[Address(RVA = "0x93C87C", Offset = "0x93C87C", VA = "0x93C87C")]
		private void disableSecondHand()
		{
		}

		[Token(Token = "0x60009E0")]
		[Address(RVA = "0x93D618", Offset = "0x93D618", VA = "0x93D618")]
		public void init(Weapon weapon)
		{
		}

		[Token(Token = "0x60009E1")]
		[Address(RVA = "0x93D658", Offset = "0x93D658", VA = "0x93D658")]
		public void activate()
		{
		}

		[Token(Token = "0x60009E2")]
		[Address(RVA = "0x93D628", Offset = "0x93D628", VA = "0x93D628")]
		public void deactivate()
		{
		}

		[Token(Token = "0x60009E3")]
		[Address(RVA = "0x93D67C", Offset = "0x93D67C", VA = "0x93D67C")]
		public SecondHandDetector()
		{
		}
	}
	[Token(Token = "0x20001EB")]
	public class SlidePullDetector : MonoBehaviour
	{
		[Token(Token = "0x4000928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool SlidePulled;

		[Token(Token = "0x4000929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool SlideRelease;

		[Token(Token = "0x400092A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform pulledTransform;

		[Token(Token = "0x400092B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform initTransform;

		[Token(Token = "0x400092C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform handPulledTransform;

		[Token(Token = "0x400092D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Weapon weapon;

		[Token(Token = "0x400092E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool initialised;

		[Token(Token = "0x400092F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public bool handTriggered;

		[Token(Token = "0x4000930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		public bool pulling;

		[Token(Token = "0x4000931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 lastPosition;

		[Token(Token = "0x4000932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform handTransform;

		[Token(Token = "0x4000933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform newInitTransform;

		[Token(Token = "0x4000934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform newPulledTransform;

		[Token(Token = "0x60009E4")]
		[Address(RVA = "0x93D690", Offset = "0x93D690", VA = "0x93D690")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60009E5")]
		[Address(RVA = "0x93D784", Offset = "0x93D784", VA = "0x93D784")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x60009E6")]
		[Address(RVA = "0x93D834", Offset = "0x93D834", VA = "0x93D834")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60009E7")]
		[Address(RVA = "0x93DDE8", Offset = "0x93DDE8", VA = "0x93DDE8")]
		public void init(Weapon weapon)
		{
		}

		[Token(Token = "0x60009E8")]
		[Address(RVA = "0x93DED4", Offset = "0x93DED4", VA = "0x93DED4")]
		public void setRange(Transform init, Transform pulled, bool waitForRelease = false)
		{
		}

		[Token(Token = "0x60009E9")]
		[Address(RVA = "0x93DEF4", Offset = "0x93DEF4", VA = "0x93DEF4")]
		public void activate()
		{
		}

		[Token(Token = "0x60009EA")]
		[Address(RVA = "0x93DE60", Offset = "0x93DE60", VA = "0x93DE60")]
		public void deactivate()
		{
		}

		[Token(Token = "0x60009EB")]
		[Address(RVA = "0x93DFDC", Offset = "0x93DFDC", VA = "0x93DFDC")]
		public SlidePullDetector()
		{
		}
	}
	[Token(Token = "0x20001EC")]
	public class SphereHit : MonoBehaviour
	{
		[Token(Token = "0x4000935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool changeToPhysicCollidersOnHit;

		[Token(Token = "0x4000936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SphereHit[] sphereHitChildren;

		[Token(Token = "0x4000937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public SphereHitRaycastItem Item;

		[Token(Token = "0x60009EC")]
		[Address(RVA = "0x93DFE4", Offset = "0x93DFE4", VA = "0x93DFE4")]
		public void Awake()
		{
		}

		[Token(Token = "0x60009ED")]
		[Address(RVA = "0x93E034", Offset = "0x93E034", VA = "0x93E034")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x60009EE")]
		[Address(RVA = "0x93E104", Offset = "0x93E104", VA = "0x93E104")]
		public SphereHit()
		{
		}
	}
	[Token(Token = "0x20001ED")]
	public class SphereHitRaycastItem : MonoBehaviour
	{
		[Token(Token = "0x4000938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SphereHit sphereRaycast;

		[Token(Token = "0x60009EF")]
		[Address(RVA = "0x93E10C", Offset = "0x93E10C", VA = "0x93E10C")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x60009F0")]
		[Address(RVA = "0x93E294", Offset = "0x93E294", VA = "0x93E294")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x60009F1")]
		[Address(RVA = "0x93E3CC", Offset = "0x93E3CC", VA = "0x93E3CC", Slot = "4")]
		public virtual void changeToPhysicsColliders(bool bValue)
		{
		}

		[Token(Token = "0x60009F2")]
		[Address(RVA = "0x93E3DC", Offset = "0x93E3DC", VA = "0x93E3DC", Slot = "5")]
		public virtual bool OnHit(Bullet bullet, SphereHit sphereCollision)
		{
			return default(bool);
		}

		[Token(Token = "0x60009F3")]
		[Address(RVA = "0x939B10", Offset = "0x939B10", VA = "0x939B10")]
		public SphereHit getSphereCollision(Ray ray, float distance)
		{
			return null;
		}

		[Token(Token = "0x60009F4")]
		[Address(RVA = "0x93E418", Offset = "0x93E418", VA = "0x93E418")]
		private bool checkSphereCollision(Transform sphere, Vector3 p1, Vector3 p2)
		{
			return default(bool);
		}

		[Token(Token = "0x60009F5")]
		[Address(RVA = "0x93E5E8", Offset = "0x93E5E8", VA = "0x93E5E8")]
		public SphereHitRaycastItem()
		{
		}
	}
	[Token(Token = "0x20001EE")]
	public class SphereHitRaycastSystem : MonoBehaviour
	{
		[Token(Token = "0x4000939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<SphereHitRaycastItem> m_items;

		[Token(Token = "0x400093A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static SphereHitRaycastSystem s_instance;

		[Token(Token = "0x60009F6")]
		[Address(RVA = "0x93E5F0", Offset = "0x93E5F0", VA = "0x93E5F0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60009F7")]
		[Address(RVA = "0x93E63C", Offset = "0x93E63C", VA = "0x93E63C")]
		public static SphereHitRaycastSystem getInstance()
		{
			return null;
		}

		[Token(Token = "0x60009F8")]
		[Address(RVA = "0x93E684", Offset = "0x93E684", VA = "0x93E684")]
		public List<SphereHitRaycastItem> getSphereRayCastItems()
		{
			return null;
		}

		[Token(Token = "0x60009F9")]
		[Address(RVA = "0x93E1EC", Offset = "0x93E1EC", VA = "0x93E1EC")]
		public void registerItem(SphereHitRaycastItem item)
		{
		}

		[Token(Token = "0x60009FA")]
		[Address(RVA = "0x93E374", Offset = "0x93E374", VA = "0x93E374")]
		public void deregisterItem(SphereHitRaycastItem item)
		{
		}

		[Token(Token = "0x60009FB")]
		[Address(RVA = "0x93E68C", Offset = "0x93E68C", VA = "0x93E68C")]
		public SphereHitRaycastSystem()
		{
		}
	}
	[Token(Token = "0x20001EF")]
	public class Weapon : NVRInteractable
	{
		[Token(Token = "0x20001F0")]
		public enum GunState
		{
			[Token(Token = "0x4000964")]
			Fire,
			[Token(Token = "0x4000965")]
			Reload,
			[Token(Token = "0x4000966")]
			Idle
		}

		[Token(Token = "0x20001F1")]
		public enum GunReloadState
		{
			[Token(Token = "0x4000968")]
			EmptyMagazine,
			[Token(Token = "0x4000969")]
			NoMagazine,
			[Token(Token = "0x400096A")]
			FullMagazine,
			[Token(Token = "0x400096B")]
			HammerPulled,
			[Token(Token = "0x400096C")]
			Auto
		}

		[Token(Token = "0x20001F2")]
		public enum ReloadType
		{
			[Token(Token = "0x400096E")]
			Auto,
			[Token(Token = "0x400096F")]
			Manual
		}

		[Token(Token = "0x20001F3")]
		[CompilerGenerated]
		private sealed class <Shot>d__59 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000970")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000971")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000972")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Weapon <>4__this;

			[Token(Token = "0x17000099")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000A27")]
				[Address(RVA = "0x9421B4", Offset = "0x9421B4", VA = "0x9421B4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700009A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000A29")]
				[Address(RVA = "0x9421FC", Offset = "0x9421FC", VA = "0x9421FC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000A24")]
			[Address(RVA = "0x941324", Offset = "0x941324", VA = "0x941324")]
			[DebuggerHidden]
			public <Shot>d__59(int <>1__state)
			{
			}

			[Token(Token = "0x6000A25")]
			[Address(RVA = "0x941D88", Offset = "0x941D88", VA = "0x941D88", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000A26")]
			[Address(RVA = "0x941D8C", Offset = "0x941D8C", VA = "0x941D8C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000A28")]
			[Address(RVA = "0x9421BC", Offset = "0x9421BC", VA = "0x9421BC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20001F4")]
		[CompilerGenerated]
		private sealed class <ShotGunChamberBullet>d__60 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000973")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000974")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000975")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Weapon <>4__this;

			[Token(Token = "0x1700009B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000A2D")]
				[Address(RVA = "0x942404", Offset = "0x942404", VA = "0x942404", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700009C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000A2F")]
				[Address(RVA = "0x94244C", Offset = "0x94244C", VA = "0x94244C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000A2A")]
			[Address(RVA = "0x94134C", Offset = "0x94134C", VA = "0x94134C")]
			[DebuggerHidden]
			public <ShotGunChamberBullet>d__60(int <>1__state)
			{
			}

			[Token(Token = "0x6000A2B")]
			[Address(RVA = "0x942204", Offset = "0x942204", VA = "0x942204", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000A2C")]
			[Address(RVA = "0x942208", Offset = "0x942208", VA = "0x942208", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000A2E")]
			[Address(RVA = "0x94240C", Offset = "0x94240C", VA = "0x94240C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20001F5")]
		[CompilerGenerated]
		private sealed class <reloadAnimation2>d__68 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000976")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000977")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000978")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Weapon <>4__this;

			[Token(Token = "0x4000979")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <oldCurrentBullets>5__2;

			[Token(Token = "0x400097A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <reloadTimePerBullet>5__3;

			[Token(Token = "0x400097B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <i>5__4;

			[Token(Token = "0x1700009D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000A33")]
				[Address(RVA = "0x9428E8", Offset = "0x9428E8", VA = "0x9428E8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700009E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000A35")]
				[Address(RVA = "0x942930", Offset = "0x942930", VA = "0x942930", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000A30")]
			[Address(RVA = "0x941C1C", Offset = "0x941C1C", VA = "0x941C1C")]
			[DebuggerHidden]
			public <reloadAnimation2>d__68(int <>1__state)
			{
			}

			[Token(Token = "0x6000A31")]
			[Address(RVA = "0x942454", Offset = "0x942454", VA = "0x942454", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000A32")]
			[Address(RVA = "0x942458", Offset = "0x942458", VA = "0x942458", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000A34")]
			[Address(RVA = "0x9428F0", Offset = "0x9428F0", VA = "0x9428F0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400093B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool infiniteBullets;

		[Token(Token = "0x400093C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public static bool disableFire;

		[Token(Token = "0x400093D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static ReloadType reloadType;

		[Token(Token = "0x400093E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static bool rightHand;

		[Token(Token = "0x400093F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public WeaponData weaponData;

		[Token(Token = "0x4000940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Transform handTransform;

		[Token(Token = "0x4000941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Transform secondHandTransform;

		[Token(Token = "0x4000942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Transform bulletIconsContainer;

		[Token(Token = "0x4000943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Transform magTransform;

		[Token(Token = "0x4000944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Transform slide_InitTransform;

		[Token(Token = "0x4000945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Transform slide_PulledTransform;

		[Token(Token = "0x4000946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Transform slidePulled_InitTransform;

		[Token(Token = "0x4000947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Transform slidePulled_PulledTransform;

		[Token(Token = "0x4000948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected NVRHand hand;

		[Token(Token = "0x4000949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected NVRHand otherHand;

		[Token(Token = "0x400094A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected GameObject collisionColliders;

		[Token(Token = "0x400094B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected Transform twoAimingTransform;

		[Token(Token = "0x400094C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected Transform recoilTransform;

		[Token(Token = "0x400094D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected SecondHandDetector secondHandDetector;

		[Token(Token = "0x400094E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public SlidePullDetector slidePullDetector;

		[Token(Token = "0x400094F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		protected MagDetector magDetector;

		[Token(Token = "0x4000950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private ChangeWeaponHand changeWeaponHand;

		[Token(Token = "0x4000951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public WeaponMag currentMag;

		[Token(Token = "0x4000952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Quaternion handLerpStartRotation;

		[Token(Token = "0x4000953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		protected bool twoHandsMode;

		[Token(Token = "0x4000954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x109")]
		private bool lerpBackToZeroRotation;

		[Token(Token = "0x4000955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10A")]
		private bool bulletInChamber;

		[Token(Token = "0x4000956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10B")]
		private bool initialised;

		[Token(Token = "0x4000957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private float handLerpStartTime;

		[Token(Token = "0x4000958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public float lastShot;

		[Token(Token = "0x4000959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static UnityEvent OnFire;

		[Token(Token = "0x400095A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static UnityEvent ViewerDisabledOnFire;

		[Token(Token = "0x400095B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static bool ViewerDisabledOnFireState;

		[Token(Token = "0x400095C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public Weapon masterWeapon;

		[Token(Token = "0x400095D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Sequence sequence;

		[Token(Token = "0x400095E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public bool disableFireLocal;

		[Token(Token = "0x400095F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		public int maxReloads;

		[Token(Token = "0x4000960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public bool updateSlider;

		[Token(Token = "0x4000961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		public GunState gunState;

		[Token(Token = "0x4000962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public GunReloadState gunReloadState;

		[Token(Token = "0x17000098")]
		private float animTime
		{
			[Token(Token = "0x60009FE")]
			[Address(RVA = "0x93E910", Offset = "0x93E910", VA = "0x93E910")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60009FC")]
		[Address(RVA = "0x93E708", Offset = "0x93E708", VA = "0x93E708")]
		public static void registerViewerDisabledOnFire(UnityAction call)
		{
		}

		[Token(Token = "0x60009FD")]
		[Address(RVA = "0x93E7F4", Offset = "0x93E7F4", VA = "0x93E7F4")]
		public static void deregisterViewerDisabledOnFire()
		{
		}

		[Token(Token = "0x60009FF")]
		[Address(RVA = "0x93E930", Offset = "0x93E930", VA = "0x93E930", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000A00")]
		[Address(RVA = "0x93E968", Offset = "0x93E968", VA = "0x93E968", Slot = "22")]
		protected virtual void init()
		{
		}

		[Token(Token = "0x6000A01")]
		[Address(RVA = "0x93EEC4", Offset = "0x93EEC4", VA = "0x93EEC4")]
		public void setInitState()
		{
		}

		[Token(Token = "0x6000A02")]
		[Address(RVA = "0x93F064", Offset = "0x93F064", VA = "0x93F064")]
		private void _updateSlider()
		{
		}

		[Token(Token = "0x6000A03")]
		[Address(RVA = "0x93F13C", Offset = "0x93F13C", VA = "0x93F13C", Slot = "10")]
		public override void BeginInteraction(NVRHand hand)
		{
		}

		[Token(Token = "0x6000A04")]
		[Address(RVA = "0x93FABC", Offset = "0x93FABC", VA = "0x93FABC", Slot = "15")]
		public override void EndInteraction(NVRHand hand)
		{
		}

		[Token(Token = "0x6000A05")]
		[Address(RVA = "0x93FDCC", Offset = "0x93FDCC", VA = "0x93FDCC")]
		public void resetHand()
		{
		}

		[Token(Token = "0x6000A06")]
		[Address(RVA = "0x93FE48", Offset = "0x93FE48", VA = "0x93FE48")]
		public void enableColliders(bool bValue)
		{
		}

		[Token(Token = "0x6000A07")]
		[Address(RVA = "0x93FE94", Offset = "0x93FE94", VA = "0x93FE94", Slot = "23")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000A08")]
		[Address(RVA = "0x940598", Offset = "0x940598", VA = "0x940598", Slot = "24")]
		protected virtual void updateWeaponMode()
		{
		}

		[Token(Token = "0x6000A09")]
		[Address(RVA = "0x93FFE8", Offset = "0x93FFE8", VA = "0x93FFE8")]
		private void updateTwoHandsAiming()
		{
		}

		[Token(Token = "0x6000A0A")]
		[Address(RVA = "0x940420", Offset = "0x940420", VA = "0x940420")]
		private void idleUpdate()
		{
		}

		[Token(Token = "0x6000A0B")]
		[Address(RVA = "0x940760", Offset = "0x940760", VA = "0x940760")]
		private void fireUpdate()
		{
		}

		[Token(Token = "0x6000A0C")]
		[Address(RVA = "0x940B64", Offset = "0x940B64", VA = "0x940B64", Slot = "25")]
		protected virtual void reloadUpdate()
		{
		}

		[Token(Token = "0x6000A0D")]
		[Address(RVA = "0x941048", Offset = "0x941048", VA = "0x941048", Slot = "26")]
		public virtual void dropMagazine()
		{
		}

		[Token(Token = "0x6000A0E")]
		[Address(RVA = "0x940F64", Offset = "0x940F64", VA = "0x940F64")]
		private void putMagazine()
		{
		}

		[Token(Token = "0x6000A0F")]
		[Address(RVA = "0x94124C", Offset = "0x94124C", VA = "0x94124C")]
		protected void triggerHapticPulse()
		{
		}

		[Token(Token = "0x6000A10")]
		[Address(RVA = "0x940AFC", Offset = "0x940AFC", VA = "0x940AFC")]
		[IteratorStateMachine(typeof(<Shot>d__59))]
		private IEnumerator Shot()
		{
			return null;
		}

		[Token(Token = "0x6000A11")]
		[Address(RVA = "0x940FE0", Offset = "0x940FE0", VA = "0x940FE0")]
		[IteratorStateMachine(typeof(<ShotGunChamberBullet>d__60))]
		private IEnumerator ShotGunChamberBullet()
		{
			return null;
		}

		[Token(Token = "0x6000A12")]
		[Address(RVA = "0x941374", Offset = "0x941374", VA = "0x941374")]
		private void recoilAnimation()
		{
		}

		[Token(Token = "0x6000A13")]
		[Address(RVA = "0x94061C", Offset = "0x94061C", VA = "0x94061C")]
		public void throwBullet(bool wasted)
		{
		}

		[Token(Token = "0x6000A14")]
		[Address(RVA = "0x94187C", Offset = "0x94187C", VA = "0x94187C", Slot = "27")]
		protected virtual void decreaseBulletIcon()
		{
		}

		[Token(Token = "0x6000A15")]
		[Address(RVA = "0x941960", Offset = "0x941960", VA = "0x941960", Slot = "28")]
		public virtual void reload(bool bAnimate = false, bool bRemote = false)
		{
		}

		[Token(Token = "0x6000A16")]
		[Address(RVA = "0x941A88", Offset = "0x941A88", VA = "0x941A88")]
		private void increaseBulletIcon(int childIndex)
		{
		}

		[Token(Token = "0x6000A17")]
		[Address(RVA = "0x941B4C", Offset = "0x941B4C", VA = "0x941B4C")]
		public void setCurrentBullets(int currentBullets)
		{
		}

		[Token(Token = "0x6000A18")]
		[Address(RVA = "0x941A18", Offset = "0x941A18", VA = "0x941A18")]
		private void reloadAnimation()
		{
		}

		[Token(Token = "0x6000A19")]
		[Address(RVA = "0x9419B0", Offset = "0x9419B0", VA = "0x9419B0")]
		[IteratorStateMachine(typeof(<reloadAnimation2>d__68))]
		private IEnumerator reloadAnimation2()
		{
			return null;
		}

		[Token(Token = "0x6000A1A")]
		[Address(RVA = "0x93EF78", Offset = "0x93EF78", VA = "0x93EF78")]
		protected void updateBulletIcons()
		{
		}

		[Token(Token = "0x6000A1B")]
		[Address(RVA = "0x93F72C", Offset = "0x93F72C", VA = "0x93F72C")]
		public void setWeaponPosition()
		{
		}

		[Token(Token = "0x6000A1C")]
		[Address(RVA = "0x93CB2C", Offset = "0x93CB2C", VA = "0x93CB2C")]
		public bool setSecondHand(bool enable)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A1D")]
		[Address(RVA = "0x941C44", Offset = "0x941C44", VA = "0x941C44")]
		public WeaponMag getMag()
		{
			return null;
		}

		[Token(Token = "0x6000A1E")]
		[Address(RVA = "0x941C4C", Offset = "0x941C4C", VA = "0x941C4C")]
		public NVRHand getHand()
		{
			return null;
		}

		[Token(Token = "0x6000A1F")]
		[Address(RVA = "0x941C54", Offset = "0x941C54", VA = "0x941C54")]
		public NVRHand getOtherHand()
		{
			return null;
		}

		[Token(Token = "0x6000A20")]
		[Address(RVA = "0x941C5C", Offset = "0x941C5C", VA = "0x941C5C")]
		public SlidePullDetector getSlidePullDetector()
		{
			return null;
		}

		[Token(Token = "0x6000A21")]
		[Address(RVA = "0x941C64", Offset = "0x941C64", VA = "0x941C64", Slot = "21")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6000A22")]
		[Address(RVA = "0x941C68", Offset = "0x941C68", VA = "0x941C68")]
		public Weapon()
		{
		}
	}
	[Token(Token = "0x20001F6")]
	public class WeaponData : MonoBehaviour
	{
		[Token(Token = "0x400097C")]
		public const float FIRESOUND_VOLUME = 0.6f;

		[Token(Token = "0x400097D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool OnlyBulletSound;

		[Token(Token = "0x400097E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static SumalabEvent<Bullet> OnWeaponFire;

		[Token(Token = "0x400097F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int maxBullets;

		[Token(Token = "0x4000980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int bulletsPerBurst;

		[Token(Token = "0x4000981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int currentBullets;

		[Token(Token = "0x4000982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int currentBurstBullets;

		[Token(Token = "0x4000983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 defaultPosition;

		[Token(Token = "0x4000984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Quaternion defaultRotation;

		[Token(Token = "0x4000985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform runningPositionTransform;

		[Token(Token = "0x4000986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool twoHandsAiming;

		[Token(Token = "0x4000987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float recoilForce;

		[Token(Token = "0x4000988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float shootInterval;

		[Token(Token = "0x4000989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float reloadTimeForBullet;

		[Token(Token = "0x400098A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public WeaponModel weaponModel;

		[Token(Token = "0x400098B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public BulletType bulletType;

		[Token(Token = "0x400098C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public FireArm fireArm;

		[Token(Token = "0x400098D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public HitTarget hitTarget;

		[Token(Token = "0x400098E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public NVRHand weaponHand;

		[Token(Token = "0x400098F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Transform firePoint;

		[Token(Token = "0x4000990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public NVRCollisionSoundMaterials fireSound;

		[Token(Token = "0x4000991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public bool autoConfigure;

		[Token(Token = "0x4000992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float bulletImpactForce;

		[Token(Token = "0x4000993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public PoolManager.PoolType bulletPool;

		[Token(Token = "0x4000994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private FireEffect fireEffect;

		[Token(Token = "0x4000995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float currentShootInterval;

		[Token(Token = "0x6000A36")]
		[Address(RVA = "0x942938", Offset = "0x942938", VA = "0x942938")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A37")]
		[Address(RVA = "0x942B0C", Offset = "0x942B0C", VA = "0x942B0C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A38")]
		[Address(RVA = "0x93EC60", Offset = "0x93EC60", VA = "0x93EC60")]
		public void init()
		{
		}

		[Token(Token = "0x6000A39")]
		[Address(RVA = "0x93F65C", Offset = "0x93F65C", VA = "0x93F65C")]
		public void hideFireEffect()
		{
		}

		[Token(Token = "0x6000A3A")]
		[Address(RVA = "0x93FDC8", Offset = "0x93FDC8", VA = "0x93FDC8")]
		public void resetData()
		{
		}

		[Token(Token = "0x6000A3B")]
		[Address(RVA = "0x942948", Offset = "0x942948", VA = "0x942948")]
		private void autoConfigureWeapon()
		{
		}

		[Token(Token = "0x6000A3C")]
		[Address(RVA = "0x942BB4", Offset = "0x942BB4", VA = "0x942BB4")]
		public void setAccuracy(float randomMax)
		{
		}

		[Token(Token = "0x6000A3D")]
		[Address(RVA = "0x942154", Offset = "0x942154", VA = "0x942154")]
		public float fire(AimTarget owner)
		{
			return default(float);
		}

		[Token(Token = "0x6000A3E")]
		[Address(RVA = "0x942BF0", Offset = "0x942BF0", VA = "0x942BF0")]
		public float fire(Vector3 finalPosition, AimTarget owner, bool isPlayer = false)
		{
			return default(float);
		}

		[Token(Token = "0x6000A3F")]
		[Address(RVA = "0x9431C8", Offset = "0x9431C8", VA = "0x9431C8")]
		public Bullet remoteFire(string bulletId, AimTarget owner, Vector3 position, Quaternion rotation, Vector3 finalPosition, bool isRemotePlayer, int bulletsCount)
		{
			return null;
		}

		[Token(Token = "0x6000A40")]
		[Address(RVA = "0x941BFC", Offset = "0x941BFC", VA = "0x941BFC")]
		public float reload()
		{
			return default(float);
		}

		[Token(Token = "0x6000A41")]
		[Address(RVA = "0x943468", Offset = "0x943468", VA = "0x943468")]
		public void reloadManualWeapon(AimTarget owner)
		{
		}

		[Token(Token = "0x6000A42")]
		[Address(RVA = "0x943630", Offset = "0x943630", VA = "0x943630")]
		public void remoteReloadManualWeapon()
		{
		}

		[Token(Token = "0x6000A43")]
		[Address(RVA = "0x940AE8", Offset = "0x940AE8", VA = "0x940AE8")]
		public void reloadBurst()
		{
		}

		[Token(Token = "0x6000A44")]
		[Address(RVA = "0x943698", Offset = "0x943698", VA = "0x943698")]
		public void setWeaponRunningPosition(bool state)
		{
		}

		[Token(Token = "0x6000A45")]
		[Address(RVA = "0x9438C4", Offset = "0x9438C4", VA = "0x9438C4")]
		public float getCurrentShootInterval()
		{
			return default(float);
		}

		[Token(Token = "0x6000A46")]
		[Address(RVA = "0x9438E8", Offset = "0x9438E8", VA = "0x9438E8")]
		public void setWeaponModel(WeaponModel model)
		{
		}

		[Token(Token = "0x6000A47")]
		[Address(RVA = "0x9438F0", Offset = "0x9438F0", VA = "0x9438F0")]
		public WeaponData()
		{
		}
	}
	[Token(Token = "0x20001F7")]
	public enum BulletType
	{
		[Token(Token = "0x4000997")]
		S,
		[Token(Token = "0x4000998")]
		L,
		[Token(Token = "0x4000999")]
		MiniGun,
		[Token(Token = "0x400099A")]
		None
	}
	[Token(Token = "0x20001F8")]
	public enum FireArm
	{
		[Token(Token = "0x400099C")]
		Semiautomatic,
		[Token(Token = "0x400099D")]
		Automatic,
		[Token(Token = "0x400099E")]
		Burst,
		[Token(Token = "0x400099F")]
		Launcher
	}
	[Token(Token = "0x20001F9")]
	public enum WeaponModel
	{
		[Token(Token = "0x40009A1")]
		M4,
		[Token(Token = "0x40009A2")]
		AK47,
		[Token(Token = "0x40009A3")]
		Glock,
		[Token(Token = "0x40009A4")]
		SMG,
		[Token(Token = "0x40009A5")]
		Aim,
		[Token(Token = "0x40009A6")]
		RPG,
		[Token(Token = "0x40009A7")]
		MiniGun,
		[Token(Token = "0x40009A8")]
		TwoGlock
	}
	[Token(Token = "0x20001FA")]
	public class WeaponMag : HandInteractor
	{
		[Token(Token = "0x40009A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public WeaponModel weaponModel;

		[Token(Token = "0x40009AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public bool used;

		[Token(Token = "0x40009AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Transform grabTransform;

		[Token(Token = "0x6000A49")]
		[Address(RVA = "0x943A3C", Offset = "0x943A3C", VA = "0x943A3C", Slot = "10")]
		public override void BeginInteraction(NVRHand hand)
		{
		}

		[Token(Token = "0x6000A4A")]
		[Address(RVA = "0x943B90", Offset = "0x943B90", VA = "0x943B90", Slot = "15")]
		public override void EndInteraction(NVRHand hand)
		{
		}

		[Token(Token = "0x6000A4B")]
		[Address(RVA = "0x93ED54", Offset = "0x93ED54", VA = "0x93ED54")]
		public void mount(Transform parent)
		{
		}

		[Token(Token = "0x6000A4C")]
		[Address(RVA = "0x94109C", Offset = "0x94109C", VA = "0x94109C")]
		public void drop()
		{
		}

		[Token(Token = "0x6000A4D")]
		[Address(RVA = "0x943C60", Offset = "0x943C60", VA = "0x943C60", Slot = "21")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6000A4E")]
		[Address(RVA = "0x943C64", Offset = "0x943C64", VA = "0x943C64")]
		public WeaponMag()
		{
		}
	}
	[Token(Token = "0x20001FB")]
	public class WeaponMagSpawner : HandInteractor
	{
		[Token(Token = "0x40009AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public List<SpawnData> Spawns;

		[Token(Token = "0x6000A4F")]
		[Address(RVA = "0x943CC0", Offset = "0x943CC0", VA = "0x943CC0", Slot = "10")]
		public override void BeginInteraction(NVRHand hand)
		{
		}

		[Token(Token = "0x6000A50")]
		[Address(RVA = "0x94406C", Offset = "0x94406C", VA = "0x94406C", Slot = "12")]
		public override void HoveringEnter(NVRHand hand)
		{
		}

		[Token(Token = "0x6000A51")]
		[Address(RVA = "0x9442E4", Offset = "0x9442E4", VA = "0x9442E4", Slot = "14")]
		public override void HoveringExit(NVRHand hand)
		{
		}

		[Token(Token = "0x6000A52")]
		[Address(RVA = "0x943F28", Offset = "0x943F28", VA = "0x943F28")]
		private NVRInteractable GetSpawnObject(WeaponModel weaponModel)
		{
			return null;
		}

		[Token(Token = "0x6000A53")]
		[Address(RVA = "0x944098", Offset = "0x944098", VA = "0x944098")]
		private bool isValidHand(NVRHand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A54")]
		[Address(RVA = "0x9442E0", Offset = "0x9442E0", VA = "0x9442E0")]
		private void highlightModel(bool enable)
		{
		}

		[Token(Token = "0x6000A55")]
		[Address(RVA = "0x944310", Offset = "0x944310", VA = "0x944310")]
		public WeaponMagSpawner()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001FC")]
	public struct SpawnData
	{
		[Token(Token = "0x40009AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public WeaponModel weaponModel;

		[Token(Token = "0x40009AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public NVRInteractable spawnObject;
	}
}
namespace Sumalab_Hands
{
	[Token(Token = "0x20001FD")]
	public class HandController : MonoBehaviour
	{
		[Token(Token = "0x20001FE")]
		private class TransformStore
		{
			[Token(Token = "0x40009B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform transform;

			[Token(Token = "0x40009BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 localPosition;

			[Token(Token = "0x40009BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Vector3 localRotation;

			[Token(Token = "0x6000A69")]
			[Address(RVA = "0x94461C", Offset = "0x94461C", VA = "0x94461C")]
			public TransformStore()
			{
			}
		}

		[Token(Token = "0x40009AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static float ANIMATION_SPEED;

		[Token(Token = "0x40009B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HandInteractor.AnimationType defaultAnimation;

		[Token(Token = "0x40009B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HandInteractor m_currentHandController;

		[Token(Token = "0x40009B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HashSet<HandInteractor> m_hsHandControllersHovering;

		[Token(Token = "0x40009B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Animator m_handAnimator;

		[Token(Token = "0x40009B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private NVRHand Hand;

		[Token(Token = "0x40009B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float lastInput;

		[Token(Token = "0x40009B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform handTransformRoot;

		[Token(Token = "0x40009B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Dictionary<string, TransformStore> handTransforms;

		[Token(Token = "0x40009B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<Tween> activeTweens;

		[Token(Token = "0x6000A56")]
		[Address(RVA = "0x944314", Offset = "0x944314", VA = "0x944314")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A57")]
		[Address(RVA = "0x9449C0", Offset = "0x9449C0", VA = "0x9449C0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A58")]
		[Address(RVA = "0x944C50", Offset = "0x944C50", VA = "0x944C50")]
		private void HoverEnter(NVRInteractable interactable)
		{
		}

		[Token(Token = "0x6000A59")]
		[Address(RVA = "0x9450D4", Offset = "0x9450D4", VA = "0x9450D4")]
		private void HoverExit(NVRInteractable interactable)
		{
		}

		[Token(Token = "0x6000A5A")]
		[Address(RVA = "0x94530C", Offset = "0x94530C", VA = "0x94530C")]
		public void BeginInteraction(NVRInteractable interactable)
		{
		}

		[Token(Token = "0x6000A5B")]
		[Address(RVA = "0x9453BC", Offset = "0x9453BC", VA = "0x9453BC")]
		public void EndInteraction(NVRInteractable item)
		{
		}

		[Token(Token = "0x6000A5C")]
		[Address(RVA = "0x94502C", Offset = "0x94502C", VA = "0x94502C")]
		private void updateAnimation(HandInteractor handController, bool bHover)
		{
		}

		[Token(Token = "0x6000A5D")]
		[Address(RVA = "0x944ACC", Offset = "0x944ACC", VA = "0x944ACC")]
		private void setAnimation(HandInteractor.AnimationType animationType, float squeeze)
		{
		}

		[Token(Token = "0x6000A5E")]
		[Address(RVA = "0x9451F4", Offset = "0x9451F4", VA = "0x9451F4")]
		private HandInteractor selectNearest()
		{
			return null;
		}

		[Token(Token = "0x6000A5F")]
		[Address(RVA = "0x944E50", Offset = "0x944E50", VA = "0x944E50")]
		private bool isNearer(HandInteractor hc1, HandInteractor hc2)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A60")]
		[Address(RVA = "0x9453E0", Offset = "0x9453E0", VA = "0x9453E0")]
		private void ResetAnimator()
		{
		}

		[Token(Token = "0x6000A61")]
		[Address(RVA = "0x93CC2C", Offset = "0x93CC2C", VA = "0x93CC2C")]
		public void setHandTransform(Transform copyRootTransform)
		{
		}

		[Token(Token = "0x6000A62")]
		[Address(RVA = "0x93D078", Offset = "0x93D078", VA = "0x93D078")]
		public void resetHandTransform()
		{
		}

		[Token(Token = "0x6000A63")]
		[Address(RVA = "0x945598", Offset = "0x945598", VA = "0x945598")]
		private void clearTweens()
		{
		}

		[Token(Token = "0x6000A64")]
		[Address(RVA = "0x93F6EC", Offset = "0x93F6EC", VA = "0x93F6EC")]
		public void deactivate()
		{
		}

		[Token(Token = "0x6000A65")]
		[Address(RVA = "0x93FD88", Offset = "0x93FD88", VA = "0x93FD88")]
		public void activate()
		{
		}

		[Token(Token = "0x6000A66")]
		[Address(RVA = "0x944624", Offset = "0x944624", VA = "0x944624")]
		private void setHandPosition()
		{
		}

		[Token(Token = "0x6000A67")]
		[Address(RVA = "0x945714", Offset = "0x945714", VA = "0x945714")]
		public HandController()
		{
		}
	}
	[Token(Token = "0x20001FF")]
	public class HandInteractor : NVRInteractable
	{
		[Token(Token = "0x2000200")]
		public enum AnimationType
		{
			[Token(Token = "0x40009C0")]
			None,
			[Token(Token = "0x40009C1")]
			Grab,
			[Token(Token = "0x40009C2")]
			Hilt,
			[Token(Token = "0x40009C3")]
			Pinch,
			[Token(Token = "0x40009C4")]
			Sphere,
			[Token(Token = "0x40009C5")]
			Gun,
			[Token(Token = "0x40009C6")]
			Misc,
			[Token(Token = "0x40009C7")]
			Button,
			[Token(Token = "0x40009C8")]
			HandPress
		}

		[Token(Token = "0x40009BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public AnimationType PickAnimation;

		[Token(Token = "0x40009BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public AnimationType HoverAnimation;

		[Token(Token = "0x40009BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float squeeze;

		[Token(Token = "0x6000A6A")]
		[Address(RVA = "0x943C68", Offset = "0x943C68", VA = "0x943C68")]
		public HandInteractor()
		{
		}
	}
}
namespace NewtonVR
{
	[Token(Token = "0x2000201")]
	public class NVRCollisionSoundController : MonoBehaviour
	{
		[Token(Token = "0x40009C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static NVRCollisionSoundController Instance;

		[Token(Token = "0x40009CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("The max number of sounds that can possibly be playing at once.")]
		public int SoundPoolSize;

		[Token(Token = "0x40009CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Tooltip("Turns on or off randomizing the pitch of the collision sounds")]
		public bool PitchModulationEnabled;

		[Token(Token = "0x40009CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Range(0f, 3f)]
		public float PitchModulationRange;

		[Token(Token = "0x40009CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Tooltip("Don't play collision sounds that will produce an impact with a volume lower than this number")]
		public float MinCollisionVolume;

		[Token(Token = "0x40009CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float MaxCollisionVelocity;

		[Token(Token = "0x40009CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioMixerGroup audioMixer;

		[Token(Token = "0x40009D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public NVRCollisionSoundProviders SoundEngine;

		[Token(Token = "0x40009D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static bool mute;

		[Token(Token = "0x40009D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static NVRCollisionSoundProvider Provider;

		[Token(Token = "0x6000A6B")]
		[Address(RVA = "0x945870", Offset = "0x945870", VA = "0x945870")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A6C")]
		[Address(RVA = "0x938C08", Offset = "0x938C08", VA = "0x938C08")]
		public static void Play(NVRCollisionSoundMaterials material, Vector3 position, float impactVolume = 1f, bool ignoreMute = false)
		{
		}

		[Token(Token = "0x6000A6D")]
		[Address(RVA = "0x9458F8", Offset = "0x9458F8", VA = "0x9458F8")]
		public NVRCollisionSoundController()
		{
		}
	}
	[Token(Token = "0x2000202")]
	public enum NVRCollisionSoundProviders
	{
		[Token(Token = "0x40009D4")]
		None,
		[Token(Token = "0x40009D5")]
		Unity,
		[Token(Token = "0x40009D6")]
		FMOD
	}
	[Token(Token = "0x2000203")]
	public enum NVRCollisionSoundMaterials
	{
		[Token(Token = "0x40009D8")]
		none = 0,
		[Token(Token = "0x40009D9")]
		_default = 1,
		[Token(Token = "0x40009DA")]
		carpet = 2,
		[Token(Token = "0x40009DB")]
		wood = 3,
		[Token(Token = "0x40009DC")]
		metal = 4,
		[Token(Token = "0x40009DD")]
		glass = 5,
		[Token(Token = "0x40009DE")]
		plastic = 6,
		[Token(Token = "0x40009DF")]
		cardboard = 7,
		[Token(Token = "0x40009E0")]
		EndNewtonVRMaterials = 50,
		[Token(Token = "0x40009E1")]
		attach = 51,
		[Token(Token = "0x40009E2")]
		trainvintage = 52,
		[Token(Token = "0x40009E3")]
		trash = 53,
		[Token(Token = "0x40009E4")]
		handgun_shot = 54,
		[Token(Token = "0x40009E5")]
		rifle_shot = 55,
		[Token(Token = "0x40009E6")]
		smg_shot = 56,
		[Token(Token = "0x40009E7")]
		rpg_shot = 57,
		[Token(Token = "0x40009E8")]
		ak47_shot = 58,
		[Token(Token = "0x40009E9")]
		magazine_release = 59,
		[Token(Token = "0x40009EA")]
		magazine_load = 60,
		[Token(Token = "0x40009EB")]
		recoil = 61,
		[Token(Token = "0x40009EC")]
		empty_gun_clic = 62,
		[Token(Token = "0x40009ED")]
		impact_standard = 63,
		[Token(Token = "0x40009EE")]
		impact_glass = 64,
		[Token(Token = "0x40009EF")]
		impact_human = 65,
		[Token(Token = "0x40009F0")]
		impact_metal = 66,
		[Token(Token = "0x40009F1")]
		impact_windshield = 67,
		[Token(Token = "0x40009F2")]
		player_hit = 68,
		[Token(Token = "0x40009F3")]
		bullet_flyby = 69,
		[Token(Token = "0x40009F4")]
		bullet_shell = 70,
		[Token(Token = "0x40009F5")]
		holster_in = 71,
		[Token(Token = "0x40009F6")]
		holster_out = 72,
		[Token(Token = "0x40009F7")]
		box_impact = 73,
		[Token(Token = "0x40009F8")]
		crane_hook_impact = 74,
		[Token(Token = "0x40009F9")]
		barrel = 75,
		[Token(Token = "0x40009FA")]
		kill_fem = 76,
		[Token(Token = "0x40009FB")]
		kill_mas = 77,
		[Token(Token = "0x40009FC")]
		take_can = 78,
		[Token(Token = "0x40009FD")]
		column_impact = 79,
		[Token(Token = "0x40009FE")]
		extinguisher = 80,
		[Token(Token = "0x40009FF")]
		handgun_matrix_shot = 81,
		[Token(Token = "0x4000A00")]
		hit_folder = 82,
		[Token(Token = "0x4000A01")]
		hit_monitor = 83,
		[Token(Token = "0x4000A02")]
		hit_plant = 84,
		[Token(Token = "0x4000A03")]
		female_ouch = 85,
		[Token(Token = "0x4000A04")]
		male_ouch = 86
	}
	[Token(Token = "0x2000204")]
	public class NVRCollisionSoundMaterialsList
	{
		[Token(Token = "0x4000A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Type typeCache;

		[Token(Token = "0x4000A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static NVRCollisionSoundMaterials[] list;

		[Token(Token = "0x1700009F")]
		public static Type TypeCache
		{
			[Token(Token = "0x6000A6E")]
			[Address(RVA = "0x945928", Offset = "0x945928", VA = "0x945928")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A0")]
		public static NVRCollisionSoundMaterials[] List
		{
			[Token(Token = "0x6000A6F")]
			[Address(RVA = "0x9459F4", Offset = "0x9459F4", VA = "0x9459F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A70")]
		[Address(RVA = "0x945E3C", Offset = "0x945E3C", VA = "0x945E3C")]
		public static NVRCollisionSoundMaterials? Parse(string materialString)
		{
			return null;
		}

		[Token(Token = "0x6000A71")]
		[Address(RVA = "0x945F68", Offset = "0x945F68", VA = "0x945F68")]
		public NVRCollisionSoundMaterialsList()
		{
		}
	}
	[Token(Token = "0x2000205")]
	public class NVRCollisionSoundObject : MonoBehaviour
	{
		[Token(Token = "0x4000A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<Collider, NVRCollisionSoundObject> SoundObjects;

		[Token(Token = "0x4000A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public NVRCollisionSoundMaterials Material;

		[Token(Token = "0x4000A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Collider[] Colliders;

		[Token(Token = "0x4000A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float lastCollisionTime;

		[Token(Token = "0x6000A72")]
		[Address(RVA = "0x945F70", Offset = "0x945F70", VA = "0x945F70", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000A73")]
		[Address(RVA = "0x946078", Offset = "0x946078", VA = "0x946078", Slot = "5")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6000A74")]
		[Address(RVA = "0x946170", Offset = "0x946170", VA = "0x946170", Slot = "6")]
		protected virtual void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6000A75")]
		[Address(RVA = "0x946348", Offset = "0x946348", VA = "0x946348")]
		private float CalculateImpactVolume(Collision collision)
		{
			return default(float);
		}

		[Token(Token = "0x6000A76")]
		[Address(RVA = "0x946424", Offset = "0x946424", VA = "0x946424")]
		public static float CubicEaseOut(float velocity, float startingValue = 0f, float changeInValue = 1f)
		{
			return default(float);
		}

		[Token(Token = "0x6000A77")]
		[Address(RVA = "0x9464B8", Offset = "0x9464B8", VA = "0x9464B8")]
		public NVRCollisionSoundObject()
		{
		}
	}
	[Token(Token = "0x2000206")]
	public abstract class NVRCollisionSoundProvider : MonoBehaviour
	{
		[Token(Token = "0x6000A79")]
		public abstract void Awake();

		[Token(Token = "0x6000A7A")]
		public abstract void Play(NVRCollisionSoundMaterials material, Vector3 position, float impactVolume);

		[Token(Token = "0x6000A7B")]
		[Address(RVA = "0x94654C", Offset = "0x94654C", VA = "0x94654C")]
		protected NVRCollisionSoundProvider()
		{
		}
	}
	[Token(Token = "0x2000207")]
	public class NVRCollisionSoundProviderFMOD : NVRCollisionSoundProvider
	{
		[Token(Token = "0x6000A7C")]
		[Address(RVA = "0x946554", Offset = "0x946554", VA = "0x946554", Slot = "4")]
		public override void Awake()
		{
		}

		[Token(Token = "0x6000A7D")]
		[Address(RVA = "0x946558", Offset = "0x946558", VA = "0x946558", Slot = "5")]
		public override void Play(NVRCollisionSoundMaterials material, Vector3 position, float impactVolume)
		{
		}

		[Token(Token = "0x6000A7E")]
		[Address(RVA = "0x94655C", Offset = "0x94655C", VA = "0x94655C")]
		public NVRCollisionSoundProviderFMOD()
		{
		}
	}
	[Token(Token = "0x2000208")]
	public class NVRCollisionSoundProviderUnity : NVRCollisionSoundProvider
	{
		[Token(Token = "0x4000A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string AudioSourcePrefabPath;

		[Token(Token = "0x4000A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string CollisionSoundsPath;

		[Token(Token = "0x4000A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GameObject AudioSourcePrefab;

		[Token(Token = "0x4000A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AudioSource[] AudioPool;

		[Token(Token = "0x4000A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int CurrentPoolIndex;

		[Token(Token = "0x4000A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<NVRCollisionSoundMaterials, List<AudioClip>> Clips;

		[Token(Token = "0x6000A7F")]
		[Address(RVA = "0x946564", Offset = "0x946564", VA = "0x946564", Slot = "4")]
		public override void Awake()
		{
		}

		[Token(Token = "0x6000A80")]
		[Address(RVA = "0x946B0C", Offset = "0x946B0C", VA = "0x946B0C", Slot = "5")]
		public override void Play(NVRCollisionSoundMaterials material, Vector3 position, float impactVolume)
		{
		}

		[Token(Token = "0x6000A81")]
		[Address(RVA = "0x946D10", Offset = "0x946D10", VA = "0x946D10")]
		private AudioClip GetClip(NVRCollisionSoundMaterials material)
		{
			return null;
		}

		[Token(Token = "0x6000A82")]
		[Address(RVA = "0x946EF4", Offset = "0x946EF4", VA = "0x946EF4")]
		public NVRCollisionSoundProviderUnity()
		{
		}
	}
	[Token(Token = "0x2000209")]
	public class CustomNVRPhysicalController : MonoBehaviour
	{
		[Token(Token = "0x6000A84")]
		[Address(RVA = "0x946F88", Offset = "0x946F88", VA = "0x946F88")]
		public CustomNVRPhysicalController()
		{
		}
	}
	[Token(Token = "0x200020A")]
	public class NVRScaler : MonoBehaviour
	{
		[Token(Token = "0x4000A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static float scale;

		[Token(Token = "0x4000A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		protected static NVRScaler instance;

		[Token(Token = "0x170000A1")]
		public static float WorldScale
		{
			[Token(Token = "0x6000A85")]
			[Address(RVA = "0x946F90", Offset = "0x946F90", VA = "0x946F90")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000A86")]
		[Address(RVA = "0x946FE8", Offset = "0x946FE8", VA = "0x946FE8")]
		public static NVRScaler getInstance()
		{
			return null;
		}

		[Token(Token = "0x6000A87")]
		[Address(RVA = "0x947040", Offset = "0x947040", VA = "0x947040")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A88")]
		[Address(RVA = "0x9470BC", Offset = "0x9470BC", VA = "0x9470BC")]
		public void setScale(float newScale)
		{
		}

		[Token(Token = "0x6000A89")]
		[Address(RVA = "0x94716C", Offset = "0x94716C", VA = "0x94716C")]
		public NVRScaler()
		{
		}
	}
	[Token(Token = "0x200020B")]
	public class NVRTeleportArc : MonoBehaviour
	{
		[Token(Token = "0x4000A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int segmentCount;

		[Token(Token = "0x4000A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		[Tooltip("Value with scale 1")]
		private float thickness;

		[Token(Token = "0x4000A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("The amount of time in seconds to predict the motion of the projectile.")]
		public float arcDuration;

		[Token(Token = "0x4000A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Tooltip("The amount of time in seconds between each segment of the projectile.")]
		public float segmentBreak;

		[Token(Token = "0x4000A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Tooltip("The speed at which the line segments of the arc move.")]
		public float arcSpeed;

		[Token(Token = "0x4000A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Material material;

		[Token(Token = "0x4000A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public int traceLayerMask;

		[Token(Token = "0x4000A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private LineRenderer[] lineRenderers;

		[Token(Token = "0x4000A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float arcTimeOffset;

		[Token(Token = "0x4000A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float prevThickness;

		[Token(Token = "0x4000A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int prevSegmentCount;

		[Token(Token = "0x4000A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private bool showArc;

		[Token(Token = "0x4000A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 startPos;

		[Token(Token = "0x4000A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Vector3 projectileVelocity;

		[Token(Token = "0x4000A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool useGravity;

		[Token(Token = "0x4000A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Transform arcObjectsTransfrom;

		[Token(Token = "0x4000A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool arcInvalid;

		[Token(Token = "0x6000A8B")]
		[Address(RVA = "0x9471C4", Offset = "0x9471C4", VA = "0x9471C4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A8C")]
		[Address(RVA = "0x9471E0", Offset = "0x9471E0", VA = "0x9471E0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A8D")]
		[Address(RVA = "0x947224", Offset = "0x947224", VA = "0x947224")]
		private void CreateLineRendererObjects()
		{
		}

		[Token(Token = "0x6000A8E")]
		[Address(RVA = "0x9476B8", Offset = "0x9476B8", VA = "0x9476B8")]
		public void SetArcData(Vector3 position, Vector3 velocity, bool gravity, bool pointerAtBadAngle)
		{
		}

		[Token(Token = "0x6000A8F")]
		[Address(RVA = "0x947704", Offset = "0x947704", VA = "0x947704")]
		public void Show()
		{
		}

		[Token(Token = "0x6000A90")]
		[Address(RVA = "0x94771C", Offset = "0x94771C", VA = "0x94771C")]
		public void Hide()
		{
		}

		[Token(Token = "0x6000A91")]
		[Address(RVA = "0x9477B8", Offset = "0x9477B8", VA = "0x9477B8")]
		public bool DrawArc(out RaycastHit hitInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A92")]
		[Address(RVA = "0x947C04", Offset = "0x947C04", VA = "0x947C04")]
		private void DrawArcSegment(int index, float startTime, float endTime)
		{
		}

		[Token(Token = "0x6000A93")]
		[Address(RVA = "0x947CE4", Offset = "0x947CE4", VA = "0x947CE4")]
		public void SetColor(Color color)
		{
		}

		[Token(Token = "0x6000A94")]
		[Address(RVA = "0x9479C4", Offset = "0x9479C4", VA = "0x9479C4")]
		private float FindProjectileCollision(out RaycastHit hitInfo)
		{
			return default(float);
		}

		[Token(Token = "0x6000A95")]
		[Address(RVA = "0x947B40", Offset = "0x947B40", VA = "0x947B40")]
		public Vector3 GetArcPositionAtTime(float time)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000A96")]
		[Address(RVA = "0x947748", Offset = "0x947748", VA = "0x947748")]
		private void HideLineSegments(int startSegment, int endSegment)
		{
		}

		[Token(Token = "0x6000A97")]
		[Address(RVA = "0x947DB4", Offset = "0x947DB4", VA = "0x947DB4")]
		public NVRTeleportArc()
		{
		}
	}
	[Token(Token = "0x200020C")]
	internal struct EnumEqualityComparer<TEnum> : IEqualityComparer<TEnum> where TEnum : struct
	{
		[Token(Token = "0x200020D")]
		private static class BoxAvoidance
		{
			[Token(Token = "0x4000A24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static readonly Func<TEnum, int> _wrapper;

			[Token(Token = "0x6000A9A")]
			public static int ToInt(TEnum enu)
			{
				return default(int);
			}

			[Token(Token = "0x6000A9B")]
			static BoxAvoidance()
			{
			}
		}

		[Token(Token = "0x6000A98")]
		public bool Equals(TEnum firstEnum, TEnum secondEnum)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A99")]
		public int GetHashCode(TEnum firstEnum)
		{
			return default(int);
		}
	}
	[Token(Token = "0x200020E")]
	public class NVRAttachJoint : MonoBehaviour
	{
		[Token(Token = "0x4000A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public NVRInteractableItem AttachedItem;

		[Token(Token = "0x4000A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NVRAttachPoint AttachedPoint;

		[Token(Token = "0x4000A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float PullRange;

		[Token(Token = "0x4000A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float AttachRange;

		[Token(Token = "0x4000A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float DropDistance;

		[Token(Token = "0x4000A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool MatchRotation;

		[Token(Token = "0x170000A2")]
		public bool IsAttached
		{
			[Token(Token = "0x6000A9C")]
			[Address(RVA = "0x947DDC", Offset = "0x947DDC", VA = "0x947DDC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000A9D")]
		[Address(RVA = "0x947E3C", Offset = "0x947E3C", VA = "0x947E3C", Slot = "4")]
		protected virtual void OnTriggerStay(Collider col)
		{
		}

		[Token(Token = "0x6000A9E")]
		[Address(RVA = "0x947FFC", Offset = "0x947FFC", VA = "0x947FFC", Slot = "5")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6000A9F")]
		[Address(RVA = "0x948028", Offset = "0x948028", VA = "0x948028", Slot = "6")]
		protected virtual void FixedUpdateAttached()
		{
		}

		[Token(Token = "0x6000AA0")]
		[Address(RVA = "0x948148", Offset = "0x948148", VA = "0x948148", Slot = "7")]
		protected virtual void Attach(NVRAttachPoint point)
		{
		}

		[Token(Token = "0x6000AA1")]
		[Address(RVA = "0x948188", Offset = "0x948188", VA = "0x948188", Slot = "8")]
		protected virtual void Detach()
		{
		}

		[Token(Token = "0x6000AA2")]
		[Address(RVA = "0x9481B8", Offset = "0x9481B8", VA = "0x9481B8")]
		public NVRAttachJoint()
		{
		}
	}
	[Token(Token = "0x200020F")]
	public class NVRAttachPoint : MonoBehaviour
	{
		[Token(Token = "0x4000A2B")]
		private const float MaxVelocityChange = 5f;

		[Token(Token = "0x4000A2C")]
		private const float MaxAngularVelocityChange = 10f;

		[Token(Token = "0x4000A2D")]
		private const float VelocityMagic = 3000f;

		[Token(Token = "0x4000A2E")]
		private const float AngularVelocityMagic = 25f;

		[Token(Token = "0x4000A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public Rigidbody Rigidbody;

		[Token(Token = "0x4000A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public NVRInteractableItem Item;

		[Token(Token = "0x4000A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool IsAttached;

		[Token(Token = "0x6000AA3")]
		[Address(RVA = "0x9481E0", Offset = "0x9481E0", VA = "0x9481E0", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000AA4")]
		[Address(RVA = "0x9484F0", Offset = "0x9484F0", VA = "0x9484F0", Slot = "5")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6000AA5")]
		[Address(RVA = "0x94834C", Offset = "0x94834C", VA = "0x94834C")]
		private NVRInteractableItem FindNVRItem(GameObject gameobject)
		{
			return null;
		}

		[Token(Token = "0x6000AA6")]
		[Address(RVA = "0x948510", Offset = "0x948510", VA = "0x948510", Slot = "6")]
		public virtual void Attached(NVRAttachJoint joint)
		{
		}

		[Token(Token = "0x6000AA7")]
		[Address(RVA = "0x9486B8", Offset = "0x9486B8", VA = "0x9486B8", Slot = "7")]
		public virtual void Detached(NVRAttachJoint joint)
		{
		}

		[Token(Token = "0x6000AA8")]
		[Address(RVA = "0x9486F4", Offset = "0x9486F4", VA = "0x9486F4", Slot = "8")]
		public virtual void PullTowards(NVRAttachJoint joint)
		{
		}

		[Token(Token = "0x6000AA9")]
		[Address(RVA = "0x948BD8", Offset = "0x948BD8", VA = "0x948BD8")]
		public NVRAttachPoint()
		{
		}
	}
	[Token(Token = "0x2000210")]
	public class AttachPointMapper
	{
		[Token(Token = "0x4000A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<Collider, NVRAttachPoint> Colliders;

		[Token(Token = "0x6000AAA")]
		[Address(RVA = "0x948460", Offset = "0x948460", VA = "0x948460")]
		public static void Register(Collider col, NVRAttachPoint point)
		{
		}

		[Token(Token = "0x6000AAB")]
		[Address(RVA = "0x948BE0", Offset = "0x948BE0", VA = "0x948BE0")]
		public static void Deregister(Collider col)
		{
		}

		[Token(Token = "0x6000AAC")]
		[Address(RVA = "0x948C60", Offset = "0x948C60", VA = "0x948C60")]
		public static NVRAttachPoint GetAttachPoint(Collider col)
		{
			return null;
		}

		[Token(Token = "0x6000AAD")]
		[Address(RVA = "0x948CF8", Offset = "0x948CF8", VA = "0x948CF8")]
		public AttachPointMapper()
		{
		}
	}
	[Token(Token = "0x2000211")]
	public class NVRButton : MonoBehaviour
	{
		[Token(Token = "0x4000A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Rigidbody Rigidbody;

		[Token(Token = "0x4000A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("The (worldspace) distance from the initial position you have to push the button for it to register as pushed")]
		public float DistanceToEngage;

		[Token(Token = "0x4000A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Tooltip("Is set to true when the button has been pressed down this update frame")]
		public bool ButtonDown;

		[Token(Token = "0x4000A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		[Tooltip("Is set to true when the button has been released from the down position this update frame")]
		public bool ButtonUp;

		[Token(Token = "0x4000A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
		[Tooltip("Is set to true each frame the button is pressed down")]
		public bool ButtonIsPushed;

		[Token(Token = "0x4000A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27")]
		[Tooltip("Is set to true if the button was in a pushed state last frame")]
		public bool ButtonWasPushed;

		[Token(Token = "0x4000A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected Transform InitialPosition;

		[Token(Token = "0x4000A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected float MinDistance;

		[Token(Token = "0x4000A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		protected float PositionMagic;

		[Token(Token = "0x4000A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected float CurrentDistance;

		[Token(Token = "0x4000A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 InitialLocalPosition;

		[Token(Token = "0x4000A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 ConstrainedPosition;

		[Token(Token = "0x4000A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Quaternion InitialLocalRotation;

		[Token(Token = "0x4000A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Quaternion ConstrainedRotation;

		[Token(Token = "0x6000AAF")]
		[Address(RVA = "0x948D8C", Offset = "0x948D8C", VA = "0x948D8C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000AB0")]
		[Address(RVA = "0x948FF8", Offset = "0x948FF8", VA = "0x948FF8")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000AB1")]
		[Address(RVA = "0x9491C4", Offset = "0x9491C4", VA = "0x9491C4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000AB2")]
		[Address(RVA = "0x94915C", Offset = "0x94915C", VA = "0x94915C")]
		private void ConstrainPosition()
		{
		}

		[Token(Token = "0x6000AB3")]
		[Address(RVA = "0x949200", Offset = "0x949200", VA = "0x949200")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000AB4")]
		[Address(RVA = "0x949204", Offset = "0x949204", VA = "0x949204")]
		public NVRButton()
		{
		}
	}
	[Token(Token = "0x2000212")]
	public class NVRButtonInputs
	{
		[Token(Token = "0x4000A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool Enable;

		[Token(Token = "0x4000A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool PressDownCached;

		[Token(Token = "0x4000A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		private bool PressDownExpired;

		[Token(Token = "0x4000A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		private bool PressUpCached;

		[Token(Token = "0x4000A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
		private bool PressUpExpired;

		[Token(Token = "0x4000A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private bool IsPressedCached;

		[Token(Token = "0x4000A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		private bool IsPressedExpired;

		[Token(Token = "0x4000A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
		private bool TouchDownCached;

		[Token(Token = "0x4000A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17")]
		private bool TouchDownExpired;

		[Token(Token = "0x4000A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool TouchUpCached;

		[Token(Token = "0x4000A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool TouchUpExpired;

		[Token(Token = "0x4000A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		private bool IsTouchedCached;

		[Token(Token = "0x4000A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		private bool IsTouchedExpired;

		[Token(Token = "0x4000A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private bool NearTouchDownCached;

		[Token(Token = "0x4000A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		private bool NearTouchDownExpired;

		[Token(Token = "0x4000A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
		private bool NearTouchUpCached;

		[Token(Token = "0x4000A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
		private bool NearTouchUpExpired;

		[Token(Token = "0x4000A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool IsNearTouchedCached;

		[Token(Token = "0x4000A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool IsNearTouchedExpired;

		[Token(Token = "0x4000A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector2 AxisCached;

		[Token(Token = "0x4000A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool AxisExpired;

		[Token(Token = "0x4000A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float SingleAxisCached;

		[Token(Token = "0x4000A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool SingleAxisExpired;

		[Token(Token = "0x4000A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private NVRInputDevice InputDevice;

		[Token(Token = "0x4000A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private NVRButtons NVRbutton;

		[Token(Token = "0x170000A3")]
		public bool PressDown
		{
			[Token(Token = "0x6000AB5")]
			[Address(RVA = "0x94922C", Offset = "0x94922C", VA = "0x94922C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000A4")]
		public bool PressUp
		{
			[Token(Token = "0x6000AB6")]
			[Address(RVA = "0x9492D8", Offset = "0x9492D8", VA = "0x9492D8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000A5")]
		public bool IsPressed
		{
			[Token(Token = "0x6000AB7")]
			[Address(RVA = "0x949384", Offset = "0x949384", VA = "0x949384")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000A6")]
		public bool TouchDown
		{
			[Token(Token = "0x6000AB8")]
			[Address(RVA = "0x949430", Offset = "0x949430", VA = "0x949430")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000A7")]
		public bool TouchUp
		{
			[Token(Token = "0x6000AB9")]
			[Address(RVA = "0x9494DC", Offset = "0x9494DC", VA = "0x9494DC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000A8")]
		public bool IsTouched
		{
			[Token(Token = "0x6000ABA")]
			[Address(RVA = "0x949588", Offset = "0x949588", VA = "0x949588")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000A9")]
		public bool NearTouchDown
		{
			[Token(Token = "0x6000ABB")]
			[Address(RVA = "0x949634", Offset = "0x949634", VA = "0x949634")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000AA")]
		public bool NearTouchUp
		{
			[Token(Token = "0x6000ABC")]
			[Address(RVA = "0x9496E0", Offset = "0x9496E0", VA = "0x9496E0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000AB")]
		public bool IsNearTouched
		{
			[Token(Token = "0x6000ABD")]
			[Address(RVA = "0x94978C", Offset = "0x94978C", VA = "0x94978C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000AC")]
		public Vector2 Axis
		{
			[Token(Token = "0x6000ABE")]
			[Address(RVA = "0x949838", Offset = "0x949838", VA = "0x949838")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x170000AD")]
		public float SingleAxis
		{
			[Token(Token = "0x6000ABF")]
			[Address(RVA = "0x949910", Offset = "0x949910", VA = "0x949910")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000AC0")]
		[Address(RVA = "0x9499AC", Offset = "0x9499AC", VA = "0x9499AC")]
		public void FrameReset(NVRInputDevice inputDevice, NVRButtons button)
		{
		}

		[Token(Token = "0x6000AC1")]
		[Address(RVA = "0x9499E8", Offset = "0x9499E8", VA = "0x9499E8")]
		public NVRButtonInputs()
		{
		}
	}
	[Token(Token = "0x2000213")]
	public enum NVRButtons
	{
		[Token(Token = "0x4000A5B")]
		System,
		[Token(Token = "0x4000A5C")]
		ApplicationMenu,
		[Token(Token = "0x4000A5D")]
		Grip,
		[Token(Token = "0x4000A5E")]
		DPad_Left,
		[Token(Token = "0x4000A5F")]
		DPad_Up,
		[Token(Token = "0x4000A60")]
		DPad_Right,
		[Token(Token = "0x4000A61")]
		DPad_Down,
		[Token(Token = "0x4000A62")]
		A,
		[Token(Token = "0x4000A63")]
		B,
		[Token(Token = "0x4000A64")]
		X,
		[Token(Token = "0x4000A65")]
		Y,
		[Token(Token = "0x4000A66")]
		Axis0,
		[Token(Token = "0x4000A67")]
		Axis1,
		[Token(Token = "0x4000A68")]
		Axis2,
		[Token(Token = "0x4000A69")]
		Axis3,
		[Token(Token = "0x4000A6A")]
		Axis4,
		[Token(Token = "0x4000A6B")]
		Touchpad,
		[Token(Token = "0x4000A6C")]
		Trigger,
		[Token(Token = "0x4000A6D")]
		Back,
		[Token(Token = "0x4000A6E")]
		Stick,
		[Token(Token = "0x4000A6F")]
		None
	}
	[Token(Token = "0x2000214")]
	public class NVRButtonsHelper
	{
		[Token(Token = "0x4000A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static NVRButtons[] array;

		[Token(Token = "0x170000AE")]
		public static NVRButtons[] Array
		{
			[Token(Token = "0x6000AC3")]
			[Address(RVA = "0x949A3C", Offset = "0x949A3C", VA = "0x949A3C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AC4")]
		[Address(RVA = "0x949B80", Offset = "0x949B80", VA = "0x949B80")]
		public NVRButtonsHelper()
		{
		}
	}
	[Token(Token = "0x2000215")]
	public struct NVRButtonsComparer : IEqualityComparer<NVRButtons>
	{
		[Token(Token = "0x6000AC5")]
		[Address(RVA = "0x949B88", Offset = "0x949B88", VA = "0x949B88", Slot = "4")]
		public bool Equals(NVRButtons x, NVRButtons y)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AC6")]
		[Address(RVA = "0x949B94", Offset = "0x949B94", VA = "0x949B94", Slot = "5")]
		public int GetHashCode(NVRButtons obj)
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000216")]
	public class NVRCanvasInput : BaseInputModule
	{
		[Token(Token = "0x4000A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool GeometryBlocksLaser;

		[Token(Token = "0x4000A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public LayerMask LayersThatBlockLaser;

		[Token(Token = "0x4000A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Sprite CursorSprite;

		[Token(Token = "0x4000A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Material CursorMaterial;

		[Token(Token = "0x4000A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float NormalCursorScale;

		[Token(Token = "0x4000A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public bool LaserEnabled;

		[Token(Token = "0x4000A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Color LaserColor;

		[Token(Token = "0x4000A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float LaserStartWidth;

		[Token(Token = "0x4000A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float LaserEndWidth;

		[Token(Token = "0x4000A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool OnCanvas;

		[Token(Token = "0x4000A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		public bool CanvasUsed;

		[Token(Token = "0x4000A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private RectTransform[] Cursors;

		[Token(Token = "0x4000A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private LineRenderer[] Lasers;

		[Token(Token = "0x4000A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private GameObject[] CurrentPoint;

		[Token(Token = "0x4000A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private GameObject[] CurrentPressed;

		[Token(Token = "0x4000A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private GameObject[] CurrentDragging;

		[Token(Token = "0x4000A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private PointerEventData[] PointEvents;

		[Token(Token = "0x4000A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool Initialized;

		[Token(Token = "0x4000A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
		private bool DelayedInitialized;

		[Token(Token = "0x4000A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Camera ControllerCamera;

		[Token(Token = "0x4000A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private NVRPlayer Player;

		[Token(Token = "0x6000AC7")]
		[Address(RVA = "0x949B9C", Offset = "0x949B9C", VA = "0x949B9C", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000AC8")]
		[Address(RVA = "0x94A3CC", Offset = "0x94A3CC", VA = "0x94A3CC")]
		protected void DelayedCameraInit()
		{
		}

		[Token(Token = "0x6000AC9")]
		[Address(RVA = "0x94A4CC", Offset = "0x94A4CC", VA = "0x94A4CC")]
		private bool GetLookPointerEventData(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000ACA")]
		[Address(RVA = "0x94A80C", Offset = "0x94A80C", VA = "0x94A80C")]
		private bool UpdateCursor(int index, PointerEventData pointData)
		{
			return default(bool);
		}

		[Token(Token = "0x6000ACB")]
		[Address(RVA = "0x94ADD8", Offset = "0x94ADD8", VA = "0x94ADD8")]
		public void ClearSelection()
		{
		}

		[Token(Token = "0x6000ACC")]
		[Address(RVA = "0x94AE64", Offset = "0x94AE64", VA = "0x94AE64")]
		private void Select(GameObject go)
		{
		}

		[Token(Token = "0x6000ACD")]
		[Address(RVA = "0x94AF48", Offset = "0x94AF48", VA = "0x94AF48")]
		private bool SendUpdateEventToSelectedObject()
		{
			return default(bool);
		}

		[Token(Token = "0x6000ACE")]
		[Address(RVA = "0x94B090", Offset = "0x94B090", VA = "0x94B090")]
		private void UpdateCameraPosition(int index)
		{
		}

		[Token(Token = "0x6000ACF")]
		[Address(RVA = "0x94B15C", Offset = "0x94B15C", VA = "0x94B15C", Slot = "17")]
		public override void Process()
		{
		}

		[Token(Token = "0x6000AD0")]
		[Address(RVA = "0x94B160", Offset = "0x94B160", VA = "0x94B160")]
		private void Update()
		{
		}

		[Token(Token = "0x6000AD1")]
		[Address(RVA = "0x94BD9C", Offset = "0x94BD9C", VA = "0x94BD9C")]
		private bool ButtonDown(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AD2")]
		[Address(RVA = "0x94BE28", Offset = "0x94BE28", VA = "0x94BE28")]
		private bool ButtonUp(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AD3")]
		[Address(RVA = "0x94BEB4", Offset = "0x94BEB4", VA = "0x94BEB4")]
		public NVRCanvasInput()
		{
		}
	}
	[Token(Token = "0x2000217")]
	public class NVRHand : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000218")]
		public class NVRInteractableEvent : UnityEvent<NVRInteractable>
		{
			[Token(Token = "0x6000B04")]
			[Address(RVA = "0x95134C", Offset = "0x95134C", VA = "0x95134C")]
			public NVRInteractableEvent()
			{
			}
		}

		[Token(Token = "0x200021A")]
		[CompilerGenerated]
		private sealed class <DoLongHapticPulse>d__66 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000AA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000AA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000AA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float seconds;

			[Token(Token = "0x4000AA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public NVRHand <>4__this;

			[Token(Token = "0x4000AAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public NVRButtons button;

			[Token(Token = "0x4000AAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <endTime>5__2;

			[Token(Token = "0x170000BC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000B0B")]
				[Address(RVA = "0x951584", Offset = "0x951584", VA = "0x951584", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000BD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000B0D")]
				[Address(RVA = "0x9515CC", Offset = "0x9515CC", VA = "0x9515CC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000B08")]
			[Address(RVA = "0x94EAD4", Offset = "0x94EAD4", VA = "0x94EAD4")]
			[DebuggerHidden]
			public <DoLongHapticPulse>d__66(int <>1__state)
			{
			}

			[Token(Token = "0x6000B09")]
			[Address(RVA = "0x9514EC", Offset = "0x9514EC", VA = "0x9514EC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000B0A")]
			[Address(RVA = "0x9514F0", Offset = "0x9514F0", VA = "0x9514F0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000B0C")]
			[Address(RVA = "0x95158C", Offset = "0x95158C", VA = "0x95158C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200021B")]
		[CompilerGenerated]
		private sealed class <clearHoveringInteractables>d__86 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000AAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000AAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000AAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NVRHand <>4__this;

			[Token(Token = "0x170000BE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000B11")]
				[Address(RVA = "0x95181C", Offset = "0x95181C", VA = "0x95181C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000BF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000B13")]
				[Address(RVA = "0x951864", Offset = "0x951864", VA = "0x951864", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000B0E")]
			[Address(RVA = "0x9504F8", Offset = "0x9504F8", VA = "0x9504F8")]
			[DebuggerHidden]
			public <clearHoveringInteractables>d__86(int <>1__state)
			{
			}

			[Token(Token = "0x6000B0F")]
			[Address(RVA = "0x9515D4", Offset = "0x9515D4", VA = "0x9515D4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000B10")]
			[Address(RVA = "0x9515D8", Offset = "0x9515D8", VA = "0x9515D8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000B12")]
			[Address(RVA = "0x951824", Offset = "0x951824", VA = "0x951824", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static NVRButtons[] HoldButton;

		[Token(Token = "0x4000A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static NVRButtons UseButton;

		[Token(Token = "0x4000A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public bool IsRight;

		[Token(Token = "0x4000A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[HideInInspector]
		public bool IsLeft;

		[Token(Token = "0x4000A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public NVRPlayer Player;

		[Token(Token = "0x4000A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Dictionary<NVRButtons, NVRButtonInputs> Inputs;

		[Token(Token = "0x4000A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public InterationStyle CurrentInteractionStyle;

		[Token(Token = "0x4000A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Rigidbody Rigidbody;

		[Token(Token = "0x4000A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<NVRRenderModel> CustomModels;

		[Token(Token = "0x4000A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private VisibilityLevel CurrentVisibility;

		[Token(Token = "0x4000A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool VisibilityLocked;

		[Token(Token = "0x4000A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public HandState CurrentHandState;

		[Token(Token = "0x4000A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<NVRInteractable, List<Collider>> CurrentlyHoveringOver;

		[Token(Token = "0x4000A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public NVRInteractable CurrentlyInteracting;

		[Token(Token = "0x4000A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public NVRInteractableEvent OnBeginInteraction;

		[Token(Token = "0x4000A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public NVRInteractableEvent OnEndInteraction;

		[Token(Token = "0x4000A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public NVRInteractableEvent OnHoverEnter;

		[Token(Token = "0x4000A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public NVRInteractableEvent OnHoverExit;

		[Token(Token = "0x4000A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int EstimationSampleIndex;

		[Token(Token = "0x4000A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3[] LastPositions;

		[Token(Token = "0x4000A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Quaternion[] LastRotations;

		[Token(Token = "0x4000A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float[] LastDeltas;

		[Token(Token = "0x4000A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private int EstimationSamples;

		[Token(Token = "0x4000A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[HideInInspector]
		public NVRPhysicalController PhysicalController;

		[Token(Token = "0x4000A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Collider[] GhostColliders;

		[Token(Token = "0x4000A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Renderer[] GhostRenderers;

		[Token(Token = "0x4000AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private NVRInputDevice InputDevice;

		[Token(Token = "0x4000AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public GameObject RenderModel;

		[Token(Token = "0x4000AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public NVRRenderModelType RenderModelType;

		[Token(Token = "0x4000AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public Dictionary<NVRRenderModelType, GameObject> RenderModels;

		[Token(Token = "0x170000AF")]
		public bool HoldButtonDown
		{
			[Token(Token = "0x6000AD4")]
			[Address(RVA = "0x94BF1C", Offset = "0x94BF1C", VA = "0x94BF1C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000B0")]
		public bool HoldButtonUp
		{
			[Token(Token = "0x6000AD5")]
			[Address(RVA = "0x94C010", Offset = "0x94C010", VA = "0x94C010")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000B1")]
		public bool HoldButtonPressed
		{
			[Token(Token = "0x6000AD6")]
			[Address(RVA = "0x94C104", Offset = "0x94C104", VA = "0x94C104")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000B2")]
		public bool UseButtonDown
		{
			[Token(Token = "0x6000AD7")]
			[Address(RVA = "0x94C1F8", Offset = "0x94C1F8", VA = "0x94C1F8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000B3")]
		public bool UseButtonUp
		{
			[Token(Token = "0x6000AD8")]
			[Address(RVA = "0x94C284", Offset = "0x94C284", VA = "0x94C284")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000B4")]
		public bool UseButtonPressed
		{
			[Token(Token = "0x6000AD9")]
			[Address(RVA = "0x94C310", Offset = "0x94C310", VA = "0x94C310")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000B5")]
		public float UseButtonAxis
		{
			[Token(Token = "0x6000ADA")]
			[Address(RVA = "0x94C39C", Offset = "0x94C39C", VA = "0x94C39C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000B6")]
		public bool IsHovering
		{
			[Token(Token = "0x6000ADB")]
			[Address(RVA = "0x94C428", Offset = "0x94C428", VA = "0x94C428")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000B7")]
		public bool IsInteracting
		{
			[Token(Token = "0x6000ADC")]
			[Address(RVA = "0x94C524", Offset = "0x94C524", VA = "0x94C524")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000B8")]
		public bool HasCustomModel
		{
			[Token(Token = "0x6000ADD")]
			[Address(RVA = "0x94C584", Offset = "0x94C584", VA = "0x94C584")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000B9")]
		public bool IsCurrentlyTracked
		{
			[Token(Token = "0x6000ADE")]
			[Address(RVA = "0x94BD10", Offset = "0x94BD10", VA = "0x94BD10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000BA")]
		public Vector3 CurrentForward
		{
			[Token(Token = "0x6000ADF")]
			[Address(RVA = "0x94AD34", Offset = "0x94AD34", VA = "0x94AD34")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170000BB")]
		public Vector3 CurrentPosition
		{
			[Token(Token = "0x6000AE0")]
			[Address(RVA = "0x94AC90", Offset = "0x94AC90", VA = "0x94AC90")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6000AE1")]
		[Address(RVA = "0x94C5D4", Offset = "0x94C5D4", VA = "0x94C5D4", Slot = "4")]
		public virtual void PreInitialize(NVRPlayer player)
		{
		}

		[Token(Token = "0x6000AE2")]
		[Address(RVA = "0x94D580", Offset = "0x94D580", VA = "0x94D580", Slot = "5")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000AE3")]
		[Address(RVA = "0x94D91C", Offset = "0x94D91C", VA = "0x94D91C")]
		protected void UpdateHovering()
		{
		}

		[Token(Token = "0x6000AE4")]
		[Address(RVA = "0x94D698", Offset = "0x94D698", VA = "0x94D698")]
		protected void UpdateButtonStates()
		{
		}

		[Token(Token = "0x6000AE5")]
		[Address(RVA = "0x94DDE0", Offset = "0x94DDE0", VA = "0x94DDE0")]
		public void ResetButtonStates()
		{
		}

		[Token(Token = "0x6000AE6")]
		[Address(RVA = "0x94D780", Offset = "0x94D780", VA = "0x94D780")]
		protected void UpdateInteractions()
		{
		}

		[Token(Token = "0x6000AE7")]
		[Address(RVA = "0x94E4CC", Offset = "0x94E4CC", VA = "0x94E4CC", Slot = "6")]
		protected virtual void UpdateVisibilityAndColliders()
		{
		}

		[Token(Token = "0x6000AE8")]
		[Address(RVA = "0x94E92C", Offset = "0x94E92C", VA = "0x94E92C")]
		public void TriggerHapticPulse(ushort durationMicroSec = 500, NVRButtons button = NVRButtons.Grip)
		{
		}

		[Token(Token = "0x6000AE9")]
		[Address(RVA = "0x94EA2C", Offset = "0x94EA2C", VA = "0x94EA2C")]
		public void LongHapticPulse(float seconds, NVRButtons button = NVRButtons.Grip)
		{
		}

		[Token(Token = "0x6000AEA")]
		[Address(RVA = "0x94EA4C", Offset = "0x94EA4C", VA = "0x94EA4C")]
		[IteratorStateMachine(typeof(<DoLongHapticPulse>d__66))]
		private IEnumerator DoLongHapticPulse(float seconds, NVRButtons button)
		{
			return null;
		}

		[Token(Token = "0x6000AEB")]
		[Address(RVA = "0x94EAFC", Offset = "0x94EAFC", VA = "0x94EAFC")]
		public Vector3 GetVelocityEstimation()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000AEC")]
		[Address(RVA = "0x94EBE4", Offset = "0x94EBE4", VA = "0x94EBE4")]
		public Vector3 GetAngularVelocityEstimation()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000AED")]
		[Address(RVA = "0x94EDA8", Offset = "0x94EDA8", VA = "0x94EDA8")]
		public Vector3 GetPositionDelta()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000AEE")]
		[Address(RVA = "0x94EE38", Offset = "0x94EE38", VA = "0x94EE38")]
		public Quaternion GetRotationDelta()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000AEF")]
		[Address(RVA = "0x94EF3C", Offset = "0x94EF3C", VA = "0x94EF3C", Slot = "7")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6000AF0")]
		[Address(RVA = "0x94F028", Offset = "0x94F028", VA = "0x94F028", Slot = "8")]
		public virtual void BeginInteraction(NVRInteractable interactable)
		{
		}

		[Token(Token = "0x6000AF1")]
		[Address(RVA = "0x94F194", Offset = "0x94F194", VA = "0x94F194", Slot = "9")]
		public virtual void EndInteraction(NVRInteractable item)
		{
		}

		[Token(Token = "0x6000AF2")]
		[Address(RVA = "0x94E180", Offset = "0x94E180", VA = "0x94E180")]
		private bool PickupClosest()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AF3")]
		[Address(RVA = "0x94F2D0", Offset = "0x94F2D0", VA = "0x94F2D0", Slot = "10")]
		protected virtual void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x6000AF4")]
		[Address(RVA = "0x94F5E4", Offset = "0x94F5E4", VA = "0x94F5E4", Slot = "11")]
		protected virtual void OnTriggerStay(Collider collider)
		{
		}

		[Token(Token = "0x6000AF5")]
		[Address(RVA = "0x94F7DC", Offset = "0x94F7DC", VA = "0x94F7DC", Slot = "12")]
		public virtual void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x6000AF6")]
		[Address(RVA = "0x94E0D8", Offset = "0x94E0D8", VA = "0x94E0D8")]
		private void RemoveHoveringOver(NVRInteractable interactable)
		{
		}

		[Token(Token = "0x6000AF7")]
		[Address(RVA = "0x94F958", Offset = "0x94F958", VA = "0x94F958")]
		public string GetDeviceName()
		{
			return null;
		}

		[Token(Token = "0x6000AF8")]
		[Address(RVA = "0x94F9E4", Offset = "0x94F9E4", VA = "0x94F9E4")]
		public Collider[] SetupDefaultPhysicalColliders(Transform ModelParent)
		{
			return null;
		}

		[Token(Token = "0x6000AF9")]
		[Address(RVA = "0x94FA04", Offset = "0x94FA04", VA = "0x94FA04")]
		public void DeregisterInteractable(NVRInteractable interactable)
		{
		}

		[Token(Token = "0x6000AFA")]
		[Address(RVA = "0x94E67C", Offset = "0x94E67C", VA = "0x94E67C")]
		protected void SetVisibility(VisibilityLevel visibility)
		{
		}

		[Token(Token = "0x6000AFB")]
		[Address(RVA = "0x94FC00", Offset = "0x94FC00", VA = "0x94FC00", Slot = "13")]
		public virtual void InitializeRenderModel()
		{
		}

		[Token(Token = "0x6000AFC")]
		[Address(RVA = "0x94FC30", Offset = "0x94FC30", VA = "0x94FC30", Slot = "14")]
		public virtual void InitializeRenderModel(NVRRenderModelType type)
		{
		}

		[Token(Token = "0x6000AFD")]
		[Address(RVA = "0x9501D8", Offset = "0x9501D8", VA = "0x9501D8", Slot = "15")]
		public virtual void SetRenderModel(NVRRenderModelType type)
		{
		}

		[Token(Token = "0x6000AFE")]
		[Address(RVA = "0x950490", Offset = "0x950490", VA = "0x950490")]
		[IteratorStateMachine(typeof(<clearHoveringInteractables>d__86))]
		private IEnumerator clearHoveringInteractables()
		{
			return null;
		}

		[Token(Token = "0x6000AFF")]
		[Address(RVA = "0x950520", Offset = "0x950520", VA = "0x950520", Slot = "16")]
		public virtual void Initialize()
		{
		}

		[Token(Token = "0x6000B00")]
		[Address(RVA = "0x951220", Offset = "0x951220", VA = "0x951220")]
		public void ForceGhost()
		{
		}

		[Token(Token = "0x6000B01")]
		[Address(RVA = "0x951244", Offset = "0x951244", VA = "0x951244")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000B02")]
		[Address(RVA = "0x95124C", Offset = "0x95124C", VA = "0x95124C")]
		public NVRHand()
		{
		}
	}
	[Token(Token = "0x200021C")]
	public enum VisibilityLevel
	{
		[Token(Token = "0x4000AB0")]
		Invisible = 0,
		[Token(Token = "0x4000AB1")]
		Ghost = 70,
		[Token(Token = "0x4000AB2")]
		Visible = 100
	}
	[Token(Token = "0x200021D")]
	public enum HandState
	{
		[Token(Token = "0x4000AB4")]
		Uninitialized,
		[Token(Token = "0x4000AB5")]
		Idle,
		[Token(Token = "0x4000AB6")]
		GripDownNotInteracting,
		[Token(Token = "0x4000AB7")]
		GripDownInteracting,
		[Token(Token = "0x4000AB8")]
		GripToggleOnNotInteracting,
		[Token(Token = "0x4000AB9")]
		GripToggleOnInteracting,
		[Token(Token = "0x4000ABA")]
		GripToggleOff
	}
	[Token(Token = "0x200021E")]
	public enum InterationStyle
	{
		[Token(Token = "0x4000ABC")]
		Hold,
		[Token(Token = "0x4000ABD")]
		Toggle,
		[Token(Token = "0x4000ABE")]
		ByScript
	}
	[Token(Token = "0x200021F")]
	public class NVRHead : MonoBehaviour
	{
		[Token(Token = "0x4000ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Camera[] cameras;

		[Token(Token = "0x6000B14")]
		[Address(RVA = "0x95186C", Offset = "0x95186C", VA = "0x95186C")]
		public void Initialize(NVRPlayer player)
		{
		}

		[Token(Token = "0x6000B15")]
		[Address(RVA = "0x951928", Offset = "0x951928", VA = "0x951928")]
		public void SetCullingMask(LayerMask cullingMask)
		{
		}

		[Token(Token = "0x6000B16")]
		[Address(RVA = "0x9519A8", Offset = "0x9519A8", VA = "0x9519A8")]
		public void SetBackgroundColor(Color color)
		{
		}

		[Token(Token = "0x6000B17")]
		[Address(RVA = "0x951A38", Offset = "0x951A38", VA = "0x951A38")]
		public void setClearFlags(CameraClearFlags clearFlags)
		{
		}

		[Token(Token = "0x6000B18")]
		[Address(RVA = "0x951AA0", Offset = "0x951AA0", VA = "0x951AA0")]
		public LayerMask GetCullingMask()
		{
			return default(LayerMask);
		}

		[Token(Token = "0x6000B19")]
		[Address(RVA = "0x951AE0", Offset = "0x951AE0", VA = "0x951AE0")]
		public Color GetBackgroundColor()
		{
			return default(Color);
		}

		[Token(Token = "0x6000B1A")]
		[Address(RVA = "0x951B10", Offset = "0x951B10", VA = "0x951B10")]
		public CameraClearFlags GetClearFlags()
		{
			return default(CameraClearFlags);
		}

		[Token(Token = "0x6000B1B")]
		[Address(RVA = "0x951B40", Offset = "0x951B40", VA = "0x951B40")]
		public NVRHead()
		{
		}
	}
	[Token(Token = "0x2000220")]
	public class NVRHelpers
	{
		[Token(Token = "0x4000AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Shader standardShader;

		[Token(Token = "0x170000C0")]
		private static Shader StandardShader
		{
			[Token(Token = "0x6000B1C")]
			[Address(RVA = "0x951B48", Offset = "0x951B48", VA = "0x951B48")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B1D")]
		[Address(RVA = "0x950F48", Offset = "0x950F48", VA = "0x950F48")]
		public static void SetTransparent(Material material, [Optional] Color? newcolor)
		{
		}

		[Token(Token = "0x6000B1E")]
		[Address(RVA = "0x951C00", Offset = "0x951C00", VA = "0x951C00")]
		public static void SetOpaque(Material material)
		{
		}

		[Token(Token = "0x6000B1F")]
		[Address(RVA = "0x951E18", Offset = "0x951E18", VA = "0x951E18")]
		public static void SetProperty(object obj, string propertyName, object value, bool isPublic)
		{
		}

		[Token(Token = "0x6000B20")]
		[Address(RVA = "0x951E90", Offset = "0x951E90", VA = "0x951E90")]
		public static void SetField(object obj, string fieldName, object value, bool isPublic)
		{
		}

		[Token(Token = "0x6000B21")]
		[Address(RVA = "0x94A33C", Offset = "0x94A33C", VA = "0x94A33C")]
		public static void LineRendererSetColor(LineRenderer lineRenderer, Color startColor, Color endColor)
		{
		}

		[Token(Token = "0x6000B22")]
		[Address(RVA = "0x94A394", Offset = "0x94A394", VA = "0x94A394")]
		public static void LineRendererSetWidth(LineRenderer lineRenderer, float startWidth, float endWidth)
		{
		}

		[Token(Token = "0x6000B23")]
		[Address(RVA = "0x951F04", Offset = "0x951F04", VA = "0x951F04")]
		public static Quaternion AverageQuaternion(ref Vector4 cumulative, Quaternion newRotation, Quaternion firstRotation, int addAmount)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000B24")]
		[Address(RVA = "0x951FE8", Offset = "0x951FE8", VA = "0x951FE8")]
		public static Quaternion NormalizeQuaternion(float x, float y, float z, float w)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000B25")]
		[Address(RVA = "0x951FD4", Offset = "0x951FD4", VA = "0x951FD4")]
		public static Quaternion InverseSignQuaternion(Quaternion q)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000B26")]
		[Address(RVA = "0x951FAC", Offset = "0x951FAC", VA = "0x951FAC")]
		public static bool AreQuaternionsClose(Quaternion q1, Quaternion q2)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B27")]
		[Address(RVA = "0x952020", Offset = "0x952020", VA = "0x952020")]
		public NVRHelpers()
		{
		}
	}
	[Token(Token = "0x2000221")]
	public abstract class NVRInputDevice : MonoBehaviour
	{
		[Token(Token = "0x4000AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private NVRHand _hand;

		[Token(Token = "0x170000C1")]
		protected NVRHand Hand
		{
			[Token(Token = "0x6000B28")]
			[Address(RVA = "0x952028", Offset = "0x952028", VA = "0x952028")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B29")]
			[Address(RVA = "0x952030", Offset = "0x952030", VA = "0x952030")]
			set
			{
			}
		}

		[Token(Token = "0x170000C2")]
		public abstract bool IsCurrentlyTracked
		{
			[Token(Token = "0x6000B2B")]
			get;
		}

		[Token(Token = "0x6000B2A")]
		[Address(RVA = "0x952038", Offset = "0x952038", VA = "0x952038", Slot = "4")]
		public virtual void Initialize(NVRHand hand)
		{
		}

		[Token(Token = "0x6000B2C")]
		public abstract Collider[] SetupDefaultPhysicalColliders(Transform ModelParent);

		[Token(Token = "0x6000B2D")]
		public abstract GameObject SetupDefaultRenderModel();

		[Token(Token = "0x6000B2E")]
		public abstract bool ReadyToInitialize();

		[Token(Token = "0x6000B2F")]
		public abstract Collider[] SetupDefaultColliders();

		[Token(Token = "0x6000B30")]
		public abstract string GetDeviceName();

		[Token(Token = "0x6000B31")]
		public abstract void TriggerHapticPulse(ushort durationMicroSec = 500, NVRButtons button = NVRButtons.Touchpad);

		[Token(Token = "0x6000B32")]
		public abstract float GetAxis1D(NVRButtons button);

		[Token(Token = "0x6000B33")]
		public abstract Vector2 GetAxis2D(NVRButtons button);

		[Token(Token = "0x6000B34")]
		public abstract bool GetPressDown(NVRButtons button);

		[Token(Token = "0x6000B35")]
		public abstract bool GetPressUp(NVRButtons button);

		[Token(Token = "0x6000B36")]
		public abstract bool GetPress(NVRButtons button);

		[Token(Token = "0x6000B37")]
		public abstract bool GetTouchDown(NVRButtons button);

		[Token(Token = "0x6000B38")]
		public abstract bool GetTouchUp(NVRButtons button);

		[Token(Token = "0x6000B39")]
		public abstract bool GetTouch(NVRButtons button);

		[Token(Token = "0x6000B3A")]
		public abstract bool GetNearTouchDown(NVRButtons button);

		[Token(Token = "0x6000B3B")]
		public abstract bool GetNearTouchUp(NVRButtons button);

		[Token(Token = "0x6000B3C")]
		public abstract bool GetNearTouch(NVRButtons button);

		[Token(Token = "0x6000B3D")]
		[Address(RVA = "0x952040", Offset = "0x952040", VA = "0x952040")]
		protected NVRInputDevice()
		{
		}
	}
	[Token(Token = "0x2000222")]
	public abstract class NVRIntegration
	{
		[Token(Token = "0x4000AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected NVRPlayer Player;

		[Token(Token = "0x4000AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected bool m_bPauseOnFocusLostEnabled;

		[Token(Token = "0x6000B3E")]
		public abstract void Initialize(NVRPlayer player);

		[Token(Token = "0x6000B3F")]
		public abstract Vector3 GetPlayspaceBounds();

		[Token(Token = "0x6000B40")]
		public abstract bool IsHmdPresent();

		[Token(Token = "0x6000B41")]
		[Address(RVA = "0x952048", Offset = "0x952048", VA = "0x952048")]
		public void enablePauseOnFocusLost(bool bValue)
		{
		}

		[Token(Token = "0x6000B42")]
		[Address(RVA = "0x952054", Offset = "0x952054", VA = "0x952054")]
		public bool isEnablePauseOnFocusLost()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B43")]
		[Address(RVA = "0x95205C", Offset = "0x95205C", VA = "0x95205C")]
		protected NVRIntegration()
		{
		}
	}
	[Token(Token = "0x2000223")]
	public abstract class NVRInteractable : MonoBehaviour
	{
		[Token(Token = "0x4000AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int Max_InteractionPriority;

		[Token(Token = "0x4000AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int InteractionPriority;

		[Token(Token = "0x4000AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Rigidbody Rigidbody;

		[Token(Token = "0x4000AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool CanAttach;

		[Token(Token = "0x4000AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool AllowTwoHanded;

		[Token(Token = "0x4000AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public bool DisableKinematicOnAttach;

		[Token(Token = "0x4000ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
		public bool EnableKinematicOnDetach;

		[Token(Token = "0x4000ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		protected float DropDistance;

		[Token(Token = "0x4000ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool EnableGravityOnDetach;

		[Token(Token = "0x4000ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<NVRHand> AttachedHands;

		[Token(Token = "0x4000ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<NVRHand> HoveringHands;

		[Token(Token = "0x4000ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected Collider[] Colliders;

		[Token(Token = "0x4000AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected Vector3 ClosestHeldPoint;

		[Token(Token = "0x170000C3")]
		public NVRHand AttachedHand
		{
			[Token(Token = "0x6000B44")]
			[Address(RVA = "0x94F11C", Offset = "0x94F11C", VA = "0x94F11C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C4")]
		public NVRHand HoveringHand
		{
			[Token(Token = "0x6000B45")]
			[Address(RVA = "0x95206C", Offset = "0x95206C", VA = "0x95206C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C5")]
		public virtual bool IsAttached
		{
			[Token(Token = "0x6000B46")]
			[Address(RVA = "0x9520E4", Offset = "0x9520E4", VA = "0x9520E4", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000B47")]
		[Address(RVA = "0x952150", Offset = "0x952150", VA = "0x952150", Slot = "5")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000B48")]
		[Address(RVA = "0x952258", Offset = "0x952258", VA = "0x952258", Slot = "6")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6000B49")]
		[Address(RVA = "0x952264", Offset = "0x952264", VA = "0x952264", Slot = "7")]
		public virtual void ResetInteractable()
		{
		}

		[Token(Token = "0x6000B4A")]
		[Address(RVA = "0x9522F4", Offset = "0x9522F4", VA = "0x9522F4", Slot = "8")]
		public virtual void UpdateColliders()
		{
		}

		[Token(Token = "0x6000B4B")]
		[Address(RVA = "0x952550", Offset = "0x952550", VA = "0x952550", Slot = "9")]
		protected virtual bool CheckForDrop()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B4C")]
		[Address(RVA = "0x952820", Offset = "0x952820", VA = "0x952820", Slot = "10")]
		public virtual void BeginInteraction(NVRHand hand)
		{
		}

		[Token(Token = "0x6000B4D")]
		[Address(RVA = "0x9528E8", Offset = "0x9528E8", VA = "0x9528E8", Slot = "11")]
		public virtual void InteractingUpdate(NVRHand hand)
		{
		}

		[Token(Token = "0x6000B4E")]
		[Address(RVA = "0x952954", Offset = "0x952954", VA = "0x952954", Slot = "12")]
		public virtual void HoveringEnter(NVRHand hand)
		{
		}

		[Token(Token = "0x6000B4F")]
		[Address(RVA = "0x9529FC", Offset = "0x9529FC", VA = "0x9529FC", Slot = "13")]
		public virtual void HoveringUpdate(NVRHand hand, float forTime)
		{
		}

		[Token(Token = "0x6000B50")]
		[Address(RVA = "0x952A00", Offset = "0x952A00", VA = "0x952A00", Slot = "14")]
		public virtual void HoveringExit(NVRHand hand)
		{
		}

		[Token(Token = "0x6000B51")]
		[Address(RVA = "0x952A58", Offset = "0x952A58", VA = "0x952A58")]
		public void ForceDetach([Optional] NVRHand hand)
		{
		}

		[Token(Token = "0x6000B52")]
		[Address(RVA = "0x952B98", Offset = "0x952B98", VA = "0x952B98", Slot = "15")]
		public virtual void EndInteraction(NVRHand hand)
		{
		}

		[Token(Token = "0x6000B53")]
		[Address(RVA = "0x952C74", Offset = "0x952C74", VA = "0x952C74", Slot = "16")]
		protected virtual void DroppedBecauseOfDistance(NVRHand hand)
		{
		}

		[Token(Token = "0x6000B54")]
		[Address(RVA = "0x952C9C", Offset = "0x952C9C", VA = "0x952C9C", Slot = "17")]
		public virtual void UseButtonUp()
		{
		}

		[Token(Token = "0x6000B55")]
		[Address(RVA = "0x952CA0", Offset = "0x952CA0", VA = "0x952CA0", Slot = "18")]
		public virtual void UseButtonDown()
		{
		}

		[Token(Token = "0x6000B56")]
		[Address(RVA = "0x952CA4", Offset = "0x952CA4", VA = "0x952CA4", Slot = "19")]
		public virtual void AddExternalVelocity(Vector3 velocity)
		{
		}

		[Token(Token = "0x6000B57")]
		[Address(RVA = "0x952CC4", Offset = "0x952CC4", VA = "0x952CC4", Slot = "20")]
		public virtual void AddExternalAngularVelocity(Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x6000B58")]
		[Address(RVA = "0x952CE4", Offset = "0x952CE4", VA = "0x952CE4", Slot = "21")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6000B59")]
		[Address(RVA = "0x95304C", Offset = "0x95304C", VA = "0x95304C")]
		protected NVRInteractable()
		{
		}
	}
	[Token(Token = "0x2000224")]
	public class NVRInteractableItem : NVRInteractable
	{
		[Token(Token = "0x4000AD1")]
		private const float MaxVelocityChange = 10f;

		[Token(Token = "0x4000AD2")]
		private const float MaxAngularVelocityChange = 20f;

		[Token(Token = "0x4000AD3")]
		private const float VelocityMagic = 6000f;

		[Token(Token = "0x4000AD4")]
		private const float AngularVelocityMagic = 50f;

		[Token(Token = "0x4000AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("If you have a specific point you'd like the object held at, create a transform there and set it to this variable")]
		public Transform InteractionPoint;

		[Token(Token = "0x4000AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public UnityEvent OnUseButtonDown;

		[Token(Token = "0x4000AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public UnityEvent OnUseButtonUp;

		[Token(Token = "0x4000AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public UnityEvent OnHovering;

		[Token(Token = "0x4000AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public UnityEvent OnBeginInteraction;

		[Token(Token = "0x4000ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public UnityEvent OnEndInteraction;

		[Token(Token = "0x4000ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected Dictionary<NVRHand, Transform> PickupTransforms;

		[Token(Token = "0x4000ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected Vector3 ExternalVelocity;

		[Token(Token = "0x4000ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		protected Vector3 ExternalAngularVelocity;

		[Token(Token = "0x4000ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected Vector3?[] VelocityHistory;

		[Token(Token = "0x4000ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected Vector3?[] AngularVelocityHistory;

		[Token(Token = "0x4000AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected int CurrentVelocityHistoryStep;

		[Token(Token = "0x4000AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		protected float StartingDrag;

		[Token(Token = "0x4000AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected float StartingAngularDrag;

		[Token(Token = "0x4000AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected Dictionary<Collider, PhysicMaterial> MaterialCache;

		[Token(Token = "0x6000B5B")]
		[Address(RVA = "0x9531A8", Offset = "0x9531A8", VA = "0x9531A8", Slot = "5")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000B5C")]
		[Address(RVA = "0x9531D4", Offset = "0x9531D4", VA = "0x9531D4", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000B5D")]
		[Address(RVA = "0x953454", Offset = "0x953454", VA = "0x953454", Slot = "22")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6000B5E")]
		[Address(RVA = "0x9534AC", Offset = "0x9534AC", VA = "0x9534AC", Slot = "23")]
		protected virtual void GetTargetValues(out Vector3 targetHandPosition, out Quaternion targetHandRotation, out Vector3 targetItemPosition, out Quaternion targetItemRotation)
		{
		}

		[Token(Token = "0x6000B5F")]
		[Address(RVA = "0x953B40", Offset = "0x953B40", VA = "0x953B40", Slot = "24")]
		protected virtual void UpdateVelocities()
		{
		}

		[Token(Token = "0x6000B60")]
		[Address(RVA = "0x9541E4", Offset = "0x9541E4", VA = "0x9541E4", Slot = "25")]
		protected virtual void AddExternalVelocities()
		{
		}

		[Token(Token = "0x6000B61")]
		[Address(RVA = "0x9543C0", Offset = "0x9543C0", VA = "0x9543C0", Slot = "19")]
		public override void AddExternalVelocity(Vector3 velocity)
		{
		}

		[Token(Token = "0x6000B62")]
		[Address(RVA = "0x95449C", Offset = "0x95449C", VA = "0x95449C", Slot = "20")]
		public override void AddExternalAngularVelocity(Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x6000B63")]
		[Address(RVA = "0x954578", Offset = "0x954578", VA = "0x954578", Slot = "10")]
		public override void BeginInteraction(NVRHand hand)
		{
		}

		[Token(Token = "0x6000B64")]
		[Address(RVA = "0x95489C", Offset = "0x95489C", VA = "0x95489C", Slot = "15")]
		public override void EndInteraction(NVRHand hand)
		{
		}

		[Token(Token = "0x6000B65")]
		[Address(RVA = "0x954C9C", Offset = "0x954C9C", VA = "0x954C9C", Slot = "13")]
		public override void HoveringUpdate(NVRHand hand, float forTime)
		{
		}

		[Token(Token = "0x6000B66")]
		[Address(RVA = "0x954CB0", Offset = "0x954CB0", VA = "0x954CB0", Slot = "7")]
		public override void ResetInteractable()
		{
		}

		[Token(Token = "0x6000B67")]
		[Address(RVA = "0x954CD8", Offset = "0x954CD8", VA = "0x954CD8", Slot = "18")]
		public override void UseButtonDown()
		{
		}

		[Token(Token = "0x6000B68")]
		[Address(RVA = "0x954CEC", Offset = "0x954CEC", VA = "0x954CEC", Slot = "17")]
		public override void UseButtonUp()
		{
		}

		[Token(Token = "0x6000B69")]
		[Address(RVA = "0x954D00", Offset = "0x954D00", VA = "0x954D00", Slot = "26")]
		protected virtual void ApplyVelocityHistory()
		{
		}

		[Token(Token = "0x6000B6A")]
		[Address(RVA = "0x954F3C", Offset = "0x954F3C", VA = "0x954F3C", Slot = "27")]
		protected virtual void ResetVelocityHistory()
		{
		}

		[Token(Token = "0x6000B6B")]
		[Address(RVA = "0x954DCC", Offset = "0x954DCC", VA = "0x954DCC")]
		protected Vector3? GetMeanVector(Vector3?[] positions)
		{
			return null;
		}

		[Token(Token = "0x6000B6C")]
		[Address(RVA = "0x95476C", Offset = "0x95476C", VA = "0x95476C")]
		protected void DisablePhysicalMaterials()
		{
		}

		[Token(Token = "0x6000B6D")]
		[Address(RVA = "0x954B58", Offset = "0x954B58", VA = "0x954B58")]
		protected void EnablePhysicalMaterials()
		{
		}

		[Token(Token = "0x6000B6E")]
		[Address(RVA = "0x954FB8", Offset = "0x954FB8", VA = "0x954FB8", Slot = "8")]
		public override void UpdateColliders()
		{
		}

		[Token(Token = "0x6000B6F")]
		[Address(RVA = "0x9550F4", Offset = "0x9550F4", VA = "0x9550F4")]
		public NVRInteractableItem()
		{
		}
	}
	[Token(Token = "0x2000225")]
	public class NVRInteractableItemAutoAttach : NVRInteractableItem
	{
		[Token(Token = "0x4000AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public float PickupAfterSeconds;

		[Token(Token = "0x6000B70")]
		[Address(RVA = "0x9551DC", Offset = "0x9551DC", VA = "0x9551DC", Slot = "13")]
		public override void HoveringUpdate(NVRHand hand, float forTime)
		{
		}

		[Token(Token = "0x6000B71")]
		[Address(RVA = "0x95525C", Offset = "0x95525C", VA = "0x95525C")]
		public NVRInteractableItemAutoAttach()
		{
		}
	}
	[Token(Token = "0x2000226")]
	public class NVRInteractableItemClippable : NVRInteractableItem
	{
		[Token(Token = "0x6000B72")]
		[Address(RVA = "0x955268", Offset = "0x955268", VA = "0x955268", Slot = "24")]
		protected override void UpdateVelocities()
		{
		}

		[Token(Token = "0x6000B73")]
		[Address(RVA = "0x9552EC", Offset = "0x9552EC", VA = "0x9552EC", Slot = "10")]
		public override void BeginInteraction(NVRHand hand)
		{
		}

		[Token(Token = "0x6000B74")]
		[Address(RVA = "0x955314", Offset = "0x955314", VA = "0x955314", Slot = "15")]
		public override void EndInteraction(NVRHand hand)
		{
		}

		[Token(Token = "0x6000B75")]
		[Address(RVA = "0x95533C", Offset = "0x95533C", VA = "0x95533C")]
		public NVRInteractableItemClippable()
		{
		}
	}
	[Token(Token = "0x2000227")]
	public class NVRInteractableRotator : NVRInteractable
	{
		[Token(Token = "0x4000AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float CurrentAngle;

		[Token(Token = "0x4000AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected Transform InitialAttachPoint;

		[Token(Token = "0x170000C6")]
		protected virtual float DeltaMagic
		{
			[Token(Token = "0x6000B76")]
			[Address(RVA = "0x955340", Offset = "0x955340", VA = "0x955340", Slot = "22")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000B77")]
		[Address(RVA = "0x955348", Offset = "0x955348", VA = "0x955348", Slot = "5")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000B78")]
		[Address(RVA = "0x955374", Offset = "0x955374", VA = "0x955374", Slot = "23")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6000B79")]
		[Address(RVA = "0x955510", Offset = "0x955510", VA = "0x955510", Slot = "10")]
		public override void BeginInteraction(NVRHand hand)
		{
		}

		[Token(Token = "0x6000B7A")]
		[Address(RVA = "0x9556B8", Offset = "0x9556B8", VA = "0x9556B8", Slot = "15")]
		public override void EndInteraction(NVRHand hand)
		{
		}

		[Token(Token = "0x6000B7B")]
		[Address(RVA = "0x95577C", Offset = "0x95577C", VA = "0x95577C")]
		public NVRInteractableRotator()
		{
		}
	}
	[Token(Token = "0x2000228")]
	public class NVRInteractables : MonoBehaviour
	{
		[Token(Token = "0x4000AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<Collider, NVRInteractable> ColliderMapping;

		[Token(Token = "0x4000AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Dictionary<NVRInteractable, Collider[]> NVRInteractableMapping;

		[Token(Token = "0x4000AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static List<NVRInteractable> NVRInteractableList;

		[Token(Token = "0x4000AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static bool Initialized;

		[Token(Token = "0x6000B7C")]
		[Address(RVA = "0x9557D0", Offset = "0x9557D0", VA = "0x9557D0")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x6000B7D")]
		[Address(RVA = "0x95234C", Offset = "0x95234C", VA = "0x95234C")]
		public static void Register(NVRInteractable interactable, Collider[] colliders)
		{
		}

		[Token(Token = "0x6000B7E")]
		[Address(RVA = "0x952D00", Offset = "0x952D00", VA = "0x952D00")]
		public static void Deregister(NVRInteractable interactable)
		{
		}

		[Token(Token = "0x6000B7F")]
		[Address(RVA = "0x94F508", Offset = "0x94F508", VA = "0x94F508")]
		public static NVRInteractable GetInteractable(Collider collider)
		{
			return null;
		}

		[Token(Token = "0x6000B80")]
		[Address(RVA = "0x955B74", Offset = "0x955B74", VA = "0x955B74")]
		public static List<NVRInteractable> GetAllInteractables()
		{
			return null;
		}

		[Token(Token = "0x6000B81")]
		[Address(RVA = "0x955BBC", Offset = "0x955BBC", VA = "0x955BBC")]
		public NVRInteractables()
		{
		}
	}
	[Token(Token = "0x200022B")]
	public class NVRLetterSpinner : NVRInteractableRotator
	{
		[Token(Token = "0x4000AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string LETTERLIST;

		[Token(Token = "0x4000AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float SnapDistance;

		[Token(Token = "0x4000AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float RungAngleInterval;

		[Token(Token = "0x4000AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 LastAngularVelocity;

		[Token(Token = "0x6000B88")]
		[Address(RVA = "0x955D20", Offset = "0x955D20", VA = "0x955D20", Slot = "5")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000B89")]
		[Address(RVA = "0x955DA4", Offset = "0x955DA4", VA = "0x955DA4", Slot = "23")]
		protected override void FixedUpdate()
		{
		}

		[Token(Token = "0x6000B8A")]
		[Address(RVA = "0x956040", Offset = "0x956040", VA = "0x956040", Slot = "10")]
		public override void BeginInteraction(NVRHand hand)
		{
		}

		[Token(Token = "0x6000B8B")]
		[Address(RVA = "0x95607C", Offset = "0x95607C", VA = "0x95607C")]
		public string GetLetter()
		{
			return null;
		}

		[Token(Token = "0x6000B8C")]
		[Address(RVA = "0x956240", Offset = "0x956240", VA = "0x956240")]
		public NVRLetterSpinner()
		{
		}
	}
	[Token(Token = "0x200022C")]
	public class NVRLever : NVRInteractableItem
	{
		[Token(Token = "0x200022D")]
		public enum LeverPosition
		{
			[Token(Token = "0x4000B01")]
			Off,
			[Token(Token = "0x4000B02")]
			Mid,
			[Token(Token = "0x4000B03")]
			On
		}

		[Token(Token = "0x200022E")]
		public enum RotationAxis
		{
			[Token(Token = "0x4000B05")]
			XAxis,
			[Token(Token = "0x4000B06")]
			YAxis,
			[Token(Token = "0x4000B07")]
			ZAxis
		}

		[Token(Token = "0x200022F")]
		[CompilerGenerated]
		private sealed class <HoldPosition>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000B08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000B09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000B0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NVRLever <>4__this;

			[Token(Token = "0x4000B0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float time;

			[Token(Token = "0x170000C8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000B9B")]
				[Address(RVA = "0x956D5C", Offset = "0x956D5C", VA = "0x956D5C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000C9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000B9D")]
				[Address(RVA = "0x956DA4", Offset = "0x956DA4", VA = "0x956DA4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000B98")]
			[Address(RVA = "0x9569B8", Offset = "0x9569B8", VA = "0x9569B8")]
			[DebuggerHidden]
			public <HoldPosition>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6000B99")]
			[Address(RVA = "0x956C74", Offset = "0x956C74", VA = "0x956C74", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000B9A")]
			[Address(RVA = "0x956C78", Offset = "0x956C78", VA = "0x956C78", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000B9C")]
			[Address(RVA = "0x956D64", Offset = "0x956D64", VA = "0x956D64", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public float LastValue;

		[Token(Token = "0x4000AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public float CurrentValue;

		[Token(Token = "0x4000AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public LeverPosition LastLeverPosition;

		[Token(Token = "0x4000AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		public LeverPosition CurrentLeverPosition;

		[Token(Token = "0x4000AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public bool LeverEngaged;

		[Token(Token = "0x4000AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		public float EngageWaitTime;

		[Token(Token = "0x4000AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected Transform InitialAttachPoint;

		[Token(Token = "0x4000AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected HingeJoint HingeJoint;

		[Token(Token = "0x4000AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		protected bool UseMotor;

		[Token(Token = "0x4000AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		protected Quaternion Max;

		[Token(Token = "0x4000AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		protected Quaternion Mid;

		[Token(Token = "0x4000AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		protected Quaternion Min;

		[Token(Token = "0x4000AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		protected float AngleRange;

		[Token(Token = "0x170000C7")]
		protected virtual float DeltaMagic
		{
			[Token(Token = "0x6000B8E")]
			[Address(RVA = "0x956304", Offset = "0x956304", VA = "0x956304", Slot = "28")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000B8F")]
		[Address(RVA = "0x95630C", Offset = "0x95630C", VA = "0x95630C", Slot = "5")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000B90")]
		[Address(RVA = "0x95672C", Offset = "0x95672C", VA = "0x95672C")]
		protected void Update()
		{
		}

		[Token(Token = "0x6000B91")]
		[Address(RVA = "0x956890", Offset = "0x956890", VA = "0x956890", Slot = "29")]
		protected virtual void Engage()
		{
		}

		[Token(Token = "0x6000B92")]
		[Address(RVA = "0x956940", Offset = "0x956940", VA = "0x956940")]
		[IteratorStateMachine(typeof(<HoldPosition>d__18))]
		private IEnumerator HoldPosition(float time)
		{
			return null;
		}

		[Token(Token = "0x6000B93")]
		[Address(RVA = "0x9569E0", Offset = "0x9569E0", VA = "0x9569E0", Slot = "10")]
		public override void BeginInteraction(NVRHand hand)
		{
		}

		[Token(Token = "0x6000B94")]
		[Address(RVA = "0x956B9C", Offset = "0x956B9C", VA = "0x956B9C", Slot = "15")]
		public override void EndInteraction(NVRHand hand)
		{
		}

		[Token(Token = "0x6000B95")]
		[Address(RVA = "0x9567B8", Offset = "0x9567B8", VA = "0x9567B8")]
		private float GetValue()
		{
			return default(float);
		}

		[Token(Token = "0x6000B96")]
		[Address(RVA = "0x956858", Offset = "0x956858", VA = "0x956858")]
		private LeverPosition GetPosition()
		{
			return default(LeverPosition);
		}

		[Token(Token = "0x6000B97")]
		[Address(RVA = "0x956C68", Offset = "0x956C68", VA = "0x956C68")]
		public NVRLever()
		{
		}
	}
	[Token(Token = "0x2000230")]
	public class NVRPhysicalController : MonoBehaviour
	{
		[Token(Token = "0x4000B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private NVRHand Hand;

		[Token(Token = "0x4000B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool State;

		[Token(Token = "0x4000B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Rigidbody Rigidbody;

		[Token(Token = "0x4000B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public GameObject PhysicalController;

		[Token(Token = "0x4000B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected Vector3 ClosestHeldPoint;

		[Token(Token = "0x4000B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		protected float AttachedRotationMagic;

		[Token(Token = "0x4000B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected float AttachedPositionMagic;

		[Token(Token = "0x4000B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Type[] KeepTypes;

		[Token(Token = "0x4000B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GameObject RenderModel;

		[Token(Token = "0x4000B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<NVRRenderModelType, GameObject> RenderModels;

		[Token(Token = "0x170000CA")]
		protected float DropDistance
		{
			[Token(Token = "0x6000B9E")]
			[Address(RVA = "0x956DAC", Offset = "0x956DAC", VA = "0x956DAC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000B9F")]
		[Address(RVA = "0x950934", Offset = "0x950934", VA = "0x950934")]
		public void Initialize(NVRHand trackingHand, bool initialState)
		{
		}

		[Token(Token = "0x6000BA0")]
		[Address(RVA = "0x957390", Offset = "0x957390", VA = "0x957390")]
		public void Kill()
		{
		}

		[Token(Token = "0x6000BA1")]
		[Address(RVA = "0x9573F8", Offset = "0x9573F8", VA = "0x9573F8")]
		private bool CheckForDrop()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BA2")]
		[Address(RVA = "0x9574FC", Offset = "0x9574FC", VA = "0x9574FC")]
		private void UpdatePosition()
		{
		}

		[Token(Token = "0x6000BA3")]
		[Address(RVA = "0x957728", Offset = "0x957728", VA = "0x957728", Slot = "4")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6000BA4")]
		[Address(RVA = "0x957754", Offset = "0x957754", VA = "0x957754", Slot = "5")]
		protected virtual void DroppedBecauseOfDistance()
		{
		}

		[Token(Token = "0x6000BA5")]
		[Address(RVA = "0x94FB40", Offset = "0x94FB40", VA = "0x94FB40")]
		public void On()
		{
		}

		[Token(Token = "0x6000BA6")]
		[Address(RVA = "0x94FAFC", Offset = "0x94FAFC", VA = "0x94FAFC")]
		public void Off()
		{
		}

		[Token(Token = "0x6000BA7")]
		[Address(RVA = "0x9503C4", Offset = "0x9503C4", VA = "0x9503C4")]
		public void UpdateRenderModel()
		{
		}

		[Token(Token = "0x6000BA8")]
		[Address(RVA = "0x956DBC", Offset = "0x956DBC", VA = "0x956DBC")]
		protected void SetupCustomModel()
		{
		}

		[Token(Token = "0x6000BA9")]
		[Address(RVA = "0x95776C", Offset = "0x95776C", VA = "0x95776C")]
		public NVRPhysicalController()
		{
		}
	}
	[Token(Token = "0x2000232")]
	public class NVRPlayer : MonoBehaviour
	{
		[Token(Token = "0x4000B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SumalabEvent<bool> OnApplicationFocusLost;

		[Token(Token = "0x4000B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public const decimal NewtonVRVersion = 1.24m;

		[Token(Token = "0x4000B19")]
		public const float NewtonVRExpectedDeltaTime = 0.0111f;

		[Token(Token = "0x4000B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static List<NVRPlayer> Instances;

		[Token(Token = "0x4000B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public bool SteamVREnabled;

		[Token(Token = "0x4000B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[HideInInspector]
		public bool OculusSDKEnabled;

		[Token(Token = "0x4000B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		[HideInInspector]
		public bool PSVREnabled;

		[Token(Token = "0x4000B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
		[HideInInspector]
		public bool PicoEnabled;

		[Token(Token = "0x4000B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[HideInInspector]
		public bool YVREnabled;

		[Token(Token = "0x4000B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		[HideInInspector]
		public bool QiyuVREnabled;

		[Token(Token = "0x4000B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public InterationStyle InteractionStyle;

		[Token(Token = "0x4000B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool PhysicalHands;

		[Token(Token = "0x4000B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		public bool MakeControllerInvisibleOnInteraction;

		[Token(Token = "0x4000B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
		public bool AutomaticallySetControllerTransparency;

		[Token(Token = "0x4000B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F")]
		public bool AlwaysPhysicalHands;

		[Token(Token = "0x4000B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool VibrateOnHover;

		[Token(Token = "0x4000B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int VelocityHistorySteps;

		[Token(Token = "0x4000B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UnityEvent OnInitialized;

		[Token(Token = "0x4000B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Space]
		public bool EnableEditorPlayerPreview;

		[Token(Token = "0x4000B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Mesh EditorPlayerPreview;

		[Token(Token = "0x4000B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Mesh EditorPlayspacePreview;

		[Token(Token = "0x4000B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool EditorPlayspaceOverride;

		[Token(Token = "0x4000B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Vector2 EditorPlayspaceDefault;

		[Token(Token = "0x4000B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static float recenterRotationDeltaY;

		[Token(Token = "0x4000B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private static Vector3 recenterPositionDelta;

		[Token(Token = "0x4000B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public UnityEvent OnRecenterEdit;

		[Token(Token = "0x4000B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[Space]
		public NVRRenderModelManager RenderModelManager;

		[Token(Token = "0x4000B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[Space]
		public NVRHead Head;

		[Token(Token = "0x4000B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public NVRHand LeftHand;

		[Token(Token = "0x4000B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public NVRHand RightHand;

		[Token(Token = "0x4000B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[HideInInspector]
		public NVRHand[] Hands;

		[Token(Token = "0x4000B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[HideInInspector]
		public NVRSDKIntegrations CurrentIntegrationType;

		[Token(Token = "0x4000B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private NVRIntegration Integration;

		[Token(Token = "0x4000B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Dictionary<Collider, NVRHand> ColliderToHandMapping;

		[Token(Token = "0x4000B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool ApplicationFocusLost;

		[Token(Token = "0x4000B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
		[Space]
		public bool DEBUGEnableFallback2D;

		[Token(Token = "0x4000B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB2")]
		public bool DEBUGDropFrames;

		[Token(Token = "0x4000B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public int DEBUGSleepPerFrame;

		[Token(Token = "0x4000B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public bool AutoSetFixedDeltaTime;

		[Token(Token = "0x4000B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
		public bool NotifyOnVersionUpdate;

		[Token(Token = "0x4000B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private string headName;

		[Token(Token = "0x4000B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Vector3 defaultRecenterPosition;

		[Token(Token = "0x4000B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		public Vector3 defaultRecenterRotation;

		[Token(Token = "0x4000B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public Camera ApplicationFocusLostCamera;

		[Token(Token = "0x4000B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public bool customRecenter;

		[Token(Token = "0x4000B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private UnityAction recenterAction;

		[Token(Token = "0x170000CB")]
		public static NVRPlayer Instance
		{
			[Token(Token = "0x6000BAC")]
			[Address(RVA = "0x9532A0", Offset = "0x9532A0", VA = "0x9532A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CC")]
		public Vector3 PlayspaceSize
		{
			[Token(Token = "0x6000BAD")]
			[Address(RVA = "0x957A34", Offset = "0x957A34", VA = "0x957A34")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6000BAE")]
		[Address(RVA = "0x957D2C", Offset = "0x957D2C", VA = "0x957D2C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000BAF")]
		[Address(RVA = "0x958084", Offset = "0x958084", VA = "0x958084")]
		private void SetupIntegration(bool logOutput = true)
		{
		}

		[Token(Token = "0x6000BB0")]
		[Address(RVA = "0x958330", Offset = "0x958330", VA = "0x958330", Slot = "4")]
		public virtual void enablePauseOnFocusLost(bool bValue)
		{
		}

		[Token(Token = "0x6000BB1")]
		[Address(RVA = "0x958344", Offset = "0x958344", VA = "0x958344", Slot = "5")]
		public virtual bool isEnablePauseOnFocusLost()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BB2")]
		[Address(RVA = "0x958360", Offset = "0x958360", VA = "0x958360")]
		public void SetApplicationFocusLost(bool enable)
		{
		}

		[Token(Token = "0x6000BB3")]
		[Address(RVA = "0x95842C", Offset = "0x95842C", VA = "0x95842C")]
		public bool IsApplicationFocusLost()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BB4")]
		[Address(RVA = "0x958174", Offset = "0x958174", VA = "0x958174")]
		private NVRSDKIntegrations DetermineCurrentIntegration(bool logOutput = true)
		{
			return default(NVRSDKIntegrations);
		}

		[Token(Token = "0x6000BB5")]
		[Address(RVA = "0x95082C", Offset = "0x95082C", VA = "0x95082C")]
		public void RegisterHand(NVRHand hand)
		{
		}

		[Token(Token = "0x6000BB6")]
		[Address(RVA = "0x958434", Offset = "0x958434", VA = "0x958434")]
		public NVRHand GetHand(Collider collider)
		{
			return null;
		}

		[Token(Token = "0x6000BB7")]
		[Address(RVA = "0x955904", Offset = "0x955904", VA = "0x955904")]
		public static void DeregisterInteractable(NVRInteractable interactable)
		{
		}

		[Token(Token = "0x6000BB8")]
		[Address(RVA = "0x95848C", Offset = "0x95848C", VA = "0x95848C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000BB9")]
		[Address(RVA = "0x95850C", Offset = "0x95850C", VA = "0x95850C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BBA")]
		[Address(RVA = "0x958524", Offset = "0x958524", VA = "0x958524")]
		public void setDefaultRecenter(Vector3 defaultPosition, Vector3 defaultRotation)
		{
		}

		[Token(Token = "0x6000BBB")]
		[Address(RVA = "0x958534", Offset = "0x958534", VA = "0x958534")]
		public void Recenter(bool bEdit = false)
		{
		}

		[Token(Token = "0x6000BBC")]
		[Address(RVA = "0x95883C", Offset = "0x95883C", VA = "0x95883C")]
		public void setCustomRecenter(UnityAction action)
		{
		}

		[Token(Token = "0x6000BBD")]
		[Address(RVA = "0x958844", Offset = "0x958844", VA = "0x958844")]
		public NVRPlayer()
		{
		}
	}
	[Token(Token = "0x2000234")]
	public enum NVRSDKIntegrations
	{
		[Token(Token = "0x4000B48")]
		None,
		[Token(Token = "0x4000B49")]
		FallbackNonVR,
		[Token(Token = "0x4000B4A")]
		SteamVR,
		[Token(Token = "0x4000B4B")]
		Oculus,
		[Token(Token = "0x4000B4C")]
		WindowsMR,
		[Token(Token = "0x4000B4D")]
		PSVR,
		[Token(Token = "0x4000B4E")]
		Pico,
		[Token(Token = "0x4000B4F")]
		YVR,
		[Token(Token = "0x4000B50")]
		QiyuVR
	}
	[Token(Token = "0x2000235")]
	public class NVRSlider : NVRInteractable
	{
		[Token(Token = "0x4000B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public BoxCollider trackCollider;

		[Token(Token = "0x4000B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Tooltip("Set to zero when the slider is at StartPoint. Set to one when the slider is at EndPoint.")]
		public float CurrentValue;

		[Token(Token = "0x4000B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[Tooltip("A transform at the position of the zero point of the slider")]
		public Transform StartPoint;

		[Token(Token = "0x4000B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[Tooltip("A transform at the position of the one point of the slider")]
		public Transform EndPoint;

		[Token(Token = "0x4000B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected float AttachedPositionMagic;

		[Token(Token = "0x4000B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected Transform PickupTransform;

		[Token(Token = "0x4000B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected Vector3 SliderPath;

		[Token(Token = "0x6000BC2")]
		[Address(RVA = "0x958B00", Offset = "0x958B00", VA = "0x958B00", Slot = "5")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000BC3")]
		[Address(RVA = "0x958CF4", Offset = "0x958CF4", VA = "0x958CF4", Slot = "22")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6000BC4")]
		[Address(RVA = "0x95905C", Offset = "0x95905C", VA = "0x95905C", Slot = "10")]
		public override void BeginInteraction(NVRHand hand)
		{
		}

		[Token(Token = "0x6000BC5")]
		[Address(RVA = "0x9591A8", Offset = "0x9591A8", VA = "0x9591A8", Slot = "15")]
		public override void EndInteraction(NVRHand hand)
		{
		}

		[Token(Token = "0x6000BC6")]
		[Address(RVA = "0x958F68", Offset = "0x958F68", VA = "0x958F68")]
		protected Vector3 ProjectVelocityOnPath(Vector3 velocity, Vector3 path)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000BC7")]
		[Address(RVA = "0x95926C", Offset = "0x95926C", VA = "0x95926C")]
		public NVRSlider()
		{
		}
	}
	[Token(Token = "0x2000236")]
	public class NVRSwitch : MonoBehaviour
	{
		[Token(Token = "0x4000B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool CurrentState;

		[Token(Token = "0x4000B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool LastState;

		[Token(Token = "0x4000B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		private bool FixedState;

		[Token(Token = "0x4000B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform OnButton;

		[Token(Token = "0x4000B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Renderer OnButtonRenderer;

		[Token(Token = "0x4000B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform OffButton;

		[Token(Token = "0x4000B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Renderer OffButtonRenderer;

		[Token(Token = "0x4000B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Rigidbody Rigidbody;

		[Token(Token = "0x4000B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float ForceMagic;

		[Token(Token = "0x6000BC8")]
		[Address(RVA = "0x9592CC", Offset = "0x9592CC", VA = "0x9592CC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000BC9")]
		[Address(RVA = "0x9594F4", Offset = "0x9594F4", VA = "0x9594F4")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000BCA")]
		[Address(RVA = "0x9596A0", Offset = "0x9596A0", VA = "0x9596A0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BCB")]
		[Address(RVA = "0x959324", Offset = "0x959324", VA = "0x959324")]
		private void SetRotation(bool forState)
		{
		}

		[Token(Token = "0x6000BCC")]
		[Address(RVA = "0x9596B4", Offset = "0x9596B4", VA = "0x9596B4")]
		public NVRSwitch()
		{
		}
	}
	[Token(Token = "0x2000237")]
	public class NVRUIIgnoreRaycast : MonoBehaviour, ICanvasRaycastFilter
	{
		[Token(Token = "0x6000BCD")]
		[Address(RVA = "0x9596D4", Offset = "0x9596D4", VA = "0x9596D4", Slot = "4")]
		public bool IsRaycastLocationValid(Vector2 sp, Camera eventCamera)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BCE")]
		[Address(RVA = "0x9596DC", Offset = "0x9596DC", VA = "0x9596DC")]
		public NVRUIIgnoreRaycast()
		{
		}
	}
	[Token(Token = "0x2000238")]
	public class NVRUtils : MonoBehaviour
	{
		[Token(Token = "0x6000BCF")]
		[Address(RVA = "0x9596E4", Offset = "0x9596E4", VA = "0x9596E4")]
		public static float RemapNumber(float num, float low1, float high1, float low2, float high2)
		{
			return default(float);
		}

		[Token(Token = "0x6000BD0")]
		[Address(RVA = "0x959700", Offset = "0x959700", VA = "0x959700")]
		public static float RemapNumberClamped(float num, float low1, float high1, float low2, float high2)
		{
			return default(float);
		}

		[Token(Token = "0x6000BD1")]
		[Address(RVA = "0x959738", Offset = "0x959738", VA = "0x959738")]
		public NVRUtils()
		{
		}
	}
	[Token(Token = "0x2000239")]
	public class NVROculusInputDevice : NVRInputDevice
	{
		[Token(Token = "0x170000CD")]
		public override bool IsCurrentlyTracked
		{
			[Token(Token = "0x6000BD2")]
			[Address(RVA = "0x959740", Offset = "0x959740", VA = "0x959740", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000BD3")]
		[Address(RVA = "0x959780", Offset = "0x959780", VA = "0x959780", Slot = "12")]
		public override float GetAxis1D(NVRButtons button)
		{
			return default(float);
		}

		[Token(Token = "0x6000BD4")]
		[Address(RVA = "0x9597C0", Offset = "0x9597C0", VA = "0x9597C0", Slot = "13")]
		public override Vector2 GetAxis2D(NVRButtons button)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000BD5")]
		[Address(RVA = "0x959800", Offset = "0x959800", VA = "0x959800", Slot = "10")]
		public override string GetDeviceName()
		{
			return null;
		}

		[Token(Token = "0x6000BD6")]
		[Address(RVA = "0x959840", Offset = "0x959840", VA = "0x959840", Slot = "22")]
		public override bool GetNearTouch(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BD7")]
		[Address(RVA = "0x959880", Offset = "0x959880", VA = "0x959880", Slot = "20")]
		public override bool GetNearTouchDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BD8")]
		[Address(RVA = "0x9598C0", Offset = "0x9598C0", VA = "0x9598C0", Slot = "21")]
		public override bool GetNearTouchUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BD9")]
		[Address(RVA = "0x959900", Offset = "0x959900", VA = "0x959900", Slot = "16")]
		public override bool GetPress(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BDA")]
		[Address(RVA = "0x959940", Offset = "0x959940", VA = "0x959940", Slot = "14")]
		public override bool GetPressDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BDB")]
		[Address(RVA = "0x959980", Offset = "0x959980", VA = "0x959980", Slot = "15")]
		public override bool GetPressUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BDC")]
		[Address(RVA = "0x9599C0", Offset = "0x9599C0", VA = "0x9599C0", Slot = "19")]
		public override bool GetTouch(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BDD")]
		[Address(RVA = "0x959A00", Offset = "0x959A00", VA = "0x959A00", Slot = "17")]
		public override bool GetTouchDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BDE")]
		[Address(RVA = "0x959A40", Offset = "0x959A40", VA = "0x959A40", Slot = "18")]
		public override bool GetTouchUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BDF")]
		[Address(RVA = "0x959A80", Offset = "0x959A80", VA = "0x959A80", Slot = "8")]
		public override bool ReadyToInitialize()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BE0")]
		[Address(RVA = "0x959AC0", Offset = "0x959AC0", VA = "0x959AC0", Slot = "9")]
		public override Collider[] SetupDefaultColliders()
		{
			return null;
		}

		[Token(Token = "0x6000BE1")]
		[Address(RVA = "0x959B00", Offset = "0x959B00", VA = "0x959B00", Slot = "6")]
		public override Collider[] SetupDefaultPhysicalColliders(Transform ModelParent)
		{
			return null;
		}

		[Token(Token = "0x6000BE2")]
		[Address(RVA = "0x959B40", Offset = "0x959B40", VA = "0x959B40", Slot = "7")]
		public override GameObject SetupDefaultRenderModel()
		{
			return null;
		}

		[Token(Token = "0x6000BE3")]
		[Address(RVA = "0x959B80", Offset = "0x959B80", VA = "0x959B80", Slot = "11")]
		public override void TriggerHapticPulse(ushort durationMicroSec = 500, NVRButtons button = NVRButtons.Touchpad)
		{
		}

		[Token(Token = "0x6000BE4")]
		[Address(RVA = "0x959BC0", Offset = "0x959BC0", VA = "0x959BC0")]
		public NVROculusInputDevice()
		{
		}
	}
	[Token(Token = "0x200023A")]
	public class NVROculusIntegration : NVRIntegration
	{
		[Token(Token = "0x6000BE5")]
		[Address(RVA = "0x959BC8", Offset = "0x959BC8", VA = "0x959BC8", Slot = "4")]
		public override void Initialize(NVRPlayer player)
		{
		}

		[Token(Token = "0x6000BE6")]
		[Address(RVA = "0x959BCC", Offset = "0x959BCC", VA = "0x959BCC", Slot = "5")]
		public override Vector3 GetPlayspaceBounds()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000BE7")]
		[Address(RVA = "0x959C10", Offset = "0x959C10", VA = "0x959C10", Slot = "6")]
		public override bool IsHmdPresent()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BE8")]
		[Address(RVA = "0x957CCC", Offset = "0x957CCC", VA = "0x957CCC")]
		public NVROculusIntegration()
		{
		}
	}
	[Token(Token = "0x200023B")]
	public class NVRPicoInputDevice : NVRInputDevice
	{
		[Token(Token = "0x4000B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private InputDevice Controller;

		[Token(Token = "0x4000B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<NVRButtons, InputButton> ButtonMappingBoolean;

		[Token(Token = "0x4000B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<NVRButtons, InputFeatureUsage<float>> ButtonMappingSingle;

		[Token(Token = "0x4000B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<InputButton> InputButtons;

		[Token(Token = "0x170000CE")]
		public override bool IsCurrentlyTracked
		{
			[Token(Token = "0x6000BEF")]
			[Address(RVA = "0x95A35C", Offset = "0x95A35C", VA = "0x95A35C", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000BE9")]
		[Address(RVA = "0x959C18", Offset = "0x959C18", VA = "0x959C18", Slot = "4")]
		public override void Initialize(NVRHand hand)
		{
		}

		[Token(Token = "0x6000BEA")]
		[Address(RVA = "0x959CD4", Offset = "0x959CD4", VA = "0x959CD4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000BEB")]
		[Address(RVA = "0x959D54", Offset = "0x959D54", VA = "0x959D54")]
		private void OnDeviceConnected(InputDevice inputDevice)
		{
		}

		[Token(Token = "0x6000BEC")]
		[Address(RVA = "0x959DC4", Offset = "0x959DC4", VA = "0x959DC4", Slot = "23")]
		protected virtual void SetupButtonMapping()
		{
		}

		[Token(Token = "0x6000BED")]
		[Address(RVA = "0x95A17C", Offset = "0x95A17C", VA = "0x95A17C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BEE")]
		[Address(RVA = "0x95A180", Offset = "0x95A180", VA = "0x95A180")]
		private void ProcessInputButtons()
		{
		}

		[Token(Token = "0x6000BF0")]
		[Address(RVA = "0x95A368", Offset = "0x95A368", VA = "0x95A368")]
		private InputButton GetBooleanButton(NVRButtons button)
		{
			return null;
		}

		[Token(Token = "0x6000BF1")]
		[Address(RVA = "0x95A3E0", Offset = "0x95A3E0", VA = "0x95A3E0", Slot = "12")]
		public override float GetAxis1D(NVRButtons button)
		{
			return default(float);
		}

		[Token(Token = "0x6000BF2")]
		[Address(RVA = "0x95A47C", Offset = "0x95A47C", VA = "0x95A47C", Slot = "13")]
		public override Vector2 GetAxis2D(NVRButtons button)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000BF3")]
		[Address(RVA = "0x95A4BC", Offset = "0x95A4BC", VA = "0x95A4BC", Slot = "10")]
		public override string GetDeviceName()
		{
			return null;
		}

		[Token(Token = "0x6000BF4")]
		[Address(RVA = "0x95A5A4", Offset = "0x95A5A4", VA = "0x95A5A4", Slot = "22")]
		public override bool GetNearTouch(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BF5")]
		[Address(RVA = "0x95A5AC", Offset = "0x95A5AC", VA = "0x95A5AC", Slot = "20")]
		public override bool GetNearTouchDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BF6")]
		[Address(RVA = "0x95A5B4", Offset = "0x95A5B4", VA = "0x95A5B4", Slot = "21")]
		public override bool GetNearTouchUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BF7")]
		[Address(RVA = "0x95A5BC", Offset = "0x95A5BC", VA = "0x95A5BC", Slot = "16")]
		public override bool GetPress(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BF8")]
		[Address(RVA = "0x95A5DC", Offset = "0x95A5DC", VA = "0x95A5DC", Slot = "14")]
		public override bool GetPressDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BF9")]
		[Address(RVA = "0x95A5FC", Offset = "0x95A5FC", VA = "0x95A5FC", Slot = "15")]
		public override bool GetPressUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BFA")]
		[Address(RVA = "0x95A61C", Offset = "0x95A61C", VA = "0x95A61C", Slot = "19")]
		public override bool GetTouch(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BFB")]
		[Address(RVA = "0x95A624", Offset = "0x95A624", VA = "0x95A624", Slot = "17")]
		public override bool GetTouchDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BFC")]
		[Address(RVA = "0x95A62C", Offset = "0x95A62C", VA = "0x95A62C", Slot = "18")]
		public override bool GetTouchUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BFD")]
		[Address(RVA = "0x95A634", Offset = "0x95A634", VA = "0x95A634", Slot = "8")]
		public override bool ReadyToInitialize()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BFE")]
		[Address(RVA = "0x95A640", Offset = "0x95A640", VA = "0x95A640", Slot = "9")]
		public override Collider[] SetupDefaultColliders()
		{
			return null;
		}

		[Token(Token = "0x6000BFF")]
		[Address(RVA = "0x95A648", Offset = "0x95A648", VA = "0x95A648", Slot = "6")]
		public override Collider[] SetupDefaultPhysicalColliders(Transform ModelParent)
		{
			return null;
		}

		[Token(Token = "0x6000C00")]
		[Address(RVA = "0x95A650", Offset = "0x95A650", VA = "0x95A650", Slot = "7")]
		public override GameObject SetupDefaultRenderModel()
		{
			return null;
		}

		[Token(Token = "0x6000C01")]
		[Address(RVA = "0x95A658", Offset = "0x95A658", VA = "0x95A658", Slot = "11")]
		public override void TriggerHapticPulse(ushort durationMicroSec = 500, NVRButtons button = NVRButtons.Touchpad)
		{
		}

		[Token(Token = "0x6000C02")]
		[Address(RVA = "0x95A680", Offset = "0x95A680", VA = "0x95A680")]
		public NVRPicoInputDevice()
		{
		}
	}
	[Token(Token = "0x200023C")]
	internal class InputButton
	{
		[Token(Token = "0x4000B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public InputFeatureUsage<bool> usage;

		[Token(Token = "0x4000B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool IsPressed;

		[Token(Token = "0x4000B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool PressReleased;

		[Token(Token = "0x4000B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool PressDown;

		[Token(Token = "0x6000C03")]
		[Address(RVA = "0x95A154", Offset = "0x95A154", VA = "0x95A154")]
		public InputButton(InputFeatureUsage<bool> usage)
		{
		}

		[Token(Token = "0x6000C04")]
		[Address(RVA = "0x95A324", Offset = "0x95A324", VA = "0x95A324")]
		public void SetPressState(bool value)
		{
		}
	}
	[Token(Token = "0x200023D")]
	public class NVRPicoIntegration : NVRIntegration
	{
		[Token(Token = "0x6000C05")]
		[Address(RVA = "0x95A7E4", Offset = "0x95A7E4", VA = "0x95A7E4", Slot = "5")]
		public override Vector3 GetPlayspaceBounds()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C06")]
		[Address(RVA = "0x95A828", Offset = "0x95A828", VA = "0x95A828", Slot = "4")]
		public override void Initialize(NVRPlayer player)
		{
		}

		[Token(Token = "0x6000C07")]
		[Address(RVA = "0x95AA34", Offset = "0x95AA34", VA = "0x95AA34", Slot = "6")]
		public override bool IsHmdPresent()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C08")]
		[Address(RVA = "0x957CFC", Offset = "0x957CFC", VA = "0x957CFC")]
		public NVRPicoIntegration()
		{
		}
	}
	[Token(Token = "0x200023E")]
	public class NVRPSVRInputDevice : NVRInputDevice
	{
		[Token(Token = "0x170000CF")]
		public override bool IsCurrentlyTracked
		{
			[Token(Token = "0x6000C09")]
			[Address(RVA = "0x95AA3C", Offset = "0x95AA3C", VA = "0x95AA3C", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000C0A")]
		[Address(RVA = "0x95AAB8", Offset = "0x95AAB8", VA = "0x95AAB8", Slot = "12")]
		public override float GetAxis1D(NVRButtons button)
		{
			return default(float);
		}

		[Token(Token = "0x6000C0B")]
		[Address(RVA = "0x95AACC", Offset = "0x95AACC", VA = "0x95AACC", Slot = "13")]
		public override Vector2 GetAxis2D(NVRButtons button)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000C0C")]
		[Address(RVA = "0x95AB10", Offset = "0x95AB10", VA = "0x95AB10", Slot = "10")]
		public override string GetDeviceName()
		{
			return null;
		}

		[Token(Token = "0x6000C0D")]
		[Address(RVA = "0x95AB54", Offset = "0x95AB54", VA = "0x95AB54", Slot = "22")]
		public override bool GetNearTouch(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C0E")]
		[Address(RVA = "0x95AB68", Offset = "0x95AB68", VA = "0x95AB68", Slot = "20")]
		public override bool GetNearTouchDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C0F")]
		[Address(RVA = "0x95AB7C", Offset = "0x95AB7C", VA = "0x95AB7C", Slot = "21")]
		public override bool GetNearTouchUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C10")]
		[Address(RVA = "0x95AB90", Offset = "0x95AB90", VA = "0x95AB90", Slot = "16")]
		public override bool GetPress(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C11")]
		[Address(RVA = "0x95ABA4", Offset = "0x95ABA4", VA = "0x95ABA4", Slot = "14")]
		public override bool GetPressDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C12")]
		[Address(RVA = "0x95ABB8", Offset = "0x95ABB8", VA = "0x95ABB8", Slot = "15")]
		public override bool GetPressUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C13")]
		[Address(RVA = "0x95ABCC", Offset = "0x95ABCC", VA = "0x95ABCC", Slot = "19")]
		public override bool GetTouch(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C14")]
		[Address(RVA = "0x95ABE0", Offset = "0x95ABE0", VA = "0x95ABE0", Slot = "17")]
		public override bool GetTouchDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C15")]
		[Address(RVA = "0x95ABF4", Offset = "0x95ABF4", VA = "0x95ABF4", Slot = "18")]
		public override bool GetTouchUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C16")]
		[Address(RVA = "0x95AC08", Offset = "0x95AC08", VA = "0x95AC08", Slot = "8")]
		public override bool ReadyToInitialize()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C17")]
		[Address(RVA = "0x95AC1C", Offset = "0x95AC1C", VA = "0x95AC1C", Slot = "9")]
		public override Collider[] SetupDefaultColliders()
		{
			return null;
		}

		[Token(Token = "0x6000C18")]
		[Address(RVA = "0x95AC30", Offset = "0x95AC30", VA = "0x95AC30", Slot = "6")]
		public override Collider[] SetupDefaultPhysicalColliders(Transform ModelParent)
		{
			return null;
		}

		[Token(Token = "0x6000C19")]
		[Address(RVA = "0x95AC44", Offset = "0x95AC44", VA = "0x95AC44", Slot = "7")]
		public override GameObject SetupDefaultRenderModel()
		{
			return null;
		}

		[Token(Token = "0x6000C1A")]
		[Address(RVA = "0x95AC58", Offset = "0x95AC58", VA = "0x95AC58", Slot = "11")]
		public override void TriggerHapticPulse(ushort durationMicroSec = 500, NVRButtons button = NVRButtons.Touchpad)
		{
		}

		[Token(Token = "0x6000C1B")]
		[Address(RVA = "0x95AA50", Offset = "0x95AA50", VA = "0x95AA50")]
		private void PrintNotEnabledError()
		{
		}

		[Token(Token = "0x6000C1C")]
		[Address(RVA = "0x95AC5C", Offset = "0x95AC5C", VA = "0x95AC5C")]
		public NVRPSVRInputDevice()
		{
		}
	}
	[Token(Token = "0x200023F")]
	public class NVRPSVRIntegration : NVRIntegration
	{
		[Token(Token = "0x6000C1D")]
		[Address(RVA = "0x95AC64", Offset = "0x95AC64", VA = "0x95AC64", Slot = "4")]
		public override void Initialize(NVRPlayer player)
		{
		}

		[Token(Token = "0x6000C1E")]
		[Address(RVA = "0x95AC68", Offset = "0x95AC68", VA = "0x95AC68", Slot = "5")]
		public override Vector3 GetPlayspaceBounds()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C1F")]
		[Address(RVA = "0x95ACAC", Offset = "0x95ACAC", VA = "0x95ACAC", Slot = "6")]
		public override bool IsHmdPresent()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C20")]
		[Address(RVA = "0x957CEC", Offset = "0x957CEC", VA = "0x957CEC")]
		public NVRPSVRIntegration()
		{
		}
	}
	[Token(Token = "0x2000240")]
	public class NVRQiyuVRInputDevice : NVRInputDevice
	{
		[Token(Token = "0x170000D0")]
		public override bool IsCurrentlyTracked
		{
			[Token(Token = "0x6000C21")]
			[Address(RVA = "0x95ACB4", Offset = "0x95ACB4", VA = "0x95ACB4", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000C22")]
		[Address(RVA = "0x95ACF4", Offset = "0x95ACF4", VA = "0x95ACF4", Slot = "12")]
		public override float GetAxis1D(NVRButtons button)
		{
			return default(float);
		}

		[Token(Token = "0x6000C23")]
		[Address(RVA = "0x95AD34", Offset = "0x95AD34", VA = "0x95AD34", Slot = "13")]
		public override Vector2 GetAxis2D(NVRButtons button)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000C24")]
		[Address(RVA = "0x95AD74", Offset = "0x95AD74", VA = "0x95AD74", Slot = "10")]
		public override string GetDeviceName()
		{
			return null;
		}

		[Token(Token = "0x6000C25")]
		[Address(RVA = "0x95ADB4", Offset = "0x95ADB4", VA = "0x95ADB4", Slot = "22")]
		public override bool GetNearTouch(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C26")]
		[Address(RVA = "0x95ADF4", Offset = "0x95ADF4", VA = "0x95ADF4", Slot = "20")]
		public override bool GetNearTouchDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C27")]
		[Address(RVA = "0x95AE34", Offset = "0x95AE34", VA = "0x95AE34", Slot = "21")]
		public override bool GetNearTouchUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C28")]
		[Address(RVA = "0x95AE74", Offset = "0x95AE74", VA = "0x95AE74", Slot = "16")]
		public override bool GetPress(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C29")]
		[Address(RVA = "0x95AEB4", Offset = "0x95AEB4", VA = "0x95AEB4", Slot = "14")]
		public override bool GetPressDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C2A")]
		[Address(RVA = "0x95AEF4", Offset = "0x95AEF4", VA = "0x95AEF4", Slot = "15")]
		public override bool GetPressUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C2B")]
		[Address(RVA = "0x95AF34", Offset = "0x95AF34", VA = "0x95AF34", Slot = "19")]
		public override bool GetTouch(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C2C")]
		[Address(RVA = "0x95AF74", Offset = "0x95AF74", VA = "0x95AF74", Slot = "17")]
		public override bool GetTouchDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C2D")]
		[Address(RVA = "0x95AFB4", Offset = "0x95AFB4", VA = "0x95AFB4", Slot = "18")]
		public override bool GetTouchUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C2E")]
		[Address(RVA = "0x95AFF4", Offset = "0x95AFF4", VA = "0x95AFF4", Slot = "8")]
		public override bool ReadyToInitialize()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C2F")]
		[Address(RVA = "0x95B034", Offset = "0x95B034", VA = "0x95B034", Slot = "9")]
		public override Collider[] SetupDefaultColliders()
		{
			return null;
		}

		[Token(Token = "0x6000C30")]
		[Address(RVA = "0x95B074", Offset = "0x95B074", VA = "0x95B074", Slot = "6")]
		public override Collider[] SetupDefaultPhysicalColliders(Transform ModelParent)
		{
			return null;
		}

		[Token(Token = "0x6000C31")]
		[Address(RVA = "0x95B0B4", Offset = "0x95B0B4", VA = "0x95B0B4", Slot = "7")]
		public override GameObject SetupDefaultRenderModel()
		{
			return null;
		}

		[Token(Token = "0x6000C32")]
		[Address(RVA = "0x95B0F4", Offset = "0x95B0F4", VA = "0x95B0F4", Slot = "11")]
		public override void TriggerHapticPulse(ushort durationMicroSec = 500, NVRButtons button = NVRButtons.Touchpad)
		{
		}

		[Token(Token = "0x6000C33")]
		[Address(RVA = "0x95B134", Offset = "0x95B134", VA = "0x95B134")]
		public NVRQiyuVRInputDevice()
		{
		}
	}
	[Token(Token = "0x2000241")]
	public class NVRQiyuVRIntegration : NVRIntegration
	{
		[Token(Token = "0x6000C34")]
		[Address(RVA = "0x95B13C", Offset = "0x95B13C", VA = "0x95B13C", Slot = "4")]
		public override void Initialize(NVRPlayer player)
		{
		}

		[Token(Token = "0x6000C35")]
		[Address(RVA = "0x95B140", Offset = "0x95B140", VA = "0x95B140", Slot = "5")]
		public override Vector3 GetPlayspaceBounds()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C36")]
		[Address(RVA = "0x95B184", Offset = "0x95B184", VA = "0x95B184", Slot = "6")]
		public override bool IsHmdPresent()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C37")]
		[Address(RVA = "0x957D1C", Offset = "0x957D1C", VA = "0x957D1C")]
		public NVRQiyuVRIntegration()
		{
		}
	}
	[Token(Token = "0x2000242")]
	public class NVRSteamVRInputDevice : NVRInputDevice
	{
		[Token(Token = "0x170000D1")]
		public override bool IsCurrentlyTracked
		{
			[Token(Token = "0x6000C38")]
			[Address(RVA = "0x95B18C", Offset = "0x95B18C", VA = "0x95B18C", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000C39")]
		[Address(RVA = "0x95B208", Offset = "0x95B208", VA = "0x95B208", Slot = "12")]
		public override float GetAxis1D(NVRButtons button)
		{
			return default(float);
		}

		[Token(Token = "0x6000C3A")]
		[Address(RVA = "0x95B21C", Offset = "0x95B21C", VA = "0x95B21C", Slot = "13")]
		public override Vector2 GetAxis2D(NVRButtons button)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000C3B")]
		[Address(RVA = "0x95B260", Offset = "0x95B260", VA = "0x95B260", Slot = "10")]
		public override string GetDeviceName()
		{
			return null;
		}

		[Token(Token = "0x6000C3C")]
		[Address(RVA = "0x95B2A4", Offset = "0x95B2A4", VA = "0x95B2A4", Slot = "22")]
		public override bool GetNearTouch(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C3D")]
		[Address(RVA = "0x95B2B8", Offset = "0x95B2B8", VA = "0x95B2B8", Slot = "20")]
		public override bool GetNearTouchDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C3E")]
		[Address(RVA = "0x95B2CC", Offset = "0x95B2CC", VA = "0x95B2CC", Slot = "21")]
		public override bool GetNearTouchUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C3F")]
		[Address(RVA = "0x95B2E0", Offset = "0x95B2E0", VA = "0x95B2E0", Slot = "16")]
		public override bool GetPress(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C40")]
		[Address(RVA = "0x95B2F4", Offset = "0x95B2F4", VA = "0x95B2F4", Slot = "14")]
		public override bool GetPressDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C41")]
		[Address(RVA = "0x95B308", Offset = "0x95B308", VA = "0x95B308", Slot = "15")]
		public override bool GetPressUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C42")]
		[Address(RVA = "0x95B31C", Offset = "0x95B31C", VA = "0x95B31C", Slot = "19")]
		public override bool GetTouch(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C43")]
		[Address(RVA = "0x95B330", Offset = "0x95B330", VA = "0x95B330", Slot = "17")]
		public override bool GetTouchDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C44")]
		[Address(RVA = "0x95B344", Offset = "0x95B344", VA = "0x95B344", Slot = "18")]
		public override bool GetTouchUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C45")]
		[Address(RVA = "0x95B358", Offset = "0x95B358", VA = "0x95B358", Slot = "8")]
		public override bool ReadyToInitialize()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C46")]
		[Address(RVA = "0x95B36C", Offset = "0x95B36C", VA = "0x95B36C", Slot = "9")]
		public override Collider[] SetupDefaultColliders()
		{
			return null;
		}

		[Token(Token = "0x6000C47")]
		[Address(RVA = "0x95B380", Offset = "0x95B380", VA = "0x95B380", Slot = "6")]
		public override Collider[] SetupDefaultPhysicalColliders(Transform ModelParent)
		{
			return null;
		}

		[Token(Token = "0x6000C48")]
		[Address(RVA = "0x95B394", Offset = "0x95B394", VA = "0x95B394", Slot = "7")]
		public override GameObject SetupDefaultRenderModel()
		{
			return null;
		}

		[Token(Token = "0x6000C49")]
		[Address(RVA = "0x95B3A8", Offset = "0x95B3A8", VA = "0x95B3A8", Slot = "11")]
		public override void TriggerHapticPulse(ushort durationMicroSec = 500, NVRButtons button = NVRButtons.Touchpad)
		{
		}

		[Token(Token = "0x6000C4A")]
		[Address(RVA = "0x95B1A0", Offset = "0x95B1A0", VA = "0x95B1A0")]
		private void PrintNotEnabledError()
		{
		}

		[Token(Token = "0x6000C4B")]
		[Address(RVA = "0x95B3AC", Offset = "0x95B3AC", VA = "0x95B3AC")]
		public NVRSteamVRInputDevice()
		{
		}
	}
	[Token(Token = "0x2000243")]
	public class NVRSteamVRIntegration : NVRIntegration
	{
		[Token(Token = "0x6000C4C")]
		[Address(RVA = "0x95B3B4", Offset = "0x95B3B4", VA = "0x95B3B4", Slot = "4")]
		public override void Initialize(NVRPlayer player)
		{
		}

		[Token(Token = "0x6000C4D")]
		[Address(RVA = "0x95B3B8", Offset = "0x95B3B8", VA = "0x95B3B8", Slot = "5")]
		public override Vector3 GetPlayspaceBounds()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C4E")]
		[Address(RVA = "0x95B3FC", Offset = "0x95B3FC", VA = "0x95B3FC", Slot = "6")]
		public override bool IsHmdPresent()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C4F")]
		[Address(RVA = "0x957CDC", Offset = "0x957CDC", VA = "0x957CDC")]
		public NVRSteamVRIntegration()
		{
		}
	}
	[Token(Token = "0x2000244")]
	public class NVRYVRInputDevice : NVRInputDevice
	{
		[Token(Token = "0x170000D2")]
		public override bool IsCurrentlyTracked
		{
			[Token(Token = "0x6000C50")]
			[Address(RVA = "0x95B404", Offset = "0x95B404", VA = "0x95B404", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000C51")]
		[Address(RVA = "0x95B444", Offset = "0x95B444", VA = "0x95B444", Slot = "12")]
		public override float GetAxis1D(NVRButtons button)
		{
			return default(float);
		}

		[Token(Token = "0x6000C52")]
		[Address(RVA = "0x95B484", Offset = "0x95B484", VA = "0x95B484", Slot = "13")]
		public override Vector2 GetAxis2D(NVRButtons button)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000C53")]
		[Address(RVA = "0x95B4C4", Offset = "0x95B4C4", VA = "0x95B4C4", Slot = "10")]
		public override string GetDeviceName()
		{
			return null;
		}

		[Token(Token = "0x6000C54")]
		[Address(RVA = "0x95B504", Offset = "0x95B504", VA = "0x95B504", Slot = "22")]
		public override bool GetNearTouch(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C55")]
		[Address(RVA = "0x95B544", Offset = "0x95B544", VA = "0x95B544", Slot = "20")]
		public override bool GetNearTouchDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C56")]
		[Address(RVA = "0x95B584", Offset = "0x95B584", VA = "0x95B584", Slot = "21")]
		public override bool GetNearTouchUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C57")]
		[Address(RVA = "0x95B5C4", Offset = "0x95B5C4", VA = "0x95B5C4", Slot = "16")]
		public override bool GetPress(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C58")]
		[Address(RVA = "0x95B604", Offset = "0x95B604", VA = "0x95B604", Slot = "14")]
		public override bool GetPressDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C59")]
		[Address(RVA = "0x95B644", Offset = "0x95B644", VA = "0x95B644", Slot = "15")]
		public override bool GetPressUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C5A")]
		[Address(RVA = "0x95B684", Offset = "0x95B684", VA = "0x95B684", Slot = "19")]
		public override bool GetTouch(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C5B")]
		[Address(RVA = "0x95B6C4", Offset = "0x95B6C4", VA = "0x95B6C4", Slot = "17")]
		public override bool GetTouchDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C5C")]
		[Address(RVA = "0x95B704", Offset = "0x95B704", VA = "0x95B704", Slot = "18")]
		public override bool GetTouchUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C5D")]
		[Address(RVA = "0x95B744", Offset = "0x95B744", VA = "0x95B744", Slot = "8")]
		public override bool ReadyToInitialize()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C5E")]
		[Address(RVA = "0x95B784", Offset = "0x95B784", VA = "0x95B784", Slot = "9")]
		public override Collider[] SetupDefaultColliders()
		{
			return null;
		}

		[Token(Token = "0x6000C5F")]
		[Address(RVA = "0x95B7C4", Offset = "0x95B7C4", VA = "0x95B7C4", Slot = "6")]
		public override Collider[] SetupDefaultPhysicalColliders(Transform ModelParent)
		{
			return null;
		}

		[Token(Token = "0x6000C60")]
		[Address(RVA = "0x95B804", Offset = "0x95B804", VA = "0x95B804", Slot = "7")]
		public override GameObject SetupDefaultRenderModel()
		{
			return null;
		}

		[Token(Token = "0x6000C61")]
		[Address(RVA = "0x95B844", Offset = "0x95B844", VA = "0x95B844", Slot = "11")]
		public override void TriggerHapticPulse(ushort durationMicroSec = 500, NVRButtons button = NVRButtons.Touchpad)
		{
		}

		[Token(Token = "0x6000C62")]
		[Address(RVA = "0x95B884", Offset = "0x95B884", VA = "0x95B884")]
		public NVRYVRInputDevice()
		{
		}
	}
	[Token(Token = "0x2000245")]
	public class NVRYVRIntegration : NVRIntegration
	{
		[Token(Token = "0x6000C63")]
		[Address(RVA = "0x95B88C", Offset = "0x95B88C", VA = "0x95B88C", Slot = "5")]
		public override Vector3 GetPlayspaceBounds()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C64")]
		[Address(RVA = "0x95B8D0", Offset = "0x95B8D0", VA = "0x95B8D0", Slot = "4")]
		public override void Initialize(NVRPlayer player)
		{
		}

		[Token(Token = "0x6000C65")]
		[Address(RVA = "0x95B8D4", Offset = "0x95B8D4", VA = "0x95B8D4", Slot = "6")]
		public override bool IsHmdPresent()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C66")]
		[Address(RVA = "0x957D0C", Offset = "0x957D0C", VA = "0x957D0C")]
		public NVRYVRIntegration()
		{
		}
	}
}
namespace NewtonVR.Example
{
	[Token(Token = "0x2000246")]
	public class NVRExampleButtonDropSphere : MonoBehaviour
	{
		[Token(Token = "0x6000C67")]
		[Address(RVA = "0x95B8DC", Offset = "0x95B8DC", VA = "0x95B8DC")]
		public void DropSphere()
		{
		}

		[Token(Token = "0x6000C68")]
		[Address(RVA = "0x95B9EC", Offset = "0x95B9EC", VA = "0x95B9EC")]
		public NVRExampleButtonDropSphere()
		{
		}
	}
	[Token(Token = "0x2000247")]
	public class NVRExampleButtonResetScene : MonoBehaviour
	{
		[Token(Token = "0x6000C69")]
		[Address(RVA = "0x95B9F4", Offset = "0x95B9F4", VA = "0x95B9F4")]
		public void ResetScene()
		{
		}

		[Token(Token = "0x6000C6A")]
		[Address(RVA = "0x95BA64", Offset = "0x95BA64", VA = "0x95BA64")]
		public NVRExampleButtonResetScene()
		{
		}
	}
	[Token(Token = "0x2000248")]
	public class NVRExampleColorLever : MonoBehaviour
	{
		[Token(Token = "0x4000B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color From;

		[Token(Token = "0x4000B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color To;

		[Token(Token = "0x4000B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Renderer Result;

		[Token(Token = "0x4000B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public NVRLever Lever;

		[Token(Token = "0x6000C6B")]
		[Address(RVA = "0x95BA6C", Offset = "0x95BA6C", VA = "0x95BA6C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C6C")]
		[Address(RVA = "0x95BAD8", Offset = "0x95BAD8", VA = "0x95BAD8")]
		public NVRExampleColorLever()
		{
		}
	}
	[Token(Token = "0x2000249")]
	public class NVRExampleColorSlider : MonoBehaviour
	{
		[Token(Token = "0x4000B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color From;

		[Token(Token = "0x4000B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color To;

		[Token(Token = "0x4000B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Renderer Result;

		[Token(Token = "0x4000B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public NVRSlider Slider;

		[Token(Token = "0x6000C6D")]
		[Address(RVA = "0x95BAE0", Offset = "0x95BAE0", VA = "0x95BAE0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C6E")]
		[Address(RVA = "0x95BB4C", Offset = "0x95BB4C", VA = "0x95BB4C")]
		public NVRExampleColorSlider()
		{
		}
	}
	[Token(Token = "0x200024A")]
	public class NVRExampleDegreeResult : MonoBehaviour
	{
		[Token(Token = "0x4000B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public NVRInteractableItem Knob;

		[Token(Token = "0x4000B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextMesh Text;

		[Token(Token = "0x6000C6F")]
		[Address(RVA = "0x95BB54", Offset = "0x95BB54", VA = "0x95BB54")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C70")]
		[Address(RVA = "0x95BBA4", Offset = "0x95BBA4", VA = "0x95BBA4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C71")]
		[Address(RVA = "0x95BC20", Offset = "0x95BC20", VA = "0x95BC20")]
		public NVRExampleDegreeResult()
		{
		}
	}
	[Token(Token = "0x200024B")]
	public class NVRExampleEvent : MonoBehaviour
	{
		[Token(Token = "0x6000C72")]
		[Address(RVA = "0x95BC28", Offset = "0x95BC28", VA = "0x95BC28")]
		public void Duplicate()
		{
		}

		[Token(Token = "0x6000C73")]
		[Address(RVA = "0x95BD18", Offset = "0x95BD18", VA = "0x95BD18")]
		public NVRExampleEvent()
		{
		}
	}
	[Token(Token = "0x200024C")]
	public class NVRExampleGrower : NVRInteractableItem
	{
		[Token(Token = "0x6000C74")]
		[Address(RVA = "0x95BD20", Offset = "0x95BD20", VA = "0x95BD20", Slot = "11")]
		public override void InteractingUpdate(NVRHand hand)
		{
		}

		[Token(Token = "0x6000C75")]
		[Address(RVA = "0x95BF90", Offset = "0x95BF90", VA = "0x95BF90")]
		public NVRExampleGrower()
		{
		}
	}
	[Token(Token = "0x200024D")]
	public class NVRExampleGun : NVRInteractableItem
	{
		[Token(Token = "0x4000B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public GameObject BulletPrefab;

		[Token(Token = "0x4000B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public Transform FirePoint;

		[Token(Token = "0x4000B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public Vector3 BulletDirection;

		[Token(Token = "0x4000B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		public float BulletForce;

		[Token(Token = "0x6000C76")]
		[Address(RVA = "0x95BF94", Offset = "0x95BF94", VA = "0x95BF94", Slot = "18")]
		public override void UseButtonDown()
		{
		}

		[Token(Token = "0x6000C77")]
		[Address(RVA = "0x95C0F8", Offset = "0x95C0F8", VA = "0x95C0F8")]
		public NVRExampleGun()
		{
		}
	}
	[Token(Token = "0x200024E")]
	public class NVRExampleLaserPointer : MonoBehaviour
	{
		[Token(Token = "0x4000B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color LineColor;

		[Token(Token = "0x4000B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float LineWidth;

		[Token(Token = "0x4000B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool ForceLineVisible;

		[Token(Token = "0x4000B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		public bool OnlyVisibleOnTrigger;

		[Token(Token = "0x4000B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private LineRenderer Line;

		[Token(Token = "0x4000B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private NVRHand Hand;

		[Token(Token = "0x6000C78")]
		[Address(RVA = "0x95C104", Offset = "0x95C104", VA = "0x95C104")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C79")]
		[Address(RVA = "0x95C310", Offset = "0x95C310", VA = "0x95C310")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000C7A")]
		[Address(RVA = "0x95C5F8", Offset = "0x95C5F8", VA = "0x95C5F8")]
		public NVRExampleLaserPointer()
		{
		}
	}
	[Token(Token = "0x200024F")]
	public class NVRExampleLetterResult : MonoBehaviour
	{
		[Token(Token = "0x4000B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public NVRLetterSpinner LetterSpinner;

		[Token(Token = "0x4000B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextMesh Text;

		[Token(Token = "0x6000C7B")]
		[Address(RVA = "0x95C614", Offset = "0x95C614", VA = "0x95C614")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C7C")]
		[Address(RVA = "0x95C664", Offset = "0x95C664", VA = "0x95C664")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C7D")]
		[Address(RVA = "0x95C698", Offset = "0x95C698", VA = "0x95C698")]
		public NVRExampleLetterResult()
		{
		}
	}
	[Token(Token = "0x2000250")]
	public class NVRExampleLeverResultRocket : MonoBehaviour
	{
		[Token(Token = "0x2000251")]
		[CompilerGenerated]
		private sealed class <DoBlastOff>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000B82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000B83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000B84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NVRExampleLeverResultRocket <>4__this;

			[Token(Token = "0x170000D3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000C86")]
				[Address(RVA = "0x95C924", Offset = "0x95C924", VA = "0x95C924", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000D4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000C88")]
				[Address(RVA = "0x95C96C", Offset = "0x95C96C", VA = "0x95C96C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000C83")]
			[Address(RVA = "0x95C7CC", Offset = "0x95C7CC", VA = "0x95C7CC")]
			[DebuggerHidden]
			public <DoBlastOff>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x6000C84")]
			[Address(RVA = "0x95C824", Offset = "0x95C824", VA = "0x95C824", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000C85")]
			[Address(RVA = "0x95C828", Offset = "0x95C828", VA = "0x95C828", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000C87")]
			[Address(RVA = "0x95C92C", Offset = "0x95C92C", VA = "0x95C92C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000252")]
		[CompilerGenerated]
		private sealed class <DoSpawnShip>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000B85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000B86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000B87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NVRExampleLeverResultRocket <>4__this;

			[Token(Token = "0x4000B88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <startScale>5__2;

			[Token(Token = "0x4000B89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Vector3 <endScale>5__3;

			[Token(Token = "0x4000B8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <startTime>5__4;

			[Token(Token = "0x4000B8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float <overTime>5__5;

			[Token(Token = "0x4000B8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <stopTime>5__6;

			[Token(Token = "0x170000D5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000C8C")]
				[Address(RVA = "0x95CC88", Offset = "0x95CC88", VA = "0x95CC88", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000D6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000C8E")]
				[Address(RVA = "0x95CCD0", Offset = "0x95CCD0", VA = "0x95CCD0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000C89")]
			[Address(RVA = "0x95C7F4", Offset = "0x95C7F4", VA = "0x95C7F4")]
			[DebuggerHidden]
			public <DoSpawnShip>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6000C8A")]
			[Address(RVA = "0x95C974", Offset = "0x95C974", VA = "0x95C974", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000C8B")]
			[Address(RVA = "0x95C978", Offset = "0x95C978", VA = "0x95C978", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000C8D")]
			[Address(RVA = "0x95CC90", Offset = "0x95CC90", VA = "0x95CC90", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject RocketPrefab;

		[Token(Token = "0x4000B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NVRLever Control;

		[Token(Token = "0x4000B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject RocketInstance;

		[Token(Token = "0x6000C7E")]
		[Address(RVA = "0x95C6A0", Offset = "0x95C6A0", VA = "0x95C6A0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C7F")]
		[Address(RVA = "0x95C728", Offset = "0x95C728", VA = "0x95C728")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C80")]
		[Address(RVA = "0x95C764", Offset = "0x95C764", VA = "0x95C764")]
		[IteratorStateMachine(typeof(<DoBlastOff>d__5))]
		public IEnumerator DoBlastOff()
		{
			return null;
		}

		[Token(Token = "0x6000C81")]
		[Address(RVA = "0x95C6C0", Offset = "0x95C6C0", VA = "0x95C6C0")]
		[IteratorStateMachine(typeof(<DoSpawnShip>d__6))]
		private IEnumerator DoSpawnShip()
		{
			return null;
		}

		[Token(Token = "0x6000C82")]
		[Address(RVA = "0x95C81C", Offset = "0x95C81C", VA = "0x95C81C")]
		public NVRExampleLeverResultRocket()
		{
		}
	}
	[Token(Token = "0x2000253")]
	public class NVRExampleRGBResult : MonoBehaviour
	{
		[Token(Token = "0x4000B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public NVRSlider SliderRed;

		[Token(Token = "0x4000B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NVRSlider SliderGreen;

		[Token(Token = "0x4000B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public NVRSlider SliderBlue;

		[Token(Token = "0x4000B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Renderer Result;

		[Token(Token = "0x6000C8F")]
		[Address(RVA = "0x95CCD8", Offset = "0x95CCD8", VA = "0x95CCD8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C90")]
		[Address(RVA = "0x95CD2C", Offset = "0x95CD2C", VA = "0x95CD2C")]
		public NVRExampleRGBResult()
		{
		}
	}
	[Token(Token = "0x2000254")]
	public class NVRExampleSpawner : MonoBehaviour
	{
		[Token(Token = "0x4000B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public NVRButton Button;

		[Token(Token = "0x4000B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject ToCopy;

		[Token(Token = "0x6000C91")]
		[Address(RVA = "0x95CD34", Offset = "0x95CD34", VA = "0x95CD34")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C92")]
		[Address(RVA = "0x95CE54", Offset = "0x95CE54", VA = "0x95CE54")]
		public NVRExampleSpawner()
		{
		}
	}
	[Token(Token = "0x2000255")]
	public class NVRExampleSwitchResult : MonoBehaviour
	{
		[Token(Token = "0x4000B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public NVRSwitch Switch;

		[Token(Token = "0x4000B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Light SpotLight;

		[Token(Token = "0x6000C93")]
		[Address(RVA = "0x95CE5C", Offset = "0x95CE5C", VA = "0x95CE5C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C94")]
		[Address(RVA = "0x95CEAC", Offset = "0x95CEAC", VA = "0x95CEAC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C95")]
		[Address(RVA = "0x95CED4", Offset = "0x95CED4", VA = "0x95CED4")]
		public NVRExampleSwitchResult()
		{
		}
	}
	[Token(Token = "0x2000256")]
	[RequireComponent(typeof(NVRHand))]
	public class NVRExampleTeleporter : MonoBehaviour
	{
		[Token(Token = "0x4000B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color LineColor;

		[Token(Token = "0x4000B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float LineWidth;

		[Token(Token = "0x4000B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private LineRenderer Line;

		[Token(Token = "0x4000B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private NVRHand Hand;

		[Token(Token = "0x4000B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private NVRPlayer Player;

		[Token(Token = "0x6000C96")]
		[Address(RVA = "0x95CEDC", Offset = "0x95CEDC", VA = "0x95CEDC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C97")]
		[Address(RVA = "0x95D0E8", Offset = "0x95D0E8", VA = "0x95D0E8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C98")]
		[Address(RVA = "0x95D108", Offset = "0x95D108", VA = "0x95D108")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000C99")]
		[Address(RVA = "0x95D59C", Offset = "0x95D59C", VA = "0x95D59C")]
		public NVRExampleTeleporter()
		{
		}
	}
}
namespace UnitySA.Characters.FirstPerson
{
	[Token(Token = "0x2000257")]
	[RequireComponent(typeof(CharacterController))]
	[RequireComponent(typeof(AudioSource))]
	public class FPCtrl : MonoBehaviour
	{
		[Token(Token = "0x4000B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_IsWalking;

		[Token(Token = "0x4000B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_WalkSpeed;

		[Token(Token = "0x4000B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_RunSpeed;

		[Token(Token = "0x4000B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		[Range(0f, 1f)]
		private float m_RunstepLenghten;

		[Token(Token = "0x4000B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float m_JumpSpeed;

		[Token(Token = "0x4000B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float m_StickToGroundForce;

		[Token(Token = "0x4000BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float m_GravityMultiplier;

		[Token(Token = "0x4000BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private MLook m_MouseLook;

		[Token(Token = "0x4000BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool m_UseFovKick;

		[Token(Token = "0x4000BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private FOVZoom m_FovKick;

		[Token(Token = "0x4000BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private bool m_UseHeadBob;

		[Token(Token = "0x4000BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private CurveCtrlBob m_HeadBob;

		[Token(Token = "0x4000BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private LerpCtrlBob m_JumpBob;

		[Token(Token = "0x4000BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float m_StepInterval;

		[Token(Token = "0x4000BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Camera m_Camera;

		[Token(Token = "0x4000BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool m_Jump;

		[Token(Token = "0x4000BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float m_YRotation;

		[Token(Token = "0x4000BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector2 m_Input;

		[Token(Token = "0x4000BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 m_MoveDir;

		[Token(Token = "0x4000BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private CharacterController m_CharacterController;

		[Token(Token = "0x4000BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private CollisionFlags m_CollisionFlags;

		[Token(Token = "0x4000BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool m_PreviouslyGrounded;

		[Token(Token = "0x4000BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector3 m_OriginalCameraPosition;

		[Token(Token = "0x4000BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private float m_StepCycle;

		[Token(Token = "0x4000BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float m_NextStep;

		[Token(Token = "0x4000BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private bool m_Jumping;

		[Token(Token = "0x6000C9A")]
		[Address(RVA = "0x95D5B0", Offset = "0x95D5B0", VA = "0x95D5B0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C9B")]
		[Address(RVA = "0x95D6A0", Offset = "0x95D6A0", VA = "0x95D6A0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C9C")]
		[Address(RVA = "0x95D7E0", Offset = "0x95D7E0", VA = "0x95D7E0")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000C9D")]
		[Address(RVA = "0x95DDE8", Offset = "0x95DDE8", VA = "0x95DDE8")]
		private void ProgressStepCycle(float speed)
		{
		}

		[Token(Token = "0x6000C9E")]
		[Address(RVA = "0x95DF1C", Offset = "0x95DF1C", VA = "0x95DF1C")]
		private void UpdateCameraPosition(float speed)
		{
		}

		[Token(Token = "0x6000C9F")]
		[Address(RVA = "0x95DBD4", Offset = "0x95DBD4", VA = "0x95DBD4")]
		private void GetInput(out float speed)
		{
		}

		[Token(Token = "0x6000CA0")]
		[Address(RVA = "0x95D78C", Offset = "0x95D78C", VA = "0x95D78C")]
		private void RotateView()
		{
		}

		[Token(Token = "0x6000CA1")]
		[Address(RVA = "0x95E160", Offset = "0x95E160", VA = "0x95E160")]
		private void OnControllerColliderHit(ControllerColliderHit hit)
		{
		}

		[Token(Token = "0x6000CA2")]
		[Address(RVA = "0x95E284", Offset = "0x95E284", VA = "0x95E284")]
		public FPCtrl()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000258")]
	public class MLook
	{
		[Token(Token = "0x4000BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float XSensitivity;

		[Token(Token = "0x4000BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float YSensitivity;

		[Token(Token = "0x4000BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool clampVerticalRotation;

		[Token(Token = "0x4000BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float MinimumX;

		[Token(Token = "0x4000BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float MaximumX;

		[Token(Token = "0x4000BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool smooth;

		[Token(Token = "0x4000BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float smoothTime;

		[Token(Token = "0x4000BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool lockCursor;

		[Token(Token = "0x4000BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Quaternion m_CharacterTargetRot;

		[Token(Token = "0x4000BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Quaternion m_CameraTargetRot;

		[Token(Token = "0x4000BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool m_cursorIsLocked;

		[Token(Token = "0x6000CA3")]
		[Address(RVA = "0x95E38C", Offset = "0x95E38C", VA = "0x95E38C")]
		public void Init(Transform character, Transform camera)
		{
		}

		[Token(Token = "0x6000CA4")]
		[Address(RVA = "0x95E3DC", Offset = "0x95E3DC", VA = "0x95E3DC")]
		public void LookRotation(Transform character, Transform camera)
		{
		}

		[Token(Token = "0x6000CA5")]
		[Address(RVA = "0x95E7AC", Offset = "0x95E7AC", VA = "0x95E7AC")]
		public void SetCursorLock(bool value)
		{
		}

		[Token(Token = "0x6000CA6")]
		[Address(RVA = "0x95E79C", Offset = "0x95E79C", VA = "0x95E79C")]
		public void UpdateCursorLock()
		{
		}

		[Token(Token = "0x6000CA7")]
		[Address(RVA = "0x95E7E0", Offset = "0x95E7E0", VA = "0x95E7E0")]
		private void InternalLockUpdate()
		{
		}

		[Token(Token = "0x6000CA8")]
		[Address(RVA = "0x95E738", Offset = "0x95E738", VA = "0x95E738")]
		private Quaternion ClampRotationAroundXAxis(Quaternion q)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000CA9")]
		[Address(RVA = "0x95E858", Offset = "0x95E858", VA = "0x95E858")]
		public MLook()
		{
		}
	}
}
namespace UnitySA.Utility
{
	[Serializable]
	[Token(Token = "0x2000259")]
	public class CurveCtrlBob
	{
		[Token(Token = "0x4000BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float HorizontalBobRange;

		[Token(Token = "0x4000BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float VerticalBobRange;

		[Token(Token = "0x4000BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimationCurve Bobcurve;

		[Token(Token = "0x4000BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float VerticaltoHorizontalRatio;

		[Token(Token = "0x4000BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float m_CyclePositionX;

		[Token(Token = "0x4000BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float m_CyclePositionY;

		[Token(Token = "0x4000BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float m_BobBaseInterval;

		[Token(Token = "0x4000BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 m_OriginalCameraPosition;

		[Token(Token = "0x4000BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float m_Time;

		[Token(Token = "0x6000CAA")]
		[Address(RVA = "0x95E88C", Offset = "0x95E88C", VA = "0x95E88C")]
		public void Setup(Camera camera, float bobBaseInterval)
		{
		}

		[Token(Token = "0x6000CAB")]
		[Address(RVA = "0x95E92C", Offset = "0x95E92C", VA = "0x95E92C")]
		public Vector3 DoHeadBob(float speed)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000CAC")]
		[Address(RVA = "0x95EA1C", Offset = "0x95EA1C", VA = "0x95EA1C")]
		public CurveCtrlBob()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200025A")]
	public class FOVZoom
	{
		[Token(Token = "0x200025B")]
		[CompilerGenerated]
		private sealed class <FOVKickUp>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000BCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000BCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000BD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FOVZoom <>4__this;

			[Token(Token = "0x4000BD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <t>5__2;

			[Token(Token = "0x170000D7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000CB6")]
				[Address(RVA = "0x95EFF0", Offset = "0x95EFF0", VA = "0x95EFF0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000D8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000CB8")]
				[Address(RVA = "0x95F038", Offset = "0x95F038", VA = "0x95F038", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000CB3")]
			[Address(RVA = "0x95EDF0", Offset = "0x95EDF0", VA = "0x95EDF0")]
			[DebuggerHidden]
			public <FOVKickUp>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6000CB4")]
			[Address(RVA = "0x95EEC4", Offset = "0x95EEC4", VA = "0x95EEC4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000CB5")]
			[Address(RVA = "0x95EEC8", Offset = "0x95EEC8", VA = "0x95EEC8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000CB7")]
			[Address(RVA = "0x95EFF8", Offset = "0x95EFF8", VA = "0x95EFF8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200025C")]
		[CompilerGenerated]
		private sealed class <FOVKickDown>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000BD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000BD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000BD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FOVZoom <>4__this;

			[Token(Token = "0x4000BD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <t>5__2;

			[Token(Token = "0x170000D9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000CBC")]
				[Address(RVA = "0x95F180", Offset = "0x95F180", VA = "0x95F180", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000DA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000CBE")]
				[Address(RVA = "0x95F1C8", Offset = "0x95F1C8", VA = "0x95F1C8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000CB9")]
			[Address(RVA = "0x95EE80", Offset = "0x95EE80", VA = "0x95EE80")]
			[DebuggerHidden]
			public <FOVKickDown>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6000CBA")]
			[Address(RVA = "0x95F040", Offset = "0x95F040", VA = "0x95F040", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000CBB")]
			[Address(RVA = "0x95F044", Offset = "0x95F044", VA = "0x95F044", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000CBD")]
			[Address(RVA = "0x95F188", Offset = "0x95F188", VA = "0x95F188", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Camera Camera;

		[Token(Token = "0x4000BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public float originalFov;

		[Token(Token = "0x4000BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float FOVIncrease;

		[Token(Token = "0x4000BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float TimeToIncrease;

		[Token(Token = "0x4000BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float TimeToDecrease;

		[Token(Token = "0x4000BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationCurve IncreaseCurve;

		[Token(Token = "0x6000CAD")]
		[Address(RVA = "0x95EC5C", Offset = "0x95EC5C", VA = "0x95EC5C")]
		public void Setup(Camera camera)
		{
		}

		[Token(Token = "0x6000CAE")]
		[Address(RVA = "0x95EC98", Offset = "0x95EC98", VA = "0x95EC98")]
		private void CheckStatus(Camera camera)
		{
		}

		[Token(Token = "0x6000CAF")]
		[Address(RVA = "0x95ED80", Offset = "0x95ED80", VA = "0x95ED80")]
		public void ChangeCamera(Camera camera)
		{
		}

		[Token(Token = "0x6000CB0")]
		[Address(RVA = "0x95ED88", Offset = "0x95ED88", VA = "0x95ED88")]
		[IteratorStateMachine(typeof(<FOVKickUp>d__9))]
		public IEnumerator FOVKickUp()
		{
			return null;
		}

		[Token(Token = "0x6000CB1")]
		[Address(RVA = "0x95EE18", Offset = "0x95EE18", VA = "0x95EE18")]
		[IteratorStateMachine(typeof(<FOVKickDown>d__10))]
		public IEnumerator FOVKickDown()
		{
			return null;
		}

		[Token(Token = "0x6000CB2")]
		[Address(RVA = "0x95EEA8", Offset = "0x95EEA8", VA = "0x95EEA8")]
		public FOVZoom()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200025D")]
	public class LerpCtrlBob
	{
		[Token(Token = "0x200025E")]
		[CompilerGenerated]
		private sealed class <DoBobCycle>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000BD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000BDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000BDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LerpCtrlBob <>4__this;

			[Token(Token = "0x4000BDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <t>5__2;

			[Token(Token = "0x170000DB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000CC5")]
				[Address(RVA = "0x95F410", Offset = "0x95F410", VA = "0x95F410", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000DC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000CC7")]
				[Address(RVA = "0x95F458", Offset = "0x95F458", VA = "0x95F458", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000CC2")]
			[Address(RVA = "0x95F240", Offset = "0x95F240", VA = "0x95F240")]
			[DebuggerHidden]
			public <DoBobCycle>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6000CC3")]
			[Address(RVA = "0x95F270", Offset = "0x95F270", VA = "0x95F270", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000CC4")]
			[Address(RVA = "0x95F274", Offset = "0x95F274", VA = "0x95F274", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000CC6")]
			[Address(RVA = "0x95F418", Offset = "0x95F418", VA = "0x95F418", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float BobDuration;

		[Token(Token = "0x4000BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float BobAmount;

		[Token(Token = "0x4000BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float m_Offset;

		[Token(Token = "0x6000CBF")]
		[Address(RVA = "0x95F1D0", Offset = "0x95F1D0", VA = "0x95F1D0")]
		public float Offset()
		{
			return default(float);
		}

		[Token(Token = "0x6000CC0")]
		[Address(RVA = "0x95F1D8", Offset = "0x95F1D8", VA = "0x95F1D8")]
		[IteratorStateMachine(typeof(<DoBobCycle>d__4))]
		public IEnumerator DoBobCycle()
		{
			return null;
		}

		[Token(Token = "0x6000CC1")]
		[Address(RVA = "0x95F268", Offset = "0x95F268", VA = "0x95F268")]
		public LerpCtrlBob()
		{
		}
	}
}
namespace ch.sycoforge.Decal.Demo
{
	[Token(Token = "0x200025F")]
	public class AdvancedBulletHoles : MonoBehaviour
	{
		[Token(Token = "0x4000BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EasyDecal DecalPrefab;

		[Token(Token = "0x4000BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject ImpactParticles;

		[Token(Token = "0x4000BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float CastRadius;

		[Token(Token = "0x6000CC8")]
		[Address(RVA = "0x95F460", Offset = "0x95F460", VA = "0x95F460")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CC9")]
		[Address(RVA = "0x95F53C", Offset = "0x95F53C", VA = "0x95F53C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000CCA")]
		[Address(RVA = "0x95F9A8", Offset = "0x95F9A8", VA = "0x95F9A8")]
		public AdvancedBulletHoles()
		{
		}
	}
	[Token(Token = "0x2000260")]
	public class BasicBulletHoles : MonoBehaviour
	{
		[Token(Token = "0x4000BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EasyDecal DecalPrefab;

		[Token(Token = "0x4000BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool t;

		[Token(Token = "0x6000CCB")]
		[Address(RVA = "0x95F9B8", Offset = "0x95F9B8", VA = "0x95F9B8")]
		public void Start()
		{
		}

		[Token(Token = "0x6000CCC")]
		[Address(RVA = "0x95FA6C", Offset = "0x95FA6C", VA = "0x95FA6C")]
		public void Update()
		{
		}

		[Token(Token = "0x6000CCD")]
		[Address(RVA = "0x95FC8C", Offset = "0x95FC8C", VA = "0x95FC8C")]
		public BasicBulletHoles()
		{
		}
	}
	[Token(Token = "0x2000261")]
	public static class BezierUtil
	{
		[Token(Token = "0x6000CCE")]
		[Address(RVA = "0x95FC94", Offset = "0x95FC94", VA = "0x95FC94")]
		public static List<Vector3> InterpolatePath(List<Vector3> path, int segments, float radius, float angleThreshold)
		{
			return null;
		}

		[Token(Token = "0x6000CCF")]
		[Address(RVA = "0x960308", Offset = "0x960308", VA = "0x960308")]
		public static Vector3[] GetBezierApproximation(Vector3[] controlPoints, int outputSegmentCount)
		{
			return null;
		}

		[Token(Token = "0x6000CD0")]
		[Address(RVA = "0x9603D0", Offset = "0x9603D0", VA = "0x9603D0")]
		public static Vector3 GetBezierPoint(float t, Vector3[] controlPoints, int index, int count)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x2000262")]
	public static class LineUtil
	{
		[Token(Token = "0x6000CD1")]
		[Address(RVA = "0x9604EC", Offset = "0x9604EC", VA = "0x9604EC")]
		public static void DrawPath(float thickness, Material material, List<Vector3> path)
		{
		}

		[Token(Token = "0x6000CD2")]
		[Address(RVA = "0x960678", Offset = "0x960678", VA = "0x960678")]
		private static void DrawLine(float thickness, Vector3 start, Vector3 end)
		{
		}
	}
	[Token(Token = "0x2000263")]
	[RequireComponent(typeof(NavMeshAgent))]
	[RequireComponent(typeof(LineRenderer))]
	public class PathAgent : MonoBehaviour
	{
		[Token(Token = "0x4000BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float PathThickness;

		[Token(Token = "0x4000BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Tooltip("Distance from the ground.")]
		public float NormalPathOffset;

		[Token(Token = "0x4000BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Range(0.001f, 0.5f)]
		[Tooltip("Max radius between segments.")]
		public float Radius;

		[Token(Token = "0x4000BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Tooltip("Discard segments when their angle is smaller than this value.")]
		public float AngleThreshold;

		[Token(Token = "0x4000BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool DrawGizmos;

		[Token(Token = "0x4000BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public EasyDecal TargetAimDecal;

		[Token(Token = "0x4000BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject TargetPointDecalPrefab;

		[Token(Token = "0x4000BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Vector3> path;

		[Token(Token = "0x4000BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private NavMeshAgent agent;

		[Token(Token = "0x4000BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private LineRenderer lineRenderer;

		[Token(Token = "0x4000BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 decalOffset;

		[Token(Token = "0x4000BED")]
		private const int MAXDISTANCE = 50;

		[Token(Token = "0x6000CD3")]
		[Address(RVA = "0x960968", Offset = "0x960968", VA = "0x960968")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CD4")]
		[Address(RVA = "0x960A00", Offset = "0x960A00", VA = "0x960A00")]
		private void Update()
		{
		}

		[Token(Token = "0x6000CD5")]
		[Address(RVA = "0x960EF4", Offset = "0x960EF4", VA = "0x960EF4")]
		private void SetTarget(Ray mouseRay)
		{
		}

		[Token(Token = "0x6000CD6")]
		[Address(RVA = "0x960A94", Offset = "0x960A94", VA = "0x960A94")]
		private void CreatePath(Ray mouseRay)
		{
		}

		[Token(Token = "0x6000CD7")]
		[Address(RVA = "0x96109C", Offset = "0x96109C", VA = "0x96109C")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6000CD8")]
		[Address(RVA = "0x96121C", Offset = "0x96121C", VA = "0x96121C")]
		public PathAgent()
		{
		}
	}
	[Token(Token = "0x2000264")]
	public class ProxyRegister : MonoBehaviour
	{
		[Token(Token = "0x4000BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StaticProxyCollection ProxyCollection;

		[Token(Token = "0x6000CD9")]
		[Address(RVA = "0x9612FC", Offset = "0x9612FC", VA = "0x9612FC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CDA")]
		[Address(RVA = "0x96138C", Offset = "0x96138C", VA = "0x96138C")]
		public ProxyRegister()
		{
		}
	}
	[Token(Token = "0x2000265")]
	public class Sinoid : MonoBehaviour
	{
		[Token(Token = "0x4000BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float AngularVelocity;

		[Token(Token = "0x4000BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float SineFreq;

		[Token(Token = "0x4000BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float Amplitude;

		[Token(Token = "0x4000BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float accuTime;

		[Token(Token = "0x4000BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 startPos;

		[Token(Token = "0x6000CDB")]
		[Address(RVA = "0x961394", Offset = "0x961394", VA = "0x961394")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CDC")]
		[Address(RVA = "0x9613C4", Offset = "0x9613C4", VA = "0x9613C4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000CDD")]
		[Address(RVA = "0x961560", Offset = "0x961560", VA = "0x961560")]
		public Sinoid()
		{
		}
	}
}
namespace VRrigade
{
	[Token(Token = "0x2000266")]
	public class Menu : MonoBehaviour
	{
		[Token(Token = "0x6000CDE")]
		[Address(RVA = "0x96157C", Offset = "0x96157C", VA = "0x96157C")]
		public Menu()
		{
		}
	}
	[Token(Token = "0x2000267")]
	public class MenuButton : HitTarget
	{
		[Token(Token = "0x4000BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string action;

		[Token(Token = "0x4000BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool bWaitingForPlayers;

		[Token(Token = "0x4000BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool bRotating;

		[Token(Token = "0x4000BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static float ROTATE_ANIMATION_TIME;

		[Token(Token = "0x6000CDF")]
		[Address(RVA = "0x961584", Offset = "0x961584", VA = "0x961584", Slot = "4")]
		public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CE0")]
		[Address(RVA = "0x961E70", Offset = "0x961E70", VA = "0x961E70")]
		public void OnHitImpl(bool doAction = true)
		{
		}

		[Token(Token = "0x6000CE1")]
		[Address(RVA = "0x9622F0", Offset = "0x9622F0", VA = "0x9622F0")]
		public void doButtonAction(bool bRemote = false)
		{
		}

		[Token(Token = "0x6000CE2")]
		[Address(RVA = "0x962A8C", Offset = "0x962A8C", VA = "0x962A8C")]
		public void hideForWaitingPlayers(bool bValue)
		{
		}

		[Token(Token = "0x6000CE3")]
		[Address(RVA = "0x962E28", Offset = "0x962E28", VA = "0x962E28")]
		private void rotateCompletedWait()
		{
		}

		[Token(Token = "0x6000CE4")]
		[Address(RVA = "0x962E9C", Offset = "0x962E9C", VA = "0x962E9C")]
		private void rotateCompleted()
		{
		}

		[Token(Token = "0x6000CE5")]
		[Address(RVA = "0x962F10", Offset = "0x962F10", VA = "0x962F10")]
		private void loadScene(bool bRemote)
		{
		}

		[Token(Token = "0x6000CE6")]
		[Address(RVA = "0x962934", Offset = "0x962934", VA = "0x962934")]
		private void hideHelpers()
		{
		}

		[Token(Token = "0x6000CE7")]
		[Address(RVA = "0x9635CC", Offset = "0x9635CC", VA = "0x9635CC")]
		private void hideHandHelper(NVRHand hand)
		{
		}

		[Token(Token = "0x6000CE8")]
		[Address(RVA = "0x963698", Offset = "0x963698", VA = "0x963698")]
		public MenuButton()
		{
		}
	}
	[Token(Token = "0x200026B")]
	public class SceneManager : MonoBehaviour
	{
		[Token(Token = "0x200026C")]
		[CompilerGenerated]
		private sealed class <waitForOnlinePlayerId>d__32 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000C1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000C1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000C1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SceneManager <>4__this;

			[Token(Token = "0x170000DD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D30")]
				[Address(RVA = "0x967AA0", Offset = "0x967AA0", VA = "0x967AA0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000DE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D32")]
				[Address(RVA = "0x967AE8", Offset = "0x967AE8", VA = "0x967AE8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D2D")]
			[Address(RVA = "0x964598", Offset = "0x964598", VA = "0x964598")]
			[DebuggerHidden]
			public <waitForOnlinePlayerId>d__32(int <>1__state)
			{
			}

			[Token(Token = "0x6000D2E")]
			[Address(RVA = "0x9670E8", Offset = "0x9670E8", VA = "0x9670E8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D2F")]
			[Address(RVA = "0x9670EC", Offset = "0x9670EC", VA = "0x9670EC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D31")]
			[Address(RVA = "0x967AA8", Offset = "0x967AA8", VA = "0x967AA8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200026D")]
		[CompilerGenerated]
		private sealed class <waitForOnlinePlayers>d__33 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000C1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000C1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000C20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private float <fTime>5__2;

			[Token(Token = "0x170000DF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D36")]
				[Address(RVA = "0x968394", Offset = "0x968394", VA = "0x968394", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000E0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D38")]
				[Address(RVA = "0x9683DC", Offset = "0x9683DC", VA = "0x9683DC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D33")]
			[Address(RVA = "0x964620", Offset = "0x964620", VA = "0x964620")]
			[DebuggerHidden]
			public <waitForOnlinePlayers>d__33(int <>1__state)
			{
			}

			[Token(Token = "0x6000D34")]
			[Address(RVA = "0x967AF0", Offset = "0x967AF0", VA = "0x967AF0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D35")]
			[Address(RVA = "0x967AF4", Offset = "0x967AF4", VA = "0x967AF4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D37")]
			[Address(RVA = "0x96839C", Offset = "0x96839C", VA = "0x96839C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200026E")]
		[CompilerGenerated]
		private sealed class <startGameCoroutine>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000C21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000C22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000C23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SceneManager <>4__this;

			[Token(Token = "0x170000E1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D3C")]
				[Address(RVA = "0x968C50", Offset = "0x968C50", VA = "0x968C50", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000E2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D3E")]
				[Address(RVA = "0x968C98", Offset = "0x968C98", VA = "0x968C98", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D39")]
			[Address(RVA = "0x964648", Offset = "0x964648", VA = "0x964648")]
			[DebuggerHidden]
			public <startGameCoroutine>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x6000D3A")]
			[Address(RVA = "0x9683E4", Offset = "0x9683E4", VA = "0x9683E4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D3B")]
			[Address(RVA = "0x9683E8", Offset = "0x9683E8", VA = "0x9683E8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D3D")]
			[Address(RVA = "0x968C58", Offset = "0x968C58", VA = "0x968C58", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200026F")]
		[CompilerGenerated]
		private sealed class <startMusicCoroutine>d__39 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000C24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000C25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000C26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SceneManager <>4__this;

			[Token(Token = "0x170000E3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D42")]
				[Address(RVA = "0x968D9C", Offset = "0x968D9C", VA = "0x968D9C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000E4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D44")]
				[Address(RVA = "0x968DE4", Offset = "0x968DE4", VA = "0x968DE4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D3F")]
			[Address(RVA = "0x9648F4", Offset = "0x9648F4", VA = "0x9648F4")]
			[DebuggerHidden]
			public <startMusicCoroutine>d__39(int <>1__state)
			{
			}

			[Token(Token = "0x6000D40")]
			[Address(RVA = "0x968CA0", Offset = "0x968CA0", VA = "0x968CA0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D41")]
			[Address(RVA = "0x968CA4", Offset = "0x968CA4", VA = "0x968CA4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D43")]
			[Address(RVA = "0x968DA4", Offset = "0x968DA4", VA = "0x968DA4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000270")]
		[CompilerGenerated]
		private sealed class <stopMusicCoroutine>d__40 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000C27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000C28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000C29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float fEnd;

			[Token(Token = "0x4000C2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SceneManager <>4__this;

			[Token(Token = "0x4000C2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <delta>5__2;

			[Token(Token = "0x170000E5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D48")]
				[Address(RVA = "0x968F7C", Offset = "0x968F7C", VA = "0x968F7C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000E6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D4A")]
				[Address(RVA = "0x968FC4", Offset = "0x968FC4", VA = "0x968FC4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D45")]
			[Address(RVA = "0x96491C", Offset = "0x96491C", VA = "0x96491C")]
			[DebuggerHidden]
			public <stopMusicCoroutine>d__40(int <>1__state)
			{
			}

			[Token(Token = "0x6000D46")]
			[Address(RVA = "0x968DEC", Offset = "0x968DEC", VA = "0x968DEC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D47")]
			[Address(RVA = "0x968DF0", Offset = "0x968DF0", VA = "0x968DF0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D49")]
			[Address(RVA = "0x968F84", Offset = "0x968F84", VA = "0x968F84", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000271")]
		[CompilerGenerated]
		private sealed class <finalCountDownCoroutine>d__47 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000C2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000C2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000C2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SceneManager <>4__this;

			[Token(Token = "0x4000C2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private bool <bContinue>5__2;

			[Token(Token = "0x170000E7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D4E")]
				[Address(RVA = "0x969548", Offset = "0x969548", VA = "0x969548", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000E8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D50")]
				[Address(RVA = "0x969590", Offset = "0x969590", VA = "0x969590", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D4B")]
			[Address(RVA = "0x964D30", Offset = "0x964D30", VA = "0x964D30")]
			[DebuggerHidden]
			public <finalCountDownCoroutine>d__47(int <>1__state)
			{
			}

			[Token(Token = "0x6000D4C")]
			[Address(RVA = "0x968FCC", Offset = "0x968FCC", VA = "0x968FCC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D4D")]
			[Address(RVA = "0x968FD0", Offset = "0x968FD0", VA = "0x968FD0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D4F")]
			[Address(RVA = "0x969550", Offset = "0x969550", VA = "0x969550", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000273")]
		[CompilerGenerated]
		private sealed class <missionAccomplishedCoroutine>d__70 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000C32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000C33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000C34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SceneManager <>4__this;

			[Token(Token = "0x4000C35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Newspaper <newspaper>5__2;

			[Token(Token = "0x170000E9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D56")]
				[Address(RVA = "0x9698E0", Offset = "0x9698E0", VA = "0x9698E0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000EA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D58")]
				[Address(RVA = "0x969928", Offset = "0x969928", VA = "0x969928", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D53")]
			[Address(RVA = "0x9662A8", Offset = "0x9662A8", VA = "0x9662A8")]
			[DebuggerHidden]
			public <missionAccomplishedCoroutine>d__70(int <>1__state)
			{
			}

			[Token(Token = "0x6000D54")]
			[Address(RVA = "0x9695B4", Offset = "0x9695B4", VA = "0x9695B4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D55")]
			[Address(RVA = "0x9695B8", Offset = "0x9695B8", VA = "0x9695B8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D57")]
			[Address(RVA = "0x9698E8", Offset = "0x9698E8", VA = "0x9698E8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000274")]
		[CompilerGenerated]
		private sealed class <ChangePlayerPositionCoroutine>d__79 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000C36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000C37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000C38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string strPosition;

			[Token(Token = "0x4000C39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Transform <position>5__2;

			[Token(Token = "0x170000EB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D5C")]
				[Address(RVA = "0x969BF0", Offset = "0x969BF0", VA = "0x969BF0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000EC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D5E")]
				[Address(RVA = "0x969C38", Offset = "0x969C38", VA = "0x969C38", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D59")]
			[Address(RVA = "0x966924", Offset = "0x966924", VA = "0x966924")]
			[DebuggerHidden]
			public <ChangePlayerPositionCoroutine>d__79(int <>1__state)
			{
			}

			[Token(Token = "0x6000D5A")]
			[Address(RVA = "0x969930", Offset = "0x969930", VA = "0x969930", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D5B")]
			[Address(RVA = "0x969934", Offset = "0x969934", VA = "0x969934", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D5D")]
			[Address(RVA = "0x969BF8", Offset = "0x969BF8", VA = "0x969BF8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static SceneManager instance;

		[Token(Token = "0x4000BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float weaponTakeableProbability;

		[Token(Token = "0x4000C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject[] gameElements;

		[Token(Token = "0x4000C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float totalTime;

		[Token(Token = "0x4000C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int currentScene;

		[Token(Token = "0x4000C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Coroutine stopMusic;

		[Token(Token = "0x4000C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AudioSource music;

		[Token(Token = "0x4000C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private AudioSource tictac;

		[Token(Token = "0x4000C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public SceneData[] scenes;

		[Token(Token = "0x4000C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public ThiefPoliceController[] teammates;

		[Token(Token = "0x4000C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SceneHide[] sceneHides;

		[Token(Token = "0x4000C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private NVRPlayer player;

		[Token(Token = "0x4000C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool m_bLockMusic;

		[Token(Token = "0x4000C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float initTime;

		[Token(Token = "0x4000C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public GameScene currentGameScene;

		[Token(Token = "0x4000C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public bool countDownEnable;

		[Token(Token = "0x4000C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
		public bool endGame;

		[Token(Token = "0x4000C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public UnityEvent timeReached;

		[Token(Token = "0x4000C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public string localPlayerId;

		[Token(Token = "0x4000C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool testPosition;

		[Token(Token = "0x4000C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Dictionary<string, Transform> m_transformCache;

		[Token(Token = "0x4000C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private ReadySetGo _readySetGo;

		[Token(Token = "0x4000C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private GameOver _gameOver;

		[Token(Token = "0x4000C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private int m_iPoliceStation;

		[Token(Token = "0x4000C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Coroutine finalCountdown;

		[Token(Token = "0x4000C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private int targetTime;

		[Token(Token = "0x4000C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private bool m_bLockFire;

		[Token(Token = "0x4000C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBD")]
		private bool m_bLockFireOutOfPlayArea;

		[Token(Token = "0x4000C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private SumalabInvoke.SumalabInvokeHandler checkFinishHandler;

		[Token(Token = "0x6000CF1")]
		[Address(RVA = "0x9637FC", Offset = "0x9637FC", VA = "0x9637FC")]
		public static SceneManager getInstance()
		{
			return null;
		}

		[Token(Token = "0x6000CF2")]
		[Address(RVA = "0x963844", Offset = "0x963844", VA = "0x963844")]
		public ReadySetGo getReadySetGo()
		{
			return null;
		}

		[Token(Token = "0x6000CF3")]
		[Address(RVA = "0x96393C", Offset = "0x96393C", VA = "0x96393C")]
		public GameOver getGameOver()
		{
			return null;
		}

		[Token(Token = "0x6000CF4")]
		[Address(RVA = "0x963A68", Offset = "0x963A68", VA = "0x963A68")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000CF5")]
		[Address(RVA = "0x963F58", Offset = "0x963F58", VA = "0x963F58")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CF6")]
		[Address(RVA = "0x9641FC", Offset = "0x9641FC", VA = "0x9641FC")]
		public bool isInPoliceStation()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CF7")]
		[Address(RVA = "0x96404C", Offset = "0x96404C", VA = "0x96404C")]
		private void startGame()
		{
		}

		[Token(Token = "0x6000CF8")]
		[Address(RVA = "0x964314", Offset = "0x964314", VA = "0x964314")]
		private Transform getStartingPosition()
		{
			return null;
		}

		[Token(Token = "0x6000CF9")]
		[Address(RVA = "0x964530", Offset = "0x964530", VA = "0x964530")]
		[IteratorStateMachine(typeof(<waitForOnlinePlayerId>d__32))]
		private IEnumerator waitForOnlinePlayerId()
		{
			return null;
		}

		[Token(Token = "0x6000CFA")]
		[Address(RVA = "0x9645C0", Offset = "0x9645C0", VA = "0x9645C0")]
		[IteratorStateMachine(typeof(<waitForOnlinePlayers>d__33))]
		private IEnumerator waitForOnlinePlayers()
		{
			return null;
		}

		[Token(Token = "0x6000CFB")]
		[Address(RVA = "0x9642AC", Offset = "0x9642AC", VA = "0x9642AC")]
		[IteratorStateMachine(typeof(<startGameCoroutine>d__34))]
		private IEnumerator startGameCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6000CFC")]
		[Address(RVA = "0x964670", Offset = "0x964670", VA = "0x964670")]
		private void OnRecenterEdit()
		{
		}

		[Token(Token = "0x6000CFD")]
		[Address(RVA = "0x964748", Offset = "0x964748", VA = "0x964748")]
		private void startFirstScene()
		{
		}

		[Token(Token = "0x6000CFE")]
		[Address(RVA = "0x96477C", Offset = "0x96477C", VA = "0x96477C")]
		public void playMusic(float fTime = 40f, float fEnd = 10f)
		{
		}

		[Token(Token = "0x6000CFF")]
		[Address(RVA = "0x964854", Offset = "0x964854", VA = "0x964854")]
		public void scheduleStopMusic(float fEnd = 11f)
		{
		}

		[Token(Token = "0x6000D00")]
		[Address(RVA = "0x9647EC", Offset = "0x9647EC", VA = "0x9647EC")]
		[IteratorStateMachine(typeof(<startMusicCoroutine>d__39))]
		private IEnumerator startMusicCoroutine(float fEnd)
		{
			return null;
		}

		[Token(Token = "0x6000D01")]
		[Address(RVA = "0x96487C", Offset = "0x96487C", VA = "0x96487C")]
		[IteratorStateMachine(typeof(<stopMusicCoroutine>d__40))]
		private IEnumerator stopMusicCoroutine(float fEnd)
		{
			return null;
		}

		[Token(Token = "0x6000D02")]
		[Address(RVA = "0x964944", Offset = "0x964944", VA = "0x964944")]
		public void setInitTime()
		{
		}

		[Token(Token = "0x6000D03")]
		[Address(RVA = "0x9649E4", Offset = "0x9649E4", VA = "0x9649E4")]
		public void disableGameElements(bool state)
		{
		}

		[Token(Token = "0x6000D04")]
		[Address(RVA = "0x964A50", Offset = "0x964A50", VA = "0x964A50")]
		public void stopTime()
		{
		}

		[Token(Token = "0x6000D05")]
		[Address(RVA = "0x964A5C", Offset = "0x964A5C", VA = "0x964A5C")]
		private void missionFailedTimeOut()
		{
		}

		[Token(Token = "0x6000D06")]
		[Address(RVA = "0x96497C", Offset = "0x96497C", VA = "0x96497C")]
		[IteratorStateMachine(typeof(<finalCountDownCoroutine>d__47))]
		private IEnumerator finalCountDownCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6000D07")]
		[Address(RVA = "0x964D58", Offset = "0x964D58", VA = "0x964D58")]
		public CommonCharacterController[] getSceneCharacters()
		{
			return null;
		}

		[Token(Token = "0x6000D08")]
		[Address(RVA = "0x964B60", Offset = "0x964B60", VA = "0x964B60")]
		public void explodeBombs()
		{
		}

		[Token(Token = "0x6000D09")]
		[Address(RVA = "0x964DA4", Offset = "0x964DA4", VA = "0x964DA4")]
		private void explodeBombsKillAll()
		{
		}

		[Token(Token = "0x6000D0A")]
		[Address(RVA = "0x964FD0", Offset = "0x964FD0", VA = "0x964FD0")]
		public int getLifes()
		{
			return default(int);
		}

		[Token(Token = "0x6000D0B")]
		[Address(RVA = "0x965058", Offset = "0x965058", VA = "0x965058")]
		public void startSceneForDebug(string strScene)
		{
		}

		[Token(Token = "0x6000D0C")]
		[Address(RVA = "0x965124", Offset = "0x965124", VA = "0x965124")]
		public void showScene(int sceneId)
		{
		}

		[Token(Token = "0x6000D0D")]
		[Address(RVA = "0x9652F8", Offset = "0x9652F8", VA = "0x9652F8")]
		private void updateSceneHide(int sceneId)
		{
		}

		[Token(Token = "0x6000D0E")]
		[Address(RVA = "0x9653F0", Offset = "0x9653F0", VA = "0x9653F0")]
		public SceneData getCurrentScene()
		{
			return null;
		}

		[Token(Token = "0x6000D0F")]
		[Address(RVA = "0x9629A8", Offset = "0x9629A8", VA = "0x9629A8")]
		public void setReprojectionCamera(bool enable, bool bShowTime = false, bool bFade = true)
		{
		}

		[Token(Token = "0x6000D10")]
		[Address(RVA = "0x965448", Offset = "0x965448", VA = "0x965448")]
		public void setPlayer(Vector3 position, Vector3 rotation, bool localRecenter = false)
		{
		}

		[Token(Token = "0x6000D11")]
		[Address(RVA = "0x9654FC", Offset = "0x9654FC", VA = "0x9654FC")]
		public void lockPlayer(bool lockEnable)
		{
		}

		[Token(Token = "0x6000D12")]
		[Address(RVA = "0x965560", Offset = "0x965560", VA = "0x965560")]
		public void lockPlayerFireOutOfPlayArea(bool bValue)
		{
		}

		[Token(Token = "0x6000D13")]
		[Address(RVA = "0x96253C", Offset = "0x96253C", VA = "0x96253C")]
		public void lockPlayerFire(bool lockFire, bool unvulnerable = false, bool disableOnHit = false)
		{
		}

		[Token(Token = "0x6000D14")]
		[Address(RVA = "0x9656B8", Offset = "0x9656B8", VA = "0x9656B8")]
		private bool isSpectator()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D15")]
		[Address(RVA = "0x963420", Offset = "0x963420", VA = "0x963420")]
		public void loadScene(string sceneName)
		{
		}

		[Token(Token = "0x6000D16")]
		[Address(RVA = "0x9657C8", Offset = "0x9657C8", VA = "0x9657C8")]
		private void loadSceneImpl(string sceneName)
		{
		}

		[Token(Token = "0x6000D17")]
		[Address(RVA = "0x965854", Offset = "0x965854", VA = "0x965854")]
		public void restartGame()
		{
		}

		[Token(Token = "0x6000D18")]
		[Address(RVA = "0x965938", Offset = "0x965938", VA = "0x965938")]
		public void backToBase()
		{
		}

		[Token(Token = "0x6000D19")]
		[Address(RVA = "0x9659EC", Offset = "0x9659EC", VA = "0x9659EC")]
		public void gameOver(WalkieTalkie.CommunicationEvent gameOverEvent = WalkieTalkie.CommunicationEvent.game_over)
		{
		}

		[Token(Token = "0x6000D1A")]
		[Address(RVA = "0x96605C", Offset = "0x96605C", VA = "0x96605C")]
		public void missionAccomplished()
		{
		}

		[Token(Token = "0x6000D1B")]
		[Address(RVA = "0x966240", Offset = "0x966240", VA = "0x966240")]
		[IteratorStateMachine(typeof(<missionAccomplishedCoroutine>d__70))]
		private IEnumerator missionAccomplishedCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6000D1C")]
		[Address(RVA = "0x9662D0", Offset = "0x9662D0", VA = "0x9662D0")]
		public void bulletTime(float fBulletTime, bool bShowBulletTimeScreen = false)
		{
		}

		[Token(Token = "0x6000D1D")]
		[Address(RVA = "0x966370", Offset = "0x966370", VA = "0x966370")]
		public void cancelBulletTime()
		{
		}

		[Token(Token = "0x6000D1E")]
		[Address(RVA = "0x96648C", Offset = "0x96648C", VA = "0x96648C")]
		public void addLife()
		{
		}

		[Token(Token = "0x6000D1F")]
		[Address(RVA = "0x96655C", Offset = "0x96655C", VA = "0x96655C")]
		public void deactivateDeadBodys()
		{
		}

		[Token(Token = "0x6000D20")]
		[Address(RVA = "0x965E04", Offset = "0x965E04", VA = "0x965E04")]
		public float getTimePlayed()
		{
			return default(float);
		}

		[Token(Token = "0x6000D21")]
		[Address(RVA = "0x96668C", Offset = "0x96668C", VA = "0x96668C")]
		public float getTimeRemaining()
		{
			return default(float);
		}

		[Token(Token = "0x6000D22")]
		[Address(RVA = "0x9666E4", Offset = "0x9666E4", VA = "0x9666E4")]
		public Transform getTransformFromCache(string strName)
		{
			return null;
		}

		[Token(Token = "0x6000D23")]
		[Address(RVA = "0x96689C", Offset = "0x96689C", VA = "0x96689C")]
		public void ChangePlayerPosition(string strPosition)
		{
		}

		[Token(Token = "0x6000D24")]
		[Address(RVA = "0x9668BC", Offset = "0x9668BC", VA = "0x9668BC")]
		[IteratorStateMachine(typeof(<ChangePlayerPositionCoroutine>d__79))]
		private IEnumerator ChangePlayerPositionCoroutine(string strPosition)
		{
			return null;
		}

		[Token(Token = "0x6000D25")]
		[Address(RVA = "0x96694C", Offset = "0x96694C", VA = "0x96694C")]
		public void registerOnFireGameOver()
		{
		}

		[Token(Token = "0x6000D26")]
		[Address(RVA = "0x966A34", Offset = "0x966A34", VA = "0x966A34")]
		private void OnFire()
		{
		}

		[Token(Token = "0x6000D27")]
		[Address(RVA = "0x966AE4", Offset = "0x966AE4", VA = "0x966AE4")]
		public void checkOnlineFinished()
		{
		}

		[Token(Token = "0x6000D28")]
		[Address(RVA = "0x966BA0", Offset = "0x966BA0", VA = "0x966BA0")]
		private void checkOnlineFinishedCoroutine()
		{
		}

		[Token(Token = "0x6000D29")]
		[Address(RVA = "0x966F68", Offset = "0x966F68", VA = "0x966F68")]
		public SceneManager()
		{
		}
	}
	[Token(Token = "0x2000275")]
	public enum GameScene
	{
		[Token(Token = "0x4000C3B")]
		PoliceStation,
		[Token(Token = "0x4000C3C")]
		Bank,
		[Token(Token = "0x4000C3D")]
		Harbor,
		[Token(Token = "0x4000C3E")]
		Office,
		[Token(Token = "0x4000C3F")]
		PoliceStationNetwork
	}
}
namespace VRigade.online
{
	[Token(Token = "0x2000276")]
	public class NetworkCharacterController : MonoBehaviour, RemoteCharacterController
	{
		[Token(Token = "0x4000C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public NetworkCharacterProxy networkCharacterProxy;

		[Token(Token = "0x4000C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CommonCharacterController m_character;

		[Token(Token = "0x4000C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private SumalabInvoke.SumalabInvokeHandler executeActionHandler;

		[Token(Token = "0x6000D5F")]
		[Address(RVA = "0x969C40", Offset = "0x969C40", VA = "0x969C40")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D60")]
		[Address(RVA = "0x969C44", Offset = "0x969C44", VA = "0x969C44")]
		public void init()
		{
		}

		[Token(Token = "0x6000D61")]
		[Address(RVA = "0x969EA0", Offset = "0x969EA0", VA = "0x969EA0")]
		private CommonCharacterController GetCharacter()
		{
			return null;
		}

		[Token(Token = "0x6000D62")]
		[Address(RVA = "0x969F34", Offset = "0x969F34", VA = "0x969F34")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D63")]
		[Address(RVA = "0x969E50", Offset = "0x969E50", VA = "0x969E50")]
		public bool isRemoteMaster()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D64")]
		[Address(RVA = "0x969F38", Offset = "0x969F38", VA = "0x969F38")]
		public bool isConnected()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D65")]
		[Address(RVA = "0x969F84", Offset = "0x969F84", VA = "0x969F84")]
		public bool isRemoteProxyActive()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D66")]
		[Address(RVA = "0x969FE4", Offset = "0x969FE4", VA = "0x969FE4")]
		public bool CheckOnHitAllowed(Bullet bullet)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D67")]
		[Address(RVA = "0x96A11C", Offset = "0x96A11C", VA = "0x96A11C", Slot = "4")]
		public void OnHit(Bullet bullet, Ray ray, Rigidbody rb)
		{
		}

		[Token(Token = "0x6000D68")]
		[Address(RVA = "0x96A560", Offset = "0x96A560", VA = "0x96A560", Slot = "5")]
		public void ExecuteAction(int currentAction)
		{
		}

		[Token(Token = "0x6000D69")]
		[Address(RVA = "0x96AD94", Offset = "0x96AD94", VA = "0x96AD94", Slot = "6")]
		public void sendCover(bool v)
		{
		}

		[Token(Token = "0x6000D6A")]
		[Address(RVA = "0x96AF58", Offset = "0x96AF58", VA = "0x96AF58", Slot = "7")]
		public void sendSetTarget(Vector3 v)
		{
		}

		[Token(Token = "0x6000D6B")]
		[Address(RVA = "0x96B134", Offset = "0x96B134", VA = "0x96B134")]
		public void addRemoteTargets(List<AimTarget> targetsUpdated)
		{
		}

		[Token(Token = "0x6000D6C")]
		[Address(RVA = "0x96B4D8", Offset = "0x96B4D8", VA = "0x96B4D8", Slot = "8")]
		public void sendShowWeaponTakeable(WeaponTakeable weaponTakeable, string name)
		{
		}

		[Token(Token = "0x6000D6D")]
		[Address(RVA = "0x96B5FC", Offset = "0x96B5FC", VA = "0x96B5FC")]
		public Transform getPlayerTarget()
		{
			return null;
		}

		[Token(Token = "0x6000D6E")]
		[Address(RVA = "0x96B934", Offset = "0x96B934", VA = "0x96B934", Slot = "9")]
		public void sendPlayPath()
		{
		}

		[Token(Token = "0x6000D6F")]
		[Address(RVA = "0x96BAB0", Offset = "0x96BAB0", VA = "0x96BAB0")]
		internal void stopActions()
		{
		}

		[Token(Token = "0x6000D70")]
		[Address(RVA = "0x96BAD4", Offset = "0x96BAD4", VA = "0x96BAD4")]
		public NetworkCharacterController()
		{
		}
	}
	[Token(Token = "0x2000279")]
	public class NetworkCharacterProxy : MonoBehaviourPun, IPunObservable, RemoteCharacterController
	{
		[Token(Token = "0x4000C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CommonCharacterController m_character;

		[Token(Token = "0x4000C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string publicName;

		[Token(Token = "0x4000C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool bDebugProxyHostNotFound;

		[Token(Token = "0x6000D75")]
		[Address(RVA = "0x96BB50", Offset = "0x96BB50", VA = "0x96BB50")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D76")]
		[Address(RVA = "0x96BC40", Offset = "0x96BC40", VA = "0x96BC40")]
		private void searchProxyHost()
		{
		}

		[Token(Token = "0x6000D77")]
		[Address(RVA = "0x96BE34", Offset = "0x96BE34", VA = "0x96BE34")]
		private void assignProxy()
		{
		}

		[Token(Token = "0x6000D78")]
		[Address(RVA = "0x96BF0C", Offset = "0x96BF0C", VA = "0x96BF0C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D79")]
		[Address(RVA = "0x96BF10", Offset = "0x96BF10", VA = "0x96BF10")]
		public void sendOnHit(string bulletId, Ray ray, string colliderName)
		{
		}

		[Token(Token = "0x6000D7A")]
		[Address(RVA = "0x96C2CC", Offset = "0x96C2CC", VA = "0x96C2CC")]
		[PunRPC]
		private void OnHit(string bulletId, Vector3 direction, string colliderName)
		{
		}

		[Token(Token = "0x6000D7B")]
		[Address(RVA = "0x96AE4C", Offset = "0x96AE4C", VA = "0x96AE4C", Slot = "7")]
		public void sendCover(bool cover)
		{
		}

		[Token(Token = "0x6000D7C")]
		[Address(RVA = "0x96C8D4", Offset = "0x96C8D4", VA = "0x96C8D4")]
		[PunRPC]
		private void Cover(bool cover)
		{
		}

		[Token(Token = "0x6000D7D")]
		[Address(RVA = "0x96B00C", Offset = "0x96B00C", VA = "0x96B00C", Slot = "8")]
		public void sendSetTarget(Vector3 v)
		{
		}

		[Token(Token = "0x6000D7E")]
		[Address(RVA = "0x96CA5C", Offset = "0x96CA5C", VA = "0x96CA5C")]
		private bool isCharacterReady(bool bCheckAction = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D7F")]
		[Address(RVA = "0x96CBC8", Offset = "0x96CBC8", VA = "0x96CBC8")]
		[PunRPC]
		private void SetTarget(Vector3 target)
		{
		}

		[Token(Token = "0x6000D80")]
		[Address(RVA = "0x96CD7C", Offset = "0x96CD7C", VA = "0x96CD7C")]
		public void sendExecuteNewAction(int index)
		{
		}

		[Token(Token = "0x6000D81")]
		[Address(RVA = "0x96CF68", Offset = "0x96CF68", VA = "0x96CF68")]
		[PunRPC]
		private void ExecuteNewAction(int index, Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x6000D82")]
		[Address(RVA = "0x96D160", Offset = "0x96D160", VA = "0x96D160", Slot = "4")]
		public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x6000D83")]
		[Address(RVA = "0x96BACC", Offset = "0x96BACC", VA = "0x96BACC")]
		internal void stopActions()
		{
		}

		[Token(Token = "0x6000D84")]
		[Address(RVA = "0x96A380", Offset = "0x96A380", VA = "0x96A380", Slot = "5")]
		public void OnHit(Bullet bullet, Ray ray, Rigidbody rb)
		{
		}

		[Token(Token = "0x6000D85")]
		[Address(RVA = "0x96AD90", Offset = "0x96AD90", VA = "0x96AD90", Slot = "6")]
		public void ExecuteAction(int currentAction)
		{
		}

		[Token(Token = "0x6000D86")]
		[Address(RVA = "0x96B58C", Offset = "0x96B58C", VA = "0x96B58C", Slot = "9")]
		public void sendShowWeaponTakeable(WeaponTakeable weaponTakeable, string name)
		{
		}

		[Token(Token = "0x6000D87")]
		[Address(RVA = "0x96B9E8", Offset = "0x96B9E8", VA = "0x96B9E8", Slot = "10")]
		public void sendPlayPath()
		{
		}

		[Token(Token = "0x6000D88")]
		[Address(RVA = "0x96D164", Offset = "0x96D164", VA = "0x96D164")]
		[PunRPC]
		private void PlayPath()
		{
		}

		[Token(Token = "0x6000D89")]
		[Address(RVA = "0x96D340", Offset = "0x96D340", VA = "0x96D340")]
		public NetworkCharacterProxy()
		{
		}
	}
	[Token(Token = "0x200027E")]
	public class NetworkController : MonoBehaviourPunCallbacks
	{
		[Token(Token = "0x2000282")]
		[CompilerGenerated]
		private sealed class <StartGameCoroutine>d__84 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000C82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000C83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000C84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NetworkController <>4__this;

			[Token(Token = "0x4000C85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool bScene;

			[Token(Token = "0x4000C86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private string <strCharacterId>5__2;

			[Token(Token = "0x170000ED")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000DE2")]
				[Address(RVA = "0x972FDC", Offset = "0x972FDC", VA = "0x972FDC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000EE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000DE4")]
				[Address(RVA = "0x973024", Offset = "0x973024", VA = "0x973024", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000DDF")]
			[Address(RVA = "0x971BC8", Offset = "0x971BC8", VA = "0x971BC8")]
			[DebuggerHidden]
			public <StartGameCoroutine>d__84(int <>1__state)
			{
			}

			[Token(Token = "0x6000DE0")]
			[Address(RVA = "0x972E04", Offset = "0x972E04", VA = "0x972E04", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000DE1")]
			[Address(RVA = "0x972E08", Offset = "0x972E08", VA = "0x972E08", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000DE3")]
			[Address(RVA = "0x972FE4", Offset = "0x972FE4", VA = "0x972FE4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000C58")]
		private const string ROOM_FULL = "online_roomfull";

		[Token(Token = "0x4000C59")]
		private const string ROOM_PLAYING = "online_roomplaying";

		[Token(Token = "0x4000C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool automaticallyLoadLevels;

		[Token(Token = "0x4000C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<string> unassignedSwatNames;

		[Token(Token = "0x4000C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static NetworkController Instance;

		[Token(Token = "0x4000C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool isConnectingToRoom;

		[Token(Token = "0x4000C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool isConnectedToRoom;

		[Token(Token = "0x4000C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		public bool isConnectingToMaster;

		[Token(Token = "0x4000C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string gameVersion;

		[Token(Token = "0x4000C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private byte maxPlayersPerRoom;

		[Token(Token = "0x4000C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public int expectedOnlinePlayers;

		[Token(Token = "0x4000C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public string currentRoomName;

		[Token(Token = "0x4000C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public string currentRoomCode;

		[Token(Token = "0x4000C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static string SWAT_0;

		[Token(Token = "0x4000C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static string SWAT_1;

		[Token(Token = "0x4000C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static string SWAT_2;

		[Token(Token = "0x4000C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static string PREFIX_ROOM_NAME_REPLY;

		[Token(Token = "0x4000C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static string ROOM_CODE;

		[Token(Token = "0x4000C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static string ROOM_RANDOM;

		[Token(Token = "0x4000C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static string ROOM_CLOSED;

		[Token(Token = "0x4000C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private TypedLobby _defaultLobby;

		[Token(Token = "0x4000C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private TypedLobby _randomLobby;

		[Token(Token = "0x4000C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static string SWAT_NAME;

		[Token(Token = "0x4000C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public bool realtimeMultiplayer;

		[Token(Token = "0x4000C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private TypedLobby currentLobby;

		[Token(Token = "0x4000C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static string privateRandomNameChars;

		[Token(Token = "0x4000C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public float onPauseTimestamp;

		[Token(Token = "0x14000008")]
		public event Action OnGameConnected
		{
			[Token(Token = "0x6000D94")]
			[Address(RVA = "0x96D440", Offset = "0x96D440", VA = "0x96D440")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6000D95")]
			[Address(RVA = "0x96D4DC", Offset = "0x96D4DC", VA = "0x96D4DC")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000009")]
		public event Action<DisconnectCause> OnGameDisconnected
		{
			[Token(Token = "0x6000D96")]
			[Address(RVA = "0x96D578", Offset = "0x96D578", VA = "0x96D578")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6000D97")]
			[Address(RVA = "0x96D628", Offset = "0x96D628", VA = "0x96D628")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400000A")]
		public event Action OnGameJoinedRoom
		{
			[Token(Token = "0x6000D98")]
			[Address(RVA = "0x96D6D8", Offset = "0x96D6D8", VA = "0x96D6D8")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6000D99")]
			[Address(RVA = "0x96D774", Offset = "0x96D774", VA = "0x96D774")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400000B")]
		public event Action<string> OnGameJoinRoomError
		{
			[Token(Token = "0x6000D9A")]
			[Address(RVA = "0x96D810", Offset = "0x96D810", VA = "0x96D810")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6000D9B")]
			[Address(RVA = "0x96D8C0", Offset = "0x96D8C0", VA = "0x96D8C0")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400000C")]
		public event Action OnGamePlayerEnteredRoom
		{
			[Token(Token = "0x6000D9C")]
			[Address(RVA = "0x96D970", Offset = "0x96D970", VA = "0x96D970")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6000D9D")]
			[Address(RVA = "0x96DA0C", Offset = "0x96DA0C", VA = "0x96DA0C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400000D")]
		public event Action OnTeammateDisconnected
		{
			[Token(Token = "0x6000D9E")]
			[Address(RVA = "0x96DAA8", Offset = "0x96DAA8", VA = "0x96DAA8")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6000D9F")]
			[Address(RVA = "0x96DB44", Offset = "0x96DB44", VA = "0x96DB44")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6000DA0")]
		[Address(RVA = "0x96DBE0", Offset = "0x96DBE0", VA = "0x96DBE0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000DA1")]
		[Address(RVA = "0x96DF48", Offset = "0x96DF48", VA = "0x96DF48")]
		private void Start()
		{
		}

		[Token(Token = "0x6000DA2")]
		[Address(RVA = "0x96DFB0", Offset = "0x96DFB0", VA = "0x96DFB0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DA3")]
		[Address(RVA = "0x96DFB4", Offset = "0x96DFB4", VA = "0x96DFB4")]
		private void addPlayer(Player player)
		{
		}

		[Token(Token = "0x6000DA4")]
		[Address(RVA = "0x96E528", Offset = "0x96E528", VA = "0x96E528")]
		private void removePlayer(Player player)
		{
		}

		[Token(Token = "0x6000DA5")]
		[Address(RVA = "0x96E638", Offset = "0x96E638", VA = "0x96E638")]
		private void populateUnassignedSwatNames()
		{
		}

		[Token(Token = "0x6000DA6")]
		[Address(RVA = "0x96DE4C", Offset = "0x96DE4C", VA = "0x96DE4C")]
		private void cleanPlayers()
		{
		}

		[Token(Token = "0x6000DA7")]
		[Address(RVA = "0x96A0CC", Offset = "0x96A0CC", VA = "0x96A0CC")]
		public bool isConnected()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DA8")]
		[Address(RVA = "0x96E818", Offset = "0x96E818", VA = "0x96E818")]
		public bool isMasterClient()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DA9")]
		[Address(RVA = "0x96E874", Offset = "0x96E874", VA = "0x96E874")]
		public void Connect()
		{
		}

		[Token(Token = "0x6000DAA")]
		[Address(RVA = "0x96E97C", Offset = "0x96E97C", VA = "0x96E97C")]
		private void prepareConnectionAndConnect()
		{
		}

		[Token(Token = "0x6000DAB")]
		[Address(RVA = "0x96EAC8", Offset = "0x96EAC8", VA = "0x96EAC8")]
		private void errorConnect(string str)
		{
		}

		[Token(Token = "0x6000DAC")]
		[Address(RVA = "0x96E980", Offset = "0x96E980", VA = "0x96E980")]
		private void connectImpl()
		{
		}

		[Token(Token = "0x6000DAD")]
		[Address(RVA = "0x9633D0", Offset = "0x9633D0", VA = "0x9633D0")]
		public void Disconnect()
		{
		}

		[Token(Token = "0x6000DAE")]
		[Address(RVA = "0x96EBC8", Offset = "0x96EBC8", VA = "0x96EBC8", Slot = "44")]
		public override void OnConnectedToMaster()
		{
		}

		[Token(Token = "0x6000DAF")]
		[Address(RVA = "0x96EDC8", Offset = "0x96EDC8", VA = "0x96EDC8", Slot = "37")]
		public override void OnDisconnected(DisconnectCause cause)
		{
		}

		[Token(Token = "0x6000DB0")]
		[Address(RVA = "0x96F4C0", Offset = "0x96F4C0", VA = "0x96F4C0")]
		public void setDefaultNickName(string name)
		{
		}

		[Token(Token = "0x6000DB1")]
		[Address(RVA = "0x96F760", Offset = "0x96F760", VA = "0x96F760")]
		public void setNickName(string name)
		{
		}

		[Token(Token = "0x6000DB2")]
		[Address(RVA = "0x96F82C", Offset = "0x96F82C", VA = "0x96F82C")]
		public void JoinRandomRoom()
		{
		}

		[Token(Token = "0x6000DB3")]
		[Address(RVA = "0x968948", Offset = "0x968948", VA = "0x968948")]
		public void JoinReplyRoom()
		{
		}

		[Token(Token = "0x6000DB4")]
		[Address(RVA = "0x96FAD4", Offset = "0x96FAD4", VA = "0x96FAD4", Slot = "43")]
		public override void OnJoinRandomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x6000DB5")]
		[Address(RVA = "0x96FB7C", Offset = "0x96FB7C", VA = "0x96FB7C")]
		public void CreateRoom([Optional] string strName, [Optional] string strRoomCode, [Optional] TypedLobby lobby, bool bJoin = true)
		{
		}

		[Token(Token = "0x6000DB6")]
		[Address(RVA = "0x97042C", Offset = "0x97042C", VA = "0x97042C")]
		public void JoinRoom(string strRoomCode)
		{
		}

		[Token(Token = "0x6000DB7")]
		[Address(RVA = "0x970724", Offset = "0x970724", VA = "0x970724", Slot = "34")]
		public override void OnCreatedRoom()
		{
		}

		[Token(Token = "0x6000DB8")]
		[Address(RVA = "0x9705E0", Offset = "0x9705E0", VA = "0x9705E0")]
		public void FindPrivateRoom(string strRoomCode)
		{
		}

		[Token(Token = "0x6000DB9")]
		[Address(RVA = "0x96E360", Offset = "0x96E360", VA = "0x96E360")]
		private bool isRoomOpen(RoomInfo room)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DBA")]
		[Address(RVA = "0x970938", Offset = "0x970938", VA = "0x970938", Slot = "39")]
		public override void OnRoomListUpdate(List<RoomInfo> roomList)
		{
		}

		[Token(Token = "0x6000DBB")]
		[Address(RVA = "0x970F84", Offset = "0x970F84", VA = "0x970F84", Slot = "40")]
		public override void OnJoinedRoom()
		{
		}

		[Token(Token = "0x6000DBC")]
		[Address(RVA = "0x9713C0", Offset = "0x9713C0", VA = "0x9713C0", Slot = "33")]
		public override void OnJoinRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x6000DBD")]
		[Address(RVA = "0x971510", Offset = "0x971510", VA = "0x971510", Slot = "32")]
		public override void OnCreateRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x6000DBE")]
		[Address(RVA = "0x96F988", Offset = "0x96F988", VA = "0x96F988")]
		public void LeaveRoom()
		{
		}

		[Token(Token = "0x6000DBF")]
		[Address(RVA = "0x96EB70", Offset = "0x96EB70", VA = "0x96EB70")]
		private void LogFeedback(string message)
		{
		}

		[Token(Token = "0x6000DC0")]
		[Address(RVA = "0x961B84", Offset = "0x961B84", VA = "0x961B84")]
		public void CloseRoomForNewPlayers(int expectedPlayers = -1)
		{
		}

		[Token(Token = "0x6000DC1")]
		[Address(RVA = "0x970828", Offset = "0x970828", VA = "0x970828")]
		private bool getBoolProperty(RoomInfo room, string property)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DC2")]
		[Address(RVA = "0x9716FC", Offset = "0x9716FC", VA = "0x9716FC")]
		public string generatePrivateRoomName()
		{
			return null;
		}

		[Token(Token = "0x6000DC3")]
		[Address(RVA = "0x971838", Offset = "0x971838", VA = "0x971838", Slot = "41")]
		public override void OnPlayerEnteredRoom(Player newPlayer)
		{
		}

		[Token(Token = "0x6000DC4")]
		[Address(RVA = "0x96E3DC", Offset = "0x96E3DC", VA = "0x96E3DC")]
		public static string GetPlayerSwatName(Player player)
		{
			return null;
		}

		[Token(Token = "0x6000DC5")]
		[Address(RVA = "0x96E4A0", Offset = "0x96E4A0", VA = "0x96E4A0")]
		public static void RemovePlayerSwatName(Player player)
		{
		}

		[Token(Token = "0x6000DC6")]
		[Address(RVA = "0x971A48", Offset = "0x971A48", VA = "0x971A48", Slot = "42")]
		public override void OnPlayerLeftRoom(Player newPlayer)
		{
		}

		[Token(Token = "0x6000DC7")]
		[Address(RVA = "0x9677C8", Offset = "0x9677C8", VA = "0x9677C8")]
		public void StartGame(bool bScene = true)
		{
		}

		[Token(Token = "0x6000DC8")]
		[Address(RVA = "0x971B4C", Offset = "0x971B4C", VA = "0x971B4C")]
		[IteratorStateMachine(typeof(<StartGameCoroutine>d__84))]
		private IEnumerator StartGameCoroutine(bool bScene)
		{
			return null;
		}

		[Token(Token = "0x6000DC9")]
		[Address(RVA = "0x971BF0", Offset = "0x971BF0", VA = "0x971BF0")]
		private void StartNetworkControllers(bool bScene)
		{
		}

		[Token(Token = "0x6000DCA")]
		[Address(RVA = "0x961B34", Offset = "0x961B34", VA = "0x961B34")]
		public static bool isOnlineGame()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DCB")]
		[Address(RVA = "0x971DCC", Offset = "0x971DCC", VA = "0x971DCC")]
		public void ChangeMasterClientIfAvailable()
		{
		}

		[Token(Token = "0x6000DCC")]
		[Address(RVA = "0x972130", Offset = "0x972130", VA = "0x972130", Slot = "31")]
		public override void OnMasterClientSwitched(Player newMasterClient)
		{
		}

		[Token(Token = "0x6000DCD")]
		[Address(RVA = "0x96EFC4", Offset = "0x96EFC4", VA = "0x96EFC4")]
		public void setOnlinePlayerBecomesMainClient(bool bValue)
		{
		}

		[Token(Token = "0x6000DCE")]
		[Address(RVA = "0x9726C8", Offset = "0x9726C8", VA = "0x9726C8")]
		private void recalculateUnassignedSwatNames()
		{
		}

		[Token(Token = "0x6000DCF")]
		[Address(RVA = "0x96ED28", Offset = "0x96ED28", VA = "0x96ED28")]
		private void sendGameClosedError()
		{
		}

		[Token(Token = "0x6000DD0")]
		[Address(RVA = "0x970EE4", Offset = "0x970EE4", VA = "0x970EE4")]
		private void sendGamePlayingError()
		{
		}

		[Token(Token = "0x6000DD1")]
		[Address(RVA = "0x972878", Offset = "0x972878", VA = "0x972878")]
		public int getRandomSeed()
		{
			return default(int);
		}

		[Token(Token = "0x6000DD2")]
		[Address(RVA = "0x9728FC", Offset = "0x9728FC", VA = "0x9728FC", Slot = "30")]
		public override void OnLeftRoom()
		{
		}

		[Token(Token = "0x6000DD3")]
		[Address(RVA = "0x97299C", Offset = "0x97299C", VA = "0x97299C")]
		private void OnApplicationPause(bool pause)
		{
		}

		[Token(Token = "0x6000DD4")]
		[Address(RVA = "0x972AE0", Offset = "0x972AE0", VA = "0x972AE0")]
		public NetworkController()
		{
		}
	}
	[Token(Token = "0x2000283")]
	public class NetworkFactory : MonoBehaviour
	{
		[Token(Token = "0x4000C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static NetworkFactory Instance;

		[Token(Token = "0x4000C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject OnlinePlayer;

		[Token(Token = "0x4000C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject OnlinePlayerPart;

		[Token(Token = "0x4000C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject NetworkBulletController;

		[Token(Token = "0x4000C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject NetworkCharacterProxy;

		[Token(Token = "0x4000C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject NetworkWeaponTakeableController;

		[Token(Token = "0x6000DE5")]
		[Address(RVA = "0x97302C", Offset = "0x97302C", VA = "0x97302C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000DE6")]
		[Address(RVA = "0x973078", Offset = "0x973078", VA = "0x973078")]
		private void Start()
		{
		}

		[Token(Token = "0x6000DE7")]
		[Address(RVA = "0x97307C", Offset = "0x97307C", VA = "0x97307C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DE8")]
		[Address(RVA = "0x973080", Offset = "0x973080", VA = "0x973080")]
		public NetworkFactory()
		{
		}
	}
	[Token(Token = "0x2000284")]
	public class OnlinePlayer : MonoBehaviourPun, IPunObservable
	{
		[Token(Token = "0x2000285")]
		[CompilerGenerated]
		private sealed class <ShowRemotePlayer>d__20 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000C9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000C9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x170000F0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E07")]
				[Address(RVA = "0x975758", Offset = "0x975758", VA = "0x975758", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000F1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E09")]
				[Address(RVA = "0x9757A0", Offset = "0x9757A0", VA = "0x9757A0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E04")]
			[Address(RVA = "0x973FD0", Offset = "0x973FD0", VA = "0x973FD0")]
			[DebuggerHidden]
			public <ShowRemotePlayer>d__20(int <>1__state)
			{
			}

			[Token(Token = "0x6000E05")]
			[Address(RVA = "0x975720", Offset = "0x975720", VA = "0x975720", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E06")]
			[Address(RVA = "0x975724", Offset = "0x975724", VA = "0x975724", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E08")]
			[Address(RVA = "0x975760", Offset = "0x975760", VA = "0x975760", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject prefab;

		[Token(Token = "0x4000C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AimTarget aimTarget;

		[Token(Token = "0x4000C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject m_head;

		[Token(Token = "0x4000C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject m_leftHand;

		[Token(Token = "0x4000C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject m_rightHand;

		[Token(Token = "0x4000C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string PREFIX;

		[Token(Token = "0x4000C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool ready;

		[Token(Token = "0x4000C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static OnlinePlayer myLocalPlayer;

		[Token(Token = "0x4000C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string localId;

		[Token(Token = "0x4000C96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static List<OnlinePlayer> players;

		[Token(Token = "0x4000C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static bool allPlayersDead;

		[Token(Token = "0x4000C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public TextMeshPro nickName;

		[Token(Token = "0x4000C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public TextMeshPro lifes;

		[Token(Token = "0x170000EF")]
		public bool isAlive
		{
			[Token(Token = "0x6000DE9")]
			[Address(RVA = "0x96B918", Offset = "0x96B918", VA = "0x96B918")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000DEA")]
			[Address(RVA = "0x973088", Offset = "0x973088", VA = "0x973088")]
			set
			{
			}
		}

		[Token(Token = "0x6000DEB")]
		[Address(RVA = "0x9730A8", Offset = "0x9730A8", VA = "0x9730A8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000DEC")]
		[Address(RVA = "0x973464", Offset = "0x973464", VA = "0x973464")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DED")]
		[Address(RVA = "0x9677EC", Offset = "0x9677EC", VA = "0x9677EC")]
		public static void cleanPlayers()
		{
		}

		[Token(Token = "0x6000DEE")]
		[Address(RVA = "0x9730AC", Offset = "0x9730AC", VA = "0x9730AC")]
		private void initializeParts()
		{
		}

		[Token(Token = "0x6000DEF")]
		[Address(RVA = "0x973F70", Offset = "0x973F70", VA = "0x973F70")]
		[IteratorStateMachine(typeof(<ShowRemotePlayer>d__20))]
		private IEnumerator ShowRemotePlayer()
		{
			return null;
		}

		[Token(Token = "0x6000DF0")]
		[Address(RVA = "0x96816C", Offset = "0x96816C", VA = "0x96816C")]
		public void disableOnlinePlayer()
		{
		}

		[Token(Token = "0x6000DF1")]
		[Address(RVA = "0x973FF8", Offset = "0x973FF8", VA = "0x973FF8", Slot = "4")]
		private void Photon.Pun.IPunObservable.OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x6000DF2")]
		[Address(RVA = "0x9737A0", Offset = "0x9737A0", VA = "0x9737A0")]
		private void initializeVRParts()
		{
		}

		[Token(Token = "0x6000DF3")]
		[Address(RVA = "0x973644", Offset = "0x973644", VA = "0x973644")]
		private void disableRemoteParts()
		{
		}

		[Token(Token = "0x6000DF4")]
		[Address(RVA = "0x968B88", Offset = "0x968B88", VA = "0x968B88")]
		public void setReady()
		{
		}

		[Token(Token = "0x6000DF5")]
		[Address(RVA = "0x973FFC", Offset = "0x973FFC", VA = "0x973FFC")]
		[PunRPC]
		private void SetReadyRPC()
		{
		}

		[Token(Token = "0x6000DF6")]
		[Address(RVA = "0x965E24", Offset = "0x965E24", VA = "0x965E24")]
		public void sendPlayerDead()
		{
		}

		[Token(Token = "0x6000DF7")]
		[Address(RVA = "0x9740AC", Offset = "0x9740AC", VA = "0x9740AC")]
		[PunRPC]
		private void PlayerDead()
		{
		}

		[Token(Token = "0x6000DF8")]
		[Address(RVA = "0x9742B0", Offset = "0x9742B0", VA = "0x9742B0")]
		public void sendBeginInteraction(WeaponModel model, bool isRightHand, Vector3 localPosition, Quaternion localRotation)
		{
		}

		[Token(Token = "0x6000DF9")]
		[Address(RVA = "0x9745B4", Offset = "0x9745B4", VA = "0x9745B4")]
		[PunRPC]
		public void BeginInteraction(WeaponModel model, bool isRightHand, Vector3 localPosition, Quaternion localRotation)
		{
		}

		[Token(Token = "0x6000DFA")]
		[Address(RVA = "0x974CC0", Offset = "0x974CC0", VA = "0x974CC0")]
		public void sendEndInteraction(bool isRightHand)
		{
		}

		[Token(Token = "0x6000DFB")]
		[Address(RVA = "0x974E3C", Offset = "0x974E3C", VA = "0x974E3C")]
		[PunRPC]
		public void EndInteraction(string strPlayer, bool isRightHand)
		{
		}

		[Token(Token = "0x6000DFC")]
		[Address(RVA = "0x967F24", Offset = "0x967F24", VA = "0x967F24")]
		public static bool allPlayersReady()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DFD")]
		[Address(RVA = "0x966CD4", Offset = "0x966CD4", VA = "0x966CD4")]
		public static bool atLeastOnePlayerAlive()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DFE")]
		[Address(RVA = "0x975094", Offset = "0x975094", VA = "0x975094")]
		public static int getPlayersAlive()
		{
			return default(int);
		}

		[Token(Token = "0x6000DFF")]
		[Address(RVA = "0x97521C", Offset = "0x97521C", VA = "0x97521C")]
		public static OnlinePlayer getPlayer(string strName)
		{
			return null;
		}

		[Token(Token = "0x6000E00")]
		[Address(RVA = "0x9753C8", Offset = "0x9753C8", VA = "0x9753C8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000E01")]
		[Address(RVA = "0x97562C", Offset = "0x97562C", VA = "0x97562C")]
		public OnlinePlayer()
		{
		}
	}
	[Token(Token = "0x2000286")]
	public class OnlinePlayerPart : MonoBehaviourPun, IPunObservable
	{
		[Token(Token = "0x4000C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject objectViewed;

		[Token(Token = "0x4000C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Rigidbody cachedRigidbody;

		[Token(Token = "0x4000C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 lastPosition;

		[Token(Token = "0x4000C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Quaternion lastRotation;

		[Token(Token = "0x4000CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 newPosition;

		[Token(Token = "0x4000CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Quaternion newRotation;

		[Token(Token = "0x4000CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float lastTime;

		[Token(Token = "0x4000CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool dirty;

		[Token(Token = "0x4000CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private OnlinePlayer player;

		[Token(Token = "0x6000E0A")]
		[Address(RVA = "0x9757A8", Offset = "0x9757A8", VA = "0x9757A8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E0B")]
		[Address(RVA = "0x975BA8", Offset = "0x975BA8", VA = "0x975BA8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E0C")]
		[Address(RVA = "0x975E28", Offset = "0x975E28", VA = "0x975E28")]
		internal static Vector3 GetAngularVelocity(Quaternion previousRotation, Quaternion newRotation)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E0D")]
		[Address(RVA = "0x975F6C", Offset = "0x975F6C", VA = "0x975F6C", Slot = "4")]
		private void Photon.Pun.IPunObservable.OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x6000E0E")]
		[Address(RVA = "0x9763AC", Offset = "0x9763AC", VA = "0x9763AC")]
		public OnlinePlayerPart()
		{
		}
	}
}
namespace CrisisVRigade
{
	[Token(Token = "0x2000287")]
	public class Settings : MonoBehaviour
	{
		[Token(Token = "0x4000CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ReloadMode reloadMode;

		[Token(Token = "0x4000CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerHeight playerHeight;

		[Token(Token = "0x4000CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public WalkieTalkieSettings walkieTalkieSettings;

		[Token(Token = "0x4000CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ButtonConfig buttonConfig;

		[Token(Token = "0x4000CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public LanguageSettings languageSettings;

		[Token(Token = "0x4000CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UIButton toggleSettingsMenu;

		[Token(Token = "0x4000CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public UIButton closeSettingsMenu;

		[Token(Token = "0x4000CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject settingsMenu;

		[Token(Token = "0x6000E0F")]
		[Address(RVA = "0x9763B4", Offset = "0x9763B4", VA = "0x9763B4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E10")]
		[Address(RVA = "0x97664C", Offset = "0x97664C", VA = "0x97664C")]
		private void ToggleSettingsMenu(UIButton button)
		{
		}

		[Token(Token = "0x6000E11")]
		[Address(RVA = "0x97675C", Offset = "0x97675C", VA = "0x97675C")]
		private void OpenSettingsMenu()
		{
		}

		[Token(Token = "0x6000E12")]
		[Address(RVA = "0x976690", Offset = "0x976690", VA = "0x976690")]
		private void CloseSettingsMenu(UIButton button)
		{
		}

		[Token(Token = "0x6000E13")]
		[Address(RVA = "0x9764C0", Offset = "0x9764C0", VA = "0x9764C0")]
		private void initSettings()
		{
		}

		[Token(Token = "0x6000E14")]
		[Address(RVA = "0x961FA0", Offset = "0x961FA0", VA = "0x961FA0")]
		public void saveSettings()
		{
		}

		[Token(Token = "0x6000E15")]
		[Address(RVA = "0x97681C", Offset = "0x97681C", VA = "0x97681C")]
		public Settings()
		{
		}
	}
}
namespace CrisisVRigade.UI
{
	[Token(Token = "0x2000288")]
	public class Keyboard : MonoBehaviour
	{
		[Token(Token = "0x4000CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public KeyboardScreen screen;

		[Token(Token = "0x4000CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent okEvent;

		[Token(Token = "0x4000CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent cancelEvent;

		[Token(Token = "0x6000E16")]
		[Address(RVA = "0x976824", Offset = "0x976824", VA = "0x976824")]
		public void show()
		{
		}

		[Token(Token = "0x6000E17")]
		[Address(RVA = "0x976880", Offset = "0x976880", VA = "0x976880")]
		public void hide()
		{
		}

		[Token(Token = "0x6000E18")]
		[Address(RVA = "0x9768CC", Offset = "0x9768CC", VA = "0x9768CC")]
		public void keyPressed(KeyboardKey key)
		{
		}

		[Token(Token = "0x6000E19")]
		[Address(RVA = "0x976968", Offset = "0x976968", VA = "0x976968")]
		public Keyboard()
		{
		}
	}
	[Token(Token = "0x2000289")]
	public enum KeyBoardKeyFunction
	{
		[Token(Token = "0x4000CB1")]
		None,
		[Token(Token = "0x4000CB2")]
		Backspace,
		[Token(Token = "0x4000CB3")]
		Ok,
		[Token(Token = "0x4000CB4")]
		Cancel
	}
	[Token(Token = "0x200028A")]
	public class KeyboardKey : HitTarget, IKeyboardPointable
	{
		[Token(Token = "0x4000CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public KeyBoardKeyFunction function;

		[Token(Token = "0x4000CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Keyboard keyboard;

		[Token(Token = "0x4000CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string character;

		[Token(Token = "0x4000CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 initScale;

		[Token(Token = "0x4000CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 initPosition;

		[Token(Token = "0x4000CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 initUp;

		[Token(Token = "0x6000E1A")]
		[Address(RVA = "0x9769EC", Offset = "0x9769EC", VA = "0x9769EC")]
		public void Awake()
		{
		}

		[Token(Token = "0x6000E1B")]
		[Address(RVA = "0x976AA0", Offset = "0x976AA0", VA = "0x976AA0", Slot = "4")]
		public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E1C")]
		[Address(RVA = "0x976C20", Offset = "0x976C20", VA = "0x976C20")]
		public string getCharacter()
		{
			return null;
		}

		[Token(Token = "0x6000E1D")]
		[Address(RVA = "0x976C28", Offset = "0x976C28", VA = "0x976C28", Slot = "7")]
		public void OnHoverAnimation(bool enable)
		{
		}

		[Token(Token = "0x6000E1E")]
		[Address(RVA = "0x976C84", Offset = "0x976C84", VA = "0x976C84")]
		public KeyboardKey()
		{
		}
	}
	[Token(Token = "0x200028B")]
	public class KeyboardScreen : MonoBehaviour
	{
		[Token(Token = "0x4000CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string DEFAULT_TEXT;

		[Token(Token = "0x4000CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string BLANK_CHAR;

		[Token(Token = "0x4000CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextMeshPro textScreen;

		[Token(Token = "0x4000CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int characterLimit;

		[Token(Token = "0x4000CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int characterMinimum;

		[Token(Token = "0x4000CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool fillCharacters;

		[Token(Token = "0x4000CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool caretEnabled;

		[Token(Token = "0x4000CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float caretBlinkTime;

		[Token(Token = "0x4000CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool bCaretActive;

		[Token(Token = "0x4000CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float lastCaretChange;

		[Token(Token = "0x4000CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string currentText;

		[Token(Token = "0x6000E1F")]
		[Address(RVA = "0x976C8C", Offset = "0x976C8C", VA = "0x976C8C")]
		public bool writeCharacter(string character)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E20")]
		[Address(RVA = "0x976EB4", Offset = "0x976EB4", VA = "0x976EB4")]
		public void deleteCharacter()
		{
		}

		[Token(Token = "0x6000E21")]
		[Address(RVA = "0x976D8C", Offset = "0x976D8C", VA = "0x976D8C")]
		private void fillDefaultCharacters()
		{
		}

		[Token(Token = "0x6000E22")]
		[Address(RVA = "0x976EF8", Offset = "0x976EF8", VA = "0x976EF8")]
		public bool isComplete()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E23")]
		[Address(RVA = "0x976F20", Offset = "0x976F20", VA = "0x976F20")]
		public void Clear()
		{
		}

		[Token(Token = "0x6000E24")]
		[Address(RVA = "0x976FEC", Offset = "0x976FEC", VA = "0x976FEC")]
		public string getText()
		{
			return null;
		}

		[Token(Token = "0x6000E25")]
		[Address(RVA = "0x976FF4", Offset = "0x976FF4", VA = "0x976FF4")]
		public void setText(string str)
		{
		}

		[Token(Token = "0x6000E26")]
		[Address(RVA = "0x977090", Offset = "0x977090", VA = "0x977090")]
		public void blinkText(bool blink)
		{
		}

		[Token(Token = "0x6000E27")]
		[Address(RVA = "0x9770F8", Offset = "0x9770F8", VA = "0x9770F8")]
		public void enableCaret(bool bValue)
		{
		}

		[Token(Token = "0x6000E28")]
		[Address(RVA = "0x977104", Offset = "0x977104", VA = "0x977104")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E29")]
		[Address(RVA = "0x976D60", Offset = "0x976D60", VA = "0x976D60")]
		private void hideCaret()
		{
		}

		[Token(Token = "0x6000E2A")]
		[Address(RVA = "0x976E44", Offset = "0x976E44", VA = "0x976E44")]
		private void showCaret()
		{
		}

		[Token(Token = "0x6000E2B")]
		[Address(RVA = "0x977184", Offset = "0x977184", VA = "0x977184")]
		public KeyboardScreen()
		{
		}
	}
}
namespace CrisisVRigade2
{
	[Token(Token = "0x200028C")]
	public class CV2_BHapticsManager : MonoBehaviour
	{
		[Token(Token = "0x200028D")]
		[CompilerGenerated]
		private sealed class <HeartBeatCoroutine>d__22 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000CD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000CD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000CD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CV2_BHapticsManager <>4__this;

			[Token(Token = "0x170000F2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E3C")]
				[Address(RVA = "0x978608", Offset = "0x978608", VA = "0x978608", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000F3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E3E")]
				[Address(RVA = "0x978650", Offset = "0x978650", VA = "0x978650", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E39")]
			[Address(RVA = "0x9783BC", Offset = "0x9783BC", VA = "0x9783BC")]
			[DebuggerHidden]
			public <HeartBeatCoroutine>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x6000E3A")]
			[Address(RVA = "0x9784E4", Offset = "0x9784E4", VA = "0x9784E4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E3B")]
			[Address(RVA = "0x9784E8", Offset = "0x9784E8", VA = "0x9784E8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E3D")]
			[Address(RVA = "0x978610", Offset = "0x978610", VA = "0x978610", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HapticSender shotPistolRightHand;

		[Token(Token = "0x4000CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HapticSender shotPistolLeftHand;

		[Token(Token = "0x4000CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HapticSender shotRifleRightHand;

		[Token(Token = "0x4000CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HapticSender shotRifleLeftHand;

		[Token(Token = "0x4000CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public HapticSender impactPistol;

		[Token(Token = "0x4000CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public HapticSender impactRifle;

		[Token(Token = "0x4000CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public HapticSender explosion;

		[Token(Token = "0x4000CCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public HapticSender explosionWave;

		[Token(Token = "0x4000CCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public HapticSender death;

		[Token(Token = "0x4000CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public HapticSender heartBeat;

		[Token(Token = "0x4000CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public HapticSender bonusLife;

		[Token(Token = "0x4000CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool initialized;

		[Token(Token = "0x6000E2C")]
		[Address(RVA = "0x97722C", Offset = "0x97722C", VA = "0x97722C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E2D")]
		[Address(RVA = "0x977230", Offset = "0x977230", VA = "0x977230")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E2E")]
		[Address(RVA = "0x9775D0", Offset = "0x9775D0", VA = "0x9775D0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000E2F")]
		[Address(RVA = "0x977234", Offset = "0x977234", VA = "0x977234")]
		private void Initialize()
		{
		}

		[Token(Token = "0x6000E30")]
		[Address(RVA = "0x977748", Offset = "0x977748", VA = "0x977748")]
		private void OnPlayerHit(Bullet bullet, Ray ray, RaycastHit hit)
		{
		}

		[Token(Token = "0x6000E31")]
		[Address(RVA = "0x977AB4", Offset = "0x977AB4", VA = "0x977AB4")]
		private void OnPlayerDead()
		{
		}

		[Token(Token = "0x6000E32")]
		[Address(RVA = "0x977B70", Offset = "0x977B70", VA = "0x977B70")]
		private void OnWeaponFire(Bullet bullet)
		{
		}

		[Token(Token = "0x6000E33")]
		[Address(RVA = "0x977FEC", Offset = "0x977FEC", VA = "0x977FEC")]
		private void OnExplosion(Vector3 explosionPosition)
		{
		}

		[Token(Token = "0x6000E34")]
		[Address(RVA = "0x978184", Offset = "0x978184", VA = "0x978184")]
		private void OnExplosionWave(Vector3 explosionPosition)
		{
		}

		[Token(Token = "0x6000E35")]
		[Address(RVA = "0x97831C", Offset = "0x97831C", VA = "0x97831C")]
		private void OnBulletTime()
		{
		}

		[Token(Token = "0x6000E36")]
		[Address(RVA = "0x978354", Offset = "0x978354", VA = "0x978354")]
		[IteratorStateMachine(typeof(<HeartBeatCoroutine>d__22))]
		private IEnumerator HeartBeatCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6000E37")]
		[Address(RVA = "0x9783E4", Offset = "0x9783E4", VA = "0x9783E4")]
		private void OnBonusLife()
		{
		}

		[Token(Token = "0x6000E38")]
		[Address(RVA = "0x9784DC", Offset = "0x9784DC", VA = "0x9784DC")]
		public CV2_BHapticsManager()
		{
		}
	}
}
namespace BezierSolution
{
	[Token(Token = "0x200028E")]
	public class BezierPoint : MonoBehaviour
	{
		[Token(Token = "0x200028F")]
		public enum HandleMode
		{
			[Token(Token = "0x4000CDC")]
			Free,
			[Token(Token = "0x4000CDD")]
			Aligned,
			[Token(Token = "0x4000CDE")]
			Mirrored
		}

		[Token(Token = "0x4000CD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		[SerializeField]
		private Vector3 m_position;

		[Token(Token = "0x4000CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		[HideInInspector]
		private Vector3 m_precedingControlPointLocalPosition;

		[Token(Token = "0x4000CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[HideInInspector]
		private Vector3 m_precedingControlPointPosition;

		[Token(Token = "0x4000CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		[HideInInspector]
		private Vector3 m_followingControlPointLocalPosition;

		[Token(Token = "0x4000CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[HideInInspector]
		private Vector3 m_followingControlPointPosition;

		[Token(Token = "0x4000CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		[HideInInspector]
		private HandleMode m_handleMode;

		[Token(Token = "0x170000F4")]
		public Vector3 localPosition
		{
			[Token(Token = "0x6000E3F")]
			[Address(RVA = "0x978658", Offset = "0x978658", VA = "0x978658")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000E40")]
			[Address(RVA = "0x978678", Offset = "0x978678", VA = "0x978678")]
			set
			{
			}
		}

		[Token(Token = "0x170000F5")]
		public Vector3 position
		{
			[Token(Token = "0x6000E41")]
			[Address(RVA = "0x9786C0", Offset = "0x9786C0", VA = "0x9786C0")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000E42")]
			[Address(RVA = "0x978794", Offset = "0x978794", VA = "0x978794")]
			set
			{
			}
		}

		[Token(Token = "0x170000F6")]
		public Quaternion localRotation
		{
			[Token(Token = "0x6000E43")]
			[Address(RVA = "0x9787DC", Offset = "0x9787DC", VA = "0x9787DC")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6000E44")]
			[Address(RVA = "0x9787FC", Offset = "0x9787FC", VA = "0x9787FC")]
			set
			{
			}
		}

		[Token(Token = "0x170000F7")]
		public Quaternion rotation
		{
			[Token(Token = "0x6000E45")]
			[Address(RVA = "0x97884C", Offset = "0x97884C", VA = "0x97884C")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6000E46")]
			[Address(RVA = "0x97886C", Offset = "0x97886C", VA = "0x97886C")]
			set
			{
			}
		}

		[Token(Token = "0x170000F8")]
		public Vector3 localEulerAngles
		{
			[Token(Token = "0x6000E47")]
			[Address(RVA = "0x9788BC", Offset = "0x9788BC", VA = "0x9788BC")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000E48")]
			[Address(RVA = "0x9788DC", Offset = "0x9788DC", VA = "0x9788DC")]
			set
			{
			}
		}

		[Token(Token = "0x170000F9")]
		public Vector3 eulerAngles
		{
			[Token(Token = "0x6000E49")]
			[Address(RVA = "0x978924", Offset = "0x978924", VA = "0x978924")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000E4A")]
			[Address(RVA = "0x978944", Offset = "0x978944", VA = "0x978944")]
			set
			{
			}
		}

		[Token(Token = "0x170000FA")]
		public Vector3 localScale
		{
			[Token(Token = "0x6000E4B")]
			[Address(RVA = "0x97898C", Offset = "0x97898C", VA = "0x97898C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000E4C")]
			[Address(RVA = "0x9789AC", Offset = "0x9789AC", VA = "0x9789AC")]
			set
			{
			}
		}

		[Token(Token = "0x170000FB")]
		public Vector3 precedingControlPointLocalPosition
		{
			[Token(Token = "0x6000E4D")]
			[Address(RVA = "0x9789F4", Offset = "0x9789F4", VA = "0x9789F4")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000E4E")]
			[Address(RVA = "0x978A00", Offset = "0x978A00", VA = "0x978A00")]
			set
			{
			}
		}

		[Token(Token = "0x170000FC")]
		public Vector3 precedingControlPointPosition
		{
			[Token(Token = "0x6000E4F")]
			[Address(RVA = "0x978BD8", Offset = "0x978BD8", VA = "0x978BD8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000E50")]
			[Address(RVA = "0x978C14", Offset = "0x978C14", VA = "0x978C14")]
			set
			{
			}
		}

		[Token(Token = "0x170000FD")]
		public Vector3 followingControlPointLocalPosition
		{
			[Token(Token = "0x6000E51")]
			[Address(RVA = "0x978E9C", Offset = "0x978E9C", VA = "0x978E9C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000E52")]
			[Address(RVA = "0x978EA8", Offset = "0x978EA8", VA = "0x978EA8")]
			set
			{
			}
		}

		[Token(Token = "0x170000FE")]
		public Vector3 followingControlPointPosition
		{
			[Token(Token = "0x6000E53")]
			[Address(RVA = "0x979080", Offset = "0x979080", VA = "0x979080")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000E54")]
			[Address(RVA = "0x9790BC", Offset = "0x9790BC", VA = "0x9790BC")]
			set
			{
			}
		}

		[Token(Token = "0x170000FF")]
		public HandleMode handleMode
		{
			[Token(Token = "0x6000E55")]
			[Address(RVA = "0x979344", Offset = "0x979344", VA = "0x979344")]
			get
			{
				return default(HandleMode);
			}
			[Token(Token = "0x6000E56")]
			[Address(RVA = "0x97934C", Offset = "0x97934C", VA = "0x97934C")]
			set
			{
			}
		}

		[Token(Token = "0x6000E57")]
		[Address(RVA = "0x97936C", Offset = "0x97936C", VA = "0x97936C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E58")]
		[Address(RVA = "0x979390", Offset = "0x979390", VA = "0x979390")]
		public void CopyTo(BezierPoint other)
		{
		}

		[Token(Token = "0x6000E59")]
		[Address(RVA = "0x9786FC", Offset = "0x9786FC", VA = "0x9786FC")]
		private void Revalidate()
		{
		}

		[Token(Token = "0x6000E5A")]
		[Address(RVA = "0x979484", Offset = "0x979484", VA = "0x979484")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000E5B")]
		[Address(RVA = "0x9795E0", Offset = "0x9795E0", VA = "0x9795E0")]
		public BezierPoint()
		{
		}
	}
	[Token(Token = "0x2000290")]
	[ExecuteInEditMode]
	public class BezierSpline : MonoBehaviour
	{
		[Token(Token = "0x4000CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Material gizmoMaterial;

		[Token(Token = "0x4000CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Color gizmoColor;

		[Token(Token = "0x4000CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float gizmoStep;

		[Token(Token = "0x4000CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<BezierPoint> endPoints;

		[Token(Token = "0x4000CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool loop;

		[Token(Token = "0x4000CE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool drawGizmos;

		[Token(Token = "0x17000100")]
		public int Count
		{
			[Token(Token = "0x6000E5C")]
			[Address(RVA = "0x97967C", Offset = "0x97967C", VA = "0x97967C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000101")]
		public float Length
		{
			[Token(Token = "0x6000E5D")]
			[Address(RVA = "0x9796C4", Offset = "0x9796C4", VA = "0x9796C4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000102")]
		public BezierPoint this[int index]
		{
			[Token(Token = "0x6000E5E")]
			[Address(RVA = "0x9798C4", Offset = "0x9798C4", VA = "0x9798C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E5F")]
		[Address(RVA = "0x9799F4", Offset = "0x9799F4", VA = "0x9799F4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E60")]
		[Address(RVA = "0x979A80", Offset = "0x979A80", VA = "0x979A80")]
		public void Initialize(int endPointsCount)
		{
		}

		[Token(Token = "0x6000E61")]
		[Address(RVA = "0x9799F8", Offset = "0x9799F8", VA = "0x9799F8")]
		public void Refresh()
		{
		}

		[Token(Token = "0x6000E62")]
		[Address(RVA = "0x979C58", Offset = "0x979C58", VA = "0x979C58")]
		public BezierPoint InsertNewPointAt(int index)
		{
			return null;
		}

		[Token(Token = "0x6000E63")]
		[Address(RVA = "0x97A024", Offset = "0x97A024", VA = "0x97A024")]
		public BezierPoint DuplicatePointAt(int index)
		{
			return null;
		}

		[Token(Token = "0x6000E64")]
		[Address(RVA = "0x97A29C", Offset = "0x97A29C", VA = "0x97A29C")]
		public void RemovePointAt(int index)
		{
		}

		[Token(Token = "0x6000E65")]
		[Address(RVA = "0x97A594", Offset = "0x97A594", VA = "0x97A594")]
		public void SwapPointsAt(int index1, int index2)
		{
		}

		[Token(Token = "0x6000E66")]
		[Address(RVA = "0x97A800", Offset = "0x97A800", VA = "0x97A800")]
		public int IndexOf(BezierPoint point)
		{
			return default(int);
		}

		[Token(Token = "0x6000E67")]
		[Address(RVA = "0x97A858", Offset = "0x97A858", VA = "0x97A858")]
		public void DrawGizmos(Color color, int smoothness = 4)
		{
		}

		[Token(Token = "0x6000E68")]
		[Address(RVA = "0x97A8FC", Offset = "0x97A8FC", VA = "0x97A8FC")]
		public void HideGizmos()
		{
		}

		[Token(Token = "0x6000E69")]
		[Address(RVA = "0x97A904", Offset = "0x97A904", VA = "0x97A904")]
		public Vector3 GetPoint(float normalizedT)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E6A")]
		[Address(RVA = "0x97AAF0", Offset = "0x97AAF0", VA = "0x97AAF0")]
		public BezierPoint GetCurrentPoint(float normalizedT)
		{
			return null;
		}

		[Token(Token = "0x6000E6B")]
		[Address(RVA = "0x97AC14", Offset = "0x97AC14", VA = "0x97AC14")]
		public Vector3 GetTangent(float normalizedT)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E6C")]
		[Address(RVA = "0x9796D8", Offset = "0x9796D8", VA = "0x9796D8")]
		public float GetLengthApproximately(float startNormalizedT, float endNormalizedT, float accuracy = 50f)
		{
			return default(float);
		}

		[Token(Token = "0x6000E6D")]
		[Address(RVA = "0x97AF20", Offset = "0x97AF20", VA = "0x97AF20")]
		public Vector3 FindNearestPointTo(Vector3 worldPos, float accuracy = 100f)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E6E")]
		[Address(RVA = "0x97AF38", Offset = "0x97AF38", VA = "0x97AF38")]
		public Vector3 FindNearestPointTo(Vector3 worldPos, out float normalizedT, float accuracy = 100f)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E6F")]
		[Address(RVA = "0x97B068", Offset = "0x97B068", VA = "0x97B068")]
		public Vector3 MoveAlongSpline(ref float normalizedT, ref Vector3 direction, float deltaMovement)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E70")]
		[Address(RVA = "0x97B184", Offset = "0x97B184", VA = "0x97B184")]
		public Vector3 MoveAlongSpline(ref float normalizedT, float deltaMovement, int accuracy = 3)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E71")]
		[Address(RVA = "0x97B2A4", Offset = "0x97B2A4", VA = "0x97B2A4")]
		public void ConstructLinearPath()
		{
		}

		[Token(Token = "0x6000E72")]
		[Address(RVA = "0x97B4B4", Offset = "0x97B4B4", VA = "0x97B4B4")]
		public void AutoConstructSpline()
		{
		}

		[Token(Token = "0x6000E73")]
		[Address(RVA = "0x97BDC8", Offset = "0x97BDC8", VA = "0x97BDC8")]
		private static Vector3[] GetFirstControlPoints(Vector3[] rhs)
		{
			return null;
		}

		[Token(Token = "0x6000E74")]
		[Address(RVA = "0x97BFC8", Offset = "0x97BFC8", VA = "0x97BFC8")]
		public void AutoConstructSpline2()
		{
		}

		[Token(Token = "0x6000E75")]
		[Address(RVA = "0x97AEE4", Offset = "0x97AEE4", VA = "0x97AEE4")]
		private float AccuracyToStepSize(float accuracy)
		{
			return default(float);
		}

		[Token(Token = "0x6000E76")]
		[Address(RVA = "0x97C300", Offset = "0x97C300", VA = "0x97C300")]
		private void OnRenderObject()
		{
		}

		[Token(Token = "0x6000E77")]
		[Address(RVA = "0x97C604", Offset = "0x97C604", VA = "0x97C604")]
		public BezierSpline()
		{
		}
	}
	[Token(Token = "0x2000291")]
	public class BezierWalkerWithSpeed : MonoBehaviour
	{
		[Token(Token = "0x2000292")]
		public enum TravelMode
		{
			[Token(Token = "0x4000CF2")]
			Once,
			[Token(Token = "0x4000CF3")]
			Loop,
			[Token(Token = "0x4000CF4")]
			PingPong
		}

		[Token(Token = "0x4000CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Transform cachedTransform;

		[Token(Token = "0x4000CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BezierSpline spline;

		[Token(Token = "0x4000CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TravelMode travelMode;

		[Token(Token = "0x4000CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float speed;

		[Token(Token = "0x4000CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float progress;

		[Token(Token = "0x4000CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[Range(0f, 0.06f)]
		public float relaxationAtEndPoints;

		[Token(Token = "0x4000CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float rotationLerpModifier;

		[Token(Token = "0x4000CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool lookForward;

		[Token(Token = "0x4000CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		private bool isGoingForward;

		[Token(Token = "0x4000CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UnityEvent onPathCompleted;

		[Token(Token = "0x4000CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool onPathCompletedCalledAt1;

		[Token(Token = "0x4000CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool onPathCompletedCalledAt0;

		[Token(Token = "0x17000103")]
		public float NormalizedT
		{
			[Token(Token = "0x6000E78")]
			[Address(RVA = "0x97C694", Offset = "0x97C694", VA = "0x97C694")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E79")]
			[Address(RVA = "0x97C69C", Offset = "0x97C69C", VA = "0x97C69C")]
			set
			{
			}
		}

		[Token(Token = "0x6000E7A")]
		[Address(RVA = "0x97C6A4", Offset = "0x97C6A4", VA = "0x97C6A4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E7B")]
		[Address(RVA = "0x97C6C0", Offset = "0x97C6C0", VA = "0x97C6C0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E7C")]
		[Address(RVA = "0x97C904", Offset = "0x97C904", VA = "0x97C904")]
		public BezierWalkerWithSpeed()
		{
		}
	}
	[Token(Token = "0x2000293")]
	public class BezierWalkerWithTime : HitTarget
	{
		[Token(Token = "0x2000294")]
		[CompilerGenerated]
		private sealed class <explodeCharacters>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000D21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<Rigidbody> rbs;

			[Token(Token = "0x4000D22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public BezierWalkerWithTime <>4__this;

			[Token(Token = "0x17000106")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E8F")]
				[Address(RVA = "0x97DAE4", Offset = "0x97DAE4", VA = "0x97DAE4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000107")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E91")]
				[Address(RVA = "0x97DB2C", Offset = "0x97DB2C", VA = "0x97DB2C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E8C")]
			[Address(RVA = "0x97CF48", Offset = "0x97CF48", VA = "0x97CF48")]
			[DebuggerHidden]
			public <explodeCharacters>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6000E8D")]
			[Address(RVA = "0x97D8B8", Offset = "0x97D8B8", VA = "0x97D8B8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E8E")]
			[Address(RVA = "0x97D8BC", Offset = "0x97D8BC", VA = "0x97D8BC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E90")]
			[Address(RVA = "0x97DAEC", Offset = "0x97DAEC", VA = "0x97DAEC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000295")]
		[CompilerGenerated]
		private sealed class <start>d__51 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000D25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public BezierWalkerWithTime <>4__this;

			[Token(Token = "0x17000108")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E95")]
				[Address(RVA = "0x97DBE4", Offset = "0x97DBE4", VA = "0x97DBE4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000109")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E97")]
				[Address(RVA = "0x97DC2C", Offset = "0x97DC2C", VA = "0x97DC2C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E92")]
			[Address(RVA = "0x97D108", Offset = "0x97D108", VA = "0x97D108")]
			[DebuggerHidden]
			public <start>d__51(int <>1__state)
			{
			}

			[Token(Token = "0x6000E93")]
			[Address(RVA = "0x97DB34", Offset = "0x97DB34", VA = "0x97DB34", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E94")]
			[Address(RVA = "0x97DB38", Offset = "0x97DB38", VA = "0x97DB38", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E96")]
			[Address(RVA = "0x97DBEC", Offset = "0x97DBEC", VA = "0x97DBEC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform helicopter;

		[Token(Token = "0x4000CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform brokenHelicopter;

		[Token(Token = "0x4000CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform cachedTransform;

		[Token(Token = "0x4000CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public BezierSpline spline;

		[Token(Token = "0x4000CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float travelTime;

		[Token(Token = "0x4000CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float progress;

		[Token(Token = "0x4000CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float movementLerpModifier;

		[Token(Token = "0x4000CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float rotationLerpModifier;

		[Token(Token = "0x4000CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool lookForward;

		[Token(Token = "0x4000CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		private bool isGoingForward;

		[Token(Token = "0x4000CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public UnityEvent onPathCompleted;

		[Token(Token = "0x4000D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool onPathCompletedCalledAt1;

		[Token(Token = "0x4000D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		private bool onPathCompletedCalledAt0;

		[Token(Token = "0x4000D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public int currentPoint;

		[Token(Token = "0x4000D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public GameObject HelicopterModel;

		[Token(Token = "0x4000D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public HeliRotorController MainRotorController;

		[Token(Token = "0x4000D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public HeliRotorController SubRotorController;

		[Token(Token = "0x4000D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float TurnForce;

		[Token(Token = "0x4000D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public float ForwardForce;

		[Token(Token = "0x4000D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public float ForwardTiltForce;

		[Token(Token = "0x4000D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public float TurnTiltForce;

		[Token(Token = "0x4000D0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public float EffectiveHeight;

		[Token(Token = "0x4000D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public float turnTiltForcePercent;

		[Token(Token = "0x4000D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public float turnForcePercent;

		[Token(Token = "0x4000D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private float _engineForce;

		[Token(Token = "0x4000D0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Vector2 hMove;

		[Token(Token = "0x4000D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Vector2 hTilt;

		[Token(Token = "0x4000D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private float hTurn;

		[Token(Token = "0x4000D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public bool IsOnGround;

		[Token(Token = "0x4000D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Vector3 movement;

		[Token(Token = "0x4000D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private Vector3 prevpos;

		[Token(Token = "0x4000D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Vector3 newpos;

		[Token(Token = "0x4000D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private Vector3 fwd;

		[Token(Token = "0x4000D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Vector3 vright;

		[Token(Token = "0x4000D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private Vector3 lastRotation;

		[Token(Token = "0x4000D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public bool forward;

		[Token(Token = "0x4000D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x119")]
		public bool backward;

		[Token(Token = "0x4000D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11A")]
		public bool right;

		[Token(Token = "0x4000D1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11B")]
		public bool left;

		[Token(Token = "0x4000D1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		public float speed;

		[Token(Token = "0x4000D1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[Range(0f, 0.06f)]
		public float relaxationAtEndPoints;

		[Token(Token = "0x4000D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		public float time;

		[Token(Token = "0x17000104")]
		public float NormalizedT
		{
			[Token(Token = "0x6000E7F")]
			[Address(RVA = "0x97CF70", Offset = "0x97CF70", VA = "0x97CF70")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E80")]
			[Address(RVA = "0x97CF78", Offset = "0x97CF78", VA = "0x97CF78")]
			set
			{
			}
		}

		[Token(Token = "0x17000105")]
		public float EngineForce
		{
			[Token(Token = "0x6000E81")]
			[Address(RVA = "0x97CF80", Offset = "0x97CF80", VA = "0x97CF80")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E82")]
			[Address(RVA = "0x97CF88", Offset = "0x97CF88", VA = "0x97CF88")]
			set
			{
			}
		}

		[Token(Token = "0x6000E7D")]
		[Address(RVA = "0x97C988", Offset = "0x97C988", VA = "0x97C988", Slot = "4")]
		public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E7E")]
		[Address(RVA = "0x97CED4", Offset = "0x97CED4", VA = "0x97CED4")]
		[IteratorStateMachine(typeof(<explodeCharacters>d__3))]
		private IEnumerator explodeCharacters(List<Rigidbody> rbs)
		{
			return null;
		}

		[Token(Token = "0x6000E83")]
		[Address(RVA = "0x97CFE4", Offset = "0x97CFE4", VA = "0x97CFE4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E84")]
		[Address(RVA = "0x97D0A0", Offset = "0x97D0A0", VA = "0x97D0A0")]
		[IteratorStateMachine(typeof(<start>d__51))]
		private IEnumerator start()
		{
			return null;
		}

		[Token(Token = "0x6000E85")]
		[Address(RVA = "0x97D130", Offset = "0x97D130", VA = "0x97D130")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E86")]
		[Address(RVA = "0x97D358", Offset = "0x97D358", VA = "0x97D358")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000E87")]
		[Address(RVA = "0x97D6FC", Offset = "0x97D6FC", VA = "0x97D6FC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000E88")]
		[Address(RVA = "0x97D388", Offset = "0x97D388", VA = "0x97D388")]
		private void TiltProcess()
		{
		}

		[Token(Token = "0x6000E89")]
		[Address(RVA = "0x97D498", Offset = "0x97D498", VA = "0x97D498")]
		private void updateHelicopter()
		{
		}

		[Token(Token = "0x6000E8A")]
		[Address(RVA = "0x97D148", Offset = "0x97D148", VA = "0x97D148")]
		private void updateHelicopter2()
		{
		}

		[Token(Token = "0x6000E8B")]
		[Address(RVA = "0x97D7B8", Offset = "0x97D7B8", VA = "0x97D7B8")]
		public BezierWalkerWithTime()
		{
		}
	}
	[Token(Token = "0x2000296")]
	public class Helicopter : HitTarget
	{
		[Token(Token = "0x2000297")]
		[CompilerGenerated]
		private sealed class <explodeCharacters>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000D4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<Rigidbody> rbs;

			[Token(Token = "0x4000D50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Helicopter <>4__this;

			[Token(Token = "0x1700010C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000EAF")]
				[Address(RVA = "0x97F10C", Offset = "0x97F10C", VA = "0x97F10C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700010D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000EB1")]
				[Address(RVA = "0x97F154", Offset = "0x97F154", VA = "0x97F154", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000EAC")]
			[Address(RVA = "0x97E208", Offset = "0x97E208", VA = "0x97E208")]
			[DebuggerHidden]
			public <explodeCharacters>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6000EAD")]
			[Address(RVA = "0x97EEE0", Offset = "0x97EEE0", VA = "0x97EEE0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000EAE")]
			[Address(RVA = "0x97EEE4", Offset = "0x97EEE4", VA = "0x97EEE4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000EB0")]
			[Address(RVA = "0x97F114", Offset = "0x97F114", VA = "0x97F114", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000299")]
		[CompilerGenerated]
		private sealed class <start>d__49 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000D54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Helicopter <>4__this;

			[Token(Token = "0x1700010E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000EB7")]
				[Address(RVA = "0x97F240", Offset = "0x97F240", VA = "0x97F240", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700010F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000EB9")]
				[Address(RVA = "0x97F288", Offset = "0x97F288", VA = "0x97F288", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000EB4")]
			[Address(RVA = "0x97E6C0", Offset = "0x97E6C0", VA = "0x97E6C0")]
			[DebuggerHidden]
			public <start>d__49(int <>1__state)
			{
			}

			[Token(Token = "0x6000EB5")]
			[Address(RVA = "0x97F190", Offset = "0x97F190", VA = "0x97F190", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000EB6")]
			[Address(RVA = "0x97F194", Offset = "0x97F194", VA = "0x97F194", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000EB8")]
			[Address(RVA = "0x97F248", Offset = "0x97F248", VA = "0x97F248", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform helicopter;

		[Token(Token = "0x4000D27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform brokenHelicopter;

		[Token(Token = "0x4000D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public HelicopterRotorKiller rotorKiller;

		[Token(Token = "0x4000D29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public ParticleSystem explosion;

		[Token(Token = "0x4000D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform cachedTransform;

		[Token(Token = "0x4000D2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public BezierSpline scenePath;

		[Token(Token = "0x4000D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public BezierSpline escapePath;

		[Token(Token = "0x4000D2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private BezierSpline path;

		[Token(Token = "0x4000D2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float progress;

		[Token(Token = "0x4000D2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float movementLerpModifier;

		[Token(Token = "0x4000D30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float rotationLerpModifier;

		[Token(Token = "0x4000D31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public bool lookForward;

		[Token(Token = "0x4000D32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
		private bool isGoingForward;

		[Token(Token = "0x4000D33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public int currentPoint;

		[Token(Token = "0x4000D34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public GameObject HelicopterModel;

		[Token(Token = "0x4000D35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public HeliRotorController MainRotorController;

		[Token(Token = "0x4000D36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public HeliRotorController SubRotorController;

		[Token(Token = "0x4000D37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public float ForwardTiltForce;

		[Token(Token = "0x4000D38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public float TurnTiltForce;

		[Token(Token = "0x4000D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float _engineForce;

		[Token(Token = "0x4000D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public Vector2 hMove;

		[Token(Token = "0x4000D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public Vector2 hTilt;

		[Token(Token = "0x4000D3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private Vector3 movement;

		[Token(Token = "0x4000D3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Vector3 prevpos;

		[Token(Token = "0x4000D3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private Vector3 newpos;

		[Token(Token = "0x4000D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Vector3 fwd;

		[Token(Token = "0x4000D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private Vector3 vright;

		[Token(Token = "0x4000D41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Vector3 lastRotation;

		[Token(Token = "0x4000D42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		public bool forward;

		[Token(Token = "0x4000D43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10D")]
		public bool backward;

		[Token(Token = "0x4000D44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10E")]
		public bool right;

		[Token(Token = "0x4000D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10F")]
		public bool left;

		[Token(Token = "0x4000D46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public float speed;

		[Token(Token = "0x4000D47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		[Range(0f, 0.06f)]
		public float relaxationAtEndPoints;

		[Token(Token = "0x4000D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public float time;

		[Token(Token = "0x4000D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public SceneData scene;

		[Token(Token = "0x4000D4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private bool gameStarted;

		[Token(Token = "0x4000D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x129")]
		private bool time0;

		[Token(Token = "0x4000D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		private float firstTime;

		[Token(Token = "0x1700010A")]
		public float NormalizedT
		{
			[Token(Token = "0x6000E9C")]
			[Address(RVA = "0x97E230", Offset = "0x97E230", VA = "0x97E230")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E9D")]
			[Address(RVA = "0x97E238", Offset = "0x97E238", VA = "0x97E238")]
			set
			{
			}
		}

		[Token(Token = "0x1700010B")]
		public float EngineForce
		{
			[Token(Token = "0x6000E9E")]
			[Address(RVA = "0x97E240", Offset = "0x97E240", VA = "0x97E240")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E9F")]
			[Address(RVA = "0x97E248", Offset = "0x97E248", VA = "0x97E248")]
			set
			{
			}
		}

		[Token(Token = "0x6000E98")]
		[Address(RVA = "0x97DC34", Offset = "0x97DC34", VA = "0x97DC34", Slot = "4")]
		public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E99")]
		[Address(RVA = "0x97DE54", Offset = "0x97DE54", VA = "0x97DE54")]
		public void OnHitImpl(Vector3 playerPosition)
		{
		}

		[Token(Token = "0x6000E9A")]
		[Address(RVA = "0x97E06C", Offset = "0x97E06C", VA = "0x97E06C")]
		private void setHelicopterExplosionForce(Vector3 playerPosition)
		{
		}

		[Token(Token = "0x6000E9B")]
		[Address(RVA = "0x97E194", Offset = "0x97E194", VA = "0x97E194")]
		[IteratorStateMachine(typeof(<explodeCharacters>d__7))]
		private IEnumerator explodeCharacters(List<Rigidbody> rbs)
		{
			return null;
		}

		[Token(Token = "0x6000EA0")]
		[Address(RVA = "0x97E2A4", Offset = "0x97E2A4", VA = "0x97E2A4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000EA1")]
		[Address(RVA = "0x97E3E8", Offset = "0x97E3E8", VA = "0x97E3E8")]
		private void moveHelicopter(int sceneId)
		{
		}

		[Token(Token = "0x6000EA2")]
		[Address(RVA = "0x97E650", Offset = "0x97E650", VA = "0x97E650")]
		[IteratorStateMachine(typeof(<start>d__49))]
		private IEnumerator start()
		{
			return null;
		}

		[Token(Token = "0x6000EA3")]
		[Address(RVA = "0x97E6E8", Offset = "0x97E6E8", VA = "0x97E6E8")]
		private void killPlayer()
		{
		}

		[Token(Token = "0x6000EA4")]
		[Address(RVA = "0x97E778", Offset = "0x97E778", VA = "0x97E778")]
		private void Update()
		{
		}

		[Token(Token = "0x6000EA5")]
		[Address(RVA = "0x97E9DC", Offset = "0x97E9DC", VA = "0x97E9DC")]
		public void escape()
		{
		}

		[Token(Token = "0x6000EA6")]
		[Address(RVA = "0x97EA58", Offset = "0x97EA58", VA = "0x97EA58")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000EA7")]
		[Address(RVA = "0x97ED94", Offset = "0x97ED94", VA = "0x97ED94")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000EA8")]
		[Address(RVA = "0x97EA88", Offset = "0x97EA88", VA = "0x97EA88")]
		private void TiltProcess()
		{
		}

		[Token(Token = "0x6000EA9")]
		[Address(RVA = "0x97EB98", Offset = "0x97EB98", VA = "0x97EB98")]
		private void updateHelicopter()
		{
		}

		[Token(Token = "0x6000EAA")]
		[Address(RVA = "0x97E7D0", Offset = "0x97E7D0", VA = "0x97E7D0")]
		private void updateHelicopter2()
		{
		}

		[Token(Token = "0x6000EAB")]
		[Address(RVA = "0x97EE4C", Offset = "0x97EE4C", VA = "0x97EE4C")]
		public Helicopter()
		{
		}
	}
	[Token(Token = "0x200029A")]
	[ExecuteInEditMode]
	public class ParticlesFollowBezier : MonoBehaviour
	{
		[Token(Token = "0x200029B")]
		public enum FollowMode
		{
			[Token(Token = "0x4000D5E")]
			Relaxed,
			[Token(Token = "0x4000D5F")]
			Strict
		}

		[Token(Token = "0x4000D55")]
		private const int MAX_PARTICLE_COUNT = 25000;

		[Token(Token = "0x4000D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BezierSpline spline;

		[Token(Token = "0x4000D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FollowMode followMode;

		[Token(Token = "0x4000D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform cachedTransform;

		[Token(Token = "0x4000D59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ParticleSystem cachedPS;

		[Token(Token = "0x4000D5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ParticleSystem.MainModule cachedMainModule;

		[Token(Token = "0x4000D5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ParticleSystem.Particle[] particles;

		[Token(Token = "0x4000D5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Vector4> particleData;

		[Token(Token = "0x6000EBA")]
		[Address(RVA = "0x97F290", Offset = "0x97F290", VA = "0x97F290")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000EBB")]
		[Address(RVA = "0x97F394", Offset = "0x97F394", VA = "0x97F394")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000EBC")]
		[Address(RVA = "0x97F854", Offset = "0x97F854", VA = "0x97F854")]
		public ParticlesFollowBezier()
		{
		}
	}
}
namespace Simplex
{
	[Token(Token = "0x200029C")]
	public class Noise
	{
		[Token(Token = "0x4000D60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int seed;

		[Token(Token = "0x4000D61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static byte[] perm;

		[Token(Token = "0x4000D62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly byte[] permOriginal;

		[Token(Token = "0x17000110")]
		public static int Seed
		{
			[Token(Token = "0x6000EC4")]
			[Address(RVA = "0x980A80", Offset = "0x980A80", VA = "0x980A80")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000EC5")]
			[Address(RVA = "0x980AD8", Offset = "0x980AD8", VA = "0x980AD8")]
			set
			{
			}
		}

		[Token(Token = "0x6000EBD")]
		[Address(RVA = "0x97F85C", Offset = "0x97F85C", VA = "0x97F85C")]
		public static float[] Calc1D(int width, float scale)
		{
			return null;
		}

		[Token(Token = "0x6000EBE")]
		[Address(RVA = "0x97FA90", Offset = "0x97FA90", VA = "0x97FA90")]
		public static float[,] Calc2D(int width, int height, float scale)
		{
			return null;
		}

		[Token(Token = "0x6000EBF")]
		[Address(RVA = "0x97FF9C", Offset = "0x97FF9C", VA = "0x97FF9C")]
		public static float[,,] Calc3D(int width, int height, int length, float scale)
		{
			return null;
		}

		[Token(Token = "0x6000EC0")]
		[Address(RVA = "0x98080C", Offset = "0x98080C", VA = "0x98080C")]
		public static float CalcPixel1D(int x, float scale)
		{
			return default(float);
		}

		[Token(Token = "0x6000EC1")]
		[Address(RVA = "0x980884", Offset = "0x980884", VA = "0x980884")]
		public static float CalcPixel2D(int x, int y, float scale)
		{
			return default(float);
		}

		[Token(Token = "0x6000EC2")]
		[Address(RVA = "0x980910", Offset = "0x980910", VA = "0x980910")]
		public static float CalcPixel3D(int x, int y, int z, float scale)
		{
			return default(float);
		}

		[Token(Token = "0x6000EC3")]
		[Address(RVA = "0x9809A8", Offset = "0x9809A8", VA = "0x9809A8")]
		static Noise()
		{
		}

		[Token(Token = "0x6000EC6")]
		[Address(RVA = "0x97F948", Offset = "0x97F948", VA = "0x97F948")]
		internal static float Generate(float x)
		{
			return default(float);
		}

		[Token(Token = "0x6000EC7")]
		[Address(RVA = "0x97FBD8", Offset = "0x97FBD8", VA = "0x97FBD8")]
		internal static float Generate(float x, float y)
		{
			return default(float);
		}

		[Token(Token = "0x6000EC8")]
		[Address(RVA = "0x980138", Offset = "0x980138", VA = "0x980138")]
		internal static float Generate(float x, float y, float z)
		{
			return default(float);
		}

		[Token(Token = "0x6000EC9")]
		[Address(RVA = "0x980C14", Offset = "0x980C14", VA = "0x980C14")]
		private static int FastFloor(float x)
		{
			return default(int);
		}

		[Token(Token = "0x6000ECA")]
		[Address(RVA = "0x980C60", Offset = "0x980C60", VA = "0x980C60")]
		private static int Mod(int x, int m)
		{
			return default(int);
		}

		[Token(Token = "0x6000ECB")]
		[Address(RVA = "0x980C3C", Offset = "0x980C3C", VA = "0x980C3C")]
		private static float grad(int hash, float x)
		{
			return default(float);
		}

		[Token(Token = "0x6000ECC")]
		[Address(RVA = "0x980C74", Offset = "0x980C74", VA = "0x980C74")]
		private static float grad(int hash, float x, float y)
		{
			return default(float);
		}

		[Token(Token = "0x6000ECD")]
		[Address(RVA = "0x980CA8", Offset = "0x980CA8", VA = "0x980CA8")]
		private static float grad(int hash, float x, float y, float z)
		{
			return default(float);
		}

		[Token(Token = "0x6000ECE")]
		[Address(RVA = "0x980CF0", Offset = "0x980CF0", VA = "0x980CF0")]
		private static float grad(int hash, float x, float y, float z, float t)
		{
			return default(float);
		}

		[Token(Token = "0x6000ECF")]
		[Address(RVA = "0x980D3C", Offset = "0x980D3C", VA = "0x980D3C")]
		public Noise()
		{
		}
	}
}
namespace Photon.Pun.Demo.Shared
{
	[Token(Token = "0x200029D")]
	public static class DocLinks
	{
		[Token(Token = "0x200029E")]
		public enum DocTypes
		{
			[Token(Token = "0x4000D6D")]
			Doc,
			[Token(Token = "0x4000D6E")]
			Api
		}

		[Token(Token = "0x200029F")]
		public enum Products
		{
			[Token(Token = "0x4000D70")]
			OnPremise,
			[Token(Token = "0x4000D71")]
			Realtime,
			[Token(Token = "0x4000D72")]
			Pun,
			[Token(Token = "0x4000D73")]
			Chat,
			[Token(Token = "0x4000D74")]
			Voice,
			[Token(Token = "0x4000D75")]
			Bolt,
			[Token(Token = "0x4000D76")]
			Quantum
		}

		[Token(Token = "0x20002A0")]
		public enum Versions
		{
			[Token(Token = "0x4000D78")]
			Current,
			[Token(Token = "0x4000D79")]
			V1,
			[Token(Token = "0x4000D7A")]
			V2
		}

		[Token(Token = "0x20002A1")]
		public enum Languages
		{
			[Token(Token = "0x4000D7C")]
			English,
			[Token(Token = "0x4000D7D")]
			Japanese,
			[Token(Token = "0x4000D7E")]
			Korean,
			[Token(Token = "0x4000D7F")]
			Chinese
		}

		[Token(Token = "0x4000D63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Versions Version;

		[Token(Token = "0x4000D64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static Languages Language;

		[Token(Token = "0x4000D65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Products Product;

		[Token(Token = "0x4000D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static string ApiUrlRoot;

		[Token(Token = "0x4000D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static string DocUrlFormat;

		[Token(Token = "0x4000D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static Dictionary<Products, string> ProductsFolders;

		[Token(Token = "0x4000D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static Dictionary<Languages, string> ApiLanguagesFolder;

		[Token(Token = "0x4000D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static Dictionary<Languages, string> DocLanguagesFolder;

		[Token(Token = "0x4000D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static Dictionary<Versions, string> VersionsFolder;

		[Token(Token = "0x6000ED0")]
		[Address(RVA = "0x980D44", Offset = "0x980D44", VA = "0x980D44")]
		public static string GetLink(DocTypes type, string reference)
		{
			return null;
		}

		[Token(Token = "0x6000ED1")]
		[Address(RVA = "0x980DEC", Offset = "0x980DEC", VA = "0x980DEC")]
		public static string GetApiLink(string reference)
		{
			return null;
		}

		[Token(Token = "0x6000ED2")]
		[Address(RVA = "0x980FD4", Offset = "0x980FD4", VA = "0x980FD4")]
		public static string GetDocLink(string reference)
		{
			return null;
		}
	}
}
namespace Photon.Pun.Demo.Cockpit
{
	[Token(Token = "0x20002A2")]
	public class PunCockpit : MonoBehaviourPunCallbacks
	{
		[Token(Token = "0x20002A4")]
		[CompilerGenerated]
		private sealed class <OnDropdownConnectAs_CB>d__99 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000DBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000DBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000DBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PunCockpit <>4__this;

			[Token(Token = "0x17000112")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F18")]
				[Address(RVA = "0x9860A8", Offset = "0x9860A8", VA = "0x9860A8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000113")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F1A")]
				[Address(RVA = "0x9860F0", Offset = "0x9860F0", VA = "0x9860F0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F15")]
			[Address(RVA = "0x984274", Offset = "0x984274", VA = "0x984274")]
			[DebuggerHidden]
			public <OnDropdownConnectAs_CB>d__99(int <>1__state)
			{
			}

			[Token(Token = "0x6000F16")]
			[Address(RVA = "0x986000", Offset = "0x986000", VA = "0x986000", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F17")]
			[Address(RVA = "0x986004", Offset = "0x986004", VA = "0x986004", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F19")]
			[Address(RVA = "0x9860B0", Offset = "0x9860B0", VA = "0x9860B0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static PunCockpit Instance;

		[Token(Token = "0x4000D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static bool Embedded;

		[Token(Token = "0x4000D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static string EmbeddedGameTitle;

		[Token(Token = "0x4000D83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool debug;

		[Token(Token = "0x4000D85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text Title;

		[Token(Token = "0x4000D86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Text StateText;

		[Token(Token = "0x4000D87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Text UserIdText;

		[Token(Token = "0x4000D88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Header("Demo Integration")]
		public CanvasGroup MinimalCanvasGroup;

		[Token(Token = "0x4000D89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public CanvasGroup MaximalCanvasGroup;

		[Token(Token = "0x4000D8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GameObject MinimizeButton;

		[Token(Token = "0x4000D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject MinimalUIEmbeddHelp;

		[Token(Token = "0x4000D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Header("Connection UI")]
		public GameObject ConnectingLabel;

		[Token(Token = "0x4000D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public GameObject ConnectionPanel;

		[Token(Token = "0x4000D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public GameObject AdvancedConnectionPanel;

		[Token(Token = "0x4000D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Dropdown ConnectAsDropDown;

		[Token(Token = "0x4000D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[Header("Common UI")]
		public GameObject InfosPanel;

		[Token(Token = "0x4000D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public GameObject MinimalUiInfosPanel;

		[Token(Token = "0x4000D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[Header("Lobby UI")]
		public GameObject LobbyPanel;

		[Token(Token = "0x4000D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Selectable JoinLobbyButton;

		[Token(Token = "0x4000D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public RoomListView RoomListManager;

		[Token(Token = "0x4000D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public FriendListView FriendListManager;

		[Token(Token = "0x4000D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public GameObject RoomListMatchMakingForm;

		[Token(Token = "0x4000D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[Header("Game UI")]
		public GameObject GamePanel;

		[Token(Token = "0x4000D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public PlayerListView PlayerListManager;

		[Token(Token = "0x4000D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public PlayerDetailsController PlayerDetailsManager;

		[Token(Token = "0x4000D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public InputField RoomCustomPropertyInputfield;

		[Token(Token = "0x4000D9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[Header("Photon Settings")]
		public string GameVersionOverride;

		[Token(Token = "0x4000D9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public bool ResetBestRegionCodeInPreferences;

		[Token(Token = "0x4000D9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[Header("Room Options")]
		public int MaxPlayers;

		[Token(Token = "0x4000D9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public int PlayerTtl;

		[Token(Token = "0x4000D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		public int EmptyRoomTtl;

		[Token(Token = "0x4000DA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public string Plugins;

		[Token(Token = "0x4000DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public bool PublishUserId;

		[Token(Token = "0x4000DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x101")]
		public bool IsVisible;

		[Token(Token = "0x4000DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x102")]
		public bool IsOpen;

		[Token(Token = "0x4000DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x103")]
		public bool CleanupCacheOnLeave;

		[Token(Token = "0x4000DA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		public bool DeleteNullProperties;

		[Token(Token = "0x4000DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[Header("Room Options UI")]
		public IntInputField PlayerTtlField;

		[Token(Token = "0x4000DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public IntInputField EmptyRoomTtlField;

		[Token(Token = "0x4000DA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public IntInputField MaxPlayersField;

		[Token(Token = "0x4000DA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public StringInputField PluginsField;

		[Token(Token = "0x4000DAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public BoolInputField PublishUserIdField;

		[Token(Token = "0x4000DAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public BoolInputField IsVisibleField;

		[Token(Token = "0x4000DAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public BoolInputField IsOpenField;

		[Token(Token = "0x4000DAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public BoolInputField CleanupCacheOnLeaveField;

		[Token(Token = "0x4000DAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public BoolInputField DeleteNullPropertiesField;

		[Token(Token = "0x4000DAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[Header("Friends Options")]
		public FriendListView.FriendDetail[] FriendsList;

		[Token(Token = "0x4000DB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[Header("Modal window")]
		public CanvasGroup ModalWindow;

		[Token(Token = "0x4000DB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public RegionListView RegionListView;

		[Token(Token = "0x4000DB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public Text RegionListLoadingFeedback;

		[Token(Token = "0x4000DB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private LoadBalancingClient _lbc;

		[Token(Token = "0x4000DB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private bool _regionPingProcessActive;

		[Token(Token = "0x4000DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private List<Region> RegionsList;

		[Token(Token = "0x4000DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private string roomNameToEnter;

		[Token(Token = "0x17000111")]
		public string UserId
		{
			[Token(Token = "0x6000ED4")]
			[Address(RVA = "0x981640", Offset = "0x981640", VA = "0x981640")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000ED5")]
			[Address(RVA = "0x981648", Offset = "0x981648", VA = "0x981648")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6000ED6")]
		[Address(RVA = "0x981650", Offset = "0x981650", VA = "0x981650")]
		public void Start()
		{
		}

		[Token(Token = "0x6000ED7")]
		[Address(RVA = "0x981D78", Offset = "0x981D78", VA = "0x981D78")]
		public void SwitchtoMinimalPanel()
		{
		}

		[Token(Token = "0x6000ED8")]
		[Address(RVA = "0x981CF8", Offset = "0x981CF8", VA = "0x981CF8")]
		public void SwitchtoMaximalPanel()
		{
		}

		[Token(Token = "0x6000ED9")]
		[Address(RVA = "0x981DE4", Offset = "0x981DE4", VA = "0x981DE4")]
		public void SwitchToAdvancedConnection()
		{
		}

		[Token(Token = "0x6000EDA")]
		[Address(RVA = "0x981CA8", Offset = "0x981CA8", VA = "0x981CA8")]
		public void SwitchToSimpleConnection()
		{
		}

		[Token(Token = "0x6000EDB")]
		[Address(RVA = "0x981E34", Offset = "0x981E34", VA = "0x981E34")]
		public void ToggleInfosInMinimalPanel()
		{
		}

		[Token(Token = "0x6000EDC")]
		[Address(RVA = "0x981E68", Offset = "0x981E68", VA = "0x981E68")]
		public void RequestInfosPanel(GameObject Parent)
		{
		}

		[Token(Token = "0x6000EDD")]
		[Address(RVA = "0x981F24", Offset = "0x981F24", VA = "0x981F24")]
		public void OnUserIdSubmited(string userId)
		{
		}

		[Token(Token = "0x6000EDE")]
		[Address(RVA = "0x982024", Offset = "0x982024", VA = "0x982024")]
		public void SetPlayerTtlRoomOption(int value)
		{
		}

		[Token(Token = "0x6000EDF")]
		[Address(RVA = "0x9820D4", Offset = "0x9820D4", VA = "0x9820D4")]
		public void SetEmptyRoomTtlRoomOption(int value)
		{
		}

		[Token(Token = "0x6000EE0")]
		[Address(RVA = "0x982184", Offset = "0x982184", VA = "0x982184")]
		public void SetMaxPlayersRoomOption(int value)
		{
		}

		[Token(Token = "0x6000EE1")]
		[Address(RVA = "0x982234", Offset = "0x982234", VA = "0x982234")]
		public void SetPluginsRoomOption(string value)
		{
		}

		[Token(Token = "0x6000EE2")]
		[Address(RVA = "0x9822D4", Offset = "0x9822D4", VA = "0x9822D4")]
		public void SetPublishUserId(bool value)
		{
		}

		[Token(Token = "0x6000EE3")]
		[Address(RVA = "0x982384", Offset = "0x982384", VA = "0x982384")]
		public void SetIsVisible(bool value)
		{
		}

		[Token(Token = "0x6000EE4")]
		[Address(RVA = "0x982434", Offset = "0x982434", VA = "0x982434")]
		public void SetIsOpen(bool value)
		{
		}

		[Token(Token = "0x6000EE5")]
		[Address(RVA = "0x9824E4", Offset = "0x9824E4", VA = "0x9824E4")]
		public void SetResetBestRegionCodeInPreferences(bool value)
		{
		}

		[Token(Token = "0x6000EE6")]
		[Address(RVA = "0x982594", Offset = "0x982594", VA = "0x982594")]
		public void SetCleanupCacheOnLeave(bool value)
		{
		}

		[Token(Token = "0x6000EE7")]
		[Address(RVA = "0x982644", Offset = "0x982644", VA = "0x982644")]
		public void SetDeleteNullProperties(bool value)
		{
		}

		[Token(Token = "0x6000EE8")]
		[Address(RVA = "0x9826F4", Offset = "0x9826F4", VA = "0x9826F4")]
		public void PingRegions()
		{
		}

		[Token(Token = "0x6000EE9")]
		[Address(RVA = "0x9828D8", Offset = "0x9828D8", VA = "0x9828D8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000EEA")]
		[Address(RVA = "0x982A14", Offset = "0x982A14", VA = "0x982A14")]
		private void OnStateChanged(ClientState previousState, ClientState state)
		{
		}

		[Token(Token = "0x6000EEB")]
		[Address(RVA = "0x982B34", Offset = "0x982B34", VA = "0x982B34", Slot = "38")]
		public override void OnRegionListReceived(RegionHandler regionHandler)
		{
		}

		[Token(Token = "0x6000EEC")]
		[Address(RVA = "0x982CD0", Offset = "0x982CD0", VA = "0x982CD0")]
		private void OnRegionsPinged(RegionHandler regionHandler)
		{
		}

		[Token(Token = "0x6000EED")]
		[Address(RVA = "0x982DFC", Offset = "0x982DFC", VA = "0x982DFC")]
		public void CloseRegionListView()
		{
		}

		[Token(Token = "0x6000EEE")]
		[Address(RVA = "0x982E58", Offset = "0x982E58", VA = "0x982E58")]
		public void LoadLevel(string level)
		{
		}

		[Token(Token = "0x6000EEF")]
		[Address(RVA = "0x982F30", Offset = "0x982F30", VA = "0x982F30")]
		public void SetRoomCustomProperty(string value)
		{
		}

		[Token(Token = "0x6000EF0")]
		[Address(RVA = "0x983088", Offset = "0x983088", VA = "0x983088")]
		public void JoinRoom(string roomName)
		{
		}

		[Token(Token = "0x6000EF1")]
		[Address(RVA = "0x983134", Offset = "0x983134", VA = "0x983134")]
		public void CreateRoom()
		{
		}

		[Token(Token = "0x6000EF2")]
		[Address(RVA = "0x983148", Offset = "0x983148", VA = "0x983148")]
		public void CreateRoom(string roomName, string lobbyName = "MyLobby", LobbyType lobbyType = LobbyType.SqlLobby, [Optional] string[] expectedUsers)
		{
		}

		[Token(Token = "0x6000EF3")]
		[Address(RVA = "0x983778", Offset = "0x983778", VA = "0x983778")]
		public void JoinRandomRoom()
		{
		}

		[Token(Token = "0x6000EF4")]
		[Address(RVA = "0x9837C8", Offset = "0x9837C8", VA = "0x9837C8")]
		public void LeaveRoom()
		{
		}

		[Token(Token = "0x6000EF5")]
		[Address(RVA = "0x981F2C", Offset = "0x981F2C", VA = "0x981F2C")]
		public void Connect()
		{
		}

		[Token(Token = "0x6000EF6")]
		[Address(RVA = "0x983868", Offset = "0x983868", VA = "0x983868")]
		public void ReConnect()
		{
		}

		[Token(Token = "0x6000EF7")]
		[Address(RVA = "0x983960", Offset = "0x983960", VA = "0x983960")]
		public void ReconnectAndRejoin()
		{
		}

		[Token(Token = "0x6000EF8")]
		[Address(RVA = "0x983A58", Offset = "0x983A58", VA = "0x983A58")]
		public void ConnectToBestCloudServer()
		{
		}

		[Token(Token = "0x6000EF9")]
		[Address(RVA = "0x983BF4", Offset = "0x983BF4", VA = "0x983BF4")]
		public void ConnectToRegion(string region)
		{
		}

		[Token(Token = "0x6000EFA")]
		[Address(RVA = "0x983E70", Offset = "0x983E70", VA = "0x983E70")]
		public void ConnectOffline()
		{
		}

		[Token(Token = "0x6000EFB")]
		[Address(RVA = "0x983F14", Offset = "0x983F14", VA = "0x983F14")]
		public void JoinLobby()
		{
		}

		[Token(Token = "0x6000EFC")]
		[Address(RVA = "0x983FF4", Offset = "0x983FF4", VA = "0x983FF4")]
		public void Disconnect()
		{
		}

		[Token(Token = "0x6000EFD")]
		[Address(RVA = "0x984094", Offset = "0x984094", VA = "0x984094")]
		public void OpenDashboard()
		{
		}

		[Token(Token = "0x6000EFE")]
		[Address(RVA = "0x9840D8", Offset = "0x9840D8", VA = "0x9840D8")]
		public void OnDropdownConnectAs(int dropdownIndex)
		{
		}

		[Token(Token = "0x6000EFF")]
		[Address(RVA = "0x98420C", Offset = "0x98420C", VA = "0x98420C")]
		[IteratorStateMachine(typeof(<OnDropdownConnectAs_CB>d__99))]
		private IEnumerator OnDropdownConnectAs_CB()
		{
			return null;
		}

		[Token(Token = "0x6000F00")]
		[Address(RVA = "0x98429C", Offset = "0x98429C", VA = "0x98429C")]
		public void OnLobbyToolsViewTabChanged(string tabId)
		{
		}

		[Token(Token = "0x6000F01")]
		[Address(RVA = "0x9842A0", Offset = "0x9842A0", VA = "0x9842A0")]
		public void OnSelectPlayer()
		{
		}

		[Token(Token = "0x6000F02")]
		[Address(RVA = "0x9842A4", Offset = "0x9842A4", VA = "0x9842A4", Slot = "29")]
		public override void OnConnected()
		{
		}

		[Token(Token = "0x6000F03")]
		[Address(RVA = "0x9843CC", Offset = "0x9843CC", VA = "0x9843CC", Slot = "37")]
		public override void OnDisconnected(DisconnectCause cause)
		{
		}

		[Token(Token = "0x6000F04")]
		[Address(RVA = "0x984590", Offset = "0x984590", VA = "0x984590", Slot = "44")]
		public override void OnConnectedToMaster()
		{
		}

		[Token(Token = "0x6000F05")]
		[Address(RVA = "0x98494C", Offset = "0x98494C", VA = "0x98494C", Slot = "35")]
		public override void OnJoinedLobby()
		{
		}

		[Token(Token = "0x6000F06")]
		[Address(RVA = "0x9846F4", Offset = "0x9846F4", VA = "0x9846F4")]
		private void SetUpLobbyGenericUI()
		{
		}

		[Token(Token = "0x6000F07")]
		[Address(RVA = "0x984CEC", Offset = "0x984CEC", VA = "0x984CEC", Slot = "45")]
		public override void OnRoomPropertiesUpdate(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
		{
		}

		[Token(Token = "0x6000F08")]
		[Address(RVA = "0x984E20", Offset = "0x984E20", VA = "0x984E20", Slot = "36")]
		public override void OnLeftLobby()
		{
		}

		[Token(Token = "0x6000F09")]
		[Address(RVA = "0x984EC8", Offset = "0x984EC8", VA = "0x984EC8", Slot = "32")]
		public override void OnCreateRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x6000F0A")]
		[Address(RVA = "0x9850A8", Offset = "0x9850A8", VA = "0x9850A8", Slot = "43")]
		public override void OnJoinRandomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x6000F0B")]
		[Address(RVA = "0x985288", Offset = "0x985288", VA = "0x985288", Slot = "40")]
		public override void OnJoinedRoom()
		{
		}

		[Token(Token = "0x6000F0C")]
		[Address(RVA = "0x985B1C", Offset = "0x985B1C", VA = "0x985B1C", Slot = "33")]
		public override void OnJoinRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x6000F0D")]
		[Address(RVA = "0x985BA0", Offset = "0x985BA0", VA = "0x985BA0", Slot = "30")]
		public override void OnLeftRoom()
		{
		}

		[Token(Token = "0x6000F0E")]
		[Address(RVA = "0x9835EC", Offset = "0x9835EC", VA = "0x9835EC")]
		private RoomOptions GetRoomOptions()
		{
			return null;
		}

		[Token(Token = "0x6000F0F")]
		[Address(RVA = "0x985CE8", Offset = "0x985CE8", VA = "0x985CE8")]
		public PunCockpit()
		{
		}
	}
	[Token(Token = "0x20002A5")]
	[RequireComponent(typeof(Toggle))]
	public class AutoSyncSceneToggle : MonoBehaviour
	{
		[Token(Token = "0x4000DBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Toggle _toggle;

		[Token(Token = "0x4000DBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool registered;

		[Token(Token = "0x6000F1B")]
		[Address(RVA = "0x9860F8", Offset = "0x9860F8", VA = "0x9860F8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000F1C")]
		[Address(RVA = "0x9861DC", Offset = "0x9861DC", VA = "0x9861DC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000F1D")]
		[Address(RVA = "0x9862D0", Offset = "0x9862D0", VA = "0x9862D0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F1E")]
		[Address(RVA = "0x9863DC", Offset = "0x9863DC", VA = "0x9863DC")]
		public void ToggleValue(bool value)
		{
		}

		[Token(Token = "0x6000F1F")]
		[Address(RVA = "0x986434", Offset = "0x986434", VA = "0x986434")]
		public AutoSyncSceneToggle()
		{
		}
	}
	[Token(Token = "0x20002A6")]
	public class BackgroundTimeOutField : MonoBehaviour
	{
		[Token(Token = "0x4000DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InputField PropertyValueInput;

		[Token(Token = "0x4000DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float _cache;

		[Token(Token = "0x4000DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool registered;

		[Token(Token = "0x6000F20")]
		[Address(RVA = "0x98643C", Offset = "0x98643C", VA = "0x98643C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000F21")]
		[Address(RVA = "0x986500", Offset = "0x986500", VA = "0x986500")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000F22")]
		[Address(RVA = "0x9865AC", Offset = "0x9865AC", VA = "0x9865AC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F23")]
		[Address(RVA = "0x986678", Offset = "0x986678", VA = "0x986678")]
		public void OnEndEdit(string value)
		{
		}

		[Token(Token = "0x6000F24")]
		[Address(RVA = "0x9866E4", Offset = "0x9866E4", VA = "0x9866E4")]
		public void SubmitForm(string value)
		{
		}

		[Token(Token = "0x6000F25")]
		[Address(RVA = "0x986764", Offset = "0x986764", VA = "0x986764")]
		public BackgroundTimeOutField()
		{
		}
	}
	[Token(Token = "0x20002A7")]
	[RequireComponent(typeof(Toggle))]
	public class CrcCheckToggle : MonoBehaviour
	{
		[Token(Token = "0x4000DC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Toggle _toggle;

		[Token(Token = "0x4000DC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool registered;

		[Token(Token = "0x6000F26")]
		[Address(RVA = "0x98676C", Offset = "0x98676C", VA = "0x98676C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000F27")]
		[Address(RVA = "0x986850", Offset = "0x986850", VA = "0x986850")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000F28")]
		[Address(RVA = "0x986944", Offset = "0x986944", VA = "0x986944")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F29")]
		[Address(RVA = "0x9869EC", Offset = "0x9869EC", VA = "0x9869EC")]
		public void ToggleValue(bool value)
		{
		}

		[Token(Token = "0x6000F2A")]
		[Address(RVA = "0x986A44", Offset = "0x986A44", VA = "0x986A44")]
		public CrcCheckToggle()
		{
		}
	}
	[Token(Token = "0x20002A8")]
	[RequireComponent(typeof(Toggle))]
	public class CurrentRoomIsOpenToggle : MonoBehaviour, IPointerClickHandler, IEventSystemHandler
	{
		[Token(Token = "0x4000DC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Toggle _toggle;

		[Token(Token = "0x6000F2B")]
		[Address(RVA = "0x986A4C", Offset = "0x986A4C", VA = "0x986A4C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000F2C")]
		[Address(RVA = "0x986A9C", Offset = "0x986A9C", VA = "0x986A9C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F2D")]
		[Address(RVA = "0x986C70", Offset = "0x986C70", VA = "0x986C70")]
		public void ToggleValue(bool value)
		{
		}

		[Token(Token = "0x6000F2E")]
		[Address(RVA = "0x986D78", Offset = "0x986D78", VA = "0x986D78", Slot = "4")]
		public void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000F2F")]
		[Address(RVA = "0x986D94", Offset = "0x986D94", VA = "0x986D94")]
		public CurrentRoomIsOpenToggle()
		{
		}
	}
	[Token(Token = "0x20002A9")]
	[RequireComponent(typeof(Toggle))]
	public class CurrentRoomIsVisibleToggle : MonoBehaviour, IPointerClickHandler, IEventSystemHandler
	{
		[Token(Token = "0x4000DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Toggle _toggle;

		[Token(Token = "0x6000F30")]
		[Address(RVA = "0x986D9C", Offset = "0x986D9C", VA = "0x986D9C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000F31")]
		[Address(RVA = "0x986DEC", Offset = "0x986DEC", VA = "0x986DEC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F32")]
		[Address(RVA = "0x986FC0", Offset = "0x986FC0", VA = "0x986FC0")]
		public void ToggleValue(bool value)
		{
		}

		[Token(Token = "0x6000F33")]
		[Address(RVA = "0x9870C8", Offset = "0x9870C8", VA = "0x9870C8", Slot = "4")]
		public void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000F34")]
		[Address(RVA = "0x9870E4", Offset = "0x9870E4", VA = "0x9870E4")]
		public CurrentRoomIsVisibleToggle()
		{
		}
	}
	[Token(Token = "0x20002AA")]
	public class DocLinkButton : MonoBehaviour, IPointerClickHandler, IEventSystemHandler
	{
		[Token(Token = "0x4000DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DocLinks.DocTypes Type;

		[Token(Token = "0x4000DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string Reference;

		[Token(Token = "0x6000F35")]
		[Address(RVA = "0x9870EC", Offset = "0x9870EC", VA = "0x9870EC")]
		public void Start()
		{
		}

		[Token(Token = "0x6000F36")]
		[Address(RVA = "0x9870F0", Offset = "0x9870F0", VA = "0x9870F0", Slot = "4")]
		public void OnPointerClick(PointerEventData pointerEventData)
		{
		}

		[Token(Token = "0x6000F37")]
		[Address(RVA = "0x987158", Offset = "0x987158", VA = "0x987158")]
		public DocLinkButton()
		{
		}
	}
	[Token(Token = "0x20002AB")]
	public class GameVersionField : MonoBehaviour
	{
		[Token(Token = "0x4000DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InputField PropertyValueInput;

		[Token(Token = "0x4000DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string _cache;

		[Token(Token = "0x4000DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool registered;

		[Token(Token = "0x6000F38")]
		[Address(RVA = "0x9871A8", Offset = "0x9871A8", VA = "0x9871A8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000F39")]
		[Address(RVA = "0x98726C", Offset = "0x98726C", VA = "0x98726C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000F3A")]
		[Address(RVA = "0x987318", Offset = "0x987318", VA = "0x987318")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F3B")]
		[Address(RVA = "0x9873E0", Offset = "0x9873E0", VA = "0x9873E0")]
		public void OnEndEdit(string value)
		{
		}

		[Token(Token = "0x6000F3C")]
		[Address(RVA = "0x98744C", Offset = "0x98744C", VA = "0x98744C")]
		public void SubmitForm(string value)
		{
		}

		[Token(Token = "0x6000F3D")]
		[Address(RVA = "0x9874C8", Offset = "0x9874C8", VA = "0x9874C8")]
		public GameVersionField()
		{
		}
	}
	[Token(Token = "0x20002AC")]
	public class BoolInputField : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20002AD")]
		public class OnSubmitEvent : UnityEvent<bool>
		{
			[Token(Token = "0x6000F43")]
			[Address(RVA = "0x9876A4", Offset = "0x9876A4", VA = "0x9876A4")]
			public OnSubmitEvent()
			{
			}
		}

		[Token(Token = "0x4000DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle PropertyValueInput;

		[Token(Token = "0x4000DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OnSubmitEvent OnSubmit;

		[Token(Token = "0x4000DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool registered;

		[Token(Token = "0x6000F3E")]
		[Address(RVA = "0x9874D0", Offset = "0x9874D0", VA = "0x9874D0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000F3F")]
		[Address(RVA = "0x987594", Offset = "0x987594", VA = "0x987594")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000F40")]
		[Address(RVA = "0x987640", Offset = "0x987640", VA = "0x987640")]
		private void OnValueChanged(bool value)
		{
		}

		[Token(Token = "0x6000F41")]
		[Address(RVA = "0x981C88", Offset = "0x981C88", VA = "0x981C88")]
		public void SetValue(bool value)
		{
		}

		[Token(Token = "0x6000F42")]
		[Address(RVA = "0x98769C", Offset = "0x98769C", VA = "0x98769C")]
		public BoolInputField()
		{
		}
	}
	[Token(Token = "0x20002AE")]
	public class IntInputField : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20002AF")]
		public class OnSubmitEvent : UnityEvent<int>
		{
			[Token(Token = "0x6000F4A")]
			[Address(RVA = "0x987948", Offset = "0x987948", VA = "0x987948")]
			public OnSubmitEvent()
			{
			}
		}

		[Token(Token = "0x4000DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InputField PropertyValueInput;

		[Token(Token = "0x4000DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OnSubmitEvent OnSubmit;

		[Token(Token = "0x4000DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool registered;

		[Token(Token = "0x6000F44")]
		[Address(RVA = "0x9876EC", Offset = "0x9876EC", VA = "0x9876EC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000F45")]
		[Address(RVA = "0x9877B0", Offset = "0x9877B0", VA = "0x9877B0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000F46")]
		[Address(RVA = "0x981C0C", Offset = "0x981C0C", VA = "0x981C0C")]
		public void SetValue(int value)
		{
		}

		[Token(Token = "0x6000F47")]
		[Address(RVA = "0x98785C", Offset = "0x98785C", VA = "0x98785C")]
		public void EndEditOnEnter(string value)
		{
		}

		[Token(Token = "0x6000F48")]
		[Address(RVA = "0x9878C8", Offset = "0x9878C8", VA = "0x9878C8")]
		public void SubmitForm(string value)
		{
		}

		[Token(Token = "0x6000F49")]
		[Address(RVA = "0x987940", Offset = "0x987940", VA = "0x987940")]
		public IntInputField()
		{
		}
	}
	[Token(Token = "0x20002B0")]
	public class StringInputField : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20002B1")]
		public class OnSubmitEvent : UnityEvent<string>
		{
			[Token(Token = "0x6000F51")]
			[Address(RVA = "0x987BCC", Offset = "0x987BCC", VA = "0x987BCC")]
			public OnSubmitEvent()
			{
			}
		}

		[Token(Token = "0x4000DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InputField PropertyValueInput;

		[Token(Token = "0x4000DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OnSubmitEvent OnSubmit;

		[Token(Token = "0x4000DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool registered;

		[Token(Token = "0x6000F4B")]
		[Address(RVA = "0x987990", Offset = "0x987990", VA = "0x987990")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000F4C")]
		[Address(RVA = "0x987A54", Offset = "0x987A54", VA = "0x987A54")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000F4D")]
		[Address(RVA = "0x981C4C", Offset = "0x981C4C", VA = "0x981C4C")]
		public void SetValue(string value)
		{
		}

		[Token(Token = "0x6000F4E")]
		[Address(RVA = "0x987B00", Offset = "0x987B00", VA = "0x987B00")]
		public void EndEditOnEnter(string value)
		{
		}

		[Token(Token = "0x6000F4F")]
		[Address(RVA = "0x987B6C", Offset = "0x987B6C", VA = "0x987B6C")]
		public void SubmitForm(string value)
		{
		}

		[Token(Token = "0x6000F50")]
		[Address(RVA = "0x987BC4", Offset = "0x987BC4", VA = "0x987BC4")]
		public StringInputField()
		{
		}
	}
	[Token(Token = "0x20002B2")]
	public class ToggleExpand : MonoBehaviour
	{
		[Token(Token = "0x4000DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject Content;

		[Token(Token = "0x4000DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Toggle Toggle;

		[Token(Token = "0x4000DD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _init;

		[Token(Token = "0x6000F52")]
		[Address(RVA = "0x987C14", Offset = "0x987C14", VA = "0x987C14")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000F53")]
		[Address(RVA = "0x987D04", Offset = "0x987D04", VA = "0x987D04")]
		private void HandleToggleOnValudChanged(bool value)
		{
		}

		[Token(Token = "0x6000F54")]
		[Address(RVA = "0x987D24", Offset = "0x987D24", VA = "0x987D24")]
		public ToggleExpand()
		{
		}
	}
	[Token(Token = "0x20002B3")]
	public class LayoutElementMatchSize : MonoBehaviour
	{
		[Token(Token = "0x4000DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LayoutElement layoutElement;

		[Token(Token = "0x4000DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RectTransform Target;

		[Token(Token = "0x4000DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool MatchHeight;

		[Token(Token = "0x4000DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool MatchWidth;

		[Token(Token = "0x6000F55")]
		[Address(RVA = "0x987D2C", Offset = "0x987D2C", VA = "0x987D2C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F56")]
		[Address(RVA = "0x987DBC", Offset = "0x987DBC", VA = "0x987DBC")]
		public LayoutElementMatchSize()
		{
		}
	}
	[Token(Token = "0x20002B4")]
	public class NickNameField : MonoBehaviour
	{
		[Token(Token = "0x4000DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InputField PropertyValueInput;

		[Token(Token = "0x4000DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string _cache;

		[Token(Token = "0x4000DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool registered;

		[Token(Token = "0x6000F57")]
		[Address(RVA = "0x987DCC", Offset = "0x987DCC", VA = "0x987DCC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000F58")]
		[Address(RVA = "0x987E90", Offset = "0x987E90", VA = "0x987E90")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000F59")]
		[Address(RVA = "0x987F3C", Offset = "0x987F3C", VA = "0x987F3C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F5A")]
		[Address(RVA = "0x987FE4", Offset = "0x987FE4", VA = "0x987FE4")]
		public void OnEndEdit(string value)
		{
		}

		[Token(Token = "0x6000F5B")]
		[Address(RVA = "0x988050", Offset = "0x988050", VA = "0x988050")]
		public void SubmitForm(string value)
		{
		}

		[Token(Token = "0x6000F5C")]
		[Address(RVA = "0x9880B8", Offset = "0x9880B8", VA = "0x9880B8")]
		public NickNameField()
		{
		}
	}
	[Token(Token = "0x20002B5")]
	public class OnlineDocButton : MonoBehaviour, IPointerClickHandler, IEventSystemHandler
	{
		[Token(Token = "0x4000DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Url;

		[Token(Token = "0x6000F5D")]
		[Address(RVA = "0x9880C0", Offset = "0x9880C0", VA = "0x9880C0", Slot = "4")]
		public void OnPointerClick(PointerEventData pointerEventData)
		{
		}

		[Token(Token = "0x6000F5E")]
		[Address(RVA = "0x9880CC", Offset = "0x9880CC", VA = "0x9880CC")]
		public OnlineDocButton()
		{
		}
	}
	[Token(Token = "0x20002B6")]
	public class SendRateField : MonoBehaviour
	{
		[Token(Token = "0x4000DDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InputField PropertyValueInput;

		[Token(Token = "0x4000DE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int _cache;

		[Token(Token = "0x4000DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool registered;

		[Token(Token = "0x6000F5F")]
		[Address(RVA = "0x98811C", Offset = "0x98811C", VA = "0x98811C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000F60")]
		[Address(RVA = "0x9881E0", Offset = "0x9881E0", VA = "0x9881E0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000F61")]
		[Address(RVA = "0x98828C", Offset = "0x98828C", VA = "0x98828C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F62")]
		[Address(RVA = "0x988340", Offset = "0x988340", VA = "0x988340")]
		public void OnEndEdit(string value)
		{
		}

		[Token(Token = "0x6000F63")]
		[Address(RVA = "0x9883AC", Offset = "0x9883AC", VA = "0x9883AC")]
		public void SubmitForm(string value)
		{
		}

		[Token(Token = "0x6000F64")]
		[Address(RVA = "0x988424", Offset = "0x988424", VA = "0x988424")]
		public SendRateField()
		{
		}
	}
	[Token(Token = "0x20002B7")]
	public class SendRateOnSerializeField : MonoBehaviour
	{
		[Token(Token = "0x4000DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InputField PropertyValueInput;

		[Token(Token = "0x4000DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int _cache;

		[Token(Token = "0x4000DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool registered;

		[Token(Token = "0x6000F65")]
		[Address(RVA = "0x98842C", Offset = "0x98842C", VA = "0x98842C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000F66")]
		[Address(RVA = "0x9884F0", Offset = "0x9884F0", VA = "0x9884F0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000F67")]
		[Address(RVA = "0x98859C", Offset = "0x98859C", VA = "0x98859C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F68")]
		[Address(RVA = "0x988650", Offset = "0x988650", VA = "0x988650")]
		public void OnEndEdit(string value)
		{
		}

		[Token(Token = "0x6000F69")]
		[Address(RVA = "0x9886B4", Offset = "0x9886B4", VA = "0x9886B4")]
		public void SubmitForm(string value)
		{
		}

		[Token(Token = "0x6000F6A")]
		[Address(RVA = "0x98872C", Offset = "0x98872C", VA = "0x98872C")]
		public SendRateOnSerializeField()
		{
		}
	}
	[Token(Token = "0x20002B8")]
	public class PlayerDetailsController : MonoBehaviourPunCallbacks
	{
		[Token(Token = "0x20002B9")]
		[CompilerGenerated]
		private sealed class <UpdateUIPing>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000DF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000DF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000DF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlayerDetailsController <>4__this;

			[Token(Token = "0x17000114")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F7D")]
				[Address(RVA = "0x98976C", Offset = "0x98976C", VA = "0x98976C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000115")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F7F")]
				[Address(RVA = "0x9897B4", Offset = "0x9897B4", VA = "0x9897B4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F7A")]
			[Address(RVA = "0x9895BC", Offset = "0x9895BC", VA = "0x9895BC")]
			[DebuggerHidden]
			public <UpdateUIPing>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x6000F7B")]
			[Address(RVA = "0x989660", Offset = "0x989660", VA = "0x989660", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F7C")]
			[Address(RVA = "0x989664", Offset = "0x989664", VA = "0x989664", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F7E")]
			[Address(RVA = "0x989774", Offset = "0x989774", VA = "0x989774", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject ContentPanel;

		[Token(Token = "0x4000DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PropertyCell PropertyCellPrototype;

		[Token(Token = "0x4000DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text UpdateStatusText;

		[Token(Token = "0x4000DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform BuiltInPropertiesPanel;

		[Token(Token = "0x4000DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform PlayerNumberingExtensionPanel;

		[Token(Token = "0x4000DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform ScoreExtensionPanel;

		[Token(Token = "0x4000DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform TeamExtensionPanel;

		[Token(Token = "0x4000DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform TurnExtensionPanel;

		[Token(Token = "0x4000DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform CustomPropertiesPanel;

		[Token(Token = "0x4000DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public GameObject MasterClientToolBar;

		[Token(Token = "0x4000DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public GameObject NotInRoomLabel;

		[Token(Token = "0x4000DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Dictionary<string, PropertyCell> builtInPropsCellList;

		[Token(Token = "0x4000DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Player _player;

		[Token(Token = "0x6000F6B")]
		[Address(RVA = "0x988734", Offset = "0x988734", VA = "0x988734")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F6C")]
		[Address(RVA = "0x988760", Offset = "0x988760", VA = "0x988760", Slot = "27")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x6000F6D")]
		[Address(RVA = "0x985460", Offset = "0x985460", VA = "0x985460")]
		public void SetPlayerTarget(Player player)
		{
		}

		[Token(Token = "0x6000F6E")]
		[Address(RVA = "0x988E58", Offset = "0x988E58", VA = "0x988E58")]
		private void AddProperty(string property, string value, Transform parent)
		{
		}

		[Token(Token = "0x6000F6F")]
		[Address(RVA = "0x988CFC", Offset = "0x988CFC", VA = "0x988CFC")]
		private string ParseKey(object key)
		{
			return null;
		}

		[Token(Token = "0x6000F70")]
		[Address(RVA = "0x988F74", Offset = "0x988F74", VA = "0x988F74")]
		public void KickOutPlayer()
		{
		}

		[Token(Token = "0x6000F71")]
		[Address(RVA = "0x988FD0", Offset = "0x988FD0", VA = "0x988FD0")]
		public void SetAsMaster()
		{
		}

		[Token(Token = "0x6000F72")]
		[Address(RVA = "0x98902C", Offset = "0x98902C", VA = "0x98902C", Slot = "42")]
		public override void OnPlayerLeftRoom(Player otherPlayer)
		{
		}

		[Token(Token = "0x6000F73")]
		[Address(RVA = "0x989080", Offset = "0x989080", VA = "0x989080", Slot = "31")]
		public override void OnMasterClientSwitched(Player newMasterClient)
		{
		}

		[Token(Token = "0x6000F74")]
		[Address(RVA = "0x9890AC", Offset = "0x9890AC", VA = "0x9890AC", Slot = "46")]
		public override void OnPlayerPropertiesUpdate(Player target, ExitGames.Client.Photon.Hashtable changedProps)
		{
		}

		[Token(Token = "0x6000F75")]
		[Address(RVA = "0x98945C", Offset = "0x98945C", VA = "0x98945C")]
		private void OnPlayerNumberingChanged()
		{
		}

		[Token(Token = "0x6000F76")]
		[Address(RVA = "0x989554", Offset = "0x989554", VA = "0x989554")]
		[IteratorStateMachine(typeof(<UpdateUIPing>d__24))]
		private IEnumerator UpdateUIPing()
		{
			return null;
		}

		[Token(Token = "0x6000F77")]
		[Address(RVA = "0x988838", Offset = "0x988838", VA = "0x988838")]
		public void ResetList()
		{
		}

		[Token(Token = "0x6000F78")]
		[Address(RVA = "0x988A58", Offset = "0x988A58", VA = "0x988A58")]
		private ExitGames.Client.Photon.Hashtable GetAllPlayerBuiltIntProperties()
		{
			return null;
		}

		[Token(Token = "0x6000F79")]
		[Address(RVA = "0x9895E4", Offset = "0x9895E4", VA = "0x9895E4")]
		public PlayerDetailsController()
		{
		}
	}
	[Token(Token = "0x20002BA")]
	public class InfosPanelPlaceholder : MonoBehaviour
	{
		[Token(Token = "0x4000DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PunCockpit Manager;

		[Token(Token = "0x6000F80")]
		[Address(RVA = "0x9897BC", Offset = "0x9897BC", VA = "0x9897BC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000F81")]
		[Address(RVA = "0x9897E4", Offset = "0x9897E4", VA = "0x9897E4")]
		public InfosPanelPlaceholder()
		{
		}
	}
	[Token(Token = "0x20002BB")]
	public class FriendListCell : MonoBehaviour
	{
		[Token(Token = "0x4000DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FriendListView ListManager;

		[Token(Token = "0x4000DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text NameText;

		[Token(Token = "0x4000DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject OnlineFlag;

		[Token(Token = "0x4000DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject inRoomText;

		[Token(Token = "0x4000DFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject JoinButton;

		[Token(Token = "0x4000DFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private FriendInfo _info;

		[Token(Token = "0x6000F82")]
		[Address(RVA = "0x9897EC", Offset = "0x9897EC", VA = "0x9897EC")]
		public void RefreshInfo(FriendListView.FriendDetail details)
		{
		}

		[Token(Token = "0x6000F83")]
		[Address(RVA = "0x989858", Offset = "0x989858", VA = "0x989858")]
		public void RefreshInfo(FriendInfo info)
		{
		}

		[Token(Token = "0x6000F84")]
		[Address(RVA = "0x9898DC", Offset = "0x9898DC", VA = "0x9898DC")]
		public void JoinFriendRoom()
		{
		}

		[Token(Token = "0x6000F85")]
		[Address(RVA = "0x989958", Offset = "0x989958", VA = "0x989958")]
		public void RemoveFromList()
		{
		}

		[Token(Token = "0x6000F86")]
		[Address(RVA = "0x9899C4", Offset = "0x9899C4", VA = "0x9899C4")]
		public FriendListCell()
		{
		}
	}
	[Token(Token = "0x20002BC")]
	public class FriendListView : MonoBehaviourPunCallbacks
	{
		[Serializable]
		[Token(Token = "0x20002BD")]
		public class FriendDetail
		{
			[Token(Token = "0x4000E02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string NickName;

			[Token(Token = "0x4000E03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string UserId;

			[Token(Token = "0x6000F91")]
			[Address(RVA = "0x985ED8", Offset = "0x985ED8", VA = "0x985ED8")]
			public FriendDetail(string NickName, string UserId)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20002BE")]
		public class OnJoinRoomEvent : UnityEvent<string>
		{
			[Token(Token = "0x6000F92")]
			[Address(RVA = "0x98A140", Offset = "0x98A140", VA = "0x98A140")]
			public OnJoinRoomEvent()
			{
			}
		}

		[Token(Token = "0x20002BF")]
		[CompilerGenerated]
		private sealed class <UpdateUIPing>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FriendListView <>4__this;

			[Token(Token = "0x17000116")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F96")]
				[Address(RVA = "0x98A294", Offset = "0x98A294", VA = "0x98A294", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000117")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F98")]
				[Address(RVA = "0x98A2DC", Offset = "0x98A2DC", VA = "0x98A2DC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F93")]
			[Address(RVA = "0x98A078", Offset = "0x98A078", VA = "0x98A078")]
			[DebuggerHidden]
			public <UpdateUIPing>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6000F94")]
			[Address(RVA = "0x98A188", Offset = "0x98A188", VA = "0x98A188", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F95")]
			[Address(RVA = "0x98A18C", Offset = "0x98A18C", VA = "0x98A18C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F97")]
			[Address(RVA = "0x98A29C", Offset = "0x98A29C", VA = "0x98A29C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000DFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FriendListCell CellPrototype;

		[Token(Token = "0x4000DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Text ContentFeedback;

		[Token(Token = "0x4000DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text UpdateStatusText;

		[Token(Token = "0x4000DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public OnJoinRoomEvent OnJoinRoom;

		[Token(Token = "0x4000E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Dictionary<string, FriendListCell> FriendCellList;

		[Token(Token = "0x4000E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string[] FriendsLUT;

		[Token(Token = "0x6000F87")]
		[Address(RVA = "0x9899CC", Offset = "0x9899CC", VA = "0x9899CC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F88")]
		[Address(RVA = "0x9899F8", Offset = "0x9899F8", VA = "0x9899F8", Slot = "27")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x6000F89")]
		[Address(RVA = "0x9849FC", Offset = "0x9849FC", VA = "0x9849FC")]
		public void SetFriendDetails(FriendDetail[] friendList)
		{
		}

		[Token(Token = "0x6000F8A")]
		[Address(RVA = "0x989CAC", Offset = "0x989CAC", VA = "0x989CAC")]
		public void FindFriends()
		{
		}

		[Token(Token = "0x6000F8B")]
		[Address(RVA = "0x989D3C", Offset = "0x989D3C", VA = "0x989D3C", Slot = "47")]
		public override void OnFriendListUpdate(List<FriendInfo> friendList)
		{
		}

		[Token(Token = "0x6000F8C")]
		[Address(RVA = "0x989FB4", Offset = "0x989FB4", VA = "0x989FB4")]
		public void OnRoomListUpdateCallBack(List<RoomInfo> roomList)
		{
		}

		[Token(Token = "0x6000F8D")]
		[Address(RVA = "0x989900", Offset = "0x989900", VA = "0x989900")]
		public void JoinFriendRoom(string RoomName)
		{
		}

		[Token(Token = "0x6000F8E")]
		[Address(RVA = "0x98A010", Offset = "0x98A010", VA = "0x98A010")]
		[IteratorStateMachine(typeof(<UpdateUIPing>d__15))]
		private IEnumerator UpdateUIPing()
		{
			return null;
		}

		[Token(Token = "0x6000F8F")]
		[Address(RVA = "0x989A8C", Offset = "0x989A8C", VA = "0x989A8C")]
		public void ResetList()
		{
		}

		[Token(Token = "0x6000F90")]
		[Address(RVA = "0x98A0A0", Offset = "0x98A0A0", VA = "0x98A0A0")]
		public FriendListView()
		{
		}
	}
	[Token(Token = "0x20002C0")]
	public class PlayerListCell : MonoBehaviour
	{
		[Token(Token = "0x20002C1")]
		[CompilerGenerated]
		private sealed class <Add>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlayerListCell <>4__this;

			[Token(Token = "0x17000118")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000FA4")]
				[Address(RVA = "0x893644", Offset = "0x893644", VA = "0x893644", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000119")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000FA6")]
				[Address(RVA = "0x89368C", Offset = "0x89368C", VA = "0x89368C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000FA1")]
			[Address(RVA = "0x89343C", Offset = "0x89343C", VA = "0x89343C")]
			[DebuggerHidden]
			public <Add>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x6000FA2")]
			[Address(RVA = "0x8934FC", Offset = "0x8934FC", VA = "0x8934FC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000FA3")]
			[Address(RVA = "0x893500", Offset = "0x893500", VA = "0x893500", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000FA5")]
			[Address(RVA = "0x89364C", Offset = "0x89364C", VA = "0x89364C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002C2")]
		[CompilerGenerated]
		private sealed class <Remove>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlayerListCell <>4__this;

			[Token(Token = "0x1700011A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000FAA")]
				[Address(RVA = "0x8937E4", Offset = "0x8937E4", VA = "0x8937E4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700011B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000FAC")]
				[Address(RVA = "0x89382C", Offset = "0x89382C", VA = "0x89382C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000FA7")]
			[Address(RVA = "0x8934CC", Offset = "0x8934CC", VA = "0x8934CC")]
			[DebuggerHidden]
			public <Remove>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6000FA8")]
			[Address(RVA = "0x893694", Offset = "0x893694", VA = "0x893694", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000FA9")]
			[Address(RVA = "0x893698", Offset = "0x893698", VA = "0x893698", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000FAB")]
			[Address(RVA = "0x8937EC", Offset = "0x8937EC", VA = "0x8937EC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlayerListView ListManager;

		[Token(Token = "0x4000E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text NumberText;

		[Token(Token = "0x4000E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Text NameText;

		[Token(Token = "0x4000E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Image ActiveFlag;

		[Token(Token = "0x4000E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color InactiveColor;

		[Token(Token = "0x4000E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Color ActiveColor;

		[Token(Token = "0x4000E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Text isLocalText;

		[Token(Token = "0x4000E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Image isMasterFlag;

		[Token(Token = "0x4000E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public LayoutElement LayoutElement;

		[Token(Token = "0x4000E10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Player _player;

		[Token(Token = "0x4000E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool isInactiveCache;

		[Token(Token = "0x6000F99")]
		[Address(RVA = "0x893064", Offset = "0x893064", VA = "0x893064")]
		public void RefreshInfo(ExitGames.Client.Photon.Hashtable changedProps)
		{
		}

		[Token(Token = "0x6000F9A")]
		[Address(RVA = "0x8932A8", Offset = "0x8932A8", VA = "0x8932A8")]
		public void AddToList(Player info, bool animate = false)
		{
		}

		[Token(Token = "0x6000F9B")]
		[Address(RVA = "0x893340", Offset = "0x893340", VA = "0x893340")]
		public void RemoveFromList()
		{
		}

		[Token(Token = "0x6000F9C")]
		[Address(RVA = "0x89338C", Offset = "0x89338C", VA = "0x89338C")]
		public void OnClick()
		{
		}

		[Token(Token = "0x6000F9D")]
		[Address(RVA = "0x893068", Offset = "0x893068", VA = "0x893068")]
		private void UpdateInfo()
		{
		}

		[Token(Token = "0x6000F9E")]
		[Address(RVA = "0x8933D4", Offset = "0x8933D4", VA = "0x8933D4")]
		[IteratorStateMachine(typeof(<Add>d__16))]
		private IEnumerator Add()
		{
			return null;
		}

		[Token(Token = "0x6000F9F")]
		[Address(RVA = "0x893464", Offset = "0x893464", VA = "0x893464")]
		[IteratorStateMachine(typeof(<Remove>d__17))]
		private IEnumerator Remove()
		{
			return null;
		}

		[Token(Token = "0x6000FA0")]
		[Address(RVA = "0x8934F4", Offset = "0x8934F4", VA = "0x8934F4")]
		public PlayerListCell()
		{
		}
	}
	[Token(Token = "0x20002C3")]
	public class PlayerListView : MonoBehaviourPunCallbacks
	{
		[Token(Token = "0x20002C4")]
		[CompilerGenerated]
		private sealed class <UpdateUIPing>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlayerListView <>4__this;

			[Token(Token = "0x1700011C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000FBB")]
				[Address(RVA = "0x8947AC", Offset = "0x8947AC", VA = "0x8947AC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700011D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000FBD")]
				[Address(RVA = "0x8947F4", Offset = "0x8947F4", VA = "0x8947F4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000FB8")]
			[Address(RVA = "0x8943DC", Offset = "0x8943DC", VA = "0x8943DC")]
			[DebuggerHidden]
			public <UpdateUIPing>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6000FB9")]
			[Address(RVA = "0x8946A0", Offset = "0x8946A0", VA = "0x8946A0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000FBA")]
			[Address(RVA = "0x8946A4", Offset = "0x8946A4", VA = "0x8946A4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000FBC")]
			[Address(RVA = "0x8947B4", Offset = "0x8947B4", VA = "0x8947B4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerDetailsController PlayerDetailManager;

		[Token(Token = "0x4000E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PlayerListCell CellPrototype;

		[Token(Token = "0x4000E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text PlayerCountsText;

		[Token(Token = "0x4000E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Text UpdateStatusText;

		[Token(Token = "0x4000E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Dictionary<int, PlayerListCell> playerCellList;

		[Token(Token = "0x6000FAD")]
		[Address(RVA = "0x893834", Offset = "0x893834", VA = "0x893834")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000FAE")]
		[Address(RVA = "0x893860", Offset = "0x893860", VA = "0x893860", Slot = "27")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x6000FAF")]
		[Address(RVA = "0x8933B8", Offset = "0x8933B8", VA = "0x8933B8")]
		public void SelectPlayer(Player player)
		{
		}

		[Token(Token = "0x6000FB0")]
		[Address(RVA = "0x893D48", Offset = "0x893D48", VA = "0x893D48", Slot = "41")]
		public override void OnPlayerEnteredRoom(Player newPlayer)
		{
		}

		[Token(Token = "0x6000FB1")]
		[Address(RVA = "0x893F70", Offset = "0x893F70", VA = "0x893F70", Slot = "31")]
		public override void OnMasterClientSwitched(Player newMasterClient)
		{
		}

		[Token(Token = "0x6000FB2")]
		[Address(RVA = "0x89412C", Offset = "0x89412C", VA = "0x89412C", Slot = "46")]
		public override void OnPlayerPropertiesUpdate(Player target, ExitGames.Client.Photon.Hashtable changedProps)
		{
		}

		[Token(Token = "0x6000FB3")]
		[Address(RVA = "0x894260", Offset = "0x894260", VA = "0x894260", Slot = "42")]
		public override void OnPlayerLeftRoom(Player otherPlayer)
		{
		}

		[Token(Token = "0x6000FB4")]
		[Address(RVA = "0x893C70", Offset = "0x893C70", VA = "0x893C70")]
		private void RefreshCount()
		{
		}

		[Token(Token = "0x6000FB5")]
		[Address(RVA = "0x894374", Offset = "0x894374", VA = "0x894374")]
		[IteratorStateMachine(typeof(<UpdateUIPing>d__13))]
		private IEnumerator UpdateUIPing()
		{
			return null;
		}

		[Token(Token = "0x6000FB6")]
		[Address(RVA = "0x894404", Offset = "0x894404", VA = "0x894404")]
		public void ResetList()
		{
		}

		[Token(Token = "0x6000FB7")]
		[Address(RVA = "0x894624", Offset = "0x894624", VA = "0x894624")]
		public PlayerListView()
		{
		}
	}
	[Token(Token = "0x20002C5")]
	public class PropertyCell : MonoBehaviour
	{
		[Token(Token = "0x20002C6")]
		[CompilerGenerated]
		private sealed class <UpdateUIPing>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PropertyCell <>4__this;

			[Token(Token = "0x1700011E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000FC8")]
				[Address(RVA = "0x894CDC", Offset = "0x894CDC", VA = "0x894CDC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700011F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000FCA")]
				[Address(RVA = "0x894D24", Offset = "0x894D24", VA = "0x894D24", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000FC5")]
			[Address(RVA = "0x894AA4", Offset = "0x894AA4", VA = "0x894AA4")]
			[DebuggerHidden]
			public <UpdateUIPing>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6000FC6")]
			[Address(RVA = "0x894BF4", Offset = "0x894BF4", VA = "0x894BF4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000FC7")]
			[Address(RVA = "0x894BF8", Offset = "0x894BF8", VA = "0x894BF8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000FC9")]
			[Address(RVA = "0x894CE4", Offset = "0x894CE4", VA = "0x894CE4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002C7")]
		[CompilerGenerated]
		private sealed class <Add>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PropertyCell <>4__this;

			[Token(Token = "0x17000120")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000FCE")]
				[Address(RVA = "0x894E70", Offset = "0x894E70", VA = "0x894E70", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000121")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000FD0")]
				[Address(RVA = "0x894EB8", Offset = "0x894EB8", VA = "0x894EB8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000FCB")]
			[Address(RVA = "0x894B34", Offset = "0x894B34", VA = "0x894B34")]
			[DebuggerHidden]
			public <Add>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6000FCC")]
			[Address(RVA = "0x894D2C", Offset = "0x894D2C", VA = "0x894D2C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000FCD")]
			[Address(RVA = "0x894D30", Offset = "0x894D30", VA = "0x894D30", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000FCF")]
			[Address(RVA = "0x894E78", Offset = "0x894E78", VA = "0x894E78", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002C8")]
		[CompilerGenerated]
		private sealed class <Remove>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PropertyCell <>4__this;

			[Token(Token = "0x17000122")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000FD4")]
				[Address(RVA = "0x895010", Offset = "0x895010", VA = "0x895010", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000123")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000FD6")]
				[Address(RVA = "0x895058", Offset = "0x895058", VA = "0x895058", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000FD1")]
			[Address(RVA = "0x894BC4", Offset = "0x894BC4", VA = "0x894BC4")]
			[DebuggerHidden]
			public <Remove>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6000FD2")]
			[Address(RVA = "0x894EC0", Offset = "0x894EC0", VA = "0x894EC0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000FD3")]
			[Address(RVA = "0x894EC4", Offset = "0x894EC4", VA = "0x894EC4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000FD5")]
			[Address(RVA = "0x895018", Offset = "0x895018", VA = "0x895018", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text PropertyText;

		[Token(Token = "0x4000E21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text ValueText;

		[Token(Token = "0x4000E22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Image isUpdatedFlag;

		[Token(Token = "0x4000E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public LayoutElement LayoutElement;

		[Token(Token = "0x6000FBE")]
		[Address(RVA = "0x8947FC", Offset = "0x8947FC", VA = "0x8947FC")]
		public void UpdateInfo(string value)
		{
		}

		[Token(Token = "0x6000FBF")]
		[Address(RVA = "0x894964", Offset = "0x894964", VA = "0x894964")]
		public void AddToList(string property, string value, bool animate = false)
		{
		}

		[Token(Token = "0x6000FC0")]
		[Address(RVA = "0x894A58", Offset = "0x894A58", VA = "0x894A58")]
		public void RemoveFromList()
		{
		}

		[Token(Token = "0x6000FC1")]
		[Address(RVA = "0x8948FC", Offset = "0x8948FC", VA = "0x8948FC")]
		[IteratorStateMachine(typeof(<UpdateUIPing>d__7))]
		private IEnumerator UpdateUIPing()
		{
			return null;
		}

		[Token(Token = "0x6000FC2")]
		[Address(RVA = "0x894ACC", Offset = "0x894ACC", VA = "0x894ACC")]
		[IteratorStateMachine(typeof(<Add>d__8))]
		private IEnumerator Add()
		{
			return null;
		}

		[Token(Token = "0x6000FC3")]
		[Address(RVA = "0x894B5C", Offset = "0x894B5C", VA = "0x894B5C")]
		[IteratorStateMachine(typeof(<Remove>d__9))]
		private IEnumerator Remove()
		{
			return null;
		}

		[Token(Token = "0x6000FC4")]
		[Address(RVA = "0x894BEC", Offset = "0x894BEC", VA = "0x894BEC")]
		public PropertyCell()
		{
		}
	}
	[Token(Token = "0x20002C9")]
	public class RegionListCell : MonoBehaviour
	{
		[Token(Token = "0x20002CA")]
		[CompilerGenerated]
		private sealed class <AnimateAddition>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RegionListCell <>4__this;

			[Token(Token = "0x17000124")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000FE0")]
				[Address(RVA = "0x8954C4", Offset = "0x8954C4", VA = "0x8954C4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000125")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000FE2")]
				[Address(RVA = "0x89550C", Offset = "0x89550C", VA = "0x89550C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000FDD")]
			[Address(RVA = "0x895264", Offset = "0x895264", VA = "0x895264")]
			[DebuggerHidden]
			public <AnimateAddition>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6000FDE")]
			[Address(RVA = "0x895324", Offset = "0x895324", VA = "0x895324", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000FDF")]
			[Address(RVA = "0x895328", Offset = "0x895328", VA = "0x895328", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000FE1")]
			[Address(RVA = "0x8954CC", Offset = "0x8954CC", VA = "0x8954CC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002CB")]
		[CompilerGenerated]
		private sealed class <AnimateRemove>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RegionListCell <>4__this;

			[Token(Token = "0x17000126")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000FE6")]
				[Address(RVA = "0x895664", Offset = "0x895664", VA = "0x895664", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000127")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000FE8")]
				[Address(RVA = "0x8956AC", Offset = "0x8956AC", VA = "0x8956AC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000FE3")]
			[Address(RVA = "0x8952F4", Offset = "0x8952F4", VA = "0x8952F4")]
			[DebuggerHidden]
			public <AnimateRemove>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6000FE4")]
			[Address(RVA = "0x895514", Offset = "0x895514", VA = "0x895514", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000FE5")]
			[Address(RVA = "0x895518", Offset = "0x895518", VA = "0x895518", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000FE7")]
			[Address(RVA = "0x89566C", Offset = "0x89566C", VA = "0x89566C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RegionListView ListManager;

		[Token(Token = "0x4000E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text CodeText;

		[Token(Token = "0x4000E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Text IpText;

		[Token(Token = "0x4000E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text PingText;

		[Token(Token = "0x4000E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public LayoutElement LayoutElement;

		[Token(Token = "0x4000E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int _index;

		[Token(Token = "0x4000E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Region info;

		[Token(Token = "0x6000FD7")]
		[Address(RVA = "0x895060", Offset = "0x895060", VA = "0x895060")]
		public void RefreshInfo(Region info)
		{
		}

		[Token(Token = "0x6000FD8")]
		[Address(RVA = "0x895144", Offset = "0x895144", VA = "0x895144")]
		public void AddToList(Region info, int index)
		{
		}

		[Token(Token = "0x6000FD9")]
		[Address(RVA = "0x8951B0", Offset = "0x8951B0", VA = "0x8951B0")]
		public void RemoveFromList()
		{
		}

		[Token(Token = "0x6000FDA")]
		[Address(RVA = "0x8951FC", Offset = "0x8951FC", VA = "0x8951FC")]
		[IteratorStateMachine(typeof(<AnimateAddition>d__10))]
		private IEnumerator AnimateAddition()
		{
			return null;
		}

		[Token(Token = "0x6000FDB")]
		[Address(RVA = "0x89528C", Offset = "0x89528C", VA = "0x89528C")]
		[IteratorStateMachine(typeof(<AnimateRemove>d__11))]
		private IEnumerator AnimateRemove()
		{
			return null;
		}

		[Token(Token = "0x6000FDC")]
		[Address(RVA = "0x89531C", Offset = "0x89531C", VA = "0x89531C")]
		public RegionListCell()
		{
		}
	}
	[Token(Token = "0x20002CC")]
	public class RegionListView : MonoBehaviour
	{
		[Token(Token = "0x4000E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RegionListCell CellPrototype;

		[Token(Token = "0x4000E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<string, RegionListCell> regionCellList;

		[Token(Token = "0x6000FE9")]
		[Address(RVA = "0x8956B4", Offset = "0x8956B4", VA = "0x8956B4")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6000FEA")]
		[Address(RVA = "0x895908", Offset = "0x895908", VA = "0x895908")]
		public void OnRegionListUpdate(List<Region> regionList)
		{
		}

		[Token(Token = "0x6000FEB")]
		[Address(RVA = "0x8956E8", Offset = "0x8956E8", VA = "0x8956E8")]
		public void ResetList()
		{
		}

		[Token(Token = "0x6000FEC")]
		[Address(RVA = "0x895C3C", Offset = "0x895C3C", VA = "0x895C3C")]
		public RegionListView()
		{
		}
	}
	[Token(Token = "0x20002CD")]
	public class RoomListCell : MonoBehaviour
	{
		[Token(Token = "0x20002CE")]
		[CompilerGenerated]
		private sealed class <AnimateAddition>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RoomListCell <>4__this;

			[Token(Token = "0x17000128")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000FF7")]
				[Address(RVA = "0x896264", Offset = "0x896264", VA = "0x896264", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000129")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000FF9")]
				[Address(RVA = "0x8962AC", Offset = "0x8962AC", VA = "0x8962AC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000FF4")]
			[Address(RVA = "0x896060", Offset = "0x896060", VA = "0x896060")]
			[DebuggerHidden]
			public <AnimateAddition>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6000FF5")]
			[Address(RVA = "0x896120", Offset = "0x896120", VA = "0x896120", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000FF6")]
			[Address(RVA = "0x896124", Offset = "0x896124", VA = "0x896124", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000FF8")]
			[Address(RVA = "0x89626C", Offset = "0x89626C", VA = "0x89626C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002CF")]
		[CompilerGenerated]
		private sealed class <AnimateRemove>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RoomListCell <>4__this;

			[Token(Token = "0x1700012A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000FFD")]
				[Address(RVA = "0x896404", Offset = "0x896404", VA = "0x896404", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700012B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000FFF")]
				[Address(RVA = "0x89644C", Offset = "0x89644C", VA = "0x89644C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000FFA")]
			[Address(RVA = "0x8960F0", Offset = "0x8960F0", VA = "0x8960F0")]
			[DebuggerHidden]
			public <AnimateRemove>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6000FFB")]
			[Address(RVA = "0x8962B4", Offset = "0x8962B4", VA = "0x8962B4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000FFC")]
			[Address(RVA = "0x8962B8", Offset = "0x8962B8", VA = "0x8962B8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000FFE")]
			[Address(RVA = "0x89640C", Offset = "0x89640C", VA = "0x89640C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000E3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RoomListView ListManager;

		[Token(Token = "0x4000E3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text RoomNameText;

		[Token(Token = "0x4000E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Text PlayerCountText;

		[Token(Token = "0x4000E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text OpenText;

		[Token(Token = "0x4000E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public CanvasGroup JoinButtonCanvasGroup;

		[Token(Token = "0x4000E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public LayoutElement LayoutElement;

		[Token(Token = "0x4000E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public RoomInfo info;

		[Token(Token = "0x6000FED")]
		[Address(RVA = "0x895CB8", Offset = "0x895CB8", VA = "0x895CB8")]
		public void RefreshInfo(RoomInfo info)
		{
		}

		[Token(Token = "0x6000FEE")]
		[Address(RVA = "0x895E98", Offset = "0x895E98", VA = "0x895E98")]
		public void OnJoinRoomButtonClick()
		{
		}

		[Token(Token = "0x6000FEF")]
		[Address(RVA = "0x895F14", Offset = "0x895F14", VA = "0x895F14")]
		public void AddToList(RoomInfo info, bool animate = false)
		{
		}

		[Token(Token = "0x6000FF0")]
		[Address(RVA = "0x895FAC", Offset = "0x895FAC", VA = "0x895FAC")]
		public void RemoveFromList()
		{
		}

		[Token(Token = "0x6000FF1")]
		[Address(RVA = "0x895FF8", Offset = "0x895FF8", VA = "0x895FF8")]
		[IteratorStateMachine(typeof(<AnimateAddition>d__11))]
		private IEnumerator AnimateAddition()
		{
			return null;
		}

		[Token(Token = "0x6000FF2")]
		[Address(RVA = "0x896088", Offset = "0x896088", VA = "0x896088")]
		[IteratorStateMachine(typeof(<AnimateRemove>d__12))]
		private IEnumerator AnimateRemove()
		{
			return null;
		}

		[Token(Token = "0x6000FF3")]
		[Address(RVA = "0x896118", Offset = "0x896118", VA = "0x896118")]
		public RoomListCell()
		{
		}
	}
	[Token(Token = "0x20002D0")]
	public class RoomListView : MonoBehaviourPunCallbacks
	{
		[Serializable]
		[Token(Token = "0x20002D1")]
		public class OnJoinRoomEvent : UnityEvent<string>
		{
			[Token(Token = "0x6001008")]
			[Address(RVA = "0x896F88", Offset = "0x896F88", VA = "0x896F88")]
			public OnJoinRoomEvent()
			{
			}
		}

		[Token(Token = "0x20002D2")]
		[CompilerGenerated]
		private sealed class <clearStatus>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RoomListView <>4__this;

			[Token(Token = "0x1700012C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600100C")]
				[Address(RVA = "0x8970A8", Offset = "0x8970A8", VA = "0x8970A8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700012D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600100E")]
				[Address(RVA = "0x8970F0", Offset = "0x8970F0", VA = "0x8970F0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001009")]
			[Address(RVA = "0x896CC4", Offset = "0x896CC4", VA = "0x896CC4")]
			[DebuggerHidden]
			public <clearStatus>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x600100A")]
			[Address(RVA = "0x896FD0", Offset = "0x896FD0", VA = "0x896FD0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600100B")]
			[Address(RVA = "0x896FD4", Offset = "0x896FD4", VA = "0x896FD4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600100D")]
			[Address(RVA = "0x8970B0", Offset = "0x8970B0", VA = "0x8970B0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OnJoinRoomEvent OnJoinRoom;

		[Token(Token = "0x4000E4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RoomListCell CellPrototype;

		[Token(Token = "0x4000E4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text UpdateStatusText;

		[Token(Token = "0x4000E4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Text ContentFeedback;

		[Token(Token = "0x4000E4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public InputField LobbyNameInputField;

		[Token(Token = "0x4000E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InputField SqlQueryInputField;

		[Token(Token = "0x4000E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool _firstUpdate;

		[Token(Token = "0x4000E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<string, RoomListCell> roomCellList;

		[Token(Token = "0x6001000")]
		[Address(RVA = "0x896454", Offset = "0x896454", VA = "0x896454", Slot = "27")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x6001001")]
		[Address(RVA = "0x895EBC", Offset = "0x895EBC", VA = "0x895EBC")]
		public void OnRoomCellJoinButtonClick(string roomName)
		{
		}

		[Token(Token = "0x6001002")]
		[Address(RVA = "0x896738", Offset = "0x896738", VA = "0x896738", Slot = "39")]
		public override void OnRoomListUpdate(List<RoomInfo> roomList)
		{
		}

		[Token(Token = "0x6001003")]
		[Address(RVA = "0x896C5C", Offset = "0x896C5C", VA = "0x896C5C")]
		[IteratorStateMachine(typeof(<clearStatus>d__12))]
		private IEnumerator clearStatus()
		{
			return null;
		}

		[Token(Token = "0x6001004")]
		[Address(RVA = "0x896CEC", Offset = "0x896CEC", VA = "0x896CEC")]
		public void OnJoinedLobbyCallBack()
		{
		}

		[Token(Token = "0x6001005")]
		[Address(RVA = "0x896D58", Offset = "0x896D58", VA = "0x896D58")]
		public void GetRoomList()
		{
		}

		[Token(Token = "0x6001006")]
		[Address(RVA = "0x896510", Offset = "0x896510", VA = "0x896510")]
		public void ResetList()
		{
		}

		[Token(Token = "0x6001007")]
		[Address(RVA = "0x896F04", Offset = "0x896F04", VA = "0x896F04")]
		public RoomListView()
		{
		}
	}
	[Token(Token = "0x20002D3")]
	public class UserIdField : MonoBehaviour
	{
		[Token(Token = "0x4000E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PunCockpit Manager;

		[Token(Token = "0x4000E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InputField PropertyValueInput;

		[Token(Token = "0x4000E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string _cache;

		[Token(Token = "0x4000E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool registered;

		[Token(Token = "0x600100F")]
		[Address(RVA = "0x8970F8", Offset = "0x8970F8", VA = "0x8970F8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001010")]
		[Address(RVA = "0x8971BC", Offset = "0x8971BC", VA = "0x8971BC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001011")]
		[Address(RVA = "0x897268", Offset = "0x897268", VA = "0x897268")]
		private void Update()
		{
		}

		[Token(Token = "0x6001012")]
		[Address(RVA = "0x8972BC", Offset = "0x8972BC", VA = "0x8972BC")]
		public void OnEndEdit(string value)
		{
		}

		[Token(Token = "0x6001013")]
		[Address(RVA = "0x89733C", Offset = "0x89733C", VA = "0x89733C")]
		public void SubmitForm(string value)
		{
		}

		[Token(Token = "0x6001014")]
		[Address(RVA = "0x89735C", Offset = "0x89735C", VA = "0x89735C")]
		public UserIdField()
		{
		}
	}
	[Token(Token = "0x20002D4")]
	public class AppVersionProperty : MonoBehaviour
	{
		[Token(Token = "0x4000E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text Text;

		[Token(Token = "0x4000E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string _cache;

		[Token(Token = "0x6001015")]
		[Address(RVA = "0x897364", Offset = "0x897364", VA = "0x897364")]
		private void Update()
		{
		}

		[Token(Token = "0x6001016")]
		[Address(RVA = "0x897414", Offset = "0x897414", VA = "0x897414")]
		public AppVersionProperty()
		{
		}
	}
	[Token(Token = "0x20002D5")]
	public class BestRegionInPrefsProperty : PropertyListenerBase
	{
		[Token(Token = "0x4000E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text Text;

		[Token(Token = "0x4000E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string _cache;

		[Token(Token = "0x6001017")]
		[Address(RVA = "0x89741C", Offset = "0x89741C", VA = "0x89741C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001018")]
		[Address(RVA = "0x897540", Offset = "0x897540", VA = "0x897540")]
		public BestRegionInPrefsProperty()
		{
		}
	}
	[Token(Token = "0x20002D6")]
	public class CloudRegionProperty : PropertyListenerBase
	{
		[Token(Token = "0x4000E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text Text;

		[Token(Token = "0x4000E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string _cache;

		[Token(Token = "0x6001019")]
		[Address(RVA = "0x8975B4", Offset = "0x8975B4", VA = "0x8975B4")]
		private void Update()
		{
		}

		[Token(Token = "0x600101A")]
		[Address(RVA = "0x8976B4", Offset = "0x8976B4", VA = "0x8976B4")]
		public CloudRegionProperty()
		{
		}
	}
	[Token(Token = "0x20002D7")]
	public class CountOfPlayersInRoomProperty : PropertyListenerBase
	{
		[Token(Token = "0x4000E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text Text;

		[Token(Token = "0x4000E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int _cache;

		[Token(Token = "0x600101B")]
		[Address(RVA = "0x8976B8", Offset = "0x8976B8", VA = "0x8976B8")]
		private void Update()
		{
		}

		[Token(Token = "0x600101C")]
		[Address(RVA = "0x897800", Offset = "0x897800", VA = "0x897800")]
		public CountOfPlayersInRoomProperty()
		{
		}
	}
	[Token(Token = "0x20002D8")]
	public class CountOfPlayersOnMasterProperty : PropertyListenerBase
	{
		[Token(Token = "0x4000E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text Text;

		[Token(Token = "0x4000E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int _cache;

		[Token(Token = "0x600101D")]
		[Address(RVA = "0x89780C", Offset = "0x89780C", VA = "0x89780C")]
		private void Update()
		{
		}

		[Token(Token = "0x600101E")]
		[Address(RVA = "0x897954", Offset = "0x897954", VA = "0x897954")]
		public CountOfPlayersOnMasterProperty()
		{
		}
	}
	[Token(Token = "0x20002D9")]
	public class CountOfPlayersProperty : PropertyListenerBase
	{
		[Token(Token = "0x4000E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text Text;

		[Token(Token = "0x4000E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int _cache;

		[Token(Token = "0x600101F")]
		[Address(RVA = "0x897960", Offset = "0x897960", VA = "0x897960")]
		private void Update()
		{
		}

		[Token(Token = "0x6001020")]
		[Address(RVA = "0x897AA8", Offset = "0x897AA8", VA = "0x897AA8")]
		public CountOfPlayersProperty()
		{
		}
	}
	[Token(Token = "0x20002DA")]
	public class CountOfRoomsProperty : PropertyListenerBase
	{
		[Token(Token = "0x4000E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text Text;

		[Token(Token = "0x4000E65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int _cache;

		[Token(Token = "0x6001021")]
		[Address(RVA = "0x897AB4", Offset = "0x897AB4", VA = "0x897AB4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001022")]
		[Address(RVA = "0x897BFC", Offset = "0x897BFC", VA = "0x897BFC")]
		public CountOfRoomsProperty()
		{
		}
	}
	[Token(Token = "0x20002DB")]
	public class CurrentRoomAutoCleanupProperty : PropertyListenerBase
	{
		[Token(Token = "0x4000E66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text Text;

		[Token(Token = "0x4000E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int _cache;

		[Token(Token = "0x6001023")]
		[Address(RVA = "0x897C08", Offset = "0x897C08", VA = "0x897C08")]
		private void Update()
		{
		}

		[Token(Token = "0x6001024")]
		[Address(RVA = "0x897DEC", Offset = "0x897DEC", VA = "0x897DEC")]
		public CurrentRoomAutoCleanupProperty()
		{
		}
	}
	[Token(Token = "0x20002DC")]
	public class CurrentRoomEmptyRoomTtlProperty : PropertyListenerBase
	{
		[Token(Token = "0x4000E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text Text;

		[Token(Token = "0x4000E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int _cache;

		[Token(Token = "0x6001025")]
		[Address(RVA = "0x897DF8", Offset = "0x897DF8", VA = "0x897DF8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001026")]
		[Address(RVA = "0x897F48", Offset = "0x897F48", VA = "0x897F48")]
		public CurrentRoomEmptyRoomTtlProperty()
		{
		}
	}
	[Token(Token = "0x20002DD")]
	public class CurrentRoomExpectedUsersProperty : PropertyListenerBase
	{
		[Token(Token = "0x4000E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text Text;

		[Token(Token = "0x4000E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string[] _cache;

		[Token(Token = "0x6001027")]
		[Address(RVA = "0x897F54", Offset = "0x897F54", VA = "0x897F54")]
		private void Update()
		{
		}

		[Token(Token = "0x6001028")]
		[Address(RVA = "0x89813C", Offset = "0x89813C", VA = "0x89813C")]
		public CurrentRoomExpectedUsersProperty()
		{
		}
	}
	[Token(Token = "0x20002DE")]
	public class CurrentRoomIsOfflineProperty : PropertyListenerBase
	{
		[Token(Token = "0x4000E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text Text;

		[Token(Token = "0x4000E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int _cache;

		[Token(Token = "0x6001029")]
		[Address(RVA = "0x898140", Offset = "0x898140", VA = "0x898140")]
		private void Update()
		{
		}

		[Token(Token = "0x600102A")]
		[Address(RVA = "0x898300", Offset = "0x898300", VA = "0x898300")]
		public CurrentRoomIsOfflineProperty()
		{
		}
	}
	[Token(Token = "0x20002DF")]
	public class CurrentRoomIsOpenProperty : PropertyListenerBase
	{
		[Token(Token = "0x4000E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text Text;

		[Token(Token = "0x4000E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int _cache;

		[Token(Token = "0x600102B")]
		[Address(RVA = "0x89830C", Offset = "0x89830C", VA = "0x89830C")]
		private void Update()
		{
		}

		[Token(Token = "0x600102C")]
		[Address(RVA = "0x8984CC", Offset = "0x8984CC", VA = "0x8984CC")]
		public CurrentRoomIsOpenProperty()
		{
		}
	}
	[Token(Token = "0x20002E0")]
	public class CurrentRoomIsVisibleProperty : PropertyListenerBase
	{
		[Token(Token = "0x4000E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text Text;

		[Token(Token = "0x4000E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int _cache;

		[Token(Token = "0x600102D")]
		[Address(RVA = "0x8984D8", Offset = "0x8984D8", VA = "0x8984D8")]
		private void Update()
		{
		}

		[Token(Token = "0x600102E")]
		[Address(RVA = "0x898698", Offset = "0x898698", VA = "0x898698")]
		public CurrentRoomIsVisibleProperty()
		{
		}
	}
	[Token(Token = "0x20002E1")]
	public class CurrentRoomMasterClientIdProperty : PropertyListenerBase
	{
		[Token(Token = "0x4000E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text Text;

		[Token(Token = "0x4000E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int _cache;

		[Token(Token = "0x600102F")]
		[Address(RVA = "0x8986A4", Offset = "0x8986A4", VA = "0x8986A4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001030")]
		[Address(RVA = "0x8987F4", Offset = "0x8987F4", VA = "0x8987F4")]
		public CurrentRoomMasterClientIdProperty()
		{
		}
	}
	[Token(Token = "0x20002E2")]
	public class CurrentRoomMaxPlayersProperty : PropertyListenerBase
	{
		[Token(Token = "0x4000E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text Text;

		[Token(Token = "0x4000E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int _cache;

		[Token(Token = "0x6001031")]
		[Address(RVA = "0x898800", Offset = "0x898800", VA = "0x898800")]
		private void Update()
		{
		}

		[Token(Token = "0x6001032")]
		[Address(RVA = "0x898950", Offset = "0x898950", VA = "0x898950")]
		public CurrentRoomMaxPlayersProperty()
		{
		}
	}
	[Token(Token = "0x20002E3")]
	public class CurrentRoomNameProperty : PropertyListenerBase
	{
		[Token(Token = "0x4000E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text Text;

		[Token(Token = "0x4000E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string _cache;

		[Token(Token = "0x6001033")]
		[Address(RVA = "0x89895C", Offset = "0x89895C", VA = "0x89895C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001034")]
		[Address(RVA = "0x898AA8", Offset = "0x898AA8", VA = "0x898AA8")]
		public CurrentRoomNameProperty()
		{
		}
	}
	[Token(Token = "0x20002E4")]
	public class CurrentRoomPlayerCountProperty : PropertyListenerBase
	{
		[Token(Token = "0x4000E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text Text;

		[Token(Token = "0x4000E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int _cache;

		[Token(Token = "0x6001035")]
		[Address(RVA = "0x898AAC", Offset = "0x898AAC", VA = "0x898AAC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001036")]
		[Address(RVA = "0x898C08", Offset = "0x898C08", VA = "0x898C08")]
		public CurrentRoomPlayerCountProperty()
		{
		}
	}
	[Token(Token = "0x20002E5")]
	public class CurrentRoomPlayerTtlProperty : PropertyListenerBase
	{
		[Token(Token = "0x4000E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text Text;

		[Token(Token = "0x4000E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int _cache;

		[Token(Token = "0x6001037")]
		[Address(RVA = "0x898C14", Offset = "0x898C14", VA = "0x898C14")]
		private void Update()
		{
		}

		[Token(Token = "0x6001038")]
		[Address(RVA = "0x898D64", Offset = "0x898D64", VA = "0x898D64")]
		public CurrentRoomPlayerTtlProperty()
		{
		}
	}
	[Token(Token = "0x20002E6")]
	public class CurrentRoomPropertiesListedInLobbyProperty : PropertyListenerBase
	{
		[Token(Token = "0x4000E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text Text;

		[Token(Token = "0x4000E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string[] _cache;

		[Token(Token = "0x6001039")]
		[Address(RVA = "0x898D70", Offset = "0x898D70", VA = "0x898D70")]
		private void Update()
		{
		}

		[Token(Token = "0x600103A")]
		[Address(RVA = "0x898F2C", Offset = "0x898F2C", VA = "0x898F2C")]
		public CurrentRoomPropertiesListedInLobbyProperty()
		{
		}
	}
	[Token(Token = "0x20002E7")]
	public class GameVersionProperty : MonoBehaviour
	{
		[Token(Token = "0x4000E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text Text;

		[Token(Token = "0x4000E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string _cache;

		[Token(Token = "0x600103B")]
		[Address(RVA = "0x898F30", Offset = "0x898F30", VA = "0x898F30")]
		private void Update()
		{
		}

		[Token(Token = "0x600103C")]
		[Address(RVA = "0x89903C", Offset = "0x89903C", VA = "0x89903C")]
		public GameVersionProperty()
		{
		}
	}
	[Token(Token = "0x20002E8")]
	public class IsConnectedAndReadyProperty : PropertyListenerBase
	{
		[Token(Token = "0x4000E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text Text;

		[Token(Token = "0x4000E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int _cache;

		[Token(Token = "0x600103D")]
		[Address(RVA = "0x899044", Offset = "0x899044", VA = "0x899044")]
		private void Update()
		{
		}

		[Token(Token = "0x600103E")]
		[Address(RVA = "0x899180", Offset = "0x899180", VA = "0x899180")]
		public IsConnectedAndReadyProperty()
		{
		}
	}
	[Token(Token = "0x20002E9")]
	public class IsConnectedProperty : PropertyListenerBase
	{
		[Token(Token = "0x4000E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text Text;

		[Token(Token = "0x4000E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int _cache;

		[Token(Token = "0x600103F")]
		[Address(RVA = "0x89918C", Offset = "0x89918C", VA = "0x89918C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001040")]
		[Address(RVA = "0x8992C8", Offset = "0x8992C8", VA = "0x8992C8")]
		public IsConnectedProperty()
		{
		}
	}
	[Token(Token = "0x20002EA")]
	public class OfflineModeProperty : PropertyListenerBase
	{
		[Token(Token = "0x4000E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text Text;

		[Token(Token = "0x4000E85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int _cache;

		[Token(Token = "0x6001041")]
		[Address(RVA = "0x8992D4", Offset = "0x8992D4", VA = "0x8992D4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001042")]
		[Address(RVA = "0x8994D0", Offset = "0x8994D0", VA = "0x8994D0")]
		public OfflineModeProperty()
		{
		}
	}
	[Token(Token = "0x20002EB")]
	public class PingProperty : PropertyListenerBase
	{
		[Token(Token = "0x4000E86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text Text;

		[Token(Token = "0x4000E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int _cache;

		[Token(Token = "0x6001043")]
		[Address(RVA = "0x8994DC", Offset = "0x8994DC", VA = "0x8994DC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001044")]
		[Address(RVA = "0x89964C", Offset = "0x89964C", VA = "0x89964C")]
		public PingProperty()
		{
		}
	}
	[Token(Token = "0x20002EC")]
	public class PropertyListenerBase : MonoBehaviour
	{
		[Token(Token = "0x20002ED")]
		[CompilerGenerated]
		private sealed class <FadeOut>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Graphic image;

			[Token(Token = "0x4000E8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public PropertyListenerBase <>4__this;

			[Token(Token = "0x4000E8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <elapsedTime>5__2;

			[Token(Token = "0x4000E90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Color <c>5__3;

			[Token(Token = "0x1700012E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600104B")]
				[Address(RVA = "0x8997EC", Offset = "0x8997EC", VA = "0x8997EC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700012F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600104D")]
				[Address(RVA = "0x899834", Offset = "0x899834", VA = "0x899834", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001048")]
			[Address(RVA = "0x8996CC", Offset = "0x8996CC", VA = "0x8996CC")]
			[DebuggerHidden]
			public <FadeOut>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6001049")]
			[Address(RVA = "0x8996F4", Offset = "0x8996F4", VA = "0x8996F4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600104A")]
			[Address(RVA = "0x8996F8", Offset = "0x8996F8", VA = "0x8996F8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600104C")]
			[Address(RVA = "0x8997F4", Offset = "0x8997F4", VA = "0x8997F4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Graphic UpdateIndicator;

		[Token(Token = "0x4000E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private YieldInstruction fadeInstruction;

		[Token(Token = "0x4000E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float Duration;

		[Token(Token = "0x6001045")]
		[Address(RVA = "0x89751C", Offset = "0x89751C", VA = "0x89751C")]
		public void OnValueChanged()
		{
		}

		[Token(Token = "0x6001046")]
		[Address(RVA = "0x899658", Offset = "0x899658", VA = "0x899658")]
		[IteratorStateMachine(typeof(<FadeOut>d__4))]
		private IEnumerator FadeOut(Graphic image)
		{
			return null;
		}

		[Token(Token = "0x6001047")]
		[Address(RVA = "0x897544", Offset = "0x897544", VA = "0x897544")]
		public PropertyListenerBase()
		{
		}
	}
	[Token(Token = "0x20002EE")]
	public class ServerAddressProperty : MonoBehaviour
	{
		[Token(Token = "0x4000E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text Text;

		[Token(Token = "0x4000E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string _cache;

		[Token(Token = "0x600104E")]
		[Address(RVA = "0x89983C", Offset = "0x89983C", VA = "0x89983C")]
		private void Update()
		{
		}

		[Token(Token = "0x600104F")]
		[Address(RVA = "0x899950", Offset = "0x899950", VA = "0x899950")]
		public ServerAddressProperty()
		{
		}
	}
	[Token(Token = "0x20002EF")]
	public class ServerProperty : PropertyListenerBase
	{
		[Token(Token = "0x4000E93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text Text;

		[Token(Token = "0x4000E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ServerConnection _cache;

		[Token(Token = "0x6001050")]
		[Address(RVA = "0x899958", Offset = "0x899958", VA = "0x899958")]
		private void Update()
		{
		}

		[Token(Token = "0x6001051")]
		[Address(RVA = "0x899A58", Offset = "0x899A58", VA = "0x899A58")]
		public ServerProperty()
		{
		}
	}
	[Token(Token = "0x20002F0")]
	public class PunCockpitEmbed : MonoBehaviourPunCallbacks
	{
		[Token(Token = "0x20002F1")]
		[CompilerGenerated]
		private sealed class <Start>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PunCockpitEmbed <>4__this;

			[Token(Token = "0x17000130")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001059")]
				[Address(RVA = "0x899F18", Offset = "0x899F18", VA = "0x899F18", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000131")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600105B")]
				[Address(RVA = "0x899F60", Offset = "0x899F60", VA = "0x899F60", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001056")]
			[Address(RVA = "0x899B4C", Offset = "0x899B4C", VA = "0x899B4C")]
			[DebuggerHidden]
			public <Start>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6001057")]
			[Address(RVA = "0x899CF8", Offset = "0x899CF8", VA = "0x899CF8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001058")]
			[Address(RVA = "0x899CFC", Offset = "0x899CFC", VA = "0x899CFC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600105A")]
			[Address(RVA = "0x899F20", Offset = "0x899F20", VA = "0x899F20", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string PunCockpit_scene;

		[Token(Token = "0x4000E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool EmbeddCockpit;

		[Token(Token = "0x4000E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string CockpitGameTitle;

		[Token(Token = "0x4000E98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject LoadingIndicator;

		[Token(Token = "0x4000E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ConnectAndJoinRandom AutoConnect;

		[Token(Token = "0x6001052")]
		[Address(RVA = "0x899A5C", Offset = "0x899A5C", VA = "0x899A5C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001053")]
		[Address(RVA = "0x899AE4", Offset = "0x899AE4", VA = "0x899AE4")]
		[IteratorStateMachine(typeof(<Start>d__6))]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6001054")]
		[Address(RVA = "0x899B74", Offset = "0x899B74", VA = "0x899B74", Slot = "40")]
		public override void OnJoinedRoom()
		{
		}

		[Token(Token = "0x6001055")]
		[Address(RVA = "0x899C7C", Offset = "0x899C7C", VA = "0x899C7C")]
		public PunCockpitEmbed()
		{
		}
	}
}
namespace Photon.Pun.Demo.Cockpit.Forms
{
	[Token(Token = "0x20002F2")]
	public class ConnectToRegionUIForm : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20002F3")]
		public class OnSubmitEvent : UnityEvent<string>
		{
			[Token(Token = "0x6001061")]
			[Address(RVA = "0x89A0B0", Offset = "0x89A0B0", VA = "0x89A0B0")]
			public OnSubmitEvent()
			{
			}
		}

		[Token(Token = "0x4000E9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InputField RegionInput;

		[Token(Token = "0x4000E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Dropdown RegionListInput;

		[Token(Token = "0x4000E9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public OnSubmitEvent OnSubmit;

		[Token(Token = "0x600105C")]
		[Address(RVA = "0x899F68", Offset = "0x899F68", VA = "0x899F68")]
		public void Start()
		{
		}

		[Token(Token = "0x600105D")]
		[Address(RVA = "0x899F6C", Offset = "0x899F6C", VA = "0x899F6C")]
		public void EndEditOnEnter()
		{
		}

		[Token(Token = "0x600105E")]
		[Address(RVA = "0x89A004", Offset = "0x89A004", VA = "0x89A004")]
		public void SetRegionFromDropDown(int index)
		{
		}

		[Token(Token = "0x600105F")]
		[Address(RVA = "0x899FA8", Offset = "0x899FA8", VA = "0x899FA8")]
		public void SubmitForm()
		{
		}

		[Token(Token = "0x6001060")]
		[Address(RVA = "0x89A0A8", Offset = "0x89A0A8", VA = "0x89A0A8")]
		public ConnectToRegionUIForm()
		{
		}
	}
	[Token(Token = "0x20002F4")]
	public class CreateRoomUiForm : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20002F5")]
		public class OnSubmitEvent : UnityEvent<string, string, LobbyType, string[]>
		{
			[Token(Token = "0x6001066")]
			[Address(RVA = "0x89A350", Offset = "0x89A350", VA = "0x89A350")]
			public OnSubmitEvent()
			{
			}
		}

		[Token(Token = "0x4000EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InputField RoomNameInput;

		[Token(Token = "0x4000EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InputField LobbyNameInput;

		[Token(Token = "0x4000EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public InputField ExpectedUsersInput;

		[Token(Token = "0x4000EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Dropdown LobbyTypeInput;

		[Token(Token = "0x4000EA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public OnSubmitEvent OnSubmit;

		[Token(Token = "0x6001062")]
		[Address(RVA = "0x89A0F8", Offset = "0x89A0F8", VA = "0x89A0F8")]
		public void Start()
		{
		}

		[Token(Token = "0x6001063")]
		[Address(RVA = "0x89A0FC", Offset = "0x89A0FC", VA = "0x89A0FC")]
		public void EndEditOnEnter()
		{
		}

		[Token(Token = "0x6001064")]
		[Address(RVA = "0x89A138", Offset = "0x89A138", VA = "0x89A138")]
		public void SubmitForm()
		{
		}

		[Token(Token = "0x6001065")]
		[Address(RVA = "0x89A348", Offset = "0x89A348", VA = "0x89A348")]
		public CreateRoomUiForm()
		{
		}
	}
	[Token(Token = "0x20002F7")]
	public class LoadLevelUIForm : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20002F8")]
		public class OnSubmitEvent : UnityEvent<string>
		{
			[Token(Token = "0x600106E")]
			[Address(RVA = "0x89A4C0", Offset = "0x89A4C0", VA = "0x89A4C0")]
			public OnSubmitEvent()
			{
			}
		}

		[Token(Token = "0x4000EA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InputField PropertyValueInput;

		[Token(Token = "0x4000EA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OnSubmitEvent OnSubmit;

		[Token(Token = "0x600106A")]
		[Address(RVA = "0x89A41C", Offset = "0x89A41C", VA = "0x89A41C")]
		public void Start()
		{
		}

		[Token(Token = "0x600106B")]
		[Address(RVA = "0x89A420", Offset = "0x89A420", VA = "0x89A420")]
		public void EndEditOnEnter()
		{
		}

		[Token(Token = "0x600106C")]
		[Address(RVA = "0x89A45C", Offset = "0x89A45C", VA = "0x89A45C")]
		public void SubmitForm()
		{
		}

		[Token(Token = "0x600106D")]
		[Address(RVA = "0x89A4B8", Offset = "0x89A4B8", VA = "0x89A4B8")]
		public LoadLevelUIForm()
		{
		}
	}
	[Token(Token = "0x20002F9")]
	public class SetRoomCustomPropertyUIForm : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20002FA")]
		public class OnSubmitEvent : UnityEvent<string>
		{
			[Token(Token = "0x6001073")]
			[Address(RVA = "0x89A5AC", Offset = "0x89A5AC", VA = "0x89A5AC")]
			public OnSubmitEvent()
			{
			}
		}

		[Token(Token = "0x4000EA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InputField PropertyValueInput;

		[Token(Token = "0x4000EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OnSubmitEvent OnSubmit;

		[Token(Token = "0x600106F")]
		[Address(RVA = "0x89A508", Offset = "0x89A508", VA = "0x89A508")]
		public void Start()
		{
		}

		[Token(Token = "0x6001070")]
		[Address(RVA = "0x89A50C", Offset = "0x89A50C", VA = "0x89A50C")]
		public void EndEditOnEnter()
		{
		}

		[Token(Token = "0x6001071")]
		[Address(RVA = "0x89A548", Offset = "0x89A548", VA = "0x89A548")]
		public void SubmitForm()
		{
		}

		[Token(Token = "0x6001072")]
		[Address(RVA = "0x89A5A4", Offset = "0x89A5A4", VA = "0x89A5A4")]
		public SetRoomCustomPropertyUIForm()
		{
		}
	}
	[Token(Token = "0x20002FB")]
	public class UserIdUiForm : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20002FC")]
		public class OnSubmitEvent : UnityEvent<string>
		{
			[Token(Token = "0x6001078")]
			[Address(RVA = "0x89A73C", Offset = "0x89A73C", VA = "0x89A73C")]
			public OnSubmitEvent()
			{
			}
		}

		[Token(Token = "0x4000EAB")]
		public const string UserIdPlayerPref = "PunUserId";

		[Token(Token = "0x4000EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InputField idInput;

		[Token(Token = "0x4000EAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OnSubmitEvent OnSubmit;

		[Token(Token = "0x6001074")]
		[Address(RVA = "0x89A5F4", Offset = "0x89A5F4", VA = "0x89A5F4")]
		public void Start()
		{
		}

		[Token(Token = "0x6001075")]
		[Address(RVA = "0x89A670", Offset = "0x89A670", VA = "0x89A670")]
		public void EndEditOnEnter()
		{
		}

		[Token(Token = "0x6001076")]
		[Address(RVA = "0x89A6AC", Offset = "0x89A6AC", VA = "0x89A6AC")]
		public void SubmitForm()
		{
		}

		[Token(Token = "0x6001077")]
		[Address(RVA = "0x89A734", Offset = "0x89A734", VA = "0x89A734")]
		public UserIdUiForm()
		{
		}
	}
}
namespace Photon.Pun.Demo.PunBasics
{
	[Token(Token = "0x20002FD")]
	public class CameraWork : MonoBehaviour
	{
		[Token(Token = "0x4000EAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("The distance in the local x-z plane to the target")]
		[SerializeField]
		private float distance;

		[Token(Token = "0x4000EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Tooltip("The height we want the camera to be above the target")]
		[SerializeField]
		private float height;

		[Token(Token = "0x4000EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("The Smooth time lag for the height of the camera.")]
		[SerializeField]
		private float heightSmoothLag;

		[Token(Token = "0x4000EB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Tooltip("Allow the camera to be offseted vertically from the target, for example giving more view of the sceneray and less ground.")]
		[SerializeField]
		private Vector3 centerOffset;

		[Token(Token = "0x4000EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Tooltip("Set this as false if a component of a prefab being instanciated by Photon Network, and manually call OnStartFollowing() when and if needed.")]
		[SerializeField]
		private bool followOnStart;

		[Token(Token = "0x4000EB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform cameraTransform;

		[Token(Token = "0x4000EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool isFollowing;

		[Token(Token = "0x4000EB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float heightVelocity;

		[Token(Token = "0x4000EB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float targetHeight;

		[Token(Token = "0x6001079")]
		[Address(RVA = "0x89A784", Offset = "0x89A784", VA = "0x89A784")]
		private void Start()
		{
		}

		[Token(Token = "0x600107A")]
		[Address(RVA = "0x89A7EC", Offset = "0x89A7EC", VA = "0x89A7EC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600107B")]
		[Address(RVA = "0x89A794", Offset = "0x89A794", VA = "0x89A794")]
		public void OnStartFollowing()
		{
		}

		[Token(Token = "0x600107C")]
		[Address(RVA = "0x89A87C", Offset = "0x89A87C", VA = "0x89A87C")]
		private void Apply()
		{
		}

		[Token(Token = "0x600107D")]
		[Address(RVA = "0x89AAB8", Offset = "0x89AAB8", VA = "0x89AAB8")]
		private void Cut()
		{
		}

		[Token(Token = "0x600107E")]
		[Address(RVA = "0x89AAE8", Offset = "0x89AAE8", VA = "0x89AAE8")]
		private void SetUpRotation(Vector3 centerPos)
		{
		}

		[Token(Token = "0x600107F")]
		[Address(RVA = "0x89AC68", Offset = "0x89AC68", VA = "0x89AC68")]
		public CameraWork()
		{
		}
	}
	[Token(Token = "0x20002FE")]
	public class GameManager : MonoBehaviourPunCallbacks
	{
		[Token(Token = "0x4000EB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static GameManager Instance;

		[Token(Token = "0x4000EB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject instance;

		[Token(Token = "0x4000EB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[Tooltip("The prefab to use for representing the player")]
		private GameObject playerPrefab;

		[Token(Token = "0x6001080")]
		[Address(RVA = "0x89ACEC", Offset = "0x89ACEC", VA = "0x89ACEC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001081")]
		[Address(RVA = "0x89B034", Offset = "0x89B034", VA = "0x89B034")]
		private void Update()
		{
		}

		[Token(Token = "0x6001082")]
		[Address(RVA = "0x89B064", Offset = "0x89B064", VA = "0x89B064", Slot = "41")]
		public override void OnPlayerEnteredRoom(Player other)
		{
		}

		[Token(Token = "0x6001083")]
		[Address(RVA = "0x89B3F0", Offset = "0x89B3F0", VA = "0x89B3F0", Slot = "42")]
		public override void OnPlayerLeftRoom(Player other)
		{
		}

		[Token(Token = "0x6001084")]
		[Address(RVA = "0x89B598", Offset = "0x89B598", VA = "0x89B598", Slot = "30")]
		public override void OnLeftRoom()
		{
		}

		[Token(Token = "0x6001085")]
		[Address(RVA = "0x89B600", Offset = "0x89B600", VA = "0x89B600")]
		public void LeaveRoom()
		{
		}

		[Token(Token = "0x6001086")]
		[Address(RVA = "0x89B05C", Offset = "0x89B05C", VA = "0x89B05C")]
		public void QuitApplication()
		{
		}

		[Token(Token = "0x6001087")]
		[Address(RVA = "0x89B20C", Offset = "0x89B20C", VA = "0x89B20C")]
		private void LoadArena()
		{
		}

		[Token(Token = "0x6001088")]
		[Address(RVA = "0x89B654", Offset = "0x89B654", VA = "0x89B654")]
		public GameManager()
		{
		}
	}
	[Token(Token = "0x20002FF")]
	public class Launcher : MonoBehaviourPunCallbacks
	{
		[Token(Token = "0x4000EBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[Tooltip("The Ui Panel to let the user enter name, connect and play")]
		private GameObject controlPanel;

		[Token(Token = "0x4000EBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Tooltip("The Ui Text to inform the user about the connection progress")]
		[SerializeField]
		private Text feedbackText;

		[Token(Token = "0x4000EBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Tooltip("The maximum number of players per room")]
		[SerializeField]
		private byte maxPlayersPerRoom;

		[Token(Token = "0x4000EBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Tooltip("The UI Loader Anime")]
		[SerializeField]
		private LoaderAnime loaderAnime;

		[Token(Token = "0x4000EBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool isConnecting;

		[Token(Token = "0x4000EBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string gameVersion;

		[Token(Token = "0x6001089")]
		[Address(RVA = "0x89B65C", Offset = "0x89B65C", VA = "0x89B65C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600108A")]
		[Address(RVA = "0x89B738", Offset = "0x89B738", VA = "0x89B738")]
		public void Connect()
		{
		}

		[Token(Token = "0x600108B")]
		[Address(RVA = "0x89B8E8", Offset = "0x89B8E8", VA = "0x89B8E8")]
		private void LogFeedback(string message)
		{
		}

		[Token(Token = "0x600108C")]
		[Address(RVA = "0x89B9C0", Offset = "0x89B9C0", VA = "0x89B9C0", Slot = "44")]
		public override void OnConnectedToMaster()
		{
		}

		[Token(Token = "0x600108D")]
		[Address(RVA = "0x89BA98", Offset = "0x89BA98", VA = "0x89BA98", Slot = "43")]
		public override void OnJoinRandomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x600108E")]
		[Address(RVA = "0x89BBA0", Offset = "0x89BBA0", VA = "0x89BBA0", Slot = "37")]
		public override void OnDisconnected(DisconnectCause cause)
		{
		}

		[Token(Token = "0x600108F")]
		[Address(RVA = "0x89BCD8", Offset = "0x89BCD8", VA = "0x89BCD8", Slot = "40")]
		public override void OnJoinedRoom()
		{
		}

		[Token(Token = "0x6001090")]
		[Address(RVA = "0x89BE74", Offset = "0x89BE74", VA = "0x89BE74")]
		public Launcher()
		{
		}
	}
	[Token(Token = "0x2000300")]
	public class LoaderAnime : MonoBehaviour
	{
		[Token(Token = "0x4000EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("Angular Speed in degrees per seconds")]
		public float speed;

		[Token(Token = "0x4000EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Tooltip("Radius os the loader")]
		public float radius;

		[Token(Token = "0x4000EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject particles;

		[Token(Token = "0x4000EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 _offset;

		[Token(Token = "0x4000EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform _transform;

		[Token(Token = "0x4000EC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform _particleTransform;

		[Token(Token = "0x4000EC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool _isAnimating;

		[Token(Token = "0x6001091")]
		[Address(RVA = "0x89BECC", Offset = "0x89BECC", VA = "0x89BECC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001092")]
		[Address(RVA = "0x89BF48", Offset = "0x89BF48", VA = "0x89BF48")]
		private void Update()
		{
		}

		[Token(Token = "0x6001093")]
		[Address(RVA = "0x89B8B0", Offset = "0x89B8B0", VA = "0x89B8B0")]
		public void StartLoaderAnimation()
		{
		}

		[Token(Token = "0x6001094")]
		[Address(RVA = "0x89BCB8", Offset = "0x89BCB8", VA = "0x89BCB8")]
		public void StopLoaderAnimation()
		{
		}

		[Token(Token = "0x6001095")]
		[Address(RVA = "0x89C0EC", Offset = "0x89C0EC", VA = "0x89C0EC")]
		public LoaderAnime()
		{
		}
	}
	[Token(Token = "0x2000301")]
	public class PlayerAnimatorManager : MonoBehaviourPun
	{
		[Token(Token = "0x4000EC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float directionDampTime;

		[Token(Token = "0x4000EC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Animator animator;

		[Token(Token = "0x6001096")]
		[Address(RVA = "0x89C100", Offset = "0x89C100", VA = "0x89C100")]
		private void Start()
		{
		}

		[Token(Token = "0x6001097")]
		[Address(RVA = "0x89C150", Offset = "0x89C150", VA = "0x89C150")]
		private void Update()
		{
		}

		[Token(Token = "0x6001098")]
		[Address(RVA = "0x89C384", Offset = "0x89C384", VA = "0x89C384")]
		public PlayerAnimatorManager()
		{
		}
	}
	[Token(Token = "0x2000302")]
	public class PlayerManager : MonoBehaviourPunCallbacks, IPunObservable
	{
		[Token(Token = "0x4000EC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("The current Health of our player")]
		public float Health;

		[Token(Token = "0x4000ECA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[Tooltip("The local player instance. Use this to know if the local player is represented in the Scene")]
		public static GameObject LocalPlayerInstance;

		[Token(Token = "0x4000ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[Tooltip("The Player's UI GameObject Prefab")]
		private GameObject playerUiPrefab;

		[Token(Token = "0x4000ECC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[Tooltip("The Beams GameObject to control")]
		private GameObject beams;

		[Token(Token = "0x4000ECD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool IsFiring;

		[Token(Token = "0x6001099")]
		[Address(RVA = "0x89C394", Offset = "0x89C394", VA = "0x89C394")]
		public void Awake()
		{
		}

		[Token(Token = "0x600109A")]
		[Address(RVA = "0x89C4D4", Offset = "0x89C4D4", VA = "0x89C4D4")]
		public void Start()
		{
		}

		[Token(Token = "0x600109B")]
		[Address(RVA = "0x89C720", Offset = "0x89C720", VA = "0x89C720", Slot = "28")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x600109C")]
		[Address(RVA = "0x89C7D0", Offset = "0x89C7D0", VA = "0x89C7D0")]
		public void Update()
		{
		}

		[Token(Token = "0x600109D")]
		[Address(RVA = "0x89C988", Offset = "0x89C988", VA = "0x89C988")]
		public void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x600109E")]
		[Address(RVA = "0x89CA24", Offset = "0x89CA24", VA = "0x89CA24")]
		public void OnTriggerStay(Collider other)
		{
		}

		[Token(Token = "0x600109F")]
		[Address(RVA = "0x89CAD4", Offset = "0x89CAD4", VA = "0x89CAD4")]
		private void CalledOnLevelWasLoaded(int level)
		{
		}

		[Token(Token = "0x60010A0")]
		[Address(RVA = "0x89CC2C", Offset = "0x89CC2C", VA = "0x89CC2C")]
		private void OnSceneLoaded(Scene scene, LoadSceneMode loadingMode)
		{
		}

		[Token(Token = "0x60010A1")]
		[Address(RVA = "0x89C8D0", Offset = "0x89C8D0", VA = "0x89C8D0")]
		private void ProcessInputs()
		{
		}

		[Token(Token = "0x60010A2")]
		[Address(RVA = "0x89CC5C", Offset = "0x89CC5C", VA = "0x89CC5C", Slot = "52")]
		public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x60010A3")]
		[Address(RVA = "0x89CD84", Offset = "0x89CD84", VA = "0x89CD84")]
		public PlayerManager()
		{
		}
	}
	[Token(Token = "0x2000303")]
	[RequireComponent(typeof(InputField))]
	public class PlayerNameInputField : MonoBehaviour
	{
		[Token(Token = "0x4000ECE")]
		private const string playerNamePrefKey = "PlayerName";

		[Token(Token = "0x60010A4")]
		[Address(RVA = "0x89CD94", Offset = "0x89CD94", VA = "0x89CD94")]
		private void Start()
		{
		}

		[Token(Token = "0x60010A5")]
		[Address(RVA = "0x89CEC0", Offset = "0x89CEC0", VA = "0x89CEC0")]
		public void SetPlayerName(string value)
		{
		}

		[Token(Token = "0x60010A6")]
		[Address(RVA = "0x89CF98", Offset = "0x89CF98", VA = "0x89CF98")]
		public PlayerNameInputField()
		{
		}
	}
	[Token(Token = "0x2000304")]
	public class PlayerUI : MonoBehaviour
	{
		[Token(Token = "0x4000ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[Tooltip("Pixel offset from the player target")]
		private Vector3 screenOffset;

		[Token(Token = "0x4000ED0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[Tooltip("UI Text to display Player's Name")]
		private Text playerNameText;

		[Token(Token = "0x4000ED1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Tooltip("UI Slider to display Player's Health")]
		[SerializeField]
		private Slider playerHealthSlider;

		[Token(Token = "0x4000ED2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private PlayerManager target;

		[Token(Token = "0x4000ED3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float characterControllerHeight;

		[Token(Token = "0x4000ED4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform targetTransform;

		[Token(Token = "0x4000ED5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Renderer targetRenderer;

		[Token(Token = "0x4000ED6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 targetPosition;

		[Token(Token = "0x60010A7")]
		[Address(RVA = "0x89CFA0", Offset = "0x89CFA0", VA = "0x89CFA0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010A8")]
		[Address(RVA = "0x89D038", Offset = "0x89D038", VA = "0x89D038")]
		private void Update()
		{
		}

		[Token(Token = "0x60010A9")]
		[Address(RVA = "0x89D130", Offset = "0x89D130", VA = "0x89D130")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60010AA")]
		[Address(RVA = "0x89D274", Offset = "0x89D274", VA = "0x89D274")]
		public void SetTarget(PlayerManager _target)
		{
		}

		[Token(Token = "0x60010AB")]
		[Address(RVA = "0x89D470", Offset = "0x89D470", VA = "0x89D470")]
		public PlayerUI()
		{
		}
	}
}
namespace Photon.Pun.Demo.SlotRacer
{
	[Token(Token = "0x2000305")]
	[RequireComponent(typeof(SplineWalker))]
	public class PlayerControl : MonoBehaviourPun, IPunObservable
	{
		[Token(Token = "0x2000306")]
		[CompilerGenerated]
		private sealed class <Start>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000EE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000EE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000EE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlayerControl <>4__this;

			[Token(Token = "0x17000132")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60010B7")]
				[Address(RVA = "0x89DE3C", Offset = "0x89DE3C", VA = "0x89DE3C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000133")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60010B9")]
				[Address(RVA = "0x89DE84", Offset = "0x89DE84", VA = "0x89DE84", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60010B4")]
			[Address(RVA = "0x89DA1C", Offset = "0x89DA1C", VA = "0x89DA1C")]
			[DebuggerHidden]
			public <Start>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x60010B5")]
			[Address(RVA = "0x89DD20", Offset = "0x89DD20", VA = "0x89DD20", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60010B6")]
			[Address(RVA = "0x89DD24", Offset = "0x89DD24", VA = "0x89DD24", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60010B8")]
			[Address(RVA = "0x89DE44", Offset = "0x89DE44", VA = "0x89DE44", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000ED7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject[] CarPrefabs;

		[Token(Token = "0x4000ED8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float MaximumSpeed;

		[Token(Token = "0x4000ED9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float Drag;

		[Token(Token = "0x4000EDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float CurrentSpeed;

		[Token(Token = "0x4000EDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float CurrentDistance;

		[Token(Token = "0x4000EDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject CarInstance;

		[Token(Token = "0x4000EDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private SplineWalker SplineWalker;

		[Token(Token = "0x4000EDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool m_firstTake;

		[Token(Token = "0x4000EDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float m_input;

		[Token(Token = "0x60010AC")]
		[Address(RVA = "0x89D488", Offset = "0x89D488", VA = "0x89D488", Slot = "4")]
		private void Photon.Pun.IPunObservable.OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x60010AD")]
		[Address(RVA = "0x89D600", Offset = "0x89D600", VA = "0x89D600")]
		private void SetupCarOnTrack(int gridStartIndex)
		{
		}

		[Token(Token = "0x60010AE")]
		[Address(RVA = "0x89D95C", Offset = "0x89D95C", VA = "0x89D95C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010AF")]
		[Address(RVA = "0x89D9B4", Offset = "0x89D9B4", VA = "0x89D9B4")]
		[IteratorStateMachine(typeof(<Start>d__12))]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x60010B0")]
		[Address(RVA = "0x89DA44", Offset = "0x89DA44", VA = "0x89DA44")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60010B1")]
		[Address(RVA = "0x89DAA0", Offset = "0x89DAA0", VA = "0x89DAA0")]
		private void Update()
		{
		}

		[Token(Token = "0x60010B2")]
		[Address(RVA = "0x89DCD0", Offset = "0x89DCD0", VA = "0x89DCD0")]
		public PlayerControl()
		{
		}
	}
	[Token(Token = "0x2000307")]
	public class SlotLanes : MonoBehaviour
	{
		[Token(Token = "0x4000EE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static SlotLanes Instance;

		[Token(Token = "0x4000EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SplinePosition[] GridPositions;

		[Token(Token = "0x60010BA")]
		[Address(RVA = "0x89DE8C", Offset = "0x89DE8C", VA = "0x89DE8C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010BB")]
		[Address(RVA = "0x89DED8", Offset = "0x89DED8", VA = "0x89DED8")]
		public SlotLanes()
		{
		}
	}
	[Token(Token = "0x2000308")]
	[ExecuteInEditMode]
	public class SlotRacerSplashScreen : MonoBehaviour
	{
		[Token(Token = "0x4000EE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string PunCockpit_scene;

		[Token(Token = "0x4000EE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text WarningText;

		[Token(Token = "0x4000EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject SplashScreen;

		[Token(Token = "0x60010BC")]
		[Address(RVA = "0x89DEE0", Offset = "0x89DEE0", VA = "0x89DEE0")]
		private void Start()
		{
		}

		[Token(Token = "0x60010BD")]
		[Address(RVA = "0x89DF60", Offset = "0x89DF60", VA = "0x89DF60")]
		public void Update()
		{
		}

		[Token(Token = "0x60010BE")]
		[Address(RVA = "0x89DF64", Offset = "0x89DF64", VA = "0x89DF64")]
		public SlotRacerSplashScreen()
		{
		}
	}
}
namespace Photon.Pun.Demo.SlotRacer.Utils
{
	[Token(Token = "0x2000309")]
	public static class Bezier
	{
		[Token(Token = "0x60010BF")]
		[Address(RVA = "0x89DFB4", Offset = "0x89DFB4", VA = "0x89DFB4")]
		public static Vector3 GetPoint(Vector3 p0, Vector3 p1, Vector3 p2, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60010C0")]
		[Address(RVA = "0x89E028", Offset = "0x89E028", VA = "0x89E028")]
		public static Vector3 GetFirstDerivative(Vector3 p0, Vector3 p1, Vector3 p2, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60010C1")]
		[Address(RVA = "0x89E084", Offset = "0x89E084", VA = "0x89E084")]
		public static Vector3 GetPoint(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60010C2")]
		[Address(RVA = "0x89E130", Offset = "0x89E130", VA = "0x89E130")]
		public static Vector3 GetFirstDerivative(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x200030A")]
	public enum BezierControlPointMode
	{
		[Token(Token = "0x4000EE9")]
		Free,
		[Token(Token = "0x4000EEA")]
		Aligned,
		[Token(Token = "0x4000EEB")]
		Mirrored
	}
	[Token(Token = "0x200030B")]
	public class BezierCurve : MonoBehaviour
	{
		[Token(Token = "0x4000EEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3[] points;

		[Token(Token = "0x60010C3")]
		[Address(RVA = "0x89E1E0", Offset = "0x89E1E0", VA = "0x89E1E0")]
		public Vector3 GetPoint(float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60010C4")]
		[Address(RVA = "0x89E280", Offset = "0x89E280", VA = "0x89E280")]
		public Vector3 GetVelocity(float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60010C5")]
		[Address(RVA = "0x89E364", Offset = "0x89E364", VA = "0x89E364")]
		public Vector3 GetDirection(float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60010C6")]
		[Address(RVA = "0x89E438", Offset = "0x89E438", VA = "0x89E438")]
		public void Reset()
		{
		}

		[Token(Token = "0x60010C7")]
		[Address(RVA = "0x89E4F4", Offset = "0x89E4F4", VA = "0x89E4F4")]
		public BezierCurve()
		{
		}
	}
	[Token(Token = "0x200030C")]
	public class BezierSpline : MonoBehaviour
	{
		[Token(Token = "0x4000EED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Vector3[] points;

		[Token(Token = "0x4000EEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float[] lengths;

		[Token(Token = "0x4000EEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float[] lengthsTime;

		[Token(Token = "0x4000EF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float TotalLength;

		[Token(Token = "0x4000EF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private BezierControlPointMode[] modes;

		[Token(Token = "0x4000EF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool loop;

		[Token(Token = "0x17000134")]
		public bool Loop
		{
			[Token(Token = "0x60010C8")]
			[Address(RVA = "0x89E4FC", Offset = "0x89E4FC", VA = "0x89E4FC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60010C9")]
			[Address(RVA = "0x89E504", Offset = "0x89E504", VA = "0x89E504")]
			set
			{
			}
		}

		[Token(Token = "0x17000135")]
		public int ControlPointCount
		{
			[Token(Token = "0x60010CA")]
			[Address(RVA = "0x89E7AC", Offset = "0x89E7AC", VA = "0x89E7AC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000136")]
		public int CurveCount
		{
			[Token(Token = "0x60010D1")]
			[Address(RVA = "0x89ED5C", Offset = "0x89ED5C", VA = "0x89ED5C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60010CB")]
		[Address(RVA = "0x89E7C8", Offset = "0x89E7C8", VA = "0x89E7C8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010CC")]
		[Address(RVA = "0x89E988", Offset = "0x89E988", VA = "0x89E988")]
		public Vector3 GetControlPoint(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60010CD")]
		[Address(RVA = "0x89E56C", Offset = "0x89E56C", VA = "0x89E56C")]
		public void SetControlPoint(int index, Vector3 point)
		{
		}

		[Token(Token = "0x60010CE")]
		[Address(RVA = "0x89EC98", Offset = "0x89EC98", VA = "0x89EC98")]
		public BezierControlPointMode GetControlPointMode(int index)
		{
			return default(BezierControlPointMode);
		}

		[Token(Token = "0x60010CF")]
		[Address(RVA = "0x89ECE4", Offset = "0x89ECE4", VA = "0x89ECE4")]
		public void SetControlPointMode(int index, BezierControlPointMode mode)
		{
		}

		[Token(Token = "0x60010D0")]
		[Address(RVA = "0x89E9C4", Offset = "0x89E9C4", VA = "0x89E9C4")]
		private void EnforceMode(int index)
		{
		}

		[Token(Token = "0x60010D2")]
		[Address(RVA = "0x89ED94", Offset = "0x89ED94", VA = "0x89ED94")]
		public Vector3 GetPoint(float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60010D3")]
		[Address(RVA = "0x89EF04", Offset = "0x89EF04", VA = "0x89EF04")]
		public Vector3 GetVelocity(float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60010D4")]
		[Address(RVA = "0x89F0B0", Offset = "0x89F0B0", VA = "0x89F0B0")]
		public Vector3 GetDirection(float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60010D5")]
		[Address(RVA = "0x89F184", Offset = "0x89F184", VA = "0x89F184")]
		public void AddCurve()
		{
		}

		[Token(Token = "0x60010D6")]
		[Address(RVA = "0x89F3BC", Offset = "0x89F3BC", VA = "0x89F3BC")]
		public void Reset()
		{
		}

		[Token(Token = "0x60010D7")]
		[Address(RVA = "0x89E7CC", Offset = "0x89E7CC", VA = "0x89E7CC")]
		public void ComputeLengths()
		{
		}

		[Token(Token = "0x60010D8")]
		[Address(RVA = "0x89F49C", Offset = "0x89F49C", VA = "0x89F49C")]
		public Vector3 GetPositionAtDistance(float distance, bool reverse = false)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60010D9")]
		[Address(RVA = "0x89F5FC", Offset = "0x89F5FC", VA = "0x89F5FC")]
		public BezierSpline()
		{
		}
	}
	[Token(Token = "0x200030D")]
	public class Line : MonoBehaviour
	{
		[Token(Token = "0x4000EF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 p0;

		[Token(Token = "0x4000EF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 p1;

		[Token(Token = "0x60010DA")]
		[Address(RVA = "0x89F604", Offset = "0x89F604", VA = "0x89F604")]
		public Line()
		{
		}
	}
	[Token(Token = "0x200030E")]
	[ExecuteInEditMode]
	public class SplinePosition : MonoBehaviour
	{
		[Token(Token = "0x4000EF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BezierSpline Spline;

		[Token(Token = "0x4000EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool reverse;

		[Token(Token = "0x4000EF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool lookForward;

		[Token(Token = "0x4000EF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float currentDistance;

		[Token(Token = "0x4000EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float currentClampedDistance;

		[Token(Token = "0x4000EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float LastDistance;

		[Token(Token = "0x60010DB")]
		[Address(RVA = "0x89F60C", Offset = "0x89F60C", VA = "0x89F60C")]
		public void SetPositionOnSpline(float position)
		{
		}

		[Token(Token = "0x60010DC")]
		[Address(RVA = "0x89F71C", Offset = "0x89F71C", VA = "0x89F71C")]
		private void Update()
		{
		}

		[Token(Token = "0x60010DD")]
		[Address(RVA = "0x89F614", Offset = "0x89F614", VA = "0x89F614")]
		private void ExecutePositioning()
		{
		}

		[Token(Token = "0x60010DE")]
		[Address(RVA = "0x89F720", Offset = "0x89F720", VA = "0x89F720")]
		public SplinePosition()
		{
		}
	}
	[Token(Token = "0x200030F")]
	[ExecuteInEditMode]
	public class SplineWalker : MonoBehaviour
	{
		[Token(Token = "0x4000EFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BezierSpline spline;

		[Token(Token = "0x4000EFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float Speed;

		[Token(Token = "0x4000EFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool lookForward;

		[Token(Token = "0x4000EFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool reverse;

		[Token(Token = "0x4000EFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float progress;

		[Token(Token = "0x4000F00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float currentDistance;

		[Token(Token = "0x4000F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float currentClampedDistance;

		[Token(Token = "0x60010DF")]
		[Address(RVA = "0x89DCC8", Offset = "0x89DCC8", VA = "0x89DCC8")]
		public void SetPositionOnSpline(float position)
		{
		}

		[Token(Token = "0x60010E0")]
		[Address(RVA = "0x89F728", Offset = "0x89F728", VA = "0x89F728")]
		private void Update()
		{
		}

		[Token(Token = "0x60010E1")]
		[Address(RVA = "0x89D840", Offset = "0x89D840", VA = "0x89D840")]
		public void ExecutePositioning()
		{
		}

		[Token(Token = "0x60010E2")]
		[Address(RVA = "0x89F760", Offset = "0x89F760", VA = "0x89F760")]
		public SplineWalker()
		{
		}
	}
}
namespace Photon.Pun.Demo.Procedural
{
	[Token(Token = "0x2000310")]
	public class Block : MonoBehaviour
	{
		[Token(Token = "0x17000137")]
		public int BlockId
		{
			[Token(Token = "0x60010E3")]
			[Address(RVA = "0x89F768", Offset = "0x89F768", VA = "0x89F768")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60010E4")]
			[Address(RVA = "0x89F770", Offset = "0x89F770", VA = "0x89F770")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000138")]
		public int ClusterId
		{
			[Token(Token = "0x60010E5")]
			[Address(RVA = "0x89F778", Offset = "0x89F778", VA = "0x89F778")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60010E6")]
			[Address(RVA = "0x89F780", Offset = "0x89F780", VA = "0x89F780")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x60010E7")]
		[Address(RVA = "0x89F788", Offset = "0x89F788", VA = "0x89F788")]
		public Block()
		{
		}
	}
	[Token(Token = "0x2000311")]
	public class Cluster : MonoBehaviourPunCallbacks
	{
		[Token(Token = "0x4000F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string propertiesKey;

		[Token(Token = "0x4000F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<int, float> propertiesValue;

		[Token(Token = "0x17000139")]
		public int ClusterId
		{
			[Token(Token = "0x60010E8")]
			[Address(RVA = "0x89F790", Offset = "0x89F790", VA = "0x89F790")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60010E9")]
			[Address(RVA = "0x89F798", Offset = "0x89F798", VA = "0x89F798")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700013A")]
		public Dictionary<int, GameObject> Blocks
		{
			[Token(Token = "0x60010EA")]
			[Address(RVA = "0x89F7A0", Offset = "0x89F7A0", VA = "0x89F7A0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60010EB")]
			[Address(RVA = "0x89F7A8", Offset = "0x89F7A8", VA = "0x89F7A8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x60010EC")]
		[Address(RVA = "0x89F7B0", Offset = "0x89F7B0", VA = "0x89F7B0")]
		public void Awake()
		{
		}

		[Token(Token = "0x60010ED")]
		[Address(RVA = "0x89F868", Offset = "0x89F868", VA = "0x89F868")]
		private void Start()
		{
		}

		[Token(Token = "0x60010EE")]
		[Address(RVA = "0x89F8DC", Offset = "0x89F8DC", VA = "0x89F8DC")]
		public void AddBlock(int blockId, GameObject block)
		{
		}

		[Token(Token = "0x60010EF")]
		[Address(RVA = "0x89F944", Offset = "0x89F944", VA = "0x89F944")]
		public void DestroyCluster()
		{
		}

		[Token(Token = "0x60010F0")]
		[Address(RVA = "0x89FBF8", Offset = "0x89FBF8", VA = "0x89FBF8")]
		public void DecreaseBlockHeight(int blockId)
		{
		}

		[Token(Token = "0x60010F1")]
		[Address(RVA = "0x89FD98", Offset = "0x89FD98", VA = "0x89FD98")]
		public void IncreaseBlockHeight(int blockId)
		{
		}

		[Token(Token = "0x60010F2")]
		[Address(RVA = "0x89FE24", Offset = "0x89FE24", VA = "0x89FE24")]
		public void SetBlockHeightRemote(int blockId, float height)
		{
		}

		[Token(Token = "0x60010F3")]
		[Address(RVA = "0x89FC84", Offset = "0x89FC84", VA = "0x89FC84")]
		private void SetBlockHeightLocal(int blockId, float height)
		{
		}

		[Token(Token = "0x60010F4")]
		[Address(RVA = "0x89FF28", Offset = "0x89FF28", VA = "0x89FF28")]
		private void UpdateRoomProperties(int blockId, float height)
		{
		}

		[Token(Token = "0x60010F5")]
		[Address(RVA = "0x89FB28", Offset = "0x89FB28", VA = "0x89FB28")]
		private void RemoveClusterFromRoomProperties()
		{
		}

		[Token(Token = "0x60010F6")]
		[Address(RVA = "0x8A0030", Offset = "0x8A0030", VA = "0x8A0030", Slot = "45")]
		public override void OnRoomPropertiesUpdate(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
		{
		}

		[Token(Token = "0x60010F7")]
		[Address(RVA = "0x8A0278", Offset = "0x8A0278", VA = "0x8A0278")]
		public Cluster()
		{
		}
	}
	[Token(Token = "0x2000312")]
	public class IngameControlPanel : MonoBehaviourPunCallbacks
	{
		[Token(Token = "0x4000F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool isSeedValid;

		[Token(Token = "0x4000F09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private InputField seedInputField;

		[Token(Token = "0x4000F0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dropdown worldSizeDropdown;

		[Token(Token = "0x4000F0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dropdown clusterSizeDropdown;

		[Token(Token = "0x4000F0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Dropdown worldTypeDropdown;

		[Token(Token = "0x4000F0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Button generateWorldButton;

		[Token(Token = "0x60010F8")]
		[Address(RVA = "0x8A0280", Offset = "0x8A0280", VA = "0x8A0280")]
		public void Awake()
		{
		}

		[Token(Token = "0x60010F9")]
		[Address(RVA = "0x8A07A8", Offset = "0x8A07A8", VA = "0x8A07A8", Slot = "40")]
		public override void OnJoinedRoom()
		{
		}

		[Token(Token = "0x60010FA")]
		[Address(RVA = "0x8A0898", Offset = "0x8A0898", VA = "0x8A0898", Slot = "31")]
		public override void OnMasterClientSwitched(Player newMasterClient)
		{
		}

		[Token(Token = "0x60010FB")]
		[Address(RVA = "0x8A091C", Offset = "0x8A091C", VA = "0x8A091C", Slot = "45")]
		public override void OnRoomPropertiesUpdate(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
		{
		}

		[Token(Token = "0x60010FC")]
		[Address(RVA = "0x8A0D58", Offset = "0x8A0D58", VA = "0x8A0D58")]
		public IngameControlPanel()
		{
		}
	}
	[Token(Token = "0x2000314")]
	public class ProceduralController : MonoBehaviour
	{
		[Token(Token = "0x4000F12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Camera cam;

		[Token(Token = "0x6001104")]
		[Address(RVA = "0x8A1230", Offset = "0x8A1230", VA = "0x8A1230")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001105")]
		[Address(RVA = "0x8A124C", Offset = "0x8A124C", VA = "0x8A124C")]
		public void Update()
		{
		}

		[Token(Token = "0x6001106")]
		[Address(RVA = "0x8A1934", Offset = "0x8A1934", VA = "0x8A1934")]
		public ProceduralController()
		{
		}
	}
	[Token(Token = "0x2000315")]
	public enum WorldSize
	{
		[Token(Token = "0x4000F14")]
		Tiny = 0x10,
		[Token(Token = "0x4000F15")]
		Small = 0x20,
		[Token(Token = "0x4000F16")]
		Medium = 0x40,
		[Token(Token = "0x4000F17")]
		Large = 0x80
	}
	[Token(Token = "0x2000316")]
	public enum WorldType
	{
		[Token(Token = "0x4000F19")]
		Flat = 4,
		[Token(Token = "0x4000F1A")]
		Standard = 8,
		[Token(Token = "0x4000F1B")]
		Mountain = 0x10
	}
	[Token(Token = "0x2000317")]
	public enum ClusterSize
	{
		[Token(Token = "0x4000F1D")]
		Small = 4,
		[Token(Token = "0x4000F1E")]
		Medium = 0x10,
		[Token(Token = "0x4000F1F")]
		Large = 0x40
	}
	[Token(Token = "0x2000318")]
	public class WorldGenerator : MonoBehaviour
	{
		[Token(Token = "0x2000319")]
		[CompilerGenerated]
		private sealed class <GenerateWorld>d__31 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WorldGenerator <>4__this;

			[Token(Token = "0x4000F2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Dictionary<int, GameObject>.ValueCollection.Enumerator <>7__wrap1;

			[Token(Token = "0x17000140")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600111C")]
				[Address(RVA = "0x8A2E44", Offset = "0x8A2E44", VA = "0x8A2E44", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000141")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600111E")]
				[Address(RVA = "0x8A2E8C", Offset = "0x8A2E8C", VA = "0x8A2E8C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001118")]
			[Address(RVA = "0x8A1C60", Offset = "0x8A1C60", VA = "0x8A1C60")]
			[DebuggerHidden]
			public <GenerateWorld>d__31(int <>1__state)
			{
			}

			[Token(Token = "0x6001119")]
			[Address(RVA = "0x8A1D3C", Offset = "0x8A1D3C", VA = "0x8A1D3C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600111A")]
			[Address(RVA = "0x8A1D58", Offset = "0x8A1D58", VA = "0x8A1D58", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600111B")]
			[Address(RVA = "0x8A2DF4", Offset = "0x8A2DF4", VA = "0x8A2DF4")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x600111D")]
			[Address(RVA = "0x8A2E4C", Offset = "0x8A2E4C", VA = "0x8A2E4C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string SeedPropertiesKey;

		[Token(Token = "0x4000F21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string WorldSizePropertiesKey;

		[Token(Token = "0x4000F22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string ClusterSizePropertiesKey;

		[Token(Token = "0x4000F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string WorldTypePropertiesKey;

		[Token(Token = "0x4000F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static WorldGenerator instance;

		[Token(Token = "0x4000F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Dictionary<int, GameObject> clusterList;

		[Token(Token = "0x4000F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Material[] WorldMaterials;

		[Token(Token = "0x1700013B")]
		public static WorldGenerator Instance
		{
			[Token(Token = "0x6001107")]
			[Address(RVA = "0x8A0C60", Offset = "0x8A0C60", VA = "0x8A0C60")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013C")]
		public int Seed
		{
			[Token(Token = "0x6001108")]
			[Address(RVA = "0x8A193C", Offset = "0x8A193C", VA = "0x8A193C")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001109")]
			[Address(RVA = "0x8A1944", Offset = "0x8A1944", VA = "0x8A1944")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700013D")]
		public WorldSize WorldSize
		{
			[Token(Token = "0x600110A")]
			[Address(RVA = "0x8A194C", Offset = "0x8A194C", VA = "0x8A194C")]
			[CompilerGenerated]
			get
			{
				return default(WorldSize);
			}
			[Token(Token = "0x600110B")]
			[Address(RVA = "0x8A1954", Offset = "0x8A1954", VA = "0x8A1954")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700013E")]
		public ClusterSize ClusterSize
		{
			[Token(Token = "0x600110C")]
			[Address(RVA = "0x8A195C", Offset = "0x8A195C", VA = "0x8A195C")]
			[CompilerGenerated]
			get
			{
				return default(ClusterSize);
			}
			[Token(Token = "0x600110D")]
			[Address(RVA = "0x8A1964", Offset = "0x8A1964", VA = "0x8A1964")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700013F")]
		public WorldType WorldType
		{
			[Token(Token = "0x600110E")]
			[Address(RVA = "0x8A196C", Offset = "0x8A196C", VA = "0x8A196C")]
			[CompilerGenerated]
			get
			{
				return default(WorldType);
			}
			[Token(Token = "0x600110F")]
			[Address(RVA = "0x8A1974", Offset = "0x8A1974", VA = "0x8A1974")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001110")]
		[Address(RVA = "0x8A197C", Offset = "0x8A197C", VA = "0x8A197C")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001111")]
		[Address(RVA = "0x8A0D24", Offset = "0x8A0D24", VA = "0x8A0D24")]
		public void CreateWorld()
		{
		}

		[Token(Token = "0x6001112")]
		[Address(RVA = "0x8A1A04", Offset = "0x8A1A04", VA = "0x8A1A04")]
		private void DestroyWorld()
		{
		}

		[Token(Token = "0x6001113")]
		[Address(RVA = "0x8A0EF8", Offset = "0x8A0EF8", VA = "0x8A0EF8")]
		public void ConfirmAndUpdateProperties()
		{
		}

		[Token(Token = "0x6001114")]
		[Address(RVA = "0x8A176C", Offset = "0x8A176C", VA = "0x8A176C")]
		public void DecreaseBlockHeight(int clusterId, int blockId)
		{
		}

		[Token(Token = "0x6001115")]
		[Address(RVA = "0x8A1850", Offset = "0x8A1850", VA = "0x8A1850")]
		public void IncreaseBlockHeight(int clusterId, int blockId)
		{
		}

		[Token(Token = "0x6001116")]
		[Address(RVA = "0x8A1BF8", Offset = "0x8A1BF8", VA = "0x8A1BF8")]
		[IteratorStateMachine(typeof(<GenerateWorld>d__31))]
		private IEnumerator GenerateWorld()
		{
			return null;
		}

		[Token(Token = "0x6001117")]
		[Address(RVA = "0x8A1C88", Offset = "0x8A1C88", VA = "0x8A1C88")]
		public WorldGenerator()
		{
		}
	}
}
namespace Photon.Pun.Demo.Hub
{
	[Token(Token = "0x200031A")]
	public class DemoHubManager : MonoBehaviour
	{
		[Token(Token = "0x200031B")]
		private struct DemoData
		{
			[Token(Token = "0x4000F37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string Title;

			[Token(Token = "0x4000F38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string Description;

			[Token(Token = "0x4000F39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string Scene;

			[Token(Token = "0x4000F3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string TutorialLink;

			[Token(Token = "0x4000F3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string DocLink;
		}

		[Token(Token = "0x4000F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text TitleText;

		[Token(Token = "0x4000F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text DescriptionText;

		[Token(Token = "0x4000F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject OpenSceneButton;

		[Token(Token = "0x4000F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject OpenTutorialLinkButton;

		[Token(Token = "0x4000F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject OpenDocLinkButton;

		[Token(Token = "0x4000F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string MainDemoWebLink;

		[Token(Token = "0x4000F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Dictionary<string, DemoData> _data;

		[Token(Token = "0x4000F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string currentSelection;

		[Token(Token = "0x600111F")]
		[Address(RVA = "0x8A2E94", Offset = "0x8A2E94", VA = "0x8A2E94")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001120")]
		[Address(RVA = "0x8A374C", Offset = "0x8A374C", VA = "0x8A374C")]
		public void SelectDemo(string Reference)
		{
		}

		[Token(Token = "0x6001121")]
		[Address(RVA = "0x8A38D8", Offset = "0x8A38D8", VA = "0x8A38D8")]
		public void OpenScene()
		{
		}

		[Token(Token = "0x6001122")]
		[Address(RVA = "0x8A39D0", Offset = "0x8A39D0", VA = "0x8A39D0")]
		public void OpenTutorialLink()
		{
		}

		[Token(Token = "0x6001123")]
		[Address(RVA = "0x8A3AA0", Offset = "0x8A3AA0", VA = "0x8A3AA0")]
		public void OpenDocLink()
		{
		}

		[Token(Token = "0x6001124")]
		[Address(RVA = "0x8A3B70", Offset = "0x8A3B70", VA = "0x8A3B70")]
		public void OpenMainWebLink()
		{
		}

		[Token(Token = "0x6001125")]
		[Address(RVA = "0x8A3B7C", Offset = "0x8A3B7C", VA = "0x8A3B7C")]
		public DemoHubManager()
		{
		}
	}
	[Token(Token = "0x200031C")]
	public class ToDemoHubButton : MonoBehaviour
	{
		[Token(Token = "0x4000F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ToDemoHubButton instance;

		[Token(Token = "0x4000F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CanvasGroup _canvasGroup;

		[Token(Token = "0x17000142")]
		public static ToDemoHubButton Instance
		{
			[Token(Token = "0x6001126")]
			[Address(RVA = "0x8A3C1C", Offset = "0x8A3C1C", VA = "0x8A3C1C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001127")]
		[Address(RVA = "0x8A3D54", Offset = "0x8A3D54", VA = "0x8A3D54")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001128")]
		[Address(RVA = "0x8A3E2C", Offset = "0x8A3E2C", VA = "0x8A3E2C")]
		public void Start()
		{
		}

		[Token(Token = "0x6001129")]
		[Address(RVA = "0x8A3EC0", Offset = "0x8A3EC0", VA = "0x8A3EC0")]
		public void Update()
		{
		}

		[Token(Token = "0x600112A")]
		[Address(RVA = "0x8A3FC0", Offset = "0x8A3FC0", VA = "0x8A3FC0")]
		public void BackToHub()
		{
		}

		[Token(Token = "0x600112B")]
		[Address(RVA = "0x8A4040", Offset = "0x8A4040", VA = "0x8A4040")]
		public ToDemoHubButton()
		{
		}
	}
}
namespace Photon.Pun.Demo.Asteroids
{
	[Token(Token = "0x200031D")]
	public class AsteroidsGame
	{
		[Token(Token = "0x4000F3E")]
		public const float ASTEROIDS_MIN_SPAWN_TIME = 5f;

		[Token(Token = "0x4000F3F")]
		public const float ASTEROIDS_MAX_SPAWN_TIME = 10f;

		[Token(Token = "0x4000F40")]
		public const float PLAYER_RESPAWN_TIME = 4f;

		[Token(Token = "0x4000F41")]
		public const int PLAYER_MAX_LIVES = 3;

		[Token(Token = "0x4000F42")]
		public const string PLAYER_LIVES = "PlayerLives";

		[Token(Token = "0x4000F43")]
		public const string PLAYER_READY = "IsPlayerReady";

		[Token(Token = "0x4000F44")]
		public const string PLAYER_LOADED_LEVEL = "PlayerLoadedLevel";

		[Token(Token = "0x600112C")]
		[Address(RVA = "0x8A4048", Offset = "0x8A4048", VA = "0x8A4048")]
		public static Color GetColor(int colorChoice)
		{
			return default(Color);
		}

		[Token(Token = "0x600112D")]
		[Address(RVA = "0x8A4088", Offset = "0x8A4088", VA = "0x8A4088")]
		public AsteroidsGame()
		{
		}
	}
	[Token(Token = "0x200031E")]
	public class Asteroid : MonoBehaviour
	{
		[Token(Token = "0x4000F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isLargeAsteroid;

		[Token(Token = "0x4000F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool isDestroyed;

		[Token(Token = "0x4000F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private PhotonView photonView;

		[Token(Token = "0x4000F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Rigidbody rigidbody;

		[Token(Token = "0x600112E")]
		[Address(RVA = "0x8A4090", Offset = "0x8A4090", VA = "0x8A4090")]
		public void Awake()
		{
		}

		[Token(Token = "0x600112F")]
		[Address(RVA = "0x8A4260", Offset = "0x8A4260", VA = "0x8A4260")]
		public void Update()
		{
		}

		[Token(Token = "0x6001130")]
		[Address(RVA = "0x8A4390", Offset = "0x8A4390", VA = "0x8A4390")]
		public void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6001131")]
		[Address(RVA = "0x8A458C", Offset = "0x8A458C", VA = "0x8A458C")]
		private void DestroyAsteroidGlobally()
		{
		}

		[Token(Token = "0x6001132")]
		[Address(RVA = "0x8A4A74", Offset = "0x8A4A74", VA = "0x8A4A74")]
		private void DestroyAsteroidLocally()
		{
		}

		[Token(Token = "0x6001133")]
		[Address(RVA = "0x8A4AD8", Offset = "0x8A4AD8", VA = "0x8A4AD8")]
		public Asteroid()
		{
		}
	}
	[Token(Token = "0x200031F")]
	public class AsteroidsGameManager : MonoBehaviourPunCallbacks
	{
		[Token(Token = "0x2000320")]
		[CompilerGenerated]
		private sealed class <SpawnAsteroid>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x17000143")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001147")]
				[Address(RVA = "0x8A5C40", Offset = "0x8A5C40", VA = "0x8A5C40", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000144")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001149")]
				[Address(RVA = "0x8A5C88", Offset = "0x8A5C88", VA = "0x8A5C88", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001144")]
			[Address(RVA = "0x8A4DE8", Offset = "0x8A4DE8", VA = "0x8A4DE8")]
			[DebuggerHidden]
			public <SpawnAsteroid>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6001145")]
			[Address(RVA = "0x8A56BC", Offset = "0x8A56BC", VA = "0x8A56BC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001146")]
			[Address(RVA = "0x8A56C0", Offset = "0x8A56C0", VA = "0x8A56C0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001148")]
			[Address(RVA = "0x8A5C48", Offset = "0x8A5C48", VA = "0x8A5C48", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000321")]
		[CompilerGenerated]
		private sealed class <EndOfGame>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AsteroidsGameManager <>4__this;

			[Token(Token = "0x4000F51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string winner;

			[Token(Token = "0x4000F52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int score;

			[Token(Token = "0x4000F53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <timer>5__2;

			[Token(Token = "0x17000145")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600114D")]
				[Address(RVA = "0x8A5E4C", Offset = "0x8A5E4C", VA = "0x8A5E4C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000146")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600114F")]
				[Address(RVA = "0x8A5E94", Offset = "0x8A5E94", VA = "0x8A5E94", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600114A")]
			[Address(RVA = "0x8A4E8C", Offset = "0x8A4E8C", VA = "0x8A4E8C")]
			[DebuggerHidden]
			public <EndOfGame>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x600114B")]
			[Address(RVA = "0x8A5C90", Offset = "0x8A5C90", VA = "0x8A5C90", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600114C")]
			[Address(RVA = "0x8A5C94", Offset = "0x8A5C94", VA = "0x8A5C94", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600114E")]
			[Address(RVA = "0x8A5E54", Offset = "0x8A5E54", VA = "0x8A5E54", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static AsteroidsGameManager Instance;

		[Token(Token = "0x4000F4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text InfoText;

		[Token(Token = "0x4000F4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject[] AsteroidPrefabs;

		[Token(Token = "0x6001134")]
		[Address(RVA = "0x8A4AE0", Offset = "0x8A4AE0", VA = "0x8A4AE0")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001135")]
		[Address(RVA = "0x8A4B2C", Offset = "0x8A4B2C", VA = "0x8A4B2C", Slot = "27")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x6001136")]
		[Address(RVA = "0x8A4BB8", Offset = "0x8A4BB8", VA = "0x8A4BB8")]
		public void Start()
		{
		}

		[Token(Token = "0x6001137")]
		[Address(RVA = "0x8A4CFC", Offset = "0x8A4CFC", VA = "0x8A4CFC", Slot = "28")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x6001138")]
		[Address(RVA = "0x8A4D88", Offset = "0x8A4D88", VA = "0x8A4D88")]
		[IteratorStateMachine(typeof(<SpawnAsteroid>d__7))]
		private IEnumerator SpawnAsteroid()
		{
			return null;
		}

		[Token(Token = "0x6001139")]
		[Address(RVA = "0x8A4E10", Offset = "0x8A4E10", VA = "0x8A4E10")]
		[IteratorStateMachine(typeof(<EndOfGame>d__8))]
		private IEnumerator EndOfGame(string winner, int score)
		{
			return null;
		}

		[Token(Token = "0x600113A")]
		[Address(RVA = "0x8A4EB4", Offset = "0x8A4EB4", VA = "0x8A4EB4", Slot = "37")]
		public override void OnDisconnected(DisconnectCause cause)
		{
		}

		[Token(Token = "0x600113B")]
		[Address(RVA = "0x8A4F1C", Offset = "0x8A4F1C", VA = "0x8A4F1C", Slot = "30")]
		public override void OnLeftRoom()
		{
		}

		[Token(Token = "0x600113C")]
		[Address(RVA = "0x8A4F6C", Offset = "0x8A4F6C", VA = "0x8A4F6C", Slot = "31")]
		public override void OnMasterClientSwitched(Player newMasterClient)
		{
		}

		[Token(Token = "0x600113D")]
		[Address(RVA = "0x8A500C", Offset = "0x8A500C", VA = "0x8A500C", Slot = "42")]
		public override void OnPlayerLeftRoom(Player otherPlayer)
		{
		}

		[Token(Token = "0x600113E")]
		[Address(RVA = "0x8A5240", Offset = "0x8A5240", VA = "0x8A5240", Slot = "46")]
		public override void OnPlayerPropertiesUpdate(Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
		{
		}

		[Token(Token = "0x600113F")]
		[Address(RVA = "0x8A5548", Offset = "0x8A5548", VA = "0x8A5548")]
		private void StartGame()
		{
		}

		[Token(Token = "0x6001140")]
		[Address(RVA = "0x8A5408", Offset = "0x8A5408", VA = "0x8A5408")]
		private bool CheckAllPlayerLoadedLevel()
		{
			return default(bool);
		}

		[Token(Token = "0x6001141")]
		[Address(RVA = "0x8A5010", Offset = "0x8A5010", VA = "0x8A5010")]
		private void CheckEndOfGame()
		{
		}

		[Token(Token = "0x6001142")]
		[Address(RVA = "0x8A56B0", Offset = "0x8A56B0", VA = "0x8A56B0")]
		private void OnCountdownTimerIsExpired()
		{
		}

		[Token(Token = "0x6001143")]
		[Address(RVA = "0x8A56B4", Offset = "0x8A56B4", VA = "0x8A56B4")]
		public AsteroidsGameManager()
		{
		}
	}
	[Token(Token = "0x2000322")]
	public class Bullet : MonoBehaviour
	{
		[Token(Token = "0x17000147")]
		public Player Owner
		{
			[Token(Token = "0x6001150")]
			[Address(RVA = "0x8A5E9C", Offset = "0x8A5E9C", VA = "0x8A5E9C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001151")]
			[Address(RVA = "0x8A5EA4", Offset = "0x8A5EA4", VA = "0x8A5EA4")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001152")]
		[Address(RVA = "0x8A5EAC", Offset = "0x8A5EAC", VA = "0x8A5EAC")]
		public void Start()
		{
		}

		[Token(Token = "0x6001153")]
		[Address(RVA = "0x8A5F1C", Offset = "0x8A5F1C", VA = "0x8A5F1C")]
		public void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6001154")]
		[Address(RVA = "0x8A5F88", Offset = "0x8A5F88", VA = "0x8A5F88")]
		public void InitializeBullet(Player owner, Vector3 originalDirection, float lag)
		{
		}

		[Token(Token = "0x6001155")]
		[Address(RVA = "0x8A608C", Offset = "0x8A608C", VA = "0x8A608C")]
		public Bullet()
		{
		}
	}
	[Token(Token = "0x2000323")]
	public class PlayerOverviewPanel : MonoBehaviourPunCallbacks
	{
		[Token(Token = "0x4000F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject PlayerOverviewEntryPrefab;

		[Token(Token = "0x4000F56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<int, GameObject> playerListEntries;

		[Token(Token = "0x6001156")]
		[Address(RVA = "0x8A6094", Offset = "0x8A6094", VA = "0x8A6094")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001157")]
		[Address(RVA = "0x8A63DC", Offset = "0x8A63DC", VA = "0x8A63DC", Slot = "42")]
		public override void OnPlayerLeftRoom(Player otherPlayer)
		{
		}

		[Token(Token = "0x6001158")]
		[Address(RVA = "0x8A64A4", Offset = "0x8A64A4", VA = "0x8A64A4", Slot = "46")]
		public override void OnPlayerPropertiesUpdate(Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
		{
		}

		[Token(Token = "0x6001159")]
		[Address(RVA = "0x8A65FC", Offset = "0x8A65FC", VA = "0x8A65FC")]
		public PlayerOverviewPanel()
		{
		}
	}
	[Token(Token = "0x2000324")]
	public class Spaceship : MonoBehaviour
	{
		[Token(Token = "0x2000325")]
		[CompilerGenerated]
		private sealed class <WaitForRespawn>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Spaceship <>4__this;

			[Token(Token = "0x17000148")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001167")]
				[Address(RVA = "0x8A7968", Offset = "0x8A7968", VA = "0x8A7968", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000149")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001169")]
				[Address(RVA = "0x8A79B0", Offset = "0x8A79B0", VA = "0x8A79B0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001164")]
			[Address(RVA = "0x8A725C", Offset = "0x8A725C", VA = "0x8A725C")]
			[DebuggerHidden]
			public <WaitForRespawn>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6001165")]
			[Address(RVA = "0x8A7844", Offset = "0x8A7844", VA = "0x8A7844", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001166")]
			[Address(RVA = "0x8A7848", Offset = "0x8A7848", VA = "0x8A7848", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001168")]
			[Address(RVA = "0x8A7970", Offset = "0x8A7970", VA = "0x8A7970", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float RotationSpeed;

		[Token(Token = "0x4000F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float MovementSpeed;

		[Token(Token = "0x4000F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float MaxSpeed;

		[Token(Token = "0x4000F5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ParticleSystem Destruction;

		[Token(Token = "0x4000F5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject EngineTrail;

		[Token(Token = "0x4000F5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject BulletPrefab;

		[Token(Token = "0x4000F5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private PhotonView photonView;

		[Token(Token = "0x4000F5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Rigidbody rigidbody;

		[Token(Token = "0x4000F5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Collider collider;

		[Token(Token = "0x4000F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Renderer renderer;

		[Token(Token = "0x4000F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float rotation;

		[Token(Token = "0x4000F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float acceleration;

		[Token(Token = "0x4000F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float shootingTimer;

		[Token(Token = "0x4000F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool controllable;

		[Token(Token = "0x600115A")]
		[Address(RVA = "0x8A6604", Offset = "0x8A6604", VA = "0x8A6604")]
		public void Awake()
		{
		}

		[Token(Token = "0x600115B")]
		[Address(RVA = "0x8A66D0", Offset = "0x8A66D0", VA = "0x8A66D0")]
		public void Start()
		{
		}

		[Token(Token = "0x600115C")]
		[Address(RVA = "0x8A67F0", Offset = "0x8A67F0", VA = "0x8A67F0")]
		public void Update()
		{
		}

		[Token(Token = "0x600115D")]
		[Address(RVA = "0x8A6A28", Offset = "0x8A6A28", VA = "0x8A6A28")]
		public void FixedUpdate()
		{
		}

		[Token(Token = "0x600115E")]
		[Address(RVA = "0x8A71F4", Offset = "0x8A71F4", VA = "0x8A71F4")]
		[IteratorStateMachine(typeof(<WaitForRespawn>d__18))]
		private IEnumerator WaitForRespawn()
		{
			return null;
		}

		[Token(Token = "0x600115F")]
		[Address(RVA = "0x8A7284", Offset = "0x8A7284", VA = "0x8A7284")]
		[PunRPC]
		public void DestroySpaceship()
		{
		}

		[Token(Token = "0x6001160")]
		[Address(RVA = "0x8A75AC", Offset = "0x8A75AC", VA = "0x8A75AC")]
		[PunRPC]
		public void Fire(Vector3 position, Quaternion rotation, PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x6001161")]
		[Address(RVA = "0x8A77B0", Offset = "0x8A77B0", VA = "0x8A77B0")]
		[PunRPC]
		public void RespawnSpaceship()
		{
		}

		[Token(Token = "0x6001162")]
		[Address(RVA = "0x8A6DA8", Offset = "0x8A6DA8", VA = "0x8A6DA8")]
		private void CheckExitScreen()
		{
		}

		[Token(Token = "0x6001163")]
		[Address(RVA = "0x8A781C", Offset = "0x8A781C", VA = "0x8A781C")]
		public Spaceship()
		{
		}
	}
	[Token(Token = "0x2000326")]
	public class LobbyMainPanel : MonoBehaviourPunCallbacks
	{
		[Token(Token = "0x4000F68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("Login Panel")]
		public GameObject LoginPanel;

		[Token(Token = "0x4000F69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public InputField PlayerNameInput;

		[Token(Token = "0x4000F6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Header("Selection Panel")]
		public GameObject SelectionPanel;

		[Token(Token = "0x4000F6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Header("Create Room Panel")]
		public GameObject CreateRoomPanel;

		[Token(Token = "0x4000F6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public InputField RoomNameInputField;

		[Token(Token = "0x4000F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InputField MaxPlayersInputField;

		[Token(Token = "0x4000F6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Header("Join Random Room Panel")]
		public GameObject JoinRandomRoomPanel;

		[Token(Token = "0x4000F6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Header("Room List Panel")]
		public GameObject RoomListPanel;

		[Token(Token = "0x4000F70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject RoomListContent;

		[Token(Token = "0x4000F71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public GameObject RoomListEntryPrefab;

		[Token(Token = "0x4000F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[Header("Inside Room Panel")]
		public GameObject InsideRoomPanel;

		[Token(Token = "0x4000F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Button StartGameButton;

		[Token(Token = "0x4000F74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public GameObject PlayerListEntryPrefab;

		[Token(Token = "0x4000F75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Dictionary<string, RoomInfo> cachedRoomList;

		[Token(Token = "0x4000F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Dictionary<string, GameObject> roomListEntries;

		[Token(Token = "0x4000F77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Dictionary<int, GameObject> playerListEntries;

		[Token(Token = "0x600116A")]
		[Address(RVA = "0x8A79B8", Offset = "0x8A79B8", VA = "0x8A79B8")]
		public void Awake()
		{
		}

		[Token(Token = "0x600116B")]
		[Address(RVA = "0x8A7B0C", Offset = "0x8A7B0C", VA = "0x8A7B0C", Slot = "44")]
		public override void OnConnectedToMaster()
		{
		}

		[Token(Token = "0x600116C")]
		[Address(RVA = "0x8A7C90", Offset = "0x8A7C90", VA = "0x8A7C90", Slot = "39")]
		public override void OnRoomListUpdate(List<RoomInfo> roomList)
		{
		}

		[Token(Token = "0x600116D")]
		[Address(RVA = "0x8A8420", Offset = "0x8A8420", VA = "0x8A8420", Slot = "36")]
		public override void OnLeftLobby()
		{
		}

		[Token(Token = "0x600116E")]
		[Address(RVA = "0x8A8478", Offset = "0x8A8478", VA = "0x8A8478", Slot = "32")]
		public override void OnCreateRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x600116F")]
		[Address(RVA = "0x8A84A4", Offset = "0x8A84A4", VA = "0x8A84A4", Slot = "33")]
		public override void OnJoinRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x6001170")]
		[Address(RVA = "0x8A84D0", Offset = "0x8A84D0", VA = "0x8A84D0", Slot = "43")]
		public override void OnJoinRandomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x6001171")]
		[Address(RVA = "0x8A85C4", Offset = "0x8A85C4", VA = "0x8A85C4", Slot = "40")]
		public override void OnJoinedRoom()
		{
		}

		[Token(Token = "0x6001172")]
		[Address(RVA = "0x8A8B10", Offset = "0x8A8B10", VA = "0x8A8B10", Slot = "30")]
		public override void OnLeftRoom()
		{
		}

		[Token(Token = "0x6001173")]
		[Address(RVA = "0x8A8CF4", Offset = "0x8A8CF4", VA = "0x8A8CF4", Slot = "41")]
		public override void OnPlayerEnteredRoom(Player newPlayer)
		{
		}

		[Token(Token = "0x6001174")]
		[Address(RVA = "0x8A8E98", Offset = "0x8A8E98", VA = "0x8A8E98", Slot = "42")]
		public override void OnPlayerLeftRoom(Player otherPlayer)
		{
		}

		[Token(Token = "0x6001175")]
		[Address(RVA = "0x8A8F8C", Offset = "0x8A8F8C", VA = "0x8A8F8C", Slot = "31")]
		public override void OnMasterClientSwitched(Player newMasterClient)
		{
		}

		[Token(Token = "0x6001176")]
		[Address(RVA = "0x8A9044", Offset = "0x8A9044", VA = "0x8A9044", Slot = "46")]
		public override void OnPlayerPropertiesUpdate(Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
		{
		}

		[Token(Token = "0x6001177")]
		[Address(RVA = "0x8A91FC", Offset = "0x8A91FC", VA = "0x8A91FC")]
		public void OnBackButtonClicked()
		{
		}

		[Token(Token = "0x6001178")]
		[Address(RVA = "0x8A928C", Offset = "0x8A928C", VA = "0x8A928C")]
		public void OnCreateRoomButtonClicked()
		{
		}

		[Token(Token = "0x6001179")]
		[Address(RVA = "0x8A9400", Offset = "0x8A9400", VA = "0x8A9400")]
		public void OnJoinRandomRoomButtonClicked()
		{
		}

		[Token(Token = "0x600117A")]
		[Address(RVA = "0x8A9474", Offset = "0x8A9474", VA = "0x8A9474")]
		public void OnLeaveGameButtonClicked()
		{
		}

		[Token(Token = "0x600117B")]
		[Address(RVA = "0x8A94C8", Offset = "0x8A94C8", VA = "0x8A94C8")]
		public void OnLoginButtonClicked()
		{
		}

		[Token(Token = "0x600117C")]
		[Address(RVA = "0x8A95BC", Offset = "0x8A95BC", VA = "0x8A95BC")]
		public void OnRoomListButtonClicked()
		{
		}

		[Token(Token = "0x600117D")]
		[Address(RVA = "0x8A964C", Offset = "0x8A964C", VA = "0x8A964C")]
		public void OnStartGameButtonClicked()
		{
		}

		[Token(Token = "0x600117E")]
		[Address(RVA = "0x8A89B4", Offset = "0x8A89B4", VA = "0x8A89B4")]
		private bool CheckPlayersReady()
		{
			return default(bool);
		}

		[Token(Token = "0x600117F")]
		[Address(RVA = "0x8A7CC0", Offset = "0x8A7CC0", VA = "0x8A7CC0")]
		private void ClearRoomListView()
		{
		}

		[Token(Token = "0x6001180")]
		[Address(RVA = "0x8A96E8", Offset = "0x8A96E8", VA = "0x8A96E8")]
		public void LocalPlayerPropertiesUpdated()
		{
		}

		[Token(Token = "0x6001181")]
		[Address(RVA = "0x8A7B38", Offset = "0x8A7B38", VA = "0x8A7B38")]
		private void SetActivePanel(string activePanel)
		{
		}

		[Token(Token = "0x6001182")]
		[Address(RVA = "0x8A7E84", Offset = "0x8A7E84", VA = "0x8A7E84")]
		private void UpdateCachedRoomList(List<RoomInfo> roomList)
		{
		}

		[Token(Token = "0x6001183")]
		[Address(RVA = "0x8A80FC", Offset = "0x8A80FC", VA = "0x8A80FC")]
		private void UpdateRoomListView()
		{
		}

		[Token(Token = "0x6001184")]
		[Address(RVA = "0x8A9720", Offset = "0x8A9720", VA = "0x8A9720")]
		public LobbyMainPanel()
		{
		}
	}
	[Token(Token = "0x2000327")]
	public class LobbyTopPanel : MonoBehaviour
	{
		[Token(Token = "0x4000F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly string connectionStatusMessage;

		[Token(Token = "0x4000F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("UI References")]
		public Text ConnectionStatusText;

		[Token(Token = "0x6001185")]
		[Address(RVA = "0x8A9728", Offset = "0x8A9728", VA = "0x8A9728")]
		public void Update()
		{
		}

		[Token(Token = "0x6001186")]
		[Address(RVA = "0x8A97EC", Offset = "0x8A97EC", VA = "0x8A97EC")]
		public LobbyTopPanel()
		{
		}
	}
	[Token(Token = "0x2000328")]
	public class PlayerListEntry : MonoBehaviour
	{
		[Token(Token = "0x4000F7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("UI References")]
		public Text PlayerNameText;

		[Token(Token = "0x4000F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Image PlayerColorImage;

		[Token(Token = "0x4000F7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Button PlayerReadyButton;

		[Token(Token = "0x4000F7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Image PlayerReadyImage;

		[Token(Token = "0x4000F7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int ownerId;

		[Token(Token = "0x4000F7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private bool isPlayerReady;

		[Token(Token = "0x6001187")]
		[Address(RVA = "0x8A983C", Offset = "0x8A983C", VA = "0x8A983C")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6001188")]
		[Address(RVA = "0x8A98BC", Offset = "0x8A98BC", VA = "0x8A98BC")]
		public void Start()
		{
		}

		[Token(Token = "0x6001189")]
		[Address(RVA = "0x8A9B04", Offset = "0x8A9B04", VA = "0x8A9B04")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x600118A")]
		[Address(RVA = "0x8A9B84", Offset = "0x8A9B84", VA = "0x8A9B84")]
		public void Initialize(int playerId, string playerName)
		{
		}

		[Token(Token = "0x600118B")]
		[Address(RVA = "0x8A9BB8", Offset = "0x8A9BB8", VA = "0x8A9BB8")]
		private void OnPlayerNumberingChanged()
		{
		}

		[Token(Token = "0x600118C")]
		[Address(RVA = "0x8A9C98", Offset = "0x8A9C98", VA = "0x8A9C98")]
		public void SetPlayerReady(bool playerReady)
		{
		}

		[Token(Token = "0x600118D")]
		[Address(RVA = "0x8A9D48", Offset = "0x8A9D48", VA = "0x8A9D48")]
		public PlayerListEntry()
		{
		}
	}
	[Token(Token = "0x2000329")]
	public class RoomListEntry : MonoBehaviour
	{
		[Token(Token = "0x4000F80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text RoomNameText;

		[Token(Token = "0x4000F81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text RoomPlayersText;

		[Token(Token = "0x4000F82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Button JoinRoomButton;

		[Token(Token = "0x4000F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string roomName;

		[Token(Token = "0x600118F")]
		[Address(RVA = "0x8A9ED8", Offset = "0x8A9ED8", VA = "0x8A9ED8")]
		public void Start()
		{
		}

		[Token(Token = "0x6001190")]
		[Address(RVA = "0x8A9F6C", Offset = "0x8A9F6C", VA = "0x8A9F6C")]
		public void Initialize(string name, byte currentPlayers, byte maxPlayers)
		{
		}

		[Token(Token = "0x6001191")]
		[Address(RVA = "0x8AA034", Offset = "0x8AA034", VA = "0x8AA034")]
		public RoomListEntry()
		{
		}
	}
}
namespace Photon.Realtime.Demo
{
	[Token(Token = "0x200032A")]
	public class ConnectAndJoinRandomLb : MonoBehaviour, IConnectionCallbacks, IMatchmakingCallbacks, ILobbyCallbacks
	{
		[Token(Token = "0x4000F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string AppId;

		[Token(Token = "0x4000F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private LoadBalancingClient lbc;

		[Token(Token = "0x4000F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ConnectionHandler ch;

		[Token(Token = "0x4000F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text StateUiText;

		[Token(Token = "0x6001193")]
		[Address(RVA = "0x8AA0D0", Offset = "0x8AA0D0", VA = "0x8AA0D0")]
		public void Start()
		{
		}

		[Token(Token = "0x6001194")]
		[Address(RVA = "0x8AA1E8", Offset = "0x8AA1E8", VA = "0x8AA1E8")]
		public void Update()
		{
		}

		[Token(Token = "0x6001195")]
		[Address(RVA = "0x8AA31C", Offset = "0x8AA31C", VA = "0x8AA31C", Slot = "4")]
		public void OnConnected()
		{
		}

		[Token(Token = "0x6001196")]
		[Address(RVA = "0x8AA320", Offset = "0x8AA320", VA = "0x8AA320", Slot = "5")]
		public void OnConnectedToMaster()
		{
		}

		[Token(Token = "0x6001197")]
		[Address(RVA = "0x8AA3A4", Offset = "0x8AA3A4", VA = "0x8AA3A4", Slot = "6")]
		public void OnDisconnected(DisconnectCause cause)
		{
		}

		[Token(Token = "0x6001198")]
		[Address(RVA = "0x8AA490", Offset = "0x8AA490", VA = "0x8AA490", Slot = "8")]
		public void OnCustomAuthenticationResponse(Dictionary<string, object> data)
		{
		}

		[Token(Token = "0x6001199")]
		[Address(RVA = "0x8AA494", Offset = "0x8AA494", VA = "0x8AA494", Slot = "9")]
		public void OnCustomAuthenticationFailed(string debugMessage)
		{
		}

		[Token(Token = "0x600119A")]
		[Address(RVA = "0x8AA498", Offset = "0x8AA498", VA = "0x8AA498", Slot = "7")]
		public void OnRegionListReceived(RegionHandler regionHandler)
		{
		}

		[Token(Token = "0x600119B")]
		[Address(RVA = "0x8AA574", Offset = "0x8AA574", VA = "0x8AA574", Slot = "19")]
		public void OnRoomListUpdate(List<RoomInfo> roomList)
		{
		}

		[Token(Token = "0x600119C")]
		[Address(RVA = "0x8AA578", Offset = "0x8AA578", VA = "0x8AA578", Slot = "20")]
		public void OnLobbyStatisticsUpdate(List<TypedLobbyInfo> lobbyStatistics)
		{
		}

		[Token(Token = "0x600119D")]
		[Address(RVA = "0x8AA57C", Offset = "0x8AA57C", VA = "0x8AA57C", Slot = "17")]
		public void OnJoinedLobby()
		{
		}

		[Token(Token = "0x600119E")]
		[Address(RVA = "0x8AA580", Offset = "0x8AA580", VA = "0x8AA580", Slot = "18")]
		public void OnLeftLobby()
		{
		}

		[Token(Token = "0x600119F")]
		[Address(RVA = "0x8AA584", Offset = "0x8AA584", VA = "0x8AA584", Slot = "10")]
		public void OnFriendListUpdate(List<FriendInfo> friendList)
		{
		}

		[Token(Token = "0x60011A0")]
		[Address(RVA = "0x8AA588", Offset = "0x8AA588", VA = "0x8AA588", Slot = "11")]
		public void OnCreatedRoom()
		{
		}

		[Token(Token = "0x60011A1")]
		[Address(RVA = "0x8AA58C", Offset = "0x8AA58C", VA = "0x8AA58C", Slot = "12")]
		public void OnCreateRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x60011A2")]
		[Address(RVA = "0x8AA590", Offset = "0x8AA590", VA = "0x8AA590", Slot = "13")]
		public void OnJoinedRoom()
		{
		}

		[Token(Token = "0x60011A3")]
		[Address(RVA = "0x8AA5F8", Offset = "0x8AA5F8", VA = "0x8AA5F8", Slot = "14")]
		public void OnJoinRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x60011A4")]
		[Address(RVA = "0x8AA5FC", Offset = "0x8AA5FC", VA = "0x8AA5FC", Slot = "15")]
		public void OnJoinRandomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x60011A5")]
		[Address(RVA = "0x8AA6B0", Offset = "0x8AA6B0", VA = "0x8AA6B0", Slot = "16")]
		public void OnLeftRoom()
		{
		}

		[Token(Token = "0x60011A6")]
		[Address(RVA = "0x8AA6B4", Offset = "0x8AA6B4", VA = "0x8AA6B4")]
		private void OnRegionPingCompleted(RegionHandler regionHandler)
		{
		}

		[Token(Token = "0x60011A7")]
		[Address(RVA = "0x8AA7D8", Offset = "0x8AA7D8", VA = "0x8AA7D8")]
		public ConnectAndJoinRandomLb()
		{
		}
	}
}
namespace Photon.Chat.UtilityScripts
{
	[Token(Token = "0x200032B")]
	public class EventSystemSpawner : MonoBehaviour
	{
		[Token(Token = "0x60011A8")]
		[Address(RVA = "0x8AA7E0", Offset = "0x8AA7E0", VA = "0x8AA7E0")]
		private void Start()
		{
		}

		[Token(Token = "0x60011A9")]
		[Address(RVA = "0x8AA8E8", Offset = "0x8AA8E8", VA = "0x8AA8E8")]
		public EventSystemSpawner()
		{
		}
	}
	[Token(Token = "0x200032C")]
	public class OnStartDelete : MonoBehaviour
	{
		[Token(Token = "0x60011AA")]
		[Address(RVA = "0x8AA8F0", Offset = "0x8AA8F0", VA = "0x8AA8F0")]
		private void Start()
		{
		}

		[Token(Token = "0x60011AB")]
		[Address(RVA = "0x8AA95C", Offset = "0x8AA95C", VA = "0x8AA95C")]
		public OnStartDelete()
		{
		}
	}
	[Token(Token = "0x200032D")]
	[RequireComponent(typeof(Text))]
	public class TextButtonTransition : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x4000F88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Text _text;

		[Token(Token = "0x4000F89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Selectable Selectable;

		[Token(Token = "0x4000F8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color NormalColor;

		[Token(Token = "0x4000F8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color HoverColor;

		[Token(Token = "0x60011AC")]
		[Address(RVA = "0x8AA964", Offset = "0x8AA964", VA = "0x8AA964")]
		public void Awake()
		{
		}

		[Token(Token = "0x60011AD")]
		[Address(RVA = "0x8AA9B4", Offset = "0x8AA9B4", VA = "0x8AA9B4")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x60011AE")]
		[Address(RVA = "0x8AA9E4", Offset = "0x8AA9E4", VA = "0x8AA9E4")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x60011AF")]
		[Address(RVA = "0x8AAA14", Offset = "0x8AAA14", VA = "0x8AAA14", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60011B0")]
		[Address(RVA = "0x8AAAC4", Offset = "0x8AAAC4", VA = "0x8AAAC4", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60011B1")]
		[Address(RVA = "0x8AAB74", Offset = "0x8AAB74", VA = "0x8AAB74")]
		public TextButtonTransition()
		{
		}
	}
	[Token(Token = "0x200032E")]
	[RequireComponent(typeof(Text))]
	public class TextToggleIsOnTransition : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x4000F8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle toggle;

		[Token(Token = "0x4000F8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Text _text;

		[Token(Token = "0x4000F8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color NormalOnColor;

		[Token(Token = "0x4000F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color NormalOffColor;

		[Token(Token = "0x4000F90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Color HoverOnColor;

		[Token(Token = "0x4000F91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Color HoverOffColor;

		[Token(Token = "0x4000F92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool isHover;

		[Token(Token = "0x60011B2")]
		[Address(RVA = "0x8AAB90", Offset = "0x8AAB90", VA = "0x8AAB90")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x60011B3")]
		[Address(RVA = "0x8AACD4", Offset = "0x8AACD4", VA = "0x8AACD4")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x60011B4")]
		[Address(RVA = "0x8AAC70", Offset = "0x8AAC70", VA = "0x8AAC70")]
		public void OnValueChanged(bool isOn)
		{
		}

		[Token(Token = "0x60011B5")]
		[Address(RVA = "0x8AAD7C", Offset = "0x8AAD7C", VA = "0x8AAD7C", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60011B6")]
		[Address(RVA = "0x8AADF0", Offset = "0x8AADF0", VA = "0x8AADF0", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60011B7")]
		[Address(RVA = "0x8AAE60", Offset = "0x8AAE60", VA = "0x8AAE60")]
		public TextToggleIsOnTransition()
		{
		}
	}
}
namespace TerrainComposer2
{
	[Token(Token = "0x200032F")]
	public class ReadMe : MonoBehaviour
	{
		[Token(Token = "0x4000F93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool buttonEdit;

		[Token(Token = "0x4000F94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string readme;

		[Token(Token = "0x60011B8")]
		[Address(RVA = "0x8AAE84", Offset = "0x8AAE84", VA = "0x8AAE84")]
		public ReadMe()
		{
		}
	}
}
namespace MeshCombineStudio
{
	[Token(Token = "0x2000330")]
	public class DisabledLODGroup : MonoBehaviour
	{
		[Token(Token = "0x4000F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public MeshCombiner meshCombiner;

		[Token(Token = "0x4000F96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LODGroup lodGroup;

		[Token(Token = "0x60011B9")]
		[Address(RVA = "0x8AAE8C", Offset = "0x8AAE8C", VA = "0x8AAE8C")]
		public DisabledLODGroup()
		{
		}
	}
	[Token(Token = "0x2000331")]
	[ExecuteInEditMode]
	public class FindLodGroups : MonoBehaviour
	{
		[Token(Token = "0x4000F97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool find;

		[Token(Token = "0x60011BA")]
		[Address(RVA = "0x8AAE94", Offset = "0x8AAE94", VA = "0x8AAE94")]
		private void Start()
		{
		}

		[Token(Token = "0x60011BB")]
		[Address(RVA = "0x8AAFF8", Offset = "0x8AAFF8", VA = "0x8AAFF8")]
		private void Update()
		{
		}

		[Token(Token = "0x60011BC")]
		[Address(RVA = "0x8AAE98", Offset = "0x8AAE98", VA = "0x8AAE98")]
		private void FindLods()
		{
		}

		[Token(Token = "0x60011BD")]
		[Address(RVA = "0x8AB00C", Offset = "0x8AB00C", VA = "0x8AB00C")]
		public FindLodGroups()
		{
		}
	}
	[Token(Token = "0x2000332")]
	public class LODGroupSetup : MonoBehaviour
	{
		[Token(Token = "0x4000F98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MeshCombiner meshCombiner;

		[Token(Token = "0x4000F99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LODGroup lodGroup;

		[Token(Token = "0x4000F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int lodGroupParentIndex;

		[Token(Token = "0x4000F9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int lodCount;

		[Token(Token = "0x4000F9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private LODGroup[] lodGroups;

		[Token(Token = "0x60011BE")]
		[Address(RVA = "0x8AB014", Offset = "0x8AB014", VA = "0x8AB014")]
		public void Init(MeshCombiner meshCombiner, int lodGroupParentIndex)
		{
		}

		[Token(Token = "0x60011BF")]
		[Address(RVA = "0x8AB0D0", Offset = "0x8AB0D0", VA = "0x8AB0D0")]
		private void GetSetup()
		{
		}

		[Token(Token = "0x60011C0")]
		[Address(RVA = "0x8AB1D0", Offset = "0x8AB1D0", VA = "0x8AB1D0")]
		public void ApplySetup()
		{
		}

		[Token(Token = "0x60011C1")]
		[Address(RVA = "0x8AB4D0", Offset = "0x8AB4D0", VA = "0x8AB4D0")]
		public void AddLODGroupsToChildren()
		{
		}

		[Token(Token = "0x60011C2")]
		[Address(RVA = "0x8AB7BC", Offset = "0x8AB7BC", VA = "0x8AB7BC")]
		public void RemoveLODGroupFromChildren()
		{
		}

		[Token(Token = "0x60011C3")]
		[Address(RVA = "0x8AB8CC", Offset = "0x8AB8CC", VA = "0x8AB8CC")]
		public LODGroupSetup()
		{
		}
	}
	[Token(Token = "0x2000333")]
	public class CombinedLODManager : MonoBehaviour
	{
		[Token(Token = "0x2000334")]
		public enum LodMode
		{
			[Token(Token = "0x4000FAC")]
			Automatic,
			[Token(Token = "0x4000FAD")]
			DebugLod
		}

		[Token(Token = "0x2000335")]
		public enum LodDistanceMode
		{
			[Token(Token = "0x4000FAF")]
			Automatic,
			[Token(Token = "0x4000FB0")]
			Manual
		}

		[Serializable]
		[Token(Token = "0x2000336")]
		public class LOD
		{
			[Token(Token = "0x4000FB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform searchParent;

			[Token(Token = "0x4000FB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Sphere3 sphere;

			[Token(Token = "0x60011CF")]
			[Address(RVA = "0x8ABE0C", Offset = "0x8ABE0C", VA = "0x8ABE0C")]
			public LOD()
			{
			}

			[Token(Token = "0x60011D0")]
			[Address(RVA = "0x8AC704", Offset = "0x8AC704", VA = "0x8AC704")]
			public LOD(Transform searchParent)
			{
			}
		}

		[Token(Token = "0x2000337")]
		public class Cell : BaseOctree.Cell
		{
			[Token(Token = "0x4000FB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public new Cell[] cells;

			[Token(Token = "0x4000FB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private AABB3 box;

			[Token(Token = "0x60011D1")]
			[Address(RVA = "0x8AC780", Offset = "0x8AC780", VA = "0x8AC780")]
			public Cell()
			{
			}

			[Token(Token = "0x60011D2")]
			[Address(RVA = "0x8AB9A4", Offset = "0x8AB9A4", VA = "0x8AB9A4")]
			public Cell(Vector3 position, Vector3 size, int maxLevels)
			{
			}

			[Token(Token = "0x60011D3")]
			[Address(RVA = "0x8ABEDC", Offset = "0x8ABEDC", VA = "0x8ABEDC")]
			public void AddMeshRenderer(MeshRenderer mr, Vector3 position, int lodLevel, int lodLevels)
			{
			}

			[Token(Token = "0x60011D4")]
			[Address(RVA = "0x8AC788", Offset = "0x8AC788", VA = "0x8AC788")]
			private void AddMeshRendererInternal(MeshRenderer mr, Vector3 position, int lodLevel, int lodLevels)
			{
			}

			[Token(Token = "0x60011D5")]
			[Address(RVA = "0x8AC074", Offset = "0x8AC074", VA = "0x8AC074")]
			public void AutoLodInternal(LOD[] lods, float lodCulledDistance)
			{
			}

			[Token(Token = "0x60011D6")]
			[Address(RVA = "0x8AC38C", Offset = "0x8AC38C", VA = "0x8AC38C")]
			public void LodInternal(LOD[] lods, int lodLevel)
			{
			}

			[Token(Token = "0x60011D7")]
			[Address(RVA = "0x8AC56C", Offset = "0x8AC56C", VA = "0x8AC56C")]
			public void DrawGizmos(LOD[] lods)
			{
			}

			[Token(Token = "0x60011D8")]
			[Address(RVA = "0x8ACAE4", Offset = "0x8ACAE4", VA = "0x8ACAE4")]
			public void DrawGizmosInternal()
			{
			}
		}

		[Token(Token = "0x2000338")]
		public class MaxCell : Cell
		{
			[Token(Token = "0x4000FB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public List<MeshRenderer>[] mrList;

			[Token(Token = "0x4000FB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public int currentLod;

			[Token(Token = "0x60011D9")]
			[Address(RVA = "0x8ACCC0", Offset = "0x8ACCC0", VA = "0x8ACCC0")]
			public MaxCell()
			{
			}
		}

		[Token(Token = "0x4000F9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool drawGizmos;

		[Token(Token = "0x4000F9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LOD[] lods;

		[Token(Token = "0x4000F9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float[] distances;

		[Token(Token = "0x4000FA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public LodDistanceMode lodDistanceMode;

		[Token(Token = "0x4000FA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public LodMode lodMode;

		[Token(Token = "0x4000FA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int showLod;

		[Token(Token = "0x4000FA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool lodCulled;

		[Token(Token = "0x4000FA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float lodCullDistance;

		[Token(Token = "0x4000FA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Vector3 octreeCenter;

		[Token(Token = "0x4000FA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Vector3 octreeSize;

		[Token(Token = "0x4000FA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int maxLevels;

		[Token(Token = "0x4000FA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool search;

		[Token(Token = "0x4000FA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Cell octree;

		[Token(Token = "0x4000FAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Transform cameraMainT;

		[Token(Token = "0x60011C4")]
		[Address(RVA = "0x8AB8D4", Offset = "0x8AB8D4", VA = "0x8AB8D4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60011C5")]
		[Address(RVA = "0x8AB900", Offset = "0x8AB900", VA = "0x8AB900")]
		private void InitOctree()
		{
		}

		[Token(Token = "0x60011C6")]
		[Address(RVA = "0x8AB9AC", Offset = "0x8AB9AC", VA = "0x8AB9AC")]
		private void Start()
		{
		}

		[Token(Token = "0x60011C7")]
		[Address(RVA = "0x8ABB34", Offset = "0x8ABB34", VA = "0x8ABB34")]
		private void Update()
		{
		}

		[Token(Token = "0x60011C8")]
		[Address(RVA = "0x8ABC68", Offset = "0x8ABC68", VA = "0x8ABC68")]
		public void UpdateLods(MeshCombiner meshCombiner, int lodAmount)
		{
		}

		[Token(Token = "0x60011C9")]
		[Address(RVA = "0x8ABE74", Offset = "0x8ABE74", VA = "0x8ABE74")]
		public void UpdateDistances(MeshCombiner meshCombiner)
		{
		}

		[Token(Token = "0x60011CA")]
		[Address(RVA = "0x8AB9D8", Offset = "0x8AB9D8", VA = "0x8AB9D8")]
		public void Search()
		{
		}

		[Token(Token = "0x60011CB")]
		[Address(RVA = "0x8ABF64", Offset = "0x8ABF64", VA = "0x8ABF64")]
		public void ResetOctree()
		{
		}

		[Token(Token = "0x60011CC")]
		[Address(RVA = "0x8ABB60", Offset = "0x8ABB60", VA = "0x8ABB60")]
		public void Lod(LodMode lodMode)
		{
		}

		[Token(Token = "0x60011CD")]
		[Address(RVA = "0x8AC544", Offset = "0x8AC544", VA = "0x8AC544")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x60011CE")]
		[Address(RVA = "0x8AC67C", Offset = "0x8AC67C", VA = "0x8AC67C")]
		public CombinedLODManager()
		{
		}
	}
	[Token(Token = "0x2000339")]
	[ExecuteInEditMode]
	public class MeshCombineJobManager : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200033A")]
		public class JobSettings
		{
			[Token(Token = "0x4000FC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CombineJobMode combineJobMode;

			[Token(Token = "0x4000FC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public ThreadAmountMode threadAmountMode;

			[Token(Token = "0x4000FCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int combineMeshesPerFrame;

			[Token(Token = "0x4000FCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public bool useMultiThreading;

			[Token(Token = "0x4000FCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
			public bool useMainThread;

			[Token(Token = "0x4000FCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int customThreadAmount;

			[Token(Token = "0x4000FCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public bool showStats;

			[Token(Token = "0x60011E9")]
			[Address(RVA = "0x8ADF5C", Offset = "0x8ADF5C", VA = "0x8ADF5C")]
			public void CopySettings(JobSettings source)
			{
			}

			[Token(Token = "0x60011EA")]
			[Address(RVA = "0x8AFC4C", Offset = "0x8AFC4C", VA = "0x8AFC4C")]
			public void ReportStatus()
			{
			}

			[Token(Token = "0x60011EB")]
			[Address(RVA = "0x8AFC2C", Offset = "0x8AFC2C", VA = "0x8AFC2C")]
			public JobSettings()
			{
			}
		}

		[Token(Token = "0x200033B")]
		public enum CombineJobMode
		{
			[Token(Token = "0x4000FD0")]
			CombineAtOnce,
			[Token(Token = "0x4000FD1")]
			CombinePerFrame
		}

		[Token(Token = "0x200033C")]
		public enum ThreadAmountMode
		{
			[Token(Token = "0x4000FD3")]
			AllThreads,
			[Token(Token = "0x4000FD4")]
			HalfThreads,
			[Token(Token = "0x4000FD5")]
			Custom
		}

		[Token(Token = "0x200033D")]
		public enum ThreadState
		{
			[Token(Token = "0x4000FD7")]
			isReady,
			[Token(Token = "0x4000FD8")]
			isRunning,
			[Token(Token = "0x4000FD9")]
			hasError
		}

		[Token(Token = "0x200033E")]
		public class MeshCombineJobsThread
		{
			[Token(Token = "0x4000FDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int threadId;

			[Token(Token = "0x4000FDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public ThreadState threadState;

			[Token(Token = "0x4000FDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Queue<MeshCombineJob> meshCombineJobs;

			[Token(Token = "0x60011EC")]
			[Address(RVA = "0x8AD1EC", Offset = "0x8AD1EC", VA = "0x8AD1EC")]
			public MeshCombineJobsThread(int threadId)
			{
			}

			[Token(Token = "0x60011ED")]
			[Address(RVA = "0x8AE960", Offset = "0x8AE960", VA = "0x8AE960")]
			public void ExecuteJobsThread(object state)
			{
			}
		}

		[Token(Token = "0x200033F")]
		public class MeshCombineJob
		{
			[Token(Token = "0x4000FDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MeshCombiner meshCombiner;

			[Token(Token = "0x4000FDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public MeshObjectsHolder meshObjectsHolder;

			[Token(Token = "0x4000FDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform parent;

			[Token(Token = "0x4000FE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 position;

			[Token(Token = "0x4000FE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public int startIndex;

			[Token(Token = "0x4000FE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public int endIndex;

			[Token(Token = "0x4000FE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public bool firstMesh;

			[Token(Token = "0x4000FE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
			public bool intersectsSurface;

			[Token(Token = "0x4000FE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public int backFaceTrianglesRemoved;

			[Token(Token = "0x4000FE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public int trianglesRemoved;

			[Token(Token = "0x60011EE")]
			[Address(RVA = "0x8AE688", Offset = "0x8AE688", VA = "0x8AE688")]
			public MeshCombineJob(MeshCombiner meshCombiner, MeshObjectsHolder meshObjectsHolder, Transform parent, Vector3 position, int startIndex, int length, bool firstMesh, bool intersectsSurface)
			{
			}
		}

		[Token(Token = "0x2000340")]
		public class NewMeshObject
		{
			[Token(Token = "0x4000FE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MeshCombineJob meshCombineJob;

			[Token(Token = "0x4000FE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public MeshCache.SubMeshCache newMeshCache;

			[Token(Token = "0x4000FE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool allSkipped;

			[Token(Token = "0x4000FEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Vector3 newPosition;

			[Token(Token = "0x4000FEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private byte[] vertexIsBelow;

			[Token(Token = "0x4000FEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private readonly byte belowSurface;

			[Token(Token = "0x4000FED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
			private readonly byte aboveSurface;

			[Token(Token = "0x60011EF")]
			[Address(RVA = "0x8AFE98", Offset = "0x8AFE98", VA = "0x8AFE98")]
			public NewMeshObject()
			{
			}

			[Token(Token = "0x60011F0")]
			[Address(RVA = "0x8AFF18", Offset = "0x8AFF18", VA = "0x8AFF18")]
			public void Combine(MeshCombineJob meshCombineJob)
			{
			}

			[Token(Token = "0x60011F1")]
			private void HasArray<T>(ref bool hasNewArray, bool hasArray, ref T[] newArray, Array array, int vertexCount, int totalVertices)
			{
			}

			[Token(Token = "0x60011F2")]
			[Address(RVA = "0x8B0CE8", Offset = "0x8B0CE8", VA = "0x8B0CE8")]
			public void RemoveTrianglesBelowSurface(Transform t, MeshCombineJob meshCombineJob)
			{
			}

			[Token(Token = "0x60011F3")]
			[Address(RVA = "0x8B09C8", Offset = "0x8B09C8", VA = "0x8B09C8")]
			public void RemoveBackFaceTriangles()
			{
			}

			[Token(Token = "0x60011F4")]
			[Address(RVA = "0x8B1050", Offset = "0x8B1050", VA = "0x8B1050")]
			private void ArrangeTriangles()
			{
			}

			[Token(Token = "0x60011F5")]
			[Address(RVA = "0x8AF1DC", Offset = "0x8AF1DC", VA = "0x8AF1DC")]
			public void CreateMesh()
			{
			}
		}

		[Token(Token = "0x4000FB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static MeshCombineJobManager instance;

		[Token(Token = "0x4000FB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public JobSettings jobSettings;

		[NonSerialized]
		[Token(Token = "0x4000FB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<NewMeshObject> newMeshObjectsPool;

		[Token(Token = "0x4000FBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Dictionary<Mesh, MeshCache> meshCacheDictionary;

		[NonSerialized]
		[Token(Token = "0x4000FBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int totalNewMeshObjects;

		[Token(Token = "0x4000FBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Queue<NewMeshObject> newMeshObjectsDone;

		[Token(Token = "0x4000FBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Queue<NewMeshObject> newMeshObjectsDoneThread;

		[Token(Token = "0x4000FBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Queue<MeshCombineJob> meshCombineJobs;

		[Token(Token = "0x4000FBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public MeshCombineJobsThread[] meshCombineJobsThreads;

		[Token(Token = "0x4000FC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int cores;

		[Token(Token = "0x4000FC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int threadAmount;

		[Token(Token = "0x4000FC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int startThreadId;

		[Token(Token = "0x4000FC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public int endThreadId;

		[Token(Token = "0x4000FC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool abort;

		[Token(Token = "0x4000FC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private MeshCache.SubMeshCache tempMeshCache;

		[Token(Token = "0x4000FC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Ray ray;

		[Token(Token = "0x4000FC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private RaycastHit hitInfo;

		[Token(Token = "0x60011DA")]
		[Address(RVA = "0x8ACCC8", Offset = "0x8ACCC8", VA = "0x8ACCC8")]
		public static MeshCombineJobManager CreateInstance(MeshCombiner meshCombiner, GameObject instantiatePrefab)
		{
			return null;
		}

		[Token(Token = "0x60011DB")]
		[Address(RVA = "0x8AD02C", Offset = "0x8AD02C", VA = "0x8AD02C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60011DC")]
		[Address(RVA = "0x8AD078", Offset = "0x8AD078", VA = "0x8AD078")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60011DD")]
		[Address(RVA = "0x8AD0E8", Offset = "0x8AD0E8", VA = "0x8AD0E8")]
		public void Init()
		{
		}

		[Token(Token = "0x60011DE")]
		[Address(RVA = "0x8AD27C", Offset = "0x8AD27C", VA = "0x8AD27C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60011DF")]
		[Address(RVA = "0x8AD280", Offset = "0x8AD280", VA = "0x8AD280")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60011E0")]
		[Address(RVA = "0x8AD5B0", Offset = "0x8AD5B0", VA = "0x8AD5B0")]
		private void Update()
		{
		}

		[Token(Token = "0x60011E1")]
		[Address(RVA = "0x8AD5D8", Offset = "0x8AD5D8", VA = "0x8AD5D8")]
		private void MyUpdate()
		{
		}

		[Token(Token = "0x60011E2")]
		[Address(RVA = "0x8ACDF0", Offset = "0x8ACDF0", VA = "0x8ACDF0")]
		public void SetJobMode(JobSettings newJobSettings)
		{
		}

		[Token(Token = "0x60011E3")]
		[Address(RVA = "0x8ADF98", Offset = "0x8ADF98", VA = "0x8ADF98")]
		public void AddJob(MeshCombiner meshCombiner, MeshObjectsHolder meshObjectsHolder, Transform parent, Vector3 position)
		{
		}

		[Token(Token = "0x60011E4")]
		[Address(RVA = "0x8AE744", Offset = "0x8AE744", VA = "0x8AE744")]
		public int MeshIntersectsSurface(MeshCombiner meshCombiner, CachedGameObject cachedGO)
		{
			return default(int);
		}

		[Token(Token = "0x60011E5")]
		[Address(RVA = "0x8AD2D4", Offset = "0x8AD2D4", VA = "0x8AD2D4")]
		public void AbortJobs()
		{
		}

		[Token(Token = "0x60011E6")]
		[Address(RVA = "0x8AD654", Offset = "0x8AD654", VA = "0x8AD654")]
		public void ExecuteJobs()
		{
		}

		[Token(Token = "0x60011E7")]
		[Address(RVA = "0x8ADC18", Offset = "0x8ADC18", VA = "0x8ADC18")]
		public void CombineMeshesDone()
		{
		}

		[Token(Token = "0x60011E8")]
		[Address(RVA = "0x8AF9C8", Offset = "0x8AF9C8", VA = "0x8AF9C8")]
		public MeshCombineJobManager()
		{
		}
	}
	[Token(Token = "0x2000341")]
	public class MeshCache
	{
		[Token(Token = "0x2000342")]
		public class SubMeshCache
		{
			[Token(Token = "0x4000FF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3[] vertices;

			[Token(Token = "0x4000FF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3[] normals;

			[Token(Token = "0x4000FF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector4[] tangents;

			[Token(Token = "0x4000FF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector2[] uv;

			[Token(Token = "0x4000FF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector2[] uv2;

			[Token(Token = "0x4000FF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Vector2[] uv3;

			[Token(Token = "0x4000FF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Vector2[] uv4;

			[Token(Token = "0x4000FF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Color32[] colors32;

			[Token(Token = "0x4000FF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public int[] triangles;

			[Token(Token = "0x4000FFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public bool hasNormals;

			[Token(Token = "0x4000FFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
			public bool hasTangents;

			[Token(Token = "0x4000FFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
			public bool hasUv;

			[Token(Token = "0x4000FFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
			public bool hasUv2;

			[Token(Token = "0x4000FFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public bool hasUv3;

			[Token(Token = "0x4000FFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
			public bool hasUv4;

			[Token(Token = "0x4001000")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
			public bool hasColors;

			[Token(Token = "0x4001001")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public int vertexCount;

			[Token(Token = "0x4001002")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			public int triangleCount;

			[Token(Token = "0x60011F7")]
			[Address(RVA = "0x8B092C", Offset = "0x8B092C", VA = "0x8B092C")]
			public SubMeshCache()
			{
			}

			[Token(Token = "0x60011F8")]
			[Address(RVA = "0x8B111C", Offset = "0x8B111C", VA = "0x8B111C")]
			public void CopySubMeshCache(SubMeshCache source)
			{
			}

			[Token(Token = "0x60011F9")]
			public void CopyArray<T>(Array sourceArray, ref T[] destinationArray, int vertexCount)
			{
			}

			[Token(Token = "0x60011FA")]
			[Address(RVA = "0x8B1888", Offset = "0x8B1888", VA = "0x8B1888")]
			public SubMeshCache(Mesh mesh, int subMeshIndex)
			{
			}

			[Token(Token = "0x60011FB")]
			[Address(RVA = "0x8B17A0", Offset = "0x8B17A0", VA = "0x8B17A0")]
			public SubMeshCache(Mesh mesh, bool assignTriangles)
			{
			}

			[Token(Token = "0x60011FC")]
			[Address(RVA = "0x8B18D8", Offset = "0x8B18D8", VA = "0x8B18D8")]
			public void CheckHasArrays()
			{
			}

			[Token(Token = "0x60011FD")]
			[Address(RVA = "0x8B09BC", Offset = "0x8B09BC", VA = "0x8B09BC")]
			public void ResetHasBooleans()
			{
			}

			[Token(Token = "0x60011FE")]
			[Address(RVA = "0x8B0934", Offset = "0x8B0934", VA = "0x8B0934")]
			public void Init(bool initTriangles = true)
			{
			}

			[Token(Token = "0x60011FF")]
			[Address(RVA = "0x8B12E4", Offset = "0x8B12E4", VA = "0x8B12E4")]
			public void RebuildVertexBuffer(SubMeshCache sub, bool resizeArrays)
			{
			}
		}

		[Token(Token = "0x4000FEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mesh mesh;

		[Token(Token = "0x4000FEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SubMeshCache[] subMeshCache;

		[Token(Token = "0x4000FF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int subMeshCount;

		[Token(Token = "0x60011F6")]
		[Address(RVA = "0x8AE4D4", Offset = "0x8AE4D4", VA = "0x8AE4D4")]
		public MeshCache(Mesh mesh)
		{
		}
	}
	[Token(Token = "0x2000343")]
	public static class MeshExtensionAlloc
	{
		[Token(Token = "0x6001200")]
		[Address(RVA = "0x8B1984", Offset = "0x8B1984", VA = "0x8B1984")]
		public static void ApplyVertices(Mesh mesh, Vector3[] vertices, int length)
		{
		}

		[Token(Token = "0x6001201")]
		[Address(RVA = "0x8B1A0C", Offset = "0x8B1A0C", VA = "0x8B1A0C")]
		public static void ApplyNormals(Mesh mesh, Vector3[] normals, int length)
		{
		}

		[Token(Token = "0x6001202")]
		[Address(RVA = "0x8B1A94", Offset = "0x8B1A94", VA = "0x8B1A94")]
		public static void ApplyTangents(Mesh mesh, Vector4[] tangents, int length)
		{
		}

		[Token(Token = "0x6001203")]
		[Address(RVA = "0x8B1B1C", Offset = "0x8B1B1C", VA = "0x8B1B1C")]
		public static void ApplyUvs(Mesh mesh, int channel, Vector2[] uvs, int length)
		{
		}

		[Token(Token = "0x6001204")]
		[Address(RVA = "0x8B1C30", Offset = "0x8B1C30", VA = "0x8B1C30")]
		public static void ApplyColors32(Mesh mesh, Color32[] colors, int length)
		{
		}

		[Token(Token = "0x6001205")]
		[Address(RVA = "0x8B1CB8", Offset = "0x8B1CB8", VA = "0x8B1CB8")]
		public static void ApplyTriangles(Mesh mesh, int[] triangles, int length)
		{
		}
	}
	[Token(Token = "0x2000344")]
	[ExecuteInEditMode]
	public class MeshCombiner : MonoBehaviour
	{
		[Token(Token = "0x2000345")]
		public enum HandleComponent
		{
			[Token(Token = "0x4001043")]
			Disable,
			[Token(Token = "0x4001044")]
			Destroy
		}

		[Token(Token = "0x2000346")]
		public enum ObjectCenter
		{
			[Token(Token = "0x4001046")]
			BoundsCenter,
			[Token(Token = "0x4001047")]
			TransformPosition
		}

		[Token(Token = "0x2000347")]
		public enum BackFaceTriangleMode
		{
			[Token(Token = "0x4001049")]
			Box,
			[Token(Token = "0x400104A")]
			Direction
		}

		[Token(Token = "0x2000348")]
		public delegate void DefaultMethod();

		[Token(Token = "0x2000349")]
		public enum RebakeLightingMode
		{
			[Token(Token = "0x400104C")]
			CopyLightmapUvs,
			[Token(Token = "0x400104D")]
			RegenarateLightmapUvs
		}

		[Serializable]
		[Token(Token = "0x200034A")]
		public class SearchOptions
		{
			[Token(Token = "0x200034B")]
			public enum ComponentCondition
			{
				[Token(Token = "0x4001067")]
				And,
				[Token(Token = "0x4001068")]
				Or
			}

			[Token(Token = "0x400104E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject parent;

			[Token(Token = "0x400104F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ObjectCenter objectCenter;

			[Token(Token = "0x4001050")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public bool useSearchBox;

			[Token(Token = "0x4001051")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Bounds searchBoxBounds;

			[Token(Token = "0x4001052")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public bool searchBoxSquare;

			[Token(Token = "0x4001053")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public Vector3 searchBoxPivot;

			[Token(Token = "0x4001054")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Vector3 searchBoxSize;

			[Token(Token = "0x4001055")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public bool useMaxBoundsFactor;

			[Token(Token = "0x4001056")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public float maxBoundsFactor;

			[Token(Token = "0x4001057")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public bool useVertexInputLimit;

			[Token(Token = "0x4001058")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public int vertexInputLimit;

			[Token(Token = "0x4001059")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			public bool useVertexInputLimitLod;

			[Token(Token = "0x400105A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public int vertexInputLimitLod;

			[Token(Token = "0x400105B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			public bool useLayerMask;

			[Token(Token = "0x400105C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public LayerMask layerMask;

			[Token(Token = "0x400105D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			public bool useTag;

			[Token(Token = "0x400105E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public string tag;

			[Token(Token = "0x400105F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public bool useNameContains;

			[Token(Token = "0x4001060")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public List<string> nameContainList;

			[Token(Token = "0x4001061")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public bool onlyActive;

			[Token(Token = "0x4001062")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
			public bool onlyStatic;

			[Token(Token = "0x4001063")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x92")]
			public bool useComponentsFilter;

			[Token(Token = "0x4001064")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
			public ComponentCondition componentCondition;

			[Token(Token = "0x4001065")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			public List<string> componentNameList;

			[Token(Token = "0x6001231")]
			[Address(RVA = "0x8B5FD0", Offset = "0x8B5FD0", VA = "0x8B5FD0")]
			public SearchOptions(GameObject parent)
			{
			}

			[Token(Token = "0x6001232")]
			[Address(RVA = "0x8B2D78", Offset = "0x8B2D78", VA = "0x8B2D78")]
			public void GetSearchBoxBounds()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200034C")]
		public class LODGroupSettings
		{
			[Token(Token = "0x4001069")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LODSettings[] lodSettings;

			[Token(Token = "0x6001233")]
			[Address(RVA = "0x8B27B8", Offset = "0x8B27B8", VA = "0x8B27B8")]
			public LODGroupSettings(int lodParentIndex)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200034D")]
		public class LODSettings
		{
			[Token(Token = "0x400106A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float screenRelativeTransitionHeight;

			[Token(Token = "0x400106B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float fadeTransitionWidth;

			[Token(Token = "0x6001234")]
			[Address(RVA = "0x8B60CC", Offset = "0x8B60CC", VA = "0x8B60CC")]
			public LODSettings(float screenRelativeTransitionHeight)
			{
			}
		}

		[Token(Token = "0x200034E")]
		public class LodParentHolder
		{
			[Token(Token = "0x400106C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject go;

			[Token(Token = "0x400106D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform t;

			[Token(Token = "0x400106E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool found;

			[Token(Token = "0x400106F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int[] lods;

			[Token(Token = "0x6001235")]
			[Address(RVA = "0x8B49A8", Offset = "0x8B49A8", VA = "0x8B49A8")]
			public LodParentHolder(int lodCount)
			{
			}

			[Token(Token = "0x6001236")]
			[Address(RVA = "0x8B4238", Offset = "0x8B4238", VA = "0x8B4238")]
			public void Create(MeshCombiner meshCombiner, int lodParentIndex)
			{
			}

			[Token(Token = "0x6001237")]
			[Address(RVA = "0x8B4A10", Offset = "0x8B4A10", VA = "0x8B4A10")]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x4001003")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static List<MeshCombiner> instances;

		[Token(Token = "0x4001005")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MeshCombineJobManager.JobSettings jobSettings;

		[Token(Token = "0x4001006")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LODGroupSettings[] lodGroupsSettings;

		[Token(Token = "0x4001007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject instantiatePrefab;

		[Token(Token = "0x4001008")]
		public const int maxLodCount = 8;

		[Token(Token = "0x4001009")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string saveMeshesFolder;

		[Token(Token = "0x400100A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ObjectOctree.Cell octree;

		[Token(Token = "0x400100B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<ObjectOctree.MaxCell> changedCells;

		[NonSerialized]
		[Token(Token = "0x400100C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool octreeContainsObjects;

		[Token(Token = "0x400100D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool useCells;

		[Token(Token = "0x400100E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int cellSize;

		[Token(Token = "0x400100F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Vector3 cellOffset;

		[Token(Token = "0x4001010")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public bool useVertexOutputLimit;

		[Token(Token = "0x4001011")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int vertexOutputLimit;

		[Token(Token = "0x4001012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public RebakeLightingMode rebakeLightingMode;

		[Token(Token = "0x4001013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool copyBakedLighting;

		[Token(Token = "0x4001014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		public bool validCopyBakedLighting;

		[Token(Token = "0x4001015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
		public bool rebakeLighting;

		[Token(Token = "0x4001016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x73")]
		public bool validRebakeLighting;

		[Token(Token = "0x4001017")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public int outputLayer;

		[Token(Token = "0x4001018")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float scaleInLightmap;

		[Token(Token = "0x4001019")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public bool addMeshColliders;

		[Token(Token = "0x400101A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
		public bool makeMeshesUnreadable;

		[Token(Token = "0x400101B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7E")]
		public bool removeTrianglesBelowSurface;

		[Token(Token = "0x400101C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public LayerMask surfaceLayerMask;

		[Token(Token = "0x400101D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public int maxSurfaceHeight;

		[Token(Token = "0x400101E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool removeBackFaceTriangles;

		[Token(Token = "0x400101F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public BackFaceTriangleMode backFaceTriangleMode;

		[Token(Token = "0x4001020")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Vector3 backFaceDirection;

		[Token(Token = "0x4001021")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public Bounds backFaceBounds;

		[Token(Token = "0x4001022")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public bool twoSidedShadows;

		[Token(Token = "0x4001023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB5")]
		public bool combineInRuntime;

		[Token(Token = "0x4001024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB6")]
		public bool combineOnStart;

		[Token(Token = "0x4001025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB7")]
		public bool useCombineSwapKey;

		[Token(Token = "0x4001026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public KeyCode combineSwapKey;

		[Token(Token = "0x4001027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public HandleComponent originalMeshRenderers;

		[Token(Token = "0x4001028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public HandleComponent originalLODGroups;

		[Token(Token = "0x4001029")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public SearchOptions searchOptions;

		[Token(Token = "0x400102A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Vector3 oldPosition;

		[Token(Token = "0x400102B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public Vector3 oldScale;

		[Token(Token = "0x400102C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public LodParentHolder[] lodParentHolders;

		[NonSerialized]
		[Token(Token = "0x400102D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public List<CachedGameObject> foundObjects;

		[NonSerialized]
		[Token(Token = "0x400102E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public List<CachedLodGameObject> foundLodObjects;

		[Token(Token = "0x400102F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private HashSet<Transform> uniqueLodObjects;

		[Token(Token = "0x4001030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private HashSet<LODGroup> foundLodGroups;

		[Token(Token = "0x4001031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public List<Mesh> unreadableMeshes;

		[Token(Token = "0x4001032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public int mrDisabledCount;

		[Token(Token = "0x4001033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		public bool combined;

		[Token(Token = "0x4001034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11D")]
		public bool activeOriginal;

		[Token(Token = "0x4001035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11E")]
		public bool combinedActive;

		[Token(Token = "0x4001036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11F")]
		public bool drawGizmos;

		[Token(Token = "0x4001037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public bool drawMeshBounds;

		[Token(Token = "0x4001038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		public int originalTotalVertices;

		[Token(Token = "0x4001039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public int originalTotalTriangles;

		[Token(Token = "0x400103A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		public int totalVertices;

		[Token(Token = "0x400103B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public int totalTriangles;

		[Token(Token = "0x400103C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		public int originalDrawCalls;

		[Token(Token = "0x400103D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public int newDrawCalls;

		[NonSerialized]
		[Token(Token = "0x400103E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private MeshCombiner thisInstance;

		[NonSerialized]
		[Token(Token = "0x400103F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public int jobCount;

		[Token(Token = "0x4001040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		private bool hasFoundFirstObject;

		[Token(Token = "0x4001041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private Bounds bounds;

		[Token(Token = "0x1400000E")]
		public event DefaultMethod OnCombiningReady
		{
			[Token(Token = "0x6001206")]
			[Address(RVA = "0x8B1D40", Offset = "0x8B1D40", VA = "0x8B1D40")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001207")]
			[Address(RVA = "0x8B1DDC", Offset = "0x8B1DDC", VA = "0x8B1DDC")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001208")]
		[Address(RVA = "0x8AF9AC", Offset = "0x8AF9AC", VA = "0x8AF9AC")]
		public void ExecuteOnCombiningReady()
		{
		}

		[Token(Token = "0x6001209")]
		[Address(RVA = "0x8B1E78", Offset = "0x8B1E78", VA = "0x8B1E78")]
		private void Awake()
		{
		}

		[Token(Token = "0x600120A")]
		[Address(RVA = "0x8B1F48", Offset = "0x8B1F48", VA = "0x8B1F48")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600120B")]
		[Address(RVA = "0x8B2058", Offset = "0x8B2058", VA = "0x8B2058")]
		private void Start()
		{
		}

		[Token(Token = "0x600120C")]
		[Address(RVA = "0x8B238C", Offset = "0x8B238C", VA = "0x8B238C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600120D")]
		[Address(RVA = "0x8B24BC", Offset = "0x8B24BC", VA = "0x8B24BC")]
		public static MeshCombiner GetInstance(string name)
		{
			return null;
		}

		[Token(Token = "0x600120E")]
		[Address(RVA = "0x8B25F0", Offset = "0x8B25F0", VA = "0x8B25F0")]
		public void CopyJobSettingsToAllInstances()
		{
		}

		[Token(Token = "0x600120F")]
		[Address(RVA = "0x8B2178", Offset = "0x8B2178", VA = "0x8B2178")]
		public void InitMeshCombineJobManager()
		{
		}

		[Token(Token = "0x6001210")]
		[Address(RVA = "0x8B26D4", Offset = "0x8B26D4", VA = "0x8B26D4")]
		public void CreateLodGroupsSettings()
		{
		}

		[Token(Token = "0x6001211")]
		[Address(RVA = "0x8B2218", Offset = "0x8B2218", VA = "0x8B2218")]
		private void StartRuntime()
		{
		}

		[Token(Token = "0x6001212")]
		[Address(RVA = "0x8B2A9C", Offset = "0x8B2A9C", VA = "0x8B2A9C")]
		public void DestroyCombinedObjects()
		{
		}

		[Token(Token = "0x6001213")]
		[Address(RVA = "0x8B2B0C", Offset = "0x8B2B0C", VA = "0x8B2B0C")]
		private void Reset()
		{
		}

		[Token(Token = "0x6001214")]
		[Address(RVA = "0x8B2EC4", Offset = "0x8B2EC4", VA = "0x8B2EC4")]
		public void AddObjects(List<Transform> transforms, bool useSearchOptions, bool checkForLODGroups = true)
		{
		}

		[Token(Token = "0x6001215")]
		[Address(RVA = "0x8B38A0", Offset = "0x8B38A0", VA = "0x8B38A0")]
		public void AddObjectsAutomatically()
		{
		}

		[Token(Token = "0x6001216")]
		[Address(RVA = "0x8B3AA8", Offset = "0x8B3AA8", VA = "0x8B3AA8")]
		public void AddFoundObjectsToOctree()
		{
		}

		[Token(Token = "0x6001217")]
		[Address(RVA = "0x8B2CF0", Offset = "0x8B2CF0", VA = "0x8B2CF0")]
		public void ResetOctree()
		{
		}

		[Token(Token = "0x6001218")]
		[Address(RVA = "0x8B3E98", Offset = "0x8B3E98", VA = "0x8B3E98")]
		public void CalcOctreeSize(Bounds bounds)
		{
		}

		[Token(Token = "0x6001219")]
		[Address(RVA = "0x8B4138", Offset = "0x8B4138", VA = "0x8B4138")]
		public void ApplyChanges()
		{
		}

		[Token(Token = "0x600121A")]
		[Address(RVA = "0x8B28EC", Offset = "0x8B28EC", VA = "0x8B28EC")]
		public void CombineAll()
		{
		}

		[Token(Token = "0x600121B")]
		[Address(RVA = "0x8B2DDC", Offset = "0x8B2DDC", VA = "0x8B2DDC")]
		private void InitAndResetLodParentsCount()
		{
		}

		[Token(Token = "0x600121C")]
		[Address(RVA = "0x8B396C", Offset = "0x8B396C", VA = "0x8B396C")]
		public void AddObjectsFromSearchParent()
		{
		}

		[Token(Token = "0x600121D")]
		[Address(RVA = "0x8B3100", Offset = "0x8B3100", VA = "0x8B3100")]
		private void AddLodGroups(LODGroup[] lodGroups, bool useSearchOptions = true)
		{
		}

		[Token(Token = "0x600121E")]
		[Address(RVA = "0x8B3628", Offset = "0x8B3628", VA = "0x8B3628")]
		private void AddTransforms(Transform[] transforms, bool useSearchOptions = true)
		{
		}

		[Token(Token = "0x600121F")]
		[Address(RVA = "0x8B4A3C", Offset = "0x8B4A3C", VA = "0x8B4A3C")]
		private CachedGameObject ValidObject(Transform t, bool isLodObject, bool useSearchOptions = true)
		{
			return null;
		}

		[Token(Token = "0x6001220")]
		[Address(RVA = "0x8B2AE8", Offset = "0x8B2AE8", VA = "0x8B2AE8")]
		public void RestoreOriginalRenderersAndLODGroups()
		{
		}

		[Token(Token = "0x6001221")]
		[Address(RVA = "0x8B50BC", Offset = "0x8B50BC", VA = "0x8B50BC")]
		public void GetOriginalRenderersAndLODGroups()
		{
		}

		[Token(Token = "0x6001222")]
		[Address(RVA = "0x8B549C", Offset = "0x8B549C", VA = "0x8B549C")]
		public void SwapCombine()
		{
		}

		[Token(Token = "0x6001223")]
		[Address(RVA = "0x8B4370", Offset = "0x8B4370", VA = "0x8B4370")]
		public void ExecuteHandleObjects(bool active, HandleComponent handleOriginalObjects, HandleComponent handleOriginalLodGroups)
		{
		}

		[Token(Token = "0x6001224")]
		[Address(RVA = "0x8B54D8", Offset = "0x8B54D8", VA = "0x8B54D8")]
		private void AddDisabledMeshRenderer(CachedGameObject cachedGO)
		{
		}

		[Token(Token = "0x6001225")]
		[Address(RVA = "0x8B55E8", Offset = "0x8B55E8", VA = "0x8B55E8")]
		private void AddDisabledLodMeshRenderer(CachedLodGameObject cachedLodGO)
		{
		}

		[Token(Token = "0x6001226")]
		[Address(RVA = "0x8B56F8", Offset = "0x8B56F8", VA = "0x8B56F8")]
		private void RemoveDisabledMeshRenderer(CachedGameObject cachedGO)
		{
		}

		[Token(Token = "0x6001227")]
		[Address(RVA = "0x8B5818", Offset = "0x8B5818", VA = "0x8B5818")]
		private void RemoveDisabledLodMeshRenderer(CachedLodGameObject cachedLodGO)
		{
		}

		[Token(Token = "0x6001228")]
		[Address(RVA = "0x8B5938", Offset = "0x8B5938", VA = "0x8B5938")]
		public void MakeMeshesReadableInImportSettings()
		{
		}

		[Token(Token = "0x6001229")]
		[Address(RVA = "0x8B593C", Offset = "0x8B593C", VA = "0x8B593C")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x600122A")]
		[Address(RVA = "0x8B3C98", Offset = "0x8B3C98", VA = "0x8B3C98")]
		private void LogOctreeInfo()
		{
		}

		[Token(Token = "0x600122B")]
		[Address(RVA = "0x8B5BFC", Offset = "0x8B5BFC", VA = "0x8B5BFC")]
		public MeshCombiner()
		{
		}
	}
	[Token(Token = "0x200034F")]
	[ExecuteInEditMode]
	public class ObjectSpawner : MonoBehaviour
	{
		[Token(Token = "0x4001070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] objects;

		[Token(Token = "0x4001071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float density;

		[Token(Token = "0x4001072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector2 scaleRange;

		[Token(Token = "0x4001073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 rotationRange;

		[Token(Token = "0x4001074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector2 heightRange;

		[Token(Token = "0x4001075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float scaleMulti;

		[Token(Token = "0x4001076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float resolutionPerMeter;

		[Token(Token = "0x4001077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool spawnInRuntime;

		[Token(Token = "0x4001078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		public bool spawn;

		[Token(Token = "0x4001079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		public bool deleteChildren;

		[Token(Token = "0x400107A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform t;

		[Token(Token = "0x6001238")]
		[Address(RVA = "0x8B60F4", Offset = "0x8B60F4", VA = "0x8B60F4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001239")]
		[Address(RVA = "0x8B65B4", Offset = "0x8B65B4", VA = "0x8B65B4")]
		private void Update()
		{
		}

		[Token(Token = "0x600123A")]
		[Address(RVA = "0x8B65F0", Offset = "0x8B65F0", VA = "0x8B65F0")]
		public void DeleteChildren()
		{
		}

		[Token(Token = "0x600123B")]
		[Address(RVA = "0x8B6130", Offset = "0x8B6130", VA = "0x8B6130")]
		public void Spawn()
		{
		}

		[Token(Token = "0x600123C")]
		[Address(RVA = "0x8B6740", Offset = "0x8B6740", VA = "0x8B6740")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x600123D")]
		[Address(RVA = "0x8B67EC", Offset = "0x8B67EC", VA = "0x8B67EC")]
		public ObjectSpawner()
		{
		}
	}
	[Token(Token = "0x2000350")]
	public class RemoveGeometryBelowTerrain : MonoBehaviour
	{
		[Token(Token = "0x400107B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int totalTriangles;

		[Token(Token = "0x400107C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int removeTriangles;

		[Token(Token = "0x400107D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int skippedObjects;

		[Token(Token = "0x400107E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<Transform> terrains;

		[Token(Token = "0x400107F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<Transform> meshTerrains;

		[Token(Token = "0x4001080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Bounds[] terrainBounds;

		[Token(Token = "0x4001081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Bounds[] meshBounds;

		[Token(Token = "0x4001082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Terrain[] terrainComponents;

		[Token(Token = "0x4001083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Terrain[] terrainArray;

		[Token(Token = "0x4001084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Bounds[] terrainBoundsArray;

		[Token(Token = "0x4001085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private MeshRenderer[] mrs;

		[Token(Token = "0x4001086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Mesh[] meshTerrainComponents;

		[Token(Token = "0x4001087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Mesh[] meshArray;

		[Token(Token = "0x4001088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool runOnStart;

		[Token(Token = "0x600123E")]
		[Address(RVA = "0x8B6830", Offset = "0x8B6830", VA = "0x8B6830")]
		private void Start()
		{
		}

		[Token(Token = "0x600123F")]
		[Address(RVA = "0x8B6860", Offset = "0x8B6860", VA = "0x8B6860")]
		public void Remove(GameObject go)
		{
		}

		[Token(Token = "0x6001240")]
		[Address(RVA = "0x8B6BBC", Offset = "0x8B6BBC", VA = "0x8B6BBC")]
		public void RemoveMesh(Transform t, Mesh mesh)
		{
		}

		[Token(Token = "0x6001241")]
		[Address(RVA = "0x8B6D84", Offset = "0x8B6D84", VA = "0x8B6D84")]
		public bool IsMeshUnderTerrain(Transform t, Mesh mesh)
		{
			return default(bool);
		}

		[Token(Token = "0x6001242")]
		[Address(RVA = "0x8B7140", Offset = "0x8B7140", VA = "0x8B7140")]
		public void GetTerrainComponents()
		{
		}

		[Token(Token = "0x6001243")]
		[Address(RVA = "0x8B7268", Offset = "0x8B7268", VA = "0x8B7268")]
		public void GetMeshRenderersAndComponents()
		{
		}

		[Token(Token = "0x6001244")]
		[Address(RVA = "0x8B7434", Offset = "0x8B7434", VA = "0x8B7434")]
		public void CreateTerrainBounds()
		{
		}

		[Token(Token = "0x6001245")]
		[Address(RVA = "0x8B76A4", Offset = "0x8B76A4", VA = "0x8B76A4")]
		public void MakeIntersectLists(Bounds bounds)
		{
		}

		[Token(Token = "0x6001246")]
		[Address(RVA = "0x8B7C38", Offset = "0x8B7C38", VA = "0x8B7C38")]
		public int InterectTerrain(Vector3 pos)
		{
			return default(int);
		}

		[Token(Token = "0x6001247")]
		[Address(RVA = "0x8B7CCC", Offset = "0x8B7CCC", VA = "0x8B7CCC")]
		public int InterectMesh(Vector3 pos)
		{
			return default(int);
		}

		[Token(Token = "0x6001248")]
		[Address(RVA = "0x8B7D60", Offset = "0x8B7D60", VA = "0x8B7D60")]
		public float GetTerrainHeight(Vector3 pos)
		{
			return default(float);
		}

		[Token(Token = "0x6001249")]
		[Address(RVA = "0x8B6E40", Offset = "0x8B6E40", VA = "0x8B6E40")]
		public void RemoveTriangles(Transform t, List<int> newTriangles, Vector3[] vertices)
		{
		}

		[Token(Token = "0x600124A")]
		[Address(RVA = "0x8B7E44", Offset = "0x8B7E44", VA = "0x8B7E44")]
		public RemoveGeometryBelowTerrain()
		{
		}
	}
	[Token(Token = "0x2000351")]
	public class SwapCombineKey : MonoBehaviour
	{
		[Token(Token = "0x4001089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static SwapCombineKey instance;

		[Token(Token = "0x400108A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<MeshCombiner> meshCombinerList;

		[Token(Token = "0x400108B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private MeshCombiner meshCombiner;

		[Token(Token = "0x400108C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GUIStyle textStyle;

		[Token(Token = "0x600124B")]
		[Address(RVA = "0x8B7EE4", Offset = "0x8B7EE4", VA = "0x8B7EE4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600124C")]
		[Address(RVA = "0x8B7FDC", Offset = "0x8B7FDC", VA = "0x8B7FDC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600124D")]
		[Address(RVA = "0x8B8024", Offset = "0x8B8024", VA = "0x8B8024")]
		private void Update()
		{
		}

		[Token(Token = "0x600124E")]
		[Address(RVA = "0x8B8058", Offset = "0x8B8058", VA = "0x8B8058")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x600124F")]
		[Address(RVA = "0x8B8370", Offset = "0x8B8370", VA = "0x8B8370")]
		public SwapCombineKey()
		{
		}
	}
	[Token(Token = "0x2000352")]
	public class CachedComponents : MonoBehaviour
	{
		[Token(Token = "0x400108D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject go;

		[Token(Token = "0x400108E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform t;

		[Token(Token = "0x400108F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MeshRenderer mr;

		[Token(Token = "0x4001090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public MeshFilter mf;

		[Token(Token = "0x4001091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GarbageCollectMesh garbageCollectMesh;

		[Token(Token = "0x6001250")]
		[Address(RVA = "0x8B83EC", Offset = "0x8B83EC", VA = "0x8B83EC")]
		public CachedComponents()
		{
		}
	}
	[Token(Token = "0x2000353")]
	public class Console : MonoBehaviour
	{
		[Token(Token = "0x2000354")]
		public class LogEntry
		{
			[Token(Token = "0x40010A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string logString;

			[Token(Token = "0x40010A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string stackTrace;

			[Token(Token = "0x40010A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LogType logType;

			[Token(Token = "0x40010AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public int commandType;

			[Token(Token = "0x40010AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool unityLog;

			[Token(Token = "0x40010AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float tStamp;

			[Token(Token = "0x40010AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public GameObject go;

			[Token(Token = "0x40010AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public MeshCombiner meshCombiner;

			[Token(Token = "0x6001271")]
			[Address(RVA = "0x8BCC9C", Offset = "0x8BCC9C", VA = "0x8BCC9C")]
			public LogEntry(string logString, string stackTrace, LogType logType, bool unityLog = false, int commandType = 0, [Optional] GameObject go, [Optional] MeshCombiner meshCombiner)
			{
			}
		}

		[Token(Token = "0x4001092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Console instance;

		[Token(Token = "0x4001093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public KeyCode consoleKey;

		[Token(Token = "0x4001094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool logActive;

		[Token(Token = "0x4001095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		public bool showConsole;

		[Token(Token = "0x4001096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
		public bool showOnError;

		[Token(Token = "0x4001097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
		public bool combineAutomatic;

		[Token(Token = "0x4001098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool showLast;

		[Token(Token = "0x4001099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool setFocus;

		[Token(Token = "0x400109A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject selectGO;

		[Token(Token = "0x400109B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<LogEntry> logs;

		[Token(Token = "0x400109C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Rect window;

		[Token(Token = "0x400109D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Rect inputRect;

		[Token(Token = "0x400109E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Rect logRect;

		[Token(Token = "0x400109F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Rect vScrollRect;

		[Token(Token = "0x40010A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private string inputText;

		[Token(Token = "0x40010A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float scrollPos;

		[Token(Token = "0x40010A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int lines;

		[Token(Token = "0x40010A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool showUnityLog;

		[Token(Token = "0x40010A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		private bool showInputLog;

		[Token(Token = "0x40010A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private MeshCombiner[] meshCombiners;

		[Token(Token = "0x40010A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private MeshCombiner selectedMeshCombiner;

		[Token(Token = "0x6001251")]
		[Address(RVA = "0x8B83F4", Offset = "0x8B83F4", VA = "0x8B83F4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001252")]
		[Address(RVA = "0x8B84EC", Offset = "0x8B84EC", VA = "0x8B84EC")]
		private void ReportStartup()
		{
		}

		[Token(Token = "0x6001253")]
		[Address(RVA = "0x8B847C", Offset = "0x8B847C", VA = "0x8B847C")]
		private void FindMeshCombiners()
		{
		}

		[Token(Token = "0x6001254")]
		[Address(RVA = "0x8B86A0", Offset = "0x8B86A0", VA = "0x8B86A0")]
		private void ReportMeshCombiners(bool reportSelected = true)
		{
		}

		[Token(Token = "0x6001255")]
		[Address(RVA = "0x8B8A08", Offset = "0x8B8A08", VA = "0x8B8A08")]
		private void ReportMeshCombiner(MeshCombiner meshCombiner, bool foundText = false)
		{
		}

		[Token(Token = "0x6001256")]
		[Address(RVA = "0x8B87A8", Offset = "0x8B87A8", VA = "0x8B87A8")]
		public int SelectMeshCombiner(string name)
		{
			return default(int);
		}

		[Token(Token = "0x6001257")]
		[Address(RVA = "0x8B8DD4", Offset = "0x8B8DD4", VA = "0x8B8DD4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001258")]
		[Address(RVA = "0x8B8E54", Offset = "0x8B8E54", VA = "0x8B8E54")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001259")]
		[Address(RVA = "0x8B8ED4", Offset = "0x8B8ED4", VA = "0x8B8ED4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600125A")]
		[Address(RVA = "0x8B5AA4", Offset = "0x8B5AA4", VA = "0x8B5AA4")]
		public static void Log(string logString, int commandType = 0, [Optional] GameObject go, [Optional] MeshCombiner meshCombiner)
		{
		}

		[Token(Token = "0x600125B")]
		[Address(RVA = "0x8B8F1C", Offset = "0x8B8F1C", VA = "0x8B8F1C")]
		private void HandleLog(string logString, string stackTrace, LogType logType)
		{
		}

		[Token(Token = "0x600125C")]
		[Address(RVA = "0x8B9074", Offset = "0x8B9074", VA = "0x8B9074")]
		private void Update()
		{
		}

		[Token(Token = "0x600125D")]
		[Address(RVA = "0x8B905C", Offset = "0x8B905C", VA = "0x8B905C")]
		private void SetConsoleActive(bool active)
		{
		}

		[Token(Token = "0x600125E")]
		[Address(RVA = "0x8B90AC", Offset = "0x8B90AC", VA = "0x8B90AC")]
		private void ExecuteCommand(string cmd)
		{
		}

		[Token(Token = "0x600125F")]
		[Address(RVA = "0x8BB29C", Offset = "0x8BB29C", VA = "0x8BB29C")]
		private void DirSort()
		{
		}

		[Token(Token = "0x6001260")]
		[Address(RVA = "0x8BB0F8", Offset = "0x8BB0F8", VA = "0x8BB0F8")]
		private void DirSort(string name)
		{
		}

		[Token(Token = "0x6001261")]
		[Address(RVA = "0x8BB2F4", Offset = "0x8BB2F4", VA = "0x8BB2F4")]
		public void SortLog(GameObject[] gos, bool showMeshInfo = false)
		{
		}

		[Token(Token = "0x6001262")]
		[Address(RVA = "0x8BB93C", Offset = "0x8BB93C", VA = "0x8BB93C")]
		private string GetMeshInfo(GameObject go, ref int meshCount)
		{
			return null;
		}

		[Token(Token = "0x6001263")]
		[Address(RVA = "0x8BBC30", Offset = "0x8BBC30", VA = "0x8BBC30")]
		private void TimeStep(string cmd)
		{
		}

		[Token(Token = "0x6001264")]
		[Address(RVA = "0x8BBC5C", Offset = "0x8BBC5C", VA = "0x8BBC5C")]
		private void TimeScale(string cmd)
		{
		}

		[Token(Token = "0x6001265")]
		[Address(RVA = "0x8BAAEC", Offset = "0x8BAAEC", VA = "0x8BAAEC")]
		private void Clear(LogEntry log, string cmd)
		{
		}

		[Token(Token = "0x6001266")]
		[Address(RVA = "0x8BAE28", Offset = "0x8BAE28", VA = "0x8BAE28")]
		private void DirAll()
		{
		}

		[Token(Token = "0x6001267")]
		[Address(RVA = "0x8B9FF4", Offset = "0x8B9FF4", VA = "0x8B9FF4")]
		private void Dir()
		{
		}

		[Token(Token = "0x6001268")]
		[Address(RVA = "0x8BA504", Offset = "0x8BA504", VA = "0x8BA504")]
		private void Components(LogEntry log)
		{
		}

		[Token(Token = "0x6001269")]
		[Address(RVA = "0x8BBDDC", Offset = "0x8BBDDC", VA = "0x8BBDDC")]
		private void ShowPath(bool showLines = true)
		{
		}

		[Token(Token = "0x600126A")]
		[Address(RVA = "0x8BBC88", Offset = "0x8BBC88", VA = "0x8BBC88")]
		private string GetPath(GameObject go)
		{
			return null;
		}

		[Token(Token = "0x600126B")]
		[Address(RVA = "0x8BA66C", Offset = "0x8BA66C", VA = "0x8BA66C")]
		private void CD(LogEntry log, string name)
		{
		}

		[Token(Token = "0x600126C")]
		[Address(RVA = "0x8BA84C", Offset = "0x8BA84C", VA = "0x8BA84C")]
		public void SetActiveContains(string textContains, bool active)
		{
		}

		[Token(Token = "0x600126D")]
		[Address(RVA = "0x8BACE0", Offset = "0x8BACE0", VA = "0x8BACE0")]
		public void DirContains(string textContains)
		{
		}

		[Token(Token = "0x600126E")]
		[Address(RVA = "0x8BBEA8", Offset = "0x8BBEA8", VA = "0x8BBEA8")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x600126F")]
		[Address(RVA = "0x8BCB10", Offset = "0x8BCB10", VA = "0x8BCB10")]
		private void AnimateColor(Color col, LogEntry log, float multi)
		{
		}

		[Token(Token = "0x6001270")]
		[Address(RVA = "0x8BCBFC", Offset = "0x8BCBFC", VA = "0x8BCBFC")]
		public Console()
		{
		}
	}
	[Token(Token = "0x2000355")]
	public class DirectDraw : MonoBehaviour
	{
		[Token(Token = "0x40010AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private MeshRenderer[] mrs;

		[Token(Token = "0x40010B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Mesh[] meshes;

		[Token(Token = "0x40010B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Material[] mats;

		[Token(Token = "0x40010B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3[] positions;

		[Token(Token = "0x40010B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Quaternion[] rotations;

		[Token(Token = "0x6001272")]
		[Address(RVA = "0x8BCD00", Offset = "0x8BCD00", VA = "0x8BCD00")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001273")]
		[Address(RVA = "0x8BCFDC", Offset = "0x8BCFDC", VA = "0x8BCFDC")]
		private void SetMeshRenderersEnabled(bool enabled)
		{
		}

		[Token(Token = "0x6001274")]
		[Address(RVA = "0x8BD044", Offset = "0x8BD044", VA = "0x8BD044")]
		private void Update()
		{
		}

		[Token(Token = "0x6001275")]
		[Address(RVA = "0x8BD1A4", Offset = "0x8BD1A4", VA = "0x8BD1A4")]
		public DirectDraw()
		{
		}
	}
	[Token(Token = "0x2000356")]
	public class DisabledLodMeshRender : MonoBehaviour
	{
		[Token(Token = "0x40010B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public MeshCombiner meshCombiner;

		[Token(Token = "0x40010B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CachedLodGameObject cachedLodGO;

		[Token(Token = "0x6001276")]
		[Address(RVA = "0x8BD1AC", Offset = "0x8BD1AC", VA = "0x8BD1AC")]
		public DisabledLodMeshRender()
		{
		}
	}
	[Token(Token = "0x2000357")]
	public class DisabledMeshRenderer : MonoBehaviour
	{
		[Token(Token = "0x40010B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public MeshCombiner meshCombiner;

		[Token(Token = "0x40010B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CachedGameObject cachedGO;

		[Token(Token = "0x6001277")]
		[Address(RVA = "0x8BD1B4", Offset = "0x8BD1B4", VA = "0x8BD1B4")]
		public DisabledMeshRenderer()
		{
		}
	}
	[Token(Token = "0x2000358")]
	[ExecuteInEditMode]
	public class GarbageCollectMesh : MonoBehaviour
	{
		[Token(Token = "0x40010B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Mesh mesh;

		[Token(Token = "0x6001278")]
		[Address(RVA = "0x8BD1BC", Offset = "0x8BD1BC", VA = "0x8BD1BC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001279")]
		[Address(RVA = "0x8BD24C", Offset = "0x8BD24C", VA = "0x8BD24C")]
		public GarbageCollectMesh()
		{
		}
	}
	[Token(Token = "0x2000359")]
	public class AABB3
	{
		[Token(Token = "0x40010B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 min;

		[Token(Token = "0x40010BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 max;

		[Token(Token = "0x600127A")]
		[Address(RVA = "0x8BD254", Offset = "0x8BD254", VA = "0x8BD254")]
		public AABB3(Vector3 min, Vector3 max)
		{
		}
	}
	[Token(Token = "0x200035A")]
	public class Sphere3
	{
		[Token(Token = "0x40010BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 center;

		[Token(Token = "0x40010BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float radius;

		[Token(Token = "0x600127B")]
		[Address(RVA = "0x8BD2A8", Offset = "0x8BD2A8", VA = "0x8BD2A8")]
		public Sphere3()
		{
		}

		[Token(Token = "0x600127C")]
		[Address(RVA = "0x8BD2B0", Offset = "0x8BD2B0", VA = "0x8BD2B0")]
		public Sphere3(Vector3 center, float radius)
		{
		}
	}
	[Token(Token = "0x200035B")]
	public static class Mathw
	{
		[Token(Token = "0x600127D")]
		[Address(RVA = "0x8BD2F0", Offset = "0x8BD2F0", VA = "0x8BD2F0")]
		public static bool IntersectAABB3Sphere3(AABB3 box, Sphere3 sphere)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200035C")]
	public class MCS_CameraController : MonoBehaviour
	{
		[Token(Token = "0x40010BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float speed;

		[Token(Token = "0x40010BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float mouseMoveSpeed;

		[Token(Token = "0x40010BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float shiftMulti;

		[Token(Token = "0x40010C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float controlMulti;

		[Token(Token = "0x40010C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 oldMousePosition;

		[Token(Token = "0x40010C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject cameraMountGO;

		[Token(Token = "0x40010C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject cameraChildGO;

		[Token(Token = "0x40010C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform cameraMountT;

		[Token(Token = "0x40010C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform cameraChildT;

		[Token(Token = "0x40010C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform t;

		[Token(Token = "0x600127E")]
		[Address(RVA = "0x8BD3A4", Offset = "0x8BD3A4", VA = "0x8BD3A4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600127F")]
		[Address(RVA = "0x8BD3C4", Offset = "0x8BD3C4", VA = "0x8BD3C4")]
		private void CreateParents()
		{
		}

		[Token(Token = "0x6001280")]
		[Address(RVA = "0x8BD504", Offset = "0x8BD504", VA = "0x8BD504")]
		private void Update()
		{
		}

		[Token(Token = "0x6001281")]
		[Address(RVA = "0x8BD7D0", Offset = "0x8BD7D0", VA = "0x8BD7D0")]
		public MCS_CameraController()
		{
		}
	}
	[Token(Token = "0x200035D")]
	public class MCS_FPSCounter : MonoBehaviour
	{
		[Token(Token = "0x200035E")]
		public enum GUIType
		{
			[Token(Token = "0x4001102")]
			DisplayRunning,
			[Token(Token = "0x4001103")]
			DisplayResults,
			[Token(Token = "0x4001104")]
			DisplayNothing
		}

		[Token(Token = "0x40010C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static MCS_FPSCounter instance;

		[Token(Token = "0x40010C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("___ Settings ___________________________________________________________________________________________________________")]
		public float interval;

		[Token(Token = "0x40010C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public GUIType displayType;

		[Token(Token = "0x40010CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector2 gradientRange;

		[Token(Token = "0x40010CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Font fontRun;

		[Token(Token = "0x40010CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Font fontResult;

		[Token(Token = "0x40010CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Texture logo;

		[Token(Token = "0x40010CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool showLogoOnResultsScreen;

		[Token(Token = "0x40010CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public KeyCode showHideButton;

		[Token(Token = "0x40010D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool acceptInput;

		[Token(Token = "0x40010D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		public bool reset;

		[Token(Token = "0x40010D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[Header("___ Results ___________________________________________________________________________________________________________")]
		public float currentFPS;

		[Token(Token = "0x40010D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float averageFPS;

		[Token(Token = "0x40010D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float minimumFPS;

		[Token(Token = "0x40010D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float maximumFPS;

		[Token(Token = "0x40010D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int totalFrameCount;

		[Token(Token = "0x40010D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int tempFrameCount;

		[Token(Token = "0x40010D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private double tStamp;

		[Token(Token = "0x40010D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private double tStampTemp;

		[Token(Token = "0x40010DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private string currentFPSText;

		[Token(Token = "0x40010DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private string avgFPSText;

		[Token(Token = "0x40010DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private string minFPSText;

		[Token(Token = "0x40010DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private string maxFSPText;

		[Token(Token = "0x40010DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private GUIStyle bigStyle;

		[Token(Token = "0x40010DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private GUIStyle bigStyleShadow;

		[Token(Token = "0x40010E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private GUIStyle smallStyle;

		[Token(Token = "0x40010E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private GUIStyle smallStyleShadow;

		[Token(Token = "0x40010E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private GUIStyle smallStyleLabel;

		[Token(Token = "0x40010E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private GUIStyle headerStyle;

		[Token(Token = "0x40010E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Rect[] rectsRun;

		[Token(Token = "0x40010E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Rect[] rectsResult;

		[Token(Token = "0x40010E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Gradient gradient;

		[Token(Token = "0x40010E7")]
		private const float line1 = 4f;

		[Token(Token = "0x40010E8")]
		private const float line2 = 30f;

		[Token(Token = "0x40010E9")]
		private const float line3 = 44f;

		[Token(Token = "0x40010EA")]
		private const float line4 = 58f;

		[Token(Token = "0x40010EB")]
		private const float labelWidth = 26f;

		[Token(Token = "0x40010EC")]
		private const float paddingH = 8f;

		[Token(Token = "0x40010ED")]
		private const float lineHeight = 22f;

		[Token(Token = "0x40010EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private float columnRight;

		[Token(Token = "0x40010EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float columnLeft;

		[Token(Token = "0x40010F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Color fontShadow;

		[Token(Token = "0x40010F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Color label;

		[Token(Token = "0x40010F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Color colorCurrent;

		[Token(Token = "0x40010F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Color colorAvg;

		[Token(Token = "0x40010F4")]
		private const string resultHeader = "BENCHMARK RESULTS";

		[Token(Token = "0x40010F5")]
		private const string resultLabelAvg = "AVERAGE FPS:";

		[Token(Token = "0x40010F6")]
		private const string resultLabelMin = "MINIMUM FPS:";

		[Token(Token = "0x40010F7")]
		private const string resultLabelMax = "MAXIMUM FPS:";

		[Token(Token = "0x40010F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private GUIContent resultHeaderGUI;

		[Token(Token = "0x40010F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private GUIContent reslutLabelAvgGUI;

		[Token(Token = "0x40010FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private GUIContent avgTextGUI;

		[Token(Token = "0x40010FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private GUIContent instructions;

		[Token(Token = "0x40010FC")]
		private const string runLabelAvg = "Avg:";

		[Token(Token = "0x40010FD")]
		private const string runLabelMin = "Min:";

		[Token(Token = "0x40010FE")]
		private const string runLabelMax = "Max:";

		[Token(Token = "0x40010FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private Vector2 screenSize;

		[Token(Token = "0x4001100")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private GUIType oldDisplayType;

		[Token(Token = "0x6001282")]
		[Address(RVA = "0x8BD7E4", Offset = "0x8BD7E4", VA = "0x8BD7E4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001283")]
		[Address(RVA = "0x8BD980", Offset = "0x8BD980", VA = "0x8BD980")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001284")]
		[Address(RVA = "0x8BDA18", Offset = "0x8BDA18", VA = "0x8BDA18")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001285")]
		[Address(RVA = "0x8BE050", Offset = "0x8BE050", VA = "0x8BE050")]
		private void SetRectsRun()
		{
		}

		[Token(Token = "0x6001286")]
		[Address(RVA = "0x8BE3B0", Offset = "0x8BE3B0", VA = "0x8BE3B0")]
		private void SetRectsResult()
		{
		}

		[Token(Token = "0x6001287")]
		[Address(RVA = "0x8BE8EC", Offset = "0x8BE8EC", VA = "0x8BE8EC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001288")]
		[Address(RVA = "0x8BEB60", Offset = "0x8BEB60", VA = "0x8BEB60")]
		private void Update()
		{
		}

		[Token(Token = "0x6001289")]
		[Address(RVA = "0x8BEEF0", Offset = "0x8BEEF0", VA = "0x8BEEF0")]
		public void StartBenchmark()
		{
		}

		[Token(Token = "0x600128A")]
		[Address(RVA = "0x8BEF10", Offset = "0x8BEF10", VA = "0x8BEF10")]
		public void StopBenchmark()
		{
		}

		[Token(Token = "0x600128B")]
		[Address(RVA = "0x8BED00", Offset = "0x8BED00", VA = "0x8BED00")]
		private void GetFPS()
		{
		}

		[Token(Token = "0x600128C")]
		[Address(RVA = "0x8BECC0", Offset = "0x8BECC0", VA = "0x8BECC0")]
		public void Reset()
		{
		}

		[Token(Token = "0x600128D")]
		[Address(RVA = "0x8BEC7C", Offset = "0x8BEC7C", VA = "0x8BEC7C")]
		private Color EvaluateGradient(float f)
		{
			return default(Color);
		}

		[Token(Token = "0x600128E")]
		[Address(RVA = "0x8BEF74", Offset = "0x8BEF74", VA = "0x8BEF74")]
		public MCS_FPSCounter()
		{
		}
	}
	[Token(Token = "0x200035F")]
	public static class Methods
	{
		[Token(Token = "0x600128F")]
		[Address(RVA = "0x8BF194", Offset = "0x8BF194", VA = "0x8BF194")]
		public static Vector3 Clamp(Vector3 v, float min, float max)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001290")]
		[Address(RVA = "0x8BF1C8", Offset = "0x8BF1C8", VA = "0x8BF1C8")]
		public static Vector3 FloatToVector3(float v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001291")]
		[Address(RVA = "0x8BF1D4", Offset = "0x8BF1D4", VA = "0x8BF1D4")]
		public static float SinDeg(float angle)
		{
			return default(float);
		}

		[Token(Token = "0x6001292")]
		[Address(RVA = "0x8BF1E4", Offset = "0x8BF1E4", VA = "0x8BF1E4")]
		public static void SetTag(GameObject go, string tag)
		{
		}

		[Token(Token = "0x6001293")]
		[Address(RVA = "0x8BF288", Offset = "0x8BF288", VA = "0x8BF288")]
		public static void SetTagWhenCollider(GameObject go, string tag)
		{
		}

		[Token(Token = "0x6001294")]
		[Address(RVA = "0x8BF3AC", Offset = "0x8BF3AC", VA = "0x8BF3AC")]
		public static void SetTagAndLayer(GameObject go, string tag, int layer)
		{
		}

		[Token(Token = "0x6001295")]
		[Address(RVA = "0x8BF488", Offset = "0x8BF488", VA = "0x8BF488")]
		public static void SetLayer(GameObject go, int layer)
		{
		}

		[Token(Token = "0x6001296")]
		[Address(RVA = "0x8BF548", Offset = "0x8BF548", VA = "0x8BF548")]
		public static bool Contains(string compare, string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001297")]
		public static T[] Search<T>([Optional] GameObject parentGO)
		{
			return null;
		}

		[Token(Token = "0x6001298")]
		public static T Find<T>(GameObject parentGO, string name) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6001299")]
		[Address(RVA = "0x8BF77C", Offset = "0x8BF77C", VA = "0x8BF77C")]
		public static void SetCollidersActive(Collider[] colliders, bool active, string[] nameList)
		{
		}

		[Token(Token = "0x600129A")]
		[Address(RVA = "0x8BF864", Offset = "0x8BF864", VA = "0x8BF864")]
		public static void SelectChildrenWithMeshRenderer(Transform t)
		{
		}

		[Token(Token = "0x600129B")]
		[Address(RVA = "0x8BF868", Offset = "0x8BF868", VA = "0x8BF868")]
		public static void DestroyChildren(Transform t)
		{
		}

		[Token(Token = "0x600129C")]
		[Address(RVA = "0x8BF92C", Offset = "0x8BF92C", VA = "0x8BF92C")]
		public static void Destroy(GameObject go)
		{
		}

		[Token(Token = "0x600129D")]
		[Address(RVA = "0x8BF9B4", Offset = "0x8BF9B4", VA = "0x8BF9B4")]
		public static void SetChildrenActive(Transform t, bool active)
		{
		}

		[Token(Token = "0x600129E")]
		[Address(RVA = "0x8BFA34", Offset = "0x8BFA34", VA = "0x8BFA34")]
		public static float GetMax(Vector3 v)
		{
			return default(float);
		}

		[Token(Token = "0x600129F")]
		[Address(RVA = "0x8BFA48", Offset = "0x8BFA48", VA = "0x8BFA48")]
		public static Vector3 SetMin(Vector3 v, float min)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60012A0")]
		[Address(RVA = "0x8BFA64", Offset = "0x8BFA64", VA = "0x8BFA64")]
		public static Vector3 Snap(Vector3 v, float snapSize)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60012A1")]
		[Address(RVA = "0x8BFA8C", Offset = "0x8BFA8C", VA = "0x8BFA8C")]
		public static Vector3 Abs(Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60012A2")]
		[Address(RVA = "0x8BFAB4", Offset = "0x8BFAB4", VA = "0x8BFAB4")]
		public static void SnapBoundsAndPreserveArea(ref Bounds bounds, float snapSize, Vector3 offset)
		{
		}

		[Token(Token = "0x60012A3")]
		public static void ListRemoveAt<T>(List<T> list, int index)
		{
		}

		[Token(Token = "0x60012A4")]
		[Address(RVA = "0x8BFBB0", Offset = "0x8BFBB0", VA = "0x8BFBB0")]
		public static void CopyComponent(Component component, GameObject target)
		{
		}
	}
	[Token(Token = "0x2000360")]
	public class BaseOctree
	{
		[Token(Token = "0x2000361")]
		public class Cell
		{
			[Token(Token = "0x4001105")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Cell mainParent;

			[Token(Token = "0x4001106")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Cell parent;

			[Token(Token = "0x4001107")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Cell[] cells;

			[Token(Token = "0x4001108")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool[] cellsUsed;

			[Token(Token = "0x4001109")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Bounds bounds;

			[Token(Token = "0x400110A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public int cellIndex;

			[Token(Token = "0x400110B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public int cellCount;

			[Token(Token = "0x400110C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public int level;

			[Token(Token = "0x400110D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public int maxLevels;

			[Token(Token = "0x60012A6")]
			[Address(RVA = "0x8BFCB8", Offset = "0x8BFCB8", VA = "0x8BFCB8")]
			public Cell()
			{
			}

			[Token(Token = "0x60012A7")]
			[Address(RVA = "0x8BFCC0", Offset = "0x8BFCC0", VA = "0x8BFCC0")]
			public Cell(Vector3 position, Vector3 size, int maxLevels)
			{
			}

			[Token(Token = "0x60012A8")]
			[Address(RVA = "0x8BFD5C", Offset = "0x8BFD5C", VA = "0x8BFD5C")]
			public Cell(Cell parent, int cellIndex, Bounds bounds)
			{
			}

			[Token(Token = "0x60012A9")]
			[Address(RVA = "0x8BFDC8", Offset = "0x8BFDC8", VA = "0x8BFDC8")]
			public void SetCell(Cell parent, int cellIndex, Bounds bounds)
			{
			}

			[Token(Token = "0x60012AA")]
			protected int AddCell<T, U>(ref T[] cells, Vector3 position, out bool maxCellCreated) where T : Cell, new() where U : Cell, new()
			{
				return default(int);
			}

			[Token(Token = "0x60012AB")]
			[Address(RVA = "0x8BFE04", Offset = "0x8BFE04", VA = "0x8BFE04")]
			public void RemoveCell(int index)
			{
			}

			[Token(Token = "0x60012AC")]
			[Address(RVA = "0x8BFE7C", Offset = "0x8BFE7C", VA = "0x8BFE7C")]
			public bool InsideBounds(Vector3 position)
			{
				return default(bool);
			}

			[Token(Token = "0x60012AD")]
			[Address(RVA = "0x8BFF2C", Offset = "0x8BFF2C", VA = "0x8BFF2C")]
			public void Reset(ref Cell[] cells)
			{
			}
		}

		[Token(Token = "0x60012A5")]
		[Address(RVA = "0x8BFCB0", Offset = "0x8BFCB0", VA = "0x8BFCB0")]
		public BaseOctree()
		{
		}
	}
	[Token(Token = "0x2000362")]
	public class ObjectOctree
	{
		[Token(Token = "0x2000363")]
		public class LODParent
		{
			[Token(Token = "0x400110E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject cellGO;

			[Token(Token = "0x400110F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform cellT;

			[Token(Token = "0x4001110")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LODGroup lodGroup;

			[Token(Token = "0x4001111")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LODLevel[] lodLevels;

			[Token(Token = "0x4001112")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool hasChanged;

			[Token(Token = "0x4001113")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public int jobsPending;

			[Token(Token = "0x60012AF")]
			[Address(RVA = "0x8BFF40", Offset = "0x8BFF40", VA = "0x8BFF40")]
			public LODParent(int lodCount)
			{
			}

			[Token(Token = "0x60012B0")]
			[Address(RVA = "0x8C00F0", Offset = "0x8C00F0", VA = "0x8C00F0")]
			public void AssignLODGroup(MeshCombiner meshCombiner)
			{
			}

			[Token(Token = "0x60012B1")]
			[Address(RVA = "0x8C0294", Offset = "0x8C0294", VA = "0x8C0294")]
			public void ApplyChanges(MeshCombiner meshCombiner)
			{
			}
		}

		[Token(Token = "0x2000364")]
		public class LODLevel
		{
			[Token(Token = "0x4001114")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<CachedGameObject> cachedGOs;

			[Token(Token = "0x4001115")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<MeshObjectsHolder> meshObjectsHolders;

			[Token(Token = "0x4001116")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<MeshObjectsHolder> changedMeshObjectsHolders;

			[Token(Token = "0x4001117")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public List<MeshRenderer> newMeshRenderers;

			[Token(Token = "0x4001118")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int vertCount;

			[Token(Token = "0x4001119")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public int objectCount;

			[Token(Token = "0x60012B2")]
			[Address(RVA = "0x8C03B4", Offset = "0x8C03B4", VA = "0x8C03B4")]
			public int GetSortMeshIndex(Material mat, bool shadowCastingModeTwoSided, int lightmapIndex)
			{
				return default(int);
			}

			[Token(Token = "0x60012B3")]
			[Address(RVA = "0x8C02F4", Offset = "0x8C02F4", VA = "0x8C02F4")]
			public void ApplyChanges(MeshCombiner meshCombiner)
			{
			}

			[Token(Token = "0x60012B4")]
			[Address(RVA = "0x8C0030", Offset = "0x8C0030", VA = "0x8C0030")]
			public LODLevel()
			{
			}
		}

		[Token(Token = "0x2000365")]
		public class MaxCell : Cell
		{
			[Token(Token = "0x400111A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static int maxCellCount;

			[Token(Token = "0x400111B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public LODParent[] lodParents;

			[Token(Token = "0x400111C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public List<LODParent> changedLodParents;

			[Token(Token = "0x400111D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public bool hasChanged;

			[Token(Token = "0x60012B5")]
			[Address(RVA = "0x8C04F0", Offset = "0x8C04F0", VA = "0x8C04F0")]
			public void ApplyChanges(MeshCombiner meshCombiner)
			{
			}

			[Token(Token = "0x60012B6")]
			[Address(RVA = "0x8C05BC", Offset = "0x8C05BC", VA = "0x8C05BC")]
			public MaxCell()
			{
			}
		}

		[Token(Token = "0x2000366")]
		public class Cell : BaseOctree.Cell
		{
			[Token(Token = "0x400111E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public new Cell[] cells;

			[Token(Token = "0x60012B7")]
			[Address(RVA = "0x8C05C4", Offset = "0x8C05C4", VA = "0x8C05C4")]
			public Cell()
			{
			}

			[Token(Token = "0x60012B8")]
			[Address(RVA = "0x8C05CC", Offset = "0x8C05CC", VA = "0x8C05CC")]
			public Cell(Vector3 position, Vector3 size, int maxLevels)
			{
			}

			[Token(Token = "0x60012B9")]
			[Address(RVA = "0x8C0668", Offset = "0x8C0668", VA = "0x8C0668")]
			public CachedGameObject AddObject(MeshCombiner meshCombiner, CachedGameObject cachedGO, int lodParentIndex, int lodLevel, bool isChangeMode = false)
			{
				return null;
			}

			[Token(Token = "0x60012BA")]
			[Address(RVA = "0x8C0774", Offset = "0x8C0774", VA = "0x8C0774")]
			private void AddObjectInternal(MeshCombiner meshCombiner, CachedGameObject cachedGO, Vector3 position, int lodParentIndex, int lodLevel, bool isChangeMode)
			{
			}

			[Token(Token = "0x60012BB")]
			[Address(RVA = "0x8C0FE0", Offset = "0x8C0FE0", VA = "0x8C0FE0")]
			public void SortObjects(MeshCombiner meshCombiner)
			{
			}

			[Token(Token = "0x60012BC")]
			[Address(RVA = "0x8C0BE8", Offset = "0x8C0BE8", VA = "0x8C0BE8")]
			public bool SortObject(MeshCombiner meshCombiner, LODLevel lod, CachedGameObject cachedGO, bool isChangeMode = false)
			{
				return default(bool);
			}

			[Token(Token = "0x60012BD")]
			[Address(RVA = "0x8C1408", Offset = "0x8C1408", VA = "0x8C1408")]
			public void CombineMeshes(MeshCombiner meshCombiner, int lodParentIndex)
			{
			}

			[Token(Token = "0x60012BE")]
			[Address(RVA = "0x8C1864", Offset = "0x8C1864", VA = "0x8C1864")]
			public void Draw(MeshCombiner meshCombiner, bool onlyMaxLevel, bool drawLevel0)
			{
			}
		}

		[Token(Token = "0x60012AE")]
		[Address(RVA = "0x8BFF38", Offset = "0x8BFF38", VA = "0x8BFF38")]
		public ObjectOctree()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000367")]
	public class MeshObjectsHolder
	{
		[Token(Token = "0x400111F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Material mat;

		[Token(Token = "0x4001120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<MeshObject> meshObjects;

		[Token(Token = "0x4001121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObjectOctree.LODParent lodParent;

		[Token(Token = "0x4001122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<CachedGameObject> newCachedGOs;

		[Token(Token = "0x4001123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int lodLevel;

		[Token(Token = "0x4001124")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int lightmapIndex;

		[Token(Token = "0x4001125")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool shadowCastingModeTwoSided;

		[Token(Token = "0x4001126")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool hasChanged;

		[Token(Token = "0x60012BF")]
		[Address(RVA = "0x8C1204", Offset = "0x8C1204", VA = "0x8C1204")]
		public MeshObjectsHolder(CachedGameObject cachedGO, Material mat, int subMeshIndex, bool shadowCastingModeTwoSided, int lightmapIndex)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000368")]
	public class MeshObject
	{
		[Token(Token = "0x4001127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CachedGameObject cachedGO;

		[Token(Token = "0x4001128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MeshCache meshCache;

		[Token(Token = "0x4001129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int subMeshIndex;

		[Token(Token = "0x400112A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 position;

		[Token(Token = "0x400112B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 scale;

		[Token(Token = "0x400112C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Quaternion rotation;

		[Token(Token = "0x400112D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Vector4 lightmapScaleOffset;

		[Token(Token = "0x400112E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public bool intersectsSurface;

		[Token(Token = "0x400112F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int startNewTriangleIndex;

		[Token(Token = "0x4001130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public int newTriangleCount;

		[Token(Token = "0x4001131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool skip;

		[Token(Token = "0x60012C0")]
		[Address(RVA = "0x8C1374", Offset = "0x8C1374", VA = "0x8C1374")]
		public MeshObject(CachedGameObject cachedGO, int subMeshIndex)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000369")]
	public class CachedGameObject
	{
		[Token(Token = "0x4001132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject go;

		[Token(Token = "0x4001133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform t;

		[Token(Token = "0x4001134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MeshRenderer mr;

		[Token(Token = "0x4001135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MeshFilter mf;

		[Token(Token = "0x4001136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Mesh mesh;

		[Token(Token = "0x60012C1")]
		[Address(RVA = "0x8C1C14", Offset = "0x8C1C14", VA = "0x8C1C14")]
		public CachedGameObject(GameObject go, Transform t, MeshRenderer mr, MeshFilter mf, Mesh mesh)
		{
		}

		[Token(Token = "0x60012C2")]
		[Address(RVA = "0x8C1C64", Offset = "0x8C1C64", VA = "0x8C1C64")]
		public CachedGameObject(CachedComponents cachedComponent)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200036A")]
	public class CachedLodGameObject : CachedGameObject
	{
		[Token(Token = "0x4001137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int lodCount;

		[Token(Token = "0x4001138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int lodLevel;

		[Token(Token = "0x60012C3")]
		[Address(RVA = "0x8C1CB8", Offset = "0x8C1CB8", VA = "0x8C1CB8")]
		public CachedLodGameObject(CachedGameObject cachedGO, int lodCount, int lodLevel)
		{
		}
	}
}
namespace LowPolyWater
{
	[Token(Token = "0x200036B")]
	public class LowPolyWater : MonoBehaviour
	{
		[Token(Token = "0x4001139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float waveHeight;

		[Token(Token = "0x400113A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float waveFrequency;

		[Token(Token = "0x400113B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float waveLength;

		[Token(Token = "0x400113C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 waveOriginPosition;

		[Token(Token = "0x400113D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private MeshFilter meshFilter;

		[Token(Token = "0x400113E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Mesh mesh;

		[Token(Token = "0x400113F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3[] vertices;

		[Token(Token = "0x60012C4")]
		[Address(RVA = "0x8C1D24", Offset = "0x8C1D24", VA = "0x8C1D24")]
		private void Awake()
		{
		}

		[Token(Token = "0x60012C5")]
		[Address(RVA = "0x8C1D74", Offset = "0x8C1D74", VA = "0x8C1D74")]
		private void Start()
		{
		}

		[Token(Token = "0x60012C6")]
		[Address(RVA = "0x8C1D7C", Offset = "0x8C1D7C", VA = "0x8C1D7C")]
		private MeshFilter CreateMeshLowPoly(MeshFilter mf)
		{
			return null;
		}

		[Token(Token = "0x60012C7")]
		[Address(RVA = "0x8C1EFC", Offset = "0x8C1EFC", VA = "0x8C1EFC")]
		private void Update()
		{
		}

		[Token(Token = "0x60012C8")]
		[Address(RVA = "0x8C1F00", Offset = "0x8C1F00", VA = "0x8C1F00")]
		private void GenerateWaves()
		{
		}

		[Token(Token = "0x60012C9")]
		[Address(RVA = "0x8C20A4", Offset = "0x8C20A4", VA = "0x8C20A4")]
		public LowPolyWater()
		{
		}
	}
}
namespace DG.Tweening
{
	[Token(Token = "0x200036C")]
	public static class DOTweenModuleAudio
	{
		[Token(Token = "0x60012CA")]
		[Address(RVA = "0x8C20BC", Offset = "0x8C20BC", VA = "0x8C20BC")]
		public static TweenerCore<float, float, FloatOptions> DOFade(this AudioSource target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60012CB")]
		[Address(RVA = "0x8C2258", Offset = "0x8C2258", VA = "0x8C2258")]
		public static TweenerCore<float, float, FloatOptions> DOPitch(this AudioSource target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60012CC")]
		[Address(RVA = "0x8C23CC", Offset = "0x8C23CC", VA = "0x8C23CC")]
		public static TweenerCore<float, float, FloatOptions> DOSetFloat(this AudioMixer target, string floatName, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60012CD")]
		[Address(RVA = "0x8C2544", Offset = "0x8C2544", VA = "0x8C2544")]
		public static int DOComplete(this AudioMixer target, bool withCallbacks = false)
		{
			return default(int);
		}

		[Token(Token = "0x60012CE")]
		[Address(RVA = "0x8C25AC", Offset = "0x8C25AC", VA = "0x8C25AC")]
		public static int DOKill(this AudioMixer target, bool complete = false)
		{
			return default(int);
		}

		[Token(Token = "0x60012CF")]
		[Address(RVA = "0x8C2614", Offset = "0x8C2614", VA = "0x8C2614")]
		public static int DOFlip(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x60012D0")]
		[Address(RVA = "0x8C266C", Offset = "0x8C266C", VA = "0x8C266C")]
		public static int DOGoto(this AudioMixer target, float to, bool andPlay = false)
		{
			return default(int);
		}

		[Token(Token = "0x60012D1")]
		[Address(RVA = "0x8C26E4", Offset = "0x8C26E4", VA = "0x8C26E4")]
		public static int DOPause(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x60012D2")]
		[Address(RVA = "0x8C273C", Offset = "0x8C273C", VA = "0x8C273C")]
		public static int DOPlay(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x60012D3")]
		[Address(RVA = "0x8C2794", Offset = "0x8C2794", VA = "0x8C2794")]
		public static int DOPlayBackwards(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x60012D4")]
		[Address(RVA = "0x8C27EC", Offset = "0x8C27EC", VA = "0x8C27EC")]
		public static int DOPlayForward(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x60012D5")]
		[Address(RVA = "0x8C2844", Offset = "0x8C2844", VA = "0x8C2844")]
		public static int DORestart(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x60012D6")]
		[Address(RVA = "0x8C28A4", Offset = "0x8C28A4", VA = "0x8C28A4")]
		public static int DORewind(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x60012D7")]
		[Address(RVA = "0x8C2900", Offset = "0x8C2900", VA = "0x8C2900")]
		public static int DOSmoothRewind(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x60012D8")]
		[Address(RVA = "0x8C2958", Offset = "0x8C2958", VA = "0x8C2958")]
		public static int DOTogglePause(this AudioMixer target)
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000370")]
	public static class DOTweenModulePhysics
	{
		[Token(Token = "0x60012E2")]
		[Address(RVA = "0x8C2A78", Offset = "0x8C2A78", VA = "0x8C2A78")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOMove(this Rigidbody target, Vector3 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60012E3")]
		[Address(RVA = "0x8C2C20", Offset = "0x8C2C20", VA = "0x8C2C20")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOMoveX(this Rigidbody target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60012E4")]
		[Address(RVA = "0x8C2DBC", Offset = "0x8C2DBC", VA = "0x8C2DBC")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOMoveY(this Rigidbody target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60012E5")]
		[Address(RVA = "0x8C2F58", Offset = "0x8C2F58", VA = "0x8C2F58")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOMoveZ(this Rigidbody target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60012E6")]
		[Address(RVA = "0x8C30F4", Offset = "0x8C30F4", VA = "0x8C30F4")]
		public static TweenerCore<Quaternion, Vector3, QuaternionOptions> DORotate(this Rigidbody target, Vector3 endValue, float duration, RotateMode mode = RotateMode.Fast)
		{
			return null;
		}

		[Token(Token = "0x60012E7")]
		[Address(RVA = "0x8C3298", Offset = "0x8C3298", VA = "0x8C3298")]
		public static TweenerCore<Quaternion, Vector3, QuaternionOptions> DOLookAt(this Rigidbody target, Vector3 towards, float duration, AxisConstraint axisConstraint = AxisConstraint.None, [Optional] Vector3? up)
		{
			return null;
		}

		[Token(Token = "0x60012E8")]
		[Address(RVA = "0x8C34F0", Offset = "0x8C34F0", VA = "0x8C34F0")]
		public static Sequence DOJump(this Rigidbody target, Vector3 endValue, float jumpPower, int numJumps, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60012E9")]
		[Address(RVA = "0x8C39D0", Offset = "0x8C39D0", VA = "0x8C39D0")]
		public static TweenerCore<Vector3, DG.Tweening.Plugins.Core.PathCore.Path, PathOptions> DOPath(this Rigidbody target, Vector3[] path, float duration, PathType pathType = PathType.Linear, PathMode pathMode = PathMode.Full3D, int resolution = 10, [Optional] Color? gizmoColor)
		{
			return null;
		}

		[Token(Token = "0x60012EA")]
		[Address(RVA = "0x8C3C34", Offset = "0x8C3C34", VA = "0x8C3C34")]
		public static TweenerCore<Vector3, DG.Tweening.Plugins.Core.PathCore.Path, PathOptions> DOLocalPath(this Rigidbody target, Vector3[] path, float duration, PathType pathType = PathType.Linear, PathMode pathMode = PathMode.Full3D, int resolution = 10, [Optional] Color? gizmoColor)
		{
			return null;
		}

		[Token(Token = "0x60012EB")]
		[Address(RVA = "0x8C3EA4", Offset = "0x8C3EA4", VA = "0x8C3EA4")]
		internal static TweenerCore<Vector3, DG.Tweening.Plugins.Core.PathCore.Path, PathOptions> DOPath(this Rigidbody target, DG.Tweening.Plugins.Core.PathCore.Path path, float duration, PathMode pathMode = PathMode.Full3D)
		{
			return null;
		}

		[Token(Token = "0x60012EC")]
		[Address(RVA = "0x8C4068", Offset = "0x8C4068", VA = "0x8C4068")]
		internal static TweenerCore<Vector3, DG.Tweening.Plugins.Core.PathCore.Path, PathOptions> DOLocalPath(this Rigidbody target, DG.Tweening.Plugins.Core.PathCore.Path path, float duration, PathMode pathMode = PathMode.Full3D)
		{
			return null;
		}
	}
	[Token(Token = "0x200037C")]
	public static class DOTweenModulePhysics2D
	{
		[Token(Token = "0x6001309")]
		[Address(RVA = "0x8C4658", Offset = "0x8C4658", VA = "0x8C4658")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOMove(this Rigidbody2D target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x600130A")]
		[Address(RVA = "0x8C47F8", Offset = "0x8C47F8", VA = "0x8C47F8")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOMoveX(this Rigidbody2D target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x600130B")]
		[Address(RVA = "0x8C4990", Offset = "0x8C4990", VA = "0x8C4990")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOMoveY(this Rigidbody2D target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x600130C")]
		[Address(RVA = "0x8C4B28", Offset = "0x8C4B28", VA = "0x8C4B28")]
		public static TweenerCore<float, float, FloatOptions> DORotate(this Rigidbody2D target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x600130D")]
		[Address(RVA = "0x8C4CA8", Offset = "0x8C4CA8", VA = "0x8C4CA8")]
		public static Sequence DOJump(this Rigidbody2D target, Vector2 endValue, float jumpPower, int numJumps, float duration, bool snapping = false)
		{
			return null;
		}
	}
	[Token(Token = "0x2000382")]
	public static class DOTweenModuleSprite
	{
		[Token(Token = "0x600131D")]
		[Address(RVA = "0x8C5264", Offset = "0x8C5264", VA = "0x8C5264")]
		public static TweenerCore<Color, Color, ColorOptions> DOColor(this SpriteRenderer target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x600131E")]
		[Address(RVA = "0x8C5400", Offset = "0x8C5400", VA = "0x8C5400")]
		public static TweenerCore<Color, Color, ColorOptions> DOFade(this SpriteRenderer target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x600131F")]
		[Address(RVA = "0x8C5574", Offset = "0x8C5574", VA = "0x8C5574")]
		public static Sequence DOGradientColor(this SpriteRenderer target, Gradient gradient, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001320")]
		[Address(RVA = "0x8C572C", Offset = "0x8C572C", VA = "0x8C572C")]
		public static Tweener DOBlendableColor(this SpriteRenderer target, Color endValue, float duration)
		{
			return null;
		}
	}
	[Token(Token = "0x2000386")]
	public static class DOTweenModuleUI
	{
		[Token(Token = "0x2000387")]
		public static class Utils
		{
			[Token(Token = "0x6001352")]
			[Address(RVA = "0x8C9D18", Offset = "0x8C9D18", VA = "0x8C9D18")]
			public static Vector2 SwitchToRectTransform(RectTransform from, RectTransform to)
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x600132A")]
		[Address(RVA = "0x8C5A0C", Offset = "0x8C5A0C", VA = "0x8C5A0C")]
		public static TweenerCore<float, float, FloatOptions> DOFade(this CanvasGroup target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x600132B")]
		[Address(RVA = "0x8C5B80", Offset = "0x8C5B80", VA = "0x8C5B80")]
		public static TweenerCore<Color, Color, ColorOptions> DOColor(this Graphic target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x600132C")]
		[Address(RVA = "0x8C5D1C", Offset = "0x8C5D1C", VA = "0x8C5D1C")]
		public static TweenerCore<Color, Color, ColorOptions> DOFade(this Graphic target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x600132D")]
		[Address(RVA = "0x8C5E90", Offset = "0x8C5E90", VA = "0x8C5E90")]
		public static TweenerCore<Color, Color, ColorOptions> DOColor(this Image target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x600132E")]
		[Address(RVA = "0x8C602C", Offset = "0x8C602C", VA = "0x8C602C")]
		public static TweenerCore<Color, Color, ColorOptions> DOFade(this Image target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x600132F")]
		[Address(RVA = "0x8C61A0", Offset = "0x8C61A0", VA = "0x8C61A0")]
		public static TweenerCore<float, float, FloatOptions> DOFillAmount(this Image target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001330")]
		[Address(RVA = "0x8C6338", Offset = "0x8C6338", VA = "0x8C6338")]
		public static Sequence DOGradientColor(this Image target, Gradient gradient, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001331")]
		[Address(RVA = "0x8C64F8", Offset = "0x8C64F8", VA = "0x8C64F8")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOFlexibleSize(this LayoutElement target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001332")]
		[Address(RVA = "0x8C6694", Offset = "0x8C6694", VA = "0x8C6694")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOMinSize(this LayoutElement target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001333")]
		[Address(RVA = "0x8C6830", Offset = "0x8C6830", VA = "0x8C6830")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOPreferredSize(this LayoutElement target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001334")]
		[Address(RVA = "0x8C69CC", Offset = "0x8C69CC", VA = "0x8C69CC")]
		public static TweenerCore<Color, Color, ColorOptions> DOColor(this Outline target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001335")]
		[Address(RVA = "0x8C6B68", Offset = "0x8C6B68", VA = "0x8C6B68")]
		public static TweenerCore<Color, Color, ColorOptions> DOFade(this Outline target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001336")]
		[Address(RVA = "0x8C6CDC", Offset = "0x8C6CDC", VA = "0x8C6CDC")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOScale(this Outline target, Vector2 endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001337")]
		[Address(RVA = "0x8C6E60", Offset = "0x8C6E60", VA = "0x8C6E60")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOAnchorPos(this RectTransform target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001338")]
		[Address(RVA = "0x8C6FFC", Offset = "0x8C6FFC", VA = "0x8C6FFC")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOAnchorPosX(this RectTransform target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001339")]
		[Address(RVA = "0x8C7190", Offset = "0x8C7190", VA = "0x8C7190")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOAnchorPosY(this RectTransform target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x600133A")]
		[Address(RVA = "0x8C7324", Offset = "0x8C7324", VA = "0x8C7324")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOAnchorPos3D(this RectTransform target, Vector3 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x600133B")]
		[Address(RVA = "0x8C74C8", Offset = "0x8C74C8", VA = "0x8C74C8")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOAnchorPos3DX(this RectTransform target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x600133C")]
		[Address(RVA = "0x8C7660", Offset = "0x8C7660", VA = "0x8C7660")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOAnchorPos3DY(this RectTransform target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x600133D")]
		[Address(RVA = "0x8C77F8", Offset = "0x8C77F8", VA = "0x8C77F8")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOAnchorPos3DZ(this RectTransform target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x600133E")]
		[Address(RVA = "0x8C7990", Offset = "0x8C7990", VA = "0x8C7990")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOAnchorMax(this RectTransform target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x600133F")]
		[Address(RVA = "0x8C7B2C", Offset = "0x8C7B2C", VA = "0x8C7B2C")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOAnchorMin(this RectTransform target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001340")]
		[Address(RVA = "0x8C7CC8", Offset = "0x8C7CC8", VA = "0x8C7CC8")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOPivot(this RectTransform target, Vector2 endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001341")]
		[Address(RVA = "0x8C7E4C", Offset = "0x8C7E4C", VA = "0x8C7E4C")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOPivotX(this RectTransform target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001342")]
		[Address(RVA = "0x8C7FD4", Offset = "0x8C7FD4", VA = "0x8C7FD4")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOPivotY(this RectTransform target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001343")]
		[Address(RVA = "0x8C815C", Offset = "0x8C815C", VA = "0x8C815C")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOSizeDelta(this RectTransform target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001344")]
		[Address(RVA = "0x8C82F8", Offset = "0x8C82F8", VA = "0x8C82F8")]
		public static Tweener DOPunchAnchorPos(this RectTransform target, Vector2 punch, float duration, int vibrato = 10, float elasticity = 1f, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001345")]
		[Address(RVA = "0x8C849C", Offset = "0x8C849C", VA = "0x8C849C")]
		public static Tweener DOShakeAnchorPos(this RectTransform target, float duration, float strength = 100f, int vibrato = 10, float randomness = 90f, bool snapping = false, bool fadeOut = true)
		{
			return null;
		}

		[Token(Token = "0x6001346")]
		[Address(RVA = "0x8C8668", Offset = "0x8C8668", VA = "0x8C8668")]
		public static Tweener DOShakeAnchorPos(this RectTransform target, float duration, Vector2 strength, int vibrato = 10, float randomness = 90f, bool snapping = false, bool fadeOut = true)
		{
			return null;
		}

		[Token(Token = "0x6001347")]
		[Address(RVA = "0x8C883C", Offset = "0x8C883C", VA = "0x8C883C")]
		public static Sequence DOJumpAnchorPos(this RectTransform target, Vector2 endValue, float jumpPower, int numJumps, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001348")]
		[Address(RVA = "0x8C8C48", Offset = "0x8C8C48", VA = "0x8C8C48")]
		public static Tweener DONormalizedPos(this ScrollRect target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001349")]
		[Address(RVA = "0x8C8DD8", Offset = "0x8C8DD8", VA = "0x8C8DD8")]
		public static Tweener DOHorizontalNormalizedPos(this ScrollRect target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x600134A")]
		[Address(RVA = "0x8C8F58", Offset = "0x8C8F58", VA = "0x8C8F58")]
		public static Tweener DOVerticalNormalizedPos(this ScrollRect target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x600134B")]
		[Address(RVA = "0x8C90D8", Offset = "0x8C90D8", VA = "0x8C90D8")]
		public static TweenerCore<float, float, FloatOptions> DOValue(this Slider target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x600134C")]
		[Address(RVA = "0x8C9264", Offset = "0x8C9264", VA = "0x8C9264")]
		public static TweenerCore<Color, Color, ColorOptions> DOColor(this Text target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x600134D")]
		[Address(RVA = "0x8C9400", Offset = "0x8C9400", VA = "0x8C9400")]
		public static TweenerCore<Color, Color, ColorOptions> DOFade(this Text target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x600134E")]
		[Address(RVA = "0x8C9574", Offset = "0x8C9574", VA = "0x8C9574")]
		public static TweenerCore<string, string, StringOptions> DOText(this Text target, string endValue, float duration, bool richTextEnabled = true, ScrambleMode scrambleMode = ScrambleMode.None, [Optional] string scrambleChars)
		{
			return null;
		}

		[Token(Token = "0x600134F")]
		[Address(RVA = "0x8C9718", Offset = "0x8C9718", VA = "0x8C9718")]
		public static Tweener DOBlendableColor(this Graphic target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001350")]
		[Address(RVA = "0x8C9918", Offset = "0x8C9918", VA = "0x8C9918")]
		public static Tweener DOBlendableColor(this Image target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001351")]
		[Address(RVA = "0x8C9B18", Offset = "0x8C9B18", VA = "0x8C9B18")]
		public static Tweener DOBlendableColor(this Text target, Color endValue, float duration)
		{
			return null;
		}
	}
	[Token(Token = "0x20003AF")]
	public static class DOTweenModuleUnityVersion
	{
		[Token(Token = "0x60013CC")]
		[Address(RVA = "0x8CAC08", Offset = "0x8CAC08", VA = "0x8CAC08")]
		public static Sequence DOGradientColor(this Material target, Gradient gradient, float duration)
		{
			return null;
		}

		[Token(Token = "0x60013CD")]
		[Address(RVA = "0x8CADC4", Offset = "0x8CADC4", VA = "0x8CADC4")]
		public static Sequence DOGradientColor(this Material target, Gradient gradient, string property, float duration)
		{
			return null;
		}

		[Token(Token = "0x60013CE")]
		[Address(RVA = "0x8CAF8C", Offset = "0x8CAF8C", VA = "0x8CAF8C")]
		public static CustomYieldInstruction WaitForCompletion(this Tween t, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x60013CF")]
		[Address(RVA = "0x8CB060", Offset = "0x8CB060", VA = "0x8CB060")]
		public static CustomYieldInstruction WaitForRewind(this Tween t, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x60013D0")]
		[Address(RVA = "0x8CB134", Offset = "0x8CB134", VA = "0x8CB134")]
		public static CustomYieldInstruction WaitForKill(this Tween t, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x60013D1")]
		[Address(RVA = "0x8CB208", Offset = "0x8CB208", VA = "0x8CB208")]
		public static CustomYieldInstruction WaitForElapsedLoops(this Tween t, int elapsedLoops, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x60013D2")]
		[Address(RVA = "0x8CB2EC", Offset = "0x8CB2EC", VA = "0x8CB2EC")]
		public static CustomYieldInstruction WaitForPosition(this Tween t, float position, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x60013D3")]
		[Address(RVA = "0x8CB3E0", Offset = "0x8CB3E0", VA = "0x8CB3E0")]
		public static CustomYieldInstruction WaitForStart(this Tween t, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x60013D4")]
		[Address(RVA = "0x8CB4B4", Offset = "0x8CB4B4", VA = "0x8CB4B4")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOOffset(this Material target, Vector2 endValue, int propertyID, float duration)
		{
			return null;
		}

		[Token(Token = "0x60013D5")]
		[Address(RVA = "0x8CB694", Offset = "0x8CB694", VA = "0x8CB694")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOTiling(this Material target, Vector2 endValue, int propertyID, float duration)
		{
			return null;
		}
	}
	[Token(Token = "0x20003B2")]
	public static class DOTweenCYInstruction
	{
		[Token(Token = "0x20003B3")]
		public class WaitForCompletion : CustomYieldInstruction
		{
			[Token(Token = "0x4001199")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x1700014A")]
			public override bool keepWaiting
			{
				[Token(Token = "0x60013DC")]
				[Address(RVA = "0x8CB904", Offset = "0x8CB904", VA = "0x8CB904", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x60013DD")]
			[Address(RVA = "0x8CB038", Offset = "0x8CB038", VA = "0x8CB038")]
			public WaitForCompletion(Tween tween)
			{
			}
		}

		[Token(Token = "0x20003B4")]
		public class WaitForRewind : CustomYieldInstruction
		{
			[Token(Token = "0x400119A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x1700014B")]
			public override bool keepWaiting
			{
				[Token(Token = "0x60013DE")]
				[Address(RVA = "0x8CB934", Offset = "0x8CB934", VA = "0x8CB934", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x60013DF")]
			[Address(RVA = "0x8CB10C", Offset = "0x8CB10C", VA = "0x8CB10C")]
			public WaitForRewind(Tween tween)
			{
			}
		}

		[Token(Token = "0x20003B5")]
		public class WaitForKill : CustomYieldInstruction
		{
			[Token(Token = "0x400119B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x1700014C")]
			public override bool keepWaiting
			{
				[Token(Token = "0x60013E0")]
				[Address(RVA = "0x8CB994", Offset = "0x8CB994", VA = "0x8CB994", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x60013E1")]
			[Address(RVA = "0x8CB1E0", Offset = "0x8CB1E0", VA = "0x8CB1E0")]
			public WaitForKill(Tween tween)
			{
			}
		}

		[Token(Token = "0x20003B6")]
		public class WaitForElapsedLoops : CustomYieldInstruction
		{
			[Token(Token = "0x400119C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x400119D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private readonly int elapsedLoops;

			[Token(Token = "0x1700014D")]
			public override bool keepWaiting
			{
				[Token(Token = "0x60013E2")]
				[Address(RVA = "0x8CB9B0", Offset = "0x8CB9B0", VA = "0x8CB9B0", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x60013E3")]
			[Address(RVA = "0x8CB2BC", Offset = "0x8CB2BC", VA = "0x8CB2BC")]
			public WaitForElapsedLoops(Tween tween, int elapsedLoops)
			{
			}
		}

		[Token(Token = "0x20003B7")]
		public class WaitForPosition : CustomYieldInstruction
		{
			[Token(Token = "0x400119E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x400119F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private readonly float position;

			[Token(Token = "0x1700014E")]
			public override bool keepWaiting
			{
				[Token(Token = "0x60013E4")]
				[Address(RVA = "0x8CB9F0", Offset = "0x8CB9F0", VA = "0x8CB9F0", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x60013E5")]
			[Address(RVA = "0x8CB3A8", Offset = "0x8CB3A8", VA = "0x8CB3A8")]
			public WaitForPosition(Tween tween, float position)
			{
			}
		}

		[Token(Token = "0x20003B8")]
		public class WaitForStart : CustomYieldInstruction
		{
			[Token(Token = "0x40011A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x1700014F")]
			public override bool keepWaiting
			{
				[Token(Token = "0x60013E6")]
				[Address(RVA = "0x8CBA48", Offset = "0x8CBA48", VA = "0x8CBA48", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x60013E7")]
			[Address(RVA = "0x8CB48C", Offset = "0x8CB48C", VA = "0x8CB48C")]
			public WaitForStart(Tween tween)
			{
			}
		}
	}
	[Token(Token = "0x20003B9")]
	public static class DOTweenModuleUtils
	{
		[Token(Token = "0x20003BA")]
		public static class Physics
		{
			[Token(Token = "0x60013EA")]
			[Address(RVA = "0x8CBBD8", Offset = "0x8CBBD8", VA = "0x8CBBD8")]
			public static void SetOrientationOnPath(PathOptions options, Tween t, Quaternion newRot, Transform trans)
			{
			}

			[Token(Token = "0x60013EB")]
			[Address(RVA = "0x8CBCD8", Offset = "0x8CBCD8", VA = "0x8CBCD8")]
			public static bool HasRigidbody2D(Component target)
			{
				return default(bool);
			}

			[Token(Token = "0x60013EC")]
			[Address(RVA = "0x8CBD64", Offset = "0x8CBD64", VA = "0x8CBD64")]
			[Preserve]
			public static bool HasRigidbody(Component target)
			{
				return default(bool);
			}

			[Token(Token = "0x60013ED")]
			[Address(RVA = "0x8CBDF0", Offset = "0x8CBDF0", VA = "0x8CBDF0")]
			[Preserve]
			public static TweenerCore<Vector3, DG.Tweening.Plugins.Core.PathCore.Path, PathOptions> CreateDOTweenPathTween(MonoBehaviour target, bool tweenRigidbody, bool isLocal, DG.Tweening.Plugins.Core.PathCore.Path path, float duration, PathMode pathMode)
			{
				return null;
			}
		}

		[Token(Token = "0x40011A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool _initialized;

		[Token(Token = "0x60013E8")]
		[Address(RVA = "0x8CBA7C", Offset = "0x8CBA7C", VA = "0x8CBA7C")]
		[Preserve]
		public static void Init()
		{
		}

		[Token(Token = "0x60013E9")]
		[Address(RVA = "0x8CBB30", Offset = "0x8CBB30", VA = "0x8CBB30")]
		[Preserve]
		private static void Preserver()
		{
		}
	}
	[Token(Token = "0x20003BB")]
	[AddComponentMenu("DOTween/DOTween Animation")]
	public class DOTweenAnimation : ABSAnimationComponent
	{
		[Token(Token = "0x20003BC")]
		public enum AnimationType
		{
			[Token(Token = "0x40011C9")]
			None,
			[Token(Token = "0x40011CA")]
			Move,
			[Token(Token = "0x40011CB")]
			LocalMove,
			[Token(Token = "0x40011CC")]
			Rotate,
			[Token(Token = "0x40011CD")]
			LocalRotate,
			[Token(Token = "0x40011CE")]
			Scale,
			[Token(Token = "0x40011CF")]
			Color,
			[Token(Token = "0x40011D0")]
			Fade,
			[Token(Token = "0x40011D1")]
			Text,
			[Token(Token = "0x40011D2")]
			PunchPosition,
			[Token(Token = "0x40011D3")]
			PunchRotation,
			[Token(Token = "0x40011D4")]
			PunchScale,
			[Token(Token = "0x40011D5")]
			ShakePosition,
			[Token(Token = "0x40011D6")]
			ShakeRotation,
			[Token(Token = "0x40011D7")]
			ShakeScale,
			[Token(Token = "0x40011D8")]
			CameraAspect,
			[Token(Token = "0x40011D9")]
			CameraBackgroundColor,
			[Token(Token = "0x40011DA")]
			CameraFieldOfView,
			[Token(Token = "0x40011DB")]
			CameraOrthoSize,
			[Token(Token = "0x40011DC")]
			CameraPixelRect,
			[Token(Token = "0x40011DD")]
			CameraRect,
			[Token(Token = "0x40011DE")]
			UIWidthHeight
		}

		[Token(Token = "0x20003BD")]
		public enum TargetType
		{
			[Token(Token = "0x40011E0")]
			Unset,
			[Token(Token = "0x40011E1")]
			Camera,
			[Token(Token = "0x40011E2")]
			CanvasGroup,
			[Token(Token = "0x40011E3")]
			Image,
			[Token(Token = "0x40011E4")]
			Light,
			[Token(Token = "0x40011E5")]
			RectTransform,
			[Token(Token = "0x40011E6")]
			Renderer,
			[Token(Token = "0x40011E7")]
			SpriteRenderer,
			[Token(Token = "0x40011E8")]
			Rigidbody,
			[Token(Token = "0x40011E9")]
			Rigidbody2D,
			[Token(Token = "0x40011EA")]
			Text,
			[Token(Token = "0x40011EB")]
			Transform,
			[Token(Token = "0x40011EC")]
			tk2dBaseSprite,
			[Token(Token = "0x40011ED")]
			tk2dTextMesh,
			[Token(Token = "0x40011EE")]
			TextMeshPro,
			[Token(Token = "0x40011EF")]
			TextMeshProUGUI
		}

		[Token(Token = "0x40011A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool targetIsSelf;

		[Token(Token = "0x40011A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public GameObject targetGO;

		[Token(Token = "0x40011A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool tweenTargetIsTargetGO;

		[Token(Token = "0x40011A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float delay;

		[Token(Token = "0x40011A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float duration;

		[Token(Token = "0x40011A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public Ease easeType;

		[Token(Token = "0x40011A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public AnimationCurve easeCurve;

		[Token(Token = "0x40011AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public LoopType loopType;

		[Token(Token = "0x40011AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int loops;

		[Token(Token = "0x40011AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public string id;

		[Token(Token = "0x40011AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public bool isRelative;

		[Token(Token = "0x40011AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		public bool isFrom;

		[Token(Token = "0x40011AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA2")]
		public bool isIndependentUpdate;

		[Token(Token = "0x40011B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA3")]
		public bool autoKill;

		[Token(Token = "0x40011B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public bool isActive;

		[Token(Token = "0x40011B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA5")]
		public bool isValid;

		[Token(Token = "0x40011B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Component target;

		[Token(Token = "0x40011B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public AnimationType animationType;

		[Token(Token = "0x40011B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public TargetType targetType;

		[Token(Token = "0x40011B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public TargetType forcedTargetType;

		[Token(Token = "0x40011B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public bool autoPlay;

		[Token(Token = "0x40011B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBD")]
		public bool useTargetAsV3;

		[Token(Token = "0x40011B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public float endValueFloat;

		[Token(Token = "0x40011BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public Vector3 endValueV3;

		[Token(Token = "0x40011BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Vector2 endValueV2;

		[Token(Token = "0x40011BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public Color endValueColor;

		[Token(Token = "0x40011BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public string endValueString;

		[Token(Token = "0x40011BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public Rect endValueRect;

		[Token(Token = "0x40011BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public Transform endValueTransform;

		[Token(Token = "0x40011C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public bool optionalBool0;

		[Token(Token = "0x40011C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		public float optionalFloat0;

		[Token(Token = "0x40011C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public int optionalInt0;

		[Token(Token = "0x40011C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		public RotateMode optionalRotationMode;

		[Token(Token = "0x40011C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public ScrambleMode optionalScrambleMode;

		[Token(Token = "0x40011C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public string optionalString;

		[Token(Token = "0x40011C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private bool _tweenCreated;

		[Token(Token = "0x40011C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		private int _playCount;

		[Token(Token = "0x1400000F")]
		public static event Action<DOTweenAnimation> OnReset
		{
			[Token(Token = "0x60013EE")]
			[Address(RVA = "0x8CBF34", Offset = "0x8CBF34", VA = "0x8CBF34")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60013EF")]
			[Address(RVA = "0x8CC000", Offset = "0x8CC000", VA = "0x8CC000")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x60013F0")]
		[Address(RVA = "0x8CC0CC", Offset = "0x8CC0CC", VA = "0x8CC0CC")]
		private static void Dispatch_OnReset(DOTweenAnimation anim)
		{
		}

		[Token(Token = "0x60013F1")]
		[Address(RVA = "0x8CC138", Offset = "0x8CC138", VA = "0x8CC138")]
		private void Awake()
		{
		}

		[Token(Token = "0x60013F2")]
		[Address(RVA = "0x8CD754", Offset = "0x8CD754", VA = "0x8CD754")]
		private void Start()
		{
		}

		[Token(Token = "0x60013F3")]
		[Address(RVA = "0x8CD78C", Offset = "0x8CD78C", VA = "0x8CD78C")]
		private void Reset()
		{
		}

		[Token(Token = "0x60013F4")]
		[Address(RVA = "0x8CD790", Offset = "0x8CD790", VA = "0x8CD790")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60013F5")]
		[Address(RVA = "0x8CC17C", Offset = "0x8CC17C", VA = "0x8CC17C")]
		public void CreateTween()
		{
		}

		[Token(Token = "0x60013F6")]
		[Address(RVA = "0x8CDE7C", Offset = "0x8CDE7C", VA = "0x8CDE7C", Slot = "4")]
		public override void DOPlay()
		{
		}

		[Token(Token = "0x60013F7")]
		[Address(RVA = "0x8CDEE8", Offset = "0x8CDEE8", VA = "0x8CDEE8", Slot = "5")]
		public override void DOPlayBackwards()
		{
		}

		[Token(Token = "0x60013F8")]
		[Address(RVA = "0x8CDF54", Offset = "0x8CDF54", VA = "0x8CDF54", Slot = "6")]
		public override void DOPlayForward()
		{
		}

		[Token(Token = "0x60013F9")]
		[Address(RVA = "0x8CDFC0", Offset = "0x8CDFC0", VA = "0x8CDFC0", Slot = "7")]
		public override void DOPause()
		{
		}

		[Token(Token = "0x60013FA")]
		[Address(RVA = "0x8CE02C", Offset = "0x8CE02C", VA = "0x8CE02C", Slot = "8")]
		public override void DOTogglePause()
		{
		}

		[Token(Token = "0x60013FB")]
		[Address(RVA = "0x8CE098", Offset = "0x8CE098", VA = "0x8CE098", Slot = "9")]
		public override void DORewind()
		{
		}

		[Token(Token = "0x60013FC")]
		[Address(RVA = "0x8CE17C", Offset = "0x8CE17C", VA = "0x8CE17C", Slot = "10")]
		public override void DORestart()
		{
		}

		[Token(Token = "0x60013FD")]
		[Address(RVA = "0x8CE18C", Offset = "0x8CE18C", VA = "0x8CE18C", Slot = "11")]
		public override void DORestart(bool fromHere)
		{
		}

		[Token(Token = "0x60013FE")]
		[Address(RVA = "0x8CE4C4", Offset = "0x8CE4C4", VA = "0x8CE4C4", Slot = "12")]
		public override void DOComplete()
		{
		}

		[Token(Token = "0x60013FF")]
		[Address(RVA = "0x8CE534", Offset = "0x8CE534", VA = "0x8CE534", Slot = "13")]
		public override void DOKill()
		{
		}

		[Token(Token = "0x6001400")]
		[Address(RVA = "0x8CE5AC", Offset = "0x8CE5AC", VA = "0x8CE5AC")]
		public void DOPlayById(string id)
		{
		}

		[Token(Token = "0x6001401")]
		[Address(RVA = "0x8CE628", Offset = "0x8CE628", VA = "0x8CE628")]
		public void DOPlayAllById(string id)
		{
		}

		[Token(Token = "0x6001402")]
		[Address(RVA = "0x8CE680", Offset = "0x8CE680", VA = "0x8CE680")]
		public void DOPauseAllById(string id)
		{
		}

		[Token(Token = "0x6001403")]
		[Address(RVA = "0x8CE6D8", Offset = "0x8CE6D8", VA = "0x8CE6D8")]
		public void DOPlayBackwardsById(string id)
		{
		}

		[Token(Token = "0x6001404")]
		[Address(RVA = "0x8CE754", Offset = "0x8CE754", VA = "0x8CE754")]
		public void DOPlayBackwardsAllById(string id)
		{
		}

		[Token(Token = "0x6001405")]
		[Address(RVA = "0x8CE7AC", Offset = "0x8CE7AC", VA = "0x8CE7AC")]
		public void DOPlayForwardById(string id)
		{
		}

		[Token(Token = "0x6001406")]
		[Address(RVA = "0x8CE828", Offset = "0x8CE828", VA = "0x8CE828")]
		public void DOPlayForwardAllById(string id)
		{
		}

		[Token(Token = "0x6001407")]
		[Address(RVA = "0x8CE880", Offset = "0x8CE880", VA = "0x8CE880")]
		public void DOPlayNext()
		{
		}

		[Token(Token = "0x6001408")]
		[Address(RVA = "0x8CE9B4", Offset = "0x8CE9B4", VA = "0x8CE9B4")]
		public void DORewindAndPlayNext()
		{
		}

		[Token(Token = "0x6001409")]
		[Address(RVA = "0x8CEA34", Offset = "0x8CEA34", VA = "0x8CEA34")]
		public void DORewindAllById(string id)
		{
		}

		[Token(Token = "0x600140A")]
		[Address(RVA = "0x8CEAA4", Offset = "0x8CEAA4", VA = "0x8CEAA4")]
		public void DORestartById(string id)
		{
		}

		[Token(Token = "0x600140B")]
		[Address(RVA = "0x8CEB30", Offset = "0x8CEB30", VA = "0x8CEB30")]
		public void DORestartAllById(string id)
		{
		}

		[Token(Token = "0x600140C")]
		[Address(RVA = "0x8CEBA4", Offset = "0x8CEBA4", VA = "0x8CEBA4")]
		public List<Tween> GetTweens()
		{
			return null;
		}

		[Token(Token = "0x600140D")]
		[Address(RVA = "0x8CD7E0", Offset = "0x8CD7E0", VA = "0x8CD7E0")]
		public static TargetType TypeToDOTargetType(Type t)
		{
			return default(TargetType);
		}

		[Token(Token = "0x600140E")]
		[Address(RVA = "0x8CECEC", Offset = "0x8CECEC", VA = "0x8CECEC")]
		public Tween CreateEditorPreview()
		{
			return null;
		}

		[Token(Token = "0x600140F")]
		[Address(RVA = "0x8CD7C8", Offset = "0x8CD7C8", VA = "0x8CD7C8")]
		private GameObject GetTweenGO()
		{
			return null;
		}

		[Token(Token = "0x6001410")]
		[Address(RVA = "0x8CE270", Offset = "0x8CE270", VA = "0x8CE270")]
		private void ReEvaluateRelativeTween()
		{
		}

		[Token(Token = "0x6001411")]
		[Address(RVA = "0x8CED1C", Offset = "0x8CED1C", VA = "0x8CED1C")]
		public DOTweenAnimation()
		{
		}
	}
	[Token(Token = "0x20003BE")]
	public static class DOTweenAnimationExtensions
	{
		[Token(Token = "0x6001413")]
		public static bool IsSameOrSubclassOf<T>(this Component t)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003BF")]
	public static class DOTweenProShortcuts
	{
		[Token(Token = "0x6001414")]
		[Address(RVA = "0x8CEEE8", Offset = "0x8CEEE8", VA = "0x8CEEE8")]
		static DOTweenProShortcuts()
		{
		}

		[Token(Token = "0x6001415")]
		[Address(RVA = "0x8CEF38", Offset = "0x8CEF38", VA = "0x8CEF38")]
		public static Tweener DOSpiral(this Transform target, float duration, [Optional] Vector3? axis, SpiralMode mode = SpiralMode.Expand, float speed = 1f, float frequency = 10f, float depth = 0f, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001416")]
		[Address(RVA = "0x8CF2EC", Offset = "0x8CF2EC", VA = "0x8CF2EC")]
		public static Tweener DOSpiral(this Rigidbody target, float duration, [Optional] Vector3? axis, SpiralMode mode = SpiralMode.Expand, float speed = 1f, float frequency = 10f, float depth = 0f, bool snapping = false)
		{
			return null;
		}
	}
	[Token(Token = "0x20003C2")]
	public static class ShortcutExtensionsTMPText
	{
		[Token(Token = "0x600141C")]
		[Address(RVA = "0x8CD9E0", Offset = "0x8CD9E0", VA = "0x8CD9E0")]
		public static TweenerCore<Color, Color, ColorOptions> DOColor(this TMP_Text target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x600141D")]
		[Address(RVA = "0x8CF700", Offset = "0x8CF700", VA = "0x8CF700")]
		public static TweenerCore<Color, Color, ColorOptions> DOFaceColor(this TMP_Text target, Color32 endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x600141E")]
		[Address(RVA = "0x8CF8D0", Offset = "0x8CF8D0", VA = "0x8CF8D0")]
		public static TweenerCore<Color, Color, ColorOptions> DOOutlineColor(this TMP_Text target, Color32 endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x600141F")]
		[Address(RVA = "0x8CFAA0", Offset = "0x8CFAA0", VA = "0x8CFAA0")]
		public static TweenerCore<Color, Color, ColorOptions> DOGlowColor(this TMP_Text target, Color endValue, float duration, bool useSharedMaterial = false)
		{
			return null;
		}

		[Token(Token = "0x6001420")]
		[Address(RVA = "0x8CDB74", Offset = "0x8CDB74", VA = "0x8CDB74")]
		public static TweenerCore<Color, Color, ColorOptions> DOFade(this TMP_Text target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001421")]
		[Address(RVA = "0x8CFB98", Offset = "0x8CFB98", VA = "0x8CFB98")]
		public static TweenerCore<Color, Color, ColorOptions> DOFaceFade(this TMP_Text target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001422")]
		[Address(RVA = "0x8CFD0C", Offset = "0x8CFD0C", VA = "0x8CFD0C")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOScale(this TMP_Text target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001423")]
		[Address(RVA = "0x8CFEA0", Offset = "0x8CFEA0", VA = "0x8CFEA0")]
		public static TweenerCore<float, float, FloatOptions> DOFontSize(this TMP_Text target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001424")]
		[Address(RVA = "0x8D0014", Offset = "0x8D0014", VA = "0x8D0014")]
		public static TweenerCore<int, int, NoOptions> DOMaxVisibleCharacters(this TMP_Text target, int endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001425")]
		[Address(RVA = "0x8CDCE0", Offset = "0x8CDCE0", VA = "0x8CDCE0")]
		public static TweenerCore<string, string, StringOptions> DOText(this TMP_Text target, string endValue, float duration, bool richTextEnabled = true, ScrambleMode scrambleMode = ScrambleMode.None, [Optional] string scrambleChars)
		{
			return null;
		}
	}
}
namespace Bhaptics.Tact.Unity
{
	[Token(Token = "0x20003CC")]
	public class AndroidHaptic : IHaptic
	{
		[Token(Token = "0x40011FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static AndroidJavaObject androidJavaObject;

		[Token(Token = "0x40011FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected List<HapticDevice> deviceList;

		[Token(Token = "0x40011FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<string> registeredCache;

		[Token(Token = "0x40011FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly object[] SubmitRegisteredParams;

		[Token(Token = "0x40011FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly int[] Empty;

		[Token(Token = "0x4001200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly object[] EmptyParams;

		[Token(Token = "0x4001201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static readonly RotationOption DefaultRotationOption;

		[Token(Token = "0x4001202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly object syncLock;

		[Token(Token = "0x4001203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<PositionType, int[]> updatedList;

		[Token(Token = "0x4001204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected IntPtr AndroidJavaObjectPtr;

		[Token(Token = "0x4001205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected IntPtr SubmitRegisteredPtr;

		[Token(Token = "0x4001206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected IntPtr SubmitRegisteredWithTimePtr;

		[Token(Token = "0x4001207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected IntPtr RegisterPtr;

		[Token(Token = "0x4001208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected IntPtr RegisterReflectedPtr;

		[Token(Token = "0x4001209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected IntPtr PingPtr;

		[Token(Token = "0x400120A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected IntPtr PingAllPtr;

		[Token(Token = "0x400120B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected IntPtr IsRegisteredPtr;

		[Token(Token = "0x400120C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected IntPtr IsPlayingPtr;

		[Token(Token = "0x400120D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected IntPtr IsPlayingAnythingPtr;

		[Token(Token = "0x400120E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected IntPtr ToggleStreamPtr;

		[Token(Token = "0x400120F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected IntPtr IsStreamingEnablePtr;

		[Token(Token = "0x4001210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected IntPtr GetStreamingHostsPtr;

		[Token(Token = "0x4001211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected IntPtr ShowBluetoothPtr;

		[Token(Token = "0x4001212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected IntPtr RefreshPairingInfoPtr;

		[Token(Token = "0x4001213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected IntPtr EnableDevicePtr;

		[Token(Token = "0x6001441")]
		[Address(RVA = "0x8D0CCC", Offset = "0x8D0CCC", VA = "0x8D0CCC")]
		public AndroidHaptic()
		{
		}

		[Token(Token = "0x6001442")]
		[Address(RVA = "0x8D16A4", Offset = "0x8D16A4", VA = "0x8D16A4")]
		public List<AndroidUtils.StreamHost> GetStreamingHosts()
		{
			return null;
		}

		[Token(Token = "0x6001443")]
		[Address(RVA = "0x8D1A8C", Offset = "0x8D1A8C", VA = "0x8D1A8C")]
		public bool IsStreamingEnable()
		{
			return default(bool);
		}

		[Token(Token = "0x6001444")]
		[Address(RVA = "0x8D1B88", Offset = "0x8D1B88", VA = "0x8D1B88")]
		public void ToggleStreaming()
		{
		}

		[Token(Token = "0x6001445")]
		[Address(RVA = "0x8D1CA8", Offset = "0x8D1CA8", VA = "0x8D1CA8", Slot = "4")]
		public bool IsConnect(PositionType type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001446")]
		[Address(RVA = "0x8D1E14", Offset = "0x8D1E14", VA = "0x8D1E14", Slot = "5")]
		public bool IsConnect(HapticDeviceType type, bool isLeft = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6001447")]
		[Address(RVA = "0x8D1FAC", Offset = "0x8D1FAC", VA = "0x8D1FAC", Slot = "6")]
		public bool IsPlaying(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001448")]
		[Address(RVA = "0x8D209C", Offset = "0x8D209C", VA = "0x8D209C", Slot = "7")]
		public bool IsFeedbackRegistered(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001449")]
		[Address(RVA = "0x8D222C", Offset = "0x8D222C", VA = "0x8D222C", Slot = "8")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x600144A")]
		[Address(RVA = "0x8D22C0", Offset = "0x8D22C0", VA = "0x8D22C0", Slot = "9")]
		public void RegisterTactFileStr(string key, string tactFileStr)
		{
		}

		[Token(Token = "0x600144B")]
		[Address(RVA = "0x8D23D8", Offset = "0x8D23D8", VA = "0x8D23D8", Slot = "10")]
		public void RegisterTactFileStrReflected(string key, string tactFileStr)
		{
		}

		[Token(Token = "0x600144C")]
		[Address(RVA = "0x8D24F0", Offset = "0x8D24F0", VA = "0x8D24F0", Slot = "11")]
		public void Submit(string key, PositionType position, List<DotPoint> points, int durationMillis)
		{
		}

		[Token(Token = "0x600144D")]
		[Address(RVA = "0x8D29B0", Offset = "0x8D29B0", VA = "0x8D29B0", Slot = "12")]
		public void Submit(string key, PositionType position, List<PathPoint> points, int durationMillis)
		{
		}

		[Token(Token = "0x600144E")]
		[Address(RVA = "0x8D2F28", Offset = "0x8D2F28", VA = "0x8D2F28", Slot = "13")]
		public void SubmitRegistered(string key, string altKey, ScaleOption option)
		{
		}

		[Token(Token = "0x600144F")]
		[Address(RVA = "0x8D2FB0", Offset = "0x8D2FB0", VA = "0x8D2FB0", Slot = "14")]
		public void SubmitRegistered(string key, string altKey, RotationOption rOption, ScaleOption sOption)
		{
		}

		[Token(Token = "0x6001450")]
		[Address(RVA = "0x8D3250", Offset = "0x8D3250", VA = "0x8D3250", Slot = "15")]
		public void SubmitRegistered(string key)
		{
		}

		[Token(Token = "0x6001451")]
		[Address(RVA = "0x8D3268", Offset = "0x8D3268", VA = "0x8D3268", Slot = "16")]
		public void SubmitRegistered(string key, int startTimeMillis)
		{
		}

		[Token(Token = "0x6001452")]
		[Address(RVA = "0x8D3378", Offset = "0x8D3378", VA = "0x8D3378", Slot = "17")]
		public void TurnOff(string key)
		{
		}

		[Token(Token = "0x6001453")]
		[Address(RVA = "0x8D359C", Offset = "0x8D359C", VA = "0x8D359C", Slot = "18")]
		public void TurnOff()
		{
		}

		[Token(Token = "0x6001454")]
		[Address(RVA = "0x8D37A8", Offset = "0x8D37A8", VA = "0x8D37A8", Slot = "19")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001455")]
		[Address(RVA = "0x8D2FD0", Offset = "0x8D2FD0", VA = "0x8D2FD0")]
		private void SubmitRequest(string key, string altKey, float intensity, float duration, float offsetAngleX, float offsetY)
		{
		}

		[Token(Token = "0x6001456")]
		[Address(RVA = "0x8D38A8", Offset = "0x8D38A8", VA = "0x8D38A8", Slot = "20")]
		public int[] GetCurrentFeedback(PositionType pos)
		{
			return null;
		}

		[Token(Token = "0x6001457")]
		[Address(RVA = "0x8D15A4", Offset = "0x8D15A4", VA = "0x8D15A4")]
		public List<HapticDevice> GetDevices()
		{
			return null;
		}

		[Token(Token = "0x6001458")]
		[Address(RVA = "0x8D3B94", Offset = "0x8D3B94", VA = "0x8D3B94")]
		public void TogglePosition(string address)
		{
		}

		[Token(Token = "0x6001459")]
		[Address(RVA = "0x8D3CC8", Offset = "0x8D3CC8", VA = "0x8D3CC8")]
		public void PingAll()
		{
		}

		[Token(Token = "0x600145A")]
		[Address(RVA = "0x8D3D58", Offset = "0x8D3D58", VA = "0x8D3D58")]
		public void Ping(string address)
		{
		}

		[Token(Token = "0x600145B")]
		[Address(RVA = "0x8D3E44", Offset = "0x8D3E44", VA = "0x8D3E44")]
		public void ShowBluetoothSetting()
		{
		}

		[Token(Token = "0x600145C")]
		[Address(RVA = "0x8D3EE0", Offset = "0x8D3EE0", VA = "0x8D3EE0")]
		public void EnableDevice(string address, bool boo)
		{
		}

		[Token(Token = "0x600145D")]
		[Address(RVA = "0x8D4020", Offset = "0x8D4020", VA = "0x8D4020")]
		public void RefreshPairingInfo()
		{
		}

		[Token(Token = "0x600145E")]
		[Address(RVA = "0x8D1C18", Offset = "0x8D1C18", VA = "0x8D1C18")]
		private void CallNativeVoidMethod(IntPtr methodPtr, object[] param)
		{
		}

		[Token(Token = "0x600145F")]
		[Address(RVA = "0x8D1AF4", Offset = "0x8D1AF4", VA = "0x8D1AF4")]
		private bool CallNativeBoolMethod(IntPtr methodPtr, object[] param)
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x20003CD")]
	public class HapticDevice
	{
		[Token(Token = "0x4001214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool IsPaired;

		[Token(Token = "0x4001215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool IsConnected;

		[Token(Token = "0x4001216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string DeviceName;

		[Token(Token = "0x4001217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PositionType Position;

		[Token(Token = "0x4001218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string Address;

		[Token(Token = "0x4001219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PositionType[] Candidates;

		[Token(Token = "0x400121A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool IsEnable;

		[Token(Token = "0x400121B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool IsAudioJack;

		[Token(Token = "0x400121C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int Battery;

		[Token(Token = "0x6001461")]
		[Address(RVA = "0x8D51B4", Offset = "0x8D51B4", VA = "0x8D51B4")]
		public HapticDevice()
		{
		}
	}
	[Token(Token = "0x20003CE")]
	public static class AndroidUtils
	{
		[Serializable]
		[Token(Token = "0x20003CF")]
		private class Wrapper<T>
		{
			[Token(Token = "0x400121D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T[] array;

			[Token(Token = "0x600146B")]
			public Wrapper()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20003D0")]
		private class Device
		{
			[Token(Token = "0x400121E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool paired;

			[Token(Token = "0x400121F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string deviceName;

			[Token(Token = "0x4001220")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int position;

			[Token(Token = "0x4001221")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public bool connected;

			[Token(Token = "0x4001222")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string address;

			[Token(Token = "0x4001223")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int battery;

			[Token(Token = "0x4001224")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public bool enable;

			[Token(Token = "0x4001225")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
			public bool audioJackIn;

			[Token(Token = "0x600146C")]
			[Address(RVA = "0x8D5984", Offset = "0x8D5984", VA = "0x8D5984")]
			public Device()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20003D1")]
		public class StreamHost
		{
			[Token(Token = "0x4001226")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string ip;

			[Token(Token = "0x4001227")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool connected;

			[Token(Token = "0x600146D")]
			[Address(RVA = "0x8D598C", Offset = "0x8D598C", VA = "0x8D598C")]
			public StreamHost()
			{
			}
		}

		[Token(Token = "0x6001462")]
		[Address(RVA = "0x8D51BC", Offset = "0x8D51BC", VA = "0x8D51BC")]
		private static PositionType ToDeviceType(int type)
		{
			return default(PositionType);
		}

		[Token(Token = "0x6001463")]
		[Address(RVA = "0x8D51E0", Offset = "0x8D51E0", VA = "0x8D51E0")]
		private static PositionType[] ToCandidates(int type)
		{
			return null;
		}

		[Token(Token = "0x6001464")]
		[Address(RVA = "0x8D5334", Offset = "0x8D5334", VA = "0x8D5334")]
		public static bool IsLeft(PositionType pos)
		{
			return default(bool);
		}

		[Token(Token = "0x6001465")]
		[Address(RVA = "0x8D535C", Offset = "0x8D535C", VA = "0x8D535C")]
		public static bool CanChangePosition(PositionType pos)
		{
			return default(bool);
		}

		[Token(Token = "0x6001466")]
		public static T[] GetJsonArray<T>(string json)
		{
			return null;
		}

		[Token(Token = "0x6001467")]
		[Address(RVA = "0x8D536C", Offset = "0x8D536C", VA = "0x8D536C")]
		private static HapticDevice Convert(Device d)
		{
			return null;
		}

		[Token(Token = "0x6001468")]
		[Address(RVA = "0x8D5438", Offset = "0x8D5438", VA = "0x8D5438")]
		public static List<HapticDevice> ConvertToBhapticsDevices(string[] deviceJson)
		{
			return null;
		}

		[Token(Token = "0x6001469")]
		[Address(RVA = "0x8D5584", Offset = "0x8D5584", VA = "0x8D5584")]
		public static void CallNativeVoidMethod(IntPtr androidObjPtr, IntPtr methodPtr, object[] param)
		{
		}

		[Token(Token = "0x600146A")]
		[Address(RVA = "0x8D5780", Offset = "0x8D5780", VA = "0x8D5780")]
		public static bool CallNativeBoolMethod(IntPtr androidObjPtr, IntPtr methodPtr, object[] param)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003D2")]
	public class AndroidWidget_ControlButton : MonoBehaviour
	{
		[Token(Token = "0x4001228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PositionType DeviceType;

		[Token(Token = "0x4001229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[Header("Images")]
		private Sprite defaultImage;

		[Token(Token = "0x400122A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Sprite pairImage;

		[Token(Token = "0x400122B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Sprite defaultHoverImage;

		[Token(Token = "0x400122C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Sprite pairHoverImage;

		[Token(Token = "0x400122D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Transform pairDeviceCount;

		[Token(Token = "0x400122E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Button button;

		[Token(Token = "0x600146E")]
		[Address(RVA = "0x8D5994", Offset = "0x8D5994", VA = "0x8D5994")]
		private void Awake()
		{
		}

		[Token(Token = "0x600146F")]
		[Address(RVA = "0x8D5A48", Offset = "0x8D5A48", VA = "0x8D5A48")]
		public void Refresh()
		{
		}

		[Token(Token = "0x6001470")]
		[Address(RVA = "0x8D61CC", Offset = "0x8D61CC", VA = "0x8D61CC")]
		public void OnPingDevice()
		{
		}

		[Token(Token = "0x6001471")]
		[Address(RVA = "0x8D6434", Offset = "0x8D6434", VA = "0x8D6434")]
		public void OnClickDevice()
		{
		}

		[Token(Token = "0x6001472")]
		[Address(RVA = "0x8D64C0", Offset = "0x8D64C0", VA = "0x8D64C0")]
		public AndroidWidget_ControlButton()
		{
		}
	}
	[Token(Token = "0x20003D3")]
	public class AndroidWidget_ObjectPool : MonoBehaviour
	{
		[Token(Token = "0x400122F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ScrollRect pariedDeviceScrollrect;

		[Token(Token = "0x4001230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AndroidWidget_PairedDeviceUI pairedDeviceUIGameObject;

		[Token(Token = "0x4001231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private int objectCount;

		[Token(Token = "0x4001232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<AndroidWidget_PairedDeviceUI> pairedUIList;

		[Token(Token = "0x6001473")]
		[Address(RVA = "0x8D64C8", Offset = "0x8D64C8", VA = "0x8D64C8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001474")]
		[Address(RVA = "0x8D668C", Offset = "0x8D668C", VA = "0x8D668C")]
		public AndroidWidget_PairedDeviceUI GetPairedDeviceUI()
		{
			return null;
		}

		[Token(Token = "0x6001475")]
		[Address(RVA = "0x8D674C", Offset = "0x8D674C", VA = "0x8D674C")]
		public void DisableAll()
		{
		}

		[Token(Token = "0x6001476")]
		[Address(RVA = "0x8D67E8", Offset = "0x8D67E8", VA = "0x8D67E8")]
		public AndroidWidget_ObjectPool()
		{
		}
	}
	[Token(Token = "0x20003D4")]
	public class AndroidWidget_PairedDeviceUI : MonoBehaviour
	{
		[Token(Token = "0x4001233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("[UI]")]
		[SerializeField]
		private Image deviceImage;

		[Token(Token = "0x4001234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text deviceName;

		[Token(Token = "0x4001235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Button pingButton;

		[Token(Token = "0x4001236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Button toggleButton;

		[Token(Token = "0x4001237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Header("[Sprites]")]
		[SerializeField]
		private Sprite leftSide;

		[Token(Token = "0x4001238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Sprite rightSide;

		[Token(Token = "0x4001239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private HapticDevice device;

		[Token(Token = "0x6001477")]
		[Address(RVA = "0x8D67F0", Offset = "0x8D67F0", VA = "0x8D67F0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001478")]
		[Address(RVA = "0x8D68E0", Offset = "0x8D68E0", VA = "0x8D68E0")]
		public void Refresh(HapticDevice tactDevice, Bhaptics_Widget_Setting setting)
		{
		}

		[Token(Token = "0x6001479")]
		[Address(RVA = "0x8D6BCC", Offset = "0x8D6BCC", VA = "0x8D6BCC")]
		private void OnPing()
		{
		}

		[Token(Token = "0x600147A")]
		[Address(RVA = "0x8D6DAC", Offset = "0x8D6DAC", VA = "0x8D6DAC")]
		private void OnSwap()
		{
		}

		[Token(Token = "0x600147B")]
		[Address(RVA = "0x8D6F14", Offset = "0x8D6F14", VA = "0x8D6F14")]
		public AndroidWidget_PairedDeviceUI()
		{
		}
	}
	[Token(Token = "0x20003D5")]
	public class AndroidWidget_SettingUIAnimation : MonoBehaviour
	{
		[Token(Token = "0x400123A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject SettingUI;

		[Token(Token = "0x400123B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Animator animator;

		[Token(Token = "0x400123C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool settingPanelEnable;

		[Token(Token = "0x600147C")]
		[Address(RVA = "0x8D6F1C", Offset = "0x8D6F1C", VA = "0x8D6F1C")]
		private void Start()
		{
		}

		[Token(Token = "0x600147D")]
		[Address(RVA = "0x8D6F84", Offset = "0x8D6F84", VA = "0x8D6F84")]
		public void Hide()
		{
		}

		[Token(Token = "0x600147E")]
		[Address(RVA = "0x8D6FA4", Offset = "0x8D6FA4", VA = "0x8D6FA4")]
		public void Show()
		{
		}

		[Token(Token = "0x600147F")]
		[Address(RVA = "0x8D6FC4", Offset = "0x8D6FC4", VA = "0x8D6FC4")]
		public void ToggleSettingButton()
		{
		}

		[Token(Token = "0x6001480")]
		[Address(RVA = "0x8D70E4", Offset = "0x8D70E4", VA = "0x8D70E4")]
		public AndroidWidget_SettingUIAnimation()
		{
		}
	}
	[Token(Token = "0x20003D6")]
	public class AndroidWidget_UI : MonoBehaviour
	{
		[Token(Token = "0x400123D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject uiContainer;

		[Token(Token = "0x400123E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Button pingAllButton;

		[Token(Token = "0x400123F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Header("DeviceImages")]
		[SerializeField]
		private Bhaptics_Widget_Setting WidgetSetting;

		[Token(Token = "0x4001240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AndroidWidget_ObjectPool settingObjectPool;

		[Token(Token = "0x4001241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AudioSource buttonClickAudio;

		[Token(Token = "0x4001242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Animator animator;

		[Token(Token = "0x4001243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool widgetActive;

		[Token(Token = "0x4001244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private AndroidWidget_ControlButton[] controllButtons;

		[Token(Token = "0x4001245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static AndroidWidget_UI Instance;

		[Token(Token = "0x6001481")]
		[Address(RVA = "0x8D70EC", Offset = "0x8D70EC", VA = "0x8D70EC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001482")]
		[Address(RVA = "0x8D75BC", Offset = "0x8D75BC", VA = "0x8D75BC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001483")]
		[Address(RVA = "0x8D7298", Offset = "0x8D7298", VA = "0x8D7298")]
		private void InitializeButtons()
		{
		}

		[Token(Token = "0x6001484")]
		[Address(RVA = "0x8D77C0", Offset = "0x8D77C0", VA = "0x8D77C0")]
		public void ToggleWidgetButton()
		{
		}

		[Token(Token = "0x6001485")]
		[Address(RVA = "0x8D785C", Offset = "0x8D785C", VA = "0x8D785C")]
		public void ShowWidget()
		{
		}

		[Token(Token = "0x6001486")]
		[Address(RVA = "0x8D787C", Offset = "0x8D787C", VA = "0x8D787C")]
		public void HideWidget()
		{
		}

		[Token(Token = "0x6001487")]
		[Address(RVA = "0x8D789C", Offset = "0x8D789C", VA = "0x8D789C")]
		public void ButtonClickSound()
		{
		}

		[Token(Token = "0x6001488")]
		[Address(RVA = "0x8D78B8", Offset = "0x8D78B8", VA = "0x8D78B8")]
		private void RefreshPairedDevices(List<HapticDevice> devices)
		{
		}

		[Token(Token = "0x6001489")]
		[Address(RVA = "0x8D76C8", Offset = "0x8D76C8", VA = "0x8D76C8")]
		public void Refresh()
		{
		}

		[Token(Token = "0x600148A")]
		[Address(RVA = "0x8D7BBC", Offset = "0x8D7BBC", VA = "0x8D7BBC")]
		public AndroidWidget_UI()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003D7")]
	public class PositonIconSetting
	{
		[Token(Token = "0x4001246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Sprite connect;

		[Token(Token = "0x4001247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Sprite disconnect;

		[Token(Token = "0x600148B")]
		[Address(RVA = "0x8D7BCC", Offset = "0x8D7BCC", VA = "0x8D7BCC")]
		public PositonIconSetting()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003D8")]
	public class IconSetting
	{
		[Token(Token = "0x4001248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Header("[Setting Icons]")]
		public PositonIconSetting Vest;

		[Token(Token = "0x4001249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PositonIconSetting Head;

		[Token(Token = "0x400124A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PositonIconSetting Arm;

		[Token(Token = "0x400124B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PositonIconSetting Foot;

		[Token(Token = "0x400124C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PositonIconSetting Hand;

		[Token(Token = "0x600148C")]
		[Address(RVA = "0x8D7BD4", Offset = "0x8D7BD4", VA = "0x8D7BD4")]
		public IconSetting()
		{
		}
	}
	[Token(Token = "0x20003D9")]
	public class Android_DeviceController : MonoBehaviour
	{
		[Token(Token = "0x400124D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[Header("UI")]
		private Image icon;

		[Token(Token = "0x400124E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private IconSetting widgetSetting;

		[Token(Token = "0x400124F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Sprite TactsuitWiredIcon;

		[Token(Token = "0x4001250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Image batteryLowImage;

		[Token(Token = "0x4001251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[Header("Connect Menu")]
		private GameObject ConnectMenu;

		[Token(Token = "0x4001252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Button pingButton;

		[Token(Token = "0x4001253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Button lButton;

		[Token(Token = "0x4001254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Button rButton;

		[Token(Token = "0x4001255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject wiredNotification;

		[Token(Token = "0x4001256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Header("Disconnect Menu")]
		[SerializeField]
		private GameObject DisconnectMenu;

		[Token(Token = "0x4001257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string SelectHexColor;

		[Token(Token = "0x4001258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string SelectHoverHexColor;

		[Token(Token = "0x4001259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string DisableHexColor;

		[Token(Token = "0x400125A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static string DisableHoverHexColor;

		[Token(Token = "0x400125B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private HapticDevice device;

		[Token(Token = "0x600148D")]
		[Address(RVA = "0x8D7BDC", Offset = "0x8D7BDC", VA = "0x8D7BDC")]
		private void Awake()
		{
		}

		[Token(Token = "0x600148E")]
		[Address(RVA = "0x8D7DBC", Offset = "0x8D7DBC", VA = "0x8D7DBC")]
		public void RefreshDevice(HapticDevice d)
		{
		}

		[Token(Token = "0x600148F")]
		[Address(RVA = "0x8D7F5C", Offset = "0x8D7F5C", VA = "0x8D7F5C")]
		private void RenderConnectMenu()
		{
		}

		[Token(Token = "0x6001490")]
		[Address(RVA = "0x8D7FE4", Offset = "0x8D7FE4", VA = "0x8D7FE4")]
		private void RenderDisconnectMenu()
		{
		}

		[Token(Token = "0x6001491")]
		[Address(RVA = "0x8D8054", Offset = "0x8D8054", VA = "0x8D8054")]
		private void UpdateButtons()
		{
		}

		[Token(Token = "0x6001492")]
		[Address(RVA = "0x8D7E54", Offset = "0x8D7E54", VA = "0x8D7E54")]
		private void UpdateIcon(HapticDevice d)
		{
		}

		[Token(Token = "0x6001493")]
		[Address(RVA = "0x8D8478", Offset = "0x8D8478", VA = "0x8D8478")]
		private Sprite GetSprite(PositonIconSetting icon, bool connected)
		{
			return null;
		}

		[Token(Token = "0x6001494")]
		[Address(RVA = "0x8D84A0", Offset = "0x8D84A0", VA = "0x8D84A0")]
		private void Ping()
		{
		}

		[Token(Token = "0x6001495")]
		[Address(RVA = "0x8D8508", Offset = "0x8D8508", VA = "0x8D8508")]
		private void ToLeft()
		{
		}

		[Token(Token = "0x6001496")]
		[Address(RVA = "0x8D85DC", Offset = "0x8D85DC", VA = "0x8D85DC")]
		private void ToRight()
		{
		}

		[Token(Token = "0x6001497")]
		[Address(RVA = "0x8D86B0", Offset = "0x8D86B0", VA = "0x8D86B0")]
		private Color ToColor(string hex)
		{
			return default(Color);
		}

		[Token(Token = "0x6001498")]
		[Address(RVA = "0x8D8344", Offset = "0x8D8344", VA = "0x8D8344")]
		private void ChangeButtonColor(Button targetButton, bool isSelect)
		{
		}

		[Token(Token = "0x6001499")]
		[Address(RVA = "0x8D82DC", Offset = "0x8D82DC", VA = "0x8D82DC")]
		private static bool IsLeft(PositionType pos)
		{
			return default(bool);
		}

		[Token(Token = "0x600149A")]
		[Address(RVA = "0x8D8310", Offset = "0x8D8310", VA = "0x8D8310")]
		private static bool IsRight(PositionType pos)
		{
			return default(bool);
		}

		[Token(Token = "0x600149B")]
		[Address(RVA = "0x8D86E4", Offset = "0x8D86E4", VA = "0x8D86E4")]
		public Android_DeviceController()
		{
		}
	}
	[Token(Token = "0x20003DA")]
	public class Android_UIController : MonoBehaviour
	{
		[Token(Token = "0x400125C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private RectTransform mainPanel;

		[Token(Token = "0x400125D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform devicesContainer;

		[Token(Token = "0x400125E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform deviceListPageUi;

		[Token(Token = "0x400125F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Button deviceListNextPageButton;

		[Token(Token = "0x4001260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Button deviceListBackPageButton;

		[Token(Token = "0x4001261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Text deviceListPageText;

		[Token(Token = "0x4001262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Android_DeviceController devicePrefab;

		[Token(Token = "0x4001263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Header("No Paired Device UI")]
		[SerializeField]
		private GameObject noPairedDeviceUi;

		[Token(Token = "0x4001264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Button helpButton;

		[Token(Token = "0x4001265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Button bHpaticsLinkButton;

		[Token(Token = "0x4001266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject helpUi;

		[Token(Token = "0x4001267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Button helpCloseButton;

		[Token(Token = "0x4001268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<Android_DeviceController> controllers;

		[Token(Token = "0x4001269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private BoxCollider mainPanelCollider;

		[Token(Token = "0x400126A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector2 defaultMainPanelSize;

		[Token(Token = "0x400126B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector2 defaultDeviceContainerSize;

		[Token(Token = "0x400126C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int deviceListSize;

		[Token(Token = "0x400126D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private int deviceListPageIndex;

		[Token(Token = "0x400126E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private int expandHeight;

		[Token(Token = "0x400126F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private int expandDeviceCount;

		[Token(Token = "0x4001270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private int pageActivateDeviceCount;

		[Token(Token = "0x4001271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private int pageExpandHeight;

		[Token(Token = "0x4001272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private int maxPageIndex;

		[Token(Token = "0x600149D")]
		[Address(RVA = "0x8D87B8", Offset = "0x8D87B8", VA = "0x8D87B8")]
		private void Awake()
		{
		}

		[Token(Token = "0x600149E")]
		[Address(RVA = "0x8D8C80", Offset = "0x8D8C80", VA = "0x8D8C80")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600149F")]
		[Address(RVA = "0x8D8DA0", Offset = "0x8D8DA0", VA = "0x8D8DA0")]
		private void Refresh()
		{
		}

		[Token(Token = "0x60014A0")]
		[Address(RVA = "0x8D93FC", Offset = "0x8D93FC", VA = "0x8D93FC")]
		private void OnHelp()
		{
		}

		[Token(Token = "0x60014A1")]
		[Address(RVA = "0x8D9484", Offset = "0x8D9484", VA = "0x8D9484")]
		private void CloseHelpNotification()
		{
		}

		[Token(Token = "0x60014A2")]
		[Address(RVA = "0x8D950C", Offset = "0x8D950C", VA = "0x8D950C")]
		private void OpenLink()
		{
		}

		[Token(Token = "0x60014A3")]
		[Address(RVA = "0x8D9550", Offset = "0x8D9550", VA = "0x8D9550")]
		private void NextPage()
		{
		}

		[Token(Token = "0x60014A4")]
		[Address(RVA = "0x8D9574", Offset = "0x8D9574", VA = "0x8D9574")]
		private void BackPage()
		{
		}

		[Token(Token = "0x60014A5")]
		[Address(RVA = "0x8D9598", Offset = "0x8D9598", VA = "0x8D9598")]
		public Android_UIController()
		{
		}
	}
	[Token(Token = "0x20003DB")]
	public class BhapticsAndroidManager : MonoBehaviour
	{
		[Token(Token = "0x4001273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static BhapticsAndroidManager Instance;

		[Token(Token = "0x4001274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static bool pcAndoidTestMode;

		[Token(Token = "0x4001275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<HapticDevice> Devices;

		[Token(Token = "0x4001276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static List<UnityAction> refreshActions;

		[Token(Token = "0x60014A6")]
		[Address(RVA = "0x8D9628", Offset = "0x8D9628", VA = "0x8D9628")]
		private void Awake()
		{
		}

		[Token(Token = "0x60014A7")]
		[Address(RVA = "0x8D972C", Offset = "0x8D972C", VA = "0x8D972C")]
		private void Start()
		{
		}

		[Token(Token = "0x60014A8")]
		[Address(RVA = "0x8D97C4", Offset = "0x8D97C4", VA = "0x8D97C4")]
		private void RefreshDevices()
		{
		}

		[Token(Token = "0x60014A9")]
		[Address(RVA = "0x8D6224", Offset = "0x8D6224", VA = "0x8D6224")]
		public static void Ping(PositionType pos)
		{
		}

		[Token(Token = "0x60014AA")]
		[Address(RVA = "0x8D6E7C", Offset = "0x8D6E7C", VA = "0x8D6E7C")]
		public static void TogglePosition(string address)
		{
		}

		[Token(Token = "0x60014AB")]
		[Address(RVA = "0x8D6C40", Offset = "0x8D6C40", VA = "0x8D6C40")]
		public static void Ping(HapticDevice device)
		{
		}

		[Token(Token = "0x60014AC")]
		[Address(RVA = "0x8D9C60", Offset = "0x8D9C60", VA = "0x8D9C60")]
		public static void PingAll()
		{
		}

		[Token(Token = "0x60014AD")]
		[Address(RVA = "0x8D7AB8", Offset = "0x8D7AB8", VA = "0x8D7AB8")]
		public static List<HapticDevice> GetDevices()
		{
			return null;
		}

		[Token(Token = "0x60014AE")]
		[Address(RVA = "0x8D5F7C", Offset = "0x8D5F7C", VA = "0x8D5F7C")]
		public static List<HapticDevice> GetConnectedDevices(PositionType pos)
		{
			return null;
		}

		[Token(Token = "0x60014AF")]
		[Address(RVA = "0x8D9CE4", Offset = "0x8D9CE4", VA = "0x8D9CE4")]
		public static List<HapticDevice> GetPairedDevices(PositionType pos)
		{
			return null;
		}

		[Token(Token = "0x60014B0")]
		[Address(RVA = "0x8D74EC", Offset = "0x8D74EC", VA = "0x8D74EC")]
		public static void AddRefreshAction(UnityAction action)
		{
		}

		[Token(Token = "0x60014B1")]
		[Address(RVA = "0x8D8D20", Offset = "0x8D8D20", VA = "0x8D8D20")]
		public static void RemoveRefreshAction(UnityAction action)
		{
		}

		[Token(Token = "0x60014B2")]
		[Address(RVA = "0x8D9F2C", Offset = "0x8D9F2C", VA = "0x8D9F2C")]
		public static void RemoveRefreshAction()
		{
		}

		[Token(Token = "0x60014B3")]
		[Address(RVA = "0x8D9FC4", Offset = "0x8D9FC4", VA = "0x8D9FC4")]
		public static bool IsStreaming()
		{
			return default(bool);
		}

		[Token(Token = "0x60014B4")]
		[Address(RVA = "0x8DA04C", Offset = "0x8DA04C", VA = "0x8DA04C")]
		public static void ToggleStreaming()
		{
		}

		[Token(Token = "0x60014B5")]
		[Address(RVA = "0x8DA0D0", Offset = "0x8DA0D0", VA = "0x8DA0D0")]
		public static List<AndroidUtils.StreamHost> GetStreamingHosts()
		{
			return null;
		}

		[Token(Token = "0x60014B6")]
		[Address(RVA = "0x8DA190", Offset = "0x8DA190", VA = "0x8DA190")]
		public static void ShowBluetoothSetting()
		{
		}

		[Token(Token = "0x60014B7")]
		[Address(RVA = "0x8DA214", Offset = "0x8DA214", VA = "0x8DA214")]
		public static void ToggleEnableDevice(HapticDevice device)
		{
		}

		[Token(Token = "0x60014B8")]
		[Address(RVA = "0x8DA2BC", Offset = "0x8DA2BC", VA = "0x8DA2BC")]
		private void OnApplicationFocus(bool pauseStatus)
		{
		}

		[Token(Token = "0x60014B9")]
		[Address(RVA = "0x8DA354", Offset = "0x8DA354", VA = "0x8DA354")]
		public BhapticsAndroidManager()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003DC")]
	public class SettingDeviceIcon
	{
		[Token(Token = "0x4001277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Sprite pairImage;

		[Token(Token = "0x4001278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Sprite unpairImage;

		[Token(Token = "0x60014BB")]
		[Address(RVA = "0x8DA468", Offset = "0x8DA468", VA = "0x8DA468")]
		public SettingDeviceIcon()
		{
		}
	}
	[Token(Token = "0x20003DD")]
	public class Bhaptics_Widget_Setting : ScriptableObject
	{
		[Token(Token = "0x4001279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("[Setting Icons]")]
		public SettingDeviceIcon SettingTactot;

		[Token(Token = "0x400127A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SettingDeviceIcon SettingTactal;

		[Token(Token = "0x400127B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SettingDeviceIcon SettingTactosyArm;

		[Token(Token = "0x400127C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SettingDeviceIcon SettingTactosyFoot;

		[Token(Token = "0x400127D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public SettingDeviceIcon SettingTactosyHand;

		[Token(Token = "0x60014BC")]
		[Address(RVA = "0x8D6A70", Offset = "0x8D6A70", VA = "0x8D6A70")]
		public Sprite GetPairedDeviceSprite(HapticDevice device)
		{
			return null;
		}

		[Token(Token = "0x60014BD")]
		[Address(RVA = "0x8DA470", Offset = "0x8DA470", VA = "0x8DA470")]
		public Bhaptics_Widget_Setting()
		{
		}
	}
	[Token(Token = "0x20003DE")]
	public class HapticApi
	{
		[Token(Token = "0x20003DF")]
		public struct point
		{
			[Token(Token = "0x400127E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float x;

			[Token(Token = "0x400127F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float y;

			[Token(Token = "0x4001280")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int intensity;

			[Token(Token = "0x4001281")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int motorCount;
		}

		[Token(Token = "0x20003E0")]
		public struct status
		{
			[Token(Token = "0x4001282")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int[] values;
		}

		[PreserveSig]
		[Token(Token = "0x60014BE")]
		[Address(RVA = "0x8DA478", Offset = "0x8DA478", VA = "0x8DA478")]
		public static extern bool TryGetExePath(byte[] buf, ref int size);

		[PreserveSig]
		[Token(Token = "0x60014BF")]
		[Address(RVA = "0x8DA50C", Offset = "0x8DA50C", VA = "0x8DA50C")]
		public static extern void Initialise(string appId, string appName);

		[PreserveSig]
		[Token(Token = "0x60014C0")]
		[Address(RVA = "0x8DA5B8", Offset = "0x8DA5B8", VA = "0x8DA5B8")]
		public static extern void Destroy();

		[PreserveSig]
		[Token(Token = "0x60014C1")]
		[Address(RVA = "0x8DA61C", Offset = "0x8DA61C", VA = "0x8DA61C")]
		public static extern void RegisterFeedback(string str, string projectJson);

		[PreserveSig]
		[Token(Token = "0x60014C2")]
		[Address(RVA = "0x8DA6C4", Offset = "0x8DA6C4", VA = "0x8DA6C4")]
		public static extern void RegisterFeedbackFromTactFile(string str, string tactFileStr);

		[PreserveSig]
		[Token(Token = "0x60014C3")]
		[Address(RVA = "0x8DA770", Offset = "0x8DA770", VA = "0x8DA770")]
		public static extern void RegisterFeedbackFromTactFileReflected(string str, string tactFileStr);

		[PreserveSig]
		[Token(Token = "0x60014C4")]
		[Address(RVA = "0x8DA81C", Offset = "0x8DA81C", VA = "0x8DA81C")]
		public static extern void SubmitRegistered(string key);

		[PreserveSig]
		[Token(Token = "0x60014C5")]
		[Address(RVA = "0x8DA8A8", Offset = "0x8DA8A8", VA = "0x8DA8A8")]
		public static extern void SubmitRegisteredStartMillis(string key, int startTimeMillis);

		[PreserveSig]
		[Token(Token = "0x60014C6")]
		[Address(RVA = "0x8DA93C", Offset = "0x8DA93C", VA = "0x8DA93C")]
		public static extern void SubmitRegisteredWithOption(string key, string altKey, float intensity, float duration, float offsetX, float offsetY);

		[PreserveSig]
		[Token(Token = "0x60014C7")]
		[Address(RVA = "0x8DAA18", Offset = "0x8DAA18", VA = "0x8DAA18")]
		public static extern void SubmitByteArray(string key, PositionType pos, byte[] charPtr, int length, int durationMillis);

		[PreserveSig]
		[Token(Token = "0x60014C8")]
		[Address(RVA = "0x8DAADC", Offset = "0x8DAADC", VA = "0x8DAADC")]
		public static extern void SubmitPathArray(string key, PositionType pos, point[] charPtr, int length, int durationMillis);

		[PreserveSig]
		[Token(Token = "0x60014C9")]
		[Address(RVA = "0x8DABA0", Offset = "0x8DABA0", VA = "0x8DABA0")]
		public static extern bool IsFeedbackRegistered(string key);

		[PreserveSig]
		[Token(Token = "0x60014CA")]
		[Address(RVA = "0x8DAC38", Offset = "0x8DAC38", VA = "0x8DAC38")]
		public static extern bool IsPlaying();

		[PreserveSig]
		[Token(Token = "0x60014CB")]
		[Address(RVA = "0x8DACA8", Offset = "0x8DACA8", VA = "0x8DACA8")]
		public static extern bool IsPlayingKey(string key);

		[PreserveSig]
		[Token(Token = "0x60014CC")]
		[Address(RVA = "0x8DAD40", Offset = "0x8DAD40", VA = "0x8DAD40")]
		public static extern void TurnOff();

		[PreserveSig]
		[Token(Token = "0x60014CD")]
		[Address(RVA = "0x8DADA4", Offset = "0x8DADA4", VA = "0x8DADA4")]
		public static extern void TurnOffKey(string key);

		[PreserveSig]
		[Token(Token = "0x60014CE")]
		[Address(RVA = "0x8DAE30", Offset = "0x8DAE30", VA = "0x8DAE30")]
		public static extern void EnableFeedback();

		[PreserveSig]
		[Token(Token = "0x60014CF")]
		[Address(RVA = "0x8DAE90", Offset = "0x8DAE90", VA = "0x8DAE90")]
		public static extern void DisableFeedback();

		[PreserveSig]
		[Token(Token = "0x60014D0")]
		[Address(RVA = "0x8DAEF4", Offset = "0x8DAEF4", VA = "0x8DAEF4")]
		public static extern void ToggleFeedback();

		[PreserveSig]
		[Token(Token = "0x60014D1")]
		[Address(RVA = "0x8DAF54", Offset = "0x8DAF54", VA = "0x8DAF54")]
		public static extern bool IsDevicePlaying(PositionType pos);

		[PreserveSig]
		[Token(Token = "0x60014D2")]
		[Address(RVA = "0x8DAFD8", Offset = "0x8DAFD8", VA = "0x8DAFD8")]
		public static extern bool TryGetResponseForPosition(PositionType pos, out status status);

		[Token(Token = "0x60014D3")]
		[Address(RVA = "0x8DB090", Offset = "0x8DB090", VA = "0x8DB090")]
		public HapticApi()
		{
		}
	}
	[Token(Token = "0x20003E1")]
	public class ArmsHapticClip : FileHapticClip
	{
		[Token(Token = "0x4001283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool IsReflect;

		[Token(Token = "0x60014D4")]
		[Address(RVA = "0x8DB098", Offset = "0x8DB098", VA = "0x8DB098", Slot = "12")]
		public override void Play(float intensity, float duration, float vestRotationAngleX, float vestRotationOffsetY, string identifier = "")
		{
		}

		[Token(Token = "0x60014D5")]
		[Address(RVA = "0x8DB440", Offset = "0x8DB440", VA = "0x8DB440", Slot = "17")]
		public override void ResetValues()
		{
		}

		[Token(Token = "0x60014D6")]
		[Address(RVA = "0x8DB45C", Offset = "0x8DB45C", VA = "0x8DB45C")]
		public ArmsHapticClip()
		{
		}
	}
	[Token(Token = "0x20003E2")]
	public class BhapticsHaptic : IHaptic
	{
		[Token(Token = "0x60014D7")]
		[Address(RVA = "0x8DB484", Offset = "0x8DB484", VA = "0x8DB484")]
		public BhapticsHaptic()
		{
		}

		[Token(Token = "0x60014D8")]
		[Address(RVA = "0x8DB4B4", Offset = "0x8DB4B4", VA = "0x8DB4B4", Slot = "4")]
		public bool IsConnect(PositionType type)
		{
			return default(bool);
		}

		[Token(Token = "0x60014D9")]
		[Address(RVA = "0x8DB4BC", Offset = "0x8DB4BC", VA = "0x8DB4BC", Slot = "5")]
		public bool IsConnect(HapticDeviceType type, bool isLeft = true)
		{
			return default(bool);
		}

		[Token(Token = "0x60014DA")]
		[Address(RVA = "0x8DB570", Offset = "0x8DB570", VA = "0x8DB570", Slot = "6")]
		public bool IsPlaying(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x60014DB")]
		[Address(RVA = "0x8DB578", Offset = "0x8DB578", VA = "0x8DB578", Slot = "7")]
		public bool IsFeedbackRegistered(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x60014DC")]
		[Address(RVA = "0x8DB580", Offset = "0x8DB580", VA = "0x8DB580", Slot = "8")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x60014DD")]
		[Address(RVA = "0x8DB584", Offset = "0x8DB584", VA = "0x8DB584", Slot = "9")]
		public void RegisterTactFileStr(string key, string tactFileStr)
		{
		}

		[Token(Token = "0x60014DE")]
		[Address(RVA = "0x8DB590", Offset = "0x8DB590", VA = "0x8DB590", Slot = "10")]
		public void RegisterTactFileStrReflected(string key, string tactFileStr)
		{
		}

		[Token(Token = "0x60014DF")]
		[Address(RVA = "0x8DB59C", Offset = "0x8DB59C", VA = "0x8DB59C", Slot = "11")]
		public void Submit(string key, PositionType position, List<DotPoint> points, int durationMillis)
		{
		}

		[Token(Token = "0x60014E0")]
		[Address(RVA = "0x8DB69C", Offset = "0x8DB69C", VA = "0x8DB69C", Slot = "12")]
		public void Submit(string key, PositionType position, List<PathPoint> points, int durationMillis)
		{
		}

		[Token(Token = "0x60014E1")]
		[Address(RVA = "0x8DB81C", Offset = "0x8DB81C", VA = "0x8DB81C", Slot = "13")]
		public void SubmitRegistered(string key, string altKey, ScaleOption option)
		{
		}

		[Token(Token = "0x60014E2")]
		[Address(RVA = "0x8DB844", Offset = "0x8DB844", VA = "0x8DB844", Slot = "14")]
		public void SubmitRegistered(string key, string altKey, RotationOption rOption, ScaleOption sOption)
		{
		}

		[Token(Token = "0x60014E3")]
		[Address(RVA = "0x8DB86C", Offset = "0x8DB86C", VA = "0x8DB86C", Slot = "15")]
		public void SubmitRegistered(string key)
		{
		}

		[Token(Token = "0x60014E4")]
		[Address(RVA = "0x8DB874", Offset = "0x8DB874", VA = "0x8DB874", Slot = "16")]
		public void SubmitRegistered(string key, int startTimeMillis)
		{
		}

		[Token(Token = "0x60014E5")]
		[Address(RVA = "0x8DB880", Offset = "0x8DB880", VA = "0x8DB880", Slot = "17")]
		public void TurnOff(string key)
		{
		}

		[Token(Token = "0x60014E6")]
		[Address(RVA = "0x8DB888", Offset = "0x8DB888", VA = "0x8DB888", Slot = "18")]
		public void TurnOff()
		{
		}

		[Token(Token = "0x60014E7")]
		[Address(RVA = "0x8DB88C", Offset = "0x8DB88C", VA = "0x8DB88C", Slot = "19")]
		public void Dispose()
		{
		}

		[Token(Token = "0x60014E8")]
		[Address(RVA = "0x8DB890", Offset = "0x8DB890", VA = "0x8DB890", Slot = "20")]
		public int[] GetCurrentFeedback(PositionType pos)
		{
			return null;
		}
	}
	[Token(Token = "0x20003E3")]
	public class BhapticsProject
	{
		[Token(Token = "0x17000150")]
		public Track[] Tracks
		{
			[Token(Token = "0x60014E9")]
			[Address(RVA = "0x8DB8B0", Offset = "0x8DB8B0", VA = "0x8DB8B0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60014EA")]
			[Address(RVA = "0x8DB8B8", Offset = "0x8DB8B8", VA = "0x8DB8B8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000151")]
		public Layout Layout
		{
			[Token(Token = "0x60014EB")]
			[Address(RVA = "0x8DB8C0", Offset = "0x8DB8C0", VA = "0x8DB8C0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60014EC")]
			[Address(RVA = "0x8DB8C8", Offset = "0x8DB8C8", VA = "0x8DB8C8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x60014ED")]
		[Address(RVA = "0x8DB8D0", Offset = "0x8DB8D0", VA = "0x8DB8D0")]
		public static BhapticsProject ToProject(JSONObject jsonObject)
		{
			return null;
		}

		[Token(Token = "0x60014EE")]
		[Address(RVA = "0x8DC10C", Offset = "0x8DC10C", VA = "0x8DC10C")]
		public JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x60014EF")]
		[Address(RVA = "0x8DBB10", Offset = "0x8DBB10", VA = "0x8DBB10")]
		public BhapticsProject()
		{
		}
	}
	[Token(Token = "0x20003E4")]
	public class HapticFeedbackFile
	{
		[Token(Token = "0x4001286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BhapticsProject Project;

		[Token(Token = "0x60014F0")]
		[Address(RVA = "0x8DC68C", Offset = "0x8DC68C", VA = "0x8DC68C")]
		public static HapticFeedbackFile ToHapticFeedbackFile(string jsonStr)
		{
			return null;
		}

		[Token(Token = "0x60014F1")]
		[Address(RVA = "0x8DC750", Offset = "0x8DC750", VA = "0x8DC750")]
		public HapticFeedbackFile()
		{
		}
	}
	[Token(Token = "0x20003E5")]
	public class Track
	{
		[Token(Token = "0x17000152")]
		public HapticEffect[] Effects
		{
			[Token(Token = "0x60014F2")]
			[Address(RVA = "0x8DC758", Offset = "0x8DC758", VA = "0x8DC758")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60014F3")]
			[Address(RVA = "0x8DC760", Offset = "0x8DC760", VA = "0x8DC760")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x60014F4")]
		[Address(RVA = "0x8DC768", Offset = "0x8DC768", VA = "0x8DC768", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60014F5")]
		[Address(RVA = "0x8DBB18", Offset = "0x8DBB18", VA = "0x8DBB18")]
		internal static Track ToTrack(JSONObject jsonObj)
		{
			return null;
		}

		[Token(Token = "0x60014F6")]
		[Address(RVA = "0x8DC260", Offset = "0x8DC260", VA = "0x8DC260")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x60014F7")]
		[Address(RVA = "0x8DC7EC", Offset = "0x8DC7EC", VA = "0x8DC7EC")]
		public Track()
		{
		}
	}
	[Token(Token = "0x20003E6")]
	public class HapticEffect
	{
		[Token(Token = "0x17000153")]
		public int StartTime
		{
			[Token(Token = "0x60014F8")]
			[Address(RVA = "0x8DCD18", Offset = "0x8DCD18", VA = "0x8DCD18")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60014F9")]
			[Address(RVA = "0x8DCD20", Offset = "0x8DCD20", VA = "0x8DCD20")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000154")]
		public int OffsetTime
		{
			[Token(Token = "0x60014FA")]
			[Address(RVA = "0x8DCD28", Offset = "0x8DCD28", VA = "0x8DCD28")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60014FB")]
			[Address(RVA = "0x8DCD30", Offset = "0x8DCD30", VA = "0x8DCD30")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000155")]
		public Dictionary<string, HapticEffectMode> Modes
		{
			[Token(Token = "0x60014FC")]
			[Address(RVA = "0x8DCD38", Offset = "0x8DCD38", VA = "0x8DCD38")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60014FD")]
			[Address(RVA = "0x8DCD40", Offset = "0x8DCD40", VA = "0x8DCD40")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x60014FE")]
		[Address(RVA = "0x8DCD48", Offset = "0x8DCD48", VA = "0x8DCD48", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60014FF")]
		[Address(RVA = "0x8DC7F4", Offset = "0x8DC7F4", VA = "0x8DC7F4")]
		internal static HapticEffect ToEffect(JSONObject jsonObj)
		{
			return null;
		}

		[Token(Token = "0x6001500")]
		[Address(RVA = "0x8DCA8C", Offset = "0x8DCA8C", VA = "0x8DCA8C")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6001501")]
		[Address(RVA = "0x8DCF8C", Offset = "0x8DCF8C", VA = "0x8DCF8C")]
		public HapticEffect()
		{
		}
	}
	[Token(Token = "0x20003E7")]
	public class Layout
	{
		[Token(Token = "0x17000156")]
		public string Type
		{
			[Token(Token = "0x6001502")]
			[Address(RVA = "0x8DD26C", Offset = "0x8DD26C", VA = "0x8DD26C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001503")]
			[Address(RVA = "0x8DD274", Offset = "0x8DD274", VA = "0x8DD274")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000157")]
		public Dictionary<string, LayoutObject[]> Layouts
		{
			[Token(Token = "0x6001504")]
			[Address(RVA = "0x8DD27C", Offset = "0x8DD27C", VA = "0x8DD27C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001505")]
			[Address(RVA = "0x8DD284", Offset = "0x8DD284", VA = "0x8DD284")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001506")]
		[Address(RVA = "0x8DBD48", Offset = "0x8DBD48", VA = "0x8DBD48")]
		internal static Layout ToLayout(JSONObject jsonObj)
		{
			return null;
		}

		[Token(Token = "0x6001507")]
		[Address(RVA = "0x8DC37C", Offset = "0x8DC37C", VA = "0x8DC37C")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6001508")]
		[Address(RVA = "0x8DD28C", Offset = "0x8DD28C", VA = "0x8DD28C")]
		public Layout()
		{
		}
	}
	[Token(Token = "0x20003E8")]
	public class LayoutObject
	{
		[Token(Token = "0x17000158")]
		public int Index
		{
			[Token(Token = "0x6001509")]
			[Address(RVA = "0x8DD50C", Offset = "0x8DD50C", VA = "0x8DD50C")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600150A")]
			[Address(RVA = "0x8DD514", Offset = "0x8DD514", VA = "0x8DD514")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000159")]
		public float X
		{
			[Token(Token = "0x600150B")]
			[Address(RVA = "0x8DD51C", Offset = "0x8DD51C", VA = "0x8DD51C")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600150C")]
			[Address(RVA = "0x8DD524", Offset = "0x8DD524", VA = "0x8DD524")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700015A")]
		public float Y
		{
			[Token(Token = "0x600150D")]
			[Address(RVA = "0x8DD52C", Offset = "0x8DD52C", VA = "0x8DD52C")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600150E")]
			[Address(RVA = "0x8DD534", Offset = "0x8DD534", VA = "0x8DD534")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x600150F")]
		[Address(RVA = "0x8DD294", Offset = "0x8DD294", VA = "0x8DD294")]
		internal static LayoutObject ToLayoutObject(JSONObject jsonObj)
		{
			return null;
		}

		[Token(Token = "0x6001510")]
		[Address(RVA = "0x8DD3CC", Offset = "0x8DD3CC", VA = "0x8DD3CC")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6001511")]
		[Address(RVA = "0x8DD53C", Offset = "0x8DD53C", VA = "0x8DD53C")]
		public LayoutObject()
		{
		}
	}
	[Token(Token = "0x20003E9")]
	public class HapticEffectMode
	{
		[Token(Token = "0x1700015B")]
		public FeedbackMode Mode
		{
			[Token(Token = "0x6001512")]
			[Address(RVA = "0x8DD544", Offset = "0x8DD544", VA = "0x8DD544")]
			[CompilerGenerated]
			get
			{
				return default(FeedbackMode);
			}
			[Token(Token = "0x6001513")]
			[Address(RVA = "0x8DD54C", Offset = "0x8DD54C", VA = "0x8DD54C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700015C")]
		public DotMode DotMode
		{
			[Token(Token = "0x6001514")]
			[Address(RVA = "0x8DD554", Offset = "0x8DD554", VA = "0x8DD554")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001515")]
			[Address(RVA = "0x8DD55C", Offset = "0x8DD55C", VA = "0x8DD55C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700015D")]
		public PathMode PathMode
		{
			[Token(Token = "0x6001516")]
			[Address(RVA = "0x8DD564", Offset = "0x8DD564", VA = "0x8DD564")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001517")]
			[Address(RVA = "0x8DD56C", Offset = "0x8DD56C", VA = "0x8DD56C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001518")]
		[Address(RVA = "0x8DCF94", Offset = "0x8DCF94", VA = "0x8DCF94")]
		internal static HapticEffectMode ToMode(JSONObject jsonObj)
		{
			return null;
		}

		[Token(Token = "0x6001519")]
		[Address(RVA = "0x8DD0F4", Offset = "0x8DD0F4", VA = "0x8DD0F4")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x600151A")]
		[Address(RVA = "0x8DD574", Offset = "0x8DD574", VA = "0x8DD574")]
		public HapticEffectMode()
		{
		}
	}
	[Token(Token = "0x20003EA")]
	public class DotMode
	{
		[Token(Token = "0x1700015E")]
		public bool DotConnected
		{
			[Token(Token = "0x600151B")]
			[Address(RVA = "0x8DDC84", Offset = "0x8DDC84", VA = "0x8DDC84")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600151C")]
			[Address(RVA = "0x8DDC8C", Offset = "0x8DDC8C", VA = "0x8DDC8C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700015F")]
		public DotModeObjectCollection[] Feedback
		{
			[Token(Token = "0x600151D")]
			[Address(RVA = "0x8DDC98", Offset = "0x8DDC98", VA = "0x8DDC98")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600151E")]
			[Address(RVA = "0x8DDCA0", Offset = "0x8DDCA0", VA = "0x8DDCA0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x600151F")]
		[Address(RVA = "0x8DD57C", Offset = "0x8DD57C", VA = "0x8DD57C")]
		internal static DotMode ToDotMode(JSONObject jsonObj)
		{
			return null;
		}

		[Token(Token = "0x6001520")]
		[Address(RVA = "0x8DD9E8", Offset = "0x8DD9E8", VA = "0x8DD9E8")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6001521")]
		[Address(RVA = "0x8DDCA8", Offset = "0x8DDCA8", VA = "0x8DDCA8")]
		public DotMode()
		{
		}
	}
	[Token(Token = "0x20003EB")]
	public class DotModeObjectCollection
	{
		[Token(Token = "0x4001297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlaybackType PlaybackType;

		[Token(Token = "0x17000160")]
		public int StartTime
		{
			[Token(Token = "0x6001522")]
			[Address(RVA = "0x8DE1C0", Offset = "0x8DE1C0", VA = "0x8DE1C0")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001523")]
			[Address(RVA = "0x8DE1C8", Offset = "0x8DE1C8", VA = "0x8DE1C8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000161")]
		public int EndTime
		{
			[Token(Token = "0x6001524")]
			[Address(RVA = "0x8DE1D0", Offset = "0x8DE1D0", VA = "0x8DE1D0")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001525")]
			[Address(RVA = "0x8DE1D8", Offset = "0x8DE1D8", VA = "0x8DE1D8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000162")]
		public DotModeObject[] PointList
		{
			[Token(Token = "0x6001526")]
			[Address(RVA = "0x8DE1E0", Offset = "0x8DE1E0", VA = "0x8DE1E0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001527")]
			[Address(RVA = "0x8DE1E8", Offset = "0x8DE1E8", VA = "0x8DE1E8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001528")]
		[Address(RVA = "0x8DDCB0", Offset = "0x8DDCB0", VA = "0x8DDCB0")]
		internal static DotModeObjectCollection ToObject(JSONObject val)
		{
			return null;
		}

		[Token(Token = "0x6001529")]
		[Address(RVA = "0x8DDF8C", Offset = "0x8DDF8C", VA = "0x8DDF8C")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x600152A")]
		[Address(RVA = "0x8DE1F0", Offset = "0x8DE1F0", VA = "0x8DE1F0")]
		public DotModeObjectCollection()
		{
		}
	}
	[Token(Token = "0x20003EC")]
	public class DotModeObject
	{
		[Token(Token = "0x17000163")]
		public int Index
		{
			[Token(Token = "0x600152B")]
			[Address(RVA = "0x8DE4F4", Offset = "0x8DE4F4", VA = "0x8DE4F4")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600152C")]
			[Address(RVA = "0x8DE4FC", Offset = "0x8DE4FC", VA = "0x8DE4FC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000164")]
		public float Intensity
		{
			[Token(Token = "0x600152D")]
			[Address(RVA = "0x8DE504", Offset = "0x8DE504", VA = "0x8DE504")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600152E")]
			[Address(RVA = "0x8DE50C", Offset = "0x8DE50C", VA = "0x8DE50C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x600152F")]
		[Address(RVA = "0x8DE33C", Offset = "0x8DE33C", VA = "0x8DE33C")]
		internal static DotModeObject ToObject(JSONObject jsonObject)
		{
			return null;
		}

		[Token(Token = "0x6001530")]
		[Address(RVA = "0x8DE3F4", Offset = "0x8DE3F4", VA = "0x8DE3F4")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6001531")]
		[Address(RVA = "0x8DE514", Offset = "0x8DE514", VA = "0x8DE514")]
		public DotModeObject()
		{
		}
	}
	[Token(Token = "0x20003ED")]
	public class PathMode
	{
		[Token(Token = "0x17000165")]
		public PathModeObjectCollection[] Feedback
		{
			[Token(Token = "0x6001532")]
			[Address(RVA = "0x8DE670", Offset = "0x8DE670", VA = "0x8DE670")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001533")]
			[Address(RVA = "0x8DE678", Offset = "0x8DE678", VA = "0x8DE678")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001534")]
		[Address(RVA = "0x8DD7E0", Offset = "0x8DD7E0", VA = "0x8DD7E0")]
		internal static PathMode ToPathMode(JSONObject jsonObject)
		{
			return null;
		}

		[Token(Token = "0x6001535")]
		[Address(RVA = "0x8DDB68", Offset = "0x8DDB68", VA = "0x8DDB68")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6001536")]
		[Address(RVA = "0x8DE680", Offset = "0x8DE680", VA = "0x8DE680")]
		public PathMode()
		{
		}
	}
	[Token(Token = "0x20003EE")]
	public class PathModeObjectCollection
	{
		[Token(Token = "0x400129C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PlaybackType PlaybackType;

		[Token(Token = "0x400129D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public PathMovingPattern MovingPattern;

		[Token(Token = "0x17000166")]
		public PathModeObject[] PointList
		{
			[Token(Token = "0x6001537")]
			[Address(RVA = "0x8DEBB4", Offset = "0x8DEBB4", VA = "0x8DEBB4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001538")]
			[Address(RVA = "0x8DEBBC", Offset = "0x8DEBBC", VA = "0x8DEBBC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001539")]
		[Address(RVA = "0x8DE688", Offset = "0x8DE688", VA = "0x8DE688")]
		internal static PathModeObjectCollection ToObject(JSONObject jsonObject)
		{
			return null;
		}

		[Token(Token = "0x600153A")]
		[Address(RVA = "0x8DE984", Offset = "0x8DE984", VA = "0x8DE984")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x600153B")]
		[Address(RVA = "0x8DEBC4", Offset = "0x8DEBC4", VA = "0x8DEBC4")]
		public PathModeObjectCollection()
		{
		}
	}
	[Token(Token = "0x20003EF")]
	public class PathModeObject
	{
		[Token(Token = "0x17000167")]
		public float X
		{
			[Token(Token = "0x600153C")]
			[Address(RVA = "0x8DEE70", Offset = "0x8DEE70", VA = "0x8DEE70")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600153D")]
			[Address(RVA = "0x8DEE78", Offset = "0x8DEE78", VA = "0x8DEE78")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000168")]
		public float Y
		{
			[Token(Token = "0x600153E")]
			[Address(RVA = "0x8DEE80", Offset = "0x8DEE80", VA = "0x8DEE80")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600153F")]
			[Address(RVA = "0x8DEE88", Offset = "0x8DEE88", VA = "0x8DEE88")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000169")]
		public float Intensity
		{
			[Token(Token = "0x6001540")]
			[Address(RVA = "0x8DEE90", Offset = "0x8DEE90", VA = "0x8DEE90")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001541")]
			[Address(RVA = "0x8DEE98", Offset = "0x8DEE98", VA = "0x8DEE98")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700016A")]
		public int Time
		{
			[Token(Token = "0x6001542")]
			[Address(RVA = "0x8DEEA0", Offset = "0x8DEEA0", VA = "0x8DEEA0")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001543")]
			[Address(RVA = "0x8DEEA8", Offset = "0x8DEEA8", VA = "0x8DEEA8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001544")]
		[Address(RVA = "0x8DEBD4", Offset = "0x8DEBD4", VA = "0x8DEBD4")]
		internal static PathModeObject ToObject(JSONObject jsonObject)
		{
			return null;
		}

		[Token(Token = "0x6001545")]
		[Address(RVA = "0x8DECF0", Offset = "0x8DECF0", VA = "0x8DECF0")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6001546")]
		[Address(RVA = "0x8DEEB0", Offset = "0x8DEEB0", VA = "0x8DEEB0")]
		public PathModeObject()
		{
		}
	}
	[Token(Token = "0x20003F0")]
	internal class ParseUtil
	{
		[Token(Token = "0x6001547")]
		[Address(RVA = "0x8DE51C", Offset = "0x8DE51C", VA = "0x8DE51C")]
		internal static float GetFloat(JSONObject obj, string key, float defaultValue = -1f)
		{
			return default(float);
		}

		[Token(Token = "0x6001548")]
		[Address(RVA = "0x8DE1F8", Offset = "0x8DE1F8", VA = "0x8DE1F8")]
		internal static int GetInt(JSONObject obj, string key, int defaultValue = -1)
		{
			return default(int);
		}

		[Token(Token = "0x6001549")]
		[Address(RVA = "0x8DEEB8", Offset = "0x8DEEB8", VA = "0x8DEEB8")]
		public ParseUtil()
		{
		}
	}
	[Token(Token = "0x20003F1")]
	public class BhapticsUtils
	{
		[Token(Token = "0x40012A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool isInit;

		[Token(Token = "0x40012A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string exeFilePath;

		[Token(Token = "0x40012A5")]
		public const string TypeHead = "Head";

		[Token(Token = "0x40012A6")]
		public const string TypeTactal = "Tactal";

		[Token(Token = "0x40012A7")]
		public const string TypeVest = "Vest";

		[Token(Token = "0x40012A8")]
		public const string TypeTactot = "Tactot";

		[Token(Token = "0x40012A9")]
		public const string TypeTactosy = "Tactosy";

		[Token(Token = "0x40012AA")]
		public const string TypeTactosy2 = "Tactosy2";

		[Token(Token = "0x40012AB")]
		public const string TypeHand = "Hand";

		[Token(Token = "0x40012AC")]
		public const string TypeFoot = "Foot";

		[Token(Token = "0x600154A")]
		private static T[] SubArray<T>(T[] data, int index, int length)
		{
			return null;
		}

		[Token(Token = "0x600154B")]
		[Address(RVA = "0x8DEEC0", Offset = "0x8DEEC0", VA = "0x8DEEC0")]
		public static string GetExePath()
		{
			return null;
		}

		[Token(Token = "0x600154C")]
		[Address(RVA = "0x8DEF00", Offset = "0x8DEF00", VA = "0x8DEF00")]
		public static bool IsPlayerInstalled()
		{
			return default(bool);
		}

		[Token(Token = "0x600154D")]
		[Address(RVA = "0x8DEF08", Offset = "0x8DEF08", VA = "0x8DEF08")]
		public static bool IsPlayerRunning()
		{
			return default(bool);
		}

		[Token(Token = "0x600154E")]
		[Address(RVA = "0x8DEF10", Offset = "0x8DEF10", VA = "0x8DEF10")]
		private static bool Is64BitBuild()
		{
			return default(bool);
		}

		[Token(Token = "0x600154F")]
		[Address(RVA = "0x8DEF2C", Offset = "0x8DEF2C", VA = "0x8DEF2C")]
		public static void LaunchPlayer(bool tryLaunch)
		{
		}

		[Token(Token = "0x6001550")]
		[Address(RVA = "0x8DEF30", Offset = "0x8DEF30", VA = "0x8DEF30")]
		public static float Angle(Vector3 fwd, Vector3 targetDir)
		{
			return default(float);
		}

		[Token(Token = "0x6001551")]
		[Address(RVA = "0x8DF0D4", Offset = "0x8DF0D4", VA = "0x8DF0D4")]
		private static int AngleDir(Vector3 fwd, Vector3 targetDir, Vector3 up)
		{
			return default(int);
		}

		[Token(Token = "0x6001552")]
		[Address(RVA = "0x8DF12C", Offset = "0x8DF12C", VA = "0x8DF12C")]
		public static PositionType ToPositionType(HapticClipPositionType pos)
		{
			return default(PositionType);
		}

		[Token(Token = "0x6001553")]
		[Address(RVA = "0x8DB514", Offset = "0x8DB514", VA = "0x8DB514")]
		public static PositionType ToPositionType(HapticDeviceType pos, bool isLeft = true)
		{
			return default(PositionType);
		}

		[Token(Token = "0x6001554")]
		[Address(RVA = "0x8DF14C", Offset = "0x8DF14C", VA = "0x8DF14C")]
		public BhapticsUtils()
		{
		}
	}
	[Token(Token = "0x20003F2")]
	public class FeetHapticClip : ArmsHapticClip
	{
		[Token(Token = "0x6001555")]
		[Address(RVA = "0x8DF154", Offset = "0x8DF154", VA = "0x8DF154")]
		public FeetHapticClip()
		{
		}
	}
	[Token(Token = "0x20003F3")]
	public class FileHapticClip : HapticClip
	{
		[Token(Token = "0x40012AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Range(0.2f, 5f)]
		public float Intensity;

		[Token(Token = "0x40012AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[Range(0.2f, 5f)]
		public float Duration;

		[Token(Token = "0x40012AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HapticDeviceType ClipType;

		[Token(Token = "0x40012B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string JsonValue;

		[Token(Token = "0x40012B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		protected int _clipDurationTime;

		[Token(Token = "0x1700016B")]
		public int ClipDurationTime
		{
			[Token(Token = "0x6001556")]
			[Address(RVA = "0x8DF168", Offset = "0x8DF168", VA = "0x8DF168")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001557")]
		[Address(RVA = "0x8DF22C", Offset = "0x8DF22C", VA = "0x8DF22C", Slot = "4")]
		public override void Play()
		{
		}

		[Token(Token = "0x6001558")]
		[Address(RVA = "0x8DF288", Offset = "0x8DF288", VA = "0x8DF288", Slot = "5")]
		public override void Play(string identifier)
		{
		}

		[Token(Token = "0x6001559")]
		[Address(RVA = "0x8DF2A0", Offset = "0x8DF2A0", VA = "0x8DF2A0", Slot = "6")]
		public override void Play(float intensity, string identifier = "")
		{
		}

		[Token(Token = "0x600155A")]
		[Address(RVA = "0x8DF2B8", Offset = "0x8DF2B8", VA = "0x8DF2B8", Slot = "7")]
		public override void Play(float intensity, float duration, string identifier = "")
		{
		}

		[Token(Token = "0x600155B")]
		[Address(RVA = "0x8DF2CC", Offset = "0x8DF2CC", VA = "0x8DF2CC", Slot = "8")]
		public override void Play(float intensity, float duration, float vestRotationAngleX, string identifier = "")
		{
		}

		[Token(Token = "0x600155C")]
		[Address(RVA = "0x8DF2DC", Offset = "0x8DF2DC", VA = "0x8DF2DC", Slot = "9")]
		public override void Play(Vector3 contactPos, Collider targetCollider, string identifier = "")
		{
		}

		[Token(Token = "0x600155D")]
		[Address(RVA = "0x8DF400", Offset = "0x8DF400", VA = "0x8DF400", Slot = "10")]
		public override void Play(Vector3 contactPos, Vector3 targetPos, Vector3 targetForward, float targetHeight, string identifier = "")
		{
		}

		[Token(Token = "0x600155E")]
		[Address(RVA = "0x8DF474", Offset = "0x8DF474", VA = "0x8DF474", Slot = "12")]
		public override void Play(float intensity, float duration, float vestRotationAngleX, float vestRotationOffsetY, string identifier = "")
		{
		}

		[Token(Token = "0x600155F")]
		[Address(RVA = "0x8DB450", Offset = "0x8DB450", VA = "0x8DB450", Slot = "17")]
		public override void ResetValues()
		{
		}

		[Token(Token = "0x6001560")]
		[Address(RVA = "0x8DF194", Offset = "0x8DF194", VA = "0x8DF194")]
		private int CalculateClipDutationTime(HapticFeedbackFile hapticFeedbackFile)
		{
			return default(int);
		}

		[Token(Token = "0x6001561")]
		[Address(RVA = "0x8DB470", Offset = "0x8DB470", VA = "0x8DB470")]
		public FileHapticClip()
		{
		}
	}
	[Token(Token = "0x20003F4")]
	public class HandsHapticClip : ArmsHapticClip
	{
		[Token(Token = "0x6001562")]
		[Address(RVA = "0x8DF714", Offset = "0x8DF714", VA = "0x8DF714")]
		public HandsHapticClip()
		{
		}
	}
	[Token(Token = "0x20003F5")]
	public enum HapticDeviceType
	{
		[Token(Token = "0x40012B3")]
		None,
		[Token(Token = "0x40012B4")]
		Tactal,
		[Token(Token = "0x40012B5")]
		TactSuit,
		[Token(Token = "0x40012B6")]
		Tactosy_arms,
		[Token(Token = "0x40012B7")]
		Tactosy_hands,
		[Token(Token = "0x40012B8")]
		Tactosy_feet
	}
	[Serializable]
	[Token(Token = "0x20003F6")]
	public enum HapticClipPositionType
	{
		[Token(Token = "0x40012BA")]
		VestFront,
		[Token(Token = "0x40012BB")]
		VestBack,
		[Token(Token = "0x40012BC")]
		Head,
		[Token(Token = "0x40012BD")]
		RightForearm,
		[Token(Token = "0x40012BE")]
		LeftForearm,
		[Token(Token = "0x40012BF")]
		LeftHand,
		[Token(Token = "0x40012C0")]
		RightHand,
		[Token(Token = "0x40012C1")]
		LeftFoot,
		[Token(Token = "0x40012C2")]
		RightFoot
	}
	[Token(Token = "0x20003F7")]
	public class HapticClip : ScriptableObject
	{
		[NonSerialized]
		[Token(Token = "0x40012C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected string assetId;

		[NonSerialized]
		[Token(Token = "0x40012C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string keyId;

		[Token(Token = "0x6001563")]
		[Address(RVA = "0x8DF728", Offset = "0x8DF728", VA = "0x8DF728", Slot = "4")]
		public virtual void Play()
		{
		}

		[Token(Token = "0x6001564")]
		[Address(RVA = "0x8DF788", Offset = "0x8DF788", VA = "0x8DF788", Slot = "5")]
		public virtual void Play(string identifier)
		{
		}

		[Token(Token = "0x6001565")]
		[Address(RVA = "0x8DF7A4", Offset = "0x8DF7A4", VA = "0x8DF7A4", Slot = "6")]
		public virtual void Play(float intensity, string identifier = "")
		{
		}

		[Token(Token = "0x6001566")]
		[Address(RVA = "0x8DF7BC", Offset = "0x8DF7BC", VA = "0x8DF7BC", Slot = "7")]
		public virtual void Play(float intensity, float duration, string identifier = "")
		{
		}

		[Token(Token = "0x6001567")]
		[Address(RVA = "0x8DF7D0", Offset = "0x8DF7D0", VA = "0x8DF7D0", Slot = "8")]
		public virtual void Play(float intensity, float duration, float vestRotationAngleX, string identifier = "")
		{
		}

		[Token(Token = "0x6001568")]
		[Address(RVA = "0x8DF7E0", Offset = "0x8DF7E0", VA = "0x8DF7E0", Slot = "9")]
		public virtual void Play(Vector3 contactPos, Collider targetCollider, string identifier = "")
		{
		}

		[Token(Token = "0x6001569")]
		[Address(RVA = "0x8DF904", Offset = "0x8DF904", VA = "0x8DF904", Slot = "10")]
		public virtual void Play(Vector3 contactPos, Vector3 targetPos, Vector3 targetForward, float targetHeight, string identifier = "")
		{
		}

		[Token(Token = "0x600156A")]
		[Address(RVA = "0x8DF974", Offset = "0x8DF974", VA = "0x8DF974", Slot = "11")]
		public virtual void Play(float intensity, float duration, Vector3 contactPos, Vector3 targetPos, Vector3 targetForward, float targetHeight, string identifier = "")
		{
		}

		[Token(Token = "0x600156B")]
		[Address(RVA = "0x8DF9F4", Offset = "0x8DF9F4", VA = "0x8DF9F4", Slot = "12")]
		public virtual void Play(float intensity, float duration, float vestRotationAngleX, float vestRotationOffsetY, string identifier = "")
		{
		}

		[Token(Token = "0x600156C")]
		[Address(RVA = "0x8DF9F8", Offset = "0x8DF9F8", VA = "0x8DF9F8", Slot = "13")]
		public virtual void Stop()
		{
		}

		[Token(Token = "0x600156D")]
		[Address(RVA = "0x8DFA9C", Offset = "0x8DFA9C", VA = "0x8DFA9C", Slot = "14")]
		public virtual void Stop(string identifier)
		{
		}

		[Token(Token = "0x600156E")]
		[Address(RVA = "0x8DFB6C", Offset = "0x8DFB6C", VA = "0x8DFB6C", Slot = "15")]
		public virtual bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x600156F")]
		[Address(RVA = "0x8DFC28", Offset = "0x8DFC28", VA = "0x8DFC28", Slot = "16")]
		public virtual bool IsPlaying(string identifier)
		{
			return default(bool);
		}

		[Token(Token = "0x6001570")]
		[Address(RVA = "0x8DF6B4", Offset = "0x8DF6B4", VA = "0x8DF6B4", Slot = "17")]
		public virtual void ResetValues()
		{
		}

		[Token(Token = "0x6001571")]
		[Address(RVA = "0x8DFCF8", Offset = "0x8DFCF8", VA = "0x8DFCF8")]
		public string GetAssetID()
		{
			return null;
		}

		[Token(Token = "0x6001572")]
		[Address(RVA = "0x8DF6B8", Offset = "0x8DF6B8", VA = "0x8DF6B8")]
		public HapticClip()
		{
		}
	}
	[Token(Token = "0x20003F8")]
	public class HapticReceiver : MonoBehaviour
	{
		[Token(Token = "0x40012C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool IsActive;

		[Token(Token = "0x40012C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public PositionTag PositionTag;

		[Token(Token = "0x6001573")]
		[Address(RVA = "0x8DFD00", Offset = "0x8DFD00", VA = "0x8DFD00")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001574")]
		[Address(RVA = "0x8DFE40", Offset = "0x8DFE40", VA = "0x8DFE40")]
		private void OnTriggerEnter(Collider bullet)
		{
		}

		[Token(Token = "0x6001575")]
		[Address(RVA = "0x8DFFE0", Offset = "0x8DFFE0", VA = "0x8DFFE0")]
		private void OnCollisionEnter(Collision bullet)
		{
		}

		[Token(Token = "0x6001576")]
		[Address(RVA = "0x8DFEFC", Offset = "0x8DFEFC", VA = "0x8DFEFC")]
		private void Handle(Vector3 contactPoint, HapticSender tactSender)
		{
		}

		[Token(Token = "0x6001577")]
		[Address(RVA = "0x8E01C4", Offset = "0x8E01C4", VA = "0x8E01C4")]
		public HapticReceiver()
		{
		}
	}
	[Token(Token = "0x20003F9")]
	public class HapticSender : MonoBehaviour
	{
		[Token(Token = "0x40012C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HapticClip[] DefaultClips;

		[Token(Token = "0x40012C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HeadHapticClip[] HeadClips;

		[Token(Token = "0x40012C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public VestHapticClip[] BodyClips;

		[Token(Token = "0x40012CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ArmsHapticClip[] LeftArmClips;

		[Token(Token = "0x40012CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ArmsHapticClip[] RightArmClips;

		[Token(Token = "0x40012CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float yOffsetMultiplier;

		[Token(Token = "0x6001578")]
		[Address(RVA = "0x8E01D4", Offset = "0x8E01D4", VA = "0x8E01D4")]
		public void Play(PositionTag posTag = PositionTag.Default)
		{
		}

		[Token(Token = "0x6001579")]
		[Address(RVA = "0x8E00B8", Offset = "0x8E00B8", VA = "0x8E00B8")]
		public void Play(PositionTag posTag, Vector3 contactPos, Collider targetCollider)
		{
		}

		[Token(Token = "0x600157A")]
		[Address(RVA = "0x8E042C", Offset = "0x8E042C", VA = "0x8E042C")]
		private void Play(PositionTag posTag, Vector3 contactPos, Vector3 targetPos, Vector3 targetForward, float targetHeight)
		{
		}

		[Token(Token = "0x600157B")]
		[Address(RVA = "0x8E04A0", Offset = "0x8E04A0", VA = "0x8E04A0")]
		public void Play(PositionTag posTag, RaycastHit hit)
		{
		}

		[Token(Token = "0x600157C")]
		[Address(RVA = "0x8E05D0", Offset = "0x8E05D0", VA = "0x8E05D0")]
		private HapticClip GetClip(PositionTag posTag)
		{
			return null;
		}

		[Token(Token = "0x600157D")]
		[Address(RVA = "0x8E06E8", Offset = "0x8E06E8", VA = "0x8E06E8")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x600157E")]
		[Address(RVA = "0x8E01E0", Offset = "0x8E01E0", VA = "0x8E01E0")]
		public void Play(PositionTag posTag, float angleX, float offsetY)
		{
		}

		[Token(Token = "0x600157F")]
		[Address(RVA = "0x8E06F0", Offset = "0x8E06F0", VA = "0x8E06F0")]
		public HapticSender()
		{
		}
	}
	[Token(Token = "0x20003FA")]
	public enum PositionTag
	{
		[Token(Token = "0x40012CE")]
		Body,
		[Token(Token = "0x40012CF")]
		Head,
		[Token(Token = "0x40012D0")]
		LeftArm,
		[Token(Token = "0x40012D1")]
		RightArm,
		[Token(Token = "0x40012D2")]
		Default
	}
	[Token(Token = "0x20003FB")]
	public class HapticSource : MonoBehaviour
	{
		[Token(Token = "0x20003FC")]
		[CompilerGenerated]
		private sealed class <PlayCoroutine>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40012DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40012DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40012DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delaySecond;

			[Token(Token = "0x40012DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public HapticSource <>4__this;

			[Token(Token = "0x1700016C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600158D")]
				[Address(RVA = "0x8E10A0", Offset = "0x8E10A0", VA = "0x8E10A0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700016D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600158F")]
				[Address(RVA = "0x8E10E8", Offset = "0x8E10E8", VA = "0x8E10E8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600158A")]
			[Address(RVA = "0x8E0F7C", Offset = "0x8E0F7C", VA = "0x8E0F7C")]
			[DebuggerHidden]
			public <PlayCoroutine>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x600158B")]
			[Address(RVA = "0x8E0FD4", Offset = "0x8E0FD4", VA = "0x8E0FD4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600158C")]
			[Address(RVA = "0x8E0FD8", Offset = "0x8E0FD8", VA = "0x8E0FD8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600158E")]
			[Address(RVA = "0x8E10A8", Offset = "0x8E10A8", VA = "0x8E10A8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003FD")]
		[CompilerGenerated]
		private sealed class <PlayLoopCoroutine>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40012DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40012DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40012E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HapticSource <>4__this;

			[Token(Token = "0x40012E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private WaitForSeconds <duration>5__2;

			[Token(Token = "0x1700016E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001593")]
				[Address(RVA = "0x8E12BC", Offset = "0x8E12BC", VA = "0x8E12BC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700016F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001595")]
				[Address(RVA = "0x8E1304", Offset = "0x8E1304", VA = "0x8E1304", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001590")]
			[Address(RVA = "0x8E0FA4", Offset = "0x8E0FA4", VA = "0x8E0FA4")]
			[DebuggerHidden]
			public <PlayLoopCoroutine>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6001591")]
			[Address(RVA = "0x8E10F0", Offset = "0x8E10F0", VA = "0x8E10F0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001592")]
			[Address(RVA = "0x8E10F4", Offset = "0x8E10F4", VA = "0x8E10F4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001594")]
			[Address(RVA = "0x8E12C4", Offset = "0x8E12C4", VA = "0x8E12C4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40012D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HapticClip clip;

		[Token(Token = "0x40012D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool playOnAwake;

		[Token(Token = "0x40012D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool loop;

		[Token(Token = "0x40012D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float loopDelaySeconds;

		[Token(Token = "0x40012D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Coroutine currentCoroutine;

		[Token(Token = "0x40012D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Coroutine loopCoroutine;

		[Token(Token = "0x40012D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool isLooping;

		[Token(Token = "0x6001580")]
		[Address(RVA = "0x8E0700", Offset = "0x8E0700", VA = "0x8E0700")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001581")]
		[Address(RVA = "0x8E0C08", Offset = "0x8E0C08", VA = "0x8E0C08")]
		public void Play()
		{
		}

		[Token(Token = "0x6001582")]
		[Address(RVA = "0x8E09B0", Offset = "0x8E09B0", VA = "0x8E09B0")]
		public void PlayLoop()
		{
		}

		[Token(Token = "0x6001583")]
		[Address(RVA = "0x8E0C74", Offset = "0x8E0C74", VA = "0x8E0C74")]
		public void PlayDelayed(float delaySecond = 0f)
		{
		}

		[Token(Token = "0x6001584")]
		[Address(RVA = "0x8E0E2C", Offset = "0x8E0E2C", VA = "0x8E0E2C")]
		public void Stop()
		{
		}

		[Token(Token = "0x6001585")]
		[Address(RVA = "0x8E0EEC", Offset = "0x8E0EEC", VA = "0x8E0EEC")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6001586")]
		[Address(RVA = "0x8E0DB4", Offset = "0x8E0DB4", VA = "0x8E0DB4")]
		[IteratorStateMachine(typeof(<PlayCoroutine>d__13))]
		private IEnumerator PlayCoroutine(float delaySecond)
		{
			return null;
		}

		[Token(Token = "0x6001587")]
		[Address(RVA = "0x8E0AE4", Offset = "0x8E0AE4", VA = "0x8E0AE4")]
		private void PlayHapticClip()
		{
		}

		[Token(Token = "0x6001588")]
		[Address(RVA = "0x8E0C0C", Offset = "0x8E0C0C", VA = "0x8E0C0C")]
		[IteratorStateMachine(typeof(<PlayLoopCoroutine>d__15))]
		private IEnumerator PlayLoopCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6001589")]
		[Address(RVA = "0x8E0FCC", Offset = "0x8E0FCC", VA = "0x8E0FCC")]
		public HapticSource()
		{
		}
	}
	[Token(Token = "0x20003FE")]
	public class HeadHapticClip : FileHapticClip
	{
		[Token(Token = "0x6001596")]
		[Address(RVA = "0x8E130C", Offset = "0x8E130C", VA = "0x8E130C")]
		public HeadHapticClip()
		{
		}
	}
	[Token(Token = "0x20003FF")]
	public interface IHaptic
	{
		[Token(Token = "0x6001597")]
		bool IsConnect(PositionType type);

		[Token(Token = "0x6001598")]
		bool IsConnect(HapticDeviceType type, bool isLeft = true);

		[Token(Token = "0x6001599")]
		bool IsPlaying(string key);

		[Token(Token = "0x600159A")]
		bool IsFeedbackRegistered(string key);

		[Token(Token = "0x600159B")]
		bool IsPlaying();

		[Token(Token = "0x600159C")]
		void RegisterTactFileStr(string key, string tactFileStr);

		[Token(Token = "0x600159D")]
		void RegisterTactFileStrReflected(string key, string tactFileStr);

		[Token(Token = "0x600159E")]
		void Submit(string key, PositionType position, List<DotPoint> points, int durationMillis);

		[Token(Token = "0x600159F")]
		void Submit(string key, PositionType position, List<PathPoint> points, int durationMillis);

		[Token(Token = "0x60015A0")]
		void SubmitRegistered(string key, string altKey, ScaleOption option);

		[Token(Token = "0x60015A1")]
		void SubmitRegistered(string key, string altKey, RotationOption rOption, ScaleOption sOption);

		[Token(Token = "0x60015A2")]
		void SubmitRegistered(string key);

		[Token(Token = "0x60015A3")]
		void SubmitRegistered(string key, int startTimeMillis);

		[Token(Token = "0x60015A4")]
		void TurnOff(string key);

		[Token(Token = "0x60015A5")]
		void TurnOff();

		[Token(Token = "0x60015A6")]
		void Dispose();

		[Token(Token = "0x60015A7")]
		int[] GetCurrentFeedback(PositionType pos);
	}
	[Token(Token = "0x2000400")]
	[CreateAssetMenu(fileName = "SimpleHapticClip", menuName = "Bhaptics/Create Simple HapticClip")]
	public class SimpleHapticClip : HapticClip
	{
		[Token(Token = "0x40012E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Point[] DefaultPoints;

		[Token(Token = "0x40012E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HapticClipPositionType Position;

		[Token(Token = "0x40012E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private SimpleHapticType Mode;

		[Token(Token = "0x40012E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private int[] DotPoints;

		[Token(Token = "0x40012E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Point[] Points;

		[Token(Token = "0x40012E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Range(20f, 10000f)]
		public int TimeMillis;

		[Token(Token = "0x60015A8")]
		[Address(RVA = "0x8E1320", Offset = "0x8E1320", VA = "0x8E1320", Slot = "12")]
		public override void Play(float intensity, float duration, float vestRotationAngleX, float vestRotationOffsetY, string identifier = "")
		{
		}

		[Token(Token = "0x60015A9")]
		[Address(RVA = "0x8E17F4", Offset = "0x8E17F4", VA = "0x8E17F4", Slot = "17")]
		public override void ResetValues()
		{
		}

		[Token(Token = "0x60015AA")]
		[Address(RVA = "0x8E150C", Offset = "0x8E150C", VA = "0x8E150C")]
		private static List<DotPoint> Convert(int[] points)
		{
			return null;
		}

		[Token(Token = "0x60015AB")]
		[Address(RVA = "0x8E167C", Offset = "0x8E167C", VA = "0x8E167C")]
		private static List<PathPoint> Convert(Point[] points)
		{
			return null;
		}

		[Token(Token = "0x60015AC")]
		[Address(RVA = "0x8E1880", Offset = "0x8E1880", VA = "0x8E1880")]
		public SimpleHapticClip()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000401")]
	public class Point
	{
		[Token(Token = "0x40012E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Range(0f, 1f)]
		public float X;

		[Token(Token = "0x40012E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[Range(0f, 1f)]
		public float Y;

		[Token(Token = "0x40012EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Range(0f, 100f)]
		public int Intensity;

		[Token(Token = "0x60015AE")]
		[Address(RVA = "0x8E198C", Offset = "0x8E198C", VA = "0x8E198C")]
		public Point(float x, float y, int intensity)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000402")]
	public enum SimpleHapticType
	{
		[Token(Token = "0x40012EC")]
		DotMode = 1,
		[Token(Token = "0x40012ED")]
		PathMode
	}
	[Token(Token = "0x2000403")]
	public class VestHapticClip : FileHapticClip
	{
		[Token(Token = "0x40012EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		[Range(0f, 360f)]
		protected float TactFileAngleX;

		[Token(Token = "0x40012EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[Range(-0.5f, 0.5f)]
		protected float TactFileOffsetY;

		[Token(Token = "0x40012F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private RotationOption _rotationOption;

		[Token(Token = "0x40012F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private ScaleOption _scaleOption;

		[Token(Token = "0x60015AF")]
		[Address(RVA = "0x8E1AAC", Offset = "0x8E1AAC", VA = "0x8E1AAC", Slot = "4")]
		public override void Play()
		{
		}

		[Token(Token = "0x60015B0")]
		[Address(RVA = "0x8E1B04", Offset = "0x8E1B04", VA = "0x8E1B04", Slot = "5")]
		public override void Play(string identifier)
		{
		}

		[Token(Token = "0x60015B1")]
		[Address(RVA = "0x8E1B18", Offset = "0x8E1B18", VA = "0x8E1B18", Slot = "6")]
		public override void Play(float intensity, string identifier = "")
		{
		}

		[Token(Token = "0x60015B2")]
		[Address(RVA = "0x8E1B2C", Offset = "0x8E1B2C", VA = "0x8E1B2C", Slot = "7")]
		public override void Play(float intensity, float duration, string identifier = "")
		{
		}

		[Token(Token = "0x60015B3")]
		[Address(RVA = "0x8E1B3C", Offset = "0x8E1B3C", VA = "0x8E1B3C", Slot = "8")]
		public override void Play(float intensity, float duration, float vestRotationAngleX, string identifier = "")
		{
		}

		[Token(Token = "0x60015B4")]
		[Address(RVA = "0x8E1B4C", Offset = "0x8E1B4C", VA = "0x8E1B4C", Slot = "12")]
		public override void Play(float intensity, float duration, float vestRotationAngleX, float vestRotationOffsetY, string identifier = "")
		{
		}

		[Token(Token = "0x60015B5")]
		[Address(RVA = "0x8E1D98", Offset = "0x8E1D98", VA = "0x8E1D98", Slot = "17")]
		public override void ResetValues()
		{
		}

		[Token(Token = "0x60015B6")]
		[Address(RVA = "0x8E1DA8", Offset = "0x8E1DA8", VA = "0x8E1DA8")]
		public VestHapticClip()
		{
		}
	}
	[Token(Token = "0x2000404")]
	public class VisualFeedback : MonoBehaviour
	{
		[Token(Token = "0x40012F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HapticClipPositionType devicePos;

		[Token(Token = "0x40012F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform motorContainer;

		[Token(Token = "0x40012F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Gradient motorFeedbackGradient;

		[Token(Token = "0x40012F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform[] motors;

		[Token(Token = "0x40012F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float motorScaleOffset;

		[Token(Token = "0x60015B7")]
		[Address(RVA = "0x8E1E5C", Offset = "0x8E1E5C", VA = "0x8E1E5C")]
		private void Start()
		{
		}

		[Token(Token = "0x60015B8")]
		[Address(RVA = "0x8E21BC", Offset = "0x8E21BC", VA = "0x8E21BC")]
		public void UpdateFeedback(HapticFeedback feedback)
		{
		}

		[Token(Token = "0x60015B9")]
		[Address(RVA = "0x8E2274", Offset = "0x8E2274", VA = "0x8E2274")]
		public void UpdateFeedback(int[] feedbackValues)
		{
		}

		[Token(Token = "0x60015BA")]
		[Address(RVA = "0x8E2454", Offset = "0x8E2454", VA = "0x8E2454")]
		public VisualFeedback()
		{
		}
	}
}
