using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.InteropServices;
using AK.Wwise;
using CurvedUI;
using Il2CppDummyDll;
using Oculus.Platform;
using Oculus.Spatializer.Propagation;
using Sirenix.OdinInspector;
using TMPro;
using ThreeDAR.AssetManagement;
using ThreeDAR.BuildPipeline;
using ThreeDAR.EventQueueSystem;
using ThreeDAR.SceneManagment;
using ThreeDAR.StepsExecution;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.AddressableAssets;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Networking;
using UnityEngine.Playables;
using UnityEngine.ResourceManagement.AsyncOperations;
using UnityEngine.ResourceManagement.ResourceProviders;
using UnityEngine.SceneManagement;
using UnityEngine.Timeline;
using UnityEngine.UI;
using UnityEngine.Video;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
public class CUI_CameraRotationOnButtonHeld : MonoBehaviour
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float Sensitivity;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 oldMousePos;

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool move;

	[Token(Token = "0x6000001")]
	[Address(RVA = "0xCBDD4C", Offset = "0xCBDD4C", VA = "0xCBDD4C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000002")]
	[Address(RVA = "0xCBDD78", Offset = "0xCBDD78", VA = "0xCBDD78")]
	public CUI_CameraRotationOnButtonHeld()
	{
	}
}
[Token(Token = "0x2000003")]
public class CUI_MoveAlong : MonoBehaviour
{
	[Token(Token = "0x6000003")]
	[Address(RVA = "0xCBDD90", Offset = "0xCBDD90", VA = "0xCBDD90")]
	private void Update()
	{
	}

	[Token(Token = "0x6000004")]
	[Address(RVA = "0xCBDFE4", Offset = "0xCBDFE4", VA = "0xCBDFE4")]
	public CUI_MoveAlong()
	{
	}
}
[Token(Token = "0x2000004")]
public class CUI_MoveHeartbeat : MonoBehaviour
{
	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool wrapAroundParent;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RectTransform rectie;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform parentRectie;

	[Token(Token = "0x6000005")]
	[Address(RVA = "0xCBDFEC", Offset = "0xCBDFEC", VA = "0xCBDFEC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000006")]
	[Address(RVA = "0xCBE0A4", Offset = "0xCBE0A4", VA = "0xCBE0A4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000007")]
	[Address(RVA = "0xCBE1F0", Offset = "0xCBE1F0", VA = "0xCBE1F0")]
	public CUI_MoveHeartbeat()
	{
	}
}
[Token(Token = "0x2000005")]
public class CUI_ShowParentCoordinates : MonoBehaviour
{
	[Token(Token = "0x6000008")]
	[Address(RVA = "0xCBE200", Offset = "0xCBE200", VA = "0xCBE200")]
	private void Start()
	{
	}

	[Token(Token = "0x6000009")]
	[Address(RVA = "0xCBE2CC", Offset = "0xCBE2CC", VA = "0xCBE2CC")]
	public CUI_ShowParentCoordinates()
	{
	}
}
[Token(Token = "0x2000006")]
public class CUI_rotation_anim : MonoBehaviour
{
	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 Rotation;

	[Token(Token = "0x600000A")]
	[Address(RVA = "0xCBE2D4", Offset = "0xCBE2D4", VA = "0xCBE2D4")]
	private void Update()
	{
	}

	[Token(Token = "0x600000B")]
	[Address(RVA = "0xCBE4BC", Offset = "0xCBE4BC", VA = "0xCBE4BC")]
	public CUI_rotation_anim()
	{
	}
}
[Token(Token = "0x2000007")]
public class CUI_touchpad : MonoBehaviour
{
	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RectTransform container;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform dot;

	[Token(Token = "0x600000C")]
	[Address(RVA = "0xCBE4C4", Offset = "0xCBE4C4", VA = "0xCBE4C4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0xCBE538", Offset = "0xCBE538", VA = "0xCBE538")]
	private void MoveDotOnTouchpadAxisChanged(object o, ViveInputArgs args)
	{
	}

	[Token(Token = "0x600000E")]
	[Address(RVA = "0xCBE614", Offset = "0xCBE614", VA = "0xCBE614")]
	public CUI_touchpad()
	{
	}
}
[Token(Token = "0x2000008")]
[ExecuteInEditMode]
public class CurvedUIInputModule : StandaloneInputModule
{
	[Token(Token = "0x2000009")]
	public enum CUIControlMethod
	{
		[Token(Token = "0x4000026")]
		MOUSE = 0,
		[Token(Token = "0x4000027")]
		GAZE = 1,
		[Token(Token = "0x4000028")]
		WORLD_MOUSE = 2,
		[Token(Token = "0x4000029")]
		CUSTOM_RAY = 3,
		[Token(Token = "0x400002A")]
		STEAMVR_LEGACY = 4,
		[Token(Token = "0x400002B")]
		OCULUSVR = 5,
		[Token(Token = "0x400002C")]
		GOOGLEVR = 7,
		[Token(Token = "0x400002D")]
		STEAMVR_2 = 8,
		[Token(Token = "0x400002E")]
		UNITY_XR = 9
	}

	[Token(Token = "0x200000A")]
	public enum Hand
	{
		[Token(Token = "0x4000030")]
		Both,
		[Token(Token = "0x4000031")]
		Right,
		[Token(Token = "0x4000032")]
		Left
	}

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	[SerializeField]
	private CUIControlMethod controlMethod;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private string submitButtonName;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private Camera mainEventCamera;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private LayerMask raycastLayerMask;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	[SerializeField]
	private bool gazeUseTimedClick;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private float gazeClickTimer;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	[SerializeField]
	private float gazeClickTimerDelay;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private Image gazeTimedClickProgressImage;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private float worldSpaceMouseSensitivity;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	[SerializeField]
	private Hand usedHand;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8718B8", Offset = "0x8718B8")]
	[SerializeField]
	private Transform pointerTransformOverride;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool disableOtherInputModulesOnStart;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static CurvedUIInputModule instance;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private GameObject currentDragging;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private GameObject currentPointedAt;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private GameObject m_rightController;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private GameObject m_leftController;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private float gazeTimerProgress;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private Ray customControllerRay;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private float dragThreshold;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private bool pressedDown;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x131")]
	private bool pressedLastFrame;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private Vector3 lastMouseOnScreenPos;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private Vector2 worldSpaceMouseInCanvasSpace;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private Vector2 lastWorldSpaceMouseOnCanvas;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private Vector2 worldSpaceMouseOnCanvasDelta;

	[Token(Token = "0x17000001")]
	public static CurvedUIInputModule Instance
	{
		[Token(Token = "0x600001C")]
		[Address(RVA = "0xAE8D58", Offset = "0xAE8D58", VA = "0xAE8D58")]
		get
		{
			return null;
		}
		[Token(Token = "0x600001D")]
		[Address(RVA = "0xAE8E54", Offset = "0xAE8E54", VA = "0xAE8E54")]
		private set
		{
		}
	}

	[Token(Token = "0x17000002")]
	public static CUIControlMethod ControlMethod
	{
		[Token(Token = "0x600001E")]
		[Address(RVA = "0xAE8CB4", Offset = "0xAE8CB4", VA = "0xAE8CB4")]
		get
		{
			return default(CUIControlMethod);
		}
		[Token(Token = "0x600001F")]
		[Address(RVA = "0xAE8EC0", Offset = "0xAE8EC0", VA = "0xAE8EC0")]
		set
		{
		}
	}

	[Token(Token = "0x17000003")]
	public LayerMask RaycastLayerMask
	{
		[Token(Token = "0x6000020")]
		[Address(RVA = "0xAE8F5C", Offset = "0xAE8F5C", VA = "0xAE8F5C")]
		get
		{
			return default(LayerMask);
		}
		[Token(Token = "0x6000021")]
		[Address(RVA = "0xAE8F64", Offset = "0xAE8F64", VA = "0xAE8F64")]
		set
		{
		}
	}

	[Token(Token = "0x17000004")]
	public Hand UsedHand
	{
		[Token(Token = "0x6000022")]
		[Address(RVA = "0xAE8F6C", Offset = "0xAE8F6C", VA = "0xAE8F6C")]
		get
		{
			return default(Hand);
		}
		[Token(Token = "0x6000023")]
		[Address(RVA = "0xAE8F74", Offset = "0xAE8F74", VA = "0xAE8F74")]
		set
		{
		}
	}

	[Token(Token = "0x17000005")]
	public Transform ControllerTransform
	{
		[Token(Token = "0x6000024")]
		[Address(RVA = "0xAE8F7C", Offset = "0xAE8F7C", VA = "0xAE8F7C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000006")]
	public Vector3 ControllerPointingDirection
	{
		[Token(Token = "0x6000025")]
		[Address(RVA = "0xAE90B0", Offset = "0xAE90B0", VA = "0xAE90B0")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000007")]
	public Vector3 ControllerPointingOrigin
	{
		[Token(Token = "0x6000026")]
		[Address(RVA = "0xAE9144", Offset = "0xAE9144", VA = "0xAE9144")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000008")]
	public Transform PointerTransformOverride
	{
		[Token(Token = "0x6000027")]
		[Address(RVA = "0xAE903C", Offset = "0xAE903C", VA = "0xAE903C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000028")]
		[Address(RVA = "0xAE91D8", Offset = "0xAE91D8", VA = "0xAE91D8")]
		set
		{
		}
	}

	[Token(Token = "0x17000009")]
	public GameObject CurrentPointedAt
	{
		[Token(Token = "0x6000029")]
		[Address(RVA = "0xAE9250", Offset = "0xAE9250", VA = "0xAE9250")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700000A")]
	public Camera EventCamera
	{
		[Token(Token = "0x600002A")]
		[Address(RVA = "0xAE9258", Offset = "0xAE9258", VA = "0xAE9258")]
		get
		{
			return null;
		}
		[Token(Token = "0x600002B")]
		[Address(RVA = "0xAE855C", Offset = "0xAE855C", VA = "0xAE855C")]
		set
		{
		}
	}

	[Token(Token = "0x1700000B")]
	public static Ray CustomControllerRay
	{
		[Token(Token = "0x600002D")]
		[Address(RVA = "0xAE94B4", Offset = "0xAE94B4", VA = "0xAE94B4")]
		get
		{
			return default(Ray);
		}
		[Token(Token = "0x600002E")]
		[Address(RVA = "0xAE8294", Offset = "0xAE8294", VA = "0xAE8294")]
		set
		{
		}
	}

	[Token(Token = "0x1700000C")]
	public static bool CustomControllerButtonState
	{
		[Token(Token = "0x600002F")]
		[Address(RVA = "0xAE9538", Offset = "0xAE9538", VA = "0xAE9538")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000030")]
		[Address(RVA = "0xAE813C", Offset = "0xAE813C", VA = "0xAE813C")]
		set
		{
		}
	}

	[Token(Token = "0x1700000D")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x87EAC4", Offset = "0x87EAC4")]
	public static bool CustomControllerButtonDown
	{
		[Token(Token = "0x6000031")]
		[Address(RVA = "0xAE95A4", Offset = "0xAE95A4", VA = "0xAE95A4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000032")]
		[Address(RVA = "0xAE9610", Offset = "0xAE9610", VA = "0xAE9610")]
		set
		{
		}
	}

	[Token(Token = "0x1700000E")]
	public Vector2 WorldSpaceMouseInCanvasSpace
	{
		[Token(Token = "0x6000033")]
		[Address(RVA = "0xAE9684", Offset = "0xAE9684", VA = "0xAE9684")]
		get
		{
			return default(Vector2);
		}
		[Token(Token = "0x6000034")]
		[Address(RVA = "0xAE9690", Offset = "0xAE9690", VA = "0xAE9690")]
		set
		{
		}
	}

	[Token(Token = "0x1700000F")]
	public Vector2 WorldSpaceMouseInCanvasSpaceDelta
	{
		[Token(Token = "0x6000035")]
		[Address(RVA = "0xAE96A4", Offset = "0xAE96A4", VA = "0xAE96A4")]
		get
		{
			return default(Vector2);
		}
	}

	[Token(Token = "0x17000010")]
	public float WorldSpaceMouseSensitivity
	{
		[Token(Token = "0x6000036")]
		[Address(RVA = "0xAE9738", Offset = "0xAE9738", VA = "0xAE9738")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000037")]
		[Address(RVA = "0xAE9740", Offset = "0xAE9740", VA = "0xAE9740")]
		set
		{
		}
	}

	[Token(Token = "0x17000011")]
	public bool GazeUseTimedClick
	{
		[Token(Token = "0x6000038")]
		[Address(RVA = "0xAE9748", Offset = "0xAE9748", VA = "0xAE9748")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000039")]
		[Address(RVA = "0xAE9750", Offset = "0xAE9750", VA = "0xAE9750")]
		set
		{
		}
	}

	[Token(Token = "0x17000012")]
	public float GazeClickTimer
	{
		[Token(Token = "0x600003A")]
		[Address(RVA = "0xAE975C", Offset = "0xAE975C", VA = "0xAE975C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600003B")]
		[Address(RVA = "0xAE9764", Offset = "0xAE9764", VA = "0xAE9764")]
		set
		{
		}
	}

	[Token(Token = "0x17000013")]
	public float GazeClickTimerDelay
	{
		[Token(Token = "0x600003C")]
		[Address(RVA = "0xAE97E4", Offset = "0xAE97E4", VA = "0xAE97E4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600003D")]
		[Address(RVA = "0xAE97EC", Offset = "0xAE97EC", VA = "0xAE97EC")]
		set
		{
		}
	}

	[Token(Token = "0x17000014")]
	public float GazeTimerProgress
	{
		[Token(Token = "0x600003E")]
		[Address(RVA = "0xAE986C", Offset = "0xAE986C", VA = "0xAE986C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000015")]
	public Image GazeTimedClickProgressImage
	{
		[Token(Token = "0x600003F")]
		[Address(RVA = "0xAE9874", Offset = "0xAE9874", VA = "0xAE9874")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000040")]
		[Address(RVA = "0xAE987C", Offset = "0xAE987C", VA = "0xAE987C")]
		set
		{
		}
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0xAE83E4", Offset = "0xAE83E4", VA = "0xAE83E4", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000010")]
	[Address(RVA = "0xAE8600", Offset = "0xAE8600", VA = "0xAE8600", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0xAE863C", Offset = "0xAE863C", VA = "0xAE863C", Slot = "31")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6000012")]
	[Address(RVA = "0xAE8854", Offset = "0xAE8854", VA = "0xAE8854", Slot = "17")]
	public override void Process()
	{
	}

	[Token(Token = "0x6000013")]
	[Address(RVA = "0xAE8B24", Offset = "0xAE8B24", VA = "0xAE8B24", Slot = "32")]
	protected virtual void ProcessGaze()
	{
	}

	[Token(Token = "0x6000014")]
	[Address(RVA = "0xAE8B8C", Offset = "0xAE8B8C", VA = "0xAE8B8C", Slot = "33")]
	protected virtual void ProcessCustomRayController()
	{
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0xAE8B94", Offset = "0xAE8B94", VA = "0xAE8B94", Slot = "27")]
	protected override MouseState GetMousePointerEventData(int id)
	{
		return null;
	}

	[Token(Token = "0x6000016")]
	[Address(RVA = "0xAE8D20", Offset = "0xAE8D20", VA = "0xAE8D20")]
	private PointerEventData.FramePressState CustomRayFramePressedState()
	{
		return default(PointerEventData.FramePressState);
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0xAE8D4C", Offset = "0xAE8D4C", VA = "0xAE8D4C", Slot = "34")]
	protected virtual void ProcessViveControllers()
	{
	}

	[Token(Token = "0x6000018")]
	[Address(RVA = "0xAE8D50", Offset = "0xAE8D50", VA = "0xAE8D50", Slot = "35")]
	protected virtual void ProcessOculusVRController()
	{
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0xAE8B20", Offset = "0xAE8B20", VA = "0xAE8B20")]
	private void ProcessSteamVR2Controllers()
	{
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0xAE8D54", Offset = "0xAE8D54", VA = "0xAE8D54", Slot = "36")]
	protected virtual void ProcessUnityXRController()
	{
	}

	[Token(Token = "0x600001B")]
	private static T EnableInputModule<T>() where T : BaseInputModule
	{
		return null;
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0xAE9260", Offset = "0xAE9260", VA = "0xAE9260")]
	public Ray GetEventRay([Optional] Camera eventCam)
	{
		return default(Ray);
	}

	[Token(Token = "0x6000041")]
	[Address(RVA = "0xAE9884", Offset = "0xAE9884", VA = "0xAE9884")]
	public CurvedUIInputModule()
	{
	}
}
[Token(Token = "0x200000B")]
public class MenuSceneSelectorFader : MonoBehaviour
{
	[Token(Token = "0x4000033")]
	private const string shaderAlphaScrollName = "_AlphaScroll";

	[Token(Token = "0x4000034")]
	private const string shaderAlphaVectorName = "_AlphaVec";

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform contentRect;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform scrollRect;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float scrollRectWidthChildMultiplier;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Image[] images;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<Material> materials;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int alphaScrollID;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int alphaVectorID;

	[Token(Token = "0x6000043")]
	[Address(RVA = "0xF6A428", Offset = "0xF6A428", VA = "0xF6A428")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000044")]
	[Address(RVA = "0xF6A62C", Offset = "0xF6A62C", VA = "0xF6A62C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0xF6A82C", Offset = "0xF6A82C", VA = "0xF6A82C")]
	public MenuSceneSelectorFader()
	{
	}
}
[Token(Token = "0x200000C")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x86E940", Offset = "0x86E940")]
public class FastList<T>
{
	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public T[] array;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int size;

	[Token(Token = "0x17000016")]
	public int Count
	{
		[Token(Token = "0x6000047")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000017")]
	public T Item
	{
		[Token(Token = "0x6000048")]
		get
		{
			return (T)null;
		}
	}

	[Token(Token = "0x6000046")]
	public FastList()
	{
	}

	[Token(Token = "0x6000049")]
	public void Add(T item)
	{
	}

	[Token(Token = "0x600004A")]
	public void AddUnique(T item)
	{
	}

	[Token(Token = "0x600004B")]
	public bool RemoveFast(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x600004C")]
	public void RemoveAtFast(int index)
	{
	}

	[Token(Token = "0x600004D")]
	public bool Contains(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x600004E")]
	public T[] ToArray()
	{
		return null;
	}

	[Token(Token = "0x600004F")]
	public T Find(Predicate<T> match)
	{
		return (T)null;
	}

	[Token(Token = "0x6000050")]
	private void Allocate()
	{
	}

	[Token(Token = "0x6000051")]
	private void Trim()
	{
	}

	[Token(Token = "0x6000052")]
	public void Clear()
	{
	}
}
[Token(Token = "0x200000D")]
public class DebugUIBuilder : MonoBehaviour
{
	[Token(Token = "0x200000E")]
	public delegate void OnClick();

	[Token(Token = "0x200000F")]
	public delegate void OnToggleValueChange(Toggle t);

	[Token(Token = "0x2000010")]
	public delegate void OnSlider(float f);

	[Token(Token = "0x2000011")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86E978", Offset = "0x86E978")]
	private sealed class <>c__DisplayClass35_0
	{
		[Token(Token = "0x4000058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnClick handler;

		[Token(Token = "0x600006D")]
		[Address(RVA = "0xAEB030", Offset = "0xAEB030", VA = "0xAEB030")]
		public <>c__DisplayClass35_0()
		{
		}

		[Token(Token = "0x600006E")]
		[Address(RVA = "0xAEB9D0", Offset = "0xAEB9D0", VA = "0xAEB9D0")]
		internal void <AddButton>b__0()
		{
		}
	}

	[Token(Token = "0x2000012")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86E988", Offset = "0x86E988")]
	private sealed class <>c__DisplayClass37_0
	{
		[Token(Token = "0x4000059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnSlider onValueChanged;

		[Token(Token = "0x600006F")]
		[Address(RVA = "0xAEB2A4", Offset = "0xAEB2A4", VA = "0xAEB2A4")]
		public <>c__DisplayClass37_0()
		{
		}

		[Token(Token = "0x6000070")]
		[Address(RVA = "0xAEBBF4", Offset = "0xAEBBF4", VA = "0xAEBBF4")]
		internal void <AddSlider>b__0(float f)
		{
		}
	}

	[Token(Token = "0x2000013")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86E998", Offset = "0x86E998")]
	private sealed class <>c__DisplayClass39_0
	{
		[Token(Token = "0x400005A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x400005B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x6000071")]
		[Address(RVA = "0xAEB4BC", Offset = "0xAEB4BC", VA = "0xAEB4BC")]
		public <>c__DisplayClass39_0()
		{
		}

		[Token(Token = "0x6000072")]
		[Address(RVA = "0xAEBE6C", Offset = "0xAEBE6C", VA = "0xAEBE6C")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x2000014")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86E9A8", Offset = "0x86E9A8")]
	private sealed class <>c__DisplayClass40_0
	{
		[Token(Token = "0x400005C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x400005D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x6000073")]
		[Address(RVA = "0xAEB650", Offset = "0xAEB650", VA = "0xAEB650")]
		public <>c__DisplayClass40_0()
		{
		}

		[Token(Token = "0x6000074")]
		[Address(RVA = "0xAEC220", Offset = "0xAEC220", VA = "0xAEC220")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x2000015")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86E9B8", Offset = "0x86E9B8")]
	private sealed class <>c__DisplayClass41_0
	{
		[Token(Token = "0x400005E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange handler;

		[Token(Token = "0x400005F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle tb;

		[Token(Token = "0x6000075")]
		[Address(RVA = "0xAEB8A8", Offset = "0xAEB8A8", VA = "0xAEB8A8")]
		public <>c__DisplayClass41_0()
		{
		}

		[Token(Token = "0x6000076")]
		[Address(RVA = "0xAEC240", Offset = "0xAEC240", VA = "0xAEC240")]
		internal void <AddRadio>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x400003E")]
	public const int DEBUG_PANE_CENTER = 0;

	[Token(Token = "0x400003F")]
	public const int DEBUG_PANE_RIGHT = 1;

	[Token(Token = "0x4000040")]
	public const int DEBUG_PANE_LEFT = 2;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform buttonPrefab;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform labelPrefab;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RectTransform sliderPrefab;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private RectTransform dividerPrefab;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private RectTransform togglePrefab;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private RectTransform radioPrefab;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject uiHelpersToInstantiate;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Transform[] targetContentPanels;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool[] reEnable;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private List<GameObject> toEnable;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private List<GameObject> toDisable;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DebugUIBuilder instance;

	[Token(Token = "0x400004D")]
	private const float elementSpacing = 16f;

	[Token(Token = "0x400004E")]
	private const float marginH = 16f;

	[Token(Token = "0x400004F")]
	private const float marginV = 16f;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector2[] insertPositions;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<RectTransform>[] insertedElements;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 menuOffset;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private OVRCameraRig rig;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Dictionary<string, ToggleGroup> radioGroups;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private LaserPointer lp;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private LineRenderer lr;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public LaserPointer.LaserBeamBehavior laserBeamBehavior;

	[Token(Token = "0x6000053")]
	[Address(RVA = "0xAE9FDC", Offset = "0xAE9FDC", VA = "0xAE9FDC")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0xAEA3E0", Offset = "0xAEA3E0", VA = "0xAEA3E0")]
	public void Show()
	{
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0xAEA9AC", Offset = "0xAEA9AC", VA = "0xAEA9AC")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0xAEA758", Offset = "0xAEA758", VA = "0xAEA758")]
	private void Relayout()
	{
	}

	[Token(Token = "0x6000057")]
	[Address(RVA = "0xAEAB54", Offset = "0xAEAB54", VA = "0xAEAB54")]
	private void AddRect(RectTransform r, int targetCanvas)
	{
	}

	[Token(Token = "0x6000058")]
	[Address(RVA = "0xAEAE08", Offset = "0xAEAE08", VA = "0xAEAE08")]
	public RectTransform AddButton(string label, OnClick handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0xAEB038", Offset = "0xAEB038", VA = "0xAEB038")]
	public RectTransform AddLabel(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0xAEB11C", Offset = "0xAEB11C", VA = "0xAEB11C")]
	public RectTransform AddSlider(string label, float min, float max, OnSlider onValueChanged, bool wholeNumbersOnly = false, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0xAEB2AC", Offset = "0xAEB2AC", VA = "0xAEB2AC")]
	public RectTransform AddDivider(int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0xAEB348", Offset = "0xAEB348", VA = "0xAEB348")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600005D")]
	[Address(RVA = "0xAEB4C4", Offset = "0xAEB4C4", VA = "0xAEB4C4")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, bool defaultValue, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600005E")]
	[Address(RVA = "0xAEB658", Offset = "0xAEB658", VA = "0xAEB658")]
	public RectTransform AddRadio(string label, string group, OnToggleValueChange handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0xAEB8B0", Offset = "0xAEB8B0", VA = "0xAEB8B0")]
	public void ToggleLaserPointer(bool isOn)
	{
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0xAEB960", Offset = "0xAEB960", VA = "0xAEB960")]
	public DebugUIBuilder()
	{
	}
}
[Token(Token = "0x2000016")]
public class HandedInputSelector : MonoBehaviour
{
	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRCameraRig m_CameraRig;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVRInputModule m_InputModule;

	[Token(Token = "0x6000077")]
	[Address(RVA = "0xB46A1C", Offset = "0xB46A1C", VA = "0xB46A1C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0xB46AA4", Offset = "0xB46AA4", VA = "0xB46AA4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0xB46B6C", Offset = "0xB46B6C", VA = "0xB46B6C")]
	private void SetActiveController(OVRInput.Controller c)
	{
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0xB46BA8", Offset = "0xB46BA8", VA = "0xB46BA8")]
	public HandedInputSelector()
	{
	}
}
[Token(Token = "0x2000017")]
public class LaserPointer : OVRCursor
{
	[Token(Token = "0x2000018")]
	public enum LaserBeamBehavior
	{
		[Token(Token = "0x400006C")]
		On,
		[Token(Token = "0x400006D")]
		Off,
		[Token(Token = "0x400006E")]
		OnWhenHitTarget
	}

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cursorVisual;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxLength;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private LaserBeamBehavior _laserBeamBehavior;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_restoreOnInputAcquired;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 _startPoint;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 _forward;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 _endPoint;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _hitTarget;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x17000018")]
	public LaserBeamBehavior laserBeamBehavior
	{
		[Token(Token = "0x600007C")]
		[Address(RVA = "0xB4D344", Offset = "0xB4D344", VA = "0xB4D344")]
		get
		{
			return default(LaserBeamBehavior);
		}
		[Token(Token = "0x600007B")]
		[Address(RVA = "0xB4D300", Offset = "0xB4D300", VA = "0xB4D300")]
		set
		{
		}
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0xB4D34C", Offset = "0xB4D34C", VA = "0xB4D34C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0xB4D3A4", Offset = "0xB4D3A4", VA = "0xB4D3A4")]
	private void Start()
	{
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0xB4D4BC", Offset = "0xB4D4BC", VA = "0xB4D4BC", Slot = "5")]
	public override void SetCursorStartDest(Vector3 start, Vector3 dest, Vector3 normal)
	{
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0xB4D4D8", Offset = "0xB4D4D8", VA = "0xB4D4D8", Slot = "4")]
	public override void SetCursorRay(Transform t)
	{
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0xB4D52C", Offset = "0xB4D52C", VA = "0xB4D52C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0xB4D788", Offset = "0xB4D788", VA = "0xB4D788")]
	private void UpdateLaserBeam(Vector3 start, Vector3 end)
	{
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0xB4D89C", Offset = "0xB4D89C", VA = "0xB4D89C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0xB4D930", Offset = "0xB4D930", VA = "0xB4D930")]
	public void OnInputFocusLost()
	{
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0xB4DA00", Offset = "0xB4DA00", VA = "0xB4DA00")]
	public void OnInputFocusAcquired()
	{
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0xB4DAB8", Offset = "0xB4DAB8", VA = "0xB4DAB8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0xB4DB84", Offset = "0xB4DB84", VA = "0xB4DB84")]
	public LaserPointer()
	{
	}
}
[Token(Token = "0x2000019")]
public class BoundsLockedObject : MonoBehaviour
{
	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 m_initialOffset;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig m_playerOrigin;

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GuardianBoundaryEnforcer m_enforcer;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Bounds? m_bounds;

	[Token(Token = "0x6000088")]
	[Address(RVA = "0xCBCF30", Offset = "0xCBCF30", VA = "0xCBCF30")]
	private void Start()
	{
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0xCBD13C", Offset = "0xCBD13C", VA = "0xCBD13C")]
	private void RefreshDisplay()
	{
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0xCBD5DC", Offset = "0xCBD5DC", VA = "0xCBD5DC")]
	public BoundsLockedObject()
	{
	}
}
[Token(Token = "0x200001A")]
public class GuardianBoundaryDisplay : MonoBehaviour
{
	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GuardianBoundaryEnforcer m_enforcer;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRBoundary.BoundaryType m_boundaryType;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_errorDisplay;

	[Token(Token = "0x600008B")]
	[Address(RVA = "0xB429A0", Offset = "0xB429A0", VA = "0xB429A0")]
	private void Start()
	{
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0xB42AD4", Offset = "0xB42AD4", VA = "0xB42AD4")]
	private void RefreshDisplay()
	{
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0xB42D24", Offset = "0xB42D24", VA = "0xB42D24")]
	public GuardianBoundaryDisplay()
	{
	}
}
[Token(Token = "0x200001B")]
public class GuardianBoundaryEnforcer : MonoBehaviour
{
	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool m_AllowRecenter;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig m_mainCamera;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Quaternion m_originalTrackerOrientation;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int m_framecount;

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Quaternion m_orientToOriginalForward;

	[Token(Token = "0x17000019")]
	public Quaternion OrientToOriginalForward
	{
		[Token(Token = "0x6000090")]
		[Address(RVA = "0xB42DD0", Offset = "0xB42DD0", VA = "0xB42DD0")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x14000001")]
	public event Action TrackingChanged
	{
		[Token(Token = "0x600008E")]
		[Address(RVA = "0xB42A30", Offset = "0xB42A30", VA = "0xB42A30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x879FA0", Offset = "0x879FA0")]
		add
		{
		}
		[Token(Token = "0x600008F")]
		[Address(RVA = "0xB42D2C", Offset = "0xB42D2C", VA = "0xB42D2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x879FB0", Offset = "0x879FB0")]
		remove
		{
		}
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0xB42DDC", Offset = "0xB42DDC", VA = "0xB42DDC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0xB42F34", Offset = "0xB42F34", VA = "0xB42F34")]
	private void Update()
	{
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0xB430A8", Offset = "0xB430A8", VA = "0xB430A8")]
	private void Recentered()
	{
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0xB430B0", Offset = "0xB430B0", VA = "0xB430B0")]
	public GuardianBoundaryEnforcer()
	{
	}
}
[Token(Token = "0x200001C")]
public class CharacterCameraConstraint : MonoBehaviour
{
	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8719F4", Offset = "0x8719F4")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x871A2C", Offset = "0x871A2C")]
	public bool EnableCollision;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public LayerMask CollideLayers;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x871A64", Offset = "0x871A64")]
	public float MaxFade;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x871A9C", Offset = "0x871A9C")]
	public float FadeMinDistance;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float PreferredHeight;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x871AD4", Offset = "0x871AD4")]
	public float FadeMaxDistance;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _cameraUpdateAction;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action _preCharacterMovementAction;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private CapsuleCollider _character;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private SimpleCapsuleWithStickMovement _simplePlayerController;

	[Token(Token = "0x6000095")]
	[Address(RVA = "0xB59690", Offset = "0xB59690", VA = "0xB59690")]
	private CharacterCameraConstraint()
	{
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0xB59718", Offset = "0xB59718", VA = "0xB59718")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0xB59788", Offset = "0xB59788", VA = "0xB59788")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0xB597AC", Offset = "0xB597AC", VA = "0xB597AC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0xB597D0", Offset = "0xB597D0", VA = "0xB597D0")]
	private void CameraUpdate()
	{
	}
}
[Token(Token = "0x200001D")]
public class LocomotionController : MonoBehaviour
{
	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CapsuleCollider CharacterController;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimpleCapsuleWithStickMovement PlayerController;

	[Token(Token = "0x600009A")]
	[Address(RVA = "0xB5198C", Offset = "0xB5198C", VA = "0xB5198C")]
	private void Start()
	{
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0xB51A38", Offset = "0xB51A38", VA = "0xB51A38")]
	public LocomotionController()
	{
	}
}
[Token(Token = "0x200001E")]
public class LocomotionTeleport : MonoBehaviour
{
	[Token(Token = "0x200001F")]
	public enum States
	{
		[Token(Token = "0x40000AD")]
		Ready,
		[Token(Token = "0x40000AE")]
		Aim,
		[Token(Token = "0x40000AF")]
		CancelAim,
		[Token(Token = "0x40000B0")]
		PreTeleport,
		[Token(Token = "0x40000B1")]
		CancelTeleport,
		[Token(Token = "0x40000B2")]
		Teleporting,
		[Token(Token = "0x40000B3")]
		PostTeleport
	}

	[Token(Token = "0x2000020")]
	public enum TeleportIntentions
	{
		[Token(Token = "0x40000B5")]
		None,
		[Token(Token = "0x40000B6")]
		Aim,
		[Token(Token = "0x40000B7")]
		PreTeleport,
		[Token(Token = "0x40000B8")]
		Teleport
	}

	[Token(Token = "0x2000021")]
	public enum AimCollisionTypes
	{
		[Token(Token = "0x40000BA")]
		Point,
		[Token(Token = "0x40000BB")]
		Sphere,
		[Token(Token = "0x40000BC")]
		Capsule
	}

	[Token(Token = "0x2000022")]
	public class AimData
	{
		[Token(Token = "0x40000BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RaycastHit TargetHitInfo;

		[Token(Token = "0x40000BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool TargetValid;

		[Token(Token = "0x40000BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3? Destination;

		[Token(Token = "0x40000C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float Radius;

		[Token(Token = "0x40000C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x871EEC", Offset = "0x871EEC")]
		private List<Vector3> <Points>k__BackingField;

		[Token(Token = "0x1700001D")]
		public List<Vector3> Points
		{
			[Token(Token = "0x60000D1")]
			[Address(RVA = "0xB54BFC", Offset = "0xB54BFC", VA = "0xB54BFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87A454", Offset = "0x87A454")]
			get
			{
				return null;
			}
			[Token(Token = "0x60000D2")]
			[Address(RVA = "0xB54C04", Offset = "0xB54C04", VA = "0xB54C04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87A464", Offset = "0x87A464")]
			private set
			{
			}
		}

		[Token(Token = "0x60000D0")]
		[Address(RVA = "0xB54B88", Offset = "0xB54B88", VA = "0xB54B88")]
		public AimData()
		{
		}

		[Token(Token = "0x60000D3")]
		[Address(RVA = "0xB54C0C", Offset = "0xB54C0C", VA = "0xB54C0C")]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000023")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86E9C8", Offset = "0x86E9C8")]
	private sealed class <ReadyStateCoroutine>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700001E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000D7")]
			[Address(RVA = "0xB549D4", Offset = "0xB549D4", VA = "0xB549D4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000D9")]
			[Address(RVA = "0xB54A3C", Offset = "0xB54A3C", VA = "0xB54A3C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000D4")]
		[Address(RVA = "0xB52ED8", Offset = "0xB52ED8", VA = "0xB52ED8")]
		[DebuggerHidden]
		public <ReadyStateCoroutine>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x60000D5")]
		[Address(RVA = "0xB548EC", Offset = "0xB548EC", VA = "0xB548EC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000D6")]
		[Address(RVA = "0xB548F0", Offset = "0xB548F0", VA = "0xB548F0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000D8")]
		[Address(RVA = "0xB549DC", Offset = "0xB549DC", VA = "0xB549DC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000024")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86E9D8", Offset = "0x86E9D8")]
	private sealed class <AimStateCoroutine>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000020")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000DD")]
			[Address(RVA = "0xB543B4", Offset = "0xB543B4", VA = "0xB543B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000021")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000DF")]
			[Address(RVA = "0xB5441C", Offset = "0xB5441C", VA = "0xB5441C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000DA")]
		[Address(RVA = "0xB533C0", Offset = "0xB533C0", VA = "0xB533C0")]
		[DebuggerHidden]
		public <AimStateCoroutine>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x60000DB")]
		[Address(RVA = "0xB5427C", Offset = "0xB5427C", VA = "0xB5427C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000DC")]
		[Address(RVA = "0xB54280", Offset = "0xB54280", VA = "0xB54280", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000DE")]
		[Address(RVA = "0xB543BC", Offset = "0xB543BC", VA = "0xB543BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000025")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86E9E8", Offset = "0x86E9E8")]
	private sealed class <CancelAimStateCoroutine>d__68 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000022")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000E3")]
			[Address(RVA = "0xB544C8", Offset = "0xB544C8", VA = "0xB544C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000023")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000E5")]
			[Address(RVA = "0xB54530", Offset = "0xB54530", VA = "0xB54530", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000E0")]
		[Address(RVA = "0xB535A4", Offset = "0xB535A4", VA = "0xB535A4")]
		[DebuggerHidden]
		public <CancelAimStateCoroutine>d__68(int <>1__state)
		{
		}

		[Token(Token = "0x60000E1")]
		[Address(RVA = "0xB54424", Offset = "0xB54424", VA = "0xB54424", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000E2")]
		[Address(RVA = "0xB54428", Offset = "0xB54428", VA = "0xB54428", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000E4")]
		[Address(RVA = "0xB544D0", Offset = "0xB544D0", VA = "0xB544D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000026")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86E9F8", Offset = "0x86E9F8")]
	private sealed class <PreTeleportStateCoroutine>d__72 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000024")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000E9")]
			[Address(RVA = "0xB5487C", Offset = "0xB5487C", VA = "0xB5487C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000025")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000EB")]
			[Address(RVA = "0xB548E4", Offset = "0xB548E4", VA = "0xB548E4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000E6")]
		[Address(RVA = "0xB53788", Offset = "0xB53788", VA = "0xB53788")]
		[DebuggerHidden]
		public <PreTeleportStateCoroutine>d__72(int <>1__state)
		{
		}

		[Token(Token = "0x60000E7")]
		[Address(RVA = "0xB547A4", Offset = "0xB547A4", VA = "0xB547A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000E8")]
		[Address(RVA = "0xB547A8", Offset = "0xB547A8", VA = "0xB547A8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000EA")]
		[Address(RVA = "0xB54884", Offset = "0xB54884", VA = "0xB54884", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000027")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86EA08", Offset = "0x86EA08")]
	private sealed class <CancelTeleportStateCoroutine>d__76 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000026")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000EF")]
			[Address(RVA = "0xB545DC", Offset = "0xB545DC", VA = "0xB545DC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000027")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000F1")]
			[Address(RVA = "0xB54644", Offset = "0xB54644", VA = "0xB54644", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000EC")]
		[Address(RVA = "0xB5396C", Offset = "0xB5396C", VA = "0xB5396C")]
		[DebuggerHidden]
		public <CancelTeleportStateCoroutine>d__76(int <>1__state)
		{
		}

		[Token(Token = "0x60000ED")]
		[Address(RVA = "0xB54538", Offset = "0xB54538", VA = "0xB54538", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000EE")]
		[Address(RVA = "0xB5453C", Offset = "0xB5453C", VA = "0xB5453C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000F0")]
		[Address(RVA = "0xB545E4", Offset = "0xB545E4", VA = "0xB545E4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000028")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86EA18", Offset = "0x86EA18")]
	private sealed class <TeleportingStateCoroutine>d__80 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000028")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000F5")]
			[Address(RVA = "0xB54B18", Offset = "0xB54B18", VA = "0xB54B18", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000029")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000F7")]
			[Address(RVA = "0xB54B80", Offset = "0xB54B80", VA = "0xB54B80", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000F2")]
		[Address(RVA = "0xB53B50", Offset = "0xB53B50", VA = "0xB53B50")]
		[DebuggerHidden]
		public <TeleportingStateCoroutine>d__80(int <>1__state)
		{
		}

		[Token(Token = "0x60000F3")]
		[Address(RVA = "0xB54A44", Offset = "0xB54A44", VA = "0xB54A44", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000F4")]
		[Address(RVA = "0xB54A48", Offset = "0xB54A48", VA = "0xB54A48", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000F6")]
		[Address(RVA = "0xB54B20", Offset = "0xB54B20", VA = "0xB54B20", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000029")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86EA28", Offset = "0x86EA28")]
	private sealed class <PostTeleportStateCoroutine>d__84 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700002A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000FB")]
			[Address(RVA = "0xB54734", Offset = "0xB54734", VA = "0xB54734", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000FD")]
			[Address(RVA = "0xB5479C", Offset = "0xB5479C", VA = "0xB5479C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000F8")]
		[Address(RVA = "0xB53D34", Offset = "0xB53D34", VA = "0xB53D34")]
		[DebuggerHidden]
		public <PostTeleportStateCoroutine>d__84(int <>1__state)
		{
		}

		[Token(Token = "0x60000F9")]
		[Address(RVA = "0xB5464C", Offset = "0xB5464C", VA = "0xB5464C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000FA")]
		[Address(RVA = "0xB54650", Offset = "0xB54650", VA = "0xB54650", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000FC")]
		[Address(RVA = "0xB5473C", Offset = "0xB5473C", VA = "0xB5473C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x871B0C", Offset = "0x871B0C")]
	public bool EnableMovementDuringReady;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x871B44", Offset = "0x871B44")]
	public bool EnableMovementDuringAim;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x871B7C", Offset = "0x871B7C")]
	public bool EnableMovementDuringPreTeleport;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x871BB4", Offset = "0x871BB4")]
	public bool EnableMovementDuringPostTeleport;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x871BEC", Offset = "0x871BEC")]
	public bool EnableRotationDuringReady;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x871C24", Offset = "0x871C24")]
	public bool EnableRotationDuringAim;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x871C5C", Offset = "0x871C5C")]
	public bool EnableRotationDuringPreTeleport;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x871C94", Offset = "0x871C94")]
	public bool EnableRotationDuringPostTeleport;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x871CCC", Offset = "0x871CCC")]
	private States <CurrentState>k__BackingField;

	[NonSerialized]
	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TeleportAimHandler AimHandler;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x871CDC", Offset = "0x871CDC")]
	public TeleportDestination TeleportDestinationPrefab;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x871D14", Offset = "0x871D14")]
	public int TeleportDestinationLayer;

	[NonSerialized]
	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TeleportInputHandler InputHandler;

	[NonSerialized]
	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TeleportIntentions CurrentIntention;

	[NonSerialized]
	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool IsPreTeleportRequested;

	[NonSerialized]
	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool IsTransitioning;

	[NonSerialized]
	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	public bool IsPostTeleportRequested;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TeleportDestination _teleportDestination;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x871D5C", Offset = "0x871D5C")]
	private LocomotionController <LocomotionController>k__BackingField;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x871D6C", Offset = "0x871D6C")]
	public AimCollisionTypes AimCollisionType;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x871DA4", Offset = "0x871DA4")]
	public bool UseCharacterCollisionData;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x871DDC", Offset = "0x871DDC")]
	public float AimCollisionRadius;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x871E14", Offset = "0x871E14")]
	public float AimCollisionHeight;

	[Token(Token = "0x1700001A")]
	public States CurrentState
	{
		[Token(Token = "0x600009E")]
		[Address(RVA = "0xB5241C", Offset = "0xB5241C", VA = "0xB5241C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x879FC0", Offset = "0x879FC0")]
		get
		{
			return default(States);
		}
		[Token(Token = "0x600009F")]
		[Address(RVA = "0xB52424", Offset = "0xB52424", VA = "0xB52424")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x879FD0", Offset = "0x879FD0")]
		private set
		{
		}
	}

	[Token(Token = "0x1700001B")]
	public Quaternion DestinationRotation
	{
		[Token(Token = "0x60000A3")]
		[Address(RVA = "0xB52654", Offset = "0xB52654", VA = "0xB52654")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x1700001C")]
	public LocomotionController LocomotionController
	{
		[Token(Token = "0x60000A4")]
		[Address(RVA = "0xB5267C", Offset = "0xB5267C", VA = "0xB5267C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87A000", Offset = "0x87A000")]
		get
		{
			return null;
		}
		[Token(Token = "0x60000A5")]
		[Address(RVA = "0xB52684", Offset = "0xB52684", VA = "0xB52684")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87A010", Offset = "0x87A010")]
		private set
		{
		}
	}

	[Token(Token = "0x14000002")]
	public event Action<bool, Vector3?, Quaternion?, Quaternion?> UpdateTeleportDestination
	{
		[Token(Token = "0x60000A0")]
		[Address(RVA = "0xB5242C", Offset = "0xB5242C", VA = "0xB5242C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x879FE0", Offset = "0x879FE0")]
		add
		{
		}
		[Token(Token = "0x60000A1")]
		[Address(RVA = "0xB524D0", Offset = "0xB524D0", VA = "0xB524D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x879FF0", Offset = "0x879FF0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000003")]
	public event Action EnterStateReady
	{
		[Token(Token = "0x60000AF")]
		[Address(RVA = "0xB52D90", Offset = "0xB52D90", VA = "0xB52D90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87A058", Offset = "0x87A058")]
		add
		{
		}
		[Token(Token = "0x60000B0")]
		[Address(RVA = "0xB52E34", Offset = "0xB52E34", VA = "0xB52E34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87A068", Offset = "0x87A068")]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public event Action EnterStateAim
	{
		[Token(Token = "0x60000B2")]
		[Address(RVA = "0xB52F04", Offset = "0xB52F04", VA = "0xB52F04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87A0DC", Offset = "0x87A0DC")]
		add
		{
		}
		[Token(Token = "0x60000B3")]
		[Address(RVA = "0xB52FA8", Offset = "0xB52FA8", VA = "0xB52FA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87A0EC", Offset = "0x87A0EC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public event Action<AimData> UpdateAimData
	{
		[Token(Token = "0x60000B4")]
		[Address(RVA = "0xB5304C", Offset = "0xB5304C", VA = "0xB5304C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87A0FC", Offset = "0x87A0FC")]
		add
		{
		}
		[Token(Token = "0x60000B5")]
		[Address(RVA = "0xB530F0", Offset = "0xB530F0", VA = "0xB530F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87A10C", Offset = "0x87A10C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000006")]
	public event Action ExitStateAim
	{
		[Token(Token = "0x60000B7")]
		[Address(RVA = "0xB53208", Offset = "0xB53208", VA = "0xB53208")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87A11C", Offset = "0x87A11C")]
		add
		{
		}
		[Token(Token = "0x60000B8")]
		[Address(RVA = "0xB532AC", Offset = "0xB532AC", VA = "0xB532AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87A12C", Offset = "0x87A12C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public event Action EnterStateCancelAim
	{
		[Token(Token = "0x60000BA")]
		[Address(RVA = "0xB533EC", Offset = "0xB533EC", VA = "0xB533EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87A1A0", Offset = "0x87A1A0")]
		add
		{
		}
		[Token(Token = "0x60000BB")]
		[Address(RVA = "0xB53490", Offset = "0xB53490", VA = "0xB53490")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87A1B0", Offset = "0x87A1B0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public event Action EnterStatePreTeleport
	{
		[Token(Token = "0x60000BD")]
		[Address(RVA = "0xB535D0", Offset = "0xB535D0", VA = "0xB535D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87A224", Offset = "0x87A224")]
		add
		{
		}
		[Token(Token = "0x60000BE")]
		[Address(RVA = "0xB53674", Offset = "0xB53674", VA = "0xB53674")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87A234", Offset = "0x87A234")]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public event Action EnterStateCancelTeleport
	{
		[Token(Token = "0x60000C0")]
		[Address(RVA = "0xB537B4", Offset = "0xB537B4", VA = "0xB537B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87A2A8", Offset = "0x87A2A8")]
		add
		{
		}
		[Token(Token = "0x60000C1")]
		[Address(RVA = "0xB53858", Offset = "0xB53858", VA = "0xB53858")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87A2B8", Offset = "0x87A2B8")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public event Action EnterStateTeleporting
	{
		[Token(Token = "0x60000C3")]
		[Address(RVA = "0xB53998", Offset = "0xB53998", VA = "0xB53998")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87A32C", Offset = "0x87A32C")]
		add
		{
		}
		[Token(Token = "0x60000C4")]
		[Address(RVA = "0xB53A3C", Offset = "0xB53A3C", VA = "0xB53A3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87A33C", Offset = "0x87A33C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public event Action EnterStatePostTeleport
	{
		[Token(Token = "0x60000C6")]
		[Address(RVA = "0xB53B7C", Offset = "0xB53B7C", VA = "0xB53B7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87A3B0", Offset = "0x87A3B0")]
		add
		{
		}
		[Token(Token = "0x60000C7")]
		[Address(RVA = "0xB53C20", Offset = "0xB53C20", VA = "0xB53C20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87A3C0", Offset = "0x87A3C0")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000C")]
	public event Action<Transform, Vector3, Quaternion> Teleported
	{
		[Token(Token = "0x60000C9")]
		[Address(RVA = "0xB53D60", Offset = "0xB53D60", VA = "0xB53D60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87A434", Offset = "0x87A434")]
		add
		{
		}
		[Token(Token = "0x60000CA")]
		[Address(RVA = "0xB53E04", Offset = "0xB53E04", VA = "0xB53E04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87A444", Offset = "0x87A444")]
		remove
		{
		}
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0xB520EC", Offset = "0xB520EC", VA = "0xB520EC")]
	public void EnableMovement(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0xB52110", Offset = "0xB52110", VA = "0xB52110")]
	public void EnableRotation(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0xB52574", Offset = "0xB52574", VA = "0xB52574")]
	public void OnUpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0xB5268C", Offset = "0xB5268C", VA = "0xB5268C")]
	public bool AimCollisionTest(Vector3 start, Vector3 end, LayerMask aimCollisionLayerMask, out RaycastHit hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0xB529E4", Offset = "0xB529E4", VA = "0xB529E4")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x87A020", Offset = "0x87A020")]
	protected void LogState(string msg)
	{
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0xB52A9C", Offset = "0xB52A9C", VA = "0xB52A9C")]
	protected void CreateNewTeleportDestination()
	{
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0xB52B64", Offset = "0xB52B64", VA = "0xB52B64")]
	private void DeactivateDestination()
	{
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0xB52B80", Offset = "0xB52B80", VA = "0xB52B80")]
	public void RecycleTeleportDestination(TeleportDestination oldDestination)
	{
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0xB52C48", Offset = "0xB52C48", VA = "0xB52C48")]
	private void EnableMotion(bool enableLinear, bool enableRotation)
	{
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0xB52C8C", Offset = "0xB52C8C", VA = "0xB52C8C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0xB52CE8", Offset = "0xB52CE8", VA = "0xB52CE8", Slot = "4")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0xB52D88", Offset = "0xB52D88", VA = "0xB52D88", Slot = "5")]
	public virtual void OnDisable()
	{
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0xB52D18", Offset = "0xB52D18", VA = "0xB52D18")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x87A078", Offset = "0x87A078")]
	protected IEnumerator ReadyStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0xB53194", Offset = "0xB53194", VA = "0xB53194")]
	public void OnUpdateAimData(AimData aimData)
	{
	}

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0xB53350", Offset = "0xB53350", VA = "0xB53350")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x87A13C", Offset = "0x87A13C")]
	protected IEnumerator AimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0xB53534", Offset = "0xB53534", VA = "0xB53534")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x87A1C0", Offset = "0x87A1C0")]
	protected IEnumerator CancelAimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0xB53718", Offset = "0xB53718", VA = "0xB53718")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x87A244", Offset = "0x87A244")]
	protected IEnumerator PreTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0xB538FC", Offset = "0xB538FC", VA = "0xB538FC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x87A2C8", Offset = "0x87A2C8")]
	protected IEnumerator CancelTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0xB53AE0", Offset = "0xB53AE0", VA = "0xB53AE0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x87A34C", Offset = "0x87A34C")]
	protected IEnumerator TeleportingStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0xB53CC4", Offset = "0xB53CC4", VA = "0xB53CC4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x87A3D0", Offset = "0x87A3D0")]
	protected IEnumerator PostTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0xB53EA8", Offset = "0xB53EA8", VA = "0xB53EA8")]
	public void DoTeleport()
	{
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0xB53FEC", Offset = "0xB53FEC", VA = "0xB53FEC")]
	public Vector3 GetCharacterPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0xB54020", Offset = "0xB54020", VA = "0xB54020")]
	public Quaternion GetHeadRotationY()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0xB54140", Offset = "0xB54140", VA = "0xB54140")]
	public void DoWarp(Vector3 startPos, float positionPercent)
	{
	}

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0xB5426C", Offset = "0xB5426C", VA = "0xB5426C")]
	public LocomotionTeleport()
	{
	}
}
[Token(Token = "0x200002A")]
public class SimpleCapsuleWithStickMovement : MonoBehaviour
{
	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool EnableLinearMovement;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool EnableRotation;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool HMDRotatesPlayer;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool RotationEitherThumbstick;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float RotationAngle;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Speed;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool ReadyToSnapTurn;

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody _rigidbody;

	[Token(Token = "0x1400000D")]
	public event Action CameraUpdated
	{
		[Token(Token = "0x60000FE")]
		[Address(RVA = "0xB195A0", Offset = "0xB195A0", VA = "0xB195A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87A6A4", Offset = "0x87A6A4")]
		add
		{
		}
		[Token(Token = "0x60000FF")]
		[Address(RVA = "0xB19644", Offset = "0xB19644", VA = "0xB19644")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87A6B4", Offset = "0x87A6B4")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public event Action PreCharacterMove
	{
		[Token(Token = "0x6000100")]
		[Address(RVA = "0xB196E8", Offset = "0xB196E8", VA = "0xB196E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87A6C4", Offset = "0x87A6C4")]
		add
		{
		}
		[Token(Token = "0x6000101")]
		[Address(RVA = "0xB1978C", Offset = "0xB1978C", VA = "0xB1978C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87A6D4", Offset = "0x87A6D4")]
		remove
		{
		}
	}

	[Token(Token = "0x6000102")]
	[Address(RVA = "0xB19830", Offset = "0xB19830", VA = "0xB19830")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000103")]
	[Address(RVA = "0xB198D8", Offset = "0xB198D8", VA = "0xB198D8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0xB1994C", Offset = "0xB1994C", VA = "0xB1994C")]
	private void RotatePlayerToHMD()
	{
	}

	[Token(Token = "0x6000105")]
	[Address(RVA = "0xB19ABC", Offset = "0xB19ABC", VA = "0xB19ABC")]
	private void StickMovement()
	{
	}

	[Token(Token = "0x6000106")]
	[Address(RVA = "0xB19DA0", Offset = "0xB19DA0", VA = "0xB19DA0")]
	private void SnapTurn()
	{
	}

	[Token(Token = "0x6000107")]
	[Address(RVA = "0xB19F90", Offset = "0xB19F90", VA = "0xB19F90")]
	public SimpleCapsuleWithStickMovement()
	{
	}
}
[Token(Token = "0x200002B")]
public abstract class TeleportAimHandler : TeleportSupport
{
	[Token(Token = "0x6000108")]
	[Address(RVA = "0xB1CD3C", Offset = "0xB1CD3C", VA = "0xB1CD3C", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000109")]
	[Address(RVA = "0xB1CDD0", Offset = "0xB1CDD0", VA = "0xB1CDD0", Slot = "5")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x600010A")]
	public abstract void GetPoints(List<Vector3> points);

	[Token(Token = "0x600010B")]
	[Address(RVA = "0xB1CEA0", Offset = "0xB1CEA0", VA = "0xB1CEA0")]
	protected TeleportAimHandler()
	{
	}
}
[Token(Token = "0x200002C")]
public class TeleportAimHandlerLaser : TeleportAimHandler
{
	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x871F1C", Offset = "0x871F1C")]
	public float Range;

	[Token(Token = "0x600010C")]
	[Address(RVA = "0xB1CEB0", Offset = "0xB1CEB0", VA = "0xB1CEB0", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0xB1D00C", Offset = "0xB1D00C", VA = "0xB1D00C")]
	public TeleportAimHandlerLaser()
	{
	}
}
[Token(Token = "0x200002D")]
public class TeleportAimHandlerParabolic : TeleportAimHandler
{
	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x871F54", Offset = "0x871F54")]
	public float Range;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x871F8C", Offset = "0x871F8C")]
	public float MinimumElevation;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x871FC4", Offset = "0x871FC4")]
	public float Gravity;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x871FFC", Offset = "0x871FFC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x871FFC", Offset = "0x871FFC")]
	public float AimVelocity;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x872058", Offset = "0x872058")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x872058", Offset = "0x872058")]
	public float AimStep;

	[Token(Token = "0x600010E")]
	[Address(RVA = "0xB1D01C", Offset = "0xB1D01C", VA = "0xB1D01C", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0xB1D268", Offset = "0xB1D268", VA = "0xB1D268")]
	public TeleportAimHandlerParabolic()
	{
	}
}
[Token(Token = "0x200002E")]
public class TeleportAimVisualLaser : TeleportSupport
{
	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8720B0", Offset = "0x8720B0")]
	public LineRenderer LaserPrefab;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _enterAimStateAction;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _exitAimStateAction;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] _linePoints;

	[Token(Token = "0x6000110")]
	[Address(RVA = "0xB1D27C", Offset = "0xB1D27C", VA = "0xB1D27C")]
	public TeleportAimVisualLaser()
	{
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0xB1D360", Offset = "0xB1D360", VA = "0xB1D360")]
	private void EnterAimState()
	{
	}

	[Token(Token = "0x6000112")]
	[Address(RVA = "0xB1D390", Offset = "0xB1D390", VA = "0xB1D390")]
	private void ExitAimState()
	{
	}

	[Token(Token = "0x6000113")]
	[Address(RVA = "0xB1D3C0", Offset = "0xB1D3C0", VA = "0xB1D3C0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000114")]
	[Address(RVA = "0xB1D460", Offset = "0xB1D460", VA = "0xB1D460", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000115")]
	[Address(RVA = "0xB1D4CC", Offset = "0xB1D4CC", VA = "0xB1D4CC", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000116")]
	[Address(RVA = "0xB1D534", Offset = "0xB1D534", VA = "0xB1D534")]
	private void UpdateAimData(LocomotionTeleport.AimData obj)
	{
	}
}
[Token(Token = "0x200002F")]
public class TeleportDestination : MonoBehaviour
{
	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8720E8", Offset = "0x8720E8")]
	private bool <IsValidDestination>k__BackingField;

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8720F8", Offset = "0x8720F8")]
	public Transform PositionIndicator;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x872130", Offset = "0x872130")]
	public Transform OrientationIndicator;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x872168", Offset = "0x872168")]
	public Quaternion LandingRotation;

	[NonSerialized]
	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LocomotionTeleport LocomotionTeleport;

	[NonSerialized]
	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LocomotionTeleport.States TeleportState;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly Action<bool, Vector3?, Quaternion?, Quaternion?> _updateTeleportDestinationAction;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _eventsActive;

	[Token(Token = "0x1700002C")]
	public bool IsValidDestination
	{
		[Token(Token = "0x6000117")]
		[Address(RVA = "0xB1D650", Offset = "0xB1D650", VA = "0xB1D650")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87A6E4", Offset = "0x87A6E4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000118")]
		[Address(RVA = "0xB1D658", Offset = "0xB1D658", VA = "0xB1D658")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87A6F4", Offset = "0x87A6F4")]
		private set
		{
		}
	}

	[Token(Token = "0x1400000F")]
	public event Action<TeleportDestination> Deactivated
	{
		[Token(Token = "0x600011D")]
		[Address(RVA = "0xB1D808", Offset = "0xB1D808", VA = "0xB1D808")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87A704", Offset = "0x87A704")]
		add
		{
		}
		[Token(Token = "0x600011E")]
		[Address(RVA = "0xB1D8AC", Offset = "0xB1D8AC", VA = "0xB1D8AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87A714", Offset = "0x87A714")]
		remove
		{
		}
	}

	[Token(Token = "0x6000119")]
	[Address(RVA = "0xB1D664", Offset = "0xB1D664", VA = "0xB1D664")]
	private TeleportDestination()
	{
	}

	[Token(Token = "0x600011A")]
	[Address(RVA = "0xB1D6EC", Offset = "0xB1D6EC", VA = "0xB1D6EC")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0xB1D7C4", Offset = "0xB1D7C4", VA = "0xB1D7C4")]
	private void TryDisableEventHandlers()
	{
	}

	[Token(Token = "0x600011C")]
	[Address(RVA = "0xB1D804", Offset = "0xB1D804", VA = "0xB1D804")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0xB1D950", Offset = "0xB1D950", VA = "0xB1D950")]
	public void OnDeactivated()
	{
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0xB1D9B8", Offset = "0xB1D9B8", VA = "0xB1D9B8")]
	public void Recycle()
	{
	}

	[Token(Token = "0x6000121")]
	[Address(RVA = "0xB1D9D8", Offset = "0xB1D9D8", VA = "0xB1D9D8", Slot = "4")]
	public virtual void UpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}
}
[Token(Token = "0x2000030")]
public abstract class TeleportInputHandler : TeleportSupport
{
	[Token(Token = "0x2000031")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86EA38", Offset = "0x86EA38")]
	private sealed class <TeleportReadyCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x1700002D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600012E")]
			[Address(RVA = "0xB1E09C", Offset = "0xB1E09C", VA = "0xB1E09C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000130")]
			[Address(RVA = "0xB1E104", Offset = "0xB1E104", VA = "0xB1E104", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600012B")]
		[Address(RVA = "0xB1DDE8", Offset = "0xB1DDE8", VA = "0xB1DDE8")]
		[DebuggerHidden]
		public <TeleportReadyCoroutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x600012C")]
		[Address(RVA = "0xB1E00C", Offset = "0xB1E00C", VA = "0xB1E00C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600012D")]
		[Address(RVA = "0xB1E010", Offset = "0xB1E010", VA = "0xB1E010", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600012F")]
		[Address(RVA = "0xB1E0A4", Offset = "0xB1E0A4", VA = "0xB1E0A4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000032")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86EA48", Offset = "0x86EA48")]
	private sealed class <TeleportAimCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x1700002F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000134")]
			[Address(RVA = "0xB1DF9C", Offset = "0xB1DF9C", VA = "0xB1DF9C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000030")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000136")]
			[Address(RVA = "0xB1E004", Offset = "0xB1E004", VA = "0xB1E004", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000131")]
		[Address(RVA = "0xB1DE84", Offset = "0xB1DE84", VA = "0xB1DE84")]
		[DebuggerHidden]
		public <TeleportAimCoroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000132")]
		[Address(RVA = "0xB1DF08", Offset = "0xB1DF08", VA = "0xB1DF08", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000133")]
		[Address(RVA = "0xB1DF0C", Offset = "0xB1DF0C", VA = "0xB1DF0C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000135")]
		[Address(RVA = "0xB1DFA4", Offset = "0xB1DFA4", VA = "0xB1DFA4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _startReadyAction;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x6000122")]
	[Address(RVA = "0xB1DBB8", Offset = "0xB1DBB8", VA = "0xB1DBB8")]
	protected TeleportInputHandler()
	{
	}

	[Token(Token = "0x6000123")]
	[Address(RVA = "0xB1DC64", Offset = "0xB1DC64", VA = "0xB1DC64", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000124")]
	[Address(RVA = "0xB1DCBC", Offset = "0xB1DCBC", VA = "0xB1DCBC", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0xB1DD78", Offset = "0xB1DD78", VA = "0xB1DD78")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x87A724", Offset = "0x87A724")]
	private IEnumerator TeleportReadyCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0xB1DE14", Offset = "0xB1DE14", VA = "0xB1DE14")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x87A788", Offset = "0x87A788")]
	private IEnumerator TeleportAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000127")]
	public abstract LocomotionTeleport.TeleportIntentions GetIntention();

	[Token(Token = "0x6000128")]
	public abstract void GetAimData(out Ray aimRay);

	[Token(Token = "0x6000129")]
	[Address(RVA = "0xB1DEB0", Offset = "0xB1DEB0", VA = "0xB1DEB0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87A7EC", Offset = "0x87A7EC")]
	private void <.ctor>b__2_0()
	{
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0xB1DEDC", Offset = "0xB1DEDC", VA = "0xB1DEDC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87A7FC", Offset = "0x87A7FC")]
	private void <.ctor>b__2_1()
	{
	}
}
[Token(Token = "0x2000033")]
public class TeleportInputHandlerHMD : TeleportInputHandler
{
	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8721B0", Offset = "0x8721B0")]
	private Transform <Pointer>k__BackingField;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8721C0", Offset = "0x8721C0")]
	public OVRInput.RawButton AimButton;

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8721F8", Offset = "0x8721F8")]
	public OVRInput.RawButton TeleportButton;

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x872230", Offset = "0x872230")]
	public bool FastTeleport;

	[Token(Token = "0x17000031")]
	public Transform Pointer
	{
		[Token(Token = "0x6000137")]
		[Address(RVA = "0xB1E10C", Offset = "0xB1E10C", VA = "0xB1E10C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87A8AC", Offset = "0x87A8AC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000138")]
		[Address(RVA = "0xB1E114", Offset = "0xB1E114", VA = "0xB1E114")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87A8BC", Offset = "0x87A8BC")]
		private set
		{
		}
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0xB1E11C", Offset = "0xB1E11C", VA = "0xB1E11C", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x600013A")]
	[Address(RVA = "0xB1E278", Offset = "0xB1E278", VA = "0xB1E278", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0xB1E330", Offset = "0xB1E330", VA = "0xB1E330")]
	public TeleportInputHandlerHMD()
	{
	}
}
[Token(Token = "0x2000034")]
public class TeleportInputHandlerTouch : TeleportInputHandlerHMD
{
	[Token(Token = "0x2000035")]
	public enum InputModes
	{
		[Token(Token = "0x400010D")]
		CapacitiveButtonForAimAndTeleport,
		[Token(Token = "0x400010E")]
		SeparateButtonsForAimAndTeleport,
		[Token(Token = "0x400010F")]
		ThumbstickTeleport,
		[Token(Token = "0x4000110")]
		ThumbstickTeleportForwardBackOnly
	}

	[Token(Token = "0x2000036")]
	public enum AimCapTouchButtons
	{
		[Token(Token = "0x4000112")]
		A,
		[Token(Token = "0x4000113")]
		B,
		[Token(Token = "0x4000114")]
		LeftTrigger,
		[Token(Token = "0x4000115")]
		LeftThumbstick,
		[Token(Token = "0x4000116")]
		RightTrigger,
		[Token(Token = "0x4000117")]
		RightThumbstick,
		[Token(Token = "0x4000118")]
		X,
		[Token(Token = "0x4000119")]
		Y
	}

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform LeftHand;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform RightHand;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x872268", Offset = "0x872268")]
	public InputModes InputMode;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly OVRInput.RawButton[] _rawButtons;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private readonly OVRInput.RawTouch[] _rawTouch;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8722A0", Offset = "0x8722A0")]
	public OVRInput.Controller AimingController;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private OVRInput.Controller InitiatingController;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8722D8", Offset = "0x8722D8")]
	public AimCapTouchButtons CapacitiveAimAndTeleportButton;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x872310", Offset = "0x872310")]
	public float ThumbstickTeleportThreshold;

	[Token(Token = "0x600013C")]
	[Address(RVA = "0xB1E334", Offset = "0xB1E334", VA = "0xB1E334", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0xB1E77C", Offset = "0xB1E77C", VA = "0xB1E77C", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0xB1E83C", Offset = "0xB1E83C", VA = "0xB1E83C")]
	public TeleportInputHandlerTouch()
	{
	}
}
[Token(Token = "0x2000037")]
public abstract class TeleportOrientationHandler : TeleportSupport
{
	[Token(Token = "0x2000038")]
	public enum OrientationModes
	{
		[Token(Token = "0x400011E")]
		HeadRelative,
		[Token(Token = "0x400011F")]
		ForwardFacing
	}

	[Token(Token = "0x2000039")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86EA58", Offset = "0x86EA58")]
	private sealed class <UpdateOrientationCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportOrientationHandler <>4__this;

		[Token(Token = "0x17000032")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600014B")]
			[Address(RVA = "0xB1ECCC", Offset = "0xB1ECCC", VA = "0xB1ECCC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000033")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600014D")]
			[Address(RVA = "0xB1ED34", Offset = "0xB1ED34", VA = "0xB1ED34", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000148")]
		[Address(RVA = "0xB1EAA8", Offset = "0xB1EAA8", VA = "0xB1EAA8")]
		[DebuggerHidden]
		public <UpdateOrientationCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000149")]
		[Address(RVA = "0xB1EC24", Offset = "0xB1EC24", VA = "0xB1EC24", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600014A")]
		[Address(RVA = "0xB1EC28", Offset = "0xB1EC28", VA = "0xB1EC28", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600014C")]
		[Address(RVA = "0xB1ECD4", Offset = "0xB1ECD4", VA = "0xB1ECD4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _updateOrientationAction;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected LocomotionTeleport.AimData AimData;

	[Token(Token = "0x600013F")]
	[Address(RVA = "0xB1E8E8", Offset = "0xB1E8E8", VA = "0xB1E8E8")]
	protected TeleportOrientationHandler()
	{
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0xB1E99C", Offset = "0xB1E99C", VA = "0xB1E99C")]
	private void UpdateAimData(LocomotionTeleport.AimData aimData)
	{
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0xB1E9A4", Offset = "0xB1E9A4", VA = "0xB1E9A4", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000142")]
	[Address(RVA = "0xB1E9F0", Offset = "0xB1E9F0", VA = "0xB1E9F0", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0xB1EA38", Offset = "0xB1EA38", VA = "0xB1EA38")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x87A8CC", Offset = "0x87A8CC")]
	private IEnumerator UpdateOrientationCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000144")]
	protected abstract void InitializeTeleportDestination();

	[Token(Token = "0x6000145")]
	protected abstract void UpdateTeleportDestination();

	[Token(Token = "0x6000146")]
	[Address(RVA = "0xB1EAD4", Offset = "0xB1EAD4", VA = "0xB1EAD4")]
	protected Quaternion GetLandingOrientation(OrientationModes mode, Quaternion rotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0xB1EBF8", Offset = "0xB1EBF8", VA = "0xB1EBF8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87A930", Offset = "0x87A930")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x200003A")]
public class TeleportOrientationHandler360 : TeleportOrientationHandler
{
	[Token(Token = "0x600014E")]
	[Address(RVA = "0xB1ED3C", Offset = "0xB1ED3C", VA = "0xB1ED3C", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x600014F")]
	[Address(RVA = "0xB1ED40", Offset = "0xB1ED40", VA = "0xB1ED40", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6000150")]
	[Address(RVA = "0xB1EDBC", Offset = "0xB1EDBC", VA = "0xB1EDBC")]
	public TeleportOrientationHandler360()
	{
	}
}
[Token(Token = "0x200003B")]
public class TeleportOrientationHandlerHMD : TeleportOrientationHandler
{
	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x872348", Offset = "0x872348")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x872380", Offset = "0x872380")]
	public bool UpdateOrientationDuringAim;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8723B8", Offset = "0x8723B8")]
	public float AimDistanceThreshold;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8723F0", Offset = "0x8723F0")]
	public float AimDistanceMaxRange;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion _initialRotation;

	[Token(Token = "0x6000151")]
	[Address(RVA = "0xB1EDC0", Offset = "0xB1EDC0", VA = "0xB1EDC0", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6000152")]
	[Address(RVA = "0xB1EE30", Offset = "0xB1EE30", VA = "0xB1EE30", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6000153")]
	[Address(RVA = "0xB1F2A8", Offset = "0xB1F2A8", VA = "0xB1F2A8")]
	public TeleportOrientationHandlerHMD()
	{
	}
}
[Token(Token = "0x200003C")]
public class TeleportOrientationHandlerThumbstick : TeleportOrientationHandler
{
	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x872428", Offset = "0x872428")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x872460", Offset = "0x872460")]
	public OVRInput.Controller Thumbstick;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x872498", Offset = "0x872498")]
	public float RotateStickThreshold;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Quaternion _initialRotation;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion _currentRotation;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector2 _lastValidDirection;

	[Token(Token = "0x6000154")]
	[Address(RVA = "0xB1F2AC", Offset = "0xB1F2AC", VA = "0xB1F2AC", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0xB1F2F0", Offset = "0xB1F2F0", VA = "0xB1F2F0", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0xB1F760", Offset = "0xB1F760", VA = "0xB1F760")]
	public TeleportOrientationHandlerThumbstick()
	{
	}
}
[Token(Token = "0x200003D")]
public class TeleportPoint : MonoBehaviour
{
	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float dimmingSpeed;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fullIntensity;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lowIntensity;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform destTransform;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lastLookAtTime;

	[Token(Token = "0x6000157")]
	[Address(RVA = "0xB1F770", Offset = "0xB1F770", VA = "0xB1F770")]
	public Transform GetDestTransform()
	{
		return null;
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0xB1F778", Offset = "0xB1F778", VA = "0xB1F778")]
	private void Update()
	{
	}

	[Token(Token = "0x6000159")]
	[Address(RVA = "0xB1F860", Offset = "0xB1F860", VA = "0xB1F860")]
	public void OnLookAt()
	{
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0xB1F888", Offset = "0xB1F888", VA = "0xB1F888")]
	public TeleportPoint()
	{
	}
}
[Token(Token = "0x200003E")]
public abstract class TeleportSupport : MonoBehaviour
{
	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8724D0", Offset = "0x8724D0")]
	private LocomotionTeleport <LocomotionTeleport>k__BackingField;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _eventsActive;

	[Token(Token = "0x17000034")]
	protected LocomotionTeleport LocomotionTeleport
	{
		[Token(Token = "0x600015B")]
		[Address(RVA = "0xB1F8A0", Offset = "0xB1F8A0", VA = "0xB1F8A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87A990", Offset = "0x87A990")]
		get
		{
			return null;
		}
		[Token(Token = "0x600015C")]
		[Address(RVA = "0xB1F8A8", Offset = "0xB1F8A8", VA = "0xB1F8A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87A9A0", Offset = "0x87A9A0")]
		private set
		{
		}
	}

	[Token(Token = "0x600015D")]
	[Address(RVA = "0xB1CD6C", Offset = "0xB1CD6C", VA = "0xB1CD6C", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x600015E")]
	[Address(RVA = "0xB1CE74", Offset = "0xB1CE74", VA = "0xB1CE74", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x600015F")]
	[Address(RVA = "0xB1F8B0", Offset = "0xB1F8B0", VA = "0xB1F8B0")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x87A9B0", Offset = "0x87A9B0")]
	private void LogEventHandler(string msg)
	{
	}

	[Token(Token = "0x6000160")]
	[Address(RVA = "0xB1D4C0", Offset = "0xB1D4C0", VA = "0xB1D4C0", Slot = "6")]
	protected virtual void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000161")]
	[Address(RVA = "0xB1D52C", Offset = "0xB1D52C", VA = "0xB1D52C", Slot = "7")]
	protected virtual void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000162")]
	[Address(RVA = "0xB1CEA8", Offset = "0xB1CEA8", VA = "0xB1CEA8")]
	protected TeleportSupport()
	{
	}
}
[Token(Token = "0x200003F")]
public abstract class TeleportTargetHandler : TeleportSupport
{
	[Token(Token = "0x2000040")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86EA68", Offset = "0x86EA68")]
	private sealed class <TargetAimCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400013A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400013B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400013C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTargetHandler <>4__this;

		[Token(Token = "0x17000035")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600016E")]
			[Address(RVA = "0xB1FF04", Offset = "0xB1FF04", VA = "0xB1FF04", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000036")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000170")]
			[Address(RVA = "0xB1FF6C", Offset = "0xB1FF6C", VA = "0xB1FF6C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600016B")]
		[Address(RVA = "0xB1FB00", Offset = "0xB1FB00", VA = "0xB1FB00")]
		[DebuggerHidden]
		public <TargetAimCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x600016C")]
		[Address(RVA = "0xB1FC98", Offset = "0xB1FC98", VA = "0xB1FC98", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600016D")]
		[Address(RVA = "0xB1FC9C", Offset = "0xB1FC9C", VA = "0xB1FC9C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600016F")]
		[Address(RVA = "0xB1FF0C", Offset = "0xB1FF0C", VA = "0xB1FF0C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8724E0", Offset = "0x8724E0")]
	public LayerMask AimCollisionLayerMask;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected readonly LocomotionTeleport.AimData AimData;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly List<Vector3> _aimPoints;

	[Token(Token = "0x4000139")]
	private const float ERROR_MARGIN = 0.1f;

	[Token(Token = "0x6000163")]
	[Address(RVA = "0xB1F978", Offset = "0xB1F978", VA = "0xB1F978")]
	protected TeleportTargetHandler()
	{
	}

	[Token(Token = "0x6000164")]
	[Address(RVA = "0xB1FA3C", Offset = "0xB1FA3C", VA = "0xB1FA3C", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000165")]
	[Address(RVA = "0xB1FA68", Offset = "0xB1FA68", VA = "0xB1FA68", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0xB1FA90", Offset = "0xB1FA90", VA = "0xB1FA90")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x87A9E8", Offset = "0x87A9E8")]
	private IEnumerator TargetAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000167")]
	[Address(RVA = "0xB1FB2C", Offset = "0xB1FB2C", VA = "0xB1FB2C", Slot = "8")]
	protected virtual void ResetAimData()
	{
	}

	[Token(Token = "0x6000168")]
	protected abstract bool ConsiderTeleport(Vector3 start, ref Vector3 end);

	[Token(Token = "0x6000169")]
	[Address(RVA = "0xB1FB48", Offset = "0xB1FB48", VA = "0xB1FB48", Slot = "10")]
	public virtual Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x600016A")]
	[Address(RVA = "0xB1FC6C", Offset = "0xB1FC6C", VA = "0xB1FC6C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87AA4C", Offset = "0x87AA4C")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x2000041")]
public class TeleportTargetHandlerNavMesh : TeleportTargetHandler
{
	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int NavMeshAreaMask;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NavMeshPath _path;

	[Token(Token = "0x6000171")]
	[Address(RVA = "0xB1FF74", Offset = "0xB1FF74", VA = "0xB1FF74")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000172")]
	[Address(RVA = "0xB1FFD4", Offset = "0xB1FFD4", VA = "0xB1FFD4", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0xB20158", Offset = "0xB20158", VA = "0xB20158", Slot = "10")]
	public override Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x6000174")]
	[Address(RVA = "0xB20248", Offset = "0xB20248", VA = "0xB20248")]
	public TeleportTargetHandlerNavMesh()
	{
	}
}
[Token(Token = "0x2000042")]
public class TeleportTargetHandlerNode : TeleportTargetHandler
{
	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x872518", Offset = "0x872518")]
	public float LOSOffset;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x872550", Offset = "0x872550")]
	public LayerMask TeleportLayerMask;

	[Token(Token = "0x6000175")]
	[Address(RVA = "0xB20254", Offset = "0xB20254", VA = "0xB20254", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000176")]
	[Address(RVA = "0xB20484", Offset = "0xB20484", VA = "0xB20484")]
	public TeleportTargetHandlerNode()
	{
	}
}
[Token(Token = "0x2000043")]
public class TeleportTargetHandlerPhysical : TeleportTargetHandler
{
	[Token(Token = "0x6000177")]
	[Address(RVA = "0xB20490", Offset = "0xB20490", VA = "0xB20490", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000178")]
	[Address(RVA = "0xB20614", Offset = "0xB20614", VA = "0xB20614")]
	public TeleportTargetHandlerPhysical()
	{
	}
}
[Token(Token = "0x2000044")]
public abstract class TeleportTransition : TeleportSupport
{
	[Token(Token = "0x6000179")]
	[Address(RVA = "0xB20618", Offset = "0xB20618", VA = "0xB20618", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x600017A")]
	[Address(RVA = "0xB206B0", Offset = "0xB206B0", VA = "0xB206B0", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600017B")]
	protected abstract void LocomotionTeleportOnEnterStateTeleporting();

	[Token(Token = "0x600017C")]
	[Address(RVA = "0xB20744", Offset = "0xB20744", VA = "0xB20744")]
	protected TeleportTransition()
	{
	}
}
[Token(Token = "0x2000045")]
public class TeleportTransitionBlink : TeleportTransition
{
	[Token(Token = "0x2000046")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86EA78", Offset = "0x86EA78")]
	private sealed class <BlinkCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionBlink <>4__this;

		[Token(Token = "0x4000147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x4000148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <teleportTime>5__3;

		[Token(Token = "0x4000149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <teleported>5__4;

		[Token(Token = "0x17000037")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000183")]
			[Address(RVA = "0xB20AAC", Offset = "0xB20AAC", VA = "0xB20AAC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000038")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000185")]
			[Address(RVA = "0xB20B14", Offset = "0xB20B14", VA = "0xB20B14", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000180")]
		[Address(RVA = "0xB207E8", Offset = "0xB207E8", VA = "0xB207E8")]
		[DebuggerHidden]
		public <BlinkCoroutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000181")]
		[Address(RVA = "0xB209AC", Offset = "0xB209AC", VA = "0xB209AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000182")]
		[Address(RVA = "0xB209B0", Offset = "0xB209B0", VA = "0xB209B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000184")]
		[Address(RVA = "0xB20AB4", Offset = "0xB20AB4", VA = "0xB20AB4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x872588", Offset = "0x872588")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x872588", Offset = "0x872588")]
	public float TransitionDuration;

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8725E0", Offset = "0x8725E0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8725E0", Offset = "0x8725E0")]
	public float TeleportDelay;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x872634", Offset = "0x872634")]
	public AnimationCurve FadeLevels;

	[Token(Token = "0x600017D")]
	[Address(RVA = "0xB2074C", Offset = "0xB2074C", VA = "0xB2074C", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x600017E")]
	[Address(RVA = "0xB20778", Offset = "0xB20778", VA = "0xB20778")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x87AAAC", Offset = "0x87AAAC")]
	protected IEnumerator BlinkCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600017F")]
	[Address(RVA = "0xB20814", Offset = "0xB20814", VA = "0xB20814")]
	public TeleportTransitionBlink()
	{
	}
}
[Token(Token = "0x2000047")]
public class TeleportTransitionInstant : TeleportTransition
{
	[Token(Token = "0x6000186")]
	[Address(RVA = "0xB20B1C", Offset = "0xB20B1C", VA = "0xB20B1C", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000187")]
	[Address(RVA = "0xB20B38", Offset = "0xB20B38", VA = "0xB20B38")]
	public TeleportTransitionInstant()
	{
	}
}
[Token(Token = "0x2000048")]
public class TeleportTransitionWarp : TeleportTransition
{
	[Token(Token = "0x2000049")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86EA88", Offset = "0x86EA88")]
	private sealed class <DoWarp>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400014C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400014D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400014E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionWarp <>4__this;

		[Token(Token = "0x400014F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <startPosition>5__2;

		[Token(Token = "0x4000150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <elapsedTime>5__3;

		[Token(Token = "0x17000039")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600018E")]
			[Address(RVA = "0xB20D84", Offset = "0xB20D84", VA = "0xB20D84", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000190")]
			[Address(RVA = "0xB20DEC", Offset = "0xB20DEC", VA = "0xB20DEC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600018B")]
		[Address(RVA = "0xB20BDC", Offset = "0xB20BDC", VA = "0xB20BDC")]
		[DebuggerHidden]
		public <DoWarp>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x600018C")]
		[Address(RVA = "0xB20C50", Offset = "0xB20C50", VA = "0xB20C50", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600018D")]
		[Address(RVA = "0xB20C54", Offset = "0xB20C54", VA = "0xB20C54", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600018F")]
		[Address(RVA = "0xB20D8C", Offset = "0xB20D8C", VA = "0xB20D8C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87266C", Offset = "0x87266C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x87266C", Offset = "0x87266C")]
	public float TransitionDuration;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public AnimationCurve PositionLerp;

	[Token(Token = "0x6000188")]
	[Address(RVA = "0xB20B40", Offset = "0xB20B40", VA = "0xB20B40", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000189")]
	[Address(RVA = "0xB20B6C", Offset = "0xB20B6C", VA = "0xB20B6C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x87AB60", Offset = "0x87AB60")]
	private IEnumerator DoWarp()
	{
		return null;
	}

	[Token(Token = "0x600018A")]
	[Address(RVA = "0xB20C08", Offset = "0xB20C08", VA = "0xB20C08")]
	public TeleportTransitionWarp()
	{
	}
}
[Token(Token = "0x200004A")]
public static class NativeVideoPlayer
{
	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IntPtr? _Activity;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static IntPtr? _VideoPlayerClass;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly jvalue[] EmptyParams;

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static IntPtr getIsPlayingMethodId;

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static IntPtr getDurationMethodId;

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static IntPtr getPlaybackPositionMethodId;

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static IntPtr setPlaybackPositionMethodId;

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static jvalue[] setPlaybackPositionParams;

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static IntPtr playVideoMethodId;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static jvalue[] playVideoParams;

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static IntPtr stopMethodId;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static IntPtr resumeMethodId;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static IntPtr pauseMethodId;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static IntPtr setPlaybackSpeedMethodId;

	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static jvalue[] setPlaybackSpeedParams;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private static IntPtr setLoopingMethodId;

	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static jvalue[] setLoopingParams;

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private static IntPtr setListenerRotationQuaternionMethodId;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static jvalue[] setListenerRotationQuaternionParams;

	[Token(Token = "0x1700003B")]
	private static IntPtr VideoPlayerClass
	{
		[Token(Token = "0x6000191")]
		[Address(RVA = "0xF6E018", Offset = "0xF6E018", VA = "0xF6E018")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x1700003C")]
	private static IntPtr Activity
	{
		[Token(Token = "0x6000192")]
		[Address(RVA = "0xF6E2D4", Offset = "0xF6E2D4", VA = "0xF6E2D4")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x1700003D")]
	public static bool IsAvailable
	{
		[Token(Token = "0x6000193")]
		[Address(RVA = "0xF6B4C0", Offset = "0xF6B4C0", VA = "0xF6B4C0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700003E")]
	public static bool IsPlaying
	{
		[Token(Token = "0x6000194")]
		[Address(RVA = "0xF6C728", Offset = "0xF6C728", VA = "0xF6C728")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700003F")]
	public static long Duration
	{
		[Token(Token = "0x6000195")]
		[Address(RVA = "0xF6C90C", Offset = "0xF6C90C", VA = "0xF6C90C")]
		get
		{
			return default(long);
		}
	}

	[Token(Token = "0x17000040")]
	public static long PlaybackPosition
	{
		[Token(Token = "0x6000196")]
		[Address(RVA = "0xF6C818", Offset = "0xF6C818", VA = "0xF6C818")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000197")]
		[Address(RVA = "0xF6BEEC", Offset = "0xF6BEEC", VA = "0xF6BEEC")]
		set
		{
		}
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0xF6CF6C", Offset = "0xF6CF6C", VA = "0xF6CF6C")]
	public static void PlayVideo(string path, string drmLicenseUrl, IntPtr surfaceObj)
	{
	}

	[Token(Token = "0x6000199")]
	[Address(RVA = "0xF6CCB0", Offset = "0xF6CCB0", VA = "0xF6CCB0")]
	public static void Stop()
	{
	}

	[Token(Token = "0x600019A")]
	[Address(RVA = "0xF6BB7C", Offset = "0xF6BB7C", VA = "0xF6BB7C")]
	public static void Play()
	{
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0xF6BD00", Offset = "0xF6BD00", VA = "0xF6BD00")]
	public static void Pause()
	{
	}

	[Token(Token = "0x600019C")]
	[Address(RVA = "0xF6CAD8", Offset = "0xF6CAD8", VA = "0xF6CAD8")]
	public static void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x600019D")]
	[Address(RVA = "0xF6D160", Offset = "0xF6D160", VA = "0xF6D160")]
	public static void SetLooping(bool looping)
	{
	}

	[Token(Token = "0x600019E")]
	[Address(RVA = "0xF6C56C", Offset = "0xF6C56C", VA = "0xF6C56C")]
	public static void SetListenerRotation(Quaternion rotation)
	{
	}
}
[Token(Token = "0x200004B")]
public class ButtonDownListener : MonoBehaviour, IPointerDownHandler, IEventSystemHandler
{
	[Token(Token = "0x14000010")]
	public event Action onButtonDown
	{
		[Token(Token = "0x60001A0")]
		[Address(RVA = "0xCBDBE8", Offset = "0xCBDBE8", VA = "0xCBDBE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87AC14", Offset = "0x87AC14")]
		add
		{
		}
		[Token(Token = "0x60001A1")]
		[Address(RVA = "0xCBDC8C", Offset = "0xCBDC8C", VA = "0xCBDC8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87AC24", Offset = "0x87AC24")]
		remove
		{
		}
	}

	[Token(Token = "0x60001A2")]
	[Address(RVA = "0xCBDD30", Offset = "0xCBDD30", VA = "0xCBDD30", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60001A3")]
	[Address(RVA = "0xCBDD44", Offset = "0xCBDD44", VA = "0xCBDD44")]
	public ButtonDownListener()
	{
	}
}
[Token(Token = "0x200004C")]
public class MediaPlayerImage : Image
{
	[Token(Token = "0x200004D")]
	public enum ButtonType
	{
		[Token(Token = "0x4000167")]
		Play,
		[Token(Token = "0x4000168")]
		Pause,
		[Token(Token = "0x4000169")]
		FastForward,
		[Token(Token = "0x400016A")]
		Rewind,
		[Token(Token = "0x400016B")]
		SkipForward,
		[Token(Token = "0x400016C")]
		SkipBack,
		[Token(Token = "0x400016D")]
		Stop
	}

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private ButtonType m_ButtonType;

	[Token(Token = "0x17000041")]
	public ButtonType buttonType
	{
		[Token(Token = "0x60001A4")]
		[Address(RVA = "0xF685F8", Offset = "0xF685F8", VA = "0xF685F8")]
		get
		{
			return default(ButtonType);
		}
		[Token(Token = "0x60001A5")]
		[Address(RVA = "0xF68600", Offset = "0xF68600", VA = "0xF68600")]
		set
		{
		}
	}

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0xF68624", Offset = "0xF68624", VA = "0xF68624", Slot = "43")]
	protected override void OnPopulateMesh(VertexHelper toFill)
	{
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0xF69AF0", Offset = "0xF69AF0", VA = "0xF69AF0")]
	public MediaPlayerImage()
	{
	}
}
[Token(Token = "0x200004E")]
public class MoviePlayerSample : MonoBehaviour
{
	[Token(Token = "0x200004F")]
	public enum VideoShape
	{
		[Token(Token = "0x4000181")]
		_360,
		[Token(Token = "0x4000182")]
		_180,
		[Token(Token = "0x4000183")]
		Quad
	}

	[Token(Token = "0x2000050")]
	public enum VideoStereo
	{
		[Token(Token = "0x4000185")]
		Mono,
		[Token(Token = "0x4000186")]
		TopBottom,
		[Token(Token = "0x4000187")]
		LeftRight,
		[Token(Token = "0x4000188")]
		BottomTop
	}

	[Token(Token = "0x2000051")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86EA98", Offset = "0x86EA98")]
	private sealed class <Start>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400018A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400018B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x17000045")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001BE")]
			[Address(RVA = "0xF6D428", Offset = "0xF6D428", VA = "0xF6D428", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000046")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001C0")]
			[Address(RVA = "0xF6D490", Offset = "0xF6D490", VA = "0xF6D490", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001BB")]
		[Address(RVA = "0xF6B878", Offset = "0xF6B878", VA = "0xF6B878")]
		[DebuggerHidden]
		public <Start>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x60001BC")]
		[Address(RVA = "0xF6D2A4", Offset = "0xF6D2A4", VA = "0xF6D2A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001BD")]
		[Address(RVA = "0xF6D2A8", Offset = "0xF6D2A8", VA = "0xF6D2A8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001BF")]
		[Address(RVA = "0xF6D430", Offset = "0xF6D430", VA = "0xF6D430", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000052")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86EAA8", Offset = "0x86EAA8")]
	private sealed class <>c__DisplayClass33_0
	{
		[Token(Token = "0x400018C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string moviePath;

		[Token(Token = "0x400018D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string drmLicencesUrl;

		[Token(Token = "0x400018E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x60001C1")]
		[Address(RVA = "0xF6BAE0", Offset = "0xF6BAE0", VA = "0xF6BAE0")]
		public <>c__DisplayClass33_0()
		{
		}

		[Token(Token = "0x60001C2")]
		[Address(RVA = "0xF6CE98", Offset = "0xF6CE98", VA = "0xF6CE98")]
		internal void <Play>b__0()
		{
		}
	}

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool videoPausedBeforeAppPause;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VideoPlayer videoPlayer;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVROverlay overlay;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer mediaRenderer;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8726F4", Offset = "0x8726F4")]
	private bool <IsPlaying>k__BackingField;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x872704", Offset = "0x872704")]
	private long <Duration>k__BackingField;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x872714", Offset = "0x872714")]
	private long <PlaybackPosition>k__BackingField;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RenderTexture copyTexture;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material externalTex2DMaterial;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string MovieName;

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string DrmLicenseUrl;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool LoopVideo;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public VideoShape Shape;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public VideoStereo Stereo;

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool DisplayMono;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private VideoShape _LastShape;

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private VideoStereo _LastStereo;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool _LastDisplayMono;

	[Token(Token = "0x17000042")]
	public bool IsPlaying
	{
		[Token(Token = "0x60001A8")]
		[Address(RVA = "0xF6B274", Offset = "0xF6B274", VA = "0xF6B274")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87AC34", Offset = "0x87AC34")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001A9")]
		[Address(RVA = "0xF6B27C", Offset = "0xF6B27C", VA = "0xF6B27C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87AC44", Offset = "0x87AC44")]
		private set
		{
		}
	}

	[Token(Token = "0x17000043")]
	public long Duration
	{
		[Token(Token = "0x60001AA")]
		[Address(RVA = "0xF6B288", Offset = "0xF6B288", VA = "0xF6B288")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87AC54", Offset = "0x87AC54")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x60001AB")]
		[Address(RVA = "0xF6B290", Offset = "0xF6B290", VA = "0xF6B290")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87AC64", Offset = "0x87AC64")]
		private set
		{
		}
	}

	[Token(Token = "0x17000044")]
	public long PlaybackPosition
	{
		[Token(Token = "0x60001AC")]
		[Address(RVA = "0xF6B298", Offset = "0xF6B298", VA = "0xF6B298")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87AC74", Offset = "0x87AC74")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x60001AD")]
		[Address(RVA = "0xF6B2A0", Offset = "0xF6B2A0", VA = "0xF6B2A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87AC84", Offset = "0x87AC84")]
		private set
		{
		}
	}

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0xF6B2A8", Offset = "0xF6B2A8", VA = "0xF6B2A8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0xF6B528", Offset = "0xF6B528", VA = "0xF6B528")]
	private bool IsLocalVideo(string movieName)
	{
		return default(bool);
	}

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0xF6B590", Offset = "0xF6B590", VA = "0xF6B590")]
	private void UpdateShapeAndStereo()
	{
	}

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0xF6B808", Offset = "0xF6B808", VA = "0xF6B808")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x87AC94", Offset = "0x87AC94")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0xF6B8A4", Offset = "0xF6B8A4", VA = "0xF6B8A4")]
	public void Play(string moviePath, string drmLicencesUrl)
	{
	}

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0xF6BAE8", Offset = "0xF6BAE8", VA = "0xF6BAE8")]
	public void Play()
	{
	}

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0xF6BC70", Offset = "0xF6BC70", VA = "0xF6BC70")]
	public void Pause()
	{
	}

	[Token(Token = "0x60001B5")]
	[Address(RVA = "0xF6BDF4", Offset = "0xF6BDF4", VA = "0xF6BDF4")]
	public void SeekTo(long position)
	{
	}

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0xF6C02C", Offset = "0xF6C02C", VA = "0xF6C02C")]
	private void Update()
	{
	}

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0xF6CA00", Offset = "0xF6CA00", VA = "0xF6CA00")]
	public void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0xF6CC20", Offset = "0xF6CC20", VA = "0xF6CC20")]
	public void Stop()
	{
	}

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0xF6CDA4", Offset = "0xF6CDA4", VA = "0xF6CDA4")]
	private void OnApplicationPause(bool appWasPaused)
	{
	}

	[Token(Token = "0x60001BA")]
	[Address(RVA = "0xF6CE88", Offset = "0xF6CE88", VA = "0xF6CE88")]
	public MoviePlayerSample()
	{
	}
}
[Token(Token = "0x2000053")]
public class MoviePlayerSampleControls : MonoBehaviour
{
	[Token(Token = "0x2000054")]
	private enum PlaybackState
	{
		[Token(Token = "0x40001A5")]
		Playing,
		[Token(Token = "0x40001A6")]
		Paused,
		[Token(Token = "0x40001A7")]
		Rewinding,
		[Token(Token = "0x40001A8")]
		FastForwarding
	}

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MoviePlayerSample Player;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRInputModule InputModule;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRGazePointer GazePointer;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject LeftHand;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject RightHand;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Canvas Canvas;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ButtonDownListener PlayPause;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MediaPlayerImage PlayPauseImage;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Slider ProgressBar;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ButtonDownListener FastForward;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MediaPlayerImage FastForwardImage;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ButtonDownListener Rewind;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public MediaPlayerImage RewindImage;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float TimeoutTime;

	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool _isVisible;

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float _lastButtonTime;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool _didSeek;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private long _seekPreviousPosition;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private long _rewindStartPosition;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float _rewindStartTime;

	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private PlaybackState _state;

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0xF6D498", Offset = "0xF6D498", VA = "0xF6D498")]
	private void Start()
	{
	}

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0xF6D794", Offset = "0xF6D794", VA = "0xF6D794")]
	private void OnPlayPauseClicked()
	{
	}

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0xF6D970", Offset = "0xF6D970", VA = "0xF6D970")]
	private void OnFastForwardClicked()
	{
	}

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0xF6DAA4", Offset = "0xF6DAA4", VA = "0xF6DAA4")]
	private void OnRewindClicked()
	{
	}

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0xF6DBAC", Offset = "0xF6DBAC", VA = "0xF6DBAC")]
	private void OnSeekBarMoved(float value)
	{
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0xF6DA78", Offset = "0xF6DA78", VA = "0xF6DA78")]
	private void Seek(long pos)
	{
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0xF6DC74", Offset = "0xF6DC74", VA = "0xF6DC74")]
	private void Update()
	{
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0xF6D688", Offset = "0xF6D688", VA = "0xF6D688")]
	private void SetVisible(bool visible)
	{
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0xF6E008", Offset = "0xF6E008", VA = "0xF6E008")]
	public MoviePlayerSampleControls()
	{
	}
}
[Token(Token = "0x2000055")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x86EAB8", Offset = "0x86EAB8")]
[ExecuteInEditMode]
public class OVROverlayMeshGenerator : MonoBehaviour
{
	[Token(Token = "0x2000056")]
	private enum CubeFace
	{
		[Token(Token = "0x40001BD")]
		Right,
		[Token(Token = "0x40001BE")]
		Left,
		[Token(Token = "0x40001BF")]
		Top,
		[Token(Token = "0x40001C0")]
		Bottom,
		[Token(Token = "0x40001C1")]
		Front,
		[Token(Token = "0x40001C2")]
		Back,
		[Token(Token = "0x40001C3")]
		COUNT
	}

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Mesh _Mesh;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Vector3> _Verts;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Vector2> _UV;

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<int> _Tris;

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OVROverlay _Overlay;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MeshFilter _MeshFilter;

	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private MeshCollider _MeshCollider;

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform _CameraRoot;

	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform _Transform;

	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private OVROverlay.OverlayShape _LastShape;

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 _LastPosition;

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Quaternion _LastRotation;

	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 _LastScale;

	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Rect _LastRectLeft;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Rect _LastRectRight;

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private bool _Awake;

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3[] BottomLeft;

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly Vector3[] RightVector;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly Vector3[] UpVector;

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0xC66B18", Offset = "0xC66B18", VA = "0xC66B18")]
	protected void Awake()
	{
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0xC66C78", Offset = "0xC66C78", VA = "0xC66C78")]
	private Rect GetBoundingRect(Rect a, Rect b)
	{
		return default(Rect);
	}

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0xC66E34", Offset = "0xC66E34", VA = "0xC66E34")]
	private void Update()
	{
	}

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0xC6730C", Offset = "0xC6730C", VA = "0xC6730C")]
	private void UpdateMesh(OVROverlay.OverlayShape shape, Vector3 position, Quaternion rotation, Vector3 scale, Rect rect)
	{
	}

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0xC675E0", Offset = "0xC675E0", VA = "0xC675E0")]
	public static void GenerateMesh(List<Vector3> verts, List<Vector2> uvs, List<int> tris, OVROverlay.OverlayShape shape, Vector3 position, Quaternion rotation, Vector3 scale, Rect rect)
	{
	}

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0xC6883C", Offset = "0xC6883C", VA = "0xC6883C")]
	private static Vector2 GetSphereUV(float theta, float phi, float expand_coef)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0xC6889C", Offset = "0xC6889C", VA = "0xC6889C")]
	private static Vector3 GetSphereVert(float theta, float phi)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0xC67960", Offset = "0xC67960", VA = "0xC67960")]
	public static void BuildSphere(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Vector3 position, Quaternion rotation, Vector3 scale, Rect rect, float worldScale = 800f, int latitudes = 128, int longitudes = 128, float expand_coef = 1f)
	{
	}

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0xC68984", Offset = "0xC68984", VA = "0xC68984")]
	private static Vector2 GetCubeUV(CubeFace face, Vector2 sideUV, float expand_coef)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0xC68B70", Offset = "0xC68B70", VA = "0xC68B70")]
	private static Vector3 GetCubeVert(CubeFace face, Vector2 sideUV, float expand_coef)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0xC67E18", Offset = "0xC67E18", VA = "0xC67E18")]
	public static void BuildCube(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Vector3 position, Quaternion rotation, Vector3 scale, float worldScale = 800f, int subQuads = 1, float expand_coef = 1.01f)
	{
	}

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0xC68140", Offset = "0xC68140", VA = "0xC68140")]
	public static void BuildQuad(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Rect rect)
	{
	}

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0xC68498", Offset = "0xC68498", VA = "0xC68498")]
	public static void BuildHemicylinder(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Vector3 scale, Rect rect, int longitudes = 128)
	{
	}

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0xC68D24", Offset = "0xC68D24", VA = "0xC68D24")]
	public OVROverlayMeshGenerator()
	{
	}
}
[Token(Token = "0x2000057")]
public static class VectorUtil
{
	[Token(Token = "0x60001DB")]
	[Address(RVA = "0x155DF20", Offset = "0x155DF20", VA = "0x155DF20")]
	public static Vector4 ToVector(this Rect rect)
	{
		return default(Vector4);
	}
}
[Token(Token = "0x2000058")]
public class DebugUISample : MonoBehaviour
{
	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool inMenu;

	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text sliderText;

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0xAEC390", Offset = "0xAEC390", VA = "0xAEC390")]
	private void Start()
	{
	}

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0xAEC760", Offset = "0xAEC760", VA = "0xAEC760")]
	public void TogglePressed(Toggle t)
	{
	}

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0xAEC818", Offset = "0xAEC818", VA = "0xAEC818")]
	public void RadioPressed(string radioLabel, string group, Toggle t)
	{
	}

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0xAECA18", Offset = "0xAECA18", VA = "0xAECA18")]
	public void SliderPressed(float f)
	{
	}

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0xAECB00", Offset = "0xAECB00", VA = "0xAECB00")]
	private void Update()
	{
	}

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0xAECBDC", Offset = "0xAECBDC", VA = "0xAECBDC")]
	private void LogButtonPressed()
	{
	}

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0xAECC48", Offset = "0xAECC48", VA = "0xAECC48")]
	public DebugUISample()
	{
	}

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0xAECC50", Offset = "0xAECC50", VA = "0xAECC50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87AD58", Offset = "0x87AD58")]
	private void <Start>b__2_0(Toggle t)
	{
	}

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0xAECCAC", Offset = "0xAECCAC", VA = "0xAECCAC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87AD68", Offset = "0x87AD68")]
	private void <Start>b__2_1(Toggle t)
	{
	}

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0xAECD08", Offset = "0xAECD08", VA = "0xAECD08")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87AD78", Offset = "0x87AD78")]
	private void <Start>b__2_2(Toggle t)
	{
	}

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0xAECD64", Offset = "0xAECD64", VA = "0xAECD64")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87AD88", Offset = "0x87AD88")]
	private void <Start>b__2_3(Toggle t)
	{
	}
}
[Token(Token = "0x2000059")]
public class HandsActiveChecker : MonoBehaviour
{
	[Token(Token = "0x200005A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86EB3C", Offset = "0x86EB3C")]
	private sealed class <GetCenterEye>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandsActiveChecker <>4__this;

		[Token(Token = "0x17000047")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001EE")]
			[Address(RVA = "0xB46FFC", Offset = "0xB46FFC", VA = "0xB46FFC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000048")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001F0")]
			[Address(RVA = "0xB47064", Offset = "0xB47064", VA = "0xB47064", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001EB")]
		[Address(RVA = "0xB46EAC", Offset = "0xB46EAC", VA = "0xB46EAC")]
		[DebuggerHidden]
		public <GetCenterEye>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60001EC")]
		[Address(RVA = "0xB46EE0", Offset = "0xB46EE0", VA = "0xB46EE0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001ED")]
		[Address(RVA = "0xB46EE4", Offset = "0xB46EE4", VA = "0xB46EE4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001EF")]
		[Address(RVA = "0xB47004", Offset = "0xB47004", VA = "0xB47004", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _notificationPrefab;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject _notification;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRCameraRig _cameraRig;

	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _centerEye;

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0xB46BB0", Offset = "0xB46BB0", VA = "0xB46BB0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0xB46CB0", Offset = "0xB46CB0", VA = "0xB46CB0")]
	private void Update()
	{
	}

	[Token(Token = "0x60001E9")]
	[Address(RVA = "0xB46C40", Offset = "0xB46C40", VA = "0xB46C40")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x87AD98", Offset = "0x87AD98")]
	private IEnumerator GetCenterEye()
	{
		return null;
	}

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0xB46ED8", Offset = "0xB46ED8", VA = "0xB46ED8")]
	public HandsActiveChecker()
	{
	}
}
[Token(Token = "0x200005B")]
[ExecuteInEditMode]
public class CharacterCapsule : MonoBehaviour
{
	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CharacterController _character;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter _meshFilter;

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _height;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _radius;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x872734", Offset = "0x872734")]
	public int SubdivisionsU;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x872750", Offset = "0x872750")]
	public int SubdivisionsV;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _subdivisionU;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int _subdivisionV;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3[] _vertices;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int[] _triangles;

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0xB59A7C", Offset = "0xB59A7C", VA = "0xB59A7C")]
	private void Update()
	{
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0xB5A534", Offset = "0xB5A534", VA = "0xB5A534")]
	public CharacterCapsule()
	{
	}
}
[Token(Token = "0x200005C")]
public class LocomotionSampleSupport : MonoBehaviour
{
	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LocomotionController lc;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool inMenu;

	[Token(Token = "0x17000049")]
	private LocomotionTeleport TeleportController
	{
		[Token(Token = "0x60001F3")]
		[Address(RVA = "0xB51A40", Offset = "0xB51A40", VA = "0xB51A40")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0xB51A98", Offset = "0xB51A98", VA = "0xB51A98")]
	public void Start()
	{
	}

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0xB51DDC", Offset = "0xB51DDC", VA = "0xB51DDC")]
	public void Update()
	{
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0xB51EC0", Offset = "0xB51EC0", VA = "0xB51EC0")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x87AE4C", Offset = "0x87AE4C")]
	private static void Log(string msg)
	{
	}

	[Token(Token = "0x60001F7")]
	public static TActivate ActivateCategory<TCategory, TActivate>(GameObject target) where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x60001F8")]
	protected void ActivateHandlers<TInput, TAim, TTarget, TOrientation, TTransition>() where TInput : TeleportInputHandler where TAim : TeleportAimHandler where TTarget : TeleportTargetHandler where TOrientation : TeleportOrientationHandler where TTransition : TeleportTransition
	{
	}

	[Token(Token = "0x60001F9")]
	protected void ActivateInput<TActivate>() where TActivate : TeleportInputHandler
	{
	}

	[Token(Token = "0x60001FA")]
	protected void ActivateAim<TActivate>() where TActivate : TeleportAimHandler
	{
	}

	[Token(Token = "0x60001FB")]
	protected void ActivateTarget<TActivate>() where TActivate : TeleportTargetHandler
	{
	}

	[Token(Token = "0x60001FC")]
	protected void ActivateOrientation<TActivate>() where TActivate : TeleportOrientationHandler
	{
	}

	[Token(Token = "0x60001FD")]
	protected void ActivateTransition<TActivate>() where TActivate : TeleportTransition
	{
	}

	[Token(Token = "0x60001FE")]
	protected TActivate ActivateCategory<TCategory, TActivate>() where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0xB51F28", Offset = "0xB51F28", VA = "0xB51F28")]
	protected void UpdateToggle(Toggle toggle, bool enabled)
	{
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0xB51F64", Offset = "0xB51F64", VA = "0xB51F64")]
	private void SetupNonCap()
	{
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0xB51FD8", Offset = "0xB51FD8", VA = "0xB51FD8")]
	private void SetupTeleportDefaults()
	{
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0xB52134", Offset = "0xB52134", VA = "0xB52134")]
	protected GameObject AddInstance(GameObject template, string label)
	{
		return null;
	}

	[Token(Token = "0x6000203")]
	[Address(RVA = "0xB52208", Offset = "0xB52208", VA = "0xB52208")]
	private void SetupNodeTeleport()
	{
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0xB51CE8", Offset = "0xB51CE8", VA = "0xB51CE8")]
	private void SetupTwoStickTeleport()
	{
	}

	[Token(Token = "0x6000205")]
	[Address(RVA = "0xB522C8", Offset = "0xB522C8", VA = "0xB522C8")]
	private void SetupWalkOnly()
	{
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0xB52330", Offset = "0xB52330", VA = "0xB52330")]
	private void SetupLeftStrafeRightTeleport()
	{
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0xB52414", Offset = "0xB52414", VA = "0xB52414")]
	public LocomotionSampleSupport()
	{
	}
}
[Token(Token = "0x200005D")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x86EB5C", Offset = "0x86EB5C")]
public class OVROverlayCanvas : MonoBehaviour
{
	[Token(Token = "0x200005E")]
	public enum DrawMode
	{
		[Token(Token = "0x40001EE")]
		Opaque,
		[Token(Token = "0x40001EF")]
		OpaqueWithClip,
		[Token(Token = "0x40001F0")]
		TransparentDefaultAlpha,
		[Token(Token = "0x40001F1")]
		TransparentCorrectAlpha
	}

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[HideInInspector]
	private Shader _transparentShader;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[HideInInspector]
	private Shader _opaqueShader;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform _rectTransform;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Canvas _canvas;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Camera _camera;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OVROverlay _overlay;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RenderTexture _renderTexture;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MeshRenderer _meshRenderer;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Mesh _quad;

	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material _defaultMat;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int MaxTextureSize;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int MinTextureSize;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float PixelsPerUnit;

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int DrawRate;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int DrawFrameOffset;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool Expensive;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int Layer;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public DrawMode Opacity;

	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool ScaleViewport;

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Plane[] _FrustumPlanes;

	[Token(Token = "0x1700004A")]
	public bool overlayEnabled
	{
		[Token(Token = "0x600020E")]
		[Address(RVA = "0xC668FC", Offset = "0xC668FC", VA = "0xC668FC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600020F")]
		[Address(RVA = "0xC66990", Offset = "0xC66990", VA = "0xC66990")]
		set
		{
		}
	}

	[Token(Token = "0x6000208")]
	[Address(RVA = "0xC6528C", Offset = "0xC6528C", VA = "0xC6528C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0xC65EFC", Offset = "0xC65EFC", VA = "0xC65EFC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0xC65F80", Offset = "0xC65F80", VA = "0xC65F80")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600020B")]
	[Address(RVA = "0xC66074", Offset = "0xC66074", VA = "0xC66074")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600020C")]
	[Address(RVA = "0xC66168", Offset = "0xC66168", VA = "0xC66168", Slot = "4")]
	protected virtual bool ShouldRender()
	{
		return default(bool);
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0xC6636C", Offset = "0xC6636C", VA = "0xC6636C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000210")]
	[Address(RVA = "0xC66A60", Offset = "0xC66A60", VA = "0xC66A60")]
	public OVROverlayCanvas()
	{
	}
}
[Token(Token = "0x200005F")]
public class StartMenu : MonoBehaviour
{
	[Token(Token = "0x2000060")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86EBC0", Offset = "0x86EBC0")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x40001F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int sceneIndex;

		[Token(Token = "0x40001F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StartMenu <>4__this;

		[Token(Token = "0x6000215")]
		[Address(RVA = "0xB1B68C", Offset = "0xB1B68C", VA = "0xB1B68C")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x6000216")]
		[Address(RVA = "0xB1B79C", Offset = "0xB1B79C", VA = "0xB1B79C")]
		internal void <Start>b__0()
		{
		}
	}

	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVROverlay overlay;

	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVROverlay text;

	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig vrRig;

	[Token(Token = "0x6000212")]
	[Address(RVA = "0xB1B4CC", Offset = "0xB1B4CC", VA = "0xB1B4CC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0xB1B694", Offset = "0xB1B694", VA = "0xB1B694")]
	private void LoadScene(int idx)
	{
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0xB1B794", Offset = "0xB1B794", VA = "0xB1B794")]
	public StartMenu()
	{
	}
}
[Token(Token = "0x2000061")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x86EBD0", Offset = "0x86EBD0")]
public class MouseLook : MonoBehaviour
{
	[Token(Token = "0x2000062")]
	public enum RotationAxes
	{
		[Token(Token = "0x4000200")]
		MouseXAndY,
		[Token(Token = "0x4000201")]
		MouseX,
		[Token(Token = "0x4000202")]
		MouseY
	}

	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RotationAxes axes;

	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float sensitivityX;

	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float sensitivityY;

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float minimumX;

	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maximumX;

	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float minimumY;

	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maximumY;

	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float rotationY;

	[Token(Token = "0x6000217")]
	[Address(RVA = "0xF6AF34", Offset = "0xF6AF34", VA = "0xF6AF34")]
	private void Update()
	{
	}

	[Token(Token = "0x6000218")]
	[Address(RVA = "0xF6B194", Offset = "0xF6B194", VA = "0xF6B194")]
	private void Start()
	{
	}

	[Token(Token = "0x6000219")]
	[Address(RVA = "0xF6B254", Offset = "0xF6B254", VA = "0xF6B254")]
	public MouseLook()
	{
	}
}
[Token(Token = "0x2000063")]
public class ONSPAmbisonicsNative : MonoBehaviour
{
	[Token(Token = "0x2000064")]
	public enum ovrAmbisonicsNativeStatus
	{
		[Token(Token = "0x400020A")]
		Uninitialized = -1,
		[Token(Token = "0x400020B")]
		NotEnabled,
		[Token(Token = "0x400020C")]
		Success,
		[Token(Token = "0x400020D")]
		StreamError,
		[Token(Token = "0x400020E")]
		ProcessError,
		[Token(Token = "0x400020F")]
		MaxStatValue
	}

	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource source;

	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int numFOAChannels;

	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int paramVSpeakerMode;

	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int paramAmbiStat;

	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ovrAmbisonicsNativeStatus currentStatus;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private bool useVirtualSpeakers;

	[Token(Token = "0x1700004B")]
	public bool UseVirtualSpeakers
	{
		[Token(Token = "0x600021A")]
		[Address(RVA = "0xF6EE24", Offset = "0xF6EE24", VA = "0xF6EE24")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600021B")]
		[Address(RVA = "0xF6EE2C", Offset = "0xF6EE2C", VA = "0xF6EE2C")]
		set
		{
		}
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0xF6EE38", Offset = "0xF6EE38", VA = "0xF6EE38")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600021D")]
	[Address(RVA = "0xF6F06C", Offset = "0xF6F06C", VA = "0xF6F06C")]
	private void Update()
	{
	}

	[Token(Token = "0x600021E")]
	[Address(RVA = "0xF6F2BC", Offset = "0xF6F2BC", VA = "0xF6F2BC")]
	public ONSPAmbisonicsNative()
	{
	}
}
[Token(Token = "0x2000065")]
public class ONSPAudioSource : MonoBehaviour
{
	[Token(Token = "0x4000210")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool enableSpatialization;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float gain;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool useInvSqr;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float near;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float far;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float volumetricRadius;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float reverbSend;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private bool enableRfl;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPAudioSource RoomReflectionGizmoAS;

	[Token(Token = "0x1700004C")]
	public bool EnableSpatialization
	{
		[Token(Token = "0x6000222")]
		[Address(RVA = "0xF6F628", Offset = "0xF6F628", VA = "0xF6F628")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000223")]
		[Address(RVA = "0xF6F630", Offset = "0xF6F630", VA = "0xF6F630")]
		set
		{
		}
	}

	[Token(Token = "0x1700004D")]
	public float Gain
	{
		[Token(Token = "0x6000224")]
		[Address(RVA = "0xF6F63C", Offset = "0xF6F63C", VA = "0xF6F63C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000225")]
		[Address(RVA = "0xF6F644", Offset = "0xF6F644", VA = "0xF6F644")]
		set
		{
		}
	}

	[Token(Token = "0x1700004E")]
	public bool UseInvSqr
	{
		[Token(Token = "0x6000226")]
		[Address(RVA = "0xF6F6C8", Offset = "0xF6F6C8", VA = "0xF6F6C8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000227")]
		[Address(RVA = "0xF6F6D0", Offset = "0xF6F6D0", VA = "0xF6F6D0")]
		set
		{
		}
	}

	[Token(Token = "0x1700004F")]
	public float Near
	{
		[Token(Token = "0x6000228")]
		[Address(RVA = "0xF6F6DC", Offset = "0xF6F6DC", VA = "0xF6F6DC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000229")]
		[Address(RVA = "0xF6F6E4", Offset = "0xF6F6E4", VA = "0xF6F6E4")]
		set
		{
		}
	}

	[Token(Token = "0x17000050")]
	public float Far
	{
		[Token(Token = "0x600022A")]
		[Address(RVA = "0xF6F76C", Offset = "0xF6F76C", VA = "0xF6F76C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600022B")]
		[Address(RVA = "0xF6F774", Offset = "0xF6F774", VA = "0xF6F774")]
		set
		{
		}
	}

	[Token(Token = "0x17000051")]
	public float VolumetricRadius
	{
		[Token(Token = "0x600022C")]
		[Address(RVA = "0xF6F7FC", Offset = "0xF6F7FC", VA = "0xF6F7FC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600022D")]
		[Address(RVA = "0xF6F804", Offset = "0xF6F804", VA = "0xF6F804")]
		set
		{
		}
	}

	[Token(Token = "0x17000052")]
	public float ReverbSend
	{
		[Token(Token = "0x600022E")]
		[Address(RVA = "0xF6F88C", Offset = "0xF6F88C", VA = "0xF6F88C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600022F")]
		[Address(RVA = "0xF6F894", Offset = "0xF6F894", VA = "0xF6F894")]
		set
		{
		}
	}

	[Token(Token = "0x17000053")]
	public bool EnableRfl
	{
		[Token(Token = "0x6000230")]
		[Address(RVA = "0xF6F91C", Offset = "0xF6F91C", VA = "0xF6F91C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000231")]
		[Address(RVA = "0xF6F924", Offset = "0xF6F924", VA = "0xF6F924")]
		set
		{
		}
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0xF6F340", Offset = "0xF6F340", VA = "0xF6F340")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x87AE84", Offset = "0x87AE84")]
	private static void OnBeforeSceneLoadRuntimeMethod()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000221")]
	[Address(RVA = "0xF6F548", Offset = "0xF6F548", VA = "0xF6F548")]
	private static extern void ONSP_GetGlobalRoomReflectionValues(ref bool reflOn, ref bool reverbOn, ref float width, ref float height, ref float length);

	[Token(Token = "0x6000232")]
	[Address(RVA = "0xF6F930", Offset = "0xF6F930", VA = "0xF6F930")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0xF6FAA4", Offset = "0xF6FAA4", VA = "0xF6FAA4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000234")]
	[Address(RVA = "0xF6FAA8", Offset = "0xF6FAA8", VA = "0xF6FAA8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0xF6F99C", Offset = "0xF6F99C", VA = "0xF6F99C")]
	public void SetParameters(ref AudioSource source)
	{
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0xF6FB70", Offset = "0xF6FB70", VA = "0xF6FB70")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000237")]
	[Address(RVA = "0xF6FFD0", Offset = "0xF6FFD0", VA = "0xF6FFD0")]
	private void OnDestroy()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000238")]
	[Address(RVA = "0xF6F4C8", Offset = "0xF6F4C8", VA = "0xF6F4C8")]
	private static extern int OSP_SetGlobalVoiceLimit(int VoiceLimit);

	[Token(Token = "0x6000239")]
	[Address(RVA = "0xF700A0", Offset = "0xF700A0", VA = "0xF700A0")]
	public ONSPAudioSource()
	{
	}
}
[Token(Token = "0x2000066")]
public class ONSPProfiler : MonoBehaviour
{
	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool profilerEnabled;

	[Token(Token = "0x400021B")]
	private const int DEFAULT_PORT = 2121;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int port;

	[Token(Token = "0x400021D")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x600023B")]
	[Address(RVA = "0xF700C0", Offset = "0xF700C0", VA = "0xF700C0")]
	private void Start()
	{
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0xF700CC", Offset = "0xF700CC", VA = "0xF700CC")]
	private void Update()
	{
	}

	[PreserveSig]
	[Token(Token = "0x600023D")]
	[Address(RVA = "0xF70184", Offset = "0xF70184", VA = "0xF70184")]
	private static extern int ONSP_SetProfilerEnabled(bool enabled);

	[PreserveSig]
	[Token(Token = "0x600023E")]
	[Address(RVA = "0xF70104", Offset = "0xF70104", VA = "0xF70104")]
	private static extern int ONSP_SetProfilerPort(int port);

	[Token(Token = "0x600023F")]
	[Address(RVA = "0xF70204", Offset = "0xF70204", VA = "0xF70204")]
	public ONSPProfiler()
	{
	}
}
[Token(Token = "0x2000067")]
public class ONSPPropagationGeometry : MonoBehaviour
{
	[Token(Token = "0x2000068")]
	private struct MeshMaterial
	{
		[Token(Token = "0x4000226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MeshFilter meshFilter;

		[Token(Token = "0x4000227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;
	}

	[Token(Token = "0x2000069")]
	private struct TerrainMaterial
	{
		[Token(Token = "0x4000228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Terrain terrain;

		[Token(Token = "0x4000229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;

		[Token(Token = "0x400022A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mesh[] treePrototypeMeshes;
	}

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string GeometryAssetDirectory;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string filePathRelative;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool fileEnabled;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool includeChildMeshes;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IntPtr geometryHandle;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int OSPSuccess;

	[Token(Token = "0x4000224")]
	public const string GEOMETRY_FILE_EXTENSION = "ovramesh";

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static int terrainDecimation;

	[Token(Token = "0x17000054")]
	public static string GeometryAssetPath
	{
		[Token(Token = "0x6000240")]
		[Address(RVA = "0xF7225C", Offset = "0xF7225C", VA = "0xF7225C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000055")]
	public string filePath
	{
		[Token(Token = "0x6000241")]
		[Address(RVA = "0xF722E8", Offset = "0xF722E8", VA = "0xF722E8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000242")]
	[Address(RVA = "0xF72360", Offset = "0xF72360", VA = "0xF72360")]
	private static string GetPath(Transform current)
	{
		return null;
	}

	[Token(Token = "0x6000243")]
	[Address(RVA = "0xF724A8", Offset = "0xF724A8", VA = "0xF724A8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000244")]
	[Address(RVA = "0xF724AC", Offset = "0xF724AC", VA = "0xF724AC")]
	private void CreatePropagationGeometry()
	{
	}

	[Token(Token = "0x6000245")]
	[Address(RVA = "0xF72A0C", Offset = "0xF72A0C", VA = "0xF72A0C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0xF72DA4", Offset = "0xF72DA4", VA = "0xF72DA4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000247")]
	[Address(RVA = "0xF72F00", Offset = "0xF72F00", VA = "0xF72F00")]
	private static void traverseMeshHierarchy(GameObject obj, ONSPPropagationMaterial[] currentMaterials, bool includeChildren, List<MeshMaterial> meshMaterials, List<TerrainMaterial> terrainMaterials, bool ignoreStatic, ref int ignoredMeshCount)
	{
	}

	[Token(Token = "0x6000248")]
	[Address(RVA = "0xF735D8", Offset = "0xF735D8", VA = "0xF735D8")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal)
	{
		return default(int);
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0xF73614", Offset = "0xF73614", VA = "0xF73614")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal, bool ignoreStatic, ref int ignoredMeshCount)
	{
		return default(int);
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0xF74DB8", Offset = "0xF74DB8", VA = "0xF74DB8")]
	private static void uploadMeshFilter(List<Vector3> tempVertices, List<int> tempIndices, MeshGroup[] groups, float[] vertices, int[] indices, ref int vertexOffset, ref int indexOffset, ref int groupOffset, Mesh mesh, ONSPPropagationMaterial[] materials, Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x600024B")]
	[Address(RVA = "0xF74C90", Offset = "0xF74C90", VA = "0xF74C90")]
	private static void updateCountsForMesh(ref int totalVertexCount, ref uint totalIndexCount, ref int totalFaceCount, ref int totalMaterialCount, Mesh mesh)
	{
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0xF72844", Offset = "0xF72844", VA = "0xF72844")]
	public void UploadGeometry()
	{
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0xF72678", Offset = "0xF72678", VA = "0xF72678")]
	public bool ReadFile()
	{
		return default(bool);
	}

	[Token(Token = "0x600024E")]
	[Address(RVA = "0xF753CC", Offset = "0xF753CC", VA = "0xF753CC")]
	public bool WriteToObj()
	{
		return default(bool);
	}

	[Token(Token = "0x600024F")]
	[Address(RVA = "0xF75808", Offset = "0xF75808", VA = "0xF75808")]
	public ONSPPropagationGeometry()
	{
	}
}
[Token(Token = "0x200006A")]
internal class ONSPPropagation
{
	[Token(Token = "0x200006B")]
	public enum ovrAudioScalarType : uint
	{
		[Token(Token = "0x400022D")]
		Int8,
		[Token(Token = "0x400022E")]
		UInt8,
		[Token(Token = "0x400022F")]
		Int16,
		[Token(Token = "0x4000230")]
		UInt16,
		[Token(Token = "0x4000231")]
		Int32,
		[Token(Token = "0x4000232")]
		UInt32,
		[Token(Token = "0x4000233")]
		Int64,
		[Token(Token = "0x4000234")]
		UInt64,
		[Token(Token = "0x4000235")]
		Float16,
		[Token(Token = "0x4000236")]
		Float32,
		[Token(Token = "0x4000237")]
		Float64
	}

	[Token(Token = "0x200006C")]
	public interface PropagationInterface
	{
		[Token(Token = "0x6000253")]
		int SetPropagationQuality(float quality);

		[Token(Token = "0x6000254")]
		int CreateAudioGeometry(out IntPtr geometry);

		[Token(Token = "0x6000255")]
		int DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6000256")]
		int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount);

		[Token(Token = "0x6000257")]
		int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6000258")]
		int AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000259")]
		int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x600025A")]
		int CreateAudioMaterial(out IntPtr material);

		[Token(Token = "0x600025B")]
		int DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x600025C")]
		int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x600025D")]
		int AudioMaterialReset(IntPtr material, MaterialProperty property);
	}

	[Token(Token = "0x200006D")]
	public class UnityNativeInterface : PropagationInterface
	{
		[Token(Token = "0x4000238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x17000057")]
		private IntPtr context
		{
			[Token(Token = "0x600025E")]
			[Address(RVA = "0xF70FBC", Offset = "0xF70FBC", VA = "0xF70FBC")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x600025F")]
		[Address(RVA = "0xF71020", Offset = "0xF71020", VA = "0xF71020")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6000260")]
		[Address(RVA = "0xF710B0", Offset = "0xF710B0", VA = "0xF710B0")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6000261")]
		[Address(RVA = "0xF71140", Offset = "0xF71140", VA = "0xF71140", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000262")]
		[Address(RVA = "0xF71164", Offset = "0xF71164", VA = "0xF71164")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6000263")]
		[Address(RVA = "0xF711F0", Offset = "0xF711F0", VA = "0xF711F0", Slot = "5")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000264")]
		[Address(RVA = "0xF71214", Offset = "0xF71214", VA = "0xF71214")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6000265")]
		[Address(RVA = "0xF71294", Offset = "0xF71294", VA = "0xF71294", Slot = "6")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000266")]
		[Address(RVA = "0xF7129C", Offset = "0xF7129C", VA = "0xF7129C")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6000267")]
		[Address(RVA = "0xF713BC", Offset = "0xF713BC", VA = "0xF713BC", Slot = "7")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000268")]
		[Address(RVA = "0xF714B4", Offset = "0xF714B4", VA = "0xF714B4")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6000269")]
		[Address(RVA = "0xF7154C", Offset = "0xF7154C", VA = "0xF7154C", Slot = "8")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600026A")]
		[Address(RVA = "0xF71558", Offset = "0xF71558", VA = "0xF71558")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x600026B")]
		[Address(RVA = "0xF71604", Offset = "0xF71604", VA = "0xF71604", Slot = "9")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600026C")]
		[Address(RVA = "0xF71610", Offset = "0xF71610", VA = "0xF71610")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x600026D")]
		[Address(RVA = "0xF716BC", Offset = "0xF716BC", VA = "0xF716BC", Slot = "10")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600026E")]
		[Address(RVA = "0xF716C8", Offset = "0xF716C8", VA = "0xF716C8")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x600026F")]
		[Address(RVA = "0xF71754", Offset = "0xF71754", VA = "0xF71754", Slot = "11")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000270")]
		[Address(RVA = "0xF71778", Offset = "0xF71778", VA = "0xF71778")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6000271")]
		[Address(RVA = "0xF717F8", Offset = "0xF717F8", VA = "0xF717F8", Slot = "12")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000272")]
		[Address(RVA = "0xF71800", Offset = "0xF71800", VA = "0xF71800")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6000273")]
		[Address(RVA = "0xF718A8", Offset = "0xF718A8", VA = "0xF718A8", Slot = "13")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000274")]
		[Address(RVA = "0xF718B4", Offset = "0xF718B4", VA = "0xF718B4")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6000275")]
		[Address(RVA = "0xF71944", Offset = "0xF71944", VA = "0xF71944", Slot = "14")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6000276")]
		[Address(RVA = "0xF70664", Offset = "0xF70664", VA = "0xF70664")]
		public UnityNativeInterface()
		{
		}
	}

	[Token(Token = "0x200006E")]
	public class WwisePluginInterface : PropagationInterface
	{
		[Token(Token = "0x4000239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x17000058")]
		private IntPtr context
		{
			[Token(Token = "0x6000277")]
			[Address(RVA = "0xF71950", Offset = "0xF71950", VA = "0xF71950")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6000278")]
		[Address(RVA = "0xF704AC", Offset = "0xF704AC", VA = "0xF704AC")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6000279")]
		[Address(RVA = "0xF719B4", Offset = "0xF719B4", VA = "0xF719B4")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x600027A")]
		[Address(RVA = "0xF71A44", Offset = "0xF71A44", VA = "0xF71A44", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600027B")]
		[Address(RVA = "0xF71A68", Offset = "0xF71A68", VA = "0xF71A68")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x600027C")]
		[Address(RVA = "0xF71AF8", Offset = "0xF71AF8", VA = "0xF71AF8", Slot = "5")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600027D")]
		[Address(RVA = "0xF71B1C", Offset = "0xF71B1C", VA = "0xF71B1C")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x600027E")]
		[Address(RVA = "0xF71B9C", Offset = "0xF71B9C", VA = "0xF71B9C", Slot = "6")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600027F")]
		[Address(RVA = "0xF71BA4", Offset = "0xF71BA4", VA = "0xF71BA4")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6000280")]
		[Address(RVA = "0xF71CC4", Offset = "0xF71CC4", VA = "0xF71CC4", Slot = "7")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000281")]
		[Address(RVA = "0xF71DBC", Offset = "0xF71DBC", VA = "0xF71DBC")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6000282")]
		[Address(RVA = "0xF71E54", Offset = "0xF71E54", VA = "0xF71E54", Slot = "8")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000283")]
		[Address(RVA = "0xF71E60", Offset = "0xF71E60", VA = "0xF71E60")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000284")]
		[Address(RVA = "0xF71F0C", Offset = "0xF71F0C", VA = "0xF71F0C", Slot = "9")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000285")]
		[Address(RVA = "0xF71F18", Offset = "0xF71F18", VA = "0xF71F18")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6000286")]
		[Address(RVA = "0xF71FC4", Offset = "0xF71FC4", VA = "0xF71FC4", Slot = "10")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000287")]
		[Address(RVA = "0xF71FD0", Offset = "0xF71FD0", VA = "0xF71FD0")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6000288")]
		[Address(RVA = "0xF72060", Offset = "0xF72060", VA = "0xF72060", Slot = "11")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000289")]
		[Address(RVA = "0xF72084", Offset = "0xF72084", VA = "0xF72084")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x600028A")]
		[Address(RVA = "0xF72104", Offset = "0xF72104", VA = "0xF72104", Slot = "12")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600028B")]
		[Address(RVA = "0xF7210C", Offset = "0xF7210C", VA = "0xF7210C")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x600028C")]
		[Address(RVA = "0xF721B4", Offset = "0xF721B4", VA = "0xF721B4", Slot = "13")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600028D")]
		[Address(RVA = "0xF721C0", Offset = "0xF721C0", VA = "0xF721C0")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x600028E")]
		[Address(RVA = "0xF72250", Offset = "0xF72250", VA = "0xF72250", Slot = "14")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x600028F")]
		[Address(RVA = "0xF7053C", Offset = "0xF7053C", VA = "0xF7053C")]
		public WwisePluginInterface()
		{
		}
	}

	[Token(Token = "0x200006F")]
	public class FMODPluginInterface : PropagationInterface
	{
		[Token(Token = "0x400023A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x17000059")]
		private IntPtr context
		{
			[Token(Token = "0x6000290")]
			[Address(RVA = "0xF706B0", Offset = "0xF706B0", VA = "0xF706B0")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6000291")]
		[Address(RVA = "0xF70588", Offset = "0xF70588", VA = "0xF70588")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6000292")]
		[Address(RVA = "0xF70714", Offset = "0xF70714", VA = "0xF70714")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6000293")]
		[Address(RVA = "0xF707A4", Offset = "0xF707A4", VA = "0xF707A4", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000294")]
		[Address(RVA = "0xF707C8", Offset = "0xF707C8", VA = "0xF707C8")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6000295")]
		[Address(RVA = "0xF70858", Offset = "0xF70858", VA = "0xF70858", Slot = "5")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000296")]
		[Address(RVA = "0xF7087C", Offset = "0xF7087C", VA = "0xF7087C")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6000297")]
		[Address(RVA = "0xF708FC", Offset = "0xF708FC", VA = "0xF708FC", Slot = "6")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000298")]
		[Address(RVA = "0xF70904", Offset = "0xF70904", VA = "0xF70904")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6000299")]
		[Address(RVA = "0xF70A24", Offset = "0xF70A24", VA = "0xF70A24", Slot = "7")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600029A")]
		[Address(RVA = "0xF70B1C", Offset = "0xF70B1C", VA = "0xF70B1C")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x600029B")]
		[Address(RVA = "0xF70BB4", Offset = "0xF70BB4", VA = "0xF70BB4", Slot = "8")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600029C")]
		[Address(RVA = "0xF70BC0", Offset = "0xF70BC0", VA = "0xF70BC0")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x600029D")]
		[Address(RVA = "0xF70C6C", Offset = "0xF70C6C", VA = "0xF70C6C", Slot = "9")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600029E")]
		[Address(RVA = "0xF70C78", Offset = "0xF70C78", VA = "0xF70C78")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x600029F")]
		[Address(RVA = "0xF70D24", Offset = "0xF70D24", VA = "0xF70D24", Slot = "10")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60002A0")]
		[Address(RVA = "0xF70D30", Offset = "0xF70D30", VA = "0xF70D30")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x60002A1")]
		[Address(RVA = "0xF70DC0", Offset = "0xF70DC0", VA = "0xF70DC0", Slot = "11")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60002A2")]
		[Address(RVA = "0xF70DE4", Offset = "0xF70DE4", VA = "0xF70DE4")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x60002A3")]
		[Address(RVA = "0xF70E64", Offset = "0xF70E64", VA = "0xF70E64", Slot = "12")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60002A4")]
		[Address(RVA = "0xF70E6C", Offset = "0xF70E6C", VA = "0xF70E6C")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x60002A5")]
		[Address(RVA = "0xF70F14", Offset = "0xF70F14", VA = "0xF70F14", Slot = "13")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60002A6")]
		[Address(RVA = "0xF70F20", Offset = "0xF70F20", VA = "0xF70F20")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x60002A7")]
		[Address(RVA = "0xF70FB0", Offset = "0xF70FB0", VA = "0xF70FB0", Slot = "14")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x60002A8")]
		[Address(RVA = "0xF70618", Offset = "0xF70618", VA = "0xF70618")]
		public FMODPluginInterface()
		{
		}
	}

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PropagationInterface CachedInterface;

	[Token(Token = "0x17000056")]
	public static PropagationInterface Interface
	{
		[Token(Token = "0x6000251")]
		[Address(RVA = "0xF70214", Offset = "0xF70214", VA = "0xF70214")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000252")]
	[Address(RVA = "0xF70284", Offset = "0xF70284", VA = "0xF70284")]
	private static PropagationInterface FindInterface()
	{
		return null;
	}
}
[Token(Token = "0x2000070")]
public sealed class ONSPPropagationMaterial : MonoBehaviour
{
	[Token(Token = "0x2000071")]
	public enum Preset
	{
		[Token(Token = "0x4000241")]
		Custom,
		[Token(Token = "0x4000242")]
		AcousticTile,
		[Token(Token = "0x4000243")]
		Brick,
		[Token(Token = "0x4000244")]
		BrickPainted,
		[Token(Token = "0x4000245")]
		Carpet,
		[Token(Token = "0x4000246")]
		CarpetHeavy,
		[Token(Token = "0x4000247")]
		CarpetHeavyPadded,
		[Token(Token = "0x4000248")]
		CeramicTile,
		[Token(Token = "0x4000249")]
		Concrete,
		[Token(Token = "0x400024A")]
		ConcreteRough,
		[Token(Token = "0x400024B")]
		ConcreteBlock,
		[Token(Token = "0x400024C")]
		ConcreteBlockPainted,
		[Token(Token = "0x400024D")]
		Curtain,
		[Token(Token = "0x400024E")]
		Foliage,
		[Token(Token = "0x400024F")]
		Glass,
		[Token(Token = "0x4000250")]
		GlassHeavy,
		[Token(Token = "0x4000251")]
		Grass,
		[Token(Token = "0x4000252")]
		Gravel,
		[Token(Token = "0x4000253")]
		GypsumBoard,
		[Token(Token = "0x4000254")]
		PlasterOnBrick,
		[Token(Token = "0x4000255")]
		PlasterOnConcreteBlock,
		[Token(Token = "0x4000256")]
		Soil,
		[Token(Token = "0x4000257")]
		SoundProof,
		[Token(Token = "0x4000258")]
		Snow,
		[Token(Token = "0x4000259")]
		Steel,
		[Token(Token = "0x400025A")]
		Water,
		[Token(Token = "0x400025B")]
		WoodThin,
		[Token(Token = "0x400025C")]
		WoodThick,
		[Token(Token = "0x400025D")]
		WoodFloor,
		[Token(Token = "0x400025E")]
		WoodOnConcrete
	}

	[Serializable]
	[Token(Token = "0x2000072")]
	public sealed class Point
	{
		[Token(Token = "0x400025F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float frequency;

		[Token(Token = "0x4000260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float data;

		[Token(Token = "0x60002CF")]
		[Address(RVA = "0xF7D6DC", Offset = "0xF7D6DC", VA = "0xF7D6DC")]
		public Point(float frequency = 0f, float data = 0f)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000073")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x86EC08", Offset = "0x86EC08")]
	public sealed class Spectrum
	{
		[Token(Token = "0x4000261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int selection;

		[Token(Token = "0x4000262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Point> points;

		[Token(Token = "0x60002D0")]
		[Address(RVA = "0xF7D7AC", Offset = "0xF7D7AC", VA = "0xF7D7AC")]
		public Spectrum()
		{
		}
	}

	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr materialHandle;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87286C", Offset = "0x87286C")]
	public Spectrum absorption;

	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8728A4", Offset = "0x8728A4")]
	public Spectrum transmission;

	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8728DC", Offset = "0x8728DC")]
	public Spectrum scattering;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Preset preset_;

	[Token(Token = "0x1700005A")]
	public Preset preset
	{
		[Token(Token = "0x60002A9")]
		[Address(RVA = "0xF758E0", Offset = "0xF758E0", VA = "0xF758E0")]
		get
		{
			return default(Preset);
		}
		[Token(Token = "0x60002AA")]
		[Address(RVA = "0xF758E8", Offset = "0xF758E8", VA = "0xF758E8")]
		set
		{
		}
	}

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0xF75910", Offset = "0xF75910", VA = "0xF75910")]
	private void Start()
	{
	}

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0xF75260", Offset = "0xF75260", VA = "0xF75260")]
	public void StartInternal()
	{
	}

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0xF75EC0", Offset = "0xF75EC0", VA = "0xF75EC0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0xF75EC4", Offset = "0xF75EC4", VA = "0xF75EC4")]
	public void DestroyInternal()
	{
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0xF75914", Offset = "0xF75914", VA = "0xF75914")]
	public void UploadMaterial()
	{
	}

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0xF74AFC", Offset = "0xF74AFC", VA = "0xF74AFC")]
	public void SetPreset(Preset preset)
	{
	}

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0xF75FA8", Offset = "0xF75FA8", VA = "0xF75FA8")]
	private static void AcousticTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0xF76408", Offset = "0xF76408", VA = "0xF76408")]
	private static void Brick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0xF76868", Offset = "0xF76868", VA = "0xF76868")]
	private static void BrickPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0xF76CC8", Offset = "0xF76CC8", VA = "0xF76CC8")]
	private static void Carpet(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0xF77128", Offset = "0xF77128", VA = "0xF77128")]
	private static void CarpetHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0xF77588", Offset = "0xF77588", VA = "0xF77588")]
	private static void CarpetHeavyPadded(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0xF779E8", Offset = "0xF779E8", VA = "0xF779E8")]
	private static void CeramicTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0xF77E48", Offset = "0xF77E48", VA = "0xF77E48")]
	private static void Concrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0xF782A8", Offset = "0xF782A8", VA = "0xF782A8")]
	private static void ConcreteRough(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0xF78708", Offset = "0xF78708", VA = "0xF78708")]
	private static void ConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0xF78B68", Offset = "0xF78B68", VA = "0xF78B68")]
	private static void ConcreteBlockPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0xF78FC8", Offset = "0xF78FC8", VA = "0xF78FC8")]
	private static void Curtain(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002BD")]
	[Address(RVA = "0xF79428", Offset = "0xF79428", VA = "0xF79428")]
	private static void Foliage(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0xF79888", Offset = "0xF79888", VA = "0xF79888")]
	private static void Glass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0xF79CE0", Offset = "0xF79CE0", VA = "0xF79CE0")]
	private static void GlassHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0xF7A140", Offset = "0xF7A140", VA = "0xF7A140")]
	private static void Grass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0xF7A47C", Offset = "0xF7A47C", VA = "0xF7A47C")]
	private static void Gravel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002C2")]
	[Address(RVA = "0xF7A7B8", Offset = "0xF7A7B8", VA = "0xF7A7B8")]
	private static void GypsumBoard(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0xF7AC18", Offset = "0xF7AC18", VA = "0xF7AC18")]
	private static void PlasterOnBrick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002C4")]
	[Address(RVA = "0xF7B078", Offset = "0xF7B078", VA = "0xF7B078")]
	private static void PlasterOnConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002C5")]
	[Address(RVA = "0xF7B4D8", Offset = "0xF7B4D8", VA = "0xF7B4D8")]
	private static void Soil(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002C6")]
	[Address(RVA = "0xF7B814", Offset = "0xF7B814", VA = "0xF7B814")]
	private static void SoundProof(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002C7")]
	[Address(RVA = "0xF7B970", Offset = "0xF7B970", VA = "0xF7B970")]
	private static void Snow(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002C8")]
	[Address(RVA = "0xF7BCAC", Offset = "0xF7BCAC", VA = "0xF7BCAC")]
	private static void Steel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002C9")]
	[Address(RVA = "0xF7C104", Offset = "0xF7C104", VA = "0xF7C104")]
	private static void Water(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0xF7C564", Offset = "0xF7C564", VA = "0xF7C564")]
	private static void WoodThin(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0xF7C9BC", Offset = "0xF7C9BC", VA = "0xF7C9BC")]
	private static void WoodThick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0xF7CE1C", Offset = "0xF7CE1C", VA = "0xF7CE1C")]
	private static void WoodFloor(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0xF7D27C", Offset = "0xF7D27C", VA = "0xF7D27C")]
	private static void WoodOnConcrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0xF7D714", Offset = "0xF7D714", VA = "0xF7D714")]
	public ONSPPropagationMaterial()
	{
	}
}
[Token(Token = "0x2000074")]
public class ONSPPropagationSettings : MonoBehaviour
{
	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float quality;

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0xF7D824", Offset = "0xF7D824", VA = "0xF7D824")]
	private void Update()
	{
	}

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0xF7D8F4", Offset = "0xF7D8F4", VA = "0xF7D8F4")]
	public ONSPPropagationSettings()
	{
	}
}
[Token(Token = "0x2000075")]
public sealed class ONSPSettings : ScriptableObject
{
	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public int voiceLimit;

	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPSettings instance;

	[Token(Token = "0x1700005B")]
	public static ONSPSettings Instance
	{
		[Token(Token = "0x60002D3")]
		[Address(RVA = "0xF6F3B4", Offset = "0xF6F3B4", VA = "0xF6F3B4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0xF7DEA8", Offset = "0xF7DEA8", VA = "0xF7DEA8")]
	public ONSPSettings()
	{
	}
}
[Token(Token = "0x2000076")]
public class ONSPVersion : MonoBehaviour
{
	[Token(Token = "0x4000266")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[PreserveSig]
	[Token(Token = "0x60002D5")]
	[Address(RVA = "0xF7DEB8", Offset = "0xF7DEB8", VA = "0xF7DEB8")]
	private static extern void ONSP_GetVersion(ref int Major, ref int Minor, ref int Patch);

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0xF7DF50", Offset = "0xF7DF50", VA = "0xF7DF50")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0xF7E05C", Offset = "0xF7E05C", VA = "0xF7E05C")]
	public ONSPVersion()
	{
	}
}
[Token(Token = "0x2000077")]
public class OculusSpatializerUnity : MonoBehaviour
{
	[Token(Token = "0x2000078")]
	public delegate void AudioRaycastCallback(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data);

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask layerMask;

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool visualizeRoom;

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool roomVisualizationInitialized;

	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int raysPerSecond;

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float roomInterpSpeed;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxWallDistance;

	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int rayCacheSize;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool dynamicReflectionsEnabled;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float particleSize;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float particleOffset;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject room;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Renderer[] wallRenderer;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float[] dims;

	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float[] coefs;

	[Token(Token = "0x4000275")]
	private const int HIT_COUNT = 2048;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3[] points;

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3[] normals;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ParticleSystem sys;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LayerMask gLayerMask;

	[Token(Token = "0x400027B")]
	private const string strOSP = "AudioPluginOculusSpatializer";

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0xB03888", Offset = "0xB03888", VA = "0xB03888")]
	private static Vector3 swapHandedness(Vector3 vec)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0xB036B8", Offset = "0xB036B8", VA = "0xB036B8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x87AE98", Offset = "0x87AE98")]
	private static void AudioRaycast(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data)
	{
	}

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0xB038C0", Offset = "0xB038C0", VA = "0xB038C0")]
	private void Start()
	{
	}

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0xB039F4", Offset = "0xB039F4", VA = "0xB039F4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0xB03AE8", Offset = "0xB03AE8", VA = "0xB03AE8")]
	private void Update()
	{
	}

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0xB044A0", Offset = "0xB044A0", VA = "0xB044A0")]
	private void inititalizeRoomVisualization()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60002DE")]
	[Address(RVA = "0xB03960", Offset = "0xB03960", VA = "0xB03960")]
	private static extern int OSP_Unity_AssignRaycastCallback(AudioRaycastCallback callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x60002DF")]
	[Address(RVA = "0xB03A58", Offset = "0xB03A58", VA = "0xB03A58")]
	private static extern int OSP_Unity_AssignRaycastCallback(IntPtr callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x60002E0")]
	[Address(RVA = "0xB04208", Offset = "0xB04208", VA = "0xB04208")]
	private static extern int OSP_Unity_SetDynamicRoomRaysPerSecond(int RaysPerSecond);

	[PreserveSig]
	[Token(Token = "0x60002E1")]
	[Address(RVA = "0xB04288", Offset = "0xB04288", VA = "0xB04288")]
	private static extern int OSP_Unity_SetDynamicRoomInterpSpeed(float InterpSpeed);

	[PreserveSig]
	[Token(Token = "0x60002E2")]
	[Address(RVA = "0xB04310", Offset = "0xB04310", VA = "0xB04310")]
	private static extern int OSP_Unity_SetDynamicRoomMaxWallDistance(float MaxWallDistance);

	[PreserveSig]
	[Token(Token = "0x60002E3")]
	[Address(RVA = "0xB04398", Offset = "0xB04398", VA = "0xB04398")]
	private static extern int OSP_Unity_SetDynamicRoomRaysRayCacheSize(int RayCacheSize);

	[PreserveSig]
	[Token(Token = "0x60002E4")]
	[Address(RVA = "0xB04418", Offset = "0xB04418", VA = "0xB04418")]
	private static extern int OSP_Unity_UpdateRoomModel(float wetLevel);

	[PreserveSig]
	[Token(Token = "0x60002E5")]
	[Address(RVA = "0xB052D8", Offset = "0xB052D8", VA = "0xB052D8")]
	private static extern int OSP_Unity_GetRoomDimensions(float[] roomDimensions, float[] reflectionsCoefs, out Vector3 position);

	[PreserveSig]
	[Token(Token = "0x60002E6")]
	[Address(RVA = "0xB05380", Offset = "0xB05380", VA = "0xB05380")]
	private static extern int OSP_Unity_GetRaycastHits(Vector3[] points, Vector3[] normals, int length);

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0xB05428", Offset = "0xB05428", VA = "0xB05428")]
	public OculusSpatializerUnity()
	{
	}
}
[Token(Token = "0x2000079")]
public struct ReflectionSnapshot
{
	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float fadeTime;
}
[Token(Token = "0x200007A")]
public class ONSPReflectionZone : MonoBehaviour
{
	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fadeTime;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Stack<ReflectionSnapshot> snapshotList;

	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ReflectionSnapshot currentSnapshot;

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0xF7D904", Offset = "0xF7D904", VA = "0xF7D904")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0xF7DA6C", Offset = "0xF7DA6C", VA = "0xF7DA6C")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0xF7D950", Offset = "0xF7D950", VA = "0xF7D950")]
	private bool CheckForAudioListener(GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0xF7D9E0", Offset = "0xF7D9E0", VA = "0xF7D9E0")]
	private void PushCurrentMixerShapshot()
	{
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0xF7DAB8", Offset = "0xF7DAB8", VA = "0xF7DAB8")]
	private void PopCurrentMixerSnapshot()
	{
	}

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0xF7DB50", Offset = "0xF7DB50", VA = "0xF7DB50")]
	private void SetReflectionValues()
	{
	}

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0xF7DCB8", Offset = "0xF7DCB8", VA = "0xF7DCB8")]
	private void SetReflectionValues(ref ReflectionSnapshot mss)
	{
	}

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0xF7DE20", Offset = "0xF7DE20", VA = "0xF7DE20")]
	public ONSPReflectionZone()
	{
	}
}
[Token(Token = "0x200007B")]
public class NewBehaviourScript : MonoBehaviour
{
	[Token(Token = "0x60002F6")]
	[Address(RVA = "0xF6E57C", Offset = "0xF6E57C", VA = "0xF6E57C")]
	public NewBehaviourScript()
	{
	}
}
[Token(Token = "0x200007C")]
public class Age : IComparable<Age>
{
	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int id;

	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int age;

	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Distancia distance;

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0xDDDEB8", Offset = "0xDDDEB8", VA = "0xDDDEB8")]
	public Age(int _id, int _age)
	{
	}

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0xDDDEF0", Offset = "0xDDDEF0", VA = "0xDDDEF0", Slot = "4")]
	public int CompareTo(Age otro)
	{
		return default(int);
	}
}
[Token(Token = "0x200007D")]
public class Distancia : IComparable<Distancia>
{
	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int id;

	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int distancia;

	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Age age;

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0xAECFB8", Offset = "0xAECFB8", VA = "0xAECFB8")]
	public Distancia(int _id, int _distancia, Age _age)
	{
	}

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0xAECFF8", Offset = "0xAECFF8", VA = "0xAECFF8", Slot = "4")]
	public int CompareTo(Distancia otro)
	{
		return default(int);
	}
}
[Token(Token = "0x200007E")]
public class HandProjection : MonoBehaviour
{
	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x872934", Offset = "0x872934")]
	private Hand handType;

	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private bool projectOnX;

	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[SerializeField]
	private bool projectOnY;

	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	[SerializeField]
	private bool projectOnZ;

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8729B0", Offset = "0x8729B0")]
	private Vector3 translation;

	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private Vector3 rotation;

	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Vector3 scale;

	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private float suavidad;

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private HandController hand;

	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 previousPosition;

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Matrix4x4 projectionMatrix;

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private bool projectionEnabled;

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0xB45DA4", Offset = "0xB45DA4", VA = "0xB45DA4")]
	private void Start()
	{
	}

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0xB45E28", Offset = "0xB45E28", VA = "0xB45E28")]
	private void Update()
	{
	}

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0xB46090", Offset = "0xB46090", VA = "0xB46090")]
	public void EnableProjection()
	{
	}

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0xB4609C", Offset = "0xB4609C", VA = "0xB4609C")]
	public void DisableProjection()
	{
	}

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0xB460A4", Offset = "0xB460A4", VA = "0xB460A4")]
	public HandProjection()
	{
	}
}
[Token(Token = "0x200007F")]
public class Ondas : MonoBehaviour
{
	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ParticleSystem particleSystem;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private LineRenderer[] lineRenderer;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float amplitud;

	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float velocidad;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float frecuencia;

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float velocidadZ;

	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float pow;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Gradient colorGradient;

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private int _limite;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private float ancho;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private ParticleSystem.Particle[] particlesArray;

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int aliveParticles;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float timeOffset;

	[Token(Token = "0x6000300")]
	[Address(RVA = "0xB06404", Offset = "0xB06404", VA = "0xB06404")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000301")]
	[Address(RVA = "0xB06490", Offset = "0xB06490", VA = "0xB06490")]
	private void Update()
	{
	}

	[Token(Token = "0x6000302")]
	[Address(RVA = "0xB06BEC", Offset = "0xB06BEC", VA = "0xB06BEC")]
	public Ondas()
	{
	}
}
[Token(Token = "0x2000080")]
public class PlasmaRay : MonoBehaviour
{
	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private LineRenderer lineRenderer;

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float desviacion;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float colorOffset;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float colorMult;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float sineSize;

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float sineVel;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float distThreshold;

	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private int idOffset;

	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private Color32 color;

	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ParticleSystem stringParticleSystem;

	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform destiny;

	[Token(Token = "0x6000303")]
	[Address(RVA = "0xB0CA34", Offset = "0xB0CA34", VA = "0xB0CA34")]
	public void SetPlasmaRay(ParticleSystem particleSystem, Transform destiny)
	{
	}

	[Token(Token = "0x6000304")]
	[Address(RVA = "0xB0CA3C", Offset = "0xB0CA3C", VA = "0xB0CA3C")]
	public void Draw(PlasmaRayManager manager)
	{
	}

	[Token(Token = "0x6000305")]
	[Address(RVA = "0xB0D120", Offset = "0xB0D120", VA = "0xB0D120")]
	public PlasmaRay()
	{
	}
}
[Token(Token = "0x2000081")]
public class PlasmaRayManager : MonoBehaviour
{
	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private PlasmaRay[] plasmaRays;

	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ParticleSystem stringParticleSystem;

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform destiny;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<Age> ages;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<Distancia> distancias;

	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ParticleSystem.Particle[] particlesArray;

	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int aliveParticles;

	[Token(Token = "0x1700005C")]
	public List<Age> Ages
	{
		[Token(Token = "0x6000306")]
		[Address(RVA = "0xB0D128", Offset = "0xB0D128", VA = "0xB0D128")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700005D")]
	public List<Distancia> Distancias
	{
		[Token(Token = "0x6000307")]
		[Address(RVA = "0xB0D130", Offset = "0xB0D130", VA = "0xB0D130")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700005E")]
	public ParticleSystem.Particle[] ParticlesArray
	{
		[Token(Token = "0x6000308")]
		[Address(RVA = "0xB0D138", Offset = "0xB0D138", VA = "0xB0D138")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0xB0D140", Offset = "0xB0D140", VA = "0xB0D140")]
	private void Awake()
	{
	}

	[Token(Token = "0x600030A")]
	[Address(RVA = "0xB0D218", Offset = "0xB0D218", VA = "0xB0D218")]
	private void Update()
	{
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0xB0D52C", Offset = "0xB0D52C", VA = "0xB0D52C")]
	public PlasmaRayManager()
	{
	}
}
[Token(Token = "0x2000082")]
public class ajusteTamañoParticulas : MonoBehaviour
{
	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ParticleSystem particleSystem;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParticleSystem.Particle[] particlesArray;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int aliveParticles;

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float mult;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float offset;

	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float limite;

	[Token(Token = "0x600030C")]
	[Address(RVA = "0x1560E70", Offset = "0x1560E70", VA = "0x1560E70")]
	private void Awake()
	{
	}

	[Token(Token = "0x600030D")]
	[Address(RVA = "0x1560EFC", Offset = "0x1560EFC", VA = "0x1560EFC")]
	private void Update()
	{
	}

	[Token(Token = "0x600030E")]
	[Address(RVA = "0x15610F0", Offset = "0x15610F0", VA = "0x15610F0")]
	public ajusteTamañoParticulas()
	{
	}
}
[Token(Token = "0x2000083")]
public class respiracionParticulasGranSombra : MonoBehaviour
{
	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ParticleSystem particleSystem;

	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float tam;

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float vel;

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float pow;

	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float mult;

	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float min;

	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ParticleSystem.Particle[] particlesArray;

	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ParticleSystem.Particle[] particlesArrayBU;

	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int aliveParticles;

	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private byte colorByte;

	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Color32 colorete;

	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Color32[] coloresOriginales;

	[Token(Token = "0x600030F")]
	[Address(RVA = "0x1561100", Offset = "0x1561100", VA = "0x1561100")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0x15611CC", Offset = "0x15611CC", VA = "0x15611CC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000311")]
	[Address(RVA = "0x1561478", Offset = "0x1561478", VA = "0x1561478")]
	private void actualizarColor(float posx, float posy, float posz, float sLife, float rLife)
	{
	}

	[Token(Token = "0x6000312")]
	[Address(RVA = "0x15615AC", Offset = "0x15615AC", VA = "0x15615AC")]
	public respiracionParticulasGranSombra()
	{
	}
}
[Token(Token = "0x2000084")]
public class BuildDateCanvasInitializationStep : ThreeDAR.StepsExecution.IStep
{
	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private GameObject buildDateCanvas;

	[Token(Token = "0x6000313")]
	[Address(RVA = "0xCBD5E4", Offset = "0xCBD5E4", VA = "0xCBD5E4")]
	public BuildDateCanvasInitializationStep(GameObject buildDateCanvas)
	{
	}

	[Token(Token = "0x6000314")]
	[Address(RVA = "0xCBD610", Offset = "0xCBD610", VA = "0xCBD610", Slot = "4")]
	public bool Execute(float deltaTime)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000085")]
public class CacheSceneDataInitializationStep : ThreeDAR.StepsExecution.IStep
{
	[Token(Token = "0x6000315")]
	[Address(RVA = "0xCBE61C", Offset = "0xCBE61C", VA = "0xCBE61C", Slot = "4")]
	public bool Execute(float deltaTime)
	{
		return default(bool);
	}

	[Token(Token = "0x6000316")]
	[Address(RVA = "0xCBE778", Offset = "0xCBE778", VA = "0xCBE778")]
	public CacheSceneDataInitializationStep()
	{
	}
}
[Token(Token = "0x2000086")]
public class CameraRecenterListenerInitializationStep : ThreeDAR.StepsExecution.IStep
{
	[Token(Token = "0x6000317")]
	[Address(RVA = "0xB58720", Offset = "0xB58720", VA = "0xB58720", Slot = "4")]
	public bool Execute(float deltaTime)
	{
		return default(bool);
	}

	[Token(Token = "0x6000318")]
	[Address(RVA = "0xB588B4", Offset = "0xB588B4", VA = "0xB588B4")]
	public CameraRecenterListenerInitializationStep()
	{
	}
}
[Token(Token = "0x2000087")]
public class DelayInitializationStep : ThreeDAR.StepsExecution.IStep
{
	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private float elapsedTime;

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private float delayInSeconds;

	[Token(Token = "0x6000319")]
	[Address(RVA = "0xAECDC0", Offset = "0xAECDC0", VA = "0xAECDC0")]
	public DelayInitializationStep(float delayInSeconds)
	{
	}

	[Token(Token = "0x600031A")]
	[Address(RVA = "0xAECDF4", Offset = "0xAECDF4", VA = "0xAECDF4", Slot = "4")]
	public bool Execute(float deltaTime)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000088")]
public class FPSCanvasInitializationStep : ThreeDAR.StepsExecution.IStep
{
	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private GameObject fpsCanvas;

	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject fpsCanvasVR;

	[Token(Token = "0x600031B")]
	[Address(RVA = "0xAF5454", Offset = "0xAF5454", VA = "0xAF5454")]
	public FPSCanvasInitializationStep(GameObject fpsCanvas, GameObject fpsCanvasVR)
	{
	}

	[Token(Token = "0x600031C")]
	[Address(RVA = "0xAF548C", Offset = "0xAF548C", VA = "0xAF548C", Slot = "4")]
	public bool Execute(float deltaTime)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000089")]
public class LoadGlobalAssetsInitializationStep : ThreeDAR.StepsExecution.IStep
{
	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private AssetPack globalAssetPack;

	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool isLoading;

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool isLoaded;

	[Token(Token = "0x600031D")]
	[Address(RVA = "0xB47A14", Offset = "0xB47A14", VA = "0xB47A14")]
	public LoadGlobalAssetsInitializationStep(AssetPack globalAssetPack)
	{
	}

	[Token(Token = "0x600031E")]
	[Address(RVA = "0xB50BC8", Offset = "0xB50BC8", VA = "0xB50BC8", Slot = "4")]
	public bool Execute(float deltaTime)
	{
		return default(bool);
	}

	[Token(Token = "0x600031F")]
	[Address(RVA = "0xB50CBC", Offset = "0xB50CBC", VA = "0xB50CBC")]
	private void OnPackLoaded()
	{
	}
}
[Token(Token = "0x200008A")]
public class SetupEditorTimelineInitializationStep : ThreeDAR.StepsExecution.IStep
{
	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private ITimelineGenerator timelineGenerator;

	[Token(Token = "0x6000320")]
	[Address(RVA = "0xB17D14", Offset = "0xB17D14", VA = "0xB17D14")]
	public SetupEditorTimelineInitializationStep()
	{
	}

	[Token(Token = "0x6000321")]
	[Address(RVA = "0xB17D80", Offset = "0xB17D80", VA = "0xB17D80", Slot = "4")]
	public bool Execute(float deltaTime)
	{
		return default(bool);
	}
}
[Token(Token = "0x200008B")]
public class SetupFFRInitializationStep : ThreeDAR.StepsExecution.IStep
{
	[Token(Token = "0x6000322")]
	[Address(RVA = "0xB17F84", Offset = "0xB17F84", VA = "0xB17F84", Slot = "4")]
	public bool Execute(float deltaTime)
	{
		return default(bool);
	}

	[Token(Token = "0x6000323")]
	[Address(RVA = "0xB181F4", Offset = "0xB181F4", VA = "0xB181F4")]
	public SetupFFRInitializationStep()
	{
	}
}
[Token(Token = "0x200008C")]
public class SetupRuntimeTimelineInitializationStep : ThreeDAR.StepsExecution.IStep
{
	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private ITimelineGenerator timelineGenerator;

	[Token(Token = "0x6000324")]
	[Address(RVA = "0xB181FC", Offset = "0xB181FC", VA = "0xB181FC")]
	public SetupRuntimeTimelineInitializationStep(double sceneLoadTimeOffset)
	{
	}

	[Token(Token = "0x6000325")]
	[Address(RVA = "0xB18278", Offset = "0xB18278", VA = "0xB18278", Slot = "4")]
	public bool Execute(float deltaTime)
	{
		return default(bool);
	}
}
[Token(Token = "0x200008D")]
public class SetupShadersInitializationStep : ThreeDAR.StepsExecution.IStep
{
	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private AssetReference shaderVariantAsset;

	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool isLoading;

	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool isFinished;

	[Token(Token = "0x6000326")]
	[Address(RVA = "0xB18464", Offset = "0xB18464", VA = "0xB18464")]
	public SetupShadersInitializationStep(AssetReference shaderVariantAsset)
	{
	}

	[Token(Token = "0x6000327")]
	[Address(RVA = "0xB18490", Offset = "0xB18490", VA = "0xB18490", Slot = "4")]
	public bool Execute(float deltaTime)
	{
		return default(bool);
	}

	[Token(Token = "0x6000328")]
	[Address(RVA = "0xB185B0", Offset = "0xB185B0", VA = "0xB185B0")]
	private void OnVariantsCollectionLoaded(AsyncOperationHandle<ShaderVariantCollection> op)
	{
	}
}
[Token(Token = "0x200008E")]
public class ApplicationManager : MonoBehaviour
{
	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ApplicationManager Instance;

	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x872C2C", Offset = "0x872C2C")]
	[SerializeField]
	private FSMInitializer gameFSMInitializer;

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private SettingsHolder settingsHolder;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string appId;

	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x872C78", Offset = "0x872C78")]
	private GameSettings <Settings>k__BackingField;

	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x872C88", Offset = "0x872C88")]
	private BuildOutput <BuildOutput>k__BackingField;

	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x872C98", Offset = "0x872C98")]
	private ApplicationSettings.Quality <Quality>k__BackingField;

	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x872CA8", Offset = "0x872CA8")]
	private OVRPlugin.SystemHeadset <Headset>k__BackingField;

	[Token(Token = "0x1700005F")]
	public ApplicationSettings.Pipeline ApplicationPipeline
	{
		[Token(Token = "0x6000329")]
		[Address(RVA = "0xCB9E0C", Offset = "0xCB9E0C", VA = "0xCB9E0C")]
		get
		{
			return default(ApplicationSettings.Pipeline);
		}
	}

	[Token(Token = "0x17000060")]
	public GameSettings Settings
	{
		[Token(Token = "0x600032A")]
		[Address(RVA = "0xCB9E14", Offset = "0xCB9E14", VA = "0xCB9E14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87AEFC", Offset = "0x87AEFC")]
		get
		{
			return null;
		}
		[Token(Token = "0x600032B")]
		[Address(RVA = "0xCB9E1C", Offset = "0xCB9E1C", VA = "0xCB9E1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87AF0C", Offset = "0x87AF0C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000061")]
	public BuildOutput BuildOutput
	{
		[Token(Token = "0x600032C")]
		[Address(RVA = "0xCB9E24", Offset = "0xCB9E24", VA = "0xCB9E24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87AF1C", Offset = "0x87AF1C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600032D")]
		[Address(RVA = "0xCB9E2C", Offset = "0xCB9E2C", VA = "0xCB9E2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87AF2C", Offset = "0x87AF2C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000062")]
	public ApplicationSettings.Quality Quality
	{
		[Token(Token = "0x600032E")]
		[Address(RVA = "0xCB9E34", Offset = "0xCB9E34", VA = "0xCB9E34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87AF3C", Offset = "0x87AF3C")]
		get
		{
			return default(ApplicationSettings.Quality);
		}
		[Token(Token = "0x600032F")]
		[Address(RVA = "0xCB9E3C", Offset = "0xCB9E3C", VA = "0xCB9E3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87AF4C", Offset = "0x87AF4C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000063")]
	public OVRPlugin.SystemHeadset Headset
	{
		[Token(Token = "0x6000330")]
		[Address(RVA = "0xCB9E44", Offset = "0xCB9E44", VA = "0xCB9E44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87AF5C", Offset = "0x87AF5C")]
		get
		{
			return default(OVRPlugin.SystemHeadset);
		}
		[Token(Token = "0x6000331")]
		[Address(RVA = "0xCB9E4C", Offset = "0xCB9E4C", VA = "0xCB9E4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87AF6C", Offset = "0x87AF6C")]
		private set
		{
		}
	}

	[Token(Token = "0x6000332")]
	[Address(RVA = "0xCB9E54", Offset = "0xCB9E54", VA = "0xCB9E54")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000333")]
	[Address(RVA = "0xCB9EA8", Offset = "0xCB9EA8", VA = "0xCB9EA8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000334")]
	[Address(RVA = "0xCBA04C", Offset = "0xCBA04C", VA = "0xCBA04C")]
	private void Init()
	{
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0xCB9FD0", Offset = "0xCB9FD0", VA = "0xCB9FD0")]
	private void InitWithChecks()
	{
	}

	[Token(Token = "0x6000336")]
	[Address(RVA = "0xCB9F5C", Offset = "0xCB9F5C", VA = "0xCB9F5C")]
	private void LoadSettings()
	{
	}

	[Token(Token = "0x6000337")]
	[Address(RVA = "0xCBA548", Offset = "0xCBA548", VA = "0xCBA548")]
	private void ReadSettingsFromFile()
	{
	}

	[Token(Token = "0x6000338")]
	[Address(RVA = "0xCBA068", Offset = "0xCBA068", VA = "0xCBA068")]
	private void QualityBasedOnHeadsetCheck()
	{
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0xCBA158", Offset = "0xCBA158", VA = "0xCBA158")]
	private void ExpirationDateCheck()
	{
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0xCBA3B0", Offset = "0xCBA3B0", VA = "0xCBA3B0")]
	private void EntitlementCheckInit()
	{
	}

	[Token(Token = "0x600033B")]
	[Address(RVA = "0xCBA600", Offset = "0xCBA600", VA = "0xCBA600")]
	private void EntitlementCallback(Message msg)
	{
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0xCBA6E4", Offset = "0xCBA6E4", VA = "0xCBA6E4")]
	public ApplicationManager()
	{
	}
}
[Token(Token = "0x200008F")]
public enum PauseReason
{
	[Token(Token = "0x40002DB")]
	AppFocus,
	[Token(Token = "0x40002DC")]
	UserInput,
	[Token(Token = "0x40002DD")]
	DevInput
}
[Token(Token = "0x2000090")]
public class AkPackagesLoader : MonoBehaviour
{
	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool loadOnAwake;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private List<string> packagesToLoad;

	[Token(Token = "0x600033D")]
	[Address(RVA = "0xDEE8DC", Offset = "0xDEE8DC", VA = "0xDEE8DC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600033E")]
	[Address(RVA = "0xDEE950", Offset = "0xDEE950", VA = "0xDEE950")]
	public void LoadPackages()
	{
	}

	[Token(Token = "0x600033F")]
	[Address(RVA = "0xDEEA70", Offset = "0xDEEA70", VA = "0xDEEA70")]
	private void AddBasePath()
	{
	}

	[Token(Token = "0x6000340")]
	[Address(RVA = "0xDEEC00", Offset = "0xDEEC00", VA = "0xDEEC00")]
	private void LoadPackageFile(string packageName)
	{
	}

	[Token(Token = "0x6000341")]
	[Address(RVA = "0xDEEDA4", Offset = "0xDEEDA4", VA = "0xDEEDA4")]
	public AkPackagesLoader()
	{
	}
}
[Token(Token = "0x2000091")]
public class SFX_HandPosition : MonoBehaviour
{
	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Hand handType;

	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private HandController handController;

	[Token(Token = "0x6000342")]
	[Address(RVA = "0xB12C10", Offset = "0xB12C10", VA = "0xB12C10")]
	private void Start()
	{
	}

	[Token(Token = "0x6000343")]
	[Address(RVA = "0xB12C80", Offset = "0xB12C80", VA = "0xB12C80")]
	private void Update()
	{
	}

	[Token(Token = "0x6000344")]
	[Address(RVA = "0xB12DB8", Offset = "0xB12DB8", VA = "0xB12DB8")]
	public SFX_HandPosition()
	{
	}
}
[Token(Token = "0x2000092")]
public class ApplicationFocusTracker : MonoBehaviour
{
	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool wasTracked;

	[Token(Token = "0x17000064")]
	private bool IsTracked
	{
		[Token(Token = "0x6000345")]
		[Address(RVA = "0xCB9D0C", Offset = "0xCB9D0C", VA = "0xCB9D0C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000346")]
	[Address(RVA = "0xCB9D14", Offset = "0xCB9D14", VA = "0xCB9D14")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000347")]
	[Address(RVA = "0xCB9D40", Offset = "0xCB9D40", VA = "0xCB9D40")]
	private void Update()
	{
	}

	[Token(Token = "0x6000348")]
	[Address(RVA = "0xCB9E04", Offset = "0xCB9E04", VA = "0xCB9E04")]
	public ApplicationFocusTracker()
	{
	}
}
[Token(Token = "0x2000093")]
public class AudioReferenceManager : MonoBehaviour
{
	[Token(Token = "0x2000094")]
	public enum PaperBirdsAudioType
	{
		[Token(Token = "0x40002E9")]
		VoiceOver,
		[Token(Token = "0x40002EA")]
		Bandoneon,
		[Token(Token = "0x40002EB")]
		Crystal
	}

	[Token(Token = "0x40002E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioSource voiceOverAS;

	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioSource bandoneonAS;

	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioSource crystalAS;

	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private TimelineAsset audioTimeline;

	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AudioReferenceManager Instance;

	[Token(Token = "0x6000349")]
	[Address(RVA = "0xCBAD5C", Offset = "0xCBAD5C", VA = "0xCBAD5C")]
	public void Awake()
	{
	}

	[Token(Token = "0x600034A")]
	[Address(RVA = "0xCBAE28", Offset = "0xCBAE28", VA = "0xCBAE28")]
	public AudioPlayableAsset GetClip(string clipName)
	{
		return null;
	}

	[Token(Token = "0x600034B")]
	[Address(RVA = "0xCBB51C", Offset = "0xCBB51C", VA = "0xCBB51C")]
	public AudioSource GetAudioSourceByType(PaperBirdsAudioType audioType)
	{
		return null;
	}

	[Token(Token = "0x600034C")]
	[Address(RVA = "0xCBB554", Offset = "0xCBB554", VA = "0xCBB554")]
	public AudioReferenceManager()
	{
	}
}
[Token(Token = "0x2000095")]
public class CameraAngleActivation : MonoBehaviour
{
	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject objectToToggle;

	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x872D38", Offset = "0x872D38")]
	[SerializeField]
	private float activationAngle;

	[Token(Token = "0x600034D")]
	[Address(RVA = "0xCBE780", Offset = "0xCBE780", VA = "0xCBE780")]
	private void Update()
	{
	}

	[Token(Token = "0x600034E")]
	[Address(RVA = "0xCBE8F8", Offset = "0xCBE8F8", VA = "0xCBE8F8")]
	public CameraAngleActivation()
	{
	}
}
[Token(Token = "0x2000096")]
[DisallowMultipleComponent]
public class CameraController : MonoBehaviour
{
	[Token(Token = "0x2000097")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86EC50", Offset = "0x86EC50")]
	private sealed class <CameraAproachRoutine>d__58 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CameraController <>4__this;

		[Token(Token = "0x4000304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float distance;

		[Token(Token = "0x4000305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float duration;

		[Token(Token = "0x4000306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 <finalPos>5__2;

		[Token(Token = "0x4000307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 <iniPos>5__3;

		[Token(Token = "0x4000308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float <timer>5__4;

		[Token(Token = "0x1700006D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000373")]
			[Address(RVA = "0xB57E40", Offset = "0xB57E40", VA = "0xB57E40", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000375")]
			[Address(RVA = "0xB57EA8", Offset = "0xB57EA8", VA = "0xB57EA8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000370")]
		[Address(RVA = "0xB57BA0", Offset = "0xB57BA0", VA = "0xB57BA0")]
		[DebuggerHidden]
		public <CameraAproachRoutine>d__58(int <>1__state)
		{
		}

		[Token(Token = "0x6000371")]
		[Address(RVA = "0xB57BCC", Offset = "0xB57BCC", VA = "0xB57BCC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000372")]
		[Address(RVA = "0xB57BD0", Offset = "0xB57BD0", VA = "0xB57BD0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000374")]
		[Address(RVA = "0xB57E48", Offset = "0xB57E48", VA = "0xB57E48", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static CameraController Instance;

	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x872D78", Offset = "0x872D78")]
	[SerializeField]
	private Transform cameraRig;

	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform cameraParent;

	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Camera mainCamera;

	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AnimationCurve cameraCloseCurve;

	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x872DF4", Offset = "0x872DF4")]
	private float moveSpeed;

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private float rotationSpeed;

	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float controllerMoveSpeed;

	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform target;

	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 moveVector;

	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Vector3 lastLeftControllerPos;

	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 lastRightControllerPos;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Vector3 lastCenterControllerPos;

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 lastLeftToRightHands;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Coroutine coroutine;

	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Vector3 cameraRigSavedPos;

	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private Quaternion cameraRigSavedRot;

	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private bool targetWithRotation;

	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private int originalCulling;

	[Token(Token = "0x17000065")]
	public Camera MainCamera
	{
		[Token(Token = "0x600034F")]
		[Address(RVA = "0xCBE900", Offset = "0xCBE900", VA = "0xCBE900")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000066")]
	private float boostSpeed
	{
		[Token(Token = "0x6000350")]
		[Address(RVA = "0xCBE908", Offset = "0xCBE908", VA = "0xCBE908")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000067")]
	private float moveSpd
	{
		[Token(Token = "0x6000351")]
		[Address(RVA = "0xCBE934", Offset = "0xCBE934", VA = "0xCBE934")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000068")]
	private float rotSpd
	{
		[Token(Token = "0x6000352")]
		[Address(RVA = "0xCBE980", Offset = "0xCBE980", VA = "0xCBE980")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000069")]
	private Vector3 leftControllerPos
	{
		[Token(Token = "0x6000353")]
		[Address(RVA = "0xCBE9CC", Offset = "0xCBE9CC", VA = "0xCBE9CC")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700006A")]
	private Vector3 rightControllerPos
	{
		[Token(Token = "0x6000354")]
		[Address(RVA = "0xCBEA44", Offset = "0xCBEA44", VA = "0xCBEA44")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700006B")]
	private Vector3 centerControllerPos
	{
		[Token(Token = "0x6000355")]
		[Address(RVA = "0xCBEABC", Offset = "0xCBEABC", VA = "0xCBEABC")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700006C")]
	private Vector3 leftToRightControllers
	{
		[Token(Token = "0x6000356")]
		[Address(RVA = "0xCBEB30", Offset = "0xCBEB30", VA = "0xCBEB30")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x6000357")]
	[Address(RVA = "0xCBEBA4", Offset = "0xCBEBA4", VA = "0xCBEBA4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000358")]
	[Address(RVA = "0xCBED34", Offset = "0xCBED34", VA = "0xCBED34")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0xCBEE9C", Offset = "0xCBEE9C", VA = "0xCBEE9C")]
	public void CameraMoveForward()
	{
	}

	[Token(Token = "0x600035A")]
	[Address(RVA = "0xCBEFBC", Offset = "0xCBEFBC", VA = "0xCBEFBC")]
	public void CameraMoveBackward()
	{
	}

	[Token(Token = "0x600035B")]
	[Address(RVA = "0xCBF0DC", Offset = "0xCBF0DC", VA = "0xCBF0DC")]
	public void CameraMoveRight()
	{
	}

	[Token(Token = "0x600035C")]
	[Address(RVA = "0xCBF1FC", Offset = "0xCBF1FC", VA = "0xCBF1FC")]
	public void CameraMoveLeft()
	{
	}

	[Token(Token = "0x600035D")]
	[Address(RVA = "0xCBF31C", Offset = "0xCBF31C", VA = "0xCBF31C")]
	public void CameraMoveUp()
	{
	}

	[Token(Token = "0x600035E")]
	[Address(RVA = "0xCBF43C", Offset = "0xCBF43C", VA = "0xCBF43C")]
	public void CameraMoveDown()
	{
	}

	[Token(Token = "0x600035F")]
	[Address(RVA = "0xCBF55C", Offset = "0xCBF55C", VA = "0xCBF55C")]
	public void CameraMove(Vector3 vector)
	{
	}

	[Token(Token = "0x6000360")]
	[Address(RVA = "0xCBF634", Offset = "0xCBF634", VA = "0xCBF634")]
	public void CameraEnable()
	{
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0xCBF658", Offset = "0xCBF658", VA = "0xCBF658")]
	public void CameraDisable()
	{
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0xCBF678", Offset = "0xCBF678", VA = "0xCBF678")]
	public void CameraRotationWithMouse()
	{
	}

	[Token(Token = "0x6000363")]
	[Address(RVA = "0xCBF884", Offset = "0xCBF884", VA = "0xCBF884")]
	public void CameraRotationWithControllers()
	{
	}

	[Token(Token = "0x6000364")]
	[Address(RVA = "0xCBFDF8", Offset = "0xCBFDF8", VA = "0xCBFDF8")]
	public void CameraLookAt(Transform target)
	{
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0xCC00C0", Offset = "0xCC00C0", VA = "0xCC00C0")]
	public void CameraRecenter()
	{
	}

	[Token(Token = "0x6000366")]
	[Address(RVA = "0xCBFFB0", Offset = "0xCBFFB0", VA = "0xCBFFB0")]
	public void CameraPositionOn(Transform target)
	{
	}

	[Token(Token = "0x6000367")]
	[Address(RVA = "0xCC0180", Offset = "0xCC0180", VA = "0xCC0180")]
	public void CameraHeightOn(Transform target)
	{
	}

	[Token(Token = "0x6000368")]
	[Address(RVA = "0xCC02B4", Offset = "0xCC02B4", VA = "0xCC02B4")]
	public void RigRotationOn(Vector3 forward)
	{
	}

	[Token(Token = "0x6000369")]
	[Address(RVA = "0xCC03A0", Offset = "0xCC03A0", VA = "0xCC03A0")]
	public void CameraAproach(Transform target, float aproachTime, float aproachDistance)
	{
	}

	[Token(Token = "0x600036A")]
	[Address(RVA = "0xCC048C", Offset = "0xCC048C", VA = "0xCC048C")]
	public void CameraSetTarget(Transform target, bool withRotation = false)
	{
	}

	[Token(Token = "0x600036B")]
	[Address(RVA = "0xCC0588", Offset = "0xCC0588", VA = "0xCC0588")]
	public void CameraRemoveTargetAndResetPos()
	{
	}

	[Token(Token = "0x600036C")]
	[Address(RVA = "0xCC05D8", Offset = "0xCC05D8", VA = "0xCC05D8")]
	public void CameraRemoveTarget()
	{
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0xCBEDCC", Offset = "0xCBEDCC", VA = "0xCBEDCC")]
	private void CameraRigTarget()
	{
	}

	[Token(Token = "0x600036E")]
	[Address(RVA = "0xCC0408", Offset = "0xCC0408", VA = "0xCC0408")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x87AF7C", Offset = "0x87AF7C")]
	private IEnumerator CameraAproachRoutine(float duration = 1f, float distance = 1f)
	{
		return null;
	}

	[Token(Token = "0x600036F")]
	[Address(RVA = "0xCC05E0", Offset = "0xCC05E0", VA = "0xCC05E0")]
	public CameraController()
	{
	}
}
[Token(Token = "0x2000098")]
public class CameraEnableLookAt : MonoBehaviour
{
	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform lookAt;

	[Token(Token = "0x6000376")]
	[Address(RVA = "0xB57EB0", Offset = "0xB57EB0", VA = "0xB57EB0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0xB57FA4", Offset = "0xB57FA4", VA = "0xB57FA4")]
	public CameraEnableLookAt()
	{
	}
}
[Token(Token = "0x2000099")]
public class CameraLookAtSetter : MonoBehaviour
{
	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform lookAt;

	[Token(Token = "0x6000378")]
	[Address(RVA = "0xB57FAC", Offset = "0xB57FAC", VA = "0xB57FAC")]
	public void SetLookAt()
	{
	}

	[Token(Token = "0x6000379")]
	[Address(RVA = "0xB58120", Offset = "0xB58120", VA = "0xB58120")]
	public CameraLookAtSetter()
	{
	}
}
[Token(Token = "0x200009A")]
public class CameraPositionSetter : MonoBehaviour
{
	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform target;

	[Token(Token = "0x600037A")]
	[Address(RVA = "0xB583AC", Offset = "0xB583AC", VA = "0xB583AC")]
	public void SetPosition()
	{
	}

	[Token(Token = "0x600037B")]
	[Address(RVA = "0xB58520", Offset = "0xB58520", VA = "0xB58520")]
	public CameraPositionSetter()
	{
	}
}
[Token(Token = "0x200009B")]
public class CameraRecenterFeeder : MonoBehaviour
{
	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static CameraRecenterFeeder Instance;

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform target;

	[Token(Token = "0x1700006F")]
	public Transform Target
	{
		[Token(Token = "0x600037C")]
		[Address(RVA = "0xB58528", Offset = "0xB58528", VA = "0xB58528")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600037D")]
	[Address(RVA = "0xB585B4", Offset = "0xB585B4", VA = "0xB585B4")]
	public void Init()
	{
	}

	[Token(Token = "0x600037E")]
	[Address(RVA = "0xB58608", Offset = "0xB58608", VA = "0xB58608")]
	public void Shutdown()
	{
	}

	[Token(Token = "0x600037F")]
	[Address(RVA = "0xB5860C", Offset = "0xB5860C", VA = "0xB5860C")]
	public CameraRecenterFeeder()
	{
	}
}
[Token(Token = "0x200009C")]
public class CameraRotator : MonoBehaviour
{
	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform cameraParent;

	[Token(Token = "0x6000380")]
	[Address(RVA = "0xB58D28", Offset = "0xB58D28", VA = "0xB58D28")]
	public void RotateCamera(float angle, Vector3 axis)
	{
	}

	[Token(Token = "0x6000381")]
	[Address(RVA = "0xB58E44", Offset = "0xB58E44", VA = "0xB58E44")]
	public CameraRotator()
	{
	}
}
[Token(Token = "0x200009D")]
public class CameraTargetRemover : MonoBehaviour
{
	[Token(Token = "0x6000382")]
	[Address(RVA = "0xB59358", Offset = "0xB59358", VA = "0xB59358")]
	public void RemoveTarget()
	{
	}

	[Token(Token = "0x6000383")]
	[Address(RVA = "0xB59430", Offset = "0xB59430", VA = "0xB59430")]
	public void RemoveTargetAndResetPosition()
	{
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0xB59508", Offset = "0xB59508", VA = "0xB59508")]
	public CameraTargetRemover()
	{
	}
}
[Token(Token = "0x200009E")]
public class CameraTargetSetter : MonoBehaviour
{
	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform target;

	[Token(Token = "0x6000385")]
	[Address(RVA = "0xB59510", Offset = "0xB59510", VA = "0xB59510")]
	public void SetTarget()
	{
	}

	[Token(Token = "0x6000386")]
	[Address(RVA = "0xB59688", Offset = "0xB59688", VA = "0xB59688")]
	public CameraTargetSetter()
	{
	}
}
[Token(Token = "0x200009F")]
public class ClearDontDestroyOnLoad : MonoBehaviour
{
	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x872EC0", Offset = "0x872EC0")]
	private static ClearDontDestroyOnLoad <Instance>k__BackingField;

	[Token(Token = "0x17000070")]
	public static ClearDontDestroyOnLoad Instance
	{
		[Token(Token = "0x6000387")]
		[Address(RVA = "0xB5B064", Offset = "0xB5B064", VA = "0xB5B064")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B030", Offset = "0x87B030")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000388")]
		[Address(RVA = "0xB5B0B4", Offset = "0xB5B0B4", VA = "0xB5B0B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B040", Offset = "0x87B040")]
		private set
		{
		}
	}

	[Token(Token = "0x6000389")]
	[Address(RVA = "0xB5B108", Offset = "0xB5B108", VA = "0xB5B108")]
	private void Awake()
	{
	}

	[Token(Token = "0x600038A")]
	[Address(RVA = "0xB5B1DC", Offset = "0xB5B1DC", VA = "0xB5B1DC")]
	public void ClearDontDestroyOnLoadScene()
	{
	}

	[Token(Token = "0x600038B")]
	[Address(RVA = "0xB5B318", Offset = "0xB5B318", VA = "0xB5B318")]
	public ClearDontDestroyOnLoad()
	{
	}
}
[Token(Token = "0x20000A0")]
public class DontDestroyOnLoad : MonoBehaviour
{
	[Token(Token = "0x600038C")]
	[Address(RVA = "0xAED014", Offset = "0xAED014", VA = "0xAED014")]
	private void Awake()
	{
	}

	[Token(Token = "0x600038D")]
	[Address(RVA = "0xAED090", Offset = "0xAED090", VA = "0xAED090")]
	public DontDestroyOnLoad()
	{
	}
}
[Token(Token = "0x20000A1")]
[DisallowMultipleComponent]
public class KeyShortcuts : MonoBehaviour
{
	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static KeyShortcuts Instance;

	[Token(Token = "0x17000071")]
	private bool userExit
	{
		[Token(Token = "0x600038E")]
		[Address(RVA = "0xB4CB04", Offset = "0xB4CB04", VA = "0xB4CB04")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000072")]
	private bool userPause
	{
		[Token(Token = "0x600038F")]
		[Address(RVA = "0xB4CB10", Offset = "0xB4CB10", VA = "0xB4CB10")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000073")]
	private bool devPause
	{
		[Token(Token = "0x6000390")]
		[Address(RVA = "0xB4CBC0", Offset = "0xB4CBC0", VA = "0xB4CBC0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000074")]
	private bool timelineBackward
	{
		[Token(Token = "0x6000391")]
		[Address(RVA = "0xB4CC54", Offset = "0xB4CC54", VA = "0xB4CC54")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000075")]
	private bool timelineForward
	{
		[Token(Token = "0x6000392")]
		[Address(RVA = "0xB4CCEC", Offset = "0xB4CCEC", VA = "0xB4CCEC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000076")]
	private bool timelineBackwardFast
	{
		[Token(Token = "0x6000393")]
		[Address(RVA = "0xB4CD84", Offset = "0xB4CD84", VA = "0xB4CD84")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000077")]
	private bool timelineForwardFast
	{
		[Token(Token = "0x6000394")]
		[Address(RVA = "0xB4CE1C", Offset = "0xB4CE1C", VA = "0xB4CE1C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000078")]
	private bool cameraMoveUp
	{
		[Token(Token = "0x6000395")]
		[Address(RVA = "0xB4CEB4", Offset = "0xB4CEB4", VA = "0xB4CEB4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000079")]
	private bool cameraMoveDown
	{
		[Token(Token = "0x6000396")]
		[Address(RVA = "0xB4CEC0", Offset = "0xB4CEC0", VA = "0xB4CEC0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700007A")]
	private bool cameraMoveForward
	{
		[Token(Token = "0x6000397")]
		[Address(RVA = "0xB4CECC", Offset = "0xB4CECC", VA = "0xB4CECC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700007B")]
	private bool cameraMoveBackward
	{
		[Token(Token = "0x6000398")]
		[Address(RVA = "0xB4CED8", Offset = "0xB4CED8", VA = "0xB4CED8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700007C")]
	private bool cameraMoveRight
	{
		[Token(Token = "0x6000399")]
		[Address(RVA = "0xB4CEE4", Offset = "0xB4CEE4", VA = "0xB4CEE4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700007D")]
	private bool cameraMoveLeft
	{
		[Token(Token = "0x600039A")]
		[Address(RVA = "0xB4CEF0", Offset = "0xB4CEF0", VA = "0xB4CEF0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700007E")]
	private bool cameraRotationWithMouse
	{
		[Token(Token = "0x600039B")]
		[Address(RVA = "0xB4CEFC", Offset = "0xB4CEFC", VA = "0xB4CEFC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600039C")]
	[Address(RVA = "0xB4CF08", Offset = "0xB4CF08", VA = "0xB4CF08")]
	private void Awake()
	{
	}

	[Token(Token = "0x600039D")]
	[Address(RVA = "0xB4CFF0", Offset = "0xB4CFF0", VA = "0xB4CFF0")]
	private void Update()
	{
	}

	[Token(Token = "0x600039E")]
	[Address(RVA = "0xB4CFF4", Offset = "0xB4CFF4", VA = "0xB4CFF4")]
	private void EndUserKeyShortcuts()
	{
	}

	[Token(Token = "0x600039F")]
	[Address(RVA = "0xB4D064", Offset = "0xB4D064", VA = "0xB4D064")]
	private void DeveloperKeyShortcuts()
	{
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0xB4D2F8", Offset = "0xB4D2F8", VA = "0xB4D2F8")]
	public KeyShortcuts()
	{
	}
}
[Token(Token = "0x20000A2")]
public class MasterTimelineEvents : MonoBehaviour
{
	[Token(Token = "0x60003A1")]
	[Address(RVA = "0xB56178", Offset = "0xB56178", VA = "0xB56178")]
	public void LoadNextScene()
	{
	}

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0xB561DC", Offset = "0xB561DC", VA = "0xB561DC")]
	public void OnSceneFinish()
	{
	}

	[Token(Token = "0x60003A3")]
	[Address(RVA = "0xB56240", Offset = "0xB56240", VA = "0xB56240")]
	public void OnChapterFinish()
	{
	}

	[Token(Token = "0x60003A4")]
	[Address(RVA = "0xB562A4", Offset = "0xB562A4", VA = "0xB562A4")]
	public MasterTimelineEvents()
	{
	}
}
[Token(Token = "0x20000A3")]
public class MatchTransform : MonoBehaviour
{
	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform target;

	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x872EE0", Offset = "0x872EE0")]
	[SerializeField]
	private bool matchPosition;

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x872F2C", Offset = "0x872F2C")]
	private bool matchRotation;

	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	[SerializeField]
	private bool matchRotationX;

	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	[SerializeField]
	private bool matchRotationY;

	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private bool matchRotationZ;

	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 targetPosition;

	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Quaternion targetRotation;

	[Token(Token = "0x60003A5")]
	[Address(RVA = "0xB56CCC", Offset = "0xB56CCC", VA = "0xB56CCC")]
	private void Update()
	{
	}

	[Token(Token = "0x60003A6")]
	[Address(RVA = "0xB56E84", Offset = "0xB56E84", VA = "0xB56E84")]
	private void MatchRotation()
	{
	}

	[Token(Token = "0x60003A7")]
	[Address(RVA = "0xB56D6C", Offset = "0xB56D6C", VA = "0xB56D6C")]
	private void MatchPosition()
	{
	}

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0xB56ED8", Offset = "0xB56ED8", VA = "0xB56ED8")]
	public MatchTransform()
	{
	}
}
[Token(Token = "0x20000A4")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x86EC70", Offset = "0x86EC70")]
[ExecuteInEditMode]
public class ParticleSystemForcePlay : MonoBehaviour
{
	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	[SerializeField]
	private ParticleSystem myParticleSystem;

	[Token(Token = "0x60003A9")]
	[Address(RVA = "0xB09EDC", Offset = "0xB09EDC", VA = "0xB09EDC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003AA")]
	[Address(RVA = "0xB09F38", Offset = "0xB09F38", VA = "0xB09F38")]
	private void Update()
	{
	}

	[Token(Token = "0x60003AB")]
	[Address(RVA = "0xB09EE0", Offset = "0xB09EE0", VA = "0xB09EE0")]
	private void GetParticlesystem()
	{
	}

	[Token(Token = "0x60003AC")]
	[Address(RVA = "0xB0A008", Offset = "0xB0A008", VA = "0xB0A008")]
	public ParticleSystemForcePlay()
	{
	}
}
[Token(Token = "0x20000A5")]
public class PauseManager : MonoBehaviour
{
	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PauseManager Instance;

	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool isPaused;

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private PauseReason lastPauseReason;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Action<PauseReason> OnApplicationPause;

	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Action<PauseReason> OnApplicationResume;

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x872FE0", Offset = "0x872FE0")]
	private bool <IsEnabled>k__BackingField;

	[Token(Token = "0x1700007F")]
	public bool IsEnabled
	{
		[Token(Token = "0x60003AD")]
		[Address(RVA = "0xB0A078", Offset = "0xB0A078", VA = "0xB0A078")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B050", Offset = "0x87B050")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003AE")]
		[Address(RVA = "0xB0A080", Offset = "0xB0A080", VA = "0xB0A080")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B060", Offset = "0x87B060")]
		set
		{
		}
	}

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0xB0A08C", Offset = "0xB0A08C", VA = "0xB0A08C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0xB0A0E0", Offset = "0xB0A0E0", VA = "0xB0A0E0")]
	public void ApplicationPause(PauseReason reason)
	{
	}

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0xB0A244", Offset = "0xB0A244", VA = "0xB0A244")]
	public void ApplicationResume(PauseReason reason)
	{
	}

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0xB0A3A8", Offset = "0xB0A3A8", VA = "0xB0A3A8")]
	public void ApplicationPauseResume(PauseReason reason)
	{
	}

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0xB0A3B8", Offset = "0xB0A3B8", VA = "0xB0A3B8")]
	public PauseManager()
	{
	}
}
[Token(Token = "0x20000A6")]
public class RigReferenceManager : MonoBehaviour
{
	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform centerEye;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform leftEye;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform rightEye;

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform leftAnchor;

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Transform rightAnchor;

	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private HandController leftHand;

	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private HandController rightHand;

	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static RigReferenceManager Instance;

	[Token(Token = "0x17000080")]
	public Transform CenterEye
	{
		[Token(Token = "0x60003B4")]
		[Address(RVA = "0xB0F7FC", Offset = "0xB0F7FC", VA = "0xB0F7FC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000081")]
	public Transform LeftEye
	{
		[Token(Token = "0x60003B5")]
		[Address(RVA = "0xB0F804", Offset = "0xB0F804", VA = "0xB0F804")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000082")]
	public Transform RightEye
	{
		[Token(Token = "0x60003B6")]
		[Address(RVA = "0xB0F80C", Offset = "0xB0F80C", VA = "0xB0F80C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000083")]
	public Transform LeftAnchor
	{
		[Token(Token = "0x60003B7")]
		[Address(RVA = "0xB0F814", Offset = "0xB0F814", VA = "0xB0F814")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000084")]
	public Transform RightAnchor
	{
		[Token(Token = "0x60003B8")]
		[Address(RVA = "0xB0F81C", Offset = "0xB0F81C", VA = "0xB0F81C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0xB0F824", Offset = "0xB0F824", VA = "0xB0F824")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0xB0F8F0", Offset = "0xB0F8F0", VA = "0xB0F8F0")]
	public RigReferenceManager()
	{
	}
}
[Token(Token = "0x20000A7")]
public class Seek : MonoBehaviour
{
	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float maxSpeed;

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float steeringSpeed;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float arrivalDistance;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private bool rotationLookAtVelocity;

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 velocity;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8730A0", Offset = "0x8730A0")]
	private Transform <Target>k__BackingField;

	[Token(Token = "0x17000085")]
	public virtual Transform Target
	{
		[Token(Token = "0x60003BB")]
		[Address(RVA = "0xB16FC4", Offset = "0xB16FC4", VA = "0xB16FC4", Slot = "4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B070", Offset = "0x87B070")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003BC")]
		[Address(RVA = "0xB16FCC", Offset = "0xB16FCC", VA = "0xB16FCC", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B080", Offset = "0x87B080")]
		set
		{
		}
	}

	[Token(Token = "0x60003BD")]
	[Address(RVA = "0xB16FD4", Offset = "0xB16FD4", VA = "0xB16FD4")]
	private void Update()
	{
	}

	[Token(Token = "0x60003BE")]
	[Address(RVA = "0xB17354", Offset = "0xB17354", VA = "0xB17354")]
	public Seek()
	{
	}
}
[Token(Token = "0x20000A8")]
public class SeekLogic : MonoBehaviour
{
	[Token(Token = "0x20000A9")]
	[Flags]
	private enum AccelerationModulation
	{
		[Token(Token = "0x4000346")]
		velocity = 1,
		[Token(Token = "0x4000347")]
		force = 2,
		[Token(Token = "0x4000348")]
		speed = 4
	}

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8730B0", Offset = "0x8730B0")]
	private float maxVelocity;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float maxForce;

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float maxSpeed;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float proximityTreshHold;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool rotateTowardsVelocity;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	[SerializeField]
	private bool useStopDistance;

	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float stopDistance;

	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private bool endSeekOnTargetReach;

	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float seekEndDistance;

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private bool animateAcceleration;

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private AccelerationModulation accelerationModulationType;

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float timeToFullyAccelerate;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private AnimationCurve accelerationAnimationCurve;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform target;

	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float velocity;

	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float force;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float speed;

	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 currentVelocity;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 desiredVelocity;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Vector3 steering;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float currentSpeedAnimationTimer;

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Action OnSeekEnded;

	[Token(Token = "0x17000086")]
	public Transform Target
	{
		[Token(Token = "0x60003BF")]
		[Address(RVA = "0xB1737C", Offset = "0xB1737C", VA = "0xB1737C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003C0")]
		[Address(RVA = "0xB17384", Offset = "0xB17384", VA = "0xB17384")]
		set
		{
		}
	}

	[Token(Token = "0x17000087")]
	public bool EndSeekOnTargetReach
	{
		[Token(Token = "0x60003C1")]
		[Address(RVA = "0xB17424", Offset = "0xB17424", VA = "0xB17424")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003C2")]
		[Address(RVA = "0xB1742C", Offset = "0xB1742C", VA = "0xB1742C")]
		set
		{
		}
	}

	[Token(Token = "0x60003C3")]
	[Address(RVA = "0xB17438", Offset = "0xB17438", VA = "0xB17438")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003C4")]
	[Address(RVA = "0xB1746C", Offset = "0xB1746C", VA = "0xB1746C")]
	private void Update()
	{
	}

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0xB175D4", Offset = "0xB175D4", VA = "0xB175D4")]
	private void UpdateAcceleration()
	{
	}

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0xB17724", Offset = "0xB17724", VA = "0xB17724")]
	private void UpdateVelocity()
	{
	}

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0xB179B8", Offset = "0xB179B8", VA = "0xB179B8")]
	private void ApplyMovement()
	{
	}

	[Token(Token = "0x60003C8")]
	[Address(RVA = "0xB17B9C", Offset = "0xB17B9C", VA = "0xB17B9C")]
	public void SpeedUpSeek(float speedMultiplier = 2f)
	{
	}

	[Token(Token = "0x60003C9")]
	[Address(RVA = "0xB17B50", Offset = "0xB17B50", VA = "0xB17B50")]
	public void EndSeek()
	{
	}

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0xB17BB8", Offset = "0xB17BB8", VA = "0xB17BB8")]
	public SeekLogic()
	{
	}
}
[Token(Token = "0x20000AA")]
[ExecuteAlways]
public class ShaderPositionFeeder : MonoBehaviour
{
	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Renderer renderer;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform positionRefenrece;

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0xB18E90", Offset = "0xB18E90", VA = "0xB18E90")]
	private void Update()
	{
	}

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0xB18FE0", Offset = "0xB18FE0", VA = "0xB18FE0")]
	public ShaderPositionFeeder()
	{
	}
}
[Token(Token = "0x20000AB")]
public class SubSceneLoader : MonoBehaviour
{
	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AssetReference assetsToLoad;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool linkTimeline;

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AsyncOperationHandle<SceneInstance> sceneLoadedOperation;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Scene rootScene;

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Scene loadedScene;

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0xB1BD6C", Offset = "0xB1BD6C", VA = "0xB1BD6C")]
	private void Start()
	{
	}

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0xB1BF00", Offset = "0xB1BF00", VA = "0xB1BF00")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0xB1BE14", Offset = "0xB1BE14", VA = "0xB1BE14")]
	private void LoadScene()
	{
	}

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0xB1C16C", Offset = "0xB1C16C", VA = "0xB1C16C")]
	private void OnSceneLoaded(AsyncOperationHandle<SceneInstance> operation)
	{
	}

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0xB1C18C", Offset = "0xB1C18C", VA = "0xB1C18C")]
	private void LinkTimelines()
	{
	}

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0xB1C9AC", Offset = "0xB1C9AC", VA = "0xB1C9AC")]
	public SubSceneLoader()
	{
	}
}
[Token(Token = "0x20000AC")]
public class TestScenesLookat : MonoBehaviour
{
	[Token(Token = "0x20000AD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86ED04", Offset = "0x86ED04")]
	private sealed class <Start>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TestScenesLookat <>4__this;

		[Token(Token = "0x17000088")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003D8")]
			[Address(RVA = "0xB214A8", Offset = "0xB214A8", VA = "0xB214A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000089")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003DA")]
			[Address(RVA = "0xB21510", Offset = "0xB21510", VA = "0xB21510", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003D5")]
		[Address(RVA = "0xB213AC", Offset = "0xB213AC", VA = "0xB213AC")]
		[DebuggerHidden]
		public <Start>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x60003D6")]
		[Address(RVA = "0xB213E0", Offset = "0xB213E0", VA = "0xB213E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003D7")]
		[Address(RVA = "0xB213E4", Offset = "0xB213E4", VA = "0xB213E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003D9")]
		[Address(RVA = "0xB214B0", Offset = "0xB214B0", VA = "0xB214B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform lookAt;

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0xB2133C", Offset = "0xB2133C", VA = "0xB2133C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x87B090", Offset = "0x87B090")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60003D4")]
	[Address(RVA = "0xB213D8", Offset = "0xB213D8", VA = "0xB213D8")]
	public TestScenesLookat()
	{
	}
}
[Token(Token = "0x20000AE")]
public class TriggerEvents : MonoBehaviour, IInteraction
{
	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float timeToFullyActivate;

	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private UnityEvent triggerEvents;

	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Collider[] colliders;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float timer;

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool isFullyActivated;

	[Token(Token = "0x1700008A")]
	public float ActivationCompletion
	{
		[Token(Token = "0x60003DB")]
		[Address(RVA = "0x155B668", Offset = "0x155B668", VA = "0x155B668")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0x155B678", Offset = "0x155B678", VA = "0x155B678", Slot = "4")]
	public void Play()
	{
	}

	[Token(Token = "0x60003DD")]
	[Address(RVA = "0x155B774", Offset = "0x155B774", VA = "0x155B774", Slot = "5")]
	public void ShutDown()
	{
	}

	[Token(Token = "0x60003DE")]
	[Address(RVA = "0x155B680", Offset = "0x155B680", VA = "0x155B680")]
	private void ToggleCollider(bool colliderState)
	{
	}

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0x155B77C", Offset = "0x155B77C", VA = "0x155B77C")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0x155B7F0", Offset = "0x155B7F0", VA = "0x155B7F0")]
	public TriggerEvents()
	{
	}
}
[Token(Token = "0x20000AF")]
public class VROverlay : MonoBehaviour
{
	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static VROverlay Instance;

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private OVROverlay loadingTextOverlay;

	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private OVROverlay loadingCubeOverlay;

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float loadingTextDistance;

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0x155DDE0", Offset = "0x155DDE0", VA = "0x155DDE0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003E2")]
	[Address(RVA = "0x155D24C", Offset = "0x155D24C", VA = "0x155D24C")]
	public void Show(bool activateLogo)
	{
	}

	[Token(Token = "0x60003E3")]
	[Address(RVA = "0x155DE34", Offset = "0x155DE34", VA = "0x155DE34")]
	public void Hide()
	{
	}

	[Token(Token = "0x60003E4")]
	[Address(RVA = "0x155DE78", Offset = "0x155DE78", VA = "0x155DE78")]
	public VROverlay()
	{
	}
}
[Token(Token = "0x20000B0")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x86ED14", Offset = "0x86ED14")]
public class LightingSettings : ScriptableObject
{
	[Token(Token = "0x60003E5")]
	[Address(RVA = "0xB50BB8", Offset = "0xB50BB8", VA = "0xB50BB8")]
	public LightingSettings()
	{
	}
}
[Token(Token = "0x20000B1")]
[ExecuteInEditMode]
public class LightmappingAutomaticShadowCast : MonoBehaviour
{
	[Token(Token = "0x60003E6")]
	[Address(RVA = "0xB50BC0", Offset = "0xB50BC0", VA = "0xB50BC0")]
	public LightmappingAutomaticShadowCast()
	{
	}
}
[Token(Token = "0x20000B2")]
public class PlayableDirectorReferenceFiller : MonoBehaviour
{
	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private PlayableDirector director;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject target;

	[Token(Token = "0x60003E7")]
	[Address(RVA = "0xB0D5C4", Offset = "0xB0D5C4", VA = "0xB0D5C4")]
	private void Fill()
	{
	}

	[Token(Token = "0x60003E8")]
	[Address(RVA = "0xB0DC6C", Offset = "0xB0DC6C", VA = "0xB0DC6C")]
	public PlayableDirectorReferenceFiller()
	{
	}
}
[Token(Token = "0x20000B3")]
public class UnityAnimationRecorder : MonoBehaviour
{
	[Token(Token = "0x60003E9")]
	[Address(RVA = "0x155CF98", Offset = "0x155CF98", VA = "0x155CF98")]
	public UnityAnimationRecorder()
	{
	}
}
[Token(Token = "0x20000B4")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x86ED70", Offset = "0x86ED70")]
public class EpisodeData : ScriptableObject
{
	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<SceneNames> scenes;

	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private List<SceneRepresentation> sceneRepresentations;

	[Token(Token = "0x1700008B")]
	public List<SceneNames> Scenes
	{
		[Token(Token = "0x60003EA")]
		[Address(RVA = "0xAF2ED4", Offset = "0xAF2ED4", VA = "0xAF2ED4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700008C")]
	public List<SceneRepresentation> SceneRepresentations
	{
		[Token(Token = "0x60003EB")]
		[Address(RVA = "0xAF2EDC", Offset = "0xAF2EDC", VA = "0xAF2EDC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003EC")]
	[Address(RVA = "0xAF2EE4", Offset = "0xAF2EE4", VA = "0xAF2EE4")]
	public EpisodeData()
	{
	}
}
[Token(Token = "0x20000B5")]
public static class VectorExtentions
{
	[Token(Token = "0x60003ED")]
	[Address(RVA = "0x155DE88", Offset = "0x155DE88", VA = "0x155DE88")]
	public static Vector2 XZ(this Vector3 v)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0x155DEB8", Offset = "0x155DEB8", VA = "0x155DEB8")]
	public static Vector3 XOZ(this Vector3 v)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0x155DEF0", Offset = "0x155DEF0", VA = "0x155DEF0")]
	public static Vector4 XYZw(this Vector3 v, float value)
	{
		return default(Vector4);
	}
}
[Token(Token = "0x20000B6")]
public class FSM : MonoBehaviour, IFSM
{
	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<string, IState> states;

	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private IState currentState;

	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8732AC", Offset = "0x8732AC")]
	private string <StartState>k__BackingField;

	[Token(Token = "0x1700008D")]
	public string StartState
	{
		[Token(Token = "0x60003F0")]
		[Address(RVA = "0xAF55EC", Offset = "0xAF55EC", VA = "0xAF55EC", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B174", Offset = "0x87B174")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003F1")]
		[Address(RVA = "0xAF55F4", Offset = "0xAF55F4", VA = "0xAF55F4", Slot = "6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B184", Offset = "0x87B184")]
		set
		{
		}
	}

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0xAF55FC", Offset = "0xAF55FC", VA = "0xAF55FC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0xAF5608", Offset = "0xAF5608", VA = "0xAF5608")]
	private void Update()
	{
	}

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0xAF5700", Offset = "0xAF5700", VA = "0xAF5700")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60003F5")]
	[Address(RVA = "0xAF57BC", Offset = "0xAF57BC", VA = "0xAF57BC")]
	public void Init()
	{
	}

	[Token(Token = "0x60003F6")]
	[Address(RVA = "0xAF5630", Offset = "0xAF5630", VA = "0xAF5630", Slot = "7")]
	public void Tick(float deltaTime)
	{
	}

	[Token(Token = "0x60003F7")]
	[Address(RVA = "0xAF5998", Offset = "0xAF5998", VA = "0xAF5998", Slot = "4")]
	public void ChangeState(string stateName)
	{
	}

	[Token(Token = "0x60003F8")]
	[Address(RVA = "0xAF5B64", Offset = "0xAF5B64", VA = "0xAF5B64", Slot = "8")]
	public void AddState(string stateName, IState state)
	{
	}

	[Token(Token = "0x60003F9")]
	[Address(RVA = "0xAF5BD4", Offset = "0xAF5BD4", VA = "0xAF5BD4")]
	public FSM()
	{
	}
}
[Token(Token = "0x20000B7")]
public class FSMProxy
{
	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IFSM fsm;

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0xAF596C", Offset = "0xAF596C", VA = "0xAF596C")]
	public FSMProxy(IFSM fsm)
	{
	}

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0xAF64D8", Offset = "0xAF64D8", VA = "0xAF64D8")]
	public void StateChangeRequest(string stateName)
	{
	}
}
[Token(Token = "0x20000B8")]
public interface IFSM
{
	[Token(Token = "0x60003FC")]
	void ChangeState(string stateName);
}
[Token(Token = "0x20000B9")]
public interface IState
{
	[Token(Token = "0x60003FD")]
	void Init(FSMProxy proxy);

	[Token(Token = "0x60003FE")]
	void OnStateEnter();

	[Token(Token = "0x60003FF")]
	void OnStateUpdate(float deltaTime);

	[Token(Token = "0x6000400")]
	void OnStateExit();
}
[Token(Token = "0x20000BA")]
public abstract class MonoBehaviourState : MonoBehaviour, IState
{
	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected FSMProxy proxy;

	[Token(Token = "0x6000401")]
	[Address(RVA = "0xF6AF2C", Offset = "0xF6AF2C", VA = "0xF6AF2C", Slot = "8")]
	public virtual void Init(FSMProxy proxy)
	{
	}

	[Token(Token = "0x6000402")]
	public abstract void OnStateEnter();

	[Token(Token = "0x6000403")]
	public abstract void OnStateUpdate(float deltaTime);

	[Token(Token = "0x6000404")]
	public abstract void OnStateExit();

	[Token(Token = "0x6000405")]
	[Address(RVA = "0xF6AF24", Offset = "0xF6AF24", VA = "0xF6AF24")]
	protected MonoBehaviourState()
	{
	}
}
[Token(Token = "0x20000BB")]
public abstract class State : IState
{
	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	protected FSMProxy proxy;

	[Token(Token = "0x6000406")]
	[Address(RVA = "0xB1B7B8", Offset = "0xB1B7B8", VA = "0xB1B7B8", Slot = "8")]
	public virtual void Init(FSMProxy proxy)
	{
	}

	[Token(Token = "0x6000407")]
	public abstract void OnStateEnter();

	[Token(Token = "0x6000408")]
	public abstract void OnStateUpdate(float deltaTime);

	[Token(Token = "0x6000409")]
	public abstract void OnStateExit();

	[Token(Token = "0x600040A")]
	[Address(RVA = "0xB19014", Offset = "0xB19014", VA = "0xB19014")]
	protected State()
	{
	}
}
[Token(Token = "0x20000BC")]
public class SubFSM : IFSM, IState
{
	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Dictionary<string, IState> states;

	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private IState currentState;

	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private FSMProxy proxy;

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8732BC", Offset = "0x8732BC")]
	private string <StartState>k__BackingField;

	[Token(Token = "0x1700008E")]
	public string StartState
	{
		[Token(Token = "0x600040B")]
		[Address(RVA = "0xB1B7C0", Offset = "0xB1B7C0", VA = "0xB1B7C0", Slot = "9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B194", Offset = "0x87B194")]
		get
		{
			return null;
		}
		[Token(Token = "0x600040C")]
		[Address(RVA = "0xB1B7C8", Offset = "0xB1B7C8", VA = "0xB1B7C8", Slot = "10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B1A4", Offset = "0x87B1A4")]
		set
		{
		}
	}

	[Token(Token = "0x600040D")]
	[Address(RVA = "0xB1B7D0", Offset = "0xB1B7D0", VA = "0xB1B7D0", Slot = "5")]
	public void Init(FSMProxy proxy)
	{
	}

	[Token(Token = "0x600040E")]
	[Address(RVA = "0xB1B964", Offset = "0xB1B964", VA = "0xB1B964", Slot = "6")]
	public void OnStateEnter()
	{
	}

	[Token(Token = "0x600040F")]
	[Address(RVA = "0xB1BB00", Offset = "0xB1BB00", VA = "0xB1BB00", Slot = "8")]
	public void OnStateExit()
	{
	}

	[Token(Token = "0x6000410")]
	[Address(RVA = "0xB1BBB8", Offset = "0xB1BBB8", VA = "0xB1BBB8", Slot = "7")]
	public void OnStateUpdate(float deltaTime)
	{
	}

	[Token(Token = "0x6000411")]
	[Address(RVA = "0xB1BBBC", Offset = "0xB1BBBC", VA = "0xB1BBBC", Slot = "11")]
	public void Tick(float deltaTime)
	{
	}

	[Token(Token = "0x6000412")]
	[Address(RVA = "0xB1B96C", Offset = "0xB1B96C", VA = "0xB1B96C", Slot = "4")]
	public void ChangeState(string stateName)
	{
	}

	[Token(Token = "0x6000413")]
	[Address(RVA = "0xB1BC8C", Offset = "0xB1BC8C", VA = "0xB1BC8C", Slot = "12")]
	public void AddState(string stateName, IState state)
	{
	}

	[Token(Token = "0x6000414")]
	[Address(RVA = "0xB1BCFC", Offset = "0xB1BCFC", VA = "0xB1BCFC")]
	public SubFSM()
	{
	}
}
[Token(Token = "0x20000BD")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x86EDCC", Offset = "0x86EDCC")]
public class FSMInitializer : MonoBehaviour
{
	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private MonoBehaviourState initializationState;

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private MonoBehaviourState menuState;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AssetPack dialogueAssetPack;

	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8732FC", Offset = "0x8732FC")]
	[SerializeField]
	private List<BaseAsset> editorAssetsToLoad;

	[Token(Token = "0x6000415")]
	[Address(RVA = "0xAF5C44", Offset = "0xAF5C44", VA = "0xAF5C44")]
	public void Init()
	{
	}

	[Token(Token = "0x6000416")]
	[Address(RVA = "0xAF5E74", Offset = "0xAF5E74", VA = "0xAF5E74")]
	private IState GetRuntimePlayChapterState()
	{
		return null;
	}

	[Token(Token = "0x6000417")]
	[Address(RVA = "0xAF6374", Offset = "0xAF6374", VA = "0xAF6374")]
	private IState GetEditorPlayChapterState()
	{
		return null;
	}

	[Token(Token = "0x6000418")]
	[Address(RVA = "0xAF64D0", Offset = "0xAF64D0", VA = "0xAF64D0")]
	public FSMInitializer()
	{
	}
}
[Token(Token = "0x20000BE")]
public enum ApplicationStates
{
	[Token(Token = "0x4000370")]
	InitializationState = 0,
	[Token(Token = "0x4000371")]
	MenuState = 1,
	[Token(Token = "0x4000372")]
	PlayChapterState = 2,
	[Token(Token = "0x4000373")]
	InitializeEpisodeState = 3,
	[Token(Token = "0x4000374")]
	EditorInitializeEpisodeState = 3,
	[Token(Token = "0x4000375")]
	LoadNextSceneAssetsState = 4,
	[Token(Token = "0x4000376")]
	LoadNextSceneState = 5,
	[Token(Token = "0x4000377")]
	ShutdownCurrentSceneState = 6,
	[Token(Token = "0x4000378")]
	InitializeSceneState = 7,
	[Token(Token = "0x4000379")]
	UnloadPreviousSceneState = 8,
	[Token(Token = "0x400037A")]
	JumpToSceneState = 9,
	[Token(Token = "0x400037B")]
	JumpToMenuState = 10,
	[Token(Token = "0x400037C")]
	UnloadEverythingState = 11
}
[Token(Token = "0x20000BF")]
public class InitializationState : MonoBehaviourState
{
	[Token(Token = "0x20000C0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86EE30", Offset = "0x86EE30")]
	private sealed class <ActivateCompositorOverlay>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InitializationState <>4__this;

		[Token(Token = "0x1700008F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000428")]
			[Address(RVA = "0xB47CD0", Offset = "0xB47CD0", VA = "0xB47CD0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000090")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600042A")]
			[Address(RVA = "0xB47D38", Offset = "0xB47D38", VA = "0xB47D38", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000425")]
		[Address(RVA = "0xB47A40", Offset = "0xB47A40", VA = "0xB47A40")]
		[DebuggerHidden]
		public <ActivateCompositorOverlay>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6000426")]
		[Address(RVA = "0xB47BFC", Offset = "0xB47BFC", VA = "0xB47BFC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000427")]
		[Address(RVA = "0xB47C00", Offset = "0xB47C00", VA = "0xB47C00", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000429")]
		[Address(RVA = "0xB47CD8", Offset = "0xB47CD8", VA = "0xB47CD8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x873348", Offset = "0x873348")]
	private string menuStateName;

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private string playChapterStateName;

	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private string menuSceneName;

	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8733B4", Offset = "0x8733B4")]
	private AssetPack globalAssetPack;

	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private AssetReference shaderVariantAsset;

	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject buildDateCanvasPrefab;

	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject fpsCanvasPrefab;

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject fpsCanvasVRPrefab;

	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x873440", Offset = "0x873440")]
	private double sceneLoadTimeOffset;

	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private float timeToWaitForOverlay;

	[Token(Token = "0x6000419")]
	[Address(RVA = "0xB4706C", Offset = "0xB4706C", VA = "0xB4706C", Slot = "9")]
	public override void OnStateEnter()
	{
	}

	[Token(Token = "0x600041A")]
	[Address(RVA = "0xB47348", Offset = "0xB47348", VA = "0xB47348", Slot = "11")]
	public override void OnStateExit()
	{
	}

	[Token(Token = "0x600041B")]
	[Address(RVA = "0xB473B4", Offset = "0xB473B4", VA = "0xB473B4", Slot = "10")]
	public override void OnStateUpdate(float deltaTime)
	{
	}

	[Token(Token = "0x600041C")]
	[Address(RVA = "0xB47198", Offset = "0xB47198", VA = "0xB47198")]
	private void InitializeApplication()
	{
	}

	[Token(Token = "0x600041D")]
	[Address(RVA = "0xB47434", Offset = "0xB47434", VA = "0xB47434")]
	private void OnInitializationFinish()
	{
	}

	[Token(Token = "0x600041E")]
	[Address(RVA = "0xB473B8", Offset = "0xB473B8", VA = "0xB473B8")]
	private List<ThreeDAR.StepsExecution.IStep> GetInitializationSteps()
	{
		return null;
	}

	[Token(Token = "0x600041F")]
	[Address(RVA = "0xB47840", Offset = "0xB47840", VA = "0xB47840")]
	private List<ThreeDAR.StepsExecution.IStep> GetEditorInitializationSteps()
	{
		return null;
	}

	[Token(Token = "0x6000420")]
	[Address(RVA = "0xB47620", Offset = "0xB47620", VA = "0xB47620")]
	private List<ThreeDAR.StepsExecution.IStep> GetRuntimeInitializationSteps()
	{
		return null;
	}

	[Token(Token = "0x6000421")]
	[Address(RVA = "0xB47128", Offset = "0xB47128", VA = "0xB47128")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x87B1B4", Offset = "0x87B1B4")]
	private IEnumerator ActivateCompositorOverlay()
	{
		return null;
	}

	[Token(Token = "0x6000422")]
	[Address(RVA = "0xB474C8", Offset = "0xB474C8", VA = "0xB474C8")]
	private string GetNextState()
	{
		return null;
	}

	[Token(Token = "0x6000423")]
	[Address(RVA = "0xB47A6C", Offset = "0xB47A6C", VA = "0xB47A6C")]
	private bool IsMenuSceneLoaded()
	{
		return default(bool);
	}

	[Token(Token = "0x6000424")]
	[Address(RVA = "0xB47B74", Offset = "0xB47B74", VA = "0xB47B74")]
	public InitializationState()
	{
	}
}
[Token(Token = "0x20000C1")]
public class MenuState : MonoBehaviourState
{
	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private SceneRepresentation menuSceneRepresentation;

	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private string menuSceneName;

	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private string playChapterStateName;

	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private IMenuLoader menuLoader;

	[Token(Token = "0x600042B")]
	[Address(RVA = "0xF6A8A4", Offset = "0xF6A8A4", VA = "0xF6A8A4", Slot = "8")]
	public override void Init(FSMProxy proxy)
	{
	}

	[Token(Token = "0x600042C")]
	[Address(RVA = "0xF6AB50", Offset = "0xF6AB50", VA = "0xF6AB50", Slot = "9")]
	public override void OnStateEnter()
	{
	}

	[Token(Token = "0x600042D")]
	[Address(RVA = "0xF6ACE4", Offset = "0xF6ACE4", VA = "0xF6ACE4", Slot = "11")]
	public override void OnStateExit()
	{
	}

	[Token(Token = "0x600042E")]
	[Address(RVA = "0xF6ADDC", Offset = "0xF6ADDC", VA = "0xF6ADDC", Slot = "10")]
	public override void OnStateUpdate(float deltaTime)
	{
	}

	[Token(Token = "0x600042F")]
	[Address(RVA = "0xF6ADE0", Offset = "0xF6ADE0", VA = "0xF6ADE0")]
	private void OnMenuLoaded()
	{
	}

	[Token(Token = "0x6000430")]
	[Address(RVA = "0xF6ADE4", Offset = "0xF6ADE4", VA = "0xF6ADE4")]
	private void OnMenuUnloaded()
	{
	}

	[Token(Token = "0x6000431")]
	[Address(RVA = "0xF6AE08", Offset = "0xF6AE08", VA = "0xF6AE08")]
	private void OnMenuEnd()
	{
	}

	[Token(Token = "0x6000432")]
	[Address(RVA = "0xF6AEBC", Offset = "0xF6AEBC", VA = "0xF6AEBC")]
	public MenuState()
	{
	}
}
[Token(Token = "0x20000C2")]
public class EditorInitializeEpisodeState : State
{
	[Token(Token = "0x20000C3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86EE40", Offset = "0x86EE40")]
	private sealed class <PlayEditorCoroutine>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EditorInitializeEpisodeState <>4__this;

		[Token(Token = "0x17000091")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000444")]
			[Address(RVA = "0xAEF6BC", Offset = "0xAEF6BC", VA = "0xAEF6BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000092")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000446")]
			[Address(RVA = "0xAEF724", Offset = "0xAEF724", VA = "0xAEF724", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000441")]
		[Address(RVA = "0xAEF4DC", Offset = "0xAEF4DC", VA = "0xAEF4DC")]
		[DebuggerHidden]
		public <PlayEditorCoroutine>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6000442")]
		[Address(RVA = "0xAEF58C", Offset = "0xAEF58C", VA = "0xAEF58C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000443")]
		[Address(RVA = "0xAEF590", Offset = "0xAEF590", VA = "0xAEF590", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000445")]
		[Address(RVA = "0xAEF6C4", Offset = "0xAEF6C4", VA = "0xAEF6C4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SceneNames firstSceneName;

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private CoroutinesStarter coroutinesStarter;

	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<BaseAsset> assetsToLoad;

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int loadedAssets;

	[Token(Token = "0x6000433")]
	[Address(RVA = "0xAEEC68", Offset = "0xAEEC68", VA = "0xAEEC68")]
	public EditorInitializeEpisodeState(CoroutinesStarter coroutinesStarter, List<BaseAsset> assetsToLoad)
	{
	}

	[Token(Token = "0x6000434")]
	[Address(RVA = "0xAEECA0", Offset = "0xAEECA0", VA = "0xAEECA0", Slot = "9")]
	public override void OnStateEnter()
	{
	}

	[Token(Token = "0x6000435")]
	[Address(RVA = "0xAEF1F4", Offset = "0xAEF1F4", VA = "0xAEF1F4", Slot = "11")]
	public override void OnStateExit()
	{
	}

	[Token(Token = "0x6000436")]
	[Address(RVA = "0xAEF36C", Offset = "0xAEF36C", VA = "0xAEF36C", Slot = "10")]
	public override void OnStateUpdate(float deltaTime)
	{
	}

	[Token(Token = "0x6000437")]
	[Address(RVA = "0xAEED7C", Offset = "0xAEED7C", VA = "0xAEED7C")]
	private void SetPixelDensity()
	{
	}

	[Token(Token = "0x6000438")]
	[Address(RVA = "0xAEEED8", Offset = "0xAEEED8", VA = "0xAEEED8")]
	private void InitPauseSystem()
	{
	}

	[Token(Token = "0x6000439")]
	[Address(RVA = "0xAEEFA0", Offset = "0xAEEFA0", VA = "0xAEEFA0")]
	private void RegisterScenes()
	{
	}

	[Token(Token = "0x600043A")]
	[Address(RVA = "0xAEF11C", Offset = "0xAEF11C", VA = "0xAEF11C")]
	private void LoadRequiredAssets()
	{
	}

	[Token(Token = "0x600043B")]
	[Address(RVA = "0xAEF3C4", Offset = "0xAEF3C4", VA = "0xAEF3C4")]
	private void OnAssetLoaded()
	{
	}

	[Token(Token = "0x600043C")]
	[Address(RVA = "0xAEF438", Offset = "0xAEF438", VA = "0xAEF438")]
	private void PlayEpisode()
	{
	}

	[Token(Token = "0x600043D")]
	[Address(RVA = "0xAEF46C", Offset = "0xAEF46C", VA = "0xAEF46C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x87B268", Offset = "0x87B268")]
	private IEnumerator PlayEditorCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600043E")]
	[Address(RVA = "0xAEF508", Offset = "0xAEF508", VA = "0xAEF508")]
	private void InitializeNextScene()
	{
	}

	[Token(Token = "0x600043F")]
	[Address(RVA = "0xAEF588", Offset = "0xAEF588", VA = "0xAEF588")]
	private void OnSceneFinish()
	{
	}

	[Token(Token = "0x6000440")]
	[Address(RVA = "0xAEF370", Offset = "0xAEF370", VA = "0xAEF370")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B2CC", Offset = "0x87B2CC")]
	internal static string <RegisterScenes>g__GetFullSceneName|10_0(string sceneName)
	{
		return null;
	}
}
[Token(Token = "0x20000C4")]
public class InitializeEpisodeState : State
{
	[Token(Token = "0x20000C5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86EE50", Offset = "0x86EE50")]
	private sealed class <LoadLanguageAssetPack>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400039A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InitializeEpisodeState <>4__this;

		[Token(Token = "0x17000093")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600045F")]
			[Address(RVA = "0xB48C98", Offset = "0xB48C98", VA = "0xB48C98", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000094")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000461")]
			[Address(RVA = "0xB48D00", Offset = "0xB48D00", VA = "0xB48D00", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600045C")]
		[Address(RVA = "0xB4855C", Offset = "0xB4855C", VA = "0xB4855C")]
		[DebuggerHidden]
		public <LoadLanguageAssetPack>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x600045D")]
		[Address(RVA = "0xB48BB0", Offset = "0xB48BB0", VA = "0xB48BB0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600045E")]
		[Address(RVA = "0xB48BB4", Offset = "0xB48BB4", VA = "0xB48BB4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000460")]
		[Address(RVA = "0xB48CA0", Offset = "0xB48CA0", VA = "0xB48CA0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000C6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86EE60", Offset = "0x86EE60")]
	private sealed class <OnFirstSceneLoaded>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400039B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400039C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400039D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InitializeEpisodeState <>4__this;

		[Token(Token = "0x17000095")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000465")]
			[Address(RVA = "0xB48FB0", Offset = "0xB48FB0", VA = "0xB48FB0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000096")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000467")]
			[Address(RVA = "0xB49018", Offset = "0xB49018", VA = "0xB49018", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000462")]
		[Address(RVA = "0xB48944", Offset = "0xB48944", VA = "0xB48944")]
		[DebuggerHidden]
		public <OnFirstSceneLoaded>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6000463")]
		[Address(RVA = "0xB48D08", Offset = "0xB48D08", VA = "0xB48D08", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000464")]
		[Address(RVA = "0xB48D0C", Offset = "0xB48D0C", VA = "0xB48D0C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000466")]
		[Address(RVA = "0xB48FB8", Offset = "0xB48FB8", VA = "0xB48FB8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000C7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86EE70", Offset = "0x86EE70")]
	private sealed class <OnFirstSceneLoadedCoroutine>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400039E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400039F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InitializeEpisodeState <>4__this;

		[Token(Token = "0x17000097")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600046B")]
			[Address(RVA = "0xB491C4", Offset = "0xB491C4", VA = "0xB491C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000098")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600046D")]
			[Address(RVA = "0xB4922C", Offset = "0xB4922C", VA = "0xB4922C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000468")]
		[Address(RVA = "0xB48A7C", Offset = "0xB48A7C", VA = "0xB48A7C")]
		[DebuggerHidden]
		public <OnFirstSceneLoadedCoroutine>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x6000469")]
		[Address(RVA = "0xB49020", Offset = "0xB49020", VA = "0xB49020", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600046A")]
		[Address(RVA = "0xB49024", Offset = "0xB49024", VA = "0xB49024", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600046C")]
		[Address(RVA = "0xB491CC", Offset = "0xB491CC", VA = "0xB491CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SceneTracker sceneTracker;

	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private CoroutinesStarter coroutinesStarter;

	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AssetPack dialogueAssetPack;

	[Token(Token = "0x6000447")]
	[Address(RVA = "0xB47D40", Offset = "0xB47D40", VA = "0xB47D40")]
	public InitializeEpisodeState(SceneTracker sceneTracker, CoroutinesStarter coroutinesStarter, AssetPack dialogueAssetPack)
	{
	}

	[Token(Token = "0x6000448")]
	[Address(RVA = "0xB47D80", Offset = "0xB47D80", VA = "0xB47D80", Slot = "9")]
	public override void OnStateEnter()
	{
	}

	[Token(Token = "0x6000449")]
	[Address(RVA = "0xB47E34", Offset = "0xB47E34", VA = "0xB47E34")]
	private void SetSubtitlesLanguage()
	{
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0xB47EC8", Offset = "0xB47EC8", VA = "0xB47EC8")]
	private void SetAudioLanguage()
	{
	}

	[Token(Token = "0x600044B")]
	[Address(RVA = "0xB48454", Offset = "0xB48454", VA = "0xB48454")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x87B32C", Offset = "0x87B32C")]
	private IEnumerator LoadLanguageAssetPack()
	{
		return null;
	}

	[Token(Token = "0x600044C")]
	[Address(RVA = "0xB48588", Offset = "0xB48588", VA = "0xB48588")]
	private void OnLoadDialogueAssetPack()
	{
	}

	[Token(Token = "0x600044D")]
	[Address(RVA = "0xB48590", Offset = "0xB48590", VA = "0xB48590", Slot = "11")]
	public override void OnStateExit()
	{
	}

	[Token(Token = "0x600044E")]
	[Address(RVA = "0xB485FC", Offset = "0xB485FC", VA = "0xB485FC", Slot = "10")]
	public override void OnStateUpdate(float deltaTime)
	{
	}

	[Token(Token = "0x600044F")]
	[Address(RVA = "0xB47FE8", Offset = "0xB47FE8", VA = "0xB47FE8")]
	private void CacheScenesData()
	{
	}

	[Token(Token = "0x6000450")]
	[Address(RVA = "0xB4815C", Offset = "0xB4815C", VA = "0xB4815C")]
	private void SetPixelDensity()
	{
	}

	[Token(Token = "0x6000451")]
	[Address(RVA = "0xB482B8", Offset = "0xB482B8", VA = "0xB482B8")]
	private void SetStartingScene()
	{
	}

	[Token(Token = "0x6000452")]
	[Address(RVA = "0xB4834C", Offset = "0xB4834C", VA = "0xB4834C")]
	private void SetupSceneTracker()
	{
	}

	[Token(Token = "0x6000453")]
	[Address(RVA = "0xB4838C", Offset = "0xB4838C", VA = "0xB4838C")]
	private void InitPauseSystem()
	{
	}

	[Token(Token = "0x6000454")]
	[Address(RVA = "0xB4858C", Offset = "0xB4858C", VA = "0xB4858C")]
	private void SetupFirstScene()
	{
	}

	[Token(Token = "0x6000455")]
	[Address(RVA = "0xB48748", Offset = "0xB48748", VA = "0xB48748")]
	private void LoadFirstScene()
	{
	}

	[Token(Token = "0x6000456")]
	[Address(RVA = "0xB4883C", Offset = "0xB4883C", VA = "0xB4883C")]
	private void OnFirstSceneLoaded(Scene scene)
	{
	}

	[Token(Token = "0x6000457")]
	[Address(RVA = "0xB488D4", Offset = "0xB488D4", VA = "0xB488D4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x87B390", Offset = "0x87B390")]
	private IEnumerator OnFirstSceneLoaded()
	{
		return null;
	}

	[Token(Token = "0x6000458")]
	[Address(RVA = "0xB48970", Offset = "0xB48970", VA = "0xB48970")]
	private void InitializeScene()
	{
	}

	[Token(Token = "0x6000459")]
	[Address(RVA = "0xB48A0C", Offset = "0xB48A0C", VA = "0xB48A0C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x87B3F4", Offset = "0x87B3F4")]
	private IEnumerator OnFirstSceneLoadedCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600045A")]
	[Address(RVA = "0xB48600", Offset = "0xB48600", VA = "0xB48600")]
	private int GetFirstSceneIndex()
	{
		return default(int);
	}

	[Token(Token = "0x600045B")]
	[Address(RVA = "0xB48AA8", Offset = "0xB48AA8", VA = "0xB48AA8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B458", Offset = "0x87B458")]
	private void <LoadFirstScene>b__17_0()
	{
	}
}
[Token(Token = "0x20000C8")]
public class InitializeSceneState : State
{
	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SceneTracker sceneTracker;

	[Token(Token = "0x600046E")]
	[Address(RVA = "0xB492D0", Offset = "0xB492D0", VA = "0xB492D0")]
	public InitializeSceneState(SceneTracker sceneTracker)
	{
	}

	[Token(Token = "0x600046F")]
	[Address(RVA = "0xB492FC", Offset = "0xB492FC", VA = "0xB492FC", Slot = "9")]
	public override void OnStateEnter()
	{
	}

	[Token(Token = "0x6000470")]
	[Address(RVA = "0xB49488", Offset = "0xB49488", VA = "0xB49488", Slot = "11")]
	public override void OnStateExit()
	{
	}

	[Token(Token = "0x6000471")]
	[Address(RVA = "0xB494F4", Offset = "0xB494F4", VA = "0xB494F4", Slot = "10")]
	public override void OnStateUpdate(float deltaTime)
	{
	}

	[Token(Token = "0x6000472")]
	[Address(RVA = "0xB4938C", Offset = "0xB4938C", VA = "0xB4938C")]
	private void InitializeScene()
	{
	}
}
[Token(Token = "0x20000C9")]
public class JumpToMenuState : State
{
	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SceneTracker sceneTracker;

	[Token(Token = "0x6000473")]
	[Address(RVA = "0xB4B898", Offset = "0xB4B898", VA = "0xB4B898")]
	public JumpToMenuState(SceneTracker sceneTracker)
	{
	}

	[Token(Token = "0x6000474")]
	[Address(RVA = "0xB4B8C4", Offset = "0xB4B8C4", VA = "0xB4B8C4", Slot = "9")]
	public override void OnStateEnter()
	{
	}

	[Token(Token = "0x6000475")]
	[Address(RVA = "0xB4BAE4", Offset = "0xB4BAE4", VA = "0xB4BAE4", Slot = "11")]
	public override void OnStateExit()
	{
	}

	[Token(Token = "0x6000476")]
	[Address(RVA = "0xB4BB50", Offset = "0xB4BB50", VA = "0xB4BB50", Slot = "10")]
	public override void OnStateUpdate(float deltaTime)
	{
	}
}
[Token(Token = "0x20000CA")]
public class JumpToSceneState : State
{
	[Token(Token = "0x20000CB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86EE80", Offset = "0x86EE80")]
	private sealed class <LoadSceneAssets>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public JumpToSceneState <>4__this;

		[Token(Token = "0x17000099")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000488")]
			[Address(RVA = "0xB4CA94", Offset = "0xB4CA94", VA = "0xB4CA94", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600048A")]
			[Address(RVA = "0xB4CAFC", Offset = "0xB4CAFC", VA = "0xB4CAFC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000485")]
		[Address(RVA = "0xB4C138", Offset = "0xB4C138", VA = "0xB4C138")]
		[DebuggerHidden]
		public <LoadSceneAssets>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6000486")]
		[Address(RVA = "0xB4C99C", Offset = "0xB4C99C", VA = "0xB4C99C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000487")]
		[Address(RVA = "0xB4C9A0", Offset = "0xB4C9A0", VA = "0xB4C9A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000489")]
		[Address(RVA = "0xB4CA9C", Offset = "0xB4CA9C", VA = "0xB4CA9C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000CC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86EE90", Offset = "0x86EE90")]
	private sealed class <JumpToCurrentScene>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public JumpToSceneState <>4__this;

		[Token(Token = "0x1700009B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600048E")]
			[Address(RVA = "0xB4C92C", Offset = "0xB4C92C", VA = "0xB4C92C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000490")]
			[Address(RVA = "0xB4C994", Offset = "0xB4C994", VA = "0xB4C994", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600048B")]
		[Address(RVA = "0xB4C40C", Offset = "0xB4C40C", VA = "0xB4C40C")]
		[DebuggerHidden]
		public <JumpToCurrentScene>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x600048C")]
		[Address(RVA = "0xB4C67C", Offset = "0xB4C67C", VA = "0xB4C67C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600048D")]
		[Address(RVA = "0xB4C680", Offset = "0xB4C680", VA = "0xB4C680", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600048F")]
		[Address(RVA = "0xB4C934", Offset = "0xB4C934", VA = "0xB4C934", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SceneTracker sceneTracker;

	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private CoroutinesStarter coroutinesStarter;

	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private JumpToSceneData currentJumpSceneData;

	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SceneDataDrawer.SceneData currentSceneData;

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SceneRepresentation lastScene;

	[Token(Token = "0x6000477")]
	[Address(RVA = "0xB4BB84", Offset = "0xB4BB84", VA = "0xB4BB84")]
	public JumpToSceneState(SceneTracker sceneTracker, CoroutinesStarter coroutinesStarter)
	{
	}

	[Token(Token = "0x6000478")]
	[Address(RVA = "0xB4BC68", Offset = "0xB4BC68", VA = "0xB4BC68")]
	private void GoToScene(JumpToSceneData sceneData)
	{
	}

	[Token(Token = "0x6000479")]
	[Address(RVA = "0xB4BD18", Offset = "0xB4BD18", VA = "0xB4BD18", Slot = "9")]
	public override void OnStateEnter()
	{
	}

	[Token(Token = "0x600047A")]
	[Address(RVA = "0xB4BE9C", Offset = "0xB4BE9C", VA = "0xB4BE9C")]
	private void OnScenesUnloaded()
	{
	}

	[Token(Token = "0x600047B")]
	[Address(RVA = "0xB4C0C8", Offset = "0xB4C0C8", VA = "0xB4C0C8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x87B558", Offset = "0x87B558")]
	private IEnumerator LoadSceneAssets()
	{
		return null;
	}

	[Token(Token = "0x600047C")]
	[Address(RVA = "0xB4BFF4", Offset = "0xB4BFF4", VA = "0xB4BFF4")]
	private void LoadScene()
	{
	}

	[Token(Token = "0x600047D")]
	[Address(RVA = "0xB4C164", Offset = "0xB4C164", VA = "0xB4C164")]
	private void LoadSceneAssetPack(SceneRepresentation scene, Action callback)
	{
	}

	[Token(Token = "0x600047E")]
	[Address(RVA = "0xB4C304", Offset = "0xB4C304", VA = "0xB4C304")]
	private void GoToCurrentScene(Scene scene)
	{
	}

	[Token(Token = "0x600047F")]
	[Address(RVA = "0xB4C39C", Offset = "0xB4C39C", VA = "0xB4C39C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x87B5BC", Offset = "0x87B5BC")]
	private IEnumerator JumpToCurrentScene()
	{
		return null;
	}

	[Token(Token = "0x6000480")]
	[Address(RVA = "0xB4C438", Offset = "0xB4C438", VA = "0xB4C438", Slot = "11")]
	public override void OnStateExit()
	{
	}

	[Token(Token = "0x6000481")]
	[Address(RVA = "0xB4C4A4", Offset = "0xB4C4A4", VA = "0xB4C4A4", Slot = "10")]
	public override void OnStateUpdate(float deltaTime)
	{
	}

	[Token(Token = "0x6000482")]
	[Address(RVA = "0xB4C4A8", Offset = "0xB4C4A8", VA = "0xB4C4A8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B620", Offset = "0x87B620")]
	private void <OnStateEnter>b__7_0()
	{
	}

	[Token(Token = "0x6000483")]
	[Address(RVA = "0xB4C570", Offset = "0xB4C570", VA = "0xB4C570")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B630", Offset = "0x87B630")]
	private void <OnScenesUnloaded>b__8_0()
	{
	}

	[Token(Token = "0x6000484")]
	[Address(RVA = "0xB4C604", Offset = "0xB4C604", VA = "0xB4C604")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B640", Offset = "0x87B640")]
	private void <LoadSceneAssets>b__9_0()
	{
	}
}
[Token(Token = "0x20000CD")]
public class LoadNextSceneAssetsState : State
{
	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SceneTracker sceneTracker;

	[Token(Token = "0x6000491")]
	[Address(RVA = "0xB50D38", Offset = "0xB50D38", VA = "0xB50D38")]
	public LoadNextSceneAssetsState(SceneTracker sceneTracker)
	{
	}

	[Token(Token = "0x6000492")]
	[Address(RVA = "0xB50D64", Offset = "0xB50D64", VA = "0xB50D64", Slot = "9")]
	public override void OnStateEnter()
	{
	}

	[Token(Token = "0x6000493")]
	[Address(RVA = "0xB5110C", Offset = "0xB5110C", VA = "0xB5110C", Slot = "11")]
	public override void OnStateExit()
	{
	}

	[Token(Token = "0x6000494")]
	[Address(RVA = "0xB51204", Offset = "0xB51204", VA = "0xB51204", Slot = "10")]
	public override void OnStateUpdate(float deltaTime)
	{
	}

	[Token(Token = "0x6000495")]
	[Address(RVA = "0xB50F18", Offset = "0xB50F18", VA = "0xB50F18")]
	private void LoadNextSceneAssets()
	{
	}

	[Token(Token = "0x6000496")]
	[Address(RVA = "0xB51208", Offset = "0xB51208", VA = "0xB51208")]
	private void OnNextSceneAssetsLoaded()
	{
	}

	[Token(Token = "0x6000497")]
	[Address(RVA = "0xB512E8", Offset = "0xB512E8", VA = "0xB512E8")]
	private void OnLoadNextScene()
	{
	}
}
[Token(Token = "0x20000CE")]
public class LoadNextSceneState : State
{
	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SceneTracker sceneTracker;

	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isAssetPackLoaded;

	[Token(Token = "0x6000498")]
	[Address(RVA = "0xB51440", Offset = "0xB51440", VA = "0xB51440")]
	public LoadNextSceneState(SceneTracker sceneTracker)
	{
	}

	[Token(Token = "0x6000499")]
	[Address(RVA = "0xB5146C", Offset = "0xB5146C", VA = "0xB5146C", Slot = "9")]
	public override void OnStateEnter()
	{
	}

	[Token(Token = "0x600049A")]
	[Address(RVA = "0xB51744", Offset = "0xB51744", VA = "0xB51744", Slot = "11")]
	public override void OnStateExit()
	{
	}

	[Token(Token = "0x600049B")]
	[Address(RVA = "0xB51844", Offset = "0xB51844", VA = "0xB51844", Slot = "10")]
	public override void OnStateUpdate(float deltaTime)
	{
	}

	[Token(Token = "0x600049C")]
	[Address(RVA = "0xB51614", Offset = "0xB51614", VA = "0xB51614")]
	private void LoadNextScene()
	{
	}

	[Token(Token = "0x600049D")]
	[Address(RVA = "0xB51848", Offset = "0xB51848", VA = "0xB51848")]
	private void OnNextSceneLoaded(Scene scene)
	{
	}
}
[Token(Token = "0x20000CF")]
public class ShutdownCurrentSceneState : State
{
	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool sceneLoadedAfterSignal;

	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private SceneTracker sceneTracker;

	[Token(Token = "0x600049E")]
	[Address(RVA = "0xB18FE8", Offset = "0xB18FE8", VA = "0xB18FE8")]
	public ShutdownCurrentSceneState(SceneTracker sceneTracker)
	{
	}

	[Token(Token = "0x600049F")]
	[Address(RVA = "0xB1901C", Offset = "0xB1901C", VA = "0xB1901C", Slot = "9")]
	public override void OnStateEnter()
	{
	}

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0xB19374", Offset = "0xB19374", VA = "0xB19374", Slot = "11")]
	public override void OnStateExit()
	{
	}

	[Token(Token = "0x60004A1")]
	[Address(RVA = "0xB19474", Offset = "0xB19474", VA = "0xB19474", Slot = "10")]
	public override void OnStateUpdate(float deltaTime)
	{
	}

	[Token(Token = "0x60004A2")]
	[Address(RVA = "0xB19228", Offset = "0xB19228", VA = "0xB19228")]
	private void OnSceneFinish()
	{
	}
}
[Token(Token = "0x20000D0")]
public class UnloadEverythingState : State
{
	[Token(Token = "0x60004A3")]
	[Address(RVA = "0x155CFA0", Offset = "0x155CFA0", VA = "0x155CFA0")]
	public UnloadEverythingState()
	{
	}

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0x155D070", Offset = "0x155D070", VA = "0x155D070")]
	private void GoToMenu()
	{
	}

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0x155D118", Offset = "0x155D118", VA = "0x155D118", Slot = "9")]
	public override void OnStateEnter()
	{
	}

	[Token(Token = "0x60004A6")]
	[Address(RVA = "0x155D4A4", Offset = "0x155D4A4", VA = "0x155D4A4")]
	private void OnAllAssetsUnloaded()
	{
	}

	[Token(Token = "0x60004A7")]
	[Address(RVA = "0x155D594", Offset = "0x155D594", VA = "0x155D594", Slot = "11")]
	public override void OnStateExit()
	{
	}

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0x155D600", Offset = "0x155D600", VA = "0x155D600", Slot = "10")]
	public override void OnStateUpdate(float deltaTime)
	{
	}

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0x155D604", Offset = "0x155D604", VA = "0x155D604")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B6F0", Offset = "0x87B6F0")]
	private void <OnStateEnter>b__2_0()
	{
	}

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0x155D6CC", Offset = "0x155D6CC", VA = "0x155D6CC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B700", Offset = "0x87B700")]
	private void <OnStateEnter>b__2_1()
	{
	}

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0x155D794", Offset = "0x155D794", VA = "0x155D794")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B710", Offset = "0x87B710")]
	private void <OnStateEnter>b__2_2()
	{
	}
}
[Token(Token = "0x20000D1")]
public class UnloadPreviousSceneState : State
{
	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SceneTracker sceneTracker;

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0x155D80C", Offset = "0x155D80C", VA = "0x155D80C")]
	public UnloadPreviousSceneState(SceneTracker sceneTracker)
	{
	}

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0x155D838", Offset = "0x155D838", VA = "0x155D838", Slot = "9")]
	public override void OnStateEnter()
	{
	}

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0x155DA48", Offset = "0x155DA48", VA = "0x155DA48", Slot = "11")]
	public override void OnStateExit()
	{
	}

	[Token(Token = "0x60004AF")]
	[Address(RVA = "0x155DAB4", Offset = "0x155DAB4", VA = "0x155DAB4", Slot = "10")]
	public override void OnStateUpdate(float deltaTime)
	{
	}

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0x155D8B0", Offset = "0x155D8B0", VA = "0x155D8B0")]
	private void UnloadPreviousScene()
	{
	}

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0x155DAB8", Offset = "0x155DAB8", VA = "0x155DAB8")]
	private void OnSceneUnloaded()
	{
	}

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0x155DBDC", Offset = "0x155DBDC", VA = "0x155DBDC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B720", Offset = "0x87B720")]
	private void <UnloadPreviousScene>b__5_0()
	{
	}
}
[Token(Token = "0x20000D2")]
public class CoroutinesStarter : MonoBehaviour
{
	[Token(Token = "0x60004B3")]
	[Address(RVA = "0xB5C6A4", Offset = "0xB5C6A4", VA = "0xB5C6A4")]
	public CoroutinesStarter()
	{
	}
}
[Token(Token = "0x20000D3")]
public class EditorMenuLoader : IMenuLoader
{
	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Scene menuScene;

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string menuSceneName;

	[Token(Token = "0x14000011")]
	public event Action onMenuLoaded
	{
		[Token(Token = "0x60004B4")]
		[Address(RVA = "0xAEFF78", Offset = "0xAEFF78", VA = "0xAEFF78", Slot = "4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B730", Offset = "0x87B730")]
		add
		{
		}
		[Token(Token = "0x60004B5")]
		[Address(RVA = "0xAF001C", Offset = "0xAF001C", VA = "0xAF001C", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B740", Offset = "0x87B740")]
		remove
		{
		}
	}

	[Token(Token = "0x14000012")]
	public event Action onMenuUnloaded
	{
		[Token(Token = "0x60004B6")]
		[Address(RVA = "0xAF00C0", Offset = "0xAF00C0", VA = "0xAF00C0", Slot = "6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B750", Offset = "0x87B750")]
		add
		{
		}
		[Token(Token = "0x60004B7")]
		[Address(RVA = "0xAF0164", Offset = "0xAF0164", VA = "0xAF0164", Slot = "7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B760", Offset = "0x87B760")]
		remove
		{
		}
	}

	[Token(Token = "0x60004B8")]
	[Address(RVA = "0xAF0208", Offset = "0xAF0208", VA = "0xAF0208")]
	public EditorMenuLoader(string menuSceneName)
	{
	}

	[Token(Token = "0x60004B9")]
	[Address(RVA = "0xAF0234", Offset = "0xAF0234", VA = "0xAF0234", Slot = "8")]
	public void LoadMenu()
	{
	}

	[Token(Token = "0x60004BA")]
	[Address(RVA = "0xAF0374", Offset = "0xAF0374", VA = "0xAF0374", Slot = "9")]
	public void UnloadMenu()
	{
	}
}
[Token(Token = "0x20000D4")]
public interface IMenuLoader
{
	[Token(Token = "0x14000013")]
	event Action onMenuLoaded;

	[Token(Token = "0x14000014")]
	event Action onMenuUnloaded;

	[Token(Token = "0x60004BF")]
	void LoadMenu();

	[Token(Token = "0x60004C0")]
	void UnloadMenu();
}
[Token(Token = "0x20000D5")]
public class RuntimeMenuLoader : IMenuLoader
{
	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private SceneRepresentation menuSceneRepresentation;

	[Token(Token = "0x14000015")]
	public event Action onMenuLoaded
	{
		[Token(Token = "0x60004C1")]
		[Address(RVA = "0xB11FDC", Offset = "0xB11FDC", VA = "0xB11FDC", Slot = "4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B7B0", Offset = "0x87B7B0")]
		add
		{
		}
		[Token(Token = "0x60004C2")]
		[Address(RVA = "0xB12080", Offset = "0xB12080", VA = "0xB12080", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B7C0", Offset = "0x87B7C0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000016")]
	public event Action onMenuUnloaded
	{
		[Token(Token = "0x60004C3")]
		[Address(RVA = "0xB12124", Offset = "0xB12124", VA = "0xB12124", Slot = "6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B7D0", Offset = "0x87B7D0")]
		add
		{
		}
		[Token(Token = "0x60004C4")]
		[Address(RVA = "0xB121C8", Offset = "0xB121C8", VA = "0xB121C8", Slot = "7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B7E0", Offset = "0x87B7E0")]
		remove
		{
		}
	}

	[Token(Token = "0x60004C5")]
	[Address(RVA = "0xB1226C", Offset = "0xB1226C", VA = "0xB1226C")]
	public RuntimeMenuLoader(SceneRepresentation menuSceneRepresentation)
	{
	}

	[Token(Token = "0x60004C6")]
	[Address(RVA = "0xB12298", Offset = "0xB12298", VA = "0xB12298", Slot = "8")]
	public void LoadMenu()
	{
	}

	[Token(Token = "0x60004C7")]
	[Address(RVA = "0xB12380", Offset = "0xB12380", VA = "0xB12380", Slot = "9")]
	public void UnloadMenu()
	{
	}

	[Token(Token = "0x60004C8")]
	[Address(RVA = "0xB1229C", Offset = "0xB1229C", VA = "0xB1229C")]
	private void LoadMenuScene()
	{
	}

	[Token(Token = "0x60004C9")]
	[Address(RVA = "0xB12628", Offset = "0xB12628", VA = "0xB12628")]
	private void OnMenuSceneLoaded(Scene scene)
	{
	}

	[Token(Token = "0x60004CA")]
	[Address(RVA = "0xB12898", Offset = "0xB12898", VA = "0xB12898")]
	private void OnMenuUnloaded()
	{
	}

	[Token(Token = "0x60004CB")]
	[Address(RVA = "0xB12A44", Offset = "0xB12A44", VA = "0xB12A44")]
	private void OnMenuAssetsUnloaded()
	{
	}

	[Token(Token = "0x60004CC")]
	[Address(RVA = "0xB12A58", Offset = "0xB12A58", VA = "0xB12A58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B7F0", Offset = "0x87B7F0")]
	private void <LoadMenuScene>b__10_0()
	{
	}
}
[Token(Token = "0x20000D6")]
[ExecuteInEditMode]
public class GlobalShaderEyePortal : MonoBehaviour
{
	[Token(Token = "0x40003BB")]
	private const string EYE_OCLUSSION_MATRIX = "_EyePortalMatrix";

	[Token(Token = "0x40003BC")]
	private const string EYE_OCLUSSION_INTENSITY = "_EyeOcclusionIntensity";

	[Token(Token = "0x40003BD")]
	private const string EYE_OCLUSSION_FADE = "_EyeOcclusionFade";

	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x87350C", Offset = "0x87350C")]
	[SerializeField]
	private float fade;

	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x873550", Offset = "0x873550")]
	[SerializeField]
	private float intensity;

	[Token(Token = "0x60004CD")]
	[Address(RVA = "0xAF94A8", Offset = "0xAF94A8", VA = "0xAF94A8")]
	private void Start()
	{
	}

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0xAF94FC", Offset = "0xAF94FC", VA = "0xAF94FC")]
	private void Update()
	{
	}

	[Token(Token = "0x60004CF")]
	[Address(RVA = "0xAF95BC", Offset = "0xAF95BC", VA = "0xAF95BC")]
	public void StopFeeding()
	{
	}

	[Token(Token = "0x60004D0")]
	[Address(RVA = "0xAF94AC", Offset = "0xAF94AC", VA = "0xAF94AC")]
	private void Reset()
	{
	}

	[Token(Token = "0x60004D1")]
	[Address(RVA = "0xAF95D8", Offset = "0xAF95D8", VA = "0xAF95D8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60004D2")]
	[Address(RVA = "0xAF95DC", Offset = "0xAF95DC", VA = "0xAF95DC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60004D3")]
	[Address(RVA = "0xAF95E0", Offset = "0xAF95E0", VA = "0xAF95E0")]
	public GlobalShaderEyePortal()
	{
	}
}
[Token(Token = "0x20000D7")]
[ExecuteInEditMode]
public class GlobalShaderMatrixFeeder : MonoBehaviour
{
	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Renderer[] renderers;

	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string matrixName;

	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool inverseMatrix;

	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	[SerializeField]
	private bool updateEveryFrame;

	[Token(Token = "0x60004D4")]
	[Address(RVA = "0xAF95F4", Offset = "0xAF95F4", VA = "0xAF95F4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0xAF97FC", Offset = "0xAF97FC", VA = "0xAF97FC")]
	private void Update()
	{
	}

	[Token(Token = "0x60004D6")]
	[Address(RVA = "0xAF9640", Offset = "0xAF9640", VA = "0xAF9640")]
	private void FeedMatrix()
	{
	}

	[Token(Token = "0x60004D7")]
	[Address(RVA = "0xAF9800", Offset = "0xAF9800", VA = "0xAF9800")]
	public GlobalShaderMatrixFeeder()
	{
	}
}
[Token(Token = "0x20000D8")]
[ExecuteInEditMode]
public class GlobalShaderPositionFeeder : MonoBehaviour
{
	[Token(Token = "0x20000D9")]
	private enum Usage
	{
		[Token(Token = "0x40003CC")]
		HandsPositions,
		[Token(Token = "0x40003CD")]
		TransformPosition
	}

	[Token(Token = "0x20000DA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86EED0", Offset = "0x86EED0")]
	private sealed class <Start>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GlobalShaderPositionFeeder <>4__this;

		[Token(Token = "0x1700009D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60004E3")]
			[Address(RVA = "0xAF9ED0", Offset = "0xAF9ED0", VA = "0xAF9ED0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004E5")]
			[Address(RVA = "0xAF9F38", Offset = "0xAF9F38", VA = "0xAF9F38", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004E0")]
		[Address(RVA = "0xAF98C8", Offset = "0xAF98C8", VA = "0xAF98C8")]
		[DebuggerHidden]
		public <Start>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x60004E1")]
		[Address(RVA = "0xAF9D30", Offset = "0xAF9D30", VA = "0xAF9D30", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004E2")]
		[Address(RVA = "0xAF9D34", Offset = "0xAF9D34", VA = "0xAF9D34", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004E4")]
		[Address(RVA = "0xAF9ED8", Offset = "0xAF9ED8", VA = "0xAF9ED8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003C4")]
	private const string LEFT_POSITION = "_LeftPosition";

	[Token(Token = "0x40003C5")]
	private const string RIGHT_POSITION = "_RightPosition";

	[Token(Token = "0x40003C6")]
	private const string DEFAULT_VARIABLE_NAME = "Not used when usage is HandsPositions";

	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float radius;

	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private bool debugMode;

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Usage usage;

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private string variableName;

	[Token(Token = "0x60004D8")]
	[Address(RVA = "0xAF9858", Offset = "0xAF9858", VA = "0xAF9858")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x87B800", Offset = "0x87B800")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60004D9")]
	[Address(RVA = "0xAF98F4", Offset = "0xAF98F4", VA = "0xAF98F4")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60004DA")]
	[Address(RVA = "0xAF9998", Offset = "0xAF9998", VA = "0xAF9998")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0xAF9B00", Offset = "0xAF9B00", VA = "0xAF9B00")]
	private void EnableHandsPositionShaderFeeder()
	{
	}

	[Token(Token = "0x60004DC")]
	[Address(RVA = "0xAF9B0C", Offset = "0xAF9B0C", VA = "0xAF9B0C")]
	private void DisableHandsPositionShaderFeeder()
	{
	}

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0xAF9B18", Offset = "0xAF9B18", VA = "0xAF9B18")]
	private void Update()
	{
	}

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0xAF9B1C", Offset = "0xAF9B1C", VA = "0xAF9B1C")]
	private void FeedShaderData()
	{
	}

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0xAF9CD0", Offset = "0xAF9CD0", VA = "0xAF9CD0")]
	public GlobalShaderPositionFeeder()
	{
	}
}
[Token(Token = "0x20000DB")]
[ExecuteInEditMode]
public class GlobalShaderPositionFeederArray : MonoBehaviour
{
	[Token(Token = "0x20000DC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86EEF0", Offset = "0x86EEF0")]
	private sealed class <Start>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GlobalShaderPositionFeederArray <>4__this;

		[Token(Token = "0x1700009F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60004F4")]
			[Address(RVA = "0xAFAA70", Offset = "0xAFAA70", VA = "0xAFAA70", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004F6")]
			[Address(RVA = "0xAFAAD8", Offset = "0xAFAAD8", VA = "0xAFAAD8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004F1")]
		[Address(RVA = "0xAF9FB0", Offset = "0xAF9FB0", VA = "0xAF9FB0")]
		[DebuggerHidden]
		public <Start>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x60004F2")]
		[Address(RVA = "0xAFA9A0", Offset = "0xAFA9A0", VA = "0xAFA9A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004F3")]
		[Address(RVA = "0xAFA9A4", Offset = "0xAFA9A4", VA = "0xAFA9A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004F5")]
		[Address(RVA = "0xAFAA78", Offset = "0xAFAA78", VA = "0xAFAA78", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000DD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86EF00", Offset = "0x86EF00")]
	private sealed class <ExpansionRoutine>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GlobalShaderPositionFeederArray <>4__this;

		[Token(Token = "0x40003E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int i;

		[Token(Token = "0x40003E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <timer>5__2;

		[Token(Token = "0x170000A1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60004FA")]
			[Address(RVA = "0xAFA930", Offset = "0xAFA930", VA = "0xAFA930", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004FC")]
			[Address(RVA = "0xAFA998", Offset = "0xAFA998", VA = "0xAFA998", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004F7")]
		[Address(RVA = "0xAFA628", Offset = "0xAFA628", VA = "0xAFA628")]
		[DebuggerHidden]
		public <ExpansionRoutine>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x60004F8")]
		[Address(RVA = "0xAFA810", Offset = "0xAFA810", VA = "0xAFA810", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004F9")]
		[Address(RVA = "0xAFA814", Offset = "0xAFA814", VA = "0xAFA814", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004FB")]
		[Address(RVA = "0xAFA938", Offset = "0xAFA938", VA = "0xAFA938", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003D1")]
	private const int LENGTH = 2;

	[Token(Token = "0x40003D2")]
	private const string POSITIONS = "_HitPositions";

	[Token(Token = "0x40003D3")]
	private const string INTENSITIES = "_HitIntensities";

	[Token(Token = "0x40003D4")]
	private const string RANGESANDVALUES = "_HitRangesAndValues";

	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float delayBetweenActivations;

	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private Vector4 intensityRangesAndValues;

	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AnimationCurve incrementCurve;

	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private AnimationCurve intensityCurve;

	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private bool debugMode;

	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float timerBetweenActivations;

	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float maxTimer;

	[Token(Token = "0x40003DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int index;

	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector4[] positions;

	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float[] intensities;

	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Coroutine[] sizeCoroutines;

	[Token(Token = "0x60004E6")]
	[Address(RVA = "0xAF9F40", Offset = "0xAF9F40", VA = "0xAF9F40")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x87B8B4", Offset = "0x87B8B4")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60004E7")]
	[Address(RVA = "0xAF9FDC", Offset = "0xAF9FDC", VA = "0xAF9FDC")]
	private void Update()
	{
	}

	[Token(Token = "0x60004E8")]
	[Address(RVA = "0xAFA0A0", Offset = "0xAFA0A0", VA = "0xAFA0A0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60004E9")]
	[Address(RVA = "0xAFA1B0", Offset = "0xAFA1B0", VA = "0xAFA1B0")]
	private void UseEditorModeData()
	{
	}

	[Token(Token = "0x60004EA")]
	[Address(RVA = "0xAFA018", Offset = "0xAFA018", VA = "0xAFA018")]
	private void FeedShaderPositions()
	{
	}

	[Token(Token = "0x60004EB")]
	[Address(RVA = "0xAFA284", Offset = "0xAFA284", VA = "0xAFA284")]
	private void InitializeExpansionData()
	{
	}

	[Token(Token = "0x60004EC")]
	[Address(RVA = "0xAFA444", Offset = "0xAFA444", VA = "0xAFA444")]
	private void ActivatePosition()
	{
	}

	[Token(Token = "0x60004ED")]
	[Address(RVA = "0xAFA448", Offset = "0xAFA448", VA = "0xAFA448")]
	public void ActivateHandHitShaderExpansion(Vector3 position)
	{
	}

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0xAFA5A8", Offset = "0xAFA5A8", VA = "0xAFA5A8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x87B918", Offset = "0x87B918")]
	private IEnumerator ExpansionRoutine(int i)
	{
		return null;
	}

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0xAFA654", Offset = "0xAFA654", VA = "0xAFA654")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60004F0")]
	[Address(RVA = "0xAFA6FC", Offset = "0xAFA6FC", VA = "0xAFA6FC")]
	public GlobalShaderPositionFeederArray()
	{
	}
}
[Token(Token = "0x20000DE")]
[ExecuteInEditMode]
public class GlobalShaderTransformPositionFeeder : MonoBehaviour
{
	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string vectorName;

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0xB425DC", Offset = "0xB425DC", VA = "0xB425DC")]
	private void Update()
	{
	}

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0xB425E0", Offset = "0xB425E0", VA = "0xB425E0")]
	private void FeedShaderData()
	{
	}

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0xB42684", Offset = "0xB42684", VA = "0xB42684")]
	public GlobalShaderTransformPositionFeeder()
	{
	}
}
[Token(Token = "0x20000DF")]
[ExecuteInEditMode]
public class GlobalShaderWhirlFeeder : MonoBehaviour
{
	[Token(Token = "0x40003E9")]
	private const string ORIGIN = "_WhirlOrigin";

	[Token(Token = "0x40003EA")]
	private const string RANGE = "_WhirlRange";

	[Token(Token = "0x40003EB")]
	private const string POW = "_WhirlPow";

	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Vector2 radius;

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float power;

	[Token(Token = "0x6000500")]
	[Address(RVA = "0xB4268C", Offset = "0xB4268C", VA = "0xB4268C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000501")]
	[Address(RVA = "0xB4280C", Offset = "0xB4280C", VA = "0xB4280C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000502")]
	[Address(RVA = "0xB426D0", Offset = "0xB426D0", VA = "0xB426D0")]
	private void FeedShaderData()
	{
	}

	[Token(Token = "0x6000503")]
	[Address(RVA = "0xB42810", Offset = "0xB42810", VA = "0xB42810")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000504")]
	[Address(RVA = "0xB428E8", Offset = "0xB428E8", VA = "0xB428E8")]
	public GlobalShaderWhirlFeeder()
	{
	}
}
[Token(Token = "0x20000E0")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x86EF30", Offset = "0x86EF30")]
[ExecuteInEditMode]
public class ShaderGlobalLightRevealFeeder : MonoBehaviour
{
	[Token(Token = "0x20000E1")]
	private enum RevealSource
	{
		[Token(Token = "0x40003F7")]
		Hands,
		[Token(Token = "0x40003F8")]
		Transform
	}

	[Token(Token = "0x40003EE")]
	private const string ORIGIN_LEFT = "_LightRevealPosL";

	[Token(Token = "0x40003EF")]
	private const string ORIGIN_RIGHT = "_LightRevealPosR";

	[Token(Token = "0x40003F0")]
	private const string VIEWDIR_LEFT = "_LightRevealViewDirL";

	[Token(Token = "0x40003F1")]
	private const string VIEWDIR_RIGHT = "_LightRevealViewDirR";

	[Token(Token = "0x40003F2")]
	private const string LIGHT_REVEAL_ANGLE = "_LightRevealAngle";

	[Token(Token = "0x40003F3")]
	private const string LIGHT_REVEAL_RANGE = "_LightRevealRange";

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RevealSource revealSource;

	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Light light;

	[Token(Token = "0x170000A3")]
	private float angle
	{
		[Token(Token = "0x6000505")]
		[Address(RVA = "0xB18864", Offset = "0xB18864", VA = "0xB18864")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000A4")]
	private float range
	{
		[Token(Token = "0x6000506")]
		[Address(RVA = "0xB18880", Offset = "0xB18880", VA = "0xB18880")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000A5")]
	private bool revealWithHands
	{
		[Token(Token = "0x6000507")]
		[Address(RVA = "0xB1889C", Offset = "0xB1889C", VA = "0xB1889C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000A6")]
	private Vector3 originLeft
	{
		[Token(Token = "0x6000508")]
		[Address(RVA = "0xB188B4", Offset = "0xB188B4", VA = "0xB188B4")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170000A7")]
	private Vector3 originRight
	{
		[Token(Token = "0x6000509")]
		[Address(RVA = "0xB18948", Offset = "0xB18948", VA = "0xB18948")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170000A8")]
	private Vector3 viewLeft
	{
		[Token(Token = "0x600050A")]
		[Address(RVA = "0xB189EC", Offset = "0xB189EC", VA = "0xB189EC")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170000A9")]
	private Vector3 viewRight
	{
		[Token(Token = "0x600050B")]
		[Address(RVA = "0xB18B24", Offset = "0xB18B24", VA = "0xB18B24")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x600050C")]
	[Address(RVA = "0xB18C80", Offset = "0xB18C80", VA = "0xB18C80")]
	private void Awake()
	{
	}

	[Token(Token = "0x600050D")]
	[Address(RVA = "0xB18CE8", Offset = "0xB18CE8", VA = "0xB18CE8")]
	private void Update()
	{
	}

	[Token(Token = "0x600050E")]
	[Address(RVA = "0xB18CEC", Offset = "0xB18CEC", VA = "0xB18CEC")]
	private void FeedShader()
	{
	}

	[Token(Token = "0x600050F")]
	[Address(RVA = "0xB18E88", Offset = "0xB18E88", VA = "0xB18E88")]
	public ShaderGlobalLightRevealFeeder()
	{
	}
}
[Token(Token = "0x20000E2")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x86EFA4", Offset = "0x86EFA4")]
public class DrumHitEffect : MonoBehaviour
{
	[Token(Token = "0x20000E3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F008", Offset = "0x86F008")]
	private sealed class <ScaleEffectCoroutine>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400040B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400040C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400040D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DrumHitEffect <>4__this;

		[Token(Token = "0x400040E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <currentTime>5__2;

		[Token(Token = "0x400040F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <startTime>5__3;

		[Token(Token = "0x170000AB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600051B")]
			[Address(RVA = "0xAEE16C", Offset = "0xAEE16C", VA = "0xAEE16C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600051D")]
			[Address(RVA = "0xAEE1D4", Offset = "0xAEE1D4", VA = "0xAEE1D4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000518")]
		[Address(RVA = "0xAEDA6C", Offset = "0xAEDA6C", VA = "0xAEDA6C")]
		[DebuggerHidden]
		public <ScaleEffectCoroutine>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x6000519")]
		[Address(RVA = "0xAEDFFC", Offset = "0xAEDFFC", VA = "0xAEDFFC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600051A")]
		[Address(RVA = "0xAEE000", Offset = "0xAEE000", VA = "0xAEE000", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600051C")]
		[Address(RVA = "0xAEE174", Offset = "0xAEE174", VA = "0xAEE174", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000E4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F018", Offset = "0x86F018")]
	private sealed class <ReturnToPool>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DrumHitEffect <>4__this;

		[Token(Token = "0x4000413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <currentTime>5__2;

		[Token(Token = "0x4000414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <startTime>5__3;

		[Token(Token = "0x170000AD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000521")]
			[Address(RVA = "0xAEDF8C", Offset = "0xAEDF8C", VA = "0xAEDF8C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000523")]
			[Address(RVA = "0xAEDFF4", Offset = "0xAEDFF4", VA = "0xAEDFF4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600051E")]
		[Address(RVA = "0xAEDB08", Offset = "0xAEDB08", VA = "0xAEDB08")]
		[DebuggerHidden]
		public <ReturnToPool>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x600051F")]
		[Address(RVA = "0xAEDE18", Offset = "0xAEDE18", VA = "0xAEDE18", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000520")]
		[Address(RVA = "0xAEDE1C", Offset = "0xAEDE1C", VA = "0xAEDE1C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000522")]
		[Address(RVA = "0xAEDF94", Offset = "0xAEDF94", VA = "0xAEDF94", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ParticleSystem hitParticles;

	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8736B0", Offset = "0x8736B0")]
	[SerializeField]
	private float scaleAnimationDuration;

	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AnimationCurve scaleCurve;

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float minScaleMultiplier;

	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float maxScaleMultiplier;

	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Transform transformToScale;

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private AudioSource audioPlayer;

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Attachment attachment;

	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private WaitForSeconds soundDurationWait;

	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Coroutine scaleEffectCoroutine;

	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 minScale;

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 maxScale;

	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3 currentHitScale;

	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Renderer[] renderers;

	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private MaterialPropertyBlock[] propertyBlocks;

	[Token(Token = "0x4000408")]
	private const string COLOR = "_Color";

	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int colorId;

	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private bool inUse;

	[Token(Token = "0x170000AA")]
	public bool InUse
	{
		[Token(Token = "0x6000510")]
		[Address(RVA = "0xAED7E0", Offset = "0xAED7E0", VA = "0xAED7E0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000511")]
	[Address(RVA = "0xAED7E8", Offset = "0xAED7E8", VA = "0xAED7E8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000512")]
	[Address(RVA = "0xAED9FC", Offset = "0xAED9FC", VA = "0xAED9FC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x87BA1C", Offset = "0x87BA1C")]
	private IEnumerator ScaleEffectCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000513")]
	[Address(RVA = "0xAEDA98", Offset = "0xAEDA98", VA = "0xAEDA98")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x87BA80", Offset = "0x87BA80")]
	private IEnumerator ReturnToPool()
	{
		return null;
	}

	[Token(Token = "0x6000514")]
	[Address(RVA = "0xAEDB34", Offset = "0xAEDB34", VA = "0xAEDB34")]
	public void SetEffect(Transform attachedTo, AudioClip drumClip, float t, Color[] colors)
	{
	}

	[Token(Token = "0x6000515")]
	[Address(RVA = "0xAEDD54", Offset = "0xAEDD54", VA = "0xAEDD54")]
	public void PlayEffect()
	{
	}

	[Token(Token = "0x6000516")]
	[Address(RVA = "0xAEDDB8", Offset = "0xAEDDB8", VA = "0xAEDDB8")]
	public void ResetEffect()
	{
	}

	[Token(Token = "0x6000517")]
	[Address(RVA = "0xAEDE04", Offset = "0xAEDE04", VA = "0xAEDE04")]
	public DrumHitEffect()
	{
	}
}
[Token(Token = "0x20000E5")]
public class DrumTracker : MonoBehaviour
{
	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioClip[] drumClips;

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Color[] drumColors;

	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private ParticleSystem hitParticles;

	[Token(Token = "0x4000418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Renderer[] vibrationRenderers;

	[Token(Token = "0x4000419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Action OnEnableDrum;

	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Action OnDisableDrum;

	[Token(Token = "0x170000AF")]
	public AudioClip[] DrumClips
	{
		[Token(Token = "0x6000524")]
		[Address(RVA = "0xAEE1DC", Offset = "0xAEE1DC", VA = "0xAEE1DC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000B0")]
	public ParticleSystem HitParticles
	{
		[Token(Token = "0x6000525")]
		[Address(RVA = "0xAEE1E4", Offset = "0xAEE1E4", VA = "0xAEE1E4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000B1")]
	public Renderer[] VibrationRenderes
	{
		[Token(Token = "0x6000526")]
		[Address(RVA = "0xAEE1EC", Offset = "0xAEE1EC", VA = "0xAEE1EC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000527")]
	[Address(RVA = "0xAEE1F4", Offset = "0xAEE1F4", VA = "0xAEE1F4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000528")]
	[Address(RVA = "0xAEE208", Offset = "0xAEE208", VA = "0xAEE208")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000529")]
	[Address(RVA = "0xAEE21C", Offset = "0xAEE21C", VA = "0xAEE21C")]
	public Color[] GetDrumColors()
	{
		return null;
	}

	[Token(Token = "0x600052A")]
	[Address(RVA = "0xAEE224", Offset = "0xAEE224", VA = "0xAEE224")]
	public DrumTracker()
	{
	}
}
[Token(Token = "0x20000E6")]
public class DrumsManager : MonoBehaviour
{
	[Token(Token = "0x400041B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87377C", Offset = "0x87377C")]
	private static DrumsManager <Instance>k__BackingField;

	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private HandDrum drumPrefab;

	[Token(Token = "0x400041D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform drumsContainer;

	[Token(Token = "0x400041E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AnimationCurve drumSpeedCurve;

	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform drumsParent;

	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float soundDuration;

	[Token(Token = "0x4000421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private float soundFadeOffDuration;

	[Token(Token = "0x4000422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8737EC", Offset = "0x8737EC")]
	private float vibrationDuration;

	[Token(Token = "0x4000423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private float vibrationIntensity;

	[Token(Token = "0x4000424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private AnimationCurve vibrationCurve;

	[Token(Token = "0x4000425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x873858", Offset = "0x873858")]
	private DrumHitEffect hitEffectPrefab;

	[Token(Token = "0x4000426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Transform effectsContainer;

	[Token(Token = "0x4000427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private int startingEffectAmount;

	[Token(Token = "0x4000428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<HandDrum> drums;

	[Token(Token = "0x4000429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<DrumHitEffect> hitEffectsPool;

	[Token(Token = "0x170000B2")]
	public static DrumsManager Instance
	{
		[Token(Token = "0x600052B")]
		[Address(RVA = "0xAEE22C", Offset = "0xAEE22C", VA = "0xAEE22C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87BB84", Offset = "0x87BB84")]
		get
		{
			return null;
		}
		[Token(Token = "0x600052C")]
		[Address(RVA = "0xAEE27C", Offset = "0xAEE27C", VA = "0xAEE27C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87BB94", Offset = "0x87BB94")]
		private set
		{
		}
	}

	[Token(Token = "0x170000B3")]
	public AnimationCurve DrumSpeedCurve
	{
		[Token(Token = "0x600052D")]
		[Address(RVA = "0xAEE2D0", Offset = "0xAEE2D0", VA = "0xAEE2D0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000B4")]
	public float SoundDuration
	{
		[Token(Token = "0x600052E")]
		[Address(RVA = "0xAEE2D8", Offset = "0xAEE2D8", VA = "0xAEE2D8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000B5")]
	public float SoundFadeOffDuration
	{
		[Token(Token = "0x600052F")]
		[Address(RVA = "0xAEE2E0", Offset = "0xAEE2E0", VA = "0xAEE2E0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000B6")]
	public float VibrationDuration
	{
		[Token(Token = "0x6000530")]
		[Address(RVA = "0xAEE2E8", Offset = "0xAEE2E8", VA = "0xAEE2E8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000B7")]
	public float VibrationIntensity
	{
		[Token(Token = "0x6000531")]
		[Address(RVA = "0xAEE2F0", Offset = "0xAEE2F0", VA = "0xAEE2F0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000B8")]
	public AnimationCurve VibrationCurve
	{
		[Token(Token = "0x6000532")]
		[Address(RVA = "0xAEE2F8", Offset = "0xAEE2F8", VA = "0xAEE2F8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000B9")]
	public List<HandDrum> Drums
	{
		[Token(Token = "0x6000533")]
		[Address(RVA = "0xAEE300", Offset = "0xAEE300", VA = "0xAEE300")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000534")]
	[Address(RVA = "0xAEE308", Offset = "0xAEE308", VA = "0xAEE308")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000535")]
	[Address(RVA = "0xAEE360", Offset = "0xAEE360", VA = "0xAEE360")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000536")]
	[Address(RVA = "0xAEE6A8", Offset = "0xAEE6A8", VA = "0xAEE6A8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000537")]
	[Address(RVA = "0xAEE6B0", Offset = "0xAEE6B0", VA = "0xAEE6B0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000538")]
	[Address(RVA = "0xAEE6AC", Offset = "0xAEE6AC", VA = "0xAEE6AC")]
	public void StartInteractivity()
	{
	}

	[Token(Token = "0x6000539")]
	[Address(RVA = "0xAEE6B4", Offset = "0xAEE6B4", VA = "0xAEE6B4")]
	public void StopInteractivty()
	{
	}

	[Token(Token = "0x600053A")]
	[Address(RVA = "0xAEE74C", Offset = "0xAEE74C", VA = "0xAEE74C")]
	public DrumHitEffect GetHitEffect(Vector3 position, Quaternion rotation)
	{
		return null;
	}

	[Token(Token = "0x600053B")]
	[Address(RVA = "0xAEE884", Offset = "0xAEE884", VA = "0xAEE884")]
	public void ReturnHitEffect(DrumHitEffect hitEffect)
	{
	}

	[Token(Token = "0x600053C")]
	[Address(RVA = "0xAEE554", Offset = "0xAEE554", VA = "0xAEE554")]
	private DrumHitEffect GenerateNewHitEffect()
	{
		return null;
	}

	[Token(Token = "0x600053D")]
	[Address(RVA = "0xAEE89C", Offset = "0xAEE89C", VA = "0xAEE89C")]
	public DrumsManager()
	{
	}
}
[Token(Token = "0x20000E7")]
public class Fader
{
	[Token(Token = "0x20000E8")]
	private struct RendererFadeValues
	{
		[Token(Token = "0x4000430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private MaterialPropertyBlock propertyBlock;

		[Token(Token = "0x4000431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private Color initialColor;

		[Token(Token = "0x170000BA")]
		public MaterialPropertyBlock PropertyBlock
		{
			[Token(Token = "0x6000543")]
			[Address(RVA = "0xAF6C7C", Offset = "0xAF6C7C", VA = "0xAF6C7C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BB")]
		public Color InitialColor
		{
			[Token(Token = "0x6000544")]
			[Address(RVA = "0xAF6C84", Offset = "0xAF6C84", VA = "0xAF6C84")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x6000545")]
		[Address(RVA = "0xAF6784", Offset = "0xAF6784", VA = "0xAF6784")]
		public RendererFadeValues(MaterialPropertyBlock propertyBlock, Color initialColor)
		{
		}
	}

	[Token(Token = "0x20000E9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F028", Offset = "0x86F028")]
	private sealed class <FadeOutRoutine>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Fader <>4__this;

		[Token(Token = "0x4000435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <timer>5__2;

		[Token(Token = "0x170000BC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000549")]
			[Address(RVA = "0xAF6C0C", Offset = "0xAF6C0C", VA = "0xAF6C0C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600054B")]
			[Address(RVA = "0xAF6C74", Offset = "0xAF6C74", VA = "0xAF6C74", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000546")]
		[Address(RVA = "0xAF6858", Offset = "0xAF6858", VA = "0xAF6858")]
		[DebuggerHidden]
		public <FadeOutRoutine>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6000547")]
		[Address(RVA = "0xAF6A20", Offset = "0xAF6A20", VA = "0xAF6A20", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000548")]
		[Address(RVA = "0xAF6A24", Offset = "0xAF6A24", VA = "0xAF6A24", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600054A")]
		[Address(RVA = "0xAF6C14", Offset = "0xAF6C14", VA = "0xAF6C14", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Dictionary<Renderer, RendererFadeValues> renderersSetUp;

	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float fadeDuration;

	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int colorPropertyID;

	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MonoBehaviour owner;

	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool isFading;

	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Action OnFadeOut;

	[Token(Token = "0x600053E")]
	[Address(RVA = "0xAF6598", Offset = "0xAF6598", VA = "0xAF6598")]
	public Fader(MonoBehaviour owner)
	{
	}

	[Token(Token = "0x600053F")]
	[Address(RVA = "0xAF65C4", Offset = "0xAF65C4", VA = "0xAF65C4")]
	public void Initialize(float fadeDuration = 4f, string colorName = "_Color")
	{
	}

	[Token(Token = "0x6000540")]
	[Address(RVA = "0xAF6794", Offset = "0xAF6794", VA = "0xAF6794")]
	public void StartFadeOut()
	{
	}

	[Token(Token = "0x6000541")]
	[Address(RVA = "0xAF67E8", Offset = "0xAF67E8", VA = "0xAF67E8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x87BBA4", Offset = "0x87BBA4")]
	private IEnumerator FadeOutRoutine()
	{
		return null;
	}

	[Token(Token = "0x6000542")]
	[Address(RVA = "0xAF6884", Offset = "0xAF6884", VA = "0xAF6884")]
	private void Decolorize(float t)
	{
	}
}
[Token(Token = "0x20000EA")]
public class FakeHand : MonoBehaviour
{
	[Token(Token = "0x20000EB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F038", Offset = "0x86F038")]
	private sealed class <FakeHandAnimationCoroutine>d__41 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FakeHand <>4__this;

		[Token(Token = "0x4000454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int triggerHash;

		[Token(Token = "0x170000C0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600055D")]
			[Address(RVA = "0xAF7418", Offset = "0xAF7418", VA = "0xAF7418", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600055F")]
			[Address(RVA = "0xAF7480", Offset = "0xAF7480", VA = "0xAF7480", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600055A")]
		[Address(RVA = "0xAF7218", Offset = "0xAF7218", VA = "0xAF7218")]
		[DebuggerHidden]
		public <FakeHandAnimationCoroutine>d__41(int <>1__state)
		{
		}

		[Token(Token = "0x600055B")]
		[Address(RVA = "0xAF7318", Offset = "0xAF7318", VA = "0xAF7318", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600055C")]
		[Address(RVA = "0xAF731C", Offset = "0xAF731C", VA = "0xAF731C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600055E")]
		[Address(RVA = "0xAF7420", Offset = "0xAF7420", VA = "0xAF7420", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform palmTransform;

	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Animator handAnimator;

	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float timeToWaitForFadeIn;

	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float timeToWaitForFadeOut;

	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private SkinnedMeshRenderer fakeHandsMeshRenderer;

	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private string FadeInAnimationString;

	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private string FadeOutAnimationString;

	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private string SleepAnimationString;

	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private string vortexTriggerString;

	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private string eyeTriggerString;

	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private string constellationTriggerString;

	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private string fadeOutTriggerString;

	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private string flashLightTriggerString;

	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int FadeInAnimHash;

	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private int FadeOutAnimHash;

	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int SleepAnimHash;

	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private int vortexTriggerHash;

	[Token(Token = "0x4000447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int eyeInteractionTriggerHash;

	[Token(Token = "0x4000448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private int constellationTriggerHash;

	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int flashlightTriggerHash;

	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private int FadeOutTriggerHash;

	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int currentCoroutineHash;

	[Token(Token = "0x400044C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Coroutine animationCoroutine;

	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private WaitForSeconds waitForFadeIn;

	[Token(Token = "0x400044E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private WaitForSeconds waitForCurrentAnimation;

	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private bool rendererStatusBeforePause;

	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x873994", Offset = "0x873994")]
	private bool <IsHandsHidden>k__BackingField;

	[Token(Token = "0x170000BE")]
	public bool IsHandsHidden
	{
		[Token(Token = "0x600054C")]
		[Address(RVA = "0xAF6C90", Offset = "0xAF6C90", VA = "0xAF6C90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87BC58", Offset = "0x87BC58")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600054D")]
		[Address(RVA = "0xAF6C98", Offset = "0xAF6C98", VA = "0xAF6C98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87BC68", Offset = "0x87BC68")]
		private set
		{
		}
	}

	[Token(Token = "0x170000BF")]
	public Transform PalmTransform
	{
		[Token(Token = "0x600054E")]
		[Address(RVA = "0xAF6CA4", Offset = "0xAF6CA4", VA = "0xAF6CA4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600054F")]
	[Address(RVA = "0xAF6CAC", Offset = "0xAF6CAC", VA = "0xAF6CAC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000550")]
	[Address(RVA = "0xAF6DE0", Offset = "0xAF6DE0", VA = "0xAF6DE0")]
	public void HideRenderer()
	{
	}

	[Token(Token = "0x6000551")]
	[Address(RVA = "0xAF6E00", Offset = "0xAF6E00", VA = "0xAF6E00")]
	public void HideHand()
	{
	}

	[Token(Token = "0x6000552")]
	[Address(RVA = "0xAF6EB0", Offset = "0xAF6EB0", VA = "0xAF6EB0")]
	public void ShowHands()
	{
	}

	[Token(Token = "0x6000553")]
	[Address(RVA = "0xAF6F40", Offset = "0xAF6F40", VA = "0xAF6F40")]
	public void PlayVortexInteractionAnimation()
	{
	}

	[Token(Token = "0x6000554")]
	[Address(RVA = "0xAF7010", Offset = "0xAF7010", VA = "0xAF7010")]
	public void PlayConstellationInteractionAnimation()
	{
	}

	[Token(Token = "0x6000555")]
	[Address(RVA = "0xAF7060", Offset = "0xAF7060", VA = "0xAF7060")]
	public void PlayEyeInteractionAnimation()
	{
	}

	[Token(Token = "0x6000556")]
	[Address(RVA = "0xAF70B0", Offset = "0xAF70B0", VA = "0xAF70B0")]
	public void PlayFlashlightInteractionAnimation()
	{
	}

	[Token(Token = "0x6000557")]
	[Address(RVA = "0xAF7100", Offset = "0xAF7100", VA = "0xAF7100")]
	public void PlayFadeOutAnimation()
	{
	}

	[Token(Token = "0x6000558")]
	[Address(RVA = "0xAF6F90", Offset = "0xAF6F90", VA = "0xAF6F90")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x87BC78", Offset = "0x87BC78")]
	private IEnumerator FakeHandAnimationCoroutine(int triggerHash)
	{
		return null;
	}

	[Token(Token = "0x6000559")]
	[Address(RVA = "0xAF7244", Offset = "0xAF7244", VA = "0xAF7244")]
	public FakeHand()
	{
	}
}
[Token(Token = "0x20000EC")]
public class FakeHandsController : MonoBehaviour
{
	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private FakeHand leftFakeHand;

	[Token(Token = "0x4000456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private FakeHand rightFakeHand;

	[Token(Token = "0x4000457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float positionLerpSmooth;

	[Token(Token = "0x4000458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float rotationLerpSmooth;

	[Token(Token = "0x4000459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Vector3 offset;

	[Token(Token = "0x400045A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static FakeHandsController Instance;

	[Token(Token = "0x400045B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 rotationLerped;

	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 positionLerped;

	[Token(Token = "0x170000C2")]
	public Transform LeftFakeHandPalmBone
	{
		[Token(Token = "0x6000560")]
		[Address(RVA = "0xAF7D98", Offset = "0xAF7D98", VA = "0xAF7D98")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000C3")]
	public Transform RightFakeHandPalmBone
	{
		[Token(Token = "0x6000561")]
		[Address(RVA = "0xAF7DB4", Offset = "0xAF7DB4", VA = "0xAF7DB4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000562")]
	[Address(RVA = "0xAF7DD0", Offset = "0xAF7DD0", VA = "0xAF7DD0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000563")]
	[Address(RVA = "0xAF7E9C", Offset = "0xAF7E9C", VA = "0xAF7E9C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000564")]
	[Address(RVA = "0xAF7EC0", Offset = "0xAF7EC0", VA = "0xAF7EC0")]
	private void CheckInteractivityStatus()
	{
	}

	[Token(Token = "0x6000565")]
	[Address(RVA = "0xAF8230", Offset = "0xAF8230", VA = "0xAF8230")]
	public void PlayHandsAnimation(FakeHandsAnimations animationType)
	{
	}

	[Token(Token = "0x6000566")]
	[Address(RVA = "0xAF8444", Offset = "0xAF8444", VA = "0xAF8444")]
	public void ModifyOffset(Vector3 newOffset)
	{
	}

	[Token(Token = "0x6000567")]
	[Address(RVA = "0xAF7FC4", Offset = "0xAF7FC4", VA = "0xAF7FC4")]
	private void LerpPositionAndRotation()
	{
	}

	[Token(Token = "0x6000568")]
	[Address(RVA = "0xAF8340", Offset = "0xAF8340", VA = "0xAF8340")]
	private void PlayVortexAnimation()
	{
	}

	[Token(Token = "0x6000569")]
	[Address(RVA = "0xAF83A8", Offset = "0xAF83A8", VA = "0xAF83A8")]
	private void PlayConstellationAnimation()
	{
	}

	[Token(Token = "0x600056A")]
	[Address(RVA = "0xAF8374", Offset = "0xAF8374", VA = "0xAF8374")]
	private void PlayEyeAnimation()
	{
	}

	[Token(Token = "0x600056B")]
	[Address(RVA = "0xAF83DC", Offset = "0xAF83DC", VA = "0xAF83DC")]
	private void PlayFlashlightAnimation()
	{
	}

	[Token(Token = "0x600056C")]
	[Address(RVA = "0xAF8410", Offset = "0xAF8410", VA = "0xAF8410")]
	private void PlayFadeOutAnimation()
	{
	}

	[Token(Token = "0x600056D")]
	[Address(RVA = "0xAF8450", Offset = "0xAF8450", VA = "0xAF8450")]
	public FakeHandsController()
	{
	}
}
[Token(Token = "0x20000ED")]
public enum FakeHandsAnimations
{
	[Token(Token = "0x400045E")]
	None,
	[Token(Token = "0x400045F")]
	VortexAnimation,
	[Token(Token = "0x4000460")]
	EyeAnimation,
	[Token(Token = "0x4000461")]
	FadeOut,
	[Token(Token = "0x4000462")]
	ConstellationAnimation,
	[Token(Token = "0x4000463")]
	Flashlight
}
[Token(Token = "0x20000EE")]
public class CustomGUIButton : MonoBehaviour, IInteractable, IHoverable
{
	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8739F4", Offset = "0x8739F4")]
	[SerializeField]
	private TextMeshProUGUI textUI;

	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private MaskableGraphic[] imageUIs;

	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x873A50", Offset = "0x873A50")]
	[SerializeField]
	private bool staysPressed;

	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private Color inactiveColor;

	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private Color selectedColor;

	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private Color activeColor;

	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private UnityEvent onPress;

	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Action<CustomGUIButton> OnTurnOn;

	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Action<CustomGUIButton> OnTurnOff;

	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool currentState;

	[Token(Token = "0x400046E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	private bool canBeInteracted;

	[Token(Token = "0x600056E")]
	[Address(RVA = "0xAE99CC", Offset = "0xAE99CC", VA = "0xAE99CC")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x600056F")]
	[Address(RVA = "0xAE9BC8", Offset = "0xAE9BC8", VA = "0xAE9BC8", Slot = "4")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x87BD2C", Offset = "0x87BD2C")]
	public void Interact()
	{
	}

	[Token(Token = "0x6000570")]
	[Address(RVA = "0xAE9CF0", Offset = "0xAE9CF0", VA = "0xAE9CF0", Slot = "5")]
	public void OnHover()
	{
	}

	[Token(Token = "0x6000571")]
	[Address(RVA = "0xAE9D44", Offset = "0xAE9D44", VA = "0xAE9D44", Slot = "6")]
	public void OnUnhover()
	{
	}

	[Token(Token = "0x6000572")]
	[Address(RVA = "0xAE9A40", Offset = "0xAE9A40", VA = "0xAE9A40")]
	private void ChangeColor(Color color)
	{
	}

	[Token(Token = "0x6000573")]
	[Address(RVA = "0xAE9C20", Offset = "0xAE9C20", VA = "0xAE9C20")]
	public void ChangeState(bool state)
	{
	}

	[Token(Token = "0x6000574")]
	[Address(RVA = "0xAE9D98", Offset = "0xAE9D98", VA = "0xAE9D98")]
	public void EnableInteraction()
	{
	}

	[Token(Token = "0x6000575")]
	[Address(RVA = "0xAE9DA4", Offset = "0xAE9DA4", VA = "0xAE9DA4")]
	public void DisableInteraction()
	{
	}

	[Token(Token = "0x6000576")]
	[Address(RVA = "0xAE9DAC", Offset = "0xAE9DAC", VA = "0xAE9DAC")]
	public CustomGUIButton()
	{
	}
}
[Token(Token = "0x20000EF")]
public class GoToMenuButton : MonoBehaviour
{
	[Token(Token = "0x6000577")]
	[Address(RVA = "0xB4293C", Offset = "0xB4293C", VA = "0xB4293C")]
	public void GoToMenu()
	{
	}

	[Token(Token = "0x6000578")]
	[Address(RVA = "0xB42998", Offset = "0xB42998", VA = "0xB42998")]
	public GoToMenuButton()
	{
	}
}
[Token(Token = "0x20000F0")]
public class HandDrum : MonoBehaviour
{
	[Token(Token = "0x20000F1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F048", Offset = "0x86F048")]
	private sealed class <VibrateDrum>d__28 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float speedT;

		[Token(Token = "0x4000485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HandDrum <>4__this;

		[Token(Token = "0x4000486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <currentTime>5__2;

		[Token(Token = "0x4000487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <startTime>5__3;

		[Token(Token = "0x4000488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <currentMaxVibration>5__4;

		[Token(Token = "0x170000C4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600058A")]
			[Address(RVA = "0xB4444C", Offset = "0xB4444C", VA = "0xB4444C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600058C")]
			[Address(RVA = "0xB444B4", Offset = "0xB444B4", VA = "0xB444B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000587")]
		[Address(RVA = "0xB43E0C", Offset = "0xB43E0C", VA = "0xB43E0C")]
		[DebuggerHidden]
		public <VibrateDrum>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x6000588")]
		[Address(RVA = "0xB44168", Offset = "0xB44168", VA = "0xB44168", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000589")]
		[Address(RVA = "0xB4416C", Offset = "0xB4416C", VA = "0xB4416C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600058B")]
		[Address(RVA = "0xB44454", Offset = "0xB44454", VA = "0xB44454", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Vector2 speedRange;

	[Token(Token = "0x4000470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform forwardChecker;

	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x873AFC", Offset = "0x873AFC")]
	[SerializeField]
	private float maxHitAngle;

	[Token(Token = "0x4000472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float drumCooldown;

	[Token(Token = "0x4000473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool canHit;

	[Token(Token = "0x4000474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool canHitWithLeft;

	[Token(Token = "0x4000475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	private bool canHitWithRight;

	[Token(Token = "0x4000476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	private bool isEnabled;

	[Token(Token = "0x4000477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Attachment drumAttachment;

	[Token(Token = "0x4000478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private DrumTracker myTracker;

	[Token(Token = "0x4000479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AudioClip[] drumClips;

	[Token(Token = "0x400047A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Renderer[] vibrationRenderers;

	[Token(Token = "0x400047B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private MaterialPropertyBlock[] vibrationPropertyBlocks;

	[Token(Token = "0x400047C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Coroutine vibrationCoroutine;

	[Token(Token = "0x400047D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<Collider> leftHandColliders;

	[Token(Token = "0x400047E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<Collider> rightHandColliders;

	[Token(Token = "0x400047F")]
	private const string VIBRATION = "_IntensidadDisplace";

	[Token(Token = "0x4000480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int vibrationId;

	[Token(Token = "0x4000481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Action<float, GameObject> OnDrumHit;

	[Token(Token = "0x6000579")]
	[Address(RVA = "0xB435C4", Offset = "0xB435C4", VA = "0xB435C4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600057A")]
	[Address(RVA = "0xB4361C", Offset = "0xB4361C", VA = "0xB4361C")]
	private void Start()
	{
	}

	[Token(Token = "0x600057B")]
	[Address(RVA = "0xB43674", Offset = "0xB43674", VA = "0xB43674")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600057C")]
	[Address(RVA = "0xB43B20", Offset = "0xB43B20", VA = "0xB43B20")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600057D")]
	[Address(RVA = "0xB43BE8", Offset = "0xB43BE8", VA = "0xB43BE8")]
	private bool CheckHandCollider(HandController hand, List<Collider> colliderList, Collider colliderToAdd)
	{
		return default(bool);
	}

	[Token(Token = "0x600057E")]
	[Address(RVA = "0xB43CBC", Offset = "0xB43CBC", VA = "0xB43CBC")]
	private void RemoveHandCollider(Hand handType, List<Collider> colliderList, Collider colliderToRemove)
	{
	}

	[Token(Token = "0x600057F")]
	[Address(RVA = "0xB43798", Offset = "0xB43798", VA = "0xB43798")]
	private bool IsFacingDrum(Vector3 handDirection)
	{
		return default(bool);
	}

	[Token(Token = "0x6000580")]
	[Address(RVA = "0xB43884", Offset = "0xB43884", VA = "0xB43884")]
	private void HitDrum(float speed)
	{
	}

	[Token(Token = "0x6000581")]
	[Address(RVA = "0xB43E00", Offset = "0xB43E00", VA = "0xB43E00")]
	private void AllowHit()
	{
	}

	[Token(Token = "0x6000582")]
	[Address(RVA = "0xB43D80", Offset = "0xB43D80", VA = "0xB43D80")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x87BD64", Offset = "0x87BD64")]
	private IEnumerator VibrateDrum(float speedT)
	{
		return null;
	}

	[Token(Token = "0x6000583")]
	[Address(RVA = "0xB43E38", Offset = "0xB43E38", VA = "0xB43E38")]
	public void SetDrum(DrumTracker tracker)
	{
	}

	[Token(Token = "0x6000584")]
	[Address(RVA = "0xB44064", Offset = "0xB44064", VA = "0xB44064")]
	public void Disable()
	{
	}

	[Token(Token = "0x6000585")]
	[Address(RVA = "0xB44090", Offset = "0xB44090", VA = "0xB44090")]
	public void Enable()
	{
	}

	[Token(Token = "0x6000586")]
	[Address(RVA = "0xB440C0", Offset = "0xB440C0", VA = "0xB440C0")]
	public HandDrum()
	{
	}
}
[Token(Token = "0x20000F2")]
public class HandLookAtRotationAttachment : MonoBehaviour
{
	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Hand handType;

	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private HandController hand;

	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool attached;

	[Token(Token = "0x600058D")]
	[Address(RVA = "0xB44DA0", Offset = "0xB44DA0", VA = "0xB44DA0")]
	private void Start()
	{
	}

	[Token(Token = "0x600058E")]
	[Address(RVA = "0xB44EFC", Offset = "0xB44EFC", VA = "0xB44EFC")]
	private void Update()
	{
	}

	[Token(Token = "0x600058F")]
	[Address(RVA = "0xB44F70", Offset = "0xB44F70", VA = "0xB44F70")]
	private void EnableAttachment()
	{
	}

	[Token(Token = "0x6000590")]
	[Address(RVA = "0xB44F7C", Offset = "0xB44F7C", VA = "0xB44F7C")]
	private void DisableAttachment()
	{
	}

	[Token(Token = "0x6000591")]
	[Address(RVA = "0xB44F84", Offset = "0xB44F84", VA = "0xB44F84")]
	public HandLookAtRotationAttachment()
	{
	}
}
[Token(Token = "0x20000F3")]
public class HandPalmRotationAttachment : MonoBehaviour
{
	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Hand handType;

	[Token(Token = "0x400048D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float rotationSpeed;

	[Token(Token = "0x400048E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private HandController hand;

	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool attached;

	[Token(Token = "0x6000592")]
	[Address(RVA = "0xB44F94", Offset = "0xB44F94", VA = "0xB44F94")]
	private void Start()
	{
	}

	[Token(Token = "0x6000593")]
	[Address(RVA = "0xB450F0", Offset = "0xB450F0", VA = "0xB450F0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000594")]
	[Address(RVA = "0xB45250", Offset = "0xB45250", VA = "0xB45250")]
	private void EnableAttachment()
	{
	}

	[Token(Token = "0x6000595")]
	[Address(RVA = "0xB4525C", Offset = "0xB4525C", VA = "0xB4525C")]
	private void DisableAttachment()
	{
	}

	[Token(Token = "0x6000596")]
	[Address(RVA = "0xB45264", Offset = "0xB45264", VA = "0xB45264")]
	public HandPalmRotationAttachment()
	{
	}
}
[Token(Token = "0x20000F4")]
public class HandSeek : Seek
{
	[Token(Token = "0x4000490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x873B7C", Offset = "0x873B7C")]
	[SerializeField]
	private Hand handType;

	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform target;

	[Token(Token = "0x170000C6")]
	private HandController Hand
	{
		[Token(Token = "0x6000597")]
		[Address(RVA = "0xB460C8", Offset = "0xB460C8", VA = "0xB460C8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000C7")]
	public override Transform Target
	{
		[Token(Token = "0x6000598")]
		[Address(RVA = "0xB4612C", Offset = "0xB4612C", VA = "0xB4612C", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000599")]
	[Address(RVA = "0xB46134", Offset = "0xB46134", VA = "0xB46134")]
	private void Start()
	{
	}

	[Token(Token = "0x600059A")]
	[Address(RVA = "0xB46384", Offset = "0xB46384", VA = "0xB46384")]
	private void DisableSeek()
	{
	}

	[Token(Token = "0x600059B")]
	[Address(RVA = "0xB46310", Offset = "0xB46310", VA = "0xB46310")]
	private void EnableSeek()
	{
	}

	[Token(Token = "0x600059C")]
	[Address(RVA = "0xB4638C", Offset = "0xB4638C", VA = "0xB4638C")]
	public HandSeek()
	{
	}
}
[Token(Token = "0x20000F5")]
public class HandSpeedProxy : MonoBehaviour
{
	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Hand handType;

	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private HandController handController;

	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private PositionTracker tracker;

	[Token(Token = "0x170000C8")]
	public Hand HandType
	{
		[Token(Token = "0x600059D")]
		[Address(RVA = "0xB46394", Offset = "0xB46394", VA = "0xB46394")]
		get
		{
			return default(Hand);
		}
	}

	[Token(Token = "0x170000C9")]
	public PositionTracker Tracker
	{
		[Token(Token = "0x600059E")]
		[Address(RVA = "0xB4639C", Offset = "0xB4639C", VA = "0xB4639C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600059F")]
	[Address(RVA = "0xB463A4", Offset = "0xB463A4", VA = "0xB463A4")]
	private void Start()
	{
	}

	[Token(Token = "0x60005A0")]
	[Address(RVA = "0xB43868", Offset = "0xB43868", VA = "0xB43868")]
	public float GetHandSpeed()
	{
		return default(float);
	}

	[Token(Token = "0x60005A1")]
	[Address(RVA = "0xB4640C", Offset = "0xB4640C", VA = "0xB4640C")]
	public HandSpeedProxy()
	{
	}
}
[Token(Token = "0x20000F6")]
public class HandTrackingActivator : MonoBehaviour
{
	[Token(Token = "0x4000495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Hand handType;

	[Token(Token = "0x4000496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private HandController hand;

	[Token(Token = "0x60005A2")]
	[Address(RVA = "0xB46414", Offset = "0xB46414", VA = "0xB46414")]
	private void Start()
	{
	}

	[Token(Token = "0x60005A3")]
	[Address(RVA = "0xB46570", Offset = "0xB46570", VA = "0xB46570")]
	private void ActivateGameObject()
	{
	}

	[Token(Token = "0x60005A4")]
	[Address(RVA = "0xB46598", Offset = "0xB46598", VA = "0xB46598")]
	private void DeactivateGameObject()
	{
	}

	[Token(Token = "0x60005A5")]
	[Address(RVA = "0xB465C0", Offset = "0xB465C0", VA = "0xB465C0")]
	public HandTrackingActivator()
	{
	}
}
[Token(Token = "0x20000F7")]
public class HandVisibilityLink : MonoBehaviour
{
	[Token(Token = "0x4000497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Hand handType;

	[Token(Token = "0x170000CA")]
	private HandController Hand
	{
		[Token(Token = "0x60005A6")]
		[Address(RVA = "0xB465C8", Offset = "0xB465C8", VA = "0xB465C8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60005A7")]
	[Address(RVA = "0xB4662C", Offset = "0xB4662C", VA = "0xB4662C")]
	private void Start()
	{
	}

	[Token(Token = "0x60005A8")]
	[Address(RVA = "0xB46818", Offset = "0xB46818", VA = "0xB46818")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60005A9")]
	[Address(RVA = "0xB46A04", Offset = "0xB46A04", VA = "0xB46A04")]
	private void FadeChange(float value)
	{
	}

	[Token(Token = "0x60005AA")]
	[Address(RVA = "0xB46A08", Offset = "0xB46A08", VA = "0xB46A08")]
	private void StateChange(bool state)
	{
	}

	[Token(Token = "0x60005AB")]
	[Address(RVA = "0xB46A14", Offset = "0xB46A14", VA = "0xB46A14")]
	public HandVisibilityLink()
	{
	}
}
[Token(Token = "0x20000F8")]
public class ConstellationAttractionInteraction : MonoBehaviour, IInteraction
{
	[Serializable]
	[Token(Token = "0x20000F9")]
	private class ConstellationParticleAnimation
	{
		[Token(Token = "0x40004AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private ParticleSystem particle;

		[Token(Token = "0x40004AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool useColorIntensity;

		[Token(Token = "0x40004AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x873D18", Offset = "0x873D18")]
		[SerializeField]
		private float colorIntensityMultiplier;

		[Token(Token = "0x40004B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool useEmissionMultiplier;

		[Token(Token = "0x40004B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[SerializeField]
		private bool useEmissionCurve;

		[Token(Token = "0x40004B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x873D7C", Offset = "0x873D7C")]
		[SerializeField]
		private float emissionMultiplier;

		[Token(Token = "0x40004B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ParticleSystemRenderer particleRenderer;

		[Token(Token = "0x40004B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ParticleSystem.EmissionModule emission;

		[Token(Token = "0x40004B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float initialColorIntensity;

		[Token(Token = "0x40004B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float initialEmissionAmount;

		[Token(Token = "0x40004B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private MaterialPropertyBlock propertyBlock;

		[Token(Token = "0x40004B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int rendererId;

		[Token(Token = "0x40004B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int colorIntensityId;

		[Token(Token = "0x40004BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float previousIntensity;

		[Token(Token = "0x40004BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float currentIntensity;

		[Token(Token = "0x60005B5")]
		[Address(RVA = "0xB5BA68", Offset = "0xB5BA68", VA = "0xB5BA68")]
		public void SetUp()
		{
		}

		[Token(Token = "0x60005B6")]
		[Address(RVA = "0xB5C0F8", Offset = "0xB5C0F8", VA = "0xB5C0F8")]
		public void UpdateParticleBehavior(float interactionIntensity, float modulationIntensitySpeed)
		{
		}

		[Token(Token = "0x60005B7")]
		[Address(RVA = "0xB5C340", Offset = "0xB5C340", VA = "0xB5C340")]
		public ConstellationParticleAnimation()
		{
		}
	}

	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<ParticleSystem> leftHandParticles;

	[Token(Token = "0x4000499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private List<ParticleSystem> rightHandParticles;

	[Token(Token = "0x400049A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x873C18", Offset = "0x873C18")]
	private float handsPositionLerpSpeed;

	[Token(Token = "0x400049B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x873C58", Offset = "0x873C58")]
	private float handsIntensityModulationLerp;

	[Token(Token = "0x400049C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private List<ConstellationParticleAnimation> rightConstellationParticles;

	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private List<ConstellationParticleAnimation> leftConstellationParticles;

	[Token(Token = "0x400049E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Transform constelationTransform;

	[Token(Token = "0x400049F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private float angleTolerance;

	[Token(Token = "0x40004A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private Vector2 shoulderDistance;

	[Token(Token = "0x40004A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	private float strechedArmLength;

	[Token(Token = "0x40004A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private HandController leftHandController;

	[Token(Token = "0x40004A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private HandController rightHandController;

	[Token(Token = "0x40004A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Transform centerEyeCamera;

	[Token(Token = "0x40004A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 leftShoulder;

	[Token(Token = "0x40004A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Vector3 rightShoulder;

	[Token(Token = "0x40004A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 leftHandDirectionFromCamera;

	[Token(Token = "0x40004A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Vector3 rightHandDirectionFromCamera;

	[Token(Token = "0x40004A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3 previousLeftPosition;

	[Token(Token = "0x40004AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private Vector3 currentLeftPositionValue;

	[Token(Token = "0x40004AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Vector3 previousRightPosition;

	[Token(Token = "0x40004AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private Vector3 currentRightPositionValue;

	[Token(Token = "0x60005AC")]
	[Address(RVA = "0xB5B668", Offset = "0xB5B668", VA = "0xB5B668")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005AD")]
	[Address(RVA = "0xB5B6EC", Offset = "0xB5B6EC", VA = "0xB5B6EC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60005AE")]
	[Address(RVA = "0xB5B934", Offset = "0xB5B934", VA = "0xB5B934", Slot = "4")]
	public void Play()
	{
	}

	[Token(Token = "0x60005AF")]
	[Address(RVA = "0xB5BB94", Offset = "0xB5BB94", VA = "0xB5BB94", Slot = "5")]
	public void ShutDown()
	{
	}

	[Token(Token = "0x60005B0")]
	[Address(RVA = "0xB5B7B0", Offset = "0xB5B7B0", VA = "0xB5B7B0")]
	private void AnimateParticlePosition()
	{
	}

	[Token(Token = "0x60005B1")]
	[Address(RVA = "0xB5BBA0", Offset = "0xB5BBA0", VA = "0xB5BBA0")]
	private void SetParticlePosition(HandController controller, ref Vector3 previousPos, ref Vector3 currentPos, List<ParticleSystem> handParticles, Vector3 directionFromCamera)
	{
	}

	[Token(Token = "0x60005B2")]
	[Address(RVA = "0xB5B804", Offset = "0xB5B804", VA = "0xB5B804")]
	private void AnimateConstellationParticles()
	{
	}

	[Token(Token = "0x60005B3")]
	[Address(RVA = "0xB5BE84", Offset = "0xB5BE84", VA = "0xB5BE84")]
	private float GetInteractivityT(HandController controller, Hand hand)
	{
		return default(float);
	}

	[Token(Token = "0x60005B4")]
	[Address(RVA = "0xB5C2CC", Offset = "0xB5C2CC", VA = "0xB5C2CC")]
	public ConstellationAttractionInteraction()
	{
	}
}
[Token(Token = "0x20000FA")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x86F058", Offset = "0x86F058")]
public class EnergyBall : MonoBehaviour
{
	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ParticleSystem energyParticle;

	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool slowDownDuringTime;

	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AnimationCurve velocityAnimationCurve;

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private int maxParticlesToEmitt;

	[Token(Token = "0x40004C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float gravityModifier;

	[Token(Token = "0x40004C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float rotationModifier;

	[Token(Token = "0x40004C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private float offSetModifier;

	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ParticleSystem.MainModule mainModule;

	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 particlesVelocity;

	[Token(Token = "0x40004C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 directionOffset;

	[Token(Token = "0x40004C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float particleDuration;

	[Token(Token = "0x40004C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float lifeTimer;

	[Token(Token = "0x60005B8")]
	[Address(RVA = "0xAF04C8", Offset = "0xAF04C8", VA = "0xAF04C8")]
	private void Update()
	{
	}

	[Token(Token = "0x60005B9")]
	[Address(RVA = "0xAF0824", Offset = "0xAF0824", VA = "0xAF0824")]
	public void SetUpEnergyLaunch(Vector3 direction, Vector3 directionOffset, int initialEnergy, float speed)
	{
	}

	[Token(Token = "0x60005BA")]
	[Address(RVA = "0xAF09D0", Offset = "0xAF09D0", VA = "0xAF09D0")]
	public EnergyBall()
	{
	}
}
[Token(Token = "0x20000FB")]
public class EnergyBallDrawerInteraction : MonoBehaviour, IInteraction
{
	[Token(Token = "0x40004C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Hand controllerType;

	[Token(Token = "0x40004C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private EnergyBall energyReleaseParticlePrefab;

	[Token(Token = "0x40004CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool displayDebugInformation;

	[Token(Token = "0x40004CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private TextMeshProUGUI canvasMesh;

	[Token(Token = "0x40004CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float minimumSpeedToAddEnergy;

	[Token(Token = "0x40004CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private float minimumSpeedToReleaseEnergy;

	[Token(Token = "0x40004CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float minimumEnergyToActivate;

	[Token(Token = "0x40004CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private float energyIncreaseModifier;

	[Token(Token = "0x40004D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private float energyDecreaseRatio;

	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private float activationCoolDown;

	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private float timeToDetectRestMovement;

	[Token(Token = "0x40004D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	private float maxTimeToleranceForAveragePosition;

	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private float OffsetTimeTolerance;

	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private HandController controller;

	[Token(Token = "0x40004D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float currentEnergy;

	[Token(Token = "0x40004D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float currentSpeed;

	[Token(Token = "0x40004D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float speedStopTimer;

	[Token(Token = "0x40004D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float energyCoolDownTimer;

	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float lastEnergyReleaseTime;

	[Token(Token = "0x40004DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private bool trackEnergy;

	[Token(Token = "0x60005BB")]
	[Address(RVA = "0xAF09F4", Offset = "0xAF09F4", VA = "0xAF09F4")]
	private void Update()
	{
	}

	[Token(Token = "0x60005BC")]
	[Address(RVA = "0xAF0AF8", Offset = "0xAF0AF8", VA = "0xAF0AF8")]
	private void UpdateEnergyAndSpeed()
	{
	}

	[Token(Token = "0x60005BD")]
	[Address(RVA = "0xAF0BDC", Offset = "0xAF0BDC", VA = "0xAF0BDC")]
	private void CheckSpawnConditions()
	{
	}

	[Token(Token = "0x60005BE")]
	[Address(RVA = "0xAF0DA4", Offset = "0xAF0DA4", VA = "0xAF0DA4")]
	private void SpawnEnergyParticle()
	{
	}

	[Token(Token = "0x60005BF")]
	[Address(RVA = "0xAF1000", Offset = "0xAF1000", VA = "0xAF1000")]
	private void ResetInternalTimers()
	{
	}

	[Token(Token = "0x60005C0")]
	[Address(RVA = "0xAF1030", Offset = "0xAF1030", VA = "0xAF1030")]
	private void StartTrackingEnergy()
	{
	}

	[Token(Token = "0x60005C1")]
	[Address(RVA = "0xAF1118", Offset = "0xAF1118", VA = "0xAF1118")]
	private void StopTrackingEnergy()
	{
	}

	[Token(Token = "0x60005C2")]
	[Address(RVA = "0xAF0C64", Offset = "0xAF0C64", VA = "0xAF0C64")]
	private void DisplayDebugInfo()
	{
	}

	[Token(Token = "0x60005C3")]
	[Address(RVA = "0xAF1128", Offset = "0xAF1128", VA = "0xAF1128", Slot = "4")]
	public void Play()
	{
	}

	[Token(Token = "0x60005C4")]
	[Address(RVA = "0xAF1240", Offset = "0xAF1240", VA = "0xAF1240", Slot = "5")]
	public void ShutDown()
	{
	}

	[Token(Token = "0x60005C5")]
	[Address(RVA = "0xAF1330", Offset = "0xAF1330", VA = "0xAF1330")]
	private void Reparent(ControllerType newController)
	{
	}

	[Token(Token = "0x60005C6")]
	[Address(RVA = "0xAF138C", Offset = "0xAF138C", VA = "0xAF138C")]
	public EnergyBallDrawerInteraction()
	{
	}
}
[Token(Token = "0x20000FC")]
public class EnergyVortex : MonoBehaviour
{
	[Token(Token = "0x40004DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float initialEnergy;

	[Token(Token = "0x40004DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float radiusOfInfluence;

	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private int maxVortexPositionsToTrack;

	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private ParticleSystem[] particleSystems;

	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private bool lerpColor;

	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private AnimationCurve colorGradientCurve;

	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private bool lerpEmission;

	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private AnimationCurve emissionCurve;

	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private bool lerpIntensity;

	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private AnimationCurve intensityCurve;

	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private float intensityChildFall;

	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x873FB0", Offset = "0x873FB0")]
	private float timeToFullyHeal;

	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x873FF0", Offset = "0x873FF0")]
	[SerializeField]
	private float timeToDie;

	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[SerializeField]
	private float samePositionEnergyModifier;

	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private float newPositionEnergyModifier;

	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[SerializeField]
	private float timeToDisappear;

	[Token(Token = "0x40004EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private float vortexMovementSpeed;

	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[SerializeField]
	private float vortexSelfAttractionSpeed;

	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private ParticleSystemForceField vertexForceField;

	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private List<Vector3> vortexPositions;

	[Token(Token = "0x40004F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector3 currentHandPosition;

	[Token(Token = "0x40004F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector3 initialAveragePosition;

	[Token(Token = "0x40004F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Vector3 currentVortexAveragePosition;

	[Token(Token = "0x40004F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private Vector3 initialAverageNormal;

	[Token(Token = "0x40004F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Vector3 currentAverageNormal;

	[Token(Token = "0x40004F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float averageDistanceFromCenter;

	[Token(Token = "0x40004F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float[] initialRateOverTimes;

	[Token(Token = "0x40004F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Color currentVortexColor;

	[Token(Token = "0x40004F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float currentEnergy;

	[Token(Token = "0x40004F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private float energyModifier;

	[Token(Token = "0x40004FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool isVortexBeingActivated;

	[Token(Token = "0x40004FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
	private bool isVortexDisappearing;

	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private float timerToDisappear;

	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private ParticleSystemRenderer[] renderers;

	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private ParticleSystem.EmissionModule[] emissionModules;

	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private MaterialPropertyBlock propertyBlock;

	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private int colorPropertyId;

	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private int intensityPropertyId;

	[Token(Token = "0x170000CB")]
	public float GetCurrentEnergyT
	{
		[Token(Token = "0x60005C9")]
		[Address(RVA = "0xAF1504", Offset = "0xAF1504", VA = "0xAF1504")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x14000017")]
	public event Action<EnergyVortex> OnVortexDestroy
	{
		[Token(Token = "0x60005C7")]
		[Address(RVA = "0xAF13B4", Offset = "0xAF13B4", VA = "0xAF13B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87BE18", Offset = "0x87BE18")]
		add
		{
		}
		[Token(Token = "0x60005C8")]
		[Address(RVA = "0xAF145C", Offset = "0xAF145C", VA = "0xAF145C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87BE28", Offset = "0x87BE28")]
		remove
		{
		}
	}

	[Token(Token = "0x60005CA")]
	[Address(RVA = "0xAF1518", Offset = "0xAF1518", VA = "0xAF1518")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60005CB")]
	[Address(RVA = "0xAF157C", Offset = "0xAF157C", VA = "0xAF157C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005CC")]
	[Address(RVA = "0xAF17E0", Offset = "0xAF17E0", VA = "0xAF17E0")]
	private void Update()
	{
	}

	[Token(Token = "0x60005CD")]
	[Address(RVA = "0xAF22DC", Offset = "0xAF22DC", VA = "0xAF22DC")]
	public void SetUpVortex(List<Vector3> handPositions)
	{
	}

	[Token(Token = "0x60005CE")]
	[Address(RVA = "0xAF2518", Offset = "0xAF2518", VA = "0xAF2518")]
	public EnergyVortex FeedVortexPosition(Vector3 handPosition)
	{
		return null;
	}

	[Token(Token = "0x60005CF")]
	[Address(RVA = "0xAF26DC", Offset = "0xAF26DC", VA = "0xAF26DC")]
	public void ClearVortex()
	{
	}

	[Token(Token = "0x60005D0")]
	[Address(RVA = "0xAF1CA0", Offset = "0xAF1CA0", VA = "0xAF1CA0")]
	private void SetCurrentEnergy()
	{
	}

	[Token(Token = "0x60005D1")]
	[Address(RVA = "0xAF1DC8", Offset = "0xAF1DC8", VA = "0xAF1DC8")]
	private void SetCurrentColor()
	{
	}

	[Token(Token = "0x60005D2")]
	[Address(RVA = "0xAF1FFC", Offset = "0xAF1FFC", VA = "0xAF1FFC")]
	private void SetCurrentIntensity()
	{
	}

	[Token(Token = "0x60005D3")]
	[Address(RVA = "0xAF1F1C", Offset = "0xAF1F1C", VA = "0xAF1F1C")]
	private void SetCurrentEmission()
	{
	}

	[Token(Token = "0x60005D4")]
	[Address(RVA = "0xAF2548", Offset = "0xAF2548", VA = "0xAF2548")]
	private bool IsPositionWithinBounds()
	{
		return default(bool);
	}

	[Token(Token = "0x60005D5")]
	[Address(RVA = "0xAF2704", Offset = "0xAF2704", VA = "0xAF2704")]
	private bool AddPositionToList()
	{
		return default(bool);
	}

	[Token(Token = "0x60005D6")]
	[Address(RVA = "0xAF2844", Offset = "0xAF2844", VA = "0xAF2844")]
	private void UpdateCurrentAverages()
	{
	}

	[Token(Token = "0x60005D7")]
	[Address(RVA = "0xAF185C", Offset = "0xAF185C", VA = "0xAF185C")]
	private void MovePositionToAveragePosition()
	{
	}

	[Token(Token = "0x60005D8")]
	[Address(RVA = "0xAF19DC", Offset = "0xAF19DC", VA = "0xAF19DC")]
	private void MovePositionToOtherVortices()
	{
	}

	[Token(Token = "0x60005D9")]
	[Address(RVA = "0xAF28CC", Offset = "0xAF28CC", VA = "0xAF28CC")]
	private Vector3 GetAveragePosition(List<Vector3> positions)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005DA")]
	[Address(RVA = "0xAF2BD8", Offset = "0xAF2BD8", VA = "0xAF2BD8")]
	private Vector3 GetAverageNormal(List<Vector3> positions)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005DB")]
	[Address(RVA = "0xAF2A28", Offset = "0xAF2A28", VA = "0xAF2A28")]
	private float GetAverageDistance(List<Vector3> positions)
	{
		return default(float);
	}

	[Token(Token = "0x60005DC")]
	[Address(RVA = "0xAF2308", Offset = "0xAF2308", VA = "0xAF2308")]
	private void SetUpPositionAndNormal(List<Vector3> handPositions)
	{
	}

	[Token(Token = "0x60005DD")]
	[Address(RVA = "0xAF2408", Offset = "0xAF2408", VA = "0xAF2408")]
	private void SetUpVortexPositionList(List<Vector3> handPositions)
	{
	}

	[Token(Token = "0x60005DE")]
	[Address(RVA = "0xAF20F0", Offset = "0xAF20F0", VA = "0xAF20F0")]
	private void DissapearVortexByTime()
	{
	}

	[Token(Token = "0x60005DF")]
	[Address(RVA = "0xAF2E24", Offset = "0xAF2E24", VA = "0xAF2E24")]
	public EnergyVortex()
	{
	}
}
[Token(Token = "0x20000FD")]
public class EyeDrawerInteraction : MonoBehaviour, IInteraction
{
	[Token(Token = "0x20000FE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F0BC", Offset = "0x86F0BC")]
	private sealed class <InitializeCoroutine>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EyeDrawerInteraction <>4__this;

		[Token(Token = "0x170000CC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005ED")]
			[Address(RVA = "0xAF4DD4", Offset = "0xAF4DD4", VA = "0xAF4DD4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005EF")]
			[Address(RVA = "0xAF4E3C", Offset = "0xAF4E3C", VA = "0xAF4E3C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005EA")]
		[Address(RVA = "0xAF4834", Offset = "0xAF4834", VA = "0xAF4834")]
		[DebuggerHidden]
		public <InitializeCoroutine>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x60005EB")]
		[Address(RVA = "0xAF4D60", Offset = "0xAF4D60", VA = "0xAF4D60", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005EC")]
		[Address(RVA = "0xAF4D64", Offset = "0xAF4D64", VA = "0xAF4D64", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005EE")]
		[Address(RVA = "0xAF4DDC", Offset = "0xAF4DDC", VA = "0xAF4DDC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private EyePortal eyePortal;

	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8740B0", Offset = "0x8740B0")]
	[SerializeField]
	private AnimationCurve viewDirDotToColorCurve;

	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AnimationCurve handDistanceToScaleCurve;

	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AnimationCurve handDistanceToTimelineCurve;

	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float inputLostShrinkDelay;

	[Token(Token = "0x4000508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private float inputLostShrinkSpeed;

	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float handPosLerpSpeed;

	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject greatShadow;

	[Token(Token = "0x400050B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private HandController handL;

	[Token(Token = "0x400050C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private HandController handR;

	[Token(Token = "0x400050D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 handPosL;

	[Token(Token = "0x400050E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 handPosR;

	[Token(Token = "0x400050F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float inputLostTimer;

	[Token(Token = "0x4000510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float handsDistance;

	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool isPlaying;

	[Token(Token = "0x4000512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	private bool fadeOutEye;

	[Token(Token = "0x60005E0")]
	[Address(RVA = "0xAF3D9C", Offset = "0xAF3D9C", VA = "0xAF3D9C")]
	private void Update()
	{
	}

	[Token(Token = "0x60005E1")]
	[Address(RVA = "0xAF474C", Offset = "0xAF474C", VA = "0xAF474C", Slot = "4")]
	public void Play()
	{
	}

	[Token(Token = "0x60005E2")]
	[Address(RVA = "0xAF47C4", Offset = "0xAF47C4", VA = "0xAF47C4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x87BE38", Offset = "0x87BE38")]
	private IEnumerator InitializeCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60005E3")]
	[Address(RVA = "0xAF4860", Offset = "0xAF4860", VA = "0xAF4860", Slot = "5")]
	public void ShutDown()
	{
	}

	[Token(Token = "0x60005E4")]
	[Address(RVA = "0xAF4994", Offset = "0xAF4994", VA = "0xAF4994")]
	private void StartEyeDraweInteraction()
	{
	}

	[Token(Token = "0x60005E5")]
	[Address(RVA = "0xAF3E68", Offset = "0xAF3E68", VA = "0xAF3E68")]
	private void UpdateHandsPos()
	{
	}

	[Token(Token = "0x60005E6")]
	[Address(RVA = "0xAF4214", Offset = "0xAF4214", VA = "0xAF4214")]
	private void FeedEyeData()
	{
	}

	[Token(Token = "0x60005E7")]
	[Address(RVA = "0xAF4CA8", Offset = "0xAF4CA8", VA = "0xAF4CA8")]
	private void StopInteraction(PauseReason pauseReason)
	{
	}

	[Token(Token = "0x60005E8")]
	[Address(RVA = "0xAF4CB0", Offset = "0xAF4CB0", VA = "0xAF4CB0")]
	private void ResumeInteraction(PauseReason pauseReason)
	{
	}

	[Token(Token = "0x60005E9")]
	[Address(RVA = "0xAF4CBC", Offset = "0xAF4CBC", VA = "0xAF4CBC")]
	public EyeDrawerInteraction()
	{
	}
}
[Token(Token = "0x20000FF")]
public class EyePortal : MonoBehaviour
{
	[Token(Token = "0x2000100")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F0CC", Offset = "0x86F0CC")]
	private sealed class <RegressToCero>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400051C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400051D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400051E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EyePortal <>4__this;

		[Token(Token = "0x400051F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <time>5__2;

		[Token(Token = "0x170000CE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005FA")]
			[Address(RVA = "0xAF53E4", Offset = "0xAF53E4", VA = "0xAF53E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005FC")]
			[Address(RVA = "0xAF544C", Offset = "0xAF544C", VA = "0xAF544C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005F7")]
		[Address(RVA = "0xAF524C", Offset = "0xAF524C", VA = "0xAF524C")]
		[DebuggerHidden]
		public <RegressToCero>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x60005F8")]
		[Address(RVA = "0xAF5280", Offset = "0xAF5280", VA = "0xAF5280", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005F9")]
		[Address(RVA = "0xAF5284", Offset = "0xAF5284", VA = "0xAF5284", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005FB")]
		[Address(RVA = "0xAF53EC", Offset = "0xAF53EC", VA = "0xAF53EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private PlayableDirector director;

	[Token(Token = "0x4000517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GlobalShaderEyePortal shaderFeeder;

	[Token(Token = "0x4000518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ParticleSystem[] particles;

	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ParticleSystemRenderer[] particleRenderers;

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MaterialPropertyBlock propertyBlock;

	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int ColorPropertyId;

	[Token(Token = "0x60005F0")]
	[Address(RVA = "0xAF4E44", Offset = "0xAF4E44", VA = "0xAF4E44")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005F1")]
	[Address(RVA = "0xAF4B88", Offset = "0xAF4B88", VA = "0xAF4B88")]
	public void Play()
	{
	}

	[Token(Token = "0x60005F2")]
	[Address(RVA = "0xAF4FB4", Offset = "0xAF4FB4", VA = "0xAF4FB4")]
	public void SetIntensityBy(float t)
	{
	}

	[Token(Token = "0x60005F3")]
	[Address(RVA = "0xAF4BF4", Offset = "0xAF4BF4", VA = "0xAF4BF4")]
	public void ChangeBy(float time)
	{
	}

	[Token(Token = "0x60005F4")]
	[Address(RVA = "0xAF51B0", Offset = "0xAF51B0", VA = "0xAF51B0")]
	public void Disable()
	{
	}

	[Token(Token = "0x60005F5")]
	[Address(RVA = "0xAF51DC", Offset = "0xAF51DC", VA = "0xAF51DC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x87BEEC", Offset = "0x87BEEC")]
	private IEnumerator RegressToCero()
	{
		return null;
	}

	[Token(Token = "0x60005F6")]
	[Address(RVA = "0xAF5278", Offset = "0xAF5278", VA = "0xAF5278")]
	public EyePortal()
	{
	}
}
[Token(Token = "0x2000101")]
public class FlashlightInteraction : MonoBehaviour, IInteraction
{
	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject leftFlashlight;

	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject rightFlashlight;

	[Token(Token = "0x60005FD")]
	[Address(RVA = "0xAF86D0", Offset = "0xAF86D0", VA = "0xAF86D0", Slot = "4")]
	public void Play()
	{
	}

	[Token(Token = "0x60005FE")]
	[Address(RVA = "0xAF8714", Offset = "0xAF8714", VA = "0xAF8714", Slot = "5")]
	public void ShutDown()
	{
	}

	[Token(Token = "0x60005FF")]
	[Address(RVA = "0xAF8758", Offset = "0xAF8758", VA = "0xAF8758")]
	public FlashlightInteraction()
	{
	}
}
[Token(Token = "0x2000102")]
public class HandColliderInteractionController : MonoBehaviour, IInteraction
{
	[Token(Token = "0x4000522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Hand handType;

	[Token(Token = "0x4000523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool isTracked;

	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool wasTracked;

	[Token(Token = "0x6000600")]
	[Address(RVA = "0xB430C0", Offset = "0xB430C0", VA = "0xB430C0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000601")]
	[Address(RVA = "0xB431C8", Offset = "0xB431C8", VA = "0xB431C8")]
	private void OnTrackGain()
	{
	}

	[Token(Token = "0x6000602")]
	[Address(RVA = "0xB431D4", Offset = "0xB431D4", VA = "0xB431D4")]
	private void OnTrackLost()
	{
	}

	[Token(Token = "0x6000603")]
	[Address(RVA = "0xB431DC", Offset = "0xB431DC", VA = "0xB431DC", Slot = "4")]
	public void Play()
	{
	}

	[Token(Token = "0x6000604")]
	[Address(RVA = "0xB4333C", Offset = "0xB4333C", VA = "0xB4333C", Slot = "5")]
	public void ShutDown()
	{
	}

	[Token(Token = "0x6000605")]
	[Address(RVA = "0xB4349C", Offset = "0xB4349C", VA = "0xB4349C")]
	public HandColliderInteractionController()
	{
	}
}
[Token(Token = "0x2000103")]
public class HandControllerVisibilityInteraction : MonoBehaviour, IInteraction
{
	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private HandVisibilityState playVisibilityState;

	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private HandVisibilityState shutDownVisibilityState;

	[Token(Token = "0x6000606")]
	[Address(RVA = "0xB434A4", Offset = "0xB434A4", VA = "0xB434A4", Slot = "4")]
	public void Play()
	{
	}

	[Token(Token = "0x6000607")]
	[Address(RVA = "0xB4352C", Offset = "0xB4352C", VA = "0xB4352C", Slot = "5")]
	public void ShutDown()
	{
	}

	[Token(Token = "0x6000608")]
	[Address(RVA = "0xB435B4", Offset = "0xB435B4", VA = "0xB435B4")]
	public HandControllerVisibilityInteraction()
	{
	}
}
[Token(Token = "0x2000104")]
public class HandParticlesInteraction : MonoBehaviour, IInteraction
{
	[Token(Token = "0x2000105")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F0DC", Offset = "0x86F0DC")]
	private sealed class <Start>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400052C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400052D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400052E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandParticlesInteraction <>4__this;

		[Token(Token = "0x170000D0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000615")]
			[Address(RVA = "0xB45C60", Offset = "0xB45C60", VA = "0xB45C60", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000617")]
			[Address(RVA = "0xB45CC8", Offset = "0xB45CC8", VA = "0xB45CC8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000612")]
		[Address(RVA = "0xB45394", Offset = "0xB45394", VA = "0xB45394")]
		[DebuggerHidden]
		public <Start>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000613")]
		[Address(RVA = "0xB45AA4", Offset = "0xB45AA4", VA = "0xB45AA4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000614")]
		[Address(RVA = "0xB45AA8", Offset = "0xB45AA8", VA = "0xB45AA8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000616")]
		[Address(RVA = "0xB45C68", Offset = "0xB45C68", VA = "0xB45C68", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Hand handType;

	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject particlesParent;

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Seek seek;

	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private HandController handController;

	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ParticleSystem[] particles;

	[Token(Token = "0x6000609")]
	[Address(RVA = "0xB4527C", Offset = "0xB4527C", VA = "0xB4527C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600060A")]
	[Address(RVA = "0xB45324", Offset = "0xB45324", VA = "0xB45324")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x87BFA0", Offset = "0x87BFA0")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600060B")]
	[Address(RVA = "0xB453C0", Offset = "0xB453C0", VA = "0xB453C0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600060C")]
	[Address(RVA = "0xB45558", Offset = "0xB45558", VA = "0xB45558")]
	private void Update()
	{
	}

	[Token(Token = "0x600060D")]
	[Address(RVA = "0xB45738", Offset = "0xB45738", VA = "0xB45738", Slot = "4")]
	public void Play()
	{
	}

	[Token(Token = "0x600060E")]
	[Address(RVA = "0xB45744", Offset = "0xB45744", VA = "0xB45744", Slot = "5")]
	public void ShutDown()
	{
	}

	[Token(Token = "0x600060F")]
	[Address(RVA = "0xB458C4", Offset = "0xB458C4", VA = "0xB458C4")]
	private void PlayParticles()
	{
	}

	[Token(Token = "0x6000610")]
	[Address(RVA = "0xB45A54", Offset = "0xB45A54", VA = "0xB45A54")]
	private void ChangeSeekTarget(ControllerType controller)
	{
	}

	[Token(Token = "0x6000611")]
	[Address(RVA = "0xB45A9C", Offset = "0xB45A9C", VA = "0xB45A9C")]
	public HandParticlesInteraction()
	{
	}
}
[Token(Token = "0x2000106")]
public class HandPointerInteraction : MonoBehaviour, IInteraction
{
	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private HandController leftHandController;

	[Token(Token = "0x4000530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private HandController rightHandController;

	[Token(Token = "0x6000618")]
	[Address(RVA = "0xB45CD0", Offset = "0xB45CD0", VA = "0xB45CD0", Slot = "4")]
	public void Play()
	{
	}

	[Token(Token = "0x6000619")]
	[Address(RVA = "0xB45D58", Offset = "0xB45D58", VA = "0xB45D58", Slot = "5")]
	public void ShutDown()
	{
	}

	[Token(Token = "0x600061A")]
	[Address(RVA = "0xB45D9C", Offset = "0xB45D9C", VA = "0xB45D9C")]
	public HandPointerInteraction()
	{
	}
}
[Token(Token = "0x2000107")]
public interface IInteraction
{
	[Token(Token = "0x600061B")]
	void Play();

	[Token(Token = "0x600061C")]
	void ShutDown();
}
[Token(Token = "0x2000108")]
public class InteractivityEventTrigger : MonoBehaviour
{
	[Token(Token = "0x600061D")]
	[Address(RVA = "0xB49EF8", Offset = "0xB49EF8", VA = "0xB49EF8")]
	public void StartInteraction()
	{
	}

	[Token(Token = "0x600061E")]
	[Address(RVA = "0xB49F7C", Offset = "0xB49F7C", VA = "0xB49F7C")]
	public void StopInteraction()
	{
	}

	[Token(Token = "0x600061F")]
	[Address(RVA = "0xB4A000", Offset = "0xB4A000", VA = "0xB4A000")]
	public InteractivityEventTrigger()
	{
	}
}
[Token(Token = "0x2000109")]
public class InteractivityManager : SerializedMonoBehaviour
{
	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private List<IInteraction> sceneInteractions;

	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static InteractivityManager Instance;

	[Token(Token = "0x4000533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Action OnInteractionBegin;

	[Token(Token = "0x4000534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Action OnInteractionEnd;

	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Action OnSoulParticlesFadeOut;

	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Action<Vector3> OnInvisibleWorldCollision;

	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87420C", Offset = "0x87420C")]
	private bool <IsInteractivityPaused>k__BackingField;

	[Token(Token = "0x170000D2")]
	public bool IsInteractivityPaused
	{
		[Token(Token = "0x6000620")]
		[Address(RVA = "0xB4A008", Offset = "0xB4A008", VA = "0xB4A008")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87C054", Offset = "0x87C054")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000621")]
		[Address(RVA = "0xB4A010", Offset = "0xB4A010", VA = "0xB4A010")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87C064", Offset = "0x87C064")]
		private set
		{
		}
	}

	[Token(Token = "0x6000622")]
	[Address(RVA = "0xB4A01C", Offset = "0xB4A01C", VA = "0xB4A01C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000623")]
	[Address(RVA = "0xB4A070", Offset = "0xB4A070", VA = "0xB4A070")]
	private void Start()
	{
	}

	[Token(Token = "0x6000624")]
	[Address(RVA = "0xB4A240", Offset = "0xB4A240", VA = "0xB4A240")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000625")]
	[Address(RVA = "0xB4A410", Offset = "0xB4A410", VA = "0xB4A410")]
	private void PlayInteractions()
	{
	}

	[Token(Token = "0x6000626")]
	[Address(RVA = "0xB4A564", Offset = "0xB4A564", VA = "0xB4A564")]
	private void ShutDownInteractions()
	{
	}

	[Token(Token = "0x6000627")]
	[Address(RVA = "0xB4A6BC", Offset = "0xB4A6BC", VA = "0xB4A6BC")]
	private void PauseInteractivity(PauseReason pauseReason)
	{
	}

	[Token(Token = "0x6000628")]
	[Address(RVA = "0xB4A734", Offset = "0xB4A734", VA = "0xB4A734")]
	private void ResumeInteractivity(PauseReason pauseReason)
	{
	}

	[Token(Token = "0x6000629")]
	[Address(RVA = "0xB4A7A8", Offset = "0xB4A7A8", VA = "0xB4A7A8")]
	public InteractivityManager()
	{
	}
}
[Token(Token = "0x200010A")]
public class InteractivityTrigger : MonoBehaviour
{
	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float sightTreshHold;

	[Token(Token = "0x4000539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private FakeHandsAnimations FakeHandsAnimation;

	[Token(Token = "0x400053A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform cameraTransform;

	[Token(Token = "0x400053B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<HandController> hands;

	[Token(Token = "0x600062A")]
	[Address(RVA = "0xB4A7B0", Offset = "0xB4A7B0", VA = "0xB4A7B0")]
	private void Start()
	{
	}

	[Token(Token = "0x600062B")]
	[Address(RVA = "0xB4A8FC", Offset = "0xB4A8FC", VA = "0xB4A8FC")]
	private void Update()
	{
	}

	[Token(Token = "0x600062C")]
	[Address(RVA = "0xB4AACC", Offset = "0xB4AACC", VA = "0xB4AACC")]
	public void StartInteraction()
	{
	}

	[Token(Token = "0x600062D")]
	[Address(RVA = "0xB4A7D4", Offset = "0xB4A7D4", VA = "0xB4A7D4")]
	private void SetUpReferences()
	{
	}

	[Token(Token = "0x600062E")]
	[Address(RVA = "0xB4A880", Offset = "0xB4A880", VA = "0xB4A880")]
	private void DisplayFakeHands()
	{
	}

	[Token(Token = "0x600062F")]
	[Address(RVA = "0xB4A930", Offset = "0xB4A930", VA = "0xB4A930")]
	private bool AreHandsOnSight()
	{
		return default(bool);
	}

	[Token(Token = "0x6000630")]
	[Address(RVA = "0xB4ABE4", Offset = "0xB4ABE4", VA = "0xB4ABE4")]
	public InteractivityTrigger()
	{
	}
}
[Token(Token = "0x200010B")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x86F0EC", Offset = "0x86F0EC")]
public class InvisibleWorldCollisionInteraction : MonoBehaviour, IInteraction
{
	[Token(Token = "0x400053C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Collider collider;

	[Token(Token = "0x400053D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Collider triggerEnterCollider;

	[Token(Token = "0x400053E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Collider triggerStayCollider;

	[Token(Token = "0x6000631")]
	[Address(RVA = "0xB4AC5C", Offset = "0xB4AC5C", VA = "0xB4AC5C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000632")]
	[Address(RVA = "0xB4ACC0", Offset = "0xB4ACC0", VA = "0xB4ACC0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000633")]
	[Address(RVA = "0xB4AEBC", Offset = "0xB4AEBC", VA = "0xB4AEBC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000634")]
	[Address(RVA = "0xB4AEC4", Offset = "0xB4AEC4", VA = "0xB4AEC4")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000635")]
	[Address(RVA = "0xB4AECC", Offset = "0xB4AECC", VA = "0xB4AECC", Slot = "4")]
	public void Play()
	{
	}

	[Token(Token = "0x6000636")]
	[Address(RVA = "0xB4AED8", Offset = "0xB4AED8", VA = "0xB4AED8", Slot = "5")]
	public void ShutDown()
	{
	}

	[Token(Token = "0x6000637")]
	[Address(RVA = "0xB4ADEC", Offset = "0xB4ADEC", VA = "0xB4ADEC")]
	private void ActivateInvisibleWorld(Collider other)
	{
	}

	[Token(Token = "0x6000638")]
	[Address(RVA = "0xB4AEE4", Offset = "0xB4AEE4", VA = "0xB4AEE4")]
	public InvisibleWorldCollisionInteraction()
	{
	}
}
[Token(Token = "0x200010C")]
public class InvisibleWorldVisibilityInteraction : MonoBehaviour, IInteraction
{
	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject particlesParent;

	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject meshRenderersParent;

	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float particlesMinColorIntensity;

	[Token(Token = "0x4000542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float particlesMovementIntensityMultiplier;

	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float meshesMinColorIntensity;

	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float meshesMovementIntensityMultiplier;

	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x87429C", Offset = "0x87429C")]
	[SerializeField]
	private float handsMovementLerpValue;

	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ParticleSystem[] particles;

	[Token(Token = "0x4000547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private MeshRenderer[] meshRenderers;

	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private ParticleSystemRenderer[] invisibleWorldParticleRenderers;

	[Token(Token = "0x4000549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool interactionStarted;

	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float previousHandSpeed;

	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float currentHandSpeed;

	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private HandController leftHandController;

	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private HandController rightHandController;

	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int colorIntensityId;

	[Token(Token = "0x6000639")]
	[Address(RVA = "0xB4AEEC", Offset = "0xB4AEEC", VA = "0xB4AEEC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600063A")]
	[Address(RVA = "0xB4B098", Offset = "0xB4B098", VA = "0xB4B098")]
	private void Start()
	{
	}

	[Token(Token = "0x600063B")]
	[Address(RVA = "0xB4B274", Offset = "0xB4B274", VA = "0xB4B274")]
	private void Update()
	{
	}

	[Token(Token = "0x600063C")]
	[Address(RVA = "0xB4B42C", Offset = "0xB4B42C", VA = "0xB4B42C", Slot = "4")]
	public void Play()
	{
	}

	[Token(Token = "0x600063D")]
	[Address(RVA = "0xB4B670", Offset = "0xB4B670", VA = "0xB4B670", Slot = "5")]
	public void ShutDown()
	{
	}

	[Token(Token = "0x600063E")]
	[Address(RVA = "0xB4B338", Offset = "0xB4B338", VA = "0xB4B338")]
	private void BehaveInvisibleWorld()
	{
	}

	[Token(Token = "0x600063F")]
	[Address(RVA = "0xB4B168", Offset = "0xB4B168", VA = "0xB4B168")]
	private void SetInvisibleWorldState(bool state)
	{
	}

	[Token(Token = "0x6000640")]
	[Address(RVA = "0xB4B550", Offset = "0xB4B550", VA = "0xB4B550")]
	private void SetMeshRenderersValue(float value)
	{
	}

	[Token(Token = "0x6000641")]
	[Address(RVA = "0xB4B6F4", Offset = "0xB4B6F4", VA = "0xB4B6F4")]
	private void SetParticleRenderersValue(float value)
	{
	}

	[Token(Token = "0x6000642")]
	[Address(RVA = "0xB4AF90", Offset = "0xB4AF90", VA = "0xB4AF90")]
	private ParticleSystemRenderer[] GetParticleRenderers()
	{
		return null;
	}

	[Token(Token = "0x6000643")]
	[Address(RVA = "0xB4B814", Offset = "0xB4B814", VA = "0xB4B814")]
	public InvisibleWorldVisibilityInteraction()
	{
	}
}
[Token(Token = "0x200010D")]
public class LightRevealInteraction : MonoBehaviour, IInteraction
{
	[Token(Token = "0x200010E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F150", Offset = "0x86F150")]
	private sealed class <FadeRevealLight>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool on;

		[Token(Token = "0x4000557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LightRevealInteraction <>4__this;

		[Token(Token = "0x4000558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <endTime>5__2;

		[Token(Token = "0x170000D3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600064C")]
			[Address(RVA = "0xB4F5F8", Offset = "0xB4F5F8", VA = "0xB4F5F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600064E")]
			[Address(RVA = "0xB4F660", Offset = "0xB4F660", VA = "0xB4F660", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000649")]
		[Address(RVA = "0xB4F338", Offset = "0xB4F338", VA = "0xB4F338")]
		[DebuggerHidden]
		public <FadeRevealLight>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x600064A")]
		[Address(RVA = "0xB4F378", Offset = "0xB4F378", VA = "0xB4F378", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600064B")]
		[Address(RVA = "0xB4F37C", Offset = "0xB4F37C", VA = "0xB4F37C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600064D")]
		[Address(RVA = "0xB4F600", Offset = "0xB4F600", VA = "0xB4F600", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Light[] revealerLights;

	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float timeToFadeIn;

	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float timeToFadeOut;

	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float initialRange;

	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float initialAngle;

	[Token(Token = "0x6000644")]
	[Address(RVA = "0xB4F16C", Offset = "0xB4F16C", VA = "0xB4F16C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000645")]
	[Address(RVA = "0xB4F254", Offset = "0xB4F254", VA = "0xB4F254", Slot = "4")]
	public void Play()
	{
	}

	[Token(Token = "0x6000646")]
	[Address(RVA = "0xB4F308", Offset = "0xB4F308", VA = "0xB4F308", Slot = "5")]
	public void ShutDown()
	{
	}

	[Token(Token = "0x6000647")]
	[Address(RVA = "0xB4F284", Offset = "0xB4F284", VA = "0xB4F284")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x87C074", Offset = "0x87C074")]
	private IEnumerator FadeRevealLight(bool on)
	{
		return null;
	}

	[Token(Token = "0x6000648")]
	[Address(RVA = "0xB4F364", Offset = "0xB4F364", VA = "0xB4F364")]
	public LightRevealInteraction()
	{
	}
}
[Token(Token = "0x200010F")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x86F160", Offset = "0x86F160")]
public class OrchestraGroupController : SingleRaycastTarget
{
	[Token(Token = "0x2000110")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F1C4", Offset = "0x86F1C4")]
	private sealed class <FadeCoroutine>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OrchestraGroupController <>4__this;

		[Token(Token = "0x400056A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float duration;

		[Token(Token = "0x400056B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool fadeOn;

		[Token(Token = "0x400056C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color startColor;

		[Token(Token = "0x400056D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color endColor;

		[Token(Token = "0x400056E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float <currentFadeDuration>5__2;

		[Token(Token = "0x400056F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float <startTime>5__3;

		[Token(Token = "0x170000D5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600065C")]
			[Address(RVA = "0xB07694", Offset = "0xB07694", VA = "0xB07694", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600065E")]
			[Address(RVA = "0xB076FC", Offset = "0xB076FC", VA = "0xB076FC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000659")]
		[Address(RVA = "0xB0737C", Offset = "0xB0737C", VA = "0xB0737C")]
		[DebuggerHidden]
		public <FadeCoroutine>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x600065A")]
		[Address(RVA = "0xB073B0", Offset = "0xB073B0", VA = "0xB073B0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600065B")]
		[Address(RVA = "0xB073B4", Offset = "0xB073B4", VA = "0xB073B4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600065D")]
		[Address(RVA = "0xB0769C", Offset = "0xB0769C", VA = "0xB0769C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000559")]
	private const string COLOR = "_Color";

	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Color offColor;

	[Token(Token = "0x400055B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Color onColor;

	[Token(Token = "0x400055C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private AudioSource soundSource;

	[Token(Token = "0x400055D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Renderer[] renderers;

	[Token(Token = "0x400055E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private OrchestraMusician[] groupMusicians;

	[Token(Token = "0x400055F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Coroutine currentCoroutine;

	[Token(Token = "0x4000560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float fadeDuration;

	[Token(Token = "0x4000561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float fadeOffset;

	[Token(Token = "0x4000562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float currentTime;

	[Token(Token = "0x4000563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool canInteract;

	[Token(Token = "0x4000564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
	private bool turnedOn;

	[Token(Token = "0x4000565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6E")]
	private bool turningOn;

	[Token(Token = "0x4000566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Collider[] colliders;

	[Token(Token = "0x600064F")]
	[Address(RVA = "0xB06BF4", Offset = "0xB06BF4", VA = "0xB06BF4")]
	public void Initialize(Color offColor, Color onColor, float fadeDuration)
	{
	}

	[Token(Token = "0x6000650")]
	[Address(RVA = "0xB06EBC", Offset = "0xB06EBC", VA = "0xB06EBC")]
	public void EnableInteraction()
	{
	}

	[Token(Token = "0x6000651")]
	[Address(RVA = "0xB06EC8", Offset = "0xB06EC8", VA = "0xB06EC8")]
	public void DisableInteraction()
	{
	}

	[Token(Token = "0x6000652")]
	[Address(RVA = "0xB06FE8", Offset = "0xB06FE8", VA = "0xB06FE8", Slot = "6")]
	public override void TriggerEnter()
	{
	}

	[Token(Token = "0x6000653")]
	[Address(RVA = "0xB070EC", Offset = "0xB070EC", VA = "0xB070EC", Slot = "7")]
	public override void TriggerExit()
	{
	}

	[Token(Token = "0x6000654")]
	[Address(RVA = "0xB06FEC", Offset = "0xB06FEC", VA = "0xB06FEC")]
	public void TurnOn()
	{
	}

	[Token(Token = "0x6000655")]
	[Address(RVA = "0xB070F0", Offset = "0xB070F0", VA = "0xB070F0")]
	public void TurnOff()
	{
	}

	[Token(Token = "0x6000656")]
	[Address(RVA = "0xB07284", Offset = "0xB07284", VA = "0xB07284")]
	private void Fade(bool fadeOn)
	{
	}

	[Token(Token = "0x6000657")]
	[Address(RVA = "0xB06DE0", Offset = "0xB06DE0", VA = "0xB06DE0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x87C128", Offset = "0x87C128")]
	private IEnumerator FadeCoroutine(bool fadeOn, Color startColor, Color endColor, float duration = 0f)
	{
		return null;
	}

	[Token(Token = "0x6000658")]
	[Address(RVA = "0xB073A8", Offset = "0xB073A8", VA = "0xB073A8")]
	public OrchestraGroupController()
	{
	}
}
[Token(Token = "0x2000111")]
public class OrchestraMusician : MonoBehaviour
{
	[Token(Token = "0x4000570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Animator animatorController;

	[Token(Token = "0x4000571")]
	private const string PLAY = "Play";

	[Token(Token = "0x4000572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int playAnimationId;

	[Token(Token = "0x600065F")]
	[Address(RVA = "0xB07A7C", Offset = "0xB07A7C", VA = "0xB07A7C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000660")]
	[Address(RVA = "0xB07670", Offset = "0xB07670", VA = "0xB07670")]
	public void TurnOn()
	{
	}

	[Token(Token = "0x6000661")]
	[Address(RVA = "0xB07AD4", Offset = "0xB07AD4", VA = "0xB07AD4")]
	public OrchestraMusician()
	{
	}
}
[Token(Token = "0x2000112")]
public class SoulsSpawnedInteraction : MonoBehaviour, IInteraction
{
	[Token(Token = "0x2000113")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F1D4", Offset = "0x86F1D4")]
	private sealed class <Start>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SoulsSpawnedInteraction <>4__this;

		[Token(Token = "0x170000D7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600066E")]
			[Address(RVA = "0xB1B45C", Offset = "0xB1B45C", VA = "0xB1B45C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000670")]
			[Address(RVA = "0xB1B4C4", Offset = "0xB1B4C4", VA = "0xB1B4C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600066B")]
		[Address(RVA = "0xB1A910", Offset = "0xB1A910", VA = "0xB1A910")]
		[DebuggerHidden]
		public <Start>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x600066C")]
		[Address(RVA = "0xB1B394", Offset = "0xB1B394", VA = "0xB1B394", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600066D")]
		[Address(RVA = "0xB1B398", Offset = "0xB1B398", VA = "0xB1B398", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600066F")]
		[Address(RVA = "0xB1B464", Offset = "0xB1B464", VA = "0xB1B464", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SoulSpawner soulSpawner;

	[Token(Token = "0x4000574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Soul> leftHandSouls;

	[Token(Token = "0x4000575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Soul> rightHandSouls;

	[Token(Token = "0x6000662")]
	[Address(RVA = "0xB1A894", Offset = "0xB1A894", VA = "0xB1A894")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000663")]
	[Address(RVA = "0xB1A8A0", Offset = "0xB1A8A0", VA = "0xB1A8A0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x87C1DC", Offset = "0x87C1DC")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000664")]
	[Address(RVA = "0xB1A93C", Offset = "0xB1A93C", VA = "0xB1A93C", Slot = "4")]
	public void Play()
	{
	}

	[Token(Token = "0x6000665")]
	[Address(RVA = "0xB1AAC4", Offset = "0xB1AAC4", VA = "0xB1AAC4", Slot = "5")]
	public void ShutDown()
	{
	}

	[Token(Token = "0x6000666")]
	[Address(RVA = "0xB1AE88", Offset = "0xB1AE88", VA = "0xB1AE88")]
	private void EndSoulsBehaviour()
	{
	}

	[Token(Token = "0x6000667")]
	[Address(RVA = "0xB1B150", Offset = "0xB1B150", VA = "0xB1B150")]
	private void ChangeLeftSoulTarget(ControllerType controller)
	{
	}

	[Token(Token = "0x6000668")]
	[Address(RVA = "0xB1B210", Offset = "0xB1B210", VA = "0xB1B210")]
	private void ChangeRightSoulTarget(ControllerType controller)
	{
	}

	[Token(Token = "0x6000669")]
	[Address(RVA = "0xB1B2D0", Offset = "0xB1B2D0", VA = "0xB1B2D0")]
	private void RemoveSoulFromList(Soul soul)
	{
	}

	[Token(Token = "0x600066A")]
	[Address(RVA = "0xB1B38C", Offset = "0xB1B38C", VA = "0xB1B38C")]
	public SoulsSpawnedInteraction()
	{
	}
}
[Token(Token = "0x2000114")]
public class VolumeModifierInteraction : MonoBehaviour, IInteraction
{
	[Serializable]
	[Token(Token = "0x2000115")]
	private struct MixerValuesToLerp
	{
		[Token(Token = "0x4000582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string RtpcName;

		[Token(Token = "0x4000583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AnimationCurve animationCurve;

		[Token(Token = "0x4000584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float minSourceVolume;

		[Token(Token = "0x4000585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float maxSourceVolume;
	}

	[Token(Token = "0x4000579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float minSpeed;

	[Token(Token = "0x400057A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float maxSpeed;

	[Token(Token = "0x400057B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float volumeIncreaseSpeed;

	[Token(Token = "0x400057C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float volumeDecreaseSpeed;

	[Token(Token = "0x400057D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float bumpIntensity;

	[Token(Token = "0x400057E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private List<MixerValuesToLerp> mixerValues;

	[Token(Token = "0x400057F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<HandController> controllers;

	[Token(Token = "0x4000580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float speed;

	[Token(Token = "0x4000581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float speedBump;

	[Token(Token = "0x6000671")]
	[Address(RVA = "0x155DFB4", Offset = "0x155DFB4", VA = "0x155DFB4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000672")]
	[Address(RVA = "0x155DFC0", Offset = "0x155DFC0", VA = "0x155DFC0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000673")]
	[Address(RVA = "0x155E3E8", Offset = "0x155E3E8", VA = "0x155E3E8", Slot = "4")]
	public void Play()
	{
	}

	[Token(Token = "0x6000674")]
	[Address(RVA = "0x155E530", Offset = "0x155E530", VA = "0x155E530", Slot = "5")]
	public void ShutDown()
	{
	}

	[Token(Token = "0x6000675")]
	[Address(RVA = "0x155E084", Offset = "0x155E084", VA = "0x155E084")]
	private void UpdateSpeedValues()
	{
	}

	[Token(Token = "0x6000676")]
	[Address(RVA = "0x155E1D4", Offset = "0x155E1D4", VA = "0x155E1D4")]
	private void LerpMixers()
	{
	}

	[Token(Token = "0x6000677")]
	[Address(RVA = "0x155E60C", Offset = "0x155E60C", VA = "0x155E60C")]
	private float GetHighestSpeed()
	{
		return default(float);
	}

	[Token(Token = "0x6000678")]
	[Address(RVA = "0x155E6F4", Offset = "0x155E6F4", VA = "0x155E6F4")]
	private void IncreaseCrystalAudioModifier(Vector3 position)
	{
	}

	[Token(Token = "0x6000679")]
	[Address(RVA = "0x155E700", Offset = "0x155E700", VA = "0x155E700")]
	public VolumeModifierInteraction()
	{
	}
}
[Token(Token = "0x2000116")]
public class VortexDrawerInteraction : MonoBehaviour, IInteraction
{
	[Token(Token = "0x4000586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Hand handController;

	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private int requiredPointsToDraw;

	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private int maxAmountOfPointsToTrack;

	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float minSeparationDistance;

	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private int collisionDetectionPoints;

	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private HandController controller;

	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool isTrackingHands;

	[Token(Token = "0x400058D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 lastPositionUsed;

	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<Vector3> storedPositions;

	[Token(Token = "0x600067A")]
	[Address(RVA = "0x155E720", Offset = "0x155E720", VA = "0x155E720")]
	private void Update()
	{
	}

	[Token(Token = "0x600067B")]
	[Address(RVA = "0x155E7F8", Offset = "0x155E7F8", VA = "0x155E7F8")]
	private void UpdateLastPositions()
	{
	}

	[Token(Token = "0x600067C")]
	[Address(RVA = "0x155EA94", Offset = "0x155EA94", VA = "0x155EA94")]
	private bool CheckPositionCollision(Vector3 lastPosition)
	{
		return default(bool);
	}

	[Token(Token = "0x600067D")]
	[Address(RVA = "0x155EBD4", Offset = "0x155EBD4", VA = "0x155EBD4")]
	private void AddNewPosition()
	{
	}

	[Token(Token = "0x600067E")]
	[Address(RVA = "0x155EE00", Offset = "0x155EE00", VA = "0x155EE00", Slot = "4")]
	public void Play()
	{
	}

	[Token(Token = "0x600067F")]
	[Address(RVA = "0x155EECC", Offset = "0x155EECC", VA = "0x155EECC", Slot = "5")]
	public void ShutDown()
	{
	}

	[Token(Token = "0x6000680")]
	[Address(RVA = "0x155EFE0", Offset = "0x155EFE0", VA = "0x155EFE0")]
	public VortexDrawerInteraction()
	{
	}
}
[Token(Token = "0x2000117")]
public interface iRaycastReceiver
{
	[Token(Token = "0x6000681")]
	void OnRaycastEnter(Raycaster raycaster);

	[Token(Token = "0x6000682")]
	void OnRaycastExit(Raycaster raycaster);
}
[Token(Token = "0x2000118")]
public class OrchestraGroupsManager : MonoBehaviour
{
	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8743DC", Offset = "0x8743DC")]
	private static OrchestraGroupsManager <Instance>k__BackingField;

	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8743EC", Offset = "0x8743EC")]
	private bool isInteracting;

	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioClip[] orchestraAudios;

	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private OrchestraGroupController[] orchestraGroups;

	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x874458", Offset = "0x874458")]
	private Color turnedOffColor;

	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Color turnedOnColor;

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private float fadeDuration;

	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int audioIndex;

	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool initialized;

	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float currentAudioTime;

	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool canInteract;

	[Token(Token = "0x170000D9")]
	public static OrchestraGroupsManager Instance
	{
		[Token(Token = "0x6000683")]
		[Address(RVA = "0xB07704", Offset = "0xB07704", VA = "0xB07704")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87C290", Offset = "0x87C290")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000684")]
		[Address(RVA = "0xB07754", Offset = "0xB07754", VA = "0xB07754")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87C2A0", Offset = "0x87C2A0")]
		private set
		{
		}
	}

	[Token(Token = "0x6000685")]
	[Address(RVA = "0xB077A8", Offset = "0xB077A8", VA = "0xB077A8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000686")]
	[Address(RVA = "0xB077FC", Offset = "0xB077FC", VA = "0xB077FC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000687")]
	[Address(RVA = "0xB078D4", Offset = "0xB078D4", VA = "0xB078D4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000688")]
	[Address(RVA = "0xB0798C", Offset = "0xB0798C", VA = "0xB0798C")]
	private void EnableInteraction()
	{
	}

	[Token(Token = "0x6000689")]
	[Address(RVA = "0xB079F4", Offset = "0xB079F4", VA = "0xB079F4")]
	private void DisableInteraction()
	{
	}

	[Token(Token = "0x600068A")]
	[Address(RVA = "0xB07A60", Offset = "0xB07A60", VA = "0xB07A60")]
	public float GetCurrentAudioTime()
	{
		return default(float);
	}

	[Token(Token = "0x600068B")]
	[Address(RVA = "0xB07190", Offset = "0xB07190", VA = "0xB07190")]
	public AudioClip GetCurrentAudio()
	{
		return null;
	}

	[Token(Token = "0x600068C")]
	[Address(RVA = "0xB07364", Offset = "0xB07364", VA = "0xB07364")]
	public void ReduceAudioIndex()
	{
	}

	[Token(Token = "0x600068D")]
	[Address(RVA = "0xB07A68", Offset = "0xB07A68", VA = "0xB07A68")]
	public OrchestraGroupsManager()
	{
	}
}
[Token(Token = "0x2000119")]
public class PalmParticleBehaviour : MonoBehaviour
{
	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Hand handType;

	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ParticleSystem mainParticle;

	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float minHandMovementSpeed;

	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float maxHandMovementSpeed;

	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private bool modifyParticleGravity;

	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private Vector2 gravityLerpValues;

	[Token(Token = "0x40005A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private bool modifyParticleStartSize;

	[Token(Token = "0x40005A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Vector2 startSizeLerpValues;

	[Token(Token = "0x40005A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private bool modifyParticleRateOT;

	[Token(Token = "0x40005A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private Vector2 rateOverTimeLerpValues;

	[Token(Token = "0x40005A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	private bool modifyParticleRateOD;

	[Token(Token = "0x40005A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Vector2 rateOverDistanceLerpValues;

	[Token(Token = "0x40005A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private bool modifyParticleRadius;

	[Token(Token = "0x40005A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[SerializeField]
	private Vector2 radiusLerpValues;

	[Token(Token = "0x40005A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private HandController controller;

	[Token(Token = "0x40005A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ParticleSystem.MainModule mainModule;

	[Token(Token = "0x40005AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private ParticleSystem.EmissionModule emissionModule;

	[Token(Token = "0x40005AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private ParticleSystem.ShapeModule shapeModule;

	[Token(Token = "0x40005AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float currentSpeedT;

	[Token(Token = "0x600068E")]
	[Address(RVA = "0xB07ADC", Offset = "0xB07ADC", VA = "0xB07ADC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600068F")]
	[Address(RVA = "0xB07B8C", Offset = "0xB07B8C", VA = "0xB07B8C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000690")]
	[Address(RVA = "0xB07BDC", Offset = "0xB07BDC", VA = "0xB07BDC")]
	private void UpdateModules()
	{
	}

	[Token(Token = "0x6000691")]
	[Address(RVA = "0xB07E6C", Offset = "0xB07E6C", VA = "0xB07E6C")]
	public PalmParticleBehaviour()
	{
	}
}
[Token(Token = "0x200011A")]
public class RateOverSpeed : MonoBehaviour
{
	[Token(Token = "0x40005AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ParticleSystem particleSystem;

	[Token(Token = "0x40005AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Hand handType;

	[Token(Token = "0x40005AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private bool takeConfidenceIntoAccount;

	[Token(Token = "0x40005B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private int rateOverSpeedMinValue;

	[Token(Token = "0x40005B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float mult;

	[Token(Token = "0x40005B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float offsetMin;

	[Token(Token = "0x40005B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float max;

	[Token(Token = "0x40005B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private HandController controller;

	[Token(Token = "0x40005B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ParticleSystem.EmissionModule emissionModule;

	[Token(Token = "0x6000692")]
	[Address(RVA = "0xB0DC74", Offset = "0xB0DC74", VA = "0xB0DC74")]
	private void Start()
	{
	}

	[Token(Token = "0x6000693")]
	[Address(RVA = "0xB0DCF8", Offset = "0xB0DCF8", VA = "0xB0DCF8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000694")]
	[Address(RVA = "0xB0DE50", Offset = "0xB0DE50", VA = "0xB0DE50")]
	public RateOverSpeed()
	{
	}
}
[Token(Token = "0x200011B")]
public class Raycaster : MonoBehaviour
{
	[Token(Token = "0x40005B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool hasRange;

	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float range;

	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private LayerMask layersToHit;

	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private RaycastHit hit;

	[Token(Token = "0x40005BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private iRaycastReceiver currentRaycastReceiver;

	[Token(Token = "0x6000695")]
	[Address(RVA = "0xB0DE64", Offset = "0xB0DE64", VA = "0xB0DE64")]
	private void Update()
	{
	}

	[Token(Token = "0x6000696")]
	[Address(RVA = "0xB0E160", Offset = "0xB0E160", VA = "0xB0E160")]
	public Raycaster()
	{
	}
}
[Token(Token = "0x200011C")]
public abstract class SingleRaycastTarget : MonoBehaviour, iRaycastReceiver
{
	[Token(Token = "0x40005BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Raycaster currentRaycaster;

	[Token(Token = "0x6000697")]
	public abstract void TriggerEnter();

	[Token(Token = "0x6000698")]
	public abstract void TriggerExit();

	[Token(Token = "0x6000699")]
	[Address(RVA = "0xB19FB0", Offset = "0xB19FB0", VA = "0xB19FB0", Slot = "8")]
	public virtual void OnRaycastEnter(Raycaster raycaster)
	{
	}

	[Token(Token = "0x600069A")]
	[Address(RVA = "0xB1A084", Offset = "0xB1A084", VA = "0xB1A084", Slot = "9")]
	public virtual void OnRaycastExit(Raycaster raycaster)
	{
	}

	[Token(Token = "0x600069B")]
	[Address(RVA = "0xB1A128", Offset = "0xB1A128", VA = "0xB1A128")]
	protected SingleRaycastTarget()
	{
	}
}
[Token(Token = "0x200011D")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x86F1E4", Offset = "0x86F1E4")]
public class Soul : MonoBehaviour
{
	[Token(Token = "0x40005BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float fadeDuration;

	[Token(Token = "0x40005BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string colorName;

	[Token(Token = "0x40005BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SeekLogic seek;

	[Token(Token = "0x40005BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Fader fader;

	[Token(Token = "0x40005C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Action<Soul> OnSoulDestroy;

	[Token(Token = "0x170000DA")]
	public Action OnSeekEnded
	{
		[Token(Token = "0x600069C")]
		[Address(RVA = "0xB1A130", Offset = "0xB1A130", VA = "0xB1A130")]
		get
		{
			return null;
		}
		[Token(Token = "0x600069D")]
		[Address(RVA = "0xB1A14C", Offset = "0xB1A14C", VA = "0xB1A14C")]
		set
		{
		}
	}

	[Token(Token = "0x170000DB")]
	public Transform Target
	{
		[Token(Token = "0x600069E")]
		[Address(RVA = "0xB1A168", Offset = "0xB1A168", VA = "0xB1A168")]
		get
		{
			return null;
		}
		[Token(Token = "0x600069F")]
		[Address(RVA = "0xB1A184", Offset = "0xB1A184", VA = "0xB1A184")]
		set
		{
		}
	}

	[Token(Token = "0x60006A0")]
	[Address(RVA = "0xB1A19C", Offset = "0xB1A19C", VA = "0xB1A19C")]
	public void StartFadeOut()
	{
	}

	[Token(Token = "0x60006A1")]
	[Address(RVA = "0xB1A1B8", Offset = "0xB1A1B8", VA = "0xB1A1B8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006A2")]
	[Address(RVA = "0xB1A2C4", Offset = "0xB1A2C4", VA = "0xB1A2C4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60006A3")]
	[Address(RVA = "0xB1A328", Offset = "0xB1A328", VA = "0xB1A328")]
	public Soul()
	{
	}

	[Token(Token = "0x60006A4")]
	[Address(RVA = "0xB1A388", Offset = "0xB1A388", VA = "0xB1A388")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87C2B0", Offset = "0x87C2B0")]
	private void <Awake>b__12_0()
	{
	}
}
[Token(Token = "0x200011E")]
public class SoulSpawner : MonoBehaviour
{
	[Token(Token = "0x40005C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Soul soulPrefab;

	[Token(Token = "0x40005C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private int amountOfParticlesToSpawn;

	[Token(Token = "0x40005C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float spawnCoolDown;

	[Token(Token = "0x40005C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int currentSpawnedAmount;

	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float spawnTimer;

	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x874664", Offset = "0x874664")]
	private readonly List<Soul> <SpawnedSouls>k__BackingField;

	[Token(Token = "0x170000DC")]
	public List<Soul> SpawnedSouls
	{
		[Token(Token = "0x60006A5")]
		[Address(RVA = "0xB1A404", Offset = "0xB1A404", VA = "0xB1A404")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87C2C0", Offset = "0x87C2C0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60006A6")]
	[Address(RVA = "0xB1A40C", Offset = "0xB1A40C", VA = "0xB1A40C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006A7")]
	[Address(RVA = "0xB1A418", Offset = "0xB1A418", VA = "0xB1A418")]
	private void Update()
	{
	}

	[Token(Token = "0x60006A8")]
	[Address(RVA = "0xB1A554", Offset = "0xB1A554", VA = "0xB1A554")]
	private void SpawnSoul(Transform target)
	{
	}

	[Token(Token = "0x60006A9")]
	[Address(RVA = "0xB1A698", Offset = "0xB1A698", VA = "0xB1A698")]
	private void FadeOutAllParticles()
	{
	}

	[Token(Token = "0x60006AA")]
	[Address(RVA = "0xB1A818", Offset = "0xB1A818", VA = "0xB1A818")]
	public SoulSpawner()
	{
	}
}
[Serializable]
[Token(Token = "0x200011F")]
public class InteractiveSection
{
	[Token(Token = "0x40005C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool Enabled;

	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform leftBorder;

	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform rightBorder;

	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Color sectionColor;

	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private List<Transform> rendererContainersToTrigger;

	[Token(Token = "0x40005CC")]
	private const string COLOR_NAME = "_Color";

	[Token(Token = "0x40005CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int colorPropertyId;

	[Token(Token = "0x40005CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Gradient sectionGradient;

	[Token(Token = "0x40005CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<Renderer> renderersToTrigger;

	[Token(Token = "0x40005D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<MaterialPropertyBlock> renderersPropertyBlocks;

	[Token(Token = "0x40005D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8746B4", Offset = "0x8746B4")]
	private float <CurrentDistanceToCamera>k__BackingField;

	[Token(Token = "0x170000DD")]
	public float CurrentDistanceToCamera
	{
		[Token(Token = "0x60006AB")]
		[Address(RVA = "0xB494F8", Offset = "0xB494F8", VA = "0xB494F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87C2D0", Offset = "0x87C2D0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60006AC")]
		[Address(RVA = "0xB49500", Offset = "0xB49500", VA = "0xB49500")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87C2E0", Offset = "0x87C2E0")]
		set
		{
		}
	}

	[Token(Token = "0x170000DE")]
	public Gradient SectionGradient
	{
		[Token(Token = "0x60006AD")]
		[Address(RVA = "0xB49508", Offset = "0xB49508", VA = "0xB49508")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000DF")]
	public Color SectionColor
	{
		[Token(Token = "0x60006AE")]
		[Address(RVA = "0xB49510", Offset = "0xB49510", VA = "0xB49510")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170000E0")]
	public Transform LeftBorder
	{
		[Token(Token = "0x60006AF")]
		[Address(RVA = "0xB4951C", Offset = "0xB4951C", VA = "0xB4951C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000E1")]
	public Transform RightBorder
	{
		[Token(Token = "0x60006B0")]
		[Address(RVA = "0xB49524", Offset = "0xB49524", VA = "0xB49524")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60006B1")]
	[Address(RVA = "0xB4952C", Offset = "0xB4952C", VA = "0xB4952C")]
	public void InitializePlane(Color leftColor, Color rightColor, float offsetPercentage)
	{
	}

	[Token(Token = "0x60006B2")]
	[Address(RVA = "0xB49A00", Offset = "0xB49A00", VA = "0xB49A00")]
	public void SetRenderersColorValue(float alphaValue)
	{
	}

	[Token(Token = "0x60006B3")]
	[Address(RVA = "0xB49C94", Offset = "0xB49C94", VA = "0xB49C94")]
	public void SetDistanceToCamera(Vector3 cameraPosition)
	{
	}

	[Token(Token = "0x60006B4")]
	[Address(RVA = "0xB49DB8", Offset = "0xB49DB8", VA = "0xB49DB8")]
	public void EnableRenderers()
	{
	}

	[Token(Token = "0x60006B5")]
	[Address(RVA = "0xB49E54", Offset = "0xB49E54", VA = "0xB49E54")]
	public void DisableRenderers()
	{
	}

	[Token(Token = "0x60006B6")]
	[Address(RVA = "0xB49EF0", Offset = "0xB49EF0", VA = "0xB49EF0")]
	public InteractiveSection()
	{
	}
}
[Token(Token = "0x2000120")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x86F248", Offset = "0x86F248")]
public class OnParticleTriggerListener : MonoBehaviour
{
	[Token(Token = "0x2000121")]
	public interface IReceiver
	{
		[Token(Token = "0x60006BB")]
		void ReceiveOnParticleTrigger(ref List<ParticleSystem.Particle> insideParticle, ref List<ParticleSystem.Particle> outsideParticle, ref List<ParticleSystem.Particle> enterParticle, ref List<ParticleSystem.Particle> exitParticle);
	}

	[Token(Token = "0x40005D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<IReceiver> receivers;

	[Token(Token = "0x40005D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParticleSystem particles;

	[Token(Token = "0x40005D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<ParticleSystem.Particle> insideParticle;

	[Token(Token = "0x40005D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<ParticleSystem.Particle> outsideParticle;

	[Token(Token = "0x40005D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<ParticleSystem.Particle> enterParticle;

	[Token(Token = "0x40005D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<ParticleSystem.Particle> exitParticle;

	[Token(Token = "0x40005D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool checkInside;

	[Token(Token = "0x40005D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool checkOutside;

	[Token(Token = "0x40005DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	private bool checkEnter;

	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
	private bool checkExit;

	[Token(Token = "0x60006B7")]
	[Address(RVA = "0xB05A2C", Offset = "0xB05A2C", VA = "0xB05A2C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006B8")]
	[Address(RVA = "0xB05B04", Offset = "0xB05B04", VA = "0xB05B04")]
	public static void AddReceiver(ParticleSystem host, IReceiver receiver)
	{
	}

	[Token(Token = "0x60006B9")]
	[Address(RVA = "0xB05C28", Offset = "0xB05C28", VA = "0xB05C28")]
	public void OnParticleTrigger()
	{
	}

	[Token(Token = "0x60006BA")]
	[Address(RVA = "0xB05E3C", Offset = "0xB05E3C", VA = "0xB05E3C")]
	public OnParticleTriggerListener()
	{
	}
}
[Token(Token = "0x2000122")]
public class SectionsInteractivityManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000123")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F2AC", Offset = "0x86F2AC")]
	private sealed class <>c
	{
		[Token(Token = "0x40005F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40005F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<InteractiveSection, float> <>9__37_0;

		[Token(Token = "0x60006D0")]
		[Address(RVA = "0xB16FA4", Offset = "0xB16FA4", VA = "0xB16FA4")]
		public <>c()
		{
		}

		[Token(Token = "0x60006D1")]
		[Address(RVA = "0xB16FAC", Offset = "0xB16FAC", VA = "0xB16FAC")]
		internal float <OrganizeSectionsByDistance>b__37_0(InteractiveSection x)
		{
			return default(float);
		}
	}

	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8746C4", Offset = "0x8746C4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8746C4", Offset = "0x8746C4")]
	[SerializeField]
	private float interactionPercentage;

	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private Color deactivationColor;

	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x874738", Offset = "0x874738")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x874738", Offset = "0x874738")]
	[SerializeField]
	private float sectionOffsetPercentage;

	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x87479C", Offset = "0x87479C")]
	[SerializeField]
	private AnimationCurve sectionsAlphaFadeCurve;

	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8747D8", Offset = "0x8747D8")]
	[SerializeField]
	private List<InteractiveSection> sections;

	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x874814", Offset = "0x874814")]
	private List<Transform> rendererContainersToColorize;

	[Token(Token = "0x40005E2")]
	private const string COLOR_NAME = "_Color";

	[Token(Token = "0x40005E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int colorID;

	[Token(Token = "0x40005E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform cameraTransform;

	[Token(Token = "0x40005E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private InteractiveSection currentSection;

	[Token(Token = "0x40005E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float sectionLength;

	[Token(Token = "0x40005E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Gradient currentGradient;

	[Token(Token = "0x40005E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 sectionLine;

	[Token(Token = "0x40005E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Vector3 currentLeftBorder;

	[Token(Token = "0x40005EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 currentRightBorder;

	[Token(Token = "0x40005EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private InteractiveSection[] orderedSections;

	[Token(Token = "0x40005EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private List<Renderer> renderersToColorize;

	[Token(Token = "0x40005ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private MaterialPropertyBlock[] colorizableRenderersBlocks;

	[Token(Token = "0x40005EE")]
	private const float maxHandDivider = 2.25f;

	[Token(Token = "0x40005EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float leftHandT;

	[Token(Token = "0x40005F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float rightHandT;

	[Token(Token = "0x40005F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float headT;

	[Token(Token = "0x170000E2")]
	public float LeftHandDistancePercentage
	{
		[Token(Token = "0x60006BC")]
		[Address(RVA = "0xB15CF0", Offset = "0xB15CF0", VA = "0xB15CF0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000E3")]
	public float RightHandDistancePercentage
	{
		[Token(Token = "0x60006BD")]
		[Address(RVA = "0xB15CF8", Offset = "0xB15CF8", VA = "0xB15CF8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000E4")]
	public float HeadDistancePercentage
	{
		[Token(Token = "0x60006BE")]
		[Address(RVA = "0xB15D00", Offset = "0xB15D00", VA = "0xB15D00")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x60006BF")]
	[Address(RVA = "0xB15D08", Offset = "0xB15D08", VA = "0xB15D08")]
	private void Start()
	{
	}

	[Token(Token = "0x60006C0")]
	[Address(RVA = "0xB15DB0", Offset = "0xB15DB0", VA = "0xB15DB0")]
	private void Update()
	{
	}

	[Token(Token = "0x60006C1")]
	[Address(RVA = "0xB166C4", Offset = "0xB166C4", VA = "0xB166C4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60006C2")]
	[Address(RVA = "0xB15D0C", Offset = "0xB15D0C", VA = "0xB15D0C")]
	private void Initialize()
	{
	}

	[Token(Token = "0x60006C3")]
	[Address(RVA = "0xB16760", Offset = "0xB16760", VA = "0xB16760")]
	private void InitializePlanes()
	{
	}

	[Token(Token = "0x60006C4")]
	[Address(RVA = "0xB16AAC", Offset = "0xB16AAC", VA = "0xB16AAC")]
	private void EnableSectionRenderers()
	{
	}

	[Token(Token = "0x60006C5")]
	[Address(RVA = "0xB166C8", Offset = "0xB166C8", VA = "0xB166C8")]
	private void DisableSectionRenderers()
	{
	}

	[Token(Token = "0x60006C6")]
	[Address(RVA = "0xB168D0", Offset = "0xB168D0", VA = "0xB168D0")]
	private void SetRenderersToColorize()
	{
	}

	[Token(Token = "0x60006C7")]
	[Address(RVA = "0xB16B44", Offset = "0xB16B44", VA = "0xB16B44")]
	private void SetMaterialPropertyBlocks()
	{
	}

	[Token(Token = "0x60006C8")]
	[Address(RVA = "0xB15DEC", Offset = "0xB15DEC", VA = "0xB15DEC")]
	private void OrganizeSectionsByDistance()
	{
	}

	[Token(Token = "0x60006C9")]
	[Address(RVA = "0xB15F5C", Offset = "0xB15F5C", VA = "0xB15F5C")]
	private void SetInternalSectionValues()
	{
	}

	[Token(Token = "0x60006CA")]
	[Address(RVA = "0xB162B0", Offset = "0xB162B0", VA = "0xB162B0")]
	private void SetSectionsValues()
	{
	}

	[Token(Token = "0x60006CB")]
	[Address(RVA = "0xB16150", Offset = "0xB16150", VA = "0xB16150")]
	private void ColorizeRenderers()
	{
	}

	[Token(Token = "0x60006CC")]
	[Address(RVA = "0xB16CE8", Offset = "0xB16CE8", VA = "0xB16CE8")]
	private Color GetCurrentSectionColor()
	{
		return default(Color);
	}

	[Token(Token = "0x60006CD")]
	[Address(RVA = "0xB163CC", Offset = "0xB163CC", VA = "0xB163CC")]
	private void SetHandsDistance()
	{
	}

	[Token(Token = "0x60006CE")]
	[Address(RVA = "0xB16EF4", Offset = "0xB16EF4", VA = "0xB16EF4")]
	public SectionsInteractivityManager()
	{
	}
}
[Token(Token = "0x2000124")]
public abstract class Triggerable : MonoBehaviour
{
	[Token(Token = "0x60006D2")]
	public abstract void Play();

	[Token(Token = "0x60006D3")]
	public abstract void Stop();

	[Token(Token = "0x60006D4")]
	public abstract void Pause();

	[Token(Token = "0x60006D5")]
	public abstract void Resume();

	[Token(Token = "0x60006D6")]
	[Address(RVA = "0x155B800", Offset = "0x155B800", VA = "0x155B800")]
	protected Triggerable()
	{
	}
}
[Token(Token = "0x2000125")]
public class TriggerableHandVisibility : Triggerable
{
	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private HandVisibilityState playVisibilityState;

	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private HandVisibilityState shutDownVisibilityState;

	[Token(Token = "0x60006D7")]
	[Address(RVA = "0x155B808", Offset = "0x155B808", VA = "0x155B808", Slot = "4")]
	public override void Play()
	{
	}

	[Token(Token = "0x60006D8")]
	[Address(RVA = "0x155B890", Offset = "0x155B890", VA = "0x155B890", Slot = "5")]
	public override void Stop()
	{
	}

	[Token(Token = "0x60006D9")]
	[Address(RVA = "0x155B918", Offset = "0x155B918", VA = "0x155B918", Slot = "6")]
	public override void Pause()
	{
	}

	[Token(Token = "0x60006DA")]
	[Address(RVA = "0x155B91C", Offset = "0x155B91C", VA = "0x155B91C", Slot = "7")]
	public override void Resume()
	{
	}

	[Token(Token = "0x60006DB")]
	[Address(RVA = "0x155B920", Offset = "0x155B920", VA = "0x155B920")]
	public TriggerableHandVisibility()
	{
	}
}
[Token(Token = "0x2000126")]
public class TriggerableStrings : Triggerable, OnParticleTriggerListener.IReceiver
{
	[Token(Token = "0x40005F6")]
	private const string COLOR_NAME = "_Color";

	[Token(Token = "0x40005F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x874870", Offset = "0x874870")]
	[SerializeField]
	private float interactionPercentage;

	[Token(Token = "0x40005F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private Color deactivationColor;

	[Token(Token = "0x40005F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform[] rendererParentsToColorize;

	[Token(Token = "0x40005FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private ParticleSystem onParticleListenerHost;

	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Gradient colorGradient;

	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private AnimationCurve activationCurve;

	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private float activationSpeed;

	[Token(Token = "0x40005FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	private float deactivationSpeed;

	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private MaterialPropertyBlock[] props;

	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<Renderer> renderers;

	[Token(Token = "0x4000601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int colorID;

	[Token(Token = "0x4000602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float triggeredTimer;

	[Token(Token = "0x4000603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool canTrigger;

	[Token(Token = "0x4000604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	private bool triggered;

	[Token(Token = "0x4000605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float audioVolume;

	[Token(Token = "0x4000606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float t;

	[Token(Token = "0x4000607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private bool active;

	[Token(Token = "0x4000608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float activationPercentageThreshold;

	[Token(Token = "0x4000609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Action<Vector3> OnStringActivation;

	[Token(Token = "0x400060A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float[] InfluenceOverStrings;

	[Token(Token = "0x170000E5")]
	public float StringPercentage
	{
		[Token(Token = "0x60006DC")]
		[Address(RVA = "0x155B930", Offset = "0x155B930", VA = "0x155B930")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x60006DD")]
	[Address(RVA = "0x155B938", Offset = "0x155B938", VA = "0x155B938")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006DE")]
	[Address(RVA = "0x155BA64", Offset = "0x155BA64", VA = "0x155BA64", Slot = "4")]
	public override void Play()
	{
	}

	[Token(Token = "0x60006DF")]
	[Address(RVA = "0x155BA70", Offset = "0x155BA70", VA = "0x155BA70", Slot = "5")]
	public override void Stop()
	{
	}

	[Token(Token = "0x60006E0")]
	[Address(RVA = "0x155BA78", Offset = "0x155BA78", VA = "0x155BA78", Slot = "6")]
	public override void Pause()
	{
	}

	[Token(Token = "0x60006E1")]
	[Address(RVA = "0x155BA84", Offset = "0x155BA84", VA = "0x155BA84", Slot = "7")]
	public override void Resume()
	{
	}

	[Token(Token = "0x60006E2")]
	[Address(RVA = "0x155BA90", Offset = "0x155BA90", VA = "0x155BA90", Slot = "8")]
	public void ReceiveOnParticleTrigger(ref List<ParticleSystem.Particle> insideParticle, ref List<ParticleSystem.Particle> outsideParticle, ref List<ParticleSystem.Particle> enterParticle, ref List<ParticleSystem.Particle> exitParticle)
	{
	}

	[Token(Token = "0x60006E3")]
	[Address(RVA = "0x155BA9C", Offset = "0x155BA9C", VA = "0x155BA9C")]
	private void Update()
	{
	}

	[Token(Token = "0x60006E4")]
	[Address(RVA = "0x155B9DC", Offset = "0x155B9DC", VA = "0x155B9DC")]
	private void Initialize()
	{
	}

	[Token(Token = "0x60006E5")]
	[Address(RVA = "0x155BF08", Offset = "0x155BF08", VA = "0x155BF08")]
	private void SetMaterialPropertyBlocks()
	{
	}

	[Token(Token = "0x60006E6")]
	[Address(RVA = "0x155BDC8", Offset = "0x155BDC8", VA = "0x155BDC8")]
	private void GetRenderers()
	{
	}

	[Token(Token = "0x60006E7")]
	[Address(RVA = "0x155BDB8", Offset = "0x155BDB8", VA = "0x155BDB8")]
	private void InstantiateOnParticleTriggerListener()
	{
	}

	[Token(Token = "0x60006E8")]
	[Address(RVA = "0x155BC40", Offset = "0x155BC40", VA = "0x155BC40")]
	private void SetRendererColor(float t)
	{
	}

	[Token(Token = "0x60006E9")]
	[Address(RVA = "0x155C0AC", Offset = "0x155C0AC", VA = "0x155C0AC")]
	public float GetAudioVolume(int stringIndex)
	{
		return default(float);
	}

	[Token(Token = "0x60006EA")]
	[Address(RVA = "0x155C0F0", Offset = "0x155C0F0", VA = "0x155C0F0")]
	public void SubscribeToActivation(float activationPercentage, Action<Vector3> onActivation)
	{
	}

	[Token(Token = "0x60006EB")]
	[Address(RVA = "0x155C180", Offset = "0x155C180", VA = "0x155C180")]
	public TriggerableStrings()
	{
	}
}
[Token(Token = "0x2000127")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x86F2BC", Offset = "0x86F2BC")]
public class TriggerableStringsManager : MonoBehaviour
{
	[Token(Token = "0x400060B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TriggerableStrings[] triggerableStrings;

	[Token(Token = "0x400060C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioSource[] audioSources;

	[Token(Token = "0x60006EC")]
	[Address(RVA = "0x155C3CC", Offset = "0x155C3CC", VA = "0x155C3CC")]
	private void Update()
	{
	}

	[Token(Token = "0x60006ED")]
	[Address(RVA = "0x155C54C", Offset = "0x155C54C", VA = "0x155C54C")]
	public TriggerableStringsManager()
	{
	}
}
[Token(Token = "0x2000128")]
public class TriggerablesManager : MonoBehaviour
{
	[Token(Token = "0x400060D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Triggerable[] sceneInteractions;

	[Token(Token = "0x60006EE")]
	[Address(RVA = "0x155C9E8", Offset = "0x155C9E8", VA = "0x155C9E8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60006EF")]
	[Address(RVA = "0x155CB84", Offset = "0x155CB84", VA = "0x155CB84")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60006F0")]
	[Address(RVA = "0x155CD20", Offset = "0x155CD20", VA = "0x155CD20")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60006F1")]
	[Address(RVA = "0x155CB14", Offset = "0x155CB14", VA = "0x155CB14")]
	private void PlayTriggerables()
	{
	}

	[Token(Token = "0x60006F2")]
	[Address(RVA = "0x155CCB0", Offset = "0x155CCB0", VA = "0x155CCB0")]
	private void StopTriggerables()
	{
	}

	[Token(Token = "0x60006F3")]
	[Address(RVA = "0x155CE48", Offset = "0x155CE48", VA = "0x155CE48")]
	private void PauseTriggerables(PauseReason pauseReason)
	{
	}

	[Token(Token = "0x60006F4")]
	[Address(RVA = "0x155CEB8", Offset = "0x155CEB8", VA = "0x155CEB8")]
	private void ResumeTriggerables(PauseReason pauseReason)
	{
	}

	[Token(Token = "0x60006F5")]
	[Address(RVA = "0x155CF28", Offset = "0x155CF28", VA = "0x155CF28")]
	public TriggerablesManager()
	{
	}
}
[Token(Token = "0x2000129")]
public class VorticesManager : MonoBehaviour
{
	[Token(Token = "0x400060E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private EnergyVortex vortexPrefab;

	[Token(Token = "0x400060F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float vortexCreationInfluenceRange;

	[Token(Token = "0x4000610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x874970", Offset = "0x874970")]
	private float additionTimeSpeed;

	[Token(Token = "0x4000611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8749B4", Offset = "0x8749B4")]
	private float substractionTimeSpeed;

	[Token(Token = "0x4000612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8749F8", Offset = "0x8749F8")]
	[SerializeField]
	private float energyRequiredToBeConsideredActive;

	[Token(Token = "0x4000613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isSpawningVortices;

	[Token(Token = "0x4000614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float directorTimeOffset;

	[Token(Token = "0x4000615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x874A3C", Offset = "0x874A3C")]
	private static VorticesManager <Instance>k__BackingField;

	[Token(Token = "0x4000616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x874A4C", Offset = "0x874A4C")]
	private List<EnergyVortex> <EnergyVortices>k__BackingField;

	[Token(Token = "0x170000E6")]
	public static VorticesManager Instance
	{
		[Token(Token = "0x60006F6")]
		[Address(RVA = "0x155F06C", Offset = "0x155F06C", VA = "0x155F06C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87C2F0", Offset = "0x87C2F0")]
		get
		{
			return null;
		}
		[Token(Token = "0x60006F7")]
		[Address(RVA = "0x155F0BC", Offset = "0x155F0BC", VA = "0x155F0BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87C300", Offset = "0x87C300")]
		private set
		{
		}
	}

	[Token(Token = "0x170000E7")]
	public List<EnergyVortex> EnergyVortices
	{
		[Token(Token = "0x60006F8")]
		[Address(RVA = "0x155F110", Offset = "0x155F110", VA = "0x155F110")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87C310", Offset = "0x87C310")]
		get
		{
			return null;
		}
		[Token(Token = "0x60006F9")]
		[Address(RVA = "0x155F118", Offset = "0x155F118", VA = "0x155F118")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87C320", Offset = "0x87C320")]
		private set
		{
		}
	}

	[Token(Token = "0x170000E8")]
	public bool IsSpawningVortices
	{
		[Token(Token = "0x60006FA")]
		[Address(RVA = "0x155F120", Offset = "0x155F120", VA = "0x155F120")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60006FB")]
		[Address(RVA = "0x155F128", Offset = "0x155F128", VA = "0x155F128")]
		set
		{
		}
	}

	[Token(Token = "0x170000E9")]
	public float DirectorTimeOffset
	{
		[Token(Token = "0x60006FC")]
		[Address(RVA = "0x155F134", Offset = "0x155F134", VA = "0x155F134")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x60006FD")]
	[Address(RVA = "0x155F13C", Offset = "0x155F13C", VA = "0x155F13C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006FE")]
	[Address(RVA = "0x155F2DC", Offset = "0x155F2DC", VA = "0x155F2DC")]
	private void Update()
	{
	}

	[Token(Token = "0x60006FF")]
	[Address(RVA = "0x155EF34", Offset = "0x155EF34", VA = "0x155EF34")]
	public void ClearVortices()
	{
	}

	[Token(Token = "0x6000700")]
	[Address(RVA = "0x155E990", Offset = "0x155E990", VA = "0x155E990")]
	public EnergyVortex UpdateVorticesHandPosition(Vector3 currentHandPosition)
	{
		return null;
	}

	[Token(Token = "0x6000701")]
	[Address(RVA = "0x155ECE0", Offset = "0x155ECE0", VA = "0x155ECE0")]
	public bool CreateNewVortex(List<Vector3> initialPositions)
	{
		return default(bool);
	}

	[Token(Token = "0x6000702")]
	[Address(RVA = "0x155F5A0", Offset = "0x155F5A0", VA = "0x155F5A0")]
	public List<EnergyVortex> GetOtherVortices(EnergyVortex EnergyVortexToExlude)
	{
		return null;
	}

	[Token(Token = "0x6000703")]
	[Address(RVA = "0x155F2EC", Offset = "0x155F2EC", VA = "0x155F2EC")]
	private void SetTimerOffset()
	{
	}

	[Token(Token = "0x6000704")]
	[Address(RVA = "0x155F6EC", Offset = "0x155F6EC", VA = "0x155F6EC")]
	private void RemoveVortexFromTheList(EnergyVortex EnergyVortexToRemove)
	{
	}

	[Token(Token = "0x6000705")]
	[Address(RVA = "0x155F364", Offset = "0x155F364", VA = "0x155F364")]
	private bool ArePointsWithinVortexInfluence(List<Vector3> handPositions)
	{
		return default(bool);
	}

	[Token(Token = "0x6000706")]
	[Address(RVA = "0x155F63C", Offset = "0x155F63C", VA = "0x155F63C")]
	private int GetCurrentActivePortalsByEnergy()
	{
		return default(int);
	}

	[Token(Token = "0x6000707")]
	[Address(RVA = "0x155F79C", Offset = "0x155F79C", VA = "0x155F79C")]
	public VorticesManager()
	{
	}
}
[Token(Token = "0x200012A")]
public class OnParticleTriggerProxy : MonoBehaviour, OnParticleTriggerListener.IReceiver
{
	[Token(Token = "0x4000617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Action<ParticleSystem.Particle> OnParticleTrigger;

	[Token(Token = "0x6000708")]
	[Address(RVA = "0xB05F24", Offset = "0xB05F24", VA = "0xB05F24")]
	public void AddParticleTrigger(ParticleSystem particleSystem)
	{
	}

	[Token(Token = "0x6000709")]
	[Address(RVA = "0xB05F34", Offset = "0xB05F34", VA = "0xB05F34", Slot = "4")]
	public void ReceiveOnParticleTrigger(ref List<ParticleSystem.Particle> insideParticles, ref List<ParticleSystem.Particle> outsideParticles, ref List<ParticleSystem.Particle> enterParticles, ref List<ParticleSystem.Particle> exitParticles)
	{
	}

	[Token(Token = "0x600070A")]
	[Address(RVA = "0xB063FC", Offset = "0xB063FC", VA = "0xB063FC")]
	public OnParticleTriggerProxy()
	{
	}
}
[Token(Token = "0x200012B")]
public class WwiseInteractiveAudioManager : MonoBehaviour
{
	[Token(Token = "0x4000618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x874A5C", Offset = "0x874A5C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x874A5C", Offset = "0x874A5C")]
	[SerializeField]
	private float stringActivationThreshold;

	[Token(Token = "0x4000619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TriggerableStrings topRightString;

	[Token(Token = "0x400061A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TriggerableStrings topLeftString;

	[Token(Token = "0x400061B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private TriggerableStrings bottomRightString;

	[Token(Token = "0x400061C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private TriggerableStrings bottomLeftString;

	[Token(Token = "0x400061D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x874B00", Offset = "0x874B00")]
	private List<ParticleSystem> explosions;

	[Token(Token = "0x400061E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x874B4C", Offset = "0x874B4C")]
	private SectionsInteractivityManager sectionsManager;

	[Token(Token = "0x400061F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x874B98", Offset = "0x874B98")]
	[SerializeField]
	private GameObject leftHand;

	[Token(Token = "0x4000620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject rightHand;

	[Token(Token = "0x170000EA")]
	public float TopLeftStringActivationPercentage
	{
		[Token(Token = "0x600070B")]
		[Address(RVA = "0x15604A8", Offset = "0x15604A8", VA = "0x15604A8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000EB")]
	public float BottomLeftStringActivationPercentage
	{
		[Token(Token = "0x600070C")]
		[Address(RVA = "0x15604C4", Offset = "0x15604C4", VA = "0x15604C4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000EC")]
	public float TopRightStringActivationPercentage
	{
		[Token(Token = "0x600070D")]
		[Address(RVA = "0x15604E0", Offset = "0x15604E0", VA = "0x15604E0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000ED")]
	public float BottomRightStringActivationPercentage
	{
		[Token(Token = "0x600070E")]
		[Address(RVA = "0x15604FC", Offset = "0x15604FC", VA = "0x15604FC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000EE")]
	public float LeftHandDistancePercentage
	{
		[Token(Token = "0x600070F")]
		[Address(RVA = "0x1560518", Offset = "0x1560518", VA = "0x1560518")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000EF")]
	public float RightHandDistancePercentage
	{
		[Token(Token = "0x6000710")]
		[Address(RVA = "0x1560534", Offset = "0x1560534", VA = "0x1560534")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000F0")]
	public float HeadDistancePercentage
	{
		[Token(Token = "0x6000711")]
		[Address(RVA = "0x1560550", Offset = "0x1560550", VA = "0x1560550")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000F1")]
	private GameObject headPosition
	{
		[Token(Token = "0x6000712")]
		[Address(RVA = "0x156056C", Offset = "0x156056C", VA = "0x156056C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000713")]
	[Address(RVA = "0x15605DC", Offset = "0x15605DC", VA = "0x15605DC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000714")]
	[Address(RVA = "0x1560840", Offset = "0x1560840", VA = "0x1560840")]
	private void Update()
	{
	}

	[Token(Token = "0x6000715")]
	[Address(RVA = "0x15605E0", Offset = "0x15605E0", VA = "0x15605E0")]
	private void SubscribeToEvents()
	{
	}

	[Token(Token = "0x6000716")]
	[Address(RVA = "0x15608D8", Offset = "0x15608D8", VA = "0x15608D8")]
	private void OnStringTrigger(Vector3 stringPosition)
	{
	}

	[Token(Token = "0x6000717")]
	[Address(RVA = "0x1560A74", Offset = "0x1560A74", VA = "0x1560A74")]
	private void ParticleTrigger(ParticleSystem.Particle particle)
	{
	}

	[Token(Token = "0x6000718")]
	[Address(RVA = "0x1560C24", Offset = "0x1560C24", VA = "0x1560C24")]
	public WwiseInteractiveAudioManager()
	{
	}
}
[Token(Token = "0x200012C")]
public class AudioLanguageSetter : MonoBehaviour
{
	[Token(Token = "0x4000621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioLanguage audioLanguage;

	[Token(Token = "0x6000719")]
	[Address(RVA = "0xCBAC10", Offset = "0xCBAC10", VA = "0xCBAC10")]
	public void Start()
	{
	}

	[Token(Token = "0x600071A")]
	[Address(RVA = "0xCBACE8", Offset = "0xCBACE8", VA = "0xCBACE8")]
	public void SetAudioLanguage()
	{
	}

	[Token(Token = "0x600071B")]
	[Address(RVA = "0xCBAD54", Offset = "0xCBAD54", VA = "0xCBAD54")]
	public AudioLanguageSetter()
	{
	}
}
[Token(Token = "0x200012D")]
public class ContentScroller : MonoBehaviour
{
	[Token(Token = "0x200012E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F2D0", Offset = "0x86F2D0")]
	private sealed class <Scroll>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400062A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ContentScroller <>4__this;

		[Token(Token = "0x400062B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <startTime>5__2;

		[Token(Token = "0x400062C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <currentTime>5__3;

		[Token(Token = "0x400062D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <startPosition>5__4;

		[Token(Token = "0x170000F2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000722")]
			[Address(RVA = "0xB5C634", Offset = "0xB5C634", VA = "0xB5C634", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000724")]
			[Address(RVA = "0xB5C69C", Offset = "0xB5C69C", VA = "0xB5C69C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600071F")]
		[Address(RVA = "0xB5C444", Offset = "0xB5C444", VA = "0xB5C444")]
		[DebuggerHidden]
		public <Scroll>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000720")]
		[Address(RVA = "0xB5C478", Offset = "0xB5C478", VA = "0xB5C478", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000721")]
		[Address(RVA = "0xB5C47C", Offset = "0xB5C47C", VA = "0xB5C47C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000723")]
		[Address(RVA = "0xB5C63C", Offset = "0xB5C63C", VA = "0xB5C63C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float distanceToScroll;

	[Token(Token = "0x4000623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float scrollTime;

	[Token(Token = "0x4000624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AnimationCurve scrollCurve;

	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RectTransform contentToScroll;

	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float positionXTarget;

	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Coroutine currentScrollCoroutine;

	[Token(Token = "0x600071C")]
	[Address(RVA = "0xB5C354", Offset = "0xB5C354", VA = "0xB5C354")]
	public void StartScrolling(bool right)
	{
	}

	[Token(Token = "0x600071D")]
	[Address(RVA = "0xB5C3D4", Offset = "0xB5C3D4", VA = "0xB5C3D4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x87C330", Offset = "0x87C330")]
	private IEnumerator Scroll()
	{
		return null;
	}

	[Token(Token = "0x600071E")]
	[Address(RVA = "0xB5C470", Offset = "0xB5C470", VA = "0xB5C470")]
	public ContentScroller()
	{
	}
}
[Token(Token = "0x200012F")]
public class CustomGUIButtonPanel : MonoBehaviour
{
	[Token(Token = "0x400062E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private CustomGUIButton[] panelButtons;

	[Token(Token = "0x400062F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private CustomGUIButton currentActiveButton;

	[Token(Token = "0x6000725")]
	[Address(RVA = "0xAE9E08", Offset = "0xAE9E08", VA = "0xAE9E08")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000726")]
	[Address(RVA = "0xAE9F0C", Offset = "0xAE9F0C", VA = "0xAE9F0C")]
	public void OnButtonTurnOn(CustomGUIButton buttonPressed)
	{
	}

	[Token(Token = "0x6000727")]
	[Address(RVA = "0xAE9FD4", Offset = "0xAE9FD4", VA = "0xAE9FD4")]
	public CustomGUIButtonPanel()
	{
	}
}
[Token(Token = "0x2000130")]
public class MenuManager : MonoBehaviour
{
	[Token(Token = "0x2000131")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F2E0", Offset = "0x86F2E0")]
	private sealed class <UnloadMenuAfterDelay>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400063A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MenuManager <>4__this;

		[Token(Token = "0x170000F4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000734")]
			[Address(RVA = "0xF6A3B8", Offset = "0xF6A3B8", VA = "0xF6A3B8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000736")]
			[Address(RVA = "0xF6A420", Offset = "0xF6A420", VA = "0xF6A420", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000731")]
		[Address(RVA = "0xF6A218", Offset = "0xF6A218", VA = "0xF6A218")]
		[DebuggerHidden]
		public <UnloadMenuAfterDelay>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6000732")]
		[Address(RVA = "0xF6A2C4", Offset = "0xF6A2C4", VA = "0xF6A2C4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000733")]
		[Address(RVA = "0xF6A2C8", Offset = "0xF6A2C8", VA = "0xF6A2C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000735")]
		[Address(RVA = "0xF6A3C0", Offset = "0xF6A3C0", VA = "0xF6A3C0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MenuManager Instance;

	[Token(Token = "0x4000631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x874C54", Offset = "0x874C54")]
	[SerializeField]
	private PlayableDirector director;

	[Token(Token = "0x4000632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x874CA0", Offset = "0x874CA0")]
	[SerializeField]
	private float delayBeforeMenuIsUnloaded;

	[Token(Token = "0x4000633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private string wwiseEventPlayMusic;

	[Token(Token = "0x4000634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private string wwiseEventStopMusic;

	[Token(Token = "0x4000635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private string wwiseEventMuteDialogue;

	[Token(Token = "0x4000636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private CustomGUIButton[] canvasMenuButtons;

	[Token(Token = "0x4000637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Action OnMenuResume;

	[Token(Token = "0x6000728")]
	[Address(RVA = "0xF69B58", Offset = "0xF69B58", VA = "0xF69B58")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000729")]
	[Address(RVA = "0xF69CC0", Offset = "0xF69CC0", VA = "0xF69CC0")]
	public void NarratorButtonPressedOn()
	{
	}

	[Token(Token = "0x600072A")]
	[Address(RVA = "0xF69D34", Offset = "0xF69D34", VA = "0xF69D34")]
	public void NarratorButtonPressedOff()
	{
	}

	[Token(Token = "0x600072B")]
	[Address(RVA = "0xF69DA8", Offset = "0xF69DA8", VA = "0xF69DA8")]
	public void EnableMenuButtons()
	{
	}

	[Token(Token = "0x600072C")]
	[Address(RVA = "0xF69C54", Offset = "0xF69C54", VA = "0xF69C54")]
	public void DisableMenuButtons()
	{
	}

	[Token(Token = "0x600072D")]
	[Address(RVA = "0xF69F6C", Offset = "0xF69F6C", VA = "0xF69F6C")]
	public void EndMainMenu()
	{
	}

	[Token(Token = "0x600072E")]
	[Address(RVA = "0xF6A17C", Offset = "0xF6A17C", VA = "0xF6A17C")]
	public void UnloadMenu()
	{
	}

	[Token(Token = "0x600072F")]
	[Address(RVA = "0xF6A1A8", Offset = "0xF6A1A8", VA = "0xF6A1A8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x87C3E4", Offset = "0x87C3E4")]
	private IEnumerator UnloadMenuAfterDelay()
	{
		return null;
	}

	[Token(Token = "0x6000730")]
	[Address(RVA = "0xF6A244", Offset = "0xF6A244", VA = "0xF6A244")]
	public MenuManager()
	{
	}
}
[Token(Token = "0x2000132")]
public class SubtitleLanguageSetter : MonoBehaviour
{
	[Token(Token = "0x400063B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SubtitleLanguage subtitleLanguage;

	[Token(Token = "0x6000737")]
	[Address(RVA = "0xB1CBF0", Offset = "0xB1CBF0", VA = "0xB1CBF0")]
	public void Start()
	{
	}

	[Token(Token = "0x6000738")]
	[Address(RVA = "0xB1CCC8", Offset = "0xB1CCC8", VA = "0xB1CCC8")]
	public void SetSubtitleLanguage()
	{
	}

	[Token(Token = "0x6000739")]
	[Address(RVA = "0xB1CD34", Offset = "0xB1CD34", VA = "0xB1CD34")]
	public SubtitleLanguageSetter()
	{
	}
}
[Token(Token = "0x2000133")]
public class OVRInputUpdater : MonoBehaviour
{
	[Token(Token = "0x600073A")]
	[Address(RVA = "0xC65224", Offset = "0xC65224", VA = "0xC65224")]
	private void Update()
	{
	}

	[Token(Token = "0x600073B")]
	[Address(RVA = "0xC65284", Offset = "0xC65284", VA = "0xC65284")]
	public OVRInputUpdater()
	{
	}
}
[Token(Token = "0x2000134")]
public interface IRepeatable
{
	[Token(Token = "0x600073C")]
	void Tick(float deltaTime);
}
[Token(Token = "0x2000135")]
public class RepeatableManager : MonoBehaviour
{
	[Token(Token = "0x400063C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static RepeatableManager instance;

	[Token(Token = "0x400063D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<IRepeatable> repeatables;

	[Token(Token = "0x170000F6")]
	public static RepeatableManager Instance
	{
		[Token(Token = "0x600073D")]
		[Address(RVA = "0xB0F264", Offset = "0xB0F264", VA = "0xB0F264")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600073E")]
	[Address(RVA = "0xB0F2F8", Offset = "0xB0F2F8", VA = "0xB0F2F8")]
	private static void InitManager()
	{
	}

	[Token(Token = "0x600073F")]
	[Address(RVA = "0xB0F3B4", Offset = "0xB0F3B4", VA = "0xB0F3B4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000740")]
	[Address(RVA = "0xB0F4BC", Offset = "0xB0F4BC", VA = "0xB0F4BC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000741")]
	[Address(RVA = "0xB0F5FC", Offset = "0xB0F5FC", VA = "0xB0F5FC")]
	public void Register(IRepeatable repeatable)
	{
	}

	[Token(Token = "0x6000742")]
	[Address(RVA = "0xB0F6C4", Offset = "0xB0F6C4", VA = "0xB0F6C4")]
	public void Unregister(IRepeatable repeatable)
	{
	}

	[Token(Token = "0x6000743")]
	[Address(RVA = "0xB0F78C", Offset = "0xB0F78C", VA = "0xB0F78C")]
	public RepeatableManager()
	{
	}
}
[Token(Token = "0x2000136")]
public class CameraPositionOnModule : SceneInitializationModule
{
	[Token(Token = "0x400063E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform targetPosition;

	[Token(Token = "0x400063F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x874D3C", Offset = "0x874D3C")]
	private Action<Result> <OnStepFinish>k__BackingField;

	[Token(Token = "0x170000F7")]
	public override Action<Result> OnStepFinish
	{
		[Token(Token = "0x6000744")]
		[Address(RVA = "0xB58128", Offset = "0xB58128", VA = "0xB58128", Slot = "7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87C498", Offset = "0x87C498")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000745")]
		[Address(RVA = "0xB58130", Offset = "0xB58130", VA = "0xB58130", Slot = "8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87C4A8", Offset = "0x87C4A8")]
		set
		{
		}
	}

	[Token(Token = "0x6000746")]
	[Address(RVA = "0xB58138", Offset = "0xB58138", VA = "0xB58138", Slot = "9")]
	public override void Execute()
	{
	}

	[Token(Token = "0x6000747")]
	[Address(RVA = "0xB583A4", Offset = "0xB583A4", VA = "0xB583A4")]
	public CameraPositionOnModule()
	{
	}
}
[Token(Token = "0x2000137")]
public class CameraRecenterFeederModule : SceneInitializationModule
{
	[Token(Token = "0x4000640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private CameraRecenterFeeder cameraRecenterFeeder;

	[Token(Token = "0x4000641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x874D5C", Offset = "0x874D5C")]
	private Action<Result> <OnStepFinish>k__BackingField;

	[Token(Token = "0x170000F8")]
	public override Action<Result> OnStepFinish
	{
		[Token(Token = "0x6000748")]
		[Address(RVA = "0xB58614", Offset = "0xB58614", VA = "0xB58614", Slot = "7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87C4B8", Offset = "0x87C4B8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000749")]
		[Address(RVA = "0xB5861C", Offset = "0xB5861C", VA = "0xB5861C", Slot = "8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87C4C8", Offset = "0x87C4C8")]
		set
		{
		}
	}

	[Token(Token = "0x600074A")]
	[Address(RVA = "0xB58624", Offset = "0xB58624", VA = "0xB58624", Slot = "9")]
	public override void Execute()
	{
	}

	[Token(Token = "0x600074B")]
	[Address(RVA = "0xB58718", Offset = "0xB58718", VA = "0xB58718")]
	public CameraRecenterFeederModule()
	{
	}
}
[Token(Token = "0x2000138")]
public class CameraSetLookatModule : SceneInitializationModule
{
	[Token(Token = "0x4000642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform lookAt;

	[Token(Token = "0x4000643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x874D7C", Offset = "0x874D7C")]
	private Action<Result> <OnStepFinish>k__BackingField;

	[Token(Token = "0x170000F9")]
	public override Action<Result> OnStepFinish
	{
		[Token(Token = "0x600074C")]
		[Address(RVA = "0xB58E4C", Offset = "0xB58E4C", VA = "0xB58E4C", Slot = "7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87C4D8", Offset = "0x87C4D8")]
		get
		{
			return null;
		}
		[Token(Token = "0x600074D")]
		[Address(RVA = "0xB58E54", Offset = "0xB58E54", VA = "0xB58E54", Slot = "8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87C4E8", Offset = "0x87C4E8")]
		set
		{
		}
	}

	[Token(Token = "0x600074E")]
	[Address(RVA = "0xB58E5C", Offset = "0xB58E5C", VA = "0xB58E5C", Slot = "9")]
	public override void Execute()
	{
	}

	[Token(Token = "0x600074F")]
	[Address(RVA = "0xB590C8", Offset = "0xB590C8", VA = "0xB590C8")]
	public CameraSetLookatModule()
	{
	}
}
[Token(Token = "0x2000139")]
public class CameraSetTargetModule : SceneInitializationModule
{
	[Token(Token = "0x4000644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform target;

	[Token(Token = "0x4000645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool withRotation;

	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x874DAC", Offset = "0x874DAC")]
	private Action<Result> <OnStepFinish>k__BackingField;

	[Token(Token = "0x170000FA")]
	public override Action<Result> OnStepFinish
	{
		[Token(Token = "0x6000750")]
		[Address(RVA = "0xB590D0", Offset = "0xB590D0", VA = "0xB590D0", Slot = "7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87C4F8", Offset = "0x87C4F8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000751")]
		[Address(RVA = "0xB590D8", Offset = "0xB590D8", VA = "0xB590D8", Slot = "8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87C508", Offset = "0x87C508")]
		set
		{
		}
	}

	[Token(Token = "0x6000752")]
	[Address(RVA = "0xB590E0", Offset = "0xB590E0", VA = "0xB590E0", Slot = "9")]
	public override void Execute()
	{
	}

	[Token(Token = "0x6000753")]
	[Address(RVA = "0xB59350", Offset = "0xB59350", VA = "0xB59350")]
	public CameraSetTargetModule()
	{
	}
}
[Token(Token = "0x200013A")]
public class DelayModule : SceneInitializationModule, IRepeatable
{
	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float timeToWait;

	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float timer;

	[Token(Token = "0x4000649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x874DCC", Offset = "0x874DCC")]
	private Action<Result> <OnStepFinish>k__BackingField;

	[Token(Token = "0x170000FB")]
	public override Action<Result> OnStepFinish
	{
		[Token(Token = "0x6000754")]
		[Address(RVA = "0xAECE10", Offset = "0xAECE10", VA = "0xAECE10", Slot = "7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87C518", Offset = "0x87C518")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000755")]
		[Address(RVA = "0xAECE18", Offset = "0xAECE18", VA = "0xAECE18", Slot = "8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87C528", Offset = "0x87C528")]
		set
		{
		}
	}

	[Token(Token = "0x6000756")]
	[Address(RVA = "0xAECE20", Offset = "0xAECE20", VA = "0xAECE20", Slot = "9")]
	public override void Execute()
	{
	}

	[Token(Token = "0x6000757")]
	[Address(RVA = "0xAECE54", Offset = "0xAECE54", VA = "0xAECE54", Slot = "10")]
	public void Tick(float deltaTime)
	{
	}

	[Token(Token = "0x6000758")]
	[Address(RVA = "0xAECF04", Offset = "0xAECF04", VA = "0xAECF04")]
	public DelayModule()
	{
	}
}
[Token(Token = "0x200013B")]
public class DisableOverlayModule : SceneInitializationModule
{
	[Token(Token = "0x400064A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x874DDC", Offset = "0x874DDC")]
	private Action<Result> <OnStepFinish>k__BackingField;

	[Token(Token = "0x170000FC")]
	public override Action<Result> OnStepFinish
	{
		[Token(Token = "0x6000759")]
		[Address(RVA = "0xAECF0C", Offset = "0xAECF0C", VA = "0xAECF0C", Slot = "7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87C538", Offset = "0x87C538")]
		get
		{
			return null;
		}
		[Token(Token = "0x600075A")]
		[Address(RVA = "0xAECF14", Offset = "0xAECF14", VA = "0xAECF14", Slot = "8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87C548", Offset = "0x87C548")]
		set
		{
		}
	}

	[Token(Token = "0x600075B")]
	[Address(RVA = "0xAECF1C", Offset = "0xAECF1C", VA = "0xAECF1C", Slot = "9")]
	public override void Execute()
	{
	}

	[Token(Token = "0x600075C")]
	[Address(RVA = "0xAECFB0", Offset = "0xAECFB0", VA = "0xAECFB0")]
	public DisableOverlayModule()
	{
	}
}
[Token(Token = "0x200013C")]
public class EnableSceneModule : SceneInitializationModule
{
	[Token(Token = "0x400064B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x874DEC", Offset = "0x874DEC")]
	private Action<Result> <OnStepFinish>k__BackingField;

	[Token(Token = "0x170000FD")]
	public override Action<Result> OnStepFinish
	{
		[Token(Token = "0x600075D")]
		[Address(RVA = "0xAF03E4", Offset = "0xAF03E4", VA = "0xAF03E4", Slot = "7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87C558", Offset = "0x87C558")]
		get
		{
			return null;
		}
		[Token(Token = "0x600075E")]
		[Address(RVA = "0xAF03EC", Offset = "0xAF03EC", VA = "0xAF03EC", Slot = "8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87C568", Offset = "0x87C568")]
		set
		{
		}
	}

	[Token(Token = "0x600075F")]
	[Address(RVA = "0xAF03F4", Offset = "0xAF03F4", VA = "0xAF03F4", Slot = "9")]
	public override void Execute()
	{
	}

	[Token(Token = "0x6000760")]
	[Address(RVA = "0xAF04C0", Offset = "0xAF04C0", VA = "0xAF04C0")]
	public EnableSceneModule()
	{
	}
}
[Token(Token = "0x200013D")]
public class InitializePauseMenuModule : SceneInitializationModule
{
	[Token(Token = "0x400064C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private PauseMenu pauseMenu;

	[Token(Token = "0x400064D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x874E0C", Offset = "0x874E0C")]
	private Action<Result> <OnStepFinish>k__BackingField;

	[Token(Token = "0x170000FE")]
	public override Action<Result> OnStepFinish
	{
		[Token(Token = "0x6000761")]
		[Address(RVA = "0xB49234", Offset = "0xB49234", VA = "0xB49234", Slot = "7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87C578", Offset = "0x87C578")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000762")]
		[Address(RVA = "0xB4923C", Offset = "0xB4923C", VA = "0xB4923C", Slot = "8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87C588", Offset = "0x87C588")]
		set
		{
		}
	}

	[Token(Token = "0x6000763")]
	[Address(RVA = "0xB49244", Offset = "0xB49244", VA = "0xB49244", Slot = "9")]
	public override void Execute()
	{
	}

	[Token(Token = "0x6000764")]
	[Address(RVA = "0xB492C8", Offset = "0xB492C8", VA = "0xB492C8")]
	public InitializePauseMenuModule()
	{
	}
}
[Token(Token = "0x200013E")]
public class LightProbesTetrahedralizeModule : SceneInitializationModule
{
	[Token(Token = "0x400064E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x874E1C", Offset = "0x874E1C")]
	private Action<Result> <OnStepFinish>k__BackingField;

	[Token(Token = "0x170000FF")]
	public override Action<Result> OnStepFinish
	{
		[Token(Token = "0x6000765")]
		[Address(RVA = "0xB4ED1C", Offset = "0xB4ED1C", VA = "0xB4ED1C", Slot = "7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87C598", Offset = "0x87C598")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000766")]
		[Address(RVA = "0xB4ED24", Offset = "0xB4ED24", VA = "0xB4ED24", Slot = "8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87C5A8", Offset = "0x87C5A8")]
		set
		{
		}
	}

	[Token(Token = "0x6000767")]
	[Address(RVA = "0xB4ED2C", Offset = "0xB4ED2C", VA = "0xB4ED2C", Slot = "9")]
	public override void Execute()
	{
	}

	[Token(Token = "0x6000768")]
	[Address(RVA = "0xB4EDA4", Offset = "0xB4EDA4", VA = "0xB4EDA4")]
	public LightProbesTetrahedralizeModule()
	{
	}
}
[Token(Token = "0x200013F")]
public abstract class SceneInitializationModule : MonoBehaviour, ThreeDAR.EventQueueSystem.IStep
{
	[Token(Token = "0x17000100")]
	public abstract Action<Result> OnStepFinish
	{
		[Token(Token = "0x6000769")]
		get;
		[Token(Token = "0x600076A")]
		set;
	}

	[Token(Token = "0x600076B")]
	public abstract void Execute();

	[Token(Token = "0x600076C")]
	[Address(RVA = "0xB14E44", Offset = "0xB14E44", VA = "0xB14E44")]
	protected SceneInitializationModule()
	{
	}
}
[Token(Token = "0x2000140")]
public class SceneInitializer : MonoBehaviour
{
	[Token(Token = "0x400064F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<SceneInitializationModule> modules;

	[Token(Token = "0x4000650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private EventQueue<SceneInitializationModule> modulesQueue;

	[Token(Token = "0x600076D")]
	[Address(RVA = "0xB12740", Offset = "0xB12740", VA = "0xB12740")]
	public void InitializeScene()
	{
	}

	[Token(Token = "0x600076E")]
	[Address(RVA = "0xB14E4C", Offset = "0xB14E4C", VA = "0xB14E4C")]
	private void InitQueue()
	{
	}

	[Token(Token = "0x600076F")]
	[Address(RVA = "0xB14F28", Offset = "0xB14F28", VA = "0xB14F28")]
	private void OnQueueFinish(Result result)
	{
	}

	[Token(Token = "0x6000770")]
	[Address(RVA = "0xB14FD8", Offset = "0xB14FD8", VA = "0xB14FD8")]
	public SceneInitializer()
	{
	}
}
[Token(Token = "0x2000141")]
public class EpisodeDataDrawer : MonoBehaviour
{
	[Token(Token = "0x4000651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static EpisodeDataDrawer Instance;

	[Token(Token = "0x4000652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private EpisodeData episodeData;

	[Token(Token = "0x4000653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool startingSceneOverride;

	[Token(Token = "0x4000654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private SceneNames startingScene;

	[Token(Token = "0x4000655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x874E4C", Offset = "0x874E4C")]
	private List<SceneRepresentation> <Scenes>k__BackingField;

	[Token(Token = "0x17000101")]
	public List<SceneRepresentation> Scenes
	{
		[Token(Token = "0x6000771")]
		[Address(RVA = "0xAF2EEC", Offset = "0xAF2EEC", VA = "0xAF2EEC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87C5B8", Offset = "0x87C5B8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000772")]
		[Address(RVA = "0xAF2EF4", Offset = "0xAF2EF4", VA = "0xAF2EF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87C5C8", Offset = "0x87C5C8")]
		private set
		{
		}
	}

	[Token(Token = "0x6000773")]
	[Address(RVA = "0xAF2EFC", Offset = "0xAF2EFC", VA = "0xAF2EFC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000774")]
	[Address(RVA = "0xAF2F50", Offset = "0xAF2F50", VA = "0xAF2F50")]
	public bool ContainsScene(SceneNames sceneName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000775")]
	[Address(RVA = "0xAF2FC0", Offset = "0xAF2FC0", VA = "0xAF2FC0")]
	public SceneRepresentation GetSceneData(SceneNames sceneName)
	{
		return null;
	}

	[Token(Token = "0x6000776")]
	[Address(RVA = "0xAF3150", Offset = "0xAF3150", VA = "0xAF3150")]
	public SceneRepresentation GetFirstSceneData()
	{
		return null;
	}

	[Token(Token = "0x6000777")]
	[Address(RVA = "0xAF31D8", Offset = "0xAF31D8", VA = "0xAF31D8")]
	public void OverrideStartingScene(SceneNames newStartingScene)
	{
	}

	[Token(Token = "0x6000778")]
	[Address(RVA = "0xAF31E8", Offset = "0xAF31E8", VA = "0xAF31E8")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000779")]
	[Address(RVA = "0xAF31F0", Offset = "0xAF31F0", VA = "0xAF31F0")]
	public void CacheScenes()
	{
	}

	[Token(Token = "0x600077A")]
	[Address(RVA = "0xAF36F0", Offset = "0xAF36F0", VA = "0xAF36F0")]
	private SceneRepresentation GetSceneRepresentation(string scenePrefix)
	{
		return null;
	}

	[Token(Token = "0x600077B")]
	[Address(RVA = "0xAF3A60", Offset = "0xAF3A60", VA = "0xAF3A60")]
	public int GetSceneIndex(SceneNames sceneName)
	{
		return default(int);
	}

	[Token(Token = "0x600077C")]
	[Address(RVA = "0xAF3B78", Offset = "0xAF3B78", VA = "0xAF3B78")]
	public EpisodeDataDrawer()
	{
	}
}
[Token(Token = "0x2000142")]
public class SceneDataDrawer : MonoBehaviour
{
	[Token(Token = "0x2000143")]
	public class SceneData
	{
		[Token(Token = "0x4000659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SceneNames sceneName;

		[Token(Token = "0x400065A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject sceneRoot;

		[Token(Token = "0x400065B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayableDirector sceneDirector;

		[Token(Token = "0x400065C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SceneInitializer sceneInitializer;

		[Token(Token = "0x400065D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SceneTimes sceneTimes;

		[Token(Token = "0x600078E")]
		[Address(RVA = "0xB14C54", Offset = "0xB14C54", VA = "0xB14C54")]
		public SceneData()
		{
		}
	}

	[Token(Token = "0x2000144")]
	public class SceneTimes
	{
		[Token(Token = "0x400065E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public double startTime;

		[Token(Token = "0x400065F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public double endTime;

		[Token(Token = "0x600078F")]
		[Address(RVA = "0xB14700", Offset = "0xB14700", VA = "0xB14700")]
		public SceneTimes()
		{
		}
	}

	[Token(Token = "0x4000656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SceneDataDrawer Instance;

	[Token(Token = "0x4000657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<SceneNames, SceneData> scenesData;

	[Token(Token = "0x4000658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<SceneNames, SceneTimes> scenesTimes;

	[Token(Token = "0x600077D")]
	[Address(RVA = "0xB1377C", Offset = "0xB1377C", VA = "0xB1377C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600077E")]
	[Address(RVA = "0xB137D0", Offset = "0xB137D0", VA = "0xB137D0")]
	private void Start()
	{
	}

	[Token(Token = "0x600077F")]
	[Address(RVA = "0xB1390C", Offset = "0xB1390C", VA = "0xB1390C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000780")]
	[Address(RVA = "0xB13A48", Offset = "0xB13A48", VA = "0xB13A48")]
	public SceneData GetSceneData(SceneNames sceneName)
	{
		return null;
	}

	[Token(Token = "0x6000781")]
	[Address(RVA = "0xB13B44", Offset = "0xB13B44", VA = "0xB13B44")]
	public SceneData GetCurrentSceneData(float timeOffset = 0f)
	{
		return null;
	}

	[Token(Token = "0x6000782")]
	[Address(RVA = "0xB13BC8", Offset = "0xB13BC8", VA = "0xB13BC8")]
	public SceneData GetSceneData(double currentTime)
	{
		return null;
	}

	[Token(Token = "0x6000783")]
	[Address(RVA = "0xB13EA4", Offset = "0xB13EA4", VA = "0xB13EA4")]
	public bool IsSceneDataLoaded(SceneNames sceneName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000784")]
	[Address(RVA = "0xB13F0C", Offset = "0xB13F0C", VA = "0xB13F0C")]
	public void ClearSceneData()
	{
	}

	[Token(Token = "0x6000785")]
	[Address(RVA = "0xB13F64", Offset = "0xB13F64", VA = "0xB13F64")]
	public void ClearSceneTimes()
	{
	}

	[Token(Token = "0x6000786")]
	[Address(RVA = "0xB13FBC", Offset = "0xB13FBC", VA = "0xB13FBC")]
	public void CacheScenesTimes()
	{
	}

	[Token(Token = "0x6000787")]
	[Address(RVA = "0xB14708", Offset = "0xB14708", VA = "0xB14708")]
	public SceneTimes GetSceneTimes(SceneNames sceneName)
	{
		return null;
	}

	[Token(Token = "0x6000788")]
	[Address(RVA = "0xB13D04", Offset = "0xB13D04", VA = "0xB13D04")]
	public SceneNames GetSceneName(double time)
	{
		return default(SceneNames);
	}

	[Token(Token = "0x6000789")]
	[Address(RVA = "0xB14804", Offset = "0xB14804", VA = "0xB14804")]
	private void OnSceneLoaded(Scene scene)
	{
	}

	[Token(Token = "0x600078A")]
	[Address(RVA = "0xB14B54", Offset = "0xB14B54", VA = "0xB14B54")]
	private void OnSceneUnloaded(SceneNames sceneName)
	{
	}

	[Token(Token = "0x600078B")]
	[Address(RVA = "0xB14920", Offset = "0xB14920", VA = "0xB14920")]
	private SceneData SceneToData(Scene scene)
	{
		return null;
	}

	[Token(Token = "0x600078C")]
	[Address(RVA = "0xB14C5C", Offset = "0xB14C5C", VA = "0xB14C5C")]
	private SceneNames StringToSceneName(string name)
	{
		return default(SceneNames);
	}

	[Token(Token = "0x600078D")]
	[Address(RVA = "0xB14DAC", Offset = "0xB14DAC", VA = "0xB14DAC")]
	public SceneDataDrawer()
	{
	}
}
[Token(Token = "0x2000145")]
public class SceneTracker
{
	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<SceneRepresentation> scenes;

	[Token(Token = "0x4000661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x874E5C", Offset = "0x874E5C")]
	private int <CurrentSceneIndex>k__BackingField;

	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x874E6C", Offset = "0x874E6C")]
	private int <StartSceneIndex>k__BackingField;

	[Token(Token = "0x17000102")]
	private List<SceneRepresentation> Scenes
	{
		[Token(Token = "0x6000790")]
		[Address(RVA = "0xB14FE0", Offset = "0xB14FE0", VA = "0xB14FE0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000103")]
	public int CurrentSceneIndex
	{
		[Token(Token = "0x6000791")]
		[Address(RVA = "0xB1504C", Offset = "0xB1504C", VA = "0xB1504C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87C5D8", Offset = "0x87C5D8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000792")]
		[Address(RVA = "0xB15054", Offset = "0xB15054", VA = "0xB15054")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87C5E8", Offset = "0x87C5E8")]
		set
		{
		}
	}

	[Token(Token = "0x17000104")]
	public int StartSceneIndex
	{
		[Token(Token = "0x6000793")]
		[Address(RVA = "0xB1505C", Offset = "0xB1505C", VA = "0xB1505C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87C5F8", Offset = "0x87C5F8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000794")]
		[Address(RVA = "0xB15064", Offset = "0xB15064", VA = "0xB15064")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87C608", Offset = "0x87C608")]
		set
		{
		}
	}

	[Token(Token = "0x17000105")]
	public SceneRepresentation PreviousScene
	{
		[Token(Token = "0x6000795")]
		[Address(RVA = "0xB1506C", Offset = "0xB1506C", VA = "0xB1506C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000106")]
	public SceneRepresentation CurrentScene
	{
		[Token(Token = "0x6000796")]
		[Address(RVA = "0xB150F8", Offset = "0xB150F8", VA = "0xB150F8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000107")]
	public SceneRepresentation NextScene
	{
		[Token(Token = "0x6000797")]
		[Address(RVA = "0xB15198", Offset = "0xB15198", VA = "0xB15198")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000798")]
	[Address(RVA = "0xB1523C", Offset = "0xB1523C", VA = "0xB1523C")]
	public void SetCurrentScene(SceneNames sceneName)
	{
	}

	[Token(Token = "0x6000799")]
	[Address(RVA = "0xB15370", Offset = "0xB15370", VA = "0xB15370")]
	public void Reset()
	{
	}

	[Token(Token = "0x600079A")]
	[Address(RVA = "0xB15378", Offset = "0xB15378", VA = "0xB15378")]
	public SceneTracker()
	{
	}
}
[Token(Token = "0x2000146")]
public class FakeHandMenuController : MonoBehaviour
{
	[Token(Token = "0x2000147")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F2F0", Offset = "0x86F2F0")]
	private sealed class <FadeOutColorMultiply>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400066A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400066B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400066C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FakeHandMenuController <>4__this;

		[Token(Token = "0x400066D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <currentTimer>5__2;

		[Token(Token = "0x400066E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <animationLength>5__3;

		[Token(Token = "0x17000108")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007A6")]
			[Address(RVA = "0xAF7D28", Offset = "0xAF7D28", VA = "0xAF7D28", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000109")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007A8")]
			[Address(RVA = "0xAF7D90", Offset = "0xAF7D90", VA = "0xAF7D90", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007A3")]
		[Address(RVA = "0xAF7AD8", Offset = "0xAF7AD8", VA = "0xAF7AD8")]
		[DebuggerHidden]
		public <FadeOutColorMultiply>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x60007A4")]
		[Address(RVA = "0xAF7B88", Offset = "0xAF7B88", VA = "0xAF7B88", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007A5")]
		[Address(RVA = "0xAF7B8C", Offset = "0xAF7B8C", VA = "0xAF7B8C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007A7")]
		[Address(RVA = "0xAF7D30", Offset = "0xAF7D30", VA = "0xAF7D30", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TriggerEvents handTriggerEvent;

	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Animator[] interactiveHandsAnims;

	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private string animatorFadeTrigger;

	[Token(Token = "0x4000666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Vector2 handIntensityRange;

	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SkinnedMeshRenderer[] meshRenderers;

	[Token(Token = "0x4000668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int colorIntensityId;

	[Token(Token = "0x4000669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool canLerpIntensity;

	[Token(Token = "0x600079B")]
	[Address(RVA = "0xAF7488", Offset = "0xAF7488", VA = "0xAF7488")]
	private void Awake()
	{
	}

	[Token(Token = "0x600079C")]
	[Address(RVA = "0xAF75A8", Offset = "0xAF75A8", VA = "0xAF75A8")]
	private void Start()
	{
	}

	[Token(Token = "0x600079D")]
	[Address(RVA = "0xAF7678", Offset = "0xAF7678", VA = "0xAF7678")]
	private void Update()
	{
	}

	[Token(Token = "0x600079E")]
	[Address(RVA = "0xAF7858", Offset = "0xAF7858", VA = "0xAF7858")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600079F")]
	[Address(RVA = "0xAF7738", Offset = "0xAF7738", VA = "0xAF7738")]
	private void SetColorMultiplyValue(float value)
	{
	}

	[Token(Token = "0x60007A0")]
	[Address(RVA = "0xAF7928", Offset = "0xAF7928", VA = "0xAF7928")]
	private void FadeHands()
	{
	}

	[Token(Token = "0x60007A1")]
	[Address(RVA = "0xAF7A68", Offset = "0xAF7A68", VA = "0xAF7A68")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x87C618", Offset = "0x87C618")]
	private IEnumerator FadeOutColorMultiply()
	{
		return null;
	}

	[Token(Token = "0x60007A2")]
	[Address(RVA = "0xAF7B04", Offset = "0xAF7B04", VA = "0xAF7B04")]
	public FakeHandMenuController()
	{
	}
}
[Token(Token = "0x2000148")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x86F300", Offset = "0x86F300")]
public class JumpToSceneData : ScriptableObject
{
	[Token(Token = "0x400066F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool isMenu;

	[Token(Token = "0x4000670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Sprite sceneLogo;

	[Token(Token = "0x4000671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private SceneNames sceneName;

	[Token(Token = "0x4000672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float timeOffSet;

	[Token(Token = "0x4000673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private string timestamp;

	[Token(Token = "0x1700010A")]
	public bool IsMenu
	{
		[Token(Token = "0x60007A9")]
		[Address(RVA = "0xB4BB54", Offset = "0xB4BB54", VA = "0xB4BB54")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700010B")]
	public Sprite SceneLogo
	{
		[Token(Token = "0x60007AA")]
		[Address(RVA = "0xB4BB5C", Offset = "0xB4BB5C", VA = "0xB4BB5C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700010C")]
	public SceneNames SceneName
	{
		[Token(Token = "0x60007AB")]
		[Address(RVA = "0xB4BB64", Offset = "0xB4BB64", VA = "0xB4BB64")]
		get
		{
			return default(SceneNames);
		}
	}

	[Token(Token = "0x1700010D")]
	public float TimeOffSet
	{
		[Token(Token = "0x60007AC")]
		[Address(RVA = "0xB4BB6C", Offset = "0xB4BB6C", VA = "0xB4BB6C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700010E")]
	public string Timestamp
	{
		[Token(Token = "0x60007AD")]
		[Address(RVA = "0xB4BB74", Offset = "0xB4BB74", VA = "0xB4BB74")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60007AE")]
	[Address(RVA = "0xB4BB7C", Offset = "0xB4BB7C", VA = "0xB4BB7C")]
	public JumpToSceneData()
	{
	}
}
[Token(Token = "0x2000149")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x86F34C", Offset = "0x86F34C")]
public class PauseMenuButton : MonoBehaviour
{
	[Token(Token = "0x4000674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Image highlight;

	[Token(Token = "0x4000675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TextMeshProUGUI timeStamp;

	[Token(Token = "0x4000676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private JumpToSceneData sceneData;

	[Token(Token = "0x4000677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private PauseMenu owner;

	[Token(Token = "0x4000678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float index;

	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float t;

	[Token(Token = "0x400067A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float diff;

	[Token(Token = "0x1700010F")]
	public JumpToSceneData SceneData
	{
		[Token(Token = "0x60007AF")]
		[Address(RVA = "0xB0C344", Offset = "0xB0C344", VA = "0xB0C344")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60007B0")]
	[Address(RVA = "0xB0B36C", Offset = "0xB0B36C", VA = "0xB0B36C")]
	public void Initialize(JumpToSceneData sceneData, int index, PauseMenu owner)
	{
	}

	[Token(Token = "0x60007B1")]
	[Address(RVA = "0xB0C028", Offset = "0xB0C028", VA = "0xB0C028")]
	public void SetHighlight(bool state)
	{
	}

	[Token(Token = "0x60007B2")]
	[Address(RVA = "0xB0AAB0", Offset = "0xB0AAB0", VA = "0xB0AAB0")]
	public void InterpolateTimeStampAlpha(float scrollIndex, float buttonsInView)
	{
	}

	[Token(Token = "0x60007B3")]
	[Address(RVA = "0xB0C34C", Offset = "0xB0C34C", VA = "0xB0C34C")]
	public void ButtonDown()
	{
	}

	[Token(Token = "0x60007B4")]
	[Address(RVA = "0xB0C364", Offset = "0xB0C364", VA = "0xB0C364")]
	public PauseMenuButton()
	{
	}
}
[Token(Token = "0x200014A")]
public enum SceneNames
{
	[Token(Token = "0x400067C")]
	Story_010_TownSchool = 10,
	[Token(Token = "0x400067D")]
	Story_015_SchoolTransition = 15,
	[Token(Token = "0x400067E")]
	Story_020_Lake = 20,
	[Token(Token = "0x400067F")]
	Story_030_TotoHouse = 30,
	[Token(Token = "0x4000680")]
	Story_040_HillDrive = 40,
	[Token(Token = "0x4000681")]
	Story_050_GrandfatherHouse = 50,
	[Token(Token = "0x4000682")]
	Story_052_GrandfatherBasement = 52,
	[Token(Token = "0x4000683")]
	Story_060_InvisibleWorld = 60,
	[Token(Token = "0x4000684")]
	Story_080_JazzClub = 80,
	[Token(Token = "0x4000685")]
	Story_090_Crime = 90,
	[Token(Token = "0x4000686")]
	Story_100_TotoShadow = 100,
	[Token(Token = "0x4000687")]
	Story_130_GrandMaTown = 130,
	[Token(Token = "0x4000688")]
	Story_140_GrandMaCave = 140,
	[Token(Token = "0x4000689")]
	Story_155_Refuge = 155,
	[Token(Token = "0x400068A")]
	Story_160_Orchestra = 160,
	[Token(Token = "0x400068B")]
	Story_170_Epilogue = 170
}
[Token(Token = "0x200014B")]
public class ScrollRectContetSizer : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
{
	[Token(Token = "0x400068C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool useScale;

	[Token(Token = "0x400068D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AnimationCurve sizeCurve;

	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform rectTransform;

	[Token(Token = "0x400068F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector2 originalSize;

	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 originalScale;

	[Token(Token = "0x4000691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float timer;

	[Token(Token = "0x4000692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float timerSign;

	[Token(Token = "0x4000693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float sizeCurveMaxTime;

	[Token(Token = "0x4000694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool sizeUp;

	[Token(Token = "0x4000695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x874F4C", Offset = "0x874F4C")]
	private float <HalfWidthDelta>k__BackingField;

	[Token(Token = "0x17000110")]
	public float HalfWidthDelta
	{
		[Token(Token = "0x60007B5")]
		[Address(RVA = "0xB156D0", Offset = "0xB156D0", VA = "0xB156D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87C6CC", Offset = "0x87C6CC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60007B6")]
		[Address(RVA = "0xB156D8", Offset = "0xB156D8", VA = "0xB156D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87C6DC", Offset = "0x87C6DC")]
		private set
		{
		}
	}

	[Token(Token = "0x60007B7")]
	[Address(RVA = "0xB156E0", Offset = "0xB156E0", VA = "0xB156E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007B8")]
	[Address(RVA = "0xB157EC", Offset = "0xB157EC", VA = "0xB157EC")]
	private void Update()
	{
	}

	[Token(Token = "0x60007B9")]
	[Address(RVA = "0xB159B8", Offset = "0xB159B8", VA = "0xB159B8", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60007BA")]
	[Address(RVA = "0xB159D0", Offset = "0xB159D0", VA = "0xB159D0", Slot = "5")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60007BB")]
	[Address(RVA = "0xB159C4", Offset = "0xB159C4", VA = "0xB159C4")]
	public void ScaleUp()
	{
	}

	[Token(Token = "0x60007BC")]
	[Address(RVA = "0xB159D8", Offset = "0xB159D8", VA = "0xB159D8")]
	public void ScaleDown()
	{
	}

	[Token(Token = "0x60007BD")]
	[Address(RVA = "0xB159E0", Offset = "0xB159E0", VA = "0xB159E0")]
	public void ForceScaleDown()
	{
	}

	[Token(Token = "0x60007BE")]
	[Address(RVA = "0xB157F0", Offset = "0xB157F0", VA = "0xB157F0")]
	private void SetScale()
	{
	}

	[Token(Token = "0x60007BF")]
	[Address(RVA = "0xB15A14", Offset = "0xB15A14", VA = "0xB15A14")]
	private void CheckTimeSign()
	{
	}

	[Token(Token = "0x60007C0")]
	[Address(RVA = "0xB15A48", Offset = "0xB15A48", VA = "0xB15A48")]
	public ScrollRectContetSizer()
	{
	}
}
[Serializable]
[Token(Token = "0x200014C")]
public class ApplicationSettings
{
	[Token(Token = "0x200014D")]
	public enum Pipeline
	{
		[Token(Token = "0x400069B")]
		EditorPipeline,
		[Token(Token = "0x400069C")]
		BuildPipeline
	}

	[Token(Token = "0x200014E")]
	public enum Quality
	{
		[Token(Token = "0x400069E")]
		Standard,
		[Token(Token = "0x400069F")]
		Low
	}

	[Token(Token = "0x4000696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Pipeline applicationPipeline;

	[Token(Token = "0x4000697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool readSettingsFromExternalFile;

	[Token(Token = "0x4000698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string appId;

	[Token(Token = "0x4000699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x874F5C", Offset = "0x874F5C")]
	private Quality <quality>k__BackingField;

	[Token(Token = "0x60007C1")]
	[Address(RVA = "0xCBA7F4", Offset = "0xCBA7F4", VA = "0xCBA7F4")]
	public ApplicationSettings()
	{
	}
}
[Token(Token = "0x200014F")]
public enum AudioLanguage
{
	[Token(Token = "0x40006A1")]
	English = 0,
	[Token(Token = "0x40006A2")]
	Chinese = 2
}
[Serializable]
[Token(Token = "0x2000150")]
public class GameSettings
{
	[Token(Token = "0x40006A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public SceneNames startScene;

	[Token(Token = "0x40006A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public AudioLanguage audioLanguage;

	[Token(Token = "0x40006A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SubtitleLanguage subtitleLanguage;

	[Token(Token = "0x40006A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool startInMenu;

	[Token(Token = "0x40006A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool qualityBasedOnHeadsetCheck;

	[Token(Token = "0x40006A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	public bool oculusEntitlementCheck;

	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	public bool expirationDateCheck;

	[Token(Token = "0x40006AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string expirationDateString;

	[Token(Token = "0x40006AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRPlugin.FixedFoveatedRenderingLevel foveatedRenderingLevel;

	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public OVRPlugin.FixedFoveatedRenderingLevel foveatedRenderingLevelLow;

	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x874F6C", Offset = "0x874F6C")]
	public float pixelDensity;

	[Token(Token = "0x40006AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x874F88", Offset = "0x874F88")]
	public float pixelDensityLow;

	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool showBuildDate;

	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool showFPSCanvasOnScreen;

	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	public bool showFPSCanvasInVR;

	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x874FA4", Offset = "0x874FA4")]
	private double <startOffset>k__BackingField;

	[Token(Token = "0x17000111")]
	public double startOffset
	{
		[Token(Token = "0x60007C2")]
		[Address(RVA = "0xAF8CAC", Offset = "0xAF8CAC", VA = "0xAF8CAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87C6EC", Offset = "0x87C6EC")]
		get
		{
			return default(double);
		}
		[Token(Token = "0x60007C3")]
		[Address(RVA = "0xAF8CB4", Offset = "0xAF8CB4", VA = "0xAF8CB4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87C6FC", Offset = "0x87C6FC")]
		set
		{
		}
	}

	[Token(Token = "0x60007C4")]
	[Address(RVA = "0xAF8CBC", Offset = "0xAF8CBC", VA = "0xAF8CBC")]
	public GameSettings()
	{
	}
}
[Token(Token = "0x2000151")]
public static class Language
{
	[Token(Token = "0x60007C5")]
	[Address(RVA = "0xB484C4", Offset = "0xB484C4", VA = "0xB484C4")]
	public static string GetLanguage(AudioLanguage audioLanguage)
	{
		return null;
	}
}
[Token(Token = "0x2000152")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x86F3B0", Offset = "0x86F3B0")]
public class SettingsHolder : ScriptableObject
{
	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ApplicationSettings applicationSettings;

	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameSettings gameSettings;

	[Token(Token = "0x17000112")]
	public ApplicationSettings ApplicationSettings
	{
		[Token(Token = "0x60007C6")]
		[Address(RVA = "0xB17CB4", Offset = "0xB17CB4", VA = "0xB17CB4")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007C7")]
		[Address(RVA = "0xB17CBC", Offset = "0xB17CBC", VA = "0xB17CBC")]
		set
		{
		}
	}

	[Token(Token = "0x17000113")]
	public GameSettings GameSettings
	{
		[Token(Token = "0x60007C8")]
		[Address(RVA = "0xB17CC4", Offset = "0xB17CC4", VA = "0xB17CC4")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007C9")]
		[Address(RVA = "0xB17CCC", Offset = "0xB17CCC", VA = "0xB17CCC")]
		set
		{
		}
	}

	[Token(Token = "0x60007CA")]
	[Address(RVA = "0xB17CD4", Offset = "0xB17CD4", VA = "0xB17CD4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007CB")]
	[Address(RVA = "0xB17D0C", Offset = "0xB17D0C", VA = "0xB17D0C")]
	public SettingsHolder()
	{
	}
}
[Token(Token = "0x2000153")]
public static class MaterialPropertyBlockDictionary
{
	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Dictionary<int, MaterialPropertyBlock> props;

	[Token(Token = "0x60007CC")]
	[Address(RVA = "0xF681E0", Offset = "0xF681E0", VA = "0xF681E0")]
	public static MaterialPropertyBlock GetProp(int rendererID)
	{
		return null;
	}
}
[Token(Token = "0x2000154")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x86F3FC", Offset = "0x86F3FC")]
public class SRTSubtitleParser : SubtitleParser
{
	[Token(Token = "0x2000155")]
	public class SRTSubtitleBlock
	{
		[Token(Token = "0x40006B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x874FD4", Offset = "0x874FD4")]
		private double <FromTime>k__BackingField;

		[Token(Token = "0x40006B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x874FE4", Offset = "0x874FE4")]
		private double <ToTime>k__BackingField;

		[Token(Token = "0x40006BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x874FF4", Offset = "0x874FF4")]
		private string <Text>k__BackingField;

		[Token(Token = "0x17000114")]
		public double FromTime
		{
			[Token(Token = "0x60007D2")]
			[Address(RVA = "0xB13524", Offset = "0xB13524", VA = "0xB13524")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87C70C", Offset = "0x87C70C")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x60007D3")]
			[Address(RVA = "0xB1352C", Offset = "0xB1352C", VA = "0xB1352C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87C71C", Offset = "0x87C71C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000115")]
		public double ToTime
		{
			[Token(Token = "0x60007D4")]
			[Address(RVA = "0xB13534", Offset = "0xB13534", VA = "0xB13534")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87C72C", Offset = "0x87C72C")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x60007D5")]
			[Address(RVA = "0xB1353C", Offset = "0xB1353C", VA = "0xB1353C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87C73C", Offset = "0x87C73C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000116")]
		public string Text
		{
			[Token(Token = "0x60007D6")]
			[Address(RVA = "0xB13544", Offset = "0xB13544", VA = "0xB13544")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87C74C", Offset = "0x87C74C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60007D7")]
			[Address(RVA = "0xB1354C", Offset = "0xB1354C", VA = "0xB1354C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87C75C", Offset = "0x87C75C")]
			private set
			{
			}
		}

		[Token(Token = "0x60007D8")]
		[Address(RVA = "0xB13358", Offset = "0xB13358", VA = "0xB13358")]
		public SRTSubtitleBlock(double from, double to, string text)
		{
		}
	}

	[Token(Token = "0x2000156")]
	private enum ParseState
	{
		[Token(Token = "0x40006BC")]
		Index,
		[Token(Token = "0x40006BD")]
		Time,
		[Token(Token = "0x40006BE")]
		Text
	}

	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SRTSubtitleBlock[] subtitleBlocks;

	[Token(Token = "0x40006B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int currentIndex;

	[Token(Token = "0x60007CE")]
	[Address(RVA = "0xB12DC0", Offset = "0xB12DC0", VA = "0xB12DC0", Slot = "4")]
	public override void Parse(TextAsset textAsset)
	{
	}

	[Token(Token = "0x60007CF")]
	[Address(RVA = "0xB13398", Offset = "0xB13398", VA = "0xB13398", Slot = "5")]
	public override string GetText(double time)
	{
		return null;
	}

	[Token(Token = "0x60007D0")]
	[Address(RVA = "0xB13470", Offset = "0xB13470", VA = "0xB13470")]
	private int GetIndex(double time)
	{
		return default(int);
	}

	[Token(Token = "0x60007D1")]
	[Address(RVA = "0xB13514", Offset = "0xB13514", VA = "0xB13514")]
	public SRTSubtitleParser()
	{
	}
}
[Serializable]
[Token(Token = "0x2000157")]
public class Subtitle
{
	[Token(Token = "0x40006BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public SubtitleLanguage language;

	[Token(Token = "0x40006C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TextAsset file;

	[Token(Token = "0x40006C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private SubtitleParser parser;

	[Token(Token = "0x60007D9")]
	[Address(RVA = "0xB1C9BC", Offset = "0xB1C9BC", VA = "0xB1C9BC")]
	public void Parse()
	{
	}

	[Token(Token = "0x60007DA")]
	[Address(RVA = "0xB1C9E4", Offset = "0xB1C9E4", VA = "0xB1C9E4")]
	public string GetText(double time)
	{
		return null;
	}

	[Token(Token = "0x60007DB")]
	[Address(RVA = "0xB1CA04", Offset = "0xB1CA04", VA = "0xB1CA04")]
	public Subtitle()
	{
	}
}
[Token(Token = "0x2000158")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x86F450", Offset = "0x86F450")]
public class SubtitleCollection : ScriptableObject
{
	[Token(Token = "0x40006C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Subtitle[] subtitles;

	[Token(Token = "0x60007DC")]
	[Address(RVA = "0xB1CA0C", Offset = "0xB1CA0C", VA = "0xB1CA0C")]
	public Subtitle GetSubtitle(SubtitleLanguage language)
	{
		return null;
	}

	[Token(Token = "0x60007DD")]
	[Address(RVA = "0xB1CBE8", Offset = "0xB1CBE8", VA = "0xB1CBE8")]
	public SubtitleCollection()
	{
	}
}
[Token(Token = "0x2000159")]
public enum SubtitleLanguage
{
	[Token(Token = "0x40006C4")]
	None = -1,
	[Token(Token = "0x40006C5")]
	English,
	[Token(Token = "0x40006C6")]
	Spanish,
	[Token(Token = "0x40006C7")]
	Chinese
}
[Serializable]
[Token(Token = "0x200015A")]
public abstract class SubtitleParser : ScriptableObject
{
	[Token(Token = "0x60007DE")]
	public abstract void Parse(TextAsset file);

	[Token(Token = "0x60007DF")]
	public abstract string GetText(double time);

	[Token(Token = "0x60007E0")]
	[Address(RVA = "0xB1351C", Offset = "0xB1351C", VA = "0xB1351C")]
	protected SubtitleParser()
	{
	}
}
[Token(Token = "0x200015B")]
[ExecuteInEditMode]
public class TimelineSubtitlePrinter : MonoBehaviour
{
	[Token(Token = "0x40006C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SubtitleCollection subtitleCollection;

	[Token(Token = "0x40006C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TextMeshPro textUI;

	[Token(Token = "0x40006CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TextMeshProUGUI textUICanvas;

	[Token(Token = "0x40006CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Subtitle subtitle;

	[Token(Token = "0x60007E1")]
	[Address(RVA = "0x155AF68", Offset = "0x155AF68", VA = "0x155AF68")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007E2")]
	[Address(RVA = "0x155B034", Offset = "0x155B034", VA = "0x155B034")]
	private void Update()
	{
	}

	[Token(Token = "0x60007E3")]
	[Address(RVA = "0x155B200", Offset = "0x155B200", VA = "0x155B200")]
	private void SetSubtitles(SubtitleLanguage language)
	{
	}

	[Token(Token = "0x60007E4")]
	[Address(RVA = "0x155B0F4", Offset = "0x155B0F4", VA = "0x155B0F4")]
	private void ShowSubtitle(double time)
	{
	}

	[Token(Token = "0x60007E5")]
	[Address(RVA = "0x155B2BC", Offset = "0x155B2BC", VA = "0x155B2BC")]
	public TimelineSubtitlePrinter()
	{
	}
}
[Token(Token = "0x200015C")]
public abstract class ParentRendererBehaviour : TimeBasedBehaviour
{
	[Token(Token = "0x40006CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected MaterialPropertyBlock[] props;

	[Token(Token = "0x40006CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected Renderer[] renderers;

	[Token(Token = "0x60007E6")]
	[Address(RVA = "0xB098C8", Offset = "0xB098C8", VA = "0xB098C8", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x60007E7")]
	[Address(RVA = "0xB08874", Offset = "0xB08874", VA = "0xB08874", Slot = "22")]
	protected override void Interpolate(float t)
	{
	}

	[Token(Token = "0x60007E8")]
	protected abstract void ChangeMaterialPropertyBlock(float t);

	[Token(Token = "0x60007E9")]
	[Address(RVA = "0xB082C8", Offset = "0xB082C8", VA = "0xB082C8")]
	protected ParentRendererBehaviour()
	{
	}
}
[Token(Token = "0x200015D")]
public abstract class RendererBehaviour : TimeBasedBehaviour
{
	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected MaterialPropertyBlock props;

	[Token(Token = "0x40006CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected Renderer renderer;

	[Token(Token = "0x60007EA")]
	[Address(RVA = "0xB0E694", Offset = "0xB0E694", VA = "0xB0E694", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x60007EB")]
	[Address(RVA = "0xB0E82C", Offset = "0xB0E82C", VA = "0xB0E82C", Slot = "22")]
	protected override void Interpolate(float t)
	{
	}

	[Token(Token = "0x60007EC")]
	[Address(RVA = "0xB0E8C0", Offset = "0xB0E8C0", VA = "0xB0E8C0")]
	protected RendererBehaviour()
	{
	}
}
[Token(Token = "0x200015E")]
public abstract class TimeBasedBehaviour : PlayableBehaviour
{
	[Token(Token = "0x40006D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x875064", Offset = "0x875064")]
	private float <time>k__BackingField;

	[Token(Token = "0x40006D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x875074", Offset = "0x875074")]
	private float <duration>k__BackingField;

	[Token(Token = "0x17000117")]
	protected float time
	{
		[Token(Token = "0x60007ED")]
		[Address(RVA = "0x155A128", Offset = "0x155A128", VA = "0x155A128")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87C76C", Offset = "0x87C76C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60007EE")]
		[Address(RVA = "0x155A130", Offset = "0x155A130", VA = "0x155A130")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87C77C", Offset = "0x87C77C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000118")]
	protected float duration
	{
		[Token(Token = "0x60007EF")]
		[Address(RVA = "0x155A138", Offset = "0x155A138", VA = "0x155A138")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87C78C", Offset = "0x87C78C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60007F0")]
		[Address(RVA = "0x155A140", Offset = "0x155A140", VA = "0x155A140")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87C79C", Offset = "0x87C79C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000119")]
	protected float timeNormalized
	{
		[Token(Token = "0x60007F1")]
		[Address(RVA = "0x155A148", Offset = "0x155A148", VA = "0x155A148")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x60007F2")]
	[Address(RVA = "0x155A1BC", Offset = "0x155A1BC", VA = "0x155A1BC")]
	private void SetTimes(Playable playable)
	{
	}

	[Token(Token = "0x60007F3")]
	[Address(RVA = "0x155A24C", Offset = "0x155A24C", VA = "0x155A24C", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x60007F4")]
	[Address(RVA = "0x155A2C8", Offset = "0x155A2C8", VA = "0x155A2C8", Slot = "18")]
	public override void OnBehaviourPause(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x60007F5")]
	protected abstract void Interpolate(float t);

	[Token(Token = "0x60007F6")]
	[Address(RVA = "0x155A394", Offset = "0x155A394", VA = "0x155A394")]
	protected TimeBasedBehaviour()
	{
	}
}
[Token(Token = "0x200015F")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x86F4B4", Offset = "0x86F4B4")]
[DisallowMultipleComponent]
public class MasterTimeline : MonoBehaviour
{
	[Token(Token = "0x40006D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MasterTimeline Instance;

	[Token(Token = "0x40006D3")]
	public const string SCENE_FINISH_SIGNAL_NAME = "SceneFinish";

	[Token(Token = "0x40006D4")]
	public const string CHAPTER_FINISH_SIGNAL_NAME = "ChapterFinish";

	[Token(Token = "0x40006D5")]
	public const string LOAD_NEXT_SCENE_SIGNAL_NAME = "LoadNextScene";

	[Token(Token = "0x40006D6")]
	public const string AUDIO_TRACK_NAME = "Audio_Track";

	[Token(Token = "0x40006D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string[] sceneNames;

	[Token(Token = "0x40006D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	[SerializeField]
	private TimelineAsset masterTimeline;

	[Token(Token = "0x40006D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private PlayableDirector _masterDirector;

	[Token(Token = "0x40006DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SignalReceiver _signalReceiver;

	[Token(Token = "0x40006DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8750BC", Offset = "0x8750BC")]
	private TimelineController <Controller>k__BackingField;

	[Token(Token = "0x1700011A")]
	private string[] SceneNames
	{
		[Token(Token = "0x60007F7")]
		[Address(RVA = "0xB54E90", Offset = "0xB54E90", VA = "0xB54E90")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700011B")]
	public PlayableDirector masterDirector
	{
		[Token(Token = "0x60007F8")]
		[Address(RVA = "0xB54F5C", Offset = "0xB54F5C", VA = "0xB54F5C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700011C")]
	public SignalReceiver SignalReceiver
	{
		[Token(Token = "0x60007F9")]
		[Address(RVA = "0xB54FF0", Offset = "0xB54FF0", VA = "0xB54FF0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700011D")]
	public TimelineAsset MasterTimelineAsset
	{
		[Token(Token = "0x60007FA")]
		[Address(RVA = "0xB55084", Offset = "0xB55084", VA = "0xB55084")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700011E")]
	public TimelineController Controller
	{
		[Token(Token = "0x60007FB")]
		[Address(RVA = "0xB5515C", Offset = "0xB5515C", VA = "0xB5515C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87C7AC", Offset = "0x87C7AC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007FC")]
		[Address(RVA = "0xB55164", Offset = "0xB55164", VA = "0xB55164")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87C7BC", Offset = "0x87C7BC")]
		private set
		{
		}
	}

	[Token(Token = "0x60007FD")]
	[Address(RVA = "0xB5516C", Offset = "0xB5516C", VA = "0xB5516C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007FE")]
	[Address(RVA = "0xB55170", Offset = "0xB55170", VA = "0xB55170")]
	public void Init()
	{
	}

	[Token(Token = "0x60007FF")]
	[Address(RVA = "0xB55314", Offset = "0xB55314", VA = "0xB55314")]
	public void FillTimelineReferences()
	{
	}

	[Token(Token = "0x6000800")]
	[Address(RVA = "0xB554C0", Offset = "0xB554C0", VA = "0xB554C0")]
	public void SetMasterTimeline(TimelineAsset timeline, SignalTrack signalTrack)
	{
	}

	[Token(Token = "0x6000801")]
	[Address(RVA = "0xB48E8C", Offset = "0xB48E8C", VA = "0xB48E8C")]
	public void JumpToScene(SceneNames sceneName, double offset = 0.0)
	{
	}

	[Token(Token = "0x6000802")]
	[Address(RVA = "0xB4D2E4", Offset = "0xB4D2E4", VA = "0xB4D2E4")]
	public void MultiplyTime(float multiplier)
	{
	}

	[Token(Token = "0x6000803")]
	[Address(RVA = "0xB48F9C", Offset = "0xB48F9C", VA = "0xB48F9C")]
	public void Play()
	{
	}

	[Token(Token = "0x6000804")]
	[Address(RVA = "0xB4BAD0", Offset = "0xB4BAD0", VA = "0xB4BAD0")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000805")]
	[Address(RVA = "0xB555C4", Offset = "0xB555C4", VA = "0xB555C4")]
	public void Pause()
	{
	}

	[Token(Token = "0x6000806")]
	[Address(RVA = "0xB555D8", Offset = "0xB555D8", VA = "0xB555D8")]
	public void TimelinePause()
	{
	}

	[Token(Token = "0x6000807")]
	[Address(RVA = "0xB555EC", Offset = "0xB555EC", VA = "0xB555EC")]
	public void TimelineResume()
	{
	}

	[Token(Token = "0x6000808")]
	[Address(RVA = "0xB4BABC", Offset = "0xB4BABC", VA = "0xB4BABC")]
	public void Resume()
	{
	}

	[Token(Token = "0x6000809")]
	[Address(RVA = "0xB55600", Offset = "0xB55600", VA = "0xB55600")]
	public void Evaluate()
	{
	}

	[Token(Token = "0x600080A")]
	[Address(RVA = "0xB55614", Offset = "0xB55614", VA = "0xB55614")]
	private TrackAsset GetSceneTrack(string sceneName)
	{
		return null;
	}

	[Token(Token = "0x600080B")]
	[Address(RVA = "0xB553C8", Offset = "0xB553C8", VA = "0xB553C8")]
	private void FillSceneClips()
	{
	}

	[Token(Token = "0x600080C")]
	[Address(RVA = "0xB55C64", Offset = "0xB55C64", VA = "0xB55C64")]
	private void FillSceneTimeline(string sceneName, PlayableDirector playableDirector)
	{
	}

	[Token(Token = "0x600080D")]
	[Address(RVA = "0xB55FF8", Offset = "0xB55FF8", VA = "0xB55FF8")]
	private void ConfigClip(TimelineClip clip, GameObject sourceGameObject)
	{
	}

	[Token(Token = "0x600080E")]
	[Address(RVA = "0xB559A8", Offset = "0xB559A8", VA = "0xB559A8")]
	private Dictionary<string, PlayableDirector> GetScenesDirectors()
	{
		return null;
	}

	[Token(Token = "0x600080F")]
	[Address(RVA = "0xB560F4", Offset = "0xB560F4", VA = "0xB560F4")]
	private bool IsGameObjectSceneValidAndLoaded(GameObject go)
	{
		return default(bool);
	}

	[Token(Token = "0x6000810")]
	[Address(RVA = "0xB56170", Offset = "0xB56170", VA = "0xB56170")]
	public MasterTimeline()
	{
	}
}
[Token(Token = "0x2000160")]
public class TimelineController
{
	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private PlayableDirector playable;

	[Token(Token = "0x1700011F")]
	public double CurrentTime
	{
		[Token(Token = "0x6000811")]
		[Address(RVA = "0x155A39C", Offset = "0x155A39C", VA = "0x155A39C")]
		get
		{
			return default(double);
		}
	}

	[Token(Token = "0x6000812")]
	[Address(RVA = "0x155A430", Offset = "0x155A430", VA = "0x155A430")]
	public TimelineController(PlayableDirector playable)
	{
	}

	[Token(Token = "0x6000813")]
	[Address(RVA = "0x155A45C", Offset = "0x155A45C", VA = "0x155A45C")]
	public void JumpTo(double time)
	{
	}

	[Token(Token = "0x6000814")]
	[Address(RVA = "0x155A534", Offset = "0x155A534", VA = "0x155A534")]
	public void MultiplyTime(float multiplier)
	{
	}

	[Token(Token = "0x6000815")]
	[Address(RVA = "0x155A5F4", Offset = "0x155A5F4", VA = "0x155A5F4")]
	public void Play()
	{
	}

	[Token(Token = "0x6000816")]
	[Address(RVA = "0x155A684", Offset = "0x155A684", VA = "0x155A684")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000817")]
	[Address(RVA = "0x155A714", Offset = "0x155A714", VA = "0x155A714")]
	public void PlayablePause()
	{
	}

	[Token(Token = "0x6000818")]
	[Address(RVA = "0x155A7A4", Offset = "0x155A7A4", VA = "0x155A7A4")]
	public void PlayableResume()
	{
	}

	[Token(Token = "0x6000819")]
	[Address(RVA = "0x155A834", Offset = "0x155A834", VA = "0x155A834")]
	public void Pause()
	{
	}

	[Token(Token = "0x600081A")]
	[Address(RVA = "0x155A908", Offset = "0x155A908", VA = "0x155A908")]
	public void Resume()
	{
	}

	[Token(Token = "0x600081B")]
	[Address(RVA = "0x155A9DC", Offset = "0x155A9DC", VA = "0x155A9DC")]
	public void ManualEvaluate()
	{
	}
}
[Token(Token = "0x2000161")]
public class EditorMasterTimelineGenerator : MasterTimelineGenerator
{
	[Token(Token = "0x600081C")]
	[Address(RVA = "0xAEF72C", Offset = "0xAEF72C", VA = "0xAEF72C", Slot = "5")]
	public override bool GenerateTimeline(TimelineAsset sourceTimeline, SignalReceiver signalReceiver, out TimelineAsset timeline, out SignalTrack signalTrack)
	{
		return default(bool);
	}

	[Token(Token = "0x600081D")]
	[Address(RVA = "0xAEFF70", Offset = "0xAEFF70", VA = "0xAEFF70")]
	public EditorMasterTimelineGenerator()
	{
	}
}
[Token(Token = "0x2000162")]
public interface ITimelineGenerator
{
	[Token(Token = "0x600081E")]
	bool GenerateTimeline(TimelineAsset sourceTimeline, SignalReceiver signalReceiver, out TimelineAsset timeline, out SignalTrack signalTrack);
}
[Token(Token = "0x2000163")]
public abstract class MasterTimelineGenerator : ITimelineGenerator
{
	[Token(Token = "0x600081F")]
	public abstract bool GenerateTimeline(TimelineAsset sourceTimeline, SignalReceiver signalReceiver, out TimelineAsset timeline, out SignalTrack signalTrack);

	[Token(Token = "0x6000820")]
	[Address(RVA = "0xB562AC", Offset = "0xB562AC", VA = "0xB562AC")]
	protected List<double> GetTrackTimes(TimelineAsset masterTimeline)
	{
		return null;
	}

	[Token(Token = "0x6000821")]
	[Address(RVA = "0xB5698C", Offset = "0xB5698C", VA = "0xB5698C")]
	protected void GenerateSceneFinishSignals(SignalReceiver signalReceiver, SignalTrack signalTrack, List<double> signalTimes)
	{
	}

	[Token(Token = "0x6000822")]
	[Address(RVA = "0xB56BA0", Offset = "0xB56BA0", VA = "0xB56BA0")]
	protected void GenerateLoadNextSceneSignals(SignalReceiver signalReceiver, SignalTrack signalTrack, List<double> signalTimes, double sceneLoadTimeOffset)
	{
	}

	[Token(Token = "0x6000823")]
	[Address(RVA = "0xB56A98", Offset = "0xB56A98", VA = "0xB56A98")]
	private SignalAsset GetSignalAssetFromReceiver(SignalReceiver signalReceiver, string signalName)
	{
		return null;
	}

	[Token(Token = "0x6000824")]
	[Address(RVA = "0xB56CC4", Offset = "0xB56CC4", VA = "0xB56CC4")]
	protected MasterTimelineGenerator()
	{
	}
}
[Token(Token = "0x2000164")]
public class RuntimeMasterTimelineGenerator : MasterTimelineGenerator
{
	[Token(Token = "0x40006DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private double sceneLoadTimeOffset;

	[Token(Token = "0x6000825")]
	[Address(RVA = "0xB10268", Offset = "0xB10268", VA = "0xB10268")]
	public RuntimeMasterTimelineGenerator(double sceneLoadTimeOffset)
	{
	}

	[Token(Token = "0x6000826")]
	[Address(RVA = "0xB1029C", Offset = "0xB1029C", VA = "0xB1029C", Slot = "5")]
	public override bool GenerateTimeline(TimelineAsset sourceTimeline, SignalReceiver signalReceiver, out TimelineAsset timeline, out SignalTrack signalTrack)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000165")]
public class CameraRotationAsset : PlayableAsset
{
	[Token(Token = "0x40006DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool useXAxis;

	[Token(Token = "0x40006DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AnimationCurve xAxisSpeedCurve;

	[Token(Token = "0x40006E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool useZAxis;

	[Token(Token = "0x40006E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AnimationCurve zAxisSpeedCurve;

	[Token(Token = "0x6000827")]
	[Address(RVA = "0xB588BC", Offset = "0xB588BC", VA = "0xB588BC", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000828")]
	[Address(RVA = "0xB589AC", Offset = "0xB589AC", VA = "0xB589AC")]
	public CameraRotationAsset()
	{
	}
}
[Token(Token = "0x2000166")]
public class CameraRotationBehaviour : TimeBasedBehaviour
{
	[Token(Token = "0x40006E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CameraRotator rotator;

	[Token(Token = "0x40006E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87510C", Offset = "0x87510C")]
	private bool <UseXAxis>k__BackingField;

	[Token(Token = "0x40006E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87511C", Offset = "0x87511C")]
	private AnimationCurve <XAxisSpeedCurve>k__BackingField;

	[Token(Token = "0x40006E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87512C", Offset = "0x87512C")]
	private bool <UseZAxis>k__BackingField;

	[Token(Token = "0x40006E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87513C", Offset = "0x87513C")]
	private AnimationCurve <ZAxisSpeedCurve>k__BackingField;

	[Token(Token = "0x17000120")]
	public bool UseXAxis
	{
		[Token(Token = "0x6000829")]
		[Address(RVA = "0xB58A14", Offset = "0xB58A14", VA = "0xB58A14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87C7CC", Offset = "0x87C7CC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600082A")]
		[Address(RVA = "0xB58A1C", Offset = "0xB58A1C", VA = "0xB58A1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87C7DC", Offset = "0x87C7DC")]
		set
		{
		}
	}

	[Token(Token = "0x17000121")]
	public AnimationCurve XAxisSpeedCurve
	{
		[Token(Token = "0x600082B")]
		[Address(RVA = "0xB58A28", Offset = "0xB58A28", VA = "0xB58A28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87C7EC", Offset = "0x87C7EC")]
		get
		{
			return null;
		}
		[Token(Token = "0x600082C")]
		[Address(RVA = "0xB58A30", Offset = "0xB58A30", VA = "0xB58A30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87C7FC", Offset = "0x87C7FC")]
		set
		{
		}
	}

	[Token(Token = "0x17000122")]
	public bool UseZAxis
	{
		[Token(Token = "0x600082D")]
		[Address(RVA = "0xB58A38", Offset = "0xB58A38", VA = "0xB58A38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87C80C", Offset = "0x87C80C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600082E")]
		[Address(RVA = "0xB58A40", Offset = "0xB58A40", VA = "0xB58A40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87C81C", Offset = "0x87C81C")]
		set
		{
		}
	}

	[Token(Token = "0x17000123")]
	public AnimationCurve ZAxisSpeedCurve
	{
		[Token(Token = "0x600082F")]
		[Address(RVA = "0xB58A4C", Offset = "0xB58A4C", VA = "0xB58A4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87C82C", Offset = "0x87C82C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000830")]
		[Address(RVA = "0xB58A54", Offset = "0xB58A54", VA = "0xB58A54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87C83C", Offset = "0x87C83C")]
		set
		{
		}
	}

	[Token(Token = "0x6000831")]
	[Address(RVA = "0xB58A5C", Offset = "0xB58A5C", VA = "0xB58A5C", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x6000832")]
	[Address(RVA = "0xB58B98", Offset = "0xB58B98", VA = "0xB58B98", Slot = "22")]
	protected override void Interpolate(float t)
	{
	}

	[Token(Token = "0x6000833")]
	[Address(RVA = "0xB58DD4", Offset = "0xB58DD4", VA = "0xB58DD4")]
	public CameraRotationBehaviour()
	{
	}
}
[Token(Token = "0x2000167")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x86F54C", Offset = "0x86F54C")]
public class CameraRotationTrack : TrackAsset
{
	[Token(Token = "0x6000834")]
	[Address(RVA = "0xB58DDC", Offset = "0xB58DDC", VA = "0xB58DDC")]
	public CameraRotationTrack()
	{
	}
}
[Token(Token = "0x2000168")]
public class ComponentAsset : PlayableAsset
{
	[Token(Token = "0x17000124")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x6000835")]
		[Address(RVA = "0xB5B320", Offset = "0xB5B320", VA = "0xB5B320")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x6000836")]
	[Address(RVA = "0xB5B328", Offset = "0xB5B328", VA = "0xB5B328", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000837")]
	[Address(RVA = "0xB5B3BC", Offset = "0xB5B3BC", VA = "0xB5B3BC")]
	public ComponentAsset()
	{
	}
}
[Token(Token = "0x2000169")]
public class ComponentBehaviour : PlayableBehaviour
{
	[Token(Token = "0x40006E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Behaviour component;

	[Token(Token = "0x6000838")]
	[Address(RVA = "0xB5B3C4", Offset = "0xB5B3C4", VA = "0xB5B3C4", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x6000839")]
	[Address(RVA = "0xB5B520", Offset = "0xB5B520", VA = "0xB5B520", Slot = "18")]
	public override void OnBehaviourPause(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x600083A")]
	[Address(RVA = "0xB5B5F8", Offset = "0xB5B5F8", VA = "0xB5B5F8")]
	public ComponentBehaviour()
	{
	}
}
[Token(Token = "0x200016A")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x86F5B0", Offset = "0x86F5B0")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0x86F5B0", Offset = "0x86F5B0")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x86F5B0", Offset = "0x86F5B0")]
public class ComponentTrack : TrackAsset
{
	[Token(Token = "0x600083B")]
	[Address(RVA = "0xB5B600", Offset = "0xB5B600", VA = "0xB5B600")]
	public ComponentTrack()
	{
	}
}
[Token(Token = "0x200016B")]
public class LightColorAsset : PlayableAsset
{
	[Token(Token = "0x40006E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Gradient gradient;

	[Token(Token = "0x600083C")]
	[Address(RVA = "0xB4DB94", Offset = "0xB4DB94", VA = "0xB4DB94", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x600083D")]
	[Address(RVA = "0xB4DC6C", Offset = "0xB4DC6C", VA = "0xB4DC6C")]
	public LightColorAsset()
	{
	}
}
[Token(Token = "0x200016C")]
public class LightColorBehaviour : TimeBasedBehaviour
{
	[Token(Token = "0x40006E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87515C", Offset = "0x87515C")]
	private Gradient <gradient>k__BackingField;

	[Token(Token = "0x40006EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Light light;

	[Token(Token = "0x17000125")]
	public Gradient gradient
	{
		[Token(Token = "0x600083E")]
		[Address(RVA = "0xB4DC74", Offset = "0xB4DC74", VA = "0xB4DC74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87C84C", Offset = "0x87C84C")]
		protected get
		{
			return null;
		}
		[Token(Token = "0x600083F")]
		[Address(RVA = "0xB4DC7C", Offset = "0xB4DC7C", VA = "0xB4DC7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87C85C", Offset = "0x87C85C")]
		set
		{
		}
	}

	[Token(Token = "0x6000840")]
	[Address(RVA = "0xB4DC84", Offset = "0xB4DC84", VA = "0xB4DC84", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x6000841")]
	[Address(RVA = "0xB4DD74", Offset = "0xB4DD74", VA = "0xB4DD74", Slot = "22")]
	protected override void Interpolate(float t)
	{
	}

	[Token(Token = "0x6000842")]
	[Address(RVA = "0xB4DE2C", Offset = "0xB4DE2C", VA = "0xB4DE2C")]
	public LightColorBehaviour()
	{
	}
}
[Token(Token = "0x200016D")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0x86F660", Offset = "0x86F660")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x86F660", Offset = "0x86F660")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x86F660", Offset = "0x86F660")]
public class LightColorTrack : TrackAsset
{
	[Token(Token = "0x6000843")]
	[Address(RVA = "0xB4DE34", Offset = "0xB4DE34", VA = "0xB4DE34")]
	public LightColorTrack()
	{
	}
}
[Token(Token = "0x200016E")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0x86F714", Offset = "0x86F714")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x86F714", Offset = "0x86F714")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x86F714", Offset = "0x86F714")]
public class LightFlickerTrack : TrackAsset
{
	[Token(Token = "0x6000844")]
	[Address(RVA = "0xB4DE9C", Offset = "0xB4DE9C", VA = "0xB4DE9C")]
	public LightFlickerTrack()
	{
	}
}
[Token(Token = "0x200016F")]
public class LightIntensityAsset : PlayableAsset
{
	[Token(Token = "0x40006EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float startIntensity;

	[Token(Token = "0x40006EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float endIntensity;

	[Token(Token = "0x40006ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AnimationCurve curve;

	[Token(Token = "0x17000126")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x6000845")]
		[Address(RVA = "0xB4DF04", Offset = "0xB4DF04", VA = "0xB4DF04")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x17000127")]
	public float maxIntensity
	{
		[Token(Token = "0x6000846")]
		[Address(RVA = "0xB4DF0C", Offset = "0xB4DF0C", VA = "0xB4DF0C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000847")]
	[Address(RVA = "0xB4DF84", Offset = "0xB4DF84", VA = "0xB4DF84", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000848")]
	[Address(RVA = "0xB4E06C", Offset = "0xB4E06C", VA = "0xB4E06C")]
	public LightIntensityAsset()
	{
	}
}
[Token(Token = "0x2000170")]
public class LightIntensityBehaviour : TimeBasedBehaviour
{
	[Token(Token = "0x40006EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87519C", Offset = "0x87519C")]
	private float <startIntensity>k__BackingField;

	[Token(Token = "0x40006EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8751AC", Offset = "0x8751AC")]
	private float <endIntensity>k__BackingField;

	[Token(Token = "0x40006F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8751BC", Offset = "0x8751BC")]
	private AnimationCurve <intensityCurve>k__BackingField;

	[Token(Token = "0x40006F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Light light;

	[Token(Token = "0x17000128")]
	public float startIntensity
	{
		[Token(Token = "0x6000849")]
		[Address(RVA = "0xB4E0AC", Offset = "0xB4E0AC", VA = "0xB4E0AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87C86C", Offset = "0x87C86C")]
		private get
		{
			return default(float);
		}
		[Token(Token = "0x600084A")]
		[Address(RVA = "0xB4E0B4", Offset = "0xB4E0B4", VA = "0xB4E0B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87C87C", Offset = "0x87C87C")]
		set
		{
		}
	}

	[Token(Token = "0x17000129")]
	public float endIntensity
	{
		[Token(Token = "0x600084B")]
		[Address(RVA = "0xB4E0BC", Offset = "0xB4E0BC", VA = "0xB4E0BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87C88C", Offset = "0x87C88C")]
		private get
		{
			return default(float);
		}
		[Token(Token = "0x600084C")]
		[Address(RVA = "0xB4E0C4", Offset = "0xB4E0C4", VA = "0xB4E0C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87C89C", Offset = "0x87C89C")]
		set
		{
		}
	}

	[Token(Token = "0x1700012A")]
	public AnimationCurve intensityCurve
	{
		[Token(Token = "0x600084D")]
		[Address(RVA = "0xB4E0CC", Offset = "0xB4E0CC", VA = "0xB4E0CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87C8AC", Offset = "0x87C8AC")]
		private get
		{
			return null;
		}
		[Token(Token = "0x600084E")]
		[Address(RVA = "0xB4E0D4", Offset = "0xB4E0D4", VA = "0xB4E0D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87C8BC", Offset = "0x87C8BC")]
		set
		{
		}
	}

	[Token(Token = "0x600084F")]
	[Address(RVA = "0xB4E0DC", Offset = "0xB4E0DC", VA = "0xB4E0DC", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x6000850")]
	[Address(RVA = "0xB4E1CC", Offset = "0xB4E1CC", VA = "0xB4E1CC", Slot = "22")]
	protected override void Interpolate(float t)
	{
	}

	[Token(Token = "0x6000851")]
	[Address(RVA = "0xB4E2CC", Offset = "0xB4E2CC", VA = "0xB4E2CC")]
	public LightIntensityBehaviour()
	{
	}
}
[Token(Token = "0x2000171")]
public class LightIntensityFlickerAsset : PlayableAsset
{
	[Token(Token = "0x40006F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float startIntensity;

	[Token(Token = "0x40006F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float endIntensity;

	[Token(Token = "0x40006F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AnimationCurve curve;

	[Token(Token = "0x40006F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AnimationCurve flickerCurve;

	[Token(Token = "0x1700012B")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x6000852")]
		[Address(RVA = "0xB4E2D4", Offset = "0xB4E2D4", VA = "0xB4E2D4")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x1700012C")]
	public float maxIntensity
	{
		[Token(Token = "0x6000853")]
		[Address(RVA = "0xB4E2DC", Offset = "0xB4E2DC", VA = "0xB4E2DC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000854")]
	[Address(RVA = "0xB4E354", Offset = "0xB4E354", VA = "0xB4E354", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000855")]
	[Address(RVA = "0xB4E444", Offset = "0xB4E444", VA = "0xB4E444")]
	public LightIntensityFlickerAsset()
	{
	}
}
[Token(Token = "0x2000172")]
public class LightIntensityFlickerBehaviour : TimeBasedBehaviour
{
	[Token(Token = "0x40006F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87520C", Offset = "0x87520C")]
	private float <startIntensity>k__BackingField;

	[Token(Token = "0x40006F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87521C", Offset = "0x87521C")]
	private float <endIntensity>k__BackingField;

	[Token(Token = "0x40006F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87522C", Offset = "0x87522C")]
	private AnimationCurve <intensityCurve>k__BackingField;

	[Token(Token = "0x40006F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87523C", Offset = "0x87523C")]
	private AnimationCurve <flickerCurve>k__BackingField;

	[Token(Token = "0x40006FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Light light;

	[Token(Token = "0x40006FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float flicker;

	[Token(Token = "0x1700012D")]
	public float startIntensity
	{
		[Token(Token = "0x6000856")]
		[Address(RVA = "0xB4E4A8", Offset = "0xB4E4A8", VA = "0xB4E4A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87C8CC", Offset = "0x87C8CC")]
		private get
		{
			return default(float);
		}
		[Token(Token = "0x6000857")]
		[Address(RVA = "0xB4E4B0", Offset = "0xB4E4B0", VA = "0xB4E4B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87C8DC", Offset = "0x87C8DC")]
		set
		{
		}
	}

	[Token(Token = "0x1700012E")]
	public float endIntensity
	{
		[Token(Token = "0x6000858")]
		[Address(RVA = "0xB4E4B8", Offset = "0xB4E4B8", VA = "0xB4E4B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87C8EC", Offset = "0x87C8EC")]
		private get
		{
			return default(float);
		}
		[Token(Token = "0x6000859")]
		[Address(RVA = "0xB4E4C0", Offset = "0xB4E4C0", VA = "0xB4E4C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87C8FC", Offset = "0x87C8FC")]
		set
		{
		}
	}

	[Token(Token = "0x1700012F")]
	public AnimationCurve intensityCurve
	{
		[Token(Token = "0x600085A")]
		[Address(RVA = "0xB4E4C8", Offset = "0xB4E4C8", VA = "0xB4E4C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87C90C", Offset = "0x87C90C")]
		private get
		{
			return null;
		}
		[Token(Token = "0x600085B")]
		[Address(RVA = "0xB4E4D0", Offset = "0xB4E4D0", VA = "0xB4E4D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87C91C", Offset = "0x87C91C")]
		set
		{
		}
	}

	[Token(Token = "0x17000130")]
	public AnimationCurve flickerCurve
	{
		[Token(Token = "0x600085C")]
		[Address(RVA = "0xB4E4D8", Offset = "0xB4E4D8", VA = "0xB4E4D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87C92C", Offset = "0x87C92C")]
		private get
		{
			return null;
		}
		[Token(Token = "0x600085D")]
		[Address(RVA = "0xB4E4E0", Offset = "0xB4E4E0", VA = "0xB4E4E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87C93C", Offset = "0x87C93C")]
		set
		{
		}
	}

	[Token(Token = "0x600085E")]
	[Address(RVA = "0xB4E4E8", Offset = "0xB4E4E8", VA = "0xB4E4E8", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x600085F")]
	[Address(RVA = "0xB4E688", Offset = "0xB4E688", VA = "0xB4E688", Slot = "22")]
	protected override void Interpolate(float t)
	{
	}

	[Token(Token = "0x6000860")]
	[Address(RVA = "0xB4E78C", Offset = "0xB4E78C", VA = "0xB4E78C")]
	public LightIntensityFlickerBehaviour()
	{
	}
}
[Token(Token = "0x2000173")]
public class LightRangeAsset : PlayableAsset
{
	[Token(Token = "0x40006FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float startRange;

	[Token(Token = "0x40006FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float endRange;

	[Token(Token = "0x40006FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AnimationCurve rangeCurve;

	[Token(Token = "0x17000131")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x6000861")]
		[Address(RVA = "0xB4EDAC", Offset = "0xB4EDAC", VA = "0xB4EDAC")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x6000862")]
	[Address(RVA = "0xB4EDB4", Offset = "0xB4EDB4", VA = "0xB4EDB4", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000863")]
	[Address(RVA = "0xB4EE9C", Offset = "0xB4EE9C", VA = "0xB4EE9C")]
	public LightRangeAsset()
	{
	}
}
[Token(Token = "0x2000174")]
public class LightRangeBehaviour : TimeBasedBehaviour
{
	[Token(Token = "0x40006FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87527C", Offset = "0x87527C")]
	private float <startRange>k__BackingField;

	[Token(Token = "0x4000700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87528C", Offset = "0x87528C")]
	private float <endRange>k__BackingField;

	[Token(Token = "0x4000701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87529C", Offset = "0x87529C")]
	private AnimationCurve <rangeCurve>k__BackingField;

	[Token(Token = "0x4000702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Light light;

	[Token(Token = "0x17000132")]
	public float startRange
	{
		[Token(Token = "0x6000864")]
		[Address(RVA = "0xB4EEDC", Offset = "0xB4EEDC", VA = "0xB4EEDC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87C94C", Offset = "0x87C94C")]
		private get
		{
			return default(float);
		}
		[Token(Token = "0x6000865")]
		[Address(RVA = "0xB4EEE4", Offset = "0xB4EEE4", VA = "0xB4EEE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87C95C", Offset = "0x87C95C")]
		set
		{
		}
	}

	[Token(Token = "0x17000133")]
	public float endRange
	{
		[Token(Token = "0x6000866")]
		[Address(RVA = "0xB4EEEC", Offset = "0xB4EEEC", VA = "0xB4EEEC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87C96C", Offset = "0x87C96C")]
		private get
		{
			return default(float);
		}
		[Token(Token = "0x6000867")]
		[Address(RVA = "0xB4EEF4", Offset = "0xB4EEF4", VA = "0xB4EEF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87C97C", Offset = "0x87C97C")]
		set
		{
		}
	}

	[Token(Token = "0x17000134")]
	public AnimationCurve rangeCurve
	{
		[Token(Token = "0x6000868")]
		[Address(RVA = "0xB4EEFC", Offset = "0xB4EEFC", VA = "0xB4EEFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87C98C", Offset = "0x87C98C")]
		private get
		{
			return null;
		}
		[Token(Token = "0x6000869")]
		[Address(RVA = "0xB4EF04", Offset = "0xB4EF04", VA = "0xB4EF04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87C99C", Offset = "0x87C99C")]
		set
		{
		}
	}

	[Token(Token = "0x600086A")]
	[Address(RVA = "0xB4EF0C", Offset = "0xB4EF0C", VA = "0xB4EF0C", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x600086B")]
	[Address(RVA = "0xB4EFFC", Offset = "0xB4EFFC", VA = "0xB4EFFC", Slot = "22")]
	protected override void Interpolate(float t)
	{
	}

	[Token(Token = "0x600086C")]
	[Address(RVA = "0xB4F0FC", Offset = "0xB4F0FC", VA = "0xB4F0FC")]
	public LightRangeBehaviour()
	{
	}
}
[Token(Token = "0x2000175")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x86F7C4", Offset = "0x86F7C4")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x86F7C4", Offset = "0x86F7C4")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0x86F7C4", Offset = "0x86F7C4")]
public class LightRangeTrack : TrackAsset
{
	[Token(Token = "0x600086D")]
	[Address(RVA = "0xB4F104", Offset = "0xB4F104", VA = "0xB4F104")]
	public LightRangeTrack()
	{
	}
}
[Token(Token = "0x2000176")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x86F874", Offset = "0x86F874")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x86F874", Offset = "0x86F874")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0x86F874", Offset = "0x86F874")]
public class LightTrack : TrackAsset
{
	[Token(Token = "0x600086E")]
	[Address(RVA = "0xB4F668", Offset = "0xB4F668", VA = "0xB4F668")]
	public LightTrack()
	{
	}
}
[Token(Token = "0x2000177")]
public class ParentMaterialColorAsset : PlayableAsset
{
	[Token(Token = "0x4000703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AnimationCurve animationCurve;

	[Token(Token = "0x4000704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Color startColor;

	[Token(Token = "0x4000705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Color endColor;

	[Token(Token = "0x4000706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private string colorName;

	[Token(Token = "0x17000135")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x600086F")]
		[Address(RVA = "0xB07F84", Offset = "0xB07F84", VA = "0xB07F84")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x6000870")]
	[Address(RVA = "0xB07F8C", Offset = "0xB07F8C", VA = "0xB07F8C", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000871")]
	[Address(RVA = "0xB0807C", Offset = "0xB0807C", VA = "0xB0807C")]
	public ParentMaterialColorAsset()
	{
	}
}
[Token(Token = "0x2000178")]
public class ParentMaterialColorBehaviour : ParentRendererBehaviour
{
	[Token(Token = "0x4000707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8752EC", Offset = "0x8752EC")]
	private AnimationCurve <curve>k__BackingField;

	[Token(Token = "0x4000708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8752FC", Offset = "0x8752FC")]
	private Color <startColor>k__BackingField;

	[Token(Token = "0x4000709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87530C", Offset = "0x87530C")]
	private Color <endColor>k__BackingField;

	[Token(Token = "0x400070A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87531C", Offset = "0x87531C")]
	private string <colorName>k__BackingField;

	[Token(Token = "0x400070B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87532C", Offset = "0x87532C")]
	private int <colorID>k__BackingField;

	[Token(Token = "0x17000136")]
	public AnimationCurve curve
	{
		[Token(Token = "0x6000872")]
		[Address(RVA = "0xB08110", Offset = "0xB08110", VA = "0xB08110")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87C9AC", Offset = "0x87C9AC")]
		protected get
		{
			return null;
		}
		[Token(Token = "0x6000873")]
		[Address(RVA = "0xB08118", Offset = "0xB08118", VA = "0xB08118")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87C9BC", Offset = "0x87C9BC")]
		set
		{
		}
	}

	[Token(Token = "0x17000137")]
	public Color startColor
	{
		[Token(Token = "0x6000874")]
		[Address(RVA = "0xB08120", Offset = "0xB08120", VA = "0xB08120")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87C9CC", Offset = "0x87C9CC")]
		protected get
		{
			return default(Color);
		}
		[Token(Token = "0x6000875")]
		[Address(RVA = "0xB0812C", Offset = "0xB0812C", VA = "0xB0812C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87C9DC", Offset = "0x87C9DC")]
		set
		{
		}
	}

	[Token(Token = "0x17000138")]
	public Color endColor
	{
		[Token(Token = "0x6000876")]
		[Address(RVA = "0xB08138", Offset = "0xB08138", VA = "0xB08138")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87C9EC", Offset = "0x87C9EC")]
		protected get
		{
			return default(Color);
		}
		[Token(Token = "0x6000877")]
		[Address(RVA = "0xB08144", Offset = "0xB08144", VA = "0xB08144")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87C9FC", Offset = "0x87C9FC")]
		set
		{
		}
	}

	[Token(Token = "0x17000139")]
	public string colorName
	{
		[Token(Token = "0x6000878")]
		[Address(RVA = "0xB08150", Offset = "0xB08150", VA = "0xB08150")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87CA0C", Offset = "0x87CA0C")]
		private get
		{
			return null;
		}
		[Token(Token = "0x6000879")]
		[Address(RVA = "0xB08158", Offset = "0xB08158", VA = "0xB08158")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87CA1C", Offset = "0x87CA1C")]
		set
		{
		}
	}

	[Token(Token = "0x1700013A")]
	protected int colorID
	{
		[Token(Token = "0x600087A")]
		[Address(RVA = "0xB08160", Offset = "0xB08160", VA = "0xB08160")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87CA2C", Offset = "0x87CA2C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600087B")]
		[Address(RVA = "0xB08168", Offset = "0xB08168", VA = "0xB08168")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87CA3C", Offset = "0x87CA3C")]
		private set
		{
		}
	}

	[Token(Token = "0x600087C")]
	[Address(RVA = "0xB08170", Offset = "0xB08170", VA = "0xB08170", Slot = "13")]
	public override void OnGraphStart(Playable playable)
	{
	}

	[Token(Token = "0x600087D")]
	[Address(RVA = "0xB081B0", Offset = "0xB081B0", VA = "0xB081B0", Slot = "23")]
	protected override void ChangeMaterialPropertyBlock(float t)
	{
	}

	[Token(Token = "0x600087E")]
	[Address(RVA = "0xB082B8", Offset = "0xB082B8", VA = "0xB082B8")]
	public ParentMaterialColorBehaviour()
	{
	}
}
[Token(Token = "0x2000179")]
public class ParentMaterialColorFlickerAsset : PlayableAsset
{
	[Token(Token = "0x400070C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AnimationCurve animationCurve;

	[Token(Token = "0x400070D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AnimationCurve flickerCurve;

	[Token(Token = "0x400070E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Color startColor;

	[Token(Token = "0x400070F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Color endColor;

	[Token(Token = "0x4000710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private string colorName;

	[Token(Token = "0x1700013B")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x600087F")]
		[Address(RVA = "0xB082D0", Offset = "0xB082D0", VA = "0xB082D0")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x6000880")]
	[Address(RVA = "0xB082D8", Offset = "0xB082D8", VA = "0xB082D8", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000881")]
	[Address(RVA = "0xB083D0", Offset = "0xB083D0", VA = "0xB083D0")]
	public ParentMaterialColorFlickerAsset()
	{
	}
}
[Token(Token = "0x200017A")]
public class ParentMaterialColorFlickerBehaviour : ParentMaterialColorBehaviour
{
	[Token(Token = "0x4000711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87538C", Offset = "0x87538C")]
	private AnimationCurve <flickerCurve>k__BackingField;

	[Token(Token = "0x4000712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float flicker;

	[Token(Token = "0x1700013C")]
	public AnimationCurve flickerCurve
	{
		[Token(Token = "0x6000882")]
		[Address(RVA = "0xB08488", Offset = "0xB08488", VA = "0xB08488")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87CA4C", Offset = "0x87CA4C")]
		protected get
		{
			return null;
		}
		[Token(Token = "0x6000883")]
		[Address(RVA = "0xB08490", Offset = "0xB08490", VA = "0xB08490")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87CA5C", Offset = "0x87CA5C")]
		set
		{
		}
	}

	[Token(Token = "0x6000884")]
	[Address(RVA = "0xB08498", Offset = "0xB08498", VA = "0xB08498", Slot = "23")]
	protected override void ChangeMaterialPropertyBlock(float t)
	{
	}

	[Token(Token = "0x6000885")]
	[Address(RVA = "0xB08620", Offset = "0xB08620", VA = "0xB08620")]
	public ParentMaterialColorFlickerBehaviour()
	{
	}
}
[Token(Token = "0x200017B")]
public class ParentMaterialFloatAsset : PlayableAsset
{
	[Token(Token = "0x4000713")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float startValue;

	[Token(Token = "0x4000714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float endValue;

	[Token(Token = "0x4000715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AnimationCurve animationCurve;

	[Token(Token = "0x4000716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private string valueName;

	[Token(Token = "0x1700013D")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x6000886")]
		[Address(RVA = "0xB08630", Offset = "0xB08630", VA = "0xB08630")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x6000887")]
	[Address(RVA = "0xB08638", Offset = "0xB08638", VA = "0xB08638", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000888")]
	[Address(RVA = "0xB08728", Offset = "0xB08728", VA = "0xB08728")]
	public ParentMaterialFloatAsset()
	{
	}
}
[Token(Token = "0x200017C")]
public class ParentMaterialFloatBehaviour : ParentRendererBehaviour
{
	[Token(Token = "0x4000717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8753DC", Offset = "0x8753DC")]
	private AnimationCurve <curve>k__BackingField;

	[Token(Token = "0x4000718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8753EC", Offset = "0x8753EC")]
	private float <startValue>k__BackingField;

	[Token(Token = "0x4000719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8753FC", Offset = "0x8753FC")]
	private float <endValue>k__BackingField;

	[Token(Token = "0x400071A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87540C", Offset = "0x87540C")]
	private string <valueName>k__BackingField;

	[Token(Token = "0x400071B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87541C", Offset = "0x87541C")]
	private int <valueID>k__BackingField;

	[Token(Token = "0x1700013E")]
	public AnimationCurve curve
	{
		[Token(Token = "0x6000889")]
		[Address(RVA = "0xB087A4", Offset = "0xB087A4", VA = "0xB087A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87CA6C", Offset = "0x87CA6C")]
		protected get
		{
			return null;
		}
		[Token(Token = "0x600088A")]
		[Address(RVA = "0xB087AC", Offset = "0xB087AC", VA = "0xB087AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87CA7C", Offset = "0x87CA7C")]
		set
		{
		}
	}

	[Token(Token = "0x1700013F")]
	public float startValue
	{
		[Token(Token = "0x600088B")]
		[Address(RVA = "0xB087B4", Offset = "0xB087B4", VA = "0xB087B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87CA8C", Offset = "0x87CA8C")]
		protected get
		{
			return default(float);
		}
		[Token(Token = "0x600088C")]
		[Address(RVA = "0xB087BC", Offset = "0xB087BC", VA = "0xB087BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87CA9C", Offset = "0x87CA9C")]
		set
		{
		}
	}

	[Token(Token = "0x17000140")]
	public float endValue
	{
		[Token(Token = "0x600088D")]
		[Address(RVA = "0xB087C4", Offset = "0xB087C4", VA = "0xB087C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87CAAC", Offset = "0x87CAAC")]
		protected get
		{
			return default(float);
		}
		[Token(Token = "0x600088E")]
		[Address(RVA = "0xB087CC", Offset = "0xB087CC", VA = "0xB087CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87CABC", Offset = "0x87CABC")]
		set
		{
		}
	}

	[Token(Token = "0x17000141")]
	public string valueName
	{
		[Token(Token = "0x600088F")]
		[Address(RVA = "0xB087D4", Offset = "0xB087D4", VA = "0xB087D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87CACC", Offset = "0x87CACC")]
		private get
		{
			return null;
		}
		[Token(Token = "0x6000890")]
		[Address(RVA = "0xB087DC", Offset = "0xB087DC", VA = "0xB087DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87CADC", Offset = "0x87CADC")]
		set
		{
		}
	}

	[Token(Token = "0x17000142")]
	protected int valueID
	{
		[Token(Token = "0x6000891")]
		[Address(RVA = "0xB087E4", Offset = "0xB087E4", VA = "0xB087E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87CAEC", Offset = "0x87CAEC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000892")]
		[Address(RVA = "0xB087EC", Offset = "0xB087EC", VA = "0xB087EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87CAFC", Offset = "0x87CAFC")]
		private set
		{
		}
	}

	[Token(Token = "0x6000893")]
	[Address(RVA = "0xB087F4", Offset = "0xB087F4", VA = "0xB087F4", Slot = "13")]
	public override void OnGraphStart(Playable playable)
	{
	}

	[Token(Token = "0x6000894")]
	[Address(RVA = "0xB08834", Offset = "0xB08834", VA = "0xB08834", Slot = "22")]
	protected override void Interpolate(float t)
	{
	}

	[Token(Token = "0x6000895")]
	[Address(RVA = "0xB089A0", Offset = "0xB089A0", VA = "0xB089A0", Slot = "23")]
	protected override void ChangeMaterialPropertyBlock(float t)
	{
	}

	[Token(Token = "0x6000896")]
	[Address(RVA = "0xB08ABC", Offset = "0xB08ABC", VA = "0xB08ABC")]
	public ParentMaterialFloatBehaviour()
	{
	}
}
[Token(Token = "0x200017D")]
public class ParentMaterialFloatFlickerAsset : PlayableAsset
{
	[Token(Token = "0x400071C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float startValue;

	[Token(Token = "0x400071D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float endValue;

	[Token(Token = "0x400071E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AnimationCurve animationCurve;

	[Token(Token = "0x400071F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AnimationCurve flickerCurve;

	[Token(Token = "0x4000720")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private string valueName;

	[Token(Token = "0x17000143")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x6000897")]
		[Address(RVA = "0xB08ACC", Offset = "0xB08ACC", VA = "0xB08ACC")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x6000898")]
	[Address(RVA = "0xB08AD4", Offset = "0xB08AD4", VA = "0xB08AD4", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000899")]
	[Address(RVA = "0xB08BCC", Offset = "0xB08BCC", VA = "0xB08BCC")]
	public ParentMaterialFloatFlickerAsset()
	{
	}
}
[Token(Token = "0x200017E")]
public class ParentMaterialFloatFlickerBehaviour : ParentMaterialFloatBehaviour
{
	[Token(Token = "0x4000721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87547C", Offset = "0x87547C")]
	private AnimationCurve <flickerCurve>k__BackingField;

	[Token(Token = "0x4000722")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float flicker;

	[Token(Token = "0x17000144")]
	public AnimationCurve flickerCurve
	{
		[Token(Token = "0x600089A")]
		[Address(RVA = "0xB08C6C", Offset = "0xB08C6C", VA = "0xB08C6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87CB0C", Offset = "0x87CB0C")]
		protected get
		{
			return null;
		}
		[Token(Token = "0x600089B")]
		[Address(RVA = "0xB08C74", Offset = "0xB08C74", VA = "0xB08C74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87CB1C", Offset = "0x87CB1C")]
		set
		{
		}
	}

	[Token(Token = "0x600089C")]
	[Address(RVA = "0xB08C7C", Offset = "0xB08C7C", VA = "0xB08C7C", Slot = "23")]
	protected override void ChangeMaterialPropertyBlock(float t)
	{
	}

	[Token(Token = "0x600089D")]
	[Address(RVA = "0xB08E18", Offset = "0xB08E18", VA = "0xB08E18")]
	public ParentMaterialFloatFlickerBehaviour()
	{
	}
}
[Token(Token = "0x200017F")]
public class ParentMaterialGroupAsset : PlayableAsset
{
	[Token(Token = "0x4000723")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AnimationCurve globalIntensityCurve;

	[Token(Token = "0x4000724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AnimationCurve globalColorCurve;

	[Token(Token = "0x4000725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private List<MaterialGroupValues> rendererMaterials;

	[Token(Token = "0x600089E")]
	[Address(RVA = "0xB08E28", Offset = "0xB08E28", VA = "0xB08E28", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x600089F")]
	[Address(RVA = "0xB08F34", Offset = "0xB08F34", VA = "0xB08F34")]
	public ParentMaterialGroupAsset()
	{
	}
}
[Serializable]
[Token(Token = "0x2000180")]
public class MaterialGroupValues
{
	[Token(Token = "0x4000726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private GameObject objectToModify;

	[Token(Token = "0x4000727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8754CC", Offset = "0x8754CC")]
	private bool modifyIntensity;

	[Token(Token = "0x4000728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float startIntensity;

	[Token(Token = "0x4000729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float endIntensity;

	[Token(Token = "0x400072A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private bool useLocalIntensityCurve;

	[Token(Token = "0x400072B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AnimationCurve intensityCurve;

	[Token(Token = "0x400072C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private string intensityName;

	[Token(Token = "0x400072D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x875568", Offset = "0x875568")]
	private bool modifyColor;

	[Token(Token = "0x400072E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private Color startColor;

	[Token(Token = "0x400072F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private Color endColor;

	[Token(Token = "0x4000730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[SerializeField]
	private bool useLocalColorCurve;

	[Token(Token = "0x4000731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private AnimationCurve colorCurve;

	[Token(Token = "0x4000732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private string colorName;

	[Token(Token = "0x4000733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Renderer renderer;

	[Token(Token = "0x4000734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x875604", Offset = "0x875604")]
	private MaterialPropertyBlock <PropertyBlock>k__BackingField;

	[Token(Token = "0x4000735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x875614", Offset = "0x875614")]
	private int <ColorIntensityId>k__BackingField;

	[Token(Token = "0x4000736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x875624", Offset = "0x875624")]
	private int <ColorNameId>k__BackingField;

	[Token(Token = "0x17000145")]
	public bool ModifyIntensity
	{
		[Token(Token = "0x60008A0")]
		[Address(RVA = "0xF6804C", Offset = "0xF6804C", VA = "0xF6804C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000146")]
	public float StartIntensity
	{
		[Token(Token = "0x60008A1")]
		[Address(RVA = "0xF68054", Offset = "0xF68054", VA = "0xF68054")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000147")]
	public float EndIntensity
	{
		[Token(Token = "0x60008A2")]
		[Address(RVA = "0xF6805C", Offset = "0xF6805C", VA = "0xF6805C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000148")]
	public bool UseLocalIntensityCurve
	{
		[Token(Token = "0x60008A3")]
		[Address(RVA = "0xF68064", Offset = "0xF68064", VA = "0xF68064")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000149")]
	public AnimationCurve IntensityCurve
	{
		[Token(Token = "0x60008A4")]
		[Address(RVA = "0xF6806C", Offset = "0xF6806C", VA = "0xF6806C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700014A")]
	public bool ModifyColor
	{
		[Token(Token = "0x60008A5")]
		[Address(RVA = "0xF68074", Offset = "0xF68074", VA = "0xF68074")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700014B")]
	public Color StartColor
	{
		[Token(Token = "0x60008A6")]
		[Address(RVA = "0xF6807C", Offset = "0xF6807C", VA = "0xF6807C")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x1700014C")]
	public Color EndColor
	{
		[Token(Token = "0x60008A7")]
		[Address(RVA = "0xF68088", Offset = "0xF68088", VA = "0xF68088")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x1700014D")]
	public bool UseLocalColorCurve
	{
		[Token(Token = "0x60008A8")]
		[Address(RVA = "0xF68094", Offset = "0xF68094", VA = "0xF68094")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700014E")]
	public AnimationCurve ColorCurve
	{
		[Token(Token = "0x60008A9")]
		[Address(RVA = "0xF6809C", Offset = "0xF6809C", VA = "0xF6809C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700014F")]
	public MaterialPropertyBlock PropertyBlock
	{
		[Token(Token = "0x60008AA")]
		[Address(RVA = "0xF680A4", Offset = "0xF680A4", VA = "0xF680A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87CB2C", Offset = "0x87CB2C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60008AB")]
		[Address(RVA = "0xF680AC", Offset = "0xF680AC", VA = "0xF680AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87CB3C", Offset = "0x87CB3C")]
		set
		{
		}
	}

	[Token(Token = "0x17000150")]
	public int ColorIntensityId
	{
		[Token(Token = "0x60008AC")]
		[Address(RVA = "0xF680B4", Offset = "0xF680B4", VA = "0xF680B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87CB4C", Offset = "0x87CB4C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60008AD")]
		[Address(RVA = "0xF680BC", Offset = "0xF680BC", VA = "0xF680BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87CB5C", Offset = "0x87CB5C")]
		set
		{
		}
	}

	[Token(Token = "0x17000151")]
	public int ColorNameId
	{
		[Token(Token = "0x60008AE")]
		[Address(RVA = "0xF680C4", Offset = "0xF680C4", VA = "0xF680C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87CB6C", Offset = "0x87CB6C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60008AF")]
		[Address(RVA = "0xF680CC", Offset = "0xF680CC", VA = "0xF680CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87CB7C", Offset = "0x87CB7C")]
		set
		{
		}
	}

	[Token(Token = "0x17000152")]
	public Renderer Renderer
	{
		[Token(Token = "0x60008B0")]
		[Address(RVA = "0xF680D4", Offset = "0xF680D4", VA = "0xF680D4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60008B1")]
	[Address(RVA = "0xF680DC", Offset = "0xF680DC", VA = "0xF680DC")]
	public void SetUp(Renderer renderer)
	{
	}

	[Token(Token = "0x60008B2")]
	[Address(RVA = "0xF6830C", Offset = "0xF6830C", VA = "0xF6830C")]
	public MaterialGroupValues()
	{
	}
}
[Token(Token = "0x2000181")]
public class ParentMaterialGroupBehaviour : TimeBasedBehaviour
{
	[Token(Token = "0x4000737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x875634", Offset = "0x875634")]
	private List<MaterialGroupValues> <RendererMaterials>k__BackingField;

	[Token(Token = "0x4000738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x875644", Offset = "0x875644")]
	private AnimationCurve <globalIntensityCurve>k__BackingField;

	[Token(Token = "0x4000739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x875654", Offset = "0x875654")]
	private AnimationCurve <globalColorCurve>k__BackingField;

	[Token(Token = "0x400073A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private MaterialGroupValues currentRendererValue;

	[Token(Token = "0x17000153")]
	public List<MaterialGroupValues> RendererMaterials
	{
		[Token(Token = "0x60008B3")]
		[Address(RVA = "0xB08F9C", Offset = "0xB08F9C", VA = "0xB08F9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87CB8C", Offset = "0x87CB8C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60008B4")]
		[Address(RVA = "0xB08FA4", Offset = "0xB08FA4", VA = "0xB08FA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87CB9C", Offset = "0x87CB9C")]
		set
		{
		}
	}

	[Token(Token = "0x17000154")]
	public AnimationCurve globalIntensityCurve
	{
		[Token(Token = "0x60008B5")]
		[Address(RVA = "0xB08FAC", Offset = "0xB08FAC", VA = "0xB08FAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87CBAC", Offset = "0x87CBAC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60008B6")]
		[Address(RVA = "0xB08FB4", Offset = "0xB08FB4", VA = "0xB08FB4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87CBBC", Offset = "0x87CBBC")]
		set
		{
		}
	}

	[Token(Token = "0x17000155")]
	public AnimationCurve globalColorCurve
	{
		[Token(Token = "0x60008B7")]
		[Address(RVA = "0xB08FBC", Offset = "0xB08FBC", VA = "0xB08FBC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87CBCC", Offset = "0x87CBCC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60008B8")]
		[Address(RVA = "0xB08FC4", Offset = "0xB08FC4", VA = "0xB08FC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87CBDC", Offset = "0x87CBDC")]
		set
		{
		}
	}

	[Token(Token = "0x60008B9")]
	[Address(RVA = "0xB08FCC", Offset = "0xB08FCC", VA = "0xB08FCC", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x60008BA")]
	[Address(RVA = "0xB0916C", Offset = "0xB0916C", VA = "0xB0916C", Slot = "22")]
	protected override void Interpolate(float t)
	{
	}

	[Token(Token = "0x60008BB")]
	[Address(RVA = "0xB093A4", Offset = "0xB093A4", VA = "0xB093A4")]
	public ParentMaterialGroupBehaviour()
	{
	}
}
[Token(Token = "0x2000182")]
public class ParentMaterialTextureOffsetAsset : PlayableAsset
{
	[Token(Token = "0x400073B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Vector2 startValue;

	[Token(Token = "0x400073C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Vector2 endValue;

	[Token(Token = "0x400073D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AnimationCurve animationCurve;

	[Token(Token = "0x400073E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private string textureName;

	[Token(Token = "0x17000156")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x60008BC")]
		[Address(RVA = "0xB093AC", Offset = "0xB093AC", VA = "0xB093AC")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x60008BD")]
	[Address(RVA = "0xB093B4", Offset = "0xB093B4", VA = "0xB093B4", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x60008BE")]
	[Address(RVA = "0xB094A4", Offset = "0xB094A4", VA = "0xB094A4")]
	public ParentMaterialTextureOffsetAsset()
	{
	}
}
[Token(Token = "0x2000183")]
public class ParentMaterialTextureOffsetBehaviour : ParentRendererBehaviour
{
	[Token(Token = "0x400073F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8756A4", Offset = "0x8756A4")]
	private AnimationCurve <curve>k__BackingField;

	[Token(Token = "0x4000740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8756B4", Offset = "0x8756B4")]
	private Vector2 <startValue>k__BackingField;

	[Token(Token = "0x4000741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8756C4", Offset = "0x8756C4")]
	private Vector2 <endValue>k__BackingField;

	[Token(Token = "0x4000742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8756D4", Offset = "0x8756D4")]
	private string <textureName>k__BackingField;

	[Token(Token = "0x4000743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8756E4", Offset = "0x8756E4")]
	private int <valueID>k__BackingField;

	[Token(Token = "0x4000744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected Vector2[] originalTilings;

	[Token(Token = "0x4000745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected Vector4 resultingST;

	[Token(Token = "0x17000157")]
	public AnimationCurve curve
	{
		[Token(Token = "0x60008BF")]
		[Address(RVA = "0xB09550", Offset = "0xB09550", VA = "0xB09550")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87CBEC", Offset = "0x87CBEC")]
		protected get
		{
			return null;
		}
		[Token(Token = "0x60008C0")]
		[Address(RVA = "0xB09558", Offset = "0xB09558", VA = "0xB09558")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87CBFC", Offset = "0x87CBFC")]
		set
		{
		}
	}

	[Token(Token = "0x17000158")]
	public Vector2 startValue
	{
		[Token(Token = "0x60008C1")]
		[Address(RVA = "0xB09560", Offset = "0xB09560", VA = "0xB09560")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87CC0C", Offset = "0x87CC0C")]
		protected get
		{
			return default(Vector2);
		}
		[Token(Token = "0x60008C2")]
		[Address(RVA = "0xB09568", Offset = "0xB09568", VA = "0xB09568")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87CC1C", Offset = "0x87CC1C")]
		set
		{
		}
	}

	[Token(Token = "0x17000159")]
	public Vector2 endValue
	{
		[Token(Token = "0x60008C3")]
		[Address(RVA = "0xB09570", Offset = "0xB09570", VA = "0xB09570")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87CC2C", Offset = "0x87CC2C")]
		protected get
		{
			return default(Vector2);
		}
		[Token(Token = "0x60008C4")]
		[Address(RVA = "0xB09578", Offset = "0xB09578", VA = "0xB09578")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87CC3C", Offset = "0x87CC3C")]
		set
		{
		}
	}

	[Token(Token = "0x1700015A")]
	public string textureName
	{
		[Token(Token = "0x60008C5")]
		[Address(RVA = "0xB09580", Offset = "0xB09580", VA = "0xB09580")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87CC4C", Offset = "0x87CC4C")]
		protected get
		{
			return null;
		}
		[Token(Token = "0x60008C6")]
		[Address(RVA = "0xB09588", Offset = "0xB09588", VA = "0xB09588")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87CC5C", Offset = "0x87CC5C")]
		set
		{
		}
	}

	[Token(Token = "0x1700015B")]
	protected int valueID
	{
		[Token(Token = "0x60008C7")]
		[Address(RVA = "0xB09590", Offset = "0xB09590", VA = "0xB09590")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87CC6C", Offset = "0x87CC6C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60008C8")]
		[Address(RVA = "0xB09598", Offset = "0xB09598", VA = "0xB09598")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87CC7C", Offset = "0x87CC7C")]
		private set
		{
		}
	}

	[Token(Token = "0x60008C9")]
	[Address(RVA = "0xB095A0", Offset = "0xB095A0", VA = "0xB095A0", Slot = "13")]
	public override void OnGraphStart(Playable playable)
	{
	}

	[Token(Token = "0x60008CA")]
	[Address(RVA = "0xB09634", Offset = "0xB09634", VA = "0xB09634", Slot = "22")]
	protected override void Interpolate(float t)
	{
	}

	[Token(Token = "0x60008CB")]
	[Address(RVA = "0xB09748", Offset = "0xB09748", VA = "0xB09748", Slot = "23")]
	protected override void ChangeMaterialPropertyBlock(float t)
	{
	}

	[Token(Token = "0x60008CC")]
	[Address(RVA = "0xB098B8", Offset = "0xB098B8", VA = "0xB098B8")]
	public ParentMaterialTextureOffsetBehaviour()
	{
	}
}
[Token(Token = "0x2000184")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x86F924", Offset = "0x86F924")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x86F924", Offset = "0x86F924")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x86F924", Offset = "0x86F924")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x86F924", Offset = "0x86F924")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x86F924", Offset = "0x86F924")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x86F924", Offset = "0x86F924")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x86F924", Offset = "0x86F924")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0x86F924", Offset = "0x86F924")]
public class ParentTrack : TrackAsset
{
	[Token(Token = "0x60008CD")]
	[Address(RVA = "0xB09AD8", Offset = "0xB09AD8", VA = "0xB09AD8")]
	public ParentTrack()
	{
	}
}
[Token(Token = "0x2000185")]
public class ParticleSystemBurstAsset : PlayableAsset
{
	[Token(Token = "0x4000746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private int initialEmissionValue;

	[Token(Token = "0x4000747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private int endEmissionValue;

	[Token(Token = "0x4000748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AnimationCurve animationCurve;

	[Token(Token = "0x4000749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool emitOneTime;

	[Token(Token = "0x60008CE")]
	[Address(RVA = "0xB09B40", Offset = "0xB09B40", VA = "0xB09B40", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x60008CF")]
	[Address(RVA = "0xB09C30", Offset = "0xB09C30", VA = "0xB09C30")]
	public ParticleSystemBurstAsset()
	{
	}
}
[Token(Token = "0x2000186")]
public class ParticleSystemBurstBehaviour : TimeBasedBehaviour
{
	[Token(Token = "0x400074A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x875734", Offset = "0x875734")]
	private int <initialEmissionValue>k__BackingField;

	[Token(Token = "0x400074B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x875744", Offset = "0x875744")]
	private int <endEmissionValue>k__BackingField;

	[Token(Token = "0x400074C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x875754", Offset = "0x875754")]
	private AnimationCurve <animationCurve>k__BackingField;

	[Token(Token = "0x400074D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x875764", Offset = "0x875764")]
	private bool <emitOneTime>k__BackingField;

	[Token(Token = "0x400074E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ParticleSystem particle;

	[Token(Token = "0x400074F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool hasEmited;

	[Token(Token = "0x4000750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float lastT;

	[Token(Token = "0x1700015C")]
	public int initialEmissionValue
	{
		[Token(Token = "0x60008D0")]
		[Address(RVA = "0xB09C70", Offset = "0xB09C70", VA = "0xB09C70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87CC8C", Offset = "0x87CC8C")]
		private get
		{
			return default(int);
		}
		[Token(Token = "0x60008D1")]
		[Address(RVA = "0xB09C78", Offset = "0xB09C78", VA = "0xB09C78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87CC9C", Offset = "0x87CC9C")]
		set
		{
		}
	}

	[Token(Token = "0x1700015D")]
	public int endEmissionValue
	{
		[Token(Token = "0x60008D2")]
		[Address(RVA = "0xB09C80", Offset = "0xB09C80", VA = "0xB09C80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87CCAC", Offset = "0x87CCAC")]
		private get
		{
			return default(int);
		}
		[Token(Token = "0x60008D3")]
		[Address(RVA = "0xB09C88", Offset = "0xB09C88", VA = "0xB09C88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87CCBC", Offset = "0x87CCBC")]
		set
		{
		}
	}

	[Token(Token = "0x1700015E")]
	public AnimationCurve animationCurve
	{
		[Token(Token = "0x60008D4")]
		[Address(RVA = "0xB09C90", Offset = "0xB09C90", VA = "0xB09C90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87CCCC", Offset = "0x87CCCC")]
		private get
		{
			return null;
		}
		[Token(Token = "0x60008D5")]
		[Address(RVA = "0xB09C98", Offset = "0xB09C98", VA = "0xB09C98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87CCDC", Offset = "0x87CCDC")]
		set
		{
		}
	}

	[Token(Token = "0x1700015F")]
	public bool emitOneTime
	{
		[Token(Token = "0x60008D6")]
		[Address(RVA = "0xB09CA0", Offset = "0xB09CA0", VA = "0xB09CA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87CCEC", Offset = "0x87CCEC")]
		private get
		{
			return default(bool);
		}
		[Token(Token = "0x60008D7")]
		[Address(RVA = "0xB09CA8", Offset = "0xB09CA8", VA = "0xB09CA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87CCFC", Offset = "0x87CCFC")]
		set
		{
		}
	}

	[Token(Token = "0x60008D8")]
	[Address(RVA = "0xB09CB4", Offset = "0xB09CB4", VA = "0xB09CB4", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x60008D9")]
	[Address(RVA = "0xB09DA4", Offset = "0xB09DA4", VA = "0xB09DA4", Slot = "22")]
	protected override void Interpolate(float t)
	{
	}

	[Token(Token = "0x60008DA")]
	[Address(RVA = "0xB09ED4", Offset = "0xB09ED4", VA = "0xB09ED4")]
	public ParticleSystemBurstBehaviour()
	{
	}
}
[Token(Token = "0x2000187")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0x86FAA0", Offset = "0x86FAA0")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x86FAA0", Offset = "0x86FAA0")]
public class ParticleSystemTrack : TrackAsset
{
	[Token(Token = "0x60008DB")]
	[Address(RVA = "0xB0A010", Offset = "0xB0A010", VA = "0xB0A010")]
	public ParticleSystemTrack()
	{
	}
}
[Token(Token = "0x2000188")]
public class ReflectionProbeAsset : PlayableAsset
{
	[Token(Token = "0x4000751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float startIntensity;

	[Token(Token = "0x4000752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float endIntensity;

	[Token(Token = "0x4000753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AnimationCurve curve;

	[Token(Token = "0x17000160")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x60008DC")]
		[Address(RVA = "0xB0E25C", Offset = "0xB0E25C", VA = "0xB0E25C")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x17000161")]
	public float maxIntensity
	{
		[Token(Token = "0x60008DD")]
		[Address(RVA = "0xB0E264", Offset = "0xB0E264", VA = "0xB0E264")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x60008DE")]
	[Address(RVA = "0xB0E2DC", Offset = "0xB0E2DC", VA = "0xB0E2DC", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x60008DF")]
	[Address(RVA = "0xB0E3C4", Offset = "0xB0E3C4", VA = "0xB0E3C4")]
	public ReflectionProbeAsset()
	{
	}
}
[Token(Token = "0x2000189")]
public class ReflectionProbeBehaviour : TimeBasedBehaviour
{
	[Token(Token = "0x4000754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8757A4", Offset = "0x8757A4")]
	private float <startIntensity>k__BackingField;

	[Token(Token = "0x4000755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8757B4", Offset = "0x8757B4")]
	private float <endIntensity>k__BackingField;

	[Token(Token = "0x4000756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8757C4", Offset = "0x8757C4")]
	private AnimationCurve <intensityCurve>k__BackingField;

	[Token(Token = "0x4000757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ReflectionProbe probe;

	[Token(Token = "0x17000162")]
	public float startIntensity
	{
		[Token(Token = "0x60008E0")]
		[Address(RVA = "0xB0E404", Offset = "0xB0E404", VA = "0xB0E404")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87CD0C", Offset = "0x87CD0C")]
		private get
		{
			return default(float);
		}
		[Token(Token = "0x60008E1")]
		[Address(RVA = "0xB0E40C", Offset = "0xB0E40C", VA = "0xB0E40C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87CD1C", Offset = "0x87CD1C")]
		set
		{
		}
	}

	[Token(Token = "0x17000163")]
	public float endIntensity
	{
		[Token(Token = "0x60008E2")]
		[Address(RVA = "0xB0E414", Offset = "0xB0E414", VA = "0xB0E414")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87CD2C", Offset = "0x87CD2C")]
		private get
		{
			return default(float);
		}
		[Token(Token = "0x60008E3")]
		[Address(RVA = "0xB0E41C", Offset = "0xB0E41C", VA = "0xB0E41C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87CD3C", Offset = "0x87CD3C")]
		set
		{
		}
	}

	[Token(Token = "0x17000164")]
	public AnimationCurve intensityCurve
	{
		[Token(Token = "0x60008E4")]
		[Address(RVA = "0xB0E424", Offset = "0xB0E424", VA = "0xB0E424")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87CD4C", Offset = "0x87CD4C")]
		private get
		{
			return null;
		}
		[Token(Token = "0x60008E5")]
		[Address(RVA = "0xB0E42C", Offset = "0xB0E42C", VA = "0xB0E42C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87CD5C", Offset = "0x87CD5C")]
		set
		{
		}
	}

	[Token(Token = "0x60008E6")]
	[Address(RVA = "0xB0E434", Offset = "0xB0E434", VA = "0xB0E434", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x60008E7")]
	[Address(RVA = "0xB0E524", Offset = "0xB0E524", VA = "0xB0E524", Slot = "22")]
	protected override void Interpolate(float t)
	{
	}

	[Token(Token = "0x60008E8")]
	[Address(RVA = "0xB0E624", Offset = "0xB0E624", VA = "0xB0E624")]
	public ReflectionProbeBehaviour()
	{
	}
}
[Token(Token = "0x200018A")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x86FB2C", Offset = "0x86FB2C")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x86FB2C", Offset = "0x86FB2C")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0x86FB2C", Offset = "0x86FB2C")]
public class ReflectionProbeTrack : TrackAsset
{
	[Token(Token = "0x60008E9")]
	[Address(RVA = "0xB0E62C", Offset = "0xB0E62C", VA = "0xB0E62C")]
	public ReflectionProbeTrack()
	{
	}
}
[Token(Token = "0x200018B")]
public class MaterialColorAsset : PlayableAsset
{
	[Token(Token = "0x4000758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AnimationCurve animationCurve;

	[Token(Token = "0x4000759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Color startColor;

	[Token(Token = "0x400075A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Color endColor;

	[Token(Token = "0x400075B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private string colorName;

	[Token(Token = "0x17000165")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x60008EA")]
		[Address(RVA = "0xB56EE0", Offset = "0xB56EE0", VA = "0xB56EE0")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x60008EB")]
	[Address(RVA = "0xB56EE8", Offset = "0xB56EE8", VA = "0xB56EE8", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x60008EC")]
	[Address(RVA = "0xB56FD8", Offset = "0xB56FD8", VA = "0xB56FD8")]
	public MaterialColorAsset()
	{
	}
}
[Token(Token = "0x200018C")]
public class MaterialColorFlickerAsset : PlayableAsset
{
	[Token(Token = "0x400075C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AnimationCurve flickerCurve;

	[Token(Token = "0x400075D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AnimationCurve curve;

	[Token(Token = "0x400075E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Color startColor;

	[Token(Token = "0x400075F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Color endColor;

	[Token(Token = "0x4000760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private string colorName;

	[Token(Token = "0x17000166")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x60008ED")]
		[Address(RVA = "0xB5706C", Offset = "0xB5706C", VA = "0xB5706C")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x60008EE")]
	[Address(RVA = "0xB57074", Offset = "0xB57074", VA = "0xB57074", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x60008EF")]
	[Address(RVA = "0xB5716C", Offset = "0xB5716C", VA = "0xB5716C")]
	public MaterialColorFlickerAsset()
	{
	}
}
[Token(Token = "0x200018D")]
public class MaterialFloatAsset : PlayableAsset
{
	[Token(Token = "0x4000761")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float startValue;

	[Token(Token = "0x4000762")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float endValue;

	[Token(Token = "0x4000763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AnimationCurve animationCurve;

	[Token(Token = "0x4000764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private string valueName;

	[Token(Token = "0x17000167")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x60008F0")]
		[Address(RVA = "0xB5788C", Offset = "0xB5788C", VA = "0xB5788C")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x60008F1")]
	[Address(RVA = "0xB57894", Offset = "0xB57894", VA = "0xB57894", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x60008F2")]
	[Address(RVA = "0xB57984", Offset = "0xB57984", VA = "0xB57984")]
	public MaterialFloatAsset()
	{
	}
}
[Token(Token = "0x200018E")]
public class MaterialFloatFlickerAsset : PlayableAsset
{
	[Token(Token = "0x4000765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float startValue;

	[Token(Token = "0x4000766")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float endValue;

	[Token(Token = "0x4000767")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AnimationCurve animationCurve;

	[Token(Token = "0x4000768")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AnimationCurve flickerCurve;

	[Token(Token = "0x4000769")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private string valueName;

	[Token(Token = "0x17000168")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x60008F3")]
		[Address(RVA = "0xB57A00", Offset = "0xB57A00", VA = "0xB57A00")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x60008F4")]
	[Address(RVA = "0xB57A08", Offset = "0xB57A08", VA = "0xB57A08", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x60008F5")]
	[Address(RVA = "0xB57B00", Offset = "0xB57B00", VA = "0xB57B00")]
	public MaterialFloatFlickerAsset()
	{
	}
}
[Token(Token = "0x200018F")]
public class MaterialTextureOffsetAsset : PlayableAsset
{
	[Token(Token = "0x400076A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Vector2 startValue;

	[Token(Token = "0x400076B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Vector2 endValue;

	[Token(Token = "0x400076C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AnimationCurve animationCurve;

	[Token(Token = "0x400076D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private string textureName;

	[Token(Token = "0x17000169")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x60008F6")]
		[Address(RVA = "0xF68454", Offset = "0xF68454", VA = "0xF68454")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x60008F7")]
	[Address(RVA = "0xF6845C", Offset = "0xF6845C", VA = "0xF6845C", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x60008F8")]
	[Address(RVA = "0xF6854C", Offset = "0xF6854C", VA = "0xF6854C")]
	public MaterialTextureOffsetAsset()
	{
	}
}
[Token(Token = "0x2000190")]
public class RendererColorBehaviour : RendererBehaviour
{
	[Token(Token = "0x400076E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x875934", Offset = "0x875934")]
	private AnimationCurve <curve>k__BackingField;

	[Token(Token = "0x400076F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x875944", Offset = "0x875944")]
	private Color <startColor>k__BackingField;

	[Token(Token = "0x4000770")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x875954", Offset = "0x875954")]
	private Color <endColor>k__BackingField;

	[Token(Token = "0x4000771")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x875964", Offset = "0x875964")]
	private string <colorName>k__BackingField;

	[Token(Token = "0x4000772")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x875974", Offset = "0x875974")]
	private int <colorID>k__BackingField;

	[Token(Token = "0x1700016A")]
	public AnimationCurve curve
	{
		[Token(Token = "0x60008F9")]
		[Address(RVA = "0xB0E8C8", Offset = "0xB0E8C8", VA = "0xB0E8C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87CD6C", Offset = "0x87CD6C")]
		protected get
		{
			return null;
		}
		[Token(Token = "0x60008FA")]
		[Address(RVA = "0xB0E8D0", Offset = "0xB0E8D0", VA = "0xB0E8D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87CD7C", Offset = "0x87CD7C")]
		set
		{
		}
	}

	[Token(Token = "0x1700016B")]
	public Color startColor
	{
		[Token(Token = "0x60008FB")]
		[Address(RVA = "0xB0E8D8", Offset = "0xB0E8D8", VA = "0xB0E8D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87CD8C", Offset = "0x87CD8C")]
		protected get
		{
			return default(Color);
		}
		[Token(Token = "0x60008FC")]
		[Address(RVA = "0xB0E8E4", Offset = "0xB0E8E4", VA = "0xB0E8E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87CD9C", Offset = "0x87CD9C")]
		set
		{
		}
	}

	[Token(Token = "0x1700016C")]
	public Color endColor
	{
		[Token(Token = "0x60008FD")]
		[Address(RVA = "0xB0E8F0", Offset = "0xB0E8F0", VA = "0xB0E8F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87CDAC", Offset = "0x87CDAC")]
		protected get
		{
			return default(Color);
		}
		[Token(Token = "0x60008FE")]
		[Address(RVA = "0xB0E8FC", Offset = "0xB0E8FC", VA = "0xB0E8FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87CDBC", Offset = "0x87CDBC")]
		set
		{
		}
	}

	[Token(Token = "0x1700016D")]
	public string colorName
	{
		[Token(Token = "0x60008FF")]
		[Address(RVA = "0xB0E908", Offset = "0xB0E908", VA = "0xB0E908")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87CDCC", Offset = "0x87CDCC")]
		protected get
		{
			return null;
		}
		[Token(Token = "0x6000900")]
		[Address(RVA = "0xB0E910", Offset = "0xB0E910", VA = "0xB0E910")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87CDDC", Offset = "0x87CDDC")]
		set
		{
		}
	}

	[Token(Token = "0x1700016E")]
	protected int colorID
	{
		[Token(Token = "0x6000901")]
		[Address(RVA = "0xB0E918", Offset = "0xB0E918", VA = "0xB0E918")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87CDEC", Offset = "0x87CDEC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000902")]
		[Address(RVA = "0xB0E920", Offset = "0xB0E920", VA = "0xB0E920")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87CDFC", Offset = "0x87CDFC")]
		private set
		{
		}
	}

	[Token(Token = "0x6000903")]
	[Address(RVA = "0xB0E928", Offset = "0xB0E928", VA = "0xB0E928", Slot = "13")]
	public override void OnGraphStart(Playable playable)
	{
	}

	[Token(Token = "0x6000904")]
	[Address(RVA = "0xB0E968", Offset = "0xB0E968", VA = "0xB0E968", Slot = "22")]
	protected override void Interpolate(float t)
	{
	}

	[Token(Token = "0x6000905")]
	[Address(RVA = "0xB0E998", Offset = "0xB0E998", VA = "0xB0E998", Slot = "23")]
	protected virtual void ChangeMaterialPropetyBlock(float t)
	{
	}

	[Token(Token = "0x6000906")]
	[Address(RVA = "0xB0EA64", Offset = "0xB0EA64", VA = "0xB0EA64")]
	public RendererColorBehaviour()
	{
	}
}
[Token(Token = "0x2000191")]
public class RendererColorFlickerBehaviour : RendererColorBehaviour
{
	[Token(Token = "0x4000773")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x875984", Offset = "0x875984")]
	private AnimationCurve <flickerCurve>k__BackingField;

	[Token(Token = "0x1700016F")]
	public AnimationCurve flickerCurve
	{
		[Token(Token = "0x6000907")]
		[Address(RVA = "0xB0EA74", Offset = "0xB0EA74", VA = "0xB0EA74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87CE0C", Offset = "0x87CE0C")]
		private get
		{
			return null;
		}
		[Token(Token = "0x6000908")]
		[Address(RVA = "0xB0EA7C", Offset = "0xB0EA7C", VA = "0xB0EA7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87CE1C", Offset = "0x87CE1C")]
		set
		{
		}
	}

	[Token(Token = "0x6000909")]
	[Address(RVA = "0xB0EA84", Offset = "0xB0EA84", VA = "0xB0EA84", Slot = "23")]
	protected override void ChangeMaterialPropetyBlock(float t)
	{
	}

	[Token(Token = "0x600090A")]
	[Address(RVA = "0xB0EBEC", Offset = "0xB0EBEC", VA = "0xB0EBEC")]
	public RendererColorFlickerBehaviour()
	{
	}
}
[Token(Token = "0x2000192")]
public class RendererFloatBehaviour : RendererBehaviour
{
	[Token(Token = "0x4000774")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x875994", Offset = "0x875994")]
	private AnimationCurve <curve>k__BackingField;

	[Token(Token = "0x4000775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8759A4", Offset = "0x8759A4")]
	private float <startValue>k__BackingField;

	[Token(Token = "0x4000776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8759B4", Offset = "0x8759B4")]
	private float <endValue>k__BackingField;

	[Token(Token = "0x4000777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8759C4", Offset = "0x8759C4")]
	private string <valueName>k__BackingField;

	[Token(Token = "0x4000778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8759D4", Offset = "0x8759D4")]
	private int <valueID>k__BackingField;

	[Token(Token = "0x17000170")]
	public AnimationCurve curve
	{
		[Token(Token = "0x600090B")]
		[Address(RVA = "0xB0EBFC", Offset = "0xB0EBFC", VA = "0xB0EBFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87CE2C", Offset = "0x87CE2C")]
		protected get
		{
			return null;
		}
		[Token(Token = "0x600090C")]
		[Address(RVA = "0xB0EC04", Offset = "0xB0EC04", VA = "0xB0EC04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87CE3C", Offset = "0x87CE3C")]
		set
		{
		}
	}

	[Token(Token = "0x17000171")]
	public float startValue
	{
		[Token(Token = "0x600090D")]
		[Address(RVA = "0xB0EC0C", Offset = "0xB0EC0C", VA = "0xB0EC0C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87CE4C", Offset = "0x87CE4C")]
		protected get
		{
			return default(float);
		}
		[Token(Token = "0x600090E")]
		[Address(RVA = "0xB0EC14", Offset = "0xB0EC14", VA = "0xB0EC14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87CE5C", Offset = "0x87CE5C")]
		set
		{
		}
	}

	[Token(Token = "0x17000172")]
	public float endValue
	{
		[Token(Token = "0x600090F")]
		[Address(RVA = "0xB0EC1C", Offset = "0xB0EC1C", VA = "0xB0EC1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87CE6C", Offset = "0x87CE6C")]
		protected get
		{
			return default(float);
		}
		[Token(Token = "0x6000910")]
		[Address(RVA = "0xB0EC24", Offset = "0xB0EC24", VA = "0xB0EC24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87CE7C", Offset = "0x87CE7C")]
		set
		{
		}
	}

	[Token(Token = "0x17000173")]
	public string valueName
	{
		[Token(Token = "0x6000911")]
		[Address(RVA = "0xB0EC2C", Offset = "0xB0EC2C", VA = "0xB0EC2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87CE8C", Offset = "0x87CE8C")]
		protected get
		{
			return null;
		}
		[Token(Token = "0x6000912")]
		[Address(RVA = "0xB0EC34", Offset = "0xB0EC34", VA = "0xB0EC34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87CE9C", Offset = "0x87CE9C")]
		set
		{
		}
	}

	[Token(Token = "0x17000174")]
	protected int valueID
	{
		[Token(Token = "0x6000913")]
		[Address(RVA = "0xB0EC3C", Offset = "0xB0EC3C", VA = "0xB0EC3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87CEAC", Offset = "0x87CEAC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000914")]
		[Address(RVA = "0xB0EC44", Offset = "0xB0EC44", VA = "0xB0EC44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87CEBC", Offset = "0x87CEBC")]
		private set
		{
		}
	}

	[Token(Token = "0x6000915")]
	[Address(RVA = "0xB0EC4C", Offset = "0xB0EC4C", VA = "0xB0EC4C", Slot = "13")]
	public override void OnGraphStart(Playable playable)
	{
	}

	[Token(Token = "0x6000916")]
	[Address(RVA = "0xB0EC8C", Offset = "0xB0EC8C", VA = "0xB0EC8C", Slot = "22")]
	protected override void Interpolate(float t)
	{
	}

	[Token(Token = "0x6000917")]
	[Address(RVA = "0xB0ECBC", Offset = "0xB0ECBC", VA = "0xB0ECBC", Slot = "23")]
	protected virtual void ChangeMaterialPropertyBlock(float t)
	{
	}

	[Token(Token = "0x6000918")]
	[Address(RVA = "0xB0ED9C", Offset = "0xB0ED9C", VA = "0xB0ED9C")]
	public RendererFloatBehaviour()
	{
	}
}
[Token(Token = "0x2000193")]
public class RendererFloatFlickerBehaviour : RendererFloatBehaviour
{
	[Token(Token = "0x4000779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8759E4", Offset = "0x8759E4")]
	private AnimationCurve <flickerCurve>k__BackingField;

	[Token(Token = "0x17000175")]
	public AnimationCurve flickerCurve
	{
		[Token(Token = "0x6000919")]
		[Address(RVA = "0xB0EDAC", Offset = "0xB0EDAC", VA = "0xB0EDAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87CECC", Offset = "0x87CECC")]
		private get
		{
			return null;
		}
		[Token(Token = "0x600091A")]
		[Address(RVA = "0xB0EDB4", Offset = "0xB0EDB4", VA = "0xB0EDB4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87CEDC", Offset = "0x87CEDC")]
		set
		{
		}
	}

	[Token(Token = "0x600091B")]
	[Address(RVA = "0xB0EDBC", Offset = "0xB0EDBC", VA = "0xB0EDBC", Slot = "23")]
	protected override void ChangeMaterialPropertyBlock(float t)
	{
	}

	[Token(Token = "0x600091C")]
	[Address(RVA = "0xB0EF1C", Offset = "0xB0EF1C", VA = "0xB0EF1C")]
	public RendererFloatFlickerBehaviour()
	{
	}
}
[Token(Token = "0x2000194")]
public class RendererTextureOffsetBehaviour : RendererBehaviour
{
	[Token(Token = "0x400077A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8759F4", Offset = "0x8759F4")]
	private AnimationCurve <curve>k__BackingField;

	[Token(Token = "0x400077B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x875A04", Offset = "0x875A04")]
	private Vector2 <startValue>k__BackingField;

	[Token(Token = "0x400077C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x875A14", Offset = "0x875A14")]
	private Vector2 <endValue>k__BackingField;

	[Token(Token = "0x400077D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x875A24", Offset = "0x875A24")]
	private string <textureName>k__BackingField;

	[Token(Token = "0x400077E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x875A34", Offset = "0x875A34")]
	private Vector2 <originalTiling>k__BackingField;

	[Token(Token = "0x400077F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x875A44", Offset = "0x875A44")]
	private int <valueID>k__BackingField;

	[Token(Token = "0x4000780")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	protected Vector4 resultingST;

	[Token(Token = "0x17000176")]
	public AnimationCurve curve
	{
		[Token(Token = "0x600091D")]
		[Address(RVA = "0xB0EF2C", Offset = "0xB0EF2C", VA = "0xB0EF2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87CEEC", Offset = "0x87CEEC")]
		protected get
		{
			return null;
		}
		[Token(Token = "0x600091E")]
		[Address(RVA = "0xB0EF34", Offset = "0xB0EF34", VA = "0xB0EF34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87CEFC", Offset = "0x87CEFC")]
		set
		{
		}
	}

	[Token(Token = "0x17000177")]
	public Vector2 startValue
	{
		[Token(Token = "0x600091F")]
		[Address(RVA = "0xB0EF3C", Offset = "0xB0EF3C", VA = "0xB0EF3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87CF0C", Offset = "0x87CF0C")]
		protected get
		{
			return default(Vector2);
		}
		[Token(Token = "0x6000920")]
		[Address(RVA = "0xB0EF44", Offset = "0xB0EF44", VA = "0xB0EF44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87CF1C", Offset = "0x87CF1C")]
		set
		{
		}
	}

	[Token(Token = "0x17000178")]
	public Vector2 endValue
	{
		[Token(Token = "0x6000921")]
		[Address(RVA = "0xB0EF4C", Offset = "0xB0EF4C", VA = "0xB0EF4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87CF2C", Offset = "0x87CF2C")]
		protected get
		{
			return default(Vector2);
		}
		[Token(Token = "0x6000922")]
		[Address(RVA = "0xB0EF54", Offset = "0xB0EF54", VA = "0xB0EF54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87CF3C", Offset = "0x87CF3C")]
		set
		{
		}
	}

	[Token(Token = "0x17000179")]
	public string textureName
	{
		[Token(Token = "0x6000923")]
		[Address(RVA = "0xB0EF5C", Offset = "0xB0EF5C", VA = "0xB0EF5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87CF4C", Offset = "0x87CF4C")]
		protected get
		{
			return null;
		}
		[Token(Token = "0x6000924")]
		[Address(RVA = "0xB0EF64", Offset = "0xB0EF64", VA = "0xB0EF64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87CF5C", Offset = "0x87CF5C")]
		set
		{
		}
	}

	[Token(Token = "0x1700017A")]
	public Vector2 originalTiling
	{
		[Token(Token = "0x6000925")]
		[Address(RVA = "0xB0EF6C", Offset = "0xB0EF6C", VA = "0xB0EF6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87CF6C", Offset = "0x87CF6C")]
		protected get
		{
			return default(Vector2);
		}
		[Token(Token = "0x6000926")]
		[Address(RVA = "0xB0EF74", Offset = "0xB0EF74", VA = "0xB0EF74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87CF7C", Offset = "0x87CF7C")]
		set
		{
		}
	}

	[Token(Token = "0x1700017B")]
	protected int valueID
	{
		[Token(Token = "0x6000927")]
		[Address(RVA = "0xB0EF7C", Offset = "0xB0EF7C", VA = "0xB0EF7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87CF8C", Offset = "0x87CF8C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000928")]
		[Address(RVA = "0xB0EF84", Offset = "0xB0EF84", VA = "0xB0EF84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87CF9C", Offset = "0x87CF9C")]
		private set
		{
		}
	}

	[Token(Token = "0x6000929")]
	[Address(RVA = "0xB0EF8C", Offset = "0xB0EF8C", VA = "0xB0EF8C", Slot = "13")]
	public override void OnGraphStart(Playable playable)
	{
	}

	[Token(Token = "0x600092A")]
	[Address(RVA = "0xB0F020", Offset = "0xB0F020", VA = "0xB0F020", Slot = "22")]
	protected override void Interpolate(float t)
	{
	}

	[Token(Token = "0x600092B")]
	[Address(RVA = "0xB0F0E4", Offset = "0xB0F0E4", VA = "0xB0F0E4", Slot = "23")]
	protected virtual void ChangeMaterialPropertyBlock(float t)
	{
	}

	[Token(Token = "0x600092C")]
	[Address(RVA = "0xB0F1EC", Offset = "0xB0F1EC", VA = "0xB0F1EC")]
	public RendererTextureOffsetBehaviour()
	{
	}
}
[Token(Token = "0x2000195")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x86FBDC", Offset = "0x86FBDC")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x86FBDC", Offset = "0x86FBDC")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x86FBDC", Offset = "0x86FBDC")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x86FBDC", Offset = "0x86FBDC")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x86FBDC", Offset = "0x86FBDC")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x86FBDC", Offset = "0x86FBDC")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0x86FBDC", Offset = "0x86FBDC")]
public class RendererTrack : TrackAsset
{
	[Token(Token = "0x600092D")]
	[Address(RVA = "0xB0F1FC", Offset = "0xB0F1FC", VA = "0xB0F1FC")]
	public RendererTrack()
	{
	}
}
[Token(Token = "0x2000196")]
public class ScriptValueAsset : PlayableAsset
{
	[Token(Token = "0x4000781")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AnimationCurve curve;

	[Token(Token = "0x600092E")]
	[Address(RVA = "0xB15380", Offset = "0xB15380", VA = "0xB15380", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x600092F")]
	[Address(RVA = "0xB15458", Offset = "0xB15458", VA = "0xB15458")]
	public ScriptValueAsset()
	{
	}
}
[Token(Token = "0x2000197")]
public class ScriptValueBehaviour : TimeBasedBehaviour
{
	[Token(Token = "0x4000782")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve curve;

	[Token(Token = "0x4000783")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ScriptValueReceiver receiver;

	[Token(Token = "0x6000930")]
	[Address(RVA = "0xB15498", Offset = "0xB15498", VA = "0xB15498", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x6000931")]
	[Address(RVA = "0xB155A4", Offset = "0xB155A4", VA = "0xB155A4", Slot = "22")]
	protected override void Interpolate(float t)
	{
	}

	[Token(Token = "0x6000932")]
	[Address(RVA = "0xB15648", Offset = "0xB15648", VA = "0xB15648")]
	public ScriptValueBehaviour()
	{
	}
}
[Token(Token = "0x2000198")]
public class ScriptValueReceiver : MonoBehaviour
{
	[Token(Token = "0x4000784")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x875A64", Offset = "0x875A64")]
	private float <Value>k__BackingField;

	[Token(Token = "0x1700017C")]
	public float Value
	{
		[Token(Token = "0x6000933")]
		[Address(RVA = "0xB15650", Offset = "0xB15650", VA = "0xB15650")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87CFAC", Offset = "0x87CFAC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000934")]
		[Address(RVA = "0xB15658", Offset = "0xB15658", VA = "0xB15658")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87CFBC", Offset = "0x87CFBC")]
		set
		{
		}
	}

	[Token(Token = "0x6000935")]
	[Address(RVA = "0xB15660", Offset = "0xB15660", VA = "0xB15660")]
	public ScriptValueReceiver()
	{
	}
}
[Token(Token = "0x2000199")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x86FD2C", Offset = "0x86FD2C")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x86FD2C", Offset = "0x86FD2C")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0x86FD2C", Offset = "0x86FD2C")]
public class ScriptValueTrack : TrackAsset
{
	[Token(Token = "0x6000936")]
	[Address(RVA = "0xB15668", Offset = "0xB15668", VA = "0xB15668")]
	public ScriptValueTrack()
	{
	}
}
[Token(Token = "0x200019A")]
public class FixedFoveatedRenderingAsset : PlayableAsset
{
	[Token(Token = "0x4000785")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private OVRPlugin.FixedFoveatedRenderingLevel level;

	[Token(Token = "0x1700017D")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x6000937")]
		[Address(RVA = "0xAF84C0", Offset = "0xAF84C0", VA = "0xAF84C0")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x6000938")]
	[Address(RVA = "0xAF84C8", Offset = "0xAF84C8", VA = "0xAF84C8", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000939")]
	[Address(RVA = "0xAF85A0", Offset = "0xAF85A0", VA = "0xAF85A0")]
	public FixedFoveatedRenderingAsset()
	{
	}
}
[Token(Token = "0x200019B")]
public class FixedFoveatedRenderingBehaviour : PlayableBehaviour
{
	[Token(Token = "0x4000786")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x875A84", Offset = "0x875A84")]
	private OVRPlugin.FixedFoveatedRenderingLevel <Level>k__BackingField;

	[Token(Token = "0x1700017E")]
	public OVRPlugin.FixedFoveatedRenderingLevel Level
	{
		[Token(Token = "0x600093A")]
		[Address(RVA = "0xAF85A8", Offset = "0xAF85A8", VA = "0xAF85A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87CFCC", Offset = "0x87CFCC")]
		private get
		{
			return default(OVRPlugin.FixedFoveatedRenderingLevel);
		}
		[Token(Token = "0x600093B")]
		[Address(RVA = "0xAF85B0", Offset = "0xAF85B0", VA = "0xAF85B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87CFDC", Offset = "0x87CFDC")]
		set
		{
		}
	}

	[Token(Token = "0x600093C")]
	[Address(RVA = "0xAF85B8", Offset = "0xAF85B8", VA = "0xAF85B8", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x600093D")]
	[Address(RVA = "0xAF86C8", Offset = "0xAF86C8", VA = "0xAF86C8")]
	public FixedFoveatedRenderingBehaviour()
	{
	}
}
[Token(Token = "0x200019C")]
public class PixelDensityAsset : PlayableAsset
{
	[Token(Token = "0x4000787")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x875A94", Offset = "0x875A94")]
	private float pixelDensity;

	[Token(Token = "0x1700017F")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x600093E")]
		[Address(RVA = "0xB0C624", Offset = "0xB0C624", VA = "0xB0C624")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x600093F")]
	[Address(RVA = "0xB0C62C", Offset = "0xB0C62C", VA = "0xB0C62C", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000940")]
	[Address(RVA = "0xB0C704", Offset = "0xB0C704", VA = "0xB0C704")]
	public PixelDensityAsset()
	{
	}
}
[Token(Token = "0x200019D")]
public class PixelDensityBehaviour : PlayableBehaviour
{
	[Token(Token = "0x4000788")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x875AD8", Offset = "0x875AD8")]
	private float <PixelDensity>k__BackingField;

	[Token(Token = "0x17000180")]
	public float PixelDensity
	{
		[Token(Token = "0x6000941")]
		[Address(RVA = "0xB0C714", Offset = "0xB0C714", VA = "0xB0C714")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87CFEC", Offset = "0x87CFEC")]
		private get
		{
			return default(float);
		}
		[Token(Token = "0x6000942")]
		[Address(RVA = "0xB0C71C", Offset = "0xB0C71C", VA = "0xB0C71C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87CFFC", Offset = "0x87CFFC")]
		set
		{
		}
	}

	[Token(Token = "0x6000943")]
	[Address(RVA = "0xB0C724", Offset = "0xB0C724", VA = "0xB0C724", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x6000944")]
	[Address(RVA = "0xB0C808", Offset = "0xB0C808", VA = "0xB0C808")]
	public PixelDensityBehaviour()
	{
	}
}
[Token(Token = "0x200019E")]
public class PixelLightCountAsset : PlayableAsset
{
	[Token(Token = "0x4000789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x875AE8", Offset = "0x875AE8")]
	private int pixelLightCount;

	[Token(Token = "0x6000945")]
	[Address(RVA = "0xB0C810", Offset = "0xB0C810", VA = "0xB0C810", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000946")]
	[Address(RVA = "0xB0C8E8", Offset = "0xB0C8E8", VA = "0xB0C8E8")]
	public PixelLightCountAsset()
	{
	}
}
[Token(Token = "0x200019F")]
public class PixelLightCountBehaviour : PlayableBehaviour
{
	[Token(Token = "0x400078A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x875B28", Offset = "0x875B28")]
	private int <pixelLightCount>k__BackingField;

	[Token(Token = "0x17000181")]
	public int pixelLightCount
	{
		[Token(Token = "0x6000947")]
		[Address(RVA = "0xB0C8F8", Offset = "0xB0C8F8", VA = "0xB0C8F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87D00C", Offset = "0x87D00C")]
		private get
		{
			return default(int);
		}
		[Token(Token = "0x6000948")]
		[Address(RVA = "0xB0C900", Offset = "0xB0C900", VA = "0xB0C900")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87D01C", Offset = "0x87D01C")]
		set
		{
		}
	}

	[Token(Token = "0x6000949")]
	[Address(RVA = "0xB0C908", Offset = "0xB0C908", VA = "0xB0C908", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x600094A")]
	[Address(RVA = "0xB0CA2C", Offset = "0xB0CA2C", VA = "0xB0CA2C")]
	public PixelLightCountBehaviour()
	{
	}
}
[Token(Token = "0x20001A0")]
public class ShaderGlobalFloatFeederAsset : PlayableAsset
{
	[Token(Token = "0x400078B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ShaderGlobalFloatFeederBehaviour template;

	[Token(Token = "0x17000182")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x600094B")]
		[Address(RVA = "0xB18704", Offset = "0xB18704", VA = "0xB18704")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x600094C")]
	[Address(RVA = "0xB1870C", Offset = "0xB1870C", VA = "0xB1870C", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x600094D")]
	[Address(RVA = "0xB187AC", Offset = "0xB187AC", VA = "0xB187AC")]
	public ShaderGlobalFloatFeederAsset()
	{
	}
}
[Serializable]
[Token(Token = "0x20001A1")]
public class ShaderGlobalFloatFeederBehaviour : TimeBasedBehaviour
{
	[Token(Token = "0x400078C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string variableName;

	[Token(Token = "0x400078D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AnimationCurve curve;

	[Token(Token = "0x600094E")]
	[Address(RVA = "0xB187B4", Offset = "0xB187B4", VA = "0xB187B4", Slot = "22")]
	protected override void Interpolate(float t)
	{
	}

	[Token(Token = "0x600094F")]
	[Address(RVA = "0xB187F0", Offset = "0xB187F0", VA = "0xB187F0")]
	public ShaderGlobalFloatFeederBehaviour()
	{
	}
}
[Token(Token = "0x20001A2")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x86FDD8", Offset = "0x86FDD8")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x86FDD8", Offset = "0x86FDD8")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x86FDD8", Offset = "0x86FDD8")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x86FDD8", Offset = "0x86FDD8")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x86FDD8", Offset = "0x86FDD8")]
public class UnbindedTrack : TrackAsset
{
	[Token(Token = "0x6000950")]
	[Address(RVA = "0x155CF30", Offset = "0x155CF30", VA = "0x155CF30")]
	public UnbindedTrack()
	{
	}
}
[Token(Token = "0x20001A3")]
public class TimelinePlayerAsset : PlayableAsset
{
	[Token(Token = "0x400078E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SceneNames sceneName;

	[Token(Token = "0x17000183")]
	public SceneNames SceneName
	{
		[Token(Token = "0x6000951")]
		[Address(RVA = "0x155AA6C", Offset = "0x155AA6C", VA = "0x155AA6C")]
		get
		{
			return default(SceneNames);
		}
		[Token(Token = "0x6000952")]
		[Address(RVA = "0x155AA74", Offset = "0x155AA74", VA = "0x155AA74")]
		set
		{
		}
	}

	[Token(Token = "0x6000953")]
	[Address(RVA = "0x155AA7C", Offset = "0x155AA7C", VA = "0x155AA7C", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000954")]
	[Address(RVA = "0x155AB54", Offset = "0x155AB54", VA = "0x155AB54")]
	public TimelinePlayerAsset()
	{
	}
}
[Token(Token = "0x20001A4")]
public class TimelinePlayerBehaviour : DirectorControlPlayable
{
	[Token(Token = "0x400078F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x875B78", Offset = "0x875B78")]
	private SceneNames <sceneName>k__BackingField;

	[Token(Token = "0x17000184")]
	public SceneNames sceneName
	{
		[Token(Token = "0x6000955")]
		[Address(RVA = "0x155AB5C", Offset = "0x155AB5C", VA = "0x155AB5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87D02C", Offset = "0x87D02C")]
		get
		{
			return default(SceneNames);
		}
		[Token(Token = "0x6000956")]
		[Address(RVA = "0x155AB64", Offset = "0x155AB64", VA = "0x155AB64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87D03C", Offset = "0x87D03C")]
		set
		{
		}
	}

	[Token(Token = "0x6000957")]
	[Address(RVA = "0x155AB6C", Offset = "0x155AB6C", VA = "0x155AB6C", Slot = "19")]
	public override void PrepareFrame(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x6000958")]
	[Address(RVA = "0x155AD84", Offset = "0x155AD84", VA = "0x155AD84", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x6000959")]
	[Address(RVA = "0x155AE60", Offset = "0x155AE60", VA = "0x155AE60")]
	private bool CanBePlayed()
	{
		return default(bool);
	}

	[Token(Token = "0x600095A")]
	[Address(RVA = "0x155ACA8", Offset = "0x155ACA8", VA = "0x155ACA8")]
	private void SetDirector()
	{
	}

	[Token(Token = "0x600095B")]
	[Address(RVA = "0x155AEF8", Offset = "0x155AEF8", VA = "0x155AEF8")]
	public TimelinePlayerBehaviour()
	{
	}
}
[Token(Token = "0x20001A5")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x86FED0", Offset = "0x86FED0")]
public class TimelinePlayerTrack : TrackAsset
{
	[Token(Token = "0x600095C")]
	[Address(RVA = "0x155AF00", Offset = "0x155AF00", VA = "0x155AF00")]
	public TimelinePlayerTrack()
	{
	}
}
[Token(Token = "0x20001A6")]
public class TriggerableStringsAsset : PlayableAsset
{
	[Token(Token = "0x4000790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TriggerableStringsBehaviour template;

	[Token(Token = "0x600095D")]
	[Address(RVA = "0x155C31C", Offset = "0x155C31C", VA = "0x155C31C", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x600095E")]
	[Address(RVA = "0x155C3BC", Offset = "0x155C3BC", VA = "0x155C3BC")]
	public TriggerableStringsAsset()
	{
	}
}
[Serializable]
[Token(Token = "0x20001A7")]
public class TriggerableStringsBehaviour : PlayableBehaviour
{
	[Token(Token = "0x4000791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float[] InfluenceOverStrings;

	[Token(Token = "0x600095F")]
	[Address(RVA = "0x155C3C4", Offset = "0x155C3C4", VA = "0x155C3C4")]
	public TriggerableStringsBehaviour()
	{
	}
}
[Token(Token = "0x20001A8")]
public class TriggerableStringsMixerBehaviour : PlayableBehaviour
{
	[Token(Token = "0x4000792")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private float[] influenceOverStrings;

	[Token(Token = "0x6000960")]
	[Address(RVA = "0x155C554", Offset = "0x155C554", VA = "0x155C554", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x6000961")]
	[Address(RVA = "0x155C680", Offset = "0x155C680", VA = "0x155C680")]
	private void ClearInfluenceArray()
	{
	}

	[Token(Token = "0x6000962")]
	[Address(RVA = "0x155C6D4", Offset = "0x155C6D4", VA = "0x155C6D4")]
	private void GetInfluenceFromBehaviours(Playable playable, int index)
	{
	}

	[Token(Token = "0x6000963")]
	[Address(RVA = "0x155C888", Offset = "0x155C888", VA = "0x155C888")]
	public TriggerableStringsMixerBehaviour()
	{
	}
}
[Token(Token = "0x20001A9")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x86FF34", Offset = "0x86FF34")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x86FF34", Offset = "0x86FF34")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0x86FF34", Offset = "0x86FF34")]
public class TriggerableStringsTrack : TrackAsset
{
	[Token(Token = "0x6000964")]
	[Address(RVA = "0x155C8E8", Offset = "0x155C8E8", VA = "0x155C8E8", Slot = "23")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000965")]
	[Address(RVA = "0x155C980", Offset = "0x155C980", VA = "0x155C980")]
	public TriggerableStringsTrack()
	{
	}
}
[Token(Token = "0x20001AA")]
public class WindowsAsset : PlayableAsset
{
	[Token(Token = "0x4000793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AnimationCurve animationCurve;

	[Token(Token = "0x4000794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private byte[] windowsIDs;

	[Token(Token = "0x17000185")]
	public byte[] WindowsIDs
	{
		[Token(Token = "0x6000966")]
		[Address(RVA = "0x155F7B8", Offset = "0x155F7B8", VA = "0x155F7B8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000967")]
		[Address(RVA = "0x155F7C0", Offset = "0x155F7C0", VA = "0x155F7C0")]
		set
		{
		}
	}

	[Token(Token = "0x17000186")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x6000968")]
		[Address(RVA = "0x155F7C8", Offset = "0x155F7C8", VA = "0x155F7C8")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x6000969")]
	[Address(RVA = "0x155F7D0", Offset = "0x155F7D0", VA = "0x155F7D0", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x600096A")]
	[Address(RVA = "0x155F8B0", Offset = "0x155F8B0", VA = "0x155F8B0")]
	public WindowsAsset()
	{
	}
}
[Token(Token = "0x20001AB")]
public class WindowsBehaviour : TimeBasedBehaviour
{
	[Token(Token = "0x4000795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x875BB8", Offset = "0x875BB8")]
	private AnimationCurve <curve>k__BackingField;

	[Token(Token = "0x4000796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x875BC8", Offset = "0x875BC8")]
	private byte[] <windowsIDs>k__BackingField;

	[Token(Token = "0x4000797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected WindowsManager windowsManager;

	[Token(Token = "0x17000187")]
	public AnimationCurve curve
	{
		[Token(Token = "0x600096B")]
		[Address(RVA = "0x155F8F0", Offset = "0x155F8F0", VA = "0x155F8F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87D04C", Offset = "0x87D04C")]
		protected get
		{
			return null;
		}
		[Token(Token = "0x600096C")]
		[Address(RVA = "0x155F8F8", Offset = "0x155F8F8", VA = "0x155F8F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87D05C", Offset = "0x87D05C")]
		set
		{
		}
	}

	[Token(Token = "0x17000188")]
	public byte[] windowsIDs
	{
		[Token(Token = "0x600096D")]
		[Address(RVA = "0x155F900", Offset = "0x155F900", VA = "0x155F900")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87D06C", Offset = "0x87D06C")]
		protected get
		{
			return null;
		}
		[Token(Token = "0x600096E")]
		[Address(RVA = "0x155F908", Offset = "0x155F908", VA = "0x155F908")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87D07C", Offset = "0x87D07C")]
		set
		{
		}
	}

	[Token(Token = "0x600096F")]
	[Address(RVA = "0x155F910", Offset = "0x155F910", VA = "0x155F910", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x6000970")]
	[Address(RVA = "0x155FA18", Offset = "0x155FA18", VA = "0x155FA18", Slot = "22")]
	protected override void Interpolate(float t)
	{
	}

	[Token(Token = "0x6000971")]
	[Address(RVA = "0x155FB5C", Offset = "0x155FB5C", VA = "0x155FB5C")]
	public WindowsBehaviour()
	{
	}
}
[Token(Token = "0x20001AC")]
public class WindowsFlickerAsset : PlayableAsset
{
	[Token(Token = "0x4000798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AnimationCurve curve;

	[Token(Token = "0x4000799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AnimationCurve flickerCurve;

	[Token(Token = "0x400079A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private byte[] windowsIDs;

	[Token(Token = "0x17000189")]
	public byte[] WindowsIDs
	{
		[Token(Token = "0x6000972")]
		[Address(RVA = "0x155FB64", Offset = "0x155FB64", VA = "0x155FB64")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000973")]
		[Address(RVA = "0x155FB6C", Offset = "0x155FB6C", VA = "0x155FB6C")]
		set
		{
		}
	}

	[Token(Token = "0x1700018A")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x6000974")]
		[Address(RVA = "0x155FB74", Offset = "0x155FB74", VA = "0x155FB74")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x6000975")]
	[Address(RVA = "0x155FB7C", Offset = "0x155FB7C", VA = "0x155FB7C", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000976")]
	[Address(RVA = "0x155FC64", Offset = "0x155FC64", VA = "0x155FC64")]
	public WindowsFlickerAsset()
	{
	}
}
[Token(Token = "0x20001AD")]
public class WindowsFlickerBehaviour : WindowsBehaviour
{
	[Token(Token = "0x400079B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x875C08", Offset = "0x875C08")]
	private AnimationCurve <flickerCurve>k__BackingField;

	[Token(Token = "0x1700018B")]
	public AnimationCurve flickerCurve
	{
		[Token(Token = "0x6000977")]
		[Address(RVA = "0x155FCC8", Offset = "0x155FCC8", VA = "0x155FCC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87D08C", Offset = "0x87D08C")]
		private get
		{
			return null;
		}
		[Token(Token = "0x6000978")]
		[Address(RVA = "0x155FCD0", Offset = "0x155FCD0", VA = "0x155FCD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87D09C", Offset = "0x87D09C")]
		set
		{
		}
	}

	[Token(Token = "0x6000979")]
	[Address(RVA = "0x155FCD8", Offset = "0x155FCD8", VA = "0x155FCD8", Slot = "22")]
	protected override void Interpolate(float t)
	{
	}

	[Token(Token = "0x600097A")]
	[Address(RVA = "0x155FE5C", Offset = "0x155FE5C", VA = "0x155FE5C")]
	public WindowsFlickerBehaviour()
	{
	}
}
[Token(Token = "0x20001AE")]
public class WindowsResetAsset : PlayableAsset
{
	[Token(Token = "0x400079C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool visilibity;

	[Token(Token = "0x1700018C")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x600097B")]
		[Address(RVA = "0x15600E4", Offset = "0x15600E4", VA = "0x15600E4")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x600097C")]
	[Address(RVA = "0x15600EC", Offset = "0x15600EC", VA = "0x15600EC", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x600097D")]
	[Address(RVA = "0x15601C4", Offset = "0x15601C4", VA = "0x15601C4")]
	public WindowsResetAsset()
	{
	}
}
[Token(Token = "0x20001AF")]
public class WindowsResetBehaviour : PlayableBehaviour
{
	[Token(Token = "0x400079D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool visibility;

	[Token(Token = "0x400079E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private WindowsManager windowsManager;

	[Token(Token = "0x600097E")]
	[Address(RVA = "0x15601CC", Offset = "0x15601CC", VA = "0x15601CC", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x600097F")]
	[Address(RVA = "0x15602E0", Offset = "0x15602E0", VA = "0x15602E0")]
	public WindowsResetBehaviour()
	{
	}
}
[Token(Token = "0x20001B0")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x86FFE4", Offset = "0x86FFE4")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0x86FFE4", Offset = "0x86FFE4")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x86FFE4", Offset = "0x86FFE4")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x86FFE4", Offset = "0x86FFE4")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x86FFE4", Offset = "0x86FFE4")]
public class WindowsTrack : TrackAsset
{
	[Token(Token = "0x6000980")]
	[Address(RVA = "0x15602E8", Offset = "0x15602E8", VA = "0x15602E8")]
	public WindowsTrack()
	{
	}
}
[Token(Token = "0x20001B1")]
public static class ApplicationEvents
{
	[Token(Token = "0x400079F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action<Scene> OnSceneLoaded;

	[Token(Token = "0x40007A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Action<SceneNames> onSceneUnloaded;

	[Token(Token = "0x40007A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Action OnMenuUnload;

	[Token(Token = "0x40007A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static Action<JumpToSceneData> GoToScene;

	[Token(Token = "0x40007A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static Action LoadNextScene;

	[Token(Token = "0x40007A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static Action GoToMenu;

	[Token(Token = "0x40007A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static Action OnSceneFinish;

	[Token(Token = "0x40007A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static Action OnChapterFinish;

	[Token(Token = "0x40007A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static Action<SubtitleLanguage> OnSetSubtitlesLanguage;
}
[Token(Token = "0x20001B2")]
[ExecuteInEditMode]
public class Attachment : MonoBehaviour
{
	[Token(Token = "0x40007A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected Transform attachedTo;

	[Token(Token = "0x40007A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool doNotAttach;

	[Token(Token = "0x40007AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	[SerializeField]
	private bool freezeRotation;

	[Token(Token = "0x40007AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	[SerializeField]
	private bool useScale;

	[Token(Token = "0x40007AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	private bool searched;

	[Token(Token = "0x6000981")]
	[Address(RVA = "0xCBA7FC", Offset = "0xCBA7FC", VA = "0xCBA7FC")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000982")]
	[Address(RVA = "0xCBA80C", Offset = "0xCBA80C", VA = "0xCBA80C")]
	public void Attach()
	{
	}

	[Token(Token = "0x6000983")]
	[Address(RVA = "0xCBA994", Offset = "0xCBA994", VA = "0xCBA994")]
	public void SetAttachment(Transform attachedTo)
	{
	}

	[Token(Token = "0x6000984")]
	[Address(RVA = "0xCBA99C", Offset = "0xCBA99C", VA = "0xCBA99C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000985")]
	[Address(RVA = "0xCBAB20", Offset = "0xCBAB20", VA = "0xCBAB20")]
	public Attachment()
	{
	}
}
[Serializable]
[Token(Token = "0x20001B3")]
public class AttachmentData
{
	[Token(Token = "0x40007AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string sceneObject;

	[Token(Token = "0x40007AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform objectTransform;

	[Token(Token = "0x6000986")]
	[Address(RVA = "0xCBAB28", Offset = "0xCBAB28", VA = "0xCBAB28")]
	public AttachmentData()
	{
	}
}
[Token(Token = "0x20001B4")]
public class AttachmentFiller : MonoBehaviour
{
	[Token(Token = "0x40007AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<AttachmentData> sceneAttachments;

	[Token(Token = "0x6000987")]
	[Address(RVA = "0xCBAB30", Offset = "0xCBAB30", VA = "0xCBAB30")]
	private void Start()
	{
	}

	[Token(Token = "0x6000988")]
	[Address(RVA = "0xCBAB9C", Offset = "0xCBAB9C", VA = "0xCBAB9C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000989")]
	[Address(RVA = "0xCBAC08", Offset = "0xCBAC08", VA = "0xCBAC08")]
	public AttachmentFiller()
	{
	}
}
[Token(Token = "0x20001B5")]
public class BuildDateDrawer : MonoBehaviour
{
	[Token(Token = "0x20001B6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8700F8", Offset = "0x8700F8")]
	private sealed class <Start>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BuildDateDrawer <>4__this;

		[Token(Token = "0x40007B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color <color>5__2;

		[Token(Token = "0x40007B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <timer>5__3;

		[Token(Token = "0x40007B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float <fadeDuration>5__4;

		[Token(Token = "0x1700018D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600098F")]
			[Address(RVA = "0xCBDB78", Offset = "0xCBDB78", VA = "0xCBDB78", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000991")]
			[Address(RVA = "0xCBDBE0", Offset = "0xCBDBE0", VA = "0xCBDBE0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600098C")]
		[Address(RVA = "0xCBD760", Offset = "0xCBD760", VA = "0xCBD760")]
		[DebuggerHidden]
		public <Start>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x600098D")]
		[Address(RVA = "0xCBD7CC", Offset = "0xCBD7CC", VA = "0xCBD7CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600098E")]
		[Address(RVA = "0xCBD7D0", Offset = "0xCBD7D0", VA = "0xCBD7D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000990")]
		[Address(RVA = "0xCBDB80", Offset = "0xCBDB80", VA = "0xCBDB80", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Text dateText;

	[Token(Token = "0x40007B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AnimationCurve fadeCurve;

	[Token(Token = "0x600098A")]
	[Address(RVA = "0xCBD6F0", Offset = "0xCBD6F0", VA = "0xCBD6F0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x87D0AC", Offset = "0x87D0AC")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600098B")]
	[Address(RVA = "0xCBD78C", Offset = "0xCBD78C", VA = "0xCBD78C")]
	public BuildDateDrawer()
	{
	}
}
[Token(Token = "0x20001B7")]
public class DraggableScrollRectItem : MonoBehaviour, IDraggable
{
	[Token(Token = "0x40007B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ScrollRect scrollRect;

	[Token(Token = "0x40007B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 dragPos;

	[Token(Token = "0x40007BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 dragPosLast;

	[Token(Token = "0x40007BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool dragged;

	[Token(Token = "0x40007BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Plane forwardPlane;

	[Token(Token = "0x40007BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float velocityMultiplier;

	[Token(Token = "0x6000992")]
	[Address(RVA = "0xAED098", Offset = "0xAED098", VA = "0xAED098")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000993")]
	[Address(RVA = "0xAED1B8", Offset = "0xAED1B8", VA = "0xAED1B8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000994")]
	[Address(RVA = "0xAED2AC", Offset = "0xAED2AC", VA = "0xAED2AC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000995")]
	[Address(RVA = "0xAED420", Offset = "0xAED420", VA = "0xAED420", Slot = "4")]
	public bool DragStart(Vector3 position)
	{
		return default(bool);
	}

	[Token(Token = "0x6000996")]
	[Address(RVA = "0xAED4D4", Offset = "0xAED4D4", VA = "0xAED4D4", Slot = "5")]
	public bool Drag(Ray ray)
	{
		return default(bool);
	}

	[Token(Token = "0x6000997")]
	[Address(RVA = "0xAED754", Offset = "0xAED754", VA = "0xAED754", Slot = "6")]
	public void Release()
	{
	}

	[Token(Token = "0x6000998")]
	[Address(RVA = "0xAED638", Offset = "0xAED638", VA = "0xAED638")]
	private void DragScrollRect(Vector3 velocity)
	{
	}

	[Token(Token = "0x6000999")]
	[Address(RVA = "0xAED7CC", Offset = "0xAED7CC", VA = "0xAED7CC")]
	public DraggableScrollRectItem()
	{
	}
}
[Token(Token = "0x20001B8")]
public class FpsCounter : MonoBehaviour
{
	[Token(Token = "0x40007BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Text framesUI;

	[Token(Token = "0x40007BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Text secondsUI;

	[Token(Token = "0x40007C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float frameRate;

	[Token(Token = "0x40007C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Canvas vrCanvas;

	[Token(Token = "0x40007C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private bool enableWithButton;

	[Token(Token = "0x40007C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private PlayableDirector director;

	[Token(Token = "0x40007C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool isHidden;

	[Token(Token = "0x600099A")]
	[Address(RVA = "0xAF8760", Offset = "0xAF8760", VA = "0xAF8760")]
	private void Awake()
	{
	}

	[Token(Token = "0x600099B")]
	[Address(RVA = "0xAF8904", Offset = "0xAF8904", VA = "0xAF8904")]
	private void Update()
	{
	}

	[Token(Token = "0x600099C")]
	[Address(RVA = "0xAF8860", Offset = "0xAF8860", VA = "0xAF8860")]
	private void SetVRCanvasVisibility(bool state)
	{
	}

	[Token(Token = "0x600099D")]
	[Address(RVA = "0xAF8B98", Offset = "0xAF8B98", VA = "0xAF8B98")]
	public FpsCounter()
	{
	}
}
[Token(Token = "0x20001B9")]
public class GlobalAttachment : MonoBehaviour
{
	[Token(Token = "0x40007C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string objectToAttach;

	[Token(Token = "0x40007C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform attachedTo;

	[Token(Token = "0x600099E")]
	[Address(RVA = "0xAF8D48", Offset = "0xAF8D48", VA = "0xAF8D48")]
	private void Start()
	{
	}

	[Token(Token = "0x600099F")]
	[Address(RVA = "0xAF8E24", Offset = "0xAF8E24", VA = "0xAF8E24")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60009A0")]
	[Address(RVA = "0xAF8F38", Offset = "0xAF8F38", VA = "0xAF8F38")]
	private void AttemptToAttach()
	{
	}

	[Token(Token = "0x60009A1")]
	[Address(RVA = "0xAF90DC", Offset = "0xAF90DC", VA = "0xAF90DC")]
	public GlobalAttachment()
	{
	}
}
[Token(Token = "0x20001BA")]
public static class GlobalAttachmentsManager
{
	[Token(Token = "0x40007C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Dictionary<string, Transform> objectsToAttachTo;

	[Token(Token = "0x40007C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Action OnFillAttachments;

	[Token(Token = "0x40007C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Action OnCleanAttachments;

	[Token(Token = "0x60009A2")]
	[Address(RVA = "0xAF90E4", Offset = "0xAF90E4", VA = "0xAF90E4")]
	public static void AddAttachments(List<AttachmentData> attachments)
	{
	}

	[Token(Token = "0x60009A3")]
	[Address(RVA = "0xAF925C", Offset = "0xAF925C", VA = "0xAF925C")]
	public static void RemoveAttachments(List<AttachmentData> attachments)
	{
	}

	[Token(Token = "0x60009A4")]
	[Address(RVA = "0xAF8FA8", Offset = "0xAF8FA8", VA = "0xAF8FA8")]
	public static Transform GetAttachment(string sceneObject)
	{
		return null;
	}
}
[Token(Token = "0x20001BB")]
public class LightIntensityOverTime : MonoBehaviour
{
	[Token(Token = "0x20001BC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x870108", Offset = "0x870108")]
	private sealed class <FadeCoroutine>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LightIntensityOverTime <>4__this;

		[Token(Token = "0x40007DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <startTime>5__2;

		[Token(Token = "0x40007DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <currentTime>5__3;

		[Token(Token = "0x40007DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <initialIntensity>5__4;

		[Token(Token = "0x1700018F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009AF")]
			[Address(RVA = "0xB4ECAC", Offset = "0xB4ECAC", VA = "0xB4ECAC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000190")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009B1")]
			[Address(RVA = "0xB4ED14", Offset = "0xB4ED14", VA = "0xB4ED14", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009AC")]
		[Address(RVA = "0xB4EB14", Offset = "0xB4EB14", VA = "0xB4EB14")]
		[DebuggerHidden]
		public <FadeCoroutine>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x60009AD")]
		[Address(RVA = "0xB4EB68", Offset = "0xB4EB68", VA = "0xB4EB68", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009AE")]
		[Address(RVA = "0xB4EB6C", Offset = "0xB4EB6C", VA = "0xB4EB6C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009B0")]
		[Address(RVA = "0xB4ECB4", Offset = "0xB4ECB4", VA = "0xB4ECB4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Light light;

	[Token(Token = "0x40007CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool useCurve;

	[Token(Token = "0x40007CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AnimationCurve intensityCurve;

	[Token(Token = "0x40007CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float loopDuration;

	[Token(Token = "0x40007CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float minIntensity;

	[Token(Token = "0x40007CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float maxIntensity;

	[Token(Token = "0x40007D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private float amplitude;

	[Token(Token = "0x40007D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float frequency;

	[Token(Token = "0x40007D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private float offset;

	[Token(Token = "0x40007D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float timer;

	[Token(Token = "0x40007D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float t;

	[Token(Token = "0x40007D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool goingUp;

	[Token(Token = "0x40007D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool fading;

	[Token(Token = "0x40007D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float fadeDuration;

	[Token(Token = "0x60009A6")]
	[Address(RVA = "0xB4E794", Offset = "0xB4E794", VA = "0xB4E794")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009A7")]
	[Address(RVA = "0xB4E838", Offset = "0xB4E838", VA = "0xB4E838")]
	private void Start()
	{
	}

	[Token(Token = "0x60009A8")]
	[Address(RVA = "0xB4E900", Offset = "0xB4E900", VA = "0xB4E900")]
	private void Update()
	{
	}

	[Token(Token = "0x60009A9")]
	[Address(RVA = "0xB4EA70", Offset = "0xB4EA70", VA = "0xB4EA70")]
	private void FadeOut()
	{
	}

	[Token(Token = "0x60009AA")]
	[Address(RVA = "0xB4EAA4", Offset = "0xB4EAA4", VA = "0xB4EAA4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x87D160", Offset = "0x87D160")]
	private IEnumerator FadeCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60009AB")]
	[Address(RVA = "0xB4EB40", Offset = "0xB4EB40", VA = "0xB4EB40")]
	public LightIntensityOverTime()
	{
	}
}
[Token(Token = "0x20001BD")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x870118", Offset = "0x870118")]
[ExecuteInEditMode]
[DisallowMultipleComponent]
public class LightVolumetricBillboard : MonoBehaviour
{
	[Token(Token = "0x40007DE")]
	private const string SHADER_PATH = "Custom/Unlit/Volumetric Billboard";

	[Token(Token = "0x40007DF")]
	private const string NOISE_TEX = "_NoiseTex";

	[Token(Token = "0x40007E0")]
	private const string CLOUD_TEX = "_CloudTex";

	[Token(Token = "0x40007E1")]
	private const string COLOR = "_Color";

	[Token(Token = "0x40007E2")]
	private const string RANGE = "_Range";

	[Token(Token = "0x40007E3")]
	private const string INTENSITY = "_Intensity";

	[Token(Token = "0x40007E4")]
	private const string CLOUD_INTENSITY = "_CloudIntensity";

	[Token(Token = "0x40007E5")]
	private const string CLOUD_SCALE = "_CloudScale";

	[Token(Token = "0x40007E6")]
	private const string CLOUD_VELOCITY = "_CloudVelocity";

	[Token(Token = "0x40007E7")]
	private const string BILLBOARD_NAME = "LightVolumetricBillboardDestroyable";

	[Token(Token = "0x40007E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Texture noiseTex;

	[Token(Token = "0x40007E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Texture cloudTex;

	[Token(Token = "0x40007EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Shader _volumetricShader;

	[Token(Token = "0x40007EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x875D78", Offset = "0x875D78")]
	[SerializeField]
	private float cloudIntensity;

	[Token(Token = "0x40007EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float cloudScale;

	[Token(Token = "0x40007ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Vector2 cloudVelocity;

	[Token(Token = "0x40007EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Light light;

	[Token(Token = "0x40007EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject billboard;

	[Token(Token = "0x40007F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MeshRenderer renderer;

	[Token(Token = "0x40007F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MeshFilter meshFilter;

	[Token(Token = "0x40007F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Material material;

	[Token(Token = "0x40007F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MaterialPropertyBlock props;

	[Token(Token = "0x40007F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int noiseTexID;

	[Token(Token = "0x40007F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int cloudTexID;

	[Token(Token = "0x40007F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int colorID;

	[Token(Token = "0x40007F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int rangeID;

	[Token(Token = "0x40007F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int intensityID;

	[Token(Token = "0x40007F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int cloudIntensityID;

	[Token(Token = "0x40007FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int cloudScaleID;

	[Token(Token = "0x40007FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int cloudVelocityID;

	[Token(Token = "0x17000191")]
	private Shader VolumetricShader
	{
		[Token(Token = "0x60009B2")]
		[Address(RVA = "0xB4F6D0", Offset = "0xB4F6D0", VA = "0xB4F6D0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60009B3")]
	[Address(RVA = "0xB4F7EC", Offset = "0xB4F7EC", VA = "0xB4F7EC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009B4")]
	[Address(RVA = "0xB4FD50", Offset = "0xB4FD50", VA = "0xB4FD50")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60009B5")]
	[Address(RVA = "0xB4FDE4", Offset = "0xB4FDE4", VA = "0xB4FDE4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60009B6")]
	[Address(RVA = "0xB4FE78", Offset = "0xB4FE78", VA = "0xB4FE78")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60009B7")]
	[Address(RVA = "0xB5008C", Offset = "0xB5008C", VA = "0xB5008C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60009B8")]
	[Address(RVA = "0xB4F810", Offset = "0xB4F810", VA = "0xB4F810")]
	private void InitializeStaticTextures()
	{
	}

	[Token(Token = "0x60009B9")]
	[Address(RVA = "0xB4F91C", Offset = "0xB4F91C", VA = "0xB4F91C")]
	private void Initiallize()
	{
	}

	[Token(Token = "0x60009BA")]
	[Address(RVA = "0xB4FE7C", Offset = "0xB4FE7C", VA = "0xB4FE7C")]
	private void UpdateData()
	{
	}

	[Token(Token = "0x60009BB")]
	[Address(RVA = "0xB50194", Offset = "0xB50194", VA = "0xB50194")]
	private void UpdateMeshFilterBounds()
	{
	}

	[Token(Token = "0x60009BC")]
	[Address(RVA = "0xB50090", Offset = "0xB50090", VA = "0xB50090")]
	private void ClearData()
	{
	}

	[Token(Token = "0x60009BD")]
	[Address(RVA = "0xB5038C", Offset = "0xB5038C", VA = "0xB5038C")]
	private void EditorClearData()
	{
	}

	[Token(Token = "0x60009BE")]
	[Address(RVA = "0xB504C0", Offset = "0xB504C0", VA = "0xB504C0")]
	public LightVolumetricBillboard()
	{
	}
}
[Token(Token = "0x20001BE")]
[ExecuteInEditMode]
public class LookAtCamera : MonoBehaviour
{
	[Token(Token = "0x40007FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform target;

	[Token(Token = "0x60009BF")]
	[Address(RVA = "0xB54C70", Offset = "0xB54C70", VA = "0xB54C70")]
	private void Update()
	{
	}

	[Token(Token = "0x60009C0")]
	[Address(RVA = "0xB54E88", Offset = "0xB54E88", VA = "0xB54E88")]
	public LookAtCamera()
	{
	}
}
[Token(Token = "0x20001BF")]
[ExecuteInEditMode]
public class NormalVisualizer : MonoBehaviour
{
	[Token(Token = "0x40007FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Color gizmoColor;

	[Token(Token = "0x40007FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float gizmoSize;

	[Token(Token = "0x40007FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<Vector3> worldSpaceVertices;

	[Token(Token = "0x4000800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<Vector3> worldSpaceNormals;

	[Token(Token = "0x60009C1")]
	[Address(RVA = "0xF6E584", Offset = "0xF6E584", VA = "0xF6E584")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60009C2")]
	[Address(RVA = "0xF6E7F4", Offset = "0xF6E7F4", VA = "0xF6E7F4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60009C3")]
	[Address(RVA = "0xF6E730", Offset = "0xF6E730", VA = "0xF6E730")]
	private void ExtractNormalFromMesh(Mesh mesh, Transform transform)
	{
	}

	[Token(Token = "0x60009C4")]
	[Address(RVA = "0xF6E85C", Offset = "0xF6E85C", VA = "0xF6E85C")]
	private Vector3[] ConvertVerticesInWorldSpacePositions(Transform transform, Vector3[] vertices)
	{
		return null;
	}

	[Token(Token = "0x60009C5")]
	[Address(RVA = "0xF6EA54", Offset = "0xF6EA54", VA = "0xF6EA54")]
	private Vector3[] ConvertNormalsInWorldSpacePositions(Transform transform, Vector3[] normals)
	{
		return null;
	}

	[Token(Token = "0x60009C6")]
	[Address(RVA = "0xF6EBCC", Offset = "0xF6EBCC", VA = "0xF6EBCC")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60009C7")]
	[Address(RVA = "0xF6ED50", Offset = "0xF6ED50", VA = "0xF6ED50")]
	public NormalVisualizer()
	{
	}
}
[Token(Token = "0x20001C0")]
[ExecuteInEditMode]
public class PivotAttackment : MonoBehaviour
{
	[Token(Token = "0x4000801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform pivot;

	[Token(Token = "0x4000802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool rotateWithPivot;

	[Token(Token = "0x4000803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[HideInInspector]
	[SerializeField]
	private Vector3 positionOffset;

	[Token(Token = "0x4000804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	[SerializeField]
	private Vector3 rotationOffset;

	[Token(Token = "0x60009C8")]
	[Address(RVA = "0xB0C36C", Offset = "0xB0C36C", VA = "0xB0C36C")]
	private void SetPivot()
	{
	}

	[Token(Token = "0x60009C9")]
	[Address(RVA = "0xB0C478", Offset = "0xB0C478", VA = "0xB0C478")]
	private void Update()
	{
	}

	[Token(Token = "0x60009CA")]
	[Address(RVA = "0xB0C614", Offset = "0xB0C614", VA = "0xB0C614")]
	public PivotAttackment()
	{
	}
}
[Token(Token = "0x20001C1")]
public class RecorderHelper : MonoBehaviour
{
	[Token(Token = "0x60009CB")]
	[Address(RVA = "0xB0E168", Offset = "0xB0E168", VA = "0xB0E168")]
	private void Update()
	{
	}

	[Token(Token = "0x60009CC")]
	[Address(RVA = "0xB0E254", Offset = "0xB0E254", VA = "0xB0E254")]
	public RecorderHelper()
	{
	}
}
[Token(Token = "0x20001C2")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8701CC", Offset = "0x8701CC")]
[ExecuteInEditMode]
public class RimByLightFeeder : MonoBehaviour
{
	[Token(Token = "0x4000805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x875E98", Offset = "0x875E98")]
	private Light <Light>k__BackingField;

	[Token(Token = "0x17000192")]
	public Light Light
	{
		[Token(Token = "0x60009CD")]
		[Address(RVA = "0xB0F8F8", Offset = "0xB0F8F8", VA = "0xB0F8F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87D214", Offset = "0x87D214")]
		get
		{
			return null;
		}
		[Token(Token = "0x60009CE")]
		[Address(RVA = "0xB0F900", Offset = "0xB0F900", VA = "0xB0F900")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87D224", Offset = "0x87D224")]
		private set
		{
		}
	}

	[Token(Token = "0x60009CF")]
	[Address(RVA = "0xB0F908", Offset = "0xB0F908", VA = "0xB0F908")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60009D0")]
	[Address(RVA = "0xB0F9DC", Offset = "0xB0F9DC", VA = "0xB0F9DC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60009D1")]
	[Address(RVA = "0xB0FA60", Offset = "0xB0FA60", VA = "0xB0FA60")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60009D2")]
	[Address(RVA = "0xB0FA64", Offset = "0xB0FA64", VA = "0xB0FA64")]
	public RimByLightFeeder()
	{
	}
}
[Token(Token = "0x20001C3")]
[ExecuteInEditMode]
public class RimByLightFeederManager : MonoBehaviour
{
	[Token(Token = "0x4000806")]
	private const int ARRAYS_LENGTH = 4;

	[Token(Token = "0x4000807")]
	private const string COLORS = "_LightColors";

	[Token(Token = "0x4000808")]
	private const string POSITIONS = "_LightPositions";

	[Token(Token = "0x4000809")]
	private const string FORWARDS = "_LightForwards";

	[Token(Token = "0x400080A")]
	private const string LIGHTPARAMS = "_LightParams";

	[Token(Token = "0x400080B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static RimByLightFeederManager Instance;

	[Token(Token = "0x400080C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<RimByLightFeeder> feeders;

	[Token(Token = "0x400080D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector4[] colors;

	[Token(Token = "0x400080E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector4[] positions;

	[Token(Token = "0x400080F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector4[] forward;

	[Token(Token = "0x4000810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector4[] lightParams;

	[Token(Token = "0x60009D3")]
	[Address(RVA = "0xB0F964", Offset = "0xB0F964", VA = "0xB0F964")]
	public static void Subscribe(RimByLightFeeder feeder)
	{
	}

	[Token(Token = "0x60009D4")]
	[Address(RVA = "0xB0F9E0", Offset = "0xB0F9E0", VA = "0xB0F9E0")]
	public static void Unsubscribe(RimByLightFeeder feeder)
	{
	}

	[Token(Token = "0x60009D5")]
	[Address(RVA = "0xB0FA6C", Offset = "0xB0FA6C", VA = "0xB0FA6C")]
	private static void Initialize()
	{
	}

	[Token(Token = "0x60009D6")]
	[Address(RVA = "0xB0FB4C", Offset = "0xB0FB4C", VA = "0xB0FB4C")]
	private void Update()
	{
	}

	[Token(Token = "0x60009D7")]
	[Address(RVA = "0xB0FC00", Offset = "0xB0FC00", VA = "0xB0FC00")]
	private void ClearData()
	{
	}

	[Token(Token = "0x60009D8")]
	[Address(RVA = "0xB0FCAC", Offset = "0xB0FCAC", VA = "0xB0FCAC")]
	private void FillData()
	{
	}

	[Token(Token = "0x60009D9")]
	[Address(RVA = "0xB10114", Offset = "0xB10114", VA = "0xB10114")]
	private void Feed()
	{
	}

	[Token(Token = "0x60009DA")]
	[Address(RVA = "0xB101B0", Offset = "0xB101B0", VA = "0xB101B0")]
	public RimByLightFeederManager()
	{
	}
}
[Token(Token = "0x20001C4")]
[ExecuteInEditMode]
public class ScalerWithLights : MonoBehaviour
{
	[Token(Token = "0x4000811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x875EA8", Offset = "0x875EA8")]
	private float scale;

	[Token(Token = "0x4000812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	[SerializeField]
	private Light[] lights;

	[Token(Token = "0x4000813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	[SerializeField]
	private float[] ranges;

	[Token(Token = "0x60009DB")]
	[Address(RVA = "0xB13554", Offset = "0xB13554", VA = "0xB13554")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60009DC")]
	[Address(RVA = "0xB13648", Offset = "0xB13648", VA = "0xB13648")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60009DD")]
	[Address(RVA = "0xB13650", Offset = "0xB13650", VA = "0xB13650")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60009DE")]
	[Address(RVA = "0xB1376C", Offset = "0xB1376C", VA = "0xB1376C")]
	public ScalerWithLights()
	{
	}
}
[Token(Token = "0x20001C5")]
public class SignalPauseResumeTimeline : MonoBehaviour
{
	[Token(Token = "0x4000814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private PlayableDirector director;

	[Token(Token = "0x60009DF")]
	[Address(RVA = "0xB19478", Offset = "0xB19478", VA = "0xB19478")]
	public void PauseTimeline()
	{
	}

	[Token(Token = "0x60009E0")]
	[Address(RVA = "0xB19508", Offset = "0xB19508", VA = "0xB19508")]
	public void ResumeTimeline()
	{
	}

	[Token(Token = "0x60009E1")]
	[Address(RVA = "0xB19598", Offset = "0xB19598", VA = "0xB19598")]
	public SignalPauseResumeTimeline()
	{
	}
}
[Token(Token = "0x20001C6")]
public class TransformSaver : MonoBehaviour
{
	[Token(Token = "0x4000815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[HideInInspector]
	private Transform[] children;

	[Token(Token = "0x4000816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[HideInInspector]
	private Vector3[] localPositions;

	[Token(Token = "0x4000817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	[SerializeField]
	private Quaternion[] localRotations;

	[Token(Token = "0x4000818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	[SerializeField]
	private Vector3[] localScales;

	[Token(Token = "0x60009E2")]
	[Address(RVA = "0x155B2C4", Offset = "0x155B2C4", VA = "0x155B2C4")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x87D234", Offset = "0x87D234")]
	private void Save()
	{
	}

	[Token(Token = "0x60009E3")]
	[Address(RVA = "0x155B49C", Offset = "0x155B49C", VA = "0x155B49C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x87D26C", Offset = "0x87D26C")]
	private void Load()
	{
	}

	[Token(Token = "0x60009E4")]
	[Address(RVA = "0x155B660", Offset = "0x155B660", VA = "0x155B660")]
	public TransformSaver()
	{
	}
}
[Token(Token = "0x20001C7")]
[ExecuteInEditMode]
public class WindowsManager : MonoBehaviour
{
	[Token(Token = "0x20001C8")]
	private struct VertexData
	{
		[Token(Token = "0x4000823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int index;

		[Token(Token = "0x4000824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Vector3 position;
	}

	[Token(Token = "0x4000819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x87604C", Offset = "0x87604C")]
	private Renderer[] meshRenderers;

	[Token(Token = "0x400081A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private MeshFilter[] meshFilters;

	[Token(Token = "0x400081B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private SkinnedMeshRenderer[] skinnedMeshRenderers;

	[Token(Token = "0x400081C")]
	private const string VISIBILITY = "_VisibilityArray";

	[Token(Token = "0x400081D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private MaterialPropertyBlock props;

	[Token(Token = "0x400081E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int visibilityID;

	[Token(Token = "0x400081F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float[] windowsVisibility;

	[Token(Token = "0x4000820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private VertexData[][] meshFilterData;

	[Token(Token = "0x4000821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private VertexData[][] skinnedMeshRenderersData;

	[Token(Token = "0x4000822")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GUIStyle style;

	[Token(Token = "0x17000193")]
	private MaterialPropertyBlock Props
	{
		[Token(Token = "0x60009E5")]
		[Address(RVA = "0x155FE64", Offset = "0x155FE64", VA = "0x155FE64")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60009E6")]
	[Address(RVA = "0x155FED0", Offset = "0x155FED0", VA = "0x155FED0")]
	private void Update()
	{
	}

	[Token(Token = "0x60009E7")]
	[Address(RVA = "0x155FB1C", Offset = "0x155FB1C", VA = "0x155FB1C")]
	public void SetWindowsVisibility(byte index, float value)
	{
	}

	[Token(Token = "0x60009E8")]
	[Address(RVA = "0x155FFE8", Offset = "0x155FFE8", VA = "0x155FFE8")]
	public void ResetWindowsVisibility(bool visibility)
	{
	}

	[Token(Token = "0x60009E9")]
	[Address(RVA = "0x156004C", Offset = "0x156004C", VA = "0x156004C")]
	public WindowsManager()
	{
	}
}
[Token(Token = "0x20001C9")]
public class ApplicationManagerStartSceneSetter : MonoBehaviour
{
	[Token(Token = "0x4000825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SceneNames startScene;

	[Token(Token = "0x60009EA")]
	[Address(RVA = "0xCBA6EC", Offset = "0xCBA6EC", VA = "0xCBA6EC")]
	public void SetStartScene()
	{
	}

	[Token(Token = "0x60009EB")]
	[Address(RVA = "0xCBA7EC", Offset = "0xCBA7EC", VA = "0xCBA7EC")]
	public ApplicationManagerStartSceneSetter()
	{
	}
}
[Token(Token = "0x20001CA")]
public class CurvedUIHandler : UIHandler
{
	[Token(Token = "0x4000826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static CurvedUIHandler dominantHandler;

	[Token(Token = "0x60009EC")]
	[Address(RVA = "0xAE8074", Offset = "0xAE8074", VA = "0xAE8074", Slot = "6")]
	public override void ButtonState(bool state)
	{
	}

	[Token(Token = "0x60009ED")]
	[Address(RVA = "0xAE81B0", Offset = "0xAE81B0", VA = "0xAE81B0", Slot = "5")]
	public override void Raycast(Ray ray)
	{
	}

	[Token(Token = "0x60009EE")]
	[Address(RVA = "0xAE8330", Offset = "0xAE8330", VA = "0xAE8330", Slot = "4")]
	public override void SetDominance(bool isDominant)
	{
	}

	[Token(Token = "0x60009EF")]
	[Address(RVA = "0xAE83DC", Offset = "0xAE83DC", VA = "0xAE83DC")]
	public CurvedUIHandler()
	{
	}
}
[Token(Token = "0x20001CB")]
public class MaterialFader : MonoBehaviour
{
	[Token(Token = "0x20001CC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x870270", Offset = "0x870270")]
	private sealed class <FadeCoroutine>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400082E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400082F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool fadein;

		[Token(Token = "0x4000831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MaterialFader <>4__this;

		[Token(Token = "0x4000832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <startTime>5__2;

		[Token(Token = "0x4000833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <currentTime>5__3;

		[Token(Token = "0x17000194")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009FD")]
			[Address(RVA = "0xB5781C", Offset = "0xB5781C", VA = "0xB5781C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000195")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009FF")]
			[Address(RVA = "0xB57884", Offset = "0xB57884", VA = "0xB57884", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009FA")]
		[Address(RVA = "0xB574EC", Offset = "0xB574EC", VA = "0xB574EC")]
		[DebuggerHidden]
		public <FadeCoroutine>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x60009FB")]
		[Address(RVA = "0xB575DC", Offset = "0xB575DC", VA = "0xB575DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009FC")]
		[Address(RVA = "0xB575E0", Offset = "0xB575E0", VA = "0xB575E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009FE")]
		[Address(RVA = "0xB57824", Offset = "0xB57824", VA = "0xB57824", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000827")]
	private const string COLOR = "_Color";

	[Token(Token = "0x4000828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float fadeTime;

	[Token(Token = "0x4000829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private bool turnOffAfterFadeOut;

	[Token(Token = "0x400082A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Color colorFade0;

	[Token(Token = "0x400082B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Color colorFade1;

	[Token(Token = "0x400082C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<Material> materials;

	[Token(Token = "0x400082D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Coroutine fadeCoroutine;

	[Token(Token = "0x60009F0")]
	[Address(RVA = "0xB57224", Offset = "0xB57224", VA = "0xB57224")]
	public void AddMaterial(Material material)
	{
	}

	[Token(Token = "0x60009F1")]
	[Address(RVA = "0xB5728C", Offset = "0xB5728C", VA = "0xB5728C")]
	public void AddMaterials(List<Material> materials)
	{
	}

	[Token(Token = "0x60009F2")]
	[Address(RVA = "0xB572F4", Offset = "0xB572F4", VA = "0xB572F4")]
	public void SetFader(float newTime, Color color0, Color color1)
	{
	}

	[Token(Token = "0x60009F3")]
	[Address(RVA = "0xB5730C", Offset = "0xB5730C", VA = "0xB5730C")]
	public void SetFader(float newTime, Color color0)
	{
	}

	[Token(Token = "0x60009F4")]
	[Address(RVA = "0xB5731C", Offset = "0xB5731C", VA = "0xB5731C")]
	public void ResetMaterials()
	{
	}

	[Token(Token = "0x60009F5")]
	[Address(RVA = "0xB573C8", Offset = "0xB573C8", VA = "0xB573C8")]
	public void FadeIn()
	{
	}

	[Token(Token = "0x60009F6")]
	[Address(RVA = "0xB57460", Offset = "0xB57460", VA = "0xB57460")]
	public void FadeOut()
	{
	}

	[Token(Token = "0x60009F7")]
	[Address(RVA = "0xB573D0", Offset = "0xB573D0", VA = "0xB573D0")]
	private void Fade(bool fadein)
	{
	}

	[Token(Token = "0x60009F8")]
	[Address(RVA = "0xB57468", Offset = "0xB57468", VA = "0xB57468")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x87D2A4", Offset = "0x87D2A4")]
	private IEnumerator FadeCoroutine(bool fadein)
	{
		return null;
	}

	[Token(Token = "0x60009F9")]
	[Address(RVA = "0xB57518", Offset = "0xB57518", VA = "0xB57518")]
	public MaterialFader()
	{
	}
}
[Token(Token = "0x20001CD")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x870280", Offset = "0x870280")]
public class PauseMenu : MonoBehaviour
{
	[Token(Token = "0x20001CE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8702E4", Offset = "0x8702E4")]
	private sealed class <>c__DisplayClass34_0
	{
		[Token(Token = "0x400084B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SceneDataDrawer.SceneData currentSceneData;

		[Token(Token = "0x6000A12")]
		[Address(RVA = "0xB0C0CC", Offset = "0xB0C0CC", VA = "0xB0C0CC")]
		public <>c__DisplayClass34_0()
		{
		}

		[Token(Token = "0x6000A13")]
		[Address(RVA = "0xB0C30C", Offset = "0xB0C30C", VA = "0xB0C30C")]
		internal bool <GetSceneIndex>b__0(PauseMenuButton x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000834")]
	private const string ALPHA_VECTOR = "_AlphaVec";

	[Token(Token = "0x4000835")]
	private const string ALPHA_SCROLL = "_AlphaScroll";

	[Token(Token = "0x4000836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PauseMenu Instance;

	[Token(Token = "0x4000837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool isInMainMenu;

	[Token(Token = "0x4000838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private JumpToSceneData[] scenes;

	[Token(Token = "0x4000839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private PauseMenuButton pauseMenuButtonPrefab;

	[Token(Token = "0x400083A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private RectTransform contentRect;

	[Token(Token = "0x400083B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private RectTransform scrollRect;

	[Token(Token = "0x400083C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x876158", Offset = "0x876158")]
	private float scrollRectWidthChildMultiplier;

	[Token(Token = "0x400083D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private RectTransform.Axis axis;

	[Token(Token = "0x400083E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Transform positionTarget;

	[Token(Token = "0x400083F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool lastInteractionStateLeft;

	[Token(Token = "0x4000840")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool lastInteractionStateRight;

	[Token(Token = "0x4000841")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private HandVisibilityState lastVisibilityStateLeft;

	[Token(Token = "0x4000842")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private HandVisibilityState lastVisibilityStateRight;

	[Token(Token = "0x4000843")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool isInitialized;

	[Token(Token = "0x4000844")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<PauseMenuButton> sceneButtons;

	[Token(Token = "0x4000845")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<Material> materials;

	[Token(Token = "0x4000846")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<ScrollRectContetSizer> contentSizers;

	[Token(Token = "0x4000847")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int alphaVecID;

	[Token(Token = "0x4000848")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private int scrollIndexID;

	[Token(Token = "0x4000849")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private MaterialFader materialFader;

	[Token(Token = "0x400084A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private TextMeshFader textMeshFader;

	[Token(Token = "0x6000A00")]
	[Address(RVA = "0xB0A3C0", Offset = "0xB0A3C0", VA = "0xB0A3C0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A01")]
	[Address(RVA = "0xB0A82C", Offset = "0xB0A82C", VA = "0xB0A82C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A02")]
	[Address(RVA = "0xB0AD00", Offset = "0xB0AD00", VA = "0xB0AD00")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000A03")]
	[Address(RVA = "0xB0A4B8", Offset = "0xB0A4B8", VA = "0xB0A4B8")]
	public void Init()
	{
	}

	[Token(Token = "0x6000A04")]
	[Address(RVA = "0xB0AD04", Offset = "0xB0AD04", VA = "0xB0AD04")]
	public void Shutdown()
	{
	}

	[Token(Token = "0x6000A05")]
	[Address(RVA = "0xB0AEE0", Offset = "0xB0AEE0", VA = "0xB0AEE0")]
	private void InstantiateSceneButtons()
	{
	}

	[Token(Token = "0x6000A06")]
	[Address(RVA = "0xB0B4DC", Offset = "0xB0B4DC", VA = "0xB0B4DC")]
	private void ApplicationPaused(PauseReason reason)
	{
	}

	[Token(Token = "0x6000A07")]
	[Address(RVA = "0xB0B7C8", Offset = "0xB0B7C8", VA = "0xB0B7C8")]
	private void ApplicationResumed(PauseReason reason)
	{
	}

	[Token(Token = "0x6000A08")]
	[Address(RVA = "0xB0B4E8", Offset = "0xB0B4E8", VA = "0xB0B4E8")]
	private void Enable()
	{
	}

	[Token(Token = "0x6000A09")]
	[Address(RVA = "0xB0BDD0", Offset = "0xB0BDD0", VA = "0xB0BDD0")]
	private void SetContentPosition(float sceneIndex)
	{
	}

	[Token(Token = "0x6000A0A")]
	[Address(RVA = "0xB0BEF0", Offset = "0xB0BEF0", VA = "0xB0BEF0")]
	private void SetButtonHighlight(int sceneIndex)
	{
	}

	[Token(Token = "0x6000A0B")]
	[Address(RVA = "0xB0BB78", Offset = "0xB0BB78", VA = "0xB0BB78")]
	private int GetSceneIndex()
	{
		return default(int);
	}

	[Token(Token = "0x6000A0C")]
	[Address(RVA = "0xB0BA8C", Offset = "0xB0BA8C", VA = "0xB0BA8C")]
	private void SetPositionAndRotation()
	{
	}

	[Token(Token = "0x6000A0D")]
	[Address(RVA = "0xB0B7D8", Offset = "0xB0B7D8", VA = "0xB0B7D8")]
	private void Disable(bool fadeOut = true)
	{
	}

	[Token(Token = "0x6000A0E")]
	[Address(RVA = "0xB0B258", Offset = "0xB0B258", VA = "0xB0B258")]
	private void SetWidth(RectTransform rect, float childWidth, float childMultiplier)
	{
	}

	[Token(Token = "0x6000A0F")]
	[Address(RVA = "0xB0ABB0", Offset = "0xB0ABB0", VA = "0xB0ABB0")]
	private void SetScrollRectPosition()
	{
	}

	[Token(Token = "0x6000A10")]
	[Address(RVA = "0xB0C0D4", Offset = "0xB0C0D4", VA = "0xB0C0D4")]
	public void GoToScene(JumpToSceneData sceneData)
	{
	}

	[Token(Token = "0x6000A11")]
	[Address(RVA = "0xB0C244", Offset = "0xB0C244", VA = "0xB0C244")]
	public PauseMenu()
	{
	}
}
[Token(Token = "0x20001CF")]
public class TextMeshFader : MonoBehaviour
{
	[Token(Token = "0x20001D0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8702F4", Offset = "0x8702F4")]
	private sealed class <FadeCoroutine>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool fadein;

		[Token(Token = "0x4000855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextMeshFader <>4__this;

		[Token(Token = "0x4000856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <startTime>5__2;

		[Token(Token = "0x4000857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <currentTime>5__3;

		[Token(Token = "0x17000196")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A22")]
			[Address(RVA = "0xB21D7C", Offset = "0xB21D7C", VA = "0xB21D7C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000197")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A24")]
			[Address(RVA = "0xB21DE4", Offset = "0xB21DE4", VA = "0xB21DE4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A1F")]
		[Address(RVA = "0xB21A50", Offset = "0xB21A50", VA = "0xB21A50")]
		[DebuggerHidden]
		public <FadeCoroutine>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6000A20")]
		[Address(RVA = "0xB21B40", Offset = "0xB21B40", VA = "0xB21B40", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A21")]
		[Address(RVA = "0xB21B44", Offset = "0xB21B44", VA = "0xB21B44", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A23")]
		[Address(RVA = "0xB21D84", Offset = "0xB21D84", VA = "0xB21D84", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400084C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float fadeTime;

	[Token(Token = "0x400084D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private bool turnOffAfterFadeOut;

	[Token(Token = "0x400084E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Color colorFade0;

	[Token(Token = "0x400084F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Color colorFade1;

	[Token(Token = "0x4000850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<TMP_Text> textMeshes;

	[Token(Token = "0x4000851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Coroutine fadeCoroutine;

	[Token(Token = "0x6000A14")]
	[Address(RVA = "0xB21724", Offset = "0xB21724", VA = "0xB21724")]
	public void AddMaterial(TMP_Text text)
	{
	}

	[Token(Token = "0x6000A15")]
	[Address(RVA = "0xB2178C", Offset = "0xB2178C", VA = "0xB2178C")]
	public void AddMaterials(List<TMP_Text> texts)
	{
	}

	[Token(Token = "0x6000A16")]
	[Address(RVA = "0xB217F4", Offset = "0xB217F4", VA = "0xB217F4")]
	public void AddMaterials(TMP_Text[] texts)
	{
	}

	[Token(Token = "0x6000A17")]
	[Address(RVA = "0xB2185C", Offset = "0xB2185C", VA = "0xB2185C")]
	public void SetFader(float newTime, Color color0, Color color1)
	{
	}

	[Token(Token = "0x6000A18")]
	[Address(RVA = "0xB21874", Offset = "0xB21874", VA = "0xB21874")]
	public void SetFader(float newTime, Color color0)
	{
	}

	[Token(Token = "0x6000A19")]
	[Address(RVA = "0xB21884", Offset = "0xB21884", VA = "0xB21884")]
	public void ResetMaterials()
	{
	}

	[Token(Token = "0x6000A1A")]
	[Address(RVA = "0xB2192C", Offset = "0xB2192C", VA = "0xB2192C")]
	public void FadeIn()
	{
	}

	[Token(Token = "0x6000A1B")]
	[Address(RVA = "0xB219C4", Offset = "0xB219C4", VA = "0xB219C4")]
	public void FadeOut()
	{
	}

	[Token(Token = "0x6000A1C")]
	[Address(RVA = "0xB21934", Offset = "0xB21934", VA = "0xB21934")]
	private void Fade(bool fadein)
	{
	}

	[Token(Token = "0x6000A1D")]
	[Address(RVA = "0xB219CC", Offset = "0xB219CC", VA = "0xB219CC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x87D358", Offset = "0x87D358")]
	private IEnumerator FadeCoroutine(bool fadein)
	{
		return null;
	}

	[Token(Token = "0x6000A1E")]
	[Address(RVA = "0xB21A7C", Offset = "0xB21A7C", VA = "0xB21A7C")]
	public TextMeshFader()
	{
	}
}
[Token(Token = "0x20001D1")]
public class AnimatorEventListener : MonoBehaviour
{
	[Token(Token = "0x4000858")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<string, UnityEvent> events;

	[Token(Token = "0x6000A25")]
	[Address(RVA = "0xCB9B34", Offset = "0xCB9B34", VA = "0xCB9B34")]
	public UnityEvent GetEvent(string eventName)
	{
		return null;
	}

	[Token(Token = "0x6000A26")]
	[Address(RVA = "0xCB9C20", Offset = "0xCB9C20", VA = "0xCB9C20")]
	public void ClearEvents()
	{
	}

	[Token(Token = "0x6000A27")]
	[Address(RVA = "0xCB9C78", Offset = "0xCB9C78", VA = "0xCB9C78")]
	public void TriggerEvent(string eventName)
	{
	}

	[Token(Token = "0x6000A28")]
	[Address(RVA = "0xCB9C9C", Offset = "0xCB9C9C", VA = "0xCB9C9C")]
	public AnimatorEventListener()
	{
	}
}
[Token(Token = "0x20001D2")]
public static class FileUtils
{
	[Token(Token = "0x6000A29")]
	public static void WriteFile<T>(string path, T file) where T : new()
	{
	}

	[Token(Token = "0x6000A2A")]
	public static T LoadOrCreateFile<T>(string path) where T : new()
	{
		return (T)null;
	}

	[Token(Token = "0x6000A2B")]
	public static void CreateFile<T>(string path) where T : new()
	{
	}
}
[Token(Token = "0x20001D3")]
public static class GameFiles
{
	[Token(Token = "0x4000859")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string FILES_DIRECTORY;

	[Token(Token = "0x400085A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string ANDROID_FILES_DIRECTORY;

	[Token(Token = "0x400085B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Dictionary<string, object> files;

	[Token(Token = "0x6000A2C")]
	public static void RegisterFile<T>(string fileName) where T : class, new()
	{
	}

	[Token(Token = "0x6000A2D")]
	public static T Get<T>(string fileName) where T : class, new()
	{
		return null;
	}

	[Token(Token = "0x6000A2E")]
	[Address(RVA = "0xAF8BA8", Offset = "0xAF8BA8", VA = "0xAF8BA8")]
	private static string GetFilesDirectory()
	{
		return null;
	}
}
[Token(Token = "0x20001D4")]
public static class Json
{
	[Token(Token = "0x6000A30")]
	public static T FromJson<T>(string json)
	{
		return (T)null;
	}

	[Token(Token = "0x6000A31")]
	[Address(RVA = "0xB4B830", Offset = "0xB4B830", VA = "0xB4B830")]
	public static string ToJson(object obj)
	{
		return null;
	}
}
[Token(Token = "0x20001D5")]
public class AutomaticMovement : MonoBehaviour
{
	[Token(Token = "0x20001D6")]
	public enum CircularMovementType
	{
		[Token(Token = "0x4000865")]
		XYMovement,
		[Token(Token = "0x4000866")]
		XZMovement
	}

	[Token(Token = "0x400085C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool automaticMovement;

	[Token(Token = "0x400085D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[SerializeField]
	private bool circularMovement;

	[Token(Token = "0x400085E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private CircularMovementType circularType;

	[Token(Token = "0x400085F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool linearMovement;

	[Token(Token = "0x4000860")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float amplitude;

	[Token(Token = "0x4000861")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float baseFrequency;

	[Token(Token = "0x4000862")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float linearSpeed;

	[Token(Token = "0x4000863")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float internalTimer;

	[Token(Token = "0x6000A32")]
	[Address(RVA = "0xCBB55C", Offset = "0xCBB55C", VA = "0xCBB55C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A33")]
	[Address(RVA = "0xCBB7E8", Offset = "0xCBB7E8", VA = "0xCBB7E8")]
	public AutomaticMovement()
	{
	}
}
[Token(Token = "0x20001D7")]
public class BoidBirds : MonoBehaviour
{
	[Token(Token = "0x4000867")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private BoidBirdsData data;

	[Token(Token = "0x4000868")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 position;

	[Token(Token = "0x4000869")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 velocity;

	[Token(Token = "0x400086A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 acceleration;

	[Token(Token = "0x400086B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 wanderTarget;

	[Token(Token = "0x17000198")]
	public Vector3 Position
	{
		[Token(Token = "0x6000A34")]
		[Address(RVA = "0xCBB80C", Offset = "0xCBB80C", VA = "0xCBB80C")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000199")]
	public BoidBirdsData Config
	{
		[Token(Token = "0x6000A35")]
		[Address(RVA = "0xCBB818", Offset = "0xCBB818", VA = "0xCBB818")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A36")]
		[Address(RVA = "0xCBB820", Offset = "0xCBB820", VA = "0xCBB820")]
		set
		{
		}
	}

	[Token(Token = "0x6000A37")]
	[Address(RVA = "0xCBB828", Offset = "0xCBB828", VA = "0xCBB828")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A38")]
	[Address(RVA = "0xCBB900", Offset = "0xCBB900", VA = "0xCBB900")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A39")]
	[Address(RVA = "0xCBB82C", Offset = "0xCBB82C", VA = "0xCBB82C")]
	private void InternalSetUp()
	{
	}

	[Token(Token = "0x6000A3A")]
	[Address(RVA = "0xCBBBB0", Offset = "0xCBBBB0", VA = "0xCBBBB0")]
	private Vector3 GetCombinedBehaviours()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000A3B")]
	[Address(RVA = "0xCBBDE0", Offset = "0xCBBDE0", VA = "0xCBBDE0")]
	private Vector3 GetCohesionValue()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000A3C")]
	[Address(RVA = "0xCBC010", Offset = "0xCBC010", VA = "0xCBC010")]
	private Vector3 GetSeparationDirection()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000A3D")]
	[Address(RVA = "0xCBC29C", Offset = "0xCBC29C", VA = "0xCBC29C")]
	private Vector3 GetAlignmentDirection()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000A3E")]
	[Address(RVA = "0xCBC48C", Offset = "0xCBC48C", VA = "0xCBC48C")]
	private Vector3 GetWanderDirection()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000A3F")]
	[Address(RVA = "0xCBC898", Offset = "0xCBC898", VA = "0xCBC898")]
	private bool IsInFieldOfView(Vector3 groupBirdPosition)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A40")]
	[Address(RVA = "0xCBBD90", Offset = "0xCBBD90", VA = "0xCBBD90")]
	private void wrapAround(ref Vector3 v, Vector3 boundsMax)
	{
	}

	[Token(Token = "0x6000A41")]
	[Address(RVA = "0xCBC97C", Offset = "0xCBC97C", VA = "0xCBC97C")]
	private float wrapAroundFloat(float value, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x6000A42")]
	[Address(RVA = "0xCBC998", Offset = "0xCBC998", VA = "0xCBC998")]
	public BoidBirds()
	{
	}
}
[Token(Token = "0x20001D8")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x870304", Offset = "0x870304")]
public class BoidBirdsData : ScriptableObject
{
	[Token(Token = "0x400086C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float cohesionNeighbourRadius;

	[Token(Token = "0x400086D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float separationNeighbourRadius;

	[Token(Token = "0x400086E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float alignmentNeighbourRadius;

	[Token(Token = "0x400086F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float wanderNeighbourRadius;

	[Token(Token = "0x4000870")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float cohesionInfluence;

	[Token(Token = "0x4000871")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float separationInfluence;

	[Token(Token = "0x4000872")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float alignmentInfluence;

	[Token(Token = "0x4000873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float wanderInfluence;

	[Token(Token = "0x4000874")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float maxAcceleration;

	[Token(Token = "0x4000875")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float maxVelocity;

	[Token(Token = "0x4000876")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float randomVelocityMagnitude;

	[Token(Token = "0x4000877")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool useFOV;

	[Token(Token = "0x4000878")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float fovAngle;

	[Token(Token = "0x4000879")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float wanderDistance;

	[Token(Token = "0x400087A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float wanderJitter;

	[Token(Token = "0x6000A43")]
	[Address(RVA = "0xCBC9A0", Offset = "0xCBC9A0", VA = "0xCBC9A0")]
	public BoidBirdsData()
	{
	}
}
[Token(Token = "0x20001D9")]
public class BoidBirdsManager : SerializedMonoBehaviour
{
	[Token(Token = "0x400087B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private BoidBirds boidBirdPrefab;

	[Token(Token = "0x400087C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Collider spawnCollider;

	[Token(Token = "0x400087D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Dictionary<BoidBirdsData, int> birdsConfigurations;

	[Token(Token = "0x400087E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private int amountOfSpawns;

	[Token(Token = "0x400087F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static BoidBirdsManager Instance;

	[Token(Token = "0x4000880")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<BoidBirds> spawnedAgents;

	[Token(Token = "0x6000A44")]
	[Address(RVA = "0xCBC9A8", Offset = "0xCBC9A8", VA = "0xCBC9A8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A45")]
	[Address(RVA = "0xCBCA74", Offset = "0xCBCA74", VA = "0xCBCA74")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A46")]
	[Address(RVA = "0xCBCA78", Offset = "0xCBCA78", VA = "0xCBCA78")]
	private void Spawn()
	{
	}

	[Token(Token = "0x6000A47")]
	[Address(RVA = "0xCBC678", Offset = "0xCBC678", VA = "0xCBC678")]
	public List<BoidBirds> GetNeighbours(BoidBirds agent, float radius)
	{
		return null;
	}

	[Token(Token = "0x6000A48")]
	[Address(RVA = "0xCBBD3C", Offset = "0xCBBD3C", VA = "0xCBBD3C")]
	public Vector3 GetMaxBounds()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000A49")]
	[Address(RVA = "0xCBCEC0", Offset = "0xCBCEC0", VA = "0xCBCEC0")]
	public BoidBirdsManager()
	{
	}
}
[Token(Token = "0x20001DA")]
public class CircleTracker : MonoBehaviour
{
	[Token(Token = "0x4000881")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8762B4", Offset = "0x8762B4")]
	[SerializeField]
	private float maxTimeToStorePosition;

	[Token(Token = "0x4000882")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float circleMinLength;

	[Token(Token = "0x4000883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float circleDrawingTreshHold;

	[Token(Token = "0x4000884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LinkedList<(Vector3, float)> positionNodes;

	[Token(Token = "0x6000A4A")]
	[Address(RVA = "0xB5A53C", Offset = "0xB5A53C", VA = "0xB5A53C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A4B")]
	[Address(RVA = "0xB5A620", Offset = "0xB5A620", VA = "0xB5A620")]
	private void TrimPositions()
	{
	}

	[Token(Token = "0x6000A4C")]
	[Address(RVA = "0xB5A6D4", Offset = "0xB5A6D4", VA = "0xB5A6D4")]
	private void CheckIfACircleWasDrawn()
	{
	}

	[Token(Token = "0x6000A4D")]
	[Address(RVA = "0xB5AB68", Offset = "0xB5AB68", VA = "0xB5AB68")]
	private float CheckCircleLength(LinkedListNode<(Vector3, float)> currentNode)
	{
		return default(float);
	}

	[Token(Token = "0x6000A4E")]
	[Address(RVA = "0xB5AC74", Offset = "0xB5AC74", VA = "0xB5AC74")]
	private int GetAmountOfPositionInCircle(LinkedListNode<(Vector3, float)> currentNode)
	{
		return default(int);
	}

	[Token(Token = "0x6000A4F")]
	[Address(RVA = "0xB5ACFC", Offset = "0xB5ACFC", VA = "0xB5ACFC")]
	private List<Vector3> GetQuarterPositions(LinkedListNode<(Vector3, float)> currentNode, int amountOfNodes)
	{
		return null;
	}

	[Token(Token = "0x6000A50")]
	[Address(RVA = "0xB5ADFC", Offset = "0xB5ADFC", VA = "0xB5ADFC")]
	public Vector3 GetLastDifferentPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000A51")]
	[Address(RVA = "0xB5AF1C", Offset = "0xB5AF1C", VA = "0xB5AF1C")]
	public Vector3 GetLastDifferentPosition(float time)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000A52")]
	[Address(RVA = "0xB5AFDC", Offset = "0xB5AFDC", VA = "0xB5AFDC")]
	public CircleTracker()
	{
	}
}
[Token(Token = "0x20001DB")]
[ExecuteInEditMode]
public class EasterEggHandler : MonoBehaviour
{
	[Token(Token = "0x4000885")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float visibilityRadius;

	[Token(Token = "0x4000886")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject[] hidden;

	[Token(Token = "0x4000887")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform origin;

	[Token(Token = "0x4000888")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float visibilityRadiusSqr;

	[Token(Token = "0x6000A53")]
	[Address(RVA = "0xAEE948", Offset = "0xAEE948", VA = "0xAEE948")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A54")]
	[Address(RVA = "0xAEE9BC", Offset = "0xAEE9BC", VA = "0xAEE9BC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A55")]
	[Address(RVA = "0xAEEBBC", Offset = "0xAEEBBC", VA = "0xAEEBBC")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000A56")]
	[Address(RVA = "0xAEEC58", Offset = "0xAEEC58", VA = "0xAEEC58")]
	public EasterEggHandler()
	{
	}
}
[Token(Token = "0x20001DC")]
public class Exit : MonoBehaviour
{
	[Token(Token = "0x4000889")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool goBackToMenuOnExit;

	[Token(Token = "0x400088A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[SerializeField]
	private bool exitPlaymodeOnEditor;

	[Token(Token = "0x6000A57")]
	[Address(RVA = "0xAF3B80", Offset = "0xAF3B80", VA = "0xAF3B80")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A58")]
	[Address(RVA = "0xAF3C5C", Offset = "0xAF3C5C", VA = "0xAF3C5C")]
	private void GoBackToMenu()
	{
	}

	[Token(Token = "0x6000A59")]
	[Address(RVA = "0xAF3CC0", Offset = "0xAF3CC0", VA = "0xAF3CC0")]
	public void ExitApplication()
	{
	}

	[Token(Token = "0x6000A5A")]
	[Address(RVA = "0xAF3D8C", Offset = "0xAF3D8C", VA = "0xAF3D8C")]
	public Exit()
	{
	}
}
[Token(Token = "0x20001DD")]
public class HandHitParticlesExpansionInteraction : MonoBehaviour, IInteraction
{
	[Token(Token = "0x20001DE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x870360", Offset = "0x870360")]
	private sealed class <ExpansionRoutine>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandHitParticlesExpansionInteraction <>4__this;

		[Token(Token = "0x4000897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int index;

		[Token(Token = "0x4000898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <timer>5__2;

		[Token(Token = "0x1700019A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A64")]
			[Address(RVA = "0xB44D30", Offset = "0xB44D30", VA = "0xB44D30", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A66")]
			[Address(RVA = "0xB44D98", Offset = "0xB44D98", VA = "0xB44D98", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A61")]
		[Address(RVA = "0xB44AE4", Offset = "0xB44AE4", VA = "0xB44AE4")]
		[DebuggerHidden]
		public <ExpansionRoutine>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6000A62")]
		[Address(RVA = "0xB44BAC", Offset = "0xB44BAC", VA = "0xB44BAC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A63")]
		[Address(RVA = "0xB44BB0", Offset = "0xB44BB0", VA = "0xB44BB0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A65")]
		[Address(RVA = "0xB44D38", Offset = "0xB44D38", VA = "0xB44D38", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400088B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ParticleSystem particlesPrefab;

	[Token(Token = "0x400088C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float delayBetweenActivations;

	[Token(Token = "0x400088D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AnimationCurve incrementCurve;

	[Token(Token = "0x400088E")]
	private const int LENGTH = 2;

	[Token(Token = "0x400088F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float timerBetweenActivations;

	[Token(Token = "0x4000890")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float maxTimer;

	[Token(Token = "0x4000891")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int index;

	[Token(Token = "0x4000892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ParticleSystem[] particles;

	[Token(Token = "0x4000893")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Coroutine[] sizeCoroutines;

	[Token(Token = "0x6000A5B")]
	[Address(RVA = "0xB444BC", Offset = "0xB444BC", VA = "0xB444BC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A5C")]
	[Address(RVA = "0xB444F4", Offset = "0xB444F4", VA = "0xB444F4", Slot = "4")]
	public void Play()
	{
	}

	[Token(Token = "0x6000A5D")]
	[Address(RVA = "0xB44754", Offset = "0xB44754", VA = "0xB44754", Slot = "5")]
	public void ShutDown()
	{
	}

	[Token(Token = "0x6000A5E")]
	[Address(RVA = "0xB44858", Offset = "0xB44858", VA = "0xB44858")]
	public void ActivateHandHitParticleExpansion(Vector3 position)
	{
	}

	[Token(Token = "0x6000A5F")]
	[Address(RVA = "0xB44A64", Offset = "0xB44A64", VA = "0xB44A64")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x87D40C", Offset = "0x87D40C")]
	private IEnumerator ExpansionRoutine(int index)
	{
		return null;
	}

	[Token(Token = "0x6000A60")]
	[Address(RVA = "0xB44B10", Offset = "0xB44B10", VA = "0xB44B10")]
	public HandHitParticlesExpansionInteraction()
	{
	}
}
[Token(Token = "0x20001DF")]
public class LightVolumetricSphere : MonoBehaviour
{
	[Token(Token = "0x4000899")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Light light;

	[Token(Token = "0x400089A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshRenderer renderer;

	[Token(Token = "0x6000A67")]
	[Address(RVA = "0xB50600", Offset = "0xB50600", VA = "0xB50600")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A68")]
	[Address(RVA = "0xB5083C", Offset = "0xB5083C", VA = "0xB5083C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A69")]
	[Address(RVA = "0xB508F8", Offset = "0xB508F8", VA = "0xB508F8")]
	private void FeedMaterial()
	{
	}

	[Token(Token = "0x6000A6A")]
	[Address(RVA = "0xB5065C", Offset = "0xB5065C", VA = "0xB5065C")]
	private void CreateBillboard()
	{
	}

	[Token(Token = "0x6000A6B")]
	[Address(RVA = "0xB50AE8", Offset = "0xB50AE8", VA = "0xB50AE8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000A6C")]
	[Address(RVA = "0xB50BB0", Offset = "0xB50BB0", VA = "0xB50BB0")]
	public LightVolumetricSphere()
	{
	}
}
[Token(Token = "0x20001E0")]
public class SelfDestruct : MonoBehaviour
{
	[Token(Token = "0x6000A6D")]
	[Address(RVA = "0xB17C30", Offset = "0xB17C30", VA = "0xB17C30")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A6E")]
	[Address(RVA = "0xB17CAC", Offset = "0xB17CAC", VA = "0xB17CAC")]
	public SelfDestruct()
	{
	}
}
[Token(Token = "0x20001E1")]
[ExecuteInEditMode]
public class TemporalScaleFix : MonoBehaviour
{
	[Token(Token = "0x400089B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform[] transformsToFixScale;

	[Token(Token = "0x400089C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Vector3 desiredScale;

	[Token(Token = "0x6000A6F")]
	[Address(RVA = "0xB20DF4", Offset = "0xB20DF4", VA = "0xB20DF4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000A70")]
	[Address(RVA = "0xB20DF8", Offset = "0xB20DF8", VA = "0xB20DF8")]
	private void FixScale()
	{
	}

	[Token(Token = "0x6000A71")]
	[Address(RVA = "0xB20E78", Offset = "0xB20E78", VA = "0xB20E78")]
	public TemporalScaleFix()
	{
	}
}
[Token(Token = "0x20001E2")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x870380", Offset = "0x870380")]
public class TemporalXRInputUpdater : MonoBehaviour
{
	[Token(Token = "0x6000A72")]
	[Address(RVA = "0xB20EF0", Offset = "0xB20EF0", VA = "0xB20EF0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A73")]
	[Address(RVA = "0xB20F50", Offset = "0xB20F50", VA = "0xB20F50")]
	public TemporalXRInputUpdater()
	{
	}
}
[Token(Token = "0x20001E3")]
public class TestMovement : MonoBehaviour
{
	[Token(Token = "0x20001E4")]
	public enum CircularMovementType
	{
		[Token(Token = "0x40008A9")]
		XYMovement,
		[Token(Token = "0x40008AA")]
		XZMovement
	}

	[Token(Token = "0x400089D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool automaticMovement;

	[Token(Token = "0x400089E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[SerializeField]
	private bool circularMovement;

	[Token(Token = "0x400089F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private CircularMovementType circularType;

	[Token(Token = "0x40008A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool linearMovement;

	[Token(Token = "0x40008A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float amplitude;

	[Token(Token = "0x40008A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float baseFrequency;

	[Token(Token = "0x40008A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float linearSpeed;

	[Token(Token = "0x40008A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Vector3 rotation;

	[Token(Token = "0x40008A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private float speedRotation;

	[Token(Token = "0x40008A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float internalTimer;

	[Token(Token = "0x40008A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 initialPos;

	[Token(Token = "0x6000A74")]
	[Address(RVA = "0xB20F58", Offset = "0xB20F58", VA = "0xB20F58")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A75")]
	[Address(RVA = "0xB20F94", Offset = "0xB20F94", VA = "0xB20F94")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A76")]
	[Address(RVA = "0xB21318", Offset = "0xB21318", VA = "0xB21318")]
	public TestMovement()
	{
	}
}
[Token(Token = "0x20001E5")]
public class ScrollRectController : MonoBehaviour
{
	[Token(Token = "0x40008AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ScrollRect scrollRect;

	[Token(Token = "0x40008AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float speed;

	[Token(Token = "0x40008AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector2 sticksVelocity;

	[Token(Token = "0x6000A77")]
	[Address(RVA = "0xB15A90", Offset = "0xB15A90", VA = "0xB15A90")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A78")]
	[Address(RVA = "0xB15CE0", Offset = "0xB15CE0", VA = "0xB15CE0")]
	public ScrollRectController()
	{
	}
}
[Token(Token = "0x20001E6")]
public enum AkAudioAPI
{
	[Token(Token = "0x40008AF")]
	AkAudioAPI_AAudio = 1,
	[Token(Token = "0x40008B0")]
	AkAudioAPI_OpenSL_ES,
	[Token(Token = "0x40008B1")]
	AkAudioAPI_Default
}
[Token(Token = "0x20001E7")]
public class AkCommunicationSettings : IDisposable
{
	[Token(Token = "0x20001E8")]
	public enum AkCommSystem
	{
		[Token(Token = "0x40008B5")]
		AkCommSystem_Socket,
		[Token(Token = "0x40008B6")]
		AkCommSystem_HTCS
	}

	[Token(Token = "0x40008B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40008B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700019C")]
	public uint uPoolSize
	{
		[Token(Token = "0x6000A7E")]
		[Address(RVA = "0xDE6114", Offset = "0xDE6114", VA = "0xDE6114")]
		set
		{
		}
	}

	[Token(Token = "0x1700019D")]
	public ushort uDiscoveryBroadcastPort
	{
		[Token(Token = "0x6000A7F")]
		[Address(RVA = "0xDE6120", Offset = "0xDE6120", VA = "0xDE6120")]
		set
		{
		}
	}

	[Token(Token = "0x1700019E")]
	public ushort uCommandPort
	{
		[Token(Token = "0x6000A80")]
		[Address(RVA = "0xDE612C", Offset = "0xDE612C", VA = "0xDE612C")]
		set
		{
		}
	}

	[Token(Token = "0x1700019F")]
	public ushort uNotificationPort
	{
		[Token(Token = "0x6000A81")]
		[Address(RVA = "0xDE6138", Offset = "0xDE6138", VA = "0xDE6138")]
		set
		{
		}
	}

	[Token(Token = "0x170001A0")]
	public AkCommSystem commSystem
	{
		[Token(Token = "0x6000A82")]
		[Address(RVA = "0xDE6154", Offset = "0xDE6154", VA = "0xDE6154")]
		set
		{
		}
	}

	[Token(Token = "0x170001A1")]
	public bool bInitSystemLib
	{
		[Token(Token = "0x6000A83")]
		[Address(RVA = "0xDE6144", Offset = "0xDE6144", VA = "0xDE6144")]
		set
		{
		}
	}

	[Token(Token = "0x170001A2")]
	public string szAppNetworkName
	{
		[Token(Token = "0x6000A84")]
		[Address(RVA = "0xDE6160", Offset = "0xDE6160", VA = "0xDE6160")]
		set
		{
		}
	}

	[Token(Token = "0x6000A79")]
	[Address(RVA = "0xDE6FB8", Offset = "0xDE6FB8", VA = "0xDE6FB8")]
	internal AkCommunicationSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000A7A")]
	[Address(RVA = "0xDE6FF8", Offset = "0xDE6FF8", VA = "0xDE6FF8")]
	internal static IntPtr getCPtr(AkCommunicationSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000A7B")]
	[Address(RVA = "0xDE7048", Offset = "0xDE7048", VA = "0xDE7048", Slot = "1")]
	~AkCommunicationSettings()
	{
	}

	[Token(Token = "0x6000A7C")]
	[Address(RVA = "0xDE70B8", Offset = "0xDE70B8", VA = "0xDE70B8", Slot = "5")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000A7D")]
	[Address(RVA = "0xDE3578", Offset = "0xDE3578", VA = "0xDE3578")]
	public AkCommunicationSettings()
	{
	}
}
[Token(Token = "0x20001E9")]
public class AkPlatformInitSettings : IDisposable
{
	[Token(Token = "0x40008B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40008B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170001A3")]
	public AkAudioAPI eAudioAPI
	{
		[Token(Token = "0x6000A88")]
		[Address(RVA = "0xDDFA2C", Offset = "0xDDFA2C", VA = "0xDDFA2C")]
		set
		{
		}
	}

	[Token(Token = "0x170001A4")]
	public uint uSampleRate
	{
		[Token(Token = "0x6000A89")]
		[Address(RVA = "0xDE6E24", Offset = "0xDE6E24", VA = "0xDE6E24")]
		set
		{
		}
	}

	[Token(Token = "0x170001A5")]
	public ushort uNumRefillsInVoice
	{
		[Token(Token = "0x6000A8A")]
		[Address(RVA = "0xDE6E68", Offset = "0xDE6E68", VA = "0xDE6E68")]
		set
		{
		}
	}

	[Token(Token = "0x170001A6")]
	public bool bRoundFrameSizeToHWSize
	{
		[Token(Token = "0x6000A8B")]
		[Address(RVA = "0xDDFA38", Offset = "0xDDFA38", VA = "0xDDFA38")]
		set
		{
		}
	}

	[Token(Token = "0x6000A85")]
	[Address(RVA = "0xDEBE60", Offset = "0xDEBE60", VA = "0xDEBE60")]
	internal AkPlatformInitSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000A86")]
	[Address(RVA = "0xDEEDB4", Offset = "0xDEEDB4", VA = "0xDEEDB4", Slot = "1")]
	~AkPlatformInitSettings()
	{
	}

	[Token(Token = "0x6000A87")]
	[Address(RVA = "0xDEEE24", Offset = "0xDEEE24", VA = "0xDEEE24", Slot = "5")]
	public virtual void Dispose()
	{
	}
}
[Token(Token = "0x20001EA")]
internal class AkSoundEnginePINVOKE
{
	[PreserveSig]
	[Token(Token = "0x6000A8C")]
	[Address(RVA = "0xCAC9BC", Offset = "0xCAC9BC", VA = "0xCAC9BC")]
	public static extern void CSharp_AkTransform_Set__SWIG_0(IntPtr jarg1, Vector3 jarg2, Vector3 jarg3, Vector3 jarg4);

	[PreserveSig]
	[Token(Token = "0x6000A8D")]
	[Address(RVA = "0xCACA9C", Offset = "0xCACA9C", VA = "0xCACA9C")]
	public static extern IntPtr CSharp_new_AkTransform();

	[PreserveSig]
	[Token(Token = "0x6000A8E")]
	[Address(RVA = "0xCACB10", Offset = "0xCACB10", VA = "0xCACB10")]
	public static extern void CSharp_delete_AkTransform(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000A8F")]
	[Address(RVA = "0xCACB90", Offset = "0xCACB90", VA = "0xCACB90")]
	public static extern void CSharp_AkAuxSendValue_Set(IntPtr jarg1, ulong jarg2, uint jarg3, float jarg4);

	[PreserveSig]
	[Token(Token = "0x6000A90")]
	[Address(RVA = "0xCACC38", Offset = "0xCACC38", VA = "0xCACC38")]
	public static extern bool CSharp_AkAuxSendValue_IsSame(IntPtr jarg1, ulong jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000A91")]
	[Address(RVA = "0xCACCD8", Offset = "0xCACCD8", VA = "0xCACCD8")]
	public static extern int CSharp_AkAuxSendValue_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x6000A92")]
	[Address(RVA = "0xCACD4C", Offset = "0xCACD4C", VA = "0xCACD4C")]
	public static extern void CSharp_AkOutputSettings_audioDeviceShareset_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000A93")]
	[Address(RVA = "0xCACDDC", Offset = "0xCACDDC", VA = "0xCACDDC")]
	public static extern void CSharp_AkOutputSettings_idDevice_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000A94")]
	[Address(RVA = "0xCACE6C", Offset = "0xCACE6C", VA = "0xCACE6C")]
	public static extern void CSharp_AkOutputSettings_ePanningRule_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000A95")]
	[Address(RVA = "0xCACEFC", Offset = "0xCACEFC", VA = "0xCACEFC")]
	public static extern IntPtr CSharp_AkOutputSettings_channelConfig_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000A96")]
	[Address(RVA = "0xCACF7C", Offset = "0xCACF7C", VA = "0xCACF7C")]
	public static extern void CSharp_delete_AkOutputSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000A97")]
	[Address(RVA = "0xCACFFC", Offset = "0xCACFFC", VA = "0xCACFFC")]
	public static extern void CSharp_AkInitSettings_uMaxNumPaths_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000A98")]
	[Address(RVA = "0xCAD08C", Offset = "0xCAD08C", VA = "0xCAD08C")]
	public static extern void CSharp_AkInitSettings_uCommandQueueSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000A99")]
	[Address(RVA = "0xCAD11C", Offset = "0xCAD11C", VA = "0xCAD11C")]
	public static extern void CSharp_AkInitSettings_bEnableGameSyncPreparation_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6000A9A")]
	[Address(RVA = "0xCAD1AC", Offset = "0xCAD1AC", VA = "0xCAD1AC")]
	public static extern void CSharp_AkInitSettings_uContinuousPlaybackLookAhead_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000A9B")]
	[Address(RVA = "0xCAD23C", Offset = "0xCAD23C", VA = "0xCAD23C")]
	public static extern void CSharp_AkInitSettings_uNumSamplesPerFrame_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000A9C")]
	[Address(RVA = "0xCAD2CC", Offset = "0xCAD2CC", VA = "0xCAD2CC")]
	public static extern void CSharp_AkInitSettings_uMonitorQueuePoolSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000A9D")]
	[Address(RVA = "0xCAD35C", Offset = "0xCAD35C", VA = "0xCAD35C")]
	public static extern IntPtr CSharp_AkInitSettings_settingsMainOutput_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000A9E")]
	[Address(RVA = "0xCAD3DC", Offset = "0xCAD3DC", VA = "0xCAD3DC")]
	public static extern void CSharp_AkInitSettings_uMaxHardwareTimeoutMs_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000A9F")]
	[Address(RVA = "0xCAD46C", Offset = "0xCAD46C", VA = "0xCAD46C")]
	public static extern void CSharp_AkInitSettings_szPluginDLLPath_set(IntPtr jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x6000AA0")]
	[Address(RVA = "0xCAD510", Offset = "0xCAD510", VA = "0xCAD510")]
	public static extern IntPtr CSharp_AkInitSettings_szPluginDLLPath_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000AA1")]
	[Address(RVA = "0xCAD590", Offset = "0xCAD590", VA = "0xCAD590")]
	public static extern void CSharp_AkInitSettings_fDebugOutOfRangeLimit_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000AA2")]
	[Address(RVA = "0xCAD620", Offset = "0xCAD620", VA = "0xCAD620")]
	public static extern void CSharp_AkInitSettings_bDebugOutOfRangeCheckEnabled_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6000AA3")]
	[Address(RVA = "0xCAD6B0", Offset = "0xCAD6B0", VA = "0xCAD6B0")]
	public static extern void CSharp_delete_AkInitSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000AA4")]
	[Address(RVA = "0xCA7730", Offset = "0xCA7730", VA = "0xCA7730")]
	public static extern bool CSharp_IsInitialized();

	[PreserveSig]
	[Token(Token = "0x6000AA5")]
	[Address(RVA = "0xCA77B0", Offset = "0xCA77B0", VA = "0xCA77B0")]
	public static extern int CSharp_RenderAudio__SWIG_1();

	[PreserveSig]
	[Token(Token = "0x6000AA6")]
	[Address(RVA = "0xCA7A54", Offset = "0xCA7A54", VA = "0xCA7A54")]
	public static extern uint CSharp_PostEvent__SWIG_2(uint jarg1, ulong jarg2, uint jarg3, IntPtr jarg4, IntPtr jarg5);

	[PreserveSig]
	[Token(Token = "0x6000AA7")]
	[Address(RVA = "0xCA7BCC", Offset = "0xCA7BCC", VA = "0xCA7BCC")]
	public static extern uint CSharp_PostEvent__SWIG_3(uint jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x6000AA8")]
	[Address(RVA = "0xCA7D24", Offset = "0xCA7D24", VA = "0xCA7D24")]
	public static extern uint CSharp_PostEvent__SWIG_7(string jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x6000AA9")]
	[Address(RVA = "0xCA7E78", Offset = "0xCA7E78", VA = "0xCA7E78")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_1(uint jarg1, int jarg2, ulong jarg3, int jarg4, int jarg5);

	[PreserveSig]
	[Token(Token = "0x6000AAA")]
	[Address(RVA = "0xCA7FC4", Offset = "0xCA7FC4", VA = "0xCA7FC4")]
	public static extern int CSharp_SeekOnEvent__SWIG_8(uint jarg1, ulong jarg2, float jarg3);

	[PreserveSig]
	[Token(Token = "0x6000AAB")]
	[Address(RVA = "0xCA80E0", Offset = "0xCA80E0", VA = "0xCA80E0")]
	public static extern void CSharp_StopAll__SWIG_0(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6000AAC")]
	[Address(RVA = "0xCA8164", Offset = "0xCA8164", VA = "0xCA8164")]
	public static extern void CSharp_StopAll__SWIG_1();

	[PreserveSig]
	[Token(Token = "0x6000AAD")]
	[Address(RVA = "0xCA826C", Offset = "0xCA826C", VA = "0xCA826C")]
	public static extern int CSharp_SetMultiplePositions__SWIG_0(ulong jarg1, IntPtr jarg2, ushort jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x6000AAE")]
	[Address(RVA = "0xCA8318", Offset = "0xCA8318", VA = "0xCA8318")]
	public static extern int CSharp_ClearBanks();

	[PreserveSig]
	[Token(Token = "0x6000AAF")]
	[Address(RVA = "0xCA8390", Offset = "0xCA8390", VA = "0xCA8390")]
	public static extern int CSharp_LoadBank__SWIG_0(string jarg1, out uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000AB0")]
	[Address(RVA = "0xCA843C", Offset = "0xCA843C", VA = "0xCA843C")]
	public static extern int CSharp_LoadBankMemoryView__SWIG_0(IntPtr jarg1, uint jarg2, out uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000AB1")]
	[Address(RVA = "0xCA8588", Offset = "0xCA8588", VA = "0xCA8588")]
	public static extern int CSharp_LoadBank__SWIG_2(string jarg1, IntPtr jarg2, IntPtr jarg3, out uint jarg4);

	[PreserveSig]
	[Token(Token = "0x6000AB2")]
	[Address(RVA = "0xCA864C", Offset = "0xCA864C", VA = "0xCA864C")]
	public static extern int CSharp_UnloadBank__SWIG_1(uint jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000AB3")]
	[Address(RVA = "0xCA8790", Offset = "0xCA8790", VA = "0xCA8790")]
	public static extern int CSharp_UnloadBank__SWIG_3(uint jarg1, IntPtr jarg2, IntPtr jarg3, IntPtr jarg4);

	[PreserveSig]
	[Token(Token = "0x6000AB4")]
	[Address(RVA = "0xCA883C", Offset = "0xCA883C", VA = "0xCA883C")]
	public static extern int CSharp_PrepareBank__SWIG_3(int jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000AB5")]
	[Address(RVA = "0xCA8970", Offset = "0xCA8970", VA = "0xCA8970")]
	public static extern int CSharp_AddListener(ulong jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x6000AB6")]
	[Address(RVA = "0xCA8AA4", Offset = "0xCA8AA4", VA = "0xCA8AA4")]
	public static extern int CSharp_RemoveListener(ulong jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x6000AB7")]
	[Address(RVA = "0xCA8BB0", Offset = "0xCA8BB0", VA = "0xCA8BB0")]
	public static extern int CSharp_AddDefaultListener(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6000AB8")]
	[Address(RVA = "0xCA8CAC", Offset = "0xCA8CAC", VA = "0xCA8CAC")]
	public static extern int CSharp_RemoveDefaultListener(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6000AB9")]
	[Address(RVA = "0xCA8DC8", Offset = "0xCA8DC8", VA = "0xCA8DC8")]
	public static extern int CSharp_SetRTPCValue__SWIG_3(uint jarg1, float jarg2, ulong jarg3);

	[PreserveSig]
	[Token(Token = "0x6000ABA")]
	[Address(RVA = "0xCA8E6C", Offset = "0xCA8E6C", VA = "0xCA8E6C")]
	public static extern int CSharp_SetRTPCValue__SWIG_4(uint jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000ABB")]
	[Address(RVA = "0xCA8F98", Offset = "0xCA8F98", VA = "0xCA8F98")]
	public static extern int CSharp_SetRTPCValue__SWIG_8(string jarg1, float jarg2, ulong jarg3);

	[PreserveSig]
	[Token(Token = "0x6000ABC")]
	[Address(RVA = "0xCA90E4", Offset = "0xCA90E4", VA = "0xCA90E4")]
	public static extern int CSharp_SetSwitch__SWIG_0(uint jarg1, uint jarg2, ulong jarg3);

	[PreserveSig]
	[Token(Token = "0x6000ABD")]
	[Address(RVA = "0xCA9180", Offset = "0xCA9180", VA = "0xCA9180")]
	public static extern int CSharp_SetState__SWIG_0(uint jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000ABE")]
	[Address(RVA = "0xCAD730", Offset = "0xCAD730", VA = "0xCAD730")]
	public static extern int CSharp_SetGameObjectAuxSendValues(ulong jarg1, IntPtr jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000ABF")]
	[Address(RVA = "0xCA92CC", Offset = "0xCA92CC", VA = "0xCA92CC")]
	public static extern int CSharp_SetObjectObstructionAndOcclusion(ulong jarg1, ulong jarg2, float jarg3, float jarg4);

	[PreserveSig]
	[Token(Token = "0x6000AC0")]
	[Address(RVA = "0xCA937C", Offset = "0xCA937C", VA = "0xCA937C")]
	public static extern int CSharp_Suspend__SWIG_0(bool jarg1);

	[PreserveSig]
	[Token(Token = "0x6000AC1")]
	[Address(RVA = "0xCA9400", Offset = "0xCA9400", VA = "0xCA9400")]
	public static extern int CSharp_WakeupFromSuspend();

	[PreserveSig]
	[Token(Token = "0x6000AC2")]
	[Address(RVA = "0xCAD7C8", Offset = "0xCAD7C8", VA = "0xCAD7C8")]
	public static extern void CSharp_AkMusicSettings_fStreamingLookAheadRatio_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000AC3")]
	[Address(RVA = "0xCAD858", Offset = "0xCAD858", VA = "0xCAD858")]
	public static extern void CSharp_delete_AkMusicSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000AC4")]
	[Address(RVA = "0xCAD8D8", Offset = "0xCAD8D8", VA = "0xCAD8D8")]
	public static extern IntPtr CSharp_AkSerializedCallbackHeader_pPackage_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000AC5")]
	[Address(RVA = "0xCAD958", Offset = "0xCAD958", VA = "0xCAD958")]
	public static extern IntPtr CSharp_AkSerializedCallbackHeader_pNext_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000AC6")]
	[Address(RVA = "0xCAD9D8", Offset = "0xCAD9D8", VA = "0xCAD9D8")]
	public static extern int CSharp_AkSerializedCallbackHeader_eType_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000AC7")]
	[Address(RVA = "0xCADA58", Offset = "0xCADA58", VA = "0xCADA58")]
	public static extern IntPtr CSharp_AkSerializedCallbackHeader_GetData(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000AC8")]
	[Address(RVA = "0xCADAD8", Offset = "0xCADAD8", VA = "0xCADAD8")]
	public static extern void CSharp_delete_AkCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000AC9")]
	[Address(RVA = "0xCADB58", Offset = "0xCADB58", VA = "0xCADB58")]
	public static extern void CSharp_delete_AkEventCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000ACA")]
	[Address(RVA = "0xCADBD8", Offset = "0xCADBD8", VA = "0xCADBD8")]
	public static extern void CSharp_delete_AkMIDIEventCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000ACB")]
	[Address(RVA = "0xCADC58", Offset = "0xCADC58", VA = "0xCADC58")]
	public static extern void CSharp_delete_AkMarkerCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000ACC")]
	[Address(RVA = "0xCADCD8", Offset = "0xCADCD8", VA = "0xCADCD8")]
	public static extern float CSharp_AkDurationCallbackInfo_fEstimatedDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000ACD")]
	[Address(RVA = "0xCADD58", Offset = "0xCADD58", VA = "0xCADD58")]
	public static extern void CSharp_delete_AkDurationCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000ACE")]
	[Address(RVA = "0xCADDD8", Offset = "0xCADDD8", VA = "0xCADDD8")]
	public static extern void CSharp_delete_AkDynamicSequenceItemCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000ACF")]
	[Address(RVA = "0xCADE58", Offset = "0xCADE58", VA = "0xCADE58")]
	public static extern void CSharp_delete_AkMusicSyncCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000AD0")]
	[Address(RVA = "0xCADED8", Offset = "0xCADED8", VA = "0xCADED8")]
	public static extern void CSharp_delete_AkMusicPlaylistCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000AD1")]
	[Address(RVA = "0xCADF58", Offset = "0xCADF58", VA = "0xCADF58")]
	public static extern uint CSharp_AkBankCallbackInfo_bankID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000AD2")]
	[Address(RVA = "0xCADFD8", Offset = "0xCADFD8", VA = "0xCADFD8")]
	public static extern IntPtr CSharp_AkBankCallbackInfo_inMemoryBankPtr_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000AD3")]
	[Address(RVA = "0xCAE058", Offset = "0xCAE058", VA = "0xCAE058")]
	public static extern int CSharp_AkBankCallbackInfo_loadResult_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000AD4")]
	[Address(RVA = "0xCAE0D8", Offset = "0xCAE0D8", VA = "0xCAE0D8")]
	public static extern void CSharp_delete_AkBankCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000AD5")]
	[Address(RVA = "0xCAE158", Offset = "0xCAE158", VA = "0xCAE158")]
	public static extern int CSharp_AkMonitoringCallbackInfo_errorCode_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000AD6")]
	[Address(RVA = "0xCAE1D8", Offset = "0xCAE1D8", VA = "0xCAE1D8")]
	public static extern int CSharp_AkMonitoringCallbackInfo_errorLevel_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000AD7")]
	[Address(RVA = "0xCAE258", Offset = "0xCAE258", VA = "0xCAE258")]
	public static extern uint CSharp_AkMonitoringCallbackInfo_playingID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000AD8")]
	[Address(RVA = "0xCAE2D8", Offset = "0xCAE2D8", VA = "0xCAE2D8")]
	public static extern ulong CSharp_AkMonitoringCallbackInfo_gameObjID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000AD9")]
	[Address(RVA = "0xCAE358", Offset = "0xCAE358", VA = "0xCAE358")]
	public static extern IntPtr CSharp_AkMonitoringCallbackInfo_message_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000ADA")]
	[Address(RVA = "0xCAE3D8", Offset = "0xCAE3D8", VA = "0xCAE3D8")]
	public static extern void CSharp_delete_AkMonitoringCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000ADB")]
	[Address(RVA = "0xCAE458", Offset = "0xCAE458", VA = "0xCAE458")]
	public static extern bool CSharp_AkAudioSourceChangeCallbackInfo_bOtherAudioPlaying_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000ADC")]
	[Address(RVA = "0xCAE4E0", Offset = "0xCAE4E0", VA = "0xCAE4E0")]
	public static extern void CSharp_delete_AkAudioSourceChangeCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000ADD")]
	[Address(RVA = "0xCAE560", Offset = "0xCAE560", VA = "0xCAE560")]
	public static extern int CSharp_AkCallbackSerializer_Init(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000ADE")]
	[Address(RVA = "0xCAE5F0", Offset = "0xCAE5F0", VA = "0xCAE5F0")]
	public static extern void CSharp_AkCallbackSerializer_Term();

	[PreserveSig]
	[Token(Token = "0x6000ADF")]
	[Address(RVA = "0xCAE660", Offset = "0xCAE660", VA = "0xCAE660")]
	public static extern IntPtr CSharp_AkCallbackSerializer_Lock();

	[PreserveSig]
	[Token(Token = "0x6000AE0")]
	[Address(RVA = "0xCAE6D4", Offset = "0xCAE6D4", VA = "0xCAE6D4")]
	public static extern void CSharp_AkCallbackSerializer_Unlock();

	[PreserveSig]
	[Token(Token = "0x6000AE1")]
	[Address(RVA = "0xCAE744", Offset = "0xCAE744", VA = "0xCAE744")]
	public static extern void CSharp_AkChannelConfig_SetStandard(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000AE2")]
	[Address(RVA = "0xCAE7D4", Offset = "0xCAE7D4", VA = "0xCAE7D4")]
	public static extern void CSharp_AkChannelConfig_SetAnonymous(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000AE3")]
	[Address(RVA = "0xCAE864", Offset = "0xCAE864", VA = "0xCAE864")]
	public static extern void CSharp_AkChannelConfig_SetAmbisonic(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000AE4")]
	[Address(RVA = "0xCAE8F4", Offset = "0xCAE8F4", VA = "0xCAE8F4")]
	public static extern void CSharp_delete_AkChannelConfig(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000AE5")]
	[Address(RVA = "0xCAE974", Offset = "0xCAE974", VA = "0xCAE974")]
	public static extern IntPtr CSharp_new_AkSpatialAudioInitSettings();

	[PreserveSig]
	[Token(Token = "0x6000AE6")]
	[Address(RVA = "0xCAE9E8", Offset = "0xCAE9E8", VA = "0xCAE9E8")]
	public static extern void CSharp_AkSpatialAudioInitSettings_uMaxSoundPropagationDepth_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000AE7")]
	[Address(RVA = "0xCAEA78", Offset = "0xCAEA78", VA = "0xCAEA78")]
	public static extern void CSharp_AkSpatialAudioInitSettings_uDiffractionFlags_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000AE8")]
	[Address(RVA = "0xCAEB08", Offset = "0xCAEB08", VA = "0xCAEB08")]
	public static extern void CSharp_AkSpatialAudioInitSettings_fDiffractionShadowAttenFactor_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000AE9")]
	[Address(RVA = "0xCAEB98", Offset = "0xCAEB98", VA = "0xCAEB98")]
	public static extern void CSharp_AkSpatialAudioInitSettings_fDiffractionShadowDegrees_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000AEA")]
	[Address(RVA = "0xCAEC28", Offset = "0xCAEC28", VA = "0xCAEC28")]
	public static extern void CSharp_AkSpatialAudioInitSettings_fMovementThreshold_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000AEB")]
	[Address(RVA = "0xCAECB8", Offset = "0xCAECB8", VA = "0xCAECB8")]
	public static extern void CSharp_AkSpatialAudioInitSettings_uNumberOfPrimaryRays_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000AEC")]
	[Address(RVA = "0xCAED48", Offset = "0xCAED48", VA = "0xCAED48")]
	public static extern void CSharp_AkSpatialAudioInitSettings_uMaxReflectionOrder_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000AED")]
	[Address(RVA = "0xCAEDD8", Offset = "0xCAEDD8", VA = "0xCAEDD8")]
	public static extern void CSharp_AkSpatialAudioInitSettings_fMaxPathLength_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000AEE")]
	[Address(RVA = "0xCAEE68", Offset = "0xCAEE68", VA = "0xCAEE68")]
	public static extern void CSharp_AkSpatialAudioInitSettings_bEnableDiffractionOnReflection_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6000AEF")]
	[Address(RVA = "0xCAEEF8", Offset = "0xCAEEF8", VA = "0xCAEEF8")]
	public static extern void CSharp_AkSpatialAudioInitSettings_bEnableDirectPathDiffraction_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6000AF0")]
	[Address(RVA = "0xCAEF88", Offset = "0xCAEF88", VA = "0xCAEF88")]
	public static extern void CSharp_AkSpatialAudioInitSettings_bEnableTransmission_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6000AF1")]
	[Address(RVA = "0xCAF018", Offset = "0xCAF018", VA = "0xCAF018")]
	public static extern void CSharp_delete_AkSpatialAudioInitSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000AF2")]
	[Address(RVA = "0xCAF098", Offset = "0xCAF098", VA = "0xCAF098")]
	public static extern void CSharp_AkTriangle_point0_set(IntPtr jarg1, ushort jarg2);

	[PreserveSig]
	[Token(Token = "0x6000AF3")]
	[Address(RVA = "0xCAF128", Offset = "0xCAF128", VA = "0xCAF128")]
	public static extern ushort CSharp_AkTriangle_point0_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000AF4")]
	[Address(RVA = "0xCAF1A8", Offset = "0xCAF1A8", VA = "0xCAF1A8")]
	public static extern void CSharp_AkTriangle_point1_set(IntPtr jarg1, ushort jarg2);

	[PreserveSig]
	[Token(Token = "0x6000AF5")]
	[Address(RVA = "0xCAF238", Offset = "0xCAF238", VA = "0xCAF238")]
	public static extern ushort CSharp_AkTriangle_point1_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000AF6")]
	[Address(RVA = "0xCAF2B8", Offset = "0xCAF2B8", VA = "0xCAF2B8")]
	public static extern void CSharp_AkTriangle_point2_set(IntPtr jarg1, ushort jarg2);

	[PreserveSig]
	[Token(Token = "0x6000AF7")]
	[Address(RVA = "0xCAF348", Offset = "0xCAF348", VA = "0xCAF348")]
	public static extern ushort CSharp_AkTriangle_point2_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000AF8")]
	[Address(RVA = "0xCAF3C8", Offset = "0xCAF3C8", VA = "0xCAF3C8")]
	public static extern void CSharp_AkTriangle_surface_set(IntPtr jarg1, ushort jarg2);

	[PreserveSig]
	[Token(Token = "0x6000AF9")]
	[Address(RVA = "0xCAF458", Offset = "0xCAF458", VA = "0xCAF458")]
	public static extern void CSharp_AkTriangle_Clear(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000AFA")]
	[Address(RVA = "0xCAF4D8", Offset = "0xCAF4D8", VA = "0xCAF4D8")]
	public static extern int CSharp_AkTriangle_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x6000AFB")]
	[Address(RVA = "0xCAF54C", Offset = "0xCAF54C", VA = "0xCAF54C")]
	public static extern void CSharp_delete_AkTriangle(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000AFC")]
	[Address(RVA = "0xCAF5CC", Offset = "0xCAF5CC", VA = "0xCAF5CC")]
	public static extern void CSharp_AkAcousticSurface_textureID_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000AFD")]
	[Address(RVA = "0xCAF65C", Offset = "0xCAF65C", VA = "0xCAF65C")]
	public static extern void CSharp_AkAcousticSurface_occlusion_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000AFE")]
	[Address(RVA = "0xCAF6EC", Offset = "0xCAF6EC", VA = "0xCAF6EC")]
	public static extern void CSharp_AkAcousticSurface_strName_set(IntPtr jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x6000AFF")]
	[Address(RVA = "0xCAF790", Offset = "0xCAF790", VA = "0xCAF790")]
	public static extern void CSharp_AkAcousticSurface_Clear(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000B00")]
	[Address(RVA = "0xCAF810", Offset = "0xCAF810", VA = "0xCAF810")]
	public static extern int CSharp_AkAcousticSurface_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x6000B01")]
	[Address(RVA = "0xCAF884", Offset = "0xCAF884", VA = "0xCAF884")]
	public static extern void CSharp_delete_AkAcousticSurface(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000B02")]
	[Address(RVA = "0xCAF904", Offset = "0xCAF904", VA = "0xCAF904")]
	public static extern IntPtr CSharp_new_AkRoomParams__SWIG_0();

	[PreserveSig]
	[Token(Token = "0x6000B03")]
	[Address(RVA = "0xCAF978", Offset = "0xCAF978", VA = "0xCAF978")]
	public static extern void CSharp_AkRoomParams_Up_set(IntPtr jarg1, Vector3 jarg2);

	[PreserveSig]
	[Token(Token = "0x6000B04")]
	[Address(RVA = "0xCAFA20", Offset = "0xCAFA20", VA = "0xCAFA20")]
	public static extern void CSharp_AkRoomParams_Front_set(IntPtr jarg1, Vector3 jarg2);

	[PreserveSig]
	[Token(Token = "0x6000B05")]
	[Address(RVA = "0xCAFAC8", Offset = "0xCAFAC8", VA = "0xCAFAC8")]
	public static extern void CSharp_AkRoomParams_ReverbAuxBus_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000B06")]
	[Address(RVA = "0xCAFB58", Offset = "0xCAFB58", VA = "0xCAFB58")]
	public static extern void CSharp_AkRoomParams_ReverbLevel_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000B07")]
	[Address(RVA = "0xCAFBE8", Offset = "0xCAFBE8", VA = "0xCAFBE8")]
	public static extern void CSharp_AkRoomParams_WallOcclusion_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000B08")]
	[Address(RVA = "0xCAFC78", Offset = "0xCAFC78", VA = "0xCAFC78")]
	public static extern void CSharp_AkRoomParams_RoomGameObj_AuxSendLevelToSelf_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000B09")]
	[Address(RVA = "0xCAFD08", Offset = "0xCAFD08", VA = "0xCAFD08")]
	public static extern void CSharp_AkRoomParams_RoomGameObj_KeepRegistered_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6000B0A")]
	[Address(RVA = "0xCAFD98", Offset = "0xCAFD98", VA = "0xCAFD98")]
	public static extern void CSharp_delete_AkRoomParams(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000B0B")]
	[Address(RVA = "0xCA9478", Offset = "0xCA9478", VA = "0xCA9478")]
	public static extern int CSharp_RemoveGeometry(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6000B0C")]
	[Address(RVA = "0xCA94FC", Offset = "0xCA94FC", VA = "0xCA94FC")]
	public static extern int CSharp_RemoveRoom(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6000B0D")]
	[Address(RVA = "0xCA9580", Offset = "0xCA9580", VA = "0xCA9580")]
	public static extern int CSharp_RemovePortal(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6000B0E")]
	[Address(RVA = "0xCA968C", Offset = "0xCA968C", VA = "0xCA968C")]
	public static extern int CSharp_SetGameObjectInRoom(ulong jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x6000B0F")]
	[Address(RVA = "0xCA97A8", Offset = "0xCA97A8", VA = "0xCA97A8")]
	public static extern int CSharp_SetEarlyReflectionsAuxSend(ulong jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000B10")]
	[Address(RVA = "0xCA98C4", Offset = "0xCA98C4", VA = "0xCA98C4")]
	public static extern int CSharp_SetEarlyReflectionsVolume(ulong jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000B11")]
	[Address(RVA = "0xCA9954", Offset = "0xCA9954", VA = "0xCA9954")]
	public static extern int CSharp_SetPortalObstructionAndOcclusion(ulong jarg1, float jarg2, float jarg3);

	[PreserveSig]
	[Token(Token = "0x6000B12")]
	[Address(RVA = "0xCAFE18", Offset = "0xCAFE18", VA = "0xCAFE18")]
	public static extern void CSharp_AkPlatformInitSettings_eAudioAPI_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000B13")]
	[Address(RVA = "0xCAFEA8", Offset = "0xCAFEA8", VA = "0xCAFEA8")]
	public static extern void CSharp_AkPlatformInitSettings_uSampleRate_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000B14")]
	[Address(RVA = "0xCAFF38", Offset = "0xCAFF38", VA = "0xCAFF38")]
	public static extern void CSharp_AkPlatformInitSettings_uNumRefillsInVoice_set(IntPtr jarg1, ushort jarg2);

	[PreserveSig]
	[Token(Token = "0x6000B15")]
	[Address(RVA = "0xCAFFC8", Offset = "0xCAFFC8", VA = "0xCAFFC8")]
	public static extern void CSharp_AkPlatformInitSettings_bRoundFrameSizeToHWSize_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6000B16")]
	[Address(RVA = "0xCB0058", Offset = "0xCB0058", VA = "0xCB0058")]
	public static extern void CSharp_delete_AkPlatformInitSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000B17")]
	[Address(RVA = "0xCB00D8", Offset = "0xCB00D8", VA = "0xCB00D8")]
	public static extern void CSharp_delete_AkStreamMgrSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000B18")]
	[Address(RVA = "0xCB0158", Offset = "0xCB0158", VA = "0xCB0158")]
	public static extern void CSharp_AkDeviceSettings_uIOMemorySize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000B19")]
	[Address(RVA = "0xCB01E8", Offset = "0xCB01E8", VA = "0xCB01E8")]
	public static extern void CSharp_AkDeviceSettings_fTargetAutoStmBufferLength_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000B1A")]
	[Address(RVA = "0xCB0278", Offset = "0xCB0278", VA = "0xCB0278")]
	public static extern void CSharp_AkDeviceSettings_bUseStreamCache_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6000B1B")]
	[Address(RVA = "0xCB0308", Offset = "0xCB0308", VA = "0xCB0308")]
	public static extern void CSharp_AkDeviceSettings_uMaxCachePinnedBytes_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000B1C")]
	[Address(RVA = "0xCB0398", Offset = "0xCB0398", VA = "0xCB0398")]
	public static extern void CSharp_delete_AkDeviceSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000B1D")]
	[Address(RVA = "0xCA99F0", Offset = "0xCA99F0", VA = "0xCA99F0")]
	public static extern void CSharp_SetErrorLogger__SWIG_0(AkLogger.ErrorLoggerInteropDelegate jarg1);

	[PreserveSig]
	[Token(Token = "0x6000B1E")]
	[Address(RVA = "0xCA9A78", Offset = "0xCA9A78", VA = "0xCA9A78")]
	public static extern void CSharp_SetErrorLogger__SWIG_1();

	[PreserveSig]
	[Token(Token = "0x6000B1F")]
	[Address(RVA = "0xCB0418", Offset = "0xCB0418", VA = "0xCB0418")]
	public static extern void CSharp_delete_AkUnityPlatformSpecificSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000B20")]
	[Address(RVA = "0xCB0498", Offset = "0xCB0498", VA = "0xCB0498")]
	public static extern IntPtr CSharp_new_AkCommunicationSettings();

	[PreserveSig]
	[Token(Token = "0x6000B21")]
	[Address(RVA = "0xCB050C", Offset = "0xCB050C", VA = "0xCB050C")]
	public static extern void CSharp_AkCommunicationSettings_uPoolSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000B22")]
	[Address(RVA = "0xCB059C", Offset = "0xCB059C", VA = "0xCB059C")]
	public static extern void CSharp_AkCommunicationSettings_uDiscoveryBroadcastPort_set(IntPtr jarg1, ushort jarg2);

	[PreserveSig]
	[Token(Token = "0x6000B23")]
	[Address(RVA = "0xCB062C", Offset = "0xCB062C", VA = "0xCB062C")]
	public static extern void CSharp_AkCommunicationSettings_uCommandPort_set(IntPtr jarg1, ushort jarg2);

	[PreserveSig]
	[Token(Token = "0x6000B24")]
	[Address(RVA = "0xCB06BC", Offset = "0xCB06BC", VA = "0xCB06BC")]
	public static extern void CSharp_AkCommunicationSettings_uNotificationPort_set(IntPtr jarg1, ushort jarg2);

	[PreserveSig]
	[Token(Token = "0x6000B25")]
	[Address(RVA = "0xCB074C", Offset = "0xCB074C", VA = "0xCB074C")]
	public static extern void CSharp_AkCommunicationSettings_commSystem_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000B26")]
	[Address(RVA = "0xCB07DC", Offset = "0xCB07DC", VA = "0xCB07DC")]
	public static extern void CSharp_AkCommunicationSettings_bInitSystemLib_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6000B27")]
	[Address(RVA = "0xCB086C", Offset = "0xCB086C", VA = "0xCB086C")]
	public static extern void CSharp_AkCommunicationSettings_szAppNetworkName_set(IntPtr jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x6000B28")]
	[Address(RVA = "0xCB0910", Offset = "0xCB0910", VA = "0xCB0910")]
	public static extern void CSharp_delete_AkCommunicationSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000B29")]
	[Address(RVA = "0xCB0990", Offset = "0xCB0990", VA = "0xCB0990")]
	public static extern IntPtr CSharp_new_AkInitializationSettings();

	[PreserveSig]
	[Token(Token = "0x6000B2A")]
	[Address(RVA = "0xCB0A04", Offset = "0xCB0A04", VA = "0xCB0A04")]
	public static extern void CSharp_delete_AkInitializationSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000B2B")]
	[Address(RVA = "0xCB0A84", Offset = "0xCB0A84", VA = "0xCB0A84")]
	public static extern IntPtr CSharp_AkInitializationSettings_streamMgrSettings_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000B2C")]
	[Address(RVA = "0xCB0B04", Offset = "0xCB0B04", VA = "0xCB0B04")]
	public static extern IntPtr CSharp_AkInitializationSettings_deviceSettings_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000B2D")]
	[Address(RVA = "0xCB0B84", Offset = "0xCB0B84", VA = "0xCB0B84")]
	public static extern IntPtr CSharp_AkInitializationSettings_initSettings_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000B2E")]
	[Address(RVA = "0xCB0C04", Offset = "0xCB0C04", VA = "0xCB0C04")]
	public static extern IntPtr CSharp_AkInitializationSettings_platformSettings_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000B2F")]
	[Address(RVA = "0xCB0C84", Offset = "0xCB0C84", VA = "0xCB0C84")]
	public static extern IntPtr CSharp_AkInitializationSettings_musicSettings_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000B30")]
	[Address(RVA = "0xCB0D04", Offset = "0xCB0D04", VA = "0xCB0D04")]
	public static extern IntPtr CSharp_AkInitializationSettings_unityPlatformSpecificSettings_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000B31")]
	[Address(RVA = "0xCB0D84", Offset = "0xCB0D84", VA = "0xCB0D84")]
	public static extern void CSharp_AkInitializationSettings_useAsyncOpen_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6000B32")]
	[Address(RVA = "0xCA9B00", Offset = "0xCA9B00", VA = "0xCA9B00")]
	public static extern int CSharp_Init(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000B33")]
	[Address(RVA = "0xCA9C20", Offset = "0xCA9C20", VA = "0xCA9C20")]
	public static extern int CSharp_InitSpatialAudio(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000B34")]
	[Address(RVA = "0xCA9CB8", Offset = "0xCA9CB8", VA = "0xCA9CB8")]
	public static extern int CSharp_InitCommunication(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000B35")]
	[Address(RVA = "0xCA9D3C", Offset = "0xCA9D3C", VA = "0xCA9D3C")]
	public static extern void CSharp_Term();

	[PreserveSig]
	[Token(Token = "0x6000B36")]
	[Address(RVA = "0xCAB528", Offset = "0xCAB528", VA = "0xCAB528")]
	public static extern int CSharp_UnregisterGameObjInternal(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6000B37")]
	[Address(RVA = "0xCAB354", Offset = "0xCAB354", VA = "0xCAB354")]
	public static extern int CSharp_RegisterGameObjInternal_WithName(ulong jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x6000B38")]
	[Address(RVA = "0xCA9DB0", Offset = "0xCA9DB0", VA = "0xCA9DB0")]
	public static extern int CSharp_SetBasePath(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6000B39")]
	[Address(RVA = "0xCA9E4C", Offset = "0xCA9E4C", VA = "0xCA9E4C")]
	public static extern int CSharp_SetCurrentLanguage(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6000B3A")]
	[Address(RVA = "0xCA9EE8", Offset = "0xCA9EE8", VA = "0xCA9EE8")]
	public static extern int CSharp_LoadFilePackage(string jarg1, out uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000B3B")]
	[Address(RVA = "0xCA9F94", Offset = "0xCA9F94", VA = "0xCA9F94")]
	public static extern int CSharp_AddBasePath(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6000B3C")]
	[Address(RVA = "0xCAA030", Offset = "0xCAA030", VA = "0xCAA030")]
	public static extern int CSharp_SetDecodedBankPath(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6000B3D")]
	[Address(RVA = "0xCAA0D0", Offset = "0xCAA0D0", VA = "0xCAA0D0")]
	public static extern int CSharp_LoadAndDecodeBank(string jarg1, bool jarg2, out uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000B3E")]
	[Address(RVA = "0xCAA1EC", Offset = "0xCAA1EC", VA = "0xCAA1EC")]
	public static extern IntPtr CSharp_GetCurrentLanguage();

	[PreserveSig]
	[Token(Token = "0x6000B3F")]
	[Address(RVA = "0xCAA394", Offset = "0xCAA394", VA = "0xCAA394")]
	public static extern int CSharp_SetObjectPosition(ulong jarg1, Vector3 jarg2, Vector3 jarg3, Vector3 jarg4);

	[PreserveSig]
	[Token(Token = "0x6000B40")]
	[Address(RVA = "0xCAA508", Offset = "0xCAA508", VA = "0xCAA508")]
	public static extern int CSharp_SetListeners(ulong jarg1, ulong[] jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000B41")]
	[Address(RVA = "0xCAA5AC", Offset = "0xCAA5AC", VA = "0xCAA5AC")]
	public static extern uint CSharp_GetMajorMinorVersion();

	[PreserveSig]
	[Token(Token = "0x6000B42")]
	[Address(RVA = "0xCAA624", Offset = "0xCAA624", VA = "0xCAA624")]
	public static extern uint CSharp_GetSubminorBuildVersion();

	[PreserveSig]
	[Token(Token = "0x6000B43")]
	[Address(RVA = "0xCAA790", Offset = "0xCAA790", VA = "0xCAA790")]
	public static extern int CSharp_SetRoomPortal(ulong jarg1, IntPtr jarg2, Vector3 jarg3, bool jarg4, ulong jarg5, ulong jarg6);

	[PreserveSig]
	[Token(Token = "0x6000B44")]
	[Address(RVA = "0xCAA8A0", Offset = "0xCAA8A0", VA = "0xCAA8A0")]
	public static extern int CSharp_SetRoom(ulong jarg1, IntPtr jarg2, string jarg3);

	[PreserveSig]
	[Token(Token = "0x6000B45")]
	[Address(RVA = "0xCAA9D0", Offset = "0xCAA9D0", VA = "0xCAA9D0")]
	public static extern int CSharp_RegisterSpatialAudioListener(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6000B46")]
	[Address(RVA = "0xCAAACC", Offset = "0xCAAACC", VA = "0xCAAACC")]
	public static extern int CSharp_UnregisterSpatialAudioListener(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6000B47")]
	[Address(RVA = "0xCAAC10", Offset = "0xCAAC10", VA = "0xCAAC10")]
	public static extern int CSharp_SetGeometry(ulong jarg1, IntPtr jarg2, uint jarg3, Vector3[] jarg4, uint jarg5, IntPtr jarg6, uint jarg7, ulong jarg8, bool jarg9, bool jarg10);

	[PreserveSig]
	[Token(Token = "0x6000B48")]
	[Address(RVA = "0xCAAD9C", Offset = "0xCAAD9C", VA = "0xCAAD9C")]
	public static extern uint CSharp_PostEventOnRoom__SWIG_7(uint jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x6000B49")]
	[Address(RVA = "0xCB0E14", Offset = "0xCB0E14", VA = "0xCB0E14")]
	public static extern IntPtr CSharp_AkEventCallbackInfo_SWIGUpcast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000B4A")]
	[Address(RVA = "0xCB0E94", Offset = "0xCB0E94", VA = "0xCB0E94")]
	public static extern IntPtr CSharp_AkMIDIEventCallbackInfo_SWIGUpcast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000B4B")]
	[Address(RVA = "0xCB0F14", Offset = "0xCB0F14", VA = "0xCB0F14")]
	public static extern IntPtr CSharp_AkMarkerCallbackInfo_SWIGUpcast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000B4C")]
	[Address(RVA = "0xCB0F94", Offset = "0xCB0F94", VA = "0xCB0F94")]
	public static extern IntPtr CSharp_AkDurationCallbackInfo_SWIGUpcast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000B4D")]
	[Address(RVA = "0xCB1014", Offset = "0xCB1014", VA = "0xCB1014")]
	public static extern IntPtr CSharp_AkDynamicSequenceItemCallbackInfo_SWIGUpcast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000B4E")]
	[Address(RVA = "0xCB1094", Offset = "0xCB1094", VA = "0xCB1094")]
	public static extern IntPtr CSharp_AkMusicSyncCallbackInfo_SWIGUpcast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000B4F")]
	[Address(RVA = "0xCB1114", Offset = "0xCB1114", VA = "0xCB1114")]
	public static extern IntPtr CSharp_AkMusicPlaylistCallbackInfo_SWIGUpcast(IntPtr jarg1);
}
[Token(Token = "0x20001EB")]
public class AkSoundEngine
{
	[Token(Token = "0x20001EC")]
	public delegate ulong GameObjectHashFunction(GameObject gameObject);

	[Token(Token = "0x20001ED")]
	private class AutoObject
	{
		[Token(Token = "0x40008BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly GameObject gameObject;

		[Token(Token = "0x6000B9D")]
		[Address(RVA = "0xCABA80", Offset = "0xCABA80", VA = "0xCABA80")]
		public AutoObject(GameObject go)
		{
		}

		[Token(Token = "0x6000B9E")]
		[Address(RVA = "0xCABC34", Offset = "0xCABC34", VA = "0xCABC34", Slot = "1")]
		~AutoObject()
		{
		}
	}

	[Token(Token = "0x40008B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameObjectHashFunction gameObjectHash;

	[Token(Token = "0x40008BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly HashSet<ulong> RegisteredGameObjects;

	[Token(Token = "0x170001A7")]
	public static string WwiseVersion
	{
		[Token(Token = "0x6000B91")]
		[Address(RVA = "0xCAB650", Offset = "0xCAB650", VA = "0xCAB650")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000B50")]
	[Address(RVA = "0xCA772C", Offset = "0xCA772C", VA = "0xCA772C")]
	public static bool IsInitialized()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B51")]
	[Address(RVA = "0xCA77AC", Offset = "0xCA77AC", VA = "0xCA77AC")]
	public static AKRESULT RenderAudio()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000B52")]
	[Address(RVA = "0xCA7824", Offset = "0xCA7824", VA = "0xCA7824")]
	public static uint PostEvent(uint in_eventID, GameObject in_gameObjectID, uint in_uFlags, AkCallbackManager.EventCallback in_pfnCallback, object in_pCookie)
	{
		return default(uint);
	}

	[Token(Token = "0x6000B53")]
	[Address(RVA = "0xCA7B04", Offset = "0xCA7B04", VA = "0xCA7B04")]
	public static uint PostEvent(uint in_eventID, GameObject in_gameObjectID)
	{
		return default(uint);
	}

	[Token(Token = "0x6000B54")]
	[Address(RVA = "0xCA7C5C", Offset = "0xCA7C5C", VA = "0xCA7C5C")]
	public static uint PostEvent(string in_pszEventName, GameObject in_gameObjectID)
	{
		return default(uint);
	}

	[Token(Token = "0x6000B55")]
	[Address(RVA = "0xCA7DCC", Offset = "0xCA7DCC", VA = "0xCA7DCC")]
	public static AKRESULT ExecuteActionOnEvent(uint in_eventID, AkActionOnEventType in_ActionType, GameObject in_gameObjectID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000B56")]
	[Address(RVA = "0xCA7F28", Offset = "0xCA7F28", VA = "0xCA7F28")]
	public static AKRESULT SeekOnEvent(uint in_eventID, GameObject in_gameObjectID, float in_fPercent)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000B57")]
	[Address(RVA = "0xCA8064", Offset = "0xCA8064", VA = "0xCA8064")]
	public static void StopAll(GameObject in_gameObjectID)
	{
	}

	[Token(Token = "0x6000B58")]
	[Address(RVA = "0xCA8160", Offset = "0xCA8160", VA = "0xCA8160")]
	public static void StopAll()
	{
	}

	[Token(Token = "0x6000B59")]
	[Address(RVA = "0xCA81D4", Offset = "0xCA81D4", VA = "0xCA81D4")]
	public static AKRESULT SetMultiplePositions(GameObject in_GameObjectID, AkPositionArray in_pPositions, ushort in_NumPositions, AkMultiPositionType in_eMultiPositionType)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000B5A")]
	[Address(RVA = "0xCA8314", Offset = "0xCA8314", VA = "0xCA8314")]
	public static AKRESULT ClearBanks()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000B5B")]
	[Address(RVA = "0xCA838C", Offset = "0xCA838C", VA = "0xCA838C")]
	public static AKRESULT LoadBank(string in_pszString, out uint out_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000B5C")]
	[Address(RVA = "0xCA8438", Offset = "0xCA8438", VA = "0xCA8438")]
	public static AKRESULT LoadBankMemoryView(IntPtr in_pInMemoryBankPtr, uint in_uInMemoryBankSize, out uint out_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000B5D")]
	[Address(RVA = "0xCA84D4", Offset = "0xCA84D4", VA = "0xCA84D4")]
	public static AKRESULT LoadBank(string in_pszString, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie, out uint out_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000B5E")]
	[Address(RVA = "0xCA8648", Offset = "0xCA8648", VA = "0xCA8648")]
	public static AKRESULT UnloadBank(uint in_bankID, IntPtr in_pInMemoryBankPtr)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000B5F")]
	[Address(RVA = "0xCA86DC", Offset = "0xCA86DC", VA = "0xCA86DC")]
	public static AKRESULT UnloadBank(uint in_bankID, IntPtr in_pInMemoryBankPtr, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000B60")]
	[Address(RVA = "0xCA8838", Offset = "0xCA8838", VA = "0xCA8838")]
	public static AKRESULT PrepareBank(AkPreparationType in_PreparationType, uint in_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000B61")]
	[Address(RVA = "0xCA88CC", Offset = "0xCA88CC", VA = "0xCA88CC")]
	public static AKRESULT AddListener(GameObject in_emitterGameObj, GameObject in_listenerGameObj)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000B62")]
	[Address(RVA = "0xCA8A00", Offset = "0xCA8A00", VA = "0xCA8A00")]
	public static AKRESULT RemoveListener(GameObject in_emitterGameObj, GameObject in_listenerGameObj)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000B63")]
	[Address(RVA = "0xCA8B34", Offset = "0xCA8B34", VA = "0xCA8B34")]
	public static AKRESULT AddDefaultListener(GameObject in_listenerGameObj)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000B64")]
	[Address(RVA = "0xCA8C30", Offset = "0xCA8C30", VA = "0xCA8C30")]
	public static AKRESULT RemoveDefaultListener(GameObject in_listenerGameObj)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000B65")]
	[Address(RVA = "0xCA8D2C", Offset = "0xCA8D2C", VA = "0xCA8D2C")]
	public static AKRESULT SetRTPCValue(uint in_rtpcID, float in_value, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000B66")]
	[Address(RVA = "0xCA8E68", Offset = "0xCA8E68", VA = "0xCA8E68")]
	public static AKRESULT SetRTPCValue(uint in_rtpcID, float in_value)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000B67")]
	[Address(RVA = "0xCA8EFC", Offset = "0xCA8EFC", VA = "0xCA8EFC")]
	public static AKRESULT SetRTPCValue(string in_pszRtpcName, float in_value, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000B68")]
	[Address(RVA = "0xCA9050", Offset = "0xCA9050", VA = "0xCA9050")]
	public static AKRESULT SetSwitch(uint in_switchGroup, uint in_switchState, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000B69")]
	[Address(RVA = "0xCA917C", Offset = "0xCA917C", VA = "0xCA917C")]
	public static AKRESULT SetState(uint in_stateGroup, uint in_state)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000B6A")]
	[Address(RVA = "0xCA9210", Offset = "0xCA9210", VA = "0xCA9210")]
	public static AKRESULT SetObjectObstructionAndOcclusion(GameObject in_EmitterID, GameObject in_ListenerID, float in_fObstructionLevel, float in_fOcclusionLevel)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000B6B")]
	[Address(RVA = "0xCA9374", Offset = "0xCA9374", VA = "0xCA9374")]
	public static AKRESULT Suspend(bool in_bRenderAnyway)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000B6C")]
	[Address(RVA = "0xCA93FC", Offset = "0xCA93FC", VA = "0xCA93FC")]
	public static AKRESULT WakeupFromSuspend()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000B6D")]
	[Address(RVA = "0xCA9474", Offset = "0xCA9474", VA = "0xCA9474")]
	public static AKRESULT RemoveGeometry(ulong in_SetID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000B6E")]
	[Address(RVA = "0xCA94F8", Offset = "0xCA94F8", VA = "0xCA94F8")]
	public static AKRESULT RemoveRoom(ulong in_RoomID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000B6F")]
	[Address(RVA = "0xCA957C", Offset = "0xCA957C", VA = "0xCA957C")]
	public static AKRESULT RemovePortal(ulong in_PortalID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000B70")]
	[Address(RVA = "0xCA9600", Offset = "0xCA9600", VA = "0xCA9600")]
	public static AKRESULT SetGameObjectInRoom(GameObject in_gameObjectID, ulong in_CurrentRoomID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000B71")]
	[Address(RVA = "0xCA971C", Offset = "0xCA971C", VA = "0xCA971C")]
	public static AKRESULT SetEarlyReflectionsAuxSend(GameObject in_gameObjectID, uint in_auxBusID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000B72")]
	[Address(RVA = "0xCA9838", Offset = "0xCA9838", VA = "0xCA9838")]
	public static AKRESULT SetEarlyReflectionsVolume(GameObject in_gameObjectID, float in_fSendVolume)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000B73")]
	[Address(RVA = "0xCA7718", Offset = "0xCA7718", VA = "0xCA7718")]
	public static AKRESULT SetPortalObstructionAndOcclusion(ulong in_PortalID, float in_fObstruction, float in_fOcclusion)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000B74")]
	[Address(RVA = "0xCA99EC", Offset = "0xCA99EC", VA = "0xCA99EC")]
	public static void SetErrorLogger(AkLogger.ErrorLoggerInteropDelegate logger)
	{
	}

	[Token(Token = "0x6000B75")]
	[Address(RVA = "0xCA9A74", Offset = "0xCA9A74", VA = "0xCA9A74")]
	public static void SetErrorLogger()
	{
	}

	[Token(Token = "0x6000B76")]
	[Address(RVA = "0xCA9AE8", Offset = "0xCA9AE8", VA = "0xCA9AE8")]
	public static AKRESULT Init(AkInitializationSettings settings)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000B77")]
	[Address(RVA = "0xCA9B80", Offset = "0xCA9B80", VA = "0xCA9B80")]
	public static AKRESULT InitSpatialAudio(AkSpatialAudioInitSettings settings)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000B78")]
	[Address(RVA = "0xCA9CA0", Offset = "0xCA9CA0", VA = "0xCA9CA0")]
	public static AKRESULT InitCommunication(AkCommunicationSettings settings)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000B79")]
	[Address(RVA = "0xCA9D38", Offset = "0xCA9D38", VA = "0xCA9D38")]
	public static void Term()
	{
	}

	[Token(Token = "0x6000B7A")]
	[Address(RVA = "0xCA9DAC", Offset = "0xCA9DAC", VA = "0xCA9DAC")]
	public static AKRESULT SetBasePath(string in_pszBasePath)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000B7B")]
	[Address(RVA = "0xCA9E48", Offset = "0xCA9E48", VA = "0xCA9E48")]
	public static AKRESULT SetCurrentLanguage(string in_pszAudioSrcPath)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000B7C")]
	[Address(RVA = "0xCA9EE4", Offset = "0xCA9EE4", VA = "0xCA9EE4")]
	public static AKRESULT LoadFilePackage(string in_pszFilePackageName, out uint out_uPackageID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000B7D")]
	[Address(RVA = "0xCA9F90", Offset = "0xCA9F90", VA = "0xCA9F90")]
	public static AKRESULT AddBasePath(string in_pszBasePath)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000B7E")]
	[Address(RVA = "0xCAA02C", Offset = "0xCAA02C", VA = "0xCAA02C")]
	public static AKRESULT SetDecodedBankPath(string in_DecodedPath)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000B7F")]
	[Address(RVA = "0xCAA0C8", Offset = "0xCAA0C8", VA = "0xCAA0C8")]
	public static AKRESULT LoadAndDecodeBank(string in_pszString, bool in_bSaveDecodedBank, out uint out_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000B80")]
	[Address(RVA = "0xCAA180", Offset = "0xCAA180", VA = "0xCAA180")]
	public static string GetCurrentLanguage()
	{
		return null;
	}

	[Token(Token = "0x6000B81")]
	[Address(RVA = "0xCAA2C4", Offset = "0xCAA2C4", VA = "0xCAA2C4")]
	public static AKRESULT SetObjectPosition(GameObject in_GameObjectID, Vector3 Pos, Vector3 Front, Vector3 Top)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000B82")]
	[Address(RVA = "0xCAA474", Offset = "0xCAA474", VA = "0xCAA474")]
	public static AKRESULT SetListeners(GameObject in_emitterGameObj, ulong[] in_pListenerGameObjs, uint in_uNumListeners)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000B83")]
	[Address(RVA = "0xCAA5A8", Offset = "0xCAA5A8", VA = "0xCAA5A8")]
	public static uint GetMajorMinorVersion()
	{
		return default(uint);
	}

	[Token(Token = "0x6000B84")]
	[Address(RVA = "0xCAA620", Offset = "0xCAA620", VA = "0xCAA620")]
	public static uint GetSubminorBuildVersion()
	{
		return default(uint);
	}

	[Token(Token = "0x6000B85")]
	[Address(RVA = "0xCAA698", Offset = "0xCAA698", VA = "0xCAA698")]
	public static AKRESULT SetRoomPortal(ulong in_PortalID, AkTransform Transform, Vector3 Extent, bool bEnabled, ulong FrontRoom, ulong BackRoom)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000B86")]
	[Address(RVA = "0xCAA868", Offset = "0xCAA868", VA = "0xCAA868")]
	public static AKRESULT SetRoom(ulong in_RoomID, AkRoomParams in_roomParams, string in_pName)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000B87")]
	[Address(RVA = "0xCAA954", Offset = "0xCAA954", VA = "0xCAA954")]
	public static AKRESULT RegisterSpatialAudioListener(GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000B88")]
	[Address(RVA = "0xCAAA50", Offset = "0xCAAA50", VA = "0xCAAA50")]
	public static AKRESULT UnregisterSpatialAudioListener(GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000B89")]
	[Address(RVA = "0xCAAB4C", Offset = "0xCAAB4C", VA = "0xCAAB4C")]
	public static AKRESULT SetGeometry(ulong in_GeomSetID, AkTriangleArray Triangles, uint NumTriangles, Vector3[] Vertices, uint NumVertices, AkAcousticSurfaceArray Surfaces, uint NumSurfaces, ulong RoomID, bool EnableDiffraction, bool EnableDiffractionOnBoundaryEdges)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000B8A")]
	[Address(RVA = "0xCAAD0C", Offset = "0xCAAD0C", VA = "0xCAAD0C")]
	public static uint PostEventOnRoom(uint in_eventID, ulong in_roomID)
	{
		return default(uint);
	}

	[Token(Token = "0x6000B8B")]
	[Address(RVA = "0xCAA260", Offset = "0xCAA260", VA = "0xCAA260")]
	public static string StringFromIntPtrOSString(IntPtr ptr)
	{
		return null;
	}

	[Token(Token = "0x6000B8C")]
	[Address(RVA = "0xCAAE2C", Offset = "0xCAAE2C", VA = "0xCAAE2C")]
	public static string StringFromIntPtrString(IntPtr ptr)
	{
		return null;
	}

	[Token(Token = "0x6000B8D")]
	[Address(RVA = "0xCAAE94", Offset = "0xCAAE94", VA = "0xCAAE94")]
	private static ulong InternalGameObjectHash(GameObject gameObject)
	{
		return default(ulong);
	}

	[Token(Token = "0x6000B8E")]
	[Address(RVA = "0xCA7968", Offset = "0xCA7968", VA = "0xCA7968")]
	public static ulong GetAkGameObjectID(GameObject gameObject)
	{
		return default(ulong);
	}

	[Token(Token = "0x6000B8F")]
	[Address(RVA = "0xCAB2C4", Offset = "0xCAB2C4", VA = "0xCAB2C4")]
	public static AKRESULT RegisterGameObj(GameObject gameObject, string name)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000B90")]
	[Address(RVA = "0xCAB4A8", Offset = "0xCAB4A8", VA = "0xCAB4A8")]
	public static AKRESULT UnregisterGameObj(GameObject gameObject)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000B92")]
	[Address(RVA = "0xCA79E0", Offset = "0xCA79E0", VA = "0xCA79E0")]
	public static void PreGameObjectAPICall(GameObject gameObject, ulong id)
	{
	}

	[Token(Token = "0x6000B93")]
	[Address(RVA = "0xCAB828", Offset = "0xCAB828", VA = "0xCAB828")]
	private static void PreGameObjectAPICallUserHook(GameObject gameObject, ulong id)
	{
	}

	[Token(Token = "0x6000B94")]
	[Address(RVA = "0xCAB400", Offset = "0xCAB400", VA = "0xCAB400")]
	private static void PostRegisterGameObjUserHook(AKRESULT result, GameObject gameObject, ulong id)
	{
	}

	[Token(Token = "0x6000B95")]
	[Address(RVA = "0xCAB5A8", Offset = "0xCAB5A8", VA = "0xCAB5A8")]
	private static void PostUnregisterGameObjUserHook(AKRESULT result, GameObject gameObject, ulong id)
	{
	}

	[Token(Token = "0x6000B96")]
	[Address(RVA = "0xCAB970", Offset = "0xCAB970", VA = "0xCAB970")]
	private static void AutoRegister(GameObject gameObject, ulong id)
	{
	}

	[Token(Token = "0x6000B97")]
	[Address(RVA = "0xCAB8EC", Offset = "0xCAB8EC", VA = "0xCAB8EC")]
	private static bool IsInRegisteredList(ulong id)
	{
		return default(bool);
	}
}
[Token(Token = "0x20001EE")]
public class AkUnityPlatformSpecificSettings : IDisposable
{
	[Token(Token = "0x40008BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40008BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x6000B9F")]
	[Address(RVA = "0xCB7DB0", Offset = "0xCB7DB0", VA = "0xCB7DB0")]
	internal AkUnityPlatformSpecificSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000BA0")]
	[Address(RVA = "0xCB7DF0", Offset = "0xCB7DF0", VA = "0xCB7DF0", Slot = "1")]
	~AkUnityPlatformSpecificSettings()
	{
	}

	[Token(Token = "0x6000BA1")]
	[Address(RVA = "0xCB7E60", Offset = "0xCB7E60", VA = "0xCB7E60", Slot = "5")]
	public virtual void Dispose()
	{
	}
}
[Token(Token = "0x20001EF")]
public enum AKRESULT
{
	[Token(Token = "0x40008BF")]
	AK_NotImplemented = 0,
	[Token(Token = "0x40008C0")]
	AK_Success = 1,
	[Token(Token = "0x40008C1")]
	AK_Fail = 2,
	[Token(Token = "0x40008C2")]
	AK_PartialSuccess = 3,
	[Token(Token = "0x40008C3")]
	AK_NotCompatible = 4,
	[Token(Token = "0x40008C4")]
	AK_AlreadyConnected = 5,
	[Token(Token = "0x40008C5")]
	AK_InvalidFile = 7,
	[Token(Token = "0x40008C6")]
	AK_AudioFileHeaderTooLarge = 8,
	[Token(Token = "0x40008C7")]
	AK_MaxReached = 9,
	[Token(Token = "0x40008C8")]
	AK_InvalidID = 14,
	[Token(Token = "0x40008C9")]
	AK_IDNotFound = 15,
	[Token(Token = "0x40008CA")]
	AK_InvalidInstanceID = 16,
	[Token(Token = "0x40008CB")]
	AK_NoMoreData = 17,
	[Token(Token = "0x40008CC")]
	AK_InvalidStateGroup = 20,
	[Token(Token = "0x40008CD")]
	AK_ChildAlreadyHasAParent = 21,
	[Token(Token = "0x40008CE")]
	AK_InvalidLanguage = 22,
	[Token(Token = "0x40008CF")]
	AK_CannotAddItseflAsAChild = 23,
	[Token(Token = "0x40008D0")]
	AK_InvalidParameter = 31,
	[Token(Token = "0x40008D1")]
	AK_ElementAlreadyInList = 35,
	[Token(Token = "0x40008D2")]
	AK_PathNotFound = 36,
	[Token(Token = "0x40008D3")]
	AK_PathNoVertices = 37,
	[Token(Token = "0x40008D4")]
	AK_PathNotRunning = 38,
	[Token(Token = "0x40008D5")]
	AK_PathNotPaused = 39,
	[Token(Token = "0x40008D6")]
	AK_PathNodeAlreadyInList = 40,
	[Token(Token = "0x40008D7")]
	AK_PathNodeNotInList = 41,
	[Token(Token = "0x40008D8")]
	AK_DataNeeded = 43,
	[Token(Token = "0x40008D9")]
	AK_NoDataNeeded = 44,
	[Token(Token = "0x40008DA")]
	AK_DataReady = 45,
	[Token(Token = "0x40008DB")]
	AK_NoDataReady = 46,
	[Token(Token = "0x40008DC")]
	AK_InsufficientMemory = 52,
	[Token(Token = "0x40008DD")]
	AK_Cancelled = 53,
	[Token(Token = "0x40008DE")]
	AK_UnknownBankID = 54,
	[Token(Token = "0x40008DF")]
	AK_BankReadError = 56,
	[Token(Token = "0x40008E0")]
	AK_InvalidSwitchType = 57,
	[Token(Token = "0x40008E1")]
	AK_FormatNotReady = 63,
	[Token(Token = "0x40008E2")]
	AK_WrongBankVersion = 64,
	[Token(Token = "0x40008E3")]
	AK_FileNotFound = 66,
	[Token(Token = "0x40008E4")]
	AK_DeviceNotReady = 67,
	[Token(Token = "0x40008E5")]
	AK_BankAlreadyLoaded = 69,
	[Token(Token = "0x40008E6")]
	AK_RenderedFX = 71,
	[Token(Token = "0x40008E7")]
	AK_ProcessNeeded = 72,
	[Token(Token = "0x40008E8")]
	AK_ProcessDone = 73,
	[Token(Token = "0x40008E9")]
	AK_MemManagerNotInitialized = 74,
	[Token(Token = "0x40008EA")]
	AK_StreamMgrNotInitialized = 75,
	[Token(Token = "0x40008EB")]
	AK_SSEInstructionsNotSupported = 76,
	[Token(Token = "0x40008EC")]
	AK_Busy = 77,
	[Token(Token = "0x40008ED")]
	AK_UnsupportedChannelConfig = 78,
	[Token(Token = "0x40008EE")]
	AK_PluginMediaNotAvailable = 79,
	[Token(Token = "0x40008EF")]
	AK_MustBeVirtualized = 80,
	[Token(Token = "0x40008F0")]
	AK_CommandTooLarge = 81,
	[Token(Token = "0x40008F1")]
	AK_RejectedByFilter = 82,
	[Token(Token = "0x40008F2")]
	AK_InvalidCustomPlatformName = 83,
	[Token(Token = "0x40008F3")]
	AK_DLLCannotLoad = 84,
	[Token(Token = "0x40008F4")]
	AK_DLLPathNotFound = 85,
	[Token(Token = "0x40008F5")]
	AK_NoJavaVM = 86,
	[Token(Token = "0x40008F6")]
	AK_OpenSLError = 87,
	[Token(Token = "0x40008F7")]
	AK_PluginNotRegistered = 88,
	[Token(Token = "0x40008F8")]
	AK_DataAlignmentError = 89,
	[Token(Token = "0x40008F9")]
	AK_DeviceNotCompatible = 90,
	[Token(Token = "0x40008FA")]
	AK_DuplicateUniqueID = 91,
	[Token(Token = "0x40008FB")]
	AK_InitBankNotLoaded = 92,
	[Token(Token = "0x40008FC")]
	AK_DeviceNotFound = 93,
	[Token(Token = "0x40008FD")]
	AK_PlayingIDNotFound = 94,
	[Token(Token = "0x40008FE")]
	AK_InvalidFloatValue = 95,
	[Token(Token = "0x40008FF")]
	AK_FileFormatMismatch = 96,
	[Token(Token = "0x4000900")]
	AK_NoDistinctListener = 97,
	[Token(Token = "0x4000901")]
	AK_ACP_Error = 98
}
[Token(Token = "0x20001F0")]
public class AkAcousticSurface : IDisposable
{
	[Token(Token = "0x4000902")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000903")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170001A8")]
	public uint textureID
	{
		[Token(Token = "0x6000BA5")]
		[Address(RVA = "0xDDE0C4", Offset = "0xDDE0C4", VA = "0xDDE0C4")]
		set
		{
		}
	}

	[Token(Token = "0x170001A9")]
	public float occlusion
	{
		[Token(Token = "0x6000BA6")]
		[Address(RVA = "0xDDE0D0", Offset = "0xDDE0D0", VA = "0xDDE0D0")]
		set
		{
		}
	}

	[Token(Token = "0x170001AA")]
	public string strName
	{
		[Token(Token = "0x6000BA7")]
		[Address(RVA = "0xDDE0DC", Offset = "0xDDE0DC", VA = "0xDDE0DC")]
		set
		{
		}
	}

	[Token(Token = "0x6000BA2")]
	[Address(RVA = "0xDDDF0C", Offset = "0xDDDF0C", VA = "0xDDDF0C")]
	internal AkAcousticSurface(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000BA3")]
	[Address(RVA = "0xDDDF4C", Offset = "0xDDDF4C", VA = "0xDDDF4C", Slot = "1")]
	~AkAcousticSurface()
	{
	}

	[Token(Token = "0x6000BA4")]
	[Address(RVA = "0xDDDFBC", Offset = "0xDDDFBC", VA = "0xDDDFBC", Slot = "5")]
	public virtual void Dispose()
	{
	}
}
[Token(Token = "0x20001F1")]
public enum AkActionOnEventType
{
	[Token(Token = "0x4000905")]
	AkActionOnEventType_Stop,
	[Token(Token = "0x4000906")]
	AkActionOnEventType_Pause,
	[Token(Token = "0x4000907")]
	AkActionOnEventType_Resume,
	[Token(Token = "0x4000908")]
	AkActionOnEventType_Break,
	[Token(Token = "0x4000909")]
	AkActionOnEventType_ReleaseEnvelope
}
[Token(Token = "0x20001F2")]
public class AkAudioSourceChangeCallbackInfo : IDisposable
{
	[Token(Token = "0x400090A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x400090B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170001AB")]
	public bool bOtherAudioPlaying
	{
		[Token(Token = "0x6000BAC")]
		[Address(RVA = "0xDE0A1C", Offset = "0xDE0A1C", VA = "0xDE0A1C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000BA8")]
	[Address(RVA = "0xDE0830", Offset = "0xDE0830", VA = "0xDE0830")]
	internal AkAudioSourceChangeCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000BA9")]
	[Address(RVA = "0xDE0870", Offset = "0xDE0870", VA = "0xDE0870", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000BAA")]
	[Address(RVA = "0xDE08A4", Offset = "0xDE08A4", VA = "0xDE08A4", Slot = "1")]
	~AkAudioSourceChangeCallbackInfo()
	{
	}

	[Token(Token = "0x6000BAB")]
	[Address(RVA = "0xDE0914", Offset = "0xDE0914", VA = "0xDE0914", Slot = "6")]
	public virtual void Dispose()
	{
	}
}
[Token(Token = "0x20001F3")]
public class AkBankCallbackInfo : IDisposable
{
	[Token(Token = "0x400090C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x400090D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170001AC")]
	public uint bankID
	{
		[Token(Token = "0x6000BB1")]
		[Address(RVA = "0xDE1430", Offset = "0xDE1430", VA = "0xDE1430")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x170001AD")]
	public IntPtr inMemoryBankPtr
	{
		[Token(Token = "0x6000BB2")]
		[Address(RVA = "0xDE143C", Offset = "0xDE143C", VA = "0xDE143C")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x170001AE")]
	public AKRESULT loadResult
	{
		[Token(Token = "0x6000BB3")]
		[Address(RVA = "0xDE1448", Offset = "0xDE1448", VA = "0xDE1448")]
		get
		{
			return default(AKRESULT);
		}
	}

	[Token(Token = "0x6000BAD")]
	[Address(RVA = "0xDE1244", Offset = "0xDE1244", VA = "0xDE1244")]
	internal AkBankCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000BAE")]
	[Address(RVA = "0xDE1284", Offset = "0xDE1284", VA = "0xDE1284", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000BAF")]
	[Address(RVA = "0xDE12B8", Offset = "0xDE12B8", VA = "0xDE12B8", Slot = "1")]
	~AkBankCallbackInfo()
	{
	}

	[Token(Token = "0x6000BB0")]
	[Address(RVA = "0xDE1328", Offset = "0xDE1328", VA = "0xDE1328", Slot = "6")]
	public virtual void Dispose()
	{
	}
}
[Token(Token = "0x20001F4")]
public class AkCallbackInfo : IDisposable
{
	[Token(Token = "0x400090E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x400090F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x6000BB4")]
	[Address(RVA = "0xDE35C8", Offset = "0xDE35C8", VA = "0xDE35C8")]
	internal AkCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000BB5")]
	[Address(RVA = "0xDE3608", Offset = "0xDE3608", VA = "0xDE3608", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000BB6")]
	[Address(RVA = "0xDE363C", Offset = "0xDE363C", VA = "0xDE363C", Slot = "1")]
	~AkCallbackInfo()
	{
	}

	[Token(Token = "0x6000BB7")]
	[Address(RVA = "0xDE36AC", Offset = "0xDE36AC", VA = "0xDE36AC", Slot = "6")]
	public virtual void Dispose()
	{
	}
}
[Token(Token = "0x20001F5")]
public class AkCallbackSerializer
{
	[Token(Token = "0x6000BB8")]
	[Address(RVA = "0xDE3A20", Offset = "0xDE3A20", VA = "0xDE3A20")]
	public static AKRESULT Init(IntPtr in_pMemory, uint in_uSize)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000BB9")]
	[Address(RVA = "0xDE3B08", Offset = "0xDE3B08", VA = "0xDE3B08")]
	public static void Term()
	{
	}

	[Token(Token = "0x6000BBA")]
	[Address(RVA = "0xDE46C4", Offset = "0xDE46C4", VA = "0xDE46C4")]
	public static IntPtr Lock()
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000BBB")]
	[Address(RVA = "0xDE5130", Offset = "0xDE5130", VA = "0xDE5130")]
	public static void Unlock()
	{
	}
}
[Token(Token = "0x20001F6")]
public enum AkCallbackType
{
	[Token(Token = "0x4000911")]
	AK_EndOfEvent = 1,
	[Token(Token = "0x4000912")]
	AK_EndOfDynamicSequenceItem = 2,
	[Token(Token = "0x4000913")]
	AK_Marker = 4,
	[Token(Token = "0x4000914")]
	AK_Duration = 8,
	[Token(Token = "0x4000915")]
	AK_SpeakerVolumeMatrix = 16,
	[Token(Token = "0x4000916")]
	AK_Starvation = 32,
	[Token(Token = "0x4000917")]
	AK_MusicPlaylistSelect = 64,
	[Token(Token = "0x4000918")]
	AK_MusicPlayStarted = 128,
	[Token(Token = "0x4000919")]
	AK_MusicSyncBeat = 256,
	[Token(Token = "0x400091A")]
	AK_MusicSyncBar = 512,
	[Token(Token = "0x400091B")]
	AK_MusicSyncEntry = 1024,
	[Token(Token = "0x400091C")]
	AK_MusicSyncExit = 2048,
	[Token(Token = "0x400091D")]
	AK_MusicSyncGrid = 4096,
	[Token(Token = "0x400091E")]
	AK_MusicSyncUserCue = 8192,
	[Token(Token = "0x400091F")]
	AK_MusicSyncPoint = 16384,
	[Token(Token = "0x4000920")]
	AK_MusicSyncAll = 32512,
	[Token(Token = "0x4000921")]
	AK_MIDIEvent = 65536,
	[Token(Token = "0x4000922")]
	AK_CallbackBits = 1048575,
	[Token(Token = "0x4000923")]
	AK_EnableGetSourcePlayPosition = 1048576,
	[Token(Token = "0x4000924")]
	AK_EnableGetMusicPlayPosition = 2097152,
	[Token(Token = "0x4000925")]
	AK_EnableGetSourceStreamBuffering = 4194304,
	[Token(Token = "0x4000926")]
	AK_Monitoring = 536870912,
	[Token(Token = "0x4000927")]
	AK_AudioSourceChange = 587202560,
	[Token(Token = "0x4000928")]
	AK_Bank = 1073741824,
	[Token(Token = "0x4000929")]
	AK_AudioInterruption = 570425344
}
[Token(Token = "0x20001F7")]
public class AkChannelConfig : IDisposable
{
	[Token(Token = "0x400092A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x400092B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x6000BBC")]
	[Address(RVA = "0xDE5CA8", Offset = "0xDE5CA8", VA = "0xDE5CA8")]
	internal AkChannelConfig(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000BBD")]
	[Address(RVA = "0xDE5CE8", Offset = "0xDE5CE8", VA = "0xDE5CE8", Slot = "1")]
	~AkChannelConfig()
	{
	}

	[Token(Token = "0x6000BBE")]
	[Address(RVA = "0xDE5D58", Offset = "0xDE5D58", VA = "0xDE5D58", Slot = "5")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000BBF")]
	[Address(RVA = "0xDE5E60", Offset = "0xDE5E60", VA = "0xDE5E60")]
	public void SetStandard(uint in_uChannelMask)
	{
	}

	[Token(Token = "0x6000BC0")]
	[Address(RVA = "0xDE5E6C", Offset = "0xDE5E6C", VA = "0xDE5E6C")]
	public void SetAnonymous(uint in_uNumChannels)
	{
	}

	[Token(Token = "0x6000BC1")]
	[Address(RVA = "0xDE5E78", Offset = "0xDE5E78", VA = "0xDE5E78")]
	public void SetAmbisonic(uint in_uNumChannels)
	{
	}
}
[Token(Token = "0x20001F8")]
public enum AkCurveInterpolation
{
	[Token(Token = "0x400092D")]
	AkCurveInterpolation_Log3 = 0,
	[Token(Token = "0x400092E")]
	AkCurveInterpolation_Sine = 1,
	[Token(Token = "0x400092F")]
	AkCurveInterpolation_Log1 = 2,
	[Token(Token = "0x4000930")]
	AkCurveInterpolation_InvSCurve = 3,
	[Token(Token = "0x4000931")]
	AkCurveInterpolation_Linear = 4,
	[Token(Token = "0x4000932")]
	AkCurveInterpolation_SCurve = 5,
	[Token(Token = "0x4000933")]
	AkCurveInterpolation_Exp1 = 6,
	[Token(Token = "0x4000934")]
	AkCurveInterpolation_SineRecip = 7,
	[Token(Token = "0x4000935")]
	AkCurveInterpolation_Exp3 = 8,
	[Token(Token = "0x4000936")]
	AkCurveInterpolation_LastFadeCurve = 8,
	[Token(Token = "0x4000937")]
	AkCurveInterpolation_Constant = 9
}
[Token(Token = "0x20001F9")]
public class AkDeviceSettings : IDisposable
{
	[Token(Token = "0x4000938")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000939")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170001AF")]
	public uint uIOMemorySize
	{
		[Token(Token = "0x6000BC5")]
		[Address(RVA = "0xDE5EE8", Offset = "0xDE5EE8", VA = "0xDE5EE8")]
		set
		{
		}
	}

	[Token(Token = "0x170001B0")]
	public float fTargetAutoStmBufferLength
	{
		[Token(Token = "0x6000BC6")]
		[Address(RVA = "0xDE5EF4", Offset = "0xDE5EF4", VA = "0xDE5EF4")]
		set
		{
		}
	}

	[Token(Token = "0x170001B1")]
	public bool bUseStreamCache
	{
		[Token(Token = "0x6000BC7")]
		[Address(RVA = "0xDE5F00", Offset = "0xDE5F00", VA = "0xDE5F00")]
		set
		{
		}
	}

	[Token(Token = "0x170001B2")]
	public uint uMaxCachePinnedBytes
	{
		[Token(Token = "0x6000BC8")]
		[Address(RVA = "0xDE5F10", Offset = "0xDE5F10", VA = "0xDE5F10")]
		set
		{
		}
	}

	[Token(Token = "0x6000BC2")]
	[Address(RVA = "0xDE71C0", Offset = "0xDE71C0", VA = "0xDE71C0")]
	internal AkDeviceSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000BC3")]
	[Address(RVA = "0xDE7200", Offset = "0xDE7200", VA = "0xDE7200", Slot = "1")]
	~AkDeviceSettings()
	{
	}

	[Token(Token = "0x6000BC4")]
	[Address(RVA = "0xDE7270", Offset = "0xDE7270", VA = "0xDE7270", Slot = "5")]
	public virtual void Dispose()
	{
	}
}
[Token(Token = "0x20001FA")]
public class AkDurationCallbackInfo : AkEventCallbackInfo
{
	[Token(Token = "0x400093A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IntPtr swigCPtr;

	[Token(Token = "0x170001B3")]
	public float fEstimatedDuration
	{
		[Token(Token = "0x6000BCD")]
		[Address(RVA = "0xDE7794", Offset = "0xDE7794", VA = "0xDE7794")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000BC9")]
	[Address(RVA = "0xDE558C", Offset = "0xDE558C", VA = "0xDE558C")]
	internal AkDurationCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000BCA")]
	[Address(RVA = "0xDE73F8", Offset = "0xDE73F8", VA = "0xDE73F8", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000BCB")]
	[Address(RVA = "0xDE74A4", Offset = "0xDE74A4", VA = "0xDE74A4", Slot = "1")]
	~AkDurationCallbackInfo()
	{
	}

	[Token(Token = "0x6000BCC")]
	[Address(RVA = "0xDE7574", Offset = "0xDE7574", VA = "0xDE7574", Slot = "6")]
	public override void Dispose()
	{
	}
}
[Token(Token = "0x20001FB")]
public class AkDynamicSequenceItemCallbackInfo : AkCallbackInfo
{
	[Token(Token = "0x400093B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private IntPtr swigCPtr;

	[Token(Token = "0x6000BCE")]
	[Address(RVA = "0xDE545C", Offset = "0xDE545C", VA = "0xDE545C")]
	internal AkDynamicSequenceItemCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000BCF")]
	[Address(RVA = "0xDE77A0", Offset = "0xDE77A0", VA = "0xDE77A0", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000BD0")]
	[Address(RVA = "0xDE77F0", Offset = "0xDE77F0", VA = "0xDE77F0", Slot = "1")]
	~AkDynamicSequenceItemCallbackInfo()
	{
	}

	[Token(Token = "0x6000BD1")]
	[Address(RVA = "0xDE7858", Offset = "0xDE7858", VA = "0xDE7858", Slot = "6")]
	public override void Dispose()
	{
	}
}
[Token(Token = "0x20001FC")]
public class AkEventCallbackInfo : AkCallbackInfo
{
	[Token(Token = "0x400093C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private IntPtr swigCPtr;

	[Token(Token = "0x6000BD2")]
	[Address(RVA = "0xDE5404", Offset = "0xDE5404", VA = "0xDE5404")]
	internal AkEventCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000BD3")]
	[Address(RVA = "0xDE7454", Offset = "0xDE7454", VA = "0xDE7454", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000BD4")]
	[Address(RVA = "0xDE750C", Offset = "0xDE750C", VA = "0xDE750C", Slot = "1")]
	~AkEventCallbackInfo()
	{
	}

	[Token(Token = "0x6000BD5")]
	[Address(RVA = "0xDE7684", Offset = "0xDE7684", VA = "0xDE7684", Slot = "6")]
	public override void Dispose()
	{
	}
}
[Token(Token = "0x20001FD")]
public class AkInitSettings : IDisposable
{
	[Token(Token = "0x400093D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x400093E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170001B4")]
	public uint uMaxNumPaths
	{
		[Token(Token = "0x6000BD9")]
		[Address(RVA = "0xDE6CB8", Offset = "0xDE6CB8", VA = "0xDE6CB8")]
		set
		{
		}
	}

	[Token(Token = "0x170001B5")]
	public uint uCommandQueueSize
	{
		[Token(Token = "0x6000BDA")]
		[Address(RVA = "0xDE6CC4", Offset = "0xDE6CC4", VA = "0xDE6CC4")]
		set
		{
		}
	}

	[Token(Token = "0x170001B6")]
	public bool bEnableGameSyncPreparation
	{
		[Token(Token = "0x6000BDB")]
		[Address(RVA = "0xDE5FA0", Offset = "0xDE5FA0", VA = "0xDE5FA0")]
		set
		{
		}
	}

	[Token(Token = "0x170001B7")]
	public uint uContinuousPlaybackLookAhead
	{
		[Token(Token = "0x6000BDC")]
		[Address(RVA = "0xDE5FB0", Offset = "0xDE5FB0", VA = "0xDE5FB0")]
		set
		{
		}
	}

	[Token(Token = "0x170001B8")]
	public uint uNumSamplesPerFrame
	{
		[Token(Token = "0x6000BDD")]
		[Address(RVA = "0xDE6CD0", Offset = "0xDE6CD0", VA = "0xDE6CD0")]
		set
		{
		}
	}

	[Token(Token = "0x170001B9")]
	public uint uMonitorQueuePoolSize
	{
		[Token(Token = "0x6000BDE")]
		[Address(RVA = "0xDE5FBC", Offset = "0xDE5FBC", VA = "0xDE5FBC")]
		set
		{
		}
	}

	[Token(Token = "0x170001BA")]
	public AkOutputSettings settingsMainOutput
	{
		[Token(Token = "0x6000BDF")]
		[Address(RVA = "0xDE6CDC", Offset = "0xDE6CDC", VA = "0xDE6CDC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001BB")]
	public uint uMaxHardwareTimeoutMs
	{
		[Token(Token = "0x6000BE0")]
		[Address(RVA = "0xDE5FC8", Offset = "0xDE5FC8", VA = "0xDE5FC8")]
		set
		{
		}
	}

	[Token(Token = "0x170001BC")]
	public string szPluginDLLPath
	{
		[Token(Token = "0x6000BE2")]
		[Address(RVA = "0xDE6D74", Offset = "0xDE6D74", VA = "0xDE6D74")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000BE1")]
		[Address(RVA = "0xDE6D68", Offset = "0xDE6D68", VA = "0xDE6D68")]
		set
		{
		}
	}

	[Token(Token = "0x170001BD")]
	public float fDebugOutOfRangeLimit
	{
		[Token(Token = "0x6000BE3")]
		[Address(RVA = "0xDE5FE4", Offset = "0xDE5FE4", VA = "0xDE5FE4")]
		set
		{
		}
	}

	[Token(Token = "0x170001BE")]
	public bool bDebugOutOfRangeCheckEnabled
	{
		[Token(Token = "0x6000BE4")]
		[Address(RVA = "0xDE5FD4", Offset = "0xDE5FD4", VA = "0xDE5FD4")]
		set
		{
		}
	}

	[Token(Token = "0x6000BD6")]
	[Address(RVA = "0xDEBA60", Offset = "0xDEBA60", VA = "0xDEBA60")]
	internal AkInitSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000BD7")]
	[Address(RVA = "0xDEBAA0", Offset = "0xDEBAA0", VA = "0xDEBAA0", Slot = "1")]
	~AkInitSettings()
	{
	}

	[Token(Token = "0x6000BD8")]
	[Address(RVA = "0xDEBB10", Offset = "0xDEBB10", VA = "0xDEBB10", Slot = "5")]
	public virtual void Dispose()
	{
	}
}
[Token(Token = "0x20001FE")]
public class AkInitializationSettings : IDisposable
{
	[Token(Token = "0x400093F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000940")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170001BF")]
	public AkStreamMgrSettings streamMgrSettings
	{
		[Token(Token = "0x6000BEA")]
		[Address(RVA = "0xDE6668", Offset = "0xDE6668", VA = "0xDE6668")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001C0")]
	public AkDeviceSettings deviceSettings
	{
		[Token(Token = "0x6000BEB")]
		[Address(RVA = "0xDE65DC", Offset = "0xDE65DC", VA = "0xDE65DC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001C1")]
	public AkInitSettings initSettings
	{
		[Token(Token = "0x6000BEC")]
		[Address(RVA = "0xDE66F8", Offset = "0xDE66F8", VA = "0xDE66F8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001C2")]
	public AkPlatformInitSettings platformSettings
	{
		[Token(Token = "0x6000BED")]
		[Address(RVA = "0xDE6784", Offset = "0xDE6784", VA = "0xDE6784")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001C3")]
	public AkMusicSettings musicSettings
	{
		[Token(Token = "0x6000BEE")]
		[Address(RVA = "0xDE6810", Offset = "0xDE6810", VA = "0xDE6810")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001C4")]
	public AkUnityPlatformSpecificSettings unityPlatformSpecificSettings
	{
		[Token(Token = "0x6000BEF")]
		[Address(RVA = "0xDE68BC", Offset = "0xDE68BC", VA = "0xDE68BC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001C5")]
	public bool useAsyncOpen
	{
		[Token(Token = "0x6000BF0")]
		[Address(RVA = "0xDE6948", Offset = "0xDE6948", VA = "0xDE6948")]
		set
		{
		}
	}

	[Token(Token = "0x6000BE5")]
	[Address(RVA = "0xDEBC58", Offset = "0xDEBC58", VA = "0xDEBC58")]
	internal AkInitializationSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000BE6")]
	[Address(RVA = "0xDEBC98", Offset = "0xDEBC98", VA = "0xDEBC98")]
	internal static IntPtr getCPtr(AkInitializationSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000BE7")]
	[Address(RVA = "0xDEBCE8", Offset = "0xDEBCE8", VA = "0xDEBCE8", Slot = "1")]
	~AkInitializationSettings()
	{
	}

	[Token(Token = "0x6000BE8")]
	[Address(RVA = "0xDEBD58", Offset = "0xDEBD58", VA = "0xDEBD58", Slot = "5")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000BE9")]
	[Address(RVA = "0xDE32C8", Offset = "0xDE32C8", VA = "0xDE32C8")]
	public AkInitializationSettings()
	{
	}
}
[Token(Token = "0x20001FF")]
public class AkMIDIEventCallbackInfo : AkEventCallbackInfo
{
	[Token(Token = "0x4000941")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IntPtr swigCPtr;

	[Token(Token = "0x6000BF1")]
	[Address(RVA = "0xDE54B4", Offset = "0xDE54B4", VA = "0xDE54B4")]
	internal AkMIDIEventCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000BF2")]
	[Address(RVA = "0xDECC2C", Offset = "0xDECC2C", VA = "0xDECC2C", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000BF3")]
	[Address(RVA = "0xDECC88", Offset = "0xDECC88", VA = "0xDECC88", Slot = "1")]
	~AkMIDIEventCallbackInfo()
	{
	}

	[Token(Token = "0x6000BF4")]
	[Address(RVA = "0xDECCF0", Offset = "0xDECCF0", VA = "0xDECCF0", Slot = "6")]
	public override void Dispose()
	{
	}
}
[Token(Token = "0x2000200")]
public class AkMarkerCallbackInfo : AkEventCallbackInfo
{
	[Token(Token = "0x4000942")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IntPtr swigCPtr;

	[Token(Token = "0x6000BF5")]
	[Address(RVA = "0xDE5520", Offset = "0xDE5520", VA = "0xDE5520")]
	internal AkMarkerCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000BF6")]
	[Address(RVA = "0xDECE08", Offset = "0xDECE08", VA = "0xDECE08", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000BF7")]
	[Address(RVA = "0xDECE64", Offset = "0xDECE64", VA = "0xDECE64", Slot = "1")]
	~AkMarkerCallbackInfo()
	{
	}

	[Token(Token = "0x6000BF8")]
	[Address(RVA = "0xDECECC", Offset = "0xDECECC", VA = "0xDECECC", Slot = "6")]
	public override void Dispose()
	{
	}
}
[Token(Token = "0x2000201")]
public enum AkMonitorErrorCode
{
	[Token(Token = "0x4000944")]
	ErrorCode_NoError,
	[Token(Token = "0x4000945")]
	ErrorCode_FileNotFound,
	[Token(Token = "0x4000946")]
	ErrorCode_CannotOpenFile,
	[Token(Token = "0x4000947")]
	ErrorCode_CannotStartStreamNoMemory,
	[Token(Token = "0x4000948")]
	ErrorCode_IODevice,
	[Token(Token = "0x4000949")]
	ErrorCode_IncompatibleIOSettings,
	[Token(Token = "0x400094A")]
	ErrorCode_PluginUnsupportedChannelConfiguration,
	[Token(Token = "0x400094B")]
	ErrorCode_PluginMediaUnavailable,
	[Token(Token = "0x400094C")]
	ErrorCode_PluginInitialisationFailed,
	[Token(Token = "0x400094D")]
	ErrorCode_PluginProcessingFailed,
	[Token(Token = "0x400094E")]
	ErrorCode_PluginExecutionInvalid,
	[Token(Token = "0x400094F")]
	ErrorCode_PluginAllocationFailed,
	[Token(Token = "0x4000950")]
	ErrorCode_VorbisSeekTableRecommended,
	[Token(Token = "0x4000951")]
	ErrorCode_VorbisDecodeError,
	[Token(Token = "0x4000952")]
	ErrorCode_AACDecodeError,
	[Token(Token = "0x4000953")]
	ErrorCode_xWMACreateDecoderFailed,
	[Token(Token = "0x4000954")]
	ErrorCode_ATRAC9DecodeFailed,
	[Token(Token = "0x4000955")]
	ErrorCode_ATRAC9LoopSectionTooSmall,
	[Token(Token = "0x4000956")]
	ErrorCode_InvalidAudioFileHeader,
	[Token(Token = "0x4000957")]
	ErrorCode_AudioFileHeaderTooLarge,
	[Token(Token = "0x4000958")]
	ErrorCode_FileTooSmall,
	[Token(Token = "0x4000959")]
	ErrorCode_TransitionNotAccurateChannel,
	[Token(Token = "0x400095A")]
	ErrorCode_TransitionNotAccuratePluginMismatch,
	[Token(Token = "0x400095B")]
	ErrorCode_TransitionNotAccurateRejectedByPlugin,
	[Token(Token = "0x400095C")]
	ErrorCode_TransitionNotAccurateStarvation,
	[Token(Token = "0x400095D")]
	ErrorCode_NothingToPlay,
	[Token(Token = "0x400095E")]
	ErrorCode_PlayFailed,
	[Token(Token = "0x400095F")]
	ErrorCode_StingerCouldNotBeScheduled,
	[Token(Token = "0x4000960")]
	ErrorCode_TooLongSegmentLookAhead,
	[Token(Token = "0x4000961")]
	ErrorCode_CannotScheduleMusicSwitch,
	[Token(Token = "0x4000962")]
	ErrorCode_TooManySimultaneousMusicSegments,
	[Token(Token = "0x4000963")]
	ErrorCode_PlaylistStoppedForEditing,
	[Token(Token = "0x4000964")]
	ErrorCode_MusicClipsRescheduledAfterTrackEdit,
	[Token(Token = "0x4000965")]
	ErrorCode_CannotPlaySource_Create,
	[Token(Token = "0x4000966")]
	ErrorCode_CannotPlaySource_VirtualOff,
	[Token(Token = "0x4000967")]
	ErrorCode_CannotPlaySource_TimeSkip,
	[Token(Token = "0x4000968")]
	ErrorCode_CannotPlaySource_InconsistentState,
	[Token(Token = "0x4000969")]
	ErrorCode_MediaNotLoaded,
	[Token(Token = "0x400096A")]
	ErrorCode_VoiceStarving,
	[Token(Token = "0x400096B")]
	ErrorCode_StreamingSourceStarving,
	[Token(Token = "0x400096C")]
	ErrorCode_XMADecoderSourceStarving,
	[Token(Token = "0x400096D")]
	ErrorCode_XMADecodingError,
	[Token(Token = "0x400096E")]
	ErrorCode_InvalidXMAData,
	[Token(Token = "0x400096F")]
	ErrorCode_PluginNotRegistered,
	[Token(Token = "0x4000970")]
	ErrorCode_CodecNotRegistered,
	[Token(Token = "0x4000971")]
	ErrorCode_PluginVersionMismatch,
	[Token(Token = "0x4000972")]
	ErrorCode_EventIDNotFound,
	[Token(Token = "0x4000973")]
	ErrorCode_InvalidGroupID,
	[Token(Token = "0x4000974")]
	ErrorCode_SelectedChildNotAvailable,
	[Token(Token = "0x4000975")]
	ErrorCode_SelectedNodeNotAvailable,
	[Token(Token = "0x4000976")]
	ErrorCode_SelectedMediaNotAvailable,
	[Token(Token = "0x4000977")]
	ErrorCode_NoValidSwitch,
	[Token(Token = "0x4000978")]
	ErrorCode_SelectedNodeNotAvailablePlay,
	[Token(Token = "0x4000979")]
	ErrorCode_FeedbackVoiceStarving,
	[Token(Token = "0x400097A")]
	ErrorCode_BankLoadFailed,
	[Token(Token = "0x400097B")]
	ErrorCode_BankUnloadFailed,
	[Token(Token = "0x400097C")]
	ErrorCode_ErrorWhileLoadingBank,
	[Token(Token = "0x400097D")]
	ErrorCode_InsufficientSpaceToLoadBank,
	[Token(Token = "0x400097E")]
	ErrorCode_LowerEngineCommandListFull,
	[Token(Token = "0x400097F")]
	ErrorCode_SeekNoMarker,
	[Token(Token = "0x4000980")]
	ErrorCode_CannotSeekContinuous,
	[Token(Token = "0x4000981")]
	ErrorCode_SeekAfterEof,
	[Token(Token = "0x4000982")]
	ErrorCode_UnknownGameObject,
	[Token(Token = "0x4000983")]
	ErrorCode_UnknownEmitter,
	[Token(Token = "0x4000984")]
	ErrorCode_UnknownListener,
	[Token(Token = "0x4000985")]
	ErrorCode_GameObjectIsNotListener,
	[Token(Token = "0x4000986")]
	ErrorCode_GameObjectIsNotEmitter,
	[Token(Token = "0x4000987")]
	ErrorCode_UnknownGameObjectEvent,
	[Token(Token = "0x4000988")]
	ErrorCode_GameObjectIsNotEmitterEvent,
	[Token(Token = "0x4000989")]
	ErrorCode_ExternalSourceNotResolved,
	[Token(Token = "0x400098A")]
	ErrorCode_FileFormatMismatch,
	[Token(Token = "0x400098B")]
	ErrorCode_CommandQueueFull,
	[Token(Token = "0x400098C")]
	ErrorCode_CommandTooLarge,
	[Token(Token = "0x400098D")]
	ErrorCode_XMACreateDecoderLimitReached,
	[Token(Token = "0x400098E")]
	ErrorCode_XMAStreamBufferTooSmall,
	[Token(Token = "0x400098F")]
	ErrorCode_ModulatorScopeError_Inst,
	[Token(Token = "0x4000990")]
	ErrorCode_ModulatorScopeError_Obj,
	[Token(Token = "0x4000991")]
	ErrorCode_SeekAfterEndOfPlaylist,
	[Token(Token = "0x4000992")]
	ErrorCode_OpusRequireSeekTable,
	[Token(Token = "0x4000993")]
	ErrorCode_OpusDecodeError,
	[Token(Token = "0x4000994")]
	ErrorCode_OpusCreateDecoderFailed,
	[Token(Token = "0x4000995")]
	ErrorCode_SourcePluginNotFound,
	[Token(Token = "0x4000996")]
	ErrorCode_VirtualVoiceLimit,
	[Token(Token = "0x4000997")]
	ErrorCode_AudioDeviceShareSetNotFound,
	[Token(Token = "0x4000998")]
	ErrorCode_NotEnoughMemoryToStart,
	[Token(Token = "0x4000999")]
	ErrorCode_UnkownOpusError,
	[Token(Token = "0x400099A")]
	ErrorCode_AudioDeviceInitFailure,
	[Token(Token = "0x400099B")]
	ErrorCode_AudioDeviceRemoveFailure,
	[Token(Token = "0x400099C")]
	ErrorCode_AudioDeviceNotFound,
	[Token(Token = "0x400099D")]
	ErrorCode_AudioDeviceNotValid,
	[Token(Token = "0x400099E")]
	ErrorCode_SpatialAudio_ListenerAutomationNotSupported,
	[Token(Token = "0x400099F")]
	ErrorCode_MediaDuplicationLength,
	[Token(Token = "0x40009A0")]
	ErrorCode_HwVoicesSystemInitFailed,
	[Token(Token = "0x40009A1")]
	ErrorCode_HwVoicesDecodeBatchFailed,
	[Token(Token = "0x40009A2")]
	ErrorCode_HwVoiceLimitReached,
	[Token(Token = "0x40009A3")]
	ErrorCode_HwVoiceInitFailed,
	[Token(Token = "0x40009A4")]
	ErrorCode_SpatialAudio_ReflectionBusError,
	[Token(Token = "0x40009A5")]
	Num_ErrorCodes
}
[Token(Token = "0x2000202")]
public enum AkMonitorErrorLevel
{
	[Token(Token = "0x40009A7")]
	ErrorLevel_Message = 1,
	[Token(Token = "0x40009A8")]
	ErrorLevel_Error,
	[Token(Token = "0x40009A9")]
	ErrorLevel_All
}
[Token(Token = "0x2000203")]
public class AkMonitoringCallbackInfo : IDisposable
{
	[Token(Token = "0x40009AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40009AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170001C6")]
	public AkMonitorErrorCode errorCode
	{
		[Token(Token = "0x6000BFD")]
		[Address(RVA = "0xDE4960", Offset = "0xDE4960", VA = "0xDE4960")]
		get
		{
			return default(AkMonitorErrorCode);
		}
	}

	[Token(Token = "0x170001C7")]
	public AkMonitorErrorLevel errorLevel
	{
		[Token(Token = "0x6000BFE")]
		[Address(RVA = "0xDE496C", Offset = "0xDE496C", VA = "0xDE496C")]
		get
		{
			return default(AkMonitorErrorLevel);
		}
	}

	[Token(Token = "0x170001C8")]
	public uint playingID
	{
		[Token(Token = "0x6000BFF")]
		[Address(RVA = "0xDE4978", Offset = "0xDE4978", VA = "0xDE4978")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x170001C9")]
	public ulong gameObjID
	{
		[Token(Token = "0x6000C00")]
		[Address(RVA = "0xDE4984", Offset = "0xDE4984", VA = "0xDE4984")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x170001CA")]
	public string message
	{
		[Token(Token = "0x6000C01")]
		[Address(RVA = "0xDE4990", Offset = "0xDE4990", VA = "0xDE4990")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000BF9")]
	[Address(RVA = "0xDE56BC", Offset = "0xDE56BC", VA = "0xDE56BC")]
	internal AkMonitoringCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000BFA")]
	[Address(RVA = "0xDED864", Offset = "0xDED864", VA = "0xDED864", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000BFB")]
	[Address(RVA = "0xDED898", Offset = "0xDED898", VA = "0xDED898", Slot = "1")]
	~AkMonitoringCallbackInfo()
	{
	}

	[Token(Token = "0x6000BFC")]
	[Address(RVA = "0xDED908", Offset = "0xDED908", VA = "0xDED908", Slot = "6")]
	public virtual void Dispose()
	{
	}
}
[Token(Token = "0x2000204")]
public enum AkMultiPositionType
{
	[Token(Token = "0x40009AD")]
	MultiPositionType_SingleSource,
	[Token(Token = "0x40009AE")]
	MultiPositionType_MultiSources,
	[Token(Token = "0x40009AF")]
	MultiPositionType_MultiDirections
}
[Token(Token = "0x2000205")]
public class AkMusicPlaylistCallbackInfo : AkEventCallbackInfo
{
	[Token(Token = "0x40009B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IntPtr swigCPtr;

	[Token(Token = "0x6000C02")]
	[Address(RVA = "0xDE5650", Offset = "0xDE5650", VA = "0xDE5650")]
	internal AkMusicPlaylistCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000C03")]
	[Address(RVA = "0xDEDA18", Offset = "0xDEDA18", VA = "0xDEDA18", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000C04")]
	[Address(RVA = "0xDEDA74", Offset = "0xDEDA74", VA = "0xDEDA74", Slot = "1")]
	~AkMusicPlaylistCallbackInfo()
	{
	}

	[Token(Token = "0x6000C05")]
	[Address(RVA = "0xDEDADC", Offset = "0xDEDADC", VA = "0xDEDADC", Slot = "6")]
	public override void Dispose()
	{
	}
}
[Token(Token = "0x2000206")]
public class AkMusicSettings : IDisposable
{
	[Token(Token = "0x40009B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40009B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170001CB")]
	public float fStreamingLookAheadRatio
	{
		[Token(Token = "0x6000C09")]
		[Address(RVA = "0xDE6DF0", Offset = "0xDE6DF0", VA = "0xDE6DF0")]
		set
		{
		}
	}

	[Token(Token = "0x6000C06")]
	[Address(RVA = "0xDEBEA0", Offset = "0xDEBEA0", VA = "0xDEBEA0")]
	internal AkMusicSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000C07")]
	[Address(RVA = "0xDEDBEC", Offset = "0xDEDBEC", VA = "0xDEDBEC", Slot = "1")]
	~AkMusicSettings()
	{
	}

	[Token(Token = "0x6000C08")]
	[Address(RVA = "0xDEDC5C", Offset = "0xDEDC5C", VA = "0xDEDC5C", Slot = "5")]
	public virtual void Dispose()
	{
	}
}
[Token(Token = "0x2000207")]
public class AkMusicSyncCallbackInfo : AkCallbackInfo
{
	[Token(Token = "0x40009B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private IntPtr swigCPtr;

	[Token(Token = "0x6000C0A")]
	[Address(RVA = "0xDE55F8", Offset = "0xDE55F8", VA = "0xDE55F8")]
	internal AkMusicSyncCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000C0B")]
	[Address(RVA = "0xDEDD64", Offset = "0xDEDD64", VA = "0xDEDD64", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000C0C")]
	[Address(RVA = "0xDEDDB4", Offset = "0xDEDDB4", VA = "0xDEDDB4", Slot = "1")]
	~AkMusicSyncCallbackInfo()
	{
	}

	[Token(Token = "0x6000C0D")]
	[Address(RVA = "0xDEDE1C", Offset = "0xDEDE1C", VA = "0xDEDE1C", Slot = "6")]
	public override void Dispose()
	{
	}
}
[Token(Token = "0x2000208")]
public class AkOutputSettings : IDisposable
{
	[Token(Token = "0x40009B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40009B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170001CC")]
	public uint audioDeviceShareset
	{
		[Token(Token = "0x6000C11")]
		[Address(RVA = "0xDE6330", Offset = "0xDE6330", VA = "0xDE6330")]
		set
		{
		}
	}

	[Token(Token = "0x170001CD")]
	public uint idDevice
	{
		[Token(Token = "0x6000C12")]
		[Address(RVA = "0xDE633C", Offset = "0xDE633C", VA = "0xDE633C")]
		set
		{
		}
	}

	[Token(Token = "0x170001CE")]
	public AkPanningRule ePanningRule
	{
		[Token(Token = "0x6000C13")]
		[Address(RVA = "0xDE6348", Offset = "0xDE6348", VA = "0xDE6348")]
		set
		{
		}
	}

	[Token(Token = "0x170001CF")]
	public AkChannelConfig channelConfig
	{
		[Token(Token = "0x6000C14")]
		[Address(RVA = "0xDE6354", Offset = "0xDE6354", VA = "0xDE6354")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000C0E")]
	[Address(RVA = "0xDEBC18", Offset = "0xDEBC18", VA = "0xDEBC18")]
	internal AkOutputSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000C0F")]
	[Address(RVA = "0xDEE764", Offset = "0xDEE764", VA = "0xDEE764", Slot = "1")]
	~AkOutputSettings()
	{
	}

	[Token(Token = "0x6000C10")]
	[Address(RVA = "0xDEE7D4", Offset = "0xDEE7D4", VA = "0xDEE7D4", Slot = "5")]
	public virtual void Dispose()
	{
	}
}
[Token(Token = "0x2000209")]
public enum AkPanningRule
{
	[Token(Token = "0x40009B7")]
	AkPanningRule_Speakers,
	[Token(Token = "0x40009B8")]
	AkPanningRule_Headphones
}
[Token(Token = "0x200020A")]
public enum AkPreparationType
{
	[Token(Token = "0x40009BA")]
	Preparation_Load,
	[Token(Token = "0x40009BB")]
	Preparation_Unload,
	[Token(Token = "0x40009BC")]
	Preparation_LoadAndDecode
}
[Token(Token = "0x200020B")]
public class AkRoomParams : IDisposable
{
	[Token(Token = "0x40009BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40009BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170001D0")]
	public Vector3 Up
	{
		[Token(Token = "0x6000C1A")]
		[Address(RVA = "0xDF0178", Offset = "0xDF0178", VA = "0xDF0178")]
		set
		{
		}
	}

	[Token(Token = "0x170001D1")]
	public Vector3 Front
	{
		[Token(Token = "0x6000C1B")]
		[Address(RVA = "0xDF0184", Offset = "0xDF0184", VA = "0xDF0184")]
		set
		{
		}
	}

	[Token(Token = "0x170001D2")]
	public uint ReverbAuxBus
	{
		[Token(Token = "0x6000C1C")]
		[Address(RVA = "0xDF0190", Offset = "0xDF0190", VA = "0xDF0190")]
		set
		{
		}
	}

	[Token(Token = "0x170001D3")]
	public float ReverbLevel
	{
		[Token(Token = "0x6000C1D")]
		[Address(RVA = "0xDF019C", Offset = "0xDF019C", VA = "0xDF019C")]
		set
		{
		}
	}

	[Token(Token = "0x170001D4")]
	public float WallOcclusion
	{
		[Token(Token = "0x6000C1E")]
		[Address(RVA = "0xDF01A8", Offset = "0xDF01A8", VA = "0xDF01A8")]
		set
		{
		}
	}

	[Token(Token = "0x170001D5")]
	public float RoomGameObj_AuxSendLevelToSelf
	{
		[Token(Token = "0x6000C1F")]
		[Address(RVA = "0xDF01B4", Offset = "0xDF01B4", VA = "0xDF01B4")]
		set
		{
		}
	}

	[Token(Token = "0x170001D6")]
	public bool RoomGameObj_KeepRegistered
	{
		[Token(Token = "0x6000C20")]
		[Address(RVA = "0xDF01C0", Offset = "0xDF01C0", VA = "0xDF01C0")]
		set
		{
		}
	}

	[Token(Token = "0x6000C15")]
	[Address(RVA = "0xDF2598", Offset = "0xDF2598", VA = "0xDF2598")]
	internal AkRoomParams(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000C16")]
	[Address(RVA = "0xDF25D8", Offset = "0xDF25D8", VA = "0xDF25D8")]
	internal static IntPtr getCPtr(AkRoomParams obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000C17")]
	[Address(RVA = "0xDF2628", Offset = "0xDF2628", VA = "0xDF2628", Slot = "1")]
	~AkRoomParams()
	{
	}

	[Token(Token = "0x6000C18")]
	[Address(RVA = "0xDF2698", Offset = "0xDF2698", VA = "0xDF2698", Slot = "5")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000C19")]
	[Address(RVA = "0xDF0138", Offset = "0xDF0138", VA = "0xDF0138")]
	public AkRoomParams()
	{
	}
}
[Token(Token = "0x200020C")]
public class AkSpatialAudioInitSettings : IDisposable
{
	[Token(Token = "0x40009BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40009C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170001D7")]
	public uint uMaxSoundPropagationDepth
	{
		[Token(Token = "0x6000C26")]
		[Address(RVA = "0xCB140C", Offset = "0xCB140C", VA = "0xCB140C")]
		set
		{
		}
	}

	[Token(Token = "0x170001D8")]
	public uint uDiffractionFlags
	{
		[Token(Token = "0x6000C27")]
		[Address(RVA = "0xCB1414", Offset = "0xCB1414", VA = "0xCB1414")]
		set
		{
		}
	}

	[Token(Token = "0x170001D9")]
	public float fDiffractionShadowAttenFactor
	{
		[Token(Token = "0x6000C28")]
		[Address(RVA = "0xCB141C", Offset = "0xCB141C", VA = "0xCB141C")]
		set
		{
		}
	}

	[Token(Token = "0x170001DA")]
	public float fDiffractionShadowDegrees
	{
		[Token(Token = "0x6000C29")]
		[Address(RVA = "0xCB1424", Offset = "0xCB1424", VA = "0xCB1424")]
		set
		{
		}
	}

	[Token(Token = "0x170001DB")]
	public float fMovementThreshold
	{
		[Token(Token = "0x6000C2A")]
		[Address(RVA = "0xCB142C", Offset = "0xCB142C", VA = "0xCB142C")]
		set
		{
		}
	}

	[Token(Token = "0x170001DC")]
	public uint uNumberOfPrimaryRays
	{
		[Token(Token = "0x6000C2B")]
		[Address(RVA = "0xCB1434", Offset = "0xCB1434", VA = "0xCB1434")]
		set
		{
		}
	}

	[Token(Token = "0x170001DD")]
	public uint uMaxReflectionOrder
	{
		[Token(Token = "0x6000C2C")]
		[Address(RVA = "0xCB143C", Offset = "0xCB143C", VA = "0xCB143C")]
		set
		{
		}
	}

	[Token(Token = "0x170001DE")]
	public float fMaxPathLength
	{
		[Token(Token = "0x6000C2D")]
		[Address(RVA = "0xCB1444", Offset = "0xCB1444", VA = "0xCB1444")]
		set
		{
		}
	}

	[Token(Token = "0x170001DF")]
	public bool bEnableDiffractionOnReflection
	{
		[Token(Token = "0x6000C2E")]
		[Address(RVA = "0xCB144C", Offset = "0xCB144C", VA = "0xCB144C")]
		set
		{
		}
	}

	[Token(Token = "0x170001E0")]
	public bool bEnableDirectPathDiffraction
	{
		[Token(Token = "0x6000C2F")]
		[Address(RVA = "0xCB1458", Offset = "0xCB1458", VA = "0xCB1458")]
		set
		{
		}
	}

	[Token(Token = "0x170001E1")]
	public bool bEnableTransmission
	{
		[Token(Token = "0x6000C30")]
		[Address(RVA = "0xCB1464", Offset = "0xCB1464", VA = "0xCB1464")]
		set
		{
		}
	}

	[Token(Token = "0x6000C21")]
	[Address(RVA = "0xCB121C", Offset = "0xCB121C", VA = "0xCB121C")]
	internal AkSpatialAudioInitSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000C22")]
	[Address(RVA = "0xCA9BD0", Offset = "0xCA9BD0", VA = "0xCA9BD0")]
	internal static IntPtr getCPtr(AkSpatialAudioInitSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000C23")]
	[Address(RVA = "0xCB125C", Offset = "0xCB125C", VA = "0xCB125C", Slot = "1")]
	~AkSpatialAudioInitSettings()
	{
	}

	[Token(Token = "0x6000C24")]
	[Address(RVA = "0xCB12CC", Offset = "0xCB12CC", VA = "0xCB12CC", Slot = "5")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000C25")]
	[Address(RVA = "0xCB13D0", Offset = "0xCB13D0", VA = "0xCB13D0")]
	public AkSpatialAudioInitSettings()
	{
	}
}
[Token(Token = "0x200020D")]
public class AkStreamMgrSettings : IDisposable
{
	[Token(Token = "0x40009C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40009C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x6000C31")]
	[Address(RVA = "0xCB1D5C", Offset = "0xCB1D5C", VA = "0xCB1D5C")]
	internal AkStreamMgrSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000C32")]
	[Address(RVA = "0xCB1D9C", Offset = "0xCB1D9C", VA = "0xCB1D9C", Slot = "1")]
	~AkStreamMgrSettings()
	{
	}

	[Token(Token = "0x6000C33")]
	[Address(RVA = "0xCB1E0C", Offset = "0xCB1E0C", VA = "0xCB1E0C", Slot = "5")]
	public virtual void Dispose()
	{
	}
}
[Token(Token = "0x200020E")]
public class AkTransform : IDisposable
{
	[Token(Token = "0x40009C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40009C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x6000C34")]
	[Address(RVA = "0xCB60F4", Offset = "0xCB60F4", VA = "0xCB60F4")]
	internal AkTransform(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000C35")]
	[Address(RVA = "0xCAA740", Offset = "0xCAA740", VA = "0xCAA740")]
	internal static IntPtr getCPtr(AkTransform obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000C36")]
	[Address(RVA = "0xCB6134", Offset = "0xCB6134", VA = "0xCB6134", Slot = "1")]
	~AkTransform()
	{
	}

	[Token(Token = "0x6000C37")]
	[Address(RVA = "0xCB61A4", Offset = "0xCB61A4", VA = "0xCB61A4", Slot = "5")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000C38")]
	[Address(RVA = "0xCB62A8", Offset = "0xCB62A8", VA = "0xCB62A8")]
	public void Set(Vector3 in_position, Vector3 in_orientationFront, Vector3 in_orientationTop)
	{
	}

	[Token(Token = "0x6000C39")]
	[Address(RVA = "0xCB62C0", Offset = "0xCB62C0", VA = "0xCB62C0")]
	public AkTransform()
	{
	}
}
[Token(Token = "0x200020F")]
public class AkTriangle : IDisposable
{
	[Token(Token = "0x40009C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40009C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170001E2")]
	public ushort point0
	{
		[Token(Token = "0x6000C3E")]
		[Address(RVA = "0xCB2F60", Offset = "0xCB2F60", VA = "0xCB2F60")]
		get
		{
			return default(ushort);
		}
		[Token(Token = "0x6000C3D")]
		[Address(RVA = "0xCB2F40", Offset = "0xCB2F40", VA = "0xCB2F40")]
		set
		{
		}
	}

	[Token(Token = "0x170001E3")]
	public ushort point1
	{
		[Token(Token = "0x6000C40")]
		[Address(RVA = "0xCB2F68", Offset = "0xCB2F68", VA = "0xCB2F68")]
		get
		{
			return default(ushort);
		}
		[Token(Token = "0x6000C3F")]
		[Address(RVA = "0xCB2F48", Offset = "0xCB2F48", VA = "0xCB2F48")]
		set
		{
		}
	}

	[Token(Token = "0x170001E4")]
	public ushort point2
	{
		[Token(Token = "0x6000C42")]
		[Address(RVA = "0xCB2F70", Offset = "0xCB2F70", VA = "0xCB2F70")]
		get
		{
			return default(ushort);
		}
		[Token(Token = "0x6000C41")]
		[Address(RVA = "0xCB2F50", Offset = "0xCB2F50", VA = "0xCB2F50")]
		set
		{
		}
	}

	[Token(Token = "0x170001E5")]
	public ushort surface
	{
		[Token(Token = "0x6000C43")]
		[Address(RVA = "0xCB2F58", Offset = "0xCB2F58", VA = "0xCB2F58")]
		set
		{
		}
	}

	[Token(Token = "0x6000C3A")]
	[Address(RVA = "0xCB62FC", Offset = "0xCB62FC", VA = "0xCB62FC")]
	internal AkTriangle(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000C3B")]
	[Address(RVA = "0xCB633C", Offset = "0xCB633C", VA = "0xCB633C", Slot = "1")]
	~AkTriangle()
	{
	}

	[Token(Token = "0x6000C3C")]
	[Address(RVA = "0xCB63AC", Offset = "0xCB63AC", VA = "0xCB63AC", Slot = "5")]
	public virtual void Dispose()
	{
	}
}
[Token(Token = "0x2000210")]
public class AkBasePathGetter
{
	[Token(Token = "0x40009C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string DefaultPlatformName;

	[Token(Token = "0x40009C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly string DefaultBasePath;

	[Token(Token = "0x40009C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static bool LogWarnings_Internal;

	[Token(Token = "0x40009CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x876470", Offset = "0x876470")]
	private static string <SoundBankBasePath>k__BackingField;

	[Token(Token = "0x40009CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x876480", Offset = "0x876480")]
	private static string <PersistentDataPath>k__BackingField;

	[Token(Token = "0x40009CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x876490", Offset = "0x876490")]
	private static string <DecodedBankFullPath>k__BackingField;

	[Token(Token = "0x170001E6")]
	public static bool LogWarnings
	{
		[Token(Token = "0x6000C45")]
		[Address(RVA = "0xDE2960", Offset = "0xDE2960", VA = "0xDE2960")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001E7")]
	public static string SoundBankBasePath
	{
		[Token(Token = "0x6000C48")]
		[Address(RVA = "0xDE2F20", Offset = "0xDE2F20", VA = "0xDE2F20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87D4C0", Offset = "0x87D4C0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C49")]
		[Address(RVA = "0xDE2F88", Offset = "0xDE2F88", VA = "0xDE2F88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87D4D0", Offset = "0x87D4D0")]
		private set
		{
		}
	}

	[Token(Token = "0x170001E8")]
	public static string PersistentDataPath
	{
		[Token(Token = "0x6000C4A")]
		[Address(RVA = "0xDE2FF4", Offset = "0xDE2FF4", VA = "0xDE2FF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87D4E0", Offset = "0x87D4E0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C4B")]
		[Address(RVA = "0xDE305C", Offset = "0xDE305C", VA = "0xDE305C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87D4F0", Offset = "0x87D4F0")]
		private set
		{
		}
	}

	[Token(Token = "0x170001E9")]
	public static string DecodedBankFullPath
	{
		[Token(Token = "0x6000C4C")]
		[Address(RVA = "0xDE30C8", Offset = "0xDE30C8", VA = "0xDE30C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87D500", Offset = "0x87D500")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C4D")]
		[Address(RVA = "0xDE3130", Offset = "0xDE3130", VA = "0xDE3130")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87D510", Offset = "0x87D510")]
		private set
		{
		}
	}

	[Token(Token = "0x6000C44")]
	[Address(RVA = "0xDE28D0", Offset = "0xDE28D0", VA = "0xDE28D0")]
	public static string GetPlatformName()
	{
		return null;
	}

	[Token(Token = "0x6000C46")]
	[Address(RVA = "0xDE29C8", Offset = "0xDE29C8", VA = "0xDE29C8")]
	public static string GetPlatformBasePath()
	{
		return null;
	}

	[Token(Token = "0x6000C47")]
	[Address(RVA = "0xDE2AE0", Offset = "0xDE2AE0", VA = "0xDE2AE0")]
	public static void EvaluateGamePaths()
	{
	}
}
[Serializable]
[Token(Token = "0x2000211")]
public class AkCommonUserSettings
{
	[Serializable]
	[Token(Token = "0x2000212")]
	public class SpatialAudioSettings
	{
		[Token(Token = "0x2000213")]
		public enum DiffractionFlags
		{
			[Token(Token = "0x40009E2")]
			UseBuiltInParam = 1,
			[Token(Token = "0x40009E3")]
			UseObstruction = 2,
			[Token(Token = "0x40009E4")]
			CalcEmitterVirtualPosition = 8
		}

		[Token(Token = "0x40009D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x876724", Offset = "0x876724")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x876724", Offset = "0x876724")]
		public uint m_MaxSoundPropagationDepth;

		[Token(Token = "0x40009D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "AkEnumFlagAttribute", RVA = "0x876778", Offset = "0x876778")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x876778", Offset = "0x876778")]
		public DiffractionFlags m_DiffractionFlags;

		[Token(Token = "0x40009DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x876800", Offset = "0x876800")]
		public float m_MovementThreshold;

		[Token(Token = "0x40009DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x876838", Offset = "0x876838")]
		public uint m_NumberOfPrimaryRays;

		[Token(Token = "0x40009DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x876870", Offset = "0x876870")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x876870", Offset = "0x876870")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x876870", Offset = "0x876870")]
		public uint m_MaxReflectionOrder;

		[Token(Token = "0x40009DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8768E8", Offset = "0x8768E8")]
		public float m_MaxPathLength;

		[Token(Token = "0x40009DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x876920", Offset = "0x876920")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x876920", Offset = "0x876920")]
		public bool m_EnableDiffractionOnReflections;

		[Token(Token = "0x40009DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x876980", Offset = "0x876980")]
		public bool m_EnableDirectPathDiffraction;

		[Token(Token = "0x40009E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8769B8", Offset = "0x8769B8")]
		public bool m_EnableTransmission;

		[Token(Token = "0x6000C59")]
		[Address(RVA = "0xDE6F74", Offset = "0xDE6F74", VA = "0xDE6F74")]
		public SpatialAudioSettings()
		{
		}
	}

	[Token(Token = "0x40009CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8764A0", Offset = "0x8764A0")]
	public string m_BasePath;

	[Token(Token = "0x40009CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8764D8", Offset = "0x8764D8")]
	public string m_StartupLanguage;

	[Token(Token = "0x40009CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x876510", Offset = "0x876510")]
	public bool m_EngineLogging;

	[Token(Token = "0x40009D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x876548", Offset = "0x876548")]
	public uint m_MaximumNumberOfPositioningPaths;

	[Token(Token = "0x40009D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x876580", Offset = "0x876580")]
	public uint m_CommandQueueSize;

	[Token(Token = "0x40009D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8765B8", Offset = "0x8765B8")]
	public uint m_SamplesPerFrame;

	[Token(Token = "0x40009D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8765F0", Offset = "0x8765F0")]
	public AkCommonOutputSettings m_MainOutputSettings;

	[Token(Token = "0x40009D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x876628", Offset = "0x876628")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x876628", Offset = "0x876628")]
	public float m_StreamingLookAheadRatio;

	[Token(Token = "0x40009D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87667C", Offset = "0x87667C")]
	public uint m_SampleRate;

	[Token(Token = "0x40009D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8766B4", Offset = "0x8766B4")]
	public ushort m_NumberOfRefillsInVoice;

	[Token(Token = "0x40009D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8766EC", Offset = "0x8766EC")]
	public SpatialAudioSettings m_SpatialAudioSettings;

	[Token(Token = "0x6000C4F")]
	[Address(RVA = "0xDE6B90", Offset = "0xDE6B90", VA = "0xDE6B90")]
	protected static string GetPluginPath()
	{
		return null;
	}

	[Token(Token = "0x6000C50")]
	[Address(RVA = "0xDE6B98", Offset = "0xDE6B98", VA = "0xDE6B98", Slot = "4")]
	public virtual void CopyTo(AkInitSettings settings)
	{
	}

	[Token(Token = "0x6000C51")]
	[Address(RVA = "0xDE689C", Offset = "0xDE689C", VA = "0xDE689C")]
	public void CopyTo(AkMusicSettings settings)
	{
	}

	[Token(Token = "0x6000C52")]
	[Address(RVA = "0xDE66F4", Offset = "0xDE66F4", VA = "0xDE66F4")]
	public void CopyTo(AkStreamMgrSettings settings)
	{
	}

	[Token(Token = "0x6000C53")]
	[Address(RVA = "0xDE6DFC", Offset = "0xDE6DFC", VA = "0xDE6DFC", Slot = "5")]
	public virtual void CopyTo(AkDeviceSettings settings)
	{
	}

	[Token(Token = "0x6000C54")]
	[Address(RVA = "0xDE6E00", Offset = "0xDE6E00", VA = "0xDE6E00")]
	private void SetSampleRate(AkPlatformInitSettings settings)
	{
	}

	[Token(Token = "0x6000C55")]
	[Address(RVA = "0xDE6E30", Offset = "0xDE6E30", VA = "0xDE6E30", Slot = "6")]
	public virtual void CopyTo(AkPlatformInitSettings settings)
	{
	}

	[Token(Token = "0x6000C56")]
	[Address(RVA = "0xDE6E74", Offset = "0xDE6E74", VA = "0xDE6E74", Slot = "7")]
	public virtual void CopyTo(AkSpatialAudioInitSettings settings)
	{
	}

	[Token(Token = "0x6000C57")]
	[Address(RVA = "0xDE6F70", Offset = "0xDE6F70", VA = "0xDE6F70", Slot = "8")]
	public virtual void CopyTo(AkUnityPlatformSpecificSettings settings)
	{
	}

	[Token(Token = "0x6000C58")]
	[Address(RVA = "0xDDF868", Offset = "0xDDF868", VA = "0xDDF868")]
	public AkCommonUserSettings()
	{
	}
}
[Token(Token = "0x2000214")]
public class AkAndroidSettings : AkWwiseInitializationSettings.PlatformSettings
{
	[Serializable]
	[Token(Token = "0x2000215")]
	public class PlatformAdvancedSettings : AkCommonAdvancedSettings
	{
		[Token(Token = "0x2000216")]
		public enum AudioAPI
		{
			[Token(Token = "0x40009EB")]
			None = 0,
			[Token(Token = "0x40009EC")]
			AAudio = 1,
			[Token(Token = "0x40009ED")]
			OpenSL_ES = 2,
			[Token(Token = "0x40009EE")]
			Default = -1
		}

		[Token(Token = "0x40009E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "AkEnumFlagAttribute", RVA = "0x876A20", Offset = "0x876A20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x876A20", Offset = "0x876A20")]
		public AudioAPI m_AudioAPI;

		[Token(Token = "0x40009E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x876AA8", Offset = "0x876AA8")]
		public bool m_RoundFrameSizeToHardwareSize;

		[Token(Token = "0x6000C5E")]
		[Address(RVA = "0xDDF9E8", Offset = "0xDDF9E8", VA = "0xDDF9E8", Slot = "6")]
		public override void CopyTo(AkPlatformInitSettings settings)
		{
		}

		[Token(Token = "0x6000C5F")]
		[Address(RVA = "0xDDFA48", Offset = "0xDDFA48", VA = "0xDDFA48")]
		public PlatformAdvancedSettings()
		{
		}
	}

	[Token(Token = "0x40009E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public AkCommonUserSettings UserSettings;

	[Token(Token = "0x40009E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public PlatformAdvancedSettings AdvancedSettings;

	[Token(Token = "0x40009E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public AkCommonCommSettings CommsSettings;

	[Token(Token = "0x6000C5A")]
	[Address(RVA = "0xDDF748", Offset = "0xDDF748", VA = "0xDDF748")]
	public AkAndroidSettings()
	{
	}

	[Token(Token = "0x6000C5B")]
	[Address(RVA = "0xDDF9D0", Offset = "0xDDF9D0", VA = "0xDDF9D0", Slot = "13")]
	protected override AkCommonUserSettings GetUserSettings()
	{
		return null;
	}

	[Token(Token = "0x6000C5C")]
	[Address(RVA = "0xDDF9D8", Offset = "0xDDF9D8", VA = "0xDDF9D8", Slot = "14")]
	protected override AkCommonAdvancedSettings GetAdvancedSettings()
	{
		return null;
	}

	[Token(Token = "0x6000C5D")]
	[Address(RVA = "0xDDF9E0", Offset = "0xDDF9E0", VA = "0xDDF9E0", Slot = "15")]
	protected override AkCommonCommSettings GetCommsSettings()
	{
		return null;
	}
}
[Token(Token = "0x2000217")]
public static class AkBankManager
{
	[Token(Token = "0x2000218")]
	private class BankHandle
	{
		[Token(Token = "0x40009F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected readonly string bankName;

		[Token(Token = "0x40009F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected uint m_BankID;

		[Token(Token = "0x40009F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x876AE0", Offset = "0x876AE0")]
		private int <RefCount>k__BackingField;

		[Token(Token = "0x170001EA")]
		public int RefCount
		{
			[Token(Token = "0x6000C68")]
			[Address(RVA = "0xDE2490", Offset = "0xDE2490", VA = "0xDE2490")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87D520", Offset = "0x87D520")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000C69")]
			[Address(RVA = "0xDE2498", Offset = "0xDE2498", VA = "0xDE2498")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87D530", Offset = "0x87D530")]
			private set
			{
			}
		}

		[Token(Token = "0x6000C67")]
		[Address(RVA = "0xDE17D0", Offset = "0xDE17D0", VA = "0xDE17D0")]
		public BankHandle(string name)
		{
		}

		[Token(Token = "0x6000C6A")]
		[Address(RVA = "0xDE24A0", Offset = "0xDE24A0", VA = "0xDE24A0", Slot = "4")]
		public virtual AKRESULT DoLoadBank()
		{
			return default(AKRESULT);
		}

		[Token(Token = "0x6000C6B")]
		[Address(RVA = "0xDE1B30", Offset = "0xDE1B30", VA = "0xDE1B30")]
		public void LoadBank()
		{
		}

		[Token(Token = "0x6000C6C")]
		[Address(RVA = "0xDE2514", Offset = "0xDE2514", VA = "0xDE2514", Slot = "5")]
		public virtual void UnloadBank()
		{
		}

		[Token(Token = "0x6000C6D")]
		[Address(RVA = "0xDE1734", Offset = "0xDE1734", VA = "0xDE1734")]
		public void IncRef()
		{
		}

		[Token(Token = "0x6000C6E")]
		[Address(RVA = "0xDE1C20", Offset = "0xDE1C20", VA = "0xDE1C20")]
		public void DecRef()
		{
		}

		[Token(Token = "0x6000C6F")]
		[Address(RVA = "0xDE1F14", Offset = "0xDE1F14", VA = "0xDE1F14")]
		protected void LogLoadResult(AKRESULT result)
		{
		}
	}

	[Token(Token = "0x2000219")]
	private class AsyncBankHandle : BankHandle
	{
		[Token(Token = "0x40009F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly AkCallbackManager.BankCallback bankCallback;

		[Token(Token = "0x6000C70")]
		[Address(RVA = "0xDE1BE4", Offset = "0xDE1BE4", VA = "0xDE1BE4")]
		public AsyncBankHandle(string name, AkCallbackManager.BankCallback callback)
		{
		}

		[Token(Token = "0x6000C71")]
		[Address(RVA = "0xDE1D64", Offset = "0xDE1D64", VA = "0xDE1D64")]
		private static void GlobalBankCallback(uint in_bankID, IntPtr in_pInMemoryBankPtr, AKRESULT in_eLoadResult, object in_Cookie)
		{
		}

		[Token(Token = "0x6000C72")]
		[Address(RVA = "0xDE23D0", Offset = "0xDE23D0", VA = "0xDE23D0", Slot = "4")]
		public override AKRESULT DoLoadBank()
		{
			return default(AKRESULT);
		}
	}

	[Token(Token = "0x200021A")]
	private class DecodableBankHandle : BankHandle
	{
		[Token(Token = "0x40009F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly bool decodeBank;

		[Token(Token = "0x40009F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly string decodedBankPath;

		[Token(Token = "0x40009F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly bool saveDecodedBank;

		[Token(Token = "0x6000C73")]
		[Address(RVA = "0xDE17FC", Offset = "0xDE17FC", VA = "0xDE17FC")]
		public DecodableBankHandle(string name, bool save)
		{
		}

		[Token(Token = "0x6000C74")]
		[Address(RVA = "0xDE2664", Offset = "0xDE2664", VA = "0xDE2664", Slot = "4")]
		public override AKRESULT DoLoadBank()
		{
			return default(AKRESULT);
		}

		[Token(Token = "0x6000C75")]
		[Address(RVA = "0xDE2840", Offset = "0xDE2840", VA = "0xDE2840", Slot = "5")]
		public override void UnloadBank()
		{
		}
	}

	[Token(Token = "0x40009EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Dictionary<string, BankHandle> m_BankHandles;

	[Token(Token = "0x40009F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly List<BankHandle> BanksToUnload;

	[Token(Token = "0x6000C60")]
	[Address(RVA = "0xDE1454", Offset = "0xDE1454", VA = "0xDE1454")]
	internal static void DoUnloadBanks()
	{
	}

	[Token(Token = "0x6000C61")]
	[Address(RVA = "0xDE1578", Offset = "0xDE1578", VA = "0xDE1578")]
	internal static void Reset()
	{
	}

	[Token(Token = "0x6000C62")]
	[Address(RVA = "0xDE1614", Offset = "0xDE1614", VA = "0xDE1614")]
	public static void LoadInitBank(bool doReset = true)
	{
	}

	[Token(Token = "0x6000C63")]
	[Address(RVA = "0xDDCE24", Offset = "0xDDCE24", VA = "0xDDCE24")]
	public static void LoadBank(string name, bool decodeBank, bool saveDecodedBank)
	{
	}

	[Token(Token = "0x6000C64")]
	[Address(RVA = "0xDDD108", Offset = "0xDDD108", VA = "0xDDD108")]
	public static void LoadBankAsync(string name, [Optional] AkCallbackManager.BankCallback callback)
	{
	}

	[Token(Token = "0x6000C65")]
	[Address(RVA = "0xDDD3A8", Offset = "0xDDD3A8", VA = "0xDDD3A8")]
	public static void UnloadBank(string name)
	{
	}
}
[Token(Token = "0x200021B")]
public static class AkCallbackManager
{
	[Token(Token = "0x200021C")]
	public delegate void EventCallback(object in_cookie, AkCallbackType in_type, AkCallbackInfo in_info);

	[Token(Token = "0x200021D")]
	public delegate void MonitoringCallback(AkMonitorErrorCode in_errorCode, AkMonitorErrorLevel in_errorLevel, uint in_playingID, ulong in_gameObjID, string in_msg);

	[Token(Token = "0x200021E")]
	public delegate void BankCallback(uint in_bankID, IntPtr in_InMemoryBankPtr, AKRESULT in_eLoadResult, object in_Cookie);

	[Token(Token = "0x200021F")]
	public class EventCallbackPackage
	{
		[Token(Token = "0x4000A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool m_bNotifyEndOfEvent;

		[Token(Token = "0x4000A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EventCallback m_Callback;

		[Token(Token = "0x4000A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public object m_Cookie;

		[Token(Token = "0x4000A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public uint m_playingID;

		[Token(Token = "0x6000C88")]
		[Address(RVA = "0xDE5A18", Offset = "0xDE5A18", VA = "0xDE5A18")]
		public static EventCallbackPackage Create(EventCallback in_cb, object in_cookie, ref uint io_Flags)
		{
			return null;
		}

		[Token(Token = "0x6000C89")]
		[Address(RVA = "0xDE5B2C", Offset = "0xDE5B2C", VA = "0xDE5B2C")]
		public EventCallbackPackage()
		{
		}
	}

	[Token(Token = "0x2000220")]
	public class BankCallbackPackage
	{
		[Token(Token = "0x4000A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BankCallback m_Callback;

		[Token(Token = "0x4000A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public object m_Cookie;

		[Token(Token = "0x6000C8A")]
		[Address(RVA = "0xDE58B0", Offset = "0xDE58B0", VA = "0xDE58B0")]
		public BankCallbackPackage(BankCallback in_cb, object in_cookie)
		{
		}
	}

	[Token(Token = "0x2000221")]
	public delegate AKRESULT BGMCallback(bool in_bOtherAudioPlaying, object in_Cookie);

	[Token(Token = "0x2000222")]
	public class BGMCallbackPackage
	{
		[Token(Token = "0x4000A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BGMCallback m_Callback;

		[Token(Token = "0x4000A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public object m_Cookie;
	}

	[Token(Token = "0x2000223")]
	public class InitializationSettings
	{
		[Token(Token = "0x4000A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int DefaultBufferSize;

		[Token(Token = "0x4000A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static bool DefaultIsLoggingEnabled;

		[Token(Token = "0x4000A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int BufferSize;

		[Token(Token = "0x4000A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool IsLoggingEnabled;

		[Token(Token = "0x6000C8F")]
		[Address(RVA = "0xDE33BC", Offset = "0xDE33BC", VA = "0xDE33BC")]
		public InitializationSettings()
		{
		}
	}

	[Token(Token = "0x40009F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x876AF0", Offset = "0x876AF0")]
	private static bool <IsLoggingEnabled>k__BackingField;

	[Token(Token = "0x40009F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly AkEventCallbackInfo AkEventCallbackInfo;

	[Token(Token = "0x40009FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly AkDynamicSequenceItemCallbackInfo AkDynamicSequenceItemCallbackInfo;

	[Token(Token = "0x40009FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly AkMIDIEventCallbackInfo AkMIDIEventCallbackInfo;

	[Token(Token = "0x40009FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly AkMarkerCallbackInfo AkMarkerCallbackInfo;

	[Token(Token = "0x40009FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static readonly AkDurationCallbackInfo AkDurationCallbackInfo;

	[Token(Token = "0x40009FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static readonly AkMusicSyncCallbackInfo AkMusicSyncCallbackInfo;

	[Token(Token = "0x40009FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static readonly AkMusicPlaylistCallbackInfo AkMusicPlaylistCallbackInfo;

	[Token(Token = "0x4000A00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static readonly AkAudioSourceChangeCallbackInfo AkAudioSourceChangeCallbackInfo;

	[Token(Token = "0x4000A01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static readonly AkMonitoringCallbackInfo AkMonitoringCallbackInfo;

	[Token(Token = "0x4000A02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static readonly AkBankCallbackInfo AkBankCallbackInfo;

	[Token(Token = "0x4000A03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static readonly Dictionary<int, EventCallbackPackage> m_mapEventCallbacks;

	[Token(Token = "0x4000A04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static readonly Dictionary<int, BankCallbackPackage> m_mapBankCallbacks;

	[Token(Token = "0x4000A05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static EventCallbackPackage m_LastAddedEventPackage;

	[Token(Token = "0x4000A06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static IntPtr m_pNotifMem;

	[Token(Token = "0x4000A07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static MonitoringCallback m_MonitoringCB;

	[Token(Token = "0x4000A08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static BGMCallbackPackage ms_sourceChangeCallbackPkg;

	[Token(Token = "0x170001EB")]
	private static bool IsLoggingEnabled
	{
		[Token(Token = "0x6000C76")]
		[Address(RVA = "0xDE37B4", Offset = "0xDE37B4", VA = "0xDE37B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87D540", Offset = "0x87D540")]
		set
		{
		}
	}

	[Token(Token = "0x6000C77")]
	[Address(RVA = "0xDE3824", Offset = "0xDE3824", VA = "0xDE3824")]
	public static void SetLastAddedPlayingID(uint in_playingID)
	{
	}

	[Token(Token = "0x6000C78")]
	[Address(RVA = "0xDE38EC", Offset = "0xDE38EC", VA = "0xDE38EC")]
	public static AKRESULT Init(InitializationSettings settings)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000C79")]
	[Address(RVA = "0xDE3A28", Offset = "0xDE3A28", VA = "0xDE3A28")]
	public static void Term()
	{
	}

	[Token(Token = "0x6000C7A")]
	[Address(RVA = "0xDE3B10", Offset = "0xDE3B10", VA = "0xDE3B10")]
	public static int PostCallbacks()
	{
		return default(int);
	}
}
[Token(Token = "0x2000224")]
public class AkBasePlatformSettings : ScriptableObject
{
	[Token(Token = "0x170001EC")]
	public virtual AkInitializationSettings AkInitializationSettings
	{
		[Token(Token = "0x6000C91")]
		[Address(RVA = "0xDE3250", Offset = "0xDE3250", VA = "0xDE3250", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001ED")]
	public virtual AkSpatialAudioInitSettings AkSpatialAudioInitSettings
	{
		[Token(Token = "0x6000C92")]
		[Address(RVA = "0xDE3308", Offset = "0xDE3308", VA = "0xDE3308", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001EE")]
	public virtual AkCallbackManager.InitializationSettings CallbackManagerInitializationSettings
	{
		[Token(Token = "0x6000C93")]
		[Address(RVA = "0xDE3364", Offset = "0xDE3364", VA = "0xDE3364", Slot = "6")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001EF")]
	public virtual string SoundBankPersistentDataPath
	{
		[Token(Token = "0x6000C94")]
		[Address(RVA = "0xDE3440", Offset = "0xDE3440", VA = "0xDE3440", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001F0")]
	public virtual string InitialLanguage
	{
		[Token(Token = "0x6000C95")]
		[Address(RVA = "0xDE3448", Offset = "0xDE3448", VA = "0xDE3448", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001F1")]
	public virtual bool RenderDuringFocusLoss
	{
		[Token(Token = "0x6000C96")]
		[Address(RVA = "0xDE3490", Offset = "0xDE3490", VA = "0xDE3490", Slot = "9")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001F2")]
	public virtual string SoundbankPath
	{
		[Token(Token = "0x6000C97")]
		[Address(RVA = "0xDE3498", Offset = "0xDE3498", VA = "0xDE3498", Slot = "10")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001F3")]
	public virtual AkCommunicationSettings AkCommunicationSettings
	{
		[Token(Token = "0x6000C98")]
		[Address(RVA = "0xDE3500", Offset = "0xDE3500", VA = "0xDE3500", Slot = "11")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001F4")]
	public virtual bool UseAsyncOpen
	{
		[Token(Token = "0x6000C99")]
		[Address(RVA = "0xDE35B8", Offset = "0xDE35B8", VA = "0xDE35B8", Slot = "12")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000C9A")]
	[Address(RVA = "0xDE35C0", Offset = "0xDE35C0", VA = "0xDE35C0")]
	public AkBasePlatformSettings()
	{
	}
}
[Serializable]
[Token(Token = "0x2000225")]
public class AkCommonOutputSettings
{
	[Token(Token = "0x2000226")]
	public enum PanningRule
	{
		[Token(Token = "0x4000A1A")]
		Speakers,
		[Token(Token = "0x4000A1B")]
		Headphones
	}

	[Serializable]
	[Token(Token = "0x2000227")]
	public class ChannelConfiguration
	{
		[Token(Token = "0x2000228")]
		public enum ChannelConfigType
		{
			[Token(Token = "0x4000A20")]
			Anonymous,
			[Token(Token = "0x4000A21")]
			Standard,
			[Token(Token = "0x4000A22")]
			Ambisonic
		}

		[Token(Token = "0x2000229")]
		public enum ChannelMask
		{
			[Token(Token = "0x4000A24")]
			NONE = 0,
			[Token(Token = "0x4000A25")]
			FRONT_LEFT = 1,
			[Token(Token = "0x4000A26")]
			FRONT_RIGHT = 2,
			[Token(Token = "0x4000A27")]
			FRONT_CENTER = 4,
			[Token(Token = "0x4000A28")]
			LOW_FREQUENCY = 8,
			[Token(Token = "0x4000A29")]
			BACK_LEFT = 16,
			[Token(Token = "0x4000A2A")]
			BACK_RIGHT = 32,
			[Token(Token = "0x4000A2B")]
			BACK_CENTER = 256,
			[Token(Token = "0x4000A2C")]
			SIDE_LEFT = 512,
			[Token(Token = "0x4000A2D")]
			SIDE_RIGHT = 1024,
			[Token(Token = "0x4000A2E")]
			TOP = 2048,
			[Token(Token = "0x4000A2F")]
			HEIGHT_FRONT_LEFT = 4096,
			[Token(Token = "0x4000A30")]
			HEIGHT_FRONT_CENTER = 8192,
			[Token(Token = "0x4000A31")]
			HEIGHT_FRONT_RIGHT = 16384,
			[Token(Token = "0x4000A32")]
			HEIGHT_BACK_LEFT = 32768,
			[Token(Token = "0x4000A33")]
			HEIGHT_BACK_CENTER = 65536,
			[Token(Token = "0x4000A34")]
			HEIGHT_BACK_RIGHT = 131072,
			[Token(Token = "0x4000A35")]
			SETUP_MONO = 4,
			[Token(Token = "0x4000A36")]
			SETUP_0POINT1 = 8,
			[Token(Token = "0x4000A37")]
			SETUP_1POINT1 = 12,
			[Token(Token = "0x4000A38")]
			SETUP_STEREO = 3,
			[Token(Token = "0x4000A39")]
			SETUP_2POINT1 = 11,
			[Token(Token = "0x4000A3A")]
			SETUP_3STEREO = 7,
			[Token(Token = "0x4000A3B")]
			SETUP_3POINT1 = 15,
			[Token(Token = "0x4000A3C")]
			SETUP_4 = 1539,
			[Token(Token = "0x4000A3D")]
			SETUP_4POINT1 = 1547,
			[Token(Token = "0x4000A3E")]
			SETUP_5 = 1543,
			[Token(Token = "0x4000A3F")]
			SETUP_5POINT1 = 1551,
			[Token(Token = "0x4000A40")]
			SETUP_6 = 1587,
			[Token(Token = "0x4000A41")]
			SETUP_6POINT1 = 1595,
			[Token(Token = "0x4000A42")]
			SETUP_7 = 1591,
			[Token(Token = "0x4000A43")]
			SETUP_7POINT1 = 1599,
			[Token(Token = "0x4000A44")]
			SETUP_SURROUND = 259,
			[Token(Token = "0x4000A45")]
			SETUP_DPL2 = 1539,
			[Token(Token = "0x4000A46")]
			SETUP_HEIGHT_4 = 184320,
			[Token(Token = "0x4000A47")]
			SETUP_HEIGHT_5 = 192512,
			[Token(Token = "0x4000A48")]
			SETUP_HEIGHT_ALL = 258048,
			[Token(Token = "0x4000A49")]
			SETUP_AURO_222 = 22019,
			[Token(Token = "0x4000A4A")]
			SETUP_AURO_8 = 185859,
			[Token(Token = "0x4000A4B")]
			SETUP_AURO_9 = 185863,
			[Token(Token = "0x4000A4C")]
			SETUP_AURO_9POINT1 = 185871,
			[Token(Token = "0x4000A4D")]
			SETUP_AURO_10 = 187911,
			[Token(Token = "0x4000A4E")]
			SETUP_AURO_10POINT1 = 187919,
			[Token(Token = "0x4000A4F")]
			SETUP_AURO_11 = 196103,
			[Token(Token = "0x4000A50")]
			SETUP_AURO_11POINT1 = 196111,
			[Token(Token = "0x4000A51")]
			SETUP_AURO_11_740 = 185911,
			[Token(Token = "0x4000A52")]
			SETUP_AURO_11POINT1_740 = 185919,
			[Token(Token = "0x4000A53")]
			SETUP_AURO_13_751 = 196151,
			[Token(Token = "0x4000A54")]
			SETUP_AURO_13POINT1_751 = 196159,
			[Token(Token = "0x4000A55")]
			SETUP_DOLBY_5_0_2 = 22023,
			[Token(Token = "0x4000A56")]
			SETUP_DOLBY_5_1_2 = 22031,
			[Token(Token = "0x4000A57")]
			SETUP_DOLBY_6_0_2 = 22067,
			[Token(Token = "0x4000A58")]
			SETUP_DOLBY_6_1_2 = 22075,
			[Token(Token = "0x4000A59")]
			SETUP_DOLBY_6_0_4 = 185907,
			[Token(Token = "0x4000A5A")]
			SETUP_DOLBY_6_1_4 = 185915,
			[Token(Token = "0x4000A5B")]
			SETUP_DOLBY_7_0_2 = 22071,
			[Token(Token = "0x4000A5C")]
			SETUP_DOLBY_7_1_2 = 22079,
			[Token(Token = "0x4000A5D")]
			SETUP_DOLBY_7_0_4 = 185911,
			[Token(Token = "0x4000A5E")]
			SETUP_DOLBY_7_1_4 = 185919,
			[Token(Token = "0x4000A5F")]
			SETUP_ALL_SPEAKERS = 261951
		}

		[Token(Token = "0x4000A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x876BE0", Offset = "0x876BE0")]
		public ChannelConfigType m_ChannelConfigType;

		[Token(Token = "0x4000A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x876C18", Offset = "0x876C18")]
		[AttributeAttribute(Name = "AkEnumFlagAttribute", RVA = "0x876C18", Offset = "0x876C18")]
		public ChannelMask m_ChannelMask;

		[Token(Token = "0x4000A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x876CA0", Offset = "0x876CA0")]
		public uint m_NumberOfChannels;

		[Token(Token = "0x6000C9D")]
		[Address(RVA = "0xDE63E0", Offset = "0xDE63E0", VA = "0xDE63E0")]
		public void CopyTo(AkChannelConfig config)
		{
		}

		[Token(Token = "0x6000C9E")]
		[Address(RVA = "0xDDF9C8", Offset = "0xDDF9C8", VA = "0xDDF9C8")]
		public ChannelConfiguration()
		{
		}
	}

	[Token(Token = "0x4000A15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x876B00", Offset = "0x876B00")]
	public string m_AudioDeviceShareset;

	[Token(Token = "0x4000A16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x876B38", Offset = "0x876B38")]
	public uint m_DeviceID;

	[Token(Token = "0x4000A17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x876B70", Offset = "0x876B70")]
	public PanningRule m_PanningRule;

	[Token(Token = "0x4000A18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x876BA8", Offset = "0x876BA8")]
	public ChannelConfiguration m_ChannelConfig;

	[Token(Token = "0x6000C9B")]
	[Address(RVA = "0xDE6248", Offset = "0xDE6248", VA = "0xDE6248")]
	public void CopyTo(AkOutputSettings settings)
	{
	}

	[Token(Token = "0x6000C9C")]
	[Address(RVA = "0xDDF948", Offset = "0xDDF948", VA = "0xDDF948")]
	public AkCommonOutputSettings()
	{
	}
}
[Serializable]
[Token(Token = "0x200022A")]
public class AkCommonAdvancedSettings
{
	[Serializable]
	[Token(Token = "0x200022B")]
	public class SpatialAudioSettings
	{
		[Token(Token = "0x4000A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x876FE8", Offset = "0x876FE8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x876FE8", Offset = "0x876FE8")]
		public float m_DiffractionShadowAttenuationFactor;

		[Token(Token = "0x4000A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x87703C", Offset = "0x87703C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87703C", Offset = "0x87703C")]
		public float m_DiffractionShadowDegrees;

		[Token(Token = "0x6000CA5")]
		[Address(RVA = "0xDE604C", Offset = "0xDE604C", VA = "0xDE604C")]
		public SpatialAudioSettings()
		{
		}
	}

	[Token(Token = "0x4000A60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x876CD8", Offset = "0x876CD8")]
	public uint m_IOMemorySize;

	[Token(Token = "0x4000A61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x876D10", Offset = "0x876D10")]
	public float m_TargetAutoStreamBufferLengthMs;

	[Token(Token = "0x4000A62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x876D48", Offset = "0x876D48")]
	public bool m_UseStreamCache;

	[Token(Token = "0x4000A63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x876D80", Offset = "0x876D80")]
	public uint m_MaximumPinnedBytesInCache;

	[Token(Token = "0x4000A64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x876DB8", Offset = "0x876DB8")]
	public bool m_EnableGameSyncPreparation;

	[Token(Token = "0x4000A65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x876DF0", Offset = "0x876DF0")]
	public uint m_ContinuousPlaybackLookAhead;

	[Token(Token = "0x4000A66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x876E28", Offset = "0x876E28")]
	public uint m_MonitorQueuePoolSize;

	[Token(Token = "0x4000A67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x876E60", Offset = "0x876E60")]
	public uint m_MaximumHardwareTimeoutMs;

	[Token(Token = "0x4000A68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x876E98", Offset = "0x876E98")]
	public bool m_DebugOutOfRangeCheckEnabled;

	[Token(Token = "0x4000A69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x876ED0", Offset = "0x876ED0")]
	public float m_DebugOutOfRangeLimit;

	[Token(Token = "0x4000A6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x876F08", Offset = "0x876F08")]
	public SpatialAudioSettings m_SpatialAudioSettings;

	[Token(Token = "0x4000A6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x876F40", Offset = "0x876F40")]
	public bool m_RenderDuringFocusLoss;

	[Token(Token = "0x4000A6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x876F78", Offset = "0x876F78")]
	public string m_SoundBankPersistentDataPath;

	[Token(Token = "0x4000A6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x876FB0", Offset = "0x876FB0")]
	public bool m_UseAsyncOpen;

	[Token(Token = "0x6000C9F")]
	[Address(RVA = "0xDE5E84", Offset = "0xDE5E84", VA = "0xDE5E84", Slot = "4")]
	public virtual void CopyTo(AkDeviceSettings settings)
	{
	}

	[Token(Token = "0x6000CA0")]
	[Address(RVA = "0xDE5F1C", Offset = "0xDE5F1C", VA = "0xDE5F1C", Slot = "5")]
	public virtual void CopyTo(AkInitSettings settings)
	{
	}

	[Token(Token = "0x6000CA1")]
	[Address(RVA = "0xDE5FF0", Offset = "0xDE5FF0", VA = "0xDE5FF0", Slot = "6")]
	public virtual void CopyTo(AkPlatformInitSettings settings)
	{
	}

	[Token(Token = "0x6000CA2")]
	[Address(RVA = "0xDE5FF4", Offset = "0xDE5FF4", VA = "0xDE5FF4", Slot = "7")]
	public virtual void CopyTo(AkSpatialAudioInitSettings settings)
	{
	}

	[Token(Token = "0x6000CA3")]
	[Address(RVA = "0xDE6048", Offset = "0xDE6048", VA = "0xDE6048", Slot = "8")]
	public virtual void CopyTo(AkUnityPlatformSpecificSettings settings)
	{
	}

	[Token(Token = "0x6000CA4")]
	[Address(RVA = "0xDDFA8C", Offset = "0xDDFA8C", VA = "0xDDFA8C")]
	public AkCommonAdvancedSettings()
	{
	}
}
[Serializable]
[Token(Token = "0x200022C")]
public class AkCommonCommSettings
{
	[Token(Token = "0x4000A70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x877098", Offset = "0x877098")]
	public uint m_PoolSize;

	[Token(Token = "0x4000A71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ushort DefaultDiscoveryBroadcastPort;

	[Token(Token = "0x4000A72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8770D0", Offset = "0x8770D0")]
	public ushort m_DiscoveryBroadcastPort;

	[Token(Token = "0x4000A73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x877108", Offset = "0x877108")]
	public ushort m_CommandPort;

	[Token(Token = "0x4000A74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x877140", Offset = "0x877140")]
	public ushort m_NotificationPort;

	[Token(Token = "0x4000A75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x877178", Offset = "0x877178")]
	public bool m_InitializeSystemComms;

	[Token(Token = "0x4000A76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8771B0", Offset = "0x8771B0")]
	public string m_NetworkName;

	[Token(Token = "0x4000A77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8771E8", Offset = "0x8771E8")]
	public AkCommunicationSettings.AkCommSystem m_commSystem;

	[Token(Token = "0x6000CA6")]
	[Address(RVA = "0xDE6060", Offset = "0xDE6060", VA = "0xDE6060", Slot = "4")]
	public virtual void CopyTo(AkCommunicationSettings settings)
	{
	}

	[Token(Token = "0x6000CA7")]
	[Address(RVA = "0xDE616C", Offset = "0xDE616C", VA = "0xDE616C")]
	public AkCommonCommSettings()
	{
	}
}
[Token(Token = "0x200022D")]
public abstract class AkCommonPlatformSettings : AkBasePlatformSettings
{
	[Token(Token = "0x170001F5")]
	public override AkInitializationSettings AkInitializationSettings
	{
		[Token(Token = "0x6000CAC")]
		[Address(RVA = "0xDE6460", Offset = "0xDE6460", VA = "0xDE6460", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001F6")]
	public override AkSpatialAudioInitSettings AkSpatialAudioInitSettings
	{
		[Token(Token = "0x6000CAD")]
		[Address(RVA = "0xDE6958", Offset = "0xDE6958", VA = "0xDE6958", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001F7")]
	public override AkCallbackManager.InitializationSettings CallbackManagerInitializationSettings
	{
		[Token(Token = "0x6000CAE")]
		[Address(RVA = "0xDE69D4", Offset = "0xDE69D4", VA = "0xDE69D4", Slot = "6")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001F8")]
	public override string InitialLanguage
	{
		[Token(Token = "0x6000CAF")]
		[Address(RVA = "0xDE6A58", Offset = "0xDE6A58", VA = "0xDE6A58", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001F9")]
	public override string SoundBankPersistentDataPath
	{
		[Token(Token = "0x6000CB0")]
		[Address(RVA = "0xDE6A84", Offset = "0xDE6A84", VA = "0xDE6A84", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001FA")]
	public override bool RenderDuringFocusLoss
	{
		[Token(Token = "0x6000CB1")]
		[Address(RVA = "0xDE6AB0", Offset = "0xDE6AB0", VA = "0xDE6AB0", Slot = "9")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001FB")]
	public override string SoundbankPath
	{
		[Token(Token = "0x6000CB2")]
		[Address(RVA = "0xDE6ADC", Offset = "0xDE6ADC", VA = "0xDE6ADC", Slot = "10")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001FC")]
	public override bool UseAsyncOpen
	{
		[Token(Token = "0x6000CB3")]
		[Address(RVA = "0xDE6B08", Offset = "0xDE6B08", VA = "0xDE6B08", Slot = "12")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001FD")]
	public override AkCommunicationSettings AkCommunicationSettings
	{
		[Token(Token = "0x6000CB4")]
		[Address(RVA = "0xDE6B34", Offset = "0xDE6B34", VA = "0xDE6B34", Slot = "11")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000CA9")]
	protected abstract AkCommonUserSettings GetUserSettings();

	[Token(Token = "0x6000CAA")]
	protected abstract AkCommonAdvancedSettings GetAdvancedSettings();

	[Token(Token = "0x6000CAB")]
	protected abstract AkCommonCommSettings GetCommsSettings();

	[Token(Token = "0x6000CB5")]
	[Address(RVA = "0xDE6B88", Offset = "0xDE6B88", VA = "0xDE6B88")]
	protected AkCommonPlatformSettings()
	{
	}
}
[Token(Token = "0x200022E")]
[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x870394", Offset = "0x870394")]
public class AkEnumFlagAttribute : PropertyAttribute
{
	[Token(Token = "0x4000A78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Type Type;

	[Token(Token = "0x6000CB6")]
	[Address(RVA = "0xDE8178", Offset = "0xDE8178", VA = "0xDE8178")]
	public AkEnumFlagAttribute(Type type)
	{
	}
}
[Token(Token = "0x200022F")]
public class AkLogger
{
	[Token(Token = "0x2000230")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x8703CC", Offset = "0x8703CC")]
	public delegate void ErrorLoggerInteropDelegate(string message);

	[Token(Token = "0x4000A79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AkLogger ms_Instance;

	[Token(Token = "0x4000A7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private ErrorLoggerInteropDelegate errorLoggerDelegate;

	[Token(Token = "0x170001FE")]
	public static AkLogger Instance
	{
		[Token(Token = "0x6000CB8")]
		[Address(RVA = "0xDEC694", Offset = "0xDEC694", VA = "0xDEC694")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000CB7")]
	[Address(RVA = "0xDEC584", Offset = "0xDEC584", VA = "0xDEC584")]
	private AkLogger()
	{
	}

	[Token(Token = "0x6000CB9")]
	[Address(RVA = "0xDEC6FC", Offset = "0xDEC6FC", VA = "0xDEC6FC", Slot = "1")]
	~AkLogger()
	{
	}

	[Token(Token = "0x6000CBA")]
	[Address(RVA = "0xDEC804", Offset = "0xDEC804", VA = "0xDEC804")]
	public void Init()
	{
	}

	[Token(Token = "0x6000CBB")]
	[Address(RVA = "0xDEC4B4", Offset = "0xDEC4B4", VA = "0xDEC4B4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x87D550", Offset = "0x87D550")]
	public static void WwiseInternalLogError(string message)
	{
	}
}
[Token(Token = "0x2000231")]
public static class AkRoomAwareManager
{
	[Token(Token = "0x4000A7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly HashSet<AkRoomAwareObject> m_RoomAwareObjects;

	[Token(Token = "0x4000A7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly HashSet<AkRoomAwareObject> m_RoomAwareObjectToUpdate;

	[Token(Token = "0x6000CC1")]
	[Address(RVA = "0xDF130C", Offset = "0xDF130C", VA = "0xDF130C")]
	public static void RegisterRoomAwareObject(AkRoomAwareObject roomAwareObject)
	{
	}

	[Token(Token = "0x6000CC2")]
	[Address(RVA = "0xDF1398", Offset = "0xDF1398", VA = "0xDF1398")]
	public static void UnregisterRoomAwareObject(AkRoomAwareObject roomAwareObject)
	{
	}

	[Token(Token = "0x6000CC3")]
	[Address(RVA = "0xDF07D4", Offset = "0xDF07D4", VA = "0xDF07D4")]
	public static void RegisterRoomAwareObjectForUpdate(AkRoomAwareObject roomAwareObject)
	{
	}

	[Token(Token = "0x6000CC4")]
	[Address(RVA = "0xDF08CC", Offset = "0xDF08CC", VA = "0xDF08CC")]
	public static void ObjectEnteredRoom(Collider collider, AkRoom room)
	{
	}

	[Token(Token = "0x6000CC5")]
	[Address(RVA = "0xDF0460", Offset = "0xDF0460", VA = "0xDF0460")]
	public static void ObjectEnteredRoom(AkRoomAwareObject roomAwareObject, AkRoom room)
	{
	}

	[Token(Token = "0x6000CC6")]
	[Address(RVA = "0xDF0A24", Offset = "0xDF0A24", VA = "0xDF0A24")]
	public static void ObjectExitedRoom(Collider collider, AkRoom room)
	{
	}

	[Token(Token = "0x6000CC7")]
	[Address(RVA = "0xDF14FC", Offset = "0xDF14FC", VA = "0xDF14FC")]
	public static void ObjectExitedRoom(AkRoomAwareObject roomAwareObject, AkRoom room)
	{
	}

	[Token(Token = "0x6000CC8")]
	[Address(RVA = "0xDF15FC", Offset = "0xDF15FC", VA = "0xDF15FC")]
	public static void UpdateRoomAwareObjects()
	{
	}
}
[Token(Token = "0x2000232")]
public class AkRoomManager
{
	[Token(Token = "0x4000A7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private readonly List<AkRoomPortal> m_Portals;

	[Token(Token = "0x4000A7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly List<AkRoomPortal> m_PortalsToUpdate;

	[Token(Token = "0x4000A7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private readonly List<AkSurfaceReflector> m_Reflectors;

	[Token(Token = "0x4000A80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly List<AkSurfaceReflector> m_ReflectorsToUpdate;

	[Token(Token = "0x4000A81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AkRoomManager m_Instance;

	[Token(Token = "0x6000CCA")]
	[Address(RVA = "0xDF1D2C", Offset = "0xDF1D2C", VA = "0xDF1D2C")]
	public static void Init()
	{
	}

	[Token(Token = "0x6000CCB")]
	[Address(RVA = "0xDF1E68", Offset = "0xDF1E68", VA = "0xDF1E68")]
	public static void Terminate()
	{
	}

	[Token(Token = "0x6000CCC")]
	[Address(RVA = "0xDF1EC0", Offset = "0xDF1EC0", VA = "0xDF1EC0")]
	public static void RegisterPortal(AkRoomPortal portal)
	{
	}

	[Token(Token = "0x6000CCD")]
	[Address(RVA = "0xDF1FD0", Offset = "0xDF1FD0", VA = "0xDF1FD0")]
	public static void UnregisterPortal(AkRoomPortal portal)
	{
	}

	[Token(Token = "0x6000CCE")]
	[Address(RVA = "0xDF2080", Offset = "0xDF2080", VA = "0xDF2080")]
	public static void RegisterReflector(AkSurfaceReflector reflector)
	{
	}

	[Token(Token = "0x6000CCF")]
	[Address(RVA = "0xDF2190", Offset = "0xDF2190", VA = "0xDF2190")]
	public static void UnregisterReflector(AkSurfaceReflector reflector)
	{
	}

	[Token(Token = "0x6000CD0")]
	[Address(RVA = "0xDF2240", Offset = "0xDF2240", VA = "0xDF2240")]
	public static void RegisterPortalUpdate(AkRoomPortal portal)
	{
	}

	[Token(Token = "0x6000CD1")]
	[Address(RVA = "0xDF01D0", Offset = "0xDF01D0", VA = "0xDF01D0")]
	public static void RegisterRoomUpdate(AkRoom room)
	{
	}

	[Token(Token = "0x6000CD2")]
	[Address(RVA = "0xDF241C", Offset = "0xDF241C", VA = "0xDF241C")]
	public static void Update()
	{
	}

	[Token(Token = "0x6000CD3")]
	[Address(RVA = "0xDF1D98", Offset = "0xDF1D98", VA = "0xDF1D98")]
	public AkRoomManager()
	{
	}
}
[Token(Token = "0x2000233")]
public class AkShowOnlyAttribute : PropertyAttribute
{
	[Token(Token = "0x6000CD4")]
	[Address(RVA = "0xCA7724", Offset = "0xCA7724", VA = "0xCA7724")]
	public AkShowOnlyAttribute()
	{
	}
}
[Token(Token = "0x2000234")]
public class AkUtilities
{
	[Token(Token = "0x2000235")]
	public class ShortIDGenerator
	{
		[Token(Token = "0x4000A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static byte s_hashSize;

		[Token(Token = "0x4000A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static uint s_mask;

		[Token(Token = "0x170001FF")]
		public static byte HashSize
		{
			[Token(Token = "0x6000CD8")]
			[Address(RVA = "0xCB812C", Offset = "0xCB812C", VA = "0xCB812C")]
			set
			{
			}
		}

		[Token(Token = "0x6000CD7")]
		[Address(RVA = "0xCB8124", Offset = "0xCB8124", VA = "0xCB8124")]
		static ShortIDGenerator()
		{
		}

		[Token(Token = "0x6000CD9")]
		[Address(RVA = "0xCB6800", Offset = "0xCB6800", VA = "0xCB6800")]
		public static uint Compute(string in_name)
		{
			return default(uint);
		}
	}

	[Token(Token = "0x6000CD5")]
	[Address(RVA = "0xCB7F64", Offset = "0xCB7F64", VA = "0xCB7F64")]
	public static void FixSlashes(ref string path, char separatorChar, char badChar, bool addTrailingSlash)
	{
	}

	[Token(Token = "0x6000CD6")]
	[Address(RVA = "0xCB80A0", Offset = "0xCB80A0", VA = "0xCB80A0")]
	public static void FixSlashes(ref string path)
	{
	}
}
[Token(Token = "0x2000236")]
public class AkWwiseInitializationSettings : AkCommonPlatformSettings
{
	[Token(Token = "0x2000237")]
	public abstract class PlatformSettings : AkCommonPlatformSettings
	{
		[Token(Token = "0x4000A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		[SerializeField]
		private List<string> IgnorePropertyNameList;

		[Token(Token = "0x4000A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[HideInInspector]
		private List<string> GlobalPropertyNameList;

		[Token(Token = "0x4000A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<string> _GlobalPropertyHashSet;

		[Token(Token = "0x17000204")]
		public HashSet<string> GlobalPropertyHashSet
		{
			[Token(Token = "0x6000CEF")]
			[Address(RVA = "0xCB9AA8", Offset = "0xCB9AA8", VA = "0xCB9AA8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CF0")]
			[Address(RVA = "0xCB9B2C", Offset = "0xCB9B2C", VA = "0xCB9B2C")]
			set
			{
			}
		}

		[Token(Token = "0x6000CE9")]
		[Address(RVA = "0xCB95E4", Offset = "0xCB95E4", VA = "0xCB95E4")]
		public void IgnorePropertyValue(string propertyPath)
		{
		}

		[Token(Token = "0x6000CEA")]
		[Address(RVA = "0xCB967C", Offset = "0xCB967C", VA = "0xCB967C")]
		public bool IsPropertyIgnored(string propertyPath)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CEB")]
		[Address(RVA = "0xCB81D0", Offset = "0xCB81D0", VA = "0xCB81D0")]
		protected PlatformSettings()
		{
		}

		[Token(Token = "0x6000CEC")]
		[Address(RVA = "0xCB96E4", Offset = "0xCB96E4", VA = "0xCB96E4")]
		public void SetUseGlobalPropertyValue(string propertyPath, bool use)
		{
		}

		[Token(Token = "0x6000CED")]
		[Address(RVA = "0xCB9788", Offset = "0xCB9788", VA = "0xCB9788")]
		public void SetGlobalPropertyValues(IEnumerable enumerable)
		{
		}

		[Token(Token = "0x6000CEE")]
		[Address(RVA = "0xCB9A40", Offset = "0xCB9A40", VA = "0xCB9A40")]
		private bool IsUsingGlobalPropertyValue(string propertyPath)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000238")]
	public class CommonPlatformSettings : PlatformSettings
	{
		[Token(Token = "0x4000A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public AkCommonUserSettings UserSettings;

		[Token(Token = "0x4000A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public AkCommonAdvancedSettings AdvancedSettings;

		[Token(Token = "0x4000A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public AkCommonCommSettings CommsSettings;

		[Token(Token = "0x6000CF1")]
		[Address(RVA = "0xCB95C8", Offset = "0xCB95C8", VA = "0xCB95C8", Slot = "13")]
		protected override AkCommonUserSettings GetUserSettings()
		{
			return null;
		}

		[Token(Token = "0x6000CF2")]
		[Address(RVA = "0xCB95D0", Offset = "0xCB95D0", VA = "0xCB95D0", Slot = "14")]
		protected override AkCommonAdvancedSettings GetAdvancedSettings()
		{
			return null;
		}

		[Token(Token = "0x6000CF3")]
		[Address(RVA = "0xCB95D8", Offset = "0xCB95D8", VA = "0xCB95D8", Slot = "15")]
		protected override AkCommonCommSettings GetCommsSettings()
		{
			return null;
		}

		[Token(Token = "0x6000CF4")]
		[Address(RVA = "0xCB95E0", Offset = "0xCB95E0", VA = "0xCB95E0")]
		public CommonPlatformSettings()
		{
		}
	}

	[Token(Token = "0x4000A84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public List<string> PlatformSettingsNameList;

	[Token(Token = "0x4000A85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public List<PlatformSettings> PlatformSettingsList;

	[Token(Token = "0x4000A86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public List<string> InvalidReferencePlatforms;

	[Token(Token = "0x4000A87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public AkCommonUserSettings UserSettings;

	[Token(Token = "0x4000A88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public AkCommonAdvancedSettings AdvancedSettings;

	[Token(Token = "0x4000A89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public AkCommonCommSettings CommsSettings;

	[Token(Token = "0x4000A8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly string[] AllGlobalValues;

	[Token(Token = "0x4000A8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static AkWwiseInitializationSettings m_Instance;

	[Token(Token = "0x4000A8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static AkBasePlatformSettings m_ActivePlatformSettings;

	[Token(Token = "0x17000200")]
	public bool IsValid
	{
		[Token(Token = "0x6000CDA")]
		[Address(RVA = "0xCB82B0", Offset = "0xCB82B0", VA = "0xCB82B0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000201")]
	public int Count
	{
		[Token(Token = "0x6000CDB")]
		[Address(RVA = "0xCB8314", Offset = "0xCB8314", VA = "0xCB8314")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000202")]
	public static AkWwiseInitializationSettings Instance
	{
		[Token(Token = "0x6000CDF")]
		[Address(RVA = "0xCB837C", Offset = "0xCB837C", VA = "0xCB837C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000203")]
	public static AkBasePlatformSettings ActivePlatformSettings
	{
		[Token(Token = "0x6000CE1")]
		[Address(RVA = "0xCB8660", Offset = "0xCB8660", VA = "0xCB8660")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000CDC")]
	[Address(RVA = "0xCB8364", Offset = "0xCB8364", VA = "0xCB8364", Slot = "13")]
	protected override AkCommonUserSettings GetUserSettings()
	{
		return null;
	}

	[Token(Token = "0x6000CDD")]
	[Address(RVA = "0xCB836C", Offset = "0xCB836C", VA = "0xCB836C", Slot = "14")]
	protected override AkCommonAdvancedSettings GetAdvancedSettings()
	{
		return null;
	}

	[Token(Token = "0x6000CDE")]
	[Address(RVA = "0xCB8374", Offset = "0xCB8374", VA = "0xCB8374", Slot = "15")]
	protected override AkCommonCommSettings GetCommsSettings()
	{
		return null;
	}

	[Token(Token = "0x6000CE0")]
	[Address(RVA = "0xCB84B0", Offset = "0xCB84B0", VA = "0xCB84B0")]
	private static AkBasePlatformSettings GetPlatformSettings(string platformName)
	{
		return null;
	}

	[Token(Token = "0x6000CE2")]
	[Address(RVA = "0xCB8788", Offset = "0xCB8788", VA = "0xCB8788")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000CE3")]
	[Address(RVA = "0xCAC0BC", Offset = "0xCAC0BC", VA = "0xCAC0BC")]
	public static bool InitializeSoundEngine()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CE4")]
	[Address(RVA = "0xCB88EC", Offset = "0xCB88EC", VA = "0xCB88EC")]
	public static bool ResetSoundEngine(bool isPlaying)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CE5")]
	[Address(RVA = "0xCAC730", Offset = "0xCAC730", VA = "0xCAC730")]
	public static void TerminateSoundEngine()
	{
	}

	[Token(Token = "0x6000CE6")]
	[Address(RVA = "0xCB89C4", Offset = "0xCB89C4", VA = "0xCB89C4")]
	private static void SleepForMilliseconds(double milliseconds)
	{
	}

	[Token(Token = "0x6000CE7")]
	[Address(RVA = "0xCB8B14", Offset = "0xCB8B14", VA = "0xCB8B14")]
	public AkWwiseInitializationSettings()
	{
	}
}
[Token(Token = "0x2000239")]
public class AkAcousticSurfaceArray : AkBaseArray<AkAcousticSurface>
{
	[Token(Token = "0x17000205")]
	protected override int StructureSize
	{
		[Token(Token = "0x6000CF6")]
		[Address(RVA = "0xDDE148", Offset = "0xDDE148", VA = "0xDDE148", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000CF5")]
	[Address(RVA = "0xDDE0E8", Offset = "0xDDE0E8", VA = "0xDDE0E8")]
	public AkAcousticSurfaceArray(int count)
	{
	}

	[Token(Token = "0x6000CF7")]
	[Address(RVA = "0xDDE150", Offset = "0xDDE150", VA = "0xDDE150", Slot = "7")]
	protected override void DefaultConstructAtIntPtr(IntPtr address)
	{
	}

	[Token(Token = "0x6000CF8")]
	[Address(RVA = "0xDDE15C", Offset = "0xDDE15C", VA = "0xDDE15C", Slot = "9")]
	protected override AkAcousticSurface CreateNewReferenceFromIntPtr(IntPtr address)
	{
		return null;
	}
}
[Token(Token = "0x200023A")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x8703E0", Offset = "0x8703E0")]
public class AkAuxSendArray : IDisposable
{
	[Token(Token = "0x4000A93")]
	private const int MAX_COUNT = 4;

	[Token(Token = "0x4000A94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private readonly int SIZE_OF_AKAUXSENDVALUE;

	[Token(Token = "0x4000A95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private IntPtr m_Buffer;

	[Token(Token = "0x4000A96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int m_Count;

	[Token(Token = "0x17000206")]
	public bool isFull
	{
		[Token(Token = "0x6000CFA")]
		[Address(RVA = "0xDE0AB8", Offset = "0xDE0AB8", VA = "0xDE0AB8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000CF9")]
	[Address(RVA = "0xDE0A28", Offset = "0xDE0A28", VA = "0xDE0A28")]
	public AkAuxSendArray()
	{
	}

	[Token(Token = "0x6000CFB")]
	[Address(RVA = "0xDE0B20", Offset = "0xDE0B20", VA = "0xDE0B20", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x6000CFC")]
	[Address(RVA = "0xDE0BAC", Offset = "0xDE0BAC", VA = "0xDE0BAC", Slot = "1")]
	~AkAuxSendArray()
	{
	}

	[Token(Token = "0x6000CFD")]
	[Address(RVA = "0xDE0C14", Offset = "0xDE0C14", VA = "0xDE0C14")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000CFE")]
	[Address(RVA = "0xDE0C1C", Offset = "0xDE0C1C", VA = "0xDE0C1C")]
	public bool Add(uint in_AuxBusID, float in_fValue)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CFF")]
	[Address(RVA = "0xDE0CE4", Offset = "0xDE0CE4", VA = "0xDE0CE4")]
	public bool Contains(uint in_AuxBusID)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D00")]
	[Address(RVA = "0xDE0DA8", Offset = "0xDE0DA8", VA = "0xDE0DA8")]
	public AKRESULT SetValues(GameObject gameObject)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000D01")]
	[Address(RVA = "0xDE0E2C", Offset = "0xDE0E2C", VA = "0xDE0E2C")]
	public int Count()
	{
		return default(int);
	}

	[Token(Token = "0x6000D02")]
	[Address(RVA = "0xDE0CA8", Offset = "0xDE0CA8", VA = "0xDE0CA8")]
	private IntPtr GetObjectPtr(int index)
	{
		return default(IntPtr);
	}
}
[Token(Token = "0x200023B")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x870418", Offset = "0x870418")]
public abstract class AkBaseArray<T> : IDisposable
{
	[Token(Token = "0x4000A97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x877320", Offset = "0x877320")]
	private int <Capacity>k__BackingField;

	[Token(Token = "0x4000A98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private IntPtr m_Buffer;

	[Token(Token = "0x17000207")]
	public int Capacity
	{
		[Token(Token = "0x6000D06")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87D5B4", Offset = "0x87D5B4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000D07")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87D5C4", Offset = "0x87D5C4")]
		private set
		{
		}
	}

	[Token(Token = "0x17000208")]
	protected abstract int StructureSize
	{
		[Token(Token = "0x6000D09")]
		get;
	}

	[Token(Token = "0x17000209")]
	public T Item
	{
		[Token(Token = "0x6000D0D")]
		get
		{
			return (T)null;
		}
	}

	[Token(Token = "0x6000D03")]
	public AkBaseArray(int capacity)
	{
	}

	[Token(Token = "0x6000D04")]
	public void Dispose()
	{
	}

	[Token(Token = "0x6000D05")]
	~AkBaseArray()
	{
	}

	[Token(Token = "0x6000D08")]
	public virtual int Count()
	{
		return default(int);
	}

	[Token(Token = "0x6000D0A")]
	protected virtual void DefaultConstructAtIntPtr(IntPtr address)
	{
	}

	[Token(Token = "0x6000D0B")]
	protected virtual void ReleaseAllocatedMemoryFromReferenceAtIntPtr(IntPtr address)
	{
	}

	[Token(Token = "0x6000D0C")]
	protected abstract T CreateNewReferenceFromIntPtr(IntPtr address);

	[Token(Token = "0x6000D0E")]
	public IntPtr GetBuffer()
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000D0F")]
	protected IntPtr GetObjectPtr(int index)
	{
		return default(IntPtr);
	}
}
[Token(Token = "0x200023C")]
public class AkPositionArray : IDisposable
{
	[Token(Token = "0x4000A99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr m_Buffer;

	[Token(Token = "0x4000A9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private IntPtr m_Current;

	[Token(Token = "0x4000A9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private uint m_MaxCount;

	[Token(Token = "0x4000A9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x877330", Offset = "0x877330")]
	private uint <Count>k__BackingField;

	[Token(Token = "0x1700020A")]
	public uint Count
	{
		[Token(Token = "0x6000D11")]
		[Address(RVA = "0xDEEF2C", Offset = "0xDEEF2C", VA = "0xDEEF2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87D5D4", Offset = "0x87D5D4")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000D12")]
		[Address(RVA = "0xDEEF34", Offset = "0xDEEF34", VA = "0xDEEF34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87D5E4", Offset = "0x87D5E4")]
		private set
		{
		}
	}

	[Token(Token = "0x6000D10")]
	[Address(RVA = "0xDDF174", Offset = "0xDDF174", VA = "0xDDF174")]
	public AkPositionArray(uint in_Count)
	{
	}

	[Token(Token = "0x6000D13")]
	[Address(RVA = "0xDEEF3C", Offset = "0xDEEF3C", VA = "0xDEEF3C", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x6000D14")]
	[Address(RVA = "0xDEEFC8", Offset = "0xDEEFC8", VA = "0xDEEFC8", Slot = "1")]
	~AkPositionArray()
	{
	}

	[Token(Token = "0x6000D15")]
	[Address(RVA = "0xDDF204", Offset = "0xDDF204", VA = "0xDDF204")]
	public void Add(Vector3 in_Pos, Vector3 in_Forward, Vector3 in_Top)
	{
	}
}
[Token(Token = "0x200023D")]
public class AkTriangleArray : AkBaseArray<AkTriangle>
{
	[Token(Token = "0x1700020B")]
	protected override int StructureSize
	{
		[Token(Token = "0x6000D17")]
		[Address(RVA = "0xCB64B0", Offset = "0xCB64B0", VA = "0xCB64B0", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000D16")]
	[Address(RVA = "0xCB2EE0", Offset = "0xCB2EE0", VA = "0xCB2EE0")]
	public AkTriangleArray(int count)
	{
	}

	[Token(Token = "0x6000D18")]
	[Address(RVA = "0xCB64B4", Offset = "0xCB64B4", VA = "0xCB64B4", Slot = "7")]
	protected override void DefaultConstructAtIntPtr(IntPtr address)
	{
	}

	[Token(Token = "0x6000D19")]
	[Address(RVA = "0xCB64BC", Offset = "0xCB64BC", VA = "0xCB64BC", Slot = "9")]
	protected override AkTriangle CreateNewReferenceFromIntPtr(IntPtr address)
	{
		return null;
	}
}
[Token(Token = "0x200023E")]
public class AkTimelineEventPlayableBehavior : PlayableBehaviour
{
	[Token(Token = "0x200023F")]
	[Flags]
	private enum Actions
	{
		[Token(Token = "0x4000AB3")]
		None = 0,
		[Token(Token = "0x4000AB4")]
		Playback = 1,
		[Token(Token = "0x4000AB5")]
		Retrigger = 2,
		[Token(Token = "0x4000AB6")]
		DelayedStop = 4,
		[Token(Token = "0x4000AB7")]
		Seek = 8,
		[Token(Token = "0x4000AB8")]
		FadeIn = 0x10,
		[Token(Token = "0x4000AB9")]
		FadeOut = 0x20
	}

	[Token(Token = "0x4000A9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private float currentDuration;

	[Token(Token = "0x4000A9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private float currentDurationProportion;

	[Token(Token = "0x4000A9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool eventIsPlaying;

	[Token(Token = "0x4000AA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool fadeinTriggered;

	[Token(Token = "0x4000AA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	private bool fadeoutTriggered;

	[Token(Token = "0x4000AA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float previousEventStartTime;

	[Token(Token = "0x4000AA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Actions requiredActions;

	[Token(Token = "0x4000AA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AK.Wwise.Event akEvent;

	[Token(Token = "0x4000AA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float eventDurationMax;

	[Token(Token = "0x4000AA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float eventDurationMin;

	[Token(Token = "0x4000AA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float blendInDuration;

	[Token(Token = "0x4000AA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float blendOutDuration;

	[Token(Token = "0x4000AA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float easeInDuration;

	[Token(Token = "0x4000AAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float easeOutDuration;

	[Token(Token = "0x4000AAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AkCurveInterpolation blendInCurve;

	[Token(Token = "0x4000AAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public AkCurveInterpolation blendOutCurve;

	[Token(Token = "0x4000AAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject eventObject;

	[Token(Token = "0x4000AAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool retriggerEvent;

	[Token(Token = "0x4000AAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool wasScrubbingAndRequiresRetrigger;

	[Token(Token = "0x4000AB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	public bool StopEventAtClipEnd;

	[Token(Token = "0x4000AB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
	public bool PrintDebugInformation;

	[Token(Token = "0x6000D1A")]
	[Address(RVA = "0xCB4050", Offset = "0xCB4050", VA = "0xCB4050")]
	private void CallbackHandler(object in_cookie, AkCallbackType in_type, AkCallbackInfo in_info)
	{
	}

	[Token(Token = "0x6000D1B")]
	[Address(RVA = "0xCB411C", Offset = "0xCB411C", VA = "0xCB411C")]
	private bool IsScrubbing(Playable playable, FrameData info)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D1C")]
	[Address(RVA = "0xCB4210", Offset = "0xCB4210", VA = "0xCB4210")]
	private void PrintInfo(string FunctionName, Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x6000D1D")]
	[Address(RVA = "0xCB4628", Offset = "0xCB4628", VA = "0xCB4628", Slot = "19")]
	public override void PrepareFrame(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x6000D1E")]
	[Address(RVA = "0xCB49E0", Offset = "0xCB49E0", VA = "0xCB49E0", Slot = "17")]
	public override void OnBehaviourPlay(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x6000D1F")]
	[Address(RVA = "0xCB4C0C", Offset = "0xCB4C0C", VA = "0xCB4C0C", Slot = "18")]
	public override void OnBehaviourPause(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x6000D20")]
	[Address(RVA = "0xCB4D58", Offset = "0xCB4D58", VA = "0xCB4D58", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x6000D21")]
	[Address(RVA = "0xCB479C", Offset = "0xCB479C", VA = "0xCB479C")]
	private bool ShouldPlay(Playable playable)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D22")]
	[Address(RVA = "0xCB489C", Offset = "0xCB489C", VA = "0xCB489C")]
	private void CheckForFadeInFadeOut(Playable playable)
	{
	}

	[Token(Token = "0x6000D23")]
	[Address(RVA = "0xCB493C", Offset = "0xCB493C", VA = "0xCB493C")]
	private void CheckForFadeOut(Playable playable, double currentClipTime)
	{
	}

	[Token(Token = "0x6000D24")]
	[Address(RVA = "0xCB5104", Offset = "0xCB5104", VA = "0xCB5104")]
	private void TriggerFadeIn(Playable playable)
	{
	}

	[Token(Token = "0x6000D25")]
	[Address(RVA = "0xCB5234", Offset = "0xCB5234", VA = "0xCB5234")]
	private void TriggerFadeOut(Playable playable)
	{
	}

	[Token(Token = "0x6000D26")]
	[Address(RVA = "0xCB4D20", Offset = "0xCB4D20", VA = "0xCB4D20")]
	private void StopEvent(int transition = 0)
	{
	}

	[Token(Token = "0x6000D27")]
	[Address(RVA = "0xCB52F8", Offset = "0xCB52F8", VA = "0xCB52F8")]
	private bool PostEvent()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D28")]
	[Address(RVA = "0xCB4F64", Offset = "0xCB4F64", VA = "0xCB4F64")]
	private void PlayEvent()
	{
	}

	[Token(Token = "0x6000D29")]
	[Address(RVA = "0xCB5068", Offset = "0xCB5068", VA = "0xCB5068")]
	private void RetriggerEvent(Playable playable)
	{
	}

	[Token(Token = "0x6000D2A")]
	[Address(RVA = "0xCB4B30", Offset = "0xCB4B30", VA = "0xCB4B30")]
	private float GetProportionalTime(Playable playable)
	{
		return default(float);
	}

	[Token(Token = "0x6000D2B")]
	[Address(RVA = "0xCB4F94", Offset = "0xCB4F94", VA = "0xCB4F94")]
	private float SeekToTime(Playable playable)
	{
		return default(float);
	}

	[Token(Token = "0x6000D2C")]
	[Address(RVA = "0xCB53A8", Offset = "0xCB53A8", VA = "0xCB53A8")]
	public AkTimelineEventPlayableBehavior()
	{
	}
}
[Token(Token = "0x2000240")]
public class AkTimelineEventPlayable : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x4000ABA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AK.Wwise.Event akEvent;

	[Token(Token = "0x4000ABB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AkCurveInterpolation blendInCurve;

	[Token(Token = "0x4000ABC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private AkCurveInterpolation blendOutCurve;

	[Token(Token = "0x4000ABD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float eventDurationMax;

	[Token(Token = "0x4000ABE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float eventDurationMin;

	[NonSerialized]
	[Token(Token = "0x4000ABF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TimelineClip owningClip;

	[Token(Token = "0x4000AC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private bool retriggerEvent;

	[Token(Token = "0x4000AC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool UseWwiseEventDuration;

	[Token(Token = "0x4000AC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	public bool PrintDebugInformation;

	[Token(Token = "0x4000AC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
	[SerializeField]
	private bool StopEventAtClipEnd;

	[Token(Token = "0x1700020C")]
	private ClipCaps UnityEngine.Timeline.ITimelineClipAsset.clipCaps
	{
		[Token(Token = "0x6000D2D")]
		[Address(RVA = "0xCB3DE4", Offset = "0xCB3DE4", VA = "0xCB3DE4", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x6000D2E")]
	[Address(RVA = "0xCB3DEC", Offset = "0xCB3DEC", VA = "0xCB3DEC", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000D2F")]
	[Address(RVA = "0xCB3FD0", Offset = "0xCB3FD0", VA = "0xCB3FD0")]
	public AkTimelineEventPlayable()
	{
	}
}
[Token(Token = "0x2000241")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x870460", Offset = "0x870460")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0x870460", Offset = "0x870460")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x870460", Offset = "0x870460")]
public class AkTimelineEventTrack : TrackAsset
{
	[Token(Token = "0x6000D30")]
	[Address(RVA = "0xCB53BC", Offset = "0xCB53BC", VA = "0xCB53BC", Slot = "23")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000D31")]
	[Address(RVA = "0xCB5720", Offset = "0xCB5720", VA = "0xCB5720")]
	public AkTimelineEventTrack()
	{
	}
}
[Serializable]
[Token(Token = "0x2000242")]
public class AkTimelineRtpcPlayableBehaviour : PlayableBehaviour
{
	[Token(Token = "0x4000AC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private float value;

	[Token(Token = "0x4000AC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x877390", Offset = "0x877390")]
	private RTPC <RTPC>k__BackingField;

	[Token(Token = "0x4000AC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8773A0", Offset = "0x8773A0")]
	private bool <setGlobally>k__BackingField;

	[Token(Token = "0x4000AC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8773B0", Offset = "0x8773B0")]
	private GameObject <gameObject>k__BackingField;

	[Token(Token = "0x1700020D")]
	public RTPC RTPC
	{
		[Token(Token = "0x6000D33")]
		[Address(RVA = "0xCB5934", Offset = "0xCB5934", VA = "0xCB5934")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87D604", Offset = "0x87D604")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000D32")]
		[Address(RVA = "0xCB592C", Offset = "0xCB592C", VA = "0xCB592C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87D5F4", Offset = "0x87D5F4")]
		set
		{
		}
	}

	[Token(Token = "0x1700020E")]
	public bool setGlobally
	{
		[Token(Token = "0x6000D35")]
		[Address(RVA = "0xCB5948", Offset = "0xCB5948", VA = "0xCB5948")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87D624", Offset = "0x87D624")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000D34")]
		[Address(RVA = "0xCB593C", Offset = "0xCB593C", VA = "0xCB593C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87D614", Offset = "0x87D614")]
		set
		{
		}
	}

	[Token(Token = "0x1700020F")]
	public GameObject gameObject
	{
		[Token(Token = "0x6000D37")]
		[Address(RVA = "0xCB5958", Offset = "0xCB5958", VA = "0xCB5958")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87D644", Offset = "0x87D644")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000D36")]
		[Address(RVA = "0xCB5950", Offset = "0xCB5950", VA = "0xCB5950")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87D634", Offset = "0x87D634")]
		set
		{
		}
	}

	[Token(Token = "0x6000D38")]
	[Address(RVA = "0xCB5960", Offset = "0xCB5960", VA = "0xCB5960", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData frameData, object playerData)
	{
	}

	[Token(Token = "0x6000D39")]
	[Address(RVA = "0xCB5924", Offset = "0xCB5924", VA = "0xCB5924")]
	public AkTimelineRtpcPlayableBehaviour()
	{
	}
}
[Token(Token = "0x2000243")]
public class AkTimelineRtpcPlayable : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x4000AC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RTPC RTPC;

	[Token(Token = "0x4000AC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool setGlobally;

	[Token(Token = "0x4000ACA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AkTimelineRtpcPlayableBehaviour template;

	[Token(Token = "0x4000ACB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8773C0", Offset = "0x8773C0")]
	private TimelineClip <owningClip>k__BackingField;

	[Token(Token = "0x17000210")]
	public TimelineClip owningClip
	{
		[Token(Token = "0x6000D3B")]
		[Address(RVA = "0xCB578C", Offset = "0xCB578C", VA = "0xCB578C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87D654", Offset = "0x87D654")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000D3C")]
		[Address(RVA = "0xCB5794", Offset = "0xCB5794", VA = "0xCB5794")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87D664", Offset = "0x87D664")]
		set
		{
		}
	}

	[Token(Token = "0x17000211")]
	private ClipCaps UnityEngine.Timeline.ITimelineClipAsset.clipCaps
	{
		[Token(Token = "0x6000D3D")]
		[Address(RVA = "0xCB579C", Offset = "0xCB579C", VA = "0xCB579C", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x6000D3A")]
	[Address(RVA = "0xCB5788", Offset = "0xCB5788", VA = "0xCB5788")]
	public void SetupClipDisplay()
	{
	}

	[Token(Token = "0x6000D3E")]
	[Address(RVA = "0xCB57A4", Offset = "0xCB57A4", VA = "0xCB57A4", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject gameObject)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000D3F")]
	[Address(RVA = "0xCB589C", Offset = "0xCB589C", VA = "0xCB589C")]
	public AkTimelineRtpcPlayable()
	{
	}
}
[Token(Token = "0x2000244")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x870514", Offset = "0x870514")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0x870514", Offset = "0x870514")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x870514", Offset = "0x870514")]
public class AkTimelineRtpcTrack : TrackAsset
{
	[Token(Token = "0x6000D40")]
	[Address(RVA = "0xCB5AB8", Offset = "0xCB5AB8", VA = "0xCB5AB8", Slot = "23")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject gameObject, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000D41")]
	[Address(RVA = "0xCB5DEC", Offset = "0xCB5DEC", VA = "0xCB5DEC")]
	public void OnValidate()
	{
	}

	[Token(Token = "0x6000D42")]
	[Address(RVA = "0xCB608C", Offset = "0xCB608C", VA = "0xCB608C")]
	public AkTimelineRtpcTrack()
	{
	}
}
[Token(Token = "0x2000245")]
public class WwiseAcousticTextureReference : WwiseObjectReference
{
	[Token(Token = "0x17000212")]
	public override WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x6000D43")]
		[Address(RVA = "0x1560350", Offset = "0x1560350", VA = "0x1560350", Slot = "5")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x6000D44")]
	[Address(RVA = "0x1560358", Offset = "0x1560358", VA = "0x1560358")]
	public WwiseAcousticTextureReference()
	{
	}
}
[Token(Token = "0x2000246")]
public class WwiseAuxBusReference : WwiseObjectReference
{
	[Token(Token = "0x17000213")]
	public override WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x6000D45")]
		[Address(RVA = "0x15603C8", Offset = "0x15603C8", VA = "0x15603C8", Slot = "5")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x6000D46")]
	[Address(RVA = "0x15603D0", Offset = "0x15603D0", VA = "0x15603D0")]
	public WwiseAuxBusReference()
	{
	}
}
[Token(Token = "0x2000247")]
public class WwiseBankReference : WwiseObjectReference
{
	[Token(Token = "0x17000214")]
	public override WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x6000D47")]
		[Address(RVA = "0x15603D4", Offset = "0x15603D4", VA = "0x15603D4", Slot = "5")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x6000D48")]
	[Address(RVA = "0x15603DC", Offset = "0x15603DC", VA = "0x15603DC")]
	public WwiseBankReference()
	{
	}
}
[Token(Token = "0x2000248")]
public class WwiseEventReference : WwiseObjectReference
{
	[Token(Token = "0x17000215")]
	public override WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x6000D49")]
		[Address(RVA = "0x15603E0", Offset = "0x15603E0", VA = "0x15603E0", Slot = "5")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x6000D4A")]
	[Address(RVA = "0x15603E8", Offset = "0x15603E8", VA = "0x15603E8")]
	public WwiseEventReference()
	{
	}
}
[Token(Token = "0x2000249")]
public abstract class WwiseObjectReference : ScriptableObject
{
	[Token(Token = "0x4000ACC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AkShowOnly]
	[SerializeField]
	private string objectName;

	[Token(Token = "0x4000ACD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[AkShowOnly]
	private uint id;

	[Token(Token = "0x4000ACE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AkShowOnly]
	[SerializeField]
	private string guid;

	[Token(Token = "0x17000216")]
	public Guid Guid
	{
		[Token(Token = "0x6000D4B")]
		[Address(RVA = "0x1560C2C", Offset = "0x1560C2C", VA = "0x1560C2C")]
		get
		{
			return default(Guid);
		}
	}

	[Token(Token = "0x17000217")]
	public string ObjectName
	{
		[Token(Token = "0x6000D4C")]
		[Address(RVA = "0x1560CD0", Offset = "0x1560CD0", VA = "0x1560CD0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000218")]
	public virtual string DisplayName
	{
		[Token(Token = "0x6000D4D")]
		[Address(RVA = "0x1560CD8", Offset = "0x1560CD8", VA = "0x1560CD8", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000219")]
	public uint Id
	{
		[Token(Token = "0x6000D4E")]
		[Address(RVA = "0x1560CE0", Offset = "0x1560CE0", VA = "0x1560CE0")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x1700021A")]
	public abstract WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x6000D4F")]
		get;
	}

	[Token(Token = "0x6000D50")]
	[Address(RVA = "0x156035C", Offset = "0x156035C", VA = "0x156035C")]
	protected WwiseObjectReference()
	{
	}
}
[Token(Token = "0x200024A")]
public abstract class WwiseGroupValueObjectReference : WwiseObjectReference
{
	[Token(Token = "0x1700021B")]
	public abstract WwiseObjectReference GroupObjectReference
	{
		[Token(Token = "0x6000D51")]
		get;
		[Token(Token = "0x6000D52")]
		set;
	}

	[Token(Token = "0x1700021C")]
	public abstract WwiseObjectType GroupWwiseObjectType
	{
		[Token(Token = "0x6000D53")]
		get;
	}

	[Token(Token = "0x1700021D")]
	public override string DisplayName
	{
		[Token(Token = "0x6000D54")]
		[Address(RVA = "0x15603EC", Offset = "0x15603EC", VA = "0x15603EC", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000D55")]
	[Address(RVA = "0x15604A4", Offset = "0x15604A4", VA = "0x15604A4")]
	protected WwiseGroupValueObjectReference()
	{
	}
}
[Token(Token = "0x200024B")]
public enum WwiseObjectType
{
	[Token(Token = "0x4000AD0")]
	None,
	[Token(Token = "0x4000AD1")]
	AuxBus,
	[Token(Token = "0x4000AD2")]
	Bus,
	[Token(Token = "0x4000AD3")]
	Event,
	[Token(Token = "0x4000AD4")]
	Folder,
	[Token(Token = "0x4000AD5")]
	PhysicalFolder,
	[Token(Token = "0x4000AD6")]
	Project,
	[Token(Token = "0x4000AD7")]
	Soundbank,
	[Token(Token = "0x4000AD8")]
	State,
	[Token(Token = "0x4000AD9")]
	StateGroup,
	[Token(Token = "0x4000ADA")]
	Switch,
	[Token(Token = "0x4000ADB")]
	SwitchGroup,
	[Token(Token = "0x4000ADC")]
	WorkUnit,
	[Token(Token = "0x4000ADD")]
	GameParameter,
	[Token(Token = "0x4000ADE")]
	Trigger,
	[Token(Token = "0x4000ADF")]
	AcousticTexture
}
[Token(Token = "0x200024C")]
public class WwiseRtpcReference : WwiseObjectReference
{
	[Token(Token = "0x1700021E")]
	public override WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x6000D56")]
		[Address(RVA = "0x1560CE8", Offset = "0x1560CE8", VA = "0x1560CE8", Slot = "5")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x6000D57")]
	[Address(RVA = "0x1560CF0", Offset = "0x1560CF0", VA = "0x1560CF0")]
	public WwiseRtpcReference()
	{
	}
}
[Token(Token = "0x200024D")]
public class WwiseStateGroupReference : WwiseObjectReference
{
	[Token(Token = "0x1700021F")]
	public override WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x6000D58")]
		[Address(RVA = "0x1560CF4", Offset = "0x1560CF4", VA = "0x1560CF4", Slot = "5")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x6000D59")]
	[Address(RVA = "0x1560CFC", Offset = "0x1560CFC", VA = "0x1560CFC")]
	public WwiseStateGroupReference()
	{
	}
}
[Token(Token = "0x200024E")]
public class WwiseStateReference : WwiseGroupValueObjectReference
{
	[Token(Token = "0x4000AE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AkShowOnly]
	[SerializeField]
	private WwiseStateGroupReference WwiseStateGroupReference;

	[Token(Token = "0x17000220")]
	public override WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x6000D5A")]
		[Address(RVA = "0x1560D00", Offset = "0x1560D00", VA = "0x1560D00", Slot = "5")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x17000221")]
	public override WwiseObjectReference GroupObjectReference
	{
		[Token(Token = "0x6000D5B")]
		[Address(RVA = "0x1560D08", Offset = "0x1560D08", VA = "0x1560D08", Slot = "6")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000D5C")]
		[Address(RVA = "0x1560D10", Offset = "0x1560D10", VA = "0x1560D10", Slot = "7")]
		set
		{
		}
	}

	[Token(Token = "0x17000222")]
	public override WwiseObjectType GroupWwiseObjectType
	{
		[Token(Token = "0x6000D5D")]
		[Address(RVA = "0x1560DA0", Offset = "0x1560DA0", VA = "0x1560DA0", Slot = "8")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x6000D5E")]
	[Address(RVA = "0x1560DA8", Offset = "0x1560DA8", VA = "0x1560DA8")]
	public WwiseStateReference()
	{
	}
}
[Token(Token = "0x200024F")]
public class WwiseSwitchGroupReference : WwiseObjectReference
{
	[Token(Token = "0x17000223")]
	public override WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x6000D5F")]
		[Address(RVA = "0x1560DAC", Offset = "0x1560DAC", VA = "0x1560DAC", Slot = "5")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x6000D60")]
	[Address(RVA = "0x1560DB4", Offset = "0x1560DB4", VA = "0x1560DB4")]
	public WwiseSwitchGroupReference()
	{
	}
}
[Token(Token = "0x2000250")]
public class WwiseSwitchReference : WwiseGroupValueObjectReference
{
	[Token(Token = "0x4000AE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AkShowOnly]
	[SerializeField]
	private WwiseSwitchGroupReference WwiseSwitchGroupReference;

	[Token(Token = "0x17000224")]
	public override WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x6000D61")]
		[Address(RVA = "0x1560DB8", Offset = "0x1560DB8", VA = "0x1560DB8", Slot = "5")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x17000225")]
	public override WwiseObjectReference GroupObjectReference
	{
		[Token(Token = "0x6000D62")]
		[Address(RVA = "0x1560DC0", Offset = "0x1560DC0", VA = "0x1560DC0", Slot = "6")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000D63")]
		[Address(RVA = "0x1560DC8", Offset = "0x1560DC8", VA = "0x1560DC8", Slot = "7")]
		set
		{
		}
	}

	[Token(Token = "0x17000226")]
	public override WwiseObjectType GroupWwiseObjectType
	{
		[Token(Token = "0x6000D64")]
		[Address(RVA = "0x1560E58", Offset = "0x1560E58", VA = "0x1560E58", Slot = "8")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x6000D65")]
	[Address(RVA = "0x1560E60", Offset = "0x1560E60", VA = "0x1560E60")]
	public WwiseSwitchReference()
	{
	}
}
[Token(Token = "0x2000251")]
public class WwiseTriggerReference : WwiseObjectReference
{
	[Token(Token = "0x17000227")]
	public override WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x6000D66")]
		[Address(RVA = "0x1560E64", Offset = "0x1560E64", VA = "0x1560E64", Slot = "5")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x6000D67")]
	[Address(RVA = "0x1560E6C", Offset = "0x1560E6C", VA = "0x1560E6C")]
	public WwiseTriggerReference()
	{
	}
}
[Token(Token = "0x2000252")]
public class AkMacSettings : AkWwiseInitializationSettings.CommonPlatformSettings
{
	[Token(Token = "0x6000D68")]
	[Address(RVA = "0xDECE00", Offset = "0xDECE00", VA = "0xDECE00")]
	public AkMacSettings()
	{
	}
}
[Token(Token = "0x2000253")]
public class AkWindowsSettings : AkWwiseInitializationSettings.PlatformSettings
{
	[Serializable]
	[Token(Token = "0x2000254")]
	public class PlatformAdvancedSettings : AkCommonAdvancedSettings
	{
		[Token(Token = "0x2000255")]
		public enum AudioAPI
		{
			[Token(Token = "0x4000AE8")]
			None = 0,
			[Token(Token = "0x4000AE9")]
			Wasapi = 1,
			[Token(Token = "0x4000AEA")]
			XAudio2 = 2,
			[Token(Token = "0x4000AEB")]
			DirectSound = 4,
			[Token(Token = "0x4000AEC")]
			Default = -1
		}

		[Token(Token = "0x4000AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x877518", Offset = "0x877518")]
		[AttributeAttribute(Name = "AkEnumFlagAttribute", RVA = "0x877518", Offset = "0x877518")]
		public AudioAPI m_AudioAPI;

		[Token(Token = "0x4000AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8775A0", Offset = "0x8775A0")]
		public bool m_GlobalFocus;

		[Token(Token = "0x6000D6D")]
		[Address(RVA = "0xCB8294", Offset = "0xCB8294", VA = "0xCB8294", Slot = "6")]
		public override void CopyTo(AkPlatformInitSettings settings)
		{
		}

		[Token(Token = "0x6000D6E")]
		[Address(RVA = "0xCB8298", Offset = "0xCB8298", VA = "0xCB8298")]
		public PlatformAdvancedSettings()
		{
		}
	}

	[Token(Token = "0x4000AE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public AkCommonUserSettings UserSettings;

	[Token(Token = "0x4000AE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public PlatformAdvancedSettings AdvancedSettings;

	[Token(Token = "0x4000AE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public AkCommonCommSettings CommsSettings;

	[Token(Token = "0x6000D69")]
	[Address(RVA = "0xCB81B4", Offset = "0xCB81B4", VA = "0xCB81B4", Slot = "13")]
	protected override AkCommonUserSettings GetUserSettings()
	{
		return null;
	}

	[Token(Token = "0x6000D6A")]
	[Address(RVA = "0xCB81BC", Offset = "0xCB81BC", VA = "0xCB81BC", Slot = "14")]
	protected override AkCommonAdvancedSettings GetAdvancedSettings()
	{
		return null;
	}

	[Token(Token = "0x6000D6B")]
	[Address(RVA = "0xCB81C4", Offset = "0xCB81C4", VA = "0xCB81C4", Slot = "15")]
	protected override AkCommonCommSettings GetCommsSettings()
	{
		return null;
	}

	[Token(Token = "0x6000D6C")]
	[Address(RVA = "0xCB81CC", Offset = "0xCB81CC", VA = "0xCB81CC")]
	public AkWindowsSettings()
	{
	}
}
[Token(Token = "0x2000256")]
public enum MultiPositionTypeLabel
{
	[Token(Token = "0x4000AEE")]
	Simple_Mode,
	[Token(Token = "0x4000AEF")]
	Large_Mode,
	[Token(Token = "0x4000AF0")]
	MultiPosition_Mode
}
[Token(Token = "0x2000257")]
public class AkMultiPosEvent
{
	[Token(Token = "0x4000AF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool eventIsPlaying;

	[Token(Token = "0x4000AF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<AkAmbient> list;

	[Token(Token = "0x6000D6F")]
	[Address(RVA = "0xDEDA10", Offset = "0xDEDA10", VA = "0xDEDA10")]
	public void FinishedPlaying(object in_cookie, AkCallbackType in_type, object in_info)
	{
	}

	[Token(Token = "0x6000D70")]
	[Address(RVA = "0xDDE470", Offset = "0xDDE470", VA = "0xDDE470")]
	public AkMultiPosEvent()
	{
	}
}
[Token(Token = "0x2000258")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8705C4", Offset = "0x8705C4")]
public class AkAmbient : AkEvent
{
	[Token(Token = "0x4000AF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<uint, AkMultiPosEvent> multiPosEventTree;

	[Token(Token = "0x4000AF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public AkMultiPositionType MultiPositionType;

	[Token(Token = "0x4000AF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public MultiPositionTypeLabel multiPositionTypeLabel;

	[Token(Token = "0x4000AF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public AkAmbientLargeModePositioner[] LargeModePositions;

	[Token(Token = "0x4000AF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	[HideInInspector]
	public List<Vector3> multiPositionArray;

	[Token(Token = "0x6000D71")]
	[Address(RVA = "0xDDE1C4", Offset = "0xDDE1C4", VA = "0xDDE1C4", Slot = "8")]
	public override void OnEnable()
	{
	}

	[Token(Token = "0x6000D72")]
	[Address(RVA = "0xDDE698", Offset = "0xDDE698", VA = "0xDDE698", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000D73")]
	[Address(RVA = "0xDDEB40", Offset = "0xDDEB40", VA = "0xDDEB40")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000D74")]
	[Address(RVA = "0xDDED08", Offset = "0xDDED08", VA = "0xDDED08", Slot = "4")]
	public override void HandleEvent(GameObject in_gameObject)
	{
	}

	[Token(Token = "0x6000D75")]
	[Address(RVA = "0xDDF104", Offset = "0xDDF104", VA = "0xDDF104")]
	public void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000D76")]
	[Address(RVA = "0xDDE4E0", Offset = "0xDDE4E0", VA = "0xDDE4E0")]
	public AkPositionArray BuildMultiDirectionArray(AkMultiPosEvent eventPosList)
	{
		return null;
	}

	[Token(Token = "0x6000D77")]
	[Address(RVA = "0xDDE8CC", Offset = "0xDDE8CC", VA = "0xDDE8CC")]
	private AkPositionArray BuildAkPositionArray()
	{
		return null;
	}

	[Token(Token = "0x6000D78")]
	[Address(RVA = "0xDDF62C", Offset = "0xDDF62C", VA = "0xDDF62C")]
	public AkAmbient()
	{
	}
}
[Token(Token = "0x2000259")]
public class AkAmbientLargeModePositioner : MonoBehaviour
{
	[Token(Token = "0x17000228")]
	public Vector3 Position
	{
		[Token(Token = "0x6000D7A")]
		[Address(RVA = "0xDDF5C0", Offset = "0xDDF5C0", VA = "0xDDF5C0")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000229")]
	public Vector3 Forward
	{
		[Token(Token = "0x6000D7B")]
		[Address(RVA = "0xDDF5E4", Offset = "0xDDF5E4", VA = "0xDDF5E4")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700022A")]
	public Vector3 Up
	{
		[Token(Token = "0x6000D7C")]
		[Address(RVA = "0xDDF608", Offset = "0xDDF608", VA = "0xDDF608")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x6000D7D")]
	[Address(RVA = "0xDDF740", Offset = "0xDDF740", VA = "0xDDF740")]
	public AkAmbientLargeModePositioner()
	{
	}
}
[Token(Token = "0x200025A")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8705FC", Offset = "0x8705FC")]
[DisallowMultipleComponent]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x8705FC", Offset = "0x8705FC")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8705FC", Offset = "0x8705FC")]
public class AkAudioListener : MonoBehaviour
{
	[Token(Token = "0x200025B")]
	public class BaseListenerList
	{
		[Token(Token = "0x4000AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly List<ulong> listenerIdList;

		[Token(Token = "0x4000AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly List<AkAudioListener> listenerList;

		[Token(Token = "0x1700022C")]
		public List<AkAudioListener> ListenerList
		{
			[Token(Token = "0x6000D8A")]
			[Address(RVA = "0xDE0428", Offset = "0xDE0428", VA = "0xDE0428")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D8B")]
		[Address(RVA = "0xDE0430", Offset = "0xDE0430", VA = "0xDE0430", Slot = "4")]
		public virtual bool Add(AkAudioListener listener)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D8C")]
		[Address(RVA = "0xDE0520", Offset = "0xDE0520", VA = "0xDE0520", Slot = "5")]
		public virtual bool Remove(AkAudioListener listener)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D8D")]
		[Address(RVA = "0xDE05F0", Offset = "0xDE05F0", VA = "0xDE05F0")]
		public BaseListenerList()
		{
		}
	}

	[Token(Token = "0x200025C")]
	public class DefaultListenerList : BaseListenerList
	{
		[Token(Token = "0x6000D8E")]
		[Address(RVA = "0xDE0688", Offset = "0xDE0688", VA = "0xDE0688", Slot = "4")]
		public override bool Add(AkAudioListener listener)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D8F")]
		[Address(RVA = "0xDE075C", Offset = "0xDE075C", VA = "0xDE075C", Slot = "5")]
		public override bool Remove(AkAudioListener listener)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D90")]
		[Address(RVA = "0xDE0424", Offset = "0xDE0424", VA = "0xDE0424")]
		public DefaultListenerList()
		{
		}
	}

	[Token(Token = "0x4000AF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly DefaultListenerList defaultListeners;

	[Token(Token = "0x4000AF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ulong akGameObjectID;

	[Token(Token = "0x4000AFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<AkGameObj> EmittersToStartListeningTo;

	[Token(Token = "0x4000AFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<AkGameObj> EmittersToStopListeningTo;

	[Token(Token = "0x4000AFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool isDefaultListener;

	[Token(Token = "0x4000AFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	public int listenerId;

	[Token(Token = "0x1700022B")]
	public static DefaultListenerList DefaultListeners
	{
		[Token(Token = "0x6000D7E")]
		[Address(RVA = "0xDDFAC4", Offset = "0xDDFAC4", VA = "0xDDFAC4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000D7F")]
	[Address(RVA = "0xDDFB2C", Offset = "0xDDFB2C", VA = "0xDDFB2C")]
	public void StartListeningToEmitter(AkGameObj emitter)
	{
	}

	[Token(Token = "0x6000D80")]
	[Address(RVA = "0xDDFBB0", Offset = "0xDDFBB0", VA = "0xDDFBB0")]
	public void StopListeningToEmitter(AkGameObj emitter)
	{
	}

	[Token(Token = "0x6000D81")]
	[Address(RVA = "0xDDFC34", Offset = "0xDDFC34", VA = "0xDDFC34")]
	public void SetIsDefaultListener(bool isDefault)
	{
	}

	[Token(Token = "0x6000D82")]
	[Address(RVA = "0xDDFD94", Offset = "0xDDFD94", VA = "0xDDFD94")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D83")]
	[Address(RVA = "0xDDFF34", Offset = "0xDDFF34", VA = "0xDDFF34")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D84")]
	[Address(RVA = "0xDE0010", Offset = "0xDE0010", VA = "0xDE0010")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000D85")]
	[Address(RVA = "0xDE00EC", Offset = "0xDE00EC", VA = "0xDE00EC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D86")]
	[Address(RVA = "0xDE0250", Offset = "0xDE0250", VA = "0xDE0250")]
	public ulong GetAkGameObjectID()
	{
		return default(ulong);
	}

	[Token(Token = "0x6000D87")]
	[Address(RVA = "0xDE0258", Offset = "0xDE0258", VA = "0xDE0258")]
	public void Migrate14()
	{
	}

	[Token(Token = "0x6000D88")]
	[Address(RVA = "0xDE031C", Offset = "0xDE031C", VA = "0xDE031C")]
	public AkAudioListener()
	{
	}
}
[Token(Token = "0x200025D")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8706A8", Offset = "0x8706A8")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x8706A8", Offset = "0x8706A8")]
[ExecuteInEditMode]
public class AkBank : AkTriggerHandler
{
	[Token(Token = "0x4000B00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Bank data;

	[Token(Token = "0x4000B01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool decodeBank;

	[Token(Token = "0x4000B02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool loadAsynchronous;

	[Token(Token = "0x4000B03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	public bool saveDecodedBank;

	[Token(Token = "0x4000B04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<int> unloadTriggerList;

	[Token(Token = "0x4000B05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x877620", Offset = "0x877620")]
	private string bankNameInternal;

	[Token(Token = "0x4000B06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x87767C", Offset = "0x87767C")]
	[SerializeField]
	[HideInInspector]
	private byte[] valueGuidInternal;

	[Token(Token = "0x1700022D")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x87EAFC", Offset = "0x87EAFC")]
	public string bankName
	{
		[Token(Token = "0x6000D96")]
		[Address(RVA = "0xDE103C", Offset = "0xDE103C", VA = "0xDE103C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700022E")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x87EB34", Offset = "0x87EB34")]
	public byte[] valueGuid
	{
		[Token(Token = "0x6000D97")]
		[Address(RVA = "0xDE10AC", Offset = "0xDE10AC", VA = "0xDE10AC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000D91")]
	[Address(RVA = "0xDE0E34", Offset = "0xDE0E34", VA = "0xDE0E34", Slot = "5")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000D92")]
	[Address(RVA = "0xDE0EC8", Offset = "0xDE0EC8", VA = "0xDE0EC8", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000D93")]
	[Address(RVA = "0xDE0F68", Offset = "0xDE0F68", VA = "0xDE0F68", Slot = "4")]
	public override void HandleEvent(GameObject in_gameObject)
	{
	}

	[Token(Token = "0x6000D94")]
	[Address(RVA = "0xDE0F50", Offset = "0xDE0F50", VA = "0xDE0F50")]
	public void UnloadBank(GameObject in_gameObject)
	{
	}

	[Token(Token = "0x6000D95")]
	[Address(RVA = "0xDE0FA8", Offset = "0xDE0FA8", VA = "0xDE0FA8", Slot = "7")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x6000D98")]
	[Address(RVA = "0xDE1170", Offset = "0xDE1170", VA = "0xDE1170")]
	public AkBank()
	{
	}
}
[Token(Token = "0x200025E")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x870708", Offset = "0x870708")]
[DisallowMultipleComponent]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x870708", Offset = "0x870708")]
public class AkEarlyReflections : MonoBehaviour
{
	[Token(Token = "0x4000B07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8776D8", Offset = "0x8776D8")]
	public AuxBus reflectionsAuxBus;

	[Token(Token = "0x4000B08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x877710", Offset = "0x877710")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x877710", Offset = "0x877710")]
	public float reflectionsVolume;

	[Token(Token = "0x6000D99")]
	[Address(RVA = "0xDE7968", Offset = "0xDE7968", VA = "0xDE7968")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D9A")]
	[Address(RVA = "0xDE7A60", Offset = "0xDE7A60", VA = "0xDE7A60")]
	public void SetEarlyReflectionsVolume(float volume)
	{
	}

	[Token(Token = "0x6000D9B")]
	[Address(RVA = "0xDE7B00", Offset = "0xDE7B00", VA = "0xDE7B00")]
	public AkEarlyReflections()
	{
	}
}
[Token(Token = "0x200025F")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8707A0", Offset = "0x8707A0")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8707A0", Offset = "0x8707A0")]
public class AkEmitterObstructionOcclusion : AkObstructionOcclusion
{
	[Token(Token = "0x4000B09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AkGameObj m_gameObj;

	[Token(Token = "0x6000D9C")]
	[Address(RVA = "0xDE7B70", Offset = "0xDE7B70", VA = "0xDE7B70")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D9D")]
	[Address(RVA = "0xDE7C2C", Offset = "0xDE7C2C", VA = "0xDE7C2C", Slot = "4")]
	protected override void UpdateCurrentListenerList()
	{
	}

	[Token(Token = "0x6000D9E")]
	[Address(RVA = "0xDE7EA0", Offset = "0xDE7EA0", VA = "0xDE7EA0", Slot = "5")]
	protected override void SetObstructionOcclusion(KeyValuePair<AkAudioListener, ObstructionOcclusionValue> ObsOccPair)
	{
	}

	[Token(Token = "0x6000D9F")]
	[Address(RVA = "0xDE8098", Offset = "0xDE8098", VA = "0xDE8098")]
	public AkEmitterObstructionOcclusion()
	{
	}
}
[Token(Token = "0x2000260")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x870828", Offset = "0x870828")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x870828", Offset = "0x870828")]
public class AkEnvironment : MonoBehaviour
{
	[Token(Token = "0x2000261")]
	public class AkEnvironment_CompareByPriority : IComparer<AkEnvironment>
	{
		[Token(Token = "0x6000DA9")]
		[Address(RVA = "0xDE840C", Offset = "0xDE840C", VA = "0xDE840C", Slot = "5")]
		public virtual int Compare(AkEnvironment a, AkEnvironment b)
		{
			return default(int);
		}

		[Token(Token = "0x6000DAA")]
		[Address(RVA = "0xDE83FC", Offset = "0xDE83FC", VA = "0xDE83FC")]
		public AkEnvironment_CompareByPriority()
		{
		}
	}

	[Token(Token = "0x2000262")]
	public class AkEnvironment_CompareBySelectionAlgorithm : AkEnvironment_CompareByPriority
	{
		[Token(Token = "0x6000DAB")]
		[Address(RVA = "0xDE84AC", Offset = "0xDE84AC", VA = "0xDE84AC", Slot = "5")]
		public override int Compare(AkEnvironment a, AkEnvironment b)
		{
			return default(int);
		}

		[Token(Token = "0x6000DAC")]
		[Address(RVA = "0xDE8404", Offset = "0xDE8404", VA = "0xDE8404")]
		public AkEnvironment_CompareBySelectionAlgorithm()
		{
		}
	}

	[Token(Token = "0x4000B0A")]
	public const int MAX_NB_ENVIRONMENTS = 4;

	[Token(Token = "0x4000B0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AkEnvironment_CompareByPriority s_compareByPriority;

	[Token(Token = "0x4000B0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static AkEnvironment_CompareBySelectionAlgorithm s_compareBySelectionAlgorithm;

	[Token(Token = "0x4000B0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool excludeOthers;

	[Token(Token = "0x4000B0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool isDefault;

	[Token(Token = "0x4000B0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AuxBus data;

	[Token(Token = "0x4000B10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x877764", Offset = "0x877764")]
	private Collider <Collider>k__BackingField;

	[Token(Token = "0x4000B11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int priority;

	[Token(Token = "0x4000B12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x877774", Offset = "0x877774")]
	[HideInInspector]
	[SerializeField]
	private int auxBusIdInternal;

	[Token(Token = "0x4000B13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8777D0", Offset = "0x8777D0")]
	private byte[] valueGuidInternal;

	[Token(Token = "0x1700022F")]
	public Collider Collider
	{
		[Token(Token = "0x6000DA0")]
		[Address(RVA = "0xDE81A4", Offset = "0xDE81A4", VA = "0xDE81A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87D674", Offset = "0x87D674")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000DA1")]
		[Address(RVA = "0xDE81AC", Offset = "0xDE81AC", VA = "0xDE81AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87D684", Offset = "0x87D684")]
		private set
		{
		}
	}

	[Token(Token = "0x17000230")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x87EB6C", Offset = "0x87EB6C")]
	public int m_auxBusID
	{
		[Token(Token = "0x6000DA3")]
		[Address(RVA = "0xDE820C", Offset = "0xDE820C", VA = "0xDE820C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000231")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x87EBA4", Offset = "0x87EBA4")]
	public byte[] valueGuid
	{
		[Token(Token = "0x6000DA4")]
		[Address(RVA = "0xDE821C", Offset = "0xDE821C", VA = "0xDE821C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000DA2")]
	[Address(RVA = "0xDE81B4", Offset = "0xDE81B4", VA = "0xDE81B4")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000DA5")]
	[Address(RVA = "0xDE82E0", Offset = "0xDE82E0", VA = "0xDE82E0")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x87D694", Offset = "0x87D694")]
	public uint GetAuxBusID()
	{
		return default(uint);
	}

	[Token(Token = "0x6000DA6")]
	[Address(RVA = "0xDE82F8", Offset = "0xDE82F8", VA = "0xDE82F8")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x87D6CC", Offset = "0x87D6CC")]
	public Collider GetCollider()
	{
		return null;
	}

	[Token(Token = "0x6000DA7")]
	[Address(RVA = "0xDE8300", Offset = "0xDE8300", VA = "0xDE8300")]
	public AkEnvironment()
	{
	}
}
[Token(Token = "0x2000263")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8708C0", Offset = "0x8708C0")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8708C0", Offset = "0x8708C0")]
[ExecuteInEditMode]
public class AkEnvironmentPortal : MonoBehaviour
{
	[Token(Token = "0x4000B14")]
	public const int MAX_ENVIRONMENTS_PER_PORTAL = 2;

	[Token(Token = "0x4000B15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 axis;

	[Token(Token = "0x4000B16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AkEnvironment[] environments;

	[Token(Token = "0x4000B17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private BoxCollider m_BoxCollider;

	[Token(Token = "0x17000232")]
	private BoxCollider BoxCollider
	{
		[Token(Token = "0x6000DAD")]
		[Address(RVA = "0xDE8508", Offset = "0xDE8508", VA = "0xDE8508")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000233")]
	public bool EnvironmentsShareAuxBus
	{
		[Token(Token = "0x6000DAE")]
		[Address(RVA = "0xDE859C", Offset = "0xDE859C", VA = "0xDE859C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000DAF")]
	[Address(RVA = "0xDE8738", Offset = "0xDE8738", VA = "0xDE8738")]
	public float GetAuxSendValueForPosition(Vector3 in_position, int index)
	{
		return default(float);
	}

	[Token(Token = "0x6000DB0")]
	[Address(RVA = "0xDE89C8", Offset = "0xDE89C8", VA = "0xDE89C8")]
	public AkEnvironmentPortal()
	{
	}
}
[Token(Token = "0x2000264")]
public class AkEventCallbackMsg
{
	[Token(Token = "0x4000B18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AkCallbackInfo info;

	[Token(Token = "0x4000B19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject sender;

	[Token(Token = "0x4000B1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AkCallbackType type;

	[Token(Token = "0x6000DB1")]
	[Address(RVA = "0xDE8A60", Offset = "0xDE8A60", VA = "0xDE8A60")]
	public AkEventCallbackMsg()
	{
	}
}
[Token(Token = "0x2000265")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x870958", Offset = "0x870958")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x870958", Offset = "0x870958")]
public class AkEvent : AkDragDropTriggerHandler
{
	[Serializable]
	[Token(Token = "0x2000266")]
	public class CallbackData
	{
		[Token(Token = "0x4000B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CallbackFlags Flags;

		[Token(Token = "0x4000B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string FunctionName;

		[Token(Token = "0x4000B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject GameObject;

		[Token(Token = "0x6000DBC")]
		[Address(RVA = "0xDE8B20", Offset = "0xDE8B20", VA = "0xDE8B20")]
		public void CallFunction(AkEventCallbackMsg eventCallbackMsg)
		{
		}

		[Token(Token = "0x6000DBD")]
		[Address(RVA = "0xDE8CF4", Offset = "0xDE8CF4", VA = "0xDE8CF4")]
		public CallbackData()
		{
		}
	}

	[Token(Token = "0x4000B1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public AkActionOnEventType actionOnEventType;

	[Token(Token = "0x4000B1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AkCurveInterpolation curveInterpolation;

	[Token(Token = "0x4000B1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool enableActionOnEvent;

	[Token(Token = "0x4000B1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AK.Wwise.Event data;

	[Token(Token = "0x4000B1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool useCallbacks;

	[Token(Token = "0x4000B20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<CallbackData> Callbacks;

	[Token(Token = "0x4000B21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public uint playingId;

	[Token(Token = "0x4000B22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject soundEmitterObject;

	[Token(Token = "0x4000B23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float transitionDuration;

	[Token(Token = "0x4000B24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private AkEventCallbackMsg EventCallbackMsg;

	[Token(Token = "0x4000B25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x87782C", Offset = "0x87782C")]
	[HideInInspector]
	[SerializeField]
	private int eventIdInternal;

	[Token(Token = "0x4000B26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x877888", Offset = "0x877888")]
	[HideInInspector]
	[SerializeField]
	private byte[] valueGuidInternal;

	[Token(Token = "0x4000B27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[HideInInspector]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8778E4", Offset = "0x8778E4")]
	[SerializeField]
	private AkEventCallbackData m_callbackDataInternal;

	[Token(Token = "0x17000234")]
	protected override BaseType WwiseType
	{
		[Token(Token = "0x6000DB2")]
		[Address(RVA = "0xDE8A58", Offset = "0xDE8A58", VA = "0xDE8A58", Slot = "9")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000235")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x87EBDC", Offset = "0x87EBDC")]
	public int eventID
	{
		[Token(Token = "0x6000DB8")]
		[Address(RVA = "0xDE8C18", Offset = "0xDE8C18", VA = "0xDE8C18")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000236")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x87EC14", Offset = "0x87EC14")]
	public byte[] valueGuid
	{
		[Token(Token = "0x6000DB9")]
		[Address(RVA = "0xDE8C28", Offset = "0xDE8C28", VA = "0xDE8C28")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000237")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x87EC4C", Offset = "0x87EC4C")]
	public AkEventCallbackData m_callbackData
	{
		[Token(Token = "0x6000DBA")]
		[Address(RVA = "0xDE8CEC", Offset = "0xDE8CEC", VA = "0xDE8CEC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000DB3")]
	[Address(RVA = "0xDDE844", Offset = "0xDDE844", VA = "0xDDE844", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000DB4")]
	[Address(RVA = "0xDE8A68", Offset = "0xDE8A68", VA = "0xDE8A68")]
	private void Callback(object in_cookie, AkCallbackType in_type, AkCallbackInfo in_info)
	{
	}

	[Token(Token = "0x6000DB5")]
	[Address(RVA = "0xDDEEA8", Offset = "0xDDEEA8", VA = "0xDDEEA8", Slot = "4")]
	public override void HandleEvent(GameObject in_gameObject)
	{
	}

	[Token(Token = "0x6000DB6")]
	[Address(RVA = "0xDE8BE4", Offset = "0xDE8BE4", VA = "0xDE8BE4")]
	public void Stop(int _transitionDuration)
	{
	}

	[Token(Token = "0x6000DB7")]
	[Address(RVA = "0xDE8BEC", Offset = "0xDE8BEC", VA = "0xDE8BEC")]
	public void Stop(int _transitionDuration, AkCurveInterpolation _curveInterpolation)
	{
	}

	[Token(Token = "0x6000DBB")]
	[Address(RVA = "0xDDF638", Offset = "0xDDF638", VA = "0xDDF638")]
	public AkEvent()
	{
	}
}
[Token(Token = "0x2000267")]
public class AkEventCallbackData : ScriptableObject
{
	[Token(Token = "0x4000B2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<int> callbackFlags;

	[Token(Token = "0x4000B2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<string> callbackFunc;

	[Token(Token = "0x4000B2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<GameObject> callbackGameObj;

	[Token(Token = "0x4000B2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int uFlags;

	[Token(Token = "0x6000DBE")]
	[Address(RVA = "0xDE8CFC", Offset = "0xDE8CFC", VA = "0xDE8CFC")]
	public AkEventCallbackData()
	{
	}
}
[Token(Token = "0x2000268")]
[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8709E0", Offset = "0x8709E0")]
public class AkEventPlayable : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x4000B2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AK.Wwise.Event akEvent;

	[Token(Token = "0x4000B30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AkCurveInterpolation blendInCurve;

	[Token(Token = "0x4000B31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private AkCurveInterpolation blendOutCurve;

	[Token(Token = "0x4000B32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private ExposedReference<GameObject> emitterObjectRef;

	[Token(Token = "0x4000B33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float eventDurationMax;

	[Token(Token = "0x4000B34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float eventDurationMin;

	[NonSerialized]
	[Token(Token = "0x4000B35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TimelineClip owningClip;

	[Token(Token = "0x4000B36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private bool retriggerEvent;

	[Token(Token = "0x4000B37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool UseWwiseEventDuration;

	[Token(Token = "0x4000B38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	[SerializeField]
	private bool StopEventAtClipEnd;

	[Token(Token = "0x17000238")]
	private ClipCaps UnityEngine.Timeline.ITimelineClipAsset.clipCaps
	{
		[Token(Token = "0x6000DBF")]
		[Address(RVA = "0xDE8DBC", Offset = "0xDE8DBC", VA = "0xDE8DBC", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x6000DC0")]
	[Address(RVA = "0xDE8DC4", Offset = "0xDE8DC4", VA = "0xDE8DC4", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000DC1")]
	[Address(RVA = "0xDE9038", Offset = "0xDE9038", VA = "0xDE9038")]
	public AkEventPlayable()
	{
	}
}
[Token(Token = "0x2000269")]
[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x870A18", Offset = "0x870A18")]
public class AkEventPlayableBehavior : PlayableBehaviour
{
	[Token(Token = "0x200026A")]
	[Flags]
	private enum Actions
	{
		[Token(Token = "0x4000B4F")]
		None = 0,
		[Token(Token = "0x4000B50")]
		Playback = 1,
		[Token(Token = "0x4000B51")]
		Retrigger = 2,
		[Token(Token = "0x4000B52")]
		DelayedStop = 4,
		[Token(Token = "0x4000B53")]
		Seek = 8,
		[Token(Token = "0x4000B54")]
		FadeIn = 0x10,
		[Token(Token = "0x4000B55")]
		FadeOut = 0x20
	}

	[Token(Token = "0x4000B39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private float currentDuration;

	[Token(Token = "0x4000B3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private float currentDurationProportion;

	[Token(Token = "0x4000B3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool eventIsPlaying;

	[Token(Token = "0x4000B3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool fadeinTriggered;

	[Token(Token = "0x4000B3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	private bool fadeoutTriggered;

	[Token(Token = "0x4000B3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float previousEventStartTime;

	[Token(Token = "0x4000B3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Actions requiredActions;

	[Token(Token = "0x4000B40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AK.Wwise.Event akEvent;

	[Token(Token = "0x4000B41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float eventDurationMax;

	[Token(Token = "0x4000B42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float eventDurationMin;

	[Token(Token = "0x4000B43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float blendInDuration;

	[Token(Token = "0x4000B44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float blendOutDuration;

	[Token(Token = "0x4000B45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float easeInDuration;

	[Token(Token = "0x4000B46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float easeOutDuration;

	[Token(Token = "0x4000B47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AkCurveInterpolation blendInCurve;

	[Token(Token = "0x4000B48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public AkCurveInterpolation blendOutCurve;

	[Token(Token = "0x4000B49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject eventObject;

	[Token(Token = "0x4000B4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool retriggerEvent;

	[Token(Token = "0x4000B4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool wasScrubbingAndRequiresRetrigger;

	[Token(Token = "0x4000B4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	public bool StopEventAtClipEnd;

	[Token(Token = "0x4000B4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
	public bool overrideTrackEmitterObject;

	[Token(Token = "0x6000DC2")]
	[Address(RVA = "0xDE90B8", Offset = "0xDE90B8", VA = "0xDE90B8")]
	private void CallbackHandler(object in_cookie, AkCallbackType in_type, AkCallbackInfo in_info)
	{
	}

	[Token(Token = "0x6000DC3")]
	[Address(RVA = "0xDE9184", Offset = "0xDE9184", VA = "0xDE9184")]
	private bool IsScrubbing(FrameData info)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DC4")]
	[Address(RVA = "0xDE91A8", Offset = "0xDE91A8", VA = "0xDE91A8", Slot = "19")]
	public override void PrepareFrame(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x6000DC5")]
	[Address(RVA = "0xDE9568", Offset = "0xDE9568", VA = "0xDE9568", Slot = "17")]
	public override void OnBehaviourPlay(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x6000DC6")]
	[Address(RVA = "0xDE9730", Offset = "0xDE9730", VA = "0xDE9730", Slot = "18")]
	public override void OnBehaviourPause(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x6000DC7")]
	[Address(RVA = "0xDE984C", Offset = "0xDE984C", VA = "0xDE984C", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x6000DC8")]
	[Address(RVA = "0xDE92E8", Offset = "0xDE92E8", VA = "0xDE92E8")]
	private bool ShouldPlay(Playable playable)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DC9")]
	[Address(RVA = "0xDE9424", Offset = "0xDE9424", VA = "0xDE9424")]
	private void CheckForFadeInFadeOut(Playable playable)
	{
	}

	[Token(Token = "0x6000DCA")]
	[Address(RVA = "0xDE94C4", Offset = "0xDE94C4", VA = "0xDE94C4")]
	private void CheckForFadeOut(Playable playable, double currentClipTime)
	{
	}

	[Token(Token = "0x6000DCB")]
	[Address(RVA = "0xDE9BD4", Offset = "0xDE9BD4", VA = "0xDE9BD4")]
	private void TriggerFadeIn(Playable playable)
	{
	}

	[Token(Token = "0x6000DCC")]
	[Address(RVA = "0xDE9CFC", Offset = "0xDE9CFC", VA = "0xDE9CFC")]
	private void TriggerFadeOut(Playable playable)
	{
	}

	[Token(Token = "0x6000DCD")]
	[Address(RVA = "0xDE9814", Offset = "0xDE9814", VA = "0xDE9814")]
	private void StopEvent(int transition = 0)
	{
	}

	[Token(Token = "0x6000DCE")]
	[Address(RVA = "0xDE9DBC", Offset = "0xDE9DBC", VA = "0xDE9DBC")]
	private bool PostEvent()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DCF")]
	[Address(RVA = "0xDE9A34", Offset = "0xDE9A34", VA = "0xDE9A34")]
	private void PlayEvent()
	{
	}

	[Token(Token = "0x6000DD0")]
	[Address(RVA = "0xDE9B38", Offset = "0xDE9B38", VA = "0xDE9B38")]
	private void RetriggerEvent(Playable playable)
	{
	}

	[Token(Token = "0x6000DD1")]
	[Address(RVA = "0xDE9654", Offset = "0xDE9654", VA = "0xDE9654")]
	private float GetProportionalTime(Playable playable)
	{
		return default(float);
	}

	[Token(Token = "0x6000DD2")]
	[Address(RVA = "0xDE9A64", Offset = "0xDE9A64", VA = "0xDE9A64")]
	private float SeekToTime(Playable playable)
	{
		return default(float);
	}

	[Token(Token = "0x6000DD3")]
	[Address(RVA = "0xDE9E64", Offset = "0xDE9E64", VA = "0xDE9E64")]
	public AkEventPlayableBehavior()
	{
	}
}
[Token(Token = "0x200026B")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0x870A60", Offset = "0x870A60")]
[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x870A60", Offset = "0x870A60")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x870A60", Offset = "0x870A60")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x870A60", Offset = "0x870A60")]
public class AkEventTrack : TrackAsset
{
	[Token(Token = "0x6000DD4")]
	[Address(RVA = "0xDE9E78", Offset = "0xDE9E78", VA = "0xDE9E78", Slot = "23")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000DD5")]
	[Address(RVA = "0xDEA1DC", Offset = "0xDEA1DC", VA = "0xDEA1DC")]
	public AkEventTrack()
	{
	}
}
[Token(Token = "0x200026C")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x870B38", Offset = "0x870B38")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x870B38", Offset = "0x870B38")]
[DisallowMultipleComponent]
public class AkGameObj : MonoBehaviour
{
	[Token(Token = "0x4000B56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AkGameObjListenerList m_listeners;

	[Token(Token = "0x4000B57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isEnvironmentAware;

	[Token(Token = "0x4000B58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	[SerializeField]
	private bool isStaticObject;

	[Token(Token = "0x4000B59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Collider m_Collider;

	[Token(Token = "0x4000B5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AkGameObjEnvironmentData m_envData;

	[Token(Token = "0x4000B5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AkGameObjPositionData m_posData;

	[Token(Token = "0x4000B5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AkGameObjPositionOffsetData m_positionOffsetData;

	[Token(Token = "0x4000B5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool isRegistered;

	[Token(Token = "0x4000B5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	[SerializeField]
	private AkGameObjPosOffsetData m_posOffsetData;

	[Token(Token = "0x4000B5F")]
	private const int AK_NUM_LISTENERS = 8;

	[Token(Token = "0x4000B60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	[SerializeField]
	private int listenerMask;

	[Token(Token = "0x17000239")]
	public bool IsUsingDefaultListeners
	{
		[Token(Token = "0x6000DD6")]
		[Address(RVA = "0xDE7E68", Offset = "0xDE7E68", VA = "0xDE7E68")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700023A")]
	public List<AkAudioListener> ListenerList
	{
		[Token(Token = "0x6000DD7")]
		[Address(RVA = "0xDE7E84", Offset = "0xDE7E84", VA = "0xDE7E84")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000DD8")]
	[Address(RVA = "0xDE0210", Offset = "0xDE0210", VA = "0xDE0210")]
	internal void AddListener(AkAudioListener listener)
	{
	}

	[Token(Token = "0x6000DD9")]
	[Address(RVA = "0xDE0230", Offset = "0xDE0230", VA = "0xDE0230")]
	internal void RemoveListener(AkAudioListener listener)
	{
	}

	[Token(Token = "0x6000DDA")]
	[Address(RVA = "0xDDFE74", Offset = "0xDDFE74", VA = "0xDDFE74")]
	public AKRESULT Register()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000DDB")]
	[Address(RVA = "0xDEA244", Offset = "0xDEA244", VA = "0xDEA244")]
	private void SetPosition()
	{
	}

	[Token(Token = "0x6000DDC")]
	[Address(RVA = "0xDEA4A8", Offset = "0xDEA4A8", VA = "0xDEA4A8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000DDD")]
	[Address(RVA = "0xDEAA7C", Offset = "0xDEAA7C", VA = "0xDEAA7C")]
	private void CheckStaticStatus()
	{
	}

	[Token(Token = "0x6000DDE")]
	[Address(RVA = "0xDEAA80", Offset = "0xDEAA80", VA = "0xDEAA80")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000DDF")]
	[Address(RVA = "0xDEAA94", Offset = "0xDEAA94", VA = "0xDEAA94")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000DE0")]
	[Address(RVA = "0xDEABF4", Offset = "0xDEABF4", VA = "0xDEABF4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DE1")]
	[Address(RVA = "0xDEAC74", Offset = "0xDEAC74", VA = "0xDEAC74", Slot = "4")]
	public virtual Vector3 GetPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000DE2")]
	[Address(RVA = "0xDEADE4", Offset = "0xDEADE4", VA = "0xDEADE4", Slot = "5")]
	public virtual Vector3 GetForward()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000DE3")]
	[Address(RVA = "0xDEAE08", Offset = "0xDEAE08", VA = "0xDEAE08", Slot = "6")]
	public virtual Vector3 GetUpward()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000DE4")]
	[Address(RVA = "0xDEAE2C", Offset = "0xDEAE2C", VA = "0xDEAE2C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000DE5")]
	[Address(RVA = "0xDEAE44", Offset = "0xDEAE44", VA = "0xDEAE44")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000DE6")]
	[Address(RVA = "0xDEB084", Offset = "0xDEB084", VA = "0xDEB084")]
	public AkGameObj()
	{
	}
}
[Token(Token = "0x200026D")]
public class AkGameObjEnvironmentData
{
	[Token(Token = "0x4000B61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private readonly List<AkEnvironment> activeEnvironments;

	[Token(Token = "0x4000B62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly List<AkEnvironment> activeEnvironmentsFromPortals;

	[Token(Token = "0x4000B63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private readonly List<AkEnvironmentPortal> activePortals;

	[Token(Token = "0x4000B64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly AkAuxSendArray auxSendValues;

	[Token(Token = "0x4000B65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 lastPosition;

	[Token(Token = "0x4000B66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool hasEnvironmentListChanged;

	[Token(Token = "0x4000B67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	private bool hasActivePortalListChanged;

	[Token(Token = "0x4000B68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
	private bool hasSentZero;

	[Token(Token = "0x6000DE7")]
	[Address(RVA = "0xDEB168", Offset = "0xDEB168", VA = "0xDEB168")]
	private void AddHighestPriorityEnvironmentsFromPortals(Vector3 position)
	{
	}

	[Token(Token = "0x6000DE8")]
	[Address(RVA = "0xDEB43C", Offset = "0xDEB43C", VA = "0xDEB43C")]
	private void AddHighestPriorityEnvironments(Vector3 position)
	{
	}

	[Token(Token = "0x6000DE9")]
	[Address(RVA = "0xDEA858", Offset = "0xDEA858", VA = "0xDEA858")]
	public void UpdateAuxSend(GameObject gameObject, Vector3 position)
	{
	}

	[Token(Token = "0x6000DEA")]
	[Address(RVA = "0xDEB564", Offset = "0xDEB564", VA = "0xDEB564")]
	private void TryAddEnvironment(AkEnvironment env)
	{
	}

	[Token(Token = "0x6000DEB")]
	[Address(RVA = "0xDEB6C8", Offset = "0xDEB6C8", VA = "0xDEB6C8")]
	private void RemoveEnvironment(AkEnvironment env)
	{
	}

	[Token(Token = "0x6000DEC")]
	[Address(RVA = "0xDEA720", Offset = "0xDEA720", VA = "0xDEA720")]
	public void AddAkEnvironment(Collider environmentCollider, Collider gameObjectCollider)
	{
	}

	[Token(Token = "0x6000DED")]
	[Address(RVA = "0xDEB750", Offset = "0xDEB750", VA = "0xDEB750")]
	private bool AkEnvironmentBelongsToActivePortals(AkEnvironment env)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DEE")]
	[Address(RVA = "0xDEAE64", Offset = "0xDEAE64", VA = "0xDEAE64")]
	public void RemoveAkEnvironment(Collider environmentCollider, Collider gameObjectCollider)
	{
	}

	[Token(Token = "0x6000DEF")]
	[Address(RVA = "0xDEA614", Offset = "0xDEA614", VA = "0xDEA614")]
	public AkGameObjEnvironmentData()
	{
	}
}
[Serializable]
[Token(Token = "0x200026E")]
public class AkGameObjListenerList : AkAudioListener.BaseListenerList
{
	[NonSerialized]
	[Token(Token = "0x4000B69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AkGameObj akGameObj;

	[Token(Token = "0x4000B6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	public List<AkAudioListener> initialListenerList;

	[Token(Token = "0x4000B6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	public bool useDefaultListeners;

	[Token(Token = "0x6000DF0")]
	[Address(RVA = "0xDEA988", Offset = "0xDEA988", VA = "0xDEA988")]
	public void Init(AkGameObj akGameObj)
	{
	}

	[Token(Token = "0x6000DF1")]
	[Address(RVA = "0xDEB880", Offset = "0xDEB880", VA = "0xDEB880", Slot = "4")]
	public override bool Add(AkAudioListener listener)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DF2")]
	[Address(RVA = "0xDEB96C", Offset = "0xDEB96C", VA = "0xDEB96C", Slot = "5")]
	public override bool Remove(AkAudioListener listener)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DF3")]
	[Address(RVA = "0xDEB0F4", Offset = "0xDEB0F4", VA = "0xDEB0F4")]
	public AkGameObjListenerList()
	{
	}
}
[Token(Token = "0x200026F")]
public class AkGameObjPosOffsetData : ScriptableObject
{
	[Token(Token = "0x4000B6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 positionOffset;

	[Token(Token = "0x6000DF4")]
	[Address(RVA = "0xDEBA58", Offset = "0xDEBA58", VA = "0xDEBA58")]
	public AkGameObjPosOffsetData()
	{
	}
}
[Token(Token = "0x2000270")]
public class AkGameObjPositionData
{
	[Token(Token = "0x4000B6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3 forward;

	[Token(Token = "0x4000B6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 position;

	[Token(Token = "0x4000B6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 up;

	[Token(Token = "0x6000DF5")]
	[Address(RVA = "0xDEA60C", Offset = "0xDEA60C", VA = "0xDEA60C")]
	public AkGameObjPositionData()
	{
	}
}
[Serializable]
[Token(Token = "0x2000271")]
public class AkGameObjPositionOffsetData
{
	[Token(Token = "0x4000B70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool KeepMe;

	[Token(Token = "0x4000B71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector3 positionOffset;
}
[Token(Token = "0x2000272")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x870BA8", Offset = "0x870BA8")]
[DisallowMultipleComponent]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x870BA8", Offset = "0x870BA8")]
public class AkInitializer : MonoBehaviour
{
	[Token(Token = "0x4000B72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AkInitializer ms_Instance;

	[Token(Token = "0x4000B73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AkWwiseInitializationSettings InitializationSettings;

	[Token(Token = "0x6000DF6")]
	[Address(RVA = "0xDEBEE0", Offset = "0xDEBEE0", VA = "0xDEBEE0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000DF7")]
	[Address(RVA = "0xDEBFC8", Offset = "0xDEBFC8", VA = "0xDEBFC8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000DF8")]
	[Address(RVA = "0xDEC0A0", Offset = "0xDEC0A0", VA = "0xDEC0A0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000DF9")]
	[Address(RVA = "0xDEC148", Offset = "0xDEC148", VA = "0xDEC148")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000DFA")]
	[Address(RVA = "0xDEC1E4", Offset = "0xDEC1E4", VA = "0xDEC1E4")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x6000DFB")]
	[Address(RVA = "0xDEC2A0", Offset = "0xDEC2A0", VA = "0xDEC2A0")]
	private void OnApplicationFocus(bool focus)
	{
	}

	[Token(Token = "0x6000DFC")]
	[Address(RVA = "0xDEC35C", Offset = "0xDEC35C", VA = "0xDEC35C")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000DFD")]
	[Address(RVA = "0xDEC404", Offset = "0xDEC404", VA = "0xDEC404")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000DFE")]
	[Address(RVA = "0xDEC4AC", Offset = "0xDEC4AC", VA = "0xDEC4AC")]
	public AkInitializer()
	{
	}
}
[Token(Token = "0x2000273")]
public class AkMemBankLoader : MonoBehaviour
{
	[Token(Token = "0x2000274")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x870C18", Offset = "0x870C18")]
	private sealed class <LoadFile>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AkMemBankLoader <>4__this;

		[Token(Token = "0x1700023B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E0A")]
			[Address(RVA = "0xDED7F4", Offset = "0xDED7F4", VA = "0xDED7F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E0C")]
			[Address(RVA = "0xDED85C", Offset = "0xDED85C", VA = "0xDED85C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E07")]
		[Address(RVA = "0xDED530", Offset = "0xDED530", VA = "0xDED530")]
		[DebuggerHidden]
		public <LoadFile>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6000E08")]
		[Address(RVA = "0xDED66C", Offset = "0xDED66C", VA = "0xDED66C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E09")]
		[Address(RVA = "0xDED670", Offset = "0xDED670", VA = "0xDED670", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E0B")]
		[Address(RVA = "0xDED7FC", Offset = "0xDED7FC", VA = "0xDED7FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B74")]
	private const int WaitMs = 50;

	[Token(Token = "0x4000B75")]
	private const long AK_BANK_PLATFORM_DATA_ALIGNMENT = 16L;

	[Token(Token = "0x4000B76")]
	private const long AK_BANK_PLATFORM_DATA_ALIGNMENT_MASK = 15L;

	[Token(Token = "0x4000B77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string bankName;

	[Token(Token = "0x4000B78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isLocalizedBank;

	[Token(Token = "0x4000B79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string m_bankPath;

	[Token(Token = "0x4000B7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public uint ms_bankID;

	[Token(Token = "0x4000B7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private IntPtr ms_pInMemoryBankPtr;

	[Token(Token = "0x4000B7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GCHandle ms_pinnedArray;

	[Token(Token = "0x4000B7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private UnityWebRequest ms_www;

	[Token(Token = "0x6000DFF")]
	[Address(RVA = "0xDECFDC", Offset = "0xDECFDC", VA = "0xDECFDC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E00")]
	[Address(RVA = "0xDED148", Offset = "0xDED148", VA = "0xDED148")]
	public void LoadNonLocalizedBank(string in_bankFilename)
	{
	}

	[Token(Token = "0x6000E01")]
	[Address(RVA = "0xDECFF0", Offset = "0xDECFF0", VA = "0xDECFF0")]
	public void LoadLocalizedBank(string in_bankFilename)
	{
	}

	[Token(Token = "0x6000E02")]
	[Address(RVA = "0xDED294", Offset = "0xDED294", VA = "0xDED294")]
	private uint AllocateAlignedBuffer(byte[] data)
	{
		return default(uint);
	}

	[Token(Token = "0x6000E03")]
	[Address(RVA = "0xDED4C0", Offset = "0xDED4C0", VA = "0xDED4C0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x87D704", Offset = "0x87D704")]
	private IEnumerator LoadFile()
	{
		return null;
	}

	[Token(Token = "0x6000E04")]
	[Address(RVA = "0xDED264", Offset = "0xDED264", VA = "0xDED264")]
	private void DoLoadBank(string in_bankPath)
	{
	}

	[Token(Token = "0x6000E05")]
	[Address(RVA = "0xDED55C", Offset = "0xDED55C", VA = "0xDED55C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000E06")]
	[Address(RVA = "0xDED610", Offset = "0xDED610", VA = "0xDED610")]
	public AkMemBankLoader()
	{
	}
}
[Token(Token = "0x2000275")]
public abstract class AkObstructionOcclusion : MonoBehaviour
{
	[Token(Token = "0x2000276")]
	protected class ObstructionOcclusionValue
	{
		[Token(Token = "0x4000B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float currentValue;

		[Token(Token = "0x4000B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float targetValue;

		[Token(Token = "0x6000E14")]
		[Address(RVA = "0xDEE674", Offset = "0xDEE674", VA = "0xDEE674")]
		public bool Update(float fadeRate)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E15")]
		[Address(RVA = "0xDEE1D0", Offset = "0xDEE1D0", VA = "0xDEE1D0")]
		public ObstructionOcclusionValue()
		{
		}
	}

	[Token(Token = "0x4000B81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly List<AkAudioListener> listenersToRemove;

	[Token(Token = "0x4000B82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected readonly List<AkAudioListener> currentListenerList;

	[Token(Token = "0x4000B83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Dictionary<AkAudioListener, ObstructionOcclusionValue> ObstructionOcclusionValues;

	[Token(Token = "0x4000B84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected float fadeRate;

	[Token(Token = "0x4000B85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x877A50", Offset = "0x877A50")]
	public float fadeTime;

	[Token(Token = "0x4000B86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x877A88", Offset = "0x877A88")]
	public LayerMask LayerMask;

	[Token(Token = "0x4000B87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x877AC0", Offset = "0x877AC0")]
	public float maxDistance;

	[Token(Token = "0x4000B88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x877AF8", Offset = "0x877AF8")]
	public float refreshInterval;

	[Token(Token = "0x4000B89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float refreshTime;

	[Token(Token = "0x6000E0D")]
	[Address(RVA = "0xDE7BEC", Offset = "0xDE7BEC", VA = "0xDE7BEC")]
	protected void InitIntervalsAndFadeRates()
	{
	}

	[Token(Token = "0x6000E0E")]
	protected abstract void UpdateCurrentListenerList();

	[Token(Token = "0x6000E0F")]
	[Address(RVA = "0xDEDF2C", Offset = "0xDEDF2C", VA = "0xDEDF2C")]
	private void UpdateObstructionOcclusionValues()
	{
	}

	[Token(Token = "0x6000E10")]
	[Address(RVA = "0xDEE1D8", Offset = "0xDEE1D8", VA = "0xDEE1D8")]
	private void CastRays()
	{
	}

	[Token(Token = "0x6000E11")]
	protected abstract void SetObstructionOcclusion(KeyValuePair<AkAudioListener, ObstructionOcclusionValue> ObsOccPair);

	[Token(Token = "0x6000E12")]
	[Address(RVA = "0xDEE50C", Offset = "0xDEE50C", VA = "0xDEE50C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E13")]
	[Address(RVA = "0xDE809C", Offset = "0xDE809C", VA = "0xDE809C")]
	protected AkObstructionOcclusion()
	{
	}
}
[Serializable]
[Token(Token = "0x2000277")]
[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x870C28", Offset = "0x870C28")]
public class AkRTPCPlayable : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x4000B8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool overrideTrackObject;

	[Token(Token = "0x4000B8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ExposedReference<GameObject> RTPCObject;

	[Token(Token = "0x4000B8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool setRTPCGlobally;

	[Token(Token = "0x4000B8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AkRTPCPlayableBehaviour template;

	[Token(Token = "0x4000B90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x877B30", Offset = "0x877B30")]
	private RTPC <Parameter>k__BackingField;

	[Token(Token = "0x4000B91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x877B40", Offset = "0x877B40")]
	private TimelineClip <OwningClip>k__BackingField;

	[Token(Token = "0x1700023D")]
	public RTPC Parameter
	{
		[Token(Token = "0x6000E16")]
		[Address(RVA = "0xDEF030", Offset = "0xDEF030", VA = "0xDEF030")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87D7B8", Offset = "0x87D7B8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000E17")]
		[Address(RVA = "0xDEF038", Offset = "0xDEF038", VA = "0xDEF038")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87D7C8", Offset = "0x87D7C8")]
		set
		{
		}
	}

	[Token(Token = "0x1700023E")]
	public TimelineClip OwningClip
	{
		[Token(Token = "0x6000E18")]
		[Address(RVA = "0xDEF040", Offset = "0xDEF040", VA = "0xDEF040")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87D7D8", Offset = "0x87D7D8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000E19")]
		[Address(RVA = "0xDEF048", Offset = "0xDEF048", VA = "0xDEF048")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87D7E8", Offset = "0x87D7E8")]
		set
		{
		}
	}

	[Token(Token = "0x1700023F")]
	private ClipCaps UnityEngine.Timeline.ITimelineClipAsset.clipCaps
	{
		[Token(Token = "0x6000E1A")]
		[Address(RVA = "0xDEF050", Offset = "0xDEF050", VA = "0xDEF050", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x6000E1B")]
	[Address(RVA = "0xDEF058", Offset = "0xDEF058", VA = "0xDEF058", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject go)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000E1C")]
	[Address(RVA = "0xDEF1B4", Offset = "0xDEF1B4", VA = "0xDEF1B4")]
	public AkRTPCPlayable()
	{
	}
}
[Serializable]
[Token(Token = "0x2000278")]
[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x870C60", Offset = "0x870C60")]
public class AkRTPCPlayableBehaviour : PlayableBehaviour
{
	[Token(Token = "0x4000B92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private float RTPCValue;

	[Token(Token = "0x4000B93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x877B60", Offset = "0x877B60")]
	private bool <setRTPCGlobally>k__BackingField;

	[Token(Token = "0x4000B94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x877B70", Offset = "0x877B70")]
	private bool <overrideTrackObject>k__BackingField;

	[Token(Token = "0x4000B95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x877B80", Offset = "0x877B80")]
	private GameObject <rtpcObject>k__BackingField;

	[Token(Token = "0x4000B96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x877B90", Offset = "0x877B90")]
	private RTPC <parameter>k__BackingField;

	[Token(Token = "0x17000240")]
	public bool setRTPCGlobally
	{
		[Token(Token = "0x6000E1E")]
		[Address(RVA = "0xDEF230", Offset = "0xDEF230", VA = "0xDEF230")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87D808", Offset = "0x87D808")]
		private get
		{
			return default(bool);
		}
		[Token(Token = "0x6000E1D")]
		[Address(RVA = "0xDEF224", Offset = "0xDEF224", VA = "0xDEF224")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87D7F8", Offset = "0x87D7F8")]
		set
		{
		}
	}

	[Token(Token = "0x17000241")]
	public bool overrideTrackObject
	{
		[Token(Token = "0x6000E20")]
		[Address(RVA = "0xDEF244", Offset = "0xDEF244", VA = "0xDEF244")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87D828", Offset = "0x87D828")]
		private get
		{
			return default(bool);
		}
		[Token(Token = "0x6000E1F")]
		[Address(RVA = "0xDEF238", Offset = "0xDEF238", VA = "0xDEF238")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87D818", Offset = "0x87D818")]
		set
		{
		}
	}

	[Token(Token = "0x17000242")]
	public GameObject rtpcObject
	{
		[Token(Token = "0x6000E22")]
		[Address(RVA = "0xDEF254", Offset = "0xDEF254", VA = "0xDEF254")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87D848", Offset = "0x87D848")]
		private get
		{
			return null;
		}
		[Token(Token = "0x6000E21")]
		[Address(RVA = "0xDEF24C", Offset = "0xDEF24C", VA = "0xDEF24C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87D838", Offset = "0x87D838")]
		set
		{
		}
	}

	[Token(Token = "0x17000243")]
	public RTPC parameter
	{
		[Token(Token = "0x6000E24")]
		[Address(RVA = "0xDEF264", Offset = "0xDEF264", VA = "0xDEF264")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87D868", Offset = "0x87D868")]
		private get
		{
			return null;
		}
		[Token(Token = "0x6000E23")]
		[Address(RVA = "0xDEF25C", Offset = "0xDEF25C", VA = "0xDEF25C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87D858", Offset = "0x87D858")]
		set
		{
		}
	}

	[Token(Token = "0x6000E25")]
	[Address(RVA = "0xDEF26C", Offset = "0xDEF26C", VA = "0xDEF26C", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x6000E26")]
	[Address(RVA = "0xDEF21C", Offset = "0xDEF21C", VA = "0xDEF21C")]
	public AkRTPCPlayableBehaviour()
	{
	}
}
[Token(Token = "0x2000279")]
[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x870C98", Offset = "0x870C98")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0x870C98", Offset = "0x870C98")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x870C98", Offset = "0x870C98")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x870C98", Offset = "0x870C98")]
public class AkRTPCTrack : TrackAsset
{
	[Token(Token = "0x4000B97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public RTPC Parameter;

	[Token(Token = "0x6000E27")]
	[Address(RVA = "0xDEF3D8", Offset = "0xDEF3D8", VA = "0xDEF3D8", Slot = "23")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000E28")]
	[Address(RVA = "0xDEF494", Offset = "0xDEF494", VA = "0xDEF494")]
	public void setPlayableProperties()
	{
	}

	[Token(Token = "0x6000E29")]
	[Address(RVA = "0xDEF754", Offset = "0xDEF754", VA = "0xDEF754")]
	public void OnValidate()
	{
	}

	[Token(Token = "0x6000E2A")]
	[Address(RVA = "0xDEFA0C", Offset = "0xDEFA0C", VA = "0xDEFA0C")]
	public AkRTPCTrack()
	{
	}
}
[Token(Token = "0x200027A")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x870D6C", Offset = "0x870D6C")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x870D6C", Offset = "0x870D6C")]
[DisallowMultipleComponent]
public class AkRoom : AkTriggerHandler
{
	[Token(Token = "0x200027B")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x870E04", Offset = "0x870E04")]
	public class PriorityList
	{
		[Token(Token = "0x200027C")]
		private class CompareByPriority : IComparer<AkRoom>
		{
			[Token(Token = "0x6000E43")]
			[Address(RVA = "0xDF125C", Offset = "0xDF125C", VA = "0xDF125C", Slot = "5")]
			public virtual int Compare(AkRoom a, AkRoom b)
			{
				return default(int);
			}

			[Token(Token = "0x6000E44")]
			[Address(RVA = "0xDF1254", Offset = "0xDF1254", VA = "0xDF1254")]
			public CompareByPriority()
			{
			}
		}

		[Token(Token = "0x4000BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly CompareByPriority s_compareByPriority;

		[Token(Token = "0x4000BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<AkRoom> rooms;

		[Token(Token = "0x17000245")]
		public int Count
		{
			[Token(Token = "0x6000E3A")]
			[Address(RVA = "0xDF0DD8", Offset = "0xDF0DD8", VA = "0xDF0DD8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000246")]
		public AkRoom Item
		{
			[Token(Token = "0x6000E40")]
			[Address(RVA = "0xDF1100", Offset = "0xDF1100", VA = "0xDF1100")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E39")]
		[Address(RVA = "0xDF0D0C", Offset = "0xDF0D0C", VA = "0xDF0D0C")]
		public AkRoom GetHighestPriorityActiveAndEnabledRoom()
		{
			return null;
		}

		[Token(Token = "0x6000E3B")]
		[Address(RVA = "0xDF0E28", Offset = "0xDF0E28", VA = "0xDF0E28")]
		public void Clear()
		{
		}

		[Token(Token = "0x6000E3C")]
		[Address(RVA = "0xDF0E80", Offset = "0xDF0E80", VA = "0xDF0E80")]
		public void Add(AkRoom room)
		{
		}

		[Token(Token = "0x6000E3D")]
		[Address(RVA = "0xDF0FEC", Offset = "0xDF0FEC", VA = "0xDF0FEC")]
		public void Remove(AkRoom room)
		{
		}

		[Token(Token = "0x6000E3E")]
		[Address(RVA = "0xDF1054", Offset = "0xDF1054", VA = "0xDF1054")]
		public bool Contains(AkRoom room)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E3F")]
		[Address(RVA = "0xDF0F10", Offset = "0xDF0F10", VA = "0xDF0F10")]
		public int BinarySearch(AkRoom room)
		{
			return default(int);
		}

		[Token(Token = "0x6000E41")]
		[Address(RVA = "0xDF1178", Offset = "0xDF1178", VA = "0xDF1178")]
		public PriorityList()
		{
		}
	}

	[Token(Token = "0x4000B98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ulong INVALID_ROOM_ID;

	[Token(Token = "0x4000B99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x877BA0", Offset = "0x877BA0")]
	private static int <RoomCount>k__BackingField;

	[Token(Token = "0x4000B9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x877BB0", Offset = "0x877BB0")]
	public int priority;

	[Token(Token = "0x4000B9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AuxBus reverbAuxBus;

	[Token(Token = "0x4000B9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x877BE8", Offset = "0x877BE8")]
	public float reverbLevel;

	[Token(Token = "0x4000B9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x877C00", Offset = "0x877C00")]
	public float wallOcclusion;

	[Token(Token = "0x4000B9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AK.Wwise.Event roomToneEvent;

	[Token(Token = "0x4000B9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x877C18", Offset = "0x877C18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x877C18", Offset = "0x877C18")]
	public float roomToneAuxSend;

	[Token(Token = "0x4000BA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<AkRoomAwareObject> roomAwareObjectsEntered;

	[Token(Token = "0x4000BA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<AkRoomAwareObject> roomAwareObjectsDetectedWhileDisabled;

	[Token(Token = "0x17000244")]
	public static int RoomCount
	{
		[Token(Token = "0x6000E2C")]
		[Address(RVA = "0xDEFBA8", Offset = "0xDEFBA8", VA = "0xDEFBA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87D878", Offset = "0x87D878")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000E2D")]
		[Address(RVA = "0xDEFC10", Offset = "0xDEFC10", VA = "0xDEFC10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87D888", Offset = "0x87D888")]
		private set
		{
		}
	}

	[Token(Token = "0x6000E2B")]
	[Address(RVA = "0xDEFA74", Offset = "0xDEFA74", VA = "0xDEFA74")]
	public static ulong GetAkRoomID(AkRoom room)
	{
		return default(ulong);
	}

	[Token(Token = "0x6000E2E")]
	[Address(RVA = "0xDEFC7C", Offset = "0xDEFC7C", VA = "0xDEFC7C")]
	public bool TryEnter(AkRoomAwareObject roomAwareObject)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E2F")]
	[Address(RVA = "0xDEFD90", Offset = "0xDEFD90", VA = "0xDEFD90")]
	public void Exit(AkRoomAwareObject roomAwareObject)
	{
	}

	[Token(Token = "0x6000E30")]
	[Address(RVA = "0xDEFB2C", Offset = "0xDEFB2C", VA = "0xDEFB2C")]
	public ulong GetID()
	{
		return default(ulong);
	}

	[Token(Token = "0x6000E31")]
	[Address(RVA = "0xDEFE4C", Offset = "0xDEFE4C", VA = "0xDEFE4C", Slot = "8")]
	public override void OnEnable()
	{
	}

	[Token(Token = "0x6000E32")]
	[Address(RVA = "0xDF0564", Offset = "0xDF0564", VA = "0xDF0564")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000E33")]
	[Address(RVA = "0xDF0858", Offset = "0xDF0858", VA = "0xDF0858")]
	private void OnTriggerEnter(Collider in_other)
	{
	}

	[Token(Token = "0x6000E34")]
	[Address(RVA = "0xDF09B0", Offset = "0xDF09B0", VA = "0xDF09B0")]
	private void OnTriggerExit(Collider in_other)
	{
	}

	[Token(Token = "0x6000E35")]
	[Address(RVA = "0xDF0B08", Offset = "0xDF0B08", VA = "0xDF0B08")]
	public void PostRoomTone()
	{
	}

	[Token(Token = "0x6000E36")]
	[Address(RVA = "0xDF0BBC", Offset = "0xDF0BBC", VA = "0xDF0BBC", Slot = "4")]
	public override void HandleEvent(GameObject in_gameObject)
	{
	}

	[Token(Token = "0x6000E37")]
	[Address(RVA = "0xDF0BC0", Offset = "0xDF0BC0", VA = "0xDF0BC0")]
	public AkRoom()
	{
	}
}
[Token(Token = "0x200027D")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x870E3C", Offset = "0x870E3C")]
[DisallowMultipleComponent]
public class AkRoomAwareObject : MonoBehaviour
{
	[Token(Token = "0x4000BA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Dictionary<Collider, AkRoomAwareObject> ColliderToRoomAwareObjectMap;

	[Token(Token = "0x4000BA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Collider m_Collider;

	[Token(Token = "0x4000BA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private readonly AkRoom.PriorityList roomPriorityList;

	[Token(Token = "0x6000E45")]
	[Address(RVA = "0xDF1440", Offset = "0xDF1440", VA = "0xDF1440")]
	public static AkRoomAwareObject GetAkRoomAwareObjectFromCollider(Collider collider)
	{
		return null;
	}

	[Token(Token = "0x6000E46")]
	[Address(RVA = "0xDF1888", Offset = "0xDF1888", VA = "0xDF1888")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E47")]
	[Address(RVA = "0xDF196C", Offset = "0xDF196C", VA = "0xDF196C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E48")]
	[Address(RVA = "0xDF1A18", Offset = "0xDF1A18", VA = "0xDF1A18")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000E49")]
	[Address(RVA = "0xDF1BD0", Offset = "0xDF1BD0", VA = "0xDF1BD0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000E4A")]
	[Address(RVA = "0xDF17B8", Offset = "0xDF17B8", VA = "0xDF17B8")]
	public void SetGameObjectInHighestPriorityActiveAndEnabledRoom()
	{
	}

	[Token(Token = "0x6000E4B")]
	[Address(RVA = "0xDF1ACC", Offset = "0xDF1ACC", VA = "0xDF1ACC")]
	private void SetGameObjectInRoom(AkRoom room)
	{
	}

	[Token(Token = "0x6000E4C")]
	[Address(RVA = "0xDF14E4", Offset = "0xDF14E4", VA = "0xDF14E4")]
	public void EnteredRoom(AkRoom room)
	{
	}

	[Token(Token = "0x6000E4D")]
	[Address(RVA = "0xDF07BC", Offset = "0xDF07BC", VA = "0xDF07BC")]
	public void ExitedRoom(AkRoom room)
	{
	}

	[Token(Token = "0x6000E4E")]
	[Address(RVA = "0xDF1C54", Offset = "0xDF1C54", VA = "0xDF1C54")]
	public AkRoomAwareObject()
	{
	}
}
[Token(Token = "0x200027E")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x870EB0", Offset = "0x870EB0")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x870EB0", Offset = "0x870EB0")]
[DisallowMultipleComponent]
public class AkRoomPortal : AkTriggerHandler
{
	[Token(Token = "0x200027F")]
	public enum State
	{
		[Token(Token = "0x4000BB1")]
		Closed,
		[Token(Token = "0x4000BB2")]
		Open
	}

	[Token(Token = "0x4000BA7")]
	public const int MAX_ROOMS_PER_PORTAL = 2;

	[Token(Token = "0x4000BA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public State initialState;

	[Token(Token = "0x4000BA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool active;

	[Token(Token = "0x4000BAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<int> closePortalTriggerList;

	[Token(Token = "0x4000BAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private AkRoom[] rooms;

	[Token(Token = "0x4000BAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AkRoom.PriorityList[] roomList;

	[Token(Token = "0x4000BAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private AkTransform portalTransform;

	[Token(Token = "0x4000BAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private BoxCollider portalCollider;

	[Token(Token = "0x4000BAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool portalSet;

	[Token(Token = "0x17000247")]
	public bool portalActive
	{
		[Token(Token = "0x6000E50")]
		[Address(RVA = "0xDF27A0", Offset = "0xDF27A0", VA = "0xDF27A0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000E51")]
		[Address(RVA = "0xDF27A8", Offset = "0xDF27A8", VA = "0xDF27A8")]
		set
		{
		}
	}

	[Token(Token = "0x17000248")]
	private ulong frontRoomID
	{
		[Token(Token = "0x6000E52")]
		[Address(RVA = "0xDF27B4", Offset = "0xDF27B4", VA = "0xDF27B4")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x17000249")]
	private ulong backRoomID
	{
		[Token(Token = "0x6000E53")]
		[Address(RVA = "0xDF28E4", Offset = "0xDF28E4", VA = "0xDF28E4")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x1700024A")]
	public AkRoom frontRoom
	{
		[Token(Token = "0x6000E55")]
		[Address(RVA = "0xDF2324", Offset = "0xDF2324", VA = "0xDF2324")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700024B")]
	public AkRoom backRoom
	{
		[Token(Token = "0x6000E56")]
		[Address(RVA = "0xDF235C", Offset = "0xDF235C", VA = "0xDF235C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700024C")]
	public bool IsValid
	{
		[Token(Token = "0x6000E5A")]
		[Address(RVA = "0xDF2CD4", Offset = "0xDF2CD4", VA = "0xDF2CD4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000E54")]
	[Address(RVA = "0xDF2980", Offset = "0xDF2980", VA = "0xDF2980")]
	public AkRoom GetRoom(int index)
	{
		return null;
	}

	[Token(Token = "0x6000E57")]
	[Address(RVA = "0xDF29BC", Offset = "0xDF29BC", VA = "0xDF29BC")]
	private void SetRoomPortal()
	{
	}

	[Token(Token = "0x6000E58")]
	[Address(RVA = "0xDF2574", Offset = "0xDF2574", VA = "0xDF2574")]
	public void UpdateRoomPortal()
	{
	}

	[Token(Token = "0x6000E59")]
	[Address(RVA = "0xDF2390", Offset = "0xDF2390", VA = "0xDF2390")]
	public bool Overlaps(AkRoom room)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E5B")]
	[Address(RVA = "0xDF2D08", Offset = "0xDF2D08", VA = "0xDF2D08")]
	public ulong GetID()
	{
		return default(ulong);
	}

	[Token(Token = "0x6000E5C")]
	[Address(RVA = "0xDF2FEC", Offset = "0xDF2FEC", VA = "0xDF2FEC", Slot = "5")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000E5D")]
	[Address(RVA = "0xDF30E4", Offset = "0xDF30E4", VA = "0xDF30E4", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000E5E")]
	[Address(RVA = "0xDF3174", Offset = "0xDF3174", VA = "0xDF3174", Slot = "4")]
	public override void HandleEvent(GameObject in_gameObject)
	{
	}

	[Token(Token = "0x6000E5F")]
	[Address(RVA = "0xDF316C", Offset = "0xDF316C", VA = "0xDF316C")]
	public void ClosePortal(GameObject in_gameObject)
	{
	}

	[Token(Token = "0x6000E60")]
	[Address(RVA = "0xDF3194", Offset = "0xDF3194", VA = "0xDF3194", Slot = "7")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x6000E61")]
	[Address(RVA = "0xDF3228", Offset = "0xDF3228", VA = "0xDF3228", Slot = "8")]
	public override void OnEnable()
	{
	}

	[Token(Token = "0x6000E62")]
	[Address(RVA = "0xDF3258", Offset = "0xDF3258", VA = "0xDF3258")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000E63")]
	[Address(RVA = "0xDF2850", Offset = "0xDF2850", VA = "0xDF2850")]
	private bool IsRoomActive(AkRoom in_room)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E64")]
	[Address(RVA = "0xDF3180", Offset = "0xDF3180", VA = "0xDF3180")]
	public void Open()
	{
	}

	[Token(Token = "0x6000E65")]
	[Address(RVA = "0xDF318C", Offset = "0xDF318C", VA = "0xDF318C")]
	public void Close()
	{
	}

	[Token(Token = "0x6000E66")]
	[Address(RVA = "0xDF2E8C", Offset = "0xDF2E8C", VA = "0xDF2E8C")]
	public void FindOverlappingRooms(AkRoom.PriorityList[] roomList)
	{
	}

	[Token(Token = "0x6000E67")]
	[Address(RVA = "0xDF32EC", Offset = "0xDF32EC", VA = "0xDF32EC")]
	private void FillRoomList(Vector3 position, AkRoom.PriorityList list)
	{
	}

	[Token(Token = "0x6000E68")]
	[Address(RVA = "0xDF2D24", Offset = "0xDF2D24", VA = "0xDF2D24")]
	public void UpdateRooms()
	{
	}

	[Token(Token = "0x6000E69")]
	[Address(RVA = "0xDF3460", Offset = "0xDF3460", VA = "0xDF3460")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x87D898", Offset = "0x87D898")]
	public void SetRoom(int in_roomIndex, AkRoom in_room)
	{
	}

	[Token(Token = "0x6000E6A")]
	[Address(RVA = "0xDF355C", Offset = "0xDF355C", VA = "0xDF355C")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x87D8D0", Offset = "0x87D8D0")]
	public void SetFrontRoom(AkRoom room)
	{
	}

	[Token(Token = "0x6000E6B")]
	[Address(RVA = "0xDF3658", Offset = "0xDF3658", VA = "0xDF3658")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x87D908", Offset = "0x87D908")]
	public void SetBackRoom(AkRoom room)
	{
	}

	[Token(Token = "0x6000E6C")]
	[Address(RVA = "0xDF3754", Offset = "0xDF3754", VA = "0xDF3754")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x87D940", Offset = "0x87D940")]
	public void UpdateSoundEngineRoomIDs()
	{
	}

	[Token(Token = "0x6000E6D")]
	[Address(RVA = "0xDF3778", Offset = "0xDF3778", VA = "0xDF3778")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x87D978", Offset = "0x87D978")]
	public void UpdateOverlappingRooms()
	{
	}

	[Token(Token = "0x6000E6E")]
	[Address(RVA = "0xDF377C", Offset = "0xDF377C", VA = "0xDF377C")]
	public AkRoomPortal()
	{
	}
}
[Token(Token = "0x2000280")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x870F48", Offset = "0x870F48")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x870F48", Offset = "0x870F48")]
public class AkRoomPortalObstruction : AkObstructionOcclusion
{
	[Token(Token = "0x4000BB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AkRoomPortal m_portal;

	[Token(Token = "0x6000E6F")]
	[Address(RVA = "0xCA7490", Offset = "0xCA7490", VA = "0xCA7490")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E70")]
	[Address(RVA = "0xCA74F4", Offset = "0xCA74F4", VA = "0xCA74F4", Slot = "4")]
	protected override void UpdateCurrentListenerList()
	{
	}

	[Token(Token = "0x6000E71")]
	[Address(RVA = "0xCA7650", Offset = "0xCA7650", VA = "0xCA7650", Slot = "5")]
	protected override void SetObstructionOcclusion(KeyValuePair<AkAudioListener, ObstructionOcclusionValue> ObsOccPair)
	{
	}

	[Token(Token = "0x6000E72")]
	[Address(RVA = "0xCA771C", Offset = "0xCA771C", VA = "0xCA771C")]
	public AkRoomPortalObstruction()
	{
	}
}
[Token(Token = "0x2000281")]
public class AkSoundEngineController
{
	[Token(Token = "0x4000BB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AkSoundEngineController ms_Instance;

	[Token(Token = "0x1700024D")]
	public static AkSoundEngineController Instance
	{
		[Token(Token = "0x6000E73")]
		[Address(RVA = "0xCABD38", Offset = "0xCABD38", VA = "0xCABD38")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000E74")]
	[Address(RVA = "0xCABDB8", Offset = "0xCABDB8", VA = "0xCABDB8")]
	private AkSoundEngineController()
	{
	}

	[Token(Token = "0x6000E75")]
	[Address(RVA = "0xCABDC0", Offset = "0xCABDC0", VA = "0xCABDC0", Slot = "1")]
	~AkSoundEngineController()
	{
	}

	[Token(Token = "0x6000E76")]
	[Address(RVA = "0xCABE28", Offset = "0xCABE28", VA = "0xCABE28")]
	public void LateUpdate()
	{
	}

	[Token(Token = "0x6000E77")]
	[Address(RVA = "0xCABF04", Offset = "0xCABF04", VA = "0xCABF04")]
	public void Init(AkInitializer akInitializer)
	{
	}

	[Token(Token = "0x6000E78")]
	[Address(RVA = "0xCAC6C8", Offset = "0xCAC6C8", VA = "0xCAC6C8")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000E79")]
	[Address(RVA = "0xCAC6CC", Offset = "0xCAC6CC", VA = "0xCAC6CC")]
	public void Terminate()
	{
	}

	[Token(Token = "0x6000E7A")]
	[Address(RVA = "0xCAC8D0", Offset = "0xCAC8D0", VA = "0xCAC8D0")]
	public void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x6000E7B")]
	[Address(RVA = "0xCAC9B8", Offset = "0xCAC9B8", VA = "0xCAC9B8")]
	public void OnApplicationFocus(bool focus)
	{
	}

	[Token(Token = "0x6000E7C")]
	[Address(RVA = "0xCAC8E0", Offset = "0xCAC8E0", VA = "0xCAC8E0")]
	private void ActivateAudio(bool activate, bool renderAnyway = false)
	{
	}
}
[Token(Token = "0x2000282")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x870FD0", Offset = "0x870FD0")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x870FD0", Offset = "0x870FD0")]
public class AkSpatialAudioDebugDraw : MonoBehaviour
{
	[Token(Token = "0x6000E7D")]
	[Address(RVA = "0xCB1194", Offset = "0xCB1194", VA = "0xCB1194")]
	public AkSpatialAudioDebugDraw()
	{
	}
}
[Token(Token = "0x2000283")]
[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x871058", Offset = "0x871058")]
public class AkSpatialAudioEmitter : MonoBehaviour
{
	[Token(Token = "0x4000BB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x877C7C", Offset = "0x877C7C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x877C7C", Offset = "0x877C7C")]
	public AuxBus reflectAuxBus;

	[Token(Token = "0x4000BB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x877CDC", Offset = "0x877CDC")]
	public float reflectionMaxPathLength;

	[Token(Token = "0x4000BB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x877D14", Offset = "0x877D14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x877D14", Offset = "0x877D14")]
	public float reflectionsAuxBusGain;

	[Token(Token = "0x4000BB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x877D68", Offset = "0x877D68")]
	public uint reflectionsOrder;

	[Token(Token = "0x4000BB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x877DA0", Offset = "0x877DA0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x877DA0", Offset = "0x877DA0")]
	public float roomReverbAuxBusGain;

	[Token(Token = "0x4000BBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x877E00", Offset = "0x877E00")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x877E00", Offset = "0x877E00")]
	public uint diffractionMaxEdges;

	[Token(Token = "0x4000BBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x877E60", Offset = "0x877E60")]
	public uint diffractionMaxPaths;

	[Token(Token = "0x4000BBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x877E98", Offset = "0x877E98")]
	public uint diffractionMaxPathLength;

	[Token(Token = "0x6000E7E")]
	[Address(RVA = "0xCB119C", Offset = "0xCB119C", VA = "0xCB119C")]
	public AkSpatialAudioEmitter()
	{
	}
}
[Token(Token = "0x2000284")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x871090", Offset = "0x871090")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x871090", Offset = "0x871090")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x871090", Offset = "0x871090")]
[DisallowMultipleComponent]
public class AkSpatialAudioListener : MonoBehaviour
{
	[Token(Token = "0x2000285")]
	public class SpatialAudioListenerList
	{
		[Token(Token = "0x4000BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly List<AkSpatialAudioListener> listenerList;

		[Token(Token = "0x17000250")]
		public List<AkSpatialAudioListener> ListenerList
		{
			[Token(Token = "0x6000E86")]
			[Address(RVA = "0xCB188C", Offset = "0xCB188C", VA = "0xCB188C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E87")]
		[Address(RVA = "0xCB15A8", Offset = "0xCB15A8", VA = "0xCB15A8")]
		public bool Add(AkSpatialAudioListener listener)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E88")]
		[Address(RVA = "0xCB16F4", Offset = "0xCB16F4", VA = "0xCB16F4")]
		public bool Remove(AkSpatialAudioListener listener)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E89")]
		[Address(RVA = "0xCB1894", Offset = "0xCB1894", VA = "0xCB1894")]
		private void Refresh()
		{
		}

		[Token(Token = "0x6000E8A")]
		[Address(RVA = "0xCB181C", Offset = "0xCB181C", VA = "0xCB181C")]
		public SpatialAudioListenerList()
		{
		}
	}

	[Token(Token = "0x4000BBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AkSpatialAudioListener s_SpatialAudioListener;

	[Token(Token = "0x4000BBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly SpatialAudioListenerList spatialAudioListeners;

	[Token(Token = "0x4000BBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AkAudioListener AkAudioListener;

	[Token(Token = "0x1700024E")]
	public static AkAudioListener TheSpatialAudioListener
	{
		[Token(Token = "0x6000E7F")]
		[Address(RVA = "0xCA7578", Offset = "0xCA7578", VA = "0xCA7578")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700024F")]
	public static SpatialAudioListenerList SpatialAudioListeners
	{
		[Token(Token = "0x6000E80")]
		[Address(RVA = "0xCB1470", Offset = "0xCB1470", VA = "0xCB1470")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000E81")]
	[Address(RVA = "0xCB14D8", Offset = "0xCB14D8", VA = "0xCB14D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E82")]
	[Address(RVA = "0xCB1530", Offset = "0xCB1530", VA = "0xCB1530")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E83")]
	[Address(RVA = "0xCB167C", Offset = "0xCB167C", VA = "0xCB167C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000E84")]
	[Address(RVA = "0xCB17AC", Offset = "0xCB17AC", VA = "0xCB17AC")]
	public AkSpatialAudioListener()
	{
	}
}
[Token(Token = "0x2000286")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x871150", Offset = "0x871150")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x871150", Offset = "0x871150")]
public class AkState : AkDragDropTriggerHandler
{
	[Token(Token = "0x4000BC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AK.Wwise.State data;

	[Token(Token = "0x4000BC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x877ED0", Offset = "0x877ED0")]
	[SerializeField]
	[HideInInspector]
	private int valueIdInternal;

	[Token(Token = "0x4000BC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	[HideInInspector]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x877F2C", Offset = "0x877F2C")]
	private int groupIdInternal;

	[Token(Token = "0x4000BC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x877F88", Offset = "0x877F88")]
	private byte[] valueGuidInternal;

	[Token(Token = "0x4000BC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x877FE4", Offset = "0x877FE4")]
	[SerializeField]
	[HideInInspector]
	private byte[] groupGuidInternal;

	[Token(Token = "0x17000251")]
	protected override BaseType WwiseType
	{
		[Token(Token = "0x6000E8B")]
		[Address(RVA = "0xCB1B24", Offset = "0xCB1B24", VA = "0xCB1B24", Slot = "9")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000252")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x87EC84", Offset = "0x87EC84")]
	public int valueID
	{
		[Token(Token = "0x6000E8D")]
		[Address(RVA = "0xCB1B48", Offset = "0xCB1B48", VA = "0xCB1B48")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000253")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x87ECBC", Offset = "0x87ECBC")]
	public int groupID
	{
		[Token(Token = "0x6000E8E")]
		[Address(RVA = "0xCB1B5C", Offset = "0xCB1B5C", VA = "0xCB1B5C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000254")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x87ECF4", Offset = "0x87ECF4")]
	public byte[] valueGuid
	{
		[Token(Token = "0x6000E8F")]
		[Address(RVA = "0xCB1B70", Offset = "0xCB1B70", VA = "0xCB1B70")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000255")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x87ED2C", Offset = "0x87ED2C")]
	public byte[] groupGuid
	{
		[Token(Token = "0x6000E90")]
		[Address(RVA = "0xCB1C34", Offset = "0xCB1C34", VA = "0xCB1C34")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000E8C")]
	[Address(RVA = "0xCB1B2C", Offset = "0xCB1B2C", VA = "0xCB1B2C", Slot = "4")]
	public override void HandleEvent(GameObject in_gameObject)
	{
	}

	[Token(Token = "0x6000E91")]
	[Address(RVA = "0xCB1CF4", Offset = "0xCB1CF4", VA = "0xCB1CF4")]
	public AkState()
	{
	}
}
[Token(Token = "0x2000287")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8711A0", Offset = "0x8711A0")]
[ExecuteInEditMode]
public class AkSurfaceReflector : MonoBehaviour
{
	[Token(Token = "0x4000BC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x878040", Offset = "0x878040")]
	public Mesh Mesh;

	[Token(Token = "0x4000BC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x878078", Offset = "0x878078")]
	public AcousticTexture[] AcousticTextures;

	[Token(Token = "0x4000BC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8780B0", Offset = "0x8780B0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8780B0", Offset = "0x8780B0")]
	public float[] OcclusionValues;

	[Token(Token = "0x4000BC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x878104", Offset = "0x878104")]
	public bool EnableDiffraction;

	[Token(Token = "0x4000BCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87813C", Offset = "0x87813C")]
	public bool EnableDiffractionOnBoundaryEdges;

	[Token(Token = "0x4000BCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x878174", Offset = "0x878174")]
	public AkRoom AssociatedRoom;

	[Token(Token = "0x4000BCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	[HideInInspector]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8781AC", Offset = "0x8781AC")]
	private AcousticTexture AcousticTextureInternal;

	[Token(Token = "0x17000256")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x87ED64", Offset = "0x87ED64")]
	public AcousticTexture AcousticTexture
	{
		[Token(Token = "0x6000E9E")]
		[Address(RVA = "0xCB38AC", Offset = "0xCB38AC", VA = "0xCB38AC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000E9F")]
		[Address(RVA = "0xCB38D0", Offset = "0xCB38D0", VA = "0xCB38D0")]
		set
		{
		}
	}

	[Token(Token = "0x6000E92")]
	[Address(RVA = "0xCB1F10", Offset = "0xCB1F10", VA = "0xCB1F10")]
	private ulong GetID()
	{
		return default(ulong);
	}

	[Token(Token = "0x6000E93")]
	[Address(RVA = "0xCB1F2C", Offset = "0xCB1F2C", VA = "0xCB1F2C")]
	private static void SetGeometryFromMesh(Mesh mesh, AcousticTexture[] acousticTextures, float[] occlusionValues, Transform transform, ulong geometryID, ulong associatedRoomID, bool enableDiffraction, bool enableDiffractionOnBoundaryEdges, string name = "")
	{
	}

	[Token(Token = "0x6000E94")]
	[Address(RVA = "0xCB2F78", Offset = "0xCB2F78", VA = "0xCB2F78")]
	public void SetAssociatedRoom(AkRoom room)
	{
	}

	[Token(Token = "0x6000E95")]
	[Address(RVA = "0xCB3094", Offset = "0xCB3094", VA = "0xCB3094")]
	public void SetGeometry()
	{
	}

	[Token(Token = "0x6000E96")]
	[Address(RVA = "0xCB3070", Offset = "0xCB3070", VA = "0xCB3070")]
	public void UpdateGeometry()
	{
	}

	[Token(Token = "0x6000E97")]
	[Address(RVA = "0xCB3310", Offset = "0xCB3310", VA = "0xCB3310")]
	public void RemoveGeometry()
	{
	}

	[Token(Token = "0x6000E98")]
	[Address(RVA = "0xCB3388", Offset = "0xCB3388", VA = "0xCB3388")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x87D9B0", Offset = "0x87D9B0")]
	public static void RemoveGeometrySet(MeshFilter meshFilter)
	{
	}

	[Token(Token = "0x6000E99")]
	[Address(RVA = "0xCB346C", Offset = "0xCB346C", VA = "0xCB346C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E9A")]
	[Address(RVA = "0xCB354C", Offset = "0xCB354C", VA = "0xCB354C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E9B")]
	[Address(RVA = "0xCB35E0", Offset = "0xCB35E0", VA = "0xCB35E0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000E9C")]
	[Address(RVA = "0xCB3448", Offset = "0xCB3448", VA = "0xCB3448")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x87D9E8", Offset = "0x87D9E8")]
	public static ulong GetAkGeometrySetID(MeshFilter meshFilter)
	{
		return default(ulong);
	}

	[Token(Token = "0x6000E9D")]
	[Address(RVA = "0xCB3608", Offset = "0xCB3608", VA = "0xCB3608")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x87DA20", Offset = "0x87DA20")]
	public static void AddGeometrySet(AcousticTexture acousticTexture, MeshFilter meshFilter, ulong roomID, bool enableDiffraction, bool enableDiffractionOnBoundaryEdges)
	{
	}

	[Token(Token = "0x6000EA0")]
	[Address(RVA = "0xCB3A54", Offset = "0xCB3A54", VA = "0xCB3A54")]
	public AkSurfaceReflector()
	{
	}
}
[Token(Token = "0x2000288")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x8711EC", Offset = "0x8711EC")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8711EC", Offset = "0x8711EC")]
public class AkSwitch : AkDragDropTriggerHandler
{
	[Token(Token = "0x4000BCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AK.Wwise.Switch data;

	[Token(Token = "0x4000BCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[HideInInspector]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x878208", Offset = "0x878208")]
	private int valueIdInternal;

	[Token(Token = "0x4000BCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[HideInInspector]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x878264", Offset = "0x878264")]
	[SerializeField]
	private int groupIdInternal;

	[Token(Token = "0x4000BD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8782C0", Offset = "0x8782C0")]
	[HideInInspector]
	[SerializeField]
	private byte[] valueGuidInternal;

	[Token(Token = "0x4000BD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x87831C", Offset = "0x87831C")]
	[SerializeField]
	[HideInInspector]
	private byte[] groupGuidInternal;

	[Token(Token = "0x17000257")]
	protected override BaseType WwiseType
	{
		[Token(Token = "0x6000EA1")]
		[Address(RVA = "0xCB3B10", Offset = "0xCB3B10", VA = "0xCB3B10", Slot = "9")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000258")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x87ED9C", Offset = "0x87ED9C")]
	public int valueID
	{
		[Token(Token = "0x6000EA3")]
		[Address(RVA = "0xCB3BC8", Offset = "0xCB3BC8", VA = "0xCB3BC8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000259")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x87EDD4", Offset = "0x87EDD4")]
	public int groupID
	{
		[Token(Token = "0x6000EA4")]
		[Address(RVA = "0xCB3BDC", Offset = "0xCB3BDC", VA = "0xCB3BDC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700025A")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x87EE0C", Offset = "0x87EE0C")]
	public byte[] valueGuid
	{
		[Token(Token = "0x6000EA5")]
		[Address(RVA = "0xCB3BF0", Offset = "0xCB3BF0", VA = "0xCB3BF0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700025B")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x87EE44", Offset = "0x87EE44")]
	public byte[] groupGuid
	{
		[Token(Token = "0x6000EA6")]
		[Address(RVA = "0xCB3CB4", Offset = "0xCB3CB4", VA = "0xCB3CB4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000EA2")]
	[Address(RVA = "0xCB3B18", Offset = "0xCB3B18", VA = "0xCB3B18", Slot = "4")]
	public override void HandleEvent(GameObject in_gameObject)
	{
	}

	[Token(Token = "0x6000EA7")]
	[Address(RVA = "0xCB3D74", Offset = "0xCB3D74", VA = "0xCB3D74")]
	public AkSwitch()
	{
	}
}
[Token(Token = "0x2000289")]
[DisallowMultipleComponent]
public class AkTerminator : MonoBehaviour
{
	[Token(Token = "0x6000EA8")]
	[Address(RVA = "0xCB3DDC", Offset = "0xCB3DDC", VA = "0xCB3DDC")]
	public AkTerminator()
	{
	}
}
[Token(Token = "0x200028A")]
public abstract class AkTriggerBase : MonoBehaviour
{
	[Token(Token = "0x200028B")]
	public delegate void Trigger(GameObject in_gameObject);

	[Token(Token = "0x4000BD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Trigger triggerDelegate;

	[Token(Token = "0x6000EA9")]
	[Address(RVA = "0xCB6524", Offset = "0xCB6524", VA = "0xCB6524")]
	public static Dictionary<uint, string> GetAllDerivedTypes()
	{
		return null;
	}

	[Token(Token = "0x6000EAA")]
	[Address(RVA = "0xCB6940", Offset = "0xCB6940", VA = "0xCB6940")]
	protected AkTriggerBase()
	{
	}
}
[Token(Token = "0x200028C")]
public class AkTriggerCollisionEnter : AkTriggerBase
{
	[Token(Token = "0x4000BD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject triggerObject;

	[Token(Token = "0x6000EAF")]
	[Address(RVA = "0xCB6D1C", Offset = "0xCB6D1C", VA = "0xCB6D1C")]
	private void OnCollisionEnter(Collision in_other)
	{
	}

	[Token(Token = "0x6000EB0")]
	[Address(RVA = "0xCB6E28", Offset = "0xCB6E28", VA = "0xCB6E28")]
	private void OnTriggerEnter(Collider in_other)
	{
	}

	[Token(Token = "0x6000EB1")]
	[Address(RVA = "0xCB6F34", Offset = "0xCB6F34", VA = "0xCB6F34")]
	public AkTriggerCollisionEnter()
	{
	}
}
[Token(Token = "0x200028D")]
public class AkTriggerCollisionExit : AkTriggerBase
{
	[Token(Token = "0x4000BD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject triggerObject;

	[Token(Token = "0x6000EB2")]
	[Address(RVA = "0xCB6F3C", Offset = "0xCB6F3C", VA = "0xCB6F3C")]
	private void OnCollisionExit(Collision in_other)
	{
	}

	[Token(Token = "0x6000EB3")]
	[Address(RVA = "0xCB7048", Offset = "0xCB7048", VA = "0xCB7048")]
	public AkTriggerCollisionExit()
	{
	}
}
[Token(Token = "0x200028E")]
public class AkTriggerDisable : AkTriggerBase
{
	[Token(Token = "0x6000EB4")]
	[Address(RVA = "0xCB7050", Offset = "0xCB7050", VA = "0xCB7050")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000EB5")]
	[Address(RVA = "0xCB7064", Offset = "0xCB7064", VA = "0xCB7064")]
	public AkTriggerDisable()
	{
	}
}
[Token(Token = "0x200028F")]
[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x87124C", Offset = "0x87124C")]
public class AkTriggerEnable : AkTriggerBase
{
	[Token(Token = "0x6000EB6")]
	[Address(RVA = "0xCB706C", Offset = "0xCB706C", VA = "0xCB706C")]
	public AkTriggerEnable()
	{
	}
}
[Token(Token = "0x2000290")]
public class AkTriggerEnter : AkTriggerBase
{
	[Token(Token = "0x4000BD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject triggerObject;

	[Token(Token = "0x6000EB7")]
	[Address(RVA = "0xCB7074", Offset = "0xCB7074", VA = "0xCB7074")]
	private void OnTriggerEnter(Collider in_other)
	{
	}

	[Token(Token = "0x6000EB8")]
	[Address(RVA = "0xCB7180", Offset = "0xCB7180", VA = "0xCB7180")]
	public AkTriggerEnter()
	{
	}
}
[Token(Token = "0x2000291")]
public class AkTriggerExit : AkTriggerBase
{
	[Token(Token = "0x4000BD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject triggerObject;

	[Token(Token = "0x6000EB9")]
	[Address(RVA = "0xCB7188", Offset = "0xCB7188", VA = "0xCB7188")]
	private void OnTriggerExit(Collider in_other)
	{
	}

	[Token(Token = "0x6000EBA")]
	[Address(RVA = "0xCB7294", Offset = "0xCB7294", VA = "0xCB7294")]
	public AkTriggerExit()
	{
	}
}
[Token(Token = "0x2000292")]
public abstract class AkTriggerHandler : MonoBehaviour
{
	[Token(Token = "0x4000BD7")]
	public const int AWAKE_TRIGGER_ID = 1151176110;

	[Token(Token = "0x4000BD8")]
	public const int START_TRIGGER_ID = 1281810935;

	[Token(Token = "0x4000BD9")]
	public const int DESTROY_TRIGGER_ID = -358577003;

	[Token(Token = "0x4000BDA")]
	public const int ON_ENABLE_TRIGGER_ID = -320808462;

	[Token(Token = "0x4000BDB")]
	public const int MAX_NB_TRIGGERS = 32;

	[Token(Token = "0x4000BDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<uint, string> triggerTypes;

	[Token(Token = "0x4000BDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool didDestroy;

	[Token(Token = "0x4000BDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<int> triggerList;

	[Token(Token = "0x4000BDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool useOtherObject;

	[Token(Token = "0x6000EBB")]
	public abstract void HandleEvent(GameObject in_gameObject);

	[Token(Token = "0x6000EBC")]
	[Address(RVA = "0xCB729C", Offset = "0xCB729C", VA = "0xCB729C", Slot = "5")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6000EBD")]
	[Address(RVA = "0xCB773C", Offset = "0xCB773C", VA = "0xCB773C", Slot = "6")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000EBE")]
	[Address(RVA = "0xCB77C0", Offset = "0xCB77C0", VA = "0xCB77C0", Slot = "7")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6000EBF")]
	[Address(RVA = "0xCB77D0", Offset = "0xCB77D0", VA = "0xCB77D0")]
	public void DoDestroy()
	{
	}

	[Token(Token = "0x6000EC0")]
	[Address(RVA = "0xCB7BD4", Offset = "0xCB7BD4", VA = "0xCB7BD4", Slot = "8")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000EC1")]
	[Address(RVA = "0xCB7318", Offset = "0xCB7318", VA = "0xCB7318")]
	protected void RegisterTriggers(List<int> in_triggerList, AkTriggerBase.Trigger in_delegate)
	{
	}

	[Token(Token = "0x6000EC2")]
	[Address(RVA = "0xCB7858", Offset = "0xCB7858", VA = "0xCB7858")]
	protected void UnregisterTriggers(List<int> in_triggerList, AkTriggerBase.Trigger in_delegate)
	{
	}

	[Token(Token = "0x6000EC3")]
	[Address(RVA = "0xCB7C58", Offset = "0xCB7C58", VA = "0xCB7C58")]
	protected AkTriggerHandler()
	{
	}
}
[Token(Token = "0x2000293")]
[ExecuteInEditMode]
public abstract class AkDragDropTriggerHandler : AkTriggerHandler
{
	[Token(Token = "0x1700025C")]
	protected abstract BaseType WwiseType
	{
		[Token(Token = "0x6000EC5")]
		get;
	}

	[Token(Token = "0x6000EC6")]
	[Address(RVA = "0xDE7378", Offset = "0xDE7378", VA = "0xDE7378", Slot = "5")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000EC7")]
	[Address(RVA = "0xDE7380", Offset = "0xDE7380", VA = "0xDE7380", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000EC8")]
	[Address(RVA = "0xDE7388", Offset = "0xDE7388", VA = "0xDE7388", Slot = "7")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x6000EC9")]
	[Address(RVA = "0xDE7390", Offset = "0xDE7390", VA = "0xDE7390")]
	protected AkDragDropTriggerHandler()
	{
	}
}
[Token(Token = "0x2000294")]
public class AkTriggerMouseDown : AkTriggerBase
{
	[Token(Token = "0x6000ECA")]
	[Address(RVA = "0xCB7D40", Offset = "0xCB7D40", VA = "0xCB7D40")]
	private void OnMouseDown()
	{
	}

	[Token(Token = "0x6000ECB")]
	[Address(RVA = "0xCB7D54", Offset = "0xCB7D54", VA = "0xCB7D54")]
	public AkTriggerMouseDown()
	{
	}
}
[Token(Token = "0x2000295")]
public class AkTriggerMouseEnter : AkTriggerBase
{
	[Token(Token = "0x6000ECC")]
	[Address(RVA = "0xCB7D5C", Offset = "0xCB7D5C", VA = "0xCB7D5C")]
	private void OnMouseEnter()
	{
	}

	[Token(Token = "0x6000ECD")]
	[Address(RVA = "0xCB7D70", Offset = "0xCB7D70", VA = "0xCB7D70")]
	public AkTriggerMouseEnter()
	{
	}
}
[Token(Token = "0x2000296")]
public class AkTriggerMouseExit : AkTriggerBase
{
	[Token(Token = "0x6000ECE")]
	[Address(RVA = "0xCB7D78", Offset = "0xCB7D78", VA = "0xCB7D78")]
	private void OnMouseExit()
	{
	}

	[Token(Token = "0x6000ECF")]
	[Address(RVA = "0xCB7D8C", Offset = "0xCB7D8C", VA = "0xCB7D8C")]
	public AkTriggerMouseExit()
	{
	}
}
[Token(Token = "0x2000297")]
public class AkTriggerMouseUp : AkTriggerBase
{
	[Token(Token = "0x6000ED0")]
	[Address(RVA = "0xCB7D94", Offset = "0xCB7D94", VA = "0xCB7D94")]
	private void OnMouseUp()
	{
	}

	[Token(Token = "0x6000ED1")]
	[Address(RVA = "0xCB7DA8", Offset = "0xCB7DA8", VA = "0xCB7DA8")]
	public AkTriggerMouseUp()
	{
	}
}
[Token(Token = "0x2000298")]
public class TestWwisePackage : MonoBehaviour
{
	[Token(Token = "0x6000ED2")]
	[Address(RVA = "0xB21518", Offset = "0xB21518", VA = "0xB21518")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000ED3")]
	[Address(RVA = "0xB21564", Offset = "0xB21564", VA = "0xB21564")]
	private void AddBasePath()
	{
	}

	[Token(Token = "0x6000ED4")]
	[Address(RVA = "0xB21630", Offset = "0xB21630", VA = "0xB21630")]
	private void LoadPackageFile(string packageName)
	{
	}

	[Token(Token = "0x6000ED5")]
	[Address(RVA = "0xB2171C", Offset = "0xB2171C", VA = "0xB2171C")]
	public TestWwisePackage()
	{
	}
}
namespace AK.Wwise
{
	[Serializable]
	[Token(Token = "0x2000299")]
	public class AcousticTexture : BaseType
	{
		[Token(Token = "0x4000BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WwiseAcousticTextureReference WwiseObjectReference;

		[Token(Token = "0x1700025D")]
		public override WwiseObjectReference ObjectReference
		{
			[Token(Token = "0x6000ED6")]
			[Address(RVA = "0xDDCD3C", Offset = "0xDDCD3C", VA = "0xDDCD3C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000ED7")]
		[Address(RVA = "0xDDCD44", Offset = "0xDDCD44", VA = "0xDDCD44")]
		public AcousticTexture()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200029A")]
	public class AuxBus : BaseType
	{
		[Token(Token = "0x4000BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WwiseAuxBusReference WwiseObjectReference;

		[Token(Token = "0x1700025E")]
		public override WwiseObjectReference ObjectReference
		{
			[Token(Token = "0x6000ED8")]
			[Address(RVA = "0xDDCD54", Offset = "0xDDCD54", VA = "0xDDCD54", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000ED9")]
		[Address(RVA = "0xDDCD5C", Offset = "0xDDCD5C", VA = "0xDDCD5C")]
		public AuxBus()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200029B")]
	public class Bank : BaseType
	{
		[Token(Token = "0x4000BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WwiseBankReference WwiseObjectReference;

		[Token(Token = "0x1700025F")]
		public override WwiseObjectReference ObjectReference
		{
			[Token(Token = "0x6000EDA")]
			[Address(RVA = "0xDDCD64", Offset = "0xDDCD64", VA = "0xDDCD64", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EDB")]
		[Address(RVA = "0xDDCD6C", Offset = "0xDDCD6C", VA = "0xDDCD6C")]
		public void Load(bool decodeBank = false, bool saveDecodedBank = false)
		{
		}

		[Token(Token = "0x6000EDC")]
		[Address(RVA = "0xDDD058", Offset = "0xDDD058", VA = "0xDDD058")]
		public void LoadAsync([Optional] AkCallbackManager.BankCallback callback)
		{
		}

		[Token(Token = "0x6000EDD")]
		[Address(RVA = "0xDDD30C", Offset = "0xDDD30C", VA = "0xDDD30C")]
		public void Unload()
		{
		}

		[Token(Token = "0x6000EDE")]
		[Address(RVA = "0xDDD4EC", Offset = "0xDDD4EC", VA = "0xDDD4EC")]
		public Bank()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200029C")]
	public abstract class BaseGroupType : BaseType
	{
		[Token(Token = "0x4000BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x878378", Offset = "0x878378")]
		[HideInInspector]
		[SerializeField]
		private int groupIdInternal;

		[Token(Token = "0x4000BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8783D4", Offset = "0x8783D4")]
		[HideInInspector]
		[SerializeField]
		private byte[] groupGuidInternal;

		[Token(Token = "0x17000260")]
		public WwiseObjectReference GroupWwiseObjectReference
		{
			[Token(Token = "0x6000EDF")]
			[Address(RVA = "0xDDD4F4", Offset = "0xDDD4F4", VA = "0xDDD4F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000261")]
		public uint GroupId
		{
			[Token(Token = "0x6000EE0")]
			[Address(RVA = "0xDDD5D8", Offset = "0xDDD5D8", VA = "0xDDD5D8")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x6000EE1")]
		[Address(RVA = "0xDDD674", Offset = "0xDDD674", VA = "0xDDD674", Slot = "6")]
		public override bool IsValid()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EE2")]
		[Address(RVA = "0xDDD790", Offset = "0xDDD790", VA = "0xDDD790")]
		protected BaseGroupType()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200029D")]
	public abstract class BaseType
	{
		[Token(Token = "0x4000BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x878430", Offset = "0x878430")]
		[HideInInspector]
		[SerializeField]
		private int idInternal;

		[Token(Token = "0x4000BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x87848C", Offset = "0x87848C")]
		[SerializeField]
		private byte[] valueGuidInternal;

		[Token(Token = "0x17000262")]
		public abstract WwiseObjectReference ObjectReference
		{
			[Token(Token = "0x6000EE3")]
			get;
		}

		[Token(Token = "0x17000263")]
		public virtual string Name
		{
			[Token(Token = "0x6000EE4")]
			[Address(RVA = "0xDDD798", Offset = "0xDDD798", VA = "0xDDD798", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000264")]
		public uint Id
		{
			[Token(Token = "0x6000EE5")]
			[Address(RVA = "0xDDD82C", Offset = "0xDDD82C", VA = "0xDDD82C")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x17000265")]
		public static uint InvalidId
		{
			[Token(Token = "0x6000EE6")]
			[Address(RVA = "0xDDD87C", Offset = "0xDDD87C", VA = "0xDDD87C")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x6000EE7")]
		[Address(RVA = "0xDDD70C", Offset = "0xDDD70C", VA = "0xDDD70C", Slot = "6")]
		public virtual bool IsValid()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EE8")]
		[Address(RVA = "0xDDD884", Offset = "0xDDD884", VA = "0xDDD884")]
		protected void Verify(AKRESULT result)
		{
		}

		[Token(Token = "0x6000EE9")]
		[Address(RVA = "0xDDD888", Offset = "0xDDD888", VA = "0xDDD888", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000EEA")]
		[Address(RVA = "0xDDCD4C", Offset = "0xDDCD4C", VA = "0xDDCD4C")]
		protected BaseType()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200029E")]
	public class CallbackFlags
	{
		[Token(Token = "0x4000BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint value;

		[Token(Token = "0x6000EEB")]
		[Address(RVA = "0xDDD938", Offset = "0xDDD938", VA = "0xDDD938")]
		public CallbackFlags()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200029F")]
	public class Event : BaseType
	{
		[Token(Token = "0x4000BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WwiseEventReference WwiseObjectReference;

		[Token(Token = "0x17000266")]
		public override WwiseObjectReference ObjectReference
		{
			[Token(Token = "0x6000EEC")]
			[Address(RVA = "0xDDD940", Offset = "0xDDD940", VA = "0xDDD940", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EED")]
		[Address(RVA = "0xDDD948", Offset = "0xDDD948", VA = "0xDDD948")]
		private void VerifyPlayingID(uint playingId)
		{
		}

		[Token(Token = "0x6000EEE")]
		[Address(RVA = "0xDDD94C", Offset = "0xDDD94C", VA = "0xDDD94C")]
		public uint Post(GameObject gameObject)
		{
			return default(uint);
		}

		[Token(Token = "0x6000EEF")]
		[Address(RVA = "0xDDD9FC", Offset = "0xDDD9FC", VA = "0xDDD9FC")]
		public uint Post(GameObject gameObject, uint flags, AkCallbackManager.EventCallback callback, [Optional] object cookie)
		{
			return default(uint);
		}

		[Token(Token = "0x6000EF0")]
		[Address(RVA = "0xDDDAD0", Offset = "0xDDDAD0", VA = "0xDDDAD0")]
		public void Stop(GameObject gameObject, int transitionDuration = 0, AkCurveInterpolation curveInterpolation = AkCurveInterpolation.AkCurveInterpolation_Linear)
		{
		}

		[Token(Token = "0x6000EF1")]
		[Address(RVA = "0xDDDAE0", Offset = "0xDDDAE0", VA = "0xDDDAE0")]
		public void ExecuteAction(GameObject gameObject, AkActionOnEventType actionOnEventType, int transitionDuration, AkCurveInterpolation curveInterpolation)
		{
		}

		[Token(Token = "0x6000EF2")]
		[Address(RVA = "0xDDDBB0", Offset = "0xDDDBB0", VA = "0xDDDBB0")]
		public Event()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002A0")]
	public class RTPC : BaseType
	{
		[Token(Token = "0x4000BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WwiseRtpcReference WwiseObjectReference;

		[Token(Token = "0x17000267")]
		public override WwiseObjectReference ObjectReference
		{
			[Token(Token = "0x6000EF3")]
			[Address(RVA = "0xDDDBB8", Offset = "0xDDDBB8", VA = "0xDDDBB8", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EF4")]
		[Address(RVA = "0xDDDBC0", Offset = "0xDDDBC0", VA = "0xDDDBC0")]
		public void SetValue(GameObject gameObject, float value)
		{
		}

		[Token(Token = "0x6000EF5")]
		[Address(RVA = "0xDDDC80", Offset = "0xDDDC80", VA = "0xDDDC80")]
		public void SetGlobalValue(float value)
		{
		}

		[Token(Token = "0x6000EF6")]
		[Address(RVA = "0xDDDD2C", Offset = "0xDDDD2C", VA = "0xDDDD2C")]
		public RTPC()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002A1")]
	public class State : BaseGroupType
	{
		[Token(Token = "0x4000BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public WwiseStateReference WwiseObjectReference;

		[Token(Token = "0x17000268")]
		public override WwiseObjectReference ObjectReference
		{
			[Token(Token = "0x6000EF7")]
			[Address(RVA = "0xDDDD34", Offset = "0xDDDD34", VA = "0xDDDD34", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EF8")]
		[Address(RVA = "0xDDDD3C", Offset = "0xDDDD3C", VA = "0xDDDD3C")]
		public void SetValue()
		{
		}

		[Token(Token = "0x6000EF9")]
		[Address(RVA = "0xDDDDE4", Offset = "0xDDDDE4", VA = "0xDDDDE4")]
		public State()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002A2")]
	public class Switch : BaseGroupType
	{
		[Token(Token = "0x4000BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public WwiseSwitchReference WwiseObjectReference;

		[Token(Token = "0x17000269")]
		public override WwiseObjectReference ObjectReference
		{
			[Token(Token = "0x6000EFA")]
			[Address(RVA = "0xDDDDEC", Offset = "0xDDDDEC", VA = "0xDDDDEC", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EFB")]
		[Address(RVA = "0xDDDDF4", Offset = "0xDDDDF4", VA = "0xDDDDF4")]
		public void SetValue(GameObject gameObject)
		{
		}

		[Token(Token = "0x6000EFC")]
		[Address(RVA = "0xDDDEB0", Offset = "0xDDDEB0", VA = "0xDDDEB0")]
		public Switch()
		{
		}
	}
}
namespace ThreeDAR.Tracks.RendererGroup
{
	[Token(Token = "0x20002A3")]
	public class RendererGroupAsset : PlayableAsset
	{
		[Token(Token = "0x4000BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AnimationCurve globalIntensityCurve;

		[Token(Token = "0x4000BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AnimationCurve globalColorCurve;

		[Token(Token = "0x4000BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private List<RendererMaterialValues> rendererMaterials;

		[Token(Token = "0x6000EFD")]
		[Address(RVA = "0xB26914", Offset = "0xB26914", VA = "0xB26914", Slot = "6")]
		public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
		{
			return default(Playable);
		}

		[Token(Token = "0x6000EFE")]
		[Address(RVA = "0xB26B68", Offset = "0xB26B68", VA = "0xB26B68")]
		public RendererGroupAsset()
		{
		}
	}
	[Token(Token = "0x20002A4")]
	public class RendererGroupBehaviour : TimeBasedBehaviour
	{
		[Token(Token = "0x4000BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x878518", Offset = "0x878518")]
		private List<RendererMaterialValues> <RendererMaterials>k__BackingField;

		[Token(Token = "0x4000BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x878528", Offset = "0x878528")]
		private AnimationCurve <globalIntensityCurve>k__BackingField;

		[Token(Token = "0x4000BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x878538", Offset = "0x878538")]
		private AnimationCurve <globalColorCurve>k__BackingField;

		[Token(Token = "0x4000BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private RendererMaterialValues currentRendererValue;

		[Token(Token = "0x1700026A")]
		public List<RendererMaterialValues> RendererMaterials
		{
			[Token(Token = "0x6000EFF")]
			[Address(RVA = "0xB26BD0", Offset = "0xB26BD0", VA = "0xB26BD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87DA58", Offset = "0x87DA58")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F00")]
			[Address(RVA = "0xB26BD8", Offset = "0xB26BD8", VA = "0xB26BD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87DA68", Offset = "0x87DA68")]
			set
			{
			}
		}

		[Token(Token = "0x1700026B")]
		public AnimationCurve globalIntensityCurve
		{
			[Token(Token = "0x6000F01")]
			[Address(RVA = "0xB26BE0", Offset = "0xB26BE0", VA = "0xB26BE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87DA78", Offset = "0x87DA78")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F02")]
			[Address(RVA = "0xB26BE8", Offset = "0xB26BE8", VA = "0xB26BE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87DA88", Offset = "0x87DA88")]
			set
			{
			}
		}

		[Token(Token = "0x1700026C")]
		public AnimationCurve globalColorCurve
		{
			[Token(Token = "0x6000F03")]
			[Address(RVA = "0xB26BF0", Offset = "0xB26BF0", VA = "0xB26BF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87DA98", Offset = "0x87DA98")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F04")]
			[Address(RVA = "0xB26BF8", Offset = "0xB26BF8", VA = "0xB26BF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87DAA8", Offset = "0x87DAA8")]
			set
			{
			}
		}

		[Token(Token = "0x6000F05")]
		[Address(RVA = "0xB26C00", Offset = "0xB26C00", VA = "0xB26C00", Slot = "22")]
		protected override void Interpolate(float t)
		{
		}

		[Token(Token = "0x6000F06")]
		[Address(RVA = "0xB26DF0", Offset = "0xB26DF0", VA = "0xB26DF0")]
		public RendererGroupBehaviour()
		{
		}
	}
	[Token(Token = "0x20002A5")]
	[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x871294", Offset = "0x871294")]
	[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x871294", Offset = "0x871294")]
	public class RendererGroupTrack : TrackAsset
	{
		[Token(Token = "0x6000F07")]
		[Address(RVA = "0xB26DF8", Offset = "0xB26DF8", VA = "0xB26DF8")]
		public RendererGroupTrack()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002A6")]
	public class RendererMaterialValues
	{
		[Token(Token = "0x4000BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private Renderer renderer;

		[Token(Token = "0x4000BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x878558", Offset = "0x878558")]
		[SerializeField]
		private bool modifyIntensity;

		[Token(Token = "0x4000BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float startIntensity;

		[Token(Token = "0x4000BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float endIntensity;

		[Token(Token = "0x4000BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private bool useLocalIntensityCurve;

		[Token(Token = "0x4000BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AnimationCurve intensityCurve;

		[Token(Token = "0x4000BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8785D0", Offset = "0x8785D0")]
		[SerializeField]
		private bool modifyColor;

		[Token(Token = "0x4000BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private Color startColor;

		[Token(Token = "0x4000BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private Color endColor;

		[Token(Token = "0x4000BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private bool useLocalColorCurve;

		[Token(Token = "0x4000BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AnimationCurve colorCurve;

		[Token(Token = "0x4000BFE")]
		private const string COLOR_INTENSITY_VARIABLE = "_ColorIntensity";

		[Token(Token = "0x4000BFF")]
		private const string COLOR_NAME_VARIABLE = "_Color";

		[Token(Token = "0x4000C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x878648", Offset = "0x878648")]
		private MaterialPropertyBlock <PropertyBlock>k__BackingField;

		[Token(Token = "0x4000C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x878658", Offset = "0x878658")]
		private int <ColorIntensityId>k__BackingField;

		[Token(Token = "0x4000C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x878668", Offset = "0x878668")]
		private int <ColorNameId>k__BackingField;

		[Token(Token = "0x1700026D")]
		public Renderer Renderer
		{
			[Token(Token = "0x6000F08")]
			[Address(RVA = "0xB26E60", Offset = "0xB26E60", VA = "0xB26E60")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026E")]
		public bool ModifyIntensity
		{
			[Token(Token = "0x6000F09")]
			[Address(RVA = "0xB26E68", Offset = "0xB26E68", VA = "0xB26E68")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700026F")]
		public float StartIntensity
		{
			[Token(Token = "0x6000F0A")]
			[Address(RVA = "0xB26E70", Offset = "0xB26E70", VA = "0xB26E70")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000270")]
		public float EndIntensity
		{
			[Token(Token = "0x6000F0B")]
			[Address(RVA = "0xB26E78", Offset = "0xB26E78", VA = "0xB26E78")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000271")]
		public bool UseLocalIntensityCurve
		{
			[Token(Token = "0x6000F0C")]
			[Address(RVA = "0xB26E80", Offset = "0xB26E80", VA = "0xB26E80")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000272")]
		public AnimationCurve IntensityCurve
		{
			[Token(Token = "0x6000F0D")]
			[Address(RVA = "0xB26E88", Offset = "0xB26E88", VA = "0xB26E88")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000273")]
		public bool ModifyColor
		{
			[Token(Token = "0x6000F0E")]
			[Address(RVA = "0xB26E90", Offset = "0xB26E90", VA = "0xB26E90")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000274")]
		public Color StartColor
		{
			[Token(Token = "0x6000F0F")]
			[Address(RVA = "0xB26E98", Offset = "0xB26E98", VA = "0xB26E98")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x17000275")]
		public Color EndColor
		{
			[Token(Token = "0x6000F10")]
			[Address(RVA = "0xB26EA4", Offset = "0xB26EA4", VA = "0xB26EA4")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x17000276")]
		public bool UseLocalColorCurve
		{
			[Token(Token = "0x6000F11")]
			[Address(RVA = "0xB26EB0", Offset = "0xB26EB0", VA = "0xB26EB0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000277")]
		public AnimationCurve ColorCurve
		{
			[Token(Token = "0x6000F12")]
			[Address(RVA = "0xB26EB8", Offset = "0xB26EB8", VA = "0xB26EB8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000278")]
		public MaterialPropertyBlock PropertyBlock
		{
			[Token(Token = "0x6000F13")]
			[Address(RVA = "0xB26EC0", Offset = "0xB26EC0", VA = "0xB26EC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87DAB8", Offset = "0x87DAB8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F14")]
			[Address(RVA = "0xB26EC8", Offset = "0xB26EC8", VA = "0xB26EC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87DAC8", Offset = "0x87DAC8")]
			set
			{
			}
		}

		[Token(Token = "0x17000279")]
		public int ColorIntensityId
		{
			[Token(Token = "0x6000F15")]
			[Address(RVA = "0xB26ED0", Offset = "0xB26ED0", VA = "0xB26ED0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87DAD8", Offset = "0x87DAD8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000F16")]
			[Address(RVA = "0xB26ED8", Offset = "0xB26ED8", VA = "0xB26ED8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87DAE8", Offset = "0x87DAE8")]
			set
			{
			}
		}

		[Token(Token = "0x1700027A")]
		public int ColorNameId
		{
			[Token(Token = "0x6000F17")]
			[Address(RVA = "0xB26EE0", Offset = "0xB26EE0", VA = "0xB26EE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87DAF8", Offset = "0x87DAF8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000F18")]
			[Address(RVA = "0xB26EE8", Offset = "0xB26EE8", VA = "0xB26EE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87DB08", Offset = "0x87DB08")]
			set
			{
			}
		}

		[Token(Token = "0x6000F19")]
		[Address(RVA = "0xB26A70", Offset = "0xB26A70", VA = "0xB26A70")]
		public void SetUp()
		{
		}

		[Token(Token = "0x6000F1A")]
		[Address(RVA = "0xB26EF0", Offset = "0xB26EF0", VA = "0xB26EF0")]
		public RendererMaterialValues()
		{
		}
	}
}
namespace ThreeDAR.StepsExecution
{
	[Token(Token = "0x20002A7")]
	public interface IStep
	{
		[Token(Token = "0x6000F1B")]
		bool Execute(float deltaTime);
	}
	[Token(Token = "0x20002A8")]
	public class StepsQueue : IRepeatable
	{
		[Token(Token = "0x4000C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<IStep> steps;

		[Token(Token = "0x4000C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int currentStep;

		[Token(Token = "0x4000C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private bool executing;

		[Token(Token = "0x14000018")]
		public event Action onExecutionFinish
		{
			[Token(Token = "0x6000F1C")]
			[Address(RVA = "0xB26530", Offset = "0xB26530", VA = "0xB26530")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87DB18", Offset = "0x87DB18")]
			add
			{
			}
			[Token(Token = "0x6000F1D")]
			[Address(RVA = "0xB265D4", Offset = "0xB265D4", VA = "0xB265D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87DB28", Offset = "0x87DB28")]
			remove
			{
			}
		}

		[Token(Token = "0x6000F1E")]
		[Address(RVA = "0xB26678", Offset = "0xB26678", VA = "0xB26678")]
		public StepsQueue(List<IStep> steps)
		{
		}

		[Token(Token = "0x6000F1F")]
		[Address(RVA = "0xB266A8", Offset = "0xB266A8", VA = "0xB266A8")]
		public void ExecuteQueue()
		{
		}

		[Token(Token = "0x6000F20")]
		[Address(RVA = "0xB2674C", Offset = "0xB2674C", VA = "0xB2674C", Slot = "4")]
		public void Tick(float deltaTime)
		{
		}

		[Token(Token = "0x6000F21")]
		[Address(RVA = "0xB268C8", Offset = "0xB268C8", VA = "0xB268C8")]
		private void OnExecutionFinish()
		{
		}
	}
}
namespace ThreeDAR.SceneManagment
{
	[Token(Token = "0x20002A9")]
	public abstract class BaseScene : ScriptableObject
	{
		[Token(Token = "0x1700027B")]
		public abstract string Name
		{
			[Token(Token = "0x6000F22")]
			get;
		}

		[Token(Token = "0x6000F23")]
		public abstract Scene Load(LoadSceneMode loadMode);

		[Token(Token = "0x6000F24")]
		public abstract void Unload();

		[Token(Token = "0x6000F25")]
		public abstract void LoadAsync(LoadSceneMode loadMode, Action<Scene> onFinish);

		[Token(Token = "0x6000F26")]
		public abstract void UnloadAsync(Action onFinish);

		[Token(Token = "0x6000F27")]
		[Address(RVA = "0xB25E0C", Offset = "0xB25E0C", VA = "0xB25E0C")]
		protected BaseScene()
		{
		}
	}
	[Token(Token = "0x20002AA")]
	public class AddressableScene : BaseScene
	{
		[Token(Token = "0x20002AB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x871314", Offset = "0x871314")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x4000C0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AddressableScene <>4__this;

			[Token(Token = "0x4000C0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action<Scene> onFinish;

			[Token(Token = "0x6000F2F")]
			[Address(RVA = "0xB25C08", Offset = "0xB25C08", VA = "0xB25C08")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x6000F30")]
			[Address(RVA = "0xB25E40", Offset = "0xB25E40", VA = "0xB25E40")]
			internal void <LoadAsync>b__0(AsyncOperationHandle<SceneInstance> op)
			{
			}
		}

		[Token(Token = "0x20002AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x871324", Offset = "0x871324")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x4000C0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AddressableScene <>4__this;

			[Token(Token = "0x4000C0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action onFinish;

			[Token(Token = "0x6000F31")]
			[Address(RVA = "0xB25DFC", Offset = "0xB25DFC", VA = "0xB25DFC")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x6000F32")]
			[Address(RVA = "0xB25E14", Offset = "0xB25E14", VA = "0xB25E14")]
			internal void <UnloadAsync>b__0(AsyncOperationHandle<SceneInstance> a)
			{
			}
		}

		[Token(Token = "0x4000C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string sceneName;

		[Token(Token = "0x4000C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AssetReference sceneAssetReference;

		[Token(Token = "0x4000C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AsyncOperationHandle<SceneInstance> op;

		[Token(Token = "0x4000C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool isLoaded;

		[Token(Token = "0x1700027C")]
		public override string Name
		{
			[Token(Token = "0x6000F28")]
			[Address(RVA = "0xB259EC", Offset = "0xB259EC", VA = "0xB259EC", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F29")]
		[Address(RVA = "0xB259F4", Offset = "0xB259F4", VA = "0xB259F4")]
		public void Setup(string sceneName, AssetReference assetReference)
		{
		}

		[Token(Token = "0x6000F2A")]
		[Address(RVA = "0xB25A2C", Offset = "0xB25A2C", VA = "0xB25A2C", Slot = "5")]
		public override Scene Load(LoadSceneMode loadMode)
		{
			return default(Scene);
		}

		[Token(Token = "0x6000F2B")]
		[Address(RVA = "0xB25A8C", Offset = "0xB25A8C", VA = "0xB25A8C", Slot = "7")]
		public override void LoadAsync(LoadSceneMode loadMode, Action<Scene> onFinish)
		{
		}

		[Token(Token = "0x6000F2C")]
		[Address(RVA = "0xB25C10", Offset = "0xB25C10", VA = "0xB25C10", Slot = "6")]
		public override void Unload()
		{
		}

		[Token(Token = "0x6000F2D")]
		[Address(RVA = "0xB25C70", Offset = "0xB25C70", VA = "0xB25C70", Slot = "8")]
		public override void UnloadAsync(Action onFinish)
		{
		}

		[Token(Token = "0x6000F2E")]
		[Address(RVA = "0xB25E04", Offset = "0xB25E04", VA = "0xB25E04")]
		public AddressableScene()
		{
		}
	}
	[Token(Token = "0x20002AD")]
	public static class SceneManager
	{
		[Token(Token = "0x20002AE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x871334", Offset = "0x871334")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x4000C11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public BaseScene scene;

			[Token(Token = "0x4000C12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action<Scene> onFinish;

			[Token(Token = "0x6000F39")]
			[Address(RVA = "0xB25F14", Offset = "0xB25F14", VA = "0xB25F14")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x6000F3A")]
			[Address(RVA = "0xB262C8", Offset = "0xB262C8", VA = "0xB262C8")]
			internal void <LoadSceneAsync>b__0(Scene loadedScene)
			{
			}
		}

		[Token(Token = "0x20002AF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x871344", Offset = "0x871344")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x4000C13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public BaseScene scene;

			[Token(Token = "0x4000C14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action onFinish;

			[Token(Token = "0x6000F3B")]
			[Address(RVA = "0xB25F1C", Offset = "0xB25F1C", VA = "0xB25F1C")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x6000F3C")]
			[Address(RVA = "0xB26344", Offset = "0xB26344", VA = "0xB26344")]
			internal void <UnloadSceneAsync>b__0()
			{
			}
		}

		[Token(Token = "0x20002B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x871354", Offset = "0x871354")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x4000C15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int scenesToUnload;

			[Token(Token = "0x4000C16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action onFinish;

			[Token(Token = "0x4000C17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action <>9__0;

			[Token(Token = "0x6000F3D")]
			[Address(RVA = "0xB260DC", Offset = "0xB260DC", VA = "0xB260DC")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x6000F3E")]
			[Address(RVA = "0xB263B0", Offset = "0xB263B0", VA = "0xB263B0")]
			internal void <UnloadAllScenes>b__0()
			{
			}
		}

		[Token(Token = "0x4000C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<BaseScene> loadedScenes;

		[Token(Token = "0x4000C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int unloadedScenesCount;

		[Token(Token = "0x6000F33")]
		[Address(RVA = "0xB12B4C", Offset = "0xB12B4C", VA = "0xB12B4C")]
		public static void LoadSceneAsync(BaseScene scene, LoadSceneMode loadMode, [Optional] Action<Scene> onFinish)
		{
		}

		[Token(Token = "0x6000F34")]
		[Address(RVA = "0xB124A4", Offset = "0xB124A4", VA = "0xB124A4")]
		public static void UnloadSceneAsync(BaseScene scene, [Optional] Action onFinish)
		{
		}

		[Token(Token = "0x6000F35")]
		[Address(RVA = "0xB25F24", Offset = "0xB25F24", VA = "0xB25F24")]
		public static void UnloadAllScenes(Action onFinish)
		{
		}

		[Token(Token = "0x6000F36")]
		[Address(RVA = "0xB260E4", Offset = "0xB260E4", VA = "0xB260E4")]
		private static void OnSceneLoaded(BaseScene scene, Scene loadedScene, [Optional] Action<Scene> onFinish)
		{
		}

		[Token(Token = "0x6000F37")]
		[Address(RVA = "0xB261A4", Offset = "0xB261A4", VA = "0xB261A4")]
		private static void OnSceneUnloaded(BaseScene scene, [Optional] Action onFinish)
		{
		}
	}
	[Token(Token = "0x20002B1")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x871364", Offset = "0x871364")]
	public class SceneRepresentation : ScriptableObject
	{
		[Token(Token = "0x4000C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BaseScene scene;

		[Token(Token = "0x4000C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private BaseScene sceneLow;

		[Token(Token = "0x4000C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SceneNames sceneName;

		[Token(Token = "0x4000C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AssetPack sceneAssetPack;

		[Token(Token = "0x1700027D")]
		public BaseScene Scene
		{
			[Token(Token = "0x6000F3F")]
			[Address(RVA = "0xB12434", Offset = "0xB12434", VA = "0xB12434")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700027E")]
		public AssetPack SceneAssetPack
		{
			[Token(Token = "0x6000F40")]
			[Address(RVA = "0xB26488", Offset = "0xB26488", VA = "0xB26488")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700027F")]
		public SceneNames SceneName
		{
			[Token(Token = "0x6000F41")]
			[Address(RVA = "0xB26490", Offset = "0xB26490", VA = "0xB26490")]
			get
			{
				return default(SceneNames);
			}
		}

		[Token(Token = "0x6000F42")]
		[Address(RVA = "0xB26498", Offset = "0xB26498", VA = "0xB26498", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000F43")]
		[Address(RVA = "0xB26528", Offset = "0xB26528", VA = "0xB26528")]
		public SceneRepresentation()
		{
		}
	}
}
namespace ThreeDAR.EventQueueSystem
{
	[Token(Token = "0x20002B2")]
	public class EventQueue<T> where T : IStep
	{
		[Token(Token = "0x4000C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Queue<T> steps;

		[Token(Token = "0x4000C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T currentStep;

		[Token(Token = "0x14000019")]
		public event Action<Result> OnQueueFinish
		{
			[Token(Token = "0x6000F44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87DB38", Offset = "0x87DB38")]
			add
			{
			}
			[Token(Token = "0x6000F45")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87DB48", Offset = "0x87DB48")]
			remove
			{
			}
		}

		[Token(Token = "0x6000F46")]
		public EventQueue()
		{
		}

		[Token(Token = "0x6000F47")]
		public void Execute()
		{
		}

		[Token(Token = "0x6000F48")]
		public void AddStep(T step)
		{
		}

		[Token(Token = "0x6000F49")]
		private void ExecuteCurrentStep()
		{
		}

		[Token(Token = "0x6000F4A")]
		private void OnStepExecutionFinish(Result result)
		{
		}
	}
	[Token(Token = "0x20002B3")]
	public interface IStep
	{
		[Token(Token = "0x17000280")]
		Action<Result> OnStepFinish
		{
			[Token(Token = "0x6000F4B")]
			get;
			[Token(Token = "0x6000F4C")]
			set;
		}

		[Token(Token = "0x6000F4D")]
		void Execute();
	}
	[Token(Token = "0x20002B4")]
	public enum Result
	{
		[Token(Token = "0x4000C20")]
		Success,
		[Token(Token = "0x4000C21")]
		Failure
	}
}
namespace ThreeDAR.BuildPipeline
{
	[Token(Token = "0x20002B5")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8713A0", Offset = "0x8713A0")]
	public class BuildOutput : ScriptableObject
	{
		[Token(Token = "0x4000C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string buildDate;

		[Token(Token = "0x17000281")]
		public string BuildDate
		{
			[Token(Token = "0x6000F4E")]
			[Address(RVA = "0xB259D4", Offset = "0xB259D4", VA = "0xB259D4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F4F")]
			[Address(RVA = "0xB259DC", Offset = "0xB259DC", VA = "0xB259DC")]
			set
			{
			}
		}

		[Token(Token = "0x6000F50")]
		[Address(RVA = "0xB259E4", Offset = "0xB259E4", VA = "0xB259E4")]
		public BuildOutput()
		{
		}
	}
}
namespace ThreeDAR.AssetManagement
{
	[Token(Token = "0x20002B6")]
	public static class AssetManager
	{
		[Token(Token = "0x20002B7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8713DC", Offset = "0x8713DC")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x4000C24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action onFinish;

			[Token(Token = "0x4000C25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action <>9__0;

			[Token(Token = "0x6000F5F")]
			[Address(RVA = "0xB22BD4", Offset = "0xB22BD4", VA = "0xB22BD4")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x6000F60")]
			[Address(RVA = "0xB22FE8", Offset = "0xB22FE8", VA = "0xB22FE8")]
			internal void <InterruptAllLoadOperations>b__0()
			{
			}
		}

		[Token(Token = "0x20002B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8713EC", Offset = "0x8713EC")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x4000C26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action onFinish;

			[Token(Token = "0x6000F61")]
			[Address(RVA = "0xB22C7C", Offset = "0xB22C7C", VA = "0xB22C7C")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x6000F62")]
			[Address(RVA = "0xB23050", Offset = "0xB23050", VA = "0xB23050")]
			internal void <StartOperation>b__0()
			{
			}
		}

		[Token(Token = "0x4000C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AssetOperationsCache operationsCache;

		[Token(Token = "0x6000F51")]
		[Address(RVA = "0xB12558", Offset = "0xB12558", VA = "0xB12558")]
		public static void LoadAssetPack(AssetPack assetPack, LoadType loadType, Action onFinish)
		{
		}

		[Token(Token = "0x6000F52")]
		[Address(RVA = "0xB12948", Offset = "0xB12948", VA = "0xB12948")]
		public static void UnloadAssetPack(AssetPack assetPack, LoadType loadType, Action onFinish)
		{
		}

		[Token(Token = "0x6000F53")]
		[Address(RVA = "0xB227D8", Offset = "0xB227D8", VA = "0xB227D8")]
		public static void UnloadAllAssetPacksExceptGlobal(Action onFinish)
		{
		}

		[Token(Token = "0x6000F54")]
		[Address(RVA = "0xB22864", Offset = "0xB22864", VA = "0xB22864")]
		public static void UnloadAllSceneAssets(Action onFinish)
		{
		}

		[Token(Token = "0x6000F55")]
		[Address(RVA = "0xB228F0", Offset = "0xB228F0", VA = "0xB228F0")]
		public static void InterruptAllLoadOperations(Action onFinish)
		{
		}

		[Token(Token = "0x6000F56")]
		[Address(RVA = "0xB22BDC", Offset = "0xB22BDC", VA = "0xB22BDC")]
		public static bool IsAssetPackLoaded(AssetPack assetPack)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F57")]
		[Address(RVA = "0xB223EC", Offset = "0xB223EC", VA = "0xB223EC")]
		private static void StartOperation(IAssetOperation op, Action onFinish)
		{
		}

		[Token(Token = "0x6000F58")]
		[Address(RVA = "0xB222F4", Offset = "0xB222F4", VA = "0xB222F4")]
		private static IAssetOperation GetLoadOperation(LoadType loadType, AssetPack assetPack)
		{
			return null;
		}

		[Token(Token = "0x6000F59")]
		[Address(RVA = "0xB22748", Offset = "0xB22748", VA = "0xB22748")]
		private static IAssetOperation GetUnloadOperation(LoadType loadType, AssetPack assetPack)
		{
			return null;
		}

		[Token(Token = "0x6000F5A")]
		[Address(RVA = "0xB22098", Offset = "0xB22098", VA = "0xB22098")]
		private static bool CanPackBeLoaded(AssetPack assetPack)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F5B")]
		[Address(RVA = "0xB22608", Offset = "0xB22608", VA = "0xB22608")]
		private static bool CanBePackUnloaded(string assetPackId)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F5C")]
		[Address(RVA = "0xB22D84", Offset = "0xB22D84", VA = "0xB22D84")]
		private static void OnOperationInterrupted(Action onFinish)
		{
		}

		[Token(Token = "0x6000F5D")]
		[Address(RVA = "0xB22E3C", Offset = "0xB22E3C", VA = "0xB22E3C")]
		private static void UnloadInterruptedLoads(Action onFinish)
		{
		}
	}
	[Token(Token = "0x20002B9")]
	public class LoadAssetAllAtOnceOperation : IAssetOperation
	{
		[Token(Token = "0x4000C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private AssetPack assetPackToLoad;

		[Token(Token = "0x4000C28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private AssetOperationsCache cache;

		[Token(Token = "0x4000C29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int assetLoadedCount;

		[Token(Token = "0x4000C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool interrupted;

		[Token(Token = "0x1400001A")]
		public event Action onOperationFinished
		{
			[Token(Token = "0x6000F63")]
			[Address(RVA = "0xB23184", Offset = "0xB23184", VA = "0xB23184", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87DB58", Offset = "0x87DB58")]
			add
			{
			}
			[Token(Token = "0x6000F64")]
			[Address(RVA = "0xB23228", Offset = "0xB23228", VA = "0xB23228", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87DB68", Offset = "0x87DB68")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001B")]
		public event Action onOperationInterrupted
		{
			[Token(Token = "0x6000F65")]
			[Address(RVA = "0xB232CC", Offset = "0xB232CC", VA = "0xB232CC", Slot = "6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87DB78", Offset = "0x87DB78")]
			add
			{
			}
			[Token(Token = "0x6000F66")]
			[Address(RVA = "0xB23370", Offset = "0xB23370", VA = "0xB23370", Slot = "7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87DB88", Offset = "0x87DB88")]
			remove
			{
			}
		}

		[Token(Token = "0x6000F67")]
		[Address(RVA = "0xB22C84", Offset = "0xB22C84", VA = "0xB22C84")]
		public LoadAssetAllAtOnceOperation(AssetPack assetPack)
		{
		}

		[Token(Token = "0x6000F68")]
		[Address(RVA = "0xB23414", Offset = "0xB23414", VA = "0xB23414", Slot = "8")]
		public void Setup(AssetOperationsCache cache)
		{
		}

		[Token(Token = "0x6000F69")]
		[Address(RVA = "0xB23424", Offset = "0xB23424", VA = "0xB23424", Slot = "9")]
		public void Interrupt()
		{
		}

		[Token(Token = "0x6000F6A")]
		[Address(RVA = "0xB23430", Offset = "0xB23430", VA = "0xB23430", Slot = "10")]
		public void Perform()
		{
		}

		[Token(Token = "0x6000F6B")]
		[Address(RVA = "0xB23540", Offset = "0xB23540", VA = "0xB23540")]
		private void OnAssetLoaded()
		{
		}

		[Token(Token = "0x6000F6C")]
		[Address(RVA = "0xB235A8", Offset = "0xB235A8", VA = "0xB235A8")]
		private void InterruptOperation()
		{
		}

		[Token(Token = "0x6000F6D")]
		[Address(RVA = "0xB23678", Offset = "0xB23678", VA = "0xB23678")]
		private void FinishOperation()
		{
		}
	}
	[Token(Token = "0x20002BA")]
	public class LoadAssetOneByOneOperation : IAssetOperation, IRepeatable
	{
		[Token(Token = "0x4000C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private AssetPack assetPackToLoad;

		[Token(Token = "0x4000C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private AssetOperationsCache cache;

		[Token(Token = "0x4000C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int assetLoadedCount;

		[Token(Token = "0x4000C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int currentAssetIndex;

		[Token(Token = "0x4000C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float elapsedTime;

		[Token(Token = "0x4000C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool hasToInterrupt;

		[Token(Token = "0x1400001C")]
		public event Action onOperationFinished
		{
			[Token(Token = "0x6000F6E")]
			[Address(RVA = "0xB23748", Offset = "0xB23748", VA = "0xB23748", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87DB98", Offset = "0x87DB98")]
			add
			{
			}
			[Token(Token = "0x6000F6F")]
			[Address(RVA = "0xB237EC", Offset = "0xB237EC", VA = "0xB237EC", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87DBA8", Offset = "0x87DBA8")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001D")]
		public event Action onOperationInterrupted
		{
			[Token(Token = "0x6000F70")]
			[Address(RVA = "0xB23890", Offset = "0xB23890", VA = "0xB23890", Slot = "6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87DBB8", Offset = "0x87DBB8")]
			add
			{
			}
			[Token(Token = "0x6000F71")]
			[Address(RVA = "0xB23934", Offset = "0xB23934", VA = "0xB23934", Slot = "7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87DBC8", Offset = "0x87DBC8")]
			remove
			{
			}
		}

		[Token(Token = "0x6000F72")]
		[Address(RVA = "0xB22CB0", Offset = "0xB22CB0", VA = "0xB22CB0")]
		public LoadAssetOneByOneOperation(AssetPack assetPack)
		{
		}

		[Token(Token = "0x6000F73")]
		[Address(RVA = "0xB239D8", Offset = "0xB239D8", VA = "0xB239D8", Slot = "8")]
		public void Setup(AssetOperationsCache cache)
		{
		}

		[Token(Token = "0x6000F74")]
		[Address(RVA = "0xB239E8", Offset = "0xB239E8", VA = "0xB239E8", Slot = "11")]
		public void Tick(float deltaTime)
		{
		}

		[Token(Token = "0x6000F75")]
		[Address(RVA = "0xB23B34", Offset = "0xB23B34", VA = "0xB23B34", Slot = "9")]
		public void Interrupt()
		{
		}

		[Token(Token = "0x6000F76")]
		[Address(RVA = "0xB23BB0", Offset = "0xB23BB0", VA = "0xB23BB0", Slot = "10")]
		public void Perform()
		{
		}

		[Token(Token = "0x6000F77")]
		[Address(RVA = "0xB23A10", Offset = "0xB23A10", VA = "0xB23A10")]
		private void LoadNextAsset()
		{
		}

		[Token(Token = "0x6000F78")]
		[Address(RVA = "0xB23D68", Offset = "0xB23D68", VA = "0xB23D68")]
		private void OnAssetLoaded()
		{
		}

		[Token(Token = "0x6000F79")]
		[Address(RVA = "0xB23C4C", Offset = "0xB23C4C", VA = "0xB23C4C")]
		private void InterrupAssetLoading()
		{
		}

		[Token(Token = "0x6000F7A")]
		[Address(RVA = "0xB23E28", Offset = "0xB23E28", VA = "0xB23E28")]
		private void FinishOperation()
		{
		}
	}
	[Token(Token = "0x20002BB")]
	public class UnloadAllAssetsExceptGlobalOperation : IAssetOperation
	{
		[Token(Token = "0x4000C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AssetOperationsCache cacheReference;

		[Token(Token = "0x1400001E")]
		public event Action onOperationFinished
		{
			[Token(Token = "0x6000F7B")]
			[Address(RVA = "0xB23F10", Offset = "0xB23F10", VA = "0xB23F10", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87DBD8", Offset = "0x87DBD8")]
			add
			{
			}
			[Token(Token = "0x6000F7C")]
			[Address(RVA = "0xB23FB4", Offset = "0xB23FB4", VA = "0xB23FB4", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87DBE8", Offset = "0x87DBE8")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001F")]
		public event Action onOperationInterrupted
		{
			[Token(Token = "0x6000F7D")]
			[Address(RVA = "0xB24058", Offset = "0xB24058", VA = "0xB24058", Slot = "6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87DBF8", Offset = "0x87DBF8")]
			add
			{
			}
			[Token(Token = "0x6000F7E")]
			[Address(RVA = "0xB240FC", Offset = "0xB240FC", VA = "0xB240FC", Slot = "7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87DC08", Offset = "0x87DC08")]
			remove
			{
			}
		}

		[Token(Token = "0x6000F7F")]
		[Address(RVA = "0xB241A0", Offset = "0xB241A0", VA = "0xB241A0", Slot = "8")]
		public void Setup(AssetOperationsCache cache)
		{
		}

		[Token(Token = "0x6000F80")]
		[Address(RVA = "0xB241A8", Offset = "0xB241A8", VA = "0xB241A8", Slot = "9")]
		public void Interrupt()
		{
		}

		[Token(Token = "0x6000F81")]
		[Address(RVA = "0xB24208", Offset = "0xB24208", VA = "0xB24208", Slot = "10")]
		public void Perform()
		{
		}

		[Token(Token = "0x6000F82")]
		[Address(RVA = "0xB2285C", Offset = "0xB2285C", VA = "0xB2285C")]
		public UnloadAllAssetsExceptGlobalOperation()
		{
		}
	}
	[Token(Token = "0x20002BC")]
	public class UnloadAllSceneAssets : IAssetOperation
	{
		[Token(Token = "0x4000C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AssetOperationsCache cacheReference;

		[Token(Token = "0x14000020")]
		public event Action onOperationFinished
		{
			[Token(Token = "0x6000F83")]
			[Address(RVA = "0xB2439C", Offset = "0xB2439C", VA = "0xB2439C", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87DC18", Offset = "0x87DC18")]
			add
			{
			}
			[Token(Token = "0x6000F84")]
			[Address(RVA = "0xB24440", Offset = "0xB24440", VA = "0xB24440", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87DC28", Offset = "0x87DC28")]
			remove
			{
			}
		}

		[Token(Token = "0x14000021")]
		public event Action onOperationInterrupted
		{
			[Token(Token = "0x6000F85")]
			[Address(RVA = "0xB244E4", Offset = "0xB244E4", VA = "0xB244E4", Slot = "6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87DC38", Offset = "0x87DC38")]
			add
			{
			}
			[Token(Token = "0x6000F86")]
			[Address(RVA = "0xB24588", Offset = "0xB24588", VA = "0xB24588", Slot = "7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87DC48", Offset = "0x87DC48")]
			remove
			{
			}
		}

		[Token(Token = "0x6000F87")]
		[Address(RVA = "0xB2462C", Offset = "0xB2462C", VA = "0xB2462C", Slot = "8")]
		public void Setup(AssetOperationsCache cache)
		{
		}

		[Token(Token = "0x6000F88")]
		[Address(RVA = "0xB24634", Offset = "0xB24634", VA = "0xB24634", Slot = "9")]
		public void Interrupt()
		{
		}

		[Token(Token = "0x6000F89")]
		[Address(RVA = "0xB24694", Offset = "0xB24694", VA = "0xB24694", Slot = "10")]
		public void Perform()
		{
		}

		[Token(Token = "0x6000F8A")]
		[Address(RVA = "0xB228E8", Offset = "0xB228E8", VA = "0xB228E8")]
		public UnloadAllSceneAssets()
		{
		}
	}
	[Token(Token = "0x20002BD")]
	public class UnloadAssetAllAtOnceOperation : IAssetOperation
	{
		[Token(Token = "0x4000C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AssetPack assetPackToUnload;

		[Token(Token = "0x4000C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AssetOperationsCache cache;

		[Token(Token = "0x14000022")]
		public event Action onOperationFinished
		{
			[Token(Token = "0x6000F8B")]
			[Address(RVA = "0xB24830", Offset = "0xB24830", VA = "0xB24830", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87DC58", Offset = "0x87DC58")]
			add
			{
			}
			[Token(Token = "0x6000F8C")]
			[Address(RVA = "0xB248D4", Offset = "0xB248D4", VA = "0xB248D4", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87DC68", Offset = "0x87DC68")]
			remove
			{
			}
		}

		[Token(Token = "0x14000023")]
		public event Action onOperationInterrupted
		{
			[Token(Token = "0x6000F8D")]
			[Address(RVA = "0xB24978", Offset = "0xB24978", VA = "0xB24978", Slot = "6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87DC78", Offset = "0x87DC78")]
			add
			{
			}
			[Token(Token = "0x6000F8E")]
			[Address(RVA = "0xB24A1C", Offset = "0xB24A1C", VA = "0xB24A1C", Slot = "7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87DC88", Offset = "0x87DC88")]
			remove
			{
			}
		}

		[Token(Token = "0x6000F8F")]
		[Address(RVA = "0xB22CDC", Offset = "0xB22CDC", VA = "0xB22CDC")]
		public UnloadAssetAllAtOnceOperation(AssetPack assetPack)
		{
		}

		[Token(Token = "0x6000F90")]
		[Address(RVA = "0xB24AC0", Offset = "0xB24AC0", VA = "0xB24AC0", Slot = "8")]
		public void Setup(AssetOperationsCache cache)
		{
		}

		[Token(Token = "0x6000F91")]
		[Address(RVA = "0xB24AC8", Offset = "0xB24AC8", VA = "0xB24AC8", Slot = "9")]
		public void Interrupt()
		{
		}

		[Token(Token = "0x6000F92")]
		[Address(RVA = "0xB24B28", Offset = "0xB24B28", VA = "0xB24B28", Slot = "10")]
		public void Perform()
		{
		}
	}
	[Token(Token = "0x20002BE")]
	public class UnloadAssetOneByOneOperation : IAssetOperation, IRepeatable
	{
		[Token(Token = "0x4000C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AssetPack assetPackToUnload;

		[Token(Token = "0x4000C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AssetOperationsCache cache;

		[Token(Token = "0x4000C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool unload;

		[Token(Token = "0x4000C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int currentAssetIndex;

		[Token(Token = "0x14000024")]
		public event Action onOperationFinished
		{
			[Token(Token = "0x6000F93")]
			[Address(RVA = "0xB24C04", Offset = "0xB24C04", VA = "0xB24C04", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87DC98", Offset = "0x87DC98")]
			add
			{
			}
			[Token(Token = "0x6000F94")]
			[Address(RVA = "0xB24CA8", Offset = "0xB24CA8", VA = "0xB24CA8", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87DCA8", Offset = "0x87DCA8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000025")]
		public event Action onOperationInterrupted
		{
			[Token(Token = "0x6000F95")]
			[Address(RVA = "0xB24D4C", Offset = "0xB24D4C", VA = "0xB24D4C", Slot = "6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87DCB8", Offset = "0x87DCB8")]
			add
			{
			}
			[Token(Token = "0x6000F96")]
			[Address(RVA = "0xB24DF0", Offset = "0xB24DF0", VA = "0xB24DF0", Slot = "7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87DCC8", Offset = "0x87DCC8")]
			remove
			{
			}
		}

		[Token(Token = "0x6000F97")]
		[Address(RVA = "0xB22D08", Offset = "0xB22D08", VA = "0xB22D08")]
		public UnloadAssetOneByOneOperation(AssetPack assetPack)
		{
		}

		[Token(Token = "0x6000F98")]
		[Address(RVA = "0xB24E94", Offset = "0xB24E94", VA = "0xB24E94", Slot = "8")]
		public void Setup(AssetOperationsCache cache)
		{
		}

		[Token(Token = "0x6000F99")]
		[Address(RVA = "0xB24ED4", Offset = "0xB24ED4", VA = "0xB24ED4", Slot = "9")]
		public void Interrupt()
		{
		}

		[Token(Token = "0x6000F9A")]
		[Address(RVA = "0xB24F34", Offset = "0xB24F34", VA = "0xB24F34", Slot = "10")]
		public void Perform()
		{
		}

		[Token(Token = "0x6000F9B")]
		[Address(RVA = "0xB24F40", Offset = "0xB24F40", VA = "0xB24F40", Slot = "11")]
		public void Tick(float deltaTime)
		{
		}

		[Token(Token = "0x6000F9C")]
		[Address(RVA = "0xB24FBC", Offset = "0xB24FBC", VA = "0xB24FBC")]
		private void FinishOperation()
		{
		}
	}
	[Token(Token = "0x20002BF")]
	public class UnloadInterruptedAssetsOperation : IAssetOperation
	{
		[Token(Token = "0x4000C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AssetOperationsCache cache;

		[Token(Token = "0x14000026")]
		public event Action onOperationFinished
		{
			[Token(Token = "0x6000F9D")]
			[Address(RVA = "0xB2506C", Offset = "0xB2506C", VA = "0xB2506C", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87DCD8", Offset = "0x87DCD8")]
			add
			{
			}
			[Token(Token = "0x6000F9E")]
			[Address(RVA = "0xB25110", Offset = "0xB25110", VA = "0xB25110", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87DCE8", Offset = "0x87DCE8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000027")]
		public event Action onOperationInterrupted
		{
			[Token(Token = "0x6000F9F")]
			[Address(RVA = "0xB251B4", Offset = "0xB251B4", VA = "0xB251B4", Slot = "6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87DCF8", Offset = "0x87DCF8")]
			add
			{
			}
			[Token(Token = "0x6000FA0")]
			[Address(RVA = "0xB25258", Offset = "0xB25258", VA = "0xB25258", Slot = "7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87DD08", Offset = "0x87DD08")]
			remove
			{
			}
		}

		[Token(Token = "0x6000FA1")]
		[Address(RVA = "0xB252FC", Offset = "0xB252FC", VA = "0xB252FC", Slot = "8")]
		public void Setup(AssetOperationsCache cache)
		{
		}

		[Token(Token = "0x6000FA2")]
		[Address(RVA = "0xB25304", Offset = "0xB25304", VA = "0xB25304", Slot = "9")]
		public void Interrupt()
		{
		}

		[Token(Token = "0x6000FA3")]
		[Address(RVA = "0xB25364", Offset = "0xB25364", VA = "0xB25364", Slot = "10")]
		public void Perform()
		{
		}

		[Token(Token = "0x6000FA4")]
		[Address(RVA = "0xB22EC0", Offset = "0xB22EC0", VA = "0xB22EC0")]
		public UnloadInterruptedAssetsOperation()
		{
		}
	}
	[Token(Token = "0x20002C0")]
	public class AssetOperationsCache
	{
		[Token(Token = "0x4000C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Dictionary<string, IAssetOperation> loadingOperations;

		[Token(Token = "0x4000C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Dictionary<string, AssetPack> loadedAssetPacks;

		[Token(Token = "0x4000C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Dictionary<string, AssetPack> interruptedAssetPacks;

		[Token(Token = "0x6000FA5")]
		[Address(RVA = "0xB22F30", Offset = "0xB22F30", VA = "0xB22F30")]
		public AssetOperationsCache()
		{
		}
	}
	[Token(Token = "0x20002C1")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8713FC", Offset = "0x8713FC")]
	public class AssetPack : ScriptableObject
	{
		[Token(Token = "0x4000C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<BaseAsset> assets;

		[Token(Token = "0x4000C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8787F8", Offset = "0x8787F8")]
		private bool isGlobalAsset;

		[Token(Token = "0x4000C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x878844", Offset = "0x878844")]
		private bool isDialogAsset;

		[Token(Token = "0x17000282")]
		public bool IsGlobalAsset
		{
			[Token(Token = "0x6000FA6")]
			[Address(RVA = "0xB23064", Offset = "0xB23064", VA = "0xB23064")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000FA7")]
			[Address(RVA = "0xB2306C", Offset = "0xB2306C", VA = "0xB2306C")]
			set
			{
			}
		}

		[Token(Token = "0x17000283")]
		public bool IsDialogAsset
		{
			[Token(Token = "0x6000FA8")]
			[Address(RVA = "0xB23078", Offset = "0xB23078", VA = "0xB23078")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000FA9")]
			[Address(RVA = "0xB23080", Offset = "0xB23080", VA = "0xB23080")]
			set
			{
			}
		}

		[Token(Token = "0x17000284")]
		public int AssetCount
		{
			[Token(Token = "0x6000FAA")]
			[Address(RVA = "0xB22D34", Offset = "0xB22D34", VA = "0xB22D34")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000285")]
		public string Id
		{
			[Token(Token = "0x6000FAB")]
			[Address(RVA = "0xB22600", Offset = "0xB22600", VA = "0xB22600")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FAC")]
		[Address(RVA = "0xB2308C", Offset = "0xB2308C", VA = "0xB2308C")]
		public BaseAsset GetAsset(int index)
		{
			return null;
		}

		[Token(Token = "0x6000FAD")]
		[Address(RVA = "0xB2317C", Offset = "0xB2317C", VA = "0xB2317C")]
		public AssetPack()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002C2")]
	public class AddressableAsset : BaseAsset
	{
		[Token(Token = "0x20002C3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x871438", Offset = "0x871438")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x4000C52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AddressableAsset <>4__this;

			[Token(Token = "0x4000C53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action onFinish;

			[Token(Token = "0x6000FB3")]
			[Address(RVA = "0xB21F6C", Offset = "0xB21F6C", VA = "0xB21F6C")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x6000FB4")]
			[Address(RVA = "0xB2202C", Offset = "0xB2202C", VA = "0xB2202C")]
			internal void <LoadAsync>b__0(AsyncOperationHandle<UnityEngine.Object> op)
			{
			}
		}

		[Token(Token = "0x4000C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AssetReference assetReference;

		[Token(Token = "0x4000C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string assetName;

		[Token(Token = "0x4000C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AsyncOperationHandle<UnityEngine.Object> operationHandle;

		[Token(Token = "0x4000C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool isLoaded;

		[Token(Token = "0x17000286")]
		public override string Name
		{
			[Token(Token = "0x6000FAE")]
			[Address(RVA = "0xB21DEC", Offset = "0xB21DEC", VA = "0xB21DEC", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FAF")]
		[Address(RVA = "0xB21DF4", Offset = "0xB21DF4", VA = "0xB21DF4")]
		public void Setup(string assetName, AssetReference assetReference)
		{
		}

		[Token(Token = "0x6000FB0")]
		[Address(RVA = "0xB21E2C", Offset = "0xB21E2C", VA = "0xB21E2C", Slot = "6")]
		public override void LoadAsync(Action onFinish)
		{
		}

		[Token(Token = "0x6000FB1")]
		[Address(RVA = "0xB21F74", Offset = "0xB21F74", VA = "0xB21F74", Slot = "5")]
		public override void Unload()
		{
		}

		[Token(Token = "0x6000FB2")]
		[Address(RVA = "0xB2201C", Offset = "0xB2201C", VA = "0xB2201C")]
		public AddressableAsset()
		{
		}
	}
	[Token(Token = "0x20002C4")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x871448", Offset = "0x871448")]
	public class WwiseBankAsset : BaseAsset
	{
		[Token(Token = "0x20002C5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x871484", Offset = "0x871484")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x4000C58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public WwiseBankAsset <>4__this;

			[Token(Token = "0x4000C59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action onFinish;

			[Token(Token = "0x6000FBC")]
			[Address(RVA = "0xB257BC", Offset = "0xB257BC", VA = "0xB257BC")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x6000FBD")]
			[Address(RVA = "0xB259B4", Offset = "0xB259B4", VA = "0xB259B4")]
			internal void <LoadAsync>b__0(uint a, IntPtr b, AKRESULT c, object d)
			{
			}
		}

		[Token(Token = "0x4000C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Bank data;

		[Token(Token = "0x4000C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool decodeBank;

		[Token(Token = "0x4000C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[SerializeField]
		private bool saveDecodedBank;

		[Token(Token = "0x4000C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		private bool isLoaded;

		[Token(Token = "0x17000287")]
		public override string Name
		{
			[Token(Token = "0x6000FB5")]
			[Address(RVA = "0xB254F0", Offset = "0xB254F0", VA = "0xB254F0", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FB6")]
		[Address(RVA = "0xB25510", Offset = "0xB25510", VA = "0xB25510")]
		public void Load(Action onFinish)
		{
		}

		[Token(Token = "0x6000FB7")]
		[Address(RVA = "0xB255F4", Offset = "0xB255F4", VA = "0xB255F4", Slot = "6")]
		public override void LoadAsync(Action onFinish)
		{
		}

		[Token(Token = "0x6000FB8")]
		[Address(RVA = "0xB257C4", Offset = "0xB257C4", VA = "0xB257C4", Slot = "5")]
		public override void Unload()
		{
		}

		[Token(Token = "0x6000FB9")]
		[Address(RVA = "0xB257F4", Offset = "0xB257F4", VA = "0xB257F4")]
		private void OnBankLoaded(uint in_bankID, IntPtr in_InMemoryBankPtr, AKRESULT in_eLoadResult, object in_Cookie, Action onFinish)
		{
		}

		[Token(Token = "0x6000FBA")]
		[Address(RVA = "0xB2594C", Offset = "0xB2594C", VA = "0xB2594C")]
		public WwiseBankAsset Clone()
		{
			return null;
		}

		[Token(Token = "0x6000FBB")]
		[Address(RVA = "0xB259AC", Offset = "0xB259AC", VA = "0xB259AC")]
		public WwiseBankAsset()
		{
		}
	}
	[Token(Token = "0x20002C6")]
	public abstract class BaseAsset : ScriptableObject
	{
		[Token(Token = "0x17000288")]
		public abstract string Name
		{
			[Token(Token = "0x6000FBE")]
			get;
		}

		[Token(Token = "0x6000FBF")]
		public abstract void Unload();

		[Token(Token = "0x6000FC0")]
		public abstract void LoadAsync(Action onFinish);

		[Token(Token = "0x6000FC1")]
		[Address(RVA = "0xB22024", Offset = "0xB22024", VA = "0xB22024")]
		protected BaseAsset()
		{
		}
	}
	[Token(Token = "0x20002C7")]
	public interface IAssetOperation
	{
		[Token(Token = "0x14000028")]
		event Action onOperationFinished;

		[Token(Token = "0x14000029")]
		event Action onOperationInterrupted;

		[Token(Token = "0x6000FC6")]
		void Setup(AssetOperationsCache cache);

		[Token(Token = "0x6000FC7")]
		void Interrupt();

		[Token(Token = "0x6000FC8")]
		void Perform();
	}
	[Token(Token = "0x20002C8")]
	public enum LoadType
	{
		[Token(Token = "0x4000C5B")]
		AllAtOnce,
		[Token(Token = "0x4000C5C")]
		OneByOne
	}
}
namespace Oculus.Spatializer.Propagation
{
	[Token(Token = "0x20002C9")]
	public enum FaceType : uint
	{
		[Token(Token = "0x4000C5E")]
		TRIANGLES,
		[Token(Token = "0x4000C5F")]
		QUADS
	}
	[Token(Token = "0x20002CA")]
	public enum MaterialProperty : uint
	{
		[Token(Token = "0x4000C61")]
		ABSORPTION,
		[Token(Token = "0x4000C62")]
		TRANSMISSION,
		[Token(Token = "0x4000C63")]
		SCATTERING
	}
	[Token(Token = "0x20002CB")]
	public struct MeshGroup
	{
		[Token(Token = "0x4000C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public UIntPtr indexOffset;

		[Token(Token = "0x4000C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public UIntPtr faceCount;

		[Token(Token = "0x4000C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FaceType faceType;

		[Token(Token = "0x4000C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public IntPtr material;
	}
}
namespace OculusSampleFramework
{
	[Token(Token = "0x20002CC")]
	public class ColorGrabbable : OVRGrabbable
	{
		[Token(Token = "0x4000C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Color COLOR_GRAB;

		[Token(Token = "0x4000C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Color COLOR_HIGHLIGHT;

		[Token(Token = "0x4000C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color m_color;

		[Token(Token = "0x4000C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MeshRenderer[] m_meshRenderers;

		[Token(Token = "0x4000C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_highlight;

		[Token(Token = "0x17000289")]
		public bool Highlight
		{
			[Token(Token = "0x6000FC9")]
			[Address(RVA = "0xC6B620", Offset = "0xC6B620", VA = "0xC6B620")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000FCA")]
			[Address(RVA = "0xC6B628", Offset = "0xC6B628", VA = "0xC6B628")]
			set
			{
			}
		}

		[Token(Token = "0x6000FCB")]
		[Address(RVA = "0xC6B634", Offset = "0xC6B634", VA = "0xC6B634")]
		protected void UpdateColor()
		{
		}

		[Token(Token = "0x6000FCC")]
		[Address(RVA = "0xC6B800", Offset = "0xC6B800", VA = "0xC6B800", Slot = "4")]
		public override void GrabBegin(OVRGrabber hand, Collider grabPoint)
		{
		}

		[Token(Token = "0x6000FCD")]
		[Address(RVA = "0xC6B828", Offset = "0xC6B828", VA = "0xC6B828", Slot = "5")]
		public override void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x6000FCE")]
		[Address(RVA = "0xC6B850", Offset = "0xC6B850", VA = "0xC6B850")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000FCF")]
		[Address(RVA = "0xC6B700", Offset = "0xC6B700", VA = "0xC6B700")]
		private void SetColor(Color color)
		{
		}

		[Token(Token = "0x6000FD0")]
		[Address(RVA = "0xC6BAA4", Offset = "0xC6BAA4", VA = "0xC6BAA4")]
		public ColorGrabbable()
		{
		}
	}
	[Token(Token = "0x20002CD")]
	public class DistanceGrabbable : OVRGrabbable
	{
		[Token(Token = "0x4000C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string m_materialColorField;

		[Token(Token = "0x4000C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GrabbableCrosshair m_crosshair;

		[Token(Token = "0x4000C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GrabManager m_crosshairManager;

		[Token(Token = "0x4000C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Renderer m_renderer;

		[Token(Token = "0x4000C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MaterialPropertyBlock m_mpb;

		[Token(Token = "0x4000C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_inRange;

		[Token(Token = "0x4000C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool m_targeted;

		[Token(Token = "0x1700028A")]
		public bool InRange
		{
			[Token(Token = "0x6000FD2")]
			[Address(RVA = "0xC6BEFC", Offset = "0xC6BEFC", VA = "0xC6BEFC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000FD3")]
			[Address(RVA = "0xC6BF04", Offset = "0xC6BF04", VA = "0xC6BF04")]
			set
			{
			}
		}

		[Token(Token = "0x1700028B")]
		public bool Targeted
		{
			[Token(Token = "0x6000FD4")]
			[Address(RVA = "0xC6C080", Offset = "0xC6C080", VA = "0xC6C080")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000FD5")]
			[Address(RVA = "0xC6C088", Offset = "0xC6C088", VA = "0xC6C088")]
			set
			{
			}
		}

		[Token(Token = "0x6000FD6")]
		[Address(RVA = "0xC6C094", Offset = "0xC6C094", VA = "0xC6C094", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000FD7")]
		[Address(RVA = "0xC6BF10", Offset = "0xC6BF10", VA = "0xC6BF10")]
		private void RefreshCrosshair()
		{
		}

		[Token(Token = "0x6000FD8")]
		[Address(RVA = "0xC6C234", Offset = "0xC6C234", VA = "0xC6C234")]
		public DistanceGrabbable()
		{
		}
	}
	[Token(Token = "0x20002CE")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x871494", Offset = "0x871494")]
	public class DistanceGrabber : OVRGrabber
	{
		[Token(Token = "0x4000C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		private float m_spherecastRadius;

		[Token(Token = "0x4000C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private float m_noSnapThreshhold;

		[Token(Token = "0x4000C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		private bool m_useSpherecast;

		[Token(Token = "0x4000C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
		[SerializeField]
		public bool m_preventGrabThroughWalls;

		[Token(Token = "0x4000C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private float m_objectPullVelocity;

		[Token(Token = "0x4000C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float m_objectPullMaxRotationRate;

		[Token(Token = "0x4000C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool m_movingObjectToHand;

		[Token(Token = "0x4000C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private float m_maxGrabDistance;

		[Token(Token = "0x4000C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private int m_grabObjectsInLayer;

		[Token(Token = "0x4000C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		private int m_obstructionLayer;

		[Token(Token = "0x4000C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private DistanceGrabber m_otherHand;

		[Token(Token = "0x4000C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected DistanceGrabbable m_target;

		[Token(Token = "0x4000C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected Collider m_targetCollider;

		[Token(Token = "0x1700028C")]
		public bool UseSpherecast
		{
			[Token(Token = "0x6000FD9")]
			[Address(RVA = "0xC6C23C", Offset = "0xC6C23C", VA = "0xC6C23C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000FDA")]
			[Address(RVA = "0xC6C244", Offset = "0xC6C244", VA = "0xC6C244")]
			set
			{
			}
		}

		[Token(Token = "0x6000FDB")]
		[Address(RVA = "0xC6C260", Offset = "0xC6C260", VA = "0xC6C260", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000FDC")]
		[Address(RVA = "0xC6C468", Offset = "0xC6C468", VA = "0xC6C468", Slot = "6")]
		public override void Update()
		{
		}

		[Token(Token = "0x6000FDD")]
		[Address(RVA = "0xC6CD84", Offset = "0xC6CD84", VA = "0xC6CD84", Slot = "7")]
		protected override void GrabBegin()
		{
		}

		[Token(Token = "0x6000FDE")]
		[Address(RVA = "0xC6D340", Offset = "0xC6D340", VA = "0xC6D340", Slot = "8")]
		protected override void MoveGrabbedObject(Vector3 pos, Quaternion rot, bool forceTeleport = false)
		{
		}

		[Token(Token = "0x6000FDF")]
		[Address(RVA = "0xC6D720", Offset = "0xC6D720", VA = "0xC6D720")]
		private static DistanceGrabbable HitInfoToGrabbable(RaycastHit hitInfo)
		{
			return null;
		}

		[Token(Token = "0x6000FE0")]
		[Address(RVA = "0xC6C6B4", Offset = "0xC6C6B4", VA = "0xC6C6B4")]
		protected bool FindTarget(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FE1")]
		[Address(RVA = "0xC6D7FC", Offset = "0xC6D7FC", VA = "0xC6D7FC")]
		protected bool FindTargetWithSpherecast(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FE2")]
		[Address(RVA = "0xC6DC38", Offset = "0xC6DC38", VA = "0xC6DC38", Slot = "9")]
		protected override void GrabVolumeEnable(bool enabled)
		{
		}

		[Token(Token = "0x6000FE3")]
		[Address(RVA = "0xC6DC50", Offset = "0xC6DC50", VA = "0xC6DC50", Slot = "10")]
		protected override void OffhandGrabbed(OVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x6000FE4")]
		[Address(RVA = "0xC6DC58", Offset = "0xC6DC58", VA = "0xC6DC58")]
		public DistanceGrabber()
		{
		}
	}
	[Token(Token = "0x20002CF")]
	public class GrabManager : MonoBehaviour
	{
		[Token(Token = "0x4000C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Collider m_grabVolume;

		[Token(Token = "0x4000C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color OutlineColorInRange;

		[Token(Token = "0x4000C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color OutlineColorHighlighted;

		[Token(Token = "0x4000C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color OutlineColorOutOfRange;

		[Token(Token = "0x6000FE5")]
		[Address(RVA = "0xC6F7A4", Offset = "0xC6F7A4", VA = "0xC6F7A4")]
		private void OnTriggerEnter(Collider otherCollider)
		{
		}

		[Token(Token = "0x6000FE6")]
		[Address(RVA = "0xC6F854", Offset = "0xC6F854", VA = "0xC6F854")]
		private void OnTriggerExit(Collider otherCollider)
		{
		}

		[Token(Token = "0x6000FE7")]
		[Address(RVA = "0xC6F900", Offset = "0xC6F900", VA = "0xC6F900")]
		public GrabManager()
		{
		}
	}
	[Token(Token = "0x20002D0")]
	public class GrabbableCrosshair : MonoBehaviour
	{
		[Token(Token = "0x20002D1")]
		public enum CrosshairState
		{
			[Token(Token = "0x4000C8A")]
			Disabled,
			[Token(Token = "0x4000C8B")]
			Enabled,
			[Token(Token = "0x4000C8C")]
			Targeted
		}

		[Token(Token = "0x4000C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CrosshairState m_state;

		[Token(Token = "0x4000C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_centerEyeAnchor;

		[Token(Token = "0x4000C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_targetedCrosshair;

		[Token(Token = "0x4000C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_enabledCrosshair;

		[Token(Token = "0x6000FE8")]
		[Address(RVA = "0xC6F908", Offset = "0xC6F908", VA = "0xC6F908")]
		private void Start()
		{
		}

		[Token(Token = "0x6000FE9")]
		[Address(RVA = "0xC6C198", Offset = "0xC6C198", VA = "0xC6C198")]
		public void SetState(CrosshairState cs)
		{
		}

		[Token(Token = "0x6000FEA")]
		[Address(RVA = "0xC6F970", Offset = "0xC6F970", VA = "0xC6F970")]
		private void Update()
		{
		}

		[Token(Token = "0x6000FEB")]
		[Address(RVA = "0xC6F9B8", Offset = "0xC6F9B8", VA = "0xC6F9B8")]
		public GrabbableCrosshair()
		{
		}
	}
	[Token(Token = "0x20002D2")]
	public class PauseOnInputLoss : MonoBehaviour
	{
		[Token(Token = "0x6000FEC")]
		[Address(RVA = "0xAFC4F4", Offset = "0xAFC4F4", VA = "0xAFC4F4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000FED")]
		[Address(RVA = "0xAFC5C0", Offset = "0xAFC5C0", VA = "0xAFC5C0")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6000FEE")]
		[Address(RVA = "0xAFC5CC", Offset = "0xAFC5CC", VA = "0xAFC5CC")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6000FEF")]
		[Address(RVA = "0xAFC5D8", Offset = "0xAFC5D8", VA = "0xAFC5D8")]
		public PauseOnInputLoss()
		{
		}
	}
	[Token(Token = "0x20002D3")]
	public class BoneCapsuleTriggerLogic : MonoBehaviour
	{
		[Token(Token = "0x4000C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableToolTags ToolTags;

		[Token(Token = "0x4000C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HashSet<ColliderZone> CollidersTouchingUs;

		[Token(Token = "0x4000C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ColliderZone> _elementsToCleanUp;

		[Token(Token = "0x6000FF0")]
		[Address(RVA = "0xC6A2AC", Offset = "0xC6A2AC", VA = "0xC6A2AC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000FF1")]
		[Address(RVA = "0xC6A304", Offset = "0xC6A304", VA = "0xC6A304")]
		private void Update()
		{
		}

		[Token(Token = "0x6000FF2")]
		[Address(RVA = "0xC6A5A8", Offset = "0xC6A5A8", VA = "0xC6A5A8")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000FF3")]
		[Address(RVA = "0xC6A698", Offset = "0xC6A698", VA = "0xC6A698")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6000FF4")]
		[Address(RVA = "0xC6A308", Offset = "0xC6A308", VA = "0xC6A308")]
		private void CleanUpDeadColliders()
		{
		}

		[Token(Token = "0x6000FF5")]
		[Address(RVA = "0xC6A788", Offset = "0xC6A788", VA = "0xC6A788")]
		public BoneCapsuleTriggerLogic()
		{
		}
	}
	[Token(Token = "0x20002D4")]
	public class ButtonController : Interactable
	{
		[Token(Token = "0x20002D5")]
		public enum ContactTest
		{
			[Token(Token = "0x4000C9E")]
			PerpenTest,
			[Token(Token = "0x4000C9F")]
			BackwardsPress
		}

		[Token(Token = "0x4000C90")]
		private const float ENTRY_DOT_THRESHOLD = 0.8f;

		[Token(Token = "0x4000C91")]
		private const float PERP_DOT_THRESHOLD = 0.5f;

		[Token(Token = "0x4000C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject _proximityZone;

		[Token(Token = "0x4000C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _contactZone;

		[Token(Token = "0x4000C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _actionZone;

		[Token(Token = "0x4000C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ContactTest[] _contactTests;

		[Token(Token = "0x4000C96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform _buttonPlaneCenter;

		[Token(Token = "0x4000C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private bool _makeSureToolIsOnPositiveSide;

		[Token(Token = "0x4000C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private Vector3 _localButtonDirection;

		[Token(Token = "0x4000C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private InteractableToolTags[] _allValidToolsTags;

		[Token(Token = "0x4000C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int _toolTagsMask;

		[Token(Token = "0x4000C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private InteractableState _currentButtonState;

		[Token(Token = "0x4000C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Dictionary<InteractableTool, InteractableState> _toolToState;

		[Token(Token = "0x1700028D")]
		public override int ValidToolTagsMask
		{
			[Token(Token = "0x6000FF6")]
			[Address(RVA = "0xC6A820", Offset = "0xC6A820", VA = "0xC6A820", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700028E")]
		public Vector3 LocalButtonDirection
		{
			[Token(Token = "0x6000FF7")]
			[Address(RVA = "0xC6A828", Offset = "0xC6A828", VA = "0xC6A828")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6000FF8")]
		[Address(RVA = "0xC6A834", Offset = "0xC6A834", VA = "0xC6A834", Slot = "9")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000FF9")]
		[Address(RVA = "0xC6A984", Offset = "0xC6A984", VA = "0xC6A984")]
		private void FireInteractionEventsOnDepth(InteractableCollisionDepth oldDepth, InteractableTool collidingTool, InteractionType interactionType)
		{
		}

		[Token(Token = "0x6000FFA")]
		[Address(RVA = "0xC6AB8C", Offset = "0xC6AB8C", VA = "0xC6AB8C", Slot = "8")]
		public override void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth)
		{
		}

		[Token(Token = "0x6000FFB")]
		[Address(RVA = "0xC6B0D0", Offset = "0xC6B0D0", VA = "0xC6B0D0")]
		private InteractableState GetUpcomingStateNearField(InteractableState oldState, InteractableCollisionDepth newCollisionDepth, bool toolIsInActionZone, bool toolIsInContactZone, bool toolIsInProximity, bool validContact, bool onPositiveSideOfInteractable)
		{
			return default(InteractableState);
		}

		[Token(Token = "0x6000FFC")]
		[Address(RVA = "0xC6AFE8", Offset = "0xC6AFE8", VA = "0xC6AFE8")]
		private bool IsValidContact(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FFD")]
		[Address(RVA = "0xC6B220", Offset = "0xC6B220", VA = "0xC6B220")]
		private bool PassEntryTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FFE")]
		[Address(RVA = "0xC6B314", Offset = "0xC6B314", VA = "0xC6B314")]
		private bool PassPerpTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FFF")]
		[Address(RVA = "0xC6B440", Offset = "0xC6B440", VA = "0xC6B440")]
		public ButtonController()
		{
		}
	}
	[Token(Token = "0x20002D6")]
	public class ButtonTriggerZone : MonoBehaviour, ColliderZone
	{
		[Token(Token = "0x4000CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _parentInteractableObj;

		[Token(Token = "0x4000CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x878A10", Offset = "0x878A10")]
		private Collider <Collider>k__BackingField;

		[Token(Token = "0x4000CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x878A20", Offset = "0x878A20")]
		private Interactable <ParentInteractable>k__BackingField;

		[Token(Token = "0x1700028F")]
		public Collider Collider
		{
			[Token(Token = "0x6001000")]
			[Address(RVA = "0xC6B52C", Offset = "0xC6B52C", VA = "0xC6B52C", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87DD58", Offset = "0x87DD58")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001001")]
			[Address(RVA = "0xC6B534", Offset = "0xC6B534", VA = "0xC6B534")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87DD68", Offset = "0x87DD68")]
			private set
			{
			}
		}

		[Token(Token = "0x17000290")]
		public Interactable ParentInteractable
		{
			[Token(Token = "0x6001002")]
			[Address(RVA = "0xC6B53C", Offset = "0xC6B53C", VA = "0xC6B53C", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87DD78", Offset = "0x87DD78")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001003")]
			[Address(RVA = "0xC6B544", Offset = "0xC6B544", VA = "0xC6B544")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87DD88", Offset = "0x87DD88")]
			private set
			{
			}
		}

		[Token(Token = "0x17000291")]
		public InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x6001004")]
			[Address(RVA = "0xC6B54C", Offset = "0xC6B54C", VA = "0xC6B54C", Slot = "6")]
			get
			{
				return default(InteractableCollisionDepth);
			}
		}

		[Token(Token = "0x6001005")]
		[Address(RVA = "0xC6B59C", Offset = "0xC6B59C", VA = "0xC6B59C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001006")]
		[Address(RVA = "0xC6B618", Offset = "0xC6B618", VA = "0xC6B618")]
		public ButtonTriggerZone()
		{
		}
	}
	[Token(Token = "0x20002D7")]
	public interface ColliderZone
	{
		[Token(Token = "0x17000292")]
		Collider Collider
		{
			[Token(Token = "0x6001007")]
			get;
		}

		[Token(Token = "0x17000293")]
		Interactable ParentInteractable
		{
			[Token(Token = "0x6001008")]
			get;
		}

		[Token(Token = "0x17000294")]
		InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x6001009")]
			get;
		}
	}
	[Token(Token = "0x20002D8")]
	public class ColliderZoneArgs : EventArgs
	{
		[Token(Token = "0x4000CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ColliderZone Collider;

		[Token(Token = "0x4000CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly float FrameTime;

		[Token(Token = "0x4000CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableTool CollidingTool;

		[Token(Token = "0x4000CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly InteractionType InteractionT;

		[Token(Token = "0x600100A")]
		[Address(RVA = "0xC6AAE8", Offset = "0xC6AAE8", VA = "0xC6AAE8")]
		public ColliderZoneArgs(ColliderZone collider, float frameTime, InteractableTool collidingTool, InteractionType interactionType)
		{
		}
	}
	[Token(Token = "0x20002D9")]
	public enum InteractionType
	{
		[Token(Token = "0x4000CA8")]
		Enter,
		[Token(Token = "0x4000CA9")]
		Stay,
		[Token(Token = "0x4000CAA")]
		Exit
	}
	[Token(Token = "0x20002DA")]
	public class HandsManager : MonoBehaviour
	{
		[Token(Token = "0x20002DB")]
		public enum HandsVisualMode
		{
			[Token(Token = "0x4000CBC")]
			Mesh,
			[Token(Token = "0x4000CBD")]
			Skeleton,
			[Token(Token = "0x4000CBE")]
			Both
		}

		[Token(Token = "0x20002DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8714F8", Offset = "0x8714F8")]
		private sealed class <FindSkeletonVisualGameObjects>d__52 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000CBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000CC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000CC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HandsManager <>4__this;

			[Token(Token = "0x170002A0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600102C")]
				[Address(RVA = "0xC708AC", Offset = "0xC708AC", VA = "0xC708AC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002A1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600102E")]
				[Address(RVA = "0xC70914", Offset = "0xC70914", VA = "0xC70914", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001029")]
			[Address(RVA = "0xC703A0", Offset = "0xC703A0", VA = "0xC703A0")]
			[DebuggerHidden]
			public <FindSkeletonVisualGameObjects>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x600102A")]
			[Address(RVA = "0xC7068C", Offset = "0xC7068C", VA = "0xC7068C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600102B")]
			[Address(RVA = "0xC70690", Offset = "0xC70690", VA = "0xC70690", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600102D")]
			[Address(RVA = "0xC708B4", Offset = "0xC708B4", VA = "0xC708B4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000CAB")]
		private const string SKELETON_VISUALIZER_NAME = "SkeletonRenderer";

		[Token(Token = "0x4000CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _leftHand;

		[Token(Token = "0x4000CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _rightHand;

		[Token(Token = "0x4000CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HandsVisualMode VisualMode;

		[Token(Token = "0x4000CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OVRHand[] _hand;

		[Token(Token = "0x4000CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private OVRSkeleton[] _handSkeleton;

		[Token(Token = "0x4000CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRSkeletonRenderer[] _handSkeletonRenderer;

		[Token(Token = "0x4000CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private OVRMesh[] _handMesh;

		[Token(Token = "0x4000CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private OVRMeshRenderer[] _handMeshRenderer;

		[Token(Token = "0x4000CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SkinnedMeshRenderer _leftMeshRenderer;

		[Token(Token = "0x4000CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SkinnedMeshRenderer _rightMeshRenderer;

		[Token(Token = "0x4000CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject _leftSkeletonVisual;

		[Token(Token = "0x4000CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject _rightSkeletonVisual;

		[Token(Token = "0x4000CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _currentHandAlpha;

		[Token(Token = "0x4000CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int HandAlphaId;

		[Token(Token = "0x4000CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x878A50", Offset = "0x878A50")]
		private static HandsManager <Instance>k__BackingField;

		[Token(Token = "0x17000295")]
		public OVRHand RightHand
		{
			[Token(Token = "0x600100B")]
			[Address(RVA = "0xC6E8AC", Offset = "0xC6E8AC", VA = "0xC6E8AC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600100C")]
			[Address(RVA = "0xC6F9C0", Offset = "0xC6F9C0", VA = "0xC6F9C0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000296")]
		public OVRSkeleton RightHandSkeleton
		{
			[Token(Token = "0x600100D")]
			[Address(RVA = "0xC6F42C", Offset = "0xC6F42C", VA = "0xC6F42C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600100E")]
			[Address(RVA = "0xC6FA28", Offset = "0xC6FA28", VA = "0xC6FA28")]
			private set
			{
			}
		}

		[Token(Token = "0x17000297")]
		public OVRSkeletonRenderer RightHandSkeletonRenderer
		{
			[Token(Token = "0x600100F")]
			[Address(RVA = "0xC6FA90", Offset = "0xC6FA90", VA = "0xC6FA90")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001010")]
			[Address(RVA = "0xC6FAC8", Offset = "0xC6FAC8", VA = "0xC6FAC8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000298")]
		public OVRMesh RightHandMesh
		{
			[Token(Token = "0x6001011")]
			[Address(RVA = "0xC6FB30", Offset = "0xC6FB30", VA = "0xC6FB30")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001012")]
			[Address(RVA = "0xC6FB68", Offset = "0xC6FB68", VA = "0xC6FB68")]
			private set
			{
			}
		}

		[Token(Token = "0x17000299")]
		public OVRMeshRenderer RightHandMeshRenderer
		{
			[Token(Token = "0x6001013")]
			[Address(RVA = "0xC6FBD0", Offset = "0xC6FBD0", VA = "0xC6FBD0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001014")]
			[Address(RVA = "0xC6FC08", Offset = "0xC6FC08", VA = "0xC6FC08")]
			private set
			{
			}
		}

		[Token(Token = "0x1700029A")]
		public OVRHand LeftHand
		{
			[Token(Token = "0x6001015")]
			[Address(RVA = "0xC6E878", Offset = "0xC6E878", VA = "0xC6E878")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001016")]
			[Address(RVA = "0xC6FC70", Offset = "0xC6FC70", VA = "0xC6FC70")]
			private set
			{
			}
		}

		[Token(Token = "0x1700029B")]
		public OVRSkeleton LeftHandSkeleton
		{
			[Token(Token = "0x6001017")]
			[Address(RVA = "0xC6F3F8", Offset = "0xC6F3F8", VA = "0xC6F3F8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001018")]
			[Address(RVA = "0xC6FCD4", Offset = "0xC6FCD4", VA = "0xC6FCD4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700029C")]
		public OVRSkeletonRenderer LeftHandSkeletonRenderer
		{
			[Token(Token = "0x6001019")]
			[Address(RVA = "0xC6FD38", Offset = "0xC6FD38", VA = "0xC6FD38")]
			get
			{
				return null;
			}
			[Token(Token = "0x600101A")]
			[Address(RVA = "0xC6FD6C", Offset = "0xC6FD6C", VA = "0xC6FD6C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700029D")]
		public OVRMesh LeftHandMesh
		{
			[Token(Token = "0x600101B")]
			[Address(RVA = "0xC6FDD0", Offset = "0xC6FDD0", VA = "0xC6FDD0")]
			get
			{
				return null;
			}
			[Token(Token = "0x600101C")]
			[Address(RVA = "0xC6FE04", Offset = "0xC6FE04", VA = "0xC6FE04")]
			private set
			{
			}
		}

		[Token(Token = "0x1700029E")]
		public OVRMeshRenderer LeftHandMeshRenderer
		{
			[Token(Token = "0x600101D")]
			[Address(RVA = "0xC6FE68", Offset = "0xC6FE68", VA = "0xC6FE68")]
			get
			{
				return null;
			}
			[Token(Token = "0x600101E")]
			[Address(RVA = "0xC6FE9C", Offset = "0xC6FE9C", VA = "0xC6FE9C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700029F")]
		public static HandsManager Instance
		{
			[Token(Token = "0x600101F")]
			[Address(RVA = "0xC6FF00", Offset = "0xC6FF00", VA = "0xC6FF00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87DD98", Offset = "0x87DD98")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001020")]
			[Address(RVA = "0xC6FF50", Offset = "0xC6FF50", VA = "0xC6FF50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87DDA8", Offset = "0x87DDA8")]
			private set
			{
			}
		}

		[Token(Token = "0x6001021")]
		[Address(RVA = "0xC6FFA4", Offset = "0xC6FFA4", VA = "0xC6FFA4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001022")]
		[Address(RVA = "0xC70318", Offset = "0xC70318", VA = "0xC70318")]
		private void Update()
		{
		}

		[Token(Token = "0x6001023")]
		[Address(RVA = "0xC702A8", Offset = "0xC702A8", VA = "0xC702A8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x87DDB8", Offset = "0x87DDB8")]
		private IEnumerator FindSkeletonVisualGameObjects()
		{
			return null;
		}

		[Token(Token = "0x6001024")]
		[Address(RVA = "0xC6BD54", Offset = "0xC6BD54", VA = "0xC6BD54")]
		public void SwitchVisualization()
		{
		}

		[Token(Token = "0x6001025")]
		[Address(RVA = "0xC703CC", Offset = "0xC703CC", VA = "0xC703CC")]
		private void SetToCurrentVisualMode()
		{
		}

		[Token(Token = "0x6001026")]
		[Address(RVA = "0xC6F464", Offset = "0xC6F464", VA = "0xC6F464")]
		public static List<OVRBoneCapsule> GetCapsulesPerBone(OVRSkeleton skeleton, OVRSkeleton.BoneId boneId)
		{
			return null;
		}

		[Token(Token = "0x6001027")]
		[Address(RVA = "0xC6E6E8", Offset = "0xC6E6E8", VA = "0xC6E6E8")]
		public bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x6001028")]
		[Address(RVA = "0xC705AC", Offset = "0xC705AC", VA = "0xC705AC")]
		public HandsManager()
		{
		}
	}
	[Token(Token = "0x20002DD")]
	public abstract class Interactable : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20002DE")]
		public class InteractableStateArgsEvent : UnityEvent<InteractableStateArgs>
		{
			[Token(Token = "0x6001040")]
			[Address(RVA = "0xC71064", Offset = "0xC71064", VA = "0xC71064")]
			public InteractableStateArgsEvent()
			{
			}
		}

		[Token(Token = "0x4000CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected ColliderZone _proximityZoneCollider;

		[Token(Token = "0x4000CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected ColliderZone _contactZoneCollider;

		[Token(Token = "0x4000CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected ColliderZone _actionZoneCollider;

		[Token(Token = "0x4000CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InteractableStateArgsEvent InteractableStateChanged;

		[Token(Token = "0x170002A2")]
		public ColliderZone ProximityCollider
		{
			[Token(Token = "0x600102F")]
			[Address(RVA = "0xC7091C", Offset = "0xC7091C", VA = "0xC7091C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A3")]
		public ColliderZone ContactCollider
		{
			[Token(Token = "0x6001030")]
			[Address(RVA = "0xC70924", Offset = "0xC70924", VA = "0xC70924")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A4")]
		public ColliderZone ActionCollider
		{
			[Token(Token = "0x6001031")]
			[Address(RVA = "0xC7092C", Offset = "0xC7092C", VA = "0xC7092C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A5")]
		public virtual int ValidToolTagsMask
		{
			[Token(Token = "0x6001032")]
			[Address(RVA = "0xC70934", Offset = "0xC70934", VA = "0xC70934", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1400002A")]
		public event Action<ColliderZoneArgs> ProximityZoneEvent
		{
			[Token(Token = "0x6001033")]
			[Address(RVA = "0xC7093C", Offset = "0xC7093C", VA = "0xC7093C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87DE6C", Offset = "0x87DE6C")]
			add
			{
			}
			[Token(Token = "0x6001034")]
			[Address(RVA = "0xC709E0", Offset = "0xC709E0", VA = "0xC709E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87DE7C", Offset = "0x87DE7C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002B")]
		public event Action<ColliderZoneArgs> ContactZoneEvent
		{
			[Token(Token = "0x6001036")]
			[Address(RVA = "0xC70AF8", Offset = "0xC70AF8", VA = "0xC70AF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87DE8C", Offset = "0x87DE8C")]
			add
			{
			}
			[Token(Token = "0x6001037")]
			[Address(RVA = "0xC70B9C", Offset = "0xC70B9C", VA = "0xC70B9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87DE9C", Offset = "0x87DE9C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002C")]
		public event Action<ColliderZoneArgs> ActionZoneEvent
		{
			[Token(Token = "0x6001039")]
			[Address(RVA = "0xC70CB4", Offset = "0xC70CB4", VA = "0xC70CB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87DEAC", Offset = "0x87DEAC")]
			add
			{
			}
			[Token(Token = "0x600103A")]
			[Address(RVA = "0xC70D58", Offset = "0xC70D58", VA = "0xC70D58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87DEBC", Offset = "0x87DEBC")]
			remove
			{
			}
		}

		[Token(Token = "0x6001035")]
		[Address(RVA = "0xC70A84", Offset = "0xC70A84", VA = "0xC70A84", Slot = "5")]
		protected virtual void OnProximityZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6001038")]
		[Address(RVA = "0xC70C40", Offset = "0xC70C40", VA = "0xC70C40", Slot = "6")]
		protected virtual void OnContactZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x600103B")]
		[Address(RVA = "0xC70DFC", Offset = "0xC70DFC", VA = "0xC70DFC", Slot = "7")]
		protected virtual void OnActionZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x600103C")]
		public abstract void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth);

		[Token(Token = "0x600103D")]
		[Address(RVA = "0xC6A920", Offset = "0xC6A920", VA = "0xC6A920", Slot = "9")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x600103E")]
		[Address(RVA = "0xC70F38", Offset = "0xC70F38", VA = "0xC70F38", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x600103F")]
		[Address(RVA = "0xC6B524", Offset = "0xC6B524", VA = "0xC6B524")]
		protected Interactable()
		{
		}
	}
	[Token(Token = "0x20002DF")]
	public enum InteractableCollisionDepth
	{
		[Token(Token = "0x4000CCA")]
		None,
		[Token(Token = "0x4000CCB")]
		Proximity,
		[Token(Token = "0x4000CCC")]
		Contact,
		[Token(Token = "0x4000CCD")]
		Action
	}
	[Token(Token = "0x20002E0")]
	public enum InteractableState
	{
		[Token(Token = "0x4000CCF")]
		Default,
		[Token(Token = "0x4000CD0")]
		ProximityState,
		[Token(Token = "0x4000CD1")]
		ContactState,
		[Token(Token = "0x4000CD2")]
		ActionState
	}
	[Token(Token = "0x20002E1")]
	public class InteractableStateArgs : EventArgs
	{
		[Token(Token = "0x4000CD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Interactable Interactable;

		[Token(Token = "0x4000CD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly InteractableTool Tool;

		[Token(Token = "0x4000CD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableState OldInteractableState;

		[Token(Token = "0x4000CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly InteractableState NewInteractableState;

		[Token(Token = "0x4000CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ColliderZoneArgs ColliderArgs;

		[Token(Token = "0x6001041")]
		[Address(RVA = "0xC6B17C", Offset = "0xC6B17C", VA = "0xC6B17C")]
		public InteractableStateArgs(Interactable interactable, InteractableTool tool, InteractableState newInteractableState, InteractableState oldState, ColliderZoneArgs colliderArgs)
		{
		}
	}
	[Token(Token = "0x20002E2")]
	public class InteractableRegistry : MonoBehaviour
	{
		[Token(Token = "0x4000CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static HashSet<Interactable> _interactables;

		[Token(Token = "0x170002A6")]
		public static HashSet<Interactable> Interactables
		{
			[Token(Token = "0x6001042")]
			[Address(RVA = "0xC710B4", Offset = "0xC710B4", VA = "0xC710B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001043")]
		[Address(RVA = "0xC70E70", Offset = "0xC70E70", VA = "0xC70E70")]
		public static void RegisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6001044")]
		[Address(RVA = "0xC70F9C", Offset = "0xC70F9C", VA = "0xC70F9C")]
		public static void UnregisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6001045")]
		[Address(RVA = "0xC7111C", Offset = "0xC7111C", VA = "0xC7111C")]
		public InteractableRegistry()
		{
		}
	}
	[Token(Token = "0x20002E3")]
	public class InteractableToolsCreator : MonoBehaviour
	{
		[Token(Token = "0x20002E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x871508", Offset = "0x871508")]
		private sealed class <AttachToolsToHands>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000CDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000CDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000CDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform[] toolObjects;

			[Token(Token = "0x4000CDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool isRightHand;

			[Token(Token = "0x4000CDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public InteractableToolsCreator <>4__this;

			[Token(Token = "0x4000CE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private HandsManager <handsManagerObj>5__2;

			[Token(Token = "0x4000CE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private HashSet<Transform>.Enumerator <>7__wrap2;

			[Token(Token = "0x4000CE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Transform <toolObject>5__4;

			[Token(Token = "0x4000CE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private OVRSkeleton <handSkeletonToAttachTo>5__5;

			[Token(Token = "0x170002A7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600104F")]
				[Address(RVA = "0xC7215C", Offset = "0xC7215C", VA = "0xC7215C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002A8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001051")]
				[Address(RVA = "0xC721C4", Offset = "0xC721C4", VA = "0xC721C4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600104B")]
			[Address(RVA = "0xC71C20", Offset = "0xC71C20", VA = "0xC71C20")]
			[DebuggerHidden]
			public <AttachToolsToHands>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x600104C")]
			[Address(RVA = "0xC71D4C", Offset = "0xC71D4C", VA = "0xC71D4C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600104D")]
			[Address(RVA = "0xC71DC0", Offset = "0xC71DC0", VA = "0xC71DC0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600104E")]
			[Address(RVA = "0xC71D68", Offset = "0xC71D68", VA = "0xC71D68")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001050")]
			[Address(RVA = "0xC72164", Offset = "0xC72164", VA = "0xC72164", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform[] LeftHandTools;

		[Token(Token = "0x4000CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform[] RightHandTools;

		[Token(Token = "0x6001047")]
		[Address(RVA = "0xC71B18", Offset = "0xC71B18", VA = "0xC71B18")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001048")]
		[Address(RVA = "0xC71B94", Offset = "0xC71B94", VA = "0xC71B94")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x87DECC", Offset = "0x87DECC")]
		private IEnumerator AttachToolsToHands(Transform[] toolObjects, bool isRightHand)
		{
			return null;
		}

		[Token(Token = "0x6001049")]
		[Address(RVA = "0xC71C4C", Offset = "0xC71C4C", VA = "0xC71C4C")]
		private void AttachToolToHandTransform(Transform tool, bool isRightHanded)
		{
		}

		[Token(Token = "0x600104A")]
		[Address(RVA = "0xC71D44", Offset = "0xC71D44", VA = "0xC71D44")]
		public InteractableToolsCreator()
		{
		}
	}
	[Token(Token = "0x20002E5")]
	public class InteractableToolsInputRouter : MonoBehaviour
	{
		[Token(Token = "0x4000CE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static InteractableToolsInputRouter _instance;

		[Token(Token = "0x4000CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _leftPinch;

		[Token(Token = "0x4000CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool _rightPinch;

		[Token(Token = "0x4000CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HashSet<InteractableTool> _leftHandNearTools;

		[Token(Token = "0x4000CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<InteractableTool> _leftHandFarTools;

		[Token(Token = "0x4000CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HashSet<InteractableTool> _rightHandNearTools;

		[Token(Token = "0x4000CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private HashSet<InteractableTool> _rightHandFarTools;

		[Token(Token = "0x170002A9")]
		public static InteractableToolsInputRouter Instance
		{
			[Token(Token = "0x6001052")]
			[Address(RVA = "0xC6E124", Offset = "0xC6E124", VA = "0xC6E124")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001053")]
		[Address(RVA = "0xC6E28C", Offset = "0xC6E28C", VA = "0xC6E28C")]
		public void RegisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x6001054")]
		[Address(RVA = "0xC721CC", Offset = "0xC721CC", VA = "0xC721CC")]
		public void UnregisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x6001055")]
		[Address(RVA = "0xC72278", Offset = "0xC72278", VA = "0xC72278")]
		private void Update()
		{
		}

		[Token(Token = "0x6001056")]
		[Address(RVA = "0xC72540", Offset = "0xC72540", VA = "0xC72540")]
		private bool UpdateToolsAndEnableState(HashSet<InteractableTool> tools, bool toolsAreEnabledThisFrame)
		{
			return default(bool);
		}

		[Token(Token = "0x6001057")]
		[Address(RVA = "0xC72588", Offset = "0xC72588", VA = "0xC72588")]
		private bool UpdateTools(HashSet<InteractableTool> tools, bool resetCollisionData = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001058")]
		[Address(RVA = "0xC727D8", Offset = "0xC727D8", VA = "0xC727D8")]
		private void ToggleToolsEnableState(HashSet<InteractableTool> tools, bool enableState)
		{
		}

		[Token(Token = "0x6001059")]
		[Address(RVA = "0xC72904", Offset = "0xC72904", VA = "0xC72904")]
		public InteractableToolsInputRouter()
		{
		}
	}
	[Token(Token = "0x20002E6")]
	public class FingerTipPokeTool : InteractableTool
	{
		[Token(Token = "0x20002E7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x871518", Offset = "0x871518")]
		private sealed class <AttachTriggerLogic>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000CF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000CF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000CF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FingerTipPokeTool <>4__this;

			[Token(Token = "0x170002AE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600106B")]
				[Address(RVA = "0xC6F674", Offset = "0xC6F674", VA = "0xC6F674", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002AF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600106D")]
				[Address(RVA = "0xC6F6DC", Offset = "0xC6F6DC", VA = "0xC6F6DC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001068")]
			[Address(RVA = "0xC6E3A8", Offset = "0xC6E3A8", VA = "0xC6E3A8")]
			[DebuggerHidden]
			public <AttachTriggerLogic>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6001069")]
			[Address(RVA = "0xC6F090", Offset = "0xC6F090", VA = "0xC6F090", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600106A")]
			[Address(RVA = "0xC6F094", Offset = "0xC6F094", VA = "0xC6F094", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600106C")]
			[Address(RVA = "0xC6F67C", Offset = "0xC6F67C", VA = "0xC6F67C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000CEB")]
		private const int NUM_VELOCITY_FRAMES = 10;

		[Token(Token = "0x4000CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private FingerTipPokeToolView _fingerTipPokeToolView;

		[Token(Token = "0x4000CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private OVRPlugin.HandFinger _fingerToFollow;

		[Token(Token = "0x4000CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3[] _velocityFrames;

		[Token(Token = "0x4000CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _currVelocityFrame;

		[Token(Token = "0x4000CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool _sampledMaxFramesAlready;

		[Token(Token = "0x4000CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 _position;

		[Token(Token = "0x4000CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BoneCapsuleTriggerLogic[] _boneCapsuleTriggerLogic;

		[Token(Token = "0x4000CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float _lastScale;

		[Token(Token = "0x4000CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool _isInitialized;

		[Token(Token = "0x4000CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private OVRBoneCapsule _capsuleToTrack;

		[Token(Token = "0x170002AA")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x600105A")]
			[Address(RVA = "0xC6E008", Offset = "0xC6E008", VA = "0xC6E008", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x170002AB")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x600105B")]
			[Address(RVA = "0xC6E010", Offset = "0xC6E010", VA = "0xC6E010", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x170002AC")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x600105C")]
			[Address(RVA = "0xC6E018", Offset = "0xC6E018", VA = "0xC6E018", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002AD")]
		public override bool EnableState
		{
			[Token(Token = "0x600105D")]
			[Address(RVA = "0xC6E020", Offset = "0xC6E020", VA = "0xC6E020", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600105E")]
			[Address(RVA = "0xC6E04C", Offset = "0xC6E04C", VA = "0xC6E04C", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x600105F")]
		[Address(RVA = "0xC6E088", Offset = "0xC6E088", VA = "0xC6E088", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6001060")]
		[Address(RVA = "0xC6E338", Offset = "0xC6E338", VA = "0xC6E338")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x87DF80", Offset = "0x87DF80")]
		private IEnumerator AttachTriggerLogic()
		{
			return null;
		}

		[Token(Token = "0x6001061")]
		[Address(RVA = "0xC6E3D4", Offset = "0xC6E3D4", VA = "0xC6E3D4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001062")]
		[Address(RVA = "0xC6E8E4", Offset = "0xC6E8E4", VA = "0xC6E8E4")]
		private void UpdateAverageVelocity()
		{
		}

		[Token(Token = "0x6001063")]
		[Address(RVA = "0xC6EB5C", Offset = "0xC6EB5C", VA = "0xC6EB5C")]
		private void CheckAndUpdateScale()
		{
		}

		[Token(Token = "0x6001064")]
		[Address(RVA = "0xC6EC9C", Offset = "0xC6EC9C", VA = "0xC6EC9C", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6001065")]
		[Address(RVA = "0xC6EF64", Offset = "0xC6EF64", VA = "0xC6EF64", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x6001066")]
		[Address(RVA = "0xC6EF68", Offset = "0xC6EF68", VA = "0xC6EF68", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x6001067")]
		[Address(RVA = "0xC6EF6C", Offset = "0xC6EF6C", VA = "0xC6EF6C")]
		public FingerTipPokeTool()
		{
		}
	}
	[Token(Token = "0x20002E8")]
	public class FingerTipPokeToolView : MonoBehaviour
	{
		[Token(Token = "0x4000CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _sphereMeshRenderer;

		[Token(Token = "0x4000CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x878AE0", Offset = "0x878AE0")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x4000CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x878AF0", Offset = "0x878AF0")]
		private bool <ToolActivateState>k__BackingField;

		[Token(Token = "0x4000CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x878B00", Offset = "0x878B00")]
		private float <SphereRadius>k__BackingField;

		[Token(Token = "0x170002B0")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x600106E")]
			[Address(RVA = "0xC6F6E4", Offset = "0xC6F6E4", VA = "0xC6F6E4", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87E034", Offset = "0x87E034")]
			get
			{
				return null;
			}
			[Token(Token = "0x600106F")]
			[Address(RVA = "0xC6F6EC", Offset = "0xC6F6EC", VA = "0xC6F6EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87E044", Offset = "0x87E044")]
			set
			{
			}
		}

		[Token(Token = "0x170002B1")]
		public bool EnableState
		{
			[Token(Token = "0x6001070")]
			[Address(RVA = "0xC6F6F4", Offset = "0xC6F6F4", VA = "0xC6F6F4", Slot = "5")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001071")]
			[Address(RVA = "0xC6F710", Offset = "0xC6F710", VA = "0xC6F710", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x170002B2")]
		public bool ToolActivateState
		{
			[Token(Token = "0x6001072")]
			[Address(RVA = "0xC6F730", Offset = "0xC6F730", VA = "0xC6F730", Slot = "7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87E054", Offset = "0x87E054")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001073")]
			[Address(RVA = "0xC6F738", Offset = "0xC6F738", VA = "0xC6F738", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87E064", Offset = "0x87E064")]
			set
			{
			}
		}

		[Token(Token = "0x170002B3")]
		public float SphereRadius
		{
			[Token(Token = "0x6001074")]
			[Address(RVA = "0xC6F744", Offset = "0xC6F744", VA = "0xC6F744")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87E074", Offset = "0x87E074")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001075")]
			[Address(RVA = "0xC6F74C", Offset = "0xC6F74C", VA = "0xC6F74C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87E084", Offset = "0x87E084")]
			private set
			{
			}
		}

		[Token(Token = "0x6001076")]
		[Address(RVA = "0xC6F754", Offset = "0xC6F754", VA = "0xC6F754")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001077")]
		[Address(RVA = "0xC6F79C", Offset = "0xC6F79C", VA = "0xC6F79C")]
		public FingerTipPokeToolView()
		{
		}
	}
	[Token(Token = "0x20002E9")]
	[Flags]
	public enum InteractableToolTags
	{
		[Token(Token = "0x4000CFE")]
		None = 0,
		[Token(Token = "0x4000CFF")]
		Ray = 1,
		[Token(Token = "0x4000D00")]
		Poke = 4,
		[Token(Token = "0x4000D01")]
		All = -1
	}
	[Token(Token = "0x20002EA")]
	public enum ToolInputState
	{
		[Token(Token = "0x4000D03")]
		Inactive,
		[Token(Token = "0x4000D04")]
		PrimaryInputDown,
		[Token(Token = "0x4000D05")]
		PrimaryInputDownStay,
		[Token(Token = "0x4000D06")]
		PrimaryInputUp
	}
	[Token(Token = "0x20002EB")]
	public class InteractableCollisionInfo
	{
		[Token(Token = "0x4000D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ColliderZone InteractableCollider;

		[Token(Token = "0x4000D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableCollisionDepth CollisionDepth;

		[Token(Token = "0x4000D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractableTool CollidingTool;

		[Token(Token = "0x6001078")]
		[Address(RVA = "0xC6EF20", Offset = "0xC6EF20", VA = "0xC6EF20")]
		public InteractableCollisionInfo(ColliderZone collider, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool)
		{
		}
	}
	[Token(Token = "0x20002EC")]
	public abstract class InteractableTool : MonoBehaviour
	{
		[Token(Token = "0x4000D0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x878B10", Offset = "0x878B10")]
		private bool <IsRightHandedTool>k__BackingField;

		[Token(Token = "0x4000D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x878B20", Offset = "0x878B20")]
		private Vector3 <Velocity>k__BackingField;

		[Token(Token = "0x4000D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x878B30", Offset = "0x878B30")]
		private Vector3 <InteractionPosition>k__BackingField;

		[Token(Token = "0x4000D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected List<InteractableCollisionInfo> _currentIntersectingObjects;

		[Token(Token = "0x4000D0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Interactable> _addedInteractables;

		[Token(Token = "0x4000D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Interactable> _removedInteractables;

		[Token(Token = "0x4000D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Interactable> _remainingInteractables;

		[Token(Token = "0x4000D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<Interactable, InteractableCollisionInfo> _currInteractableToCollisionInfos;

		[Token(Token = "0x4000D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<Interactable, InteractableCollisionInfo> _prevInteractableToCollisionInfos;

		[Token(Token = "0x170002B4")]
		public Transform ToolTransform
		{
			[Token(Token = "0x6001079")]
			[Address(RVA = "0xC6B438", Offset = "0xC6B438", VA = "0xC6B438")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B5")]
		public bool IsRightHandedTool
		{
			[Token(Token = "0x600107A")]
			[Address(RVA = "0xC71198", Offset = "0xC71198", VA = "0xC71198")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87E094", Offset = "0x87E094")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600107B")]
			[Address(RVA = "0xC711A0", Offset = "0xC711A0", VA = "0xC711A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87E0A4", Offset = "0x87E0A4")]
			set
			{
			}
		}

		[Token(Token = "0x170002B6")]
		public abstract InteractableToolTags ToolTags
		{
			[Token(Token = "0x600107C")]
			get;
		}

		[Token(Token = "0x170002B7")]
		public abstract ToolInputState ToolInputState
		{
			[Token(Token = "0x600107D")]
			get;
		}

		[Token(Token = "0x170002B8")]
		public abstract bool IsFarFieldTool
		{
			[Token(Token = "0x600107E")]
			get;
		}

		[Token(Token = "0x170002B9")]
		public Vector3 Velocity
		{
			[Token(Token = "0x600107F")]
			[Address(RVA = "0xC711AC", Offset = "0xC711AC", VA = "0xC711AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87E0B4", Offset = "0x87E0B4")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001080")]
			[Address(RVA = "0xC711B8", Offset = "0xC711B8", VA = "0xC711B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87E0C4", Offset = "0x87E0C4")]
			protected set
			{
			}
		}

		[Token(Token = "0x170002BA")]
		public Vector3 InteractionPosition
		{
			[Token(Token = "0x6001081")]
			[Address(RVA = "0xC711C4", Offset = "0xC711C4", VA = "0xC711C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87E0D4", Offset = "0x87E0D4")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001082")]
			[Address(RVA = "0xC711D0", Offset = "0xC711D0", VA = "0xC711D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87E0E4", Offset = "0x87E0E4")]
			protected set
			{
			}
		}

		[Token(Token = "0x170002BB")]
		public abstract bool EnableState
		{
			[Token(Token = "0x6001087")]
			get;
			[Token(Token = "0x6001088")]
			set;
		}

		[Token(Token = "0x6001083")]
		[Address(RVA = "0xC711DC", Offset = "0xC711DC", VA = "0xC711DC")]
		public List<InteractableCollisionInfo> GetCurrentIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6001084")]
		public abstract List<InteractableCollisionInfo> GetNextIntersectingObjects();

		[Token(Token = "0x6001085")]
		public abstract void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone);

		[Token(Token = "0x6001086")]
		public abstract void DeFocus();

		[Token(Token = "0x6001089")]
		public abstract void Initialize();

		[Token(Token = "0x600108A")]
		[Address(RVA = "0xC711E4", Offset = "0xC711E4", VA = "0xC711E4")]
		public KeyValuePair<Interactable, InteractableCollisionInfo> GetFirstCurrentCollisionInfo()
		{
			return default(KeyValuePair<Interactable, InteractableCollisionInfo>);
		}

		[Token(Token = "0x600108B")]
		[Address(RVA = "0xC71234", Offset = "0xC71234", VA = "0xC71234")]
		public void ClearAllCurrentCollisionInfos()
		{
		}

		[Token(Token = "0x600108C")]
		[Address(RVA = "0xC7128C", Offset = "0xC7128C", VA = "0xC7128C", Slot = "13")]
		public virtual void UpdateCurrentCollisionsBasedOnDepth()
		{
		}

		[Token(Token = "0x600108D")]
		[Address(RVA = "0xC714D0", Offset = "0xC714D0", VA = "0xC714D0", Slot = "14")]
		public virtual void UpdateLatestCollisionData()
		{
		}

		[Token(Token = "0x600108E")]
		[Address(RVA = "0xC6EF80", Offset = "0xC6EF80", VA = "0xC6EF80")]
		protected InteractableTool()
		{
		}
	}
	[Token(Token = "0x20002ED")]
	public class PinchStateModule
	{
		[Token(Token = "0x20002EE")]
		private enum PinchState
		{
			[Token(Token = "0x4000D17")]
			None,
			[Token(Token = "0x4000D18")]
			PinchDown,
			[Token(Token = "0x4000D19")]
			PinchStay,
			[Token(Token = "0x4000D1A")]
			PinchUp
		}

		[Token(Token = "0x4000D13")]
		private const float PINCH_STRENGTH_THRESHOLD = 1f;

		[Token(Token = "0x4000D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private PinchState _currPinchState;

		[Token(Token = "0x4000D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Interactable _firstFocusedInteractable;

		[Token(Token = "0x170002BC")]
		public bool PinchUpAndDownOnFocusedObject
		{
			[Token(Token = "0x600108F")]
			[Address(RVA = "0xAFC5E0", Offset = "0xAFC5E0", VA = "0xAFC5E0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002BD")]
		public bool PinchSteadyOnFocusedObject
		{
			[Token(Token = "0x6001090")]
			[Address(RVA = "0xAFC66C", Offset = "0xAFC66C", VA = "0xAFC66C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002BE")]
		public bool PinchDownOnFocusedObject
		{
			[Token(Token = "0x6001091")]
			[Address(RVA = "0xAFC6F8", Offset = "0xAFC6F8", VA = "0xAFC6F8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001092")]
		[Address(RVA = "0xAFC784", Offset = "0xAFC784", VA = "0xAFC784")]
		public PinchStateModule()
		{
		}

		[Token(Token = "0x6001093")]
		[Address(RVA = "0xAFC7B0", Offset = "0xAFC7B0", VA = "0xAFC7B0")]
		public void UpdateState(OVRHand hand, Interactable currFocusedInteractable)
		{
		}
	}
	[Token(Token = "0x20002EF")]
	public class RayTool : InteractableTool
	{
		[Token(Token = "0x4000D1B")]
		private const float MINIMUM_RAY_CAST_DISTANCE = 0.8f;

		[Token(Token = "0x4000D1C")]
		private const float COLLIDER_RADIUS = 0.01f;

		[Token(Token = "0x4000D1D")]
		private const int NUM_MAX_PRIMARY_HITS = 10;

		[Token(Token = "0x4000D1E")]
		private const int NUM_MAX_SECONDARY_HITS = 25;

		[Token(Token = "0x4000D1F")]
		private const int NUM_COLLIDERS_TO_TEST = 20;

		[Token(Token = "0x4000D20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private RayToolView _rayToolView;

		[Token(Token = "0x4000D21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x878B50", Offset = "0x878B50")]
		[SerializeField]
		private float _coneAngleDegrees;

		[Token(Token = "0x4000D22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float _farFieldMaxDistance;

		[Token(Token = "0x4000D23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private PinchStateModule _pinchStateModule;

		[Token(Token = "0x4000D24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Interactable _focusedInteractable;

		[Token(Token = "0x4000D25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Collider[] _collidersOverlapped;

		[Token(Token = "0x4000D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Interactable _currInteractableCastedAgainst;

		[Token(Token = "0x4000D27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float _coneAngleReleaseDegrees;

		[Token(Token = "0x4000D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RaycastHit[] _primaryHits;

		[Token(Token = "0x4000D29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Collider[] _secondaryOverlapResults;

		[Token(Token = "0x4000D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool _initialized;

		[Token(Token = "0x170002BF")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x6001094")]
			[Address(RVA = "0xAFC9E0", Offset = "0xAFC9E0", VA = "0xAFC9E0", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x170002C0")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x6001095")]
			[Address(RVA = "0xAFC9E8", Offset = "0xAFC9E8", VA = "0xAFC9E8", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x170002C1")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x6001096")]
			[Address(RVA = "0xAFCA50", Offset = "0xAFCA50", VA = "0xAFCA50", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002C2")]
		public override bool EnableState
		{
			[Token(Token = "0x6001097")]
			[Address(RVA = "0xAFCA58", Offset = "0xAFCA58", VA = "0xAFCA58", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001098")]
			[Address(RVA = "0xAFCA9C", Offset = "0xAFCA9C", VA = "0xAFCA9C", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6001099")]
		[Address(RVA = "0xAFCB10", Offset = "0xAFCB10", VA = "0xAFCB10", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x600109A")]
		[Address(RVA = "0xAFCB70", Offset = "0xAFCB70", VA = "0xAFCB70")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600109B")]
		[Address(RVA = "0xAFCC18", Offset = "0xAFCC18", VA = "0xAFCC18")]
		private void Update()
		{
		}

		[Token(Token = "0x600109C")]
		[Address(RVA = "0xAFCF20", Offset = "0xAFCF20", VA = "0xAFCF20")]
		private Vector3 GetRayCastOrigin()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600109D")]
		[Address(RVA = "0xAFD01C", Offset = "0xAFD01C", VA = "0xAFD01C", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x600109E")]
		[Address(RVA = "0xAFD380", Offset = "0xAFD380", VA = "0xAFD380")]
		private bool HasRayReleasedInteractable(Interactable focusedInteractable)
		{
			return default(bool);
		}

		[Token(Token = "0x600109F")]
		[Address(RVA = "0xAFD524", Offset = "0xAFD524", VA = "0xAFD524")]
		private Interactable FindTargetInteractable()
		{
			return null;
		}

		[Token(Token = "0x60010A0")]
		[Address(RVA = "0xAFD64C", Offset = "0xAFD64C", VA = "0xAFD64C")]
		private Interactable FindPrimaryRaycastHit(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x60010A1")]
		[Address(RVA = "0xAFD984", Offset = "0xAFD984", VA = "0xAFD984")]
		private Interactable FindInteractableViaConeTest(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x60010A2")]
		[Address(RVA = "0xAFDD94", Offset = "0xAFDD94", VA = "0xAFDD94", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x60010A3")]
		[Address(RVA = "0xAFDE68", Offset = "0xAFDE68", VA = "0xAFDE68", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x60010A4")]
		[Address(RVA = "0xAFDE9C", Offset = "0xAFDE9C", VA = "0xAFDE9C")]
		public RayTool()
		{
		}
	}
	[Token(Token = "0x20002F0")]
	public class RayToolView : MonoBehaviour
	{
		[Token(Token = "0x4000D2B")]
		private const int NUM_RAY_LINE_POSITIONS = 25;

		[Token(Token = "0x4000D2C")]
		private const float DEFAULT_RAY_CAST_DISTANCE = 3f;

		[Token(Token = "0x4000D2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _targetTransform;

		[Token(Token = "0x4000D2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LineRenderer _lineRenderer;

		[Token(Token = "0x4000D2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _toolActivateState;

		[Token(Token = "0x4000D30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform _focusedTransform;

		[Token(Token = "0x4000D31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3[] linePositions;

		[Token(Token = "0x4000D32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Gradient _oldColorGradient;

		[Token(Token = "0x4000D33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Gradient _highLightColorGradient;

		[Token(Token = "0x4000D34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x878BC4", Offset = "0x878BC4")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x170002C3")]
		public bool EnableState
		{
			[Token(Token = "0x60010A5")]
			[Address(RVA = "0xAFCA80", Offset = "0xAFCA80", VA = "0xAFCA80", Slot = "4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60010A6")]
			[Address(RVA = "0xAFCAB8", Offset = "0xAFCAB8", VA = "0xAFCAB8", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x170002C4")]
		public bool ToolActivateState
		{
			[Token(Token = "0x60010A7")]
			[Address(RVA = "0xAFDF58", Offset = "0xAFDF58", VA = "0xAFDF58", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60010A8")]
			[Address(RVA = "0xAFCEE4", Offset = "0xAFCEE4", VA = "0xAFCEE4", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x170002C5")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x60010AA")]
			[Address(RVA = "0xAFE188", Offset = "0xAFE188", VA = "0xAFE188", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87E0F4", Offset = "0x87E0F4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010AB")]
			[Address(RVA = "0xAFE190", Offset = "0xAFE190", VA = "0xAFE190")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87E104", Offset = "0x87E104")]
			set
			{
			}
		}

		[Token(Token = "0x60010A9")]
		[Address(RVA = "0xAFDF60", Offset = "0xAFDF60", VA = "0xAFDF60")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010AC")]
		[Address(RVA = "0xAFDDC8", Offset = "0xAFDDC8", VA = "0xAFDDC8", Slot = "9")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x60010AD")]
		[Address(RVA = "0xAFE198", Offset = "0xAFE198", VA = "0xAFE198")]
		private void Update()
		{
		}

		[Token(Token = "0x60010AE")]
		[Address(RVA = "0xAFE4C4", Offset = "0xAFE4C4", VA = "0xAFE4C4")]
		public static Vector3 GetPointOnBezierCurve(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60010AF")]
		[Address(RVA = "0xAFE6B4", Offset = "0xAFE6B4", VA = "0xAFE6B4")]
		public RayToolView()
		{
		}
	}
	[Token(Token = "0x20002F1")]
	public class DistanceGrabberSample : MonoBehaviour
	{
		[Token(Token = "0x4000D35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool useSpherecast;

		[Token(Token = "0x4000D36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool allowGrabThroughWalls;

		[Token(Token = "0x4000D37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DistanceGrabber[] m_grabbers;

		[Token(Token = "0x170002C6")]
		public bool UseSpherecast
		{
			[Token(Token = "0x60010B0")]
			[Address(RVA = "0xC6DC78", Offset = "0xC6DC78", VA = "0xC6DC78")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60010B1")]
			[Address(RVA = "0xC6DC80", Offset = "0xC6DC80", VA = "0xC6DC80")]
			set
			{
			}
		}

		[Token(Token = "0x170002C7")]
		public bool AllowGrabThroughWalls
		{
			[Token(Token = "0x60010B2")]
			[Address(RVA = "0xC6DD08", Offset = "0xC6DD08", VA = "0xC6DD08")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60010B3")]
			[Address(RVA = "0xC6DD10", Offset = "0xC6DD10", VA = "0xC6DD10")]
			set
			{
			}
		}

		[Token(Token = "0x60010B4")]
		[Address(RVA = "0xC6DD7C", Offset = "0xC6DD7C", VA = "0xC6DD7C")]
		private void Start()
		{
		}

		[Token(Token = "0x60010B5")]
		[Address(RVA = "0xC6DFE0", Offset = "0xC6DFE0", VA = "0xC6DFE0")]
		public void ToggleSphereCasting(Toggle t)
		{
		}

		[Token(Token = "0x60010B6")]
		[Address(RVA = "0xC6DFF0", Offset = "0xC6DFF0", VA = "0xC6DFF0")]
		public void ToggleGrabThroughWalls(Toggle t)
		{
		}

		[Token(Token = "0x60010B7")]
		[Address(RVA = "0xC6E000", Offset = "0xC6E000", VA = "0xC6E000")]
		public DistanceGrabberSample()
		{
		}
	}
	[Token(Token = "0x20002F2")]
	public class ControllerBoxController : MonoBehaviour
	{
		[Token(Token = "0x4000D38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TrainLocomotive _locomotive;

		[Token(Token = "0x4000D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CowController _cowController;

		[Token(Token = "0x60010B8")]
		[Address(RVA = "0xC6BB90", Offset = "0xC6BB90", VA = "0xC6BB90")]
		public void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60010B9")]
		[Address(RVA = "0xC6BBC8", Offset = "0xC6BBC8", VA = "0xC6BBC8")]
		public void DecreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60010BA")]
		[Address(RVA = "0xC6BC00", Offset = "0xC6BC00", VA = "0xC6BC00")]
		public void IncreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60010BB")]
		[Address(RVA = "0xC6BC38", Offset = "0xC6BC38", VA = "0xC6BC38")]
		public void SmokeButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60010BC")]
		[Address(RVA = "0xC6BC70", Offset = "0xC6BC70", VA = "0xC6BC70")]
		public void WhistleButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60010BD")]
		[Address(RVA = "0xC6BCA8", Offset = "0xC6BCA8", VA = "0xC6BCA8")]
		public void ReverseButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60010BE")]
		[Address(RVA = "0xC6BCE0", Offset = "0xC6BCE0", VA = "0xC6BCE0")]
		public void SwitchVisualization(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60010BF")]
		[Address(RVA = "0xC6BE3C", Offset = "0xC6BE3C", VA = "0xC6BE3C")]
		public void GoMoo(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60010C0")]
		[Address(RVA = "0xC6BEAC", Offset = "0xC6BEAC", VA = "0xC6BEAC")]
		public ControllerBoxController()
		{
		}
	}
	[Token(Token = "0x20002F3")]
	public class CowController : MonoBehaviour
	{
		[Token(Token = "0x4000D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animation _cowAnimation;

		[Token(Token = "0x4000D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource _mooCowAudioSource;

		[Token(Token = "0x60010C1")]
		[Address(RVA = "0xC6BEB4", Offset = "0xC6BEB4", VA = "0xC6BEB4")]
		public void PlayMooSound()
		{
		}

		[Token(Token = "0x60010C2")]
		[Address(RVA = "0xC6BE70", Offset = "0xC6BE70", VA = "0xC6BE70")]
		public void GoMooCowGo()
		{
		}

		[Token(Token = "0x60010C3")]
		[Address(RVA = "0xC6BEF4", Offset = "0xC6BEF4", VA = "0xC6BEF4")]
		public CowController()
		{
		}
	}
	[Token(Token = "0x20002F4")]
	public class PanelHMDFollower : MonoBehaviour
	{
		[Token(Token = "0x20002F5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x871538", Offset = "0x871538")]
		private sealed class <LerpToHMD>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000D48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PanelHMDFollower <>4__this;

			[Token(Token = "0x4000D49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <newPanelPosition>5__2;

			[Token(Token = "0x4000D4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <startTime>5__3;

			[Token(Token = "0x4000D4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <endTime>5__4;

			[Token(Token = "0x170002C8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60010CC")]
				[Address(RVA = "0xAFC484", Offset = "0xAFC484", VA = "0xAFC484", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002C9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60010CE")]
				[Address(RVA = "0xAFC4EC", Offset = "0xAFC4EC", VA = "0xAFC4EC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60010C9")]
			[Address(RVA = "0xAFC1B8", Offset = "0xAFC1B8", VA = "0xAFC1B8")]
			[DebuggerHidden]
			public <LerpToHMD>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x60010CA")]
			[Address(RVA = "0xAFC294", Offset = "0xAFC294", VA = "0xAFC294", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60010CB")]
			[Address(RVA = "0xAFC298", Offset = "0xAFC298", VA = "0xAFC298", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60010CD")]
			[Address(RVA = "0xAFC48C", Offset = "0xAFC48C", VA = "0xAFC48C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000D3C")]
		private const float TOTAL_DURATION = 3f;

		[Token(Token = "0x4000D3D")]
		private const float HMD_MOVEMENT_THRESHOLD = 0.3f;

		[Token(Token = "0x4000D3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _maxDistance;

		[Token(Token = "0x4000D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _minDistance;

		[Token(Token = "0x4000D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _minZDistance;

		[Token(Token = "0x4000D41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OVRCameraRig _cameraRig;

		[Token(Token = "0x4000D42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 _panelInitialPosition;

		[Token(Token = "0x4000D43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _coroutine;

		[Token(Token = "0x4000D44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 _prevPos;

		[Token(Token = "0x4000D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 _lastMovedToPos;

		[Token(Token = "0x60010C4")]
		[Address(RVA = "0xAFBDD0", Offset = "0xAFBDD0", VA = "0xAFBDD0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010C5")]
		[Address(RVA = "0xAFBE68", Offset = "0xAFBE68", VA = "0xAFBE68")]
		private void Update()
		{
		}

		[Token(Token = "0x60010C6")]
		[Address(RVA = "0xAFC0F4", Offset = "0xAFC0F4", VA = "0xAFC0F4")]
		private Vector3 CalculateIdealAnchorPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60010C7")]
		[Address(RVA = "0xAFC084", Offset = "0xAFC084", VA = "0xAFC084")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x87E114", Offset = "0x87E114")]
		private IEnumerator LerpToHMD()
		{
			return null;
		}

		[Token(Token = "0x60010C8")]
		[Address(RVA = "0xAFC1E4", Offset = "0xAFC1E4", VA = "0xAFC1E4")]
		public PanelHMDFollower()
		{
		}
	}
	[Token(Token = "0x20002F6")]
	public class SelectionCylinder : MonoBehaviour
	{
		[Token(Token = "0x20002F7")]
		public enum SelectionState
		{
			[Token(Token = "0x4000D53")]
			Off,
			[Token(Token = "0x4000D54")]
			Selected,
			[Token(Token = "0x4000D55")]
			Highlighted
		}

		[Token(Token = "0x4000D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _selectionMeshRenderer;

		[Token(Token = "0x4000D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _colorId;

		[Token(Token = "0x4000D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material[] _selectionMaterials;

		[Token(Token = "0x4000D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color[] _defaultSelectionColors;

		[Token(Token = "0x4000D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color[] _highlightColors;

		[Token(Token = "0x4000D51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SelectionState _currSelectionState;

		[Token(Token = "0x170002CA")]
		public SelectionState CurrSelectionState
		{
			[Token(Token = "0x60010CF")]
			[Address(RVA = "0xAFE714", Offset = "0xAFE714", VA = "0xAFE714")]
			get
			{
				return default(SelectionState);
			}
			[Token(Token = "0x60010D0")]
			[Address(RVA = "0xAFE71C", Offset = "0xAFE71C", VA = "0xAFE71C")]
			set
			{
			}
		}

		[Token(Token = "0x60010D1")]
		[Address(RVA = "0xAFE8A4", Offset = "0xAFE8A4", VA = "0xAFE8A4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010D2")]
		[Address(RVA = "0xAFEA64", Offset = "0xAFEA64", VA = "0xAFEA64")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60010D3")]
		[Address(RVA = "0xAFE7A4", Offset = "0xAFE7A4", VA = "0xAFE7A4")]
		private void AffectSelectionColor(Color[] newColors)
		{
		}

		[Token(Token = "0x60010D4")]
		[Address(RVA = "0xAFEB54", Offset = "0xAFEB54", VA = "0xAFEB54")]
		public SelectionCylinder()
		{
		}
	}
	[Token(Token = "0x20002F8")]
	public class TrackSegment : MonoBehaviour
	{
		[Token(Token = "0x20002F9")]
		public enum SegmentType
		{
			[Token(Token = "0x4000D64")]
			Straight,
			[Token(Token = "0x4000D65")]
			LeftTurn,
			[Token(Token = "0x4000D66")]
			RightTurn,
			[Token(Token = "0x4000D67")]
			Switch
		}

		[Token(Token = "0x4000D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SegmentType _segmentType;

		[Token(Token = "0x4000D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshFilter _straight;

		[Token(Token = "0x4000D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshFilter _leftTurn;

		[Token(Token = "0x4000D59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshFilter _rightTurn;

		[Token(Token = "0x4000D5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _gridSize;

		[Token(Token = "0x4000D5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int _subDivCount;

		[Token(Token = "0x4000D5C")]
		private const float _originalGridSize = 0.8f;

		[Token(Token = "0x4000D5D")]
		private const float _trackWidth = 0.15f;

		[Token(Token = "0x4000D5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject _mesh;

		[Token(Token = "0x4000D5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x878CA4", Offset = "0x878CA4")]
		private float <StartDistance>k__BackingField;

		[Token(Token = "0x4000D60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Pose _p1;

		[Token(Token = "0x4000D61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Pose _p2;

		[Token(Token = "0x4000D62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Pose _endPose;

		[Token(Token = "0x170002CB")]
		public float StartDistance
		{
			[Token(Token = "0x60010D6")]
			[Address(RVA = "0xAFEBC0", Offset = "0xAFEBC0", VA = "0xAFEBC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87E1C8", Offset = "0x87E1C8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60010D7")]
			[Address(RVA = "0xAFEBC8", Offset = "0xAFEBC8", VA = "0xAFEBC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87E1D8", Offset = "0x87E1D8")]
			set
			{
			}
		}

		[Token(Token = "0x170002CC")]
		public float GridSize
		{
			[Token(Token = "0x60010D8")]
			[Address(RVA = "0xAFEBD0", Offset = "0xAFEBD0", VA = "0xAFEBD0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60010D9")]
			[Address(RVA = "0xAFEBD8", Offset = "0xAFEBD8", VA = "0xAFEBD8")]
			private set
			{
			}
		}

		[Token(Token = "0x170002CD")]
		public int SubDivCount
		{
			[Token(Token = "0x60010DA")]
			[Address(RVA = "0xAFEBE0", Offset = "0xAFEBE0", VA = "0xAFEBE0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60010DB")]
			[Address(RVA = "0xAFEBE8", Offset = "0xAFEBE8", VA = "0xAFEBE8")]
			set
			{
			}
		}

		[Token(Token = "0x170002CE")]
		public SegmentType Type
		{
			[Token(Token = "0x60010DC")]
			[Address(RVA = "0xAFEBF0", Offset = "0xAFEBF0", VA = "0xAFEBF0")]
			get
			{
				return default(SegmentType);
			}
		}

		[Token(Token = "0x170002CF")]
		public Pose EndPose
		{
			[Token(Token = "0x60010DD")]
			[Address(RVA = "0xAFEBF8", Offset = "0xAFEBF8", VA = "0xAFEBF8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D0")]
		public float Radius
		{
			[Token(Token = "0x60010DE")]
			[Address(RVA = "0xAFF08C", Offset = "0xAFF08C", VA = "0xAFF08C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002D1")]
		public float SegmentLength
		{
			[Token(Token = "0x60010E0")]
			[Address(RVA = "0xAFEC60", Offset = "0xAFEC60", VA = "0xAFEC60")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60010DF")]
		[Address(RVA = "0xAFF09C", Offset = "0xAFF09C", VA = "0xAFF09C")]
		public float setGridSize(float size)
		{
			return default(float);
		}

		[Token(Token = "0x60010E1")]
		[Address(RVA = "0xAFECA0", Offset = "0xAFECA0", VA = "0xAFECA0")]
		public void UpdatePose(float distanceIntoSegment, Pose pose)
		{
		}

		[Token(Token = "0x60010E2")]
		[Address(RVA = "0xAFF0B4", Offset = "0xAFF0B4", VA = "0xAFF0B4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60010E3")]
		[Address(RVA = "0xAFF120", Offset = "0xAFF120", VA = "0xAFF120")]
		private void DrawDebugLines()
		{
		}

		[Token(Token = "0x60010E4")]
		[Address(RVA = "0xAFFCA8", Offset = "0xAFFCA8", VA = "0xAFFCA8")]
		public void RegenerateTrackAndMesh()
		{
		}

		[Token(Token = "0x60010E5")]
		[Address(RVA = "0xAFFFB4", Offset = "0xAFFFB4", VA = "0xAFFFB4")]
		public TrackSegment()
		{
		}
	}
	[Token(Token = "0x20002FA")]
	public class TrainButtonVisualController : MonoBehaviour
	{
		[Token(Token = "0x20002FB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x871548", Offset = "0x871548")]
		private sealed class <ResetPosition>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000D7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainButtonVisualController <>4__this;

			[Token(Token = "0x4000D7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <startTime>5__2;

			[Token(Token = "0x4000D7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <endTime>5__3;

			[Token(Token = "0x170002D2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60010F4")]
				[Address(RVA = "0xB00BCC", Offset = "0xB00BCC", VA = "0xB00BCC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002D3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60010F6")]
				[Address(RVA = "0xB00C34", Offset = "0xB00C34", VA = "0xB00C34", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60010F1")]
			[Address(RVA = "0xB00944", Offset = "0xB00944", VA = "0xB00944")]
			[DebuggerHidden]
			public <ResetPosition>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x60010F2")]
			[Address(RVA = "0xB00A20", Offset = "0xB00A20", VA = "0xB00A20", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60010F3")]
			[Address(RVA = "0xB00A24", Offset = "0xB00A24", VA = "0xB00A24", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60010F5")]
			[Address(RVA = "0xB00BD4", Offset = "0xB00BD4", VA = "0xB00BD4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000D68")]
		private const float LERP_TO_OLD_POS_DURATION = 1f;

		[Token(Token = "0x4000D69")]
		private const float LOCAL_SIZE_HALVED = 0.5f;

		[Token(Token = "0x4000D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x4000D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshRenderer _glowRenderer;

		[Token(Token = "0x4000D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ButtonController _buttonController;

		[Token(Token = "0x4000D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color _buttonContactColor;

		[Token(Token = "0x4000D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Color _buttonActionColor;

		[Token(Token = "0x4000D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4000D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioClip _actionSoundEffect;

		[Token(Token = "0x4000D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform _buttonContactTransform;

		[Token(Token = "0x4000D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float _contactMaxDisplacementDistance;

		[Token(Token = "0x4000D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material _buttonMaterial;

		[Token(Token = "0x4000D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Color _buttonDefaultColor;

		[Token(Token = "0x4000D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int _materialColorId;

		[Token(Token = "0x4000D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool _buttonInContactOrActionStates;

		[Token(Token = "0x4000D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Coroutine _lerpToOldPositionCr;

		[Token(Token = "0x4000D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 _oldPosition;

		[Token(Token = "0x60010E6")]
		[Address(RVA = "0xB00058", Offset = "0xB00058", VA = "0xB00058")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010E7")]
		[Address(RVA = "0xB00104", Offset = "0xB00104", VA = "0xB00104")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60010E8")]
		[Address(RVA = "0xB001B8", Offset = "0xB001B8", VA = "0xB001B8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60010E9")]
		[Address(RVA = "0xB002EC", Offset = "0xB002EC", VA = "0xB002EC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60010EA")]
		[Address(RVA = "0xB00464", Offset = "0xB00464", VA = "0xB00464")]
		private void ActionOrInContactZoneStayEvent(ColliderZoneArgs collisionArgs)
		{
		}

		[Token(Token = "0x60010EB")]
		[Address(RVA = "0xB00600", Offset = "0xB00600", VA = "0xB00600")]
		private void InteractableStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60010EC")]
		[Address(RVA = "0xB0087C", Offset = "0xB0087C", VA = "0xB0087C")]
		private void PlaySound(AudioClip clip)
		{
		}

		[Token(Token = "0x60010ED")]
		[Address(RVA = "0xB00714", Offset = "0xB00714", VA = "0xB00714")]
		private void StopResetLerping()
		{
		}

		[Token(Token = "0x60010EE")]
		[Address(RVA = "0xB00728", Offset = "0xB00728", VA = "0xB00728")]
		private void LerpToOldPosition()
		{
		}

		[Token(Token = "0x60010EF")]
		[Address(RVA = "0xB008D4", Offset = "0xB008D4", VA = "0xB008D4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x87E1E8", Offset = "0x87E1E8")]
		private IEnumerator ResetPosition()
		{
			return null;
		}

		[Token(Token = "0x60010F0")]
		[Address(RVA = "0xB00970", Offset = "0xB00970", VA = "0xB00970")]
		public TrainButtonVisualController()
		{
		}
	}
	[Token(Token = "0x20002FC")]
	public class TrainCar : TrainCarBase
	{
		[Token(Token = "0x4000D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TrainCarBase _parentLocomotive;

		[Token(Token = "0x4000D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		protected float _distanceBehindParent;

		[Token(Token = "0x170002D4")]
		public float DistanceBehindParentScaled
		{
			[Token(Token = "0x60010F7")]
			[Address(RVA = "0xB00C3C", Offset = "0xB00C3C", VA = "0xB00C3C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60010F8")]
		[Address(RVA = "0xB00C4C", Offset = "0xB00C4C", VA = "0xB00C4C", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60010F9")]
		[Address(RVA = "0xB00C54", Offset = "0xB00C54", VA = "0xB00C54", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x60010FA")]
		[Address(RVA = "0xB010C0", Offset = "0xB010C0", VA = "0xB010C0")]
		public TrainCar()
		{
		}
	}
	[Token(Token = "0x20002FD")]
	public abstract class TrainCarBase : MonoBehaviour
	{
		[Token(Token = "0x4000D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3 OFFSET;

		[Token(Token = "0x4000D81")]
		private const float WHEEL_RADIUS = 0.027f;

		[Token(Token = "0x4000D82")]
		private const float TWO_PI = (float)Math.PI * 2f;

		[Token(Token = "0x4000D83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Transform _frontWheels;

		[Token(Token = "0x4000D84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Transform _rearWheels;

		[Token(Token = "0x4000D85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected TrainTrack _trainTrack;

		[Token(Token = "0x4000D86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected Transform[] _individualWheels;

		[Token(Token = "0x4000D87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x878DA4", Offset = "0x878DA4")]
		private float <Distance>k__BackingField;

		[Token(Token = "0x4000D88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected float scale;

		[Token(Token = "0x4000D89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Pose _frontPose;

		[Token(Token = "0x4000D8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Pose _rearPose;

		[Token(Token = "0x170002D5")]
		public float Distance
		{
			[Token(Token = "0x60010FB")]
			[Address(RVA = "0xB011B8", Offset = "0xB011B8", VA = "0xB011B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87E29C", Offset = "0x87E29C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60010FC")]
			[Address(RVA = "0xB011C0", Offset = "0xB011C0", VA = "0xB011C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87E2AC", Offset = "0x87E2AC")]
			protected set
			{
			}
		}

		[Token(Token = "0x170002D6")]
		public float Scale
		{
			[Token(Token = "0x60010FD")]
			[Address(RVA = "0xB011C8", Offset = "0xB011C8", VA = "0xB011C8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60010FE")]
			[Address(RVA = "0xB011D0", Offset = "0xB011D0", VA = "0xB011D0")]
			set
			{
			}
		}

		[Token(Token = "0x60010FF")]
		[Address(RVA = "0xB00C50", Offset = "0xB00C50", VA = "0xB00C50", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001100")]
		[Address(RVA = "0xB011D8", Offset = "0xB011D8", VA = "0xB011D8")]
		public void UpdatePose(float distance, TrainCarBase train, Pose pose)
		{
		}

		[Token(Token = "0x6001101")]
		[Address(RVA = "0xB00C9C", Offset = "0xB00C9C", VA = "0xB00C9C")]
		protected void UpdateCarPosition()
		{
		}

		[Token(Token = "0x6001102")]
		[Address(RVA = "0xB00F74", Offset = "0xB00F74", VA = "0xB00F74")]
		protected void RotateCarWheels()
		{
		}

		[Token(Token = "0x6001103")]
		public abstract void UpdatePosition();

		[Token(Token = "0x6001104")]
		[Address(RVA = "0xB01130", Offset = "0xB01130", VA = "0xB01130")]
		protected TrainCarBase()
		{
		}
	}
	[Token(Token = "0x20002FE")]
	public class TrainCrossingController : MonoBehaviour
	{
		[Token(Token = "0x20002FF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x871558", Offset = "0x871558")]
		private sealed class <AnimateCrossing>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000D97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainCrossingController <>4__this;

			[Token(Token = "0x4000D98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float animationLength;

			[Token(Token = "0x4000D99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <animationEndTime>5__2;

			[Token(Token = "0x4000D9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <lightBlinkDuration>5__3;

			[Token(Token = "0x4000D9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <lightBlinkStartTime>5__4;

			[Token(Token = "0x4000D9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <lightBlinkEndTime>5__5;

			[Token(Token = "0x4000D9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Material <lightToBlinkOn>5__6;

			[Token(Token = "0x4000D9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Material <lightToBlinkOff>5__7;

			[Token(Token = "0x4000D9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Color <onColor>5__8;

			[Token(Token = "0x4000DA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Color <offColor>5__9;

			[Token(Token = "0x170002D7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001112")]
				[Address(RVA = "0xB01B60", Offset = "0xB01B60", VA = "0xB01B60", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002D8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001114")]
				[Address(RVA = "0xB01BC8", Offset = "0xB01BC8", VA = "0xB01BC8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600110F")]
			[Address(RVA = "0xB017A4", Offset = "0xB017A4", VA = "0xB017A4")]
			[DebuggerHidden]
			public <AnimateCrossing>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6001110")]
			[Address(RVA = "0xB0193C", Offset = "0xB0193C", VA = "0xB0193C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001111")]
			[Address(RVA = "0xB01940", Offset = "0xB01940", VA = "0xB01940", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001113")]
			[Address(RVA = "0xB01B68", Offset = "0xB01B68", VA = "0xB01B68", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4000D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip[] _crossingSounds;

		[Token(Token = "0x4000D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshRenderer _lightSide1Renderer;

		[Token(Token = "0x4000D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshRenderer _lightSide2Renderer;

		[Token(Token = "0x4000D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x4000D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material _lightsSide1Mat;

		[Token(Token = "0x4000D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material _lightsSide2Mat;

		[Token(Token = "0x4000D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _colorId;

		[Token(Token = "0x4000D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Coroutine _xingAnimationCr;

		[Token(Token = "0x4000D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x6001106")]
		[Address(RVA = "0xB013A8", Offset = "0xB013A8", VA = "0xB013A8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001107")]
		[Address(RVA = "0xB013F4", Offset = "0xB013F4", VA = "0xB013F4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001108")]
		[Address(RVA = "0xB01500", Offset = "0xB01500", VA = "0xB01500")]
		public void CrossingButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001109")]
		[Address(RVA = "0xB01648", Offset = "0xB01648", VA = "0xB01648")]
		private void Update()
		{
		}

		[Token(Token = "0x600110A")]
		[Address(RVA = "0xB0155C", Offset = "0xB0155C", VA = "0xB0155C")]
		private void ActivateTrainCrossing()
		{
		}

		[Token(Token = "0x600110B")]
		[Address(RVA = "0xB01724", Offset = "0xB01724", VA = "0xB01724")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x87E2BC", Offset = "0x87E2BC")]
		private IEnumerator AnimateCrossing(float animationLength)
		{
			return null;
		}

		[Token(Token = "0x600110C")]
		[Address(RVA = "0xB017D0", Offset = "0xB017D0", VA = "0xB017D0")]
		private void AffectMaterials(Material[] materials, Color newColor)
		{
		}

		[Token(Token = "0x600110D")]
		[Address(RVA = "0xB0187C", Offset = "0xB0187C", VA = "0xB0187C")]
		private void ToggleLightObjects(bool enableState)
		{
		}

		[Token(Token = "0x600110E")]
		[Address(RVA = "0xB018DC", Offset = "0xB018DC", VA = "0xB018DC")]
		public TrainCrossingController()
		{
		}
	}
	[Token(Token = "0x2000300")]
	public class TrainLocomotive : TrainCarBase
	{
		[Token(Token = "0x2000301")]
		private enum EngineSoundState
		{
			[Token(Token = "0x4000DBF")]
			Start,
			[Token(Token = "0x4000DC0")]
			AccelerateOrSetProperSpeed,
			[Token(Token = "0x4000DC1")]
			Stop
		}

		[Token(Token = "0x2000302")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x871568", Offset = "0x871568")]
		private sealed class <StartStopTrain>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000DC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000DC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000DC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool startTrain;

			[Token(Token = "0x4000DC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TrainLocomotive <>4__this;

			[Token(Token = "0x4000DC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <endSpeed>5__2;

			[Token(Token = "0x4000DC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <timePeriodForSpeedChange>5__3;

			[Token(Token = "0x4000DC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x4000DC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <endTime>5__5;

			[Token(Token = "0x4000DCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <startSpeed>5__6;

			[Token(Token = "0x170002D9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001127")]
				[Address(RVA = "0xB02808", Offset = "0xB02808", VA = "0xB02808", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002DA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001129")]
				[Address(RVA = "0xB02870", Offset = "0xB02870", VA = "0xB02870", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001124")]
			[Address(RVA = "0xB01ED4", Offset = "0xB01ED4", VA = "0xB01ED4")]
			[DebuggerHidden]
			public <StartStopTrain>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x6001125")]
			[Address(RVA = "0xB025E8", Offset = "0xB025E8", VA = "0xB025E8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001126")]
			[Address(RVA = "0xB025EC", Offset = "0xB025EC", VA = "0xB025EC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001128")]
			[Address(RVA = "0xB02810", Offset = "0xB02810", VA = "0xB02810", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000DA1")]
		private const float MIN_SPEED = 0.2f;

		[Token(Token = "0x4000DA2")]
		private const float MAX_SPEED = 2.7f;

		[Token(Token = "0x4000DA3")]
		private const float SMOKE_SPEED_MULTIPLIER = 8f;

		[Token(Token = "0x4000DA4")]
		private const int MAX_PARTICLES_MULTIPLIER = 3;

		[Token(Token = "0x4000DA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x878E04", Offset = "0x878E04")]
		[SerializeField]
		protected float _initialSpeed;

		[Token(Token = "0x4000DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x4000DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _decreaseSpeedButton;

		[Token(Token = "0x4000DA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject _increaseSpeedButton;

		[Token(Token = "0x4000DA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject _smokeButton;

		[Token(Token = "0x4000DAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject _whistleButton;

		[Token(Token = "0x4000DAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject _reverseButton;

		[Token(Token = "0x4000DAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private AudioSource _whistleAudioSource;

		[Token(Token = "0x4000DAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private AudioClip _whistleSound;

		[Token(Token = "0x4000DAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private AudioSource _engineAudioSource;

		[Token(Token = "0x4000DAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private AudioClip[] _accelerationSounds;

		[Token(Token = "0x4000DB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private AudioClip[] _decelerationSounds;

		[Token(Token = "0x4000DB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private AudioClip _startUpSound;

		[Token(Token = "0x4000DB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private AudioSource _smokeStackAudioSource;

		[Token(Token = "0x4000DB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private AudioClip _smokeSound;

		[Token(Token = "0x4000DB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private ParticleSystem _smoke1;

		[Token(Token = "0x4000DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private ParticleSystem _smoke2;

		[Token(Token = "0x4000DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private TrainCarBase[] _childCars;

		[Token(Token = "0x4000DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool _isMoving;

		[Token(Token = "0x4000DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		private bool _reverse;

		[Token(Token = "0x4000DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float _currentSpeed;

		[Token(Token = "0x4000DBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float _speedDiv;

		[Token(Token = "0x4000DBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float _standardRateOverTimeMultiplier;

		[Token(Token = "0x4000DBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int _standardMaxParticles;

		[Token(Token = "0x4000DBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Coroutine _startStopTrainCr;

		[Token(Token = "0x6001115")]
		[Address(RVA = "0xB01BD0", Offset = "0xB01BD0", VA = "0xB01BD0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001116")]
		[Address(RVA = "0xB01D28", Offset = "0xB01D28", VA = "0xB01D28")]
		private void Update()
		{
		}

		[Token(Token = "0x6001117")]
		[Address(RVA = "0xB01D34", Offset = "0xB01D34", VA = "0xB01D34", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x6001118")]
		[Address(RVA = "0xB01E88", Offset = "0xB01E88", VA = "0xB01E88")]
		public void StartStopStateChanged()
		{
		}

		[Token(Token = "0x6001119")]
		[Address(RVA = "0xB01CA4", Offset = "0xB01CA4", VA = "0xB01CA4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x87E370", Offset = "0x87E370")]
		private IEnumerator StartStopTrain(bool startTrain)
		{
			return null;
		}

		[Token(Token = "0x600111A")]
		[Address(RVA = "0xB01F00", Offset = "0xB01F00", VA = "0xB01F00")]
		private float PlayEngineSound(EngineSoundState engineSoundState)
		{
			return default(float);
		}

		[Token(Token = "0x600111B")]
		[Address(RVA = "0xB01E24", Offset = "0xB01E24", VA = "0xB01E24")]
		private void UpdateDistance()
		{
		}

		[Token(Token = "0x600111C")]
		[Address(RVA = "0xB02134", Offset = "0xB02134", VA = "0xB02134")]
		public void DecreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x600111D")]
		[Address(RVA = "0xB022E0", Offset = "0xB022E0", VA = "0xB022E0")]
		public void IncreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x600111E")]
		[Address(RVA = "0xB021F0", Offset = "0xB021F0", VA = "0xB021F0")]
		private void UpdateSmokeEmissionBasedOnSpeed()
		{
		}

		[Token(Token = "0x600111F")]
		[Address(RVA = "0xB0239C", Offset = "0xB0239C", VA = "0xB0239C")]
		private float GetCurrentSmokeEmission()
		{
			return default(float);
		}

		[Token(Token = "0x6001120")]
		[Address(RVA = "0xB02424", Offset = "0xB02424", VA = "0xB02424")]
		public void SmokeButtonStateChanged()
		{
		}

		[Token(Token = "0x6001121")]
		[Address(RVA = "0xB024B0", Offset = "0xB024B0", VA = "0xB024B0")]
		public void WhistleButtonStateChanged()
		{
		}

		[Token(Token = "0x6001122")]
		[Address(RVA = "0xB0256C", Offset = "0xB0256C", VA = "0xB0256C")]
		public void ReverseButtonStateChanged()
		{
		}

		[Token(Token = "0x6001123")]
		[Address(RVA = "0xB0257C", Offset = "0xB0257C", VA = "0xB0257C")]
		public TrainLocomotive()
		{
		}
	}
	[Token(Token = "0x2000303")]
	public class TrainTrack : MonoBehaviour
	{
		[Token(Token = "0x4000DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _gridSize;

		[Token(Token = "0x4000DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int _subDivCount;

		[Token(Token = "0x4000DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _segmentParent;

		[Token(Token = "0x4000DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _trainParent;

		[Token(Token = "0x4000DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool _regnerateTrackMeshOnAwake;

		[Token(Token = "0x4000DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _trainLength;

		[Token(Token = "0x4000DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TrackSegment[] _trackSegments;

		[Token(Token = "0x170002DB")]
		public float TrackLength
		{
			[Token(Token = "0x600112A")]
			[Address(RVA = "0xB02878", Offset = "0xB02878", VA = "0xB02878")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600112B")]
			[Address(RVA = "0xB02880", Offset = "0xB02880", VA = "0xB02880")]
			private set
			{
			}
		}

		[Token(Token = "0x600112C")]
		[Address(RVA = "0xB02888", Offset = "0xB02888", VA = "0xB02888")]
		private void Awake()
		{
		}

		[Token(Token = "0x600112D")]
		[Address(RVA = "0xB01258", Offset = "0xB01258", VA = "0xB01258")]
		public TrackSegment GetSegment(float distance)
		{
			return null;
		}

		[Token(Token = "0x600112E")]
		[Address(RVA = "0xB0288C", Offset = "0xB0288C", VA = "0xB0288C")]
		public void Regenerate()
		{
		}

		[Token(Token = "0x600112F")]
		[Address(RVA = "0xB02A84", Offset = "0xB02A84", VA = "0xB02A84")]
		private void SetScale(float ratio)
		{
		}

		[Token(Token = "0x6001130")]
		[Address(RVA = "0xB02BA0", Offset = "0xB02BA0", VA = "0xB02BA0")]
		public TrainTrack()
		{
		}
	}
	[Token(Token = "0x2000304")]
	public class Pose
	{
		[Token(Token = "0x4000DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Position;

		[Token(Token = "0x4000DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion Rotation;

		[Token(Token = "0x6001131")]
		[Address(RVA = "0xAFC934", Offset = "0xAFC934", VA = "0xAFC934")]
		public Pose()
		{
		}
	}
	[Token(Token = "0x2000305")]
	public class WindmillBladesController : MonoBehaviour
	{
		[Token(Token = "0x2000306")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x871578", Offset = "0x871578")]
		private sealed class <LerpToSpeed>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000DDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000DE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000DE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x4000DE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float goalSpeed;

			[Token(Token = "0x4000DE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <totalTime>5__2;

			[Token(Token = "0x4000DE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <startSpeed>5__3;

			[Token(Token = "0x170002DD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600113E")]
				[Address(RVA = "0xB03184", Offset = "0xB03184", VA = "0xB03184", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002DE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001140")]
				[Address(RVA = "0xB031EC", Offset = "0xB031EC", VA = "0xB031EC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600113B")]
			[Address(RVA = "0xB02E48", Offset = "0xB02E48", VA = "0xB02E48")]
			[DebuggerHidden]
			public <LerpToSpeed>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x600113C")]
			[Address(RVA = "0xB02FA8", Offset = "0xB02FA8", VA = "0xB02FA8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600113D")]
			[Address(RVA = "0xB02FAC", Offset = "0xB02FAC", VA = "0xB02FAC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600113F")]
			[Address(RVA = "0xB0318C", Offset = "0xB0318C", VA = "0xB0318C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000307")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x871588", Offset = "0x871588")]
		private sealed class <PlaySoundDelayed>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000DE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000DE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000DE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x4000DE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AudioClip initial;

			[Token(Token = "0x4000DE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float timeDelayAfterInitial;

			[Token(Token = "0x4000DEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public AudioClip clip;

			[Token(Token = "0x170002DF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001144")]
				[Address(RVA = "0xB032C0", Offset = "0xB032C0", VA = "0xB032C0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002E0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001146")]
				[Address(RVA = "0xB03328", Offset = "0xB03328", VA = "0xB03328", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001141")]
			[Address(RVA = "0xB02F08", Offset = "0xB02F08", VA = "0xB02F08")]
			[DebuggerHidden]
			public <PlaySoundDelayed>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6001142")]
			[Address(RVA = "0xB031F4", Offset = "0xB031F4", VA = "0xB031F4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001143")]
			[Address(RVA = "0xB031F8", Offset = "0xB031F8", VA = "0xB031F8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001145")]
			[Address(RVA = "0xB032C8", Offset = "0xB032C8", VA = "0xB032C8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000DD4")]
		private const float MAX_TIME = 1f;

		[Token(Token = "0x4000DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4000DD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip _windMillRotationSound;

		[Token(Token = "0x4000DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip _windMillStartSound;

		[Token(Token = "0x4000DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _windMillStopSound;

		[Token(Token = "0x4000DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x878FEC", Offset = "0x878FEC")]
		private bool <IsMoving>k__BackingField;

		[Token(Token = "0x4000DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _currentSpeed;

		[Token(Token = "0x4000DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _lerpSpeedCoroutine;

		[Token(Token = "0x4000DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Coroutine _audioChangeCr;

		[Token(Token = "0x4000DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion _originalRotation;

		[Token(Token = "0x4000DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _rotAngle;

		[Token(Token = "0x170002DC")]
		public bool IsMoving
		{
			[Token(Token = "0x6001132")]
			[Address(RVA = "0xB02BBC", Offset = "0xB02BBC", VA = "0xB02BBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87E424", Offset = "0x87E424")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001133")]
			[Address(RVA = "0xB02BC4", Offset = "0xB02BC4", VA = "0xB02BC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87E434", Offset = "0x87E434")]
			private set
			{
			}
		}

		[Token(Token = "0x6001134")]
		[Address(RVA = "0xB02BD0", Offset = "0xB02BD0", VA = "0xB02BD0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001135")]
		[Address(RVA = "0xB02C0C", Offset = "0xB02C0C", VA = "0xB02C0C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001136")]
		[Address(RVA = "0xB02D60", Offset = "0xB02D60", VA = "0xB02D60")]
		public void SetMoveState(bool newMoveState, float goalSpeed)
		{
		}

		[Token(Token = "0x6001137")]
		[Address(RVA = "0xB02DC8", Offset = "0xB02DC8", VA = "0xB02DC8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x87E444", Offset = "0x87E444")]
		private IEnumerator LerpToSpeed(float goalSpeed)
		{
			return null;
		}

		[Token(Token = "0x6001138")]
		[Address(RVA = "0xB02E74", Offset = "0xB02E74", VA = "0xB02E74")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x87E4A8", Offset = "0x87E4A8")]
		private IEnumerator PlaySoundDelayed(AudioClip initial, AudioClip clip, float timeDelayAfterInitial)
		{
			return null;
		}

		[Token(Token = "0x6001139")]
		[Address(RVA = "0xB02F34", Offset = "0xB02F34", VA = "0xB02F34")]
		private void PlaySound(AudioClip clip, bool loop = false)
		{
		}

		[Token(Token = "0x600113A")]
		[Address(RVA = "0xB02FA0", Offset = "0xB02FA0", VA = "0xB02FA0")]
		public WindmillBladesController()
		{
		}
	}
	[Token(Token = "0x2000308")]
	public class WindmillController : MonoBehaviour
	{
		[Token(Token = "0x4000DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x4000DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _maxSpeed;

		[Token(Token = "0x4000DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x4000DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WindmillBladesController _bladesRotation;

		[Token(Token = "0x4000DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x6001147")]
		[Address(RVA = "0xB03330", Offset = "0xB03330", VA = "0xB03330")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001148")]
		[Address(RVA = "0xB03398", Offset = "0xB03398", VA = "0xB03398")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001149")]
		[Address(RVA = "0xB03450", Offset = "0xB03450", VA = "0xB03450")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600114A")]
		[Address(RVA = "0xB03550", Offset = "0xB03550", VA = "0xB03550")]
		private void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600114B")]
		[Address(RVA = "0xB035CC", Offset = "0xB035CC", VA = "0xB035CC")]
		private void Update()
		{
		}

		[Token(Token = "0x600114C")]
		[Address(RVA = "0xB036A8", Offset = "0xB036A8", VA = "0xB036A8")]
		public WindmillController()
		{
		}
	}
	[Token(Token = "0x2000309")]
	public class OVROverlaySample : MonoBehaviour
	{
		[Token(Token = "0x200030A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x871598", Offset = "0x871598")]
		private sealed class <WaitforOVROverlay>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OVROverlaySample <>4__this;

			[Token(Token = "0x170002E1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001160")]
				[Address(RVA = "0xAFBD60", Offset = "0xAFBD60", VA = "0xAFBD60", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002E2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001162")]
				[Address(RVA = "0xAFBDC8", Offset = "0xAFBDC8", VA = "0xAFBDC8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600115D")]
			[Address(RVA = "0xAFBAE0", Offset = "0xAFBAE0", VA = "0xAFBAE0")]
			[DebuggerHidden]
			public <WaitforOVROverlay>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x600115E")]
			[Address(RVA = "0xAFBB0C", Offset = "0xAFBB0C", VA = "0xAFBB0C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600115F")]
			[Address(RVA = "0xAFBB10", Offset = "0xAFBB10", VA = "0xAFBB10", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001161")]
			[Address(RVA = "0xAFBD68", Offset = "0xAFBD68", VA = "0xAFBD68", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inMenu;

		[Token(Token = "0x4000DF1")]
		private const string ovrOverlayID = "OVROverlayID";

		[Token(Token = "0x4000DF2")]
		private const string applicationID = "ApplicationID";

		[Token(Token = "0x4000DF3")]
		private const string noneID = "NoneID";

		[Token(Token = "0x4000DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Toggle applicationRadioButton;

		[Token(Token = "0x4000DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Toggle noneRadioButton;

		[Token(Token = "0x4000DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x87902C", Offset = "0x87902C")]
		public GameObject mainCamera;

		[Token(Token = "0x4000DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject uiCamera;

		[Token(Token = "0x4000DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject uiGeoParent;

		[Token(Token = "0x4000DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject worldspaceGeoParent;

		[Token(Token = "0x4000DFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public OVROverlay cameraRenderOverlay;

		[Token(Token = "0x4000DFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public OVROverlay renderingLabelOverlay;

		[Token(Token = "0x4000DFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Texture applicationLabelTexture;

		[Token(Token = "0x4000DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Texture compositorLabelTexture;

		[Token(Token = "0x4000DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x879064", Offset = "0x879064")]
		public GameObject prefabForLevelLoadSim;

		[Token(Token = "0x4000DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public OVROverlay cubemapOverlay;

		[Token(Token = "0x4000E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public OVROverlay loadingTextQuadOverlay;

		[Token(Token = "0x4000E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float distanceFromCamToLoadText;

		[Token(Token = "0x4000E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float cubeSpawnRadius;

		[Token(Token = "0x4000E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float heightBetweenItems;

		[Token(Token = "0x4000E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int numObjectsPerLevel;

		[Token(Token = "0x4000E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int numLevels;

		[Token(Token = "0x4000E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int numLoopsTrigger;

		[Token(Token = "0x4000E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<GameObject> spawnedCubes;

		[Token(Token = "0x600114D")]
		[Address(RVA = "0xC729C4", Offset = "0xC729C4", VA = "0xC729C4")]
		private void Start()
		{
		}

		[Token(Token = "0x600114E")]
		[Address(RVA = "0xC731A4", Offset = "0xC731A4", VA = "0xC731A4")]
		private void Update()
		{
		}

		[Token(Token = "0x600114F")]
		[Address(RVA = "0xC732E4", Offset = "0xC732E4", VA = "0xC732E4")]
		private void ActivateWorldGeo()
		{
		}

		[Token(Token = "0x6001150")]
		[Address(RVA = "0xC7340C", Offset = "0xC7340C", VA = "0xC7340C")]
		private void ActivateOVROverlay()
		{
		}

		[Token(Token = "0x6001151")]
		[Address(RVA = "0xC73534", Offset = "0xC73534", VA = "0xC73534")]
		private void ActivateNone()
		{
		}

		[Token(Token = "0x6001152")]
		[Address(RVA = "0xC732B8", Offset = "0xC732B8", VA = "0xC732B8")]
		private void TriggerLoad()
		{
		}

		[Token(Token = "0x6001153")]
		[Address(RVA = "0xC7360C", Offset = "0xC7360C", VA = "0xC7360C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x87E5AC", Offset = "0x87E5AC")]
		private IEnumerator WaitforOVROverlay()
		{
			return null;
		}

		[Token(Token = "0x6001154")]
		[Address(RVA = "0xC7367C", Offset = "0xC7367C", VA = "0xC7367C")]
		private void TriggerUnload()
		{
		}

		[Token(Token = "0x6001155")]
		[Address(RVA = "0xC72D30", Offset = "0xC72D30", VA = "0xC72D30")]
		private void CameraAndRenderTargetSetup()
		{
		}

		[Token(Token = "0x6001156")]
		[Address(RVA = "0xC737A4", Offset = "0xC737A4", VA = "0xC737A4")]
		private void SimulateLevelLoad()
		{
		}

		[Token(Token = "0x6001157")]
		[Address(RVA = "0xC736B0", Offset = "0xC736B0", VA = "0xC736B0")]
		private void ClearObjects()
		{
		}

		[Token(Token = "0x6001158")]
		[Address(RVA = "0xC73B40", Offset = "0xC73B40", VA = "0xC73B40")]
		public void RadioPressed(string radioLabel, string group, Toggle t)
		{
		}

		[Token(Token = "0x6001159")]
		[Address(RVA = "0xC73C1C", Offset = "0xC73C1C", VA = "0xC73C1C")]
		public OVROverlaySample()
		{
		}

		[Token(Token = "0x600115A")]
		[Address(RVA = "0xC73C98", Offset = "0xC73C98", VA = "0xC73C98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87E610", Offset = "0x87E610")]
		private void <Start>b__24_0(Toggle t)
		{
		}

		[Token(Token = "0x600115B")]
		[Address(RVA = "0xC73CE8", Offset = "0xC73CE8", VA = "0xC73CE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87E620", Offset = "0x87E620")]
		private void <Start>b__24_1(Toggle t)
		{
		}

		[Token(Token = "0x600115C")]
		[Address(RVA = "0xC73D38", Offset = "0xC73D38", VA = "0xC73D38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87E630", Offset = "0x87E630")]
		private void <Start>b__24_2(Toggle t)
		{
		}
	}
}
namespace OVRTouchSample
{
	[Token(Token = "0x200030B")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8715A8", Offset = "0x8715A8")]
	public class Hand : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200030C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87160C", Offset = "0x87160C")]
		private sealed class <>c
		{
			[Token(Token = "0x4000E27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000E28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Collider, bool> <>9__28_0;

			[Token(Token = "0x6001170")]
			[Address(RVA = "0xC69F3C", Offset = "0xC69F3C", VA = "0xC69F3C")]
			public <>c()
			{
			}

			[Token(Token = "0x6001171")]
			[Address(RVA = "0xC69F44", Offset = "0xC69F44", VA = "0xC69F44")]
			internal bool <Start>b__28_0(Collider childCollider)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000E0B")]
		public const string ANIM_LAYER_NAME_POINT = "Point Layer";

		[Token(Token = "0x4000E0C")]
		public const string ANIM_LAYER_NAME_THUMB = "Thumb Layer";

		[Token(Token = "0x4000E0D")]
		public const string ANIM_PARAM_NAME_FLEX = "Flex";

		[Token(Token = "0x4000E0E")]
		public const string ANIM_PARAM_NAME_POSE = "Pose";

		[Token(Token = "0x4000E0F")]
		public const float THRESH_COLLISION_FLEX = 0.9f;

		[Token(Token = "0x4000E10")]
		public const float INPUT_RATE_CHANGE = 20f;

		[Token(Token = "0x4000E11")]
		public const float COLLIDER_SCALE_MIN = 0.01f;

		[Token(Token = "0x4000E12")]
		public const float COLLIDER_SCALE_MAX = 1f;

		[Token(Token = "0x4000E13")]
		public const float COLLIDER_SCALE_PER_SECOND = 1f;

		[Token(Token = "0x4000E14")]
		public const float TRIGGER_DEBOUNCE_TIME = 0.05f;

		[Token(Token = "0x4000E15")]
		public const float THUMB_DEBOUNCE_TIME = 0.15f;

		[Token(Token = "0x4000E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x4000E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4000E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HandPose m_defaultGrabPose;

		[Token(Token = "0x4000E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Collider[] m_colliders;

		[Token(Token = "0x4000E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_collisionEnabled;

		[Token(Token = "0x4000E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRGrabber m_grabber;

		[Token(Token = "0x4000E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Renderer> m_showAfterInputFocusAcquired;

		[Token(Token = "0x4000E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_animLayerIndexThumb;

		[Token(Token = "0x4000E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_animLayerIndexPoint;

		[Token(Token = "0x4000E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_animParamIndexFlex;

		[Token(Token = "0x4000E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_animParamIndexPose;

		[Token(Token = "0x4000E21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_isPointing;

		[Token(Token = "0x4000E22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool m_isGivingThumbsUp;

		[Token(Token = "0x4000E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_pointBlend;

		[Token(Token = "0x4000E24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_thumbsUpBlend;

		[Token(Token = "0x4000E25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x4000E26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_collisionScaleCurrent;

		[Token(Token = "0x6001163")]
		[Address(RVA = "0xC69180", Offset = "0xC69180", VA = "0xC69180")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001164")]
		[Address(RVA = "0xC691D8", Offset = "0xC691D8", VA = "0xC691D8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001165")]
		[Address(RVA = "0xC695E0", Offset = "0xC695E0", VA = "0xC695E0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001166")]
		[Address(RVA = "0xC696AC", Offset = "0xC696AC", VA = "0xC696AC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001167")]
		[Address(RVA = "0xC697B8", Offset = "0xC697B8", VA = "0xC697B8")]
		private void UpdateCapTouchStates()
		{
		}

		[Token(Token = "0x6001168")]
		[Address(RVA = "0xC69AF0", Offset = "0xC69AF0", VA = "0xC69AF0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001169")]
		[Address(RVA = "0xC69C58", Offset = "0xC69C58", VA = "0xC69C58")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x600116A")]
		[Address(RVA = "0xC69DA4", Offset = "0xC69DA4", VA = "0xC69DA4")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x600116B")]
		[Address(RVA = "0xC69854", Offset = "0xC69854", VA = "0xC69854")]
		private float InputValueRateChange(bool isDown, float value)
		{
			return default(float);
		}

		[Token(Token = "0x600116C")]
		[Address(RVA = "0xC698F4", Offset = "0xC698F4", VA = "0xC698F4")]
		private void UpdateAnimStates()
		{
		}

		[Token(Token = "0x600116D")]
		[Address(RVA = "0xC69434", Offset = "0xC69434", VA = "0xC69434")]
		private void CollisionEnable(bool enabled)
		{
		}

		[Token(Token = "0x600116E")]
		[Address(RVA = "0xC69EC0", Offset = "0xC69EC0", VA = "0xC69EC0")]
		public Hand()
		{
		}
	}
	[Token(Token = "0x200030D")]
	public enum HandPoseId
	{
		[Token(Token = "0x4000E2A")]
		Default,
		[Token(Token = "0x4000E2B")]
		Generic,
		[Token(Token = "0x4000E2C")]
		PingPongBall,
		[Token(Token = "0x4000E2D")]
		Controller
	}
	[Token(Token = "0x200030E")]
	public class HandPose : MonoBehaviour
	{
		[Token(Token = "0x4000E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_allowPointing;

		[Token(Token = "0x4000E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool m_allowThumbsUp;

		[Token(Token = "0x4000E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private HandPoseId m_poseId;

		[Token(Token = "0x170002E3")]
		public bool AllowPointing
		{
			[Token(Token = "0x6001172")]
			[Address(RVA = "0xC69F70", Offset = "0xC69F70", VA = "0xC69F70")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002E4")]
		public bool AllowThumbsUp
		{
			[Token(Token = "0x6001173")]
			[Address(RVA = "0xC69F78", Offset = "0xC69F78", VA = "0xC69F78")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002E5")]
		public HandPoseId PoseId
		{
			[Token(Token = "0x6001174")]
			[Address(RVA = "0xC69F80", Offset = "0xC69F80", VA = "0xC69F80")]
			get
			{
				return default(HandPoseId);
			}
		}

		[Token(Token = "0x6001175")]
		[Address(RVA = "0xC69F88", Offset = "0xC69F88", VA = "0xC69F88")]
		public HandPose()
		{
		}
	}
	[Token(Token = "0x200030F")]
	public class TouchController : MonoBehaviour
	{
		[Token(Token = "0x4000E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x4000E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4000E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x6001176")]
		[Address(RVA = "0xC69F90", Offset = "0xC69F90", VA = "0xC69F90")]
		private void Update()
		{
		}

		[Token(Token = "0x6001177")]
		[Address(RVA = "0xC6A204", Offset = "0xC6A204", VA = "0xC6A204")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6001178")]
		[Address(RVA = "0xC6A260", Offset = "0xC6A260", VA = "0xC6A260")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6001179")]
		[Address(RVA = "0xC6A2A4", Offset = "0xC6A2A4", VA = "0xC6A2A4")]
		public TouchController()
		{
		}
	}
}
namespace OVR
{
	[Token(Token = "0x2000310")]
	public class AmbienceEmitter : MonoBehaviour
	{
		[Token(Token = "0x4000E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFXRef[] ambientSounds;

		[Token(Token = "0x4000E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool autoActivate;

		[Token(Token = "0x4000E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87911C", Offset = "0x87911C")]
		public bool autoRetrigger;

		[Token(Token = "0x4000E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x879154", Offset = "0x879154")]
		public Vector2 randomRetriggerDelaySecs;

		[Token(Token = "0x4000E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x879178", Offset = "0x879178")]
		public Transform[] playPositions;

		[Token(Token = "0x4000E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool activated;

		[Token(Token = "0x4000E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int playingIdx;

		[Token(Token = "0x4000E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float nextPlayTime;

		[Token(Token = "0x4000E3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float fadeTime;

		[Token(Token = "0x4000E3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int lastPosIdx;

		[Token(Token = "0x600117A")]
		[Address(RVA = "0xF7E064", Offset = "0xF7E064", VA = "0xF7E064")]
		private void Awake()
		{
		}

		[Token(Token = "0x600117B")]
		[Address(RVA = "0xF7E1E8", Offset = "0xF7E1E8", VA = "0xF7E1E8")]
		private void Update()
		{
		}

		[Token(Token = "0x600117C")]
		[Address(RVA = "0xF7E3CC", Offset = "0xF7E3CC", VA = "0xF7E3CC")]
		public void OnTriggerEnter(Collider col)
		{
		}

		[Token(Token = "0x600117D")]
		[Address(RVA = "0xF7E248", Offset = "0xF7E248", VA = "0xF7E248")]
		public void Play()
		{
		}

		[Token(Token = "0x600117E")]
		[Address(RVA = "0xF7E3DC", Offset = "0xF7E3DC", VA = "0xF7E3DC")]
		public void EnableEmitter(bool enable)
		{
		}

		[Token(Token = "0x600117F")]
		[Address(RVA = "0xF7E4A4", Offset = "0xF7E4A4", VA = "0xF7E4A4")]
		public AmbienceEmitter()
		{
		}
	}
	[Token(Token = "0x2000311")]
	public enum PreloadSounds
	{
		[Token(Token = "0x4000E3F")]
		Default,
		[Token(Token = "0x4000E40")]
		Preload,
		[Token(Token = "0x4000E41")]
		ManualPreload
	}
	[Token(Token = "0x2000312")]
	public enum Fade
	{
		[Token(Token = "0x4000E43")]
		In,
		[Token(Token = "0x4000E44")]
		Out
	}
	[Serializable]
	[Token(Token = "0x2000313")]
	public class SoundGroup
	{
		[Token(Token = "0x4000E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4000E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFX[] soundList;

		[Token(Token = "0x4000E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioMixerGroup mixerGroup;

		[Token(Token = "0x4000E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8791B0", Offset = "0x8791B0")]
		public int maxPlayingSounds;

		[Token(Token = "0x4000E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public PreloadSounds preloadAudio;

		[Token(Token = "0x4000E4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float volumeOverride;

		[Token(Token = "0x4000E4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		public int playingSoundCount;

		[Token(Token = "0x6001180")]
		[Address(RVA = "0xC65198", Offset = "0xC65198", VA = "0xC65198")]
		public SoundGroup()
		{
		}

		[Token(Token = "0x6001181")]
		[Address(RVA = "0xC642B4", Offset = "0xC642B4", VA = "0xC642B4")]
		public void IncrementPlayCount()
		{
		}

		[Token(Token = "0x6001182")]
		[Address(RVA = "0xC643F4", Offset = "0xC643F4", VA = "0xC643F4")]
		public void DecrementPlayCount()
		{
		}

		[Token(Token = "0x6001183")]
		[Address(RVA = "0xC64E90", Offset = "0xC64E90", VA = "0xC64E90")]
		public bool CanPlaySound()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000314")]
	public class AudioManager : MonoBehaviour
	{
		[Token(Token = "0x2000315")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87161C", Offset = "0x87161C")]
		private sealed class <>c__DisplayClass75_0
		{
			[Token(Token = "0x4000E6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SoundPriority priority;

			[Token(Token = "0x60011B7")]
			[Address(RVA = "0xC613D4", Offset = "0xC613D4", VA = "0xC613D4")]
			public <>c__DisplayClass75_0()
			{
			}

			[Token(Token = "0x60011B8")]
			[Address(RVA = "0xC63D70", Offset = "0xC63D70", VA = "0xC63D70")]
			internal bool <FindFreeEmitter>b__0(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x2000316")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87162C", Offset = "0x87162C")]
		private sealed class <>c
		{
			[Token(Token = "0x4000E6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000E6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<SoundEmitter> <>9__75_1;

			[Token(Token = "0x60011BA")]
			[Address(RVA = "0xC63CD8", Offset = "0xC63CD8", VA = "0xC63CD8")]
			public <>c()
			{
			}

			[Token(Token = "0x60011BB")]
			[Address(RVA = "0xC63CE0", Offset = "0xC63CE0", VA = "0xC63CE0")]
			internal bool <FindFreeEmitter>b__75_1(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000E4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8791DC", Offset = "0x8791DC")]
		public bool makePersistent;

		[Token(Token = "0x4000E4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x879214", Offset = "0x879214")]
		public bool enableSpatializedAudio;

		[Token(Token = "0x4000E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87924C", Offset = "0x87924C")]
		public bool enableSpatializedFastOverride;

		[Token(Token = "0x4000E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x879284", Offset = "0x879284")]
		public AudioMixer audioMixer;

		[Token(Token = "0x4000E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8792BC", Offset = "0x8792BC")]
		public AudioMixerGroup defaultMixerGroup;

		[Token(Token = "0x4000E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8792F4", Offset = "0x8792F4")]
		public AudioMixerGroup reservedMixerGroup;

		[Token(Token = "0x4000E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87932C", Offset = "0x87932C")]
		public AudioMixerGroup voiceChatMixerGroup;

		[Token(Token = "0x4000E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x879364", Offset = "0x879364")]
		public bool verboseLogging;

		[Token(Token = "0x4000E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87939C", Offset = "0x87939C")]
		public int maxSoundEmitters;

		[Token(Token = "0x4000E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8793D4", Offset = "0x8793D4")]
		public float volumeSoundFX;

		[Token(Token = "0x4000E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87940C", Offset = "0x87940C")]
		public float soundFxFadeSecs;

		[Token(Token = "0x4000E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float audioMinFallOffDistance;

		[Token(Token = "0x4000E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float audioMaxFallOffDistance;

		[Token(Token = "0x4000E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public SoundGroup[] soundGroupings;

		[Token(Token = "0x4000E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<string, SoundFX> soundFXCache;

		[Token(Token = "0x4000E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AudioManager theAudioManager;

		[Token(Token = "0x4000E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static FastList<string> names;

		[Token(Token = "0x4000E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string[] defaultSound;

		[Token(Token = "0x4000E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static SoundFX nullSound;

		[Token(Token = "0x4000E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static bool hideWarnings;

		[Token(Token = "0x4000E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float audioMaxFallOffDistanceSqr;

		[Token(Token = "0x4000E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private SoundEmitter[] soundEmitters;

		[Token(Token = "0x4000E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private FastList<SoundEmitter> playingEmitters;

		[Token(Token = "0x4000E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private FastList<SoundEmitter> nextFreeEmitters;

		[Token(Token = "0x4000E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private MixerSnapshot currentSnapshot;

		[Token(Token = "0x4000E65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject soundEmitterParent;

		[Token(Token = "0x4000E66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static Transform staticListenerPosition;

		[Token(Token = "0x4000E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static bool showPlayingEmitterCount;

		[Token(Token = "0x4000E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private static bool forceShowEmitterCount;

		[Token(Token = "0x4000E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		private static bool soundEnabled;

		[Token(Token = "0x4000E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static readonly AnimationCurve defaultReverbZoneMix;

		[Token(Token = "0x170002E6")]
		public static bool enableSpatialization
		{
			[Token(Token = "0x6001184")]
			[Address(RVA = "0xC5D220", Offset = "0xC5D220", VA = "0xC5D220")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002E7")]
		public static AudioManager Instance
		{
			[Token(Token = "0x6001185")]
			[Address(RVA = "0xC5D300", Offset = "0xC5D300", VA = "0xC5D300")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E8")]
		public static float NearFallOff
		{
			[Token(Token = "0x6001186")]
			[Address(RVA = "0xC5D368", Offset = "0xC5D368", VA = "0xC5D368")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002E9")]
		public static float FarFallOff
		{
			[Token(Token = "0x6001187")]
			[Address(RVA = "0xC5D3DC", Offset = "0xC5D3DC", VA = "0xC5D3DC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002EA")]
		public static AudioMixerGroup EmitterGroup
		{
			[Token(Token = "0x6001188")]
			[Address(RVA = "0xC5D450", Offset = "0xC5D450", VA = "0xC5D450")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002EB")]
		public static AudioMixerGroup ReservedGroup
		{
			[Token(Token = "0x6001189")]
			[Address(RVA = "0xC5D4C4", Offset = "0xC5D4C4", VA = "0xC5D4C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002EC")]
		public static AudioMixerGroup VoipGroup
		{
			[Token(Token = "0x600118A")]
			[Address(RVA = "0xC5D538", Offset = "0xC5D538", VA = "0xC5D538")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002ED")]
		public static bool SoundEnabled
		{
			[Token(Token = "0x6001195")]
			[Address(RVA = "0xC5F288", Offset = "0xC5F288", VA = "0xC5F288")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600118B")]
		[Address(RVA = "0xC5D5AC", Offset = "0xC5D5AC", VA = "0xC5D5AC")]
		private void Awake()
		{
		}

		[Token(Token = "0x600118C")]
		[Address(RVA = "0xC5D7D4", Offset = "0xC5D7D4", VA = "0xC5D7D4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600118D")]
		[Address(RVA = "0xC5D5B0", Offset = "0xC5D5B0", VA = "0xC5D5B0")]
		private void Init()
		{
		}

		[Token(Token = "0x600118E")]
		[Address(RVA = "0xC5E400", Offset = "0xC5E400", VA = "0xC5E400")]
		private void Update()
		{
		}

		[Token(Token = "0x600118F")]
		[Address(RVA = "0xC5D92C", Offset = "0xC5D92C", VA = "0xC5D92C")]
		private void RebuildSoundFXCache()
		{
		}

		[Token(Token = "0x6001190")]
		[Address(RVA = "0xC5EA24", Offset = "0xC5EA24", VA = "0xC5EA24")]
		public static SoundFX FindSoundFX(string name, bool rebuildCache = false)
		{
			return null;
		}

		[Token(Token = "0x6001191")]
		[Address(RVA = "0xC5EBA4", Offset = "0xC5EBA4", VA = "0xC5EBA4")]
		private static bool FindAudioManager()
		{
			return default(bool);
		}

		[Token(Token = "0x6001192")]
		[Address(RVA = "0xC5ED40", Offset = "0xC5ED40", VA = "0xC5ED40")]
		public static GameObject GetGameObject()
		{
			return null;
		}

		[Token(Token = "0x6001193")]
		[Address(RVA = "0xC5EE40", Offset = "0xC5EE40", VA = "0xC5EE40")]
		public static string NameMinusGroup(string name)
		{
			return null;
		}

		[Token(Token = "0x6001194")]
		[Address(RVA = "0xC5EED0", Offset = "0xC5EED0", VA = "0xC5EED0")]
		public static string[] GetSoundFXNames(string currentValue, out int currentIdx)
		{
			return null;
		}

		[Token(Token = "0x6001196")]
		[Address(RVA = "0xC5DD78", Offset = "0xC5DD78", VA = "0xC5DD78")]
		private void InitializeSoundSystem()
		{
		}

		[Token(Token = "0x6001197")]
		[Address(RVA = "0xC5E404", Offset = "0xC5E404", VA = "0xC5E404")]
		private void UpdateFreeEmitters()
		{
		}

		[Token(Token = "0x6001198")]
		[Address(RVA = "0xC5F508", Offset = "0xC5F508", VA = "0xC5F508")]
		private string Fmt(int count)
		{
			return null;
		}

		[Token(Token = "0x6001199")]
		[Address(RVA = "0xC5F60C", Offset = "0xC5F60C", VA = "0xC5F60C")]
		private string FmtFree(int count)
		{
			return null;
		}

		[Token(Token = "0x600119A")]
		[Address(RVA = "0xC5F714", Offset = "0xC5F714", VA = "0xC5F714")]
		private void OnPreSceneLoad()
		{
		}

		[Token(Token = "0x600119B")]
		[Address(RVA = "0xC5F3D0", Offset = "0xC5F3D0", VA = "0xC5F3D0")]
		private void ResetFreeEmitters()
		{
		}

		[Token(Token = "0x600119C")]
		[Address(RVA = "0xC5F880", Offset = "0xC5F880", VA = "0xC5F880")]
		public static void FadeOutSoundChannel(int channel, float delaySecs, float fadeTime)
		{
		}

		[Token(Token = "0x600119D")]
		[Address(RVA = "0xC5F9D4", Offset = "0xC5F9D4", VA = "0xC5F9D4")]
		public static bool StopSound(int idx, bool fadeOut = true, bool stopReserved = false)
		{
			return default(bool);
		}

		[Token(Token = "0x600119E")]
		[Address(RVA = "0xC5FB84", Offset = "0xC5FB84", VA = "0xC5FB84")]
		public static void FadeInSound(int idx, float fadeTime, float volume)
		{
		}

		[Token(Token = "0x600119F")]
		[Address(RVA = "0xC5FCB8", Offset = "0xC5FCB8", VA = "0xC5FCB8")]
		public static void FadeInSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x60011A0")]
		[Address(RVA = "0xC5FDE0", Offset = "0xC5FDE0", VA = "0xC5FDE0")]
		public static void FadeOutSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x60011A1")]
		[Address(RVA = "0xC5FE90", Offset = "0xC5FE90", VA = "0xC5FE90")]
		public static void StopAllSounds(bool fadeOut, bool stopReserved = false)
		{
		}

		[Token(Token = "0x60011A2")]
		[Address(RVA = "0xC5FF5C", Offset = "0xC5FF5C", VA = "0xC5FF5C")]
		public void MuteAllSounds(bool mute, bool muteReserved = false)
		{
		}

		[Token(Token = "0x60011A3")]
		[Address(RVA = "0xC5FFF0", Offset = "0xC5FFF0", VA = "0xC5FFF0")]
		public void UnMuteAllSounds(bool unmute, bool unmuteReserved = false)
		{
		}

		[Token(Token = "0x60011A4")]
		[Address(RVA = "0xC600B4", Offset = "0xC600B4", VA = "0xC600B4")]
		public static float GetEmitterEndTime(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x60011A5")]
		[Address(RVA = "0xC60158", Offset = "0xC60158", VA = "0xC60158")]
		public static float SetEmitterTime(int idx, float time)
		{
			return default(float);
		}

		[Token(Token = "0x60011A6")]
		[Address(RVA = "0xC60238", Offset = "0xC60238", VA = "0xC60238")]
		public static int PlaySound(AudioClip clip, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitchVariance = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x60011A7")]
		[Address(RVA = "0xC60D1C", Offset = "0xC60D1C", VA = "0xC60D1C")]
		private static int FindFreeEmitter(EmitterChannel src, SoundPriority priority)
		{
			return default(int);
		}

		[Token(Token = "0x60011A8")]
		[Address(RVA = "0xC613DC", Offset = "0xC613DC", VA = "0xC613DC")]
		public static int PlaySound(SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x60011A9")]
		[Address(RVA = "0xC615BC", Offset = "0xC615BC", VA = "0xC615BC")]
		public static int PlaySoundAt(Vector3 position, SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x60011AA")]
		[Address(RVA = "0xC62300", Offset = "0xC62300", VA = "0xC62300")]
		public static int PlayRandomSoundAt(Vector3 position, AudioClip[] clips, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x60011AB")]
		[Address(RVA = "0xC60440", Offset = "0xC60440", VA = "0xC60440")]
		public static int PlaySoundAt(Vector3 position, AudioClip clip, float volume = 1f, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x60011AC")]
		[Address(RVA = "0xC62420", Offset = "0xC62420", VA = "0xC62420")]
		public static void SetOnFinished(int emitterIdx, Action onFinished)
		{
		}

		[Token(Token = "0x60011AD")]
		[Address(RVA = "0xC62504", Offset = "0xC62504", VA = "0xC62504")]
		public static void SetOnFinished(int emitterIdx, Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x60011AE")]
		[Address(RVA = "0xC625F4", Offset = "0xC625F4", VA = "0xC625F4")]
		public static void AttachSoundToParent(int idx, Transform parent)
		{
		}

		[Token(Token = "0x60011AF")]
		[Address(RVA = "0xC629AC", Offset = "0xC629AC", VA = "0xC629AC")]
		public static void DetachSoundFromParent(int idx)
		{
		}

		[Token(Token = "0x60011B0")]
		[Address(RVA = "0xC62BA8", Offset = "0xC62BA8", VA = "0xC62BA8")]
		public static void DetachSoundsFromParent(SoundEmitter[] emitters, bool stopSounds = true)
		{
		}

		[Token(Token = "0x60011B1")]
		[Address(RVA = "0xC62CC4", Offset = "0xC62CC4", VA = "0xC62CC4")]
		public static void SetEmitterMixerGroup(int idx, AudioMixerGroup mixerGroup)
		{
		}

		[Token(Token = "0x60011B2")]
		[Address(RVA = "0xC62E8C", Offset = "0xC62E8C", VA = "0xC62E8C")]
		public static MixerSnapshot GetActiveSnapshot()
		{
			return null;
		}

		[Token(Token = "0x60011B3")]
		[Address(RVA = "0xC62F64", Offset = "0xC62F64", VA = "0xC62F64")]
		public static void SetCurrentSnapshot(MixerSnapshot mixerSnapshot)
		{
		}

		[Token(Token = "0x60011B4")]
		[Address(RVA = "0xC63098", Offset = "0xC63098", VA = "0xC63098")]
		public static void BlendWithCurrentSnapshot(MixerSnapshot blendSnapshot, float weight, float blendTime = 0f)
		{
		}

		[Token(Token = "0x60011B5")]
		[Address(RVA = "0xC63484", Offset = "0xC63484", VA = "0xC63484")]
		public AudioManager()
		{
		}
	}
	[Token(Token = "0x2000317")]
	public enum EmitterChannel
	{
		[Token(Token = "0x4000E6F")]
		None = -1,
		[Token(Token = "0x4000E70")]
		Reserved,
		[Token(Token = "0x4000E71")]
		Any
	}
	[Serializable]
	[Token(Token = "0x2000318")]
	public class MixerSnapshot
	{
		[Token(Token = "0x4000E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioMixerSnapshot snapshot;

		[Token(Token = "0x4000E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float transitionTime;

		[Token(Token = "0x60011BC")]
		[Address(RVA = "0xC63E6C", Offset = "0xC63E6C", VA = "0xC63E6C")]
		public MixerSnapshot()
		{
		}
	}
	[Token(Token = "0x2000319")]
	public class MinMaxAttribute : PropertyAttribute
	{
		[Token(Token = "0x4000E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float minDefaultVal;

		[Token(Token = "0x4000E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float maxDefaultVal;

		[Token(Token = "0x4000E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float min;

		[Token(Token = "0x4000E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float max;

		[Token(Token = "0x60011BD")]
		[Address(RVA = "0xC63E10", Offset = "0xC63E10", VA = "0xC63E10")]
		public MinMaxAttribute(float minDefaultVal, float maxDefaultVal, float min, float max)
		{
		}
	}
	[Token(Token = "0x200031A")]
	public class SoundEmitter : MonoBehaviour
	{
		[Token(Token = "0x200031B")]
		public enum FadeState
		{
			[Token(Token = "0x4000E88")]
			Null,
			[Token(Token = "0x4000E89")]
			FadingIn,
			[Token(Token = "0x4000E8A")]
			FadingOut,
			[Token(Token = "0x4000E8B")]
			Ducking
		}

		[Token(Token = "0x200031C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87163C", Offset = "0x87163C")]
		private sealed class <DelayedSyncTo>d__57 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4000E8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SoundEmitter other;

			[Token(Token = "0x4000E90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float fadeTime;

			[Token(Token = "0x4000E91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float toVolume;

			[Token(Token = "0x170002F7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60011EA")]
				[Address(RVA = "0xC648B8", Offset = "0xC648B8", VA = "0xC648B8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002F8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60011EC")]
				[Address(RVA = "0xC64920", Offset = "0xC64920", VA = "0xC64920", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60011E7")]
			[Address(RVA = "0xC64598", Offset = "0xC64598", VA = "0xC64598")]
			[DebuggerHidden]
			public <DelayedSyncTo>d__57(int <>1__state)
			{
			}

			[Token(Token = "0x60011E8")]
			[Address(RVA = "0xC647C8", Offset = "0xC647C8", VA = "0xC647C8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60011E9")]
			[Address(RVA = "0xC647CC", Offset = "0xC647CC", VA = "0xC647CC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60011EB")]
			[Address(RVA = "0xC648C0", Offset = "0xC648C0", VA = "0xC648C0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200031D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87164C", Offset = "0x87164C")]
		private sealed class <FadeSoundChannelTo>d__63 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4000E95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float toVolume;

			[Token(Token = "0x4000E96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float fadeTime;

			[Token(Token = "0x4000E97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <start>5__2;

			[Token(Token = "0x4000E98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <end>5__3;

			[Token(Token = "0x4000E99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x4000E9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <elapsedTime>5__5;

			[Token(Token = "0x170002F9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60011F0")]
				[Address(RVA = "0xC64D6C", Offset = "0xC64D6C", VA = "0xC64D6C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002FA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60011F2")]
				[Address(RVA = "0xC64DD4", Offset = "0xC64DD4", VA = "0xC64DD4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60011ED")]
			[Address(RVA = "0xC64758", Offset = "0xC64758", VA = "0xC64758")]
			[DebuggerHidden]
			public <FadeSoundChannelTo>d__63(int <>1__state)
			{
			}

			[Token(Token = "0x60011EE")]
			[Address(RVA = "0xC64C00", Offset = "0xC64C00", VA = "0xC64C00", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60011EF")]
			[Address(RVA = "0xC64C04", Offset = "0xC64C04", VA = "0xC64C04", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60011F1")]
			[Address(RVA = "0xC64D74", Offset = "0xC64D74", VA = "0xC64D74", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200031E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87165C", Offset = "0x87165C")]
		private sealed class <FadeSoundChannel>d__64 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delaySecs;

			[Token(Token = "0x4000E9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Fade fadeType;

			[Token(Token = "0x4000E9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float defaultVolume;

			[Token(Token = "0x4000EA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4000EA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float fadeTime;

			[Token(Token = "0x4000EA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <start>5__2;

			[Token(Token = "0x4000EA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <end>5__3;

			[Token(Token = "0x4000EA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private bool <restartPlay>5__4;

			[Token(Token = "0x4000EA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <startTime>5__5;

			[Token(Token = "0x4000EA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float <elapsedTime>5__6;

			[Token(Token = "0x170002FB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60011F6")]
				[Address(RVA = "0xC64B90", Offset = "0xC64B90", VA = "0xC64B90", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002FC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60011F8")]
				[Address(RVA = "0xC64BF8", Offset = "0xC64BF8", VA = "0xC64BF8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60011F3")]
			[Address(RVA = "0xC64784", Offset = "0xC64784", VA = "0xC64784")]
			[DebuggerHidden]
			public <FadeSoundChannel>d__64(int <>1__state)
			{
			}

			[Token(Token = "0x60011F4")]
			[Address(RVA = "0xC64928", Offset = "0xC64928", VA = "0xC64928", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60011F5")]
			[Address(RVA = "0xC6492C", Offset = "0xC6492C", VA = "0xC6492C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60011F7")]
			[Address(RVA = "0xC64B98", Offset = "0xC64B98", VA = "0xC64B98", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EmitterChannel channel;

		[Token(Token = "0x4000E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool disableSpatialization;

		[Token(Token = "0x4000E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private FadeState state;

		[NonSerialized]
		[Token(Token = "0x4000E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public AudioSource audioSource;

		[NonSerialized]
		[Token(Token = "0x4000E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public SoundPriority priority;

		[NonSerialized]
		[Token(Token = "0x4000E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public ONSPAudioSource osp;

		[NonSerialized]
		[Token(Token = "0x4000E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public float endPlayTime;

		[Token(Token = "0x4000E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform lastParentTransform;

		[NonSerialized]
		[Token(Token = "0x4000E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public float defaultVolume;

		[NonSerialized]
		[Token(Token = "0x4000E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public Transform defaultParent;

		[NonSerialized]
		[Token(Token = "0x4000E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public int originalIdx;

		[NonSerialized]
		[Token(Token = "0x4000E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public Action onFinished;

		[NonSerialized]
		[Token(Token = "0x4000E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public Action<object> onFinishedObject;

		[NonSerialized]
		[Token(Token = "0x4000E85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public object onFinishedParam;

		[NonSerialized]
		[Token(Token = "0x4000E86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public SoundGroup playingSoundGroup;

		[Token(Token = "0x170002EE")]
		public float volume
		{
			[Token(Token = "0x60011BE")]
			[Address(RVA = "0xC622E4", Offset = "0xC622E4", VA = "0xC622E4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60011BF")]
			[Address(RVA = "0xC63F0C", Offset = "0xC63F0C", VA = "0xC63F0C")]
			set
			{
			}
		}

		[Token(Token = "0x170002EF")]
		public float pitch
		{
			[Token(Token = "0x60011C0")]
			[Address(RVA = "0xC63F28", Offset = "0xC63F28", VA = "0xC63F28")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60011C1")]
			[Address(RVA = "0xC63F44", Offset = "0xC63F44", VA = "0xC63F44")]
			set
			{
			}
		}

		[Token(Token = "0x170002F0")]
		public AudioClip clip
		{
			[Token(Token = "0x60011C2")]
			[Address(RVA = "0xC63F60", Offset = "0xC63F60", VA = "0xC63F60")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011C3")]
			[Address(RVA = "0xC63F7C", Offset = "0xC63F7C", VA = "0xC63F7C")]
			set
			{
			}
		}

		[Token(Token = "0x170002F1")]
		public float time
		{
			[Token(Token = "0x60011C4")]
			[Address(RVA = "0xC63F98", Offset = "0xC63F98", VA = "0xC63F98")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60011C5")]
			[Address(RVA = "0xC6021C", Offset = "0xC6021C", VA = "0xC6021C")]
			set
			{
			}
		}

		[Token(Token = "0x170002F2")]
		public float length
		{
			[Token(Token = "0x60011C6")]
			[Address(RVA = "0xC63FB4", Offset = "0xC63FB4", VA = "0xC63FB4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002F3")]
		public bool loop
		{
			[Token(Token = "0x60011C7")]
			[Address(RVA = "0xC6406C", Offset = "0xC6406C", VA = "0xC6406C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011C8")]
			[Address(RVA = "0xC64088", Offset = "0xC64088", VA = "0xC64088")]
			set
			{
			}
		}

		[Token(Token = "0x170002F4")]
		public bool mute
		{
			[Token(Token = "0x60011C9")]
			[Address(RVA = "0xC640A8", Offset = "0xC640A8", VA = "0xC640A8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011CA")]
			[Address(RVA = "0xC640C4", Offset = "0xC640C4", VA = "0xC640C4")]
			set
			{
			}
		}

		[Token(Token = "0x170002F5")]
		public AudioVelocityUpdateMode velocityUpdateMode
		{
			[Token(Token = "0x60011CB")]
			[Address(RVA = "0xC640E4", Offset = "0xC640E4", VA = "0xC640E4")]
			get
			{
				return default(AudioVelocityUpdateMode);
			}
			[Token(Token = "0x60011CC")]
			[Address(RVA = "0xC64100", Offset = "0xC64100", VA = "0xC64100")]
			set
			{
			}
		}

		[Token(Token = "0x170002F6")]
		public bool isPlaying
		{
			[Token(Token = "0x60011CD")]
			[Address(RVA = "0xC6411C", Offset = "0xC6411C", VA = "0xC6411C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60011CE")]
		[Address(RVA = "0xC64138", Offset = "0xC64138", VA = "0xC64138")]
		private void Awake()
		{
		}

		[Token(Token = "0x60011CF")]
		[Address(RVA = "0xC622D0", Offset = "0xC622D0", VA = "0xC622D0")]
		public void SetPlayingSoundGroup(SoundGroup soundGroup)
		{
		}

		[Token(Token = "0x60011D0")]
		[Address(RVA = "0xC64344", Offset = "0xC64344", VA = "0xC64344")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x60011D1")]
		[Address(RVA = "0xC625EC", Offset = "0xC625EC", VA = "0xC625EC")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x60011D2")]
		[Address(RVA = "0xC6434C", Offset = "0xC6434C", VA = "0xC6434C")]
		public void SetChannel(int _channel)
		{
		}

		[Token(Token = "0x60011D3")]
		[Address(RVA = "0xC64354", Offset = "0xC64354", VA = "0xC64354")]
		public void SetDefaultParent(Transform parent)
		{
		}

		[Token(Token = "0x60011D4")]
		[Address(RVA = "0xC62DE4", Offset = "0xC62DE4", VA = "0xC62DE4")]
		public void SetAudioMixer(AudioMixerGroup _mixer)
		{
		}

		[Token(Token = "0x60011D5")]
		[Address(RVA = "0xC5F49C", Offset = "0xC5F49C", VA = "0xC5F49C")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x60011D6")]
		[Address(RVA = "0xC6435C", Offset = "0xC6435C", VA = "0xC6435C")]
		public void Play()
		{
		}

		[Token(Token = "0x60011D7")]
		[Address(RVA = "0xC643BC", Offset = "0xC643BC", VA = "0xC643BC")]
		public void Pause()
		{
		}

		[Token(Token = "0x60011D8")]
		[Address(RVA = "0xC5F2F0", Offset = "0xC5F2F0", VA = "0xC5F2F0")]
		public void Stop()
		{
		}

		[Token(Token = "0x60011D9")]
		[Address(RVA = "0xC64484", Offset = "0xC64484", VA = "0xC64484")]
		private int GetSampleTime()
		{
			return default(int);
		}

		[Token(Token = "0x60011DA")]
		[Address(RVA = "0xC628B0", Offset = "0xC628B0", VA = "0xC628B0")]
		public void ParentTo(Transform parent)
		{
		}

		[Token(Token = "0x60011DB")]
		[Address(RVA = "0xC62AF0", Offset = "0xC62AF0", VA = "0xC62AF0")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x60011DC")]
		[Address(RVA = "0xC5F840", Offset = "0xC5F840", VA = "0xC5F840")]
		public void ResetParent(Transform parent)
		{
		}

		[Token(Token = "0x60011DD")]
		[Address(RVA = "0xC644DC", Offset = "0xC644DC", VA = "0xC644DC")]
		public void SyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x60011DE")]
		[Address(RVA = "0xC64508", Offset = "0xC64508", VA = "0xC64508")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x87E690", Offset = "0x87E690")]
		private IEnumerator DelayedSyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x60011DF")]
		[Address(RVA = "0xC645C4", Offset = "0xC645C4", VA = "0xC645C4")]
		public void FadeTo(float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x60011E0")]
		[Address(RVA = "0xC5FC3C", Offset = "0xC5FC3C", VA = "0xC5FC3C")]
		public void FadeIn(float fadeTime, float defaultVolume)
		{
		}

		[Token(Token = "0x60011E1")]
		[Address(RVA = "0xC5FD68", Offset = "0xC5FD68", VA = "0xC5FD68")]
		public void FadeIn(float fadeTime)
		{
		}

		[Token(Token = "0x60011E2")]
		[Address(RVA = "0xC5FAEC", Offset = "0xC5FAEC", VA = "0xC5FAEC")]
		public void FadeOut(float fadeTime)
		{
		}

		[Token(Token = "0x60011E3")]
		[Address(RVA = "0xC5F938", Offset = "0xC5F938", VA = "0xC5F938")]
		public void FadeOutDelayed(float delayedSecs, float fadeTime)
		{
		}

		[Token(Token = "0x60011E4")]
		[Address(RVA = "0xC6462C", Offset = "0xC6462C", VA = "0xC6462C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x87E6F4", Offset = "0x87E6F4")]
		private IEnumerator FadeSoundChannelTo(float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x60011E5")]
		[Address(RVA = "0xC646B0", Offset = "0xC646B0", VA = "0xC646B0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x87E758", Offset = "0x87E758")]
		private IEnumerator FadeSoundChannel(float delaySecs, float fadeTime, Fade fadeType, float defaultVolume)
		{
			return null;
		}

		[Token(Token = "0x60011E6")]
		[Address(RVA = "0xC647B0", Offset = "0xC647B0", VA = "0xC647B0")]
		public SoundEmitter()
		{
		}
	}
	[Token(Token = "0x200031F")]
	public enum SoundFXNext
	{
		[Token(Token = "0x4000EA8")]
		Random,
		[Token(Token = "0x4000EA9")]
		Sequential
	}
	[Token(Token = "0x2000320")]
	public enum SoundPriority
	{
		[Token(Token = "0x4000EAB")]
		VeryLow = -2,
		[Token(Token = "0x4000EAC")]
		Low,
		[Token(Token = "0x4000EAD")]
		Default,
		[Token(Token = "0x4000EAE")]
		High,
		[Token(Token = "0x4000EAF")]
		VeryHigh
	}
	[Serializable]
	[Token(Token = "0x2000321")]
	public class OSPProps
	{
		[Token(Token = "0x4000EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8794F4", Offset = "0x8794F4")]
		public bool enableSpatialization;

		[Token(Token = "0x4000EB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87952C", Offset = "0x87952C")]
		public bool useFastOverride;

		[Token(Token = "0x4000EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x879564", Offset = "0x879564")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x879564", Offset = "0x879564")]
		public float gain;

		[Token(Token = "0x4000EB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8795B8", Offset = "0x8795B8")]
		public bool enableInvSquare;

		[Token(Token = "0x4000EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8795F0", Offset = "0x8795F0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8795F0", Offset = "0x8795F0")]
		public float volumetric;

		[Token(Token = "0x4000EB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x879648", Offset = "0x879648")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x879648", Offset = "0x879648")]
		public Vector2 invSquareFalloff;

		[Token(Token = "0x60011F9")]
		[Address(RVA = "0xC63E7C", Offset = "0xC63E7C", VA = "0xC63E7C")]
		public OSPProps()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000322")]
	public class SoundFX
	{
		[Token(Token = "0x4000EB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8796A8", Offset = "0x8796A8")]
		public string name;

		[Token(Token = "0x4000EB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8796E0", Offset = "0x8796E0")]
		public SoundFXNext playback;

		[Token(Token = "0x4000EB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x879718", Offset = "0x879718")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x879718", Offset = "0x879718")]
		public float volume;

		[Token(Token = "0x4000EB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x87976C", Offset = "0x87976C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87976C", Offset = "0x87976C")]
		public Vector2 pitchVariance;

		[Token(Token = "0x4000EBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x8797C8", Offset = "0x8797C8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8797C8", Offset = "0x8797C8")]
		public Vector2 falloffDistance;

		[Token(Token = "0x4000EBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x879828", Offset = "0x879828")]
		public AudioRolloffMode falloffCurve;

		[Token(Token = "0x4000EBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x879860", Offset = "0x879860")]
		public AnimationCurve volumeFalloffCurve;

		[Token(Token = "0x4000EBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x879898", Offset = "0x879898")]
		public AnimationCurve reverbZoneMix;

		[Token(Token = "0x4000EBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8798D0", Offset = "0x8798D0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8798D0", Offset = "0x8798D0")]
		public float spread;

		[Token(Token = "0x4000EBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x879928", Offset = "0x879928")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x879928", Offset = "0x879928")]
		public float pctChanceToPlay;

		[Token(Token = "0x4000EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87997C", Offset = "0x87997C")]
		public SoundPriority priority;

		[Token(Token = "0x4000EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8799B4", Offset = "0x8799B4")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x8799B4", Offset = "0x8799B4")]
		public Vector2 delay;

		[Token(Token = "0x4000EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x879A10", Offset = "0x879A10")]
		public bool looping;

		[Token(Token = "0x4000EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public OSPProps ospProps;

		[Token(Token = "0x4000EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x879A48", Offset = "0x879A48")]
		public AudioClip[] soundClips;

		[Token(Token = "0x4000EC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool visibilityToggle;

		[NonSerialized]
		[Token(Token = "0x4000EC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private SoundGroup soundGroup;

		[Token(Token = "0x4000EC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int lastIdx;

		[Token(Token = "0x4000EC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int playingIdx;

		[Token(Token = "0x170002FD")]
		public bool IsValid
		{
			[Token(Token = "0x60011FB")]
			[Address(RVA = "0xC64DDC", Offset = "0xC64DDC", VA = "0xC64DDC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002FE")]
		public SoundGroup Group
		{
			[Token(Token = "0x60011FC")]
			[Address(RVA = "0xC64E80", Offset = "0xC64E80", VA = "0xC64E80")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011FD")]
			[Address(RVA = "0xC64E88", Offset = "0xC64E88", VA = "0xC64E88")]
			set
			{
			}
		}

		[Token(Token = "0x170002FF")]
		public float MaxFalloffDistSquared
		{
			[Token(Token = "0x60011FE")]
			[Address(RVA = "0xC621D8", Offset = "0xC621D8", VA = "0xC621D8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000300")]
		public float GroupVolumeOverride
		{
			[Token(Token = "0x60011FF")]
			[Address(RVA = "0xC6220C", Offset = "0xC6220C", VA = "0xC6220C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60011FA")]
		[Address(RVA = "0xC6378C", Offset = "0xC6378C", VA = "0xC6378C")]
		public SoundFX()
		{
		}

		[Token(Token = "0x6001200")]
		[Address(RVA = "0xC62108", Offset = "0xC62108", VA = "0xC62108")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x6001201")]
		[Address(RVA = "0xC62230", Offset = "0xC62230", VA = "0xC62230")]
		public AudioMixerGroup GetMixerGroup(AudioMixerGroup defaultMixerGroup)
		{
			return null;
		}

		[Token(Token = "0x6001202")]
		[Address(RVA = "0xC621E4", Offset = "0xC621E4", VA = "0xC621E4")]
		public bool ReachedGroupPlayLimit()
		{
			return default(bool);
		}

		[Token(Token = "0x6001203")]
		[Address(RVA = "0xC62224", Offset = "0xC62224", VA = "0xC62224")]
		public float GetPitch()
		{
			return default(float);
		}

		[Token(Token = "0x6001204")]
		[Address(RVA = "0xC64EB0", Offset = "0xC64EB0", VA = "0xC64EB0")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}
	}
	[Serializable]
	[Token(Token = "0x2000323")]
	public class SoundFXRef
	{
		[Token(Token = "0x4000EC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string soundFXName;

		[Token(Token = "0x4000ECA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool initialized;

		[Token(Token = "0x4000ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SoundFX soundFXCached;

		[Token(Token = "0x17000301")]
		public SoundFX soundFX
		{
			[Token(Token = "0x6001205")]
			[Address(RVA = "0xC64FC4", Offset = "0xC64FC4", VA = "0xC64FC4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001206")]
		[Address(RVA = "0xC64FF4", Offset = "0xC64FF4", VA = "0xC64FF4")]
		private void Init()
		{
		}

		[Token(Token = "0x6001207")]
		[Address(RVA = "0xC650B8", Offset = "0xC650B8", VA = "0xC650B8")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volume = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6001208")]
		[Address(RVA = "0xC65138", Offset = "0xC65138", VA = "0xC65138")]
		public SoundFXRef()
		{
		}
	}
}
namespace CurvedUI
{
	[Token(Token = "0x2000324")]
	public class CUI_AnimateCurvedFillOnStart : MonoBehaviour
	{
		[Token(Token = "0x6001209")]
		[Address(RVA = "0xB5C6AC", Offset = "0xB5C6AC", VA = "0xB5C6AC")]
		private void Update()
		{
		}

		[Token(Token = "0x600120A")]
		[Address(RVA = "0xB5C89C", Offset = "0xB5C89C", VA = "0xB5C89C")]
		public CUI_AnimateCurvedFillOnStart()
		{
		}
	}
	[Token(Token = "0x2000325")]
	public class CUI_CameraController : MonoBehaviour
	{
		[Token(Token = "0x4000ECC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static CUI_CameraController instance;

		[Token(Token = "0x4000ECD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform CameraObject;

		[Token(Token = "0x4000ECE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float rotationMargin;

		[Token(Token = "0x4000ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private bool runInEditorOnly;

		[Token(Token = "0x600120B")]
		[Address(RVA = "0xB5C8A4", Offset = "0xB5C8A4", VA = "0xB5C8A4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600120C")]
		[Address(RVA = "0xB5C8F8", Offset = "0xB5C8F8", VA = "0xB5C8F8")]
		public CUI_CameraController()
		{
		}
	}
	[Token(Token = "0x2000326")]
	public class CUI_ChangeColor : MonoBehaviour
	{
		[Token(Token = "0x600120D")]
		[Address(RVA = "0xB5C910", Offset = "0xB5C910", VA = "0xB5C910")]
		public void ChangeColorToBlue()
		{
		}

		[Token(Token = "0x600120E")]
		[Address(RVA = "0xB5C98C", Offset = "0xB5C98C", VA = "0xB5C98C")]
		public void ChangeColorToCyan()
		{
		}

		[Token(Token = "0x600120F")]
		[Address(RVA = "0xB5CA08", Offset = "0xB5CA08", VA = "0xB5CA08")]
		public void ChangeColorToWhite()
		{
		}

		[Token(Token = "0x6001210")]
		[Address(RVA = "0xB5CA84", Offset = "0xB5CA84", VA = "0xB5CA84")]
		public CUI_ChangeColor()
		{
		}
	}
	[Token(Token = "0x2000327")]
	public class CUI_ChangeValueOnHold : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x4000ED0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool pressed;

		[Token(Token = "0x4000ED1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool selected;

		[Token(Token = "0x4000ED2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Image bg;

		[Token(Token = "0x4000ED3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Color SelectedColor;

		[Token(Token = "0x4000ED4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Color NormalColor;

		[Token(Token = "0x4000ED5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private CanvasGroup IntroCG;

		[Token(Token = "0x4000ED6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private CanvasGroup MenuCG;

		[Token(Token = "0x6001211")]
		[Address(RVA = "0xB5CA8C", Offset = "0xB5CA8C", VA = "0xB5CA8C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001212")]
		[Address(RVA = "0xB5CB10", Offset = "0xB5CB10", VA = "0xB5CB10")]
		private void ChangeVal()
		{
		}

		[Token(Token = "0x6001213")]
		[Address(RVA = "0xB5CC78", Offset = "0xB5CC78", VA = "0xB5CC78", Slot = "4")]
		public void OnPointerEnter(PointerEventData data)
		{
		}

		[Token(Token = "0x6001214")]
		[Address(RVA = "0xB5CD0C", Offset = "0xB5CD0C", VA = "0xB5CD0C", Slot = "5")]
		public void OnPointerExit(PointerEventData data)
		{
		}

		[Token(Token = "0x6001215")]
		[Address(RVA = "0xB5CD9C", Offset = "0xB5CD9C", VA = "0xB5CD9C")]
		public CUI_ChangeValueOnHold()
		{
		}
	}
	[Token(Token = "0x2000328")]
	public class CUI_DragBetweenCanvases : MonoBehaviour, IBeginDragHandler, IEventSystemHandler, IEndDragHandler, IDragHandler
	{
		[Token(Token = "0x4000ED7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector2 dragPoint;

		[Token(Token = "0x6001216")]
		[Address(RVA = "0xB5CDA4", Offset = "0xB5CDA4", VA = "0xB5CDA4", Slot = "4")]
		public void OnBeginDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x6001217")]
		[Address(RVA = "0xB5D0E4", Offset = "0xB5D0E4", VA = "0xB5D0E4", Slot = "6")]
		public void OnDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x6001218")]
		[Address(RVA = "0xB5D7AC", Offset = "0xB5D7AC", VA = "0xB5D7AC", Slot = "5")]
		public void OnEndDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x6001219")]
		[Address(RVA = "0xB5CEEC", Offset = "0xB5CEEC", VA = "0xB5CEEC")]
		private void RaycastPosition(out Vector2 newPos)
		{
		}

		[Token(Token = "0x600121A")]
		[Address(RVA = "0xB5D818", Offset = "0xB5D818", VA = "0xB5D818")]
		public CUI_DragBetweenCanvases()
		{
		}
	}
	[Token(Token = "0x2000329")]
	public class CUI_GunController : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200032A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87166C", Offset = "0x87166C")]
		private sealed class <>c
		{
			[Token(Token = "0x4000EDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000EDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<GameObject> <>9__2_0;

			[Token(Token = "0x600121E")]
			[Address(RVA = "0xB5DD80", Offset = "0xB5DD80", VA = "0xB5DD80")]
			public <>c()
			{
			}

			[Token(Token = "0x600121F")]
			[Address(RVA = "0xB5DD88", Offset = "0xB5DD88", VA = "0xB5DD88")]
			internal bool <Update>b__2_0(GameObject x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000ED8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CurvedUISettings ControlledCanvas;

		[Token(Token = "0x4000ED9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform LaserBeamTransform;

		[Token(Token = "0x600121B")]
		[Address(RVA = "0xB5D820", Offset = "0xB5D820", VA = "0xB5D820")]
		private void Update()
		{
		}

		[Token(Token = "0x600121C")]
		[Address(RVA = "0xB5DD14", Offset = "0xB5DD14", VA = "0xB5DD14")]
		public CUI_GunController()
		{
		}
	}
	[Token(Token = "0x200032B")]
	public class CUI_GunMovement : MonoBehaviour
	{
		[Token(Token = "0x4000EDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CurvedUISettings mySettings;

		[Token(Token = "0x4000EDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform pivot;

		[Token(Token = "0x4000EDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float sensitivity;

		[Token(Token = "0x4000EDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 lastMouse;

		[Token(Token = "0x6001220")]
		[Address(RVA = "0xB5DE50", Offset = "0xB5DE50", VA = "0xB5DE50")]
		private void Start()
		{
		}

		[Token(Token = "0x6001221")]
		[Address(RVA = "0xB5DE7C", Offset = "0xB5DE7C", VA = "0xB5DE7C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001222")]
		[Address(RVA = "0xB5E098", Offset = "0xB5E098", VA = "0xB5E098")]
		public CUI_GunMovement()
		{
		}
	}
	[Token(Token = "0x200032C")]
	public class CUI_OrientOnCurvedSpace : MonoBehaviour
	{
		[Token(Token = "0x4000EE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CurvedUISettings mySettings;

		[Token(Token = "0x6001223")]
		[Address(RVA = "0xB5E0AC", Offset = "0xB5E0AC", VA = "0xB5E0AC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001224")]
		[Address(RVA = "0xB5E104", Offset = "0xB5E104", VA = "0xB5E104")]
		private void Update()
		{
		}

		[Token(Token = "0x6001225")]
		[Address(RVA = "0xB5E794", Offset = "0xB5E794", VA = "0xB5E794")]
		public CUI_OrientOnCurvedSpace()
		{
		}
	}
	[Token(Token = "0x200032D")]
	public class CUI_PerlinNoisePosition : MonoBehaviour
	{
		[Token(Token = "0x4000EE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float samplingSpeed;

		[Token(Token = "0x4000EE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector2 Range;

		[Token(Token = "0x4000EE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RectTransform rectie;

		[Token(Token = "0x6001226")]
		[Address(RVA = "0xB5E79C", Offset = "0xB5E79C", VA = "0xB5E79C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001227")]
		[Address(RVA = "0xB5E810", Offset = "0xB5E810", VA = "0xB5E810")]
		private void Update()
		{
		}

		[Token(Token = "0x6001228")]
		[Address(RVA = "0xB5E968", Offset = "0xB5E968", VA = "0xB5E968")]
		public CUI_PerlinNoisePosition()
		{
		}
	}
	[Token(Token = "0x200032E")]
	public class CUI_PerlinNoiseRotation : MonoBehaviour
	{
		[Token(Token = "0x4000EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float samplingSpeed;

		[Token(Token = "0x4000EE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float maxrotation;

		[Token(Token = "0x4000EE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RectTransform rectie;

		[Token(Token = "0x6001229")]
		[Address(RVA = "0xB5E978", Offset = "0xB5E978", VA = "0xB5E978")]
		private void Start()
		{
		}

		[Token(Token = "0x600122A")]
		[Address(RVA = "0xB5E9EC", Offset = "0xB5E9EC", VA = "0xB5E9EC")]
		private void Update()
		{
		}

		[Token(Token = "0x600122B")]
		[Address(RVA = "0xB5EAE0", Offset = "0xB5EAE0", VA = "0xB5EAE0")]
		public CUI_PerlinNoiseRotation()
		{
		}
	}
	[Token(Token = "0x200032F")]
	public class CUI_PickImageFromSet : MonoBehaviour
	{
		[Token(Token = "0x4000EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static CUI_PickImageFromSet picked;

		[Token(Token = "0x600122C")]
		[Address(RVA = "0xB5EAF4", Offset = "0xB5EAF4", VA = "0xB5EAF4")]
		public void PickThis()
		{
		}

		[Token(Token = "0x600122D")]
		[Address(RVA = "0xB5EC6C", Offset = "0xB5EC6C", VA = "0xB5EC6C")]
		public CUI_PickImageFromSet()
		{
		}
	}
	[Token(Token = "0x2000330")]
	public class CUI_RaycastToCanvas : MonoBehaviour
	{
		[Token(Token = "0x4000EE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CurvedUISettings mySettings;

		[Token(Token = "0x600122E")]
		[Address(RVA = "0xB5EC74", Offset = "0xB5EC74", VA = "0xB5EC74")]
		private void Start()
		{
		}

		[Token(Token = "0x600122F")]
		[Address(RVA = "0xB5ECCC", Offset = "0xB5ECCC", VA = "0xB5ECCC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001230")]
		[Address(RVA = "0xB5EDCC", Offset = "0xB5EDCC", VA = "0xB5EDCC")]
		public CUI_RaycastToCanvas()
		{
		}
	}
	[Token(Token = "0x2000331")]
	public class CUI_RiseChildrenOverTime : MonoBehaviour
	{
		[Token(Token = "0x4000EE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float current;

		[Token(Token = "0x4000EEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float Speed;

		[Token(Token = "0x4000EEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float RiseBy;

		[Token(Token = "0x6001231")]
		[Address(RVA = "0xB5EDD4", Offset = "0xB5EDD4", VA = "0xB5EDD4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001232")]
		[Address(RVA = "0xB5EFCC", Offset = "0xB5EFCC", VA = "0xB5EFCC")]
		public CUI_RiseChildrenOverTime()
		{
		}
	}
	[Token(Token = "0x2000332")]
	public class CUI_TMPChecker : MonoBehaviour
	{
		[Token(Token = "0x4000EEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject testMsg;

		[Token(Token = "0x4000EED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject enabledMsg;

		[Token(Token = "0x4000EEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject disabledMsg;

		[Token(Token = "0x6001233")]
		[Address(RVA = "0xB5EFE0", Offset = "0xB5EFE0", VA = "0xB5EFE0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001234")]
		[Address(RVA = "0xB5F05C", Offset = "0xB5F05C", VA = "0xB5F05C")]
		public CUI_TMPChecker()
		{
		}
	}
	[Token(Token = "0x2000333")]
	public class CUI_ViveButtonState : MonoBehaviour
	{
		[Token(Token = "0x2000334")]
		private enum ViveButton
		{
			[Token(Token = "0x4000EF3")]
			Trigger,
			[Token(Token = "0x4000EF4")]
			TouchpadTouch,
			[Token(Token = "0x4000EF5")]
			TouchpadPress,
			[Token(Token = "0x4000EF6")]
			Grip,
			[Token(Token = "0x4000EF7")]
			Menu
		}

		[Token(Token = "0x4000EEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Color ActiveColor;

		[Token(Token = "0x4000EF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Color InActiveColor;

		[Token(Token = "0x4000EF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ViveButton ShowStateFor;

		[Token(Token = "0x6001235")]
		[Address(RVA = "0xB5F064", Offset = "0xB5F064", VA = "0xB5F064")]
		public CUI_ViveButtonState()
		{
		}
	}
	[Token(Token = "0x2000335")]
	public class CUI_ViveHapticPulse : MonoBehaviour
	{
		[Token(Token = "0x4000EF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float PulseStrength;

		[Token(Token = "0x6001236")]
		[Address(RVA = "0xB5F0A8", Offset = "0xB5F0A8", VA = "0xB5F0A8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001237")]
		[Address(RVA = "0xB5F0B4", Offset = "0xB5F0B4", VA = "0xB5F0B4")]
		public void SetPulseStrength(float newStr)
		{
		}

		[Token(Token = "0x6001238")]
		[Address(RVA = "0xB5F138", Offset = "0xB5F138", VA = "0xB5F138")]
		public CUI_ViveHapticPulse()
		{
		}
	}
	[Token(Token = "0x2000336")]
	public class CUI_WorldSpaceCursorFollow : MonoBehaviour
	{
		[Token(Token = "0x4000EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CurvedUISettings mySettings;

		[Token(Token = "0x6001239")]
		[Address(RVA = "0xB5F140", Offset = "0xB5F140", VA = "0xB5F140")]
		private void Start()
		{
		}

		[Token(Token = "0x600123A")]
		[Address(RVA = "0xB5F298", Offset = "0xB5F298", VA = "0xB5F298")]
		private void Update()
		{
		}

		[Token(Token = "0x600123B")]
		[Address(RVA = "0xB5F36C", Offset = "0xB5F36C", VA = "0xB5F36C")]
		public CUI_WorldSpaceCursorFollow()
		{
		}
	}
	[Token(Token = "0x2000337")]
	public class CUI_WorldSpaceMouseMultipleCanvases : MonoBehaviour
	{
		[Token(Token = "0x4000EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<CurvedUISettings> ControlledCanvases;

		[Token(Token = "0x4000EFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform WorldSpaceMouse;

		[Token(Token = "0x4000EFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private CurvedUISettings MouseCanvas;

		[Token(Token = "0x600123C")]
		[Address(RVA = "0xB5F374", Offset = "0xB5F374", VA = "0xB5F374")]
		private void Update()
		{
		}

		[Token(Token = "0x600123D")]
		[Address(RVA = "0xB5F70C", Offset = "0xB5F70C", VA = "0xB5F70C")]
		public CUI_WorldSpaceMouseMultipleCanvases()
		{
		}
	}
	[Token(Token = "0x2000338")]
	public class CUI_draggable : MonoBehaviour, IBeginDragHandler, IEventSystemHandler, IEndDragHandler, IDragHandler
	{
		[Token(Token = "0x4000EFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector2 savedVector;

		[Token(Token = "0x4000EFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool isDragged;

		[Token(Token = "0x600123E")]
		[Address(RVA = "0xB5F714", Offset = "0xB5F714", VA = "0xB5F714", Slot = "4")]
		public void OnBeginDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x600123F")]
		[Address(RVA = "0xB5FA5C", Offset = "0xB5FA5C", VA = "0xB5FA5C", Slot = "6")]
		public void OnDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x6001240")]
		[Address(RVA = "0xB5FA60", Offset = "0xB5FA60", VA = "0xB5FA60", Slot = "5")]
		public void OnEndDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x6001241")]
		[Address(RVA = "0xB5FAD8", Offset = "0xB5FAD8", VA = "0xB5FAD8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001242")]
		[Address(RVA = "0xB5F864", Offset = "0xB5F864", VA = "0xB5F864")]
		private void RaycastPosition(out Vector2 newPos)
		{
		}

		[Token(Token = "0x6001243")]
		[Address(RVA = "0xB5FBEC", Offset = "0xB5FBEC", VA = "0xB5FBEC")]
		public CUI_draggable()
		{
		}
	}
	[Token(Token = "0x2000339")]
	public class CUI_inventory_paralax : MonoBehaviour
	{
		[Token(Token = "0x4000EFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform front;

		[Token(Token = "0x4000F00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform back;

		[Token(Token = "0x4000F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 initFG;

		[Token(Token = "0x4000F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 initBG;

		[Token(Token = "0x4000F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float change;

		[Token(Token = "0x6001244")]
		[Address(RVA = "0xB5FBF4", Offset = "0xB5FBF4", VA = "0xB5FBF4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001245")]
		[Address(RVA = "0xB5FC44", Offset = "0xB5FC44", VA = "0xB5FC44")]
		private void Update()
		{
		}

		[Token(Token = "0x6001246")]
		[Address(RVA = "0xB5FE80", Offset = "0xB5FE80", VA = "0xB5FE80")]
		public CUI_inventory_paralax()
		{
		}
	}
	[Token(Token = "0x200033A")]
	public class CurvedUIEventSystem : EventSystem
	{
		[Token(Token = "0x4000F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static CurvedUIEventSystem instance;

		[Token(Token = "0x6001247")]
		[Address(RVA = "0xB5FE90", Offset = "0xB5FE90", VA = "0xB5FE90", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001248")]
		[Address(RVA = "0xB5FEF0", Offset = "0xB5FEF0", VA = "0xB5FEF0", Slot = "17")]
		protected override void OnApplicationFocus(bool hasFocus)
		{
		}

		[Token(Token = "0x6001249")]
		[Address(RVA = "0xB5FEFC", Offset = "0xB5FEFC", VA = "0xB5FEFC")]
		public CurvedUIEventSystem()
		{
		}
	}
	[Token(Token = "0x200033B")]
	public static class CurvedUIExtensionMethods
	{
		[Token(Token = "0x600124A")]
		[Address(RVA = "0xB5FF64", Offset = "0xB5FF64", VA = "0xB5FF64")]
		public static bool AlmostEqual(this Vector3 a, Vector3 b, double accuracy = 0.01)
		{
			return default(bool);
		}

		[Token(Token = "0x600124B")]
		[Address(RVA = "0xB5E94C", Offset = "0xB5E94C", VA = "0xB5E94C")]
		public static float Remap(this float value, float from1, float to1, float from2, float to2)
		{
			return default(float);
		}

		[Token(Token = "0x600124C")]
		[Address(RVA = "0xB60030", Offset = "0xB60030", VA = "0xB60030")]
		public static float RemapAndClamp(this float value, float from1, float to1, float from2, float to2)
		{
			return default(float);
		}

		[Token(Token = "0x600124D")]
		[Address(RVA = "0xB60054", Offset = "0xB60054", VA = "0xB60054")]
		public static float Clamp(this float value, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x600124E")]
		[Address(RVA = "0xB600DC", Offset = "0xB600DC", VA = "0xB600DC")]
		public static float Abs(this float value)
		{
			return default(float);
		}

		[Token(Token = "0x600124F")]
		[Address(RVA = "0xB5DCA4", Offset = "0xB5DCA4", VA = "0xB5DCA4")]
		public static Vector3 ModifyX(this Vector3 trans, float newVal)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001250")]
		[Address(RVA = "0xB5DCDC", Offset = "0xB5DCDC", VA = "0xB5DCDC")]
		public static Vector3 ModifyY(this Vector3 trans, float newVal)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001251")]
		[Address(RVA = "0xB5DC6C", Offset = "0xB5DC6C", VA = "0xB5DC6C")]
		public static Vector3 ModifyZ(this Vector3 trans, float newVal)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001252")]
		[Address(RVA = "0xB5D53C", Offset = "0xB5D53C", VA = "0xB5D53C")]
		public static void ResetTransform(this Transform trans)
		{
		}

		[Token(Token = "0x6001253")]
		public static T AddComponentIfMissing<T>(this GameObject go) where T : Component
		{
			return null;
		}

		[Token(Token = "0x6001254")]
		public static T AddComponentIfMissing<T>(this Component go) where T : Component
		{
			return null;
		}
	}
	[Token(Token = "0x200033C")]
	public class CurvedUIHandSwitcher : MonoBehaviour
	{
		[Token(Token = "0x4000F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject LaserBeam;

		[Token(Token = "0x4000F06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x879C10", Offset = "0x879C10")]
		private bool autoSwitchHands;

		[Token(Token = "0x4000F07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x879C5C", Offset = "0x879C5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x879C5C", Offset = "0x879C5C")]
		[SerializeField]
		private Transform leftHandOverride;

		[Token(Token = "0x4000F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x879CCC", Offset = "0x879CCC")]
		[SerializeField]
		private Transform rightHandOverride;

		[Token(Token = "0x6001255")]
		[Address(RVA = "0xB60148", Offset = "0xB60148", VA = "0xB60148")]
		private void SwitchHandTo(CurvedUIInputModule.Hand newHand)
		{
		}

		[Token(Token = "0x6001256")]
		[Address(RVA = "0xB60460", Offset = "0xB60460", VA = "0xB60460")]
		public CurvedUIHandSwitcher()
		{
		}
	}
	[Token(Token = "0x200033D")]
	public class CurvedUIInputFieldCaret : MonoBehaviour, ISelectHandler, IEventSystemHandler, IDeselectHandler
	{
		[Token(Token = "0x200033E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87168C", Offset = "0x87168C")]
		private sealed class <CaretBlinker>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CurvedUIInputFieldCaret <>4__this;

			[Token(Token = "0x17000305")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001269")]
				[Address(RVA = "0xB610D0", Offset = "0xB610D0", VA = "0xB610D0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000306")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600126B")]
				[Address(RVA = "0xB61138", Offset = "0xB61138", VA = "0xB61138", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001266")]
			[Address(RVA = "0xB60C88", Offset = "0xB60C88", VA = "0xB60C88")]
			[DebuggerHidden]
			public <CaretBlinker>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6001267")]
			[Address(RVA = "0xB60FB4", Offset = "0xB60FB4", VA = "0xB60FB4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001268")]
			[Address(RVA = "0xB60FB8", Offset = "0xB60FB8", VA = "0xB60FB8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600126A")]
			[Address(RVA = "0xB610D8", Offset = "0xB610D8", VA = "0xB610D8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private InputField myField;

		[Token(Token = "0x4000F0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RectTransform myCaret;

		[Token(Token = "0x4000F0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color origCaretColor;

		[Token(Token = "0x4000F0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color origSelectionColor;

		[Token(Token = "0x4000F0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool selected;

		[Token(Token = "0x4000F0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool selectingText;

		[Token(Token = "0x4000F0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int lastCharDist;

		[Token(Token = "0x17000302")]
		public Color CaretColor
		{
			[Token(Token = "0x600125F")]
			[Address(RVA = "0xB60F3C", Offset = "0xB60F3C", VA = "0xB60F3C")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001260")]
			[Address(RVA = "0xB60F48", Offset = "0xB60F48", VA = "0xB60F48")]
			set
			{
			}
		}

		[Token(Token = "0x17000303")]
		public Color SelectionColor
		{
			[Token(Token = "0x6001261")]
			[Address(RVA = "0xB60F54", Offset = "0xB60F54", VA = "0xB60F54")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001262")]
			[Address(RVA = "0xB60F60", Offset = "0xB60F60", VA = "0xB60F60")]
			set
			{
			}
		}

		[Token(Token = "0x17000304")]
		public float CaretBlinkRate
		{
			[Token(Token = "0x6001263")]
			[Address(RVA = "0xB60F6C", Offset = "0xB60F6C", VA = "0xB60F6C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001264")]
			[Address(RVA = "0xB60F88", Offset = "0xB60F88", VA = "0xB60F88")]
			set
			{
			}
		}

		[Token(Token = "0x6001257")]
		[Address(RVA = "0xB60470", Offset = "0xB60470", VA = "0xB60470")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001258")]
		[Address(RVA = "0xB604C8", Offset = "0xB604C8", VA = "0xB604C8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001259")]
		[Address(RVA = "0xB60808", Offset = "0xB60808", VA = "0xB60808", Slot = "4")]
		public void OnSelect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x600125A")]
		[Address(RVA = "0xB60C50", Offset = "0xB60C50", VA = "0xB60C50", Slot = "5")]
		public void OnDeselect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x600125B")]
		[Address(RVA = "0xB60BE0", Offset = "0xB60BE0", VA = "0xB60BE0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x87E95C", Offset = "0x87E95C")]
		private IEnumerator CaretBlinker()
		{
			return null;
		}

		[Token(Token = "0x600125C")]
		[Address(RVA = "0xB608C8", Offset = "0xB608C8", VA = "0xB608C8")]
		private void CreateCaret()
		{
		}

		[Token(Token = "0x600125D")]
		[Address(RVA = "0xB604D8", Offset = "0xB604D8", VA = "0xB604D8")]
		private void UpdateCaret()
		{
		}

		[Token(Token = "0x600125E")]
		[Address(RVA = "0xB60CB4", Offset = "0xB60CB4", VA = "0xB60CB4")]
		private Vector2 GetLocalPositionInText(int charNo)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001265")]
		[Address(RVA = "0xB60FA4", Offset = "0xB60FA4", VA = "0xB60FA4")]
		public CurvedUIInputFieldCaret()
		{
		}
	}
	[Token(Token = "0x200033F")]
	public class CurvedUILaserBeam : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000340")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87169C", Offset = "0x87169C")]
		private sealed class <>c
		{
			[Token(Token = "0x4000F16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000F17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<GameObject> <>9__3_0;

			[Token(Token = "0x600126F")]
			[Address(RVA = "0xB616D0", Offset = "0xB616D0", VA = "0xB616D0")]
			public <>c()
			{
			}

			[Token(Token = "0x6001270")]
			[Address(RVA = "0xB616D8", Offset = "0xB616D8", VA = "0xB616D8")]
			internal bool <Update>b__3_0(GameObject x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000F13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform LaserBeamTransform;

		[Token(Token = "0x4000F14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform LaserBeamDot;

		[Token(Token = "0x4000F15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool hideWhenNotAimingAtCanvas;

		[Token(Token = "0x600126C")]
		[Address(RVA = "0xB61140", Offset = "0xB61140", VA = "0xB61140")]
		protected void Update()
		{
		}

		[Token(Token = "0x600126D")]
		[Address(RVA = "0xB61664", Offset = "0xB61664", VA = "0xB61664")]
		public CurvedUILaserBeam()
		{
		}
	}
	[Token(Token = "0x2000341")]
	public class CurvedUIPhysicsRaycaster : BaseRaycaster
	{
		[Token(Token = "0x4000F18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected int sortOrder;

		[Token(Token = "0x4000F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private RaycastHit hitInfo;

		[Token(Token = "0x4000F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private RaycastResult result;

		[Token(Token = "0x17000307")]
		public int CompoundEventMask
		{
			[Token(Token = "0x6001273")]
			[Address(RVA = "0xB61AB0", Offset = "0xB61AB0", VA = "0xB61AB0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000308")]
		public override Camera eventCamera
		{
			[Token(Token = "0x6001274")]
			[Address(RVA = "0xB61BB0", Offset = "0xB61BB0", VA = "0xB61BB0", Slot = "18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000309")]
		public virtual int Depth
		{
			[Token(Token = "0x6001275")]
			[Address(RVA = "0xB61C80", Offset = "0xB61C80", VA = "0xB61C80", Slot = "22")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700030A")]
		public override int sortOrderPriority
		{
			[Token(Token = "0x6001276")]
			[Address(RVA = "0xB61D40", Offset = "0xB61D40", VA = "0xB61D40", Slot = "20")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001271")]
		[Address(RVA = "0xB617CC", Offset = "0xB617CC", VA = "0xB617CC")]
		protected CurvedUIPhysicsRaycaster()
		{
		}

		[Token(Token = "0x6001272")]
		[Address(RVA = "0xB617DC", Offset = "0xB617DC", VA = "0xB617DC", Slot = "17")]
		public override void Raycast(PointerEventData eventData, List<RaycastResult> resultAppendList)
		{
		}
	}
	[Token(Token = "0x2000342")]
	public class CurvedUIRaycaster : GraphicRaycaster
	{
		[Serializable]
		[Token(Token = "0x2000343")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8716AC", Offset = "0x8716AC")]
		private sealed class <>c
		{
			[Token(Token = "0x4000F30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000F31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<GameObject> <>9__21_0;

			[Token(Token = "0x4000F32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Comparison<Graphic> <>9__32_0;

			[Token(Token = "0x4000F33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Comparison<Graphic> <>9__55_0;

			[Token(Token = "0x600129E")]
			[Address(RVA = "0xB6A1A0", Offset = "0xB6A1A0", VA = "0xB6A1A0")]
			public <>c()
			{
			}

			[Token(Token = "0x600129F")]
			[Address(RVA = "0xB6A1A8", Offset = "0xB6A1A8", VA = "0xB6A1A8")]
			internal bool <Update>b__21_0(GameObject obj)
			{
				return default(bool);
			}

			[Token(Token = "0x60012A0")]
			[Address(RVA = "0xB6A26C", Offset = "0xB6A26C", VA = "0xB6A26C")]
			internal int <FlatRaycastAndSort>b__32_0(Graphic g1, Graphic g2)
			{
				return default(int);
			}

			[Token(Token = "0x60012A1")]
			[Address(RVA = "0xB6A2C4", Offset = "0xB6A2C4", VA = "0xB6A2C4")]
			internal int <GetObjectsHitByRay>b__55_0(Graphic g1, Graphic g2)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4000F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool showDebug;

		[Token(Token = "0x4000F1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool overrideEventData;

		[Token(Token = "0x4000F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Canvas myCanvas;

		[Token(Token = "0x4000F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private CurvedUISettings mySettings;

		[Token(Token = "0x4000F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 cyllinderMidPoint;

		[Token(Token = "0x4000F20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<GameObject> objectsUnderPointer;

		[Token(Token = "0x4000F21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector2 lastCanvasPos;

		[Token(Token = "0x4000F22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private GameObject colliderContainer;

		[Token(Token = "0x4000F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private PointerEventData lastFrameEventData;

		[Token(Token = "0x4000F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private PointerEventData curEventData;

		[Token(Token = "0x4000F25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private PointerEventData eventDataToUse;

		[Token(Token = "0x4000F26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Ray cachedRay;

		[Token(Token = "0x4000F27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Graphic gph;

		[Token(Token = "0x4000F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private List<GameObject> selectablesUnderGaze;

		[Token(Token = "0x4000F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private List<GameObject> selectablesUnderGazeLastFrame;

		[Token(Token = "0x4000F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private float objectsUnderGazeLastChangeTime;

		[Token(Token = "0x4000F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private bool gazeClickExecuted;

		[Token(Token = "0x4000F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
		private bool pointingAtCanvas;

		[Token(Token = "0x4000F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCE")]
		private bool pointingAtCanvasLastFrame;

		[NonSerialized]
		[Token(Token = "0x4000F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private List<Graphic> m_RaycastResults;

		[NonSerialized]
		[Token(Token = "0x4000F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly List<Graphic> s_SortedGraphics;

		[Token(Token = "0x1700030B")]
		private Image GazeProgressImage
		{
			[Token(Token = "0x600128A")]
			[Address(RVA = "0xB62CDC", Offset = "0xB62CDC", VA = "0xB62CDC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700030C")]
		public bool PointingAtCanvas
		{
			[Token(Token = "0x6001293")]
			[Address(RVA = "0xB69808", Offset = "0xB69808", VA = "0xB69808")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001277")]
		[Address(RVA = "0xB61D48", Offset = "0xB61D48", VA = "0xB61D48", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001278")]
		[Address(RVA = "0xB61FCC", Offset = "0xB61FCC", VA = "0xB61FCC", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001279")]
		[Address(RVA = "0xB62770", Offset = "0xB62770", VA = "0xB62770", Slot = "22")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x600127A")]
		[Address(RVA = "0xB62B24", Offset = "0xB62B24", VA = "0xB62B24")]
		private void ProcessGazeTimedClick()
		{
		}

		[Token(Token = "0x600127B")]
		[Address(RVA = "0xB62AF8", Offset = "0xB62AF8", VA = "0xB62AF8")]
		private void ResetGazeTimedClick()
		{
		}

		[Token(Token = "0x600127C")]
		[Address(RVA = "0xB632D8", Offset = "0xB632D8", VA = "0xB632D8", Slot = "17")]
		public override void Raycast(PointerEventData eventData, List<RaycastResult> resultAppendList)
		{
		}

		[Token(Token = "0x600127D")]
		[Address(RVA = "0xB645FC", Offset = "0xB645FC", VA = "0xB645FC", Slot = "23")]
		public virtual bool RaycastToCyllinderCanvas(Ray ray3D, out Vector2 o_canvasPos, bool OutputInCanvasSpace = false)
		{
			return default(bool);
		}

		[Token(Token = "0x600127E")]
		[Address(RVA = "0xB64EC8", Offset = "0xB64EC8", VA = "0xB64EC8", Slot = "24")]
		public virtual bool RaycastToCyllinderVerticalCanvas(Ray ray3D, out Vector2 o_canvasPos, bool OutputInCanvasSpace = false)
		{
			return default(bool);
		}

		[Token(Token = "0x600127F")]
		[Address(RVA = "0xB655E0", Offset = "0xB655E0", VA = "0xB655E0", Slot = "25")]
		public virtual bool RaycastToRingCanvas(Ray ray3D, out Vector2 o_canvasPos, bool OutputInCanvasSpace = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001280")]
		[Address(RVA = "0xB65B90", Offset = "0xB65B90", VA = "0xB65B90", Slot = "26")]
		public virtual bool RaycastToSphereCanvas(Ray ray3D, out Vector2 o_canvasPos, bool OutputInCanvasSpace = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001281")]
		[Address(RVA = "0xB63F90", Offset = "0xB63F90", VA = "0xB63F90")]
		private void FlatRaycast(PointerEventData eventData, List<RaycastResult> resultAppendList)
		{
		}

		[Token(Token = "0x6001282")]
		[Address(RVA = "0xB666B4", Offset = "0xB666B4", VA = "0xB666B4")]
		private static void FlatRaycastAndSort(Canvas canvas, Camera eventCamera, Vector2 pointerPosition, IList<Graphic> foundGraphics, List<Graphic> results)
		{
		}

		[Token(Token = "0x6001283")]
		[Address(RVA = "0xB62268", Offset = "0xB62268", VA = "0xB62268")]
		protected void CreateCollider()
		{
		}

		[Token(Token = "0x6001284")]
		[Address(RVA = "0xB68160", Offset = "0xB68160", VA = "0xB68160")]
		private void SetupMeshColliderUsingMesh(Mesh meshie)
		{
		}

		[Token(Token = "0x6001285")]
		[Address(RVA = "0xB66B6C", Offset = "0xB66B6C", VA = "0xB66B6C")]
		private GameObject CreateConvexCyllinderCollider(bool vertical = false)
		{
			return null;
		}

		[Token(Token = "0x6001286")]
		[Address(RVA = "0xB677F0", Offset = "0xB677F0", VA = "0xB677F0")]
		private Mesh CreateCyllinderColliderMesh(bool vertical = false)
		{
			return null;
		}

		[Token(Token = "0x6001287")]
		[Address(RVA = "0xB68210", Offset = "0xB68210", VA = "0xB68210")]
		private Mesh CreateSphereColliderMesh()
		{
			return null;
		}

		[Token(Token = "0x6001288")]
		[Address(RVA = "0xB68D64", Offset = "0xB68D64", VA = "0xB68D64")]
		private bool IsInLayerMask(int layer, LayerMask layermask)
		{
			return default(bool);
		}

		[Token(Token = "0x6001289")]
		[Address(RVA = "0xB64D14", Offset = "0xB64D14", VA = "0xB64D14")]
		private LayerMask GetRaycastLayerMask()
		{
			return default(LayerMask);
		}

		[Token(Token = "0x600128B")]
		[Address(RVA = "0xB64D84", Offset = "0xB64D84", VA = "0xB64D84")]
		private float AngleSigned(Vector3 v1, Vector3 v2, Vector3 n)
		{
			return default(float);
		}

		[Token(Token = "0x600128C")]
		[Address(RVA = "0xB68DBC", Offset = "0xB68DBC", VA = "0xB68DBC")]
		private bool ShouldStartDrag(Vector2 pressPos, Vector2 currentPos, float threshold, bool useDragThreshold)
		{
			return default(bool);
		}

		[Token(Token = "0x600128D")]
		[Address(RVA = "0xB68E8C", Offset = "0xB68E8C", VA = "0xB68E8C", Slot = "27")]
		protected virtual void ProcessMove(PointerEventData pointerEvent)
		{
		}

		[Token(Token = "0x600128E")]
		[Address(RVA = "0xB63ABC", Offset = "0xB63ABC", VA = "0xB63ABC")]
		protected void UpdateSelectedObjects(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600128F")]
		[Address(RVA = "0xB68EA4", Offset = "0xB68EA4", VA = "0xB68EA4")]
		protected void HandlePointerExitAndEnter(PointerEventData currentPointerData, GameObject newEnterTarget)
		{
		}

		[Token(Token = "0x6001290")]
		[Address(RVA = "0xB694D4", Offset = "0xB694D4", VA = "0xB694D4")]
		protected static GameObject FindCommonRoot(GameObject g1, GameObject g2)
		{
			return null;
		}

		[Token(Token = "0x6001291")]
		[Address(RVA = "0xB6967C", Offset = "0xB6967C", VA = "0xB6967C")]
		private bool GetScreenSpacePointByRay(Ray ray, out Vector2 o_positionOnCanvas)
		{
			return default(bool);
		}

		[Token(Token = "0x6001292")]
		[Address(RVA = "0xB6205C", Offset = "0xB6205C", VA = "0xB6205C")]
		private bool CheckEventCamera()
		{
			return default(bool);
		}

		[Token(Token = "0x6001294")]
		[Address(RVA = "0xB69810", Offset = "0xB69810", VA = "0xB69810")]
		public void RebuildCollider()
		{
		}

		[Token(Token = "0x6001295")]
		[Address(RVA = "0xB5DBF8", Offset = "0xB5DBF8", VA = "0xB5DBF8")]
		public List<GameObject> GetObjectsUnderPointer()
		{
			return null;
		}

		[Token(Token = "0x6001296")]
		[Address(RVA = "0xB6987C", Offset = "0xB6987C", VA = "0xB6987C")]
		public List<GameObject> GetObjectsUnderScreenPos(Vector2 screenPos, [Optional] Camera eventCamera)
		{
			return null;
		}

		[Token(Token = "0x6001297")]
		[Address(RVA = "0xB6998C", Offset = "0xB6998C", VA = "0xB6998C")]
		public List<GameObject> GetObjectsHitByRay(Ray ray)
		{
			return null;
		}

		[Token(Token = "0x6001298")]
		[Address(RVA = "0xB62D4C", Offset = "0xB62D4C", VA = "0xB62D4C")]
		public void Click()
		{
		}

		[Token(Token = "0x6001299")]
		[Address(RVA = "0xB68A00", Offset = "0xB68A00", VA = "0xB68A00")]
		private void ModifyQuad(List<Vector3> verts, int vertexIndex, Vector2 requiredSize)
		{
		}

		[Token(Token = "0x600129A")]
		[Address(RVA = "0xB69DB0", Offset = "0xB69DB0", VA = "0xB69DB0")]
		private Vector3 TesselateQuad(List<Vector3> quad, float x, float y)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600129B")]
		[Address(RVA = "0xB69FA4", Offset = "0xB69FA4", VA = "0xB69FA4")]
		public CurvedUIRaycaster()
		{
		}
	}
	[Token(Token = "0x2000344")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8716BC", Offset = "0x8716BC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8716BC", Offset = "0x8716BC")]
	public class CurvedUISettings : MonoBehaviour
	{
		[Token(Token = "0x2000345")]
		public enum CurvedUIShape
		{
			[Token(Token = "0x4000F46")]
			CYLINDER,
			[Token(Token = "0x4000F47")]
			RING,
			[Token(Token = "0x4000F48")]
			SPHERE,
			[Token(Token = "0x4000F49")]
			CYLINDER_VERTICAL
		}

		[Token(Token = "0x4000F34")]
		public const string Version = "3.2";

		[Token(Token = "0x4000F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CurvedUIShape shape;

		[Token(Token = "0x4000F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float quality;

		[Token(Token = "0x4000F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool interactable;

		[Token(Token = "0x4000F38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[SerializeField]
		private bool blocksRaycasts;

		[Token(Token = "0x4000F39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		[SerializeField]
		private bool forceUseBoxCollider;

		[Token(Token = "0x4000F3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private int angle;

		[Token(Token = "0x4000F3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool preserveAspect;

		[Token(Token = "0x4000F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private int vertAngle;

		[Token(Token = "0x4000F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float ringFill;

		[Token(Token = "0x4000F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private int ringExternalDiamater;

		[Token(Token = "0x4000F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private bool ringFlipVertical;

		[Token(Token = "0x4000F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int baseCircleSegments;

		[Token(Token = "0x4000F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector2 savedRectSize;

		[Token(Token = "0x4000F42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float savedRadius;

		[Token(Token = "0x4000F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Canvas myCanvas;

		[Token(Token = "0x4000F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private RectTransform m_rectTransform;

		[Token(Token = "0x1700030D")]
		private RectTransform RectTransform
		{
			[Token(Token = "0x60012AC")]
			[Address(RVA = "0xB6A3A8", Offset = "0xB6A3A8", VA = "0xB6A3A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700030E")]
		public int BaseCircleSegments
		{
			[Token(Token = "0x60012B5")]
			[Address(RVA = "0xB6B760", Offset = "0xB6B760", VA = "0xB6B760")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700030F")]
		public int Angle
		{
			[Token(Token = "0x60012B6")]
			[Address(RVA = "0xB6B768", Offset = "0xB6B768", VA = "0xB6B768")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60012B7")]
			[Address(RVA = "0xB6B770", Offset = "0xB6B770", VA = "0xB6B770")]
			set
			{
			}
		}

		[Token(Token = "0x17000310")]
		public float Quality
		{
			[Token(Token = "0x60012B8")]
			[Address(RVA = "0xB6B784", Offset = "0xB6B784", VA = "0xB6B784")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60012B9")]
			[Address(RVA = "0xB6B78C", Offset = "0xB6B78C", VA = "0xB6B78C")]
			set
			{
			}
		}

		[Token(Token = "0x17000311")]
		public CurvedUIShape Shape
		{
			[Token(Token = "0x60012BA")]
			[Address(RVA = "0xB6B7A8", Offset = "0xB6B7A8", VA = "0xB6B7A8")]
			get
			{
				return default(CurvedUIShape);
			}
			[Token(Token = "0x60012BB")]
			[Address(RVA = "0xB6B7B0", Offset = "0xB6B7B0", VA = "0xB6B7B0")]
			set
			{
			}
		}

		[Token(Token = "0x17000312")]
		public int VerticalAngle
		{
			[Token(Token = "0x60012BC")]
			[Address(RVA = "0xB6B7D0", Offset = "0xB6B7D0", VA = "0xB6B7D0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60012BD")]
			[Address(RVA = "0xB6B7D8", Offset = "0xB6B7D8", VA = "0xB6B7D8")]
			set
			{
			}
		}

		[Token(Token = "0x17000313")]
		public float RingFill
		{
			[Token(Token = "0x60012BE")]
			[Address(RVA = "0xB6B7F8", Offset = "0xB6B7F8", VA = "0xB6B7F8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60012BF")]
			[Address(RVA = "0xB5C880", Offset = "0xB5C880", VA = "0xB5C880")]
			set
			{
			}
		}

		[Token(Token = "0x17000314")]
		public float SavedRadius
		{
			[Token(Token = "0x60012C0")]
			[Address(RVA = "0xB6AD6C", Offset = "0xB6AD6C", VA = "0xB6AD6C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000315")]
		public int RingExternalDiameter
		{
			[Token(Token = "0x60012C1")]
			[Address(RVA = "0xB6B800", Offset = "0xB6B800", VA = "0xB6B800")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60012C2")]
			[Address(RVA = "0xB6B808", Offset = "0xB6B808", VA = "0xB6B808")]
			set
			{
			}
		}

		[Token(Token = "0x17000316")]
		public bool RingFlipVertical
		{
			[Token(Token = "0x60012C3")]
			[Address(RVA = "0xB6B828", Offset = "0xB6B828", VA = "0xB6B828")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60012C4")]
			[Address(RVA = "0xB6B830", Offset = "0xB6B830", VA = "0xB6B830")]
			set
			{
			}
		}

		[Token(Token = "0x17000317")]
		public bool PreserveAspect
		{
			[Token(Token = "0x60012C5")]
			[Address(RVA = "0xB6B85C", Offset = "0xB6B85C", VA = "0xB6B85C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60012C6")]
			[Address(RVA = "0xB6B864", Offset = "0xB6B864", VA = "0xB6B864")]
			set
			{
			}
		}

		[Token(Token = "0x17000318")]
		public bool Interactable
		{
			[Token(Token = "0x60012C7")]
			[Address(RVA = "0xB6B890", Offset = "0xB6B890", VA = "0xB6B890")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60012C8")]
			[Address(RVA = "0xB6B898", Offset = "0xB6B898", VA = "0xB6B898")]
			set
			{
			}
		}

		[Token(Token = "0x17000319")]
		public bool ForceUseBoxCollider
		{
			[Token(Token = "0x60012C9")]
			[Address(RVA = "0xB6B8A4", Offset = "0xB6B8A4", VA = "0xB6B8A4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60012CA")]
			[Address(RVA = "0xB6B8AC", Offset = "0xB6B8AC", VA = "0xB6B8AC")]
			set
			{
			}
		}

		[Token(Token = "0x1700031A")]
		public bool BlocksRaycasts
		{
			[Token(Token = "0x60012CB")]
			[Address(RVA = "0xB6B8B8", Offset = "0xB6B8B8", VA = "0xB6B8B8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60012CC")]
			[Address(RVA = "0xB6B8C0", Offset = "0xB6B8C0", VA = "0xB6B8C0")]
			set
			{
			}
		}

		[Token(Token = "0x1700031B")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x87EE7C", Offset = "0x87EE7C")]
		public bool RaycastMyLayerOnly
		{
			[Token(Token = "0x60012CD")]
			[Address(RVA = "0xB6B9A8", Offset = "0xB6B9A8", VA = "0xB6B9A8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60012CE")]
			[Address(RVA = "0xB6B9B0", Offset = "0xB6B9B0", VA = "0xB6B9B0")]
			set
			{
			}
		}

		[Token(Token = "0x1700031C")]
		public bool PointingAtCanvas
		{
			[Token(Token = "0x60012D0")]
			[Address(RVA = "0xB6BA78", Offset = "0xB6BA78", VA = "0xB6BA78")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700031D")]
		public CurvedUIInputModule.CUIControlMethod ControlMethod
		{
			[Token(Token = "0x60012D2")]
			[Address(RVA = "0xB69474", Offset = "0xB69474", VA = "0xB69474")]
			get
			{
				return default(CurvedUIInputModule.CUIControlMethod);
			}
			[Token(Token = "0x60012D3")]
			[Address(RVA = "0xB6BC28", Offset = "0xB6BC28", VA = "0xB6BC28")]
			set
			{
			}
		}

		[Token(Token = "0x1700031E")]
		public bool GazeUseTimedClick
		{
			[Token(Token = "0x60012D7")]
			[Address(RVA = "0xB6BEE8", Offset = "0xB6BEE8", VA = "0xB6BEE8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60012D8")]
			[Address(RVA = "0xB6BF58", Offset = "0xB6BF58", VA = "0xB6BF58")]
			set
			{
			}
		}

		[Token(Token = "0x1700031F")]
		public float GazeClickTimer
		{
			[Token(Token = "0x60012D9")]
			[Address(RVA = "0xB6BFD0", Offset = "0xB6BFD0", VA = "0xB6BFD0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60012DA")]
			[Address(RVA = "0xB6C040", Offset = "0xB6C040", VA = "0xB6C040")]
			set
			{
			}
		}

		[Token(Token = "0x17000320")]
		public float GazeClickTimerDelay
		{
			[Token(Token = "0x60012DB")]
			[Address(RVA = "0xB6C0C0", Offset = "0xB6C0C0", VA = "0xB6C0C0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60012DC")]
			[Address(RVA = "0xB6C130", Offset = "0xB6C130", VA = "0xB6C130")]
			set
			{
			}
		}

		[Token(Token = "0x17000321")]
		public float GazeTimerProgress
		{
			[Token(Token = "0x60012DD")]
			[Address(RVA = "0xB6C1B0", Offset = "0xB6C1B0", VA = "0xB6C1B0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60012A2")]
		[Address(RVA = "0xB6A31C", Offset = "0xB6A31C", VA = "0xB6A31C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60012A3")]
		[Address(RVA = "0xB6A454", Offset = "0xB6A454", VA = "0xB6A454")]
		private void Start()
		{
		}

		[Token(Token = "0x60012A4")]
		[Address(RVA = "0xB6A798", Offset = "0xB6A798", VA = "0xB6A798")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60012A5")]
		[Address(RVA = "0xB6A848", Offset = "0xB6A848", VA = "0xB6A848")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60012A6")]
		[Address(RVA = "0xB6A8F8", Offset = "0xB6A8F8", VA = "0xB6A8F8")]
		private void Update()
		{
		}

		[Token(Token = "0x60012A7")]
		[Address(RVA = "0xB6AA4C", Offset = "0xB6AA4C", VA = "0xB6AA4C")]
		private void SetUIAngle(int newAngle)
		{
		}

		[Token(Token = "0x60012A8")]
		[Address(RVA = "0xB6AC3C", Offset = "0xB6AC3C", VA = "0xB6AC3C")]
		private Vector3 CanvasToCyllinder(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60012A9")]
		[Address(RVA = "0xB6AD9C", Offset = "0xB6AD9C", VA = "0xB6AD9C")]
		private Vector3 CanvasToCyllinderVertical(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60012AA")]
		[Address(RVA = "0xB6AECC", Offset = "0xB6AECC", VA = "0xB6AECC")]
		private Vector3 CanvasToRing(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60012AB")]
		[Address(RVA = "0xB6B004", Offset = "0xB6B004", VA = "0xB6B004")]
		private Vector3 CanvasToSphere(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60012AD")]
		[Address(RVA = "0xB6B1EC", Offset = "0xB6B1EC", VA = "0xB6B1EC")]
		public void AddEffectToChildren()
		{
		}

		[Token(Token = "0x60012AE")]
		[Address(RVA = "0xB6B52C", Offset = "0xB6B52C", VA = "0xB6B52C")]
		public Vector3 VertexPositionToCurvedCanvas(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60012AF")]
		[Address(RVA = "0xB5E2F4", Offset = "0xB5E2F4", VA = "0xB5E2F4")]
		public Vector3 CanvasToCurvedCanvas(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60012B0")]
		[Address(RVA = "0xB5E414", Offset = "0xB5E414", VA = "0xB5E414")]
		public Vector3 CanvasToCurvedCanvasNormal(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60012B1")]
		[Address(RVA = "0xB5D5FC", Offset = "0xB5D5FC", VA = "0xB5D5FC")]
		public bool RaycastToCanvasSpace(Ray ray, out Vector2 o_positionOnCanvas)
		{
			return default(bool);
		}

		[Token(Token = "0x60012B2")]
		[Address(RVA = "0xB61E50", Offset = "0xB61E50", VA = "0xB61E50")]
		public float GetCyllinderRadiusInCanvasSpace()
		{
			return default(float);
		}

		[Token(Token = "0x60012B3")]
		[Address(RVA = "0xB687CC", Offset = "0xB687CC", VA = "0xB687CC")]
		public Vector2 GetTesslationSize(bool modifiedByQuality = true)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60012B4")]
		[Address(RVA = "0xB6B65C", Offset = "0xB6B65C", VA = "0xB6B65C")]
		private float GetSegmentsByAngle(float angle)
		{
			return default(float);
		}

		[Token(Token = "0x60012CF")]
		[Address(RVA = "0xB6B9B4", Offset = "0xB6B9B4", VA = "0xB6B9B4")]
		public void SetAllChildrenDirty(bool recalculateCurveOnly = false)
		{
		}

		[Token(Token = "0x60012D1")]
		[Address(RVA = "0xB6BB6C", Offset = "0xB6BB6C", VA = "0xB6BB6C")]
		public void Click()
		{
		}

		[Token(Token = "0x60012D4")]
		[Address(RVA = "0xB61580", Offset = "0xB61580", VA = "0xB61580")]
		public List<GameObject> GetObjectsUnderPointer()
		{
			return null;
		}

		[Token(Token = "0x60012D5")]
		[Address(RVA = "0xB6BC90", Offset = "0xB6BC90", VA = "0xB6BC90")]
		public List<GameObject> GetObjectsUnderScreenPos(Vector2 pos, [Optional] Camera eventCamera)
		{
			return null;
		}

		[Token(Token = "0x60012D6")]
		[Address(RVA = "0xB6BDD8", Offset = "0xB6BDD8", VA = "0xB6BDD8")]
		public List<GameObject> GetObjectsHitByRay(Ray ray)
		{
			return null;
		}

		[Token(Token = "0x60012DE")]
		[Address(RVA = "0xB6C220", Offset = "0xB6C220", VA = "0xB6C220")]
		public CurvedUISettings()
		{
		}
	}
	[Token(Token = "0x2000346")]
	public class CurvedUIVertexEffect : BaseMeshEffect
	{
		[Token(Token = "0x4000F4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x879E18", Offset = "0x879E18")]
		public bool DoNotTesselate;

		[Token(Token = "0x4000F4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Canvas myCanvas;

		[Token(Token = "0x4000F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CurvedUISettings mySettings;

		[Token(Token = "0x4000F4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Graphic myGraphic;

		[Token(Token = "0x4000F4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Text myText;

		[Token(Token = "0x4000F4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private TextMeshProUGUI myTMP;

		[Token(Token = "0x4000F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private CurvedUITMPSubmesh myTMPSubMesh;

		[Token(Token = "0x4000F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool m_tesselationRequired;

		[Token(Token = "0x4000F52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool curvingRequired;

		[Token(Token = "0x4000F53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		private bool TransformMisaligned;

		[Token(Token = "0x4000F54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Matrix4x4 CanvasToWorld;

		[Token(Token = "0x4000F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Matrix4x4 CanvasToLocal;

		[Token(Token = "0x4000F56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private Matrix4x4 MyToWorld;

		[Token(Token = "0x4000F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private Matrix4x4 MyToLocal;

		[Token(Token = "0x4000F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private List<UIVertex> m_tesselatedVerts;

		[Token(Token = "0x4000F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private List<UIVertex> m_curvedVerts;

		[Token(Token = "0x4000F5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private List<UIVertex> m_vertsInQuads;

		[Token(Token = "0x4000F5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private UIVertex m_ret;

		[Token(Token = "0x4000F5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private UIVertex[] m_quad;

		[Token(Token = "0x4000F5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private float[] m_weights;

		[Token(Token = "0x4000F5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		[HideInInspector]
		[SerializeField]
		private Vector3 savedPos;

		[Token(Token = "0x4000F5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
		[SerializeField]
		[HideInInspector]
		private Vector3 savedUp;

		[Token(Token = "0x4000F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		[HideInInspector]
		[SerializeField]
		private Vector2 savedRectSize;

		[Token(Token = "0x4000F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		[SerializeField]
		[HideInInspector]
		private Color savedColor;

		[Token(Token = "0x4000F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		[HideInInspector]
		[SerializeField]
		private Vector2 savedTextUV0;

		[Token(Token = "0x4000F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		[SerializeField]
		[HideInInspector]
		private float savedFill;

		[Token(Token = "0x4000F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
		private Vector2 _uv0;

		[Token(Token = "0x4000F65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
		private Vector2 _uv1;

		[Token(Token = "0x4000F66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
		private Vector3 _pos;

		[Token(Token = "0x17000322")]
		private bool tesselationRequired
		{
			[Token(Token = "0x60012DF")]
			[Address(RVA = "0xAE4F24", Offset = "0xAE4F24", VA = "0xAE4F24")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60012E0")]
			[Address(RVA = "0xAE4F2C", Offset = "0xAE4F2C", VA = "0xAE4F2C")]
			set
			{
			}
		}

		[Token(Token = "0x17000323")]
		public bool TesselationRequired
		{
			[Token(Token = "0x60012F3")]
			[Address(RVA = "0xAE7F38", Offset = "0xAE7F38", VA = "0xAE7F38")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60012F4")]
			[Address(RVA = "0xAE7F2C", Offset = "0xAE7F2C", VA = "0xAE7F2C")]
			set
			{
			}
		}

		[Token(Token = "0x17000324")]
		public bool CurvingRequired
		{
			[Token(Token = "0x60012F5")]
			[Address(RVA = "0xAE7F40", Offset = "0xAE7F40", VA = "0xAE7F40")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60012F6")]
			[Address(RVA = "0xAE7F48", Offset = "0xAE7F48", VA = "0xAE7F48")]
			set
			{
			}
		}

		[Token(Token = "0x60012E1")]
		[Address(RVA = "0xAE4F38", Offset = "0xAE4F38", VA = "0xAE4F38", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60012E2")]
		[Address(RVA = "0xAE4FE4", Offset = "0xAE4FE4", VA = "0xAE4FE4", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x60012E3")]
		[Address(RVA = "0xAE5284", Offset = "0xAE5284", VA = "0xAE5284", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60012E4")]
		[Address(RVA = "0xAE580C", Offset = "0xAE580C", VA = "0xAE580C", Slot = "7")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x60012E5")]
		[Address(RVA = "0xAE598C", Offset = "0xAE598C", VA = "0xAE598C")]
		private void TesselationRequiredCallback()
		{
		}

		[Token(Token = "0x60012E6")]
		[Address(RVA = "0xAE5998", Offset = "0xAE5998", VA = "0xAE5998")]
		private void FontTextureRebuiltCallback(Font fontie)
		{
		}

		[Token(Token = "0x60012E7")]
		[Address(RVA = "0xAE5A3C", Offset = "0xAE5A3C", VA = "0xAE5A3C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60012E8")]
		[Address(RVA = "0xAE5FFC", Offset = "0xAE5FFC", VA = "0xAE5FFC", Slot = "20")]
		public override void ModifyMesh(VertexHelper vh)
		{
		}

		[Token(Token = "0x60012E9")]
		[Address(RVA = "0xAE6FE0", Offset = "0xAE6FE0", VA = "0xAE6FE0")]
		public void ModifyTMPMesh(ref List<UIVertex> vertexList)
		{
		}

		[Token(Token = "0x60012EA")]
		[Address(RVA = "0xAE6680", Offset = "0xAE6680", VA = "0xAE6680")]
		private bool ShouldModify()
		{
			return default(bool);
		}

		[Token(Token = "0x60012EB")]
		[Address(RVA = "0xAE6784", Offset = "0xAE6784", VA = "0xAE6784")]
		private void CheckTextFontMaterial()
		{
		}

		[Token(Token = "0x60012EC")]
		[Address(RVA = "0xAE5188", Offset = "0xAE5188", VA = "0xAE5188")]
		public CurvedUISettings FindParentSettings(bool forceNew = false)
		{
			return null;
		}

		[Token(Token = "0x60012ED")]
		[Address(RVA = "0xAE6C08", Offset = "0xAE6C08", VA = "0xAE6C08")]
		private UIVertex CurveVertex(UIVertex input, float cylinder_angle, float radius, Vector2 canvasSize)
		{
			return default(UIVertex);
		}

		[Token(Token = "0x60012EE")]
		[Address(RVA = "0xAE6A28", Offset = "0xAE6A28", VA = "0xAE6A28")]
		private void TesselateGeometry(List<UIVertex> verts)
		{
		}

		[Token(Token = "0x60012EF")]
		[Address(RVA = "0xAE74F8", Offset = "0xAE74F8", VA = "0xAE74F8")]
		private void ModifyQuad(List<UIVertex> verts, int vertexIndex, Vector2 requiredSize)
		{
		}

		[Token(Token = "0x60012F0")]
		[Address(RVA = "0xAE7298", Offset = "0xAE7298", VA = "0xAE7298")]
		private void TrisToQuads(List<UIVertex> verts)
		{
		}

		[Token(Token = "0x60012F1")]
		[Address(RVA = "0xAE7B94", Offset = "0xAE7B94", VA = "0xAE7B94")]
		private UIVertex TesselateQuad(float x, float y)
		{
			return default(UIVertex);
		}

		[Token(Token = "0x60012F2")]
		[Address(RVA = "0xAE7F20", Offset = "0xAE7F20", VA = "0xAE7F20")]
		public void SetDirty()
		{
		}

		[Token(Token = "0x60012F7")]
		[Address(RVA = "0xAE7F54", Offset = "0xAE7F54", VA = "0xAE7F54")]
		public CurvedUIVertexEffect()
		{
		}
	}
	[Token(Token = "0x2000347")]
	public class CurvedUIViveController : MonoBehaviour
	{
		[Token(Token = "0x60012F8")]
		[Address(RVA = "0xAE8034", Offset = "0xAE8034", VA = "0xAE8034")]
		public CurvedUIViveController()
		{
		}
	}
	[Token(Token = "0x2000348")]
	public struct ViveInputArgs
	{
		[Token(Token = "0x4000F67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint controllerIndex;

		[Token(Token = "0x4000F68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float buttonPressure;

		[Token(Token = "0x4000F69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2 touchpadAxis;
	}
	[Token(Token = "0x2000349")]
	[ExecuteInEditMode]
	public class CurvedUITMP : MonoBehaviour
	{
		[Token(Token = "0x4000F6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CurvedUIVertexEffect crvdVE;

		[Token(Token = "0x4000F6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextMeshProUGUI tmpText;

		[Token(Token = "0x4000F6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CurvedUISettings mySettings;

		[Token(Token = "0x4000F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<UIVertex> m_UIVerts;

		[Token(Token = "0x4000F6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private UIVertex m_tempVertex;

		[Token(Token = "0x4000F6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private CurvedUITMPSubmesh m_tempSubMsh;

		[Token(Token = "0x4000F70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector2 savedSize;

		[Token(Token = "0x4000F71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 savedUp;

		[Token(Token = "0x4000F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private Vector3 savedPos;

		[Token(Token = "0x4000F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector3 savedLocalScale;

		[Token(Token = "0x4000F74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private Vector3 savedGlobalScale;

		[Token(Token = "0x4000F75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private List<CurvedUITMPSubmesh> subMeshes;

		[Token(Token = "0x4000F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public bool Dirty;

		[Token(Token = "0x4000F77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
		private bool curvingRequired;

		[Token(Token = "0x4000F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD2")]
		private bool tesselationRequired;

		[Token(Token = "0x4000F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD3")]
		private bool quitting;

		[Token(Token = "0x4000F7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Vector3[] vertices;

		[Token(Token = "0x60012F9")]
		[Address(RVA = "0xB6C264", Offset = "0xB6C264", VA = "0xB6C264")]
		private void Start()
		{
		}

		[Token(Token = "0x60012FA")]
		[Address(RVA = "0xB6C2F4", Offset = "0xB6C2F4", VA = "0xB6C2F4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60012FB")]
		[Address(RVA = "0xB6C57C", Offset = "0xB6C57C", VA = "0xB6C57C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60012FC")]
		[Address(RVA = "0xB6C6C8", Offset = "0xB6C6C8", VA = "0xB6C6C8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60012FD")]
		[Address(RVA = "0xB6C6D4", Offset = "0xB6C6D4", VA = "0xB6C6D4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60012FE")]
		[Address(RVA = "0xB6CF18", Offset = "0xB6CF18", VA = "0xB6CF18")]
		private void CreateUIVertexList(Mesh mesh)
		{
		}

		[Token(Token = "0x60012FF")]
		[Address(RVA = "0xB6D398", Offset = "0xB6D398", VA = "0xB6D398")]
		private void GetUIVertexFromMesh(ref UIVertex vert, int i)
		{
		}

		[Token(Token = "0x6001300")]
		[Address(RVA = "0xB6D138", Offset = "0xB6D138", VA = "0xB6D138")]
		private void FillMeshWithUIVertexList(Mesh mesh, List<UIVertex> list)
		{
		}

		[Token(Token = "0x6001301")]
		[Address(RVA = "0xB6C45C", Offset = "0xB6C45C", VA = "0xB6C45C")]
		private void FindTMP()
		{
		}

		[Token(Token = "0x6001302")]
		[Address(RVA = "0xB6D28C", Offset = "0xB6D28C", VA = "0xB6D28C")]
		private void FindSubmeshes()
		{
		}

		[Token(Token = "0x6001303")]
		[Address(RVA = "0xB6CB98", Offset = "0xB6CB98", VA = "0xB6CB98")]
		private bool ShouldTesselate()
		{
			return default(bool);
		}

		[Token(Token = "0x6001304")]
		[Address(RVA = "0xB6D3E8", Offset = "0xB6D3E8", VA = "0xB6D3E8")]
		private void TMPTextChangedCallback(object obj)
		{
		}

		[Token(Token = "0x6001305")]
		[Address(RVA = "0xB6D404", Offset = "0xB6D404", VA = "0xB6D404")]
		private void TesselationRequiredCallback()
		{
		}

		[Token(Token = "0x6001306")]
		[Address(RVA = "0xB6D410", Offset = "0xB6D410", VA = "0xB6D410")]
		public CurvedUITMP()
		{
		}
	}
	[Token(Token = "0x200034A")]
	[ExecuteInEditMode]
	public class CurvedUITMPInputFieldCaret : MonoBehaviour, ISelectHandler, IEventSystemHandler, IDeselectHandler
	{
		[Token(Token = "0x200034B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x871764", Offset = "0x871764")]
		private sealed class <CaretBlinker>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CurvedUITMPInputFieldCaret <>4__this;

			[Token(Token = "0x17000328")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600131A")]
				[Address(RVA = "0xAE4B38", Offset = "0xAE4B38", VA = "0xAE4B38", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000329")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600131C")]
				[Address(RVA = "0xAE4BA0", Offset = "0xAE4BA0", VA = "0xAE4BA0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001317")]
			[Address(RVA = "0xAE488C", Offset = "0xAE488C", VA = "0xAE488C")]
			[DebuggerHidden]
			public <CaretBlinker>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6001318")]
			[Address(RVA = "0xAE4A1C", Offset = "0xAE4A1C", VA = "0xAE4A1C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001319")]
			[Address(RVA = "0xAE4A20", Offset = "0xAE4A20", VA = "0xAE4A20", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600131B")]
			[Address(RVA = "0xAE4B40", Offset = "0xAE4B40", VA = "0xAE4B40", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TMP_InputField myField;

		[Token(Token = "0x4000F7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RectTransform myCaret;

		[Token(Token = "0x4000F7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color origCaretColor;

		[Token(Token = "0x4000F7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color origSelectionColor;

		[Token(Token = "0x4000F7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool selected;

		[Token(Token = "0x4000F80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool selectingText;

		[Token(Token = "0x17000325")]
		public Color CaretColor
		{
			[Token(Token = "0x6001310")]
			[Address(RVA = "0xAE49AC", Offset = "0xAE49AC", VA = "0xAE49AC")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001311")]
			[Address(RVA = "0xAE49B8", Offset = "0xAE49B8", VA = "0xAE49B8")]
			set
			{
			}
		}

		[Token(Token = "0x17000326")]
		public Color SelectionColor
		{
			[Token(Token = "0x6001312")]
			[Address(RVA = "0xAE49C4", Offset = "0xAE49C4", VA = "0xAE49C4")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001313")]
			[Address(RVA = "0xAE49D0", Offset = "0xAE49D0", VA = "0xAE49D0")]
			set
			{
			}
		}

		[Token(Token = "0x17000327")]
		public float CaretBlinkRate
		{
			[Token(Token = "0x6001314")]
			[Address(RVA = "0xAE49DC", Offset = "0xAE49DC", VA = "0xAE49DC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001315")]
			[Address(RVA = "0xAE49F8", Offset = "0xAE49F8", VA = "0xAE49F8")]
			set
			{
			}
		}

		[Token(Token = "0x6001307")]
		[Address(RVA = "0xAE3D08", Offset = "0xAE3D08", VA = "0xAE3D08")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001308")]
		[Address(RVA = "0xAE40C0", Offset = "0xAE40C0", VA = "0xAE40C0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001309")]
		[Address(RVA = "0xAE43EC", Offset = "0xAE43EC", VA = "0xAE43EC", Slot = "4")]
		public void OnSelect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x600130A")]
		[Address(RVA = "0xAE4854", Offset = "0xAE4854", VA = "0xAE4854", Slot = "5")]
		public void OnDeselect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x600130B")]
		[Address(RVA = "0xAE47E4", Offset = "0xAE47E4", VA = "0xAE47E4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x87EA10", Offset = "0x87EA10")]
		private IEnumerator CaretBlinker()
		{
			return null;
		}

		[Token(Token = "0x600130C")]
		[Address(RVA = "0xAE44AC", Offset = "0xAE44AC", VA = "0xAE44AC")]
		private void CreateCaret()
		{
		}

		[Token(Token = "0x600130D")]
		[Address(RVA = "0xAE40D0", Offset = "0xAE40D0", VA = "0xAE40D0")]
		private void UpdateCaret()
		{
		}

		[Token(Token = "0x600130E")]
		[Address(RVA = "0xAE48B8", Offset = "0xAE48B8", VA = "0xAE48B8")]
		private Vector2 GetLocalPositionInText(int charNo)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600130F")]
		[Address(RVA = "0xAE3DA4", Offset = "0xAE3DA4", VA = "0xAE3DA4")]
		private void CheckAndConvertMask()
		{
		}

		[Token(Token = "0x6001316")]
		[Address(RVA = "0xAE4A14", Offset = "0xAE4A14", VA = "0xAE4A14")]
		public CurvedUITMPInputFieldCaret()
		{
		}
	}
	[Token(Token = "0x200034C")]
	[ExecuteInEditMode]
	public class CurvedUITMPSubmesh : MonoBehaviour
	{
		[Token(Token = "0x4000F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private VertexHelper vh;

		[Token(Token = "0x4000F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Mesh straightMesh;

		[Token(Token = "0x4000F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Mesh curvedMesh;

		[Token(Token = "0x4000F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CurvedUIVertexEffect crvdVE;

		[Token(Token = "0x4000F88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TMP_SubMeshUI TMPsub;

		[Token(Token = "0x4000F89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TextMeshProUGUI TMPtext;

		[Token(Token = "0x600131D")]
		[Address(RVA = "0xAE4BA8", Offset = "0xAE4BA8", VA = "0xAE4BA8")]
		public void UpdateSubmesh(bool tesselate, bool curve)
		{
		}

		[Token(Token = "0x600131E")]
		[Address(RVA = "0xAE4F1C", Offset = "0xAE4F1C", VA = "0xAE4F1C")]
		public CurvedUITMPSubmesh()
		{
		}
	}
	[Token(Token = "0x200034D")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x871784", Offset = "0x871784")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x871784", Offset = "0x871784")]
	public class OptionalDependencyAttribute : Attribute
	{
		[Token(Token = "0x4000F8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string dependentClass;

		[Token(Token = "0x4000F8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string define;

		[Token(Token = "0x600131F")]
		[Address(RVA = "0xAE803C", Offset = "0xAE803C", VA = "0xAE803C")]
		public OptionalDependencyAttribute(string dependentClass, string define)
		{
		}
	}
}
