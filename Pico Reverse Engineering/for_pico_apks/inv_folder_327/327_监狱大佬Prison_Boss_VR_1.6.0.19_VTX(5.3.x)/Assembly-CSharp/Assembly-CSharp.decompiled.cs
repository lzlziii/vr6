using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Runtime.Serialization;
using System.Runtime.Serialization.Formatters.Binary;
using System.Threading;
using AK.Wwise;
using DG.Tweening;
using Il2CppDummyDll;
using Kino;
using Klak.Motion;
using NewtonVR;
using Pvr_UnitySDKAPI;
using Pvr_UnitySDKAPI.Achievement;
using SoftMasking;
using TMPro;
using Trebuchet;
using Trebuchet.Contrepoids;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Playables;
using UnityEngine.Rendering;
using UnityEngine.SceneManagement;
using UnityEngine.Timeline;
using UnityEngine.UI;
using UnityEngine.Video;

[assembly: AssemblyVersion("0.0.0.0")]
namespace NewtonVR
{
	[Token(Token = "0x2000002")]
	public class NVRCollisionSoundController : MonoBehaviour
	{
		[Token(Token = "0x4000001")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static NVRCollisionSoundController Instance;

		[Token(Token = "0x4000002")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x164748", Offset = "0x164748")]
		public int SoundPoolSize;

		[Token(Token = "0x4000003")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16477C", Offset = "0x16477C")]
		public bool PitchModulationEnabled;

		[Token(Token = "0x4000004")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1647B0", Offset = "0x1647B0")]
		public float PitchModulationRange;

		[Token(Token = "0x4000005")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1647CC", Offset = "0x1647CC")]
		public float MinCollisionVolume;

		[Token(Token = "0x4000006")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float MaxCollisionVelocity;

		[Token(Token = "0x4000007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public NVRCollisionSoundProviders SoundEngine;

		[Token(Token = "0x4000008")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static NVRCollisionSoundProvider Provider;

		[Token(Token = "0x6000001")]
		[Address(RVA = "0x25A7E4", Offset = "0x25A7E4", VA = "0x25A7E4")]
		public NVRCollisionSoundController()
		{
		}

		[Token(Token = "0x6000002")]
		[Address(RVA = "0x25A820", Offset = "0x25A820", VA = "0x25A820")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000003")]
		[Address(RVA = "0x25A8D0", Offset = "0x25A8D0", VA = "0x25A8D0")]
		public static void Play(NVRCollisionSoundMaterials material, Vector3 position, float impactVolume)
		{
		}
	}
	[Token(Token = "0x2000003")]
	public enum NVRCollisionSoundProviders
	{
		[Token(Token = "0x400000A")]
		None,
		[Token(Token = "0x400000B")]
		Unity,
		[Token(Token = "0x400000C")]
		FMOD
	}
	[Token(Token = "0x2000004")]
	public enum NVRCollisionSoundMaterials
	{
		[Token(Token = "0x400000E")]
		none = 0,
		[Token(Token = "0x400000F")]
		_default = 1,
		[Token(Token = "0x4000010")]
		carpet = 2,
		[Token(Token = "0x4000011")]
		wood = 3,
		[Token(Token = "0x4000012")]
		metal = 4,
		[Token(Token = "0x4000013")]
		glass = 5,
		[Token(Token = "0x4000014")]
		plastic = 6,
		[Token(Token = "0x4000015")]
		cardboard = 7,
		[Token(Token = "0x4000016")]
		EndNewtonVRMaterials = 50
	}
	[Token(Token = "0x2000005")]
	public class NVRCollisionSoundMaterialsList
	{
		[Token(Token = "0x4000017")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Type typeCache;

		[Token(Token = "0x4000018")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static NVRCollisionSoundMaterials[] list;

		[Token(Token = "0x17000001")]
		public static Type TypeCache
		{
			[Token(Token = "0x6000005")]
			[Address(RVA = "0x25A9F4", Offset = "0x25A9F4", VA = "0x25A9F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000002")]
		public static NVRCollisionSoundMaterials[] List
		{
			[Token(Token = "0x6000006")]
			[Address(RVA = "0x25AACC", Offset = "0x25AACC", VA = "0x25AACC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000004")]
		[Address(RVA = "0x25A9EC", Offset = "0x25A9EC", VA = "0x25A9EC")]
		public NVRCollisionSoundMaterialsList()
		{
		}

		[Token(Token = "0x6000007")]
		[Address(RVA = "0x25AF10", Offset = "0x25AF10", VA = "0x25AF10")]
		public static NVRCollisionSoundMaterials? Parse(string materialString)
		{
			return null;
		}
	}
	[Token(Token = "0x2000006")]
	public class NVRCollisionSoundObject : MonoBehaviour
	{
		[Token(Token = "0x4000019")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<Collider, NVRCollisionSoundObject> SoundObjects;

		[Token(Token = "0x400001A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public NVRCollisionSoundMaterials Material;

		[Token(Token = "0x400001B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Collider[] Colliders;

		[Token(Token = "0x6000008")]
		[Address(RVA = "0x25B0CC", Offset = "0x25B0CC", VA = "0x25B0CC")]
		public NVRCollisionSoundObject()
		{
		}

		[Token(Token = "0x6000009")]
		[Address(RVA = "0x25B0D4", Offset = "0x25B0D4", VA = "0x25B0D4", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x600000A")]
		[Address(RVA = "0x25B218", Offset = "0x25B218", VA = "0x25B218", Slot = "5")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x600000B")]
		[Address(RVA = "0x25B358", Offset = "0x25B358", VA = "0x25B358", Slot = "6")]
		protected virtual void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x600000C")]
		[Address(RVA = "0x25B5E4", Offset = "0x25B5E4", VA = "0x25B5E4")]
		private float CalculateImpactVolume(Collision collision)
		{
			return default(float);
		}

		[Token(Token = "0x600000D")]
		[Address(RVA = "0x25B6C0", Offset = "0x25B6C0", VA = "0x25B6C0")]
		public static float CubicEaseOut(float velocity, float startingValue = 0f, float changeInValue = 1f)
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000007")]
	public abstract class NVRCollisionSoundProvider : MonoBehaviour
	{
		[Token(Token = "0x600000F")]
		[Address(RVA = "0x25B810", Offset = "0x25B810", VA = "0x25B810")]
		protected NVRCollisionSoundProvider()
		{
		}

		[Token(Token = "0x6000010")]
		public abstract void Awake();

		[Token(Token = "0x6000011")]
		public abstract void Play(NVRCollisionSoundMaterials material, Vector3 position, float impactVolume);
	}
	[Token(Token = "0x2000008")]
	public class NVRCollisionSoundProviderFMOD : NVRCollisionSoundProvider
	{
		[Token(Token = "0x6000012")]
		[Address(RVA = "0x25B818", Offset = "0x25B818", VA = "0x25B818")]
		public NVRCollisionSoundProviderFMOD()
		{
		}

		[Token(Token = "0x6000013")]
		[Address(RVA = "0x25B820", Offset = "0x25B820", VA = "0x25B820", Slot = "4")]
		public override void Awake()
		{
		}

		[Token(Token = "0x6000014")]
		[Address(RVA = "0x25B824", Offset = "0x25B824", VA = "0x25B824", Slot = "5")]
		public override void Play(NVRCollisionSoundMaterials material, Vector3 position, float impactVolume)
		{
		}
	}
	[Token(Token = "0x2000009")]
	public class NVRCollisionSoundProviderUnity : NVRCollisionSoundProvider
	{
		[Token(Token = "0x400001C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string AudioSourcePrefabPath;

		[Token(Token = "0x400001D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static string CollisionSoundsPath;

		[Token(Token = "0x400001E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private GameObject AudioSourcePrefab;

		[Token(Token = "0x400001F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private AudioSource[] AudioPool;

		[Token(Token = "0x4000020")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private int CurrentPoolIndex;

		[Token(Token = "0x4000021")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<NVRCollisionSoundMaterials, List<AudioClip>> Clips;

		[Token(Token = "0x6000015")]
		[Address(RVA = "0x25B828", Offset = "0x25B828", VA = "0x25B828")]
		public NVRCollisionSoundProviderUnity()
		{
		}

		[Token(Token = "0x6000016")]
		[Address(RVA = "0x25B830", Offset = "0x25B830", VA = "0x25B830", Slot = "4")]
		public override void Awake()
		{
		}

		[Token(Token = "0x6000017")]
		[Address(RVA = "0x25BF70", Offset = "0x25BF70", VA = "0x25BF70", Slot = "5")]
		public override void Play(NVRCollisionSoundMaterials material, Vector3 position, float impactVolume)
		{
		}

		[Token(Token = "0x6000018")]
		[Address(RVA = "0x25C2A4", Offset = "0x25C2A4", VA = "0x25C2A4")]
		private AudioClip GetClip(NVRCollisionSoundMaterials material)
		{
			return null;
		}
	}
	[Token(Token = "0x200000A")]
	internal struct EnumEqualityComparer<TEnum> : IEqualityComparer<TEnum> where TEnum : struct
	{
		[Token(Token = "0x200000B")]
		private static class BoxAvoidance
		{
			[Token(Token = "0x4000022")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static readonly Func<TEnum, int> _wrapper;

			[Token(Token = "0x600001C")]
			static BoxAvoidance()
			{
			}

			[Token(Token = "0x600001D")]
			public static int ToInt(TEnum enu)
			{
				return default(int);
			}
		}

		[Token(Token = "0x600001A")]
		public bool Equals(TEnum firstEnum, TEnum secondEnum)
		{
			return default(bool);
		}

		[Token(Token = "0x600001B")]
		public int GetHashCode(TEnum firstEnum)
		{
			return default(int);
		}
	}
}
namespace NewtonVR.Example
{
	[Token(Token = "0x200000C")]
	public class NVRExampleButtonDropSphere : MonoBehaviour
	{
		[Token(Token = "0x600001E")]
		[Address(RVA = "0x25164C", Offset = "0x25164C", VA = "0x25164C")]
		public NVRExampleButtonDropSphere()
		{
		}

		[Token(Token = "0x600001F")]
		[Address(RVA = "0x251654", Offset = "0x251654", VA = "0x251654")]
		public void DropSphere()
		{
		}
	}
	[Token(Token = "0x200000D")]
	public class NVRExampleButtonResetScene : MonoBehaviour
	{
		[Token(Token = "0x6000020")]
		[Address(RVA = "0x251824", Offset = "0x251824", VA = "0x251824")]
		public NVRExampleButtonResetScene()
		{
		}

		[Token(Token = "0x6000021")]
		[Address(RVA = "0x25182C", Offset = "0x25182C", VA = "0x25182C")]
		public void ResetScene()
		{
		}
	}
	[Token(Token = "0x200000E")]
	public class NVRExampleColorLever : MonoBehaviour
	{
		[Token(Token = "0x4000023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Color From;

		[Token(Token = "0x4000024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Color To;

		[Token(Token = "0x4000025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Renderer Result;

		[Token(Token = "0x4000026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public NVRLever Lever;

		[Token(Token = "0x6000022")]
		[Address(RVA = "0x25186C", Offset = "0x25186C", VA = "0x25186C")]
		public NVRExampleColorLever()
		{
		}

		[Token(Token = "0x6000023")]
		[Address(RVA = "0x251874", Offset = "0x251874", VA = "0x251874")]
		private void Update()
		{
		}
	}
	[Token(Token = "0x200000F")]
	public class NVRExampleColorSlider : MonoBehaviour
	{
		[Token(Token = "0x4000027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Color From;

		[Token(Token = "0x4000028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Color To;

		[Token(Token = "0x4000029")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Renderer Result;

		[Token(Token = "0x400002A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public NVRSlider Slider;

		[Token(Token = "0x6000024")]
		[Address(RVA = "0x251948", Offset = "0x251948", VA = "0x251948")]
		public NVRExampleColorSlider()
		{
		}

		[Token(Token = "0x6000025")]
		[Address(RVA = "0x251950", Offset = "0x251950", VA = "0x251950")]
		private void Update()
		{
		}
	}
	[Token(Token = "0x2000010")]
	public class NVRExampleDegreeResult : MonoBehaviour
	{
		[Token(Token = "0x400002B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public NVRInteractableItem Knob;

		[Token(Token = "0x400002C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private TextMesh Text;

		[Token(Token = "0x6000026")]
		[Address(RVA = "0x251A24", Offset = "0x251A24", VA = "0x251A24")]
		public NVRExampleDegreeResult()
		{
		}

		[Token(Token = "0x6000027")]
		[Address(RVA = "0x251A2C", Offset = "0x251A2C", VA = "0x251A2C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000028")]
		[Address(RVA = "0x251A94", Offset = "0x251A94", VA = "0x251A94")]
		private void Update()
		{
		}
	}
	[Token(Token = "0x2000011")]
	public class NVRExampleEvent : MonoBehaviour
	{
		[Token(Token = "0x6000029")]
		[Address(RVA = "0x251B28", Offset = "0x251B28", VA = "0x251B28")]
		public NVRExampleEvent()
		{
		}

		[Token(Token = "0x600002A")]
		[Address(RVA = "0x251B30", Offset = "0x251B30", VA = "0x251B30")]
		public void Duplicate()
		{
		}
	}
	[Token(Token = "0x2000012")]
	public class NVRExampleGrower : NVRInteractableItem
	{
		[Token(Token = "0x600002B")]
		[Address(RVA = "0x251C80", Offset = "0x251C80", VA = "0x251C80")]
		public NVRExampleGrower()
		{
		}

		[Token(Token = "0x600002C")]
		[Address(RVA = "0x251C88", Offset = "0x251C88", VA = "0x251C88", Slot = "13")]
		public override void InteractingUpdate(NVRHand hand)
		{
		}
	}
	[Token(Token = "0x2000013")]
	public class NVRExampleGun : NVRInteractableItem
	{
		[Token(Token = "0x400002D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public GameObject BulletPrefab;

		[Token(Token = "0x400002E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public Transform FirePoint;

		[Token(Token = "0x400002F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Vector3 BulletForce;

		[Token(Token = "0x600002D")]
		[Address(RVA = "0x2521E0", Offset = "0x2521E0", VA = "0x2521E0")]
		public NVRExampleGun()
		{
		}

		[Token(Token = "0x600002E")]
		[Address(RVA = "0x252240", Offset = "0x252240", VA = "0x252240", Slot = "18")]
		public override void UseButtonDown()
		{
		}
	}
	[Token(Token = "0x2000014")]
	public class NVRExampleLaserPointer : MonoBehaviour
	{
		[Token(Token = "0x4000030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Color LineColor;

		[Token(Token = "0x4000031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float LineWidth;

		[Token(Token = "0x4000032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool ForceLineVisible;

		[Token(Token = "0x4000033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool OnlyVisibleOnTrigger;

		[Token(Token = "0x4000034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private LineRenderer Line;

		[Token(Token = "0x4000035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private NVRHand Hand;

		[Token(Token = "0x600002F")]
		[Address(RVA = "0x252550", Offset = "0x252550", VA = "0x252550")]
		public NVRExampleLaserPointer()
		{
		}

		[Token(Token = "0x6000030")]
		[Address(RVA = "0x25256C", Offset = "0x25256C", VA = "0x25256C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000031")]
		[Address(RVA = "0x252804", Offset = "0x252804", VA = "0x252804")]
		private void LateUpdate()
		{
		}
	}
	[Token(Token = "0x2000015")]
	public class NVRExampleLetterResult : MonoBehaviour
	{
		[Token(Token = "0x4000036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public NVRLetterSpinner LetterSpinner;

		[Token(Token = "0x4000037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private TextMesh Text;

		[Token(Token = "0x6000032")]
		[Address(RVA = "0x252D88", Offset = "0x252D88", VA = "0x252D88")]
		public NVRExampleLetterResult()
		{
		}

		[Token(Token = "0x6000033")]
		[Address(RVA = "0x252D90", Offset = "0x252D90", VA = "0x252D90")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000034")]
		[Address(RVA = "0x252DF8", Offset = "0x252DF8", VA = "0x252DF8")]
		private void Update()
		{
		}
	}
	[Token(Token = "0x2000016")]
	public class NVRExampleLeverResultRocket : MonoBehaviour
	{
		[Token(Token = "0x20002E3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x164830", Offset = "0x164830")]
		private sealed class <DoBlastOff>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4001141")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal Rigidbody <rb>__0;

			[Token(Token = "0x4001142")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal NVRExampleLeverResultRocket $this;

			[Token(Token = "0x4001143")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal object $current;

			[Token(Token = "0x4001144")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal bool $disposing;

			[Token(Token = "0x4001145")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal int $PC;

			[Token(Token = "0x1700023F")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x60016B5")]
				[Address(RVA = "0x25316C", Offset = "0x25316C", VA = "0x25316C", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000240")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60016B6")]
				[Address(RVA = "0x253174", Offset = "0x253174", VA = "0x253174", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60016B3")]
			[Address(RVA = "0x252FB4", Offset = "0x252FB4", VA = "0x252FB4")]
			[DebuggerHidden]
			public <DoBlastOff>c__Iterator0()
			{
			}

			[Token(Token = "0x60016B4")]
			[Address(RVA = "0x252FC4", Offset = "0x252FC4", VA = "0x252FC4", Slot = "5")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60016B7")]
			[Address(RVA = "0x25317C", Offset = "0x25317C", VA = "0x25317C", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x60016B8")]
			[Address(RVA = "0x253190", Offset = "0x253190", VA = "0x253190", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x20002E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x164890", Offset = "0x164890")]
		private sealed class <DoSpawnShip>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4001146")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal Vector3 <startScale>__0;

			[Token(Token = "0x4001147")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal Vector3 <endScale>__0;

			[Token(Token = "0x4001148")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal float <startTime>__0;

			[Token(Token = "0x4001149")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal float <overTime>__0;

			[Token(Token = "0x400114A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal float <stopTime>__0;

			[Token(Token = "0x400114B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal NVRExampleLeverResultRocket $this;

			[Token(Token = "0x400114C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal object $current;

			[Token(Token = "0x400114D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			internal bool $disposing;

			[Token(Token = "0x400114E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal int $PC;

			[Token(Token = "0x17000241")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x60016BB")]
				[Address(RVA = "0x2536F4", Offset = "0x2536F4", VA = "0x2536F4", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000242")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60016BC")]
				[Address(RVA = "0x2536FC", Offset = "0x2536FC", VA = "0x2536FC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60016B9")]
			[Address(RVA = "0x252FBC", Offset = "0x252FBC", VA = "0x252FBC")]
			[DebuggerHidden]
			public <DoSpawnShip>c__Iterator1()
			{
			}

			[Token(Token = "0x60016BA")]
			[Address(RVA = "0x253214", Offset = "0x253214", VA = "0x253214", Slot = "5")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60016BD")]
			[Address(RVA = "0x253704", Offset = "0x253704", VA = "0x253704", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x60016BE")]
			[Address(RVA = "0x253718", Offset = "0x253718", VA = "0x253718", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x4000038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public GameObject RocketPrefab;

		[Token(Token = "0x4000039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public NVRLever Control;

		[Token(Token = "0x400003A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private GameObject RocketInstance;

		[Token(Token = "0x6000035")]
		[Address(RVA = "0x252E44", Offset = "0x252E44", VA = "0x252E44")]
		public NVRExampleLeverResultRocket()
		{
		}

		[Token(Token = "0x6000036")]
		[Address(RVA = "0x252E4C", Offset = "0x252E4C", VA = "0x252E4C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000037")]
		[Address(RVA = "0x252EF0", Offset = "0x252EF0", VA = "0x252EF0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000038")]
		[Address(RVA = "0x252F34", Offset = "0x252F34", VA = "0x252F34")]
		[DebuggerHidden]
		public IEnumerator DoBlastOff()
		{
			return null;
		}

		[Token(Token = "0x6000039")]
		[Address(RVA = "0x252E70", Offset = "0x252E70", VA = "0x252E70")]
		[DebuggerHidden]
		private IEnumerator DoSpawnShip()
		{
			return null;
		}
	}
	[Token(Token = "0x2000017")]
	public class NVRExampleRGBResult : MonoBehaviour
	{
		[Token(Token = "0x400003B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public NVRSlider SliderRed;

		[Token(Token = "0x400003C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public NVRSlider SliderGreen;

		[Token(Token = "0x400003D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public NVRSlider SliderBlue;

		[Token(Token = "0x400003E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Renderer Result;

		[Token(Token = "0x600003A")]
		[Address(RVA = "0x25379C", Offset = "0x25379C", VA = "0x25379C")]
		public NVRExampleRGBResult()
		{
		}

		[Token(Token = "0x600003B")]
		[Address(RVA = "0x2537A4", Offset = "0x2537A4", VA = "0x2537A4")]
		private void Update()
		{
		}
	}
	[Token(Token = "0x2000018")]
	public class NVRExampleSpawner : MonoBehaviour
	{
		[Token(Token = "0x400003F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public NVRButton Button;

		[Token(Token = "0x4000040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject ToCopy;

		[Token(Token = "0x600003C")]
		[Address(RVA = "0x25386C", Offset = "0x25386C", VA = "0x25386C")]
		public NVRExampleSpawner()
		{
		}

		[Token(Token = "0x600003D")]
		[Address(RVA = "0x253874", Offset = "0x253874", VA = "0x253874")]
		private void Update()
		{
		}
	}
	[Token(Token = "0x2000019")]
	public class NVRExampleSwitchResult : MonoBehaviour
	{
		[Token(Token = "0x4000041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public NVRSwitch Switch;

		[Token(Token = "0x4000042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Light SpotLight;

		[Token(Token = "0x600003E")]
		[Address(RVA = "0x253AA0", Offset = "0x253AA0", VA = "0x253AA0")]
		public NVRExampleSwitchResult()
		{
		}

		[Token(Token = "0x600003F")]
		[Address(RVA = "0x253AA8", Offset = "0x253AA8", VA = "0x253AA8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000040")]
		[Address(RVA = "0x253B10", Offset = "0x253B10", VA = "0x253B10")]
		private void Update()
		{
		}
	}
	[Token(Token = "0x200001A")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x1648F0", Offset = "0x1648F0")]
	public class NVRExampleTeleporter : MonoBehaviour
	{
		[Token(Token = "0x4000043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Color LineColor;

		[Token(Token = "0x4000044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float LineWidth;

		[Token(Token = "0x4000045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private LineRenderer Line;

		[Token(Token = "0x4000046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private NVRHand Hand;

		[Token(Token = "0x4000047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private NVRPlayer Player;

		[Token(Token = "0x6000041")]
		[Address(RVA = "0x253B58", Offset = "0x253B58", VA = "0x253B58")]
		public NVRExampleTeleporter()
		{
		}

		[Token(Token = "0x6000042")]
		[Address(RVA = "0x253B6C", Offset = "0x253B6C", VA = "0x253B6C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000043")]
		[Address(RVA = "0x253E04", Offset = "0x253E04", VA = "0x253E04")]
		private void Start()
		{
		}

		[Token(Token = "0x6000044")]
		[Address(RVA = "0x253E2C", Offset = "0x253E2C", VA = "0x253E2C")]
		private void LateUpdate()
		{
		}
	}
}
namespace NewtonVR
{
	[Token(Token = "0x200001B")]
	public class NVRAttachJoint : MonoBehaviour
	{
		[Token(Token = "0x4000048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public NVRInteractableItem AttachedItem;

		[Token(Token = "0x4000049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public NVRAttachPoint AttachedPoint;

		[Token(Token = "0x400004A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float PullRange;

		[Token(Token = "0x400004B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float AttachRange;

		[Token(Token = "0x400004C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float DropDistance;

		[Token(Token = "0x400004D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool MatchRotation;

		[Token(Token = "0x17000003")]
		public bool IsAttached
		{
			[Token(Token = "0x6000046")]
			[Address(RVA = "0x254880", Offset = "0x254880", VA = "0x254880")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000045")]
		[Address(RVA = "0x254850", Offset = "0x254850", VA = "0x254850")]
		public NVRAttachJoint()
		{
		}

		[Token(Token = "0x6000047")]
		[Address(RVA = "0x254910", Offset = "0x254910", VA = "0x254910", Slot = "4")]
		protected virtual void OnTriggerStay(Collider col)
		{
		}

		[Token(Token = "0x6000048")]
		[Address(RVA = "0x254ACC", Offset = "0x254ACC", VA = "0x254ACC", Slot = "5")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6000049")]
		[Address(RVA = "0x254AFC", Offset = "0x254AFC", VA = "0x254AFC", Slot = "6")]
		protected virtual void FixedUpdateAttached()
		{
		}

		[Token(Token = "0x600004A")]
		[Address(RVA = "0x254C58", Offset = "0x254C58", VA = "0x254C58", Slot = "7")]
		protected virtual void Attach(NVRAttachPoint point)
		{
		}

		[Token(Token = "0x600004B")]
		[Address(RVA = "0x254CA0", Offset = "0x254CA0", VA = "0x254CA0", Slot = "8")]
		protected virtual void Detach()
		{
		}
	}
	[Token(Token = "0x200001C")]
	public class NVRAttachPoint : MonoBehaviour
	{
		[Token(Token = "0x400004E")]
		private const float MaxVelocityChange = 5f;

		[Token(Token = "0x400004F")]
		private const float MaxAngularVelocityChange = 10f;

		[Token(Token = "0x4000050")]
		private const float VelocityMagic = 3000f;

		[Token(Token = "0x4000051")]
		private const float AngularVelocityMagic = 25f;

		[Token(Token = "0x4000052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[HideInInspector]
		public Rigidbody Rigidbody;

		[Token(Token = "0x4000053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public NVRInteractableItem Item;

		[Token(Token = "0x4000054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool IsAttached;

		[Token(Token = "0x600004C")]
		[Address(RVA = "0x254CE4", Offset = "0x254CE4", VA = "0x254CE4")]
		public NVRAttachPoint()
		{
		}

		[Token(Token = "0x600004D")]
		[Address(RVA = "0x254CEC", Offset = "0x254CEC", VA = "0x254CEC", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x600004E")]
		[Address(RVA = "0x255078", Offset = "0x255078", VA = "0x255078", Slot = "5")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x600004F")]
		[Address(RVA = "0x254EC8", Offset = "0x254EC8", VA = "0x254EC8")]
		private NVRInteractableItem FindNVRItem(GameObject gameobject)
		{
			return null;
		}

		[Token(Token = "0x6000050")]
		[Address(RVA = "0x2550A0", Offset = "0x2550A0", VA = "0x2550A0", Slot = "6")]
		public virtual void Attached(NVRAttachJoint joint)
		{
		}

		[Token(Token = "0x6000051")]
		[Address(RVA = "0x2553E0", Offset = "0x2553E0", VA = "0x2553E0", Slot = "7")]
		public virtual void Detached(NVRAttachJoint joint)
		{
		}

		[Token(Token = "0x6000052")]
		[Address(RVA = "0x255434", Offset = "0x255434", VA = "0x255434", Slot = "8")]
		public virtual void PullTowards(NVRAttachJoint joint)
		{
		}
	}
	[Token(Token = "0x200001D")]
	public class AttachPointMapper
	{
		[Token(Token = "0x4000055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<Collider, NVRAttachPoint> Colliders;

		[Token(Token = "0x6000053")]
		[Address(RVA = "0x25136C", Offset = "0x25136C", VA = "0x25136C")]
		public AttachPointMapper()
		{
		}

		[Token(Token = "0x6000054")]
		[Address(RVA = "0x251374", Offset = "0x251374", VA = "0x251374")]
		public static void Register(Collider col, NVRAttachPoint point)
		{
		}

		[Token(Token = "0x6000055")]
		[Address(RVA = "0x251434", Offset = "0x251434", VA = "0x251434")]
		public static void Deregister(Collider col)
		{
		}

		[Token(Token = "0x6000056")]
		[Address(RVA = "0x2514EC", Offset = "0x2514EC", VA = "0x2514EC")]
		public static NVRAttachPoint GetAttachPoint(Collider col)
		{
			return null;
		}
	}
	[Token(Token = "0x200001E")]
	public class NVRButton : MonoBehaviour
	{
		[Token(Token = "0x4000056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Rigidbody Rigidbody;

		[Token(Token = "0x4000057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x164988", Offset = "0x164988")]
		public float DistanceToEngage;

		[Token(Token = "0x4000058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1649BC", Offset = "0x1649BC")]
		public bool ButtonDown;

		[Token(Token = "0x4000059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1649F0", Offset = "0x1649F0")]
		public bool ButtonUp;

		[Token(Token = "0x400005A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x164A24", Offset = "0x164A24")]
		public bool ButtonIsPushed;

		[Token(Token = "0x400005B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x164A58", Offset = "0x164A58")]
		public bool ButtonWasPushed;

		[Token(Token = "0x400005C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected Transform InitialPosition;

		[Token(Token = "0x400005D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		protected float MinDistance;

		[Token(Token = "0x400005E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected float PositionMagic;

		[Token(Token = "0x400005F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		protected float CurrentDistance;

		[Token(Token = "0x4000060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 InitialLocalPosition;

		[Token(Token = "0x4000061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 ConstrainedPosition;

		[Token(Token = "0x4000062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Quaternion InitialLocalRotation;

		[Token(Token = "0x4000063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion ConstrainedRotation;

		[Token(Token = "0x6000058")]
		[Address(RVA = "0x255A2C", Offset = "0x255A2C", VA = "0x255A2C")]
		public NVRButton()
		{
		}

		[Token(Token = "0x6000059")]
		[Address(RVA = "0x255A60", Offset = "0x255A60", VA = "0x255A60")]
		private void Awake()
		{
		}

		[Token(Token = "0x600005A")]
		[Address(RVA = "0x255E14", Offset = "0x255E14", VA = "0x255E14")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600005B")]
		[Address(RVA = "0x2560D8", Offset = "0x2560D8", VA = "0x2560D8")]
		private void Update()
		{
		}

		[Token(Token = "0x600005C")]
		[Address(RVA = "0x256008", Offset = "0x256008", VA = "0x256008")]
		private void ConstrainPosition()
		{
		}

		[Token(Token = "0x600005D")]
		[Address(RVA = "0x256140", Offset = "0x256140", VA = "0x256140")]
		private void LateUpdate()
		{
		}
	}
	[Token(Token = "0x200001F")]
	public class NVRButtonInputs
	{
		[Token(Token = "0x4000064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private bool PressDownCached;

		[Token(Token = "0x4000065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		private bool PressDownExpired;

		[Token(Token = "0x4000066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
		private bool PressUpCached;

		[Token(Token = "0x4000067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB")]
		private bool PressUpExpired;

		[Token(Token = "0x4000068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private bool IsPressedCached;

		[Token(Token = "0x4000069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
		private bool IsPressedExpired;

		[Token(Token = "0x400006A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
		private bool TouchDownCached;

		[Token(Token = "0x400006B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF")]
		private bool TouchDownExpired;

		[Token(Token = "0x400006C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool TouchUpCached;

		[Token(Token = "0x400006D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		private bool TouchUpExpired;

		[Token(Token = "0x400006E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		private bool IsTouchedCached;

		[Token(Token = "0x400006F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
		private bool IsTouchedExpired;

		[Token(Token = "0x4000070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private bool NearTouchDownCached;

		[Token(Token = "0x4000071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		private bool NearTouchDownExpired;

		[Token(Token = "0x4000072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
		private bool NearTouchUpCached;

		[Token(Token = "0x4000073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17")]
		private bool NearTouchUpExpired;

		[Token(Token = "0x4000074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool IsNearTouchedCached;

		[Token(Token = "0x4000075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool IsNearTouchedExpired;

		[Token(Token = "0x4000076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Vector2 AxisCached;

		[Token(Token = "0x4000077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool AxisExpired;

		[Token(Token = "0x4000078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float SingleAxisCached;

		[Token(Token = "0x4000079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool SingleAxisExpired;

		[Token(Token = "0x400007A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private NVRInputDevice InputDevice;

		[Token(Token = "0x400007B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private NVRButtons nvrbutton;

		[Token(Token = "0x17000004")]
		public bool PressDown
		{
			[Token(Token = "0x600005F")]
			[Address(RVA = "0x254770", Offset = "0x254770", VA = "0x254770")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000005")]
		public bool PressUp
		{
			[Token(Token = "0x6000060")]
			[Address(RVA = "0x252100", Offset = "0x252100", VA = "0x252100")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000006")]
		public bool IsPressed
		{
			[Token(Token = "0x6000061")]
			[Address(RVA = "0x252CA8", Offset = "0x252CA8", VA = "0x252CA8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000007")]
		public bool TouchDown
		{
			[Token(Token = "0x6000062")]
			[Address(RVA = "0x25617C", Offset = "0x25617C", VA = "0x25617C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000008")]
		public bool TouchUp
		{
			[Token(Token = "0x6000063")]
			[Address(RVA = "0x25625C", Offset = "0x25625C", VA = "0x25625C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000009")]
		public bool IsTouched
		{
			[Token(Token = "0x6000064")]
			[Address(RVA = "0x25633C", Offset = "0x25633C", VA = "0x25633C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700000A")]
		public bool NearTouchDown
		{
			[Token(Token = "0x6000065")]
			[Address(RVA = "0x25641C", Offset = "0x25641C", VA = "0x25641C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700000B")]
		public bool NearTouchUp
		{
			[Token(Token = "0x6000066")]
			[Address(RVA = "0x2564FC", Offset = "0x2564FC", VA = "0x2564FC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700000C")]
		public bool IsNearTouched
		{
			[Token(Token = "0x6000067")]
			[Address(RVA = "0x2565DC", Offset = "0x2565DC", VA = "0x2565DC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700000D")]
		public Vector2 Axis
		{
			[Token(Token = "0x6000068")]
			[Address(RVA = "0x2566BC", Offset = "0x2566BC", VA = "0x2566BC")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x1700000E")]
		public float SingleAxis
		{
			[Token(Token = "0x6000069")]
			[Address(RVA = "0x254690", Offset = "0x254690", VA = "0x254690")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600005E")]
		[Address(RVA = "0x256144", Offset = "0x256144", VA = "0x256144")]
		public NVRButtonInputs()
		{
		}

		[Token(Token = "0x600006A")]
		[Address(RVA = "0x2567BC", Offset = "0x2567BC", VA = "0x2567BC")]
		public void FrameReset(NVRInputDevice inputDevice, NVRButtons button)
		{
		}
	}
	[Token(Token = "0x2000020")]
	public enum NVRButtons
	{
		[Token(Token = "0x400007D")]
		System,
		[Token(Token = "0x400007E")]
		ApplicationMenu,
		[Token(Token = "0x400007F")]
		Grip,
		[Token(Token = "0x4000080")]
		DPad_Left,
		[Token(Token = "0x4000081")]
		DPad_Up,
		[Token(Token = "0x4000082")]
		DPad_Right,
		[Token(Token = "0x4000083")]
		DPad_Down,
		[Token(Token = "0x4000084")]
		A,
		[Token(Token = "0x4000085")]
		B,
		[Token(Token = "0x4000086")]
		X,
		[Token(Token = "0x4000087")]
		Y,
		[Token(Token = "0x4000088")]
		Axis0,
		[Token(Token = "0x4000089")]
		Axis1,
		[Token(Token = "0x400008A")]
		Axis2,
		[Token(Token = "0x400008B")]
		Axis3,
		[Token(Token = "0x400008C")]
		Axis4,
		[Token(Token = "0x400008D")]
		Touchpad,
		[Token(Token = "0x400008E")]
		Trigger,
		[Token(Token = "0x400008F")]
		Back,
		[Token(Token = "0x4000090")]
		Stick
	}
	[Token(Token = "0x2000021")]
	public class NVRButtonsHelper
	{
		[Token(Token = "0x4000091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static NVRButtons[] array;

		[Token(Token = "0x1700000F")]
		public static NVRButtons[] Array
		{
			[Token(Token = "0x600006C")]
			[Address(RVA = "0x256818", Offset = "0x256818", VA = "0x256818")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600006B")]
		[Address(RVA = "0x256810", Offset = "0x256810", VA = "0x256810")]
		public NVRButtonsHelper()
		{
		}
	}
	[Token(Token = "0x2000022")]
	public struct NVRButtonsComparer : IEqualityComparer<NVRButtons>
	{
		[Token(Token = "0x600006E")]
		[Address(RVA = "0x2567F8", Offset = "0x2567F8", VA = "0x2567F8", Slot = "4")]
		public bool Equals(NVRButtons x, NVRButtons y)
		{
			return default(bool);
		}

		[Token(Token = "0x600006F")]
		[Address(RVA = "0x256808", Offset = "0x256808", VA = "0x256808", Slot = "5")]
		public int GetHashCode(NVRButtons obj)
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000023")]
	public class NVRCanvasInput : BaseInputModule
	{
		[Token(Token = "0x20002E5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x164A9C", Offset = "0x164A9C")]
		private sealed class <TryInitialize>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x400114F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal NVRCanvasInput $this;

			[Token(Token = "0x4001150")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal object $current;

			[Token(Token = "0x4001151")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal bool $disposing;

			[Token(Token = "0x4001152")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal int $PC;

			[Token(Token = "0x17000243")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x60016C1")]
				[Address(RVA = "0x25A73C", Offset = "0x25A73C", VA = "0x25A73C", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000244")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60016C2")]
				[Address(RVA = "0x25A744", Offset = "0x25A744", VA = "0x25A744", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60016BF")]
			[Address(RVA = "0x256B7C", Offset = "0x256B7C", VA = "0x256B7C")]
			[DebuggerHidden]
			public <TryInitialize>c__Iterator0()
			{
			}

			[Token(Token = "0x60016C0")]
			[Address(RVA = "0x25A66C", Offset = "0x25A66C", VA = "0x25A66C", Slot = "5")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60016C3")]
			[Address(RVA = "0x25A74C", Offset = "0x25A74C", VA = "0x25A74C", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x60016C4")]
			[Address(RVA = "0x25A760", Offset = "0x25A760", VA = "0x25A760", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x4000092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool GeometryBlocksLaser;

		[Token(Token = "0x4000093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LayerMask LayersThatBlockLaser;

		[Token(Token = "0x4000094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Sprite CursorSprite;

		[Token(Token = "0x4000095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Material CursorMaterial;

		[Token(Token = "0x4000096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float NormalCursorScale;

		[Token(Token = "0x4000097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool LaserEnabled;

		[Token(Token = "0x4000098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Color LaserColor;

		[Token(Token = "0x4000099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public AnimationCurve widthCurve;

		[Token(Token = "0x400009A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Material laserMaterial;

		[Token(Token = "0x400009B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float width;

		[Token(Token = "0x400009C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool OnCanvas;

		[Token(Token = "0x400009D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		public bool CanvasUsed;

		[NonSerialized]
		[Token(Token = "0x400009E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		public bool Disabled;

		[Token(Token = "0x400009F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private RaycastResult raycastNone;

		[Token(Token = "0x40000A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private RectTransform[] Cursors;

		[Token(Token = "0x40000A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private LineRenderer[] Lasers;

		[Token(Token = "0x40000A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private GameObject[] CurrentPoint;

		[Token(Token = "0x40000A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private GameObject[] CurrentPressed;

		[Token(Token = "0x40000A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private GameObject[] CurrentDragging;

		[Token(Token = "0x40000A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private PointerEventData[] PointEvents;

		[Token(Token = "0x40000A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private bool Initialized;

		[Token(Token = "0x40000A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB5")]
		private bool DelayedInitialized;

		[Token(Token = "0x40000A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Camera ControllerCamera;

		[Token(Token = "0x40000A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private NVRPlayer Player;

		[Token(Token = "0x6000070")]
		[Address(RVA = "0x256A48", Offset = "0x256A48", VA = "0x256A48")]
		public NVRCanvasInput()
		{
		}

		[Token(Token = "0x6000071")]
		[Address(RVA = "0x256ACC", Offset = "0x256ACC", VA = "0x256ACC", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000072")]
		[Address(RVA = "0x256AFC", Offset = "0x256AFC", VA = "0x256AFC")]
		[DebuggerHidden]
		private IEnumerator TryInitialize()
		{
			return null;
		}

		[Token(Token = "0x6000073")]
		[Address(RVA = "0x256B84", Offset = "0x256B84", VA = "0x256B84")]
		private bool Initialize()
		{
			return default(bool);
		}

		[Token(Token = "0x6000074")]
		[Address(RVA = "0x2577DC", Offset = "0x2577DC", VA = "0x2577DC")]
		protected void DelayedCameraInit()
		{
		}

		[Token(Token = "0x6000075")]
		[Address(RVA = "0x257980", Offset = "0x257980", VA = "0x257980")]
		private bool GetLookPointerEventData(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000076")]
		[Address(RVA = "0x258054", Offset = "0x258054", VA = "0x258054")]
		private bool UpdateCursor(int index, PointerEventData pointData)
		{
			return default(bool);
		}

		[Token(Token = "0x6000077")]
		[Address(RVA = "0x258BA4", Offset = "0x258BA4", VA = "0x258BA4")]
		public void ClearSelection()
		{
		}

		[Token(Token = "0x6000078")]
		[Address(RVA = "0x258C8C", Offset = "0x258C8C", VA = "0x258C8C")]
		private void Select(GameObject go)
		{
		}

		[Token(Token = "0x6000079")]
		[Address(RVA = "0x258DA0", Offset = "0x258DA0", VA = "0x258DA0")]
		private bool SendUpdateEventToSelectedObject()
		{
			return default(bool);
		}

		[Token(Token = "0x600007A")]
		[Address(RVA = "0x258F38", Offset = "0x258F38", VA = "0x258F38")]
		private void UpdateCameraPosition(int index)
		{
		}

		[Token(Token = "0x600007B")]
		[Address(RVA = "0x2590CC", Offset = "0x2590CC", VA = "0x2590CC", Slot = "17")]
		public override void Process()
		{
		}

		[Token(Token = "0x600007C")]
		[Address(RVA = "0x2590D0", Offset = "0x2590D0", VA = "0x2590D0")]
		private void Update()
		{
		}

		[Token(Token = "0x600007D")]
		[Address(RVA = "0x25A4AC", Offset = "0x25A4AC", VA = "0x25A4AC")]
		private bool ButtonDown(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x600007E")]
		[Address(RVA = "0x25A58C", Offset = "0x25A58C", VA = "0x25A58C")]
		private bool ButtonUp(int index)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000024")]
	public class NVRHand : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000025")]
		public class NVRInteractableEvent : UnityEvent<NVRInteractable>
		{
			[Token(Token = "0x60000BC")]
			[Address(RVA = "0x318978", Offset = "0x318978", VA = "0x318978")]
			public NVRInteractableEvent()
			{
			}
		}

		[Token(Token = "0x20002E6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x164BCC", Offset = "0x164BCC")]
		private sealed class <DoLongHapticPulse>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4001153")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal float <startTime>__0;

			[Token(Token = "0x4001154")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal float seconds;

			[Token(Token = "0x4001155")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal float <endTime>__0;

			[Token(Token = "0x4001156")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal NVRButtons button;

			[Token(Token = "0x4001157")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal NVRHand $this;

			[Token(Token = "0x4001158")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal object $current;

			[Token(Token = "0x4001159")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal bool $disposing;

			[Token(Token = "0x400115A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal int $PC;

			[Token(Token = "0x17000245")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x60016C7")]
				[Address(RVA = "0x3188D0", Offset = "0x3188D0", VA = "0x3188D0", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000246")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60016C8")]
				[Address(RVA = "0x3188D8", Offset = "0x3188D8", VA = "0x3188D8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60016C5")]
			[Address(RVA = "0x3187E4", Offset = "0x3187E4", VA = "0x3187E4")]
			[DebuggerHidden]
			public <DoLongHapticPulse>c__Iterator0()
			{
			}

			[Token(Token = "0x60016C6")]
			[Address(RVA = "0x3187EC", Offset = "0x3187EC", VA = "0x3187EC", Slot = "5")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60016C9")]
			[Address(RVA = "0x3188E0", Offset = "0x3188E0", VA = "0x3188E0", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x60016CA")]
			[Address(RVA = "0x3188F4", Offset = "0x3188F4", VA = "0x3188F4", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x40000AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public NVRButtons HoldButton;

		[Token(Token = "0x40000AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public NVRButtons OculusHoldButton;

		[Token(Token = "0x40000AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public NVRButtons SecondaryHoldButton;

		[Token(Token = "0x40000AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public NVRButtons UseButton;

		[Token(Token = "0x40000AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public NVRButtons OculusUseButton;

		[Token(Token = "0x40000AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NVRButtons SecondaryButton;

		[Token(Token = "0x40000B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public NVRButtons SecondaryButtonBis;

		[Token(Token = "0x40000B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public NVRButtons SecondaryButtonTer;

		[Token(Token = "0x40000B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[HideInInspector]
		public bool IsRight;

		[Token(Token = "0x40000B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		[HideInInspector]
		public bool IsLeft;

		[Token(Token = "0x40000B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public NVRPlayer Player;

		[Token(Token = "0x40000B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Dictionary<NVRButtons, NVRButtonInputs> Inputs;

		[Token(Token = "0x40000B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public InterationStyle CurrentInteractionStyle;

		[Token(Token = "0x40000B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Rigidbody Rigidbody;

		[Token(Token = "0x40000B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public GameObject CustomModel;

		[Token(Token = "0x40000B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[HideInInspector]
		public GameObject CustomPhysicalColliders;

		[Token(Token = "0x40000BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private VisibilityLevel CurrentVisibility;

		[Token(Token = "0x40000BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool VisibilityLocked;

		[Token(Token = "0x40000BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public HandState CurrentHandState;

		[Token(Token = "0x40000BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		internal Dictionary<NVRInteractable, Dictionary<Collider, float>> CurrentlyHoveringOver;

		[Token(Token = "0x40000BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public NVRInteractable CurrentlyInteracting;

		[Token(Token = "0x40000BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public NVRInteractableEvent OnBeginInteraction;

		[Token(Token = "0x40000C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public NVRInteractableEvent OnEndInteraction;

		[Token(Token = "0x40000C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private int EstimationSampleIndex;

		[Token(Token = "0x40000C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3[] LastPositions;

		[Token(Token = "0x40000C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Quaternion[] LastRotations;

		[Token(Token = "0x40000C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float[] LastDeltas;

		[Token(Token = "0x40000C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int EstimationSamples;

		[Token(Token = "0x40000C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public NVRPhysicalController PhysicalController;

		[Token(Token = "0x40000C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Collider[] GhostColliders;

		[Token(Token = "0x40000C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Renderer[] GhostRenderers;

		[Token(Token = "0x40000C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		internal NVRInputDevice InputDevice;

		[Token(Token = "0x40000CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private GameObject RenderModel;

		[Token(Token = "0x40000CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private GameObject furnitureAim;

		[Token(Token = "0x40000CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		internal bool IsAiming;

		[Token(Token = "0x40000CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		internal bool IsHinting;

		[Token(Token = "0x40000CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private DistanceGrab _distanceGrab;

		[Token(Token = "0x40000CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x164B7C", Offset = "0x164B7C")]
		private static Func<KeyValuePair<NVRInteractable, Dictionary<Collider, float>>, bool> <>f__am$cache0;

		[Token(Token = "0x40000D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x164B8C", Offset = "0x164B8C")]
		private static Func<KeyValuePair<Collider, float>, float> <>f__am$cache1;

		[Token(Token = "0x17000010")]
		private NVRButtons usedHoldButton
		{
			[Token(Token = "0x6000080")]
			[Address(RVA = "0x25C6B0", Offset = "0x25C6B0", VA = "0x25C6B0")]
			get
			{
				return default(NVRButtons);
			}
		}

		[Token(Token = "0x17000011")]
		public bool HoldButtonDown
		{
			[Token(Token = "0x6000081")]
			[Address(RVA = "0x25C6B8", Offset = "0x25C6B8", VA = "0x25C6B8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000012")]
		public bool HoldButtonUp
		{
			[Token(Token = "0x6000082")]
			[Address(RVA = "0x25C74C", Offset = "0x25C74C", VA = "0x25C74C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000013")]
		public bool HoldButtonPressed
		{
			[Token(Token = "0x6000083")]
			[Address(RVA = "0x2403B0", Offset = "0x2403B0", VA = "0x2403B0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000014")]
		public float HoldButtonAxis
		{
			[Token(Token = "0x6000084")]
			[Address(RVA = "0x25C7E0", Offset = "0x25C7E0", VA = "0x25C7E0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000015")]
		public bool SecondaryHoldButtonDown
		{
			[Token(Token = "0x6000085")]
			[Address(RVA = "0x25C874", Offset = "0x25C874", VA = "0x25C874")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000016")]
		public bool SecondaryHoldButtonUp
		{
			[Token(Token = "0x6000086")]
			[Address(RVA = "0x25C908", Offset = "0x25C908", VA = "0x25C908")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000017")]
		public bool SecondaryHoldButtonPressed
		{
			[Token(Token = "0x6000087")]
			[Address(RVA = "0x25C99C", Offset = "0x25C99C", VA = "0x25C99C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000018")]
		public float SecondaryHoldButtonAxis
		{
			[Token(Token = "0x6000088")]
			[Address(RVA = "0x25CA30", Offset = "0x25CA30", VA = "0x25CA30")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000019")]
		private NVRButtons usedUseButton
		{
			[Token(Token = "0x6000089")]
			[Address(RVA = "0x25CAC4", Offset = "0x25CAC4", VA = "0x25CAC4")]
			get
			{
				return default(NVRButtons);
			}
		}

		[Token(Token = "0x1700001A")]
		public bool UseButtonDown
		{
			[Token(Token = "0x600008A")]
			[Address(RVA = "0x25CACC", Offset = "0x25CACC", VA = "0x25CACC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700001B")]
		public bool UseButtonUp
		{
			[Token(Token = "0x600008B")]
			[Address(RVA = "0x25CB60", Offset = "0x25CB60", VA = "0x25CB60")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700001C")]
		public bool UseButtonPressed
		{
			[Token(Token = "0x600008C")]
			[Address(RVA = "0x25CBF4", Offset = "0x25CBF4", VA = "0x25CBF4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700001D")]
		public float UseButtonAxis
		{
			[Token(Token = "0x600008D")]
			[Address(RVA = "0x25CC88", Offset = "0x25CC88", VA = "0x25CC88")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700001E")]
		public bool SecondaryButtonDown
		{
			[Token(Token = "0x600008E")]
			[Address(RVA = "0x24E6C8", Offset = "0x24E6C8", VA = "0x24E6C8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700001F")]
		public bool SecondaryButtonUp
		{
			[Token(Token = "0x600008F")]
			[Address(RVA = "0x25CD1C", Offset = "0x25CD1C", VA = "0x25CD1C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000020")]
		public bool SecondaryButtonPressed
		{
			[Token(Token = "0x6000090")]
			[Address(RVA = "0x24C87C", Offset = "0x24C87C", VA = "0x24C87C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000021")]
		public float SecondaryButtonSimpleAxis
		{
			[Token(Token = "0x6000091")]
			[Address(RVA = "0x25CE08", Offset = "0x25CE08", VA = "0x25CE08")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000022")]
		public Vector2 SecondaryButtonAxis
		{
			[Token(Token = "0x6000092")]
			[Address(RVA = "0x241BD0", Offset = "0x241BD0", VA = "0x241BD0")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x17000023")]
		internal DistanceGrab distanceGrab
		{
			[Token(Token = "0x6000093")]
			[Address(RVA = "0x25CF00", Offset = "0x25CF00", VA = "0x25CF00")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000024")]
		public bool IsHovering
		{
			[Token(Token = "0x6000094")]
			[Address(RVA = "0x25CF74", Offset = "0x25CF74", VA = "0x25CF74")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000025")]
		public bool IsInteracting
		{
			[Token(Token = "0x6000095")]
			[Address(RVA = "0x244A1C", Offset = "0x244A1C", VA = "0x244A1C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000026")]
		public bool HasCustomModel
		{
			[Token(Token = "0x6000096")]
			[Address(RVA = "0x25D06C", Offset = "0x25D06C", VA = "0x25D06C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000027")]
		public bool IsCurrentlyTracked
		{
			[Token(Token = "0x6000097")]
			[Address(RVA = "0x25D0FC", Offset = "0x25D0FC", VA = "0x25D0FC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000028")]
		public Vector3 CurrentForward
		{
			[Token(Token = "0x6000098")]
			[Address(RVA = "0x25D1C4", Offset = "0x25D1C4", VA = "0x25D1C4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000029")]
		public Vector3 CurrentPosition
		{
			[Token(Token = "0x6000099")]
			[Address(RVA = "0x25D2D8", Offset = "0x25D2D8", VA = "0x25D2D8")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x600007F")]
		[Address(RVA = "0x25C5DC", Offset = "0x25C5DC", VA = "0x25C5DC")]
		public NVRHand()
		{
		}

		[Token(Token = "0x600009A")]
		[Address(RVA = "0x24E66C", Offset = "0x24E66C", VA = "0x24E66C")]
		public void showAim()
		{
		}

		[Token(Token = "0x600009B")]
		[Address(RVA = "0x25D3EC", Offset = "0x25D3EC", VA = "0x25D3EC")]
		public void HideAim()
		{
		}

		[Token(Token = "0x600009C")]
		[Address(RVA = "0x2402FC", Offset = "0x2402FC", VA = "0x2402FC")]
		public void ShowHint(string s, HintAnim anim)
		{
		}

		[Token(Token = "0x600009D")]
		[Address(RVA = "0x25D440", Offset = "0x25D440", VA = "0x25D440")]
		public void getHandReference()
		{
		}

		[Token(Token = "0x600009E")]
		[Address(RVA = "0x25D53C", Offset = "0x25D53C", VA = "0x25D53C")]
		public void HideHint()
		{
		}

		[Token(Token = "0x600009F")]
		[Address(RVA = "0x25D5C4", Offset = "0x25D5C4", VA = "0x25D5C4", Slot = "4")]
		public virtual void PreInitialize(NVRPlayer player)
		{
		}

		[Token(Token = "0x60000A0")]
		[Address(RVA = "0x25E128", Offset = "0x25E128", VA = "0x25E128", Slot = "5")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x60000A1")]
		[Address(RVA = "0x25EC34", Offset = "0x25EC34", VA = "0x25EC34")]
		protected void UpdateHovering()
		{
		}

		[Token(Token = "0x60000A2")]
		[Address(RVA = "0x25E820", Offset = "0x25E820", VA = "0x25E820")]
		protected void UpdateButtonStates()
		{
		}

		[Token(Token = "0x60000A3")]
		[Address(RVA = "0x25E9B8", Offset = "0x25E9B8", VA = "0x25E9B8")]
		protected void UpdateInteractions()
		{
		}

		[Token(Token = "0x60000A4")]
		[Address(RVA = "0x25F12C", Offset = "0x25F12C", VA = "0x25F12C")]
		private void UpdateVisibilityAndColliders()
		{
		}

		[Token(Token = "0x60000A5")]
		[Address(RVA = "0x25242C", Offset = "0x25242C", VA = "0x25242C")]
		public void TriggerHapticPulse(ushort durationMicroSec = 500, NVRButtons button = NVRButtons.Grip)
		{
		}

		[Token(Token = "0x60000A6")]
		[Address(RVA = "0x25FC28", Offset = "0x25FC28", VA = "0x25FC28")]
		public void LongHapticPulse(float seconds, NVRButtons button = NVRButtons.Grip)
		{
		}

		[Token(Token = "0x60000A7")]
		[Address(RVA = "0x25FC4C", Offset = "0x25FC4C", VA = "0x25FC4C")]
		[DebuggerHidden]
		private IEnumerator DoLongHapticPulse(float seconds, NVRButtons button)
		{
			return null;
		}

		[Token(Token = "0x60000A8")]
		[Address(RVA = "0x25FD04", Offset = "0x25FD04", VA = "0x25FD04")]
		public Vector3 GetVelocityEstimation()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60000A9")]
		[Address(RVA = "0x25FF80", Offset = "0x25FF80", VA = "0x25FF80")]
		public Vector3 GetAngularVelocityEstimation()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60000AA")]
		[Address(RVA = "0x2601E8", Offset = "0x2601E8", VA = "0x2601E8")]
		public Vector3 GetPositionDelta()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60000AB")]
		[Address(RVA = "0x260338", Offset = "0x260338", VA = "0x260338")]
		public Quaternion GetRotationDelta()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60000AC")]
		[Address(RVA = "0x26049C", Offset = "0x26049C", VA = "0x26049C", Slot = "6")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x60000AD")]
		[Address(RVA = "0x260708", Offset = "0x260708", VA = "0x260708", Slot = "7")]
		public virtual void BeginInteraction(NVRInteractable interactable)
		{
		}

		[Token(Token = "0x60000AE")]
		[Address(RVA = "0x260830", Offset = "0x260830", VA = "0x260830", Slot = "8")]
		public virtual void EndInteraction(NVRInteractable item)
		{
		}

		[Token(Token = "0x60000AF")]
		[Address(RVA = "0x25F36C", Offset = "0x25F36C", VA = "0x25F36C")]
		private bool PickupClosest()
		{
			return default(bool);
		}

		[Token(Token = "0x60000B0")]
		[Address(RVA = "0x2609E0", Offset = "0x2609E0", VA = "0x2609E0", Slot = "9")]
		public virtual void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x60000B1")]
		[Address(RVA = "0x260C3C", Offset = "0x260C3C", VA = "0x260C3C", Slot = "10")]
		public virtual void OnTriggerStay(Collider collider)
		{
		}

		[Token(Token = "0x60000B2")]
		[Address(RVA = "0x260E98", Offset = "0x260E98", VA = "0x260E98", Slot = "11")]
		public virtual void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x60000B3")]
		[Address(RVA = "0x2610E8", Offset = "0x2610E8", VA = "0x2610E8")]
		public string GetDeviceName()
		{
			return null;
		}

		[Token(Token = "0x60000B4")]
		[Address(RVA = "0x2611A8", Offset = "0x2611A8", VA = "0x2611A8")]
		public Collider[] SetupDefaultPhysicalColliders(Transform ModelParent)
		{
			return null;
		}

		[Token(Token = "0x60000B5")]
		[Address(RVA = "0x2611E0", Offset = "0x2611E0", VA = "0x2611E0")]
		public void DeregisterInteractable(NVRInteractable interactable, bool full = true)
		{
		}

		[Token(Token = "0x60000B6")]
		[Address(RVA = "0x25F740", Offset = "0x25F740", VA = "0x25F740")]
		private void SetVisibility(VisibilityLevel visibility)
		{
		}

		[Token(Token = "0x60000B7")]
		[Address(RVA = "0x25DE3C", Offset = "0x25DE3C", VA = "0x25DE3C")]
		protected void InitializeRenderModel()
		{
		}

		[Token(Token = "0x60000B8")]
		[Address(RVA = "0x25E274", Offset = "0x25E274", VA = "0x25E274")]
		public void Initialize()
		{
		}

		[Token(Token = "0x60000B9")]
		[Address(RVA = "0x2612E8", Offset = "0x2612E8", VA = "0x2612E8")]
		public void ForceGhost()
		{
		}

		[Token(Token = "0x60000BA")]
		[Address(RVA = "0x26131C", Offset = "0x26131C", VA = "0x26131C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x164BAC", Offset = "0x164BAC")]
		private static bool <get_IsHovering>m__0(KeyValuePair<NVRInteractable, Dictionary<Collider, float>> kvp)
		{
			return default(bool);
		}

		[Token(Token = "0x60000BB")]
		[Address(RVA = "0x2613C0", Offset = "0x2613C0", VA = "0x2613C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x164BBC", Offset = "0x164BBC")]
		private static float <UpdateHovering>m__1(KeyValuePair<Collider, float> colliderTime)
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000026")]
	public enum VisibilityLevel
	{
		[Token(Token = "0x40000D2")]
		Invisible = 0,
		[Token(Token = "0x40000D3")]
		Ghost = 70,
		[Token(Token = "0x40000D4")]
		Visible = 100
	}
	[Token(Token = "0x2000027")]
	public enum HandState
	{
		[Token(Token = "0x40000D6")]
		Uninitialized,
		[Token(Token = "0x40000D7")]
		Idle,
		[Token(Token = "0x40000D8")]
		GripDownNotInteracting,
		[Token(Token = "0x40000D9")]
		GripDownInteracting,
		[Token(Token = "0x40000DA")]
		GripToggleOnNotInteracting,
		[Token(Token = "0x40000DB")]
		GripToggleOnInteracting,
		[Token(Token = "0x40000DC")]
		GripToggleOff
	}
	[Token(Token = "0x2000028")]
	public enum InterationStyle
	{
		[Token(Token = "0x40000DE")]
		Hold,
		[Token(Token = "0x40000DF")]
		Toggle,
		[Token(Token = "0x40000E0")]
		ByScript
	}
	[Token(Token = "0x2000029")]
	public class NVRHead : MonoBehaviour
	{
		[Token(Token = "0x60000BD")]
		[Address(RVA = "0x3189DC", Offset = "0x3189DC", VA = "0x3189DC")]
		public NVRHead()
		{
		}

		[Token(Token = "0x60000BE")]
		[Address(RVA = "0x3189E4", Offset = "0x3189E4", VA = "0x3189E4")]
		public void Initialize()
		{
		}
	}
	[Token(Token = "0x200002A")]
	public class NVRHelpers
	{
		[Token(Token = "0x40000E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Shader standardShader;

		[Token(Token = "0x1700002A")]
		private static Shader StandardShader
		{
			[Token(Token = "0x60000C0")]
			[Address(RVA = "0x3189F0", Offset = "0x3189F0", VA = "0x3189F0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000BF")]
		[Address(RVA = "0x3189E8", Offset = "0x3189E8", VA = "0x3189E8")]
		public NVRHelpers()
		{
		}

		[Token(Token = "0x60000C1")]
		[Address(RVA = "0x318AE4", Offset = "0x318AE4", VA = "0x318AE4")]
		public static void SetTransparent(Material material, [Optional] Color? newcolor)
		{
		}

		[Token(Token = "0x60000C2")]
		[Address(RVA = "0x318F14", Offset = "0x318F14", VA = "0x318F14")]
		public static void SetOpaque(Material material)
		{
		}

		[Token(Token = "0x60000C3")]
		[Address(RVA = "0x31923C", Offset = "0x31923C", VA = "0x31923C")]
		public static void SetProperty(object obj, string propertyName, object value, bool isPublic)
		{
		}

		[Token(Token = "0x60000C4")]
		[Address(RVA = "0x3192DC", Offset = "0x3192DC", VA = "0x3192DC")]
		public static void SetField(object obj, string fieldName, object value, bool isPublic)
		{
		}

		[Token(Token = "0x60000C5")]
		[Address(RVA = "0x31936C", Offset = "0x31936C", VA = "0x31936C")]
		public static void LineRendererSetColor(LineRenderer lineRenderer, Color startColor, Color endColor)
		{
		}

		[Token(Token = "0x60000C6")]
		[Address(RVA = "0x31940C", Offset = "0x31940C", VA = "0x31940C")]
		public static void LineRendererSetWidth(LineRenderer lineRenderer, float startWidth, float endWidth)
		{
		}
	}
	[Token(Token = "0x200002B")]
	public abstract class NVRInputDevice : MonoBehaviour
	{
		[Token(Token = "0x40000E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		protected NVRHand Hand;

		[Token(Token = "0x1700002B")]
		public abstract bool IsCurrentlyTracked
		{
			[Token(Token = "0x60000C9")]
			get;
		}

		[Token(Token = "0x60000C7")]
		[Address(RVA = "0x319468", Offset = "0x319468", VA = "0x319468")]
		protected NVRInputDevice()
		{
		}

		[Token(Token = "0x60000C8")]
		[Address(RVA = "0x319470", Offset = "0x319470", VA = "0x319470", Slot = "4")]
		public virtual void Initialize(NVRHand hand)
		{
		}

		[Token(Token = "0x60000CA")]
		public abstract Collider[] SetupDefaultPhysicalColliders(Transform ModelParent);

		[Token(Token = "0x60000CB")]
		public abstract GameObject SetupDefaultRenderModel();

		[Token(Token = "0x60000CC")]
		public abstract bool ReadyToInitialize();

		[Token(Token = "0x60000CD")]
		public abstract Collider[] SetupDefaultColliders();

		[Token(Token = "0x60000CE")]
		public abstract string GetDeviceName();

		[Token(Token = "0x60000CF")]
		public abstract void TriggerHapticPulse(ushort durationMicroSec = 500, NVRButtons button = NVRButtons.Touchpad);

		[Token(Token = "0x60000D0")]
		public abstract float GetAxis1D(NVRButtons button);

		[Token(Token = "0x60000D1")]
		public abstract Vector2 GetAxis2D(NVRButtons button);

		[Token(Token = "0x60000D2")]
		public abstract bool GetPressDown(NVRButtons button);

		[Token(Token = "0x60000D3")]
		public abstract bool GetPressUp(NVRButtons button);

		[Token(Token = "0x60000D4")]
		public abstract bool GetPress(NVRButtons button);

		[Token(Token = "0x60000D5")]
		public abstract bool GetTouchDown(NVRButtons button);

		[Token(Token = "0x60000D6")]
		public abstract bool GetTouchUp(NVRButtons button);

		[Token(Token = "0x60000D7")]
		public abstract bool GetTouch(NVRButtons button);

		[Token(Token = "0x60000D8")]
		public abstract bool GetNearTouchDown(NVRButtons button);

		[Token(Token = "0x60000D9")]
		public abstract bool GetNearTouchUp(NVRButtons button);

		[Token(Token = "0x60000DA")]
		public abstract bool GetNearTouch(NVRButtons button);
	}
	[Token(Token = "0x200002C")]
	public abstract class NVRIntegration
	{
		[Token(Token = "0x40000E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		protected NVRPlayer Player;

		[Token(Token = "0x60000DB")]
		[Address(RVA = "0x319478", Offset = "0x319478", VA = "0x319478")]
		protected NVRIntegration()
		{
		}

		[Token(Token = "0x60000DC")]
		public abstract void Initialize(NVRPlayer player);

		[Token(Token = "0x60000DD")]
		public abstract Vector3 GetPlayspaceBounds();

		[Token(Token = "0x60000DE")]
		public abstract bool IsHmdPresent();

		[Token(Token = "0x60000DF")]
		[Address(RVA = "0x319480", Offset = "0x319480", VA = "0x319480", Slot = "7")]
		public virtual Vector3 GetCenterOffset()
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x200002D")]
	public abstract class NVRInteractable : MonoBehaviour
	{
		[Token(Token = "0x40000E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Rigidbody Rigidbody;

		[Token(Token = "0x40000E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool Secondary;

		[Token(Token = "0x40000E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool SecondaryHold;

		[Token(Token = "0x40000E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public bool CanAttach;

		[Token(Token = "0x40000E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
		public bool DisableKinematicOnAttach;

		[Token(Token = "0x40000E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool EnableKinematicOnDetach;

		[Token(Token = "0x40000EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float DropDistance;

		[Token(Token = "0x40000EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool EnableGravityOnDetach;

		[Token(Token = "0x40000EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal NVRHand AttachedHand;

		[Token(Token = "0x40000ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal NVRHand HoveringHand;

		[Token(Token = "0x40000EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected Collider[] Colliders;

		[Token(Token = "0x40000EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		protected Vector3 ClosestHeldPoint;

		[Token(Token = "0x40000F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected bool IsInit;

		[Token(Token = "0x1700002C")]
		public virtual bool IsAttached
		{
			[Token(Token = "0x60000E1")]
			[Address(RVA = "0x319528", Offset = "0x319528", VA = "0x319528", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60000E0")]
		[Address(RVA = "0x319508", Offset = "0x319508", VA = "0x319508")]
		protected NVRInteractable()
		{
		}

		[Token(Token = "0x60000E2")]
		[Address(RVA = "0x3195D4", Offset = "0x3195D4", VA = "0x3195D4", Slot = "5")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60000E3")]
		[Address(RVA = "0x31972C", Offset = "0x31972C", VA = "0x31972C", Slot = "6")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x60000E4")]
		[Address(RVA = "0x31973C", Offset = "0x31973C", VA = "0x31973C", Slot = "7")]
		public virtual void ShowHighlight()
		{
		}

		[Token(Token = "0x60000E5")]
		[Address(RVA = "0x319740", Offset = "0x319740", VA = "0x319740", Slot = "8")]
		public virtual void ResetInteractable()
		{
		}

		[Token(Token = "0x60000E6")]
		[Address(RVA = "0x319780", Offset = "0x319780", VA = "0x319780", Slot = "9")]
		public virtual void UpdateColliders()
		{
		}

		[Token(Token = "0x60000E7")]
		[Address(RVA = "0x319A40", Offset = "0x319A40", VA = "0x319A40", Slot = "10")]
		protected virtual bool CheckForDrop()
		{
			return default(bool);
		}

		[Token(Token = "0x60000E8")]
		[Address(RVA = "0x319C88", Offset = "0x319C88", VA = "0x319C88", Slot = "11")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x60000E9")]
		[Address(RVA = "0x319DD8", Offset = "0x319DD8", VA = "0x319DD8", Slot = "12")]
		public virtual void BeginInteraction(NVRHand hand)
		{
		}

		[Token(Token = "0x60000EA")]
		[Address(RVA = "0x319E14", Offset = "0x319E14", VA = "0x319E14", Slot = "13")]
		public virtual void InteractingUpdate(NVRHand hand)
		{
		}

		[Token(Token = "0x60000EB")]
		[Address(RVA = "0x319E90", Offset = "0x319E90", VA = "0x319E90", Slot = "14")]
		public virtual void HoveringUpdate(NVRHand hand, float forTime)
		{
		}

		[Token(Token = "0x60000EC")]
		[Address(RVA = "0x319E98", Offset = "0x319E98", VA = "0x319E98")]
		public void ForceDetach()
		{
		}

		[Token(Token = "0x60000ED")]
		[Address(RVA = "0x319FB8", Offset = "0x319FB8", VA = "0x319FB8", Slot = "15")]
		public virtual void EndInteraction()
		{
		}

		[Token(Token = "0x60000EE")]
		[Address(RVA = "0x31A0B4", Offset = "0x31A0B4", VA = "0x31A0B4", Slot = "16")]
		protected virtual void DroppedBecauseOfDistance()
		{
		}

		[Token(Token = "0x60000EF")]
		[Address(RVA = "0x31A0EC", Offset = "0x31A0EC", VA = "0x31A0EC", Slot = "17")]
		public virtual void UseButtonUp()
		{
		}

		[Token(Token = "0x60000F0")]
		[Address(RVA = "0x31A0F0", Offset = "0x31A0F0", VA = "0x31A0F0", Slot = "18")]
		public virtual void UseButtonDown()
		{
		}

		[Token(Token = "0x60000F1")]
		[Address(RVA = "0x31A0F4", Offset = "0x31A0F4", VA = "0x31A0F4", Slot = "19")]
		public virtual void AddExternalVelocity(Vector3 velocity)
		{
		}

		[Token(Token = "0x60000F2")]
		[Address(RVA = "0x31A148", Offset = "0x31A148", VA = "0x31A148", Slot = "20")]
		public virtual void AddExternalAngularVelocity(Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x60000F3")]
		[Address(RVA = "0x31A19C", Offset = "0x31A19C", VA = "0x31A19C", Slot = "21")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x60000F4")]
		[Address(RVA = "0x31A680", Offset = "0x31A680", VA = "0x31A680", Slot = "22")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x60000F5")]
		[Address(RVA = "0x31A710", Offset = "0x31A710", VA = "0x31A710", Slot = "23")]
		protected virtual void OnEnable()
		{
		}
	}
	[Token(Token = "0x200002E")]
	public enum SoundMaterial
	{
		[Token(Token = "0x40000F2")]
		Null,
		[Token(Token = "0x40000F3")]
		Metal,
		[Token(Token = "0x40000F4")]
		Heavy,
		[Token(Token = "0x40000F5")]
		Glass,
		[Token(Token = "0x40000F6")]
		Light,
		[Token(Token = "0x40000F7")]
		Tap,
		[Token(Token = "0x40000F8")]
		Drawer,
		[Token(Token = "0x40000F9")]
		FurnitureDoor,
		[Token(Token = "0x40000FA")]
		Hammer,
		[Token(Token = "0x40000FB")]
		Lever,
		[Token(Token = "0x40000FC")]
		Fruit
	}
	[Token(Token = "0x200002F")]
	public enum HintType
	{
		[Token(Token = "0x40000FE")]
		Null,
		[Token(Token = "0x40000FF")]
		Craft,
		[Token(Token = "0x4000100")]
		Meuble,
		[Token(Token = "0x4000101")]
		Bobby,
		[Token(Token = "0x4000102")]
		Gift,
		[Token(Token = "0x4000103")]
		BigHammer,
		[Token(Token = "0x4000104")]
		TutorialLoader,
		[Token(Token = "0x4000105")]
		Skillpoint
	}
	[Token(Token = "0x2000030")]
	public class NVRInteractableItem : NVRInteractable
	{
		[Token(Token = "0x4000106")]
		private const float MaxVelocityChange = 10f;

		[Token(Token = "0x4000107")]
		private const float MaxAngularVelocityChange = 20f;

		[Token(Token = "0x4000108")]
		private const float VelocityMagic = 6000f;

		[Token(Token = "0x4000109")]
		private const float AngularVelocityMagic = 50f;

		[Token(Token = "0x400010A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool DisablePhysicalMaterialsOnAttach;

		[Token(Token = "0x400010B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x164C2C", Offset = "0x164C2C")]
		public Transform InteractionPoint;

		[Token(Token = "0x400010C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private uint BeginInteractionFeedback;

		[Token(Token = "0x400010D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private uint EndInteractionFeedback;

		[Token(Token = "0x400010E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private uint Collisionfeedback;

		[Token(Token = "0x400010F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private uint CollisionMetalfeedback;

		[Token(Token = "0x4000110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private uint CollisionFruitfeedback;

		[Token(Token = "0x4000111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float soundtimer;

		[Token(Token = "0x4000112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool surfaceSpecific;

		[Token(Token = "0x4000113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[HideInInspector]
		public string HintTxt;

		[Token(Token = "0x4000114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public SoundMaterial Mat;

		[Token(Token = "0x4000115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public HintType Hint;

		[Token(Token = "0x4000116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public UnityEvent OnUseButtonDown;

		[Token(Token = "0x4000117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public UnityEvent OnUseButtonUp;

		[Token(Token = "0x4000118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public UnityEvent OnHovering;

		[Token(Token = "0x4000119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public UnityEvent OnHighlight;

		[Token(Token = "0x400011A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public UnityEvent OnBeginInteraction;

		[Token(Token = "0x400011B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public UnityEvent OnEndInteraction;

		[Token(Token = "0x400011C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected Transform PickupTransform;

		[Token(Token = "0x400011D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		protected Vector3 ExternalVelocity;

		[Token(Token = "0x400011E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected Vector3 ExternalAngularVelocity;

		[Token(Token = "0x400011F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		protected Vector3?[] VelocityHistory;

		[Token(Token = "0x4000120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected Vector3?[] AngularVelocityHistory;

		[Token(Token = "0x4000121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		protected int CurrentVelocityHistoryStep;

		[Token(Token = "0x4000122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected float StartingDrag;

		[Token(Token = "0x4000123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		protected float StartingAngularDrag;

		[Token(Token = "0x4000124")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected Dictionary<Collider, PhysicMaterial> MaterialCache;

		[Token(Token = "0x4000125")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[HideInInspector]
		public HintAnim anim;

		[Token(Token = "0x60000F6")]
		[Address(RVA = "0x31A748", Offset = "0x31A748", VA = "0x31A748")]
		public NVRInteractableItem()
		{
		}

		[Token(Token = "0x60000F7")]
		[Address(RVA = "0x31A80C", Offset = "0x31A80C", VA = "0x31A80C", Slot = "5")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60000F8")]
		[Address(RVA = "0x31A844", Offset = "0x31A844", VA = "0x31A844", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60000F9")]
		[Address(RVA = "0x31AE90", Offset = "0x31AE90", VA = "0x31AE90")]
		public void setTutorialLoaderHint(string type)
		{
		}

		[Token(Token = "0x60000FA")]
		[Address(RVA = "0x31B088", Offset = "0x31B088", VA = "0x31B088", Slot = "24")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x60000FB")]
		[Address(RVA = "0x31B370", Offset = "0x31B370", VA = "0x31B370", Slot = "7")]
		public override void ShowHighlight()
		{
		}

		[Token(Token = "0x60000FC")]
		[Address(RVA = "0x31B398", Offset = "0x31B398", VA = "0x31B398", Slot = "25")]
		protected virtual void UpdateVelocities()
		{
		}

		[Token(Token = "0x60000FD")]
		[Address(RVA = "0x31BC60", Offset = "0x31BC60", VA = "0x31BC60", Slot = "26")]
		protected virtual void AddExternalVelocities()
		{
		}

		[Token(Token = "0x60000FE")]
		[Address(RVA = "0x31BF34", Offset = "0x31BF34", VA = "0x31BF34", Slot = "19")]
		public override void AddExternalVelocity(Vector3 velocity)
		{
		}

		[Token(Token = "0x60000FF")]
		[Address(RVA = "0x31C090", Offset = "0x31C090", VA = "0x31C090", Slot = "20")]
		public override void AddExternalAngularVelocity(Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x6000100")]
		[Address(RVA = "0x31C1EC", Offset = "0x31C1EC", VA = "0x31C1EC", Slot = "12")]
		public override void BeginInteraction(NVRHand hand)
		{
		}

		[Token(Token = "0x6000101")]
		[Address(RVA = "0x31C6DC", Offset = "0x31C6DC", VA = "0x31C6DC", Slot = "15")]
		public override void EndInteraction()
		{
		}

		[Token(Token = "0x6000102")]
		[Address(RVA = "0x31C8CC", Offset = "0x31C8CC", VA = "0x31C8CC", Slot = "14")]
		public override void HoveringUpdate(NVRHand hand, float forTime)
		{
		}

		[Token(Token = "0x6000103")]
		[Address(RVA = "0x31C8E4", Offset = "0x31C8E4", VA = "0x31C8E4", Slot = "8")]
		public override void ResetInteractable()
		{
		}

		[Token(Token = "0x6000104")]
		[Address(RVA = "0x31C938", Offset = "0x31C938", VA = "0x31C938", Slot = "18")]
		public override void UseButtonDown()
		{
		}

		[Token(Token = "0x6000105")]
		[Address(RVA = "0x31C94C", Offset = "0x31C94C", VA = "0x31C94C", Slot = "17")]
		public override void UseButtonUp()
		{
		}

		[Token(Token = "0x6000106")]
		[Address(RVA = "0x31C960", Offset = "0x31C960", VA = "0x31C960", Slot = "27")]
		protected virtual void ApplyVelocityHistory()
		{
		}

		[Token(Token = "0x6000107")]
		[Address(RVA = "0x31CD54", Offset = "0x31CD54", VA = "0x31CD54", Slot = "28")]
		protected virtual void ResetVelocityHistory()
		{
		}

		[Token(Token = "0x6000108")]
		[Address(RVA = "0x31CAE0", Offset = "0x31CAE0", VA = "0x31CAE0")]
		protected Vector3? GetMeanVector(Vector3?[] positions)
		{
			return null;
		}

		[Token(Token = "0x6000109")]
		[Address(RVA = "0x31C6D8", Offset = "0x31C6D8", VA = "0x31C6D8")]
		protected void DisablePhysicalMaterials()
		{
		}

		[Token(Token = "0x600010A")]
		[Address(RVA = "0x31C8C8", Offset = "0x31C8C8", VA = "0x31C8C8")]
		protected void EnablePhysicalMaterials()
		{
		}

		[Token(Token = "0x600010B")]
		[Address(RVA = "0x31D024", Offset = "0x31D024", VA = "0x31D024", Slot = "9")]
		public override void UpdateColliders()
		{
		}

		[Token(Token = "0x600010C")]
		[Address(RVA = "0x31D22C", Offset = "0x31D22C", VA = "0x31D22C")]
		private void OnCollisionEnter(Collision col)
		{
		}
	}
	[Token(Token = "0x2000031")]
	public class NVRInteractableItemAutoAttach : NVRInteractableItem
	{
		[Token(Token = "0x4000126")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public float PickupAfterSeconds;

		[Token(Token = "0x600010D")]
		[Address(RVA = "0x31D554", Offset = "0x31D554", VA = "0x31D554")]
		public NVRInteractableItemAutoAttach()
		{
		}

		[Token(Token = "0x600010E")]
		[Address(RVA = "0x31D560", Offset = "0x31D560", VA = "0x31D560", Slot = "14")]
		public override void HoveringUpdate(NVRHand hand, float forTime)
		{
		}
	}
	[Token(Token = "0x2000032")]
	public class NVRInteractableItemClippable : NVRInteractable
	{
		[Token(Token = "0x4000127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x164C80", Offset = "0x164C80")]
		public Transform InteractionPoint;

		[Token(Token = "0x4000128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected Transform PickupTransform;

		[Token(Token = "0x600010F")]
		[Address(RVA = "0x31D5E8", Offset = "0x31D5E8", VA = "0x31D5E8")]
		public NVRInteractableItemClippable()
		{
		}

		[Token(Token = "0x6000110")]
		[Address(RVA = "0x31D608", Offset = "0x31D608", VA = "0x31D608", Slot = "5")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000111")]
		[Address(RVA = "0x31D640", Offset = "0x31D640", VA = "0x31D640")]
		protected void FixedUpdate()
		{
		}

		[Token(Token = "0x6000112")]
		[Address(RVA = "0x31D9D4", Offset = "0x31D9D4", VA = "0x31D9D4", Slot = "12")]
		public override void BeginInteraction(NVRHand hand)
		{
		}

		[Token(Token = "0x6000113")]
		[Address(RVA = "0x31DBFC", Offset = "0x31DBFC", VA = "0x31DBFC", Slot = "15")]
		public override void EndInteraction()
		{
		}
	}
	[Token(Token = "0x2000033")]
	public class NVRInteractableRotator : NVRInteractable
	{
		[Token(Token = "0x4000129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float CurrentAngle;

		[Token(Token = "0x400012A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected Transform InitialAttachPoint;

		[Token(Token = "0x1700002D")]
		protected virtual float DeltaMagic
		{
			[Token(Token = "0x6000115")]
			[Address(RVA = "0x31DD38", Offset = "0x31DD38", VA = "0x31DD38", Slot = "24")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000114")]
		[Address(RVA = "0x31DD18", Offset = "0x31DD18", VA = "0x31DD18")]
		public NVRInteractableRotator()
		{
		}

		[Token(Token = "0x6000116")]
		[Address(RVA = "0x31DD40", Offset = "0x31DD40", VA = "0x31DD40", Slot = "5")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000117")]
		[Address(RVA = "0x31DD78", Offset = "0x31DD78", VA = "0x31DD78", Slot = "25")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6000118")]
		[Address(RVA = "0x31DFE4", Offset = "0x31DFE4", VA = "0x31DFE4", Slot = "12")]
		public override void BeginInteraction(NVRHand hand)
		{
		}

		[Token(Token = "0x6000119")]
		[Address(RVA = "0x31E27C", Offset = "0x31E27C", VA = "0x31E27C", Slot = "15")]
		public override void EndInteraction()
		{
		}
	}
	[Token(Token = "0x2000034")]
	public class NVRInteractables : MonoBehaviour
	{
		[Token(Token = "0x20002E7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x164CF4", Offset = "0x164CF4")]
		private sealed class <Deregister>c__AnonStorey0
		{
			[Token(Token = "0x400115B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal NVRInteractable interactable;

			[Token(Token = "0x60016CB")]
			[Address(RVA = "0x31E494", Offset = "0x31E494", VA = "0x31E494")]
			public <Deregister>c__AnonStorey0()
			{
			}

			[Token(Token = "0x60016CC")]
			[Address(RVA = "0x31EB8C", Offset = "0x31EB8C", VA = "0x31EB8C")]
			internal bool <>m__0(KeyValuePair<Collider, NVRInteractable> mapping)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400012B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<Collider, NVRInteractable> ColliderMapping;

		[Token(Token = "0x400012C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static Dictionary<NVRInteractable, Collider[]> NVRInteractableMapping;

		[Token(Token = "0x400012D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static bool Initialized;

		[Token(Token = "0x400012E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x164CB4", Offset = "0x164CB4")]
		private static Func<KeyValuePair<Collider, NVRInteractable>, Collider> <>f__am$cache0;

		[Token(Token = "0x400012F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x164CC4", Offset = "0x164CC4")]
		private static Func<KeyValuePair<Collider, NVRInteractable>, NVRInteractable> <>f__am$cache1;

		[Token(Token = "0x600011A")]
		[Address(RVA = "0x31E378", Offset = "0x31E378", VA = "0x31E378")]
		public NVRInteractables()
		{
		}

		[Token(Token = "0x600011B")]
		[Address(RVA = "0x31E380", Offset = "0x31E380", VA = "0x31E380")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x600011C")]
		[Address(RVA = "0x319824", Offset = "0x319824", VA = "0x319824")]
		public static void Register(NVRInteractable interactable, Collider[] colliders)
		{
		}

		[Token(Token = "0x600011D")]
		[Address(RVA = "0x31A224", Offset = "0x31A224", VA = "0x31A224")]
		public static void Deregister(NVRInteractable interactable)
		{
		}

		[Token(Token = "0x600011E")]
		[Address(RVA = "0x31E94C", Offset = "0x31E94C", VA = "0x31E94C")]
		public static NVRInteractable GetInteractable(Collider collider)
		{
			return null;
		}

		[Token(Token = "0x6000120")]
		[Address(RVA = "0x31EAB4", Offset = "0x31EAB4", VA = "0x31EAB4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x164CD4", Offset = "0x164CD4")]
		private static Collider <Deregister>m__0(KeyValuePair<Collider, NVRInteractable> mapping)
		{
			return null;
		}

		[Token(Token = "0x6000121")]
		[Address(RVA = "0x31EB20", Offset = "0x31EB20", VA = "0x31EB20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x164CE4", Offset = "0x164CE4")]
		private static NVRInteractable <Deregister>m__1(KeyValuePair<Collider, NVRInteractable> mapping)
		{
			return null;
		}
	}
	[Token(Token = "0x2000035")]
	public class NVRLetterSpinner : NVRInteractableRotator
	{
		[Token(Token = "0x4000130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string LETTERLIST;

		[Token(Token = "0x4000131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float SnapDistance;

		[Token(Token = "0x4000132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float RungAngleInterval;

		[Token(Token = "0x4000133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 LastAngularVelocity;

		[Token(Token = "0x6000122")]
		[Address(RVA = "0x31EC44", Offset = "0x31EC44", VA = "0x31EC44")]
		public NVRLetterSpinner()
		{
		}

		[Token(Token = "0x6000123")]
		[Address(RVA = "0x31ED08", Offset = "0x31ED08", VA = "0x31ED08", Slot = "5")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000124")]
		[Address(RVA = "0x31EDD0", Offset = "0x31EDD0", VA = "0x31EDD0", Slot = "25")]
		protected override void FixedUpdate()
		{
		}

		[Token(Token = "0x6000125")]
		[Address(RVA = "0x31F0EC", Offset = "0x31F0EC", VA = "0x31F0EC", Slot = "12")]
		public override void BeginInteraction(NVRHand hand)
		{
		}

		[Token(Token = "0x6000126")]
		[Address(RVA = "0x31F130", Offset = "0x31F130", VA = "0x31F130")]
		public string GetLetter()
		{
			return null;
		}
	}
	[Token(Token = "0x2000036")]
	public class NVRLever : NVRInteractableItem
	{
		[Token(Token = "0x2000037")]
		public enum LeverPosition
		{
			[Token(Token = "0x4000142")]
			Off,
			[Token(Token = "0x4000143")]
			Mid,
			[Token(Token = "0x4000144")]
			On
		}

		[Token(Token = "0x2000038")]
		public enum RotationAxis
		{
			[Token(Token = "0x4000146")]
			XAxis,
			[Token(Token = "0x4000147")]
			YAxis,
			[Token(Token = "0x4000148")]
			ZAxis
		}

		[Token(Token = "0x20002E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x164D14", Offset = "0x164D14")]
		private sealed class <HoldPosition>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x400115C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal float time;

			[Token(Token = "0x400115D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal NVRLever $this;

			[Token(Token = "0x400115E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal object $current;

			[Token(Token = "0x400115F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal bool $disposing;

			[Token(Token = "0x4001160")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal int $PC;

			[Token(Token = "0x17000247")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x60016CF")]
				[Address(RVA = "0x3201B8", Offset = "0x3201B8", VA = "0x3201B8", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000248")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60016D0")]
				[Address(RVA = "0x3201C0", Offset = "0x3201C0", VA = "0x3201C0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60016CD")]
			[Address(RVA = "0x31FC90", Offset = "0x31FC90", VA = "0x31FC90")]
			[DebuggerHidden]
			public <HoldPosition>c__Iterator0()
			{
			}

			[Token(Token = "0x60016CE")]
			[Address(RVA = "0x32006C", Offset = "0x32006C", VA = "0x32006C", Slot = "5")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60016D1")]
			[Address(RVA = "0x3201C8", Offset = "0x3201C8", VA = "0x3201C8", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x60016D2")]
			[Address(RVA = "0x3201DC", Offset = "0x3201DC", VA = "0x3201DC", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x4000134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public float LastValue;

		[Token(Token = "0x4000135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public float CurrentValue;

		[Token(Token = "0x4000136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public LeverPosition LastLeverPosition;

		[Token(Token = "0x4000137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public LeverPosition CurrentLeverPosition;

		[Token(Token = "0x4000138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public bool LeverEngaged;

		[Token(Token = "0x4000139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public float EngageWaitTime;

		[Token(Token = "0x400013A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected Transform InitialAttachPoint;

		[Token(Token = "0x400013B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		protected HingeJoint HingeJoint;

		[Token(Token = "0x400013C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected bool UseMotor;

		[Token(Token = "0x400013D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		protected Quaternion Max;

		[Token(Token = "0x400013E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		protected Quaternion Mid;

		[Token(Token = "0x400013F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		protected Quaternion Min;

		[Token(Token = "0x4000140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		protected float AngleRange;

		[Token(Token = "0x1700002E")]
		protected virtual float DeltaMagic
		{
			[Token(Token = "0x6000129")]
			[Address(RVA = "0x31F3A8", Offset = "0x31F3A8", VA = "0x31F3A8", Slot = "29")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000128")]
		[Address(RVA = "0x31F39C", Offset = "0x31F39C", VA = "0x31F39C")]
		public NVRLever()
		{
		}

		[Token(Token = "0x600012A")]
		[Address(RVA = "0x31F3B0", Offset = "0x31F3B0", VA = "0x31F3B0", Slot = "5")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600012B")]
		[Address(RVA = "0x31F928", Offset = "0x31F928", VA = "0x31F928", Slot = "11")]
		protected override void Update()
		{
		}

		[Token(Token = "0x600012C")]
		[Address(RVA = "0x31FB08", Offset = "0x31FB08", VA = "0x31FB08", Slot = "30")]
		protected virtual void Engage()
		{
		}

		[Token(Token = "0x600012D")]
		[Address(RVA = "0x31FBEC", Offset = "0x31FBEC", VA = "0x31FBEC")]
		[DebuggerHidden]
		private IEnumerator HoldPosition(float time)
		{
			return null;
		}

		[Token(Token = "0x600012E")]
		[Address(RVA = "0x31FC98", Offset = "0x31FC98", VA = "0x31FC98", Slot = "12")]
		public override void BeginInteraction(NVRHand hand)
		{
		}

		[Token(Token = "0x600012F")]
		[Address(RVA = "0x31FF50", Offset = "0x31FF50", VA = "0x31FF50", Slot = "15")]
		public override void EndInteraction()
		{
		}

		[Token(Token = "0x6000130")]
		[Address(RVA = "0x31F9D8", Offset = "0x31F9D8", VA = "0x31F9D8")]
		private float GetValue()
		{
			return default(float);
		}

		[Token(Token = "0x6000131")]
		[Address(RVA = "0x31FAC0", Offset = "0x31FAC0", VA = "0x31FAC0")]
		private LeverPosition GetPosition()
		{
			return default(LeverPosition);
		}
	}
	[Token(Token = "0x2000039")]
	public class NVRPhysicalController : MonoBehaviour
	{
		[Token(Token = "0x20002E9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x164D84", Offset = "0x164D84")]
		private sealed class <Initialize>c__AnonStorey0
		{
			[Token(Token = "0x4001161")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal Type componentType;

			[Token(Token = "0x60016D3")]
			[Address(RVA = "0x3216F8", Offset = "0x3216F8", VA = "0x3216F8")]
			public <Initialize>c__AnonStorey0()
			{
			}

			[Token(Token = "0x60016D4")]
			[Address(RVA = "0x322474", Offset = "0x322474", VA = "0x322474")]
			internal bool <>m__0(Type keepType)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private NVRHand Hand;

		[Token(Token = "0x400014A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool State;

		[Token(Token = "0x400014B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Rigidbody Rigidbody;

		[Token(Token = "0x400014C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public GameObject PhysicalController;

		[Token(Token = "0x400014D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Collider[] Colliders;

		[Token(Token = "0x400014E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected Vector3 ClosestHeldPoint;

		[Token(Token = "0x400014F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		protected float AttachedRotationMagic;

		[Token(Token = "0x4000150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected float AttachedPositionMagic;

		[Token(Token = "0x4000151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Type[] KeepTypes;

		[Token(Token = "0x1700002F")]
		protected float DropDistance
		{
			[Token(Token = "0x6000133")]
			[Address(RVA = "0x320EC4", Offset = "0x320EC4", VA = "0x320EC4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000132")]
		[Address(RVA = "0x320C4C", Offset = "0x320C4C", VA = "0x320C4C")]
		public NVRPhysicalController()
		{
		}

		[Token(Token = "0x6000134")]
		[Address(RVA = "0x320ECC", Offset = "0x320ECC", VA = "0x320ECC")]
		public void Initialize(NVRHand trackingHand, bool initialState)
		{
		}

		[Token(Token = "0x6000135")]
		[Address(RVA = "0x321E14", Offset = "0x321E14", VA = "0x321E14")]
		public void Kill()
		{
		}

		[Token(Token = "0x6000136")]
		[Address(RVA = "0x321EB0", Offset = "0x321EB0", VA = "0x321EB0")]
		private bool CheckForDrop()
		{
			return default(bool);
		}

		[Token(Token = "0x6000137")]
		[Address(RVA = "0x321FF8", Offset = "0x321FF8", VA = "0x321FF8")]
		private void UpdatePosition()
		{
		}

		[Token(Token = "0x6000138")]
		[Address(RVA = "0x322414", Offset = "0x322414", VA = "0x322414", Slot = "4")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6000139")]
		[Address(RVA = "0x32244C", Offset = "0x32244C", VA = "0x32244C", Slot = "5")]
		protected virtual void DroppedBecauseOfDistance()
		{
		}

		[Token(Token = "0x600013A")]
		[Address(RVA = "0x321CD0", Offset = "0x321CD0", VA = "0x321CD0")]
		public void On()
		{
		}

		[Token(Token = "0x600013B")]
		[Address(RVA = "0x321C98", Offset = "0x321C98", VA = "0x321C98")]
		public void Off()
		{
		}

		[Token(Token = "0x600013C")]
		[Address(RVA = "0x321700", Offset = "0x321700", VA = "0x321700")]
		protected void SetupCustomModel()
		{
		}
	}
	[Token(Token = "0x200003A")]
	public class NVRPlayer : MonoBehaviour
	{
		[Token(Token = "0x4000152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "DecimalConstantAttribute", RVA = "0x164D94", Offset = "0x164D94")]
		public static readonly decimal NewtonVRVersion;

		[Token(Token = "0x4000153")]
		public const float NewtonVRExpectedDeltaTime = 0.0111f;

		[Token(Token = "0x4000154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static List<NVRPlayer> Instances;

		[Token(Token = "0x4000155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[HideInInspector]
		public bool SteamVREnabled;

		[Token(Token = "0x4000156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
		[HideInInspector]
		public bool OculusSDKEnabled;

		[Token(Token = "0x4000157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public InterationStyle InteractionStyle;

		[Token(Token = "0x4000158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool PhysicalHands;

		[Token(Token = "0x4000159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		public bool MakeControllerInvisibleOnInteraction;

		[Token(Token = "0x400015A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
		public bool AutomaticallySetControllerTransparency;

		[Token(Token = "0x400015B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17")]
		public bool VibrateOnHover;

		[Token(Token = "0x400015C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int VelocityHistorySteps;

		[Token(Token = "0x400015D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public UnityEvent OnInitialized;

		[Token(Token = "0x400015E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x164DF0", Offset = "0x164DF0")]
		public bool EnableEditorPlayerPreview;

		[Token(Token = "0x400015F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Mesh EditorPlayerPreview;

		[Token(Token = "0x4000160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Mesh EditorPlayspacePreview;

		[Token(Token = "0x4000161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool EditorPlayspaceOverride;

		[Token(Token = "0x4000162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector2 EditorPlayspaceDefault;

		[Token(Token = "0x4000163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x164E00", Offset = "0x164E00")]
		[HideInInspector]
		public bool OverrideAll;

		[Token(Token = "0x4000164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[HideInInspector]
		public GameObject OverrideAllLeftHand;

		[Token(Token = "0x4000165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public GameObject OverrideAllLeftHandPhysicalColliders;

		[Token(Token = "0x4000166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[HideInInspector]
		public GameObject OverrideAllRightHand;

		[Token(Token = "0x4000167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public GameObject OverrideAllRightHandPhysicalColliders;

		[Token(Token = "0x4000168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[HideInInspector]
		public bool OverrideSteamVR;

		[Token(Token = "0x4000169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public GameObject OverrideSteamVRLeftHand;

		[Token(Token = "0x400016A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[HideInInspector]
		public GameObject OverrideSteamVRLeftHandPhysicalColliders;

		[Token(Token = "0x400016B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public GameObject OverrideSteamVRRightHand;

		[Token(Token = "0x400016C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[HideInInspector]
		public GameObject OverrideSteamVRRightHandPhysicalColliders;

		[Token(Token = "0x400016D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public bool OverrideOculus;

		[Token(Token = "0x400016E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[HideInInspector]
		public GameObject OverrideOculusLeftHand;

		[Token(Token = "0x400016F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public GameObject OverrideOculusLeftHandPhysicalColliders;

		[Token(Token = "0x4000170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[HideInInspector]
		public GameObject OverrideOculusRightHand;

		[Token(Token = "0x4000171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public GameObject OverrideOculusRightHandPhysicalColliders;

		[Token(Token = "0x4000172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x164F10", Offset = "0x164F10")]
		public NVRHead Head;

		[Token(Token = "0x4000173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public NVRHand LeftHand;

		[Token(Token = "0x4000174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public NVRHand RightHand;

		[Token(Token = "0x4000175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public NVRHand[] Hands;

		[Token(Token = "0x4000176")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[HideInInspector]
		public NVRSDKIntegrations CurrentIntegrationType;

		[Token(Token = "0x4000177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[HideInInspector]
		public NVRIntegration Integration;

		[Token(Token = "0x4000178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Dictionary<Collider, NVRHand> ColliderToHandMapping;

		[Token(Token = "0x4000179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x164F50", Offset = "0x164F50")]
		public bool DEBUGEnableFallback2D;

		[Token(Token = "0x400017A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		public bool DEBUGDropFrames;

		[Token(Token = "0x400017B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int DEBUGSleepPerFrame;

		[Token(Token = "0x400017C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public bool AutoSetFixedDeltaTime;

		[Token(Token = "0x400017D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		public bool NotifyOnVersionUpdate;

		[Token(Token = "0x400017E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x164F60", Offset = "0x164F60")]
		private static Func<NVRPlayer, bool> <>f__am$cache0;

		[Token(Token = "0x17000030")]
		public static NVRPlayer Instance
		{
			[Token(Token = "0x600013E")]
			[Address(RVA = "0x31CEA0", Offset = "0x31CEA0", VA = "0x31CEA0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000031")]
		public Vector3 PlayspaceSize
		{
			[Token(Token = "0x600013F")]
			[Address(RVA = "0x322534", Offset = "0x322534", VA = "0x322534")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x600013D")]
		[Address(RVA = "0x3224B8", Offset = "0x3224B8", VA = "0x3224B8")]
		public NVRPlayer()
		{
		}

		[Token(Token = "0x6000140")]
		[Address(RVA = "0x3226D8", Offset = "0x3226D8", VA = "0x3226D8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000141")]
		[Address(RVA = "0x322B14", Offset = "0x322B14", VA = "0x322B14")]
		private void SetupIntegration(bool logOutput = true)
		{
		}

		[Token(Token = "0x6000142")]
		[Address(RVA = "0x322B98", Offset = "0x322B98", VA = "0x322B98")]
		private NVRSDKIntegrations DetermineCurrentIntegration(bool logOutput = true)
		{
			return default(NVRSDKIntegrations);
		}

		[Token(Token = "0x6000143")]
		[Address(RVA = "0x322D1C", Offset = "0x322D1C", VA = "0x322D1C")]
		public void RegisterHand(NVRHand hand)
		{
		}

		[Token(Token = "0x6000144")]
		[Address(RVA = "0x322E78", Offset = "0x322E78", VA = "0x322E78")]
		public NVRHand GetHand(Collider collider)
		{
			return null;
		}

		[Token(Token = "0x6000145")]
		[Address(RVA = "0x31E49C", Offset = "0x31E49C", VA = "0x31E49C")]
		public static void DeregisterInteractable(NVRInteractable interactable, bool full = true)
		{
		}

		[Token(Token = "0x6000146")]
		[Address(RVA = "0x322EF4", Offset = "0x322EF4", VA = "0x322EF4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000147")]
		[Address(RVA = "0x322FAC", Offset = "0x322FAC", VA = "0x322FAC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000149")]
		[Address(RVA = "0x32312C", Offset = "0x32312C", VA = "0x32312C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x164F70", Offset = "0x164F70")]
		private static bool <get_Instance>m__0(NVRPlayer player)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200003B")]
	public enum NVRSDKIntegrations
	{
		[Token(Token = "0x4000180")]
		None,
		[Token(Token = "0x4000181")]
		FallbackNonVR,
		[Token(Token = "0x4000182")]
		SteamVR,
		[Token(Token = "0x4000183")]
		Oculus,
		[Token(Token = "0x4000184")]
		PicoVR
	}
	[Token(Token = "0x200003C")]
	public class NVRSlider : NVRInteractable
	{
		[Token(Token = "0x4000185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x164F80", Offset = "0x164F80")]
		public float CurrentValue;

		[Token(Token = "0x4000186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x164FB4", Offset = "0x164FB4")]
		public Transform StartPoint;

		[Token(Token = "0x4000187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x164FE8", Offset = "0x164FE8")]
		public Transform EndPoint;

		[Token(Token = "0x4000188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected float AttachedPositionMagic;

		[Token(Token = "0x4000189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		protected Transform PickupTransform;

		[Token(Token = "0x400018A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected Vector3 SliderPath;

		[Token(Token = "0x600014A")]
		[Address(RVA = "0x323228", Offset = "0x323228", VA = "0x323228")]
		public NVRSlider()
		{
		}

		[Token(Token = "0x600014B")]
		[Address(RVA = "0x323254", Offset = "0x323254", VA = "0x323254", Slot = "5")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600014C")]
		[Address(RVA = "0x323538", Offset = "0x323538", VA = "0x323538", Slot = "24")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x600014D")]
		[Address(RVA = "0x323948", Offset = "0x323948", VA = "0x323948", Slot = "12")]
		public override void BeginInteraction(NVRHand hand)
		{
		}

		[Token(Token = "0x600014E")]
		[Address(RVA = "0x323B50", Offset = "0x323B50", VA = "0x323B50", Slot = "15")]
		public override void EndInteraction()
		{
		}

		[Token(Token = "0x600014F")]
		[Address(RVA = "0x323888", Offset = "0x323888", VA = "0x323888")]
		protected Vector3 ProjectVelocityOnPath(Vector3 velocity, Vector3 path)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x200003D")]
	public class NVRSwitch : MonoBehaviour
	{
		[Token(Token = "0x400018B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool CurrentState;

		[Token(Token = "0x400018C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
		public bool LastState;

		[Token(Token = "0x400018D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
		private bool FixedState;

		[Token(Token = "0x400018E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform OnButton;

		[Token(Token = "0x400018F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Renderer OnButtonRenderer;

		[Token(Token = "0x4000190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform OffButton;

		[Token(Token = "0x4000191")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Renderer OffButtonRenderer;

		[Token(Token = "0x4000192")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Rigidbody Rigidbody;

		[Token(Token = "0x4000193")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float ForceMagic;

		[Token(Token = "0x6000150")]
		[Address(RVA = "0x323FC4", Offset = "0x323FC4", VA = "0x323FC4")]
		public NVRSwitch()
		{
		}

		[Token(Token = "0x6000151")]
		[Address(RVA = "0x323FE8", Offset = "0x323FE8", VA = "0x323FE8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000152")]
		[Address(RVA = "0x324360", Offset = "0x324360", VA = "0x324360")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000153")]
		[Address(RVA = "0x3246A4", Offset = "0x3246A4", VA = "0x3246A4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000154")]
		[Address(RVA = "0x32405C", Offset = "0x32405C", VA = "0x32405C")]
		private void SetRotation(bool forState)
		{
		}
	}
	[Token(Token = "0x200003E")]
	public class NVRUIIgnoreRaycast : MonoBehaviour, ICanvasRaycastFilter
	{
		[Token(Token = "0x6000155")]
		[Address(RVA = "0x3246B8", Offset = "0x3246B8", VA = "0x3246B8")]
		public NVRUIIgnoreRaycast()
		{
		}

		[Token(Token = "0x6000156")]
		[Address(RVA = "0x3246C0", Offset = "0x3246C0", VA = "0x3246C0", Slot = "4")]
		public bool IsRaycastLocationValid(Vector2 sp, Camera eventCamera)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200003F")]
	public class NVROculusInputDevice : NVRInputDevice
	{
		[Token(Token = "0x17000032")]
		public override bool IsCurrentlyTracked
		{
			[Token(Token = "0x6000158")]
			[Address(RVA = "0x320268", Offset = "0x320268", VA = "0x320268", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000157")]
		[Address(RVA = "0x320260", Offset = "0x320260", VA = "0x320260")]
		public NVROculusInputDevice()
		{
		}

		[Token(Token = "0x6000159")]
		[Address(RVA = "0x3202EC", Offset = "0x3202EC", VA = "0x3202EC", Slot = "12")]
		public override float GetAxis1D(NVRButtons button)
		{
			return default(float);
		}

		[Token(Token = "0x600015A")]
		[Address(RVA = "0x320370", Offset = "0x320370", VA = "0x320370", Slot = "13")]
		public override Vector2 GetAxis2D(NVRButtons button)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600015B")]
		[Address(RVA = "0x3203F4", Offset = "0x3203F4", VA = "0x3203F4", Slot = "10")]
		public override string GetDeviceName()
		{
			return null;
		}

		[Token(Token = "0x600015C")]
		[Address(RVA = "0x320478", Offset = "0x320478", VA = "0x320478", Slot = "22")]
		public override bool GetNearTouch(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x600015D")]
		[Address(RVA = "0x3204FC", Offset = "0x3204FC", VA = "0x3204FC", Slot = "20")]
		public override bool GetNearTouchDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x600015E")]
		[Address(RVA = "0x320580", Offset = "0x320580", VA = "0x320580", Slot = "21")]
		public override bool GetNearTouchUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x600015F")]
		[Address(RVA = "0x320604", Offset = "0x320604", VA = "0x320604", Slot = "16")]
		public override bool GetPress(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000160")]
		[Address(RVA = "0x320688", Offset = "0x320688", VA = "0x320688", Slot = "14")]
		public override bool GetPressDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000161")]
		[Address(RVA = "0x32070C", Offset = "0x32070C", VA = "0x32070C", Slot = "15")]
		public override bool GetPressUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000162")]
		[Address(RVA = "0x320790", Offset = "0x320790", VA = "0x320790", Slot = "19")]
		public override bool GetTouch(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000163")]
		[Address(RVA = "0x320814", Offset = "0x320814", VA = "0x320814", Slot = "17")]
		public override bool GetTouchDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000164")]
		[Address(RVA = "0x320898", Offset = "0x320898", VA = "0x320898", Slot = "18")]
		public override bool GetTouchUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000165")]
		[Address(RVA = "0x32091C", Offset = "0x32091C", VA = "0x32091C", Slot = "8")]
		public override bool ReadyToInitialize()
		{
			return default(bool);
		}

		[Token(Token = "0x6000166")]
		[Address(RVA = "0x3209A0", Offset = "0x3209A0", VA = "0x3209A0", Slot = "9")]
		public override Collider[] SetupDefaultColliders()
		{
			return null;
		}

		[Token(Token = "0x6000167")]
		[Address(RVA = "0x320A24", Offset = "0x320A24", VA = "0x320A24", Slot = "6")]
		public override Collider[] SetupDefaultPhysicalColliders(Transform ModelParent)
		{
			return null;
		}

		[Token(Token = "0x6000168")]
		[Address(RVA = "0x320AA8", Offset = "0x320AA8", VA = "0x320AA8", Slot = "7")]
		public override GameObject SetupDefaultRenderModel()
		{
			return null;
		}

		[Token(Token = "0x6000169")]
		[Address(RVA = "0x320B2C", Offset = "0x320B2C", VA = "0x320B2C", Slot = "11")]
		public override void TriggerHapticPulse(ushort durationMicroSec = 500, NVRButtons button = NVRButtons.Touchpad)
		{
		}
	}
	[Token(Token = "0x2000040")]
	public class NVROculusIntegration : NVRIntegration
	{
		[Token(Token = "0x600016A")]
		[Address(RVA = "0x320BB0", Offset = "0x320BB0", VA = "0x320BB0")]
		public NVROculusIntegration()
		{
		}

		[Token(Token = "0x600016B")]
		[Address(RVA = "0x320BB8", Offset = "0x320BB8", VA = "0x320BB8", Slot = "4")]
		public override void Initialize(NVRPlayer player)
		{
		}

		[Token(Token = "0x600016C")]
		[Address(RVA = "0x320BBC", Offset = "0x320BBC", VA = "0x320BBC", Slot = "5")]
		public override Vector3 GetPlayspaceBounds()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600016D")]
		[Address(RVA = "0x320C44", Offset = "0x320C44", VA = "0x320C44", Slot = "6")]
		public override bool IsHmdPresent()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000041")]
	public class NVRSteamVRInputDevice : NVRInputDevice
	{
		[Token(Token = "0x17000033")]
		public override bool IsCurrentlyTracked
		{
			[Token(Token = "0x600016F")]
			[Address(RVA = "0x323C54", Offset = "0x323C54", VA = "0x323C54", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600016E")]
		[Address(RVA = "0x323C4C", Offset = "0x323C4C", VA = "0x323C4C")]
		public NVRSteamVRInputDevice()
		{
		}

		[Token(Token = "0x6000170")]
		[Address(RVA = "0x323CF8", Offset = "0x323CF8", VA = "0x323CF8", Slot = "12")]
		public override float GetAxis1D(NVRButtons button)
		{
			return default(float);
		}

		[Token(Token = "0x6000171")]
		[Address(RVA = "0x323D0C", Offset = "0x323D0C", VA = "0x323D0C", Slot = "13")]
		public override Vector2 GetAxis2D(NVRButtons button)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000172")]
		[Address(RVA = "0x323D98", Offset = "0x323D98", VA = "0x323D98", Slot = "10")]
		public override string GetDeviceName()
		{
			return null;
		}

		[Token(Token = "0x6000173")]
		[Address(RVA = "0x323E28", Offset = "0x323E28", VA = "0x323E28", Slot = "22")]
		public override bool GetNearTouch(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000174")]
		[Address(RVA = "0x323E3C", Offset = "0x323E3C", VA = "0x323E3C", Slot = "20")]
		public override bool GetNearTouchDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000175")]
		[Address(RVA = "0x323E50", Offset = "0x323E50", VA = "0x323E50", Slot = "21")]
		public override bool GetNearTouchUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000176")]
		[Address(RVA = "0x323E64", Offset = "0x323E64", VA = "0x323E64", Slot = "16")]
		public override bool GetPress(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000177")]
		[Address(RVA = "0x323E78", Offset = "0x323E78", VA = "0x323E78", Slot = "14")]
		public override bool GetPressDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000178")]
		[Address(RVA = "0x323E8C", Offset = "0x323E8C", VA = "0x323E8C", Slot = "15")]
		public override bool GetPressUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000179")]
		[Address(RVA = "0x323EA0", Offset = "0x323EA0", VA = "0x323EA0", Slot = "19")]
		public override bool GetTouch(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x600017A")]
		[Address(RVA = "0x323EB4", Offset = "0x323EB4", VA = "0x323EB4", Slot = "17")]
		public override bool GetTouchDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x600017B")]
		[Address(RVA = "0x323EC8", Offset = "0x323EC8", VA = "0x323EC8", Slot = "18")]
		public override bool GetTouchUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x600017C")]
		[Address(RVA = "0x323EDC", Offset = "0x323EDC", VA = "0x323EDC", Slot = "8")]
		public override bool ReadyToInitialize()
		{
			return default(bool);
		}

		[Token(Token = "0x600017D")]
		[Address(RVA = "0x323EF0", Offset = "0x323EF0", VA = "0x323EF0", Slot = "9")]
		public override Collider[] SetupDefaultColliders()
		{
			return null;
		}

		[Token(Token = "0x600017E")]
		[Address(RVA = "0x323F04", Offset = "0x323F04", VA = "0x323F04", Slot = "6")]
		public override Collider[] SetupDefaultPhysicalColliders(Transform ModelParent)
		{
			return null;
		}

		[Token(Token = "0x600017F")]
		[Address(RVA = "0x323F18", Offset = "0x323F18", VA = "0x323F18", Slot = "7")]
		public override GameObject SetupDefaultRenderModel()
		{
			return null;
		}

		[Token(Token = "0x6000180")]
		[Address(RVA = "0x323F2C", Offset = "0x323F2C", VA = "0x323F2C", Slot = "11")]
		public override void TriggerHapticPulse(ushort durationMicroSec = 500, NVRButtons button = NVRButtons.Touchpad)
		{
		}

		[Token(Token = "0x6000181")]
		[Address(RVA = "0x323C68", Offset = "0x323C68", VA = "0x323C68")]
		private void PrintNotEnabledError()
		{
		}
	}
	[Token(Token = "0x2000042")]
	public class NVRSteamVRIntegration : NVRIntegration
	{
		[Token(Token = "0x6000182")]
		[Address(RVA = "0x3226D0", Offset = "0x3226D0", VA = "0x3226D0")]
		public NVRSteamVRIntegration()
		{
		}

		[Token(Token = "0x6000183")]
		[Address(RVA = "0x323F30", Offset = "0x323F30", VA = "0x323F30", Slot = "4")]
		public override void Initialize(NVRPlayer player)
		{
		}

		[Token(Token = "0x6000184")]
		[Address(RVA = "0x323F34", Offset = "0x323F34", VA = "0x323F34", Slot = "5")]
		public override Vector3 GetPlayspaceBounds()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000185")]
		[Address(RVA = "0x323FBC", Offset = "0x323FBC", VA = "0x323FBC", Slot = "6")]
		public override bool IsHmdPresent()
		{
			return default(bool);
		}
	}
}
[Token(Token = "0x2000043")]
public class OculusQuestFocusAware : MonoBehaviour
{
	[Token(Token = "0x20002EA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16502C", Offset = "0x16502C")]
	private sealed class <Start>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4001162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal NVRHand <gauche>__0;

		[Token(Token = "0x4001163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal NVRHand <droite>__0;

		[Token(Token = "0x4001164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal OculusQuestFocusAware $this;

		[Token(Token = "0x4001165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal object $current;

		[Token(Token = "0x4001166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal bool $disposing;

		[Token(Token = "0x4001167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal int $PC;

		[Token(Token = "0x17000249")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60016D7")]
			[Address(RVA = "0x32DC20", Offset = "0x32DC20", VA = "0x32DC20", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700024A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60016D8")]
			[Address(RVA = "0x32DC28", Offset = "0x32DC28", VA = "0x32DC28", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016D5")]
		[Address(RVA = "0x32D7E0", Offset = "0x32D7E0", VA = "0x32D7E0")]
		[DebuggerHidden]
		public <Start>c__Iterator0()
		{
		}

		[Token(Token = "0x60016D6")]
		[Address(RVA = "0x32D960", Offset = "0x32D960", VA = "0x32D960", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60016D9")]
		[Address(RVA = "0x32DC30", Offset = "0x32DC30", VA = "0x32DC30", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60016DA")]
		[Address(RVA = "0x32DC44", Offset = "0x32DC44", VA = "0x32DC44", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private bool menuOuvert;

	[Token(Token = "0x6000186")]
	[Address(RVA = "0x32D750", Offset = "0x32D750", VA = "0x32D750")]
	public OculusQuestFocusAware()
	{
	}

	[Token(Token = "0x6000187")]
	[Address(RVA = "0x32D760", Offset = "0x32D760", VA = "0x32D760")]
	[DebuggerHidden]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000188")]
	[Address(RVA = "0x32D7E8", Offset = "0x32D7E8", VA = "0x32D7E8")]
	private void OnApplicationFocus(bool focus)
	{
	}
}
[Token(Token = "0x2000044")]
public class PicoAchievementsManager : AchievementsManager
{
	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private bool _actif;

	[Token(Token = "0x6000189")]
	[Address(RVA = "0x3367BC", Offset = "0x3367BC", VA = "0x3367BC")]
	public PicoAchievementsManager()
	{
	}

	[Token(Token = "0x600018A")]
	[Address(RVA = "0x3367C4", Offset = "0x3367C4", VA = "0x3367C4", Slot = "4")]
	public override void Init()
	{
	}

	[Token(Token = "0x600018B")]
	[Address(RVA = "0x3368C8", Offset = "0x3368C8", VA = "0x3368C8")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x600018C")]
	[Address(RVA = "0x3369A4", Offset = "0x3369A4", VA = "0x3369A4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600018D")]
	[Address(RVA = "0x336A24", Offset = "0x336A24", VA = "0x336A24")]
	private void Update()
	{
	}

	[Token(Token = "0x600018E")]
	[Address(RVA = "0x336A34", Offset = "0x336A34", VA = "0x336A34")]
	private void InitCallback(Pvr_Message msg)
	{
	}

	[Token(Token = "0x600018F")]
	[Address(RVA = "0x336E74", Offset = "0x336E74", VA = "0x336E74")]
	private string ReplaceName(string name)
	{
		return null;
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0x33712C", Offset = "0x33712C", VA = "0x33712C", Slot = "6")]
	public override void AddOneToStat(string name)
	{
	}

	[Token(Token = "0x6000191")]
	[Address(RVA = "0x337804", Offset = "0x337804", VA = "0x337804")]
	private void AddCountCallback(Pvr_Message msg)
	{
	}

	[Token(Token = "0x6000192")]
	[Address(RVA = "0x337C28", Offset = "0x337C28", VA = "0x337C28", Slot = "7")]
	public override void TriggerAchievement(string name)
	{
	}

	[Token(Token = "0x6000193")]
	[Address(RVA = "0x337DD8", Offset = "0x337DD8", VA = "0x337DD8")]
	private void UnlockCallback(Pvr_Message msg)
	{
	}

	[Token(Token = "0x6000194")]
	[Address(RVA = "0x3381FC", Offset = "0x3381FC", VA = "0x3381FC", Slot = "8")]
	public override void AddOneToCollection(string name, string field)
	{
	}

	[Token(Token = "0x6000195")]
	[Address(RVA = "0x3385D8", Offset = "0x3385D8", VA = "0x3385D8")]
	private void AddFieldsCallback(Pvr_Message msg)
	{
	}

	[Token(Token = "0x6000196")]
	[Address(RVA = "0x3389FC", Offset = "0x3389FC", VA = "0x3389FC", Slot = "9")]
	protected override void CheckFullCompletion()
	{
	}

	[Token(Token = "0x6000197")]
	[Address(RVA = "0x338AC8", Offset = "0x338AC8", VA = "0x338AC8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16508C", Offset = "0x16508C")]
	private void <CheckFullCompletion>m__0(Pvr_Message<Pvr_AchievementProgressList> msg)
	{
	}
}
[Token(Token = "0x2000045")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x16509C", Offset = "0x16509C")]
public class PicoEntitlementCheck : MonoBehaviour
{
	[Token(Token = "0x20002EB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1650C4", Offset = "0x1650C4")]
	private sealed class <FailedEntitlement>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4001168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal object $current;

		[Token(Token = "0x4001169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal bool $disposing;

		[Token(Token = "0x400116A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal int $PC;

		[Token(Token = "0x1700024B")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60016DD")]
			[Address(RVA = "0x3395EC", Offset = "0x3395EC", VA = "0x3395EC", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700024C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60016DE")]
			[Address(RVA = "0x3395F4", Offset = "0x3395F4", VA = "0x3395F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016DB")]
		[Address(RVA = "0x339420", Offset = "0x339420", VA = "0x339420")]
		[DebuggerHidden]
		public <FailedEntitlement>c__Iterator0()
		{
		}

		[Token(Token = "0x60016DC")]
		[Address(RVA = "0x339428", Offset = "0x339428", VA = "0x339428", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60016DF")]
		[Address(RVA = "0x3395FC", Offset = "0x3395FC", VA = "0x3395FC", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60016E0")]
		[Address(RVA = "0x339610", Offset = "0x339610", VA = "0x339610", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0x338D88", Offset = "0x338D88", VA = "0x338D88")]
	public PicoEntitlementCheck()
	{
	}

	[Token(Token = "0x6000199")]
	[Address(RVA = "0x338D90", Offset = "0x338D90", VA = "0x338D90")]
	private void Awake()
	{
	}

	[Token(Token = "0x600019A")]
	[Address(RVA = "0x338E98", Offset = "0x338E98", VA = "0x338E98")]
	private void HandleEntitlementCheckResult(int resultCode)
	{
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0x3393B4", Offset = "0x3393B4", VA = "0x3393B4")]
	[DebuggerHidden]
	private IEnumerator FailedEntitlement()
	{
		return null;
	}
}
namespace NewtonVR
{
	[Token(Token = "0x2000046")]
	public class TrebuchetNVRPicoInputDevice : NVRInputDevice
	{
		[Token(Token = "0x17000034")]
		public override bool IsCurrentlyTracked
		{
			[Token(Token = "0x600019E")]
			[Address(RVA = "0x3246D8", Offset = "0x3246D8", VA = "0x3246D8", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600019C")]
		[Address(RVA = "0x3246C8", Offset = "0x3246C8", VA = "0x3246C8")]
		public TrebuchetNVRPicoInputDevice()
		{
		}

		[Token(Token = "0x600019D")]
		[Address(RVA = "0x3246D0", Offset = "0x3246D0", VA = "0x3246D0", Slot = "4")]
		public override void Initialize(NVRHand hand)
		{
		}

		[Token(Token = "0x600019F")]
		[Address(RVA = "0x3246E0", Offset = "0x3246E0", VA = "0x3246E0", Slot = "6")]
		public override Collider[] SetupDefaultPhysicalColliders(Transform ModelParent)
		{
			return null;
		}

		[Token(Token = "0x60001A0")]
		[Address(RVA = "0x32474C", Offset = "0x32474C", VA = "0x32474C", Slot = "7")]
		public override GameObject SetupDefaultRenderModel()
		{
			return null;
		}

		[Token(Token = "0x60001A1")]
		[Address(RVA = "0x3247B8", Offset = "0x3247B8", VA = "0x3247B8", Slot = "8")]
		public override bool ReadyToInitialize()
		{
			return default(bool);
		}

		[Token(Token = "0x60001A2")]
		[Address(RVA = "0x3247C0", Offset = "0x3247C0", VA = "0x3247C0", Slot = "9")]
		public override Collider[] SetupDefaultColliders()
		{
			return null;
		}

		[Token(Token = "0x60001A3")]
		[Address(RVA = "0x32482C", Offset = "0x32482C", VA = "0x32482C", Slot = "10")]
		public override string GetDeviceName()
		{
			return null;
		}

		[Token(Token = "0x60001A4")]
		[Address(RVA = "0x324888", Offset = "0x324888", VA = "0x324888", Slot = "11")]
		public override void TriggerHapticPulse(ushort durationMicroSec = 500, NVRButtons button = NVRButtons.Touchpad)
		{
		}

		[Token(Token = "0x60001A5")]
		[Address(RVA = "0x324960", Offset = "0x324960", VA = "0x324960")]
		private Pvr_KeyCode TranslateButton(NVRButtons button)
		{
			return default(Pvr_KeyCode);
		}

		[Token(Token = "0x60001A6")]
		[Address(RVA = "0x324A50", Offset = "0x324A50", VA = "0x324A50", Slot = "14")]
		public override bool GetPressDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x60001A7")]
		[Address(RVA = "0x324A98", Offset = "0x324A98", VA = "0x324A98", Slot = "15")]
		public override bool GetPressUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x60001A8")]
		[Address(RVA = "0x324AE0", Offset = "0x324AE0", VA = "0x324AE0", Slot = "16")]
		public override bool GetPress(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x60001A9")]
		[Address(RVA = "0x324B28", Offset = "0x324B28", VA = "0x324B28", Slot = "12")]
		public override float GetAxis1D(NVRButtons button)
		{
			return default(float);
		}

		[Token(Token = "0x60001AA")]
		[Address(RVA = "0x324B68", Offset = "0x324B68", VA = "0x324B68", Slot = "13")]
		public override Vector2 GetAxis2D(NVRButtons button)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60001AB")]
		[Address(RVA = "0x324C2C", Offset = "0x324C2C", VA = "0x324C2C", Slot = "17")]
		public override bool GetTouchDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x60001AC")]
		[Address(RVA = "0x324C34", Offset = "0x324C34", VA = "0x324C34", Slot = "18")]
		public override bool GetTouchUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x60001AD")]
		[Address(RVA = "0x324C3C", Offset = "0x324C3C", VA = "0x324C3C", Slot = "19")]
		public override bool GetTouch(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x60001AE")]
		[Address(RVA = "0x324C44", Offset = "0x324C44", VA = "0x324C44", Slot = "20")]
		public override bool GetNearTouchDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x60001AF")]
		[Address(RVA = "0x324C4C", Offset = "0x324C4C", VA = "0x324C4C", Slot = "21")]
		public override bool GetNearTouchUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x60001B0")]
		[Address(RVA = "0x324C54", Offset = "0x324C54", VA = "0x324C54", Slot = "22")]
		public override bool GetNearTouch(NVRButtons button)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000047")]
	public class TrebuchetNVRPicoIntegration : NVRIntegration
	{
		[Token(Token = "0x60001B1")]
		[Address(RVA = "0x322D14", Offset = "0x322D14", VA = "0x322D14")]
		public TrebuchetNVRPicoIntegration()
		{
		}

		[Token(Token = "0x60001B2")]
		[Address(RVA = "0x324C5C", Offset = "0x324C5C", VA = "0x324C5C", Slot = "4")]
		public override void Initialize(NVRPlayer player)
		{
		}

		[Token(Token = "0x60001B3")]
		[Address(RVA = "0x324D7C", Offset = "0x324D7C", VA = "0x324D7C", Slot = "5")]
		public override Vector3 GetPlayspaceBounds()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60001B4")]
		[Address(RVA = "0x324E5C", Offset = "0x324E5C", VA = "0x324E5C", Slot = "6")]
		public override bool IsHmdPresent()
		{
			return default(bool);
		}
	}
}
[Token(Token = "0x2000048")]
public class NoSteamPlatformManager : PlatformManager
{
	[Token(Token = "0x20002EC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x165134", Offset = "0x165134")]
	private sealed class <NoSteamMessage>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x400116B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal OculusEntitlementWarning <_oculusEntitlementWarning>__0;

		[Token(Token = "0x400116C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal TextMeshProUGUI <text>__0;

		[Token(Token = "0x400116D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal NoSteamPlatformManager $this;

		[Token(Token = "0x400116E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal object $current;

		[Token(Token = "0x400116F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal bool $disposing;

		[Token(Token = "0x4001170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal int $PC;

		[Token(Token = "0x1700024D")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60016E3")]
			[Address(RVA = "0x3251DC", Offset = "0x3251DC", VA = "0x3251DC", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700024E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60016E4")]
			[Address(RVA = "0x3251E4", Offset = "0x3251E4", VA = "0x3251E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016E1")]
		[Address(RVA = "0x324F38", Offset = "0x324F38", VA = "0x324F38")]
		[DebuggerHidden]
		public <NoSteamMessage>c__Iterator0()
		{
		}

		[Token(Token = "0x60016E2")]
		[Address(RVA = "0x324F40", Offset = "0x324F40", VA = "0x324F40", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60016E5")]
		[Address(RVA = "0x3251EC", Offset = "0x3251EC", VA = "0x3251EC", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60016E6")]
		[Address(RVA = "0x325200", Offset = "0x325200", VA = "0x325200", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x60001B5")]
	[Address(RVA = "0x324E84", Offset = "0x324E84", VA = "0x324E84")]
	public NoSteamPlatformManager()
	{
	}

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0x324E94", Offset = "0x324E94", VA = "0x324E94", Slot = "4")]
	public override void Init()
	{
	}

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0x324EB8", Offset = "0x324EB8", VA = "0x324EB8")]
	[DebuggerHidden]
	private IEnumerator NoSteamMessage()
	{
		return null;
	}
}
[Token(Token = "0x2000049")]
public class VROnlineAchievementManager : AchievementsManager
{
	[Token(Token = "0x60001B8")]
	[Address(RVA = "0x4D6308", Offset = "0x4D6308", VA = "0x4D6308")]
	public VROnlineAchievementManager()
	{
	}
}
[Token(Token = "0x200004A")]
public class VROnlinePlatformManager : PlatformManager
{
	[Token(Token = "0x60001B9")]
	[Address(RVA = "0x4D6310", Offset = "0x4D6310", VA = "0x4D6310")]
	public VROnlinePlatformManager()
	{
	}

	[Token(Token = "0x60001BA")]
	[Address(RVA = "0x4D6318", Offset = "0x4D6318", VA = "0x4D6318", Slot = "4")]
	public override void Init()
	{
	}

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0x4D631C", Offset = "0x4D631C", VA = "0x4D631C", Slot = "5")]
	public override string GetDefaultLangagueString()
	{
		return null;
	}
}
[Token(Token = "0x200004B")]
public class MenuManager : MonoBehaviour
{
	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MenuManager Instance;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public DataToLoad[] BaseLevel;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject LoadingDataPrefab;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public BaseShaderValue StaticShaderValues;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int PrisonUnlock;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int ArcadeHighScore;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public bool loading;

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0x248E74", Offset = "0x248E74", VA = "0x248E74")]
	public MenuManager()
	{
	}

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0x248E7C", Offset = "0x248E7C", VA = "0x248E7C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0x24924C", Offset = "0x24924C", VA = "0x24924C")]
	private void Start()
	{
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0x249250", Offset = "0x249250", VA = "0x249250")]
	public void LoadGlobalProgression()
	{
	}

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0x24953C", Offset = "0x24953C", VA = "0x24953C")]
	public void LoadLevel(int ID)
	{
	}

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0x249A10", Offset = "0x249A10", VA = "0x249A10")]
	public void loadTutorial()
	{
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0x249AF8", Offset = "0x249AF8", VA = "0x249AF8")]
	public void loadOption()
	{
	}

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0x249B94", Offset = "0x249B94", VA = "0x249B94")]
	public void LoadSandbox()
	{
	}

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0x249CE4", Offset = "0x249CE4", VA = "0x249CE4")]
	public void LoadArcade()
	{
	}

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0x24A1E8", Offset = "0x24A1E8", VA = "0x24A1E8")]
	public void FirstLoad()
	{
	}

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0x24A438", Offset = "0x24A438", VA = "0x24A438")]
	public void LoadSave(DataToLoad datapkg)
	{
	}
}
[Token(Token = "0x200004C")]
public class GuidanceManager : MonoBehaviour
{
	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GuidanceManager Instance;

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool FirstLoad;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
	public bool foundOldSetting;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
	public bool confortChanged;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string TutorialsDone;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool HadSearchTutorial;

	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	private bool fileUpgraded;

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0x2228B4", Offset = "0x2228B4", VA = "0x2228B4")]
	public GuidanceManager()
	{
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0x2228BC", Offset = "0x2228BC", VA = "0x2228BC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0x222A84", Offset = "0x222A84", VA = "0x222A84")]
	private void Init()
	{
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0x222EE0", Offset = "0x222EE0", VA = "0x222EE0")]
	private GlobalProgressionDataV2 UpgradeGlobalData(GlobalProgressionData GPD)
	{
		return null;
	}
}
[Token(Token = "0x200004D")]
public class PreloadingManager : PreloadingManagerCommon
{
	[Token(Token = "0x17000035")]
	public override string ConfigDirectoryPath
	{
		[Token(Token = "0x60001CD")]
		[Address(RVA = "0x33D134", Offset = "0x33D134", VA = "0x33D134", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000036")]
	public override string SavesDirectoryPath
	{
		[Token(Token = "0x60001CE")]
		[Address(RVA = "0x33D1B4", Offset = "0x33D1B4", VA = "0x33D1B4", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0x33D124", Offset = "0x33D124", VA = "0x33D124")]
	public PreloadingManager()
	{
	}

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0x33D234", Offset = "0x33D234", VA = "0x33D234", Slot = "6")]
	public override Stream GetReadStream(string path)
	{
		return null;
	}

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0x33D264", Offset = "0x33D264", VA = "0x33D264", Slot = "7")]
	public override Stream GetWriteStream(string path)
	{
		return null;
	}

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0x33D294", Offset = "0x33D294", VA = "0x33D294", Slot = "9")]
	public override bool Exists(string path)
	{
		return default(bool);
	}

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0x33D2A0", Offset = "0x33D2A0", VA = "0x33D2A0", Slot = "10")]
	public override void Delete(string path)
	{
	}

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0x33D2AC", Offset = "0x33D2AC", VA = "0x33D2AC", Slot = "8")]
	public override string[] GetDirectoryFiles(string path)
	{
		return null;
	}
}
[Token(Token = "0x200004E")]
public class SaveManager : SaveManagerCommon
{
	[Token(Token = "0x17000037")]
	public override string ConfigDirectoryPath
	{
		[Token(Token = "0x60001D5")]
		[Address(RVA = "0x292BE0", Offset = "0x292BE0", VA = "0x292BE0", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000038")]
	public override string GlobalConfigPath
	{
		[Token(Token = "0x60001D6")]
		[Address(RVA = "0x292C60", Offset = "0x292C60", VA = "0x292C60", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0x292BD0", Offset = "0x292BD0", VA = "0x292BD0")]
	public SaveManager()
	{
	}

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0x292D30", Offset = "0x292D30", VA = "0x292D30", Slot = "6")]
	public override string GetSaveIDPath(int saveIDToSave)
	{
		return null;
	}

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0x292E84", Offset = "0x292E84", VA = "0x292E84", Slot = "7")]
	public override Stream GetReadStream(string path)
	{
		return null;
	}

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0x292EB4", Offset = "0x292EB4", VA = "0x292EB4", Slot = "8")]
	public override Stream GetWriteStream(string path)
	{
		return null;
	}

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0x292EE4", Offset = "0x292EE4", VA = "0x292EE4", Slot = "9")]
	public override bool Exists(string path)
	{
		return default(bool);
	}

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0x292EF0", Offset = "0x292EF0", VA = "0x292EF0", Slot = "10")]
	public override void Delete(string path)
	{
	}
}
namespace UnityToolbag
{
	[Token(Token = "0x200004F")]
	public static class StandardPaths
	{
		[Token(Token = "0x2000050")]
		public static class Windows
		{
			[Token(Token = "0x60001E5")]
			[Address(RVA = "0x4D4C54", Offset = "0x4D4C54", VA = "0x4D4C54")]
			public static string GetPath(string subdirectory)
			{
				return null;
			}

			[Token(Token = "0x60001E6")]
			[Address(RVA = "0x4D4D44", Offset = "0x4D4D44", VA = "0x4D4D44")]
			public static string GetPath()
			{
				return null;
			}
		}

		[Token(Token = "0x2000051")]
		private static class OSX
		{
			[Token(Token = "0x60001E7")]
			[Address(RVA = "0x4D4194", Offset = "0x4D4194", VA = "0x4D4194")]
			public static string GetApplicationSupportPath(string subdirectory)
			{
				return null;
			}

			[Token(Token = "0x60001E8")]
			[Address(RVA = "0x4D48D0", Offset = "0x4D48D0", VA = "0x4D48D0")]
			public static string GetLogsPath()
			{
				return null;
			}
		}

		[Token(Token = "0x2000052")]
		private static class Linux
		{
			[Token(Token = "0x60001E9")]
			[Address(RVA = "0x4D4290", Offset = "0x4D4290", VA = "0x4D4290")]
			public static string GetSaveDirectory()
			{
				return null;
			}

			[Token(Token = "0x60001EA")]
			[Address(RVA = "0x4D45B8", Offset = "0x4D45B8", VA = "0x4D45B8")]
			public static string GetConfigDirectory()
			{
				return null;
			}

			[Token(Token = "0x60001EB")]
			[Address(RVA = "0x4D49BC", Offset = "0x4D49BC", VA = "0x4D49BC")]
			public static string GetLogDirectory()
			{
				return null;
			}
		}

		[Token(Token = "0x40001A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1651A4", Offset = "0x1651A4")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x1651A4", Offset = "0x1651A4")]
		private static bool <includeCompanyName>k__BackingField;

		[Token(Token = "0x17000039")]
		public static bool includeCompanyName
		{
			[Token(Token = "0x60001DD")]
			[Address(RVA = "0x4D3E20", Offset = "0x4D3E20", VA = "0x4D3E20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1651D8", Offset = "0x1651D8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60001DE")]
			[Address(RVA = "0x4D3D90", Offset = "0x4D3D90", VA = "0x4D3D90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1651E8", Offset = "0x1651E8")]
			set
			{
			}
		}

		[Token(Token = "0x1700003A")]
		public static string saveDataDirectory
		{
			[Token(Token = "0x60001DF")]
			[Address(RVA = "0x4D3EAC", Offset = "0x4D3EAC", VA = "0x4D3EAC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003B")]
		public static string configDirectory
		{
			[Token(Token = "0x60001E0")]
			[Address(RVA = "0x4D43E0", Offset = "0x4D43E0", VA = "0x4D43E0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003C")]
		public static string logDirectory
		{
			[Token(Token = "0x60001E1")]
			[Address(RVA = "0x4D4708", Offset = "0x4D4708", VA = "0x4D4708")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001DC")]
		[Address(RVA = "0x4D3D88", Offset = "0x4D3D88", VA = "0x4D3D88")]
		static StandardPaths()
		{
		}

		[Token(Token = "0x60001E2")]
		[Address(RVA = "0x4D4A44", Offset = "0x4D4A44", VA = "0x4D4A44")]
		private static string AppendProductPath(string path)
		{
			return null;
		}

		[Token(Token = "0x60001E3")]
		[Address(RVA = "0x4D4084", Offset = "0x4D4084", VA = "0x4D4084")]
		private static string AppendDirectory(string path, string dir)
		{
			return null;
		}

		[Token(Token = "0x60001E4")]
		[Address(RVA = "0x4D4B5C", Offset = "0x4D4B5C", VA = "0x4D4B5C")]
		private static string CleanForPath(string str)
		{
			return null;
		}
	}
}
[Token(Token = "0x2000053")]
public class AkSoundEngine
{
	[Token(Token = "0x200028F")]
	public delegate ulong GameObjectHashFunction(GameObject gameObject);

	[Token(Token = "0x40001A5")]
	public const int AK_SIMD_ALIGNMENT = 16;

	[Token(Token = "0x40001A6")]
	public const int AK_BUFFER_ALIGNMENT = 16;

	[Token(Token = "0x40001A7")]
	public const int AK_MAX_PATH = 260;

	[Token(Token = "0x40001A8")]
	public const int AK_BANK_PLATFORM_DATA_ALIGNMENT = 16;

	[Token(Token = "0x40001A9")]
	public const uint AK_INVALID_PLUGINID = uint.MaxValue;

	[Token(Token = "0x40001AA")]
	public const ulong AK_INVALID_GAME_OBJECT = ulong.MaxValue;

	[Token(Token = "0x40001AB")]
	public const uint AK_INVALID_UNIQUE_ID = 0u;

	[Token(Token = "0x40001AC")]
	public const uint AK_INVALID_RTPC_ID = 0u;

	[Token(Token = "0x40001AD")]
	public const uint AK_INVALID_LISTENER_INDEX = uint.MaxValue;

	[Token(Token = "0x40001AE")]
	public const uint AK_INVALID_PLAYING_ID = 0u;

	[Token(Token = "0x40001AF")]
	public const uint AK_DEFAULT_SWITCH_STATE = 0u;

	[Token(Token = "0x40001B0")]
	public const int AK_INVALID_POOL_ID = -1;

	[Token(Token = "0x40001B1")]
	public const int AK_DEFAULT_POOL_ID = -1;

	[Token(Token = "0x40001B2")]
	public const uint AK_INVALID_AUX_ID = 0u;

	[Token(Token = "0x40001B3")]
	public const uint AK_INVALID_FILE_ID = uint.MaxValue;

	[Token(Token = "0x40001B4")]
	public const uint AK_INVALID_DEVICE_ID = uint.MaxValue;

	[Token(Token = "0x40001B5")]
	public const uint AK_INVALID_BANK_ID = 0u;

	[Token(Token = "0x40001B6")]
	public const uint AK_FALLBACK_ARGUMENTVALUE_ID = 0u;

	[Token(Token = "0x40001B7")]
	public const uint AK_INVALID_CHANNELMASK = 0u;

	[Token(Token = "0x40001B8")]
	public const uint AK_INVALID_OUTPUT_DEVICE_ID = 0u;

	[Token(Token = "0x40001B9")]
	public const uint AK_MIXER_FX_SLOT = uint.MaxValue;

	[Token(Token = "0x40001BA")]
	public const ulong AK_DEFAULT_LISTENER_OBJ = 0uL;

	[Token(Token = "0x40001BB")]
	public const uint AK_DEFAULT_PRIORITY = 50u;

	[Token(Token = "0x40001BC")]
	public const uint AK_MIN_PRIORITY = 0u;

	[Token(Token = "0x40001BD")]
	public const uint AK_MAX_PRIORITY = 100u;

	[Token(Token = "0x40001BE")]
	public const uint AK_DEFAULT_BANK_IO_PRIORITY = 50u;

	[Token(Token = "0x40001BF")]
	public const double AK_DEFAULT_BANK_THROUGHPUT = 1048.576;

	[Token(Token = "0x40001C0")]
	public const uint AKCOMPANYID_AUDIOKINETIC = 0u;

	[Token(Token = "0x40001C1")]
	public const uint AK_LISTENERS_MASK_ALL = uint.MaxValue;

	[Token(Token = "0x40001C2")]
	public const int NULL = 0;

	[Token(Token = "0x40001C3")]
	public const int AKCURVEINTERPOLATION_NUM_STORAGE_BIT = 5;

	[Token(Token = "0x40001C4")]
	public const int AK_MAX_LANGUAGE_NAME_SIZE = 32;

	[Token(Token = "0x40001C5")]
	public const int AKCOMPANYID_AUDIOKINETIC_EXTERNAL = 1;

	[Token(Token = "0x40001C6")]
	public const int AKCOMPANYID_MCDSP = 256;

	[Token(Token = "0x40001C7")]
	public const int AKCOMPANYID_WAVEARTS = 257;

	[Token(Token = "0x40001C8")]
	public const int AKCOMPANYID_PHONETICARTS = 258;

	[Token(Token = "0x40001C9")]
	public const int AKCOMPANYID_IZOTOPE = 259;

	[Token(Token = "0x40001CA")]
	public const int AKCOMPANYID_CRANKCASEAUDIO = 261;

	[Token(Token = "0x40001CB")]
	public const int AKCOMPANYID_IOSONO = 262;

	[Token(Token = "0x40001CC")]
	public const int AKCOMPANYID_AUROTECHNOLOGIES = 263;

	[Token(Token = "0x40001CD")]
	public const int AKCOMPANYID_DOLBY = 264;

	[Token(Token = "0x40001CE")]
	public const int AKCOMPANYID_TWOBIGEARS = 265;

	[Token(Token = "0x40001CF")]
	public const int AKCOMPANYID_OCULUS = 266;

	[Token(Token = "0x40001D0")]
	public const int AKCOMPANYID_BLUERIPPLESOUND = 267;

	[Token(Token = "0x40001D1")]
	public const int AKCOMPANYID_ENZIEN = 268;

	[Token(Token = "0x40001D2")]
	public const int AKCOMPANYID_KROTOS = 269;

	[Token(Token = "0x40001D3")]
	public const int AKCOMPANYID_NURULIZE = 270;

	[Token(Token = "0x40001D4")]
	public const int AKCOMPANYID_SUPERPOWERED = 271;

	[Token(Token = "0x40001D5")]
	public const int AKCOMPANYID_GOOGLE = 272;

	[Token(Token = "0x40001D6")]
	public const int AKCOMPANYID_VISISONICS = 277;

	[Token(Token = "0x40001D7")]
	public const int AKCODECID_BANK = 0;

	[Token(Token = "0x40001D8")]
	public const int AKCODECID_PCM = 1;

	[Token(Token = "0x40001D9")]
	public const int AKCODECID_ADPCM = 2;

	[Token(Token = "0x40001DA")]
	public const int AKCODECID_XMA = 3;

	[Token(Token = "0x40001DB")]
	public const int AKCODECID_VORBIS = 4;

	[Token(Token = "0x40001DC")]
	public const int AKCODECID_WIIADPCM = 5;

	[Token(Token = "0x40001DD")]
	public const int AKCODECID_PCMEX = 7;

	[Token(Token = "0x40001DE")]
	public const int AKCODECID_EXTERNAL_SOURCE = 8;

	[Token(Token = "0x40001DF")]
	public const int AKCODECID_XWMA = 9;

	[Token(Token = "0x40001E0")]
	public const int AKCODECID_AAC = 10;

	[Token(Token = "0x40001E1")]
	public const int AKCODECID_FILE_PACKAGE = 11;

	[Token(Token = "0x40001E2")]
	public const int AKCODECID_ATRAC9 = 12;

	[Token(Token = "0x40001E3")]
	public const int AKCODECID_VAG = 13;

	[Token(Token = "0x40001E4")]
	public const int AKCODECID_PROFILERCAPTURE = 14;

	[Token(Token = "0x40001E5")]
	public const int AKCODECID_ANALYSISFILE = 15;

	[Token(Token = "0x40001E6")]
	public const int AKCODECID_MIDI = 16;

	[Token(Token = "0x40001E7")]
	public const int AKCODECID_OPUSNX = 17;

	[Token(Token = "0x40001E8")]
	public const int AKCODECID_CAF = 18;

	[Token(Token = "0x40001E9")]
	public const int AKCODECID_AKOPUS = 19;

	[Token(Token = "0x40001EA")]
	public const int AKPLUGINID_METER = 129;

	[Token(Token = "0x40001EB")]
	public const int AKPLUGINID_RECORDER = 132;

	[Token(Token = "0x40001EC")]
	public const int AKEXTENSIONID_SPATIALAUDIO = 800;

	[Token(Token = "0x40001ED")]
	public const int AKEXTENSIONID_INTERACTIVEMUSIC = 801;

	[Token(Token = "0x40001EE")]
	public const int AK_WAVE_FORMAT_VAG = 65531;

	[Token(Token = "0x40001EF")]
	public const int AK_WAVE_FORMAT_AT9 = 65532;

	[Token(Token = "0x40001F0")]
	public const int AK_WAVE_FORMAT_VORBIS = 65535;

	[Token(Token = "0x40001F1")]
	public const int AK_WAVE_FORMAT_AAC = 43712;

	[Token(Token = "0x40001F2")]
	public const int AK_WAVE_FORMAT_OPUSNX = 12345;

	[Token(Token = "0x40001F3")]
	public const int AK_WAVE_FORMAT_OPUS = 12352;

	[Token(Token = "0x40001F4")]
	public const int WAVE_FORMAT_XMA2 = 358;

	[Token(Token = "0x40001F5")]
	public const int AK_PANNER_NUM_STORAGE_BITS = 3;

	[Token(Token = "0x40001F6")]
	public const int AK_POSSOURCE_NUM_STORAGE_BITS = 3;

	[Token(Token = "0x40001F7")]
	public const int AK_SPAT_NUM_STORAGE_BITS = 3;

	[Token(Token = "0x40001F8")]
	public const int AK_MAX_BITS_METERING_FLAGS = 5;

	[Token(Token = "0x40001F9")]
	public const int AK_OS_STRUCT_ALIGN = 4;

	[Token(Token = "0x40001FA")]
	public const int AK_64B_OS_STRUCT_ALIGN = 8;

	[Token(Token = "0x40001FB")]
	public const bool AK_ASYNC_OPEN_DEFAULT = false;

	[Token(Token = "0x40001FC")]
	public const int AK_COMM_DEFAULT_DISCOVERY_PORT = 24024;

	[Token(Token = "0x40001FD")]
	public const int AK_MIDI_EVENT_TYPE_INVALID = 0;

	[Token(Token = "0x40001FE")]
	public const int AK_MIDI_EVENT_TYPE_NOTE_OFF = 128;

	[Token(Token = "0x40001FF")]
	public const int AK_MIDI_EVENT_TYPE_NOTE_ON = 144;

	[Token(Token = "0x4000200")]
	public const int AK_MIDI_EVENT_TYPE_NOTE_AFTERTOUCH = 160;

	[Token(Token = "0x4000201")]
	public const int AK_MIDI_EVENT_TYPE_CONTROLLER = 176;

	[Token(Token = "0x4000202")]
	public const int AK_MIDI_EVENT_TYPE_PROGRAM_CHANGE = 192;

	[Token(Token = "0x4000203")]
	public const int AK_MIDI_EVENT_TYPE_CHANNEL_AFTERTOUCH = 208;

	[Token(Token = "0x4000204")]
	public const int AK_MIDI_EVENT_TYPE_PITCH_BEND = 224;

	[Token(Token = "0x4000205")]
	public const int AK_MIDI_EVENT_TYPE_SYSEX = 240;

	[Token(Token = "0x4000206")]
	public const int AK_MIDI_EVENT_TYPE_ESCAPE = 247;

	[Token(Token = "0x4000207")]
	public const int AK_MIDI_EVENT_TYPE_META = 255;

	[Token(Token = "0x4000208")]
	public const int AK_MIDI_CC_BANK_SELECT_COARSE = 0;

	[Token(Token = "0x4000209")]
	public const int AK_MIDI_CC_MOD_WHEEL_COARSE = 1;

	[Token(Token = "0x400020A")]
	public const int AK_MIDI_CC_BREATH_CTRL_COARSE = 2;

	[Token(Token = "0x400020B")]
	public const int AK_MIDI_CC_CTRL_3_COARSE = 3;

	[Token(Token = "0x400020C")]
	public const int AK_MIDI_CC_FOOT_PEDAL_COARSE = 4;

	[Token(Token = "0x400020D")]
	public const int AK_MIDI_CC_PORTAMENTO_COARSE = 5;

	[Token(Token = "0x400020E")]
	public const int AK_MIDI_CC_DATA_ENTRY_COARSE = 6;

	[Token(Token = "0x400020F")]
	public const int AK_MIDI_CC_VOLUME_COARSE = 7;

	[Token(Token = "0x4000210")]
	public const int AK_MIDI_CC_BALANCE_COARSE = 8;

	[Token(Token = "0x4000211")]
	public const int AK_MIDI_CC_CTRL_9_COARSE = 9;

	[Token(Token = "0x4000212")]
	public const int AK_MIDI_CC_PAN_POSITION_COARSE = 10;

	[Token(Token = "0x4000213")]
	public const int AK_MIDI_CC_EXPRESSION_COARSE = 11;

	[Token(Token = "0x4000214")]
	public const int AK_MIDI_CC_EFFECT_CTRL_1_COARSE = 12;

	[Token(Token = "0x4000215")]
	public const int AK_MIDI_CC_EFFECT_CTRL_2_COARSE = 13;

	[Token(Token = "0x4000216")]
	public const int AK_MIDI_CC_CTRL_14_COARSE = 14;

	[Token(Token = "0x4000217")]
	public const int AK_MIDI_CC_CTRL_15_COARSE = 15;

	[Token(Token = "0x4000218")]
	public const int AK_MIDI_CC_GEN_SLIDER_1 = 16;

	[Token(Token = "0x4000219")]
	public const int AK_MIDI_CC_GEN_SLIDER_2 = 17;

	[Token(Token = "0x400021A")]
	public const int AK_MIDI_CC_GEN_SLIDER_3 = 18;

	[Token(Token = "0x400021B")]
	public const int AK_MIDI_CC_GEN_SLIDER_4 = 19;

	[Token(Token = "0x400021C")]
	public const int AK_MIDI_CC_CTRL_20_COARSE = 20;

	[Token(Token = "0x400021D")]
	public const int AK_MIDI_CC_CTRL_21_COARSE = 21;

	[Token(Token = "0x400021E")]
	public const int AK_MIDI_CC_CTRL_22_COARSE = 22;

	[Token(Token = "0x400021F")]
	public const int AK_MIDI_CC_CTRL_23_COARSE = 23;

	[Token(Token = "0x4000220")]
	public const int AK_MIDI_CC_CTRL_24_COARSE = 24;

	[Token(Token = "0x4000221")]
	public const int AK_MIDI_CC_CTRL_25_COARSE = 25;

	[Token(Token = "0x4000222")]
	public const int AK_MIDI_CC_CTRL_26_COARSE = 26;

	[Token(Token = "0x4000223")]
	public const int AK_MIDI_CC_CTRL_27_COARSE = 27;

	[Token(Token = "0x4000224")]
	public const int AK_MIDI_CC_CTRL_28_COARSE = 28;

	[Token(Token = "0x4000225")]
	public const int AK_MIDI_CC_CTRL_29_COARSE = 29;

	[Token(Token = "0x4000226")]
	public const int AK_MIDI_CC_CTRL_30_COARSE = 30;

	[Token(Token = "0x4000227")]
	public const int AK_MIDI_CC_CTRL_31_COARSE = 31;

	[Token(Token = "0x4000228")]
	public const int AK_MIDI_CC_BANK_SELECT_FINE = 32;

	[Token(Token = "0x4000229")]
	public const int AK_MIDI_CC_MOD_WHEEL_FINE = 33;

	[Token(Token = "0x400022A")]
	public const int AK_MIDI_CC_BREATH_CTRL_FINE = 34;

	[Token(Token = "0x400022B")]
	public const int AK_MIDI_CC_CTRL_3_FINE = 35;

	[Token(Token = "0x400022C")]
	public const int AK_MIDI_CC_FOOT_PEDAL_FINE = 36;

	[Token(Token = "0x400022D")]
	public const int AK_MIDI_CC_PORTAMENTO_FINE = 37;

	[Token(Token = "0x400022E")]
	public const int AK_MIDI_CC_DATA_ENTRY_FINE = 38;

	[Token(Token = "0x400022F")]
	public const int AK_MIDI_CC_VOLUME_FINE = 39;

	[Token(Token = "0x4000230")]
	public const int AK_MIDI_CC_BALANCE_FINE = 40;

	[Token(Token = "0x4000231")]
	public const int AK_MIDI_CC_CTRL_9_FINE = 41;

	[Token(Token = "0x4000232")]
	public const int AK_MIDI_CC_PAN_POSITION_FINE = 42;

	[Token(Token = "0x4000233")]
	public const int AK_MIDI_CC_EXPRESSION_FINE = 43;

	[Token(Token = "0x4000234")]
	public const int AK_MIDI_CC_EFFECT_CTRL_1_FINE = 44;

	[Token(Token = "0x4000235")]
	public const int AK_MIDI_CC_EFFECT_CTRL_2_FINE = 45;

	[Token(Token = "0x4000236")]
	public const int AK_MIDI_CC_CTRL_14_FINE = 46;

	[Token(Token = "0x4000237")]
	public const int AK_MIDI_CC_CTRL_15_FINE = 47;

	[Token(Token = "0x4000238")]
	public const int AK_MIDI_CC_CTRL_20_FINE = 52;

	[Token(Token = "0x4000239")]
	public const int AK_MIDI_CC_CTRL_21_FINE = 53;

	[Token(Token = "0x400023A")]
	public const int AK_MIDI_CC_CTRL_22_FINE = 54;

	[Token(Token = "0x400023B")]
	public const int AK_MIDI_CC_CTRL_23_FINE = 55;

	[Token(Token = "0x400023C")]
	public const int AK_MIDI_CC_CTRL_24_FINE = 56;

	[Token(Token = "0x400023D")]
	public const int AK_MIDI_CC_CTRL_25_FINE = 57;

	[Token(Token = "0x400023E")]
	public const int AK_MIDI_CC_CTRL_26_FINE = 58;

	[Token(Token = "0x400023F")]
	public const int AK_MIDI_CC_CTRL_27_FINE = 59;

	[Token(Token = "0x4000240")]
	public const int AK_MIDI_CC_CTRL_28_FINE = 60;

	[Token(Token = "0x4000241")]
	public const int AK_MIDI_CC_CTRL_29_FINE = 61;

	[Token(Token = "0x4000242")]
	public const int AK_MIDI_CC_CTRL_30_FINE = 62;

	[Token(Token = "0x4000243")]
	public const int AK_MIDI_CC_CTRL_31_FINE = 63;

	[Token(Token = "0x4000244")]
	public const int AK_MIDI_CC_HOLD_PEDAL = 64;

	[Token(Token = "0x4000245")]
	public const int AK_MIDI_CC_PORTAMENTO_ON_OFF = 65;

	[Token(Token = "0x4000246")]
	public const int AK_MIDI_CC_SUSTENUTO_PEDAL = 66;

	[Token(Token = "0x4000247")]
	public const int AK_MIDI_CC_SOFT_PEDAL = 67;

	[Token(Token = "0x4000248")]
	public const int AK_MIDI_CC_LEGATO_PEDAL = 68;

	[Token(Token = "0x4000249")]
	public const int AK_MIDI_CC_HOLD_PEDAL_2 = 69;

	[Token(Token = "0x400024A")]
	public const int AK_MIDI_CC_SOUND_VARIATION = 70;

	[Token(Token = "0x400024B")]
	public const int AK_MIDI_CC_SOUND_TIMBRE = 71;

	[Token(Token = "0x400024C")]
	public const int AK_MIDI_CC_SOUND_RELEASE_TIME = 72;

	[Token(Token = "0x400024D")]
	public const int AK_MIDI_CC_SOUND_ATTACK_TIME = 73;

	[Token(Token = "0x400024E")]
	public const int AK_MIDI_CC_SOUND_BRIGHTNESS = 74;

	[Token(Token = "0x400024F")]
	public const int AK_MIDI_CC_SOUND_CTRL_6 = 75;

	[Token(Token = "0x4000250")]
	public const int AK_MIDI_CC_SOUND_CTRL_7 = 76;

	[Token(Token = "0x4000251")]
	public const int AK_MIDI_CC_SOUND_CTRL_8 = 77;

	[Token(Token = "0x4000252")]
	public const int AK_MIDI_CC_SOUND_CTRL_9 = 78;

	[Token(Token = "0x4000253")]
	public const int AK_MIDI_CC_SOUND_CTRL_10 = 79;

	[Token(Token = "0x4000254")]
	public const int AK_MIDI_CC_GENERAL_BUTTON_1 = 80;

	[Token(Token = "0x4000255")]
	public const int AK_MIDI_CC_GENERAL_BUTTON_2 = 81;

	[Token(Token = "0x4000256")]
	public const int AK_MIDI_CC_GENERAL_BUTTON_3 = 82;

	[Token(Token = "0x4000257")]
	public const int AK_MIDI_CC_GENERAL_BUTTON_4 = 83;

	[Token(Token = "0x4000258")]
	public const int AK_MIDI_CC_REVERB_LEVEL = 91;

	[Token(Token = "0x4000259")]
	public const int AK_MIDI_CC_TREMOLO_LEVEL = 92;

	[Token(Token = "0x400025A")]
	public const int AK_MIDI_CC_CHORUS_LEVEL = 93;

	[Token(Token = "0x400025B")]
	public const int AK_MIDI_CC_CELESTE_LEVEL = 94;

	[Token(Token = "0x400025C")]
	public const int AK_MIDI_CC_PHASER_LEVEL = 95;

	[Token(Token = "0x400025D")]
	public const int AK_MIDI_CC_DATA_BUTTON_P1 = 96;

	[Token(Token = "0x400025E")]
	public const int AK_MIDI_CC_DATA_BUTTON_M1 = 97;

	[Token(Token = "0x400025F")]
	public const int AK_MIDI_CC_NON_REGISTER_COARSE = 98;

	[Token(Token = "0x4000260")]
	public const int AK_MIDI_CC_NON_REGISTER_FINE = 99;

	[Token(Token = "0x4000261")]
	public const int AK_MIDI_CC_ALL_SOUND_OFF = 120;

	[Token(Token = "0x4000262")]
	public const int AK_MIDI_CC_ALL_CONTROLLERS_OFF = 121;

	[Token(Token = "0x4000263")]
	public const int AK_MIDI_CC_LOCAL_KEYBOARD = 122;

	[Token(Token = "0x4000264")]
	public const int AK_MIDI_CC_ALL_NOTES_OFF = 123;

	[Token(Token = "0x4000265")]
	public const int AK_MIDI_CC_OMNI_MODE_OFF = 124;

	[Token(Token = "0x4000266")]
	public const int AK_MIDI_CC_OMNI_MODE_ON = 125;

	[Token(Token = "0x4000267")]
	public const int AK_MIDI_CC_OMNI_MONOPHONIC_ON = 126;

	[Token(Token = "0x4000268")]
	public const int AK_MIDI_CC_OMNI_POLYPHONIC_ON = 127;

	[Token(Token = "0x4000269")]
	public const int AK_SPEAKER_FRONT_LEFT = 1;

	[Token(Token = "0x400026A")]
	public const int AK_SPEAKER_FRONT_RIGHT = 2;

	[Token(Token = "0x400026B")]
	public const int AK_SPEAKER_FRONT_CENTER = 4;

	[Token(Token = "0x400026C")]
	public const int AK_SPEAKER_LOW_FREQUENCY = 8;

	[Token(Token = "0x400026D")]
	public const int AK_SPEAKER_BACK_LEFT = 16;

	[Token(Token = "0x400026E")]
	public const int AK_SPEAKER_BACK_RIGHT = 32;

	[Token(Token = "0x400026F")]
	public const int AK_SPEAKER_BACK_CENTER = 256;

	[Token(Token = "0x4000270")]
	public const int AK_SPEAKER_SIDE_LEFT = 512;

	[Token(Token = "0x4000271")]
	public const int AK_SPEAKER_SIDE_RIGHT = 1024;

	[Token(Token = "0x4000272")]
	public const int AK_SPEAKER_TOP = 2048;

	[Token(Token = "0x4000273")]
	public const int AK_SPEAKER_HEIGHT_FRONT_LEFT = 4096;

	[Token(Token = "0x4000274")]
	public const int AK_SPEAKER_HEIGHT_FRONT_CENTER = 8192;

	[Token(Token = "0x4000275")]
	public const int AK_SPEAKER_HEIGHT_FRONT_RIGHT = 16384;

	[Token(Token = "0x4000276")]
	public const int AK_SPEAKER_HEIGHT_BACK_LEFT = 32768;

	[Token(Token = "0x4000277")]
	public const int AK_SPEAKER_HEIGHT_BACK_CENTER = 65536;

	[Token(Token = "0x4000278")]
	public const int AK_SPEAKER_HEIGHT_BACK_RIGHT = 131072;

	[Token(Token = "0x4000279")]
	public const int AK_SPEAKER_SETUP_MONO = 4;

	[Token(Token = "0x400027A")]
	public const int AK_SPEAKER_SETUP_0POINT1 = 8;

	[Token(Token = "0x400027B")]
	public const int AK_SPEAKER_SETUP_1POINT1 = 12;

	[Token(Token = "0x400027C")]
	public const int AK_SPEAKER_SETUP_STEREO = 3;

	[Token(Token = "0x400027D")]
	public const int AK_SPEAKER_SETUP_2POINT1 = 11;

	[Token(Token = "0x400027E")]
	public const int AK_SPEAKER_SETUP_3STEREO = 7;

	[Token(Token = "0x400027F")]
	public const int AK_SPEAKER_SETUP_3POINT1 = 15;

	[Token(Token = "0x4000280")]
	public const int AK_SPEAKER_SETUP_4 = 1539;

	[Token(Token = "0x4000281")]
	public const int AK_SPEAKER_SETUP_4POINT1 = 1547;

	[Token(Token = "0x4000282")]
	public const int AK_SPEAKER_SETUP_5 = 1543;

	[Token(Token = "0x4000283")]
	public const int AK_SPEAKER_SETUP_5POINT1 = 1551;

	[Token(Token = "0x4000284")]
	public const int AK_SPEAKER_SETUP_6 = 1587;

	[Token(Token = "0x4000285")]
	public const int AK_SPEAKER_SETUP_6POINT1 = 1595;

	[Token(Token = "0x4000286")]
	public const int AK_SPEAKER_SETUP_7 = 1591;

	[Token(Token = "0x4000287")]
	public const int AK_SPEAKER_SETUP_7POINT1 = 1599;

	[Token(Token = "0x4000288")]
	public const int AK_SPEAKER_SETUP_SURROUND = 259;

	[Token(Token = "0x4000289")]
	public const int AK_SPEAKER_SETUP_DPL2 = 1539;

	[Token(Token = "0x400028A")]
	public const int AK_SPEAKER_SETUP_HEIGHT_4 = 184320;

	[Token(Token = "0x400028B")]
	public const int AK_SPEAKER_SETUP_HEIGHT_5 = 192512;

	[Token(Token = "0x400028C")]
	public const int AK_SPEAKER_SETUP_HEIGHT_ALL = 258048;

	[Token(Token = "0x400028D")]
	public const int AK_SPEAKER_SETUP_AURO_222 = 22019;

	[Token(Token = "0x400028E")]
	public const int AK_SPEAKER_SETUP_AURO_8 = 185859;

	[Token(Token = "0x400028F")]
	public const int AK_SPEAKER_SETUP_AURO_9 = 185863;

	[Token(Token = "0x4000290")]
	public const int AK_SPEAKER_SETUP_AURO_9POINT1 = 185871;

	[Token(Token = "0x4000291")]
	public const int AK_SPEAKER_SETUP_AURO_10 = 187911;

	[Token(Token = "0x4000292")]
	public const int AK_SPEAKER_SETUP_AURO_10POINT1 = 187919;

	[Token(Token = "0x4000293")]
	public const int AK_SPEAKER_SETUP_AURO_11 = 196103;

	[Token(Token = "0x4000294")]
	public const int AK_SPEAKER_SETUP_AURO_11POINT1 = 196111;

	[Token(Token = "0x4000295")]
	public const int AK_SPEAKER_SETUP_AURO_11_740 = 185911;

	[Token(Token = "0x4000296")]
	public const int AK_SPEAKER_SETUP_AURO_11POINT1_740 = 185919;

	[Token(Token = "0x4000297")]
	public const int AK_SPEAKER_SETUP_AURO_13_751 = 196151;

	[Token(Token = "0x4000298")]
	public const int AK_SPEAKER_SETUP_AURO_13POINT1_751 = 196159;

	[Token(Token = "0x4000299")]
	public const int AK_SPEAKER_SETUP_DOLBY_5_0_2 = 22023;

	[Token(Token = "0x400029A")]
	public const int AK_SPEAKER_SETUP_DOLBY_5_1_2 = 22031;

	[Token(Token = "0x400029B")]
	public const int AK_SPEAKER_SETUP_DOLBY_6_0_2 = 22067;

	[Token(Token = "0x400029C")]
	public const int AK_SPEAKER_SETUP_DOLBY_6_1_2 = 22075;

	[Token(Token = "0x400029D")]
	public const int AK_SPEAKER_SETUP_DOLBY_6_0_4 = 185907;

	[Token(Token = "0x400029E")]
	public const int AK_SPEAKER_SETUP_DOLBY_6_1_4 = 185915;

	[Token(Token = "0x400029F")]
	public const int AK_SPEAKER_SETUP_DOLBY_7_0_2 = 22071;

	[Token(Token = "0x40002A0")]
	public const int AK_SPEAKER_SETUP_DOLBY_7_1_2 = 22079;

	[Token(Token = "0x40002A1")]
	public const int AK_SPEAKER_SETUP_DOLBY_7_0_4 = 185911;

	[Token(Token = "0x40002A2")]
	public const int AK_SPEAKER_SETUP_DOLBY_7_1_4 = 185919;

	[Token(Token = "0x40002A3")]
	public const int AK_SPEAKER_SETUP_ALL_SPEAKERS = 261951;

	[Token(Token = "0x40002A4")]
	public const int AK_IDX_SETUP_FRONT_LEFT = 0;

	[Token(Token = "0x40002A5")]
	public const int AK_IDX_SETUP_FRONT_RIGHT = 1;

	[Token(Token = "0x40002A6")]
	public const int AK_IDX_SETUP_CENTER = 2;

	[Token(Token = "0x40002A7")]
	public const int AK_IDX_SETUP_NOCENTER_BACK_LEFT = 2;

	[Token(Token = "0x40002A8")]
	public const int AK_IDX_SETUP_NOCENTER_BACK_RIGHT = 3;

	[Token(Token = "0x40002A9")]
	public const int AK_IDX_SETUP_NOCENTER_SIDE_LEFT = 4;

	[Token(Token = "0x40002AA")]
	public const int AK_IDX_SETUP_NOCENTER_SIDE_RIGHT = 5;

	[Token(Token = "0x40002AB")]
	public const int AK_IDX_SETUP_WITHCENTER_BACK_LEFT = 3;

	[Token(Token = "0x40002AC")]
	public const int AK_IDX_SETUP_WITHCENTER_BACK_RIGHT = 4;

	[Token(Token = "0x40002AD")]
	public const int AK_IDX_SETUP_WITHCENTER_SIDE_LEFT = 5;

	[Token(Token = "0x40002AE")]
	public const int AK_IDX_SETUP_WITHCENTER_SIDE_RIGHT = 6;

	[Token(Token = "0x40002AF")]
	public const int AK_IDX_SETUP_0_LFE = 0;

	[Token(Token = "0x40002B0")]
	public const int AK_IDX_SETUP_1_CENTER = 0;

	[Token(Token = "0x40002B1")]
	public const int AK_IDX_SETUP_1_LFE = 1;

	[Token(Token = "0x40002B2")]
	public const int AK_IDX_SETUP_2_LEFT = 0;

	[Token(Token = "0x40002B3")]
	public const int AK_IDX_SETUP_2_RIGHT = 1;

	[Token(Token = "0x40002B4")]
	public const int AK_IDX_SETUP_2_LFE = 2;

	[Token(Token = "0x40002B5")]
	public const int AK_IDX_SETUP_3_LEFT = 0;

	[Token(Token = "0x40002B6")]
	public const int AK_IDX_SETUP_3_RIGHT = 1;

	[Token(Token = "0x40002B7")]
	public const int AK_IDX_SETUP_3_CENTER = 2;

	[Token(Token = "0x40002B8")]
	public const int AK_IDX_SETUP_3_LFE = 3;

	[Token(Token = "0x40002B9")]
	public const int AK_IDX_SETUP_4_FRONTLEFT = 0;

	[Token(Token = "0x40002BA")]
	public const int AK_IDX_SETUP_4_FRONTRIGHT = 1;

	[Token(Token = "0x40002BB")]
	public const int AK_IDX_SETUP_4_REARLEFT = 2;

	[Token(Token = "0x40002BC")]
	public const int AK_IDX_SETUP_4_REARRIGHT = 3;

	[Token(Token = "0x40002BD")]
	public const int AK_IDX_SETUP_4_LFE = 4;

	[Token(Token = "0x40002BE")]
	public const int AK_IDX_SETUP_5_FRONTLEFT = 0;

	[Token(Token = "0x40002BF")]
	public const int AK_IDX_SETUP_5_FRONTRIGHT = 1;

	[Token(Token = "0x40002C0")]
	public const int AK_IDX_SETUP_5_CENTER = 2;

	[Token(Token = "0x40002C1")]
	public const int AK_IDX_SETUP_5_REARLEFT = 3;

	[Token(Token = "0x40002C2")]
	public const int AK_IDX_SETUP_5_REARRIGHT = 4;

	[Token(Token = "0x40002C3")]
	public const int AK_IDX_SETUP_5_LFE = 5;

	[Token(Token = "0x40002C4")]
	public const int AK_IDX_SETUP_6_FRONTLEFT = 0;

	[Token(Token = "0x40002C5")]
	public const int AK_IDX_SETUP_6_FRONTRIGHT = 1;

	[Token(Token = "0x40002C6")]
	public const int AK_IDX_SETUP_6_REARLEFT = 2;

	[Token(Token = "0x40002C7")]
	public const int AK_IDX_SETUP_6_REARRIGHT = 3;

	[Token(Token = "0x40002C8")]
	public const int AK_IDX_SETUP_6_SIDELEFT = 4;

	[Token(Token = "0x40002C9")]
	public const int AK_IDX_SETUP_6_SIDERIGHT = 5;

	[Token(Token = "0x40002CA")]
	public const int AK_IDX_SETUP_6_LFE = 6;

	[Token(Token = "0x40002CB")]
	public const int AK_IDX_SETUP_7_FRONTLEFT = 0;

	[Token(Token = "0x40002CC")]
	public const int AK_IDX_SETUP_7_FRONTRIGHT = 1;

	[Token(Token = "0x40002CD")]
	public const int AK_IDX_SETUP_7_CENTER = 2;

	[Token(Token = "0x40002CE")]
	public const int AK_IDX_SETUP_7_REARLEFT = 3;

	[Token(Token = "0x40002CF")]
	public const int AK_IDX_SETUP_7_REARRIGHT = 4;

	[Token(Token = "0x40002D0")]
	public const int AK_IDX_SETUP_7_SIDELEFT = 5;

	[Token(Token = "0x40002D1")]
	public const int AK_IDX_SETUP_7_SIDERIGHT = 6;

	[Token(Token = "0x40002D2")]
	public const int AK_IDX_SETUP_7_LFE = 7;

	[Token(Token = "0x40002D3")]
	public const int AK_SPEAKER_SETUP_0_1 = 8;

	[Token(Token = "0x40002D4")]
	public const int AK_SPEAKER_SETUP_1_0_CENTER = 4;

	[Token(Token = "0x40002D5")]
	public const int AK_SPEAKER_SETUP_1_1_CENTER = 12;

	[Token(Token = "0x40002D6")]
	public const int AK_SPEAKER_SETUP_2_0 = 3;

	[Token(Token = "0x40002D7")]
	public const int AK_SPEAKER_SETUP_2_1 = 11;

	[Token(Token = "0x40002D8")]
	public const int AK_SPEAKER_SETUP_3_0 = 7;

	[Token(Token = "0x40002D9")]
	public const int AK_SPEAKER_SETUP_3_1 = 15;

	[Token(Token = "0x40002DA")]
	public const int AK_SPEAKER_SETUP_FRONT = 7;

	[Token(Token = "0x40002DB")]
	public const int AK_SPEAKER_SETUP_4_0 = 1539;

	[Token(Token = "0x40002DC")]
	public const int AK_SPEAKER_SETUP_4_1 = 1547;

	[Token(Token = "0x40002DD")]
	public const int AK_SPEAKER_SETUP_5_0 = 1543;

	[Token(Token = "0x40002DE")]
	public const int AK_SPEAKER_SETUP_5_1 = 1551;

	[Token(Token = "0x40002DF")]
	public const int AK_SPEAKER_SETUP_6_0 = 1587;

	[Token(Token = "0x40002E0")]
	public const int AK_SPEAKER_SETUP_6_1 = 1595;

	[Token(Token = "0x40002E1")]
	public const int AK_SPEAKER_SETUP_7_0 = 1591;

	[Token(Token = "0x40002E2")]
	public const int AK_SPEAKER_SETUP_7_1 = 1599;

	[Token(Token = "0x40002E3")]
	public const int AK_SPEAKER_SETUP_DEFAULT_PLANE = 1599;

	[Token(Token = "0x40002E4")]
	public const int AK_SUPPORTED_STANDARD_CHANNEL_MASK = 261951;

	[Token(Token = "0x40002E5")]
	public const int AK_STANDARD_MAX_NUM_CHANNELS = 8;

	[Token(Token = "0x40002E6")]
	public const int AK_NUM_SAMPLED_SPHERE_POINTS = 32;

	[Token(Token = "0x40002E7")]
	public const int AK_MAX_NUM_TEXTURE = 4;

	[Token(Token = "0x40002E8")]
	public const int AK_MAX_REFLECT_ORDER = 4;

	[Token(Token = "0x40002E9")]
	public const int AK_MAX_REFLECTION_PATH_LENGTH = 6;

	[Token(Token = "0x40002EA")]
	public const int AK_MAX_SOUND_PROPAGATION_DEPTH = 8;

	[Token(Token = "0x40002EB")]
	public const double AK_DEFAULT_DIFFR_SHADOW_DEGREES = 30.0;

	[Token(Token = "0x40002EC")]
	public const double AK_DEFAULT_DIFFR_SHADOW_ATTEN = 2.0;

	[Token(Token = "0x40002ED")]
	public const double AK_SA_EPSILON = 0.001;

	[Token(Token = "0x40002EE")]
	public const double AK_SA_PLANARITY_EPSILON = 0.01;

	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameObjectHashFunction gameObjectHash;

	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1651F8", Offset = "0x1651F8")]
	private static GameObjectHashFunction <>f__mg$cache0;

	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x165208", Offset = "0x165208")]
	private static GameObjectHashFunction <>f__mg$cache1;

	[Token(Token = "0x1700003D")]
	public static uint AK_SOUNDBANK_VERSION
	{
		[Token(Token = "0x60001F0")]
		[Address(RVA = "0x2DF968", Offset = "0x2DF968", VA = "0x2DF968")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x1700003E")]
	public static ushort AK_INT
	{
		[Token(Token = "0x60001F1")]
		[Address(RVA = "0x2DFA90", Offset = "0x2DFA90", VA = "0x2DFA90")]
		get
		{
			return default(ushort);
		}
	}

	[Token(Token = "0x1700003F")]
	public static ushort AK_FLOAT
	{
		[Token(Token = "0x60001F2")]
		[Address(RVA = "0x2DFBB8", Offset = "0x2DFBB8", VA = "0x2DFBB8")]
		get
		{
			return default(ushort);
		}
	}

	[Token(Token = "0x17000040")]
	public static byte AK_INTERLEAVED
	{
		[Token(Token = "0x60001F3")]
		[Address(RVA = "0x2DFCE0", Offset = "0x2DFCE0", VA = "0x2DFCE0")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x17000041")]
	public static byte AK_NONINTERLEAVED
	{
		[Token(Token = "0x60001F4")]
		[Address(RVA = "0x2DFE08", Offset = "0x2DFE08", VA = "0x2DFE08")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x17000042")]
	public static uint AK_LE_NATIVE_BITSPERSAMPLE
	{
		[Token(Token = "0x60001F5")]
		[Address(RVA = "0x2DFF30", Offset = "0x2DFF30", VA = "0x2DFF30")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000043")]
	public static uint AK_LE_NATIVE_SAMPLETYPE
	{
		[Token(Token = "0x60001F6")]
		[Address(RVA = "0x2E0058", Offset = "0x2E0058", VA = "0x2E0058")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000044")]
	public static uint AK_LE_NATIVE_INTERLEAVE
	{
		[Token(Token = "0x60001F7")]
		[Address(RVA = "0x2E0180", Offset = "0x2E0180", VA = "0x2E0180")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000045")]
	public static byte AK_INVALID_MIDI_CHANNEL
	{
		[Token(Token = "0x60002C7")]
		[Address(RVA = "0x2F5660", Offset = "0x2F5660", VA = "0x2F5660")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x17000046")]
	public static byte AK_INVALID_MIDI_NOTE
	{
		[Token(Token = "0x60002C8")]
		[Address(RVA = "0x2F5788", Offset = "0x2F5788", VA = "0x2F5788")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x17000047")]
	public static float kDefaultMaxPathLength
	{
		[Token(Token = "0x60002FC")]
		[Address(RVA = "0x2FA7B0", Offset = "0x2FA7B0", VA = "0x2FA7B0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000048")]
	public static float kMaxDiffraction
	{
		[Token(Token = "0x60002FD")]
		[Address(RVA = "0x2FA8D8", Offset = "0x2FA8D8", VA = "0x2FA8D8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000049")]
	public static int g_SpatialAudioPoolId
	{
		[Token(Token = "0x60002FF")]
		[Address(RVA = "0x2FAB40", Offset = "0x2FAB40", VA = "0x2FAB40")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60002FE")]
		[Address(RVA = "0x2FAA00", Offset = "0x2FAA00", VA = "0x2FAA00")]
		set
		{
		}
	}

	[Token(Token = "0x1700004A")]
	public static GameObjectHashFunction GameObjectHash
	{
		[Token(Token = "0x600033D")]
		[Address(RVA = "0x30045C", Offset = "0x30045C", VA = "0x30045C")]
		set
		{
		}
	}

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0x2DF1C8", Offset = "0x2DF1C8", VA = "0x2DF1C8")]
	public AkSoundEngine()
	{
	}

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0x2DF1D0", Offset = "0x2DF1D0", VA = "0x2DF1D0")]
	public static uint _PostEvent(uint in_eventID, GameObject in_gameObjectID)
	{
		return default(uint);
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0x2DF468", Offset = "0x2DF468", VA = "0x2DF468")]
	public static uint _PostEvent(string in_pszEventName, GameObject in_gameObjectID)
	{
		return default(uint);
	}

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0x2DF700", Offset = "0x2DF700", VA = "0x2DF700")]
	public static AKRESULT _ExecuteActionOnEvent(uint in_eventID, AkActionOnEventType in_ActionType, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0x2E02A8", Offset = "0x2E02A8", VA = "0x2E02A8")]
	public static uint DynamicSequenceOpen(GameObject in_gameObjectID, uint in_uFlags, AkCallbackManager.EventCallback in_pfnCallback, object in_pCookie, AkDynamicSequenceType in_eDynamicSequenceType)
	{
		return default(uint);
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0x2E052C", Offset = "0x2E052C", VA = "0x2E052C")]
	public static uint DynamicSequenceOpen(GameObject in_gameObjectID, uint in_uFlags, AkCallbackManager.EventCallback in_pfnCallback, object in_pCookie)
	{
		return default(uint);
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0x2E07A0", Offset = "0x2E07A0", VA = "0x2E07A0")]
	public static uint DynamicSequenceOpen(GameObject in_gameObjectID, uint in_uFlags)
	{
		return default(uint);
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0x2E0980", Offset = "0x2E0980", VA = "0x2E0980")]
	public static uint DynamicSequenceOpen(GameObject in_gameObjectID)
	{
		return default(uint);
	}

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0x2E0B54", Offset = "0x2E0B54", VA = "0x2E0B54")]
	public static AKRESULT DynamicSequenceClose(uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0x2E0C94", Offset = "0x2E0C94", VA = "0x2E0C94")]
	public static AKRESULT DynamicSequencePlay(uint in_playingID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0x2E0DFC", Offset = "0x2E0DFC", VA = "0x2E0DFC")]
	public static AKRESULT DynamicSequencePlay(uint in_playingID, int in_uTransitionDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0x2E0F4C", Offset = "0x2E0F4C", VA = "0x2E0F4C")]
	public static AKRESULT DynamicSequencePlay(uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0x2E108C", Offset = "0x2E108C", VA = "0x2E108C")]
	public static AKRESULT DynamicSequencePause(uint in_playingID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0x2E11F4", Offset = "0x2E11F4", VA = "0x2E11F4")]
	public static AKRESULT DynamicSequencePause(uint in_playingID, int in_uTransitionDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0x2E1344", Offset = "0x2E1344", VA = "0x2E1344")]
	public static AKRESULT DynamicSequencePause(uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000203")]
	[Address(RVA = "0x2E1484", Offset = "0x2E1484", VA = "0x2E1484")]
	public static AKRESULT DynamicSequenceResume(uint in_playingID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0x2E15EC", Offset = "0x2E15EC", VA = "0x2E15EC")]
	public static AKRESULT DynamicSequenceResume(uint in_playingID, int in_uTransitionDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000205")]
	[Address(RVA = "0x2E173C", Offset = "0x2E173C", VA = "0x2E173C")]
	public static AKRESULT DynamicSequenceResume(uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0x2E187C", Offset = "0x2E187C", VA = "0x2E187C")]
	public static AKRESULT DynamicSequenceStop(uint in_playingID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0x2E19E4", Offset = "0x2E19E4", VA = "0x2E19E4")]
	public static AKRESULT DynamicSequenceStop(uint in_playingID, int in_uTransitionDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000208")]
	[Address(RVA = "0x2E1B34", Offset = "0x2E1B34", VA = "0x2E1B34")]
	public static AKRESULT DynamicSequenceStop(uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0x2E1C74", Offset = "0x2E1C74", VA = "0x2E1C74")]
	public static AKRESULT DynamicSequenceBreak(uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0x2E1DB4", Offset = "0x2E1DB4", VA = "0x2E1DB4")]
	public static AKRESULT DynamicSequenceGetPauseTimes(uint in_playingID, out uint out_uTime, out uint out_uDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600020B")]
	[Address(RVA = "0x2E1F38", Offset = "0x2E1F38", VA = "0x2E1F38")]
	public static AkPlaylist DynamicSequenceLockPlaylist(uint in_playingID)
	{
		return null;
	}

	[Token(Token = "0x600020C")]
	[Address(RVA = "0x2E20C4", Offset = "0x2E20C4", VA = "0x2E20C4")]
	public static AKRESULT DynamicSequenceUnlockPlaylist(uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0x2E2204", Offset = "0x2E2204", VA = "0x2E2204")]
	public static bool IsInitialized()
	{
		return default(bool);
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0x2E2334", Offset = "0x2E2334", VA = "0x2E2334")]
	public static AKRESULT GetAudioSettings(AkAudioSettings out_audioSettings)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0x2E2488", Offset = "0x2E2488", VA = "0x2E2488")]
	public static AkChannelConfig GetSpeakerConfiguration(ulong in_idOutput)
	{
		return null;
	}

	[Token(Token = "0x6000210")]
	[Address(RVA = "0x2E2610", Offset = "0x2E2610", VA = "0x2E2610")]
	public static AkChannelConfig GetSpeakerConfiguration()
	{
		return null;
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0x2E2768", Offset = "0x2E2768", VA = "0x2E2768")]
	public static AKRESULT GetPanningRule(out int out_ePanningRule, ulong in_idOutput)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0x2E28E0", Offset = "0x2E28E0", VA = "0x2E28E0")]
	public static AKRESULT GetPanningRule(out int out_ePanningRule)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0x2E2A30", Offset = "0x2E2A30", VA = "0x2E2A30")]
	public static AKRESULT SetPanningRule(AkPanningRule in_ePanningRule, ulong in_idOutput)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0x2E2B98", Offset = "0x2E2B98", VA = "0x2E2B98")]
	public static AKRESULT SetPanningRule(AkPanningRule in_ePanningRule)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000215")]
	[Address(RVA = "0x2E2CD8", Offset = "0x2E2CD8", VA = "0x2E2CD8")]
	public static AKRESULT GetSpeakerAngles(float[] io_pfSpeakerAngles, ref uint io_uNumAngles, out float out_fHeightAngle, ulong in_idOutput)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000216")]
	[Address(RVA = "0x2E2E70", Offset = "0x2E2E70", VA = "0x2E2E70")]
	public static AKRESULT GetSpeakerAngles(float[] io_pfSpeakerAngles, ref uint io_uNumAngles, out float out_fHeightAngle)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000217")]
	[Address(RVA = "0x2E2FF0", Offset = "0x2E2FF0", VA = "0x2E2FF0")]
	public static AKRESULT SetSpeakerAngles(float[] in_pfSpeakerAngles, uint in_uNumAngles, float in_fHeightAngle, ulong in_idOutput)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000218")]
	[Address(RVA = "0x2E317C", Offset = "0x2E317C", VA = "0x2E317C")]
	public static AKRESULT SetSpeakerAngles(float[] in_pfSpeakerAngles, uint in_uNumAngles, float in_fHeightAngle)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000219")]
	[Address(RVA = "0x2E32EC", Offset = "0x2E32EC", VA = "0x2E32EC")]
	public static AKRESULT SetVolumeThreshold(float in_fVolumeThresholdDB)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600021A")]
	[Address(RVA = "0x2E342C", Offset = "0x2E342C", VA = "0x2E342C")]
	public static AKRESULT SetMaxNumVoicesLimit(ushort in_maxNumberVoices)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600021B")]
	[Address(RVA = "0x2E356C", Offset = "0x2E356C", VA = "0x2E356C")]
	public static AKRESULT RenderAudio(bool in_bAllowSyncRender)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0x2E36AC", Offset = "0x2E36AC", VA = "0x2E36AC")]
	public static AKRESULT RenderAudio()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600021D")]
	[Address(RVA = "0x2E37D4", Offset = "0x2E37D4", VA = "0x2E37D4")]
	public static AKRESULT RegisterPluginDLL(string in_DllName)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600021E")]
	[Address(RVA = "0x2E3938", Offset = "0x2E3938", VA = "0x2E3938")]
	public static uint GetIDFromString(string in_pszString)
	{
		return default(uint);
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0x2E3A9C", Offset = "0x2E3A9C", VA = "0x2E3A9C")]
	public static uint PostEvent(uint in_eventID, GameObject in_gameObjectID, uint in_uFlags, AkCallbackManager.EventCallback in_pfnCallback, object in_pCookie, uint in_cExternals, AkExternalSourceInfo in_pExternalSources, uint in_PlayingID)
	{
		return default(uint);
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0x2E3D64", Offset = "0x2E3D64", VA = "0x2E3D64")]
	public static uint PostEvent(uint in_eventID, GameObject in_gameObjectID, uint in_uFlags, AkCallbackManager.EventCallback in_pfnCallback, object in_pCookie, uint in_cExternals, AkExternalSourceInfo in_pExternalSources)
	{
		return default(uint);
	}

	[Token(Token = "0x6000221")]
	[Address(RVA = "0x2E4020", Offset = "0x2E4020", VA = "0x2E4020")]
	public static uint PostEvent(uint in_eventID, GameObject in_gameObjectID, uint in_uFlags, AkCallbackManager.EventCallback in_pfnCallback, object in_pCookie, uint in_cExternals)
	{
		return default(uint);
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0x2E42BC", Offset = "0x2E42BC", VA = "0x2E42BC")]
	public static uint PostEvent(uint in_eventID, GameObject in_gameObjectID, uint in_uFlags, AkCallbackManager.EventCallback in_pfnCallback, object in_pCookie)
	{
		return default(uint);
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0x2E4544", Offset = "0x2E4544", VA = "0x2E4544")]
	public static uint PostEvent(uint in_eventID, GameObject in_gameObjectID, uint in_uFlags)
	{
		return default(uint);
	}

	[Token(Token = "0x6000224")]
	[Address(RVA = "0x2DF354", Offset = "0x2DF354", VA = "0x2DF354")]
	public static uint PostEvent(uint in_eventID, GameObject in_gameObjectID)
	{
		return default(uint);
	}

	[Token(Token = "0x6000225")]
	[Address(RVA = "0x2E4808", Offset = "0x2E4808", VA = "0x2E4808")]
	public static uint PostEvent(string in_pszEventName, GameObject in_gameObjectID, uint in_uFlags, AkCallbackManager.EventCallback in_pfnCallback, object in_pCookie, uint in_cExternals, AkExternalSourceInfo in_pExternalSources, uint in_PlayingID)
	{
		return default(uint);
	}

	[Token(Token = "0x6000226")]
	[Address(RVA = "0x2E4AF8", Offset = "0x2E4AF8", VA = "0x2E4AF8")]
	public static uint PostEvent(string in_pszEventName, GameObject in_gameObjectID, uint in_uFlags, AkCallbackManager.EventCallback in_pfnCallback, object in_pCookie, uint in_cExternals, AkExternalSourceInfo in_pExternalSources)
	{
		return default(uint);
	}

	[Token(Token = "0x6000227")]
	[Address(RVA = "0x2E4DCC", Offset = "0x2E4DCC", VA = "0x2E4DCC")]
	public static uint PostEvent(string in_pszEventName, GameObject in_gameObjectID, uint in_uFlags, AkCallbackManager.EventCallback in_pfnCallback, object in_pCookie, uint in_cExternals)
	{
		return default(uint);
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0x2E5088", Offset = "0x2E5088", VA = "0x2E5088")]
	public static uint PostEvent(string in_pszEventName, GameObject in_gameObjectID, uint in_uFlags, AkCallbackManager.EventCallback in_pfnCallback, object in_pCookie)
	{
		return default(uint);
	}

	[Token(Token = "0x6000229")]
	[Address(RVA = "0x2E5328", Offset = "0x2E5328", VA = "0x2E5328")]
	public static uint PostEvent(string in_pszEventName, GameObject in_gameObjectID, uint in_uFlags)
	{
		return default(uint);
	}

	[Token(Token = "0x600022A")]
	[Address(RVA = "0x2DF5EC", Offset = "0x2DF5EC", VA = "0x2DF5EC")]
	public static uint PostEvent(string in_pszEventName, GameObject in_gameObjectID)
	{
		return default(uint);
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0x2E5634", Offset = "0x2E5634", VA = "0x2E5634")]
	public static AKRESULT ExecuteActionOnEvent(uint in_eventID, AkActionOnEventType in_ActionType, GameObject in_gameObjectID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve, uint in_PlayingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0x2E5800", Offset = "0x2E5800", VA = "0x2E5800")]
	public static AKRESULT ExecuteActionOnEvent(uint in_eventID, AkActionOnEventType in_ActionType, GameObject in_gameObjectID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0x2E59C0", Offset = "0x2E59C0", VA = "0x2E59C0")]
	public static AKRESULT ExecuteActionOnEvent(uint in_eventID, AkActionOnEventType in_ActionType, GameObject in_gameObjectID, int in_uTransitionDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600022E")]
	[Address(RVA = "0x2DF894", Offset = "0x2DF894", VA = "0x2DF894")]
	public static AKRESULT ExecuteActionOnEvent(uint in_eventID, AkActionOnEventType in_ActionType, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0x2E5C40", Offset = "0x2E5C40", VA = "0x2E5C40")]
	public static AKRESULT ExecuteActionOnEvent(uint in_eventID, AkActionOnEventType in_ActionType)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0x2E5D90", Offset = "0x2E5D90", VA = "0x2E5D90")]
	public static AKRESULT ExecuteActionOnEvent(string in_pszEventName, AkActionOnEventType in_ActionType, GameObject in_gameObjectID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve, uint in_PlayingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0x2E5F7C", Offset = "0x2E5F7C", VA = "0x2E5F7C")]
	public static AKRESULT ExecuteActionOnEvent(string in_pszEventName, AkActionOnEventType in_ActionType, GameObject in_gameObjectID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0x2E6168", Offset = "0x2E6168", VA = "0x2E6168")]
	public static AKRESULT ExecuteActionOnEvent(string in_pszEventName, AkActionOnEventType in_ActionType, GameObject in_gameObjectID, int in_uTransitionDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0x2E6344", Offset = "0x2E6344", VA = "0x2E6344")]
	public static AKRESULT ExecuteActionOnEvent(string in_pszEventName, AkActionOnEventType in_ActionType, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000234")]
	[Address(RVA = "0x2E6514", Offset = "0x2E6514", VA = "0x2E6514")]
	public static AKRESULT ExecuteActionOnEvent(string in_pszEventName, AkActionOnEventType in_ActionType)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0x2E6688", Offset = "0x2E6688", VA = "0x2E6688")]
	public static AKRESULT PostMIDIOnEvent(uint in_eventID, GameObject in_gameObjectID, AkMIDIPostArray in_pPosts, ushort in_uNumPosts)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0x2E6858", Offset = "0x2E6858", VA = "0x2E6858")]
	public static AKRESULT StopMIDIOnEvent(uint in_eventID, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000237")]
	[Address(RVA = "0x2E69F8", Offset = "0x2E69F8", VA = "0x2E69F8")]
	public static AKRESULT StopMIDIOnEvent(uint in_eventID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0x2E6B38", Offset = "0x2E6B38", VA = "0x2E6B38")]
	public static AKRESULT StopMIDIOnEvent()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000239")]
	[Address(RVA = "0x2E6C60", Offset = "0x2E6C60", VA = "0x2E6C60")]
	public static AKRESULT PinEventInStreamCache(uint in_eventID, sbyte in_uActivePriority, sbyte in_uInactivePriority)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0x2E6DC8", Offset = "0x2E6DC8", VA = "0x2E6DC8")]
	public static AKRESULT PinEventInStreamCache(string in_pszEventName, sbyte in_uActivePriority, sbyte in_uInactivePriority)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600023B")]
	[Address(RVA = "0x2E6F54", Offset = "0x2E6F54", VA = "0x2E6F54")]
	public static AKRESULT UnpinEventInStreamCache(uint in_eventID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0x2E7094", Offset = "0x2E7094", VA = "0x2E7094")]
	public static AKRESULT UnpinEventInStreamCache(string in_pszEventName)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600023D")]
	[Address(RVA = "0x2E71F8", Offset = "0x2E71F8", VA = "0x2E71F8")]
	public static AKRESULT GetBufferStatusForPinnedEvent(uint in_eventID, out float out_fPercentBuffered, out int out_bCachePinnedMemoryFull)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600023E")]
	[Address(RVA = "0x2E737C", Offset = "0x2E737C", VA = "0x2E737C")]
	public static AKRESULT GetBufferStatusForPinnedEvent(string in_pszEventName, out float out_fPercentBuffered, out int out_bCachePinnedMemoryFull)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600023F")]
	[Address(RVA = "0x2E7524", Offset = "0x2E7524", VA = "0x2E7524")]
	public static AKRESULT SeekOnEvent(uint in_eventID, GameObject in_gameObjectID, int in_iPosition, bool in_bSeekToNearestMarker, uint in_PlayingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000240")]
	[Address(RVA = "0x2E76F0", Offset = "0x2E76F0", VA = "0x2E76F0")]
	public static AKRESULT SeekOnEvent(uint in_eventID, GameObject in_gameObjectID, int in_iPosition, bool in_bSeekToNearestMarker)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000241")]
	[Address(RVA = "0x2E78AC", Offset = "0x2E78AC", VA = "0x2E78AC")]
	public static AKRESULT SeekOnEvent(uint in_eventID, GameObject in_gameObjectID, int in_iPosition)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000242")]
	[Address(RVA = "0x2E7A5C", Offset = "0x2E7A5C", VA = "0x2E7A5C")]
	public static AKRESULT SeekOnEvent(string in_pszEventName, GameObject in_gameObjectID, int in_iPosition, bool in_bSeekToNearestMarker, uint in_PlayingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000243")]
	[Address(RVA = "0x2E7C40", Offset = "0x2E7C40", VA = "0x2E7C40")]
	public static AKRESULT SeekOnEvent(string in_pszEventName, GameObject in_gameObjectID, int in_iPosition, bool in_bSeekToNearestMarker)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000244")]
	[Address(RVA = "0x2E7E1C", Offset = "0x2E7E1C", VA = "0x2E7E1C")]
	public static AKRESULT SeekOnEvent(string in_pszEventName, GameObject in_gameObjectID, int in_iPosition)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000245")]
	[Address(RVA = "0x2E7FF0", Offset = "0x2E7FF0", VA = "0x2E7FF0")]
	public static AKRESULT SeekOnEvent(uint in_eventID, GameObject in_gameObjectID, float in_fPercent, bool in_bSeekToNearestMarker, uint in_PlayingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0x2E81C8", Offset = "0x2E81C8", VA = "0x2E81C8")]
	public static AKRESULT SeekOnEvent(uint in_eventID, GameObject in_gameObjectID, float in_fPercent, bool in_bSeekToNearestMarker)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000247")]
	[Address(RVA = "0x2E8394", Offset = "0x2E8394", VA = "0x2E8394")]
	public static AKRESULT SeekOnEvent(uint in_eventID, GameObject in_gameObjectID, float in_fPercent)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000248")]
	[Address(RVA = "0x2E8550", Offset = "0x2E8550", VA = "0x2E8550")]
	public static AKRESULT SeekOnEvent(string in_pszEventName, GameObject in_gameObjectID, float in_fPercent, bool in_bSeekToNearestMarker, uint in_PlayingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0x2E8750", Offset = "0x2E8750", VA = "0x2E8750")]
	public static AKRESULT SeekOnEvent(string in_pszEventName, GameObject in_gameObjectID, float in_fPercent, bool in_bSeekToNearestMarker)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0x2E8948", Offset = "0x2E8948", VA = "0x2E8948")]
	public static AKRESULT SeekOnEvent(string in_pszEventName, GameObject in_gameObjectID, float in_fPercent)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600024B")]
	[Address(RVA = "0x2E8B30", Offset = "0x2E8B30", VA = "0x2E8B30")]
	public static void CancelEventCallbackCookie(object in_pCookie)
	{
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0x2E8BB8", Offset = "0x2E8BB8", VA = "0x2E8BB8")]
	public static void CancelEventCallbackGameObject(GameObject in_gameObjectID)
	{
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0x2E8D48", Offset = "0x2E8D48", VA = "0x2E8D48")]
	public static void CancelEventCallback(uint in_playingID)
	{
	}

	[Token(Token = "0x600024E")]
	[Address(RVA = "0x2E8DD0", Offset = "0x2E8DD0", VA = "0x2E8DD0")]
	public static AKRESULT GetSourcePlayPosition(uint in_PlayingID, out int out_puPosition, bool in_bExtrapolate)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600024F")]
	[Address(RVA = "0x2E8F48", Offset = "0x2E8F48", VA = "0x2E8F48")]
	public static AKRESULT GetSourcePlayPosition(uint in_PlayingID, out int out_puPosition)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0x2E90A8", Offset = "0x2E90A8", VA = "0x2E90A8")]
	public static AKRESULT GetSourceStreamBuffering(uint in_PlayingID, out int out_buffering, out int out_bIsBuffering)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0x2E922C", Offset = "0x2E922C", VA = "0x2E922C")]
	public static void StopAll(GameObject in_gameObjectID)
	{
	}

	[Token(Token = "0x6000252")]
	[Address(RVA = "0x2E93BC", Offset = "0x2E93BC", VA = "0x2E93BC")]
	public static void StopAll()
	{
	}

	[Token(Token = "0x6000253")]
	[Address(RVA = "0x2E94E4", Offset = "0x2E94E4", VA = "0x2E94E4")]
	public static void StopPlayingID(uint in_playingID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve)
	{
	}

	[Token(Token = "0x6000254")]
	[Address(RVA = "0x2E964C", Offset = "0x2E964C", VA = "0x2E964C")]
	public static void StopPlayingID(uint in_playingID, int in_uTransitionDuration)
	{
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0x2E979C", Offset = "0x2E979C", VA = "0x2E979C")]
	public static void StopPlayingID(uint in_playingID)
	{
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0x2E98DC", Offset = "0x2E98DC", VA = "0x2E98DC")]
	public static void SetRandomSeed(uint in_uSeed)
	{
	}

	[Token(Token = "0x6000257")]
	[Address(RVA = "0x2E9A1C", Offset = "0x2E9A1C", VA = "0x2E9A1C")]
	public static void MuteBackgroundMusic(bool in_bMute)
	{
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0x2E9B5C", Offset = "0x2E9B5C", VA = "0x2E9B5C")]
	public static bool GetBackgroundMusicMute()
	{
		return default(bool);
	}

	[Token(Token = "0x6000259")]
	[Address(RVA = "0x2E9C8C", Offset = "0x2E9C8C", VA = "0x2E9C8C")]
	public static AKRESULT SendPluginCustomGameData(uint in_busID, GameObject in_busObjectID, AkPluginType in_eType, uint in_uCompanyID, uint in_uPluginID, IntPtr in_pData, uint in_uSizeInBytes)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600025A")]
	[Address(RVA = "0x2E9E74", Offset = "0x2E9E74", VA = "0x2E9E74")]
	public static AKRESULT UnregisterAllGameObj()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600025B")]
	[Address(RVA = "0x2E9F9C", Offset = "0x2E9F9C", VA = "0x2E9F9C")]
	public static AKRESULT SetMultiplePositions(GameObject in_GameObjectID, AkPositionArray in_pPositions, ushort in_NumPositions, AkMultiPositionType in_eMultiPositionType)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600025C")]
	[Address(RVA = "0x2EA160", Offset = "0x2EA160", VA = "0x2EA160")]
	public static AKRESULT SetMultiplePositions(GameObject in_GameObjectID, AkPositionArray in_pPositions, ushort in_NumPositions)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0x2EA318", Offset = "0x2EA318", VA = "0x2EA318")]
	public static AKRESULT SetMultiplePositions(GameObject in_GameObjectID, AkChannelEmitterArray in_pPositions, ushort in_NumPositions, AkMultiPositionType in_eMultiPositionType)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600025E")]
	[Address(RVA = "0x2EA4DC", Offset = "0x2EA4DC", VA = "0x2EA4DC")]
	public static AKRESULT SetMultiplePositions(GameObject in_GameObjectID, AkChannelEmitterArray in_pPositions, ushort in_NumPositions)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600025F")]
	[Address(RVA = "0x2EA694", Offset = "0x2EA694", VA = "0x2EA694")]
	public static AKRESULT SetScalingFactor(GameObject in_GameObjectID, float in_fAttenuationScalingFactor)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000260")]
	[Address(RVA = "0x2EA840", Offset = "0x2EA840", VA = "0x2EA840")]
	public static AKRESULT ClearBanks()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0x2EA968", Offset = "0x2EA968", VA = "0x2EA968")]
	public static AKRESULT SetBankLoadIOSettings(float in_fThroughput, sbyte in_priority)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000262")]
	[Address(RVA = "0x2EAAB8", Offset = "0x2EAAB8", VA = "0x2EAAB8")]
	public static AKRESULT LoadBank(string in_pszString, int in_memPoolId, out uint out_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000263")]
	[Address(RVA = "0x2EAC54", Offset = "0x2EAC54", VA = "0x2EAC54")]
	public static AKRESULT LoadBank(uint in_bankID, int in_memPoolId)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000264")]
	[Address(RVA = "0x2EADA4", Offset = "0x2EADA4", VA = "0x2EADA4")]
	public static AKRESULT LoadBank(IntPtr in_pInMemoryBankPtr, uint in_uInMemoryBankSize, out uint out_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000265")]
	[Address(RVA = "0x2EAF1C", Offset = "0x2EAF1C", VA = "0x2EAF1C")]
	public static AKRESULT LoadBank(IntPtr in_pInMemoryBankPtr, uint in_uInMemoryBankSize, int in_uPoolForBankMedia, out uint out_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000266")]
	[Address(RVA = "0x2EB0A4", Offset = "0x2EB0A4", VA = "0x2EB0A4")]
	public static AKRESULT LoadBank(string in_pszString, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie, int in_memPoolId, out uint out_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0x2EB2C0", Offset = "0x2EB2C0", VA = "0x2EB2C0")]
	public static AKRESULT LoadBank(uint in_bankID, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie, int in_memPoolId)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0x2EB490", Offset = "0x2EB490", VA = "0x2EB490")]
	public static AKRESULT LoadBank(IntPtr in_pInMemoryBankPtr, uint in_uInMemoryBankSize, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie, out uint out_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000269")]
	[Address(RVA = "0x2EB684", Offset = "0x2EB684", VA = "0x2EB684")]
	public static AKRESULT LoadBank(IntPtr in_pInMemoryBankPtr, uint in_uInMemoryBankSize, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie, int in_uPoolForBankMedia, out uint out_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600026A")]
	[Address(RVA = "0x2EB884", Offset = "0x2EB884", VA = "0x2EB884")]
	public static AKRESULT UnloadBank(string in_pszString, IntPtr in_pInMemoryBankPtr, out int out_pMemPoolId)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600026B")]
	[Address(RVA = "0x2EBA20", Offset = "0x2EBA20", VA = "0x2EBA20")]
	public static AKRESULT UnloadBank(string in_pszString, IntPtr in_pInMemoryBankPtr)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600026C")]
	[Address(RVA = "0x2EBB94", Offset = "0x2EBB94", VA = "0x2EBB94")]
	public static AKRESULT UnloadBank(uint in_bankID, IntPtr in_pInMemoryBankPtr, out int out_pMemPoolId)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600026D")]
	[Address(RVA = "0x2EBD0C", Offset = "0x2EBD0C", VA = "0x2EBD0C")]
	public static AKRESULT UnloadBank(uint in_bankID, IntPtr in_pInMemoryBankPtr)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600026E")]
	[Address(RVA = "0x2EBE5C", Offset = "0x2EBE5C", VA = "0x2EBE5C")]
	public static AKRESULT UnloadBank(string in_pszString, IntPtr in_pInMemoryBankPtr, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600026F")]
	[Address(RVA = "0x2EC054", Offset = "0x2EC054", VA = "0x2EC054")]
	public static AKRESULT UnloadBank(uint in_bankID, IntPtr in_pInMemoryBankPtr, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0x2EC224", Offset = "0x2EC224", VA = "0x2EC224")]
	public static void CancelBankCallbackCookie(object in_pCookie)
	{
	}

	[Token(Token = "0x6000271")]
	[Address(RVA = "0x2EC2AC", Offset = "0x2EC2AC", VA = "0x2EC2AC")]
	public static AKRESULT PrepareBank(AkPreparationType in_PreparationType, string in_pszString, AkBankContent in_uFlags)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000272")]
	[Address(RVA = "0x2EC438", Offset = "0x2EC438", VA = "0x2EC438")]
	public static AKRESULT PrepareBank(AkPreparationType in_PreparationType, string in_pszString)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000273")]
	[Address(RVA = "0x2EC5AC", Offset = "0x2EC5AC", VA = "0x2EC5AC")]
	public static AKRESULT PrepareBank(AkPreparationType in_PreparationType, uint in_bankID, AkBankContent in_uFlags)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000274")]
	[Address(RVA = "0x2EC714", Offset = "0x2EC714", VA = "0x2EC714")]
	public static AKRESULT PrepareBank(AkPreparationType in_PreparationType, uint in_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000275")]
	[Address(RVA = "0x2EC864", Offset = "0x2EC864", VA = "0x2EC864")]
	public static AKRESULT PrepareBank(AkPreparationType in_PreparationType, string in_pszString, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie, AkBankContent in_uFlags)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000276")]
	[Address(RVA = "0x2ECA6C", Offset = "0x2ECA6C", VA = "0x2ECA6C")]
	public static AKRESULT PrepareBank(AkPreparationType in_PreparationType, string in_pszString, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000277")]
	[Address(RVA = "0x2ECC64", Offset = "0x2ECC64", VA = "0x2ECC64")]
	public static AKRESULT PrepareBank(AkPreparationType in_PreparationType, uint in_bankID, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie, AkBankContent in_uFlags)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000278")]
	[Address(RVA = "0x2ECE44", Offset = "0x2ECE44", VA = "0x2ECE44")]
	public static AKRESULT PrepareBank(AkPreparationType in_PreparationType, uint in_bankID, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000279")]
	[Address(RVA = "0x2ED014", Offset = "0x2ED014", VA = "0x2ED014")]
	public static AKRESULT ClearPreparedEvents()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600027A")]
	[Address(RVA = "0x2ED13C", Offset = "0x2ED13C", VA = "0x2ED13C")]
	public static AKRESULT PrepareEvent(AkPreparationType in_PreparationType, string[] in_ppszString, uint in_uNumEvent)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600027B")]
	[Address(RVA = "0x2ED580", Offset = "0x2ED580", VA = "0x2ED580")]
	public static AKRESULT PrepareEvent(AkPreparationType in_PreparationType, uint[] in_pEventID, uint in_uNumEvent)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600027C")]
	[Address(RVA = "0x2ED6F0", Offset = "0x2ED6F0", VA = "0x2ED6F0")]
	public static AKRESULT PrepareEvent(AkPreparationType in_PreparationType, string[] in_ppszString, uint in_uNumEvent, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600027D")]
	[Address(RVA = "0x2EDBB8", Offset = "0x2EDBB8", VA = "0x2EDBB8")]
	public static AKRESULT PrepareEvent(AkPreparationType in_PreparationType, uint[] in_pEventID, uint in_uNumEvent, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600027E")]
	[Address(RVA = "0x2EDDA0", Offset = "0x2EDDA0", VA = "0x2EDDA0")]
	public static AKRESULT SetMedia(AkSourceSettings in_pSourceSettings, uint in_uNumSourceSettings)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600027F")]
	[Address(RVA = "0x2EDF04", Offset = "0x2EDF04", VA = "0x2EDF04")]
	public static AKRESULT UnsetMedia(AkSourceSettings in_pSourceSettings, uint in_uNumSourceSettings)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000280")]
	[Address(RVA = "0x2EE068", Offset = "0x2EE068", VA = "0x2EE068")]
	public static AKRESULT PrepareGameSyncs(AkPreparationType in_PreparationType, AkGroupType in_eGameSyncType, string in_pszGroupName, string[] in_ppszGameSyncName, uint in_uNumGameSyncs)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000281")]
	[Address(RVA = "0x2EE4E8", Offset = "0x2EE4E8", VA = "0x2EE4E8")]
	public static AKRESULT PrepareGameSyncs(AkPreparationType in_PreparationType, AkGroupType in_eGameSyncType, uint in_GroupID, uint[] in_paGameSyncID, uint in_uNumGameSyncs)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000282")]
	[Address(RVA = "0x2EE670", Offset = "0x2EE670", VA = "0x2EE670")]
	public static AKRESULT PrepareGameSyncs(AkPreparationType in_PreparationType, AkGroupType in_eGameSyncType, string in_pszGroupName, string[] in_ppszGameSyncName, uint in_uNumGameSyncs, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000283")]
	[Address(RVA = "0x2EEB60", Offset = "0x2EEB60", VA = "0x2EEB60")]
	public static AKRESULT PrepareGameSyncs(AkPreparationType in_PreparationType, AkGroupType in_eGameSyncType, uint in_GroupID, uint[] in_paGameSyncID, uint in_uNumGameSyncs, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000284")]
	[Address(RVA = "0x2EED6C", Offset = "0x2EED6C", VA = "0x2EED6C")]
	public static AKRESULT AddListener(GameObject in_emitterGameObj, GameObject in_listenerGameObj)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000285")]
	[Address(RVA = "0x2EEF1C", Offset = "0x2EEF1C", VA = "0x2EEF1C")]
	public static AKRESULT RemoveListener(GameObject in_emitterGameObj, GameObject in_listenerGameObj)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000286")]
	[Address(RVA = "0x2EF0CC", Offset = "0x2EF0CC", VA = "0x2EF0CC")]
	public static AKRESULT AddDefaultListener(GameObject in_listenerGameObj)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000287")]
	[Address(RVA = "0x2EF25C", Offset = "0x2EF25C", VA = "0x2EF25C")]
	public static AKRESULT RemoveDefaultListener(GameObject in_listenerGameObj)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0x2EF3EC", Offset = "0x2EF3EC", VA = "0x2EF3EC")]
	public static AKRESULT ResetListenersToDefault(GameObject in_emitterGameObj)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000289")]
	[Address(RVA = "0x2EF57C", Offset = "0x2EF57C", VA = "0x2EF57C")]
	public static AKRESULT SetListenerSpatialization(GameObject in_uListenerID, bool in_bSpatialized, AkChannelConfig in_channelConfig, float[] in_pVolumeOffsets)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600028A")]
	[Address(RVA = "0x2EF748", Offset = "0x2EF748", VA = "0x2EF748")]
	public static AKRESULT SetListenerSpatialization(GameObject in_uListenerID, bool in_bSpatialized, AkChannelConfig in_channelConfig)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600028B")]
	[Address(RVA = "0x2EF900", Offset = "0x2EF900", VA = "0x2EF900")]
	public static AKRESULT SetRTPCValue(uint in_rtpcID, float in_value, GameObject in_gameObjectID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve, bool in_bBypassInternalValueInterpolation)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600028C")]
	[Address(RVA = "0x2EFACC", Offset = "0x2EFACC", VA = "0x2EFACC")]
	public static AKRESULT SetRTPCValue(uint in_rtpcID, float in_value, GameObject in_gameObjectID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600028D")]
	[Address(RVA = "0x2EFC8C", Offset = "0x2EFC8C", VA = "0x2EFC8C")]
	public static AKRESULT SetRTPCValue(uint in_rtpcID, float in_value, GameObject in_gameObjectID, int in_uValueChangeDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600028E")]
	[Address(RVA = "0x2EFE3C", Offset = "0x2EFE3C", VA = "0x2EFE3C")]
	public static AKRESULT SetRTPCValue(uint in_rtpcID, float in_value, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600028F")]
	[Address(RVA = "0x2EFFE0", Offset = "0x2EFFE0", VA = "0x2EFFE0")]
	public static AKRESULT SetRTPCValue(uint in_rtpcID, float in_value)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000290")]
	[Address(RVA = "0x2F0130", Offset = "0x2F0130", VA = "0x2F0130")]
	public static AKRESULT SetRTPCValue(string in_pszRtpcName, float in_value, GameObject in_gameObjectID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve, bool in_bBypassInternalValueInterpolation)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000291")]
	[Address(RVA = "0x2F031C", Offset = "0x2F031C", VA = "0x2F031C")]
	public static AKRESULT SetRTPCValue(string in_pszRtpcName, float in_value, GameObject in_gameObjectID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000292")]
	[Address(RVA = "0x2F0508", Offset = "0x2F0508", VA = "0x2F0508")]
	public static AKRESULT SetRTPCValue(string in_pszRtpcName, float in_value, GameObject in_gameObjectID, int in_uValueChangeDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000293")]
	[Address(RVA = "0x2F06E4", Offset = "0x2F06E4", VA = "0x2F06E4")]
	public static AKRESULT SetRTPCValue(string in_pszRtpcName, float in_value, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000294")]
	[Address(RVA = "0x2F08B4", Offset = "0x2F08B4", VA = "0x2F08B4")]
	public static AKRESULT SetRTPCValue(string in_pszRtpcName, float in_value)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000295")]
	[Address(RVA = "0x2F0A28", Offset = "0x2F0A28", VA = "0x2F0A28")]
	public static AKRESULT SetRTPCValueByPlayingID(uint in_rtpcID, float in_value, uint in_playingID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve, bool in_bBypassInternalValueInterpolation)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000296")]
	[Address(RVA = "0x2F0BB8", Offset = "0x2F0BB8", VA = "0x2F0BB8")]
	public static AKRESULT SetRTPCValueByPlayingID(uint in_rtpcID, float in_value, uint in_playingID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0x2F0D38", Offset = "0x2F0D38", VA = "0x2F0D38")]
	public static AKRESULT SetRTPCValueByPlayingID(uint in_rtpcID, float in_value, uint in_playingID, int in_uValueChangeDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0x2F0EAC", Offset = "0x2F0EAC", VA = "0x2F0EAC")]
	public static AKRESULT SetRTPCValueByPlayingID(uint in_rtpcID, float in_value, uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000299")]
	[Address(RVA = "0x2F1014", Offset = "0x2F1014", VA = "0x2F1014")]
	public static AKRESULT SetRTPCValueByPlayingID(string in_pszRtpcName, float in_value, uint in_playingID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve, bool in_bBypassInternalValueInterpolation)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600029A")]
	[Address(RVA = "0x2F11C8", Offset = "0x2F11C8", VA = "0x2F11C8")]
	public static AKRESULT SetRTPCValueByPlayingID(string in_pszRtpcName, float in_value, uint in_playingID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600029B")]
	[Address(RVA = "0x2F1370", Offset = "0x2F1370", VA = "0x2F1370")]
	public static AKRESULT SetRTPCValueByPlayingID(string in_pszRtpcName, float in_value, uint in_playingID, int in_uValueChangeDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600029C")]
	[Address(RVA = "0x2F150C", Offset = "0x2F150C", VA = "0x2F150C")]
	public static AKRESULT SetRTPCValueByPlayingID(string in_pszRtpcName, float in_value, uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600029D")]
	[Address(RVA = "0x2F1698", Offset = "0x2F1698", VA = "0x2F1698")]
	public static AKRESULT ResetRTPCValue(uint in_rtpcID, GameObject in_gameObjectID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve, bool in_bBypassInternalValueInterpolation)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600029E")]
	[Address(RVA = "0x2F1864", Offset = "0x2F1864", VA = "0x2F1864")]
	public static AKRESULT ResetRTPCValue(uint in_rtpcID, GameObject in_gameObjectID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600029F")]
	[Address(RVA = "0x2F1A20", Offset = "0x2F1A20", VA = "0x2F1A20")]
	public static AKRESULT ResetRTPCValue(uint in_rtpcID, GameObject in_gameObjectID, int in_uValueChangeDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0x2F1BD0", Offset = "0x2F1BD0", VA = "0x2F1BD0")]
	public static AKRESULT ResetRTPCValue(uint in_rtpcID, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0x2F1D70", Offset = "0x2F1D70", VA = "0x2F1D70")]
	public static AKRESULT ResetRTPCValue(uint in_rtpcID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0x2F1EB0", Offset = "0x2F1EB0", VA = "0x2F1EB0")]
	public static AKRESULT ResetRTPCValue(string in_pszRtpcName, GameObject in_gameObjectID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve, bool in_bBypassInternalValueInterpolation)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0x2F2094", Offset = "0x2F2094", VA = "0x2F2094")]
	public static AKRESULT ResetRTPCValue(string in_pszRtpcName, GameObject in_gameObjectID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0x2F2270", Offset = "0x2F2270", VA = "0x2F2270")]
	public static AKRESULT ResetRTPCValue(string in_pszRtpcName, GameObject in_gameObjectID, int in_uValueChangeDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0x2F2444", Offset = "0x2F2444", VA = "0x2F2444")]
	public static AKRESULT ResetRTPCValue(string in_pszRtpcName, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0x2F2608", Offset = "0x2F2608", VA = "0x2F2608")]
	public static AKRESULT ResetRTPCValue(string in_pszRtpcName)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0x2F276C", Offset = "0x2F276C", VA = "0x2F276C")]
	public static AKRESULT SetSwitch(uint in_switchGroup, uint in_switchState, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0x2F2910", Offset = "0x2F2910", VA = "0x2F2910")]
	public static AKRESULT SetSwitch(string in_pszSwitchGroup, string in_pszSwitchState, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0x2F2AF4", Offset = "0x2F2AF4", VA = "0x2F2AF4")]
	public static AKRESULT PostTrigger(uint in_triggerID, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0x2F2C94", Offset = "0x2F2C94", VA = "0x2F2C94")]
	public static AKRESULT PostTrigger(string in_pszTrigger, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0x2F2E58", Offset = "0x2F2E58", VA = "0x2F2E58")]
	public static AKRESULT SetState(uint in_stateGroup, uint in_state)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0x2F2FA8", Offset = "0x2F2FA8", VA = "0x2F2FA8")]
	public static AKRESULT SetState(string in_pszStateGroup, string in_pszState)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0x2F3130", Offset = "0x2F3130", VA = "0x2F3130")]
	public static AKRESULT SetGameObjectAuxSendValues(GameObject in_gameObjectID, AkAuxSendArray in_aAuxSendValues, uint in_uNumSendValues)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0x2F32F4", Offset = "0x2F32F4", VA = "0x2F32F4")]
	public static AKRESULT SetGameObjectOutputBusVolume(GameObject in_emitterObjID, GameObject in_listenerObjID, float in_fControlValue)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0x2F34C0", Offset = "0x2F34C0", VA = "0x2F34C0")]
	public static AKRESULT SetActorMixerEffect(uint in_audioNodeID, uint in_uFXIndex, uint in_shareSetID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0x2F3628", Offset = "0x2F3628", VA = "0x2F3628")]
	public static AKRESULT SetBusEffect(uint in_audioNodeID, uint in_uFXIndex, uint in_shareSetID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0x2F3790", Offset = "0x2F3790", VA = "0x2F3790")]
	public static AKRESULT SetBusEffect(string in_pszBusName, uint in_uFXIndex, uint in_shareSetID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0x2F391C", Offset = "0x2F391C", VA = "0x2F391C")]
	public static AKRESULT SetMixer(uint in_audioNodeID, uint in_shareSetID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0x2F3A6C", Offset = "0x2F3A6C", VA = "0x2F3A6C")]
	public static AKRESULT SetMixer(string in_pszBusName, uint in_shareSetID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0x2F3BE0", Offset = "0x2F3BE0", VA = "0x2F3BE0")]
	public static AKRESULT SetBusConfig(uint in_audioNodeID, AkChannelConfig in_channelConfig)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0x2F3D44", Offset = "0x2F3D44", VA = "0x2F3D44")]
	public static AKRESULT SetBusConfig(string in_pszBusName, AkChannelConfig in_channelConfig)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0x2F3ECC", Offset = "0x2F3ECC", VA = "0x2F3ECC")]
	public static AKRESULT SetObjectObstructionAndOcclusion(GameObject in_EmitterID, GameObject in_ListenerID, float in_fObstructionLevel, float in_fOcclusionLevel)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0x2F40A8", Offset = "0x2F40A8", VA = "0x2F40A8")]
	public static AKRESULT SetMultipleObstructionAndOcclusion(GameObject in_EmitterID, GameObject in_uListenerID, AkObstructionOcclusionValues in_fObstructionOcclusionValues, uint in_uNumOcclusionObstruction)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0x2F42C0", Offset = "0x2F42C0", VA = "0x2F42C0")]
	public static AKRESULT StartOutputCapture(string in_CaptureFileName)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0x2F4424", Offset = "0x2F4424", VA = "0x2F4424")]
	public static AKRESULT StopOutputCapture()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0x2F454C", Offset = "0x2F454C", VA = "0x2F454C")]
	public static AKRESULT AddOutputCaptureMarker(string in_MarkerText)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0x2F46B0", Offset = "0x2F46B0", VA = "0x2F46B0")]
	public static AKRESULT StartProfilerCapture(string in_CaptureFileName)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0x2F4814", Offset = "0x2F4814", VA = "0x2F4814")]
	public static AKRESULT StopProfilerCapture()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002BD")]
	[Address(RVA = "0x2F493C", Offset = "0x2F493C", VA = "0x2F493C")]
	public static AKRESULT RemoveOutput(ulong in_idOutput)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0x2F4A94", Offset = "0x2F4A94", VA = "0x2F4A94")]
	public static ulong GetOutputID(uint in_idShareset, uint in_idDevice)
	{
		return default(ulong);
	}

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0x2F4BE4", Offset = "0x2F4BE4", VA = "0x2F4BE4")]
	public static ulong GetOutputID(string in_szShareSet, uint in_idDevice)
	{
		return default(ulong);
	}

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0x2F4D60", Offset = "0x2F4D60", VA = "0x2F4D60")]
	public static AKRESULT SetBusDevice(uint in_idBus, uint in_idNewDevice)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0x2F4EB0", Offset = "0x2F4EB0", VA = "0x2F4EB0")]
	public static AKRESULT SetBusDevice(string in_BusName, string in_DeviceName)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002C2")]
	[Address(RVA = "0x2F5038", Offset = "0x2F5038", VA = "0x2F5038")]
	public static AKRESULT SetOutputVolume(ulong in_idOutput, float in_fVolume)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0x2F51A8", Offset = "0x2F51A8", VA = "0x2F51A8")]
	public static AKRESULT Suspend(bool in_bRenderAnyway)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002C4")]
	[Address(RVA = "0x2F52E8", Offset = "0x2F52E8", VA = "0x2F52E8")]
	public static AKRESULT Suspend()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002C5")]
	[Address(RVA = "0x2F5410", Offset = "0x2F5410", VA = "0x2F5410")]
	public static AKRESULT WakeupFromSuspend()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002C6")]
	[Address(RVA = "0x2F5538", Offset = "0x2F5538", VA = "0x2F5538")]
	public static uint GetBufferTick()
	{
		return default(uint);
	}

	[Token(Token = "0x60002C9")]
	[Address(RVA = "0x2F58B0", Offset = "0x2F58B0", VA = "0x2F58B0")]
	public static AKRESULT GetPlayingSegmentInfo(uint in_PlayingID, AkSegmentInfo out_segmentInfo, bool in_bExtrapolate)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0x2F5A60", Offset = "0x2F5A60", VA = "0x2F5A60")]
	public static AKRESULT GetPlayingSegmentInfo(uint in_PlayingID, AkSegmentInfo out_segmentInfo)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0x2F5BF8", Offset = "0x2F5BF8", VA = "0x2F5BF8")]
	public static AKRESULT PostCode(AkMonitorErrorCode in_eError, AkMonitorErrorLevel in_eErrorLevel, uint in_playingID, GameObject in_gameObjID, uint in_audioNodeID, bool in_bIsBus)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0x2F5DD0", Offset = "0x2F5DD0", VA = "0x2F5DD0")]
	public static AKRESULT PostCode(AkMonitorErrorCode in_eError, AkMonitorErrorLevel in_eErrorLevel, uint in_playingID, GameObject in_gameObjID, uint in_audioNodeID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0x2F5F98", Offset = "0x2F5F98", VA = "0x2F5F98")]
	public static AKRESULT PostCode(AkMonitorErrorCode in_eError, AkMonitorErrorLevel in_eErrorLevel, uint in_playingID, GameObject in_gameObjID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0x2F6158", Offset = "0x2F6158", VA = "0x2F6158")]
	public static AKRESULT PostCode(AkMonitorErrorCode in_eError, AkMonitorErrorLevel in_eErrorLevel, uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002CF")]
	[Address(RVA = "0x2F62C0", Offset = "0x2F62C0", VA = "0x2F62C0")]
	public static AKRESULT PostCode(AkMonitorErrorCode in_eError, AkMonitorErrorLevel in_eErrorLevel)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002D0")]
	[Address(RVA = "0x2F6410", Offset = "0x2F6410", VA = "0x2F6410")]
	public static AKRESULT PostString(string in_pszError, AkMonitorErrorLevel in_eErrorLevel, uint in_playingID, GameObject in_gameObjID, uint in_audioNodeID, bool in_bIsBus)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0x2F660C", Offset = "0x2F660C", VA = "0x2F660C")]
	public static AKRESULT PostString(string in_pszError, AkMonitorErrorLevel in_eErrorLevel, uint in_playingID, GameObject in_gameObjID, uint in_audioNodeID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0x2F67F8", Offset = "0x2F67F8", VA = "0x2F67F8")]
	public static AKRESULT PostString(string in_pszError, AkMonitorErrorLevel in_eErrorLevel, uint in_playingID, GameObject in_gameObjID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0x2F69D8", Offset = "0x2F69D8", VA = "0x2F69D8")]
	public static AKRESULT PostString(string in_pszError, AkMonitorErrorLevel in_eErrorLevel, uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0x2F6B64", Offset = "0x2F6B64", VA = "0x2F6B64")]
	public static AKRESULT PostString(string in_pszError, AkMonitorErrorLevel in_eErrorLevel)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002D5")]
	[Address(RVA = "0x2F6CD8", Offset = "0x2F6CD8", VA = "0x2F6CD8")]
	public static int GetTimeStamp()
	{
		return default(int);
	}

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0x2F6E00", Offset = "0x2F6E00", VA = "0x2F6E00")]
	public static uint GetNumNonZeroBits(uint in_uWord)
	{
		return default(uint);
	}

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0x2F6F40", Offset = "0x2F6F40", VA = "0x2F6F40")]
	public static uint ResolveDialogueEvent(uint in_eventID, uint[] in_aArgumentValues, uint in_uNumArguments, uint in_idSequence)
	{
		return default(uint);
	}

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0x2F70BC", Offset = "0x2F70BC", VA = "0x2F70BC")]
	public static uint ResolveDialogueEvent(uint in_eventID, uint[] in_aArgumentValues, uint in_uNumArguments)
	{
		return default(uint);
	}

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0x2F722C", Offset = "0x2F722C", VA = "0x2F722C")]
	public static AKRESULT GetDialogueEventCustomPropertyValue(uint in_eventID, uint in_uPropID, out int out_iValue)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0x2F73A4", Offset = "0x2F73A4", VA = "0x2F73A4")]
	public static AKRESULT GetDialogueEventCustomPropertyValue(uint in_eventID, uint in_uPropID, out float out_fValue)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0x2F751C", Offset = "0x2F751C", VA = "0x2F751C")]
	public static AKRESULT GetPosition(GameObject in_GameObjectID, AkTransform out_rPosition)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0x2F76CC", Offset = "0x2F76CC", VA = "0x2F76CC")]
	public static AKRESULT GetListenerPosition(GameObject in_uIndex, AkTransform out_rPosition)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0x2F787C", Offset = "0x2F787C", VA = "0x2F787C")]
	public static AKRESULT GetRTPCValue(uint in_rtpcID, GameObject in_gameObjectID, uint in_playingID, out float out_rValue, ref int io_rValueType)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0x2F7A58", Offset = "0x2F7A58", VA = "0x2F7A58")]
	public static AKRESULT GetRTPCValue(string in_pszRtpcName, GameObject in_gameObjectID, uint in_playingID, out float out_rValue, ref int io_rValueType)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0x2F7C54", Offset = "0x2F7C54", VA = "0x2F7C54")]
	public static AKRESULT GetSwitch(uint in_switchGroup, GameObject in_gameObjectID, out uint out_rSwitchState)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0x2F7E18", Offset = "0x2F7E18", VA = "0x2F7E18")]
	public static AKRESULT GetSwitch(string in_pstrSwitchGroupName, GameObject in_GameObj, out uint out_rSwitchState)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0x2F8000", Offset = "0x2F8000", VA = "0x2F8000")]
	public static AKRESULT GetState(uint in_stateGroup, out uint out_rState)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0x2F8160", Offset = "0x2F8160", VA = "0x2F8160")]
	public static AKRESULT GetState(string in_pstrStateGroupName, out uint out_rState)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0x2F82E4", Offset = "0x2F82E4", VA = "0x2F82E4")]
	public static AKRESULT GetGameObjectAuxSendValues(GameObject in_gameObjectID, AkAuxSendArray out_paAuxSendValues, ref uint io_ruNumSendValues)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0x2F84A8", Offset = "0x2F84A8", VA = "0x2F84A8")]
	public static AKRESULT GetGameObjectDryLevelValue(GameObject in_EmitterID, GameObject in_ListenerID, out float out_rfControlValue)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0x2F8678", Offset = "0x2F8678", VA = "0x2F8678")]
	public static AKRESULT GetObjectObstructionAndOcclusion(GameObject in_EmitterID, GameObject in_ListenerID, out float out_rfObstructionLevel, out float out_rfOcclusionLevel)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0x2F8860", Offset = "0x2F8860", VA = "0x2F8860")]
	public static AKRESULT QueryAudioObjectIDs(uint in_eventID, ref uint io_ruNumItems, AkObjectInfo out_aObjectInfos)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0x2F8A10", Offset = "0x2F8A10", VA = "0x2F8A10")]
	public static AKRESULT QueryAudioObjectIDs(string in_pszEventName, ref uint io_ruNumItems, AkObjectInfo out_aObjectInfos)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0x2F8BE4", Offset = "0x2F8BE4", VA = "0x2F8BE4")]
	public static AKRESULT GetPositioningInfo(uint in_ObjectID, AkPositioningInfo out_rPositioningInfo)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0x2F8D7C", Offset = "0x2F8D7C", VA = "0x2F8D7C")]
	public static bool GetIsGameObjectActive(GameObject in_GameObjId)
	{
		return default(bool);
	}

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0x2F8F14", Offset = "0x2F8F14", VA = "0x2F8F14")]
	public static float GetMaxRadius(GameObject in_GameObjId)
	{
		return default(float);
	}

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0x2F90A4", Offset = "0x2F90A4", VA = "0x2F90A4")]
	public static uint GetEventIDFromPlayingID(uint in_playingID)
	{
		return default(uint);
	}

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0x2F91E4", Offset = "0x2F91E4", VA = "0x2F91E4")]
	public static ulong GetGameObjectFromPlayingID(uint in_playingID)
	{
		return default(ulong);
	}

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0x2F9324", Offset = "0x2F9324", VA = "0x2F9324")]
	public static AKRESULT GetPlayingIDsFromGameObject(GameObject in_GameObjId, ref uint io_ruNumIDs, uint[] out_aPlayingIDs)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0x2F9568", Offset = "0x2F9568", VA = "0x2F9568")]
	public static AKRESULT GetCustomPropertyValue(uint in_ObjectID, uint in_uPropID, out int out_iValue)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0x2F96E0", Offset = "0x2F96E0", VA = "0x2F96E0")]
	public static AKRESULT GetCustomPropertyValue(uint in_ObjectID, uint in_uPropID, out float out_fValue)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0x2F9858", Offset = "0x2F9858", VA = "0x2F9858")]
	public static void AK_SPEAKER_SETUP_FIX_LEFT_TO_CENTER(ref uint io_uChannelMask)
	{
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0x2F9998", Offset = "0x2F9998", VA = "0x2F9998")]
	public static void AK_SPEAKER_SETUP_FIX_REAR_TO_SIDE(ref uint io_uChannelMask)
	{
	}

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0x2F9AD8", Offset = "0x2F9AD8", VA = "0x2F9AD8")]
	public static void AK_SPEAKER_SETUP_CONVERT_TO_SUPPORTED(ref uint io_uChannelMask)
	{
	}

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0x2F9C18", Offset = "0x2F9C18", VA = "0x2F9C18")]
	public static byte ChannelMaskToNumChannels(uint in_uChannelMask)
	{
		return default(byte);
	}

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0x2F9D58", Offset = "0x2F9D58", VA = "0x2F9D58")]
	public static uint ChannelMaskFromNumChannels(uint in_uNumChannels)
	{
		return default(uint);
	}

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0x2F9E98", Offset = "0x2F9E98", VA = "0x2F9E98")]
	public static byte ChannelBitToIndex(uint in_uChannelBit, uint in_uChannelMask)
	{
		return default(byte);
	}

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0x2F9FE8", Offset = "0x2F9FE8", VA = "0x2F9FE8")]
	public static bool HasSurroundChannels(uint in_uChannelMask)
	{
		return default(bool);
	}

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0x2FA130", Offset = "0x2FA130", VA = "0x2FA130")]
	public static bool HasStrictlyOnePairOfSurroundChannels(uint in_uChannelMask)
	{
		return default(bool);
	}

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0x2FA278", Offset = "0x2FA278", VA = "0x2FA278")]
	public static bool HasSideAndRearChannels(uint in_uChannelMask)
	{
		return default(bool);
	}

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0x2FA3C0", Offset = "0x2FA3C0", VA = "0x2FA3C0")]
	public static bool HasHeightChannels(uint in_uChannelMask)
	{
		return default(bool);
	}

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0x2FA508", Offset = "0x2FA508", VA = "0x2FA508")]
	public static uint BackToSideChannels(uint in_uChannelMask)
	{
		return default(uint);
	}

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0x2FA648", Offset = "0x2FA648", VA = "0x2FA648")]
	public static uint StdChannelIndexToDisplayIndex(AkChannelOrdering in_eOrdering, uint in_uChannelMask, uint in_uChannelIdx)
	{
		return default(uint);
	}

	[Token(Token = "0x6000300")]
	[Address(RVA = "0x2FAC68", Offset = "0x2FAC68", VA = "0x2FAC68")]
	public static int GetPoolID()
	{
		return default(int);
	}

	[Token(Token = "0x6000301")]
	[Address(RVA = "0x2FAD90", Offset = "0x2FAD90", VA = "0x2FAD90")]
	public static AKRESULT RegisterEmitter(GameObject in_gameObjectID, AkEmitterSettings in_settings)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000302")]
	[Address(RVA = "0x2FAF40", Offset = "0x2FAF40", VA = "0x2FAF40")]
	public static AKRESULT UnregisterEmitter(GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000303")]
	[Address(RVA = "0x2FB0D0", Offset = "0x2FB0D0", VA = "0x2FB0D0")]
	public static AKRESULT SetEmitterAuxSendValues(GameObject in_gameObjectID, AkAuxSendArray in_pAuxSends, uint in_uNumAux)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000304")]
	[Address(RVA = "0x2FB294", Offset = "0x2FB294", VA = "0x2FB294")]
	public static AKRESULT SetImageSource(uint in_srcID, AkImageSourceSettings in_info, uint in_AuxBusID, ulong in_roomID, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000305")]
	[Address(RVA = "0x2FB488", Offset = "0x2FB488", VA = "0x2FB488")]
	public static AKRESULT SetImageSource(uint in_srcID, AkImageSourceSettings in_info, uint in_AuxBusID, ulong in_roomID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000306")]
	[Address(RVA = "0x2FB620", Offset = "0x2FB620", VA = "0x2FB620")]
	public static AKRESULT RemoveImageSource(uint in_srcID, uint in_AuxBusID, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000307")]
	[Address(RVA = "0x2FB7C4", Offset = "0x2FB7C4", VA = "0x2FB7C4")]
	public static AKRESULT RemoveImageSource(uint in_srcID, uint in_AuxBusID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000308")]
	[Address(RVA = "0x2FB914", Offset = "0x2FB914", VA = "0x2FB914")]
	public static AKRESULT RemoveGeometry(ulong in_SetID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0x2FBA6C", Offset = "0x2FBA6C", VA = "0x2FBA6C")]
	public static AKRESULT QueryReflectionPaths(GameObject in_gameObjectID, AkVector out_listenerPos, AkVector out_emitterPos, AkReflectionPathInfoArray out_aPaths, out uint io_uArraySize)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600030A")]
	[Address(RVA = "0x2D85D4", Offset = "0x2D85D4", VA = "0x2D85D4")]
	public static AKRESULT RemoveRoom(ulong in_RoomID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0x2FBD58", Offset = "0x2FBD58", VA = "0x2FBD58")]
	public static AKRESULT RemovePortal(ulong in_PortalID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600030C")]
	[Address(RVA = "0x2FBEB0", Offset = "0x2FBEB0", VA = "0x2FBEB0")]
	public static AKRESULT SetGameObjectInRoom(GameObject in_gameObjectID, ulong in_CurrentRoomID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600030D")]
	[Address(RVA = "0x2FC058", Offset = "0x2FC058", VA = "0x2FC058")]
	public static AKRESULT SetEmitterObstructionAndOcclusion(GameObject in_gameObjectID, float in_fObstruction, float in_fOcclusion)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600030E")]
	[Address(RVA = "0x2DBEB8", Offset = "0x2DBEB8", VA = "0x2DBEB8")]
	public static AKRESULT SetPortalObstructionAndOcclusion(ulong in_PortalID, float in_fObstruction, float in_fOcclusion)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600030F")]
	[Address(RVA = "0x2FC2F0", Offset = "0x2FC2F0", VA = "0x2FC2F0")]
	public static AKRESULT GetFastPathSettings(AkInitSettings in_settings, AkPlatformInitSettings in_pfSettings)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0x2FC49C", Offset = "0x2FC49C", VA = "0x2FC49C")]
	public static void SetErrorLogger(AkLogger.ErrorLoggerInteropDelegate logger)
	{
	}

	[Token(Token = "0x6000311")]
	[Address(RVA = "0x2FC5E8", Offset = "0x2FC5E8", VA = "0x2FC5E8")]
	public static void SetErrorLogger()
	{
	}

	[Token(Token = "0x6000312")]
	[Address(RVA = "0x2FC710", Offset = "0x2FC710", VA = "0x2FC710")]
	public static void SetAudioInputCallbacks(AkAudioInputManager.AudioSamplesInteropDelegate getAudioSamples, AkAudioInputManager.AudioFormatInteropDelegate getAudioFormat)
	{
	}

	[Token(Token = "0x6000313")]
	[Address(RVA = "0x2FC87C", Offset = "0x2FC87C", VA = "0x2FC87C")]
	public static AKRESULT Init(AkInitializationSettings settings)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000314")]
	[Address(RVA = "0x2FC9D0", Offset = "0x2FC9D0", VA = "0x2FC9D0")]
	public static AKRESULT InitSpatialAudio(AkSpatialAudioInitSettings settings)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000315")]
	[Address(RVA = "0x2FCB24", Offset = "0x2FCB24", VA = "0x2FCB24")]
	public static AKRESULT InitCommunication(AkCommunicationSettings settings)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000316")]
	[Address(RVA = "0x2FCC78", Offset = "0x2FCC78", VA = "0x2FCC78")]
	public static void Term()
	{
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0x2FCDA0", Offset = "0x2FCDA0", VA = "0x2FCDA0")]
	public static AKRESULT RegisterGameObjInternal(GameObject in_GameObj)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000318")]
	[Address(RVA = "0x2FCF30", Offset = "0x2FCF30", VA = "0x2FCF30")]
	public static AKRESULT UnregisterGameObjInternal(GameObject in_GameObj)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0x2FD0C0", Offset = "0x2FD0C0", VA = "0x2FD0C0")]
	public static AKRESULT RegisterGameObjInternal_WithName(GameObject in_GameObj, string in_pszObjName)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600031A")]
	[Address(RVA = "0x2FD280", Offset = "0x2FD280", VA = "0x2FD280")]
	public static AKRESULT SetBasePath(string in_pszBasePath)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600031B")]
	[Address(RVA = "0x2FD3E4", Offset = "0x2FD3E4", VA = "0x2FD3E4")]
	public static AKRESULT SetCurrentLanguage(string in_pszAudioSrcPath)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600031C")]
	[Address(RVA = "0x2FD548", Offset = "0x2FD548", VA = "0x2FD548")]
	public static AKRESULT LoadFilePackage(string in_pszFilePackageName, out uint out_uPackageID, int in_memPoolID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600031D")]
	[Address(RVA = "0x2FD6E4", Offset = "0x2FD6E4", VA = "0x2FD6E4")]
	public static AKRESULT AddBasePath(string in_pszBasePath)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600031E")]
	[Address(RVA = "0x2FD848", Offset = "0x2FD848", VA = "0x2FD848")]
	public static AKRESULT SetGameName(string in_GameName)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600031F")]
	[Address(RVA = "0x2FD9AC", Offset = "0x2FD9AC", VA = "0x2FD9AC")]
	public static AKRESULT SetDecodedBankPath(string in_DecodedPath)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000320")]
	[Address(RVA = "0x2FDB10", Offset = "0x2FDB10", VA = "0x2FDB10")]
	public static AKRESULT LoadAndDecodeBank(string in_pszString, bool in_bSaveDecodedBank, out uint out_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000321")]
	[Address(RVA = "0x2FDCAC", Offset = "0x2FDCAC", VA = "0x2FDCAC")]
	public static AKRESULT LoadAndDecodeBankFromMemory(IntPtr in_BankData, uint in_BankDataSize, bool in_bSaveDecodedBank, string in_DecodedBankName, bool in_bIsLanguageSpecific, out uint out_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000322")]
	[Address(RVA = "0x2FDE70", Offset = "0x2FDE70", VA = "0x2FDE70")]
	public static string GetCurrentLanguage()
	{
		return null;
	}

	[Token(Token = "0x6000323")]
	[Address(RVA = "0x2FDFD0", Offset = "0x2FDFD0", VA = "0x2FDFD0")]
	public static AKRESULT UnloadFilePackage(uint in_uPackageID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000324")]
	[Address(RVA = "0x2FE110", Offset = "0x2FE110", VA = "0x2FE110")]
	public static AKRESULT UnloadAllFilePackages()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000325")]
	[Address(RVA = "0x2FE238", Offset = "0x2FE238", VA = "0x2FE238")]
	public static AKRESULT SetObjectPosition(GameObject in_GameObjectID, float PosX, float PosY, float PosZ, float FrontX, float FrontY, float FrontZ, float TopX, float TopY, float TopZ)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000326")]
	[Address(RVA = "0x2FE468", Offset = "0x2FE468", VA = "0x2FE468")]
	public static AKRESULT GetSourceMultiplePlayPositions(uint in_PlayingID, uint[] out_audioNodeID, uint[] out_mediaID, int[] out_msTime, ref uint io_pcPositions, bool in_bExtrapolate)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000327")]
	[Address(RVA = "0x2FE72C", Offset = "0x2FE72C", VA = "0x2FE72C")]
	public static AKRESULT SetListeners(GameObject in_emitterGameObj, ulong[] in_pListenerGameObjs, uint in_uNumListeners)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000328")]
	[Address(RVA = "0x2FE8DC", Offset = "0x2FE8DC", VA = "0x2FE8DC")]
	public static AKRESULT SetDefaultListeners(ulong[] in_pListenerObjs, uint in_uNumListeners)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000329")]
	[Address(RVA = "0x2FEA34", Offset = "0x2FEA34", VA = "0x2FEA34")]
	public static AKRESULT AddOutput(AkOutputSettings in_Settings, out ulong out_pDeviceID, ulong[] in_pListenerIDs, uint in_uNumListeners)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600032A")]
	[Address(RVA = "0x2FEC08", Offset = "0x2FEC08", VA = "0x2FEC08")]
	public static void GetDefaultStreamSettings(AkStreamMgrSettings out_settings)
	{
	}

	[Token(Token = "0x600032B")]
	[Address(RVA = "0x2FED5C", Offset = "0x2FED5C", VA = "0x2FED5C")]
	public static void GetDefaultDeviceSettings(AkDeviceSettings out_settings)
	{
	}

	[Token(Token = "0x600032C")]
	[Address(RVA = "0x2FEEB0", Offset = "0x2FEEB0", VA = "0x2FEEB0")]
	public static void GetDefaultMusicSettings(AkMusicSettings out_settings)
	{
	}

	[Token(Token = "0x600032D")]
	[Address(RVA = "0x2FF038", Offset = "0x2FF038", VA = "0x2FF038")]
	public static void GetDefaultInitSettings(AkInitSettings out_settings)
	{
	}

	[Token(Token = "0x600032E")]
	[Address(RVA = "0x2FF18C", Offset = "0x2FF18C", VA = "0x2FF18C")]
	public static void GetDefaultPlatformInitSettings(AkPlatformInitSettings out_settings)
	{
	}

	[Token(Token = "0x600032F")]
	[Address(RVA = "0x2FF314", Offset = "0x2FF314", VA = "0x2FF314")]
	public static uint GetMajorMinorVersion()
	{
		return default(uint);
	}

	[Token(Token = "0x6000330")]
	[Address(RVA = "0x2FF43C", Offset = "0x2FF43C", VA = "0x2FF43C")]
	public static uint GetSubminorBuildVersion()
	{
		return default(uint);
	}

	[Token(Token = "0x6000331")]
	[Address(RVA = "0x2FF564", Offset = "0x2FF564", VA = "0x2FF564")]
	public static AKRESULT QueryIndirectPaths(GameObject in_gameObjectID, AkPathParams arg1, AkReflectionPathInfoArray paths, uint numPaths)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000332")]
	[Address(RVA = "0x2FF788", Offset = "0x2FF788", VA = "0x2FF788")]
	public static AKRESULT QuerySoundPropagationPaths(GameObject in_gameObjectID, AkPathParams arg1, AkPropagationPathInfoArray paths, uint numPaths)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000333")]
	[Address(RVA = "0x2FF9AC", Offset = "0x2FF9AC", VA = "0x2FF9AC")]
	public static AKRESULT QueryDiffractionPaths(GameObject in_gameObjectID, AkPathParams arg1, AkDiffractionPathInfoArray paths, uint numPaths)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000334")]
	[Address(RVA = "0x2DADB4", Offset = "0x2DADB4", VA = "0x2DADB4")]
	public static AKRESULT SetRoomPortal(ulong in_PortalID, AkTransform Transform, AkVector Extent, bool bEnabled, ulong FrontRoom, ulong BackRoom)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0x2D83C8", Offset = "0x2D83C8", VA = "0x2D83C8")]
	public static AKRESULT SetRoom(ulong in_RoomID, AkRoomParams in_roomParams, string in_pName)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000336")]
	[Address(RVA = "0x2FFDBC", Offset = "0x2FFDBC", VA = "0x2FFDBC")]
	public static AKRESULT RegisterSpatialAudioListener(GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000337")]
	[Address(RVA = "0x2FFF4C", Offset = "0x2FFF4C", VA = "0x2FFF4C")]
	public static AKRESULT UnregisterSpatialAudioListener(GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000338")]
	[Address(RVA = "0x3000DC", Offset = "0x3000DC", VA = "0x3000DC")]
	public static AKRESULT SetGeometry(ulong in_GeomSetID, AkTriangleArray Triangles, uint NumTriangles, AkVertexArray Vertices, uint NumVertices, AkAcousticSurfaceArray Surfaces, uint NumSurfaces, bool EnableDiffraction, bool EnableDiffractionOnBoundaryEdges)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0x2C4940", Offset = "0x2C4940", VA = "0x2C4940")]
	public static string StringFromIntPtrString(IntPtr ptr)
	{
		return null;
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0x300318", Offset = "0x300318", VA = "0x300318")]
	public static string StringFromIntPtrWString(IntPtr ptr)
	{
		return null;
	}

	[Token(Token = "0x600033B")]
	[Address(RVA = "0x2C2128", Offset = "0x2C2128", VA = "0x2C2128")]
	public static string StringFromIntPtrOSString(IntPtr ptr)
	{
		return null;
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0x3003A0", Offset = "0x3003A0", VA = "0x3003A0")]
	private static ulong InternalGameObjectHash(GameObject gameObject)
	{
		return default(ulong);
	}

	[Token(Token = "0x600033E")]
	[Address(RVA = "0x2C0B68", Offset = "0x2C0B68", VA = "0x2C0B68")]
	public static ulong GetAkGameObjectID(GameObject gameObject)
	{
		return default(ulong);
	}

	[Token(Token = "0x600033F")]
	[Address(RVA = "0x3009A8", Offset = "0x3009A8", VA = "0x3009A8")]
	public static AKRESULT RegisterGameObj(GameObject gameObject)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000340")]
	[Address(RVA = "0x300A70", Offset = "0x300A70", VA = "0x300A70")]
	public static AKRESULT RegisterGameObj(GameObject gameObject, string name)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000341")]
	[Address(RVA = "0x300B40", Offset = "0x300B40", VA = "0x300B40")]
	public static AKRESULT UnregisterGameObj(GameObject gameObject)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000342")]
	[Address(RVA = "0x300C08", Offset = "0x300C08", VA = "0x300C08")]
	public static AKRESULT SetObjectPosition(GameObject gameObject, Transform transform)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000343")]
	[Address(RVA = "0x300E20", Offset = "0x300E20", VA = "0x300E20")]
	public static AKRESULT SetObjectPosition(GameObject gameObject, Vector3 position, Vector3 forward, Vector3 up)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000344")]
	[Address(RVA = "0x2C0C14", Offset = "0x2C0C14", VA = "0x2C0C14")]
	public static void PreGameObjectAPICall(GameObject gameObject, ulong id)
	{
	}
}
[Token(Token = "0x2000054")]
public class ChangeMat : MonoBehaviour
{
	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Material material;

	[Token(Token = "0x6000346")]
	[Address(RVA = "0x27F258", Offset = "0x27F258", VA = "0x27F258")]
	public ChangeMat()
	{
	}

	[Token(Token = "0x6000347")]
	[Address(RVA = "0x27F260", Offset = "0x27F260", VA = "0x27F260")]
	public void ChangeMaterial()
	{
	}
}
[Token(Token = "0x2000055")]
public class ChangeName : MonoBehaviour
{
	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string NewName;

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool DestroyAfterUse;

	[Token(Token = "0x6000348")]
	[Address(RVA = "0x27F32C", Offset = "0x27F32C", VA = "0x27F32C")]
	public ChangeName()
	{
	}

	[Token(Token = "0x6000349")]
	[Address(RVA = "0x27F3A0", Offset = "0x27F3A0", VA = "0x27F3A0")]
	public void ChangeNames()
	{
	}
}
[Token(Token = "0x2000056")]
public class DrawingShader : MonoBehaviour
{
	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Material _material;

	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Color _Color;

	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x165218", Offset = "0x165218")]
	public float Offset;

	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x165234", Offset = "0x165234")]
	public float Palier1;

	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16524C", Offset = "0x16524C")]
	public float Palier2;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x165264", Offset = "0x165264")]
	public float Palier3;

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16527C", Offset = "0x16527C")]
	public float Palier4;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x165294", Offset = "0x165294")]
	public float Mix;

	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1652AC", Offset = "0x1652AC")]
	public float MixFilter;

	[NonSerialized]
	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Action<DrawingShader> _updateCallback;

	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private RenderTexture tempRT;

	[Token(Token = "0x600034A")]
	[Address(RVA = "0x20B570", Offset = "0x20B570", VA = "0x20B570")]
	public DrawingShader()
	{
	}

	[Token(Token = "0x600034B")]
	[Address(RVA = "0x20B578", Offset = "0x20B578", VA = "0x20B578")]
	private void Awake()
	{
	}

	[Token(Token = "0x600034C")]
	[Address(RVA = "0x20B854", Offset = "0x20B854", VA = "0x20B854")]
	private void Start()
	{
	}

	[Token(Token = "0x600034D")]
	[Address(RVA = "0x20B614", Offset = "0x20B614", VA = "0x20B614")]
	public void ApplyChange()
	{
	}

	[Token(Token = "0x600034E")]
	[Address(RVA = "0x20B858", Offset = "0x20B858", VA = "0x20B858")]
	private void OnPreRender()
	{
	}

	[Token(Token = "0x600034F")]
	[Address(RVA = "0x20B8D8", Offset = "0x20B8D8", VA = "0x20B8D8")]
	private void OnPostRender()
	{
	}
}
[Token(Token = "0x2000057")]
public class Fade
{
	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public string ID;

	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float fade;

	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool isActive;

	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private float _fadeBegin;

	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float _fadeEnd;

	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float _fadeSpeed;

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float _timer;

	[Token(Token = "0x6000350")]
	[Address(RVA = "0x20CA00", Offset = "0x20CA00", VA = "0x20CA00")]
	public Fade(string id)
	{
	}

	[Token(Token = "0x6000351")]
	[Address(RVA = "0x20CA34", Offset = "0x20CA34", VA = "0x20CA34")]
	public void Update(float temps)
	{
	}

	[Token(Token = "0x6000352")]
	[Address(RVA = "0x20CA94", Offset = "0x20CA94", VA = "0x20CA94")]
	public void Blink(float value, float speed)
	{
	}

	[Token(Token = "0x6000353")]
	[Address(RVA = "0x20CAC0", Offset = "0x20CAC0", VA = "0x20CAC0")]
	public void StartFade(float value, float speed)
	{
	}
}
[Token(Token = "0x2000058")]
public class FadeManager : MonoBehaviour
{
	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1652C4", Offset = "0x1652C4")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x1652C4", Offset = "0x1652C4")]
	private static FadeManager <Instance>k__BackingField;

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1652F8", Offset = "0x1652F8")]
	public float fade;

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Color color;

	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool fadeActive;

	[NonSerialized]
	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool TimeScale;

	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Material _material;

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static List<Fade> fades;

	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public Action<FadeManager> _updateCallback;

	[Token(Token = "0x1700004B")]
	public static FadeManager Instance
	{
		[Token(Token = "0x6000355")]
		[Address(RVA = "0x20C5E8", Offset = "0x20C5E8", VA = "0x20C5E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x165320", Offset = "0x165320")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000356")]
		[Address(RVA = "0x20CB08", Offset = "0x20CB08", VA = "0x20CB08")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x165330", Offset = "0x165330")]
		private set
		{
		}
	}

	[Token(Token = "0x6000354")]
	[Address(RVA = "0x20CAF8", Offset = "0x20CAF8", VA = "0x20CAF8")]
	public FadeManager()
	{
	}

	[Token(Token = "0x6000357")]
	[Address(RVA = "0x20CB98", Offset = "0x20CB98", VA = "0x20CB98")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000358")]
	[Address(RVA = "0x20CCD4", Offset = "0x20CCD4", VA = "0x20CCD4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0x20CDDC", Offset = "0x20CDDC", VA = "0x20CDDC")]
	private Material CreateMaterial(string shaderName)
	{
		return null;
	}

	[Token(Token = "0x600035A")]
	[Address(RVA = "0x20D03C", Offset = "0x20D03C", VA = "0x20D03C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600035B")]
	[Address(RVA = "0x20D0B8", Offset = "0x20D0B8", VA = "0x20D0B8")]
	private void Update()
	{
	}

	[Token(Token = "0x600035C")]
	[Address(RVA = "0x20D394", Offset = "0x20D394", VA = "0x20D394")]
	public void KeepOnlyFade(string name)
	{
	}

	[Token(Token = "0x600035D")]
	[Address(RVA = "0x20C674", Offset = "0x20C674", VA = "0x20C674")]
	public void StartFade(float value, float speed, string ID, bool blink = false)
	{
	}
}
[Token(Token = "0x2000059")]
[ExecuteInEditMode]
public class FlipYShader : MonoBehaviour
{
	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool flip;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Material _materialFlipY;

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Material _materialPassthrough;

	[Token(Token = "0x600035F")]
	[Address(RVA = "0x210738", Offset = "0x210738", VA = "0x210738")]
	public FlipYShader()
	{
	}

	[Token(Token = "0x6000360")]
	[Address(RVA = "0x210740", Offset = "0x210740", VA = "0x210740")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0x210810", Offset = "0x210810", VA = "0x210810")]
	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}
}
[Token(Token = "0x200005A")]
public class FlipYSwitch : MonoBehaviour
{
	[Token(Token = "0x6000362")]
	[Address(RVA = "0x210924", Offset = "0x210924", VA = "0x210924")]
	public FlipYSwitch()
	{
	}
}
[Token(Token = "0x200005B")]
public class MaskedItem : MonoBehaviour
{
	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int Queue;

	[Token(Token = "0x6000363")]
	[Address(RVA = "0x248D30", Offset = "0x248D30", VA = "0x248D30")]
	public MaskedItem()
	{
	}

	[Token(Token = "0x6000364")]
	[Address(RVA = "0x248D38", Offset = "0x248D38", VA = "0x248D38")]
	private void Start()
	{
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0x248D3C", Offset = "0x248D3C", VA = "0x248D3C")]
	public void ChangeRenderQueue()
	{
	}
}
[Token(Token = "0x200005C")]
[ExecuteInEditMode]
public class PostProcessing : MonoBehaviour
{
	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Material material;

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x165360", Offset = "0x165360")]
	public float Offset;

	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float StrenghR;

	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float StrenghG;

	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float StrenghB;

	[Token(Token = "0x6000366")]
	[Address(RVA = "0x33C944", Offset = "0x33C944", VA = "0x33C944")]
	public PostProcessing()
	{
	}

	[Token(Token = "0x6000367")]
	[Address(RVA = "0x33C94C", Offset = "0x33C94C", VA = "0x33C94C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000368")]
	[Address(RVA = "0x33C9E0", Offset = "0x33C9E0", VA = "0x33C9E0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000369")]
	[Address(RVA = "0x33CB04", Offset = "0x33CB04", VA = "0x33CB04")]
	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}
}
[Token(Token = "0x200005D")]
public class TestParse : MonoBehaviour
{
	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string text;

	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public char separator;

	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public string[] tab;

	[Token(Token = "0x600036A")]
	[Address(RVA = "0x2A49B8", Offset = "0x2A49B8", VA = "0x2A49B8")]
	public TestParse()
	{
	}

	[Token(Token = "0x600036B")]
	[Address(RVA = "0x2A49C0", Offset = "0x2A49C0", VA = "0x2A49C0")]
	public void Go()
	{
	}
}
[Token(Token = "0x200005E")]
public class UberShader : MonoBehaviour
{
	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int ID_Drawing_Color;

	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly int ID_Drawing_Palier1;

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly int ID_Drawing_Palier2;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly int ID_Drawing_Palier3;

	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly int ID_Drawing_Palier4;

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private static readonly int ID_Drawing_Mix;

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly int ID_Drawing_MixFilter;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private static readonly int ID_Drawing_ColorPreMul;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly int ID_Drawing_Palier_RangeFactor;

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static readonly int ID_Drawing_Palier1_Offset;

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static readonly int ID_Drawing_Palier2_Offset;

	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private static readonly int ID_Drawing_Palier3_Offset;

	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static readonly int ID_Drawing_Palier4_Offset;

	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private static readonly int ID_Color_Curves;

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static readonly int ID_Color_Saturation;

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private static readonly int ID_Contour_Color;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static readonly int ID_Contour_BgColor;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private static readonly int ID_Contour_LowThreshold;

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static readonly int ID_Contour_HighThreshold;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private static readonly int ID_Contour_DepthSensitivity;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static readonly int ID_Contour_FallOffDepth;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private static readonly int ID_Fade_Color;

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static readonly int ID_Fade_Value;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private static readonly int ID_Fade_ColorPreMul;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static readonly int ID_Color;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private static readonly int ID_BgColor;

	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static readonly int ID_LowThreshold;

	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private static readonly int ID_HighThreshold;

	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static readonly int ID_DepthSensitivity;

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private static readonly int ID_FallOffDepth;

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Material _material;

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private RenderTextureDescriptor _textureDesc;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Camera _camera;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Camera _uiCamera;

	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RenderTexture cameraRT;

	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private RenderTexture textureRT;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Texture3D _lutTexture;

	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static RenderTargetIdentifier texID;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private static RenderTargetIdentifier lutID;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private CommandBuffer cbRenderUber;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private CommandBuffer cbFinalBlit;

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private GameObject _gameObject;

	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private MeshRenderer _meshRenderer;

	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private MeshFilter _meshFilter;

	[Token(Token = "0x600036C")]
	[Address(RVA = "0x4B94FC", Offset = "0x4B94FC", VA = "0x4B94FC")]
	public UberShader()
	{
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0x4B9504", Offset = "0x4B9504", VA = "0x4B9504")]
	private void Awake()
	{
	}

	[Token(Token = "0x600036E")]
	[Address(RVA = "0x4BA4A8", Offset = "0x4BA4A8", VA = "0x4BA4A8")]
	private void InitTextureDesc()
	{
	}

	[Token(Token = "0x600036F")]
	[Address(RVA = "0x4BA5D4", Offset = "0x4BA5D4", VA = "0x4BA5D4")]
	private void InitRendering()
	{
	}

	[Token(Token = "0x6000370")]
	[Address(RVA = "0x4BA734", Offset = "0x4BA734", VA = "0x4BA734")]
	private RenderTexture CreateRT(string name)
	{
		return null;
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0x4BA7C0", Offset = "0x4BA7C0", VA = "0x4BA7C0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000372")]
	[Address(RVA = "0x4BA29C", Offset = "0x4BA29C", VA = "0x4BA29C")]
	private Material CreateMaterial(string shaderName)
	{
		return null;
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0x4BA86C", Offset = "0x4BA86C", VA = "0x4BA86C")]
	public void ApplyDrawingChanges(DrawingShader input)
	{
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0x4BAD0C", Offset = "0x4BAD0C", VA = "0x4BAD0C")]
	public void ApplyColorChanges(ColorSuite input)
	{
	}

	[Token(Token = "0x6000375")]
	[Address(RVA = "0x4BB128", Offset = "0x4BB128", VA = "0x4BB128")]
	private void ApplyContourChanges(Contour input)
	{
	}

	[Token(Token = "0x6000376")]
	[Address(RVA = "0x4BB598", Offset = "0x4BB598", VA = "0x4BB598")]
	private void ApplyFadeChanges(FadeManager input)
	{
	}
}
namespace Kino
{
	[Token(Token = "0x200005F")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x165378", Offset = "0x165378")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x165378", Offset = "0x165378")]
	public class Contour : MonoBehaviour
	{
		[Token(Token = "0x4000347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private Color _lineColor;

		[Token(Token = "0x4000348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private Color _backgroundColor;

		[Token(Token = "0x4000349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x165438", Offset = "0x165438")]
		private float _lowThreshold;

		[Token(Token = "0x400034A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x165470", Offset = "0x165470")]
		private float _highThreshold;

		[Token(Token = "0x400034B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1654A8", Offset = "0x1654A8")]
		private float _depthSensitivity;

		[Token(Token = "0x400034C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1654E0", Offset = "0x1654E0")]
		private float _normalSensitivity;

		[Token(Token = "0x400034D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float _fallOffDepth;

		[Token(Token = "0x400034E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public Action<Contour> _updateCallback;

		[Token(Token = "0x400034F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[HideInInspector]
		public Material _material;

		[Token(Token = "0x4000350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Shader _shader;

		[Token(Token = "0x4000351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private RenderTexture tempRT;

		[Token(Token = "0x1700004C")]
		public Color lineColor
		{
			[Token(Token = "0x6000379")]
			[Address(RVA = "0x233E40", Offset = "0x233E40", VA = "0x233E40")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x600037A")]
			[Address(RVA = "0x233E54", Offset = "0x233E54", VA = "0x233E54")]
			set
			{
			}
		}

		[Token(Token = "0x1700004D")]
		public Color backgroundColor
		{
			[Token(Token = "0x600037B")]
			[Address(RVA = "0x233E64", Offset = "0x233E64", VA = "0x233E64")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x600037C")]
			[Address(RVA = "0x233E78", Offset = "0x233E78", VA = "0x233E78")]
			set
			{
			}
		}

		[Token(Token = "0x1700004E")]
		public float lowThreshold
		{
			[Token(Token = "0x600037D")]
			[Address(RVA = "0x233E88", Offset = "0x233E88", VA = "0x233E88")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600037E")]
			[Address(RVA = "0x233E90", Offset = "0x233E90", VA = "0x233E90")]
			set
			{
			}
		}

		[Token(Token = "0x1700004F")]
		public float highThreshold
		{
			[Token(Token = "0x600037F")]
			[Address(RVA = "0x233E98", Offset = "0x233E98", VA = "0x233E98")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000380")]
			[Address(RVA = "0x233EA0", Offset = "0x233EA0", VA = "0x233EA0")]
			set
			{
			}
		}

		[Token(Token = "0x17000050")]
		public float depthSensitivity
		{
			[Token(Token = "0x6000381")]
			[Address(RVA = "0x233EA8", Offset = "0x233EA8", VA = "0x233EA8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000382")]
			[Address(RVA = "0x233EB0", Offset = "0x233EB0", VA = "0x233EB0")]
			set
			{
			}
		}

		[Token(Token = "0x17000051")]
		public float normalSensitivity
		{
			[Token(Token = "0x6000383")]
			[Address(RVA = "0x233EB8", Offset = "0x233EB8", VA = "0x233EB8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000384")]
			[Address(RVA = "0x233EC0", Offset = "0x233EC0", VA = "0x233EC0")]
			set
			{
			}
		}

		[Token(Token = "0x17000052")]
		public float fallOffDepth
		{
			[Token(Token = "0x6000385")]
			[Address(RVA = "0x233EC8", Offset = "0x233EC8", VA = "0x233EC8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000386")]
			[Address(RVA = "0x233ED0", Offset = "0x233ED0", VA = "0x233ED0")]
			set
			{
			}
		}

		[Token(Token = "0x6000378")]
		[Address(RVA = "0x233DA0", Offset = "0x233DA0", VA = "0x233DA0")]
		public Contour()
		{
		}

		[Token(Token = "0x6000387")]
		[Address(RVA = "0x233ED8", Offset = "0x233ED8", VA = "0x233ED8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000388")]
		[Address(RVA = "0x233F8C", Offset = "0x233F8C", VA = "0x233F8C")]
		private void ApplyChanges()
		{
		}

		[Token(Token = "0x6000389")]
		[Address(RVA = "0x234318", Offset = "0x234318", VA = "0x234318")]
		private void OnPreRender()
		{
		}

		[Token(Token = "0x600038A")]
		[Address(RVA = "0x23439C", Offset = "0x23439C", VA = "0x23439C")]
		private void OnPostRender()
		{
		}
	}
	[Token(Token = "0x2000060")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x165558", Offset = "0x165558")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x165558", Offset = "0x165558")]
	public class Fog : MonoBehaviour
	{
		[Token(Token = "0x4000352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private float _startDistance;

		[Token(Token = "0x4000353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private bool _useRadialDistance;

		[Token(Token = "0x4000354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[SerializeField]
		private bool _fadeToSkybox;

		[Token(Token = "0x4000355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Shader _shader;

		[Token(Token = "0x4000356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Material _material;

		[Token(Token = "0x17000053")]
		public float startDistance
		{
			[Token(Token = "0x600038C")]
			[Address(RVA = "0x23449C", Offset = "0x23449C", VA = "0x23449C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600038D")]
			[Address(RVA = "0x2344A4", Offset = "0x2344A4", VA = "0x2344A4")]
			set
			{
			}
		}

		[Token(Token = "0x17000054")]
		public bool useRadialDistance
		{
			[Token(Token = "0x600038E")]
			[Address(RVA = "0x2344AC", Offset = "0x2344AC", VA = "0x2344AC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600038F")]
			[Address(RVA = "0x2344B4", Offset = "0x2344B4", VA = "0x2344B4")]
			set
			{
			}
		}

		[Token(Token = "0x17000055")]
		public bool fadeToSkybox
		{
			[Token(Token = "0x6000390")]
			[Address(RVA = "0x2344BC", Offset = "0x2344BC", VA = "0x2344BC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000391")]
			[Address(RVA = "0x2344C4", Offset = "0x2344C4", VA = "0x2344C4")]
			set
			{
			}
		}

		[Token(Token = "0x600038B")]
		[Address(RVA = "0x23448C", Offset = "0x23448C", VA = "0x23448C")]
		public Fog()
		{
		}

		[Token(Token = "0x6000392")]
		[Address(RVA = "0x2344CC", Offset = "0x2344CC", VA = "0x2344CC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000393")]
		[Address(RVA = "0x234578", Offset = "0x234578", VA = "0x234578")]
		[ImageEffectOpaque]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}
	}
}
namespace UnityStandardAssets.CinematicEffects
{
	[Token(Token = "0x2000061")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x165648", Offset = "0x165648")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x165648", Offset = "0x165648")]
	[ImageEffectAllowedInSceneView]
	public class AmbientOcclusion : MonoBehaviour
	{
		[Token(Token = "0x2000062")]
		private class PropertyObserver
		{
			[Token(Token = "0x4000362")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private bool _downsampling;

			[Token(Token = "0x4000363")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private OcclusionSource _occlusionSource;

			[Token(Token = "0x4000364")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private bool _ambientOnly;

			[Token(Token = "0x4000365")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
			private bool _debug;

			[Token(Token = "0x4000366")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private int _pixelWidth;

			[Token(Token = "0x4000367")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private int _pixelHeight;

			[Token(Token = "0x60003AD")]
			[Address(RVA = "0x4BFF60", Offset = "0x4BFF60", VA = "0x4BFF60")]
			public PropertyObserver()
			{
			}

			[Token(Token = "0x60003AE")]
			[Address(RVA = "0x4C19CC", Offset = "0x4C19CC", VA = "0x4C19CC")]
			public bool CheckNeedsReset(Settings setting, Camera camera)
			{
				return default(bool);
			}

			[Token(Token = "0x60003AF")]
			[Address(RVA = "0x4C1ABC", Offset = "0x4C1ABC", VA = "0x4C1ABC")]
			public void Update(Settings setting, Camera camera)
			{
			}
		}

		[Token(Token = "0x2000063")]
		public enum SampleCount
		{
			[Token(Token = "0x4000369")]
			Lowest,
			[Token(Token = "0x400036A")]
			Low,
			[Token(Token = "0x400036B")]
			Medium,
			[Token(Token = "0x400036C")]
			High,
			[Token(Token = "0x400036D")]
			Custom
		}

		[Token(Token = "0x2000064")]
		public enum OcclusionSource
		{
			[Token(Token = "0x400036F")]
			DepthTexture,
			[Token(Token = "0x4000370")]
			DepthNormalsTexture,
			[Token(Token = "0x4000371")]
			GBuffer
		}

		[Serializable]
		[Token(Token = "0x2000065")]
		public class Settings
		{
			[Token(Token = "0x4000372")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[SerializeField]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x165748", Offset = "0x165748")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x165748", Offset = "0x165748")]
			public float intensity;

			[Token(Token = "0x4000373")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1657AC", Offset = "0x1657AC")]
			public float radius;

			[Token(Token = "0x4000374")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1657F4", Offset = "0x1657F4")]
			public SampleCount sampleCount;

			[Token(Token = "0x4000375")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16583C", Offset = "0x16583C")]
			public int sampleCountValue;

			[Token(Token = "0x4000376")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x165884", Offset = "0x165884")]
			public bool downsampling;

			[Token(Token = "0x4000377")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1658CC", Offset = "0x1658CC")]
			public bool ambientOnly;

			[Token(Token = "0x4000378")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x165914", Offset = "0x165914")]
			public OcclusionSource occlusionSource;

			[Token(Token = "0x4000379")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16595C", Offset = "0x16595C")]
			public bool debug;

			[Token(Token = "0x17000065")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x60003B1")]
				[Address(RVA = "0x4BFE64", Offset = "0x4BFE64", VA = "0x4BFE64")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60003B0")]
			[Address(RVA = "0x4C1C38", Offset = "0x4C1C38", VA = "0x4C1C38")]
			public Settings()
			{
			}
		}

		[Token(Token = "0x4000357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		public Settings settings;

		[Token(Token = "0x4000358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private Shader _aoShader;

		[Token(Token = "0x4000359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Material _aoMaterial;

		[Token(Token = "0x400035A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CommandBuffer _aoCommands;

		[Token(Token = "0x400035B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private PropertyObserver _propertyObserver;

		[Token(Token = "0x400035C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Mesh _quadMesh;

		[Token(Token = "0x400035D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int _OcclusionTexture;

		[Token(Token = "0x400035E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int _Intensity;

		[Token(Token = "0x400035F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int _Radius;

		[Token(Token = "0x4000360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int _Downsample;

		[Token(Token = "0x4000361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int _SampleCount;

		[Token(Token = "0x17000056")]
		public bool isAmbientOnlySupported
		{
			[Token(Token = "0x6000395")]
			[Address(RVA = "0x4BFF68", Offset = "0x4BFF68", VA = "0x4BFF68")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000057")]
		public bool isGBufferAvailable
		{
			[Token(Token = "0x6000396")]
			[Address(RVA = "0x4C0078", Offset = "0x4C0078", VA = "0x4C0078")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000058")]
		private float intensity
		{
			[Token(Token = "0x6000397")]
			[Address(RVA = "0x4C00B4", Offset = "0x4C00B4", VA = "0x4C00B4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000059")]
		private float radius
		{
			[Token(Token = "0x6000398")]
			[Address(RVA = "0x4C00D4", Offset = "0x4C00D4", VA = "0x4C00D4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700005A")]
		private SampleCount sampleCount
		{
			[Token(Token = "0x6000399")]
			[Address(RVA = "0x4C0180", Offset = "0x4C0180", VA = "0x4C0180")]
			get
			{
				return default(SampleCount);
			}
		}

		[Token(Token = "0x1700005B")]
		private int sampleCountValue
		{
			[Token(Token = "0x600039A")]
			[Address(RVA = "0x4C01A0", Offset = "0x4C01A0", VA = "0x4C01A0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700005C")]
		private OcclusionSource occlusionSource
		{
			[Token(Token = "0x600039B")]
			[Address(RVA = "0x4C0020", Offset = "0x4C0020", VA = "0x4C0020")]
			get
			{
				return default(OcclusionSource);
			}
		}

		[Token(Token = "0x1700005D")]
		private bool downsampling
		{
			[Token(Token = "0x600039C")]
			[Address(RVA = "0x4C02C0", Offset = "0x4C02C0", VA = "0x4C02C0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700005E")]
		private bool ambientOnly
		{
			[Token(Token = "0x600039D")]
			[Address(RVA = "0x4C02E0", Offset = "0x4C02E0", VA = "0x4C02E0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700005F")]
		private Shader aoShader
		{
			[Token(Token = "0x600039E")]
			[Address(RVA = "0x4C033C", Offset = "0x4C033C", VA = "0x4C033C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000060")]
		private Material aoMaterial
		{
			[Token(Token = "0x600039F")]
			[Address(RVA = "0x4C03F8", Offset = "0x4C03F8", VA = "0x4C03F8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000061")]
		private CommandBuffer aoCommands
		{
			[Token(Token = "0x60003A0")]
			[Address(RVA = "0x4C05A8", Offset = "0x4C05A8", VA = "0x4C05A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000062")]
		private Camera targetCamera
		{
			[Token(Token = "0x60003A1")]
			[Address(RVA = "0x4BFFBC", Offset = "0x4BFFBC", VA = "0x4BFFBC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000063")]
		private PropertyObserver propertyObserver
		{
			[Token(Token = "0x60003A2")]
			[Address(RVA = "0x4C0650", Offset = "0x4C0650", VA = "0x4C0650")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000064")]
		private Mesh quadMesh
		{
			[Token(Token = "0x60003A3")]
			[Address(RVA = "0x4C0658", Offset = "0x4C0658", VA = "0x4C0658")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000394")]
		[Address(RVA = "0x4BFDE0", Offset = "0x4BFDE0", VA = "0x4BFDE0")]
		public AmbientOcclusion()
		{
		}

		[Token(Token = "0x60003A4")]
		[Address(RVA = "0x4C0660", Offset = "0x4C0660", VA = "0x4C0660")]
		private void BuildAOCommands()
		{
		}

		[Token(Token = "0x60003A5")]
		[Address(RVA = "0x4C0D48", Offset = "0x4C0D48", VA = "0x4C0D48")]
		private void ExecuteAOPass(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60003A6")]
		[Address(RVA = "0x4C106C", Offset = "0x4C106C", VA = "0x4C106C")]
		private void UpdateMaterialProperties()
		{
		}

		[Token(Token = "0x60003A7")]
		[Address(RVA = "0x4C1174", Offset = "0x4C1174", VA = "0x4C1174")]
		private void Awake()
		{
		}

		[Token(Token = "0x60003A8")]
		[Address(RVA = "0x4C1260", Offset = "0x4C1260", VA = "0x4C1260")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60003A9")]
		[Address(RVA = "0x4C17CC", Offset = "0x4C17CC", VA = "0x4C17CC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60003AA")]
		[Address(RVA = "0x4C1818", Offset = "0x4C1818", VA = "0x4C1818")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60003AB")]
		[Address(RVA = "0x4C18F4", Offset = "0x4C18F4", VA = "0x4C18F4")]
		private void OnPreRender()
		{
		}

		[Token(Token = "0x60003AC")]
		[Address(RVA = "0x4C1B78", Offset = "0x4C1B78", VA = "0x4C1B78")]
		[ImageEffectOpaque]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}
	}
	[Token(Token = "0x2000066")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x1659A4", Offset = "0x1659A4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x1659A4", Offset = "0x1659A4")]
	[ImageEffectAllowedInSceneView]
	public class Bloom : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000067")]
		public struct Settings
		{
			[Token(Token = "0x4000388")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x165AA4", Offset = "0x165AA4")]
			public float threshold;

			[Token(Token = "0x4000389")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[SerializeField]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x165AEC", Offset = "0x165AEC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x165AEC", Offset = "0x165AEC")]
			public float softKnee;

			[Token(Token = "0x400038A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[SerializeField]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x165B4C", Offset = "0x165B4C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x165B4C", Offset = "0x165B4C")]
			public float radius;

			[Token(Token = "0x400038B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x165BB0", Offset = "0x165BB0")]
			public float intensity;

			[Token(Token = "0x400038C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x165BF8", Offset = "0x165BF8")]
			public bool highQuality;

			[Token(Token = "0x400038D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x165C40", Offset = "0x165C40")]
			public bool antiFlicker;

			[Token(Token = "0x400038E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x165C88", Offset = "0x165C88")]
			public Texture dirtTexture;

			[Token(Token = "0x400038F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x165CBC", Offset = "0x165CBC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x165CBC", Offset = "0x165CBC")]
			public float dirtIntensity;

			[Token(Token = "0x17000068")]
			public float thresholdGamma
			{
				[Token(Token = "0x60003BA")]
				[Address(RVA = "0x4C2E5C", Offset = "0x4C2E5C", VA = "0x4C2E5C")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x60003B9")]
				[Address(RVA = "0x4C2DBC", Offset = "0x4C2DBC", VA = "0x4C2DBC")]
				set
				{
				}
			}

			[Token(Token = "0x17000069")]
			public float thresholdLinear
			{
				[Token(Token = "0x60003BC")]
				[Address(RVA = "0x4C2EFC", Offset = "0x4C2EFC", VA = "0x4C2EFC")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x60003BB")]
				[Address(RVA = "0x4C2EF4", Offset = "0x4C2EF4", VA = "0x4C2EF4")]
				set
				{
				}
			}

			[Token(Token = "0x1700006A")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x60003BD")]
				[Address(RVA = "0x4C1D20", Offset = "0x4C1D20", VA = "0x4C1D20")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x400037A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		public Settings settings;

		[Token(Token = "0x400037B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[HideInInspector]
		private Shader m_Shader;

		[Token(Token = "0x400037C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Material m_Material;

		[Token(Token = "0x400037D")]
		private const int kMaxIterations = 16;

		[Token(Token = "0x400037E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private RenderTexture[] m_blurBuffer1;

		[Token(Token = "0x400037F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private RenderTexture[] m_blurBuffer2;

		[Token(Token = "0x4000380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int m_Threshold;

		[Token(Token = "0x4000381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int m_Curve;

		[Token(Token = "0x4000382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int m_PrefilterOffs;

		[Token(Token = "0x4000383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int m_SampleScale;

		[Token(Token = "0x4000384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int m_Intensity;

		[Token(Token = "0x4000385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int m_DirtTex;

		[Token(Token = "0x4000386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_DirtIntensity;

		[Token(Token = "0x4000387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_BaseTex;

		[Token(Token = "0x17000066")]
		public Shader shader
		{
			[Token(Token = "0x60003B3")]
			[Address(RVA = "0x4C1D70", Offset = "0x4C1D70", VA = "0x4C1D70")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000067")]
		public Material material
		{
			[Token(Token = "0x60003B4")]
			[Address(RVA = "0x4C1E2C", Offset = "0x4C1E2C", VA = "0x4C1E2C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003B2")]
		[Address(RVA = "0x4C1C40", Offset = "0x4C1C40", VA = "0x4C1C40")]
		public Bloom()
		{
		}

		[Token(Token = "0x60003B5")]
		[Address(RVA = "0x4C1EDC", Offset = "0x4C1EDC", VA = "0x4C1EDC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60003B6")]
		[Address(RVA = "0x4C2028", Offset = "0x4C2028", VA = "0x4C2028")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60003B7")]
		[Address(RVA = "0x4C2074", Offset = "0x4C2074", VA = "0x4C2074")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60003B8")]
		[Address(RVA = "0x4C2154", Offset = "0x4C2154", VA = "0x4C2154")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}
	}
	[Token(Token = "0x2000068")]
	public static class ImageEffectHelper
	{
		[Token(Token = "0x1700006B")]
		public static bool supportsDX11
		{
			[Token(Token = "0x60003C0")]
			[Address(RVA = "0x4C3A34", Offset = "0x4C3A34", VA = "0x4C3A34")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60003BE")]
		[Address(RVA = "0x4C13BC", Offset = "0x4C13BC", VA = "0x4C13BC")]
		public static bool IsSupported(Shader s, bool needDepth, bool needHdr, MonoBehaviour effect)
		{
			return default(bool);
		}

		[Token(Token = "0x60003BF")]
		[Address(RVA = "0x4C04A8", Offset = "0x4C04A8", VA = "0x4C04A8")]
		public static Material CheckShaderAndCreateMaterial(Shader s)
		{
			return null;
		}
	}
	[Token(Token = "0x2000069")]
	public sealed class MinAttribute : PropertyAttribute
	{
		[Token(Token = "0x4000390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly float min;

		[Token(Token = "0x60003C1")]
		[Address(RVA = "0x4C8270", Offset = "0x4C8270", VA = "0x4C8270")]
		public MinAttribute(float min)
		{
		}
	}
	[Token(Token = "0x200006A")]
	public class RenderTextureUtility
	{
		[Token(Token = "0x4000391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private List<RenderTexture> m_TemporaryRTs;

		[Token(Token = "0x60003C2")]
		[Address(RVA = "0x4C30C8", Offset = "0x4C30C8", VA = "0x4C30C8")]
		public RenderTextureUtility()
		{
		}

		[Token(Token = "0x60003C3")]
		[Address(RVA = "0x4C59A4", Offset = "0x4C59A4", VA = "0x4C59A4")]
		public RenderTexture GetTemporaryRenderTexture(int width, int height, int depthBuffer = 0, RenderTextureFormat format = RenderTextureFormat.ARGBHalf, FilterMode filterMode = FilterMode.Bilinear)
		{
			return null;
		}

		[Token(Token = "0x60003C4")]
		[Address(RVA = "0x4C5BE4", Offset = "0x4C5BE4", VA = "0x4C5BE4")]
		public void ReleaseTemporaryRenderTexture(RenderTexture rt)
		{
		}

		[Token(Token = "0x60003C5")]
		[Address(RVA = "0x4C40B8", Offset = "0x4C40B8", VA = "0x4C40B8")]
		public void ReleaseAllTemporaryRenderTextures()
		{
		}
	}
	[Token(Token = "0x200006B")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x165D08", Offset = "0x165D08")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x165D08", Offset = "0x165D08")]
	public class DepthOfField : MonoBehaviour
	{
		[Token(Token = "0x200006C")]
		private enum Passes
		{
			[Token(Token = "0x40003B4")]
			BlurAlphaWeighted,
			[Token(Token = "0x40003B5")]
			BoxBlur,
			[Token(Token = "0x40003B6")]
			DilateFgCocFromColor,
			[Token(Token = "0x40003B7")]
			DilateFgCoc,
			[Token(Token = "0x40003B8")]
			CaptureCocExplicit,
			[Token(Token = "0x40003B9")]
			VisualizeCocExplicit,
			[Token(Token = "0x40003BA")]
			CocPrefilter,
			[Token(Token = "0x40003BB")]
			CircleBlur,
			[Token(Token = "0x40003BC")]
			CircleBlurWithDilatedFg,
			[Token(Token = "0x40003BD")]
			CircleBlurLowQuality,
			[Token(Token = "0x40003BE")]
			CircleBlowLowQualityWithDilatedFg,
			[Token(Token = "0x40003BF")]
			MergeExplicit,
			[Token(Token = "0x40003C0")]
			ShapeLowQuality,
			[Token(Token = "0x40003C1")]
			ShapeLowQualityDilateFg,
			[Token(Token = "0x40003C2")]
			ShapeLowQualityMerge,
			[Token(Token = "0x40003C3")]
			ShapeLowQualityMergeDilateFg,
			[Token(Token = "0x40003C4")]
			ShapeMediumQuality,
			[Token(Token = "0x40003C5")]
			ShapeMediumQualityDilateFg,
			[Token(Token = "0x40003C6")]
			ShapeMediumQualityMerge,
			[Token(Token = "0x40003C7")]
			ShapeMediumQualityMergeDilateFg,
			[Token(Token = "0x40003C8")]
			ShapeHighQuality,
			[Token(Token = "0x40003C9")]
			ShapeHighQualityDilateFg,
			[Token(Token = "0x40003CA")]
			ShapeHighQualityMerge,
			[Token(Token = "0x40003CB")]
			ShapeHighQualityMergeDilateFg
		}

		[Token(Token = "0x200006D")]
		private enum MedianPasses
		{
			[Token(Token = "0x40003CD")]
			Median3,
			[Token(Token = "0x40003CE")]
			Median3X3
		}

		[Token(Token = "0x200006E")]
		private enum BokehTexturesPasses
		{
			[Token(Token = "0x40003D0")]
			Apply,
			[Token(Token = "0x40003D1")]
			Collect
		}

		[Token(Token = "0x200006F")]
		public enum TweakMode
		{
			[Token(Token = "0x40003D3")]
			Range,
			[Token(Token = "0x40003D4")]
			Explicit
		}

		[Token(Token = "0x2000070")]
		public enum ApertureShape
		{
			[Token(Token = "0x40003D6")]
			Circular,
			[Token(Token = "0x40003D7")]
			Hexagonal,
			[Token(Token = "0x40003D8")]
			Octogonal
		}

		[Token(Token = "0x2000071")]
		public enum QualityPreset
		{
			[Token(Token = "0x40003DA")]
			Low,
			[Token(Token = "0x40003DB")]
			Medium,
			[Token(Token = "0x40003DC")]
			High
		}

		[Token(Token = "0x2000072")]
		public enum FilterQuality
		{
			[Token(Token = "0x40003DE")]
			None,
			[Token(Token = "0x40003DF")]
			Normal,
			[Token(Token = "0x40003E0")]
			High
		}

		[Serializable]
		[Token(Token = "0x2000073")]
		public struct GlobalSettings
		{
			[Token(Token = "0x40003E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x165DF8", Offset = "0x165DF8")]
			public bool visualizeFocus;

			[Token(Token = "0x40003E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x165E2C", Offset = "0x165E2C")]
			public TweakMode tweakMode;

			[Token(Token = "0x40003E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x165E60", Offset = "0x165E60")]
			public QualityPreset filteringQuality;

			[Token(Token = "0x40003E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x165E94", Offset = "0x165E94")]
			public ApertureShape apertureShape;

			[Token(Token = "0x40003E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x165EC8", Offset = "0x165EC8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x165EC8", Offset = "0x165EC8")]
			public float apertureOrientation;

			[Token(Token = "0x17000075")]
			public static GlobalSettings defaultSettings
			{
				[Token(Token = "0x60003DE")]
				[Address(RVA = "0x4C3010", Offset = "0x4C3010", VA = "0x4C3010")]
				get
				{
					return default(GlobalSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x2000074")]
		public struct QualitySettings
		{
			[Token(Token = "0x40003E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x165F1C", Offset = "0x165F1C")]
			public bool prefilterBlur;

			[Token(Token = "0x40003E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x165F50", Offset = "0x165F50")]
			public FilterQuality medianFilter;

			[Token(Token = "0x40003E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x165F84", Offset = "0x165F84")]
			public bool dilateNearBlur;

			[Token(Token = "0x40003E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static QualitySettings[] presetQualitySettings;
		}

		[Serializable]
		[Token(Token = "0x2000075")]
		public struct FocusSettings
		{
			[Token(Token = "0x40003EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x165FB8", Offset = "0x165FB8")]
			public Transform transform;

			[Token(Token = "0x40003EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x165FEC", Offset = "0x165FEC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x165FEC", Offset = "0x165FEC")]
			public float focusPlane;

			[Token(Token = "0x40003EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x166038", Offset = "0x166038")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x166038", Offset = "0x166038")]
			public float range;

			[Token(Token = "0x40003ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x166088", Offset = "0x166088")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x166088", Offset = "0x166088")]
			public float nearPlane;

			[Token(Token = "0x40003EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x1660D4", Offset = "0x1660D4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1660D4", Offset = "0x1660D4")]
			public float nearFalloff;

			[Token(Token = "0x40003EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x166120", Offset = "0x166120")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x166120", Offset = "0x166120")]
			public float farPlane;

			[Token(Token = "0x40003F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x16616C", Offset = "0x16616C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16616C", Offset = "0x16616C")]
			public float farFalloff;

			[Token(Token = "0x40003F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1661B8", Offset = "0x1661B8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1661B8", Offset = "0x1661B8")]
			public float nearBlurRadius;

			[Token(Token = "0x40003F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16620C", Offset = "0x16620C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16620C", Offset = "0x16620C")]
			public float farBlurRadius;

			[Token(Token = "0x17000076")]
			public static FocusSettings defaultSettings
			{
				[Token(Token = "0x60003E0")]
				[Address(RVA = "0x4C304C", Offset = "0x4C304C", VA = "0x4C304C")]
				get
				{
					return default(FocusSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x2000076")]
		public struct BokehTextureSettings
		{
			[Token(Token = "0x40003F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x166260", Offset = "0x166260")]
			public Texture2D texture;

			[Token(Token = "0x40003F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x166294", Offset = "0x166294")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x166294", Offset = "0x166294")]
			public float scale;

			[Token(Token = "0x40003F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1662EC", Offset = "0x1662EC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1662EC", Offset = "0x1662EC")]
			public float intensity;

			[Token(Token = "0x40003F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x166344", Offset = "0x166344")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x166344", Offset = "0x166344")]
			public float threshold;

			[Token(Token = "0x40003F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16639C", Offset = "0x16639C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16639C", Offset = "0x16639C")]
			public float spawnHeuristic;

			[Token(Token = "0x17000077")]
			public static BokehTextureSettings defaultSettings
			{
				[Token(Token = "0x60003E1")]
				[Address(RVA = "0x4C30A0", Offset = "0x4C30A0", VA = "0x4C30A0")]
				get
				{
					return default(BokehTextureSettings);
				}
			}
		}

		[Token(Token = "0x4000392")]
		private const float kMaxBlur = 40f;

		[Token(Token = "0x4000393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public GlobalSettings settings;

		[Token(Token = "0x4000394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FocusSettings focus;

		[Token(Token = "0x4000395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public BokehTextureSettings bokehTexture;

		[Token(Token = "0x4000396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Shader m_FilmicDepthOfFieldShader;

		[Token(Token = "0x4000397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private Shader m_MedianFilterShader;

		[Token(Token = "0x4000398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Shader m_TextureBokehShader;

		[Token(Token = "0x4000399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private RenderTextureUtility m_RTU;

		[Token(Token = "0x400039A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Material m_FilmicDepthOfFieldMaterial;

		[Token(Token = "0x400039B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Material m_MedianFilterMaterial;

		[Token(Token = "0x400039C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material m_TextureBokehMaterial;

		[Token(Token = "0x400039D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private ComputeBuffer m_ComputeBufferDrawArgs;

		[Token(Token = "0x400039E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private ComputeBuffer m_ComputeBufferPoints;

		[Token(Token = "0x400039F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private QualitySettings m_CurrentQualitySettings;

		[Token(Token = "0x40003A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float m_LastApertureOrientation;

		[Token(Token = "0x40003A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Vector4 m_OctogonalBokehDirection1;

		[Token(Token = "0x40003A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Vector4 m_OctogonalBokehDirection2;

		[Token(Token = "0x40003A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private Vector4 m_OctogonalBokehDirection3;

		[Token(Token = "0x40003A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private Vector4 m_OctogonalBokehDirection4;

		[Token(Token = "0x40003A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private Vector4 m_HexagonalBokehDirection1;

		[Token(Token = "0x40003A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private Vector4 m_HexagonalBokehDirection2;

		[Token(Token = "0x40003A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private Vector4 m_HexagonalBokehDirection3;

		[Token(Token = "0x40003A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		private int m_BlurParams;

		[Token(Token = "0x40003A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private int m_BlurCoe;

		[Token(Token = "0x40003AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private int m_Offsets;

		[Token(Token = "0x40003AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private int m_BlurredColor;

		[Token(Token = "0x40003AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private int m_SpawnHeuristic;

		[Token(Token = "0x40003AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private int m_BokehParams;

		[Token(Token = "0x40003AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private int m_Convolved_TexelSize;

		[Token(Token = "0x40003AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private int m_SecondTex;

		[Token(Token = "0x40003B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private int m_ThirdTex;

		[Token(Token = "0x40003B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private int m_MainTex;

		[Token(Token = "0x40003B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		private int m_Screen;

		[Token(Token = "0x1700006C")]
		public Shader filmicDepthOfFieldShader
		{
			[Token(Token = "0x60003C7")]
			[Address(RVA = "0x4C3154", Offset = "0x4C3154", VA = "0x4C3154")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006D")]
		public Shader medianFilterShader
		{
			[Token(Token = "0x60003C8")]
			[Address(RVA = "0x4C3210", Offset = "0x4C3210", VA = "0x4C3210")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006E")]
		public Shader textureBokehShader
		{
			[Token(Token = "0x60003C9")]
			[Address(RVA = "0x4C32CC", Offset = "0x4C32CC", VA = "0x4C32CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006F")]
		public Material filmicDepthOfFieldMaterial
		{
			[Token(Token = "0x60003CA")]
			[Address(RVA = "0x4C3388", Offset = "0x4C3388", VA = "0x4C3388")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000070")]
		public Material medianFilterMaterial
		{
			[Token(Token = "0x60003CB")]
			[Address(RVA = "0x4C3438", Offset = "0x4C3438", VA = "0x4C3438")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000071")]
		public Material textureBokehMaterial
		{
			[Token(Token = "0x60003CC")]
			[Address(RVA = "0x4C34E8", Offset = "0x4C34E8", VA = "0x4C34E8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000072")]
		public ComputeBuffer computeBufferDrawArgs
		{
			[Token(Token = "0x60003CD")]
			[Address(RVA = "0x4C3598", Offset = "0x4C3598", VA = "0x4C3598")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000073")]
		public ComputeBuffer computeBufferPoints
		{
			[Token(Token = "0x60003CE")]
			[Address(RVA = "0x4C3698", Offset = "0x4C3698", VA = "0x4C3698")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000074")]
		private bool shouldPerformBokeh
		{
			[Token(Token = "0x60003DA")]
			[Address(RVA = "0x4C5AD4", Offset = "0x4C5AD4", VA = "0x4C5AD4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60003C6")]
		[Address(RVA = "0x4C2F04", Offset = "0x4C2F04", VA = "0x4C2F04")]
		public DepthOfField()
		{
		}

		[Token(Token = "0x60003CF")]
		[Address(RVA = "0x4C3738", Offset = "0x4C3738", VA = "0x4C3738")]
		private void Awake()
		{
		}

		[Token(Token = "0x60003D0")]
		[Address(RVA = "0x4C38E4", Offset = "0x4C38E4", VA = "0x4C38E4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60003D1")]
		[Address(RVA = "0x4C3E54", Offset = "0x4C3E54", VA = "0x4C3E54")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60003D2")]
		[Address(RVA = "0x4C4198", Offset = "0x4C4198", VA = "0x4C4198")]
		[ImageEffectOpaque]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60003D3")]
		[Address(RVA = "0x4C4760", Offset = "0x4C4760", VA = "0x4C4760")]
		private void DoDepthOfField(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60003D4")]
		[Address(RVA = "0x4C5F44", Offset = "0x4C5F44", VA = "0x4C5F44")]
		private void DoHexagonalBlur(RenderTexture blurredFgCoc, ref RenderTexture src, ref RenderTexture dst, float maxRadius)
		{
		}

		[Token(Token = "0x60003D5")]
		[Address(RVA = "0x4C62CC", Offset = "0x4C62CC", VA = "0x4C62CC")]
		private void DoOctogonalBlur(RenderTexture blurredFgCoc, ref RenderTexture src, ref RenderTexture dst, float maxRadius)
		{
		}

		[Token(Token = "0x60003D6")]
		[Address(RVA = "0x4C5DB8", Offset = "0x4C5DB8", VA = "0x4C5DB8")]
		private void DoCircularBlur(RenderTexture blurredFgCoc, ref RenderTexture src, ref RenderTexture dst, float maxRadius)
		{
		}

		[Token(Token = "0x60003D7")]
		[Address(RVA = "0x4C4448", Offset = "0x4C4448", VA = "0x4C4448")]
		private void ComputeCocParameters(out Vector4 blurParams, out Vector4 blurCoe)
		{
		}

		[Token(Token = "0x60003D8")]
		[Address(RVA = "0x4C4074", Offset = "0x4C4074", VA = "0x4C4074")]
		private void ReleaseComputeResources()
		{
		}

		[Token(Token = "0x60003D9")]
		[Address(RVA = "0x4C3A6C", Offset = "0x4C3A6C", VA = "0x4C3A6C")]
		private void ComputeBlurDirections(bool force)
		{
		}

		[Token(Token = "0x60003DB")]
		[Address(RVA = "0x4C6814", Offset = "0x4C6814", VA = "0x4C6814")]
		private static void Rotate2D(ref Vector4 direction, float cosinus, float sinus)
		{
		}

		[Token(Token = "0x60003DC")]
		[Address(RVA = "0x4C5BD0", Offset = "0x4C5BD0", VA = "0x4C5BD0")]
		private static void SwapRenderTexture(ref RenderTexture src, ref RenderTexture dst)
		{
		}

		[Token(Token = "0x60003DD")]
		[Address(RVA = "0x4C66C8", Offset = "0x4C66C8", VA = "0x4C66C8")]
		private static void GetDirectionalBlurPassesFromRadius(RenderTexture blurredFgCoc, float maxRadius, out int blurPass, out int blurAndMergePass)
		{
		}
	}
	[Token(Token = "0x2000077")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x1663F0", Offset = "0x1663F0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x1663F0", Offset = "0x1663F0")]
	public class LensAberrations : MonoBehaviour
	{
		[Token(Token = "0x2000078")]
		[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x1664E0", Offset = "0x1664E0")]
		public class SettingsGroup : Attribute
		{
			[Token(Token = "0x60003E9")]
			[Address(RVA = "0x4C81A8", Offset = "0x4C81A8", VA = "0x4C81A8")]
			public SettingsGroup()
			{
			}
		}

		[Token(Token = "0x2000079")]
		[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x1664F4", Offset = "0x1664F4")]
		public class AdvancedSetting : Attribute
		{
			[Token(Token = "0x60003EA")]
			[Address(RVA = "0x4C80BC", Offset = "0x4C80BC", VA = "0x4C80BC")]
			public AdvancedSetting()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200007A")]
		public struct DistortionSettings
		{
			[Token(Token = "0x4000408")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool enabled;

			[Token(Token = "0x4000409")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x166508", Offset = "0x166508")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x166508", Offset = "0x166508")]
			public float amount;

			[Token(Token = "0x400040A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x166560", Offset = "0x166560")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x166560", Offset = "0x166560")]
			public float centerX;

			[Token(Token = "0x400040B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1665B4", Offset = "0x1665B4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1665B4", Offset = "0x1665B4")]
			public float centerY;

			[Token(Token = "0x400040C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x166608", Offset = "0x166608")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x166608", Offset = "0x166608")]
			public float amountX;

			[Token(Token = "0x400040D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x166658", Offset = "0x166658")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x166658", Offset = "0x166658")]
			public float amountY;

			[Token(Token = "0x400040E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1666A8", Offset = "0x1666A8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1666A8", Offset = "0x1666A8")]
			public float scale;

			[Token(Token = "0x1700007A")]
			public static DistortionSettings defaultSettings
			{
				[Token(Token = "0x60003EB")]
				[Address(RVA = "0x4C6C10", Offset = "0x4C6C10", VA = "0x4C6C10")]
				get
				{
					return default(DistortionSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x200007B")]
		public struct VignetteSettings
		{
			[Token(Token = "0x400040F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool enabled;

			[Token(Token = "0x4000410")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x166700", Offset = "0x166700")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x166700", Offset = "0x166700")]
			public Color color;

			[Token(Token = "0x4000411")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16674C", Offset = "0x16674C")]
			public Vector2 center;

			[Token(Token = "0x4000412")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x166780", Offset = "0x166780")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x166780", Offset = "0x166780")]
			public float intensity;

			[Token(Token = "0x4000413")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1667D4", Offset = "0x1667D4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1667D4", Offset = "0x1667D4")]
			public float smoothness;

			[Token(Token = "0x4000414")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AdvancedSetting]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16682C", Offset = "0x16682C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16682C", Offset = "0x16682C")]
			public float roundness;

			[Token(Token = "0x4000415")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16688C", Offset = "0x16688C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16688C", Offset = "0x16688C")]
			public float blur;

			[Token(Token = "0x4000416")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1668DC", Offset = "0x1668DC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1668DC", Offset = "0x1668DC")]
			public float desaturate;

			[Token(Token = "0x1700007B")]
			public static VignetteSettings defaultSettings
			{
				[Token(Token = "0x60003EC")]
				[Address(RVA = "0x4C6C58", Offset = "0x4C6C58", VA = "0x4C6C58")]
				get
				{
					return default(VignetteSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x200007C")]
		public struct ChromaticAberrationSettings
		{
			[Token(Token = "0x4000417")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool enabled;

			[Token(Token = "0x4000418")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x16692C", Offset = "0x16692C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16692C", Offset = "0x16692C")]
			public Color color;

			[Token(Token = "0x4000419")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x166978", Offset = "0x166978")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x166978", Offset = "0x166978")]
			public float amount;

			[Token(Token = "0x1700007C")]
			public static ChromaticAberrationSettings defaultSettings
			{
				[Token(Token = "0x60003ED")]
				[Address(RVA = "0x4C6D28", Offset = "0x4C6D28", VA = "0x4C6D28")]
				get
				{
					return default(ChromaticAberrationSettings);
				}
			}
		}

		[Token(Token = "0x200007D")]
		private enum Pass
		{
			[Token(Token = "0x400041B")]
			BlurPrePass,
			[Token(Token = "0x400041C")]
			Chroma,
			[Token(Token = "0x400041D")]
			Distort,
			[Token(Token = "0x400041E")]
			Vignette,
			[Token(Token = "0x400041F")]
			ChromaDistort,
			[Token(Token = "0x4000420")]
			ChromaVignette,
			[Token(Token = "0x4000421")]
			DistortVignette,
			[Token(Token = "0x4000422")]
			ChromaDistortVignette
		}

		[Token(Token = "0x40003F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SettingsGroup]
		public DistortionSettings distortion;

		[Token(Token = "0x40003F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SettingsGroup]
		public VignetteSettings vignette;

		[Token(Token = "0x40003FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SettingsGroup]
		public ChromaticAberrationSettings chromaticAberration;

		[Token(Token = "0x40003FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Shader m_Shader;

		[Token(Token = "0x40003FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Material m_Material;

		[Token(Token = "0x40003FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private RenderTextureUtility m_RTU;

		[Token(Token = "0x40003FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int m_DistCenterScale;

		[Token(Token = "0x40003FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int m_DistAmount;

		[Token(Token = "0x4000400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int m_ChromaticAberration;

		[Token(Token = "0x4000401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int m_VignetteColor;

		[Token(Token = "0x4000402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private int m_BlurPass;

		[Token(Token = "0x4000403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int m_BlurTex;

		[Token(Token = "0x4000404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private int m_VignetteBlur;

		[Token(Token = "0x4000405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int m_VignetteDesat;

		[Token(Token = "0x4000406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private int m_VignetteCenter;

		[Token(Token = "0x4000407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private int m_VignetteSettings;

		[Token(Token = "0x17000078")]
		public Shader shader
		{
			[Token(Token = "0x60003E3")]
			[Address(RVA = "0x4C6D78", Offset = "0x4C6D78", VA = "0x4C6D78")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000079")]
		public Material material
		{
			[Token(Token = "0x60003E4")]
			[Address(RVA = "0x4C6E34", Offset = "0x4C6E34", VA = "0x4C6E34")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003E2")]
		[Address(RVA = "0x4C6B48", Offset = "0x4C6B48", VA = "0x4C6B48")]
		public LensAberrations()
		{
		}

		[Token(Token = "0x60003E5")]
		[Address(RVA = "0x4C6EE4", Offset = "0x4C6EE4", VA = "0x4C6EE4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60003E6")]
		[Address(RVA = "0x4C7070", Offset = "0x4C7070", VA = "0x4C7070")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60003E7")]
		[Address(RVA = "0x4C7118", Offset = "0x4C7118", VA = "0x4C7118")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60003E8")]
		[Address(RVA = "0x4C7210", Offset = "0x4C7210", VA = "0x4C7210")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}
	}
	[Token(Token = "0x200007E")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x1669D0", Offset = "0x1669D0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x1669D0", Offset = "0x1669D0")]
	public class MotionBlur : MonoBehaviour
	{
		[Token(Token = "0x200007F")]
		private class FrameBlendingFilter
		{
			[Token(Token = "0x2000080")]
			private struct Frame
			{
				[Token(Token = "0x4000439")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public RenderTexture lumaTexture;

				[Token(Token = "0x400043A")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
				public RenderTexture chromaTexture;

				[Token(Token = "0x400043B")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public float time;

				[Token(Token = "0x400043C")]
				[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
				private RenderBuffer[] _mrt;

				[Token(Token = "0x60003FD")]
				[Address(RVA = "0x4CA154", Offset = "0x4CA154", VA = "0x4CA154")]
				public float CalculateWeight(float strength, float currentTime)
				{
					return default(float);
				}

				[Token(Token = "0x60003FE")]
				[Address(RVA = "0x4CA15C", Offset = "0x4CA15C", VA = "0x4CA15C")]
				public void Release()
				{
				}

				[Token(Token = "0x60003FF")]
				[Address(RVA = "0x4CA164", Offset = "0x4CA164", VA = "0x4CA164")]
				public void MakeRecord(RenderTexture source, Material material)
				{
				}

				[Token(Token = "0x6000400")]
				[Address(RVA = "0x4CA16C", Offset = "0x4CA16C", VA = "0x4CA16C")]
				public void MakeRecordRaw(RenderTexture source, RenderTextureFormat format)
				{
				}
			}

			[Token(Token = "0x4000428")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private bool _useCompression;

			[Token(Token = "0x4000429")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private RenderTextureFormat _rawTextureFormat;

			[Token(Token = "0x400042A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Material _material;

			[Token(Token = "0x400042B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private Frame[] _frameList;

			[Token(Token = "0x400042C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private int _lastFrameCount;

			[Token(Token = "0x400042D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private int _History1LumaTex;

			[Token(Token = "0x400042E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int _History2LumaTex;

			[Token(Token = "0x400042F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private int _History3LumaTex;

			[Token(Token = "0x4000430")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int _History4LumaTex;

			[Token(Token = "0x4000431")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int _History1ChromaTex;

			[Token(Token = "0x4000432")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int _History2ChromaTex;

			[Token(Token = "0x4000433")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private int _History3ChromaTex;

			[Token(Token = "0x4000434")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int _History4ChromaTex;

			[Token(Token = "0x4000435")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private int _History1Weight;

			[Token(Token = "0x4000436")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private int _History2Weight;

			[Token(Token = "0x4000437")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private int _History3Weight;

			[Token(Token = "0x4000438")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private int _History4Weight;

			[Token(Token = "0x60003F5")]
			[Address(RVA = "0x4C854C", Offset = "0x4C854C", VA = "0x4C854C")]
			public FrameBlendingFilter()
			{
			}

			[Token(Token = "0x60003F6")]
			[Address(RVA = "0x4C8774", Offset = "0x4C8774", VA = "0x4C8774")]
			public void Release()
			{
			}

			[Token(Token = "0x60003F7")]
			[Address(RVA = "0x4C963C", Offset = "0x4C963C", VA = "0x4C963C")]
			public void PushFrame(RenderTexture source)
			{
			}

			[Token(Token = "0x60003F8")]
			[Address(RVA = "0x4C929C", Offset = "0x4C929C", VA = "0x4C929C")]
			public void BlendFrames(float strength, RenderTexture source, RenderTexture destination)
			{
			}

			[Token(Token = "0x60003F9")]
			[Address(RVA = "0x4C971C", Offset = "0x4C971C", VA = "0x4C971C")]
			private static bool CheckSupportCompression()
			{
				return default(bool);
			}

			[Token(Token = "0x60003FA")]
			[Address(RVA = "0x4C9778", Offset = "0x4C9778", VA = "0x4C9778")]
			private static RenderTextureFormat GetPreferredRenderTextureFormat()
			{
				return default(RenderTextureFormat);
			}

			[Token(Token = "0x60003FB")]
			[Address(RVA = "0x4C9F78", Offset = "0x4C9F78", VA = "0x4C9F78")]
			private Frame GetFrameRelative(int offset)
			{
				return default(Frame);
			}

			[Token(Token = "0x60003FC")]
			[Address(RVA = "0x4C9864", Offset = "0x4C9864", VA = "0x4C9864")]
			private void FetchUniformLocations()
			{
			}
		}

		[Token(Token = "0x2000081")]
		private class ReconstructionFilter
		{
			[Token(Token = "0x400043D")]
			private const float kMaxBlurRadius = 5f;

			[Token(Token = "0x400043E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private Material _material;

			[Token(Token = "0x400043F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private bool _unroll;

			[Token(Token = "0x4000440")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private RenderTextureFormat _vectorRTFormat;

			[Token(Token = "0x4000441")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private RenderTextureFormat _packedRTFormat;

			[Token(Token = "0x4000442")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private int _VelocityScale;

			[Token(Token = "0x4000443")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private int _MaxBlurRadius;

			[Token(Token = "0x4000444")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int _TileMaxOffs;

			[Token(Token = "0x4000445")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private int _TileMaxLoop;

			[Token(Token = "0x4000446")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int _LoopCount;

			[Token(Token = "0x4000447")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int _NeighborMaxTex;

			[Token(Token = "0x4000448")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int _VelocityTex;

			[Token(Token = "0x6000401")]
			[Address(RVA = "0x4C840C", Offset = "0x4C840C", VA = "0x4C840C")]
			public ReconstructionFilter()
			{
			}

			[Token(Token = "0x6000402")]
			[Address(RVA = "0x4C8694", Offset = "0x4C8694", VA = "0x4C8694")]
			public void Release()
			{
			}

			[Token(Token = "0x6000403")]
			[Address(RVA = "0x4C8C8C", Offset = "0x4C8C8C", VA = "0x4C8C8C")]
			public void ProcessImage(float shutterAngle, int sampleCount, RenderTexture source, RenderTexture destination)
			{
			}

			[Token(Token = "0x6000404")]
			[Address(RVA = "0x4CA174", Offset = "0x4CA174", VA = "0x4CA174")]
			private bool CheckTextureFormatSupport()
			{
				return default(bool);
			}

			[Token(Token = "0x6000405")]
			[Address(RVA = "0x4CA2F0", Offset = "0x4CA2F0", VA = "0x4CA2F0")]
			private RenderTexture GetTemporaryRT(Texture source, int divider, RenderTextureFormat format)
			{
				return null;
			}

			[Token(Token = "0x6000406")]
			[Address(RVA = "0x4CA3A8", Offset = "0x4CA3A8", VA = "0x4CA3A8")]
			private void ReleaseTemporaryRT(RenderTexture rt)
			{
			}

			[Token(Token = "0x6000407")]
			[Address(RVA = "0x4CA1C4", Offset = "0x4CA1C4", VA = "0x4CA1C4")]
			private void FetchUniformLocations()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000082")]
		public class Settings
		{
			[Token(Token = "0x4000449")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[SerializeField]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x166AA0", Offset = "0x166AA0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x166AA0", Offset = "0x166AA0")]
			public float shutterAngle;

			[Token(Token = "0x400044A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x166B04", Offset = "0x166B04")]
			public int sampleCount;

			[Token(Token = "0x400044B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x166B4C", Offset = "0x166B4C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x166B4C", Offset = "0x166B4C")]
			public float frameBlending;

			[Token(Token = "0x1700007E")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6000409")]
				[Address(RVA = "0x4C82B4", Offset = "0x4C82B4", VA = "0x4C82B4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000408")]
			[Address(RVA = "0x4CA3B4", Offset = "0x4CA3B4", VA = "0x4CA3B4")]
			public Settings()
			{
			}
		}

		[Token(Token = "0x4000423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private Settings _settings;

		[Token(Token = "0x4000424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private Shader _reconstructionShader;

		[Token(Token = "0x4000425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Shader _frameBlendingShader;

		[Token(Token = "0x4000426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ReconstructionFilter _reconstructionFilter;

		[Token(Token = "0x4000427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private FrameBlendingFilter _frameBlendingFilter;

		[Token(Token = "0x1700007D")]
		public Settings settings
		{
			[Token(Token = "0x60003EF")]
			[Address(RVA = "0x4C8370", Offset = "0x4C8370", VA = "0x4C8370")]
			get
			{
				return null;
			}
			[Token(Token = "0x60003F0")]
			[Address(RVA = "0x4C8378", Offset = "0x4C8378", VA = "0x4C8378")]
			set
			{
			}
		}

		[Token(Token = "0x60003EE")]
		[Address(RVA = "0x4C8290", Offset = "0x4C8290", VA = "0x4C8290")]
		public MotionBlur()
		{
		}

		[Token(Token = "0x60003F1")]
		[Address(RVA = "0x4C8380", Offset = "0x4C8380", VA = "0x4C8380")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60003F2")]
		[Address(RVA = "0x4C8648", Offset = "0x4C8648", VA = "0x4C8648")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60003F3")]
		[Address(RVA = "0x4C8888", Offset = "0x4C8888", VA = "0x4C8888")]
		private void Update()
		{
		}

		[Token(Token = "0x60003F4")]
		[Address(RVA = "0x4C8954", Offset = "0x4C8954", VA = "0x4C8954")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}
	}
	[Token(Token = "0x2000083")]
	[ExecuteInEditMode]
	[ImageEffectAllowedInSceneView]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x166BAC", Offset = "0x166BAC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x166BAC", Offset = "0x166BAC")]
	public class ScreenSpaceReflection : MonoBehaviour
	{
		[Token(Token = "0x2000084")]
		public enum SSRResolution
		{
			[Token(Token = "0x400047A")]
			High = 0,
			[Token(Token = "0x400047B")]
			Low = 2
		}

		[Token(Token = "0x2000085")]
		public enum SSRReflectionBlendType
		{
			[Token(Token = "0x400047D")]
			PhysicallyBased,
			[Token(Token = "0x400047E")]
			Additive
		}

		[Serializable]
		[Token(Token = "0x2000086")]
		public struct SSRSettings
		{
			[Token(Token = "0x2000087")]
			[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x166D8C", Offset = "0x166D8C")]
			public class LayoutAttribute : PropertyAttribute
			{
				[Token(Token = "0x6000414")]
				[Address(RVA = "0x4CD5F4", Offset = "0x4CD5F4", VA = "0x4CD5F4")]
				public LayoutAttribute()
				{
				}
			}

			[Token(Token = "0x400047F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[Layout]
			public ReflectionSettings reflectionSettings;

			[Token(Token = "0x4000480")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[Layout]
			public IntensitySettings intensitySettings;

			[Token(Token = "0x4000481")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[Layout]
			public ScreenEdgeMask screenEdgeMask;

			[Token(Token = "0x4000482")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static readonly SSRSettings s_Default;

			[Token(Token = "0x17000082")]
			public static SSRSettings defaultSettings
			{
				[Token(Token = "0x6000412")]
				[Address(RVA = "0x4CA4BC", Offset = "0x4CA4BC", VA = "0x4CA4BC")]
				get
				{
					return default(SSRSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x2000088")]
		public struct IntensitySettings
		{
			[Token(Token = "0x4000483")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x166DA0", Offset = "0x166DA0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x166DA0", Offset = "0x166DA0")]
			public float reflectionMultiplier;

			[Token(Token = "0x4000484")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x166DF0", Offset = "0x166DF0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x166DF0", Offset = "0x166DF0")]
			public float fadeDistance;

			[Token(Token = "0x4000485")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x166E44", Offset = "0x166E44")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x166E44", Offset = "0x166E44")]
			public float fresnelFade;

			[Token(Token = "0x4000486")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x166E94", Offset = "0x166E94")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x166E94", Offset = "0x166E94")]
			public float fresnelFadePower;
		}

		[Serializable]
		[Token(Token = "0x2000089")]
		public struct ReflectionSettings
		{
			[Token(Token = "0x4000487")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x166EEC", Offset = "0x166EEC")]
			public SSRReflectionBlendType blendType;

			[Token(Token = "0x4000488")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x166F20", Offset = "0x166F20")]
			public SSRResolution reflectionQuality;

			[Token(Token = "0x4000489")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x166F54", Offset = "0x166F54")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x166F54", Offset = "0x166F54")]
			public float maxDistance;

			[Token(Token = "0x400048A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x166FAC", Offset = "0x166FAC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x166FAC", Offset = "0x166FAC")]
			public int iterationCount;

			[Token(Token = "0x400048B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x167004", Offset = "0x167004")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x167004", Offset = "0x167004")]
			public int stepSize;

			[Token(Token = "0x400048C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x167058", Offset = "0x167058")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x167058", Offset = "0x167058")]
			public float widthModifier;

			[Token(Token = "0x400048D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1670B0", Offset = "0x1670B0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1670B0", Offset = "0x1670B0")]
			public float reflectionBlur;

			[Token(Token = "0x400048E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x167104", Offset = "0x167104")]
			public bool reflectBackfaces;
		}

		[Serializable]
		[Token(Token = "0x200008A")]
		public struct ScreenEdgeMask
		{
			[Token(Token = "0x400048F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x167138", Offset = "0x167138")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x167138", Offset = "0x167138")]
			public float intensity;
		}

		[Token(Token = "0x200008B")]
		private enum PassIndex
		{
			[Token(Token = "0x4000491")]
			RayTraceStep,
			[Token(Token = "0x4000492")]
			CompositeFinal,
			[Token(Token = "0x4000493")]
			Blur,
			[Token(Token = "0x4000494")]
			CompositeSSR,
			[Token(Token = "0x4000495")]
			MinMipGeneration,
			[Token(Token = "0x4000496")]
			HitPointToReflections,
			[Token(Token = "0x4000497")]
			BilateralKeyPack,
			[Token(Token = "0x4000498")]
			BlitDepthAsCSZ,
			[Token(Token = "0x4000499")]
			PoissonBlur
		}

		[Token(Token = "0x400044C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		public SSRSettings settings;

		[Token(Token = "0x400044D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x166C7C", Offset = "0x166C7C")]
		private bool highlightSuppression;

		[Token(Token = "0x400044E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x166CB0", Offset = "0x166CB0")]
		private bool traceBehindObjects;

		[Token(Token = "0x400044F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x166CE4", Offset = "0x166CE4")]
		private bool treatBackfaceHitAsMiss;

		[Token(Token = "0x4000450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x166D18", Offset = "0x166D18")]
		private bool bilateralUpsample;

		[Token(Token = "0x4000451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private Shader m_Shader;

		[Token(Token = "0x4000452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material m_Material;

		[Token(Token = "0x4000453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Camera m_Camera;

		[Token(Token = "0x4000454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private CommandBuffer m_CommandBuffer;

		[Token(Token = "0x4000455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int kNormalAndRoughnessTexture;

		[Token(Token = "0x4000456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int kHitPointTexture;

		[Token(Token = "0x4000457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int[] kReflectionTextures;

		[Token(Token = "0x4000458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static int kFilteredReflections;

		[Token(Token = "0x4000459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static int kBlurTexture;

		[Token(Token = "0x400045A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static int kFinalReflectionTexture;

		[Token(Token = "0x400045B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static int kTempTexture;

		[Token(Token = "0x400045C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private static int kRayStepSize;

		[Token(Token = "0x400045D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static int kAdditiveReflection;

		[Token(Token = "0x400045E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private static int kBilateralUpsampling;

		[Token(Token = "0x400045F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static int kTreatBackfaceHitAsMiss;

		[Token(Token = "0x4000460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private static int kAllowBackwardsRays;

		[Token(Token = "0x4000461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static int kTraceBehindObjects;

		[Token(Token = "0x4000462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private static int kMaxSteps;

		[Token(Token = "0x4000463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static int kFullResolutionFiltering;

		[Token(Token = "0x4000464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private static int kHalfResolution;

		[Token(Token = "0x4000465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static int kHighlightSuppression;

		[Token(Token = "0x4000466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private static int kPixelsPerMeterAtOneMeter;

		[Token(Token = "0x4000467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static int kScreenEdgeFading;

		[Token(Token = "0x4000468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private static int kReflectionBlur;

		[Token(Token = "0x4000469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static int kMaxRayTraceDistance;

		[Token(Token = "0x400046A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private static int kFadeDistance;

		[Token(Token = "0x400046B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private static int kLayerThickness;

		[Token(Token = "0x400046C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private static int kSSRMultiplier;

		[Token(Token = "0x400046D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private static int kFresnelFade;

		[Token(Token = "0x400046E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private static int kFresnelFadePower;

		[Token(Token = "0x400046F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private static int kReflectionBufferSize;

		[Token(Token = "0x4000470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private static int kScreenSize;

		[Token(Token = "0x4000471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private static int kInvScreenSize;

		[Token(Token = "0x4000472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private static int kProjInfo;

		[Token(Token = "0x4000473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private static int kCameraClipInfo;

		[Token(Token = "0x4000474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private static int kProjectToPixelMatrix;

		[Token(Token = "0x4000475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private static int kWorldToCameraMatrix;

		[Token(Token = "0x4000476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private static int kCameraToWorldMatrix;

		[Token(Token = "0x4000477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private static int kAxis;

		[Token(Token = "0x4000478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private static int kCurrentMipLevel;

		[Token(Token = "0x1700007F")]
		public Shader shader
		{
			[Token(Token = "0x600040B")]
			[Address(RVA = "0x4CA560", Offset = "0x4CA560", VA = "0x4CA560")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000080")]
		public Material material
		{
			[Token(Token = "0x600040C")]
			[Address(RVA = "0x4CA61C", Offset = "0x4CA61C", VA = "0x4CA61C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000081")]
		public Camera camera_
		{
			[Token(Token = "0x600040D")]
			[Address(RVA = "0x4CA6CC", Offset = "0x4CA6CC", VA = "0x4CA6CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600040A")]
		[Address(RVA = "0x4CA3BC", Offset = "0x4CA3BC", VA = "0x4CA3BC")]
		public ScreenSpaceReflection()
		{
		}

		[Token(Token = "0x600040E")]
		[Address(RVA = "0x4CA784", Offset = "0x4CA784", VA = "0x4CA784")]
		private void Awake()
		{
		}

		[Token(Token = "0x600040F")]
		[Address(RVA = "0x4CAF60", Offset = "0x4CAF60", VA = "0x4CAF60")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000410")]
		[Address(RVA = "0x4CB000", Offset = "0x4CB000", VA = "0x4CB000")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000411")]
		[Address(RVA = "0x4CB178", Offset = "0x4CB178", VA = "0x4CB178")]
		public void OnPreRender()
		{
		}
	}
	[Token(Token = "0x200008C")]
	[ExecuteInEditMode]
	[ImageEffectAllowedInSceneView]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x167188", Offset = "0x167188")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x167188", Offset = "0x167188")]
	public class TemporalAntiAliasing : MonoBehaviour
	{
		[Token(Token = "0x200008D")]
		public enum Sequence
		{
			[Token(Token = "0x40004A1")]
			Halton
		}

		[Serializable]
		[Token(Token = "0x200008E")]
		public struct JitterSettings
		{
			[Token(Token = "0x40004A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x167268", Offset = "0x167268")]
			public Sequence sequence;

			[Token(Token = "0x40004A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16729C", Offset = "0x16729C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16729C", Offset = "0x16729C")]
			public float spread;

			[Token(Token = "0x40004A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1672F4", Offset = "0x1672F4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1672F4", Offset = "0x1672F4")]
			public int sampleCount;
		}

		[Serializable]
		[Token(Token = "0x200008F")]
		public struct SharpenFilterSettings
		{
			[Token(Token = "0x40004A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16734C", Offset = "0x16734C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16734C", Offset = "0x16734C")]
			public float amount;
		}

		[Serializable]
		[Token(Token = "0x2000090")]
		public struct BlendSettings
		{
			[Token(Token = "0x40004A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1673A0", Offset = "0x1673A0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1673A0", Offset = "0x1673A0")]
			public float stationary;

			[Token(Token = "0x40004A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1673F4", Offset = "0x1673F4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1673F4", Offset = "0x1673F4")]
			public float moving;

			[Token(Token = "0x40004A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x167448", Offset = "0x167448")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x167448", Offset = "0x167448")]
			public float motionAmplification;
		}

		[Serializable]
		[Token(Token = "0x2000091")]
		public struct DebugSettings
		{
			[Token(Token = "0x40004A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1674A0", Offset = "0x1674A0")]
			public bool forceRepaint;
		}

		[Serializable]
		[Token(Token = "0x2000092")]
		public class Settings
		{
			[Token(Token = "0x2000093")]
			[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x167514", Offset = "0x167514")]
			public class LayoutAttribute : PropertyAttribute
			{
				[Token(Token = "0x6000425")]
				[Address(RVA = "0x4CF2F8", Offset = "0x4CF2F8", VA = "0x4CF2F8")]
				public LayoutAttribute()
				{
				}
			}

			[Token(Token = "0x40004AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[Layout]
			public JitterSettings jitterSettings;

			[Token(Token = "0x40004AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[Layout]
			public SharpenFilterSettings sharpenFilterSettings;

			[Token(Token = "0x40004AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[Layout]
			public BlendSettings blendSettings;

			[Token(Token = "0x40004AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[Layout]
			public DebugSettings debugSettings;

			[Token(Token = "0x17000086")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6000424")]
				[Address(RVA = "0x4CD620", Offset = "0x4CD620", VA = "0x4CD620")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000423")]
			[Address(RVA = "0x4CF2F0", Offset = "0x4CF2F0", VA = "0x4CF2F0")]
			public Settings()
			{
			}
		}

		[Token(Token = "0x400049A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		public Settings settings;

		[Token(Token = "0x400049B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Shader m_Shader;

		[Token(Token = "0x400049C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Material m_Material;

		[Token(Token = "0x400049D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Camera m_Camera;

		[Token(Token = "0x400049E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private RenderTexture m_History;

		[Token(Token = "0x400049F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int m_SampleIndex;

		[Token(Token = "0x17000083")]
		public Shader shader
		{
			[Token(Token = "0x6000416")]
			[Address(RVA = "0x4CD74C", Offset = "0x4CD74C", VA = "0x4CD74C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000084")]
		public Material material
		{
			[Token(Token = "0x6000417")]
			[Address(RVA = "0x4CD808", Offset = "0x4CD808", VA = "0x4CD808")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000085")]
		public Camera camera_
		{
			[Token(Token = "0x6000418")]
			[Address(RVA = "0x4CD968", Offset = "0x4CD968", VA = "0x4CD968")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000415")]
		[Address(RVA = "0x4CD5FC", Offset = "0x4CD5FC", VA = "0x4CD5FC")]
		public TemporalAntiAliasing()
		{
		}

		[Token(Token = "0x6000419")]
		[Address(RVA = "0x4CDA20", Offset = "0x4CDA20", VA = "0x4CDA20")]
		private void RenderFullScreenQuad(int pass)
		{
		}

		[Token(Token = "0x600041A")]
		[Address(RVA = "0x4CDB60", Offset = "0x4CDB60", VA = "0x4CDB60")]
		private float GetHaltonValue(int index, int radix)
		{
			return default(float);
		}

		[Token(Token = "0x600041B")]
		[Address(RVA = "0x4CDBC4", Offset = "0x4CDBC4", VA = "0x4CDBC4")]
		private Vector2 GenerateRandomOffset()
		{
			return default(Vector2);
		}

		[Token(Token = "0x600041C")]
		[Address(RVA = "0x4CDCEC", Offset = "0x4CDCEC", VA = "0x4CDCEC")]
		private Matrix4x4 GetPerspectiveProjectionMatrix(Vector2 offset)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x600041D")]
		[Address(RVA = "0x4CE314", Offset = "0x4CE314", VA = "0x4CE314")]
		private Matrix4x4 GetOrthographicProjectionMatrix(Vector2 offset)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x600041E")]
		[Address(RVA = "0x4CE514", Offset = "0x4CE514", VA = "0x4CE514")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600041F")]
		[Address(RVA = "0x4CE570", Offset = "0x4CE570", VA = "0x4CE570")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000420")]
		[Address(RVA = "0x4CE67C", Offset = "0x4CE67C", VA = "0x4CE67C")]
		private void OnPreCull()
		{
		}

		[Token(Token = "0x6000421")]
		[Address(RVA = "0x4CEAB8", Offset = "0x4CEAB8", VA = "0x4CEAB8")]
		[ImageEffectOpaque]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000422")]
		[Address(RVA = "0x4CF2A0", Offset = "0x4CF2A0", VA = "0x4CF2A0")]
		public void OnPostRender()
		{
		}
	}
	[Token(Token = "0x2000094")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x167528", Offset = "0x167528")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x167528", Offset = "0x167528")]
	[ImageEffectAllowedInSceneView]
	public class TonemappingColorGrading : MonoBehaviour
	{
		[Token(Token = "0x2000095")]
		[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x167770", Offset = "0x167770")]
		public class SettingsGroup : Attribute
		{
			[Token(Token = "0x600044D")]
			[Address(RVA = "0x4D3C3C", Offset = "0x4D3C3C", VA = "0x4D3C3C")]
			public SettingsGroup()
			{
			}
		}

		[Token(Token = "0x2000096")]
		public class IndentedGroup : PropertyAttribute
		{
			[Token(Token = "0x600044E")]
			[Address(RVA = "0x4D3BE0", Offset = "0x4D3BE0", VA = "0x4D3BE0")]
			public IndentedGroup()
			{
			}
		}

		[Token(Token = "0x2000097")]
		public class ChannelMixer : PropertyAttribute
		{
			[Token(Token = "0x600044F")]
			[Address(RVA = "0x4D3140", Offset = "0x4D3140", VA = "0x4D3140")]
			public ChannelMixer()
			{
			}
		}

		[Token(Token = "0x2000098")]
		public class ColorWheelGroup : PropertyAttribute
		{
			[Token(Token = "0x40004D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int minSizePerWheel;

			[Token(Token = "0x40004DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int maxSizePerWheel;

			[Token(Token = "0x6000450")]
			[Address(RVA = "0x4D38E0", Offset = "0x4D38E0", VA = "0x4D38E0")]
			public ColorWheelGroup()
			{
			}

			[Token(Token = "0x6000451")]
			[Address(RVA = "0x4D38F8", Offset = "0x4D38F8", VA = "0x4D38F8")]
			public ColorWheelGroup(int minSizePerWheel, int maxSizePerWheel)
			{
			}
		}

		[Token(Token = "0x2000099")]
		public class Curve : PropertyAttribute
		{
			[Token(Token = "0x40004DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Color color;

			[Token(Token = "0x6000452")]
			[Address(RVA = "0x4D3934", Offset = "0x4D3934", VA = "0x4D3934")]
			public Curve()
			{
			}

			[Token(Token = "0x6000453")]
			[Address(RVA = "0x4D3974", Offset = "0x4D3974", VA = "0x4D3974")]
			public Curve(float r, float g, float b, float a)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200009A")]
		public struct EyeAdaptationSettings
		{
			[Token(Token = "0x40004DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool enabled;

			[Token(Token = "0x40004DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x167784", Offset = "0x167784")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x167784", Offset = "0x167784")]
			public float middleGrey;

			[Token(Token = "0x40004DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1677D0", Offset = "0x1677D0")]
			public float min;

			[Token(Token = "0x40004DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x167804", Offset = "0x167804")]
			public float max;

			[Token(Token = "0x40004E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x167838", Offset = "0x167838")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x167838", Offset = "0x167838")]
			public float speed;

			[Token(Token = "0x40004E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x167884", Offset = "0x167884")]
			public bool showDebug;

			[Token(Token = "0x17000095")]
			public static EyeAdaptationSettings defaultSettings
			{
				[Token(Token = "0x6000454")]
				[Address(RVA = "0x4CF3C8", Offset = "0x4CF3C8", VA = "0x4CF3C8")]
				get
				{
					return default(EyeAdaptationSettings);
				}
			}
		}

		[Token(Token = "0x200009B")]
		public enum Tonemapper
		{
			[Token(Token = "0x40004E3")]
			ACES,
			[Token(Token = "0x40004E4")]
			Curve,
			[Token(Token = "0x40004E5")]
			Hable,
			[Token(Token = "0x40004E6")]
			HejlDawson,
			[Token(Token = "0x40004E7")]
			Photographic,
			[Token(Token = "0x40004E8")]
			Reinhard,
			[Token(Token = "0x40004E9")]
			Neutral
		}

		[Serializable]
		[Token(Token = "0x200009C")]
		public struct TonemappingSettings
		{
			[Token(Token = "0x40004EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool enabled;

			[Token(Token = "0x40004EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1678B8", Offset = "0x1678B8")]
			public Tonemapper tonemapper;

			[Token(Token = "0x40004EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x1678EC", Offset = "0x1678EC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1678EC", Offset = "0x1678EC")]
			public float exposure;

			[Token(Token = "0x40004ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x167938", Offset = "0x167938")]
			public AnimationCurve curve;

			[Token(Token = "0x40004EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16796C", Offset = "0x16796C")]
			public float neutralBlackIn;

			[Token(Token = "0x40004EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16798C", Offset = "0x16798C")]
			public float neutralWhiteIn;

			[Token(Token = "0x40004F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1679A8", Offset = "0x1679A8")]
			public float neutralBlackOut;

			[Token(Token = "0x40004F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1679C8", Offset = "0x1679C8")]
			public float neutralWhiteOut;

			[Token(Token = "0x40004F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1679E4", Offset = "0x1679E4")]
			public float neutralWhiteLevel;

			[Token(Token = "0x40004F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x167A04", Offset = "0x167A04")]
			public float neutralWhiteClip;

			[Token(Token = "0x17000096")]
			public static TonemappingSettings defaultSettings
			{
				[Token(Token = "0x6000455")]
				[Address(RVA = "0x4CF3FC", Offset = "0x4CF3FC", VA = "0x4CF3FC")]
				get
				{
					return default(TonemappingSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x200009D")]
		public struct LUTSettings
		{
			[Token(Token = "0x40004F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool enabled;

			[Token(Token = "0x40004F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x167A20", Offset = "0x167A20")]
			public Texture texture;

			[Token(Token = "0x40004F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x167A54", Offset = "0x167A54")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x167A54", Offset = "0x167A54")]
			public float contribution;

			[Token(Token = "0x17000097")]
			public static LUTSettings defaultSettings
			{
				[Token(Token = "0x6000456")]
				[Address(RVA = "0x4CF5C0", Offset = "0x4CF5C0", VA = "0x4CF5C0")]
				get
				{
					return default(LUTSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x200009E")]
		public struct ColorWheelsSettings
		{
			[Token(Token = "0x40004F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x167AA4", Offset = "0x167AA4")]
			public Color shadows;

			[Token(Token = "0x40004F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x167AB8", Offset = "0x167AB8")]
			public Color midtones;

			[Token(Token = "0x40004F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x167ACC", Offset = "0x167ACC")]
			public Color highlights;

			[Token(Token = "0x17000098")]
			public static ColorWheelsSettings defaultSettings
			{
				[Token(Token = "0x6000457")]
				[Address(RVA = "0x4D37E4", Offset = "0x4D37E4", VA = "0x4D37E4")]
				get
				{
					return default(ColorWheelsSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x200009F")]
		public struct BasicsSettings
		{
			[Token(Token = "0x40004FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x167AE0", Offset = "0x167AE0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x167AE0", Offset = "0x167AE0")]
			public float temperatureShift;

			[Token(Token = "0x40004FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x167B30", Offset = "0x167B30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x167B30", Offset = "0x167B30")]
			public float tint;

			[Token(Token = "0x40004FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x167B80", Offset = "0x167B80")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x167B80", Offset = "0x167B80")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x167B80", Offset = "0x167B80")]
			public float hue;

			[Token(Token = "0x40004FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x167BE0", Offset = "0x167BE0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x167BE0", Offset = "0x167BE0")]
			public float saturation;

			[Token(Token = "0x40004FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x167C30", Offset = "0x167C30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x167C30", Offset = "0x167C30")]
			public float vibrance;

			[Token(Token = "0x40004FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x167C84", Offset = "0x167C84")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x167C84", Offset = "0x167C84")]
			public float value;

			[Token(Token = "0x4000500")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x167CD8", Offset = "0x167CD8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x167CD8", Offset = "0x167CD8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x167CD8", Offset = "0x167CD8")]
			public float contrast;

			[Token(Token = "0x4000501")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x167D38", Offset = "0x167D38")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x167D38", Offset = "0x167D38")]
			public float gain;

			[Token(Token = "0x4000502")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x167D90", Offset = "0x167D90")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x167D90", Offset = "0x167D90")]
			public float gamma;

			[Token(Token = "0x17000099")]
			public static BasicsSettings defaultSettings
			{
				[Token(Token = "0x6000458")]
				[Address(RVA = "0x4D3110", Offset = "0x4D3110", VA = "0x4D3110")]
				get
				{
					return default(BasicsSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x20000A0")]
		public struct ChannelMixerSettings
		{
			[Token(Token = "0x4000503")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int currentChannel;

			[Token(Token = "0x4000504")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public Vector3[] channels;

			[Token(Token = "0x1700009A")]
			public static ChannelMixerSettings defaultSettings
			{
				[Token(Token = "0x6000459")]
				[Address(RVA = "0x4D3308", Offset = "0x4D3308", VA = "0x4D3308")]
				get
				{
					return default(ChannelMixerSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x20000A1")]
		public struct CurvesSettings
		{
			[Token(Token = "0x4000505")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "Curve", RVA = "0x167DE8", Offset = "0x167DE8")]
			public AnimationCurve master;

			[Token(Token = "0x4000506")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "Curve", RVA = "0x167DF8", Offset = "0x167DF8")]
			public AnimationCurve red;

			[Token(Token = "0x4000507")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "Curve", RVA = "0x167E34", Offset = "0x167E34")]
			public AnimationCurve green;

			[Token(Token = "0x4000508")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "Curve", RVA = "0x167E70", Offset = "0x167E70")]
			public AnimationCurve blue;

			[Token(Token = "0x1700009B")]
			public static CurvesSettings defaultSettings
			{
				[Token(Token = "0x600045A")]
				[Address(RVA = "0x4D3880", Offset = "0x4D3880", VA = "0x4D3880")]
				get
				{
					return default(CurvesSettings);
				}
			}

			[Token(Token = "0x1700009C")]
			public static AnimationCurve defaultCurve
			{
				[Token(Token = "0x600045B")]
				[Address(RVA = "0x4D3A08", Offset = "0x4D3A08", VA = "0x4D3A08")]
				get
				{
					return null;
				}
			}
		}

		[Token(Token = "0x20000A2")]
		public enum ColorGradingPrecision
		{
			[Token(Token = "0x400050A")]
			Normal = 0x10,
			[Token(Token = "0x400050B")]
			High = 0x20
		}

		[Serializable]
		[Token(Token = "0x20000A3")]
		public struct ColorGradingSettings
		{
			[Token(Token = "0x400050C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool enabled;

			[Token(Token = "0x400050D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x167EAC", Offset = "0x167EAC")]
			public ColorGradingPrecision precision;

			[Token(Token = "0x400050E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x167EE0", Offset = "0x167EE0")]
			[AttributeAttribute(Name = "ColorWheelGroup", RVA = "0x167EE0", Offset = "0x167EE0")]
			public ColorWheelsSettings colorWheels;

			[Token(Token = "0x400050F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x167F10", Offset = "0x167F10")]
			[IndentedGroup]
			public BasicsSettings basics;

			[Token(Token = "0x4000510")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x167F40", Offset = "0x167F40")]
			[ChannelMixer]
			public ChannelMixerSettings channelMixer;

			[Token(Token = "0x4000511")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x167F70", Offset = "0x167F70")]
			[IndentedGroup]
			public CurvesSettings curves;

			[Token(Token = "0x4000512")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x167FA0", Offset = "0x167FA0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x167FA0", Offset = "0x167FA0")]
			public bool useDithering;

			[Token(Token = "0x4000513")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x167FE8", Offset = "0x167FE8")]
			public bool showDebug;

			[Token(Token = "0x1700009D")]
			public static ColorGradingSettings defaultSettings
			{
				[Token(Token = "0x600045C")]
				[Address(RVA = "0x4CF478", Offset = "0x4CF478", VA = "0x4CF478")]
				get
				{
					return default(ColorGradingSettings);
				}
			}

			[Token(Token = "0x600045D")]
			[Address(RVA = "0x4D38B4", Offset = "0x4D38B4", VA = "0x4D38B4")]
			internal void Reset()
			{
			}
		}

		[Token(Token = "0x20000A4")]
		private enum Pass
		{
			[Token(Token = "0x4000515")]
			LutGen,
			[Token(Token = "0x4000516")]
			AdaptationLog,
			[Token(Token = "0x4000517")]
			AdaptationExpBlend,
			[Token(Token = "0x4000518")]
			AdaptationExp,
			[Token(Token = "0x4000519")]
			TonemappingOff,
			[Token(Token = "0x400051A")]
			TonemappingACES,
			[Token(Token = "0x400051B")]
			TonemappingCurve,
			[Token(Token = "0x400051C")]
			TonemappingHable,
			[Token(Token = "0x400051D")]
			TonemappingHejlDawson,
			[Token(Token = "0x400051E")]
			TonemappingPhotographic,
			[Token(Token = "0x400051F")]
			TonemappingReinhard,
			[Token(Token = "0x4000520")]
			TonemappingNeutral,
			[Token(Token = "0x4000521")]
			AdaptationDebug
		}

		[Token(Token = "0x40004AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		[SettingsGroup]
		private EyeAdaptationSettings m_EyeAdaptation;

		[Token(Token = "0x40004AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		[SettingsGroup]
		private TonemappingSettings m_Tonemapping;

		[Token(Token = "0x40004B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		[SettingsGroup]
		private ColorGradingSettings m_ColorGrading;

		[Token(Token = "0x40004B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		[SettingsGroup]
		private LUTSettings m_Lut;

		[Token(Token = "0x40004B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Texture2D m_IdentityLut;

		[Token(Token = "0x40004B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private RenderTexture m_InternalLut;

		[Token(Token = "0x40004B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Texture2D m_CurveTexture;

		[Token(Token = "0x40004B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private Texture2D m_TonemapperCurve;

		[Token(Token = "0x40004B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private float m_TonemapperCurveRange;

		[Token(Token = "0x40004B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		private Shader m_Shader;

		[Token(Token = "0x40004B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Material m_Material;

		[Token(Token = "0x40004B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1676B8", Offset = "0x1676B8")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x1676B8", Offset = "0x1676B8")]
		private bool <validRenderTextureFormat>k__BackingField;

		[Token(Token = "0x40004BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xED")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1676EC", Offset = "0x1676EC")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x1676EC", Offset = "0x1676EC")]
		private bool <validUserLutSize>k__BackingField;

		[Token(Token = "0x40004BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEE")]
		private bool m_Dirty;

		[Token(Token = "0x40004BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEF")]
		private bool m_TonemapperDirty;

		[Token(Token = "0x40004BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private RenderTexture m_SmallAdaptiveRt;

		[Token(Token = "0x40004BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private RenderTextureFormat m_AdaptiveRtFormat;

		[Token(Token = "0x40004BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private int m_AdaptationSpeed;

		[Token(Token = "0x40004C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		private int m_MiddleGrey;

		[Token(Token = "0x40004C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private int m_AdaptationMin;

		[Token(Token = "0x40004C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private int m_AdaptationMax;

		[Token(Token = "0x40004C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private int m_LumTex;

		[Token(Token = "0x40004C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private int m_ToneCurveRange;

		[Token(Token = "0x40004C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private int m_ToneCurve;

		[Token(Token = "0x40004C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private int m_Exposure;

		[Token(Token = "0x40004C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private int m_NeutralTonemapperParams1;

		[Token(Token = "0x40004C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private int m_NeutralTonemapperParams2;

		[Token(Token = "0x40004C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private int m_WhiteBalance;

		[Token(Token = "0x40004CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		private int m_Lift;

		[Token(Token = "0x40004CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private int m_Gamma;

		[Token(Token = "0x40004CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		private int m_Gain;

		[Token(Token = "0x40004CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private int m_ContrastGainGamma;

		[Token(Token = "0x40004CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		private int m_Vibrance;

		[Token(Token = "0x40004CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private int m_HSV;

		[Token(Token = "0x40004D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private int m_ChannelMixerRed;

		[Token(Token = "0x40004D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private int m_ChannelMixerGreen;

		[Token(Token = "0x40004D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		private int m_ChannelMixerBlue;

		[Token(Token = "0x40004D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private int m_CurveTex;

		[Token(Token = "0x40004D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		private int m_InternalLutTex;

		[Token(Token = "0x40004D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private int m_InternalLutParams;

		[Token(Token = "0x40004D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		private int m_UserLutTex;

		[Token(Token = "0x40004D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private int m_UserLutParams;

		[Token(Token = "0x40004D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		private RenderTexture[] m_AdaptRts;

		[Token(Token = "0x17000087")]
		public EyeAdaptationSettings eyeAdaptation
		{
			[Token(Token = "0x6000427")]
			[Address(RVA = "0x4CF5F4", Offset = "0x4CF5F4", VA = "0x4CF5F4")]
			get
			{
				return default(EyeAdaptationSettings);
			}
			[Token(Token = "0x6000428")]
			[Address(RVA = "0x4CF608", Offset = "0x4CF608", VA = "0x4CF608")]
			set
			{
			}
		}

		[Token(Token = "0x17000088")]
		public TonemappingSettings tonemapping
		{
			[Token(Token = "0x6000429")]
			[Address(RVA = "0x4CF620", Offset = "0x4CF620", VA = "0x4CF620")]
			get
			{
				return default(TonemappingSettings);
			}
			[Token(Token = "0x600042A")]
			[Address(RVA = "0x4CF63C", Offset = "0x4CF63C", VA = "0x4CF63C")]
			set
			{
			}
		}

		[Token(Token = "0x17000089")]
		public ColorGradingSettings colorGrading
		{
			[Token(Token = "0x600042B")]
			[Address(RVA = "0x4CF690", Offset = "0x4CF690", VA = "0x4CF690")]
			get
			{
				return default(ColorGradingSettings);
			}
			[Token(Token = "0x600042C")]
			[Address(RVA = "0x4CF6A8", Offset = "0x4CF6A8", VA = "0x4CF6A8")]
			set
			{
			}
		}

		[Token(Token = "0x1700008A")]
		public LUTSettings lut
		{
			[Token(Token = "0x600042D")]
			[Address(RVA = "0x4CF6F8", Offset = "0x4CF6F8", VA = "0x4CF6F8")]
			get
			{
				return default(LUTSettings);
			}
			[Token(Token = "0x600042E")]
			[Address(RVA = "0x4CF708", Offset = "0x4CF708", VA = "0x4CF708")]
			set
			{
			}
		}

		[Token(Token = "0x1700008B")]
		private Texture2D identityLut
		{
			[Token(Token = "0x600042F")]
			[Address(RVA = "0x4CF714", Offset = "0x4CF714", VA = "0x4CF714")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008C")]
		private RenderTexture internalLutRt
		{
			[Token(Token = "0x6000430")]
			[Address(RVA = "0x4CFB70", Offset = "0x4CFB70", VA = "0x4CFB70")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008D")]
		private Texture2D curveTexture
		{
			[Token(Token = "0x6000431")]
			[Address(RVA = "0x4CFD94", Offset = "0x4CFD94", VA = "0x4CFD94")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008E")]
		private Texture2D tonemapperCurve
		{
			[Token(Token = "0x6000432")]
			[Address(RVA = "0x4CFF50", Offset = "0x4CFF50", VA = "0x4CFF50")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008F")]
		public Shader shader
		{
			[Token(Token = "0x6000433")]
			[Address(RVA = "0x4D0144", Offset = "0x4D0144", VA = "0x4D0144")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000090")]
		public Material material
		{
			[Token(Token = "0x6000434")]
			[Address(RVA = "0x4D0200", Offset = "0x4D0200", VA = "0x4D0200")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000091")]
		public bool isGammaColorSpace
		{
			[Token(Token = "0x6000435")]
			[Address(RVA = "0x4D02B0", Offset = "0x4D02B0", VA = "0x4D02B0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000092")]
		public int lutSize
		{
			[Token(Token = "0x6000436")]
			[Address(RVA = "0x4CF82C", Offset = "0x4CF82C", VA = "0x4CF82C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000093")]
		public bool validRenderTextureFormat
		{
			[Token(Token = "0x6000437")]
			[Address(RVA = "0x4D02D8", Offset = "0x4D02D8", VA = "0x4D02D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x167720", Offset = "0x167720")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000438")]
			[Address(RVA = "0x4D02E0", Offset = "0x4D02E0", VA = "0x4D02E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x167730", Offset = "0x167730")]
			private set
			{
			}
		}

		[Token(Token = "0x17000094")]
		public bool validUserLutSize
		{
			[Token(Token = "0x6000439")]
			[Address(RVA = "0x4D02E8", Offset = "0x4D02E8", VA = "0x4D02E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x167740", Offset = "0x167740")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600043A")]
			[Address(RVA = "0x4D02F0", Offset = "0x4D02F0", VA = "0x4D02F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x167750", Offset = "0x167750")]
			private set
			{
			}
		}

		[Token(Token = "0x6000426")]
		[Address(RVA = "0x4CF300", Offset = "0x4CF300", VA = "0x4CF300")]
		public TonemappingColorGrading()
		{
		}

		[Token(Token = "0x600043B")]
		[Address(RVA = "0x4CF6EC", Offset = "0x4CF6EC", VA = "0x4CF6EC")]
		public void SetDirty()
		{
		}

		[Token(Token = "0x600043C")]
		[Address(RVA = "0x4CF684", Offset = "0x4CF684", VA = "0x4CF684")]
		public void SetTonemapperDirty()
		{
		}

		[Token(Token = "0x600043D")]
		[Address(RVA = "0x4D02F8", Offset = "0x4D02F8", VA = "0x4D02F8")]
		private void Awake()
		{
		}

		[Token(Token = "0x600043E")]
		[Address(RVA = "0x4D0664", Offset = "0x4D0664", VA = "0x4D0664")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600043F")]
		[Address(RVA = "0x4D06BC", Offset = "0x4D06BC", VA = "0x4D06BC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000440")]
		[Address(RVA = "0x4D0A78", Offset = "0x4D0A78", VA = "0x4D0A78")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000441")]
		[Address(RVA = "0x4CF834", Offset = "0x4CF834", VA = "0x4CF834")]
		private static Texture2D GenerateIdentityLut(int dim)
		{
			return null;
		}

		[Token(Token = "0x6000442")]
		[Address(RVA = "0x4D0A84", Offset = "0x4D0A84", VA = "0x4D0A84")]
		private float StandardIlluminantY(float x)
		{
			return default(float);
		}

		[Token(Token = "0x6000443")]
		[Address(RVA = "0x4D0ABC", Offset = "0x4D0ABC", VA = "0x4D0ABC")]
		private Vector3 CIExyToLMS(float x, float y)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000444")]
		[Address(RVA = "0x4D0B8C", Offset = "0x4D0B8C", VA = "0x4D0B8C")]
		private Vector3 GetWhiteBalance()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000445")]
		[Address(RVA = "0x4D0CA8", Offset = "0x4D0CA8", VA = "0x4D0CA8")]
		private static Color NormalizeColor(Color c)
		{
			return default(Color);
		}

		[Token(Token = "0x6000446")]
		[Address(RVA = "0x4D0DCC", Offset = "0x4D0DCC", VA = "0x4D0DCC")]
		private void GenerateLiftGammaGain(out Color lift, out Color gamma, out Color gain)
		{
		}

		[Token(Token = "0x6000447")]
		[Address(RVA = "0x4D1064", Offset = "0x4D1064", VA = "0x4D1064")]
		private void GenCurveTexture()
		{
		}

		[Token(Token = "0x6000448")]
		[Address(RVA = "0x4D1350", Offset = "0x4D1350", VA = "0x4D1350")]
		private bool CheckUserLut()
		{
			return default(bool);
		}

		[Token(Token = "0x6000449")]
		[Address(RVA = "0x4D1454", Offset = "0x4D1454", VA = "0x4D1454")]
		private bool CheckSmallAdaptiveRt()
		{
			return default(bool);
		}

		[Token(Token = "0x600044A")]
		[Address(RVA = "0x4D1580", Offset = "0x4D1580", VA = "0x4D1580")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x600044B")]
		[Address(RVA = "0x4D1818", Offset = "0x4D1818", VA = "0x4D1818")]
		[ImageEffectTransformsToLDR]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x600044C")]
		[Address(RVA = "0x4D2F44", Offset = "0x4D2F44", VA = "0x4D2F44")]
		public Texture2D BakeLUT()
		{
			return null;
		}
	}
}
[Token(Token = "0x20000A5")]
public class AchievementsManager : MonoBehaviour
{
	[Token(Token = "0x4000522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16801C", Offset = "0x16801C")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x16801C", Offset = "0x16801C")]
	private static AchievementsManager <Instance>k__BackingField;

	[Token(Token = "0x1700009E")]
	public static AchievementsManager Instance
	{
		[Token(Token = "0x600045F")]
		[Address(RVA = "0x48F908", Offset = "0x48F908", VA = "0x48F908")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x168050", Offset = "0x168050")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000460")]
		[Address(RVA = "0x48F96C", Offset = "0x48F96C", VA = "0x48F96C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x168060", Offset = "0x168060")]
		private set
		{
		}
	}

	[Token(Token = "0x600045E")]
	[Address(RVA = "0x48F900", Offset = "0x48F900", VA = "0x48F900")]
	public AchievementsManager()
	{
	}

	[Token(Token = "0x6000461")]
	[Address(RVA = "0x48F9D0", Offset = "0x48F9D0", VA = "0x48F9D0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000462")]
	[Address(RVA = "0x48FC44", Offset = "0x48FC44", VA = "0x48FC44", Slot = "4")]
	public virtual void Init()
	{
	}

	[Token(Token = "0x6000463")]
	[Address(RVA = "0x48FC48", Offset = "0x48FC48", VA = "0x48FC48", Slot = "5")]
	public virtual void ResetAllAchievements()
	{
	}

	[Token(Token = "0x6000464")]
	[Address(RVA = "0x48FC4C", Offset = "0x48FC4C", VA = "0x48FC4C", Slot = "6")]
	public virtual void AddOneToStat(string name)
	{
	}

	[Token(Token = "0x6000465")]
	[Address(RVA = "0x48FD60", Offset = "0x48FD60", VA = "0x48FD60", Slot = "7")]
	public virtual void TriggerAchievement(string name)
	{
	}

	[Token(Token = "0x6000466")]
	[Address(RVA = "0x48FE74", Offset = "0x48FE74", VA = "0x48FE74", Slot = "8")]
	public virtual void AddOneToCollection(string name, string field)
	{
	}

	[Token(Token = "0x6000467")]
	[Address(RVA = "0x48FFD4", Offset = "0x48FFD4", VA = "0x48FFD4", Slot = "9")]
	protected virtual void CheckFullCompletion()
	{
	}
}
[Token(Token = "0x20000A6")]
public class OculusEntitlementWarning : MonoBehaviour
{
	[Token(Token = "0x4000523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static OculusEntitlementWarning Instance;

	[Token(Token = "0x6000468")]
	[Address(RVA = "0x32D6B8", Offset = "0x32D6B8", VA = "0x32D6B8")]
	public OculusEntitlementWarning()
	{
	}

	[Token(Token = "0x6000469")]
	[Address(RVA = "0x32D6C0", Offset = "0x32D6C0", VA = "0x32D6C0")]
	private void Awake()
	{
	}
}
[Token(Token = "0x20000A7")]
public class PlatformInitializer : MonoBehaviour
{
	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string[] platformData;

	[Token(Token = "0x600046A")]
	[Address(RVA = "0x3397CC", Offset = "0x3397CC", VA = "0x3397CC")]
	public PlatformInitializer()
	{
	}

	[Token(Token = "0x600046B")]
	[Address(RVA = "0x3397D4", Offset = "0x3397D4", VA = "0x3397D4")]
	public void ChoosePlatform()
	{
	}

	[Token(Token = "0x600046C")]
	[Address(RVA = "0x339958", Offset = "0x339958", VA = "0x339958")]
	private void LoadPlatformConfig()
	{
	}
}
[Token(Token = "0x20000A8")]
public class PlatformManager : MonoBehaviour
{
	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x168070", Offset = "0x168070")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x168070", Offset = "0x168070")]
	private static PlatformManager <Instance>k__BackingField;

	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private LogoManager _logoManager;

	[Token(Token = "0x4000527")]
	public const string version = "1.6.0.0";

	[Token(Token = "0x1700009F")]
	public static PlatformManager Instance
	{
		[Token(Token = "0x600046E")]
		[Address(RVA = "0x339A34", Offset = "0x339A34", VA = "0x339A34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1680A4", Offset = "0x1680A4")]
		get
		{
			return null;
		}
		[Token(Token = "0x600046F")]
		[Address(RVA = "0x339A98", Offset = "0x339A98", VA = "0x339A98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1680B4", Offset = "0x1680B4")]
		private set
		{
		}
	}

	[Token(Token = "0x600046D")]
	[Address(RVA = "0x324E8C", Offset = "0x324E8C", VA = "0x324E8C")]
	public PlatformManager()
	{
	}

	[Token(Token = "0x6000470")]
	[Address(RVA = "0x339AFC", Offset = "0x339AFC", VA = "0x339AFC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000471")]
	[Address(RVA = "0x339D8C", Offset = "0x339D8C", VA = "0x339D8C", Slot = "4")]
	public virtual void Init()
	{
	}

	[Token(Token = "0x6000472")]
	[Address(RVA = "0x3251B8", Offset = "0x3251B8", VA = "0x3251B8")]
	protected void LaunchLogoSequence()
	{
	}

	[Token(Token = "0x6000473")]
	[Address(RVA = "0x339DB0", Offset = "0x339DB0", VA = "0x339DB0", Slot = "5")]
	public virtual string GetDefaultLangagueString()
	{
		return null;
	}
}
[Token(Token = "0x20000A9")]
public class Aim : MonoBehaviour
{
	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Transform target;

	[Token(Token = "0x6000474")]
	[Address(RVA = "0x4909CC", Offset = "0x4909CC", VA = "0x4909CC")]
	public Aim()
	{
	}

	[Token(Token = "0x6000475")]
	[Address(RVA = "0x4909D4", Offset = "0x4909D4", VA = "0x4909D4")]
	private void OnEnable()
	{
	}
}
[Token(Token = "0x20000AA")]
public class AlarmeScript : MonoBehaviour
{
	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float speed;

	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Light _light;

	[Token(Token = "0x6000476")]
	[Address(RVA = "0x26D9D0", Offset = "0x26D9D0", VA = "0x26D9D0")]
	public AlarmeScript()
	{
	}

	[Token(Token = "0x6000477")]
	[Address(RVA = "0x26D9D8", Offset = "0x26D9D8", VA = "0x26D9D8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000478")]
	[Address(RVA = "0x26DA7C", Offset = "0x26DA7C", VA = "0x26DA7C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000479")]
	[Address(RVA = "0x26DAE8", Offset = "0x26DAE8", VA = "0x26DAE8")]
	public void SetAlarme()
	{
	}

	[Token(Token = "0x600047A")]
	[Address(RVA = "0x26DB30", Offset = "0x26DB30", VA = "0x26DB30")]
	public void UnsetAlarme()
	{
	}
}
[Serializable]
[Token(Token = "0x20000AB")]
public class ArcadeSubBank
{
	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public string Name;

	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public ToolNeeded Tool;

	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject[] SubBank;

	[Token(Token = "0x600047B")]
	[Address(RVA = "0x2709D4", Offset = "0x2709D4", VA = "0x2709D4")]
	public ArcadeSubBank()
	{
	}
}
[Serializable]
[Token(Token = "0x20000AC")]
public class ToolNeeded
{
	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public bool hammer;

	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
	public bool tap;

	[Token(Token = "0x4000530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
	public bool pen;

	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB")]
	public bool bowl;

	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool oven;

	[Token(Token = "0x600047C")]
	[Address(RVA = "0x2A6140", Offset = "0x2A6140", VA = "0x2A6140")]
	public ToolNeeded()
	{
	}

	[Token(Token = "0x600047D")]
	[Address(RVA = "0x2A6148", Offset = "0x2A6148", VA = "0x2A6148")]
	public void addTools(ToolNeeded tools)
	{
	}

	[Token(Token = "0x600047E")]
	[Address(RVA = "0x2A61D0", Offset = "0x2A61D0", VA = "0x2A61D0")]
	public int MeublerNumber()
	{
		return default(int);
	}

	[Token(Token = "0x600047F")]
	[Address(RVA = "0x2A61E0", Offset = "0x2A61E0", VA = "0x2A61E0")]
	public string[] GetMeubledata()
	{
		return null;
	}

	[Token(Token = "0x6000480")]
	[Address(RVA = "0x2A6364", Offset = "0x2A6364", VA = "0x2A6364")]
	public int CraftrNumber()
	{
		return default(int);
	}

	[Token(Token = "0x6000481")]
	[Address(RVA = "0x2A637C", Offset = "0x2A637C", VA = "0x2A637C")]
	public string[] GetCraftdata()
	{
		return null;
	}
}
[Token(Token = "0x20000AD")]
public class AdaptativeArcadeCarier : MonoBehaviour
{
	[Token(Token = "0x4000533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AdaptativeArcadeCarier Instance;

	[Token(Token = "0x4000534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public DataToLoad arcadeData;

	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ToolNeeded requiredTools;

	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public GameObject[] arcadeBank;

	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ArcadeSubBank[] subBanks;

	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private string[] availableItems;

	[Token(Token = "0x6000482")]
	[Address(RVA = "0x48FFD8", Offset = "0x48FFD8", VA = "0x48FFD8")]
	public AdaptativeArcadeCarier()
	{
	}

	[Token(Token = "0x6000483")]
	[Address(RVA = "0x48FFE0", Offset = "0x48FFE0", VA = "0x48FFE0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000484")]
	[Address(RVA = "0x49016C", Offset = "0x49016C", VA = "0x49016C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000485")]
	[Address(RVA = "0x490358", Offset = "0x490358", VA = "0x490358")]
	private void OnSceneLoaded(Scene scene, LoadSceneMode loadMode)
	{
	}

	[Token(Token = "0x6000486")]
	[Address(RVA = "0x490218", Offset = "0x490218", VA = "0x490218")]
	private void Init()
	{
	}

	[Token(Token = "0x6000487")]
	[Address(RVA = "0x49091C", Offset = "0x49091C", VA = "0x49091C")]
	public void Spread(ArcadeBank Bank)
	{
	}

	[Token(Token = "0x6000488")]
	[Address(RVA = "0x4905AC", Offset = "0x4905AC", VA = "0x4905AC")]
	public void AddTools()
	{
	}

	[Token(Token = "0x6000489")]
	[Address(RVA = "0x49038C", Offset = "0x49038C", VA = "0x49038C")]
	private void AddSubBank(string subBankName)
	{
	}
}
[Token(Token = "0x20000AE")]
public class ArcadeBank : MonoBehaviour
{
	[Token(Token = "0x20002F0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1680E4", Offset = "0x1680E4")]
	private sealed class <DelayedStartArcade>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4001176")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal ArcadeBank $this;

		[Token(Token = "0x4001177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x4001178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x4001179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x1700024F")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60016E9")]
			[Address(RVA = "0x26F46C", Offset = "0x26F46C", VA = "0x26F46C", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000250")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60016EA")]
			[Address(RVA = "0x26F474", Offset = "0x26F474", VA = "0x26F474", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016E7")]
		[Address(RVA = "0x26F308", Offset = "0x26F308", VA = "0x26F308")]
		[DebuggerHidden]
		public <DelayedStartArcade>c__Iterator0()
		{
		}

		[Token(Token = "0x60016E8")]
		[Address(RVA = "0x26F310", Offset = "0x26F310", VA = "0x26F310", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60016EB")]
		[Address(RVA = "0x26F47C", Offset = "0x26F47C", VA = "0x26F47C", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60016EC")]
		[Address(RVA = "0x26F490", Offset = "0x26F490", VA = "0x26F490", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4000539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int numberPerPulledLever;

	[Token(Token = "0x400053A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject[] bank;

	[Token(Token = "0x400053B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[HideInInspector]
	public bool hasStarted;

	[Token(Token = "0x400053C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	private bool Spawning;

	[Token(Token = "0x600048A")]
	[Address(RVA = "0x26EF84", Offset = "0x26EF84", VA = "0x26EF84")]
	public ArcadeBank()
	{
	}

	[Token(Token = "0x600048B")]
	[Address(RVA = "0x26EF94", Offset = "0x26EF94", VA = "0x26EF94")]
	private void Start()
	{
	}

	[Token(Token = "0x600048C")]
	[Address(RVA = "0x26F174", Offset = "0x26F174", VA = "0x26F174")]
	private void OnSpawningObjectHandler()
	{
	}

	[Token(Token = "0x600048D")]
	[Address(RVA = "0x26F180", Offset = "0x26F180", VA = "0x26F180")]
	private void OnFinishedSpawningObjectHandler()
	{
	}

	[Token(Token = "0x600048E")]
	[Address(RVA = "0x26F18C", Offset = "0x26F18C", VA = "0x26F18C")]
	public void StartArcade()
	{
	}

	[Token(Token = "0x600048F")]
	[Address(RVA = "0x26F230", Offset = "0x26F230", VA = "0x26F230")]
	public void AskForStock()
	{
	}

	[Token(Token = "0x6000490")]
	[Address(RVA = "0x26F1B0", Offset = "0x26F1B0", VA = "0x26F1B0")]
	[DebuggerHidden]
	private IEnumerator DelayedStartArcade()
	{
		return null;
	}
}
[Token(Token = "0x20000AF")]
public class ArcadeLock : MonoBehaviour
{
	[Token(Token = "0x6000491")]
	[Address(RVA = "0x26F7B8", Offset = "0x26F7B8", VA = "0x26F7B8")]
	public ArcadeLock()
	{
	}

	[Token(Token = "0x6000492")]
	[Address(RVA = "0x26F7C0", Offset = "0x26F7C0", VA = "0x26F7C0")]
	private void Start()
	{
	}
}
[Token(Token = "0x20000B0")]
public class ArcadeSellingBox : MonoBehaviour
{
	[Token(Token = "0x400053D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private string[] typeObjetsCompletes;

	[Token(Token = "0x400053E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float forceDeMultiplierDeRejet;

	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private bool jeLacheteTu;

	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private BuyingData soldWhat;

	[Token(Token = "0x6000493")]
	[Address(RVA = "0x26F960", Offset = "0x26F960", VA = "0x26F960")]
	public ArcadeSellingBox()
	{
	}

	[Token(Token = "0x6000494")]
	[Address(RVA = "0x26FA08", Offset = "0x26FA08", VA = "0x26FA08")]
	private void Start()
	{
	}

	[Token(Token = "0x6000495")]
	[Address(RVA = "0x26FC80", Offset = "0x26FC80", VA = "0x26FC80")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x6000496")]
	[Address(RVA = "0x270300", Offset = "0x270300", VA = "0x270300")]
	private void regardeSiJeLacheteTu(string res)
	{
	}

	[Token(Token = "0x6000497")]
	[Address(RVA = "0x2704F0", Offset = "0x2704F0", VA = "0x2704F0")]
	private void particulesSellSpawn(GameObject item, int valeur, bool skipDestroy = false)
	{
	}
}
[Token(Token = "0x20000B1")]
public class BobbySellingBox : MonoBehaviour
{
	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float forceDeMultiplierDeRejet;

	[Token(Token = "0x6000498")]
	[Address(RVA = "0x277194", Offset = "0x277194", VA = "0x277194")]
	public BobbySellingBox()
	{
	}

	[Token(Token = "0x6000499")]
	[Address(RVA = "0x27719C", Offset = "0x27719C", VA = "0x27719C")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x600049A")]
	[Address(RVA = "0x2776F4", Offset = "0x2776F4", VA = "0x2776F4")]
	public void tellMasterScriptToStopMe()
	{
	}
}
[Token(Token = "0x20000B2")]
public class FirstDayTutorial : MonoBehaviour
{
	[Token(Token = "0x4000542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject target;

	[Token(Token = "0x600049B")]
	[Address(RVA = "0x20EC08", Offset = "0x20EC08", VA = "0x20EC08")]
	public FirstDayTutorial()
	{
	}

	[Token(Token = "0x600049C")]
	[Address(RVA = "0x20EC10", Offset = "0x20EC10", VA = "0x20EC10")]
	private void Start()
	{
	}

	[Token(Token = "0x600049D")]
	[Address(RVA = "0x20EE24", Offset = "0x20EE24", VA = "0x20EE24")]
	public void StopHelper()
	{
	}
}
[Token(Token = "0x20000B3")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x168144", Offset = "0x168144")]
public class HaloScript : SpawnableObject
{
	[Token(Token = "0x20002F1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1681CC", Offset = "0x1681CC")]
	private sealed class <Stop>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x400117A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal HaloScript $this;

		[Token(Token = "0x400117B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x400117C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x400117D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x17000251")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60016EF")]
			[Address(RVA = "0x223C20", Offset = "0x223C20", VA = "0x223C20", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000252")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60016F0")]
			[Address(RVA = "0x223C28", Offset = "0x223C28", VA = "0x223C28", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016ED")]
		[Address(RVA = "0x223968", Offset = "0x223968", VA = "0x223968")]
		[DebuggerHidden]
		public <Stop>c__Iterator0()
		{
		}

		[Token(Token = "0x60016EE")]
		[Address(RVA = "0x223970", Offset = "0x223970", VA = "0x223970", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60016F1")]
		[Address(RVA = "0x223C30", Offset = "0x223C30", VA = "0x223C30", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60016F2")]
		[Address(RVA = "0x223C44", Offset = "0x223C44", VA = "0x223C44", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Rigidbody rb;

	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private BrownianMotion motion;

	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ParticleSystem particle;

	[Token(Token = "0x600049E")]
	[Address(RVA = "0x2238E0", Offset = "0x2238E0", VA = "0x2238E0")]
	public HaloScript()
	{
	}

	[Token(Token = "0x600049F")]
	[Address(RVA = "0x206A30", Offset = "0x206A30", VA = "0x206A30")]
	public void Init(Rigidbody rigid)
	{
	}

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0x2238E8", Offset = "0x2238E8", VA = "0x2238E8")]
	[DebuggerHidden]
	private IEnumerator Stop()
	{
		return null;
	}
}
[Token(Token = "0x20000B4")]
public class ShowScore : MonoBehaviour
{
	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private TextMeshProUGUI scoreTxt;

	[Token(Token = "0x60004A1")]
	[Address(RVA = "0x29D068", Offset = "0x29D068", VA = "0x29D068")]
	public ShowScore()
	{
	}

	[Token(Token = "0x60004A2")]
	[Address(RVA = "0x29D070", Offset = "0x29D070", VA = "0x29D070")]
	private void Start()
	{
	}

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0x29D190", Offset = "0x29D190", VA = "0x29D190")]
	private void Update()
	{
	}
}
[Token(Token = "0x20000B5")]
public class TutorialBank : MonoBehaviour
{
	[Token(Token = "0x4000547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Tutorial[] TutorialDatabase;

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0x2B4704", Offset = "0x2B4704", VA = "0x2B4704")]
	public TutorialBank()
	{
	}
}
[Token(Token = "0x20000B6")]
public class TutorialButton : MonoBehaviour
{
	[Token(Token = "0x20002F2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16823C", Offset = "0x16823C")]
	private sealed class <delayUnactive>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x400117E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal TutorialButton $this;

		[Token(Token = "0x400117F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x4001180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x4001181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x17000253")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60016F5")]
			[Address(RVA = "0x2B5160", Offset = "0x2B5160", VA = "0x2B5160", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000254")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60016F6")]
			[Address(RVA = "0x2B5168", Offset = "0x2B5168", VA = "0x2B5168", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016F3")]
		[Address(RVA = "0x2B4DB8", Offset = "0x2B4DB8", VA = "0x2B4DB8")]
		[DebuggerHidden]
		public <delayUnactive>c__Iterator0()
		{
		}

		[Token(Token = "0x60016F4")]
		[Address(RVA = "0x2B4F18", Offset = "0x2B4F18", VA = "0x2B4F18", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60016F7")]
		[Address(RVA = "0x2B5170", Offset = "0x2B5170", VA = "0x2B5170", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60016F8")]
		[Address(RVA = "0x2B5184", Offset = "0x2B5184", VA = "0x2B5184", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private NVRHand hand;

	[Token(Token = "0x4000549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Animator anim;

	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private GameObject hl;

	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool hovering;

	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private TutorialManager AT;

	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool pressing;

	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private BoxCollider col;

	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject next;

	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private GameObject exit;

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0x2B470C", Offset = "0x2B470C", VA = "0x2B470C")]
	public TutorialButton()
	{
	}

	[Token(Token = "0x60004A6")]
	[Address(RVA = "0x2B4714", Offset = "0x2B4714", VA = "0x2B4714")]
	private void Start()
	{
	}

	[Token(Token = "0x60004A7")]
	[Address(RVA = "0x2B49B8", Offset = "0x2B49B8", VA = "0x2B49B8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0x2B4D68", Offset = "0x2B4D68", VA = "0x2B4D68")]
	public void changeText()
	{
	}

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0x2B4CE8", Offset = "0x2B4CE8", VA = "0x2B4CE8")]
	[DebuggerHidden]
	private IEnumerator delayUnactive()
	{
		return null;
	}

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0x2B4DC0", Offset = "0x2B4DC0", VA = "0x2B4DC0")]
	private void OnTriggerStay(Collider col)
	{
	}
}
[Serializable]
[Token(Token = "0x20000B7")]
public class Tutorial
{
	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public string Name;

	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string[] Steps;

	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject[] Resources;

	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public string[] Triggers;

	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float IntroDuration;

	[Token(Token = "0x4000556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public string[] videos;

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0x2B46FC", Offset = "0x2B46FC", VA = "0x2B46FC")]
	public Tutorial()
	{
	}
}
[Token(Token = "0x20000B8")]
public class TutorialManager : MonoBehaviour
{
	[Token(Token = "0x20002F3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16832C", Offset = "0x16832C")]
	private sealed class <DesactivationDelayee>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4001182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal bool activer;

		[Token(Token = "0x4001183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal TutorialManager $this;

		[Token(Token = "0x4001184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal object $current;

		[Token(Token = "0x4001185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal bool $disposing;

		[Token(Token = "0x4001186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal int $PC;

		[Token(Token = "0x17000255")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60016FB")]
			[Address(RVA = "0x2B9FC0", Offset = "0x2B9FC0", VA = "0x2B9FC0", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000256")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60016FC")]
			[Address(RVA = "0x2B9FC8", Offset = "0x2B9FC8", VA = "0x2B9FC8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016F9")]
		[Address(RVA = "0x2B6C60", Offset = "0x2B6C60", VA = "0x2B6C60")]
		[DebuggerHidden]
		public <DesactivationDelayee>c__Iterator0()
		{
		}

		[Token(Token = "0x60016FA")]
		[Address(RVA = "0x2B997C", Offset = "0x2B997C", VA = "0x2B997C", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60016FD")]
		[Address(RVA = "0x2B9FD0", Offset = "0x2B9FD0", VA = "0x2B9FD0", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60016FE")]
		[Address(RVA = "0x2B9FE4", Offset = "0x2B9FE4", VA = "0x2B9FE4", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x20002F4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16838C", Offset = "0x16838C")]
	private sealed class <LateStart>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4001187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal TutorialManager $this;

		[Token(Token = "0x4001188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x4001189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x400118A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x17000257")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6001701")]
			[Address(RVA = "0x2BA35C", Offset = "0x2BA35C", VA = "0x2BA35C", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000258")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001702")]
			[Address(RVA = "0x2BA364", Offset = "0x2BA364", VA = "0x2BA364", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016FF")]
		[Address(RVA = "0x2B6F24", Offset = "0x2B6F24", VA = "0x2B6F24")]
		[DebuggerHidden]
		public <LateStart>c__Iterator1()
		{
		}

		[Token(Token = "0x6001700")]
		[Address(RVA = "0x2BA240", Offset = "0x2BA240", VA = "0x2BA240", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001703")]
		[Address(RVA = "0x2BA36C", Offset = "0x2BA36C", VA = "0x2BA36C", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001704")]
		[Address(RVA = "0x2BA380", Offset = "0x2BA380", VA = "0x2BA380", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x20002F5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1683EC", Offset = "0x1683EC")]
	private sealed class <GoToNextStep>c__Iterator2 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x400118B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal TutorialManager $this;

		[Token(Token = "0x400118C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x400118D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x400118E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x17000259")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6001707")]
			[Address(RVA = "0x2BA198", Offset = "0x2BA198", VA = "0x2BA198", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700025A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001708")]
			[Address(RVA = "0x2BA1A0", Offset = "0x2BA1A0", VA = "0x2BA1A0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001705")]
		[Address(RVA = "0x2B7D5C", Offset = "0x2B7D5C", VA = "0x2B7D5C")]
		[DebuggerHidden]
		public <GoToNextStep>c__Iterator2()
		{
		}

		[Token(Token = "0x6001706")]
		[Address(RVA = "0x2BA068", Offset = "0x2BA068", VA = "0x2BA068", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001709")]
		[Address(RVA = "0x2BA1A8", Offset = "0x2BA1A8", VA = "0x2BA1A8", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x600170A")]
		[Address(RVA = "0x2BA1BC", Offset = "0x2BA1BC", VA = "0x2BA1BC", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x20002F6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16844C", Offset = "0x16844C")]
	private sealed class <SkipTutorial_Coroutine>c__Iterator3 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x400118F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal TutorialManager $this;

		[Token(Token = "0x4001190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x4001191")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x4001192")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x1700025B")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x600170D")]
			[Address(RVA = "0x2BBB20", Offset = "0x2BBB20", VA = "0x2BBB20", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700025C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600170E")]
			[Address(RVA = "0x2BBB28", Offset = "0x2BBB28", VA = "0x2BBB28", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600170B")]
		[Address(RVA = "0x2B8F94", Offset = "0x2B8F94", VA = "0x2B8F94")]
		[DebuggerHidden]
		public <SkipTutorial_Coroutine>c__Iterator3()
		{
		}

		[Token(Token = "0x600170C")]
		[Address(RVA = "0x2BBA04", Offset = "0x2BBA04", VA = "0x2BBA04", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600170F")]
		[Address(RVA = "0x2BBB30", Offset = "0x2BBB30", VA = "0x2BBB30", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001710")]
		[Address(RVA = "0x2BBB44", Offset = "0x2BBB44", VA = "0x2BBB44", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x20002F7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1684AC", Offset = "0x1684AC")]
	private sealed class <delayUnactive>c__Iterator4 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4001193")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal bool isReset;

		[Token(Token = "0x4001194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal TutorialManager $this;

		[Token(Token = "0x4001195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal object $current;

		[Token(Token = "0x4001196")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal bool $disposing;

		[Token(Token = "0x4001197")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal int $PC;

		[Token(Token = "0x1700025D")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6001713")]
			[Address(RVA = "0x2B98D4", Offset = "0x2B98D4", VA = "0x2B98D4", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700025E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001714")]
			[Address(RVA = "0x2B98DC", Offset = "0x2B98DC", VA = "0x2B98DC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001711")]
		[Address(RVA = "0x2B8F9C", Offset = "0x2B8F9C", VA = "0x2B8F9C")]
		[DebuggerHidden]
		public <delayUnactive>c__Iterator4()
		{
		}

		[Token(Token = "0x6001712")]
		[Address(RVA = "0x2B97CC", Offset = "0x2B97CC", VA = "0x2B97CC", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001715")]
		[Address(RVA = "0x2B98E4", Offset = "0x2B98E4", VA = "0x2B98E4", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001716")]
		[Address(RVA = "0x2B98F8", Offset = "0x2B98F8", VA = "0x2B98F8", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x20002F8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16850C", Offset = "0x16850C")]
	private sealed class <SetTutorial>c__Iterator5 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4001198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal bool isReset;

		[Token(Token = "0x4001199")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal TutorialManager $this;

		[Token(Token = "0x400119A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal object $current;

		[Token(Token = "0x400119B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal bool $disposing;

		[Token(Token = "0x400119C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal int $PC;

		[Token(Token = "0x1700025F")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6001719")]
			[Address(RVA = "0x2BB95C", Offset = "0x2BB95C", VA = "0x2BB95C", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000260")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600171A")]
			[Address(RVA = "0x2BB964", Offset = "0x2BB964", VA = "0x2BB964", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001717")]
		[Address(RVA = "0x2B8FA4", Offset = "0x2B8FA4", VA = "0x2B8FA4")]
		[DebuggerHidden]
		public <SetTutorial>c__Iterator5()
		{
		}

		[Token(Token = "0x6001718")]
		[Address(RVA = "0x2BA404", Offset = "0x2BA404", VA = "0x2BA404", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600171B")]
		[Address(RVA = "0x2BB96C", Offset = "0x2BB96C", VA = "0x2BB96C", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x600171C")]
		[Address(RVA = "0x2BB980", Offset = "0x2BB980", VA = "0x2BB980", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[NonSerialized]
	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static TutorialManager Instance;

	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject halo;

	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float offset;

	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public string[] Tutorials;

	[Token(Token = "0x400055B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public int tutorialIndex;

	[Token(Token = "0x400055C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public bool OneShot;

	[Token(Token = "0x400055D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int stepIndex;

	[Token(Token = "0x400055E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private List<string> StepsToReach;

	[Token(Token = "0x400055F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<int> TimeToReach;

	[Token(Token = "0x4000560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private List<GameObject> trackedResources;

	[Token(Token = "0x4000561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject resetButton;

	[Token(Token = "0x4000562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private GameObject skipButton;

	[Token(Token = "0x4000563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject AnimCanvas;

	[Token(Token = "0x4000564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private GameObject projecteur;

	[Token(Token = "0x4000565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Animator Anim;

	[Token(Token = "0x4000566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private TutorialBank bank;

	[Token(Token = "0x4000567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string[] rawData;

	[Token(Token = "0x4000568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Tutorial[] ActualTutorials;

	[Token(Token = "0x4000569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool tutorialLoading;

	[Token(Token = "0x400056A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool alreadyDone;

	[Token(Token = "0x400056B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
	private bool ProjecteurSoundPlaying;

	[Token(Token = "0x400056C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Transform videos;

	[Token(Token = "0x400056D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Video videoPlaying;

	[Token(Token = "0x400056E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Video videoPlayed;

	[Token(Token = "0x400056F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Material videoMaterial;

	[Token(Token = "0x4000570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public UnityEvent OnStepChange;

	[Token(Token = "0x4000571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public UnityEvent OnTutorialChange;

	[Token(Token = "0x4000572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public UnityEvent OnResetTutorial;

	[Token(Token = "0x4000573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private GameObject prisonExt;

	[Token(Token = "0x4000574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private GameObject tablet;

	[Token(Token = "0x4000575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private GameObject tutoLand;

	[Token(Token = "0x4000576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private GameObject jail;

	[Token(Token = "0x4000577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private GameObject furniture;

	[Token(Token = "0x4000578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private List<Ressource> ressources;

	[Token(Token = "0x4000579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Dude[] dudes;

	[Token(Token = "0x400057A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Coroutine desactivationDelayee;

	[Token(Token = "0x170000A0")]
	public Tutorial currentTutorial
	{
		[Token(Token = "0x60004AD")]
		[Address(RVA = "0x2B5A88", Offset = "0x2B5A88", VA = "0x2B5A88")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0x2B59FC", Offset = "0x2B59FC", VA = "0x2B59FC")]
	public TutorialManager()
	{
	}

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0x2B5AC8", Offset = "0x2B5AC8", VA = "0x2B5AC8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004AF")]
	[Address(RVA = "0x2B65FC", Offset = "0x2B65FC", VA = "0x2B65FC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0x2B5C78", Offset = "0x2B5C78", VA = "0x2B5C78")]
	private void TrouverReferences()
	{
	}

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0x2B6324", Offset = "0x2B6324", VA = "0x2B6324")]
	private void ActivationTutoland(bool activer)
	{
	}

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0x2B6BC8", Offset = "0x2B6BC8", VA = "0x2B6BC8")]
	[DebuggerHidden]
	private IEnumerator DesactivationDelayee(bool activer)
	{
		return null;
	}

	[Token(Token = "0x60004B3")]
	[Address(RVA = "0x2B6C68", Offset = "0x2B6C68", VA = "0x2B6C68")]
	private void Start()
	{
	}

	[Token(Token = "0x60004B4")]
	[Address(RVA = "0x2B6EA4", Offset = "0x2B6EA4", VA = "0x2B6EA4")]
	[DebuggerHidden]
	private IEnumerator LateStart()
	{
		return null;
	}

	[Token(Token = "0x60004B5")]
	[Address(RVA = "0x2B6F2C", Offset = "0x2B6F2C", VA = "0x2B6F2C")]
	private void Update()
	{
	}

	[Token(Token = "0x60004B6")]
	[Address(RVA = "0x2B7114", Offset = "0x2B7114", VA = "0x2B7114")]
	public void ReceiveStep(string s, GameObject go)
	{
	}

	[Token(Token = "0x60004B7")]
	[Address(RVA = "0x2B7CDC", Offset = "0x2B7CDC", VA = "0x2B7CDC")]
	[DebuggerHidden]
	private IEnumerator GoToNextStep()
	{
		return null;
	}

	[Token(Token = "0x60004B8")]
	[Address(RVA = "0x2B7D64", Offset = "0x2B7D64", VA = "0x2B7D64")]
	public void LoadTutorial(int i, bool subTuto = false)
	{
	}

	[Token(Token = "0x60004B9")]
	[Address(RVA = "0x2B8CD0", Offset = "0x2B8CD0", VA = "0x2B8CD0")]
	public void loadNextTutorial()
	{
	}

	[Token(Token = "0x60004BA")]
	[Address(RVA = "0x2B8D2C", Offset = "0x2B8D2C", VA = "0x2B8D2C")]
	public void resetTutorial()
	{
	}

	[Token(Token = "0x60004BB")]
	[Address(RVA = "0x2B70E0", Offset = "0x2B70E0", VA = "0x2B70E0")]
	public void SkipTutorial()
	{
	}

	[Token(Token = "0x60004BC")]
	[Address(RVA = "0x2B8F14", Offset = "0x2B8F14", VA = "0x2B8F14")]
	[DebuggerHidden]
	private IEnumerator SkipTutorial_Coroutine()
	{
		return null;
	}

	[Token(Token = "0x60004BD")]
	[Address(RVA = "0x2B8E7C", Offset = "0x2B8E7C", VA = "0x2B8E7C")]
	[DebuggerHidden]
	private IEnumerator delayUnactive(bool isReset)
	{
		return null;
	}

	[Token(Token = "0x60004BE")]
	[Address(RVA = "0x2B4C50", Offset = "0x2B4C50", VA = "0x2B4C50")]
	[DebuggerHidden]
	public IEnumerator SetTutorial(bool isReset)
	{
		return null;
	}

	[Token(Token = "0x60004BF")]
	[Address(RVA = "0x2B8FAC", Offset = "0x2B8FAC", VA = "0x2B8FAC")]
	public bool CheckTutorialDone(string tutorial, bool addMissing = true)
	{
		return default(bool);
	}

	[Token(Token = "0x60004C0")]
	[Address(RVA = "0x2B8920", Offset = "0x2B8920", VA = "0x2B8920")]
	public bool CheckTutorialDone(string[] tutorials, bool addMissing = true)
	{
		return default(bool);
	}

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0x2B857C", Offset = "0x2B857C", VA = "0x2B857C")]
	private Video VideoAdd(string name)
	{
		return null;
	}

	[Token(Token = "0x60004C2")]
	[Address(RVA = "0x2B9280", Offset = "0x2B9280", VA = "0x2B9280")]
	private Video VideoFind(string name)
	{
		return null;
	}

	[Token(Token = "0x60004C3")]
	[Address(RVA = "0x2B6A44", Offset = "0x2B6A44", VA = "0x2B6A44")]
	private void VideosRemove()
	{
	}

	[Token(Token = "0x60004C4")]
	[Address(RVA = "0x2B936C", Offset = "0x2B936C", VA = "0x2B936C")]
	public void VideoPreload(string name)
	{
	}

	[Token(Token = "0x60004C5")]
	[Address(RVA = "0x2B898C", Offset = "0x2B898C", VA = "0x2B898C")]
	public void VideoPlay(string name)
	{
	}

	[Token(Token = "0x60004C6")]
	[Address(RVA = "0x2B9398", Offset = "0x2B9398", VA = "0x2B9398")]
	public void VideoPause(string name = "")
	{
	}

	[Token(Token = "0x60004C7")]
	[Address(RVA = "0x2B9488", Offset = "0x2B9488", VA = "0x2B9488")]
	public void VideoPauseQuest()
	{
	}

	[Token(Token = "0x60004C8")]
	[Address(RVA = "0x2B6710", Offset = "0x2B6710", VA = "0x2B6710")]
	private void VideoPauseAll()
	{
	}

	[Token(Token = "0x60004C9")]
	[Address(RVA = "0x2B953C", Offset = "0x2B953C", VA = "0x2B953C")]
	public void VideoUnpause(string name)
	{
	}

	[Token(Token = "0x60004CA")]
	[Address(RVA = "0x2B96B4", Offset = "0x2B96B4", VA = "0x2B96B4")]
	public void VideoUnpauseQuest()
	{
	}

	[Token(Token = "0x60004CB")]
	[Address(RVA = "0x2B9768", Offset = "0x2B9768", VA = "0x2B9768")]
	public void VideoLoop(string name)
	{
	}
}
[Token(Token = "0x20000B9")]
public class ArcadeTimer : MonoBehaviour
{
	[Token(Token = "0x400057B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float tempsRestant;

	[Token(Token = "0x400057C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int tempsMinutes;

	[Token(Token = "0x400057D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int tempsSecondes;

	[Token(Token = "0x400057E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TextMeshProUGUI timer;

	[Token(Token = "0x400057F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float totalTime;

	[Token(Token = "0x60004CC")]
	[Address(RVA = "0x2709DC", Offset = "0x2709DC", VA = "0x2709DC")]
	public ArcadeTimer()
	{
	}

	[Token(Token = "0x60004CD")]
	[Address(RVA = "0x2709E4", Offset = "0x2709E4", VA = "0x2709E4")]
	private void Start()
	{
	}

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0x270AB0", Offset = "0x270AB0", VA = "0x270AB0")]
	private void Update()
	{
	}
}
[Token(Token = "0x20000BA")]
public class AudioPlayer : MonoBehaviour
{
	[Token(Token = "0x20002F9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16857C", Offset = "0x16857C")]
	private sealed class <playerAudioRandom>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x400119D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal AudioPlayer $this;

		[Token(Token = "0x400119E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x400119F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x40011A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x17000261")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x600171F")]
			[Address(RVA = "0x2724F0", Offset = "0x2724F0", VA = "0x2724F0", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000262")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001720")]
			[Address(RVA = "0x2724F8", Offset = "0x2724F8", VA = "0x2724F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600171D")]
		[Address(RVA = "0x272094", Offset = "0x272094", VA = "0x272094")]
		[DebuggerHidden]
		public <playerAudioRandom>c__Iterator0()
		{
		}

		[Token(Token = "0x600171E")]
		[Address(RVA = "0x27209C", Offset = "0x27209C", VA = "0x27209C", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001721")]
		[Address(RVA = "0x272500", Offset = "0x272500", VA = "0x272500", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001722")]
		[Address(RVA = "0x272514", Offset = "0x272514", VA = "0x272514", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4000580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool ambianceLoop;

	[Token(Token = "0x4000581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
	private bool ambiancePlaying;

	[Token(Token = "0x4000582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
	public bool nighttimeAudio;

	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float delaiEntreAudioRandoms;

	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float pitchMin;

	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float pitchMax;

	[Token(Token = "0x4000586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float volumeMin;

	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float volumeMax;

	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private AudioSource audiosource;

	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip[] leCLip;

	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Coroutine playerCoroutine;

	[Token(Token = "0x60004CF")]
	[Address(RVA = "0x271D48", Offset = "0x271D48", VA = "0x271D48")]
	public AudioPlayer()
	{
	}

	[Token(Token = "0x60004D0")]
	[Address(RVA = "0x271D50", Offset = "0x271D50", VA = "0x271D50")]
	private void Start()
	{
	}

	[Token(Token = "0x60004D1")]
	[Address(RVA = "0x271E60", Offset = "0x271E60", VA = "0x271E60")]
	private void Update()
	{
	}

	[Token(Token = "0x60004D2")]
	[Address(RVA = "0x271DE0", Offset = "0x271DE0", VA = "0x271DE0")]
	[DebuggerHidden]
	private IEnumerator playerAudioRandom()
	{
		return null;
	}
}
[Token(Token = "0x20000BB")]
public class AutoDestroy : SpawnableObject
{
	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float timeBeforeDestroy;

	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public string Event;

	[Token(Token = "0x400058D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool scaleDestroy;

	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool goingUp;

	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 baseScale;

	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 upScale;

	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float timer;

	[Token(Token = "0x60004D3")]
	[Address(RVA = "0x272598", Offset = "0x272598", VA = "0x272598")]
	public AutoDestroy()
	{
	}

	[Token(Token = "0x60004D4")]
	[Address(RVA = "0x2725A8", Offset = "0x2725A8", VA = "0x2725A8")]
	private void Start()
	{
	}

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0x2726D0", Offset = "0x2726D0", VA = "0x2726D0", Slot = "4")]
	public override void Reset()
	{
	}

	[Token(Token = "0x60004D6")]
	[Address(RVA = "0x27272C", Offset = "0x27272C", VA = "0x27272C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004D7")]
	[Address(RVA = "0x27282C", Offset = "0x27282C", VA = "0x27282C")]
	private void Update()
	{
	}

	[Token(Token = "0x60004D8")]
	[Address(RVA = "0x272984", Offset = "0x272984", VA = "0x272984")]
	private void ScalingToDie()
	{
	}
}
[Token(Token = "0x20000BC")]
public class BasicAnimation : MonoBehaviour
{
	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool basicRandomRotation;

	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float rotationForce;

	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float rotationSpeedBase1;

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Quaternion initialRotation;

	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float monPetitPerlin1;

	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float monPetitPerlin2;

	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float monPetitPerlin3;

	[Token(Token = "0x60004D9")]
	[Address(RVA = "0x272C8C", Offset = "0x272C8C", VA = "0x272C8C")]
	public BasicAnimation()
	{
	}

	[Token(Token = "0x60004DA")]
	[Address(RVA = "0x272C94", Offset = "0x272C94", VA = "0x272C94")]
	private void Start()
	{
	}

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0x272CE0", Offset = "0x272CE0", VA = "0x272CE0")]
	private void Update()
	{
	}
}
[Token(Token = "0x20000BD")]
public class BerthaAnimator : CharacterAnimator
{
	[Token(Token = "0x60004DC")]
	[Address(RVA = "0x273080", Offset = "0x273080", VA = "0x273080")]
	public BerthaAnimator()
	{
	}
}
[Token(Token = "0x20000BE")]
public class BlinkScript : MonoBehaviour
{
	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private bool IsBlink;

	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
	private bool Blinking;

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0x274CF0", Offset = "0x274CF0", VA = "0x274CF0")]
	public BlinkScript()
	{
	}

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0x274CF8", Offset = "0x274CF8", VA = "0x274CF8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0x274E7C", Offset = "0x274E7C", VA = "0x274E7C")]
	private void OnCollisionStay(Collision col)
	{
	}
}
[Serializable]
[Token(Token = "0x20000BF")]
public class ColliderParam
{
	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public Vector3 center;

	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector3 size;

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0x284E24", Offset = "0x284E24", VA = "0x284E24")]
	public ColliderParam()
	{
	}
}
[Token(Token = "0x20000C0")]
public class BoxScript : MonoBehaviour
{
	[Token(Token = "0x20002FA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16862C", Offset = "0x16862C")]
	private sealed class <Unactive>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40011A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal BoxScript $this;

		[Token(Token = "0x40011A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x40011A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x40011A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x17000263")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6001725")]
			[Address(RVA = "0x2797F4", Offset = "0x2797F4", VA = "0x2797F4", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000264")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001726")]
			[Address(RVA = "0x2797FC", Offset = "0x2797FC", VA = "0x2797FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001723")]
		[Address(RVA = "0x27950C", Offset = "0x27950C", VA = "0x27950C")]
		[DebuggerHidden]
		public <Unactive>c__Iterator0()
		{
		}

		[Token(Token = "0x6001724")]
		[Address(RVA = "0x2796F8", Offset = "0x2796F8", VA = "0x2796F8", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001727")]
		[Address(RVA = "0x279804", Offset = "0x279804", VA = "0x279804", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001728")]
		[Address(RVA = "0x279818", Offset = "0x279818", VA = "0x279818", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int MaxCapacity;

	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3 centerOverlap;

	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 sizeOverlap;

	[Token(Token = "0x40005A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public int capacity;

	[Token(Token = "0x40005A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[HideInInspector]
	public string TypeToStock;

	[Token(Token = "0x40005A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public List<int> objectsCapacity;

	[Token(Token = "0x40005A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[HideInInspector]
	public int TotalCapacity;

	[Token(Token = "0x40005A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool active;

	[Token(Token = "0x40005A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float spawnTimer;

	[Token(Token = "0x40005A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Image[] imgs;

	[Token(Token = "0x40005A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private TextMeshProUGUI[] txts;

	[Token(Token = "0x40005A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NVRHand hand;

	[Token(Token = "0x40005A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private GameObject HighlightTop;

	[Token(Token = "0x40005AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform trigger;

	[Token(Token = "0x40005AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private NVRInteractableItem obj;

	[Token(Token = "0x40005AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private BoxMatChange randomTextureSprite;

	[Token(Token = "0x60004E1")]
	[Address(RVA = "0x277C78", Offset = "0x277C78", VA = "0x277C78")]
	public BoxScript()
	{
	}

	[Token(Token = "0x60004E2")]
	[Address(RVA = "0x277D28", Offset = "0x277D28", VA = "0x277D28")]
	private void Start()
	{
	}

	[Token(Token = "0x60004E3")]
	[Address(RVA = "0x278280", Offset = "0x278280", VA = "0x278280")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60004E4")]
	[Address(RVA = "0x278FC4", Offset = "0x278FC4", VA = "0x278FC4")]
	public void refreshNumber()
	{
	}

	[Token(Token = "0x60004E5")]
	[Address(RVA = "0x277F38", Offset = "0x277F38", VA = "0x277F38")]
	public void setBox(string NewType)
	{
	}

	[Token(Token = "0x60004E6")]
	[Address(RVA = "0x27916C", Offset = "0x27916C", VA = "0x27916C")]
	public void RemoveOneObject()
	{
	}

	[Token(Token = "0x60004E7")]
	[Address(RVA = "0x2789C8", Offset = "0x2789C8", VA = "0x2789C8")]
	public void spawnObject(bool AttachToHand)
	{
	}

	[Token(Token = "0x60004E8")]
	[Address(RVA = "0x27948C", Offset = "0x27948C", VA = "0x27948C")]
	[DebuggerHidden]
	private IEnumerator Unactive()
	{
		return null;
	}

	[Token(Token = "0x60004E9")]
	[Address(RVA = "0x2786A0", Offset = "0x2786A0", VA = "0x2786A0")]
	public void ObjectManagement(Collider col)
	{
	}

	[Token(Token = "0x60004EA")]
	[Address(RVA = "0x2792CC", Offset = "0x2792CC", VA = "0x2792CC")]
	public void ResetBoxType()
	{
	}

	[Token(Token = "0x60004EB")]
	[Address(RVA = "0x279514", Offset = "0x279514", VA = "0x279514")]
	public void SetNewBoxType(string type, int capacityWanted)
	{
	}
}
[Token(Token = "0x20000C1")]
public enum Triggers
{
	[Token(Token = "0x40005AE")]
	HandEnter,
	[Token(Token = "0x40005AF")]
	HandExit,
	[Token(Token = "0x40005B0")]
	ParticulesClick,
	[Token(Token = "0x40005B1")]
	MakeNull
}
[Token(Token = "0x20000C2")]
public class ButtonAnimator : MonoBehaviour
{
	[Token(Token = "0x20000C3")]
	public enum ButtonAnimType
	{
		[Token(Token = "0x40005BB")]
		ColorAndMotion,
		[Token(Token = "0x40005BC")]
		ColorOnly,
		[Token(Token = "0x40005BD")]
		MotionOnly,
		[Token(Token = "0x40005BE")]
		Nothing
	}

	[Token(Token = "0x20002FB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1686AC", Offset = "0x1686AC")]
	private sealed class <FadeCoroutine>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40011A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal Color <startColor>__0;

		[Token(Token = "0x40011A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal float <f>__0;

		[Token(Token = "0x40011A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal Color c;

		[Token(Token = "0x40011A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		internal ButtonAnimator $this;

		[Token(Token = "0x40011A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal object $current;

		[Token(Token = "0x40011AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		internal bool $disposing;

		[Token(Token = "0x40011AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal int $PC;

		[Token(Token = "0x17000265")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x600172B")]
			[Address(RVA = "0x27A224", Offset = "0x27A224", VA = "0x27A224", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000266")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600172C")]
			[Address(RVA = "0x27A22C", Offset = "0x27A22C", VA = "0x27A22C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001729")]
		[Address(RVA = "0x279F78", Offset = "0x279F78", VA = "0x279F78")]
		[DebuggerHidden]
		public <FadeCoroutine>c__Iterator0()
		{
		}

		[Token(Token = "0x600172A")]
		[Address(RVA = "0x27A084", Offset = "0x27A084", VA = "0x27A084", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600172D")]
		[Address(RVA = "0x27A234", Offset = "0x27A234", VA = "0x27A234", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x600172E")]
		[Address(RVA = "0x27A248", Offset = "0x27A248", VA = "0x27A248", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x40005B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public ButtonAnimType buttonAnimType;

	[Token(Token = "0x40005B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[HideInInspector]
	public Animator anim;

	[Token(Token = "0x40005B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private BrownianMotion brown;

	[Token(Token = "0x40005B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ButtonScript bttn;

	[Token(Token = "0x40005B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool isColor;

	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Image colorImage;

	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Coroutine currentFade;

	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool isMotion;

	[Token(Token = "0x60004EC")]
	[Address(RVA = "0x27989C", Offset = "0x27989C", VA = "0x27989C")]
	public ButtonAnimator()
	{
	}

	[Token(Token = "0x60004ED")]
	[Address(RVA = "0x2798AC", Offset = "0x2798AC", VA = "0x2798AC")]
	private void Start()
	{
	}

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0x2798B0", Offset = "0x2798B0", VA = "0x2798B0")]
	private void Initialize()
	{
	}

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0x279AE8", Offset = "0x279AE8", VA = "0x279AE8")]
	public void SetAnimTrigger(Triggers action)
	{
	}

	[Token(Token = "0x60004F0")]
	[Address(RVA = "0x279E60", Offset = "0x279E60", VA = "0x279E60")]
	public void FadeToColor(Color c)
	{
	}

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0x279ECC", Offset = "0x279ECC", VA = "0x279ECC")]
	[DebuggerHidden]
	private IEnumerator FadeCoroutine(Color c)
	{
		return null;
	}

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0x279F80", Offset = "0x279F80", VA = "0x279F80")]
	public void SkipToBaseColor()
	{
	}
}
[Token(Token = "0x20000C4")]
public class ButtonLeverEngagedResult : MonoBehaviour
{
	[Token(Token = "0x40005BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool buttonObj;

	[Token(Token = "0x40005C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private NVRLever lever;

	[Token(Token = "0x40005C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private NVRButton button;

	[Token(Token = "0x40005C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool singleCall;

	[Token(Token = "0x40005C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool calledOnce;

	[Token(Token = "0x40005C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public string queFaire;

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0x27A2CC", Offset = "0x27A2CC", VA = "0x27A2CC")]
	public ButtonLeverEngagedResult()
	{
	}

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0x27A2D4", Offset = "0x27A2D4", VA = "0x27A2D4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0x27A3C0", Offset = "0x27A3C0", VA = "0x27A3C0")]
	private void Start()
	{
	}

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0x27A3C4", Offset = "0x27A3C4", VA = "0x27A3C4")]
	private void Update()
	{
	}

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0x27A4B0", Offset = "0x27A4B0", VA = "0x27A4B0")]
	private void Result()
	{
	}
}
namespace Trebuchet.Contrepoids
{
	[Token(Token = "0x20000C5")]
	public class CalibratorPBvr : Calibrator
	{
		[Token(Token = "0x40005C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private Transform childToAlignTransform;

		[Token(Token = "0x40005C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Vector3 offset;

		[Token(Token = "0x170000A1")]
		protected override Transform ChildToAlign
		{
			[Token(Token = "0x60004FA")]
			[Address(RVA = "0x2A761C", Offset = "0x2A761C", VA = "0x2A761C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004F8")]
		[Address(RVA = "0x2A75DC", Offset = "0x2A75DC", VA = "0x2A75DC")]
		public CalibratorPBvr()
		{
		}

		[Token(Token = "0x60004F9")]
		[Address(RVA = "0x2A75E4", Offset = "0x2A75E4", VA = "0x2A75E4")]
		private new void Start()
		{
		}
	}
}
[Token(Token = "0x20000C6")]
public class CalibratorUI : MonoBehaviour
{
	[Token(Token = "0x40005C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string SceneToLoadAfterCalibration;

	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private NVRPlayer player;

	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Calibrator calibrator;

	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Image timer;

	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Image validation;

	[Token(Token = "0x40005CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isCalibrated;

	[Token(Token = "0x40005CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Option option;

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0x27D63C", Offset = "0x27D63C", VA = "0x27D63C")]
	public CalibratorUI()
	{
	}

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0x27D644", Offset = "0x27D644", VA = "0x27D644")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0x27D6E8", Offset = "0x27D6E8", VA = "0x27D6E8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0x27D78C", Offset = "0x27D78C", VA = "0x27D78C")]
	private void Start()
	{
	}

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0x27DDC4", Offset = "0x27DDC4", VA = "0x27DDC4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000500")]
	[Address(RVA = "0x27E30C", Offset = "0x27E30C", VA = "0x27E30C")]
	private void OnSceneUnloaded(Scene scene)
	{
	}

	[Token(Token = "0x6000501")]
	[Address(RVA = "0x27DE08", Offset = "0x27DE08", VA = "0x27DE08")]
	private void FollowTheHead(float lerp)
	{
	}

	[Token(Token = "0x6000502")]
	[Address(RVA = "0x27E0CC", Offset = "0x27E0CC", VA = "0x27E0CC")]
	private void Calibration()
	{
	}

	[Token(Token = "0x6000503")]
	[Address(RVA = "0x27E4B8", Offset = "0x27E4B8", VA = "0x27E4B8")]
	private void saveCalibration()
	{
	}

	[Token(Token = "0x6000504")]
	[Address(RVA = "0x27E434", Offset = "0x27E434", VA = "0x27E434")]
	private void EndCalibration()
	{
	}
}
[Token(Token = "0x20000C7")]
public class StandingChoiceUI : MonoBehaviour
{
	[Token(Token = "0x40005CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public TextMeshProUGUI AccessibilityLabel;

	[Token(Token = "0x40005CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private NVRPlayer player;

	[Token(Token = "0x40005D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Option option;

	[Token(Token = "0x6000505")]
	[Address(RVA = "0x29E500", Offset = "0x29E500", VA = "0x29E500")]
	public StandingChoiceUI()
	{
	}

	[Token(Token = "0x6000506")]
	[Address(RVA = "0x29E508", Offset = "0x29E508", VA = "0x29E508")]
	private void Start()
	{
	}

	[Token(Token = "0x6000507")]
	[Address(RVA = "0x29E6DC", Offset = "0x29E6DC", VA = "0x29E6DC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000508")]
	[Address(RVA = "0x29E70C", Offset = "0x29E70C", VA = "0x29E70C")]
	private void FollowTheHead(float lerp)
	{
	}

	[Token(Token = "0x6000509")]
	[Address(RVA = "0x29E9D0", Offset = "0x29E9D0", VA = "0x29E9D0")]
	public void ChangeStanding(int icr)
	{
	}

	[Token(Token = "0x600050A")]
	[Address(RVA = "0x29EB3C", Offset = "0x29EB3C", VA = "0x29EB3C")]
	public void Apply()
	{
	}
}
[Token(Token = "0x20000C8")]
public class CancelButtonTrack : MonoBehaviour
{
	[Token(Token = "0x40005D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private TextMeshProUGUI doneText;

	[Token(Token = "0x600050B")]
	[Address(RVA = "0x27EF5C", Offset = "0x27EF5C", VA = "0x27EF5C")]
	public CancelButtonTrack()
	{
	}

	[Token(Token = "0x600050C")]
	[Address(RVA = "0x27EF64", Offset = "0x27EF64", VA = "0x27EF64")]
	private void Start()
	{
	}

	[Token(Token = "0x600050D")]
	[Address(RVA = "0x27EFCC", Offset = "0x27EFCC", VA = "0x27EFCC")]
	private void Update()
	{
	}
}
[Token(Token = "0x20000C9")]
public class CanvasDisabler : MonoBehaviour
{
	[Token(Token = "0x600050E")]
	[Address(RVA = "0x27F198", Offset = "0x27F198", VA = "0x27F198")]
	public CanvasDisabler()
	{
	}

	[Token(Token = "0x600050F")]
	[Address(RVA = "0x27F1A0", Offset = "0x27F1A0", VA = "0x27F1A0")]
	public void disableMe()
	{
	}
}
[Token(Token = "0x20000CA")]
public class Cheater : MonoBehaviour
{
	[Token(Token = "0x20002FC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16873C", Offset = "0x16873C")]
	private sealed class <TesterBoutons>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40011AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal List<string> <liste>__0;

		[Token(Token = "0x40011AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal NVRPlayer <player>__0;

		[Token(Token = "0x40011AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal int <Iterations>__0;

		[Token(Token = "0x40011AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal string <s>__0;

		[Token(Token = "0x40011B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal List<string>.Enumerator $locvar0;

		[Token(Token = "0x40011B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal Cheater $this;

		[Token(Token = "0x40011B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		internal object $current;

		[Token(Token = "0x40011B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal bool $disposing;

		[Token(Token = "0x40011B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		internal int $PC;

		[Token(Token = "0x17000267")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6001731")]
			[Address(RVA = "0x283CC0", Offset = "0x283CC0", VA = "0x283CC0", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000268")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001732")]
			[Address(RVA = "0x283CC8", Offset = "0x283CC8", VA = "0x283CC8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600172F")]
		[Address(RVA = "0x283024", Offset = "0x283024", VA = "0x283024")]
		[DebuggerHidden]
		public <TesterBoutons>c__Iterator0()
		{
		}

		[Token(Token = "0x6001730")]
		[Address(RVA = "0x28302C", Offset = "0x28302C", VA = "0x28302C", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001733")]
		[Address(RVA = "0x283CD0", Offset = "0x283CD0", VA = "0x283CD0", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001734")]
		[Address(RVA = "0x283CE4", Offset = "0x283CE4", VA = "0x283CE4", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x40005D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private int IterationsMax;

	[Token(Token = "0x6000510")]
	[Address(RVA = "0x282964", Offset = "0x282964", VA = "0x282964")]
	public Cheater()
	{
	}

	[Token(Token = "0x6000511")]
	[Address(RVA = "0x282974", Offset = "0x282974", VA = "0x282974")]
	private void Start()
	{
	}

	[Token(Token = "0x6000512")]
	[Address(RVA = "0x282A0C", Offset = "0x282A0C", VA = "0x282A0C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000513")]
	[Address(RVA = "0x282FA4", Offset = "0x282FA4", VA = "0x282FA4")]
	[DebuggerHidden]
	private IEnumerator TesterBoutons()
	{
		return null;
	}
}
[Token(Token = "0x20000CB")]
public class ClockScript : NVRInteractable
{
	[Token(Token = "0x40005D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Transform grandeAig;

	[Token(Token = "0x40005D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform petiteAig;

	[Token(Token = "0x40005D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private GameTextLink txtLink;

	[Token(Token = "0x40005D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UnityEvent OnHovering;

	[Token(Token = "0x40005D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool showHint;

	[Token(Token = "0x40005D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private NVRHand lastHintedHand;

	[Token(Token = "0x40005D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private HintAnim anim;

	[Token(Token = "0x40005DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string textToDisplay;

	[Token(Token = "0x6000514")]
	[Address(RVA = "0x283D68", Offset = "0x283D68", VA = "0x283D68")]
	public ClockScript()
	{
	}

	[Token(Token = "0x6000515")]
	[Address(RVA = "0x283D70", Offset = "0x283D70", VA = "0x283D70", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000516")]
	[Address(RVA = "0x283FC8", Offset = "0x283FC8", VA = "0x283FC8")]
	private void RefreshClockHint()
	{
	}

	[Token(Token = "0x6000517")]
	[Address(RVA = "0x28424C", Offset = "0x28424C", VA = "0x28424C", Slot = "14")]
	public override void HoveringUpdate(NVRHand hand, float forTime)
	{
	}

	[Token(Token = "0x6000518")]
	[Address(RVA = "0x284280", Offset = "0x284280", VA = "0x284280")]
	private void ManageHintVisibility()
	{
	}

	[Token(Token = "0x6000519")]
	[Address(RVA = "0x283FCC", Offset = "0x283FCC", VA = "0x283FCC")]
	private void RefreshHint()
	{
	}

	[Token(Token = "0x600051A")]
	[Address(RVA = "0x2844B0", Offset = "0x2844B0", VA = "0x2844B0", Slot = "12")]
	public override void BeginInteraction(NVRHand hand)
	{
	}

	[Token(Token = "0x600051B")]
	[Address(RVA = "0x28468C", Offset = "0x28468C", VA = "0x28468C", Slot = "11")]
	protected override void Update()
	{
	}
}
[Token(Token = "0x20000CC")]
public class ContinueInPrisonScore : MonoBehaviour
{
	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private string NextSceneName;

	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameTextLink EndGame;

	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public GameTextLink Next;

	[Token(Token = "0x600051C")]
	[Address(RVA = "0x284E3C", Offset = "0x284E3C", VA = "0x284E3C")]
	public ContinueInPrisonScore()
	{
	}

	[Token(Token = "0x600051D")]
	[Address(RVA = "0x284E44", Offset = "0x284E44", VA = "0x284E44")]
	public void Start()
	{
	}

	[Token(Token = "0x600051E")]
	[Address(RVA = "0x284FAC", Offset = "0x284FAC", VA = "0x284FAC")]
	public void NextPrison()
	{
	}
}
[Token(Token = "0x20000CD")]
public class ContinueInSandboxMode : MonoBehaviour
{
	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private int SaveId;

	[Token(Token = "0x600051F")]
	[Address(RVA = "0x285030", Offset = "0x285030", VA = "0x285030")]
	public ContinueInSandboxMode()
	{
	}

	[Token(Token = "0x6000520")]
	[Address(RVA = "0x285038", Offset = "0x285038", VA = "0x285038")]
	public void Start()
	{
	}

	[Token(Token = "0x6000521")]
	[Address(RVA = "0x285150", Offset = "0x285150", VA = "0x285150")]
	public void NextPrison()
	{
	}
}
[Token(Token = "0x20000CE")]
public class BoxMatChange : SpawnableObject
{
	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Texture[] mats;

	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Renderer _renderer;

	[Token(Token = "0x6000522")]
	[Address(RVA = "0x277A2C", Offset = "0x277A2C", VA = "0x277A2C")]
	public BoxMatChange()
	{
	}

	[Token(Token = "0x6000523")]
	[Address(RVA = "0x277A34", Offset = "0x277A34", VA = "0x277A34")]
	public void setSprite()
	{
	}

	[Token(Token = "0x6000524")]
	[Address(RVA = "0x277C70", Offset = "0x277C70", VA = "0x277C70", Slot = "4")]
	public override void Reset()
	{
	}

	[Token(Token = "0x6000525")]
	[Address(RVA = "0x277C74", Offset = "0x277C74", VA = "0x277C74", Slot = "5")]
	public override void ShutDown()
	{
	}
}
[Token(Token = "0x20000CF")]
public class HighlightManager : MonoBehaviour
{
	[Token(Token = "0x20002FD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x168814", Offset = "0x168814")]
	private sealed class <Allumation>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40011B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal HighlightManager $this;

		[Token(Token = "0x40011B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x40011B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x40011B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x17000269")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6001737")]
			[Address(RVA = "0x224D4C", Offset = "0x224D4C", VA = "0x224D4C", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001738")]
			[Address(RVA = "0x224D54", Offset = "0x224D54", VA = "0x224D54", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001735")]
		[Address(RVA = "0x224CE8", Offset = "0x224CE8", VA = "0x224CE8")]
		[DebuggerHidden]
		public <Allumation>c__Iterator0()
		{
		}

		[Token(Token = "0x6001736")]
		[Address(RVA = "0x224CF0", Offset = "0x224CF0", VA = "0x224CF0", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001739")]
		[Address(RVA = "0x224D5C", Offset = "0x224D5C", VA = "0x224D5C", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x600173A")]
		[Address(RVA = "0x224D70", Offset = "0x224D70", VA = "0x224D70", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private GameObject highlight;

	[Token(Token = "0x40005E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Transform[] Graph;

	[Token(Token = "0x40005E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	internal bool showing;

	[Token(Token = "0x40005E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	private bool isShow;

	[Token(Token = "0x40005E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color Couleur;

	[Token(Token = "0x40005E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Material> materiaux;

	[Token(Token = "0x40005E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Coroutine allumation;

	[Token(Token = "0x6000526")]
	[Address(RVA = "0x2241B4", Offset = "0x2241B4", VA = "0x2241B4")]
	public HighlightManager()
	{
	}

	[Token(Token = "0x6000527")]
	[Address(RVA = "0x224290", Offset = "0x224290", VA = "0x224290")]
	private void Start()
	{
	}

	[Token(Token = "0x6000528")]
	[Address(RVA = "0x22445C", Offset = "0x22445C", VA = "0x22445C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000529")]
	[Address(RVA = "0x224294", Offset = "0x224294", VA = "0x224294")]
	public void FindHighlight()
	{
	}

	[Token(Token = "0x600052A")]
	[Address(RVA = "0x224A90", Offset = "0x224A90", VA = "0x224A90")]
	public void show()
	{
	}

	[Token(Token = "0x600052B")]
	[Address(RVA = "0x224860", Offset = "0x224860", VA = "0x224860")]
	private void Trouver()
	{
	}

	[Token(Token = "0x600052C")]
	[Address(RVA = "0x224A9C", Offset = "0x224A9C", VA = "0x224A9C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600052D")]
	[Address(RVA = "0x224578", Offset = "0x224578", VA = "0x224578")]
	private void Activer()
	{
	}

	[Token(Token = "0x600052E")]
	[Address(RVA = "0x2246F0", Offset = "0x2246F0", VA = "0x2246F0")]
	private void Desactiver()
	{
	}

	[Token(Token = "0x600052F")]
	[Address(RVA = "0x224C00", Offset = "0x224C00", VA = "0x224C00")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x16879C", Offset = "0x16879C")]
	private void Allumer()
	{
	}

	[Token(Token = "0x6000530")]
	[Address(RVA = "0x224CB8", Offset = "0x224CB8", VA = "0x224CB8")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x1687D0", Offset = "0x1687D0")]
	private void Eteindre()
	{
	}

	[Token(Token = "0x6000531")]
	[Address(RVA = "0x224C38", Offset = "0x224C38", VA = "0x224C38")]
	[DebuggerHidden]
	private IEnumerator Allumation()
	{
		return null;
	}
}
[Token(Token = "0x20000D0")]
public class HighlightMeuble : MonoBehaviour
{
	[Token(Token = "0x40005E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private GameObject highlight;

	[Token(Token = "0x40005E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private GameObject highlightBox;

	[Token(Token = "0x40005EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private GameObject highlightMeuble;

	[Token(Token = "0x40005EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject greenHighlight;

	[Token(Token = "0x40005EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private GameObject sprite;

	[Token(Token = "0x40005ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject Boite;

	[Token(Token = "0x40005EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private GameObject Colliders;

	[Token(Token = "0x40005EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform Graph;

	[Token(Token = "0x40005F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 offset;

	[Token(Token = "0x40005F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private NVRHand hand;

	[Token(Token = "0x40005F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	internal NVRInteractableItem obj;

	[Token(Token = "0x40005F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool showing;

	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool isShow;

	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Color CouleurMeuble;

	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public Color CouleurBoite;

	[Token(Token = "0x40005F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private List<Material> materiaux;

	[Token(Token = "0x40005F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<Material> materiauxMeuble;

	[Token(Token = "0x40005F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private List<Material> materiauxBoite;

	[Token(Token = "0x6000532")]
	[Address(RVA = "0x224DF4", Offset = "0x224DF4", VA = "0x224DF4")]
	public HighlightMeuble()
	{
	}

	[Token(Token = "0x6000533")]
	[Address(RVA = "0x224F08", Offset = "0x224F08", VA = "0x224F08")]
	private void Update()
	{
	}

	[Token(Token = "0x6000534")]
	[Address(RVA = "0x2254D0", Offset = "0x2254D0", VA = "0x2254D0")]
	public void FindHighlight()
	{
	}

	[Token(Token = "0x6000535")]
	[Address(RVA = "0x225EB8", Offset = "0x225EB8", VA = "0x225EB8")]
	public void HideGreenHl()
	{
	}

	[Token(Token = "0x6000536")]
	[Address(RVA = "0x225EE4", Offset = "0x225EE4", VA = "0x225EE4")]
	public void ShowGreenHl()
	{
	}

	[Token(Token = "0x6000537")]
	[Address(RVA = "0x225F10", Offset = "0x225F10", VA = "0x225F10")]
	public void ShowSprite()
	{
	}

	[Token(Token = "0x6000538")]
	[Address(RVA = "0x226120", Offset = "0x226120", VA = "0x226120")]
	public void HideSprite()
	{
	}

	[Token(Token = "0x6000539")]
	[Address(RVA = "0x22639C", Offset = "0x22639C", VA = "0x22639C")]
	public void MoveGHL(Vector3 pos, float y, float z = 0f)
	{
	}

	[Token(Token = "0x600053A")]
	[Address(RVA = "0x2266F8", Offset = "0x2266F8", VA = "0x2266F8")]
	public void show()
	{
	}

	[Token(Token = "0x600053B")]
	[Address(RVA = "0x225A18", Offset = "0x225A18", VA = "0x225A18")]
	private void Trouver()
	{
	}

	[Token(Token = "0x600053C")]
	[Address(RVA = "0x225184", Offset = "0x225184", VA = "0x225184")]
	private void Activer()
	{
	}

	[Token(Token = "0x600053D")]
	[Address(RVA = "0x225360", Offset = "0x225360", VA = "0x225360")]
	private void Desactiver()
	{
	}
}
[Token(Token = "0x20000D1")]
public class HighlightRecipe : MonoBehaviour
{
	[Token(Token = "0x40005FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject highlight;

	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool showing;

	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	[HideInInspector]
	public bool isShow;

	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Color Couleur;

	[Token(Token = "0x40005FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private List<Material> materiaux;

	[Token(Token = "0x600053E")]
	[Address(RVA = "0x226778", Offset = "0x226778", VA = "0x226778")]
	public HighlightRecipe()
	{
	}

	[Token(Token = "0x600053F")]
	[Address(RVA = "0x22685C", Offset = "0x22685C", VA = "0x22685C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000540")]
	[Address(RVA = "0x226C40", Offset = "0x226C40", VA = "0x226C40")]
	public void show()
	{
	}

	[Token(Token = "0x6000541")]
	[Address(RVA = "0x226C4C", Offset = "0x226C4C", VA = "0x226C4C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000542")]
	[Address(RVA = "0x226E7C", Offset = "0x226E7C", VA = "0x226E7C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000543")]
	[Address(RVA = "0x226958", Offset = "0x226958", VA = "0x226958")]
	private void Activer()
	{
	}

	[Token(Token = "0x6000544")]
	[Address(RVA = "0x226AD0", Offset = "0x226AD0", VA = "0x226AD0")]
	private void Desactiver()
	{
	}
}
[Token(Token = "0x20000D2")]
public class CollisionInfo
{
	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public string TargetTag;

	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string colliderName;

	[Token(Token = "0x4000601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool NeedTrigger;

	[Token(Token = "0x4000602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public bool WIT;

	[Token(Token = "0x4000603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	public bool Colliding;

	[Token(Token = "0x4000604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
	public bool IsColliding;

	[Token(Token = "0x4000605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Rigidbody rb;

	[Token(Token = "0x4000606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Ressource r;

	[Token(Token = "0x6000545")]
	[Address(RVA = "0x284E2C", Offset = "0x284E2C", VA = "0x284E2C")]
	public CollisionInfo()
	{
	}
}
[Token(Token = "0x20000D3")]
public class MainCraftScript : MonoBehaviour
{
	[Token(Token = "0x20000D4")]
	public delegate void CraftingUpdate();

	[Token(Token = "0x20002FE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x168948", Offset = "0x168948")]
	private sealed class <LateStart>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40011B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal MainCraftScript $this;

		[Token(Token = "0x40011BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x40011BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x40011BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x1700026B")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x600173D")]
			[Address(RVA = "0x244EB4", Offset = "0x244EB4", VA = "0x244EB4", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600173E")]
			[Address(RVA = "0x244EBC", Offset = "0x244EBC", VA = "0x244EBC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600173B")]
		[Address(RVA = "0x23D904", Offset = "0x23D904", VA = "0x23D904")]
		[DebuggerHidden]
		public <LateStart>c__Iterator0()
		{
		}

		[Token(Token = "0x600173C")]
		[Address(RVA = "0x244DCC", Offset = "0x244DCC", VA = "0x244DCC", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600173F")]
		[Address(RVA = "0x244EC4", Offset = "0x244EC4", VA = "0x244EC4", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001740")]
		[Address(RVA = "0x244ED8", Offset = "0x244ED8", VA = "0x244ED8", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x20002FF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1689A8", Offset = "0x1689A8")]
	private sealed class <DelaySound>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40011BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal MainCraftScript $this;

		[Token(Token = "0x40011BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x40011BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x40011C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x1700026D")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6001743")]
			[Address(RVA = "0x244D24", Offset = "0x244D24", VA = "0x244D24", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001744")]
			[Address(RVA = "0x244D2C", Offset = "0x244D2C", VA = "0x244D2C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001741")]
		[Address(RVA = "0x2415A8", Offset = "0x2415A8", VA = "0x2415A8")]
		[DebuggerHidden]
		public <DelaySound>c__Iterator1()
		{
		}

		[Token(Token = "0x6001742")]
		[Address(RVA = "0x244C3C", Offset = "0x244C3C", VA = "0x244C3C", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001745")]
		[Address(RVA = "0x244D34", Offset = "0x244D34", VA = "0x244D34", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001746")]
		[Address(RVA = "0x244D48", Offset = "0x244D48", VA = "0x244D48", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000300")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x168A08", Offset = "0x168A08")]
	private sealed class <DelayParticle>c__Iterator2 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40011C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal MainCraftScript $this;

		[Token(Token = "0x40011C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x40011C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x40011C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x1700026F")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6001749")]
			[Address(RVA = "0x244B94", Offset = "0x244B94", VA = "0x244B94", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000270")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600174A")]
			[Address(RVA = "0x244B9C", Offset = "0x244B9C", VA = "0x244B9C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001747")]
		[Address(RVA = "0x241630", Offset = "0x241630", VA = "0x241630")]
		[DebuggerHidden]
		public <DelayParticle>c__Iterator2()
		{
		}

		[Token(Token = "0x6001748")]
		[Address(RVA = "0x244AAC", Offset = "0x244AAC", VA = "0x244AAC", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600174B")]
		[Address(RVA = "0x244BA4", Offset = "0x244BA4", VA = "0x244BA4", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x600174C")]
		[Address(RVA = "0x244BB8", Offset = "0x244BB8", VA = "0x244BB8", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4000607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[HideInInspector]
	public NVRInteractableItem obj;

	[Token(Token = "0x4000608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[HideInInspector]
	public int DayCreated;

	[Token(Token = "0x4000609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[HideInInspector]
	public int overideDayCreated;

	[Token(Token = "0x400060A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public bool justCreated;

	[Token(Token = "0x400060B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool EnableCol;

	[Token(Token = "0x400060C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	private bool TwoHanded;

	[Token(Token = "0x400060D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private CollisionInfo[] ColInfos;

	[Token(Token = "0x400060E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string collidedTrigger;

	[Token(Token = "0x400060F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool SoundPlaying;

	[Token(Token = "0x4000610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	private bool ParticlePlaying;

	[Token(Token = "0x4000611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Animator anim;

	[Token(Token = "0x4000612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool animPlayed;

	[Token(Token = "0x4000613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector2 PrevPadValue;

	[Token(Token = "0x4000614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector2 PadValue;

	[Token(Token = "0x4000615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector2 OHPrevPadValue;

	[Token(Token = "0x4000616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector2 OHPadValue;

	[Token(Token = "0x4000617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float TimePerOccurence;

	[Token(Token = "0x4000618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float timeRequiredPatern;

	[Token(Token = "0x4000619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int occurenceRequiredPatern;

	[Token(Token = "0x400061A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private string NextStepPatern;

	[Token(Token = "0x400061B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float timeRequiredCol;

	[Token(Token = "0x400061C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float timerCol;

	[Token(Token = "0x400061D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int occurenceRequiredCol;

	[Token(Token = "0x400061E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool CapacityReduced;

	[Token(Token = "0x400061F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private string NextStepCol;

	[Token(Token = "0x4000620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Vector3 targetVelocity;

	[Token(Token = "0x4000621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float soundTimer;

	[Token(Token = "0x4000622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float timeRequiredShaking;

	[Token(Token = "0x4000623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private string NextStepShaking;

	[Token(Token = "0x4000624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private int occurenceRequiredWait;

	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float timer;

	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private string NextStepWait;

	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float MaxDistance;

	[Token(Token = "0x4000628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private string Axis;

	[Token(Token = "0x4000629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private string targetTagTurn;

	[Token(Token = "0x400062A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private bool GoRight;

	[Token(Token = "0x400062B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private NVRHand otherHand;

	[Token(Token = "0x400062C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private int occurenceRequiredTurn;

	[Token(Token = "0x400062D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private string NextStepAround;

	[Token(Token = "0x400062E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private int Count;

	[Token(Token = "0x400062F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private string ObjToSpawn;

	[Token(Token = "0x4000630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private int NumberToSpawn;

	[Token(Token = "0x4000631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private string NextStepSpawn;

	[Token(Token = "0x4000632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private string ObjToSpawnSplit;

	[Token(Token = "0x4000633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private string NextStepSplit;

	[Token(Token = "0x4000634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float timeRequiredWIT;

	[Token(Token = "0x4000635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private string NextStepWIT;

	[Token(Token = "0x4000636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private string TargetTrigger;

	[Token(Token = "0x4000637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float timerScrub;

	[Token(Token = "0x4000638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private float timeRequiredScrub;

	[Token(Token = "0x4000639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private int occurenceRequiredScrub;

	[Token(Token = "0x400063A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private float velocityRequired;

	[Token(Token = "0x400063B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private string NextStepScrub;

	[Token(Token = "0x400063C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public string Type;

	[Token(Token = "0x400063D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private string[] steps;

	[Token(Token = "0x400063E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private string[] SoundFeedback;

	[Token(Token = "0x400063F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private GameObject[] Particles;

	[Token(Token = "0x4000640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public GameObject ActualObject;

	[Token(Token = "0x4000641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private CraftableObject actualObj;

	[Token(Token = "0x4000642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private HighlightManager hiMng;

	[Token(Token = "0x4000643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private BoxCollider boxCollider;

	[Token(Token = "0x4000644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private Ressource myRessource;

	[Token(Token = "0x4000645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Ressource collidedRessource;

	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private NVRInteractableItem collidedItem;

	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private int feedbackStep;

	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1688C4", Offset = "0x1688C4")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x1688C4", Offset = "0x1688C4")]
	private CraftingUpdate <craftingUpdate>k__BackingField;

	[Token(Token = "0x4000649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private bool initialized;

	[Token(Token = "0x170000A2")]
	public CraftingUpdate craftingUpdate
	{
		[Token(Token = "0x6000547")]
		[Address(RVA = "0x23D864", Offset = "0x23D864", VA = "0x23D864")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1688F8", Offset = "0x1688F8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000548")]
		[Address(RVA = "0x23D86C", Offset = "0x23D86C", VA = "0x23D86C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x168908", Offset = "0x168908")]
		set
		{
		}
	}

	[Token(Token = "0x6000546")]
	[Address(RVA = "0x23D840", Offset = "0x23D840", VA = "0x23D840")]
	public MainCraftScript()
	{
	}

	[Token(Token = "0x6000549")]
	[Address(RVA = "0x23D874", Offset = "0x23D874", VA = "0x23D874")]
	public void Start()
	{
	}

	[Token(Token = "0x600054A")]
	[Address(RVA = "0x239F18", Offset = "0x239F18", VA = "0x239F18")]
	public void Initialize()
	{
	}

	[Token(Token = "0x600054B")]
	[Address(RVA = "0x23D884", Offset = "0x23D884", VA = "0x23D884")]
	[DebuggerHidden]
	private IEnumerator LateStart()
	{
		return null;
	}

	[Token(Token = "0x600054C")]
	[Address(RVA = "0x23D90C", Offset = "0x23D90C", VA = "0x23D90C")]
	public void Reset()
	{
	}

	[Token(Token = "0x600054D")]
	[Address(RVA = "0x23DCBC", Offset = "0x23DCBC", VA = "0x23DCBC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600054E")]
	[Address(RVA = "0x23D9BC", Offset = "0x23D9BC", VA = "0x23D9BC")]
	public void SetCraftable(string NewName)
	{
	}

	[Token(Token = "0x600054F")]
	[Address(RVA = "0x23DF4C", Offset = "0x23DF4C", VA = "0x23DF4C")]
	private void SetObject(string NewName)
	{
	}

	[Token(Token = "0x6000550")]
	[Address(RVA = "0x23E5D4", Offset = "0x23E5D4", VA = "0x23E5D4")]
	private void FindOneChallenge(string[] challenge)
	{
	}

	[Token(Token = "0x6000551")]
	[Address(RVA = "0x23F794", Offset = "0x23F794", VA = "0x23F794")]
	private float AxisValue(Vector3 vector)
	{
		return default(float);
	}

	[Token(Token = "0x6000552")]
	[Address(RVA = "0x23F910", Offset = "0x23F910", VA = "0x23F910")]
	private void Split()
	{
	}

	[Token(Token = "0x6000553")]
	[Address(RVA = "0x240444", Offset = "0x240444", VA = "0x240444")]
	private void TurnAround()
	{
	}

	[Token(Token = "0x6000554")]
	[Address(RVA = "0x240FDC", Offset = "0x240FDC", VA = "0x240FDC")]
	private void shaking()
	{
	}

	[Token(Token = "0x6000555")]
	[Address(RVA = "0x241528", Offset = "0x241528", VA = "0x241528")]
	[DebuggerHidden]
	private IEnumerator DelaySound()
	{
		return null;
	}

	[Token(Token = "0x6000556")]
	[Address(RVA = "0x2415B0", Offset = "0x2415B0", VA = "0x2415B0")]
	[DebuggerHidden]
	private IEnumerator DelayParticle()
	{
		return null;
	}

	[Token(Token = "0x6000557")]
	[Address(RVA = "0x241638", Offset = "0x241638", VA = "0x241638")]
	private void patern()
	{
	}

	[Token(Token = "0x6000558")]
	[Address(RVA = "0x241D08", Offset = "0x241D08", VA = "0x241D08")]
	private void collision()
	{
	}

	[Token(Token = "0x6000559")]
	[Address(RVA = "0x24274C", Offset = "0x24274C", VA = "0x24274C")]
	private void spawn()
	{
	}

	[Token(Token = "0x600055A")]
	[Address(RVA = "0x242BFC", Offset = "0x242BFC", VA = "0x242BFC")]
	private void WaitInTrigger()
	{
	}

	[Token(Token = "0x600055B")]
	[Address(RVA = "0x2434D0", Offset = "0x2434D0", VA = "0x2434D0")]
	private void Waiting()
	{
	}

	[Token(Token = "0x600055C")]
	[Address(RVA = "0x243618", Offset = "0x243618", VA = "0x243618")]
	private void Scrub()
	{
	}

	[Token(Token = "0x600055D")]
	[Address(RVA = "0x24432C", Offset = "0x24432C", VA = "0x24432C")]
	private void OnCollisionStay(Collision col)
	{
	}

	[Token(Token = "0x600055E")]
	[Address(RVA = "0x244734", Offset = "0x244734", VA = "0x244734")]
	private void OnTriggerStay(Collider col)
	{
	}

	[Token(Token = "0x600055F")]
	[Address(RVA = "0x2444B8", Offset = "0x2444B8", VA = "0x2444B8")]
	private void CheckCollision(CollisionInfo Info, Collider col)
	{
	}
}
[Token(Token = "0x20000D5")]
public class Meuble : MonoBehaviour
{
	[Token(Token = "0x2000301")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x168B08", Offset = "0x168B08")]
	private sealed class <LateStart>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40011C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal Meuble $this;

		[Token(Token = "0x40011C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x40011C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x40011C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x17000271")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x600174F")]
			[Address(RVA = "0x24F680", Offset = "0x24F680", VA = "0x24F680", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000272")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001750")]
			[Address(RVA = "0x24F688", Offset = "0x24F688", VA = "0x24F688", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600174D")]
		[Address(RVA = "0x24CA10", Offset = "0x24CA10", VA = "0x24CA10")]
		[DebuggerHidden]
		public <LateStart>c__Iterator0()
		{
		}

		[Token(Token = "0x600174E")]
		[Address(RVA = "0x24F4BC", Offset = "0x24F4BC", VA = "0x24F4BC", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001751")]
		[Address(RVA = "0x24F690", Offset = "0x24F690", VA = "0x24F690", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001752")]
		[Address(RVA = "0x24F6A4", Offset = "0x24F6A4", VA = "0x24F6A4", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x400064A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string type;

	[Token(Token = "0x400064B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[HideInInspector]
	public uint ID;

	[Token(Token = "0x400064C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[HideInInspector]
	public Ressource res;

	[Token(Token = "0x400064D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected NVRInteractableItem obj;

	[Token(Token = "0x400064E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected NVRHand attachedHand;

	[Token(Token = "0x400064F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected Rigidbody rb;

	[Token(Token = "0x4000650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	protected RaycastHit _hit;

	[Token(Token = "0x4000651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected RaycastHit _groundHit;

	[Token(Token = "0x4000652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	protected HighlightMeuble HL;

	[Token(Token = "0x4000653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected Vector3 feedbackPos;

	[Token(Token = "0x4000654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float BaseY;

	[Token(Token = "0x4000655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected float y;

	[Token(Token = "0x4000656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	protected float MaxHeight;

	[Token(Token = "0x4000657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected bool isRight;

	[Token(Token = "0x4000658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
	protected bool wantToSnap;

	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[HideInInspector]
	public Renderer[] rend;

	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[HideInInspector]
	public Color color;

	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public bool Grounded;

	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public string TagToSnap;

	[Token(Token = "0x400065D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[HideInInspector]
	public float rayLength;

	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public GameObject[] JoinedObject;

	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	protected Vector3[] JoinedObjectPosition;

	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	protected Quaternion[] JoinedObjectRotation;

	[Token(Token = "0x4000661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[HideInInspector]
	public Vector3[] OveridedJoinedObjectPosition;

	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	[HideInInspector]
	public Vector3[] OveridedJoinedObjectRotation;

	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public bool MeubleAtStart;

	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
	[HideInInspector]
	public bool isBox;

	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	protected uint AudioFeedback;

	[Token(Token = "0x4000666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[HideInInspector]
	public bool initialized;

	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private float unsnapTimer;

	[Token(Token = "0x4000668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float delayedBoxingTime;

	[Token(Token = "0x4000669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private LayerMask mask;

	[Token(Token = "0x400066A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private bool Secondary;

	[Token(Token = "0x6000564")]
	[Address(RVA = "0x24BEE4", Offset = "0x24BEE4", VA = "0x24BEE4")]
	public Meuble()
	{
	}

	[Token(Token = "0x6000565")]
	[Address(RVA = "0x24BF0C", Offset = "0x24BF0C", VA = "0x24BF0C")]
	public void Start()
	{
	}

	[Token(Token = "0x6000566")]
	[Address(RVA = "0x24BF28", Offset = "0x24BF28", VA = "0x24BF28", Slot = "4")]
	public virtual void Initialize()
	{
	}

	[Token(Token = "0x6000567")]
	[Address(RVA = "0x24C580", Offset = "0x24C580", VA = "0x24C580")]
	private void OnHoveringHandler()
	{
	}

	[Token(Token = "0x6000568")]
	[Address(RVA = "0x239EE0", Offset = "0x239EE0", VA = "0x239EE0")]
	public void checkSetting()
	{
	}

	[Token(Token = "0x6000569")]
	[Address(RVA = "0x24C500", Offset = "0x24C500", VA = "0x24C500")]
	[DebuggerHidden]
	public IEnumerator LateStart()
	{
		return null;
	}

	[Token(Token = "0x600056A")]
	[Address(RVA = "0x24C968", Offset = "0x24C968", VA = "0x24C968")]
	private void setMeuble()
	{
	}

	[Token(Token = "0x600056B")]
	[Address(RVA = "0x24CC34", Offset = "0x24CC34", VA = "0x24CC34", Slot = "5")]
	public virtual void LoadColor(uint seed)
	{
	}

	[Token(Token = "0x600056C")]
	[Address(RVA = "0x239E48", Offset = "0x239E48", VA = "0x239E48")]
	public void loadSeed(uint seed)
	{
	}

	[Token(Token = "0x600056D")]
	[Address(RVA = "0x24CA18", Offset = "0x24CA18", VA = "0x24CA18")]
	public void SetToMeuble(Vector3 t, Quaternion q)
	{
	}

	[Token(Token = "0x600056E")]
	[Address(RVA = "0x246D44", Offset = "0x246D44", VA = "0x246D44")]
	public void SetToBox()
	{
	}

	[Token(Token = "0x600056F")]
	[Address(RVA = "0x24CDA4", Offset = "0x24CDA4", VA = "0x24CDA4", Slot = "6")]
	public virtual void unactiveJoinedObject()
	{
	}

	[Token(Token = "0x6000570")]
	[Address(RVA = "0x24CE14", Offset = "0x24CE14", VA = "0x24CE14", Slot = "7")]
	public virtual void rotationAndJoinManagement()
	{
	}

	[Token(Token = "0x6000571")]
	[Address(RVA = "0x24D5EC", Offset = "0x24D5EC", VA = "0x24D5EC", Slot = "8")]
	public virtual void rotationAndJoinManagement(Vector3[] position, Vector3[] rotation)
	{
	}

	[Token(Token = "0x6000572")]
	[Address(RVA = "0x24E158", Offset = "0x24E158", VA = "0x24E158", Slot = "9")]
	public virtual void setJointColor(Renderer[] renderers)
	{
	}

	[Token(Token = "0x6000573")]
	[Address(RVA = "0x24E414", Offset = "0x24E414", VA = "0x24E414", Slot = "10")]
	public virtual void setCoreColor(Renderer[] renderers)
	{
	}

	[Token(Token = "0x6000574")]
	[Address(RVA = "0x24E4D8", Offset = "0x24E4D8", VA = "0x24E4D8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000575")]
	[Address(RVA = "0x24E7B4", Offset = "0x24E7B4", VA = "0x24E7B4", Slot = "11")]
	public virtual void checkSnapping()
	{
	}

	[Token(Token = "0x6000576")]
	[Address(RVA = "0x24F058", Offset = "0x24F058", VA = "0x24F058", Slot = "12")]
	public virtual void Snap()
	{
	}

	[Token(Token = "0x6000577")]
	[Address(RVA = "0x24F360", Offset = "0x24F360", VA = "0x24F360")]
	public void UnSnap()
	{
	}

	[Token(Token = "0x6000578")]
	[Address(RVA = "0x24EA1C", Offset = "0x24EA1C", VA = "0x24EA1C")]
	protected bool TestRaycast()
	{
		return default(bool);
	}

	[Token(Token = "0x6000579")]
	[Address(RVA = "0x24F390", Offset = "0x24F390", VA = "0x24F390")]
	protected Vector3 multiplyVector(Vector3 a, Vector3 b)
	{
		return default(Vector3);
	}
}
[Token(Token = "0x20000D6")]
public class BoiteAMeuble : MonoBehaviour
{
	[Token(Token = "0x400066B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Rigidbody rb;

	[Token(Token = "0x400066C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private float TimeToShake;

	[Token(Token = "0x400066D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private float requiredVelocity;

	[Token(Token = "0x400066E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float timer;

	[Token(Token = "0x400066F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public GameObject MeubletoSpawn;

	[Token(Token = "0x600057A")]
	[Address(RVA = "0x277728", Offset = "0x277728", VA = "0x277728")]
	public BoiteAMeuble()
	{
	}

	[Token(Token = "0x600057B")]
	[Address(RVA = "0x277744", Offset = "0x277744", VA = "0x277744")]
	private void Start()
	{
	}

	[Token(Token = "0x600057C")]
	[Address(RVA = "0x2777AC", Offset = "0x2777AC", VA = "0x2777AC")]
	private void Update()
	{
	}

	[Token(Token = "0x600057D")]
	[Address(RVA = "0x2779AC", Offset = "0x2779AC", VA = "0x2779AC")]
	private void OnDestroy()
	{
	}
}
[Token(Token = "0x20000D7")]
public class Cabinet : Meuble
{
	[Token(Token = "0x600057E")]
	[Address(RVA = "0x27D5BC", Offset = "0x27D5BC", VA = "0x27D5BC")]
	public Cabinet()
	{
	}

	[Token(Token = "0x600057F")]
	[Address(RVA = "0x27D5C4", Offset = "0x27D5C4", VA = "0x27D5C4", Slot = "6")]
	public override void unactiveJoinedObject()
	{
	}

	[Token(Token = "0x6000580")]
	[Address(RVA = "0x27D634", Offset = "0x27D634", VA = "0x27D634", Slot = "7")]
	public override void rotationAndJoinManagement()
	{
	}
}
[Token(Token = "0x20000D8")]
public class LampLightBehavior : MonoBehaviour
{
	[Token(Token = "0x4000670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private GameObject Light;

	[Token(Token = "0x4000671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Meuble mbl;

	[Token(Token = "0x4000672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private uint soundEvent;

	[Token(Token = "0x6000581")]
	[Address(RVA = "0x23773C", Offset = "0x23773C", VA = "0x23773C")]
	public LampLightBehavior()
	{
	}

	[Token(Token = "0x6000582")]
	[Address(RVA = "0x237744", Offset = "0x237744", VA = "0x237744")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000583")]
	[Address(RVA = "0x237888", Offset = "0x237888", VA = "0x237888")]
	private void Update()
	{
	}

	[Token(Token = "0x6000584")]
	[Address(RVA = "0x2378FC", Offset = "0x2378FC", VA = "0x2378FC")]
	public void Trigger()
	{
	}
}
[Token(Token = "0x20000D9")]
public class NVRConstrainedItem : NVRInteractable
{
	[Token(Token = "0x4000673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool rotationLock;

	[Token(Token = "0x4000674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	public bool movementLock;

	[Token(Token = "0x4000675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
	public bool blockMirorMovement;

	[Token(Token = "0x4000676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 motor;

	[Token(Token = "0x4000677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UnityEvent OnHovering;

	[Token(Token = "0x4000678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public UnityEvent OnHighlight;

	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform _origin;

	[Token(Token = "0x400067A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 _originPosition;

	[Token(Token = "0x400067B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Quaternion _originRotation;

	[Token(Token = "0x400067C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 _originLocalPosition;

	[Token(Token = "0x400067D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Vector3 _attachementPoint;

	[Token(Token = "0x400067E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public SoundMaterial Mat;

	[Token(Token = "0x400067F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float soundtimer;

	[Token(Token = "0x4000680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private uint BeginInteractionFeedback;

	[Token(Token = "0x4000681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private uint EndInteractionFeedback;

	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private uint Collisionfeedback;

	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Joint _joint;

	[Token(Token = "0x4000684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float distanceAtBeginInteraction;

	[Token(Token = "0x4000685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private Vector3 positionAtBeginInteraction;

	[Token(Token = "0x6000585")]
	[Address(RVA = "0x32A55C", Offset = "0x32A55C", VA = "0x32A55C")]
	public NVRConstrainedItem()
	{
	}

	[Token(Token = "0x6000586")]
	[Address(RVA = "0x32A580", Offset = "0x32A580", VA = "0x32A580", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000587")]
	[Address(RVA = "0x32AA20", Offset = "0x32AA20", VA = "0x32AA20", Slot = "11")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000588")]
	[Address(RVA = "0x32AB90", Offset = "0x32AB90", VA = "0x32AB90", Slot = "7")]
	public override void ShowHighlight()
	{
	}

	[Token(Token = "0x6000589")]
	[Address(RVA = "0x32ABB8", Offset = "0x32ABB8", VA = "0x32ABB8")]
	public void setJoint(Vector3 pos, Quaternion rot, Vector3 localPos)
	{
	}

	[Token(Token = "0x600058A")]
	[Address(RVA = "0x32AD3C", Offset = "0x32AD3C", VA = "0x32AD3C", Slot = "13")]
	public override void InteractingUpdate(NVRHand hand)
	{
	}

	[Token(Token = "0x600058B")]
	[Address(RVA = "0x32BC28", Offset = "0x32BC28", VA = "0x32BC28", Slot = "12")]
	public override void BeginInteraction(NVRHand hand)
	{
	}

	[Token(Token = "0x600058C")]
	[Address(RVA = "0x32BEE8", Offset = "0x32BEE8", VA = "0x32BEE8", Slot = "15")]
	public override void EndInteraction()
	{
	}

	[Token(Token = "0x600058D")]
	[Address(RVA = "0x32BF98", Offset = "0x32BF98", VA = "0x32BF98", Slot = "14")]
	public override void HoveringUpdate(NVRHand hand, float forTime)
	{
	}

	[Token(Token = "0x600058E")]
	[Address(RVA = "0x32AD60", Offset = "0x32AD60", VA = "0x32AD60")]
	private void SetVelocity(NVRHand hand)
	{
	}

	[Token(Token = "0x600058F")]
	[Address(RVA = "0x32BFC4", Offset = "0x32BFC4", VA = "0x32BFC4")]
	private void OnCollisionEnter(Collision col)
	{
	}
}
[Token(Token = "0x20000DA")]
public class Oven : Meuble
{
	[Token(Token = "0x6000590")]
	[Address(RVA = "0x330C74", Offset = "0x330C74", VA = "0x330C74")]
	public Oven()
	{
	}

	[Token(Token = "0x6000591")]
	[Address(RVA = "0x330C7C", Offset = "0x330C7C", VA = "0x330C7C", Slot = "6")]
	public override void unactiveJoinedObject()
	{
	}

	[Token(Token = "0x6000592")]
	[Address(RVA = "0x330CEC", Offset = "0x330CEC", VA = "0x330CEC", Slot = "7")]
	public override void rotationAndJoinManagement()
	{
	}
}
[Token(Token = "0x20000DB")]
public class OvenLightFeedBack : MonoBehaviour
{
	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public RessourceFlow flow;

	[Token(Token = "0x4000687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x168B68", Offset = "0x168B68")]
	public Renderer halo;

	[Token(Token = "0x4000688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Renderer model;

	[Token(Token = "0x4000689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D[] textures;

	[Token(Token = "0x6000593")]
	[Address(RVA = "0x330CF4", Offset = "0x330CF4", VA = "0x330CF4")]
	public OvenLightFeedBack()
	{
	}

	[Token(Token = "0x6000594")]
	[Address(RVA = "0x330CFC", Offset = "0x330CFC", VA = "0x330CFC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000595")]
	[Address(RVA = "0x330D00", Offset = "0x330D00", VA = "0x330D00")]
	private void Update()
	{
	}
}
[Token(Token = "0x20000DC")]
public class Poster : Meuble
{
	[Token(Token = "0x400068A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public Texture2D[] posterBank;

	[Token(Token = "0x400068B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[HideInInspector]
	public Texture2D poster;

	[Token(Token = "0x400068C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private float z;

	[Token(Token = "0x400068D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private float zAdded;

	[Token(Token = "0x6000596")]
	[Address(RVA = "0x33B63C", Offset = "0x33B63C", VA = "0x33B63C")]
	public Poster()
	{
	}

	[Token(Token = "0x6000597")]
	[Address(RVA = "0x33B644", Offset = "0x33B644", VA = "0x33B644", Slot = "4")]
	public override void Initialize()
	{
	}

	[Token(Token = "0x6000598")]
	[Address(RVA = "0x33B67C", Offset = "0x33B67C", VA = "0x33B67C", Slot = "5")]
	public override void LoadColor(uint seed)
	{
	}

	[Token(Token = "0x6000599")]
	[Address(RVA = "0x33B764", Offset = "0x33B764", VA = "0x33B764", Slot = "10")]
	public override void setCoreColor(Renderer[] renderers)
	{
	}

	[Token(Token = "0x600059A")]
	[Address(RVA = "0x33B8CC", Offset = "0x33B8CC", VA = "0x33B8CC", Slot = "11")]
	public override void checkSnapping()
	{
	}

	[Token(Token = "0x600059B")]
	[Address(RVA = "0x33BC24", Offset = "0x33BC24", VA = "0x33BC24", Slot = "12")]
	public override void Snap()
	{
	}
}
[Token(Token = "0x20000DD")]
public class Robinet : Meuble
{
	[Token(Token = "0x600059C")]
	[Address(RVA = "0x346D08", Offset = "0x346D08", VA = "0x346D08")]
	public Robinet()
	{
	}

	[Token(Token = "0x600059D")]
	[Address(RVA = "0x346D10", Offset = "0x346D10", VA = "0x346D10", Slot = "6")]
	public override void unactiveJoinedObject()
	{
	}

	[Token(Token = "0x600059E")]
	[Address(RVA = "0x346D80", Offset = "0x346D80", VA = "0x346D80", Slot = "7")]
	public override void rotationAndJoinManagement()
	{
	}

	[Token(Token = "0x600059F")]
	[Address(RVA = "0x346EE8", Offset = "0x346EE8", VA = "0x346EE8", Slot = "8")]
	public override void rotationAndJoinManagement(Vector3[] position, Vector3[] rotation)
	{
	}
}
[Serializable]
[Token(Token = "0x20000DE")]
public class CraftableObject
{
	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public string Name;

	[Token(Token = "0x400068F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string Type;

	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject Sprite;

	[Token(Token = "0x4000691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector3 Collider;

	[Token(Token = "0x4000692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string[] Feedback;

	[Token(Token = "0x4000693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public GameObject[] ParticleFeedback;

	[Token(Token = "0x4000694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string[] Steps;

	[Token(Token = "0x60005A0")]
	[Address(RVA = "0x285160", Offset = "0x285160", VA = "0x285160")]
	public CraftableObject()
	{
	}
}
[Serializable]
[Token(Token = "0x20000DF")]
public class IconAndObject
{
	[Token(Token = "0x4000695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public string Name;

	[Token(Token = "0x4000696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Sprite Texture;

	[Token(Token = "0x4000697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Sprite Icon;

	[Token(Token = "0x4000698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public GameObject Object;

	[Token(Token = "0x60005A1")]
	[Address(RVA = "0x22A3CC", Offset = "0x22A3CC", VA = "0x22A3CC")]
	public IconAndObject()
	{
	}
}
[Token(Token = "0x20000E0")]
public class ObjectDatabase : MonoBehaviour
{
	[Token(Token = "0x4000699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ObjectDatabase Instance;

	[Token(Token = "0x400069A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public CraftableObject[] CraftableObjects;

	[Token(Token = "0x400069B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IconAndObject[] ressourceBank;

	[Token(Token = "0x400069C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public IconAndObject[] completedBank;

	[Token(Token = "0x400069D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IconAndObject[] meubleBank;

	[Token(Token = "0x400069E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public IconAndObject[] specialBank;

	[Token(Token = "0x400069F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public IconAndObject[] toolBank;

	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public IconAndObject[] CraftingBank;

	[Token(Token = "0x60005A2")]
	[Address(RVA = "0x32C100", Offset = "0x32C100", VA = "0x32C100")]
	public ObjectDatabase()
	{
	}

	[Token(Token = "0x60005A3")]
	[Address(RVA = "0x32C108", Offset = "0x32C108", VA = "0x32C108")]
	public void init()
	{
	}

	[Token(Token = "0x60005A4")]
	[Address(RVA = "0x32C16C", Offset = "0x32C16C", VA = "0x32C16C")]
	public Sprite findTexture(string name)
	{
		return null;
	}

	[Token(Token = "0x60005A5")]
	[Address(RVA = "0x32C324", Offset = "0x32C324", VA = "0x32C324")]
	public Sprite findTextureMeuble(string name)
	{
		return null;
	}

	[Token(Token = "0x60005A6")]
	[Address(RVA = "0x32C4DC", Offset = "0x32C4DC", VA = "0x32C4DC")]
	public Sprite findSprite(string name)
	{
		return null;
	}

	[Token(Token = "0x60005A7")]
	[Address(RVA = "0x32C884", Offset = "0x32C884", VA = "0x32C884")]
	public GameObject findUnCompletedObject(string name)
	{
		return null;
	}

	[Token(Token = "0x60005A8")]
	[Address(RVA = "0x32C988", Offset = "0x32C988", VA = "0x32C988")]
	public CraftableObject FindObject(string name)
	{
		return null;
	}

	[Token(Token = "0x60005A9")]
	[Address(RVA = "0x32CA80", Offset = "0x32CA80", VA = "0x32CA80")]
	public GameObject findSelledObject(string name)
	{
		return null;
	}

	[Token(Token = "0x60005AA")]
	[Address(RVA = "0x32CD7C", Offset = "0x32CD7C", VA = "0x32CD7C")]
	public GameObject findCompleted(string name)
	{
		return null;
	}

	[Token(Token = "0x60005AB")]
	[Address(RVA = "0x32CE80", Offset = "0x32CE80", VA = "0x32CE80")]
	public GameObject findRecipe(string name)
	{
		return null;
	}

	[Token(Token = "0x60005AC")]
	[Address(RVA = "0x32CF84", Offset = "0x32CF84", VA = "0x32CF84")]
	public GameObject FindRessource(string name)
	{
		return null;
	}

	[Token(Token = "0x60005AD")]
	[Address(RVA = "0x32D3D0", Offset = "0x32D3D0", VA = "0x32D3D0")]
	public GameObject[] GetCompletedsObj()
	{
		return null;
	}
}
[Token(Token = "0x20000E1")]
public class RandomTextureSprite : SpawnableObject
{
	[Token(Token = "0x40006A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Texture[] mats;

	[Token(Token = "0x40006A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Renderer _renderer;

	[Token(Token = "0x60005AE")]
	[Address(RVA = "0x343AB4", Offset = "0x343AB4", VA = "0x343AB4")]
	public RandomTextureSprite()
	{
	}

	[Token(Token = "0x60005AF")]
	[Address(RVA = "0x343ABC", Offset = "0x343ABC", VA = "0x343ABC")]
	public void setSprite()
	{
	}

	[Token(Token = "0x60005B0")]
	[Address(RVA = "0x343CF8", Offset = "0x343CF8", VA = "0x343CF8", Slot = "4")]
	public override void Reset()
	{
	}

	[Token(Token = "0x60005B1")]
	[Address(RVA = "0x343CFC", Offset = "0x343CFC", VA = "0x343CFC", Slot = "5")]
	public override void ShutDown()
	{
	}
}
[Token(Token = "0x20000E2")]
public enum actionType
{
	[Token(Token = "0x40006A4")]
	turn,
	[Token(Token = "0x40006A5")]
	button,
	[Token(Token = "0x40006A6")]
	shake
}
[Token(Token = "0x20000E3")]
public class RessourceFlow : MonoBehaviour
{
	[Token(Token = "0x40006A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public actionType Action;

	[Token(Token = "0x40006A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject flow;

	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private BoxCollider col;

	[Token(Token = "0x40006AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ParticleSystem particles;

	[Token(Token = "0x40006AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Rigidbody rb;

	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	internal bool buttonPress;

	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float timer;

	[Token(Token = "0x40006AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	internal float BaseRotation;

	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	internal float ActualRotation;

	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string FlowBeginSound;

	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public string FlowEndSound;

	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public MeshRenderer mesh;

	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public LayerMask mask;

	[Token(Token = "0x60005B2")]
	[Address(RVA = "0x345640", Offset = "0x345640", VA = "0x345640")]
	public RessourceFlow()
	{
	}

	[Token(Token = "0x60005B3")]
	[Address(RVA = "0x345648", Offset = "0x345648", VA = "0x345648")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005B4")]
	[Address(RVA = "0x345764", Offset = "0x345764", VA = "0x345764")]
	private void Update()
	{
	}

	[Token(Token = "0x60005B5")]
	[Address(RVA = "0x345D74", Offset = "0x345D74", VA = "0x345D74")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60005B6")]
	[Address(RVA = "0x345E30", Offset = "0x345E30", VA = "0x345E30")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60005B7")]
	[Address(RVA = "0x345768", Offset = "0x345768", VA = "0x345768")]
	private void UnleashTheFlow()
	{
	}

	[Token(Token = "0x60005B8")]
	[Address(RVA = "0x345FB0", Offset = "0x345FB0", VA = "0x345FB0")]
	private void shake()
	{
	}

	[Token(Token = "0x60005B9")]
	[Address(RVA = "0x3464D0", Offset = "0x3464D0", VA = "0x3464D0")]
	public void ButtonPressed()
	{
	}
}
[Token(Token = "0x20000E4")]
public class SpriteManager : SpawnableObject
{
	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Animator anim;

	[Token(Token = "0x60005BA")]
	[Address(RVA = "0x29E31C", Offset = "0x29E31C", VA = "0x29E31C")]
	public SpriteManager()
	{
	}

	[Token(Token = "0x60005BB")]
	[Address(RVA = "0x29E324", Offset = "0x29E324", VA = "0x29E324")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005BC")]
	[Address(RVA = "0x29E38C", Offset = "0x29E38C", VA = "0x29E38C", Slot = "4")]
	public override void Reset()
	{
	}

	[Token(Token = "0x60005BD")]
	[Address(RVA = "0x29E4FC", Offset = "0x29E4FC", VA = "0x29E4FC", Slot = "5")]
	public override void ShutDown()
	{
	}
}
[Token(Token = "0x20000E5")]
public class ObjectToTransform
{
	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public MainCraftScript mcs;

	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float timer;

	[Token(Token = "0x40006B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string TargetStep;

	[Token(Token = "0x60005BE")]
	[Address(RVA = "0x32D6B0", Offset = "0x32D6B0", VA = "0x32D6B0")]
	public ObjectToTransform()
	{
	}
}
[Token(Token = "0x20000E6")]
public class StepSkiper : MonoBehaviour
{
	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private List<ObjectToTransform> objects;

	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string[] stepToChange;

	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public string[] targetStep;

	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Timer;

	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float speed;

	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject Exit;

	[Token(Token = "0x60005BF")]
	[Address(RVA = "0x2A0E4C", Offset = "0x2A0E4C", VA = "0x2A0E4C")]
	public StepSkiper()
	{
	}

	[Token(Token = "0x60005C0")]
	[Address(RVA = "0x2A0E54", Offset = "0x2A0E54", VA = "0x2A0E54")]
	private void Start()
	{
	}

	[Token(Token = "0x60005C1")]
	[Address(RVA = "0x2A0EF8", Offset = "0x2A0EF8", VA = "0x2A0EF8")]
	private void Update()
	{
	}

	[Token(Token = "0x60005C2")]
	[Address(RVA = "0x2A126C", Offset = "0x2A126C", VA = "0x2A126C")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x60005C3")]
	[Address(RVA = "0x2A1488", Offset = "0x2A1488", VA = "0x2A1488")]
	private void OnTriggerExit(Collider col)
	{
	}
}
[Token(Token = "0x20000E7")]
public class DayNight : MonoBehaviour
{
	[Token(Token = "0x60005C4")]
	[Address(RVA = "0x288C14", Offset = "0x288C14", VA = "0x288C14")]
	public DayNight()
	{
	}

	[Token(Token = "0x60005C5")]
	[Address(RVA = "0x288C1C", Offset = "0x288C1C", VA = "0x288C1C")]
	private void Start()
	{
	}

	[Token(Token = "0x60005C6")]
	[Address(RVA = "0x288C20", Offset = "0x288C20", VA = "0x288C20")]
	private void Update()
	{
	}
}
[Token(Token = "0x20000E8")]
public class DayNightCycleV2 : MonoBehaviour
{
	[Token(Token = "0x40006BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Light _light;

	[Token(Token = "0x40006BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool DaySet;

	[Token(Token = "0x40006C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private bool NightSet;

	[Token(Token = "0x40006C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Color DayColor;

	[Token(Token = "0x40006C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Color Nightcolor;

	[Token(Token = "0x60005C7")]
	[Address(RVA = "0x288D14", Offset = "0x288D14", VA = "0x288D14")]
	public DayNightCycleV2()
	{
	}

	[Token(Token = "0x60005C8")]
	[Address(RVA = "0x288D1C", Offset = "0x288D1C", VA = "0x288D1C")]
	private void Start()
	{
	}

	[Token(Token = "0x60005C9")]
	[Address(RVA = "0x288D84", Offset = "0x288D84", VA = "0x288D84")]
	private void Update()
	{
	}
}
[Token(Token = "0x20000E9")]
public class DayNightSpeed : MonoBehaviour
{
	[Token(Token = "0x40006C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float daynightSpeed;

	[Token(Token = "0x60005CA")]
	[Address(RVA = "0x288FD4", Offset = "0x288FD4", VA = "0x288FD4")]
	public DayNightSpeed()
	{
	}

	[Token(Token = "0x60005CB")]
	[Address(RVA = "0x288FDC", Offset = "0x288FDC", VA = "0x288FDC")]
	private void Start()
	{
	}

	[Token(Token = "0x60005CC")]
	[Address(RVA = "0x288FE0", Offset = "0x288FE0", VA = "0x288FE0")]
	private void Update()
	{
	}
}
[Token(Token = "0x20000EA")]
public enum MarcketType
{
	[Token(Token = "0x40006C5")]
	Ressource = 0,
	[Token(Token = "0x40006C6")]
	Tool = 1,
	[Token(Token = "0x40006C7")]
	Furniture = 2,
	[Token(Token = "0x40006C8")]
	None = -1
}
[Serializable]
[Token(Token = "0x20000EB")]
public class BuyingData
{
	[Token(Token = "0x40006C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public string name;

	[Token(Token = "0x40006CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int id;

	[Token(Token = "0x40006CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject dealObject;

	[Token(Token = "0x40006CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public MarcketType type;

	[Token(Token = "0x40006CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isValueConstant;

	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool isSold;

	[Token(Token = "0x40006CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool isSkillSold;

	[Token(Token = "0x40006D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int skillValue;

	[Token(Token = "0x40006D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int amount;

	[Token(Token = "0x40006D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int amountWanted;

	[Token(Token = "0x40006D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int value;

	[Token(Token = "0x40006D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int percentageValue;

	[Token(Token = "0x40006D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Sprite iconToDisplay;

	[Token(Token = "0x40006D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int amountBonus;

	[Token(Token = "0x60005CD")]
	[Address(RVA = "0x26F9F0", Offset = "0x26F9F0", VA = "0x26F9F0")]
	public BuyingData()
	{
	}

	[Token(Token = "0x60005CE")]
	[Address(RVA = "0x27D4CC", Offset = "0x27D4CC", VA = "0x27D4CC")]
	public BuyingData(BuyingData data)
	{
	}
}
[Token(Token = "0x20000EC")]
public class Tier
{
	[Token(Token = "0x40006D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public SubJob[] Reward;

	[Token(Token = "0x40006D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int repRequired;

	[Token(Token = "0x60005CF")]
	[Address(RVA = "0x2A607C", Offset = "0x2A607C", VA = "0x2A607C")]
	public Tier(SubJob[] reward, int repRequired)
	{
	}
}
[Serializable]
[Token(Token = "0x20000ED")]
public class Job
{
	[Token(Token = "0x40006D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public int ID;

	[Token(Token = "0x40006DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string Name;

	[Token(Token = "0x40006DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string Description;

	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public SubJob[] Objectifs;

	[Token(Token = "0x40006DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int objectifsCompleted;

	[Token(Token = "0x40006DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool canComplete;

	[Token(Token = "0x40006DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SubJob[] Rewards;

	[Token(Token = "0x40006E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public SubJob[] SpecialRewards;

	[Token(Token = "0x40006E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int Tier;

	[Token(Token = "0x60005D0")]
	[Address(RVA = "0x22B7BC", Offset = "0x22B7BC", VA = "0x22B7BC")]
	public Job(int id, string name, string description, SubJob[] objectifs, SubJob[] rewards, SubJob[] specialRewards, int tier)
	{
	}
}
[Serializable]
[Token(Token = "0x20000EE")]
public class SubJob
{
	[Token(Token = "0x40006E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public string Object;

	[Token(Token = "0x40006E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int Number;

	[Token(Token = "0x40006E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int CurrentNumber;

	[Token(Token = "0x40006E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool objectifCanComplete;

	[Token(Token = "0x60005D1")]
	[Address(RVA = "0x2A1AFC", Offset = "0x2A1AFC", VA = "0x2A1AFC")]
	public SubJob(string obj, int nb)
	{
	}

	[Token(Token = "0x60005D2")]
	[Address(RVA = "0x2A1B30", Offset = "0x2A1B30", VA = "0x2A1B30")]
	public static SubJob[] stringToJob(string[] s)
	{
		return null;
	}
}
[Token(Token = "0x20000EF")]
public class SellingData
{
	[Token(Token = "0x40006E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public GameObject wantedObject;

	[Token(Token = "0x40006E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	internal bool boughtToday;

	[Token(Token = "0x40006E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int amountWanted;

	[Token(Token = "0x40006E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int cigaretteValue;

	[Token(Token = "0x40006EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int percentageValue;

	[Token(Token = "0x40006EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	internal Sprite iconToDisplay;

	[Token(Token = "0x60005D3")]
	[Address(RVA = "0x29D060", Offset = "0x29D060", VA = "0x29D060")]
	public SellingData()
	{
	}
}
[Token(Token = "0x20000F0")]
public class DealerDatabase : MonoBehaviour
{
	[Token(Token = "0x2000302")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x168CCC", Offset = "0x168CCC")]
	private sealed class <ComputeAvailableItemFromUnlock>c__AnonStorey0
	{
		[Token(Token = "0x40011C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal HashSet<string> set;

		[Token(Token = "0x6001753")]
		[Address(RVA = "0x2037AC", Offset = "0x2037AC", VA = "0x2037AC")]
		public <ComputeAvailableItemFromUnlock>c__AnonStorey0()
		{
		}

		[Token(Token = "0x6001754")]
		[Address(RVA = "0x2037B4", Offset = "0x2037B4", VA = "0x2037B4")]
		internal bool <>m__0(string val)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40006EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DealerDatabase Instance;

	[Token(Token = "0x40006ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x168B88", Offset = "0x168B88")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x168B88", Offset = "0x168B88")]
	private JobReader <JR>k__BackingField;

	[Token(Token = "0x40006EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[HideInInspector]
	public int balanceTransaction;

	[Token(Token = "0x40006EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[HideInInspector]
	public int valueTraded;

	[Token(Token = "0x40006F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public int RepLvl;

	[Token(Token = "0x40006F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public int RepToReach;

	[Token(Token = "0x40006F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public int actualTier;

	[Token(Token = "0x40006F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[HideInInspector]
	public int maxTier;

	[Token(Token = "0x40006F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public BuyingData[] itemsVendusAuJoueur;

	[Token(Token = "0x40006F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[HideInInspector]
	public List<BuyingData> itemsAchetesAuJoueur;

	[Token(Token = "0x40006F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Dictionary<string, int> OjToday;

	[Token(Token = "0x40006F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[HideInInspector]
	public List<Job> Jobs;

	[Token(Token = "0x40006F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public Tier[] Tiers;

	[Token(Token = "0x40006F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[HideInInspector]
	public List<Job> ActualJobs;

	[Token(Token = "0x40006FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private JobGenerator jobGen;

	[Token(Token = "0x40006FB")]
	private const int objectivesTargetMultiplier = 15;

	[Token(Token = "0x40006FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x168C7C", Offset = "0x168C7C")]
	private static Predicate<string> <>f__am$cache0;

	[Token(Token = "0x170000A3")]
	private TabReader reader
	{
		[Token(Token = "0x60005D5")]
		[Address(RVA = "0x289D48", Offset = "0x289D48", VA = "0x289D48")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000A4")]
	public JobReader JR
	{
		[Token(Token = "0x60005D6")]
		[Address(RVA = "0x289DAC", Offset = "0x289DAC", VA = "0x289DAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x168C8C", Offset = "0x168C8C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60005D7")]
		[Address(RVA = "0x289DB4", Offset = "0x289DB4", VA = "0x289DB4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x168C9C", Offset = "0x168C9C")]
		private set
		{
		}
	}

	[Token(Token = "0x60005D4")]
	[Address(RVA = "0x289CBC", Offset = "0x289CBC", VA = "0x289CBC")]
	public DealerDatabase()
	{
	}

	[Token(Token = "0x60005D8")]
	[Address(RVA = "0x289DBC", Offset = "0x289DBC", VA = "0x289DBC")]
	public void Initialize()
	{
	}

	[Token(Token = "0x60005D9")]
	[Address(RVA = "0x28C54C", Offset = "0x28C54C", VA = "0x28C54C")]
	private void UpdateJobGenState()
	{
	}

	[Token(Token = "0x60005DA")]
	[Address(RVA = "0x28BD00", Offset = "0x28BD00", VA = "0x28BD00")]
	public void InitJob(int tier)
	{
	}

	[Token(Token = "0x60005DB")]
	[Address(RVA = "0x28C460", Offset = "0x28C460", VA = "0x28C460")]
	private void GenerateMissingJobs()
	{
	}

	[Token(Token = "0x60005DC")]
	[Address(RVA = "0x28C5C4", Offset = "0x28C5C4", VA = "0x28C5C4")]
	public void ChooseLastJobs()
	{
	}

	[Token(Token = "0x60005DD")]
	[Address(RVA = "0x28C794", Offset = "0x28C794", VA = "0x28C794")]
	public void CheckJobs(int jobID)
	{
	}

	[Token(Token = "0x60005DE")]
	[Address(RVA = "0x28CF7C", Offset = "0x28CF7C", VA = "0x28CF7C")]
	private int GetGoldenBobbyJobId(Job[] jobs)
	{
		return default(int);
	}

	[Token(Token = "0x60005DF")]
	[Address(RVA = "0x28D0E0", Offset = "0x28D0E0", VA = "0x28D0E0")]
	public void CompleteJob(int jobID)
	{
	}

	[Token(Token = "0x60005E0")]
	[Address(RVA = "0x28D3B0", Offset = "0x28D3B0", VA = "0x28D3B0")]
	public void GiveReward(Job job)
	{
	}

	[Token(Token = "0x60005E1")]
	[Address(RVA = "0x28B4E4", Offset = "0x28B4E4", VA = "0x28B4E4")]
	public BuyingData[] GetTierBonus(int tier, bool applyBonuses = false)
	{
		return null;
	}

	[Token(Token = "0x60005E2")]
	[Address(RVA = "0x28BB20", Offset = "0x28BB20", VA = "0x28BB20")]
	public string[] GetTierUnlocks(int tier)
	{
		return null;
	}

	[Token(Token = "0x60005E3")]
	[Address(RVA = "0x28DD2C", Offset = "0x28DD2C", VA = "0x28DD2C")]
	public string[] GetTierUnlocks(int tier, out bool[] isNewItem)
	{
		return null;
	}

	[Token(Token = "0x60005E4")]
	[Address(RVA = "0x28E0CC", Offset = "0x28E0CC", VA = "0x28E0CC")]
	private Predicate<string> ComputeAvailableItemFromUnlock()
	{
		return null;
	}

	[Token(Token = "0x60005E5")]
	[Address(RVA = "0x28A4E8", Offset = "0x28A4E8", VA = "0x28A4E8")]
	public void SetBuyNSell(bool newGame)
	{
	}

	[Token(Token = "0x60005E6")]
	[Address(RVA = "0x28E6A0", Offset = "0x28E6A0", VA = "0x28E6A0")]
	public void MarketInit()
	{
	}

	[Token(Token = "0x60005E7")]
	[Address(RVA = "0x28E878", Offset = "0x28E878", VA = "0x28E878")]
	public void refreshStockValue()
	{
	}

	[Token(Token = "0x60005E8")]
	[Address(RVA = "0x28989C", Offset = "0x28989C", VA = "0x28989C")]
	public void PriceCalculationSequence()
	{
	}

	[Token(Token = "0x60005E9")]
	[Address(RVA = "0x28C030", Offset = "0x28C030", VA = "0x28C030")]
	public void SetItemsAvailable(bool live = false)
	{
	}

	[Token(Token = "0x60005EA")]
	[Address(RVA = "0x28ED48", Offset = "0x28ED48", VA = "0x28ED48")]
	private void SetupSoldRegular(BuyingData data)
	{
	}

	[Token(Token = "0x60005EB")]
	[Address(RVA = "0x28EB58", Offset = "0x28EB58", VA = "0x28EB58")]
	private void SetupSoldSandbox(BuyingData data)
	{
	}

	[Token(Token = "0x60005EC")]
	[Address(RVA = "0x28EF94", Offset = "0x28EF94", VA = "0x28EF94")]
	private bool IsValidDataForSandbox(BuyingData data)
	{
		return default(bool);
	}

	[Token(Token = "0x60005ED")]
	[Address(RVA = "0x28EF44", Offset = "0x28EF44", VA = "0x28EF44")]
	private bool IsDataSold(BuyingData data)
	{
		return default(bool);
	}

	[Token(Token = "0x60005EE")]
	[Address(RVA = "0x28BFDC", Offset = "0x28BFDC", VA = "0x28BFDC")]
	private void SetDataSold(BuyingData data, bool sold)
	{
	}

	[Token(Token = "0x60005EF")]
	[Address(RVA = "0x28F150", Offset = "0x28F150", VA = "0x28F150")]
	public void MarketProgression()
	{
	}

	[Token(Token = "0x60005F0")]
	[Address(RVA = "0x28F9D0", Offset = "0x28F9D0", VA = "0x28F9D0")]
	public void DealEndCalculations()
	{
	}

	[Token(Token = "0x60005F1")]
	[Address(RVA = "0x28FF08", Offset = "0x28FF08", VA = "0x28FF08")]
	public void UnlockItem(BuyingData data)
	{
	}

	[Token(Token = "0x60005F2")]
	[Address(RVA = "0x28FFE4", Offset = "0x28FFE4", VA = "0x28FFE4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x168CAC", Offset = "0x168CAC")]
	private bool <CompleteJob>m__0(Job j)
	{
		return default(bool);
	}

	[Token(Token = "0x60005F3")]
	[Address(RVA = "0x290018", Offset = "0x290018", VA = "0x290018")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x168CBC", Offset = "0x168CBC")]
	private static bool <ComputeAvailableItemFromUnlock>m__1(string val)
	{
		return default(bool);
	}
}
[Token(Token = "0x20000F1")]
public class DealerHandTrigger : NVRInteractable
{
	[Token(Token = "0x40006FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private TraderMaster tablet;

	[Token(Token = "0x60005F4")]
	[Address(RVA = "0x203830", Offset = "0x203830", VA = "0x203830")]
	public DealerHandTrigger()
	{
	}

	[Token(Token = "0x60005F5")]
	[Address(RVA = "0x203838", Offset = "0x203838", VA = "0x203838", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60005F6")]
	[Address(RVA = "0x20385C", Offset = "0x20385C", VA = "0x20385C", Slot = "23")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x60005F7")]
	[Address(RVA = "0x2038FC", Offset = "0x2038FC", VA = "0x2038FC", Slot = "12")]
	public override void BeginInteraction(NVRHand hand)
	{
	}

	[Token(Token = "0x60005F8")]
	[Address(RVA = "0x203970", Offset = "0x203970", VA = "0x203970")]
	private void OnTriggerEnter(Collider col)
	{
	}
}
[Token(Token = "0x20000F2")]
public class DealerJobScript : MonoBehaviour
{
	[Token(Token = "0x2000303")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x168D3C", Offset = "0x168D3C")]
	private sealed class <FindItemValue>c__AnonStorey1
	{
		[Token(Token = "0x40011CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal string name;

		[Token(Token = "0x6001755")]
		[Address(RVA = "0x2059D8", Offset = "0x2059D8", VA = "0x2059D8")]
		public <FindItemValue>c__AnonStorey1()
		{
		}

		[Token(Token = "0x6001756")]
		[Address(RVA = "0x206E1C", Offset = "0x206E1C", VA = "0x206E1C")]
		internal bool <>m__0(BuyingData item)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000304")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x168D4C", Offset = "0x168D4C")]
	private sealed class <WaitNClose>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40011CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal DealerJobScript $this;

		[Token(Token = "0x40011CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x40011CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x40011CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x17000273")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6001759")]
			[Address(RVA = "0x206FA8", Offset = "0x206FA8", VA = "0x206FA8", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000274")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600175A")]
			[Address(RVA = "0x206FB0", Offset = "0x206FB0", VA = "0x206FB0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001757")]
		[Address(RVA = "0x206D50", Offset = "0x206D50", VA = "0x206D50")]
		[DebuggerHidden]
		public <WaitNClose>c__Iterator0()
		{
		}

		[Token(Token = "0x6001758")]
		[Address(RVA = "0x206EC0", Offset = "0x206EC0", VA = "0x206EC0", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600175B")]
		[Address(RVA = "0x206FB8", Offset = "0x206FB8", VA = "0x206FB8", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x600175C")]
		[Address(RVA = "0x206FCC", Offset = "0x206FCC", VA = "0x206FCC", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x40006FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[HideInInspector]
	public TraderMaster tablet;

	[Token(Token = "0x40006FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private DealerDatabase databaseScript;

	[Token(Token = "0x4000700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public GameObject JobWindow;

	[Token(Token = "0x4000701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject repRewardTemplate;

	[Token(Token = "0x4000702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public GameObject Halo;

	[Token(Token = "0x4000703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public int prisonID;

	[Token(Token = "0x4000704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[HideInInspector]
	public int localActiveObjectsCount;

	[Token(Token = "0x4000705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public bool activeObjectCheck;

	[Token(Token = "0x4000706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int GiftCount;

	[Token(Token = "0x4000707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshProUGUI NewTierTxt;

	[Token(Token = "0x4000708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Transform[] repRewardAnchors;

	[Token(Token = "0x4000709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject jobContent;

	[Token(Token = "0x400070A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public TierWrapper tierWrapper;

	[Token(Token = "0x400070B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public JobsPanel jobsPanel;

	[Token(Token = "0x400070C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private JobWindow[] jobWrappers;

	[Token(Token = "0x400070D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RepBarWrapper repBarWrapper;

	[Token(Token = "0x400070E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public TextMeshProUGUI ItemCrafted;

	[Token(Token = "0x400070F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TextMeshProUGUI TimeCaught;

	[Token(Token = "0x4000710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public TextMeshProUGUI DayPassed;

	[Token(Token = "0x4000711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x168D1C", Offset = "0x168D1C")]
	private static Dictionary<string, int> <>f__switch$map0;

	[Token(Token = "0x60005F9")]
	[Address(RVA = "0x203A58", Offset = "0x203A58", VA = "0x203A58")]
	public DealerJobScript()
	{
	}

	[Token(Token = "0x60005FA")]
	[Address(RVA = "0x203A60", Offset = "0x203A60", VA = "0x203A60")]
	public void Initialize()
	{
	}

	[Token(Token = "0x60005FB")]
	[Address(RVA = "0x203F50", Offset = "0x203F50", VA = "0x203F50")]
	public void CompleteJob(int jobID)
	{
	}

	[Token(Token = "0x60005FC")]
	[Address(RVA = "0x204A24", Offset = "0x204A24", VA = "0x204A24")]
	private void TakeJobObjectsFromPlayer(int jobID)
	{
	}

	[Token(Token = "0x60005FD")]
	[Address(RVA = "0x2057DC", Offset = "0x2057DC", VA = "0x2057DC")]
	private int FindItemValue(string name)
	{
		return default(int);
	}

	[Token(Token = "0x60005FE")]
	[Address(RVA = "0x204350", Offset = "0x204350", VA = "0x204350")]
	public void EndLevel(int jobID)
	{
	}

	[Token(Token = "0x60005FF")]
	[Address(RVA = "0x204EE4", Offset = "0x204EE4", VA = "0x204EE4")]
	public void NewTierWindow()
	{
	}

	[Token(Token = "0x6000600")]
	[Address(RVA = "0x206818", Offset = "0x206818", VA = "0x206818")]
	public void CheckGiftCount()
	{
	}

	[Token(Token = "0x6000601")]
	[Address(RVA = "0x205A80", Offset = "0x205A80", VA = "0x205A80")]
	public void SetTierRewards()
	{
	}

	[Token(Token = "0x6000602")]
	[Address(RVA = "0x206CD0", Offset = "0x206CD0", VA = "0x206CD0")]
	[DebuggerHidden]
	private IEnumerator WaitNClose()
	{
		return null;
	}

	[Token(Token = "0x6000603")]
	[Address(RVA = "0x206830", Offset = "0x206830", VA = "0x206830")]
	public void CloseNewTierWindow()
	{
	}

	[Token(Token = "0x6000604")]
	[Address(RVA = "0x203DF0", Offset = "0x203DF0", VA = "0x203DF0")]
	public void SetJobBubbles()
	{
	}

	[Token(Token = "0x6000605")]
	[Address(RVA = "0x205158", Offset = "0x205158", VA = "0x205158")]
	public void RefreshStatText()
	{
	}

	[Token(Token = "0x6000606")]
	[Address(RVA = "0x205130", Offset = "0x205130", VA = "0x205130")]
	public void RefreshRepBar()
	{
	}

	[Token(Token = "0x6000607")]
	[Address(RVA = "0x206D88", Offset = "0x206D88", VA = "0x206D88")]
	public void RefreshTierTrackers()
	{
	}

	[Token(Token = "0x6000608")]
	[Address(RVA = "0x2050C4", Offset = "0x2050C4", VA = "0x2050C4")]
	public void RefreshObjectives()
	{
	}
}
[Token(Token = "0x20000F3")]
public class DealerTradeScript : MonoBehaviour
{
	[Token(Token = "0x2000305")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x168E0C", Offset = "0x168E0C")]
	private sealed class <TryUnlock>c__AnonStorey0
	{
		[Token(Token = "0x40011CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal ObjectTag tag;

		[Token(Token = "0x600175D")]
		[Address(RVA = "0x207FF0", Offset = "0x207FF0", VA = "0x207FF0")]
		public <TryUnlock>c__AnonStorey0()
		{
		}

		[Token(Token = "0x600175E")]
		[Address(RVA = "0x209958", Offset = "0x209958", VA = "0x209958")]
		internal void <>m__0()
		{
		}

		[Token(Token = "0x600175F")]
		[Address(RVA = "0x209A30", Offset = "0x209A30", VA = "0x209A30")]
		internal void <>m__1()
		{
		}
	}

	[Token(Token = "0x4000712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public MarcketContainer marcket;

	[Token(Token = "0x4000713")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public PlayerStuffContainer playerStuff;

	[Token(Token = "0x4000714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public ObjectTagContainer basket;

	[Token(Token = "0x4000715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI skillBalanceText;

	[Token(Token = "0x4000716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public TextMeshProUGUI balanceText;

	[Token(Token = "0x4000717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI equalText;

	[Token(Token = "0x4000718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Image balanceBg;

	[Token(Token = "0x4000719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int lastSkillBalance;

	[Token(Token = "0x400071A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int lastBalance;

	[Token(Token = "0x400071B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Sequence tween;

	[Token(Token = "0x400071C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int MoneyStack;

	[Token(Token = "0x400071D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int thresholdSurpriseAnim;

	[Token(Token = "0x400071E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float delaiBuySpawner;

	[Token(Token = "0x400071F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float forceMultiplierBuySpawner;

	[Token(Token = "0x4000720")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[HideInInspector]
	public TraderMaster tablet;

	[Token(Token = "0x4000721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Dealer dealerNPC;

	[Token(Token = "0x4000722")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[HideInInspector]
	public bool isDealing;

	[Token(Token = "0x4000723")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x168DCC", Offset = "0x168DCC")]
	private static Func<BuyingData, bool> <>f__am$cache0;

	[Token(Token = "0x4000724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x168DDC", Offset = "0x168DDC")]
	private static Func<BuyingData, bool> <>f__am$cache1;

	[Token(Token = "0x6000609")]
	[Address(RVA = "0x207158", Offset = "0x207158", VA = "0x207158")]
	public DealerTradeScript()
	{
	}

	[Token(Token = "0x600060A")]
	[Address(RVA = "0x207168", Offset = "0x207168", VA = "0x207168")]
	public void Initialize()
	{
	}

	[Token(Token = "0x600060B")]
	[Address(RVA = "0x207230", Offset = "0x207230", VA = "0x207230")]
	private void Start()
	{
	}

	[Token(Token = "0x600060C")]
	[Address(RVA = "0x20738C", Offset = "0x20738C", VA = "0x20738C")]
	private void Update()
	{
	}

	[Token(Token = "0x600060D")]
	[Address(RVA = "0x206D58", Offset = "0x206D58", VA = "0x206D58")]
	public void SimpleRefreshUI(bool refreshStock = true)
	{
	}

	[Token(Token = "0x600060E")]
	[Address(RVA = "0x207A0C", Offset = "0x207A0C", VA = "0x207A0C")]
	public void DealerRefreshUI(bool refreshStock = true)
	{
	}

	[Token(Token = "0x600060F")]
	[Address(RVA = "0x207B64", Offset = "0x207B64", VA = "0x207B64")]
	private void UpdateSkillSoldState(BuyingData[] itemsVendusAuJoueur)
	{
	}

	[Token(Token = "0x6000610")]
	[Address(RVA = "0x207C10", Offset = "0x207C10", VA = "0x207C10")]
	public void TryUnlock(ObjectTag tag)
	{
	}

	[Token(Token = "0x6000611")]
	[Address(RVA = "0x207FF8", Offset = "0x207FF8", VA = "0x207FF8")]
	public void BalanceTheDeal()
	{
	}

	[Token(Token = "0x6000612")]
	[Address(RVA = "0x208340", Offset = "0x208340", VA = "0x208340")]
	private void BalanceAchievements()
	{
	}

	[Token(Token = "0x6000613")]
	[Address(RVA = "0x208D14", Offset = "0x208D14", VA = "0x208D14")]
	public void JustTraded(BuyingData value, int amount = 1)
	{
	}

	[Token(Token = "0x6000614")]
	[Address(RVA = "0x208EBC", Offset = "0x208EBC", VA = "0x208EBC")]
	public void CancelBuy(bool dealclosed = false)
	{
	}

	[Token(Token = "0x6000615")]
	[Address(RVA = "0x208578", Offset = "0x208578", VA = "0x208578")]
	public void BoughtStuff(bool dealclosed = false, int balance = 0)
	{
	}

	[Token(Token = "0x6000616")]
	[Address(RVA = "0x209154", Offset = "0x209154", VA = "0x209154")]
	public void SavePostDeal()
	{
	}

	[Token(Token = "0x6000617")]
	[Address(RVA = "0x209900", Offset = "0x209900", VA = "0x209900")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x168DEC", Offset = "0x168DEC")]
	private static bool <CancelBuy>m__0(BuyingData d)
	{
		return default(bool);
	}

	[Token(Token = "0x6000618")]
	[Address(RVA = "0x20992C", Offset = "0x20992C", VA = "0x20992C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x168DFC", Offset = "0x168DFC")]
	private static bool <CancelBuy>m__1(BuyingData d)
	{
		return default(bool);
	}
}
[Token(Token = "0x20000F4")]
public class JobGenerator
{
	[Token(Token = "0x20000F5")]
	private struct RawCraftStep
	{
		[Token(Token = "0x4000736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public CraftableObject Craftable;

		[Token(Token = "0x4000737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public string Step;
	}

	[Token(Token = "0x20000F6")]
	private struct CraftStep
	{
		[Token(Token = "0x4000738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string Craftable;

		[Token(Token = "0x4000739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public string Action;

		[Token(Token = "0x400073A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string Target;
	}

	[Token(Token = "0x20000F7")]
	private class CraftGraph : Dictionary<string, CraftNode>
	{
		[Token(Token = "0x2000309")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x168F4C", Offset = "0x168F4C")]
		private sealed class <Leafs>c__Iterator0 : IEnumerable, IEnumerable<CraftNode>, IEnumerator, IDisposable, IEnumerator<CraftNode>
		{
			[Token(Token = "0x40011D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal Enumerator $locvar0;

			[Token(Token = "0x40011D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal KeyValuePair<string, CraftNode> <elem>__1;

			[Token(Token = "0x40011D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal CraftGraph $this;

			[Token(Token = "0x40011DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal CraftNode $current;

			[Token(Token = "0x40011DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal bool $disposing;

			[Token(Token = "0x40011DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal int $PC;

			[Token(Token = "0x17000275")]
			private CraftNode System.Collections.Generic.IEnumerator<JobGenerator.CraftNode>.Current
			{
				[Token(Token = "0x6001769")]
				[Address(RVA = "0x2313EC", Offset = "0x2313EC", VA = "0x2313EC", Slot = "10")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000276")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600176A")]
				[Address(RVA = "0x2313F4", Offset = "0x2313F4", VA = "0x2313F4", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001767")]
			[Address(RVA = "0x230870", Offset = "0x230870", VA = "0x230870")]
			[DebuggerHidden]
			public <Leafs>c__Iterator0()
			{
			}

			[Token(Token = "0x6001768")]
			[Address(RVA = "0x2311FC", Offset = "0x2311FC", VA = "0x2311FC", Slot = "7")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600176B")]
			[Address(RVA = "0x2313FC", Offset = "0x2313FC", VA = "0x2313FC", Slot = "9")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x600176C")]
			[Address(RVA = "0x23147C", Offset = "0x23147C", VA = "0x23147C", Slot = "8")]
			[DebuggerHidden]
			public void Reset()
			{
			}

			[Token(Token = "0x600176D")]
			[Address(RVA = "0x231500", Offset = "0x231500", VA = "0x231500", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x600176E")]
			[Address(RVA = "0x231504", Offset = "0x231504", VA = "0x231504", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator<CraftNode> System.Collections.Generic.IEnumerable<JobGenerator.CraftNode>.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x200030A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x168FCC", Offset = "0x168FCC")]
		private sealed class <GenerateDot>c__Iterator1 : IEnumerable, IEnumerable<string>, IEnumerator, IDisposable, IEnumerator<string>
		{
			[Token(Token = "0x40011DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal Enumerator $locvar0;

			[Token(Token = "0x40011DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal KeyValuePair<string, CraftNode> <elem>__1;

			[Token(Token = "0x40011DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal List<CraftNode>.Enumerator $locvar1;

			[Token(Token = "0x40011E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			internal CraftNode <child>__2;

			[Token(Token = "0x40011E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal CraftGraph $this;

			[Token(Token = "0x40011E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			internal string $current;

			[Token(Token = "0x40011E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			internal bool $disposing;

			[Token(Token = "0x40011E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			internal int $PC;

			[Token(Token = "0x17000277")]
			private string System.Collections.Generic.IEnumerator<string>.Current
			{
				[Token(Token = "0x6001771")]
				[Address(RVA = "0x230FDC", Offset = "0x230FDC", VA = "0x230FDC", Slot = "10")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000278")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001772")]
				[Address(RVA = "0x230FE4", Offset = "0x230FE4", VA = "0x230FE4", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600176F")]
			[Address(RVA = "0x230BE4", Offset = "0x230BE4", VA = "0x230BE4")]
			[DebuggerHidden]
			public <GenerateDot>c__Iterator1()
			{
			}

			[Token(Token = "0x6001770")]
			[Address(RVA = "0x230BF0", Offset = "0x230BF0", VA = "0x230BF0", Slot = "7")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001773")]
			[Address(RVA = "0x230FEC", Offset = "0x230FEC", VA = "0x230FEC", Slot = "9")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6001774")]
			[Address(RVA = "0x2310BC", Offset = "0x2310BC", VA = "0x2310BC", Slot = "8")]
			[DebuggerHidden]
			public void Reset()
			{
			}

			[Token(Token = "0x6001775")]
			[Address(RVA = "0x231140", Offset = "0x231140", VA = "0x231140", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001776")]
			[Address(RVA = "0x231144", Offset = "0x231144", VA = "0x231144", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator<string> System.Collections.Generic.IEnumerable<string>.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x6000632")]
		[Address(RVA = "0x230250", Offset = "0x230250", VA = "0x230250")]
		public CraftGraph()
		{
		}

		[Token(Token = "0x6000633")]
		[Address(RVA = "0x2302B4", Offset = "0x2302B4", VA = "0x2302B4")]
		public CraftNode GetOrCreate(string name)
		{
			return null;
		}

		[Token(Token = "0x6000634")]
		[Address(RVA = "0x2303A8", Offset = "0x2303A8", VA = "0x2303A8")]
		public CraftGraph Reversed()
		{
			return null;
		}

		[Token(Token = "0x6000635")]
		[Address(RVA = "0x2307D8", Offset = "0x2307D8", VA = "0x2307D8")]
		[DebuggerHidden]
		public IEnumerable<CraftNode> Leafs()
		{
			return null;
		}

		[Token(Token = "0x6000636")]
		[Address(RVA = "0x230878", Offset = "0x230878", VA = "0x230878")]
		internal void Merge(string rem)
		{
		}

		[Token(Token = "0x6000637")]
		[Address(RVA = "0x230B4C", Offset = "0x230B4C", VA = "0x230B4C")]
		[DebuggerHidden]
		public IEnumerable<string> GenerateDot()
		{
			return null;
		}

		[Token(Token = "0x6000638")]
		[Address(RVA = "0x230BEC", Offset = "0x230BEC", VA = "0x230BEC")]
		public void WriteDotTo(string filename)
		{
		}
	}

	[Token(Token = "0x20000F8")]
	private class CraftNode
	{
		[Token(Token = "0x400073B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string name;

		[Token(Token = "0x400073C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public List<CraftNode> childs;

		[Token(Token = "0x6000639")]
		[Address(RVA = "0x230388", Offset = "0x230388", VA = "0x230388")]
		public CraftNode(string name)
		{
		}

		[Token(Token = "0x600063A")]
		[Address(RVA = "0x2306F8", Offset = "0x2306F8", VA = "0x2306F8")]
		public void AddChild(CraftNode child)
		{
		}
	}

	[Token(Token = "0x2000306")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16904C", Offset = "0x16904C")]
	private sealed class <UpdateStoreState>c__AnonStorey1
	{
		[Token(Token = "0x40011D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal List<string> Craftable;

		[Token(Token = "0x6001760")]
		[Address(RVA = "0x22E160", Offset = "0x22E160", VA = "0x22E160")]
		public <UpdateStoreState>c__AnonStorey1()
		{
		}

		[Token(Token = "0x6001761")]
		[Address(RVA = "0x230134", Offset = "0x230134", VA = "0x230134")]
		internal bool <>m__0(BuyingData b)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000307")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16905C", Offset = "0x16905C")]
	private sealed class <ExtractValue>c__AnonStorey2
	{
		[Token(Token = "0x40011D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal MarcketType? type;

		[Token(Token = "0x6001762")]
		[Address(RVA = "0x22E3C8", Offset = "0x22E3C8", VA = "0x22E3C8")]
		public <ExtractValue>c__AnonStorey2()
		{
		}

		[Token(Token = "0x6001763")]
		[Address(RVA = "0x22F688", Offset = "0x22F688", VA = "0x22F688")]
		internal bool <>m__0(BuyingData bs)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000308")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16906C", Offset = "0x16906C")]
	private sealed class <GenerateNewJob>c__AnonStorey3
	{
		[Token(Token = "0x40011D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal int objValue;

		[Token(Token = "0x40011D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal int nombreObjectifs;

		[Token(Token = "0x40011D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal int recValue;

		[Token(Token = "0x40011D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int nombreRecompenses;

		[Token(Token = "0x40011D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal JobGenerator $this;

		[Token(Token = "0x6001764")]
		[Address(RVA = "0x22E85C", Offset = "0x22E85C", VA = "0x22E85C")]
		public <GenerateNewJob>c__AnonStorey3()
		{
		}

		[Token(Token = "0x6001765")]
		[Address(RVA = "0x22F73C", Offset = "0x22F73C", VA = "0x22F73C")]
		internal SubJob <>m__0(string obj)
		{
			return null;
		}

		[Token(Token = "0x6001766")]
		[Address(RVA = "0x22F820", Offset = "0x22F820", VA = "0x22F820")]
		internal SubJob <>m__1(string rec)
		{
			return null;
		}
	}

	[Token(Token = "0x200030B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16907C", Offset = "0x16907C")]
	private sealed class <MergeInternalNodes>c__AnonStorey4
	{
		[Token(Token = "0x40011E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal List<string> toKeep;

		[Token(Token = "0x6001777")]
		[Address(RVA = "0x22F0C0", Offset = "0x22F0C0", VA = "0x22F0C0")]
		public <MergeInternalNodes>c__AnonStorey4()
		{
		}

		[Token(Token = "0x6001778")]
		[Address(RVA = "0x22F974", Offset = "0x22F974", VA = "0x22F974")]
		internal bool <>m__0(string s)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200030C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16908C", Offset = "0x16908C")]
	private sealed class <CreateRawCraftStep>c__AnonStorey5
	{
		[Token(Token = "0x40011E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal CraftableObject co;

		[Token(Token = "0x6001779")]
		[Address(RVA = "0x22F398", Offset = "0x22F398", VA = "0x22F398")]
		public <CreateRawCraftStep>c__AnonStorey5()
		{
		}

		[Token(Token = "0x600177A")]
		[Address(RVA = "0x22F67C", Offset = "0x22F67C", VA = "0x22F67C")]
		internal RawCraftStep <>m__0(string s)
		{
			return default(RawCraftStep);
		}
	}

	[Token(Token = "0x200030D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16909C", Offset = "0x16909C")]
	private sealed class <ParseSteps>c__Iterator0 : IEnumerable, IEnumerable<CraftStep>, IEnumerator, IDisposable, IEnumerator<CraftStep>
	{
		[Token(Token = "0x40011E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal RawCraftStep rcs;

		[Token(Token = "0x40011E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal string <from>__0;

		[Token(Token = "0x40011E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal string[] <splited>__0;

		[Token(Token = "0x40011EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal string <to>__0;

		[Token(Token = "0x40011EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal string <action>__0;

		[Token(Token = "0x40011EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal CraftStep $current;

		[Token(Token = "0x40011ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		internal bool $disposing;

		[Token(Token = "0x40011EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal int $PC;

		[Token(Token = "0x17000279")]
		private CraftStep System.Collections.Generic.IEnumerator<JobGenerator.CraftStep>.Current
		{
			[Token(Token = "0x600177D")]
			[Address(RVA = "0x22FF4C", Offset = "0x22FF4C", VA = "0x22FF4C", Slot = "10")]
			[DebuggerHidden]
			get
			{
				return default(CraftStep);
			}
		}

		[Token(Token = "0x1700027A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600177E")]
			[Address(RVA = "0x22FF5C", Offset = "0x22FF5C", VA = "0x22FF5C", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600177B")]
		[Address(RVA = "0x22F448", Offset = "0x22F448", VA = "0x22F448")]
		[DebuggerHidden]
		public <ParseSteps>c__Iterator0()
		{
		}

		[Token(Token = "0x600177C")]
		[Address(RVA = "0x22F9F0", Offset = "0x22F9F0", VA = "0x22F9F0", Slot = "7")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600177F")]
		[Address(RVA = "0x22FFD8", Offset = "0x22FFD8", VA = "0x22FFD8", Slot = "9")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001780")]
		[Address(RVA = "0x22FFEC", Offset = "0x22FFEC", VA = "0x22FFEC", Slot = "8")]
		[DebuggerHidden]
		public void Reset()
		{
		}

		[Token(Token = "0x6001781")]
		[Address(RVA = "0x230070", Offset = "0x230070", VA = "0x230070", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001782")]
		[Address(RVA = "0x230074", Offset = "0x230074", VA = "0x230074", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator<CraftStep> System.Collections.Generic.IEnumerable<JobGenerator.CraftStep>.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x4000725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private readonly CraftGraph graph;

	[Token(Token = "0x4000726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Dictionary<string, int> CraftValue;

	[Token(Token = "0x4000727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Dictionary<string, int> RecompensePotentielle;

	[Token(Token = "0x4000728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int objectiveValueTarget;

	[Token(Token = "0x4000729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float RecompenseMultipler;

	[Token(Token = "0x400072A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int MaxQuestName;

	[Token(Token = "0x400072B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<int> JobNames;

	[Token(Token = "0x400072C")]
	private const string ArrowFormat = "{0} -> {1};";

	[Token(Token = "0x400072D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x168E1C", Offset = "0x168E1C")]
	private static Func<CraftableObject, IEnumerable<RawCraftStep>> <>f__mg$cache0;

	[Token(Token = "0x400072E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x168E2C", Offset = "0x168E2C")]
	private static Func<RawCraftStep, IEnumerable<CraftStep>> <>f__mg$cache1;

	[Token(Token = "0x400072F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x168E3C", Offset = "0x168E3C")]
	private static Func<BuyingData, string> <>f__am$cache0;

	[Token(Token = "0x4000730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x168E4C", Offset = "0x168E4C")]
	private static Func<BuyingData, bool> <>f__am$cache1;

	[Token(Token = "0x4000731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x168E5C", Offset = "0x168E5C")]
	private static Func<KeyValuePair<string, bool>, bool> <>f__am$cache2;

	[Token(Token = "0x4000732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x168E6C", Offset = "0x168E6C")]
	private static Func<KeyValuePair<string, bool>, string> <>f__am$cache3;

	[Token(Token = "0x4000733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x168E7C", Offset = "0x168E7C")]
	private static Func<BuyingData, string> <>f__am$cache4;

	[Token(Token = "0x4000734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x168E8C", Offset = "0x168E8C")]
	private static Func<BuyingData, int> <>f__am$cache5;

	[Token(Token = "0x4000735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x168E9C", Offset = "0x168E9C")]
	private static Func<CraftNode, string> <>f__am$cache6;

	[Token(Token = "0x6000619")]
	[Address(RVA = "0x22CDEC", Offset = "0x22CDEC", VA = "0x22CDEC")]
	public JobGenerator(IEnumerable<CraftableObject> objects)
	{
	}

	[Token(Token = "0x600061A")]
	[Address(RVA = "0x22D7AC", Offset = "0x22D7AC", VA = "0x22D7AC")]
	private void CleanInput()
	{
	}

	[Token(Token = "0x600061B")]
	[Address(RVA = "0x22D8D8", Offset = "0x22D8D8", VA = "0x22D8D8")]
	public void SetJobObjectiveValueTarget(int value)
	{
	}

	[Token(Token = "0x600061C")]
	[Address(RVA = "0x22D8E0", Offset = "0x22D8E0", VA = "0x22D8E0")]
	public void UpdateStoreState(IList<BuyingData> itemVendu, IList<BuyingData> itemAchete, IEnumerable<Job> CurrentJobs)
	{
	}

	[Token(Token = "0x600061D")]
	[Address(RVA = "0x22E168", Offset = "0x22E168", VA = "0x22E168")]
	private Dictionary<string, int> ExtractValue(IEnumerable<BuyingData> buyableState, [Optional] MarcketType? type)
	{
		return null;
	}

	[Token(Token = "0x600061E")]
	[Address(RVA = "0x22E3D0", Offset = "0x22E3D0", VA = "0x22E3D0")]
	public Job GenerateNewJob(int bonusPercent = 0)
	{
		return null;
	}

	[Token(Token = "0x600061F")]
	[Address(RVA = "0x22EB40", Offset = "0x22EB40", VA = "0x22EB40")]
	private int CountForObject(int totalValue, int objectiveCount, int objectiveValue)
	{
		return default(int);
	}

	[Token(Token = "0x6000620")]
	[Address(RVA = "0x22EC40", Offset = "0x22EC40", VA = "0x22EC40")]
	private int CountForObject(int totalValue, int objectiveCount, int objectiveValue, ref int finalValue)
	{
		return default(int);
	}

	[Token(Token = "0x6000621")]
	[Address(RVA = "0x22E8DC", Offset = "0x22E8DC", VA = "0x22E8DC")]
	private string GetQuestName()
	{
		return null;
	}

	[Token(Token = "0x6000622")]
	[Address(RVA = "0x22E864", Offset = "0x22E864", VA = "0x22E864")]
	private static string[] GetRandom(int nb, IEnumerable<string> possibility)
	{
		return null;
	}

	[Token(Token = "0x6000623")]
	[Address(RVA = "0x22EDF8", Offset = "0x22EDF8", VA = "0x22EDF8")]
	private static string[] GetRandom(int nb, IList<string> possibility)
	{
		return null;
	}

	[Token(Token = "0x6000624")]
	[Address(RVA = "0x22D0F8", Offset = "0x22D0F8", VA = "0x22D0F8")]
	private static CraftGraph CreateCraftGraph(IEnumerable<CraftStep> steps)
	{
		return null;
	}

	[Token(Token = "0x6000625")]
	[Address(RVA = "0x22D428", Offset = "0x22D428", VA = "0x22D428")]
	private static void MergeInternalNodes(CraftGraph steps)
	{
	}

	[Token(Token = "0x6000626")]
	[Address(RVA = "0x22F0C8", Offset = "0x22F0C8", VA = "0x22F0C8")]
	public static void WriteDotGraphCraftable(IEnumerable<CraftableObject> CraftableObjects, string filename)
	{
	}

	[Token(Token = "0x6000627")]
	[Address(RVA = "0x22F0CC", Offset = "0x22F0CC", VA = "0x22F0CC")]
	public static string[] DotGraph(IEnumerable<string> arcs)
	{
		return null;
	}

	[Token(Token = "0x6000628")]
	[Address(RVA = "0x22F290", Offset = "0x22F290", VA = "0x22F290")]
	private static IEnumerable<RawCraftStep> CreateRawCraftStep(CraftableObject co)
	{
		return null;
	}

	[Token(Token = "0x6000629")]
	[Address(RVA = "0x22F3A0", Offset = "0x22F3A0", VA = "0x22F3A0")]
	[DebuggerHidden]
	private static IEnumerable<CraftStep> ParseSteps(RawCraftStep rcs)
	{
		return null;
	}

	[Token(Token = "0x600062A")]
	[Address(RVA = "0x22F450", Offset = "0x22F450", VA = "0x22F450")]
	private static string ToDotEdge(CraftStep cs)
	{
		return null;
	}

	[Token(Token = "0x600062B")]
	[Address(RVA = "0x22F504", Offset = "0x22F504", VA = "0x22F504")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x168EBC", Offset = "0x168EBC")]
	private static string <UpdateStoreState>m__0(BuyingData bd)
	{
		return null;
	}

	[Token(Token = "0x600062C")]
	[Address(RVA = "0x22F524", Offset = "0x22F524", VA = "0x22F524")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x168ECC", Offset = "0x168ECC")]
	private static bool <UpdateStoreState>m__1(BuyingData bd)
	{
		return default(bool);
	}

	[Token(Token = "0x600062D")]
	[Address(RVA = "0x22F544", Offset = "0x22F544", VA = "0x22F544")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x168EDC", Offset = "0x168EDC")]
	private static bool <UpdateStoreState>m__2(KeyValuePair<string, bool> kv)
	{
		return default(bool);
	}

	[Token(Token = "0x600062E")]
	[Address(RVA = "0x22F5B0", Offset = "0x22F5B0", VA = "0x22F5B0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x168EEC", Offset = "0x168EEC")]
	private static string <UpdateStoreState>m__3(KeyValuePair<string, bool> kv)
	{
		return null;
	}

	[Token(Token = "0x600062F")]
	[Address(RVA = "0x22F61C", Offset = "0x22F61C", VA = "0x22F61C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x168EFC", Offset = "0x168EFC")]
	private static string <ExtractValue>m__4(BuyingData bs)
	{
		return null;
	}

	[Token(Token = "0x6000630")]
	[Address(RVA = "0x22F63C", Offset = "0x22F63C", VA = "0x22F63C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x168F0C", Offset = "0x168F0C")]
	private static int <ExtractValue>m__5(BuyingData bs)
	{
		return default(int);
	}

	[Token(Token = "0x6000631")]
	[Address(RVA = "0x22F65C", Offset = "0x22F65C", VA = "0x22F65C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x168F1C", Offset = "0x168F1C")]
	private static string <MergeInternalNodes>m__6(CraftNode l)
	{
		return null;
	}
}
[Token(Token = "0x20000F9")]
public class JobReader : MonoBehaviour
{
	[Token(Token = "0x400073D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public TextAsset[] OldRawTab;

	[Token(Token = "0x400073E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public TextAsset[] RawTab;

	[Token(Token = "0x400073F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	internal int ID;

	[Token(Token = "0x4000740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	internal int tierTabStart;

	[Token(Token = "0x4000741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private string[] Tab;

	[Token(Token = "0x600063B")]
	[Address(RVA = "0x231D9C", Offset = "0x231D9C", VA = "0x231D9C")]
	public JobReader()
	{
	}

	[Token(Token = "0x600063C")]
	[Address(RVA = "0x231DA4", Offset = "0x231DA4", VA = "0x231DA4")]
	public List<Job> LoadAllJobsTab(bool old = false)
	{
		return null;
	}

	[Token(Token = "0x600063D")]
	[Address(RVA = "0x2325EC", Offset = "0x2325EC", VA = "0x2325EC")]
	public List<Job> LoadJobsFromID(int[] IDsToLoad, bool old = false)
	{
		return null;
	}

	[Token(Token = "0x600063E")]
	[Address(RVA = "0x232EBC", Offset = "0x232EBC", VA = "0x232EBC")]
	public Tier[] LoadTierTab(bool old = false)
	{
		return null;
	}

	[Token(Token = "0x600063F")]
	[Address(RVA = "0x2335E4", Offset = "0x2335E4", VA = "0x2335E4")]
	public int GetMaxTier(int prisonID, bool old)
	{
		return default(int);
	}
}
[Token(Token = "0x20000FA")]
public class TraderManager : MonoBehaviour
{
	[Token(Token = "0x4000742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private GameObject mrTroc;

	[Token(Token = "0x4000743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private GameObject mrArcade;

	[Token(Token = "0x4000744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private DealerTradeScript[] lesDealers;

	[Token(Token = "0x4000745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform spawnPosition;

	[Token(Token = "0x4000746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool trigger;

	[Token(Token = "0x6000640")]
	[Address(RVA = "0x2A659C", Offset = "0x2A659C", VA = "0x2A659C")]
	public TraderManager()
	{
	}

	[Token(Token = "0x6000641")]
	[Address(RVA = "0x2A65A4", Offset = "0x2A65A4", VA = "0x2A65A4")]
	private void Start()
	{
	}
}
namespace Trebuchet
{
	[Token(Token = "0x20000FB")]
	public class JobHintManager : EventTrigger
	{
		[Token(Token = "0x4000747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private bool isReward;

		[Token(Token = "0x4000748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private JobWindow win;

		[Token(Token = "0x4000749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private string textToDisplay;

		[Token(Token = "0x400074A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private NVRHand hand;

		[Token(Token = "0x6000642")]
		[Address(RVA = "0x2A8954", Offset = "0x2A8954", VA = "0x2A8954")]
		public JobHintManager()
		{
		}

		[Token(Token = "0x6000643")]
		[Address(RVA = "0x2A895C", Offset = "0x2A895C", VA = "0x2A895C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000644")]
		[Address(RVA = "0x2A91A8", Offset = "0x2A91A8", VA = "0x2A91A8", Slot = "21")]
		public override void OnPointerEnter(PointerEventData data)
		{
		}

		[Token(Token = "0x6000645")]
		[Address(RVA = "0x2A9318", Offset = "0x2A9318", VA = "0x2A9318", Slot = "22")]
		public override void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000646")]
		[Address(RVA = "0x2A9408", Offset = "0x2A9408", VA = "0x2A9408")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000647")]
		[Address(RVA = "0x2A8A24", Offset = "0x2A8A24", VA = "0x2A8A24")]
		private void Refresh()
		{
		}

		[Token(Token = "0x6000648")]
		[Address(RVA = "0x2A91D8", Offset = "0x2A91D8", VA = "0x2A91D8")]
		public void ShowHint(PointerEventData data)
		{
		}

		[Token(Token = "0x6000649")]
		[Address(RVA = "0x2A9338", Offset = "0x2A9338", VA = "0x2A9338")]
		public void HideHint()
		{
		}
	}
	[Token(Token = "0x20000FC")]
	public class JobsPanel : SubMenu
	{
		[Token(Token = "0x400074B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerStuffContainer playerStuff;

		[Token(Token = "0x400074C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Scrollbar playerStuffScrollBar;

		[Token(Token = "0x400074D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Scrollbar jobScrollBar;

		[Token(Token = "0x400074E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float tweenDuration;

		[Token(Token = "0x600064A")]
		[Address(RVA = "0x2A940C", Offset = "0x2A940C", VA = "0x2A940C")]
		public JobsPanel()
		{
		}

		[Token(Token = "0x600064B")]
		[Address(RVA = "0x2A9428", Offset = "0x2A9428", VA = "0x2A9428", Slot = "5")]
		public override void SetActive(bool active)
		{
		}

		[Token(Token = "0x600064C")]
		[Address(RVA = "0x2A956C", Offset = "0x2A956C", VA = "0x2A956C", Slot = "7")]
		public override void Execute(string action)
		{
		}
	}
	[Token(Token = "0x20000FD")]
	public class JobTag : MonoBehaviour
	{
		[Token(Token = "0x400074F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal StateTag state;

		[Token(Token = "0x4000750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Image objectSprite;

		[Token(Token = "0x4000751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private TextMeshProUGUI quantityTxt;

		[Token(Token = "0x4000752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SubJob subjob;

		[Token(Token = "0x4000753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal string objectGiven;

		[Token(Token = "0x4000754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal int quantityGiven;

		[Token(Token = "0x4000755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool initialized;

		[Token(Token = "0x600064D")]
		[Address(RVA = "0x2A99E4", Offset = "0x2A99E4", VA = "0x2A99E4")]
		public JobTag()
		{
		}

		[Token(Token = "0x600064E")]
		[Address(RVA = "0x2A99EC", Offset = "0x2A99EC", VA = "0x2A99EC")]
		private void Init()
		{
		}

		[Token(Token = "0x600064F")]
		[Address(RVA = "0x2A9B30", Offset = "0x2A9B30", VA = "0x2A9B30")]
		public void SetTag(SubJob _subjob)
		{
		}

		[Token(Token = "0x6000650")]
		[Address(RVA = "0x2A9CAC", Offset = "0x2A9CAC", VA = "0x2A9CAC")]
		public void Refresh()
		{
		}
	}
	[Token(Token = "0x20000FE")]
	public class JobWindow : MonoBehaviour
	{
		[Token(Token = "0x4000756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private TraderMaster _trader;

		[Token(Token = "0x4000757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Color normalColor;

		[Token(Token = "0x4000758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color finalJobColor;

		[Token(Token = "0x4000759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TextMeshProUGUI jobName;

		[Token(Token = "0x400075A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		internal JobTag[] needs;

		[Token(Token = "0x400075B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal RewardTag[] rewards;

		[Token(Token = "0x400075C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		internal string jobDudeName;

		[Token(Token = "0x400075D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Button globalState;

		[Token(Token = "0x400075E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private StateTag globalStateTag;

		[Token(Token = "0x400075F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Image[] backgrounds;

		[Token(Token = "0x4000760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Job job;

		[Token(Token = "0x4000761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool completed;

		[Token(Token = "0x4000762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int windowID;

		[Token(Token = "0x4000763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool initialized;

		[Token(Token = "0x170000A5")]
		private TraderMaster trader
		{
			[Token(Token = "0x6000652")]
			[Address(RVA = "0x2A9DE0", Offset = "0x2A9DE0", VA = "0x2A9DE0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000651")]
		[Address(RVA = "0x2A9DD8", Offset = "0x2A9DD8", VA = "0x2A9DD8")]
		public JobWindow()
		{
		}

		[Token(Token = "0x6000653")]
		[Address(RVA = "0x2A9EB0", Offset = "0x2A9EB0", VA = "0x2A9EB0")]
		private void Init()
		{
		}

		[Token(Token = "0x6000654")]
		[Address(RVA = "0x2AA1D0", Offset = "0x2AA1D0", VA = "0x2AA1D0")]
		public void SetJob(Job _job, int id)
		{
		}

		[Token(Token = "0x6000655")]
		[Address(RVA = "0x2AAAE0", Offset = "0x2AAAE0", VA = "0x2AAAE0")]
		private void CompleteJob()
		{
		}

		[Token(Token = "0x6000656")]
		[Address(RVA = "0x2AAC68", Offset = "0x2AAC68", VA = "0x2AAC68")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000657")]
		[Address(RVA = "0x2AAD04", Offset = "0x2AAD04", VA = "0x2AAD04")]
		public void OnPlayerStuffAddedHandler(BuyingData data, int amount)
		{
		}

		[Token(Token = "0x6000658")]
		[Address(RVA = "0x2AAC6C", Offset = "0x2AAC6C", VA = "0x2AAC6C")]
		public void Refresh()
		{
		}

		[Token(Token = "0x6000659")]
		[Address(RVA = "0x2AAD08", Offset = "0x2AAD08", VA = "0x2AAD08")]
		public void Refresh(BuyingData[] datas)
		{
		}
	}
	[Token(Token = "0x20000FF")]
	public class MarcketContainer : ObjectTagContainer
	{
		[Token(Token = "0x4000764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public DealerTradeScript tradeScript;

		[Token(Token = "0x600065A")]
		[Address(RVA = "0x2AB108", Offset = "0x2AB108", VA = "0x2AB108")]
		public MarcketContainer()
		{
		}

		[Token(Token = "0x600065B")]
		[Address(RVA = "0x2AB1A0", Offset = "0x2AB1A0", VA = "0x2AB1A0")]
		public void Refesh(bool refreshStock = true)
		{
		}

		[Token(Token = "0x600065C")]
		[Address(RVA = "0x2AB460", Offset = "0x2AB460", VA = "0x2AB460", Slot = "6")]
		public override void AddData(BuyingData newData, int amountOverride)
		{
		}

		[Token(Token = "0x600065D")]
		[Address(RVA = "0x2AB898", Offset = "0x2AB898", VA = "0x2AB898")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600065E")]
		[Address(RVA = "0x2AB950", Offset = "0x2AB950", VA = "0x2AB950", Slot = "7")]
		public override void OnTagTrigger(ObjectTag tag)
		{
		}
	}
	[Token(Token = "0x2000100")]
	public class ButtonAnimator : EventTrigger
	{
		[Token(Token = "0x4000765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Tween tween;

		[Token(Token = "0x4000766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Button button;

		[Token(Token = "0x600065F")]
		[Address(RVA = "0x2A6CA4", Offset = "0x2A6CA4", VA = "0x2A6CA4")]
		public ButtonAnimator()
		{
		}

		[Token(Token = "0x6000660")]
		[Address(RVA = "0x2A6CAC", Offset = "0x2A6CAC", VA = "0x2A6CAC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000661")]
		[Address(RVA = "0x2A6D14", Offset = "0x2A6D14", VA = "0x2A6D14", Slot = "21")]
		public override void OnPointerEnter(PointerEventData data)
		{
		}

		[Token(Token = "0x6000662")]
		[Address(RVA = "0x2A6F84", Offset = "0x2A6F84", VA = "0x2A6F84", Slot = "27")]
		public override void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000663")]
		[Address(RVA = "0x2A6FA4", Offset = "0x2A6FA4", VA = "0x2A6FA4")]
		private void PlayParticle()
		{
		}

		[Token(Token = "0x6000664")]
		[Address(RVA = "0x2A6E54", Offset = "0x2A6E54", VA = "0x2A6E54")]
		private void Animation()
		{
		}

		[Token(Token = "0x6000665")]
		[Address(RVA = "0x2A72EC", Offset = "0x2A72EC", VA = "0x2A72EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16911C", Offset = "0x16911C")]
		private void <Animation>m__0()
		{
		}
	}
	[Token(Token = "0x2000101")]
	public class ButtonSubscriber : MonoBehaviour
	{
		[Token(Token = "0x4000767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private Menu manager;

		[Token(Token = "0x6000666")]
		[Address(RVA = "0x2A73AC", Offset = "0x2A73AC", VA = "0x2A73AC")]
		public ButtonSubscriber()
		{
		}

		[Token(Token = "0x6000667")]
		[Address(RVA = "0x2A73B4", Offset = "0x2A73B4", VA = "0x2A73B4")]
		public void Initialize(Menu menu)
		{
		}

		[Token(Token = "0x6000668")]
		[Address(RVA = "0x2A7494", Offset = "0x2A7494", VA = "0x2A7494")]
		public void OnClicHandler()
		{
		}

		[Token(Token = "0x6000669")]
		[Address(RVA = "0x2A7540", Offset = "0x2A7540", VA = "0x2A7540")]
		private void OnDestroy()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000102")]
	public class Menu
	{
		[Token(Token = "0x4000768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public GameObject root;

		[Token(Token = "0x4000769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal SubMenu[] submenus;

		[Token(Token = "0x400076A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal SubMenu actualMenu;

		[Token(Token = "0x400076B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal MenusMaster manager;

		[Token(Token = "0x600066A")]
		[Address(RVA = "0x2AC658", Offset = "0x2AC658", VA = "0x2AC658")]
		public Menu()
		{
		}

		[Token(Token = "0x600066B")]
		[Address(RVA = "0x2A7500", Offset = "0x2A7500", VA = "0x2A7500")]
		public void OnTriggerActive(string arg)
		{
		}

		[Token(Token = "0x600066C")]
		[Address(RVA = "0x2AC660", Offset = "0x2AC660", VA = "0x2AC660")]
		public void OnValueChanged(string arg, int value)
		{
		}
	}
	[Token(Token = "0x2000103")]
	public class MenusMaster : MonoBehaviour
	{
		[Token(Token = "0x200030E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16913C", Offset = "0x16913C")]
		private sealed class <ClearDebugDelayed>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x40011EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal MenusMaster $this;

			[Token(Token = "0x40011F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal object $current;

			[Token(Token = "0x40011F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal bool $disposing;

			[Token(Token = "0x40011F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal int $PC;

			[Token(Token = "0x1700027B")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6001785")]
				[Address(RVA = "0x2AD138", Offset = "0x2AD138", VA = "0x2AD138", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700027C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001786")]
				[Address(RVA = "0x2AD140", Offset = "0x2AD140", VA = "0x2AD140", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001783")]
			[Address(RVA = "0x2ACFF8", Offset = "0x2ACFF8", VA = "0x2ACFF8")]
			[DebuggerHidden]
			public <ClearDebugDelayed>c__Iterator0()
			{
			}

			[Token(Token = "0x6001784")]
			[Address(RVA = "0x2AD000", Offset = "0x2AD000", VA = "0x2AD000", Slot = "5")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001787")]
			[Address(RVA = "0x2AD148", Offset = "0x2AD148", VA = "0x2AD148", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6001788")]
			[Address(RVA = "0x2AD15C", Offset = "0x2AD15C", VA = "0x2AD15C", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x400076C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Menu[] menus;

		[Token(Token = "0x400076D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TextMeshProUGUI[] DebugTexts;

		[Token(Token = "0x600066D")]
		[Address(RVA = "0x2AC6B4", Offset = "0x2AC6B4", VA = "0x2AC6B4")]
		public MenusMaster()
		{
		}

		[Token(Token = "0x600066E")]
		[Address(RVA = "0x2AC6BC", Offset = "0x2AC6BC", VA = "0x2AC6BC", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x600066F")]
		[Address(RVA = "0x2AC9AC", Offset = "0x2AC9AC", VA = "0x2AC9AC", Slot = "5")]
		protected virtual void SetButton(Button button, Menu menu)
		{
		}

		[Token(Token = "0x6000670")]
		[Address(RVA = "0x2ACA58", Offset = "0x2ACA58", VA = "0x2ACA58", Slot = "6")]
		public virtual void OnValueChanged(Menu menu, string dropdownName, int value)
		{
		}

		[Token(Token = "0x6000671")]
		[Address(RVA = "0x2ACA5C", Offset = "0x2ACA5C", VA = "0x2ACA5C", Slot = "7")]
		public virtual void OnTriggerActive(Menu menu, string buttonName)
		{
		}

		[Token(Token = "0x6000672")]
		[Address(RVA = "0x2ACD38", Offset = "0x2ACD38", VA = "0x2ACD38", Slot = "8")]
		public virtual void Naviguate(string arg, Menu menu)
		{
		}

		[Token(Token = "0x6000673")]
		[Address(RVA = "0x2ACEC8", Offset = "0x2ACEC8", VA = "0x2ACEC8", Slot = "9")]
		public virtual void Action(string arg, Menu menu)
		{
		}

		[Token(Token = "0x6000674")]
		[Address(RVA = "0x2ACECC", Offset = "0x2ACECC", VA = "0x2ACECC")]
		private void ShowDebug(string text, bool temporary = false)
		{
		}

		[Token(Token = "0x6000675")]
		[Address(RVA = "0x2ACF78", Offset = "0x2ACF78", VA = "0x2ACF78")]
		[DebuggerHidden]
		private IEnumerator ClearDebugDelayed()
		{
			return null;
		}
	}
	[Token(Token = "0x2000104")]
	public class SubMenu : MonoBehaviour
	{
		[Token(Token = "0x400076E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal Button[] buttons;

		[Token(Token = "0x400076F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal MenusMaster manager;

		[Token(Token = "0x4000770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal Menu menu;

		[Token(Token = "0x4000771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected string[] argTab;

		[Token(Token = "0x4000772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		protected bool[] oldButtonState;

		[Token(Token = "0x6000676")]
		[Address(RVA = "0x2A9420", Offset = "0x2A9420", VA = "0x2A9420")]
		public SubMenu()
		{
		}

		[Token(Token = "0x6000677")]
		[Address(RVA = "0x2B1F1C", Offset = "0x2B1F1C", VA = "0x2B1F1C", Slot = "4")]
		public virtual void Initialize(MenusMaster _manager, Menu _menu)
		{
		}

		[Token(Token = "0x6000678")]
		[Address(RVA = "0x2A9534", Offset = "0x2A9534", VA = "0x2A9534", Slot = "5")]
		public virtual void SetActive(bool active)
		{
		}

		[Token(Token = "0x6000679")]
		[Address(RVA = "0x2B207C", Offset = "0x2B207C", VA = "0x2B207C", Slot = "6")]
		public virtual void SetInteraction(bool wantInteraction)
		{
		}

		[Token(Token = "0x600067A")]
		[Address(RVA = "0x2A9888", Offset = "0x2A9888", VA = "0x2A9888", Slot = "7")]
		public virtual void Execute(string args)
		{
		}
	}
	[Token(Token = "0x2000105")]
	public class ObjectTag : MonoBehaviour
	{
		[Token(Token = "0x4000773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal ObjectTagContainer container;

		[Token(Token = "0x4000774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal BuyingData data;

		[Token(Token = "0x4000775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Button button;

		[Token(Token = "0x4000776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Image objectSprite;

		[Token(Token = "0x4000777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private GameObject valueObject;

		[Token(Token = "0x4000778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextMeshProUGUI valueTxt;

		[Token(Token = "0x4000779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private GameObject quantityObject;

		[Token(Token = "0x400077A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TextMeshProUGUI quantityTxt;

		[Token(Token = "0x400077B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private GameObject lockTag;

		[Token(Token = "0x400077C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TextMeshProUGUI lockTagTxt;

		[Token(Token = "0x400077D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Image lockTagImage;

		[Token(Token = "0x400077E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject variationObject;

		[Token(Token = "0x400077F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Animator variationAnim;

		[Token(Token = "0x4000780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject SoldoutObject;

		[Token(Token = "0x4000781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool initialized;

		[Token(Token = "0x600067B")]
		[Address(RVA = "0x2AD304", Offset = "0x2AD304", VA = "0x2AD304")]
		public ObjectTag()
		{
		}

		[Token(Token = "0x600067C")]
		[Address(RVA = "0x2AD30C", Offset = "0x2AD30C", VA = "0x2AD30C")]
		private void Init()
		{
		}

		[Token(Token = "0x600067D")]
		[Address(RVA = "0x2AD680", Offset = "0x2AD680", VA = "0x2AD680")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600067E")]
		[Address(RVA = "0x2AD73C", Offset = "0x2AD73C", VA = "0x2AD73C")]
		public void SetTag(BuyingData _data)
		{
		}

		[Token(Token = "0x600067F")]
		[Address(RVA = "0x2AB2E4", Offset = "0x2AB2E4", VA = "0x2AB2E4")]
		public void SyncWithDatabase(bool refreshStock = true)
		{
		}

		[Token(Token = "0x6000680")]
		[Address(RVA = "0x2ABC10", Offset = "0x2ABC10", VA = "0x2ABC10")]
		public void RefreshValue()
		{
		}

		[Token(Token = "0x6000681")]
		[Address(RVA = "0x2AD690", Offset = "0x2AD690", VA = "0x2AD690")]
		private void UpdateVariation()
		{
		}

		[Token(Token = "0x6000682")]
		[Address(RVA = "0x2AD790", Offset = "0x2AD790", VA = "0x2AD790")]
		private int GetVariation()
		{
			return default(int);
		}

		[Token(Token = "0x6000683")]
		[Address(RVA = "0x2AD8E0", Offset = "0x2AD8E0", VA = "0x2AD8E0")]
		public void OnClick()
		{
		}

		[Token(Token = "0x6000684")]
		[Address(RVA = "0x2AD918", Offset = "0x2AD918", VA = "0x2AD918")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16919C", Offset = "0x16919C")]
		private void <RefreshValue>m__0()
		{
		}
	}
	[Token(Token = "0x2000106")]
	public class ObjectTagContainer : ObjectTagReceiver
	{
		[Token(Token = "0x4000782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public ObjectTagReceiver target;

		[Token(Token = "0x4000783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform content;

		[Token(Token = "0x4000784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public GameObject objectTag;

		[Token(Token = "0x4000785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string eventToPlay;

		[Token(Token = "0x4000786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal bool allowLock;

		[Token(Token = "0x4000787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal List<ObjectTag> tags;

		[Token(Token = "0x170000A6")]
		internal int totalValue
		{
			[Token(Token = "0x6000686")]
			[Address(RVA = "0x2AD9D8", Offset = "0x2AD9D8", VA = "0x2AD9D8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000685")]
		[Address(RVA = "0x2AB10C", Offset = "0x2AB10C", VA = "0x2AB10C")]
		public ObjectTagContainer()
		{
		}

		[Token(Token = "0x6000687")]
		[Address(RVA = "0x2ADB4C", Offset = "0x2ADB4C", VA = "0x2ADB4C", Slot = "5")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6000688")]
		[Address(RVA = "0x2ADB50", Offset = "0x2ADB50", VA = "0x2ADB50")]
		public BuyingData[] GetBuyingData()
		{
			return null;
		}

		[Token(Token = "0x6000689")]
		[Address(RVA = "0x2ADD04", Offset = "0x2ADD04", VA = "0x2ADD04")]
		public void AddData(BuyingData[] datas)
		{
		}

		[Token(Token = "0x600068A")]
		[Address(RVA = "0x2ADD84", Offset = "0x2ADD84", VA = "0x2ADD84")]
		public void AddData(BuyingData newData)
		{
		}

		[Token(Token = "0x600068B")]
		[Address(RVA = "0x2AB534", Offset = "0x2AB534", VA = "0x2AB534", Slot = "6")]
		public virtual void AddData(BuyingData newData, int amountOverride)
		{
		}

		[Token(Token = "0x600068C")]
		[Address(RVA = "0x2ADDC0", Offset = "0x2ADDC0", VA = "0x2ADDC0")]
		public void Clear()
		{
		}

		[Token(Token = "0x600068D")]
		[Address(RVA = "0x2ADF68", Offset = "0x2ADF68", VA = "0x2ADF68", Slot = "7")]
		public virtual void OnTagTrigger(ObjectTag tag)
		{
		}

		[Token(Token = "0x600068E")]
		[Address(RVA = "0x2AE17C", Offset = "0x2AE17C", VA = "0x2AE17C", Slot = "4")]
		public override void ReceiveTag(ObjectTag tagSent)
		{
		}
	}
	[Token(Token = "0x2000107")]
	public class ObjectTagHintManager : EventTrigger
	{
		[Token(Token = "0x4000788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private int HintID;

		[Token(Token = "0x4000789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ObjectTag objTag;

		[Token(Token = "0x400078A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private string textToDisplay;

		[Token(Token = "0x400078B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private NVRHand hand;

		[Token(Token = "0x400078C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Button button;

		[Token(Token = "0x400078D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Tweener tween;

		[Token(Token = "0x400078E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private string type;

		[Token(Token = "0x600068F")]
		[Address(RVA = "0x2AE1B8", Offset = "0x2AE1B8", VA = "0x2AE1B8")]
		public ObjectTagHintManager()
		{
		}

		[Token(Token = "0x6000690")]
		[Address(RVA = "0x2AE258", Offset = "0x2AE258", VA = "0x2AE258")]
		private void Start()
		{
		}

		[Token(Token = "0x6000691")]
		[Address(RVA = "0x2AE330", Offset = "0x2AE330", VA = "0x2AE330")]
		private void RefreshHint()
		{
		}

		[Token(Token = "0x6000692")]
		[Address(RVA = "0x2AE684", Offset = "0x2AE684", VA = "0x2AE684", Slot = "21")]
		public override void OnPointerEnter(PointerEventData data)
		{
		}

		[Token(Token = "0x6000693")]
		[Address(RVA = "0x2AEA9C", Offset = "0x2AEA9C", VA = "0x2AEA9C", Slot = "27")]
		public override void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000694")]
		[Address(RVA = "0x2AEABC", Offset = "0x2AEABC", VA = "0x2AEABC")]
		private void PlayParticle()
		{
		}

		[Token(Token = "0x6000695")]
		[Address(RVA = "0x2AEE04", Offset = "0x2AEE04", VA = "0x2AEE04", Slot = "22")]
		public override void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000696")]
		[Address(RVA = "0x2AEEF4", Offset = "0x2AEEF4", VA = "0x2AEEF4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000697")]
		[Address(RVA = "0x2AEEF8", Offset = "0x2AEEF8", VA = "0x2AEEF8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000698")]
		[Address(RVA = "0x2AE7D4", Offset = "0x2AE7D4", VA = "0x2AE7D4")]
		private void Animation()
		{
		}

		[Token(Token = "0x6000699")]
		[Address(RVA = "0x2AE91C", Offset = "0x2AE91C", VA = "0x2AE91C")]
		public void ShowHint(PointerEventData data)
		{
		}

		[Token(Token = "0x600069A")]
		[Address(RVA = "0x2AEE24", Offset = "0x2AEE24", VA = "0x2AEE24")]
		public void HideHint()
		{
		}
	}
	[Token(Token = "0x2000108")]
	public abstract class ObjectTagReceiver : MonoBehaviour
	{
		[Token(Token = "0x600069B")]
		[Address(RVA = "0x29B664", Offset = "0x29B664", VA = "0x29B664")]
		protected ObjectTagReceiver()
		{
		}

		[Token(Token = "0x600069C")]
		public abstract void ReceiveTag(ObjectTag tag);
	}
	[Token(Token = "0x2000109")]
	public class PlayerStuffContainer : ObjectTagContainer
	{
		[Token(Token = "0x400078F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private TraderMaster _trader;

		[Token(Token = "0x170000A7")]
		private TraderMaster trader
		{
			[Token(Token = "0x600069E")]
			[Address(RVA = "0x2AEF00", Offset = "0x2AEF00", VA = "0x2AEF00")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A8")]
		public int Skillpoint
		{
			[Token(Token = "0x600069F")]
			[Address(RVA = "0x2AEFD0", Offset = "0x2AEFD0", VA = "0x2AEFD0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60006A0")]
			[Address(RVA = "0x2AF1B4", Offset = "0x2AF1B4", VA = "0x2AF1B4")]
			set
			{
			}
		}

		[Token(Token = "0x600069D")]
		[Address(RVA = "0x2AEEFC", Offset = "0x2AEEFC", VA = "0x2AEEFC")]
		public PlayerStuffContainer()
		{
		}

		[Token(Token = "0x60006A1")]
		[Address(RVA = "0x2AF4F4", Offset = "0x2AF4F4", VA = "0x2AF4F4", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60006A2")]
		[Address(RVA = "0x2AF63C", Offset = "0x2AF63C", VA = "0x2AF63C")]
		private void OnPlayerStuffAddedHandler(BuyingData data, int amount)
		{
		}

		[Token(Token = "0x60006A3")]
		[Address(RVA = "0x2AF654", Offset = "0x2AF654", VA = "0x2AF654", Slot = "7")]
		public override void OnTagTrigger(ObjectTag tag)
		{
		}

		[Token(Token = "0x60006A4")]
		[Address(RVA = "0x2AF8D4", Offset = "0x2AF8D4", VA = "0x2AF8D4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60006A5")]
		[Address(RVA = "0x2AF8E0", Offset = "0x2AF8E0", VA = "0x2AF8E0")]
		public void PullPlayerStuff()
		{
		}

		[Token(Token = "0x60006A6")]
		[Address(RVA = "0x2AFA50", Offset = "0x2AFA50", VA = "0x2AFA50")]
		public void ReturnToPlayer()
		{
		}

		[Token(Token = "0x60006A7")]
		[Address(RVA = "0x2AFDC4", Offset = "0x2AFDC4", VA = "0x2AFDC4")]
		public void ClearPlayerStuff()
		{
		}

		[Token(Token = "0x60006A8")]
		[Address(RVA = "0x2AFE58", Offset = "0x2AFE58", VA = "0x2AFE58")]
		public void ClearPlayerStuff(Predicate<BuyingData> ShouldDeleteData)
		{
		}
	}
	[Token(Token = "0x200010A")]
	public class RewardTag : MonoBehaviour
	{
		[Token(Token = "0x4000790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private Image objectSprite;

		[Token(Token = "0x4000791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private TextMeshProUGUI quantityTxt;

		[Token(Token = "0x4000792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private SubJob subjob;

		[Token(Token = "0x4000793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal string objectGiven;

		[Token(Token = "0x4000794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal int quantityGiven;

		[Token(Token = "0x4000795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool initialized;

		[Token(Token = "0x60006A9")]
		[Address(RVA = "0x2AFEF4", Offset = "0x2AFEF4", VA = "0x2AFEF4")]
		public RewardTag()
		{
		}

		[Token(Token = "0x60006AA")]
		[Address(RVA = "0x2AFEFC", Offset = "0x2AFEFC", VA = "0x2AFEFC")]
		private void Init()
		{
		}

		[Token(Token = "0x60006AB")]
		[Address(RVA = "0x2AA97C", Offset = "0x2AA97C", VA = "0x2AA97C")]
		public void SetTag(SubJob _subjob)
		{
		}
	}
	[Token(Token = "0x200010B")]
	public class StateTag : MonoBehaviour
	{
		[Token(Token = "0x4000796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool value;

		[Token(Token = "0x4000797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Color positiveColor;

		[Token(Token = "0x4000798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Sprite positiveImg;

		[Token(Token = "0x4000799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Color negativeColor;

		[Token(Token = "0x400079A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Sprite negativeImg;

		[Token(Token = "0x400079B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Image colorPiece;

		[Token(Token = "0x400079C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Image stateImg;

		[Token(Token = "0x400079D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool initialized;

		[Token(Token = "0x60006AC")]
		[Address(RVA = "0x2B1D94", Offset = "0x2B1D94", VA = "0x2B1D94")]
		public StateTag()
		{
		}

		[Token(Token = "0x60006AD")]
		[Address(RVA = "0x2B1DF4", Offset = "0x2B1DF4", VA = "0x2B1DF4")]
		private void Initialize()
		{
		}

		[Token(Token = "0x60006AE")]
		[Address(RVA = "0x2A9D0C", Offset = "0x2A9D0C", VA = "0x2A9D0C")]
		public void SetState(bool newState)
		{
		}
	}
	[Token(Token = "0x200010C")]
	public class TierWrapper : MonoBehaviour
	{
		[Token(Token = "0x400079E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public GameObject[] tierTag;

		[Token(Token = "0x400079F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject superTracker;

		[Token(Token = "0x40007A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public TextMeshProUGUI text;

		[Token(Token = "0x60006AF")]
		[Address(RVA = "0x2B21C8", Offset = "0x2B21C8", VA = "0x2B21C8")]
		public TierWrapper()
		{
		}

		[Token(Token = "0x60006B0")]
		[Address(RVA = "0x2B21D0", Offset = "0x2B21D0", VA = "0x2B21D0")]
		private void Start()
		{
		}

		[Token(Token = "0x60006B1")]
		[Address(RVA = "0x2B2310", Offset = "0x2B2310", VA = "0x2B2310")]
		public void SetTier(int maxTier)
		{
		}

		[Token(Token = "0x60006B2")]
		[Address(RVA = "0x2B2418", Offset = "0x2B2418", VA = "0x2B2418")]
		public void UnlockTier(int tier)
		{
		}
	}
	[Token(Token = "0x200010D")]
	public class TradePanel : SubMenu
	{
		[Token(Token = "0x40007A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Scrollbar playerStuffScrollBar;

		[Token(Token = "0x40007A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Scrollbar marcketScrollBar;

		[Token(Token = "0x40007A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Scrollbar basketScrollBar;

		[Token(Token = "0x40007A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float tweenDuration;

		[Token(Token = "0x40007A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1691AC", Offset = "0x1691AC")]
		private static Func<TextMeshProUGUI, bool> <>f__am$cache0;

		[Token(Token = "0x40007A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1691BC", Offset = "0x1691BC")]
		private static Func<TextMeshProUGUI, Transform> <>f__am$cache1;

		[Token(Token = "0x40007A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1691CC", Offset = "0x1691CC")]
		private static Func<Button, Transform> <>f__am$cache2;

		[Token(Token = "0x60006B3")]
		[Address(RVA = "0x2B2610", Offset = "0x2B2610", VA = "0x2B2610")]
		public TradePanel()
		{
		}

		[Token(Token = "0x60006B4")]
		[Address(RVA = "0x2B2624", Offset = "0x2B2624", VA = "0x2B2624", Slot = "5")]
		public override void SetActive(bool active)
		{
		}

		[Token(Token = "0x60006B5")]
		[Address(RVA = "0x2B2650", Offset = "0x2B2650", VA = "0x2B2650", Slot = "7")]
		public override void Execute(string args)
		{
		}

		[Token(Token = "0x60006B6")]
		[Address(RVA = "0x2B29D0", Offset = "0x2B29D0", VA = "0x2B29D0")]
		private List<float> ComputeStopper(Scrollbar bar)
		{
			return null;
		}

		[Token(Token = "0x60006B7")]
		[Address(RVA = "0x2B2E5C", Offset = "0x2B2E5C", VA = "0x2B2E5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1691DC", Offset = "0x1691DC")]
		private static bool <ComputeStopper>m__0(TextMeshProUGUI t)
		{
			return default(bool);
		}

		[Token(Token = "0x60006B8")]
		[Address(RVA = "0x2B2F10", Offset = "0x2B2F10", VA = "0x2B2F10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1691EC", Offset = "0x1691EC")]
		private static Transform <ComputeStopper>m__1(TextMeshProUGUI b)
		{
			return null;
		}

		[Token(Token = "0x60006B9")]
		[Address(RVA = "0x2B2F38", Offset = "0x2B2F38", VA = "0x2B2F38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1691FC", Offset = "0x1691FC")]
		private static Transform <ComputeStopper>m__2(Button b)
		{
			return null;
		}
	}
	[Token(Token = "0x200010E")]
	public class TraderMaster : MenusMaster
	{
		[Token(Token = "0x40007A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static TraderMaster Instance;

		[Token(Token = "0x40007A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Action<BuyingData, int> OnPlayerStuffAdded;

		[Token(Token = "0x40007AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Image background;

		[Token(Token = "0x40007AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Animator boxAnim;

		[Token(Token = "0x40007AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int colorIndex;

		[Token(Token = "0x40007AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal List<BuyingData> playerStuff;

		[Token(Token = "0x40007AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal DealerTradeScript tradeScript;

		[Token(Token = "0x40007AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		internal DealerJobScript jobScript;

		[Token(Token = "0x40007B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GraphicRaycaster raycaster;

		[Token(Token = "0x40007B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int jobsDoneInOneDay;

		[Token(Token = "0x40007B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dude[] dudes;

		[Token(Token = "0x60006BA")]
		[Address(RVA = "0x2B2F60", Offset = "0x2B2F60", VA = "0x2B2F60")]
		public TraderMaster()
		{
		}

		[Token(Token = "0x60006BB")]
		[Address(RVA = "0x2B2FEC", Offset = "0x2B2FEC", VA = "0x2B2FEC", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60006BC")]
		[Address(RVA = "0x2B2FF0", Offset = "0x2B2FF0", VA = "0x2B2FF0")]
		public void Initialize()
		{
		}

		[Token(Token = "0x60006BD")]
		[Address(RVA = "0x2B31C4", Offset = "0x2B31C4", VA = "0x2B31C4")]
		public void AddPlayerStuff(BuyingData[] datas)
		{
		}

		[Token(Token = "0x60006BE")]
		[Address(RVA = "0x2B3244", Offset = "0x2B3244", VA = "0x2B3244")]
		public void AddPlayerStuff(BuyingData newData)
		{
		}

		[Token(Token = "0x60006BF")]
		[Address(RVA = "0x2B3280", Offset = "0x2B3280", VA = "0x2B3280", Slot = "10")]
		public virtual void AddPlayerStuff(BuyingData newData, int amount)
		{
		}

		[Token(Token = "0x60006C0")]
		[Address(RVA = "0x2B35C4", Offset = "0x2B35C4", VA = "0x2B35C4")]
		public void JobDone()
		{
		}

		[Token(Token = "0x60006C1")]
		[Address(RVA = "0x2B35D4", Offset = "0x2B35D4", VA = "0x2B35D4", Slot = "5")]
		protected override void SetButton(Button button, Menu menu)
		{
		}

		[Token(Token = "0x60006C2")]
		[Address(RVA = "0x2B3670", Offset = "0x2B3670", VA = "0x2B3670", Slot = "8")]
		public override void Naviguate(string arg, Menu menu)
		{
		}

		[Token(Token = "0x60006C3")]
		[Address(RVA = "0x2B38F4", Offset = "0x2B38F4", VA = "0x2B38F4", Slot = "9")]
		public override void Action(string arg, Menu menu)
		{
		}

		[Token(Token = "0x60006C4")]
		[Address(RVA = "0x2B3D94", Offset = "0x2B3D94", VA = "0x2B3D94")]
		public void DealOpen()
		{
		}

		[Token(Token = "0x60006C5")]
		[Address(RVA = "0x2B3FE4", Offset = "0x2B3FE4", VA = "0x2B3FE4")]
		private void AchievementJobsDoneInOneDay()
		{
		}

		[Token(Token = "0x60006C6")]
		[Address(RVA = "0x2B4144", Offset = "0x2B4144", VA = "0x2B4144")]
		private void ReveillerDudes()
		{
		}

		[Token(Token = "0x60006C7")]
		[Address(RVA = "0x2B42C4", Offset = "0x2B42C4", VA = "0x2B42C4")]
		public void EndPrisonDealClosed()
		{
		}

		[Token(Token = "0x60006C8")]
		[Address(RVA = "0x2B3A20", Offset = "0x2B3A20", VA = "0x2B3A20")]
		public void DealClosed()
		{
		}
	}
}
[Token(Token = "0x200010F")]
public class DetectableObject : MonoBehaviour
{
	[Token(Token = "0x40007B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[HideInInspector]
	public Collider Hideout;

	[Token(Token = "0x40007B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Collider col;

	[Token(Token = "0x40007B5")]
	private const string HideoutTag = "Hideout";

	[Token(Token = "0x170000A9")]
	[HideInInspector]
	public bool isHidden
	{
		[Token(Token = "0x60006CA")]
		[Address(RVA = "0x209B08", Offset = "0x209B08", VA = "0x209B08")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60006C9")]
	[Address(RVA = "0x209B00", Offset = "0x209B00", VA = "0x209B00")]
	public DetectableObject()
	{
	}

	[Token(Token = "0x60006CB")]
	[Address(RVA = "0x209E5C", Offset = "0x209E5C", VA = "0x209E5C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60006CC")]
	[Address(RVA = "0x209E98", Offset = "0x209E98", VA = "0x209E98")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60006CD")]
	[Address(RVA = "0x209ED4", Offset = "0x209ED4", VA = "0x209ED4")]
	private void Start()
	{
	}

	[Token(Token = "0x60006CE")]
	[Address(RVA = "0x209FA0", Offset = "0x209FA0", VA = "0x209FA0")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x60006CF")]
	[Address(RVA = "0x20A060", Offset = "0x20A060", VA = "0x20A060")]
	private void OnTriggerExit(Collider other)
	{
	}
}
[Token(Token = "0x2000110")]
public class Hideout : MonoBehaviour
{
	[Token(Token = "0x40007B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[HideInInspector]
	public bool isHidden;

	[Token(Token = "0x40007B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
	[HideInInspector]
	public bool halfHidden1;

	[Token(Token = "0x40007B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
	[HideInInspector]
	public bool halfHidden2;

	[Token(Token = "0x60006D0")]
	[Address(RVA = "0x224008", Offset = "0x224008", VA = "0x224008")]
	public Hideout()
	{
	}

	[Token(Token = "0x60006D1")]
	[Address(RVA = "0x224010", Offset = "0x224010", VA = "0x224010")]
	private void Update()
	{
	}

	[Token(Token = "0x60006D2")]
	[Address(RVA = "0x224038", Offset = "0x224038", VA = "0x224038")]
	private void OnTriggerStay(Collider col)
	{
	}

	[Token(Token = "0x60006D3")]
	[Address(RVA = "0x2241A8", Offset = "0x2241A8", VA = "0x2241A8")]
	private void OnTriggerExit()
	{
	}
}
[Token(Token = "0x2000111")]
public class DrawCollider : MonoBehaviour
{
	[Token(Token = "0x40007B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool drawChildren;

	[Token(Token = "0x40007BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
	public bool solid;

	[Token(Token = "0x40007BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
	public bool wires;

	[Token(Token = "0x40007BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Color colorActive;

	[Token(Token = "0x40007BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool drawInactive;

	[Token(Token = "0x40007BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Color colorInactive;

	[Token(Token = "0x60006D4")]
	[Address(RVA = "0x20A124", Offset = "0x20A124", VA = "0x20A124")]
	public DrawCollider()
	{
	}

	[Token(Token = "0x60006D5")]
	[Address(RVA = "0x20A1D4", Offset = "0x20A1D4", VA = "0x20A1D4")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60006D6")]
	[Address(RVA = "0x20A1D8", Offset = "0x20A1D8", VA = "0x20A1D8")]
	private void Draw()
	{
	}

	[Token(Token = "0x60006D7")]
	[Address(RVA = "0x20A4CC", Offset = "0x20A4CC", VA = "0x20A4CC")]
	private void DrawCube(BoxCollider collider)
	{
	}

	[Token(Token = "0x60006D8")]
	[Address(RVA = "0x20A840", Offset = "0x20A840", VA = "0x20A840")]
	private void DrawSphere(SphereCollider collider)
	{
	}

	[Token(Token = "0x60006D9")]
	[Address(RVA = "0x20AB88", Offset = "0x20AB88", VA = "0x20AB88")]
	private void DrawCapsule(CapsuleCollider collider)
	{
	}
}
[Token(Token = "0x2000112")]
public class DudeCell : MonoBehaviour
{
	[Token(Token = "0x40007BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Dude occupant;

	[Token(Token = "0x60006DA")]
	[Address(RVA = "0x20C134", Offset = "0x20C134", VA = "0x20C134")]
	public DudeCell()
	{
	}
}
[Token(Token = "0x2000113")]
public class EndGameManager : MonoBehaviour
{
	[Token(Token = "0x60006DB")]
	[Address(RVA = "0x20C174", Offset = "0x20C174", VA = "0x20C174")]
	public EndGameManager()
	{
	}

	[Token(Token = "0x60006DC")]
	[Address(RVA = "0x20C17C", Offset = "0x20C17C", VA = "0x20C17C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006DD")]
	[Address(RVA = "0x20C970", Offset = "0x20C970", VA = "0x20C970")]
	private void OnDestroy()
	{
	}
}
[Token(Token = "0x2000114")]
public class GeneriqueManager : MonoBehaviour
{
	[Token(Token = "0x200030F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16926C", Offset = "0x16926C")]
	private sealed class <GoToMenu>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40011F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal GeneriqueManager $this;

		[Token(Token = "0x40011F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x40011F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x40011F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x1700027D")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x600178B")]
			[Address(RVA = "0x21FB10", Offset = "0x21FB10", VA = "0x21FB10", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700027E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600178C")]
			[Address(RVA = "0x21FB18", Offset = "0x21FB18", VA = "0x21FB18", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001789")]
		[Address(RVA = "0x21F974", Offset = "0x21F974", VA = "0x21F974")]
		[DebuggerHidden]
		public <GoToMenu>c__Iterator0()
		{
		}

		[Token(Token = "0x600178A")]
		[Address(RVA = "0x21F97C", Offset = "0x21F97C", VA = "0x21F97C", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600178D")]
		[Address(RVA = "0x21FB20", Offset = "0x21FB20", VA = "0x21FB20", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x600178E")]
		[Address(RVA = "0x21FB34", Offset = "0x21FB34", VA = "0x21FB34", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x40007C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float timePerSlide;

	[Token(Token = "0x40007C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int slideNumber;

	[Token(Token = "0x40007C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private TextMeshProUGUI _text;

	[Token(Token = "0x40007C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float _timer;

	[Token(Token = "0x40007C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int _actualSlide;

	[Token(Token = "0x40007C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool ended;

	[Token(Token = "0x60006DE")]
	[Address(RVA = "0x21F600", Offset = "0x21F600", VA = "0x21F600")]
	public GeneriqueManager()
	{
	}

	[Token(Token = "0x60006DF")]
	[Address(RVA = "0x21F608", Offset = "0x21F608", VA = "0x21F608")]
	private void Start()
	{
	}

	[Token(Token = "0x60006E0")]
	[Address(RVA = "0x21F77C", Offset = "0x21F77C", VA = "0x21F77C")]
	private void Update()
	{
	}

	[Token(Token = "0x60006E1")]
	[Address(RVA = "0x21F8F4", Offset = "0x21F8F4", VA = "0x21F8F4")]
	[DebuggerHidden]
	private IEnumerator GoToMenu()
	{
		return null;
	}
}
[Token(Token = "0x2000115")]
public class GoldenBobbySpawner : MonoBehaviour
{
	[Token(Token = "0x40007C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject bobbyPrefab;

	[Token(Token = "0x40007C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject trackedBobby;

	[Token(Token = "0x40007C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public ParticleSystem particle;

	[Token(Token = "0x40007C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 _baseLocalPosition;

	[Token(Token = "0x40007CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Quaternion _baseRotation;

	[Token(Token = "0x40007CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public List<GameObject> trackedBobbys;

	[Token(Token = "0x40007CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int nombreMax;

	[Token(Token = "0x60006E2")]
	[Address(RVA = "0x222394", Offset = "0x222394", VA = "0x222394")]
	public GoldenBobbySpawner()
	{
	}

	[Token(Token = "0x60006E3")]
	[Address(RVA = "0x222428", Offset = "0x222428", VA = "0x222428")]
	private void Start()
	{
	}

	[Token(Token = "0x60006E4")]
	[Address(RVA = "0x222540", Offset = "0x222540", VA = "0x222540")]
	private void Update()
	{
	}
}
[Serializable]
[Token(Token = "0x2000116")]
public class staticDude
{
	[Token(Token = "0x40007CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public Animator animator;

	[Token(Token = "0x40007CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string trigger;

	[Token(Token = "0x40007CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool isRandom;

	[Token(Token = "0x60006E5")]
	[Address(RVA = "0x29EF1C", Offset = "0x29EF1C", VA = "0x29EF1C")]
	public staticDude()
	{
	}
}
[Token(Token = "0x2000117")]
public class StaticDudeManager : MonoBehaviour
{
	[Token(Token = "0x40007D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public staticDude[] staticDudes;

	[Token(Token = "0x60006E6")]
	[Address(RVA = "0x29EF24", Offset = "0x29EF24", VA = "0x29EF24")]
	public StaticDudeManager()
	{
	}

	[Token(Token = "0x60006E7")]
	[Address(RVA = "0x29EF2C", Offset = "0x29EF2C", VA = "0x29EF2C")]
	private void Start()
	{
	}
}
[Token(Token = "0x2000118")]
public class Eye : MonoBehaviour
{
	[Token(Token = "0x60006E8")]
	[Address(RVA = "0x20C9F0", Offset = "0x20C9F0", VA = "0x20C9F0")]
	public Eye()
	{
	}

	[Token(Token = "0x60006E9")]
	[Address(RVA = "0x20C9F8", Offset = "0x20C9F8", VA = "0x20C9F8")]
	private void Start()
	{
	}

	[Token(Token = "0x60006EA")]
	[Address(RVA = "0x20C9FC", Offset = "0x20C9FC", VA = "0x20C9FC")]
	private void Update()
	{
	}
}
[Token(Token = "0x2000119")]
public class FogManager : MonoBehaviour
{
	[Token(Token = "0x40007D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static FogManager Instance;

	[Token(Token = "0x40007D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private GameObject player;

	[Token(Token = "0x40007D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Camera camera;

	[Token(Token = "0x40007D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Color background;

	[Token(Token = "0x170000AA")]
	public static bool Fog
	{
		[Token(Token = "0x60006EC")]
		[Address(RVA = "0x210934", Offset = "0x210934", VA = "0x210934")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60006ED")]
		[Address(RVA = "0x20C50C", Offset = "0x20C50C", VA = "0x20C50C")]
		set
		{
		}
	}

	[Token(Token = "0x60006EB")]
	[Address(RVA = "0x21092C", Offset = "0x21092C", VA = "0x21092C")]
	public FogManager()
	{
	}

	[Token(Token = "0x60006EE")]
	[Address(RVA = "0x210940", Offset = "0x210940", VA = "0x210940")]
	private void SetFog(bool newValue)
	{
	}

	[Token(Token = "0x60006EF")]
	[Address(RVA = "0x2109C0", Offset = "0x2109C0", VA = "0x2109C0")]
	private void Update()
	{
	}

	[Token(Token = "0x60006F0")]
	[Address(RVA = "0x210A54", Offset = "0x210A54", VA = "0x210A54")]
	private void Awake()
	{
	}
}
[Token(Token = "0x200011A")]
public enum lesMois
{
	[Token(Token = "0x40007D6")]
	Winter = 1,
	[Token(Token = "0x40007D7")]
	Spring,
	[Token(Token = "0x40007D8")]
	Summer,
	[Token(Token = "0x40007D9")]
	Fall
}
[Token(Token = "0x200011B")]
public enum lesJours
{
	[Token(Token = "0x40007DB")]
	Monday = 1,
	[Token(Token = "0x40007DC")]
	Tuesday,
	[Token(Token = "0x40007DD")]
	Wednesday,
	[Token(Token = "0x40007DE")]
	Thursday,
	[Token(Token = "0x40007DF")]
	Friday,
	[Token(Token = "0x40007E0")]
	Saturday,
	[Token(Token = "0x40007E1")]
	Sunday
}
[Serializable]
[Token(Token = "0x200011C")]
public class DayNightShaderValue
{
	[Token(Token = "0x40007E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public Color DayFilter;

	[Token(Token = "0x40007E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float DayFilterIntensity;

	[Token(Token = "0x40007E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Color NightFilter;

	[Token(Token = "0x40007E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float NightFilterIntensity;

	[Token(Token = "0x40007E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Color AlarmFilter;

	[Token(Token = "0x40007E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float AlarmFilterIntensity;

	[Token(Token = "0x40007E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float DayExposure;

	[Token(Token = "0x40007E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float NightExposure;

	[Token(Token = "0x60006F1")]
	[Address(RVA = "0x288FCC", Offset = "0x288FCC", VA = "0x288FCC")]
	public DayNightShaderValue()
	{
	}
}
[Serializable]
[Token(Token = "0x200011D")]
public class BaseShaderValue
{
	[Token(Token = "0x40007EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float Saturation;

	[Token(Token = "0x40007EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public AnimationCurve Red;

	[Token(Token = "0x40007EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AnimationCurve Green;

	[Token(Token = "0x40007ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public AnimationCurve Blur;

	[Token(Token = "0x40007EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve Combined;

	[Token(Token = "0x40007EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Color background;

	[Token(Token = "0x60006F2")]
	[Address(RVA = "0x272BE0", Offset = "0x272BE0", VA = "0x272BE0")]
	public BaseShaderValue()
	{
	}
}
[Token(Token = "0x200011E")]
public enum GameMode
{
	[Token(Token = "0x40007F1")]
	Campaign,
	[Token(Token = "0x40007F2")]
	Arcade,
	[Token(Token = "0x40007F3")]
	Sandbox
}
[Token(Token = "0x200011F")]
public class GameSystemScript : MonoBehaviour
{
	[Token(Token = "0x2000310")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16966C", Offset = "0x16966C")]
	private sealed class <LateStart>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40011F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal GameSystemScript $this;

		[Token(Token = "0x40011F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x40011F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x40011FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x1700027F")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6001791")]
			[Address(RVA = "0x2180F8", Offset = "0x2180F8", VA = "0x2180F8", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000280")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001792")]
			[Address(RVA = "0x218100", Offset = "0x218100", VA = "0x218100", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600178F")]
		[Address(RVA = "0x213278", Offset = "0x213278", VA = "0x213278")]
		[DebuggerHidden]
		public <LateStart>c__Iterator0()
		{
		}

		[Token(Token = "0x6001790")]
		[Address(RVA = "0x217E64", Offset = "0x217E64", VA = "0x217E64", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001793")]
		[Address(RVA = "0x218108", Offset = "0x218108", VA = "0x218108", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001794")]
		[Address(RVA = "0x21811C", Offset = "0x21811C", VA = "0x21811C", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000311")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1696CC", Offset = "0x1696CC")]
	private sealed class <ChangeFilter>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40011FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal DrawingShader[] <cellShadings>__0;

		[Token(Token = "0x40011FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal ColorSuite[] <colorManagers>__0;

		[Token(Token = "0x40011FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal float <i>__1;

		[Token(Token = "0x40011FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal DrawingShader[] $locvar0;

		[Token(Token = "0x40011FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal int $locvar1;

		[Token(Token = "0x4001200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal ColorSuite[] $locvar2;

		[Token(Token = "0x4001201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal int $locvar3;

		[Token(Token = "0x4001202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal DrawingShader[] $locvar4;

		[Token(Token = "0x4001203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal int $locvar5;

		[Token(Token = "0x4001204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		internal GameSystemScript $this;

		[Token(Token = "0x4001205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal object $current;

		[Token(Token = "0x4001206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		internal bool $disposing;

		[Token(Token = "0x4001207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal int $PC;

		[Token(Token = "0x17000281")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6001797")]
			[Address(RVA = "0x216EC8", Offset = "0x216EC8", VA = "0x216EC8", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000282")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001798")]
			[Address(RVA = "0x216ED0", Offset = "0x216ED0", VA = "0x216ED0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001795")]
		[Address(RVA = "0x2147B4", Offset = "0x2147B4", VA = "0x2147B4")]
		[DebuggerHidden]
		public <ChangeFilter>c__Iterator1()
		{
		}

		[Token(Token = "0x6001796")]
		[Address(RVA = "0x216A90", Offset = "0x216A90", VA = "0x216A90", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001799")]
		[Address(RVA = "0x216ED8", Offset = "0x216ED8", VA = "0x216ED8", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x600179A")]
		[Address(RVA = "0x216EEC", Offset = "0x216EEC", VA = "0x216EEC", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000312")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16972C", Offset = "0x16972C")]
	private sealed class <ClockSkip>c__Iterator2 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4001208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal GameObject o;

		[Token(Token = "0x4001209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal float <i>__1;

		[Token(Token = "0x400120A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal GameSystemScript $this;

		[Token(Token = "0x400120B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal object $current;

		[Token(Token = "0x400120C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal bool $disposing;

		[Token(Token = "0x400120D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal int $PC;

		[Token(Token = "0x17000283")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x600179D")]
			[Address(RVA = "0x2172BC", Offset = "0x2172BC", VA = "0x2172BC", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000284")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600179E")]
			[Address(RVA = "0x2172C4", Offset = "0x2172C4", VA = "0x2172C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600179B")]
		[Address(RVA = "0x214854", Offset = "0x214854", VA = "0x214854")]
		[DebuggerHidden]
		public <ClockSkip>c__Iterator2()
		{
		}

		[Token(Token = "0x600179C")]
		[Address(RVA = "0x216F70", Offset = "0x216F70", VA = "0x216F70", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600179F")]
		[Address(RVA = "0x2172CC", Offset = "0x2172CC", VA = "0x2172CC", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60017A0")]
		[Address(RVA = "0x2172E0", Offset = "0x2172E0", VA = "0x2172E0", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000313")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16978C", Offset = "0x16978C")]
	private sealed class <BackToViz>c__Iterator3 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x400120E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal GameSystemScript $this;

		[Token(Token = "0x400120F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x4001210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x4001211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x17000285")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60017A3")]
			[Address(RVA = "0x2169E8", Offset = "0x2169E8", VA = "0x2169E8", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000286")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017A4")]
			[Address(RVA = "0x2169F0", Offset = "0x2169F0", VA = "0x2169F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017A1")]
		[Address(RVA = "0x214920", Offset = "0x214920", VA = "0x214920")]
		[DebuggerHidden]
		public <BackToViz>c__Iterator3()
		{
		}

		[Token(Token = "0x60017A2")]
		[Address(RVA = "0x216898", Offset = "0x216898", VA = "0x216898", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017A5")]
		[Address(RVA = "0x2169F8", Offset = "0x2169F8", VA = "0x2169F8", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60017A6")]
		[Address(RVA = "0x216A0C", Offset = "0x216A0C", VA = "0x216A0C", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000314")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1697EC", Offset = "0x1697EC")]
	private sealed class <whiteFlash>c__Iterator4 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4001212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal GameSystemScript $this;

		[Token(Token = "0x4001213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x4001214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x4001215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x17000287")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60017A9")]
			[Address(RVA = "0x219718", Offset = "0x219718", VA = "0x219718", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000288")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017AA")]
			[Address(RVA = "0x219720", Offset = "0x219720", VA = "0x219720", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017A7")]
		[Address(RVA = "0x2149A8", Offset = "0x2149A8", VA = "0x2149A8")]
		[DebuggerHidden]
		public <whiteFlash>c__Iterator4()
		{
		}

		[Token(Token = "0x60017A8")]
		[Address(RVA = "0x219510", Offset = "0x219510", VA = "0x219510", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017AB")]
		[Address(RVA = "0x219728", Offset = "0x219728", VA = "0x219728", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60017AC")]
		[Address(RVA = "0x21973C", Offset = "0x21973C", VA = "0x21973C", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000315")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16984C", Offset = "0x16984C")]
	private sealed class <MorningSearchFeedback>c__Iterator5 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4001216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal GameSystemScript $this;

		[Token(Token = "0x4001217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x4001218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x4001219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x17000289")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60017AF")]
			[Address(RVA = "0x2182C4", Offset = "0x2182C4", VA = "0x2182C4", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700028A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017B0")]
			[Address(RVA = "0x2182CC", Offset = "0x2182CC", VA = "0x2182CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017AD")]
		[Address(RVA = "0x214CCC", Offset = "0x214CCC", VA = "0x214CCC")]
		[DebuggerHidden]
		public <MorningSearchFeedback>c__Iterator5()
		{
		}

		[Token(Token = "0x60017AE")]
		[Address(RVA = "0x2181A0", Offset = "0x2181A0", VA = "0x2181A0", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017B1")]
		[Address(RVA = "0x2182D4", Offset = "0x2182D4", VA = "0x2182D4", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60017B2")]
		[Address(RVA = "0x2182E8", Offset = "0x2182E8", VA = "0x2182E8", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000316")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1698AC", Offset = "0x1698AC")]
	private sealed class <alarmFeedback>c__Iterator6 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x400121A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal DrawingShader[] <CellShadings>__0;

		[Token(Token = "0x400121B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal int <j>__1;

		[Token(Token = "0x400121C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal float <i>__2;

		[Token(Token = "0x400121D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal DrawingShader[] $locvar0;

		[Token(Token = "0x400121E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal int $locvar1;

		[Token(Token = "0x400121F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal float BaseIntensity;

		[Token(Token = "0x4001220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal Color BaseColor;

		[Token(Token = "0x4001221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal float <i>__3;

		[Token(Token = "0x4001222")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		internal DrawingShader[] $locvar2;

		[Token(Token = "0x4001223")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal int $locvar3;

		[Token(Token = "0x4001224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		internal GameSystemScript $this;

		[Token(Token = "0x4001225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal object $current;

		[Token(Token = "0x4001226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		internal bool $disposing;

		[Token(Token = "0x4001227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal int $PC;

		[Token(Token = "0x1700028B")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60017B5")]
			[Address(RVA = "0x2167F0", Offset = "0x2167F0", VA = "0x2167F0", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700028C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017B6")]
			[Address(RVA = "0x2167F8", Offset = "0x2167F8", VA = "0x2167F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017B3")]
		[Address(RVA = "0x214CD4", Offset = "0x214CD4", VA = "0x214CD4")]
		[DebuggerHidden]
		public <alarmFeedback>c__Iterator6()
		{
		}

		[Token(Token = "0x60017B4")]
		[Address(RVA = "0x2162F4", Offset = "0x2162F4", VA = "0x2162F4", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017B7")]
		[Address(RVA = "0x216800", Offset = "0x216800", VA = "0x216800", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60017B8")]
		[Address(RVA = "0x216814", Offset = "0x216814", VA = "0x216814", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000317")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16990C", Offset = "0x16990C")]
	private sealed class <WaitForGarde>c__Iterator7 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4001228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal GameSystemScript $this;

		[Token(Token = "0x4001229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x400122A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x400122B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x1700028D")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60017BB")]
			[Address(RVA = "0x219468", Offset = "0x219468", VA = "0x219468", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700028E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017BC")]
			[Address(RVA = "0x219470", Offset = "0x219470", VA = "0x219470", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017B9")]
		[Address(RVA = "0x215438", Offset = "0x215438", VA = "0x215438")]
		[DebuggerHidden]
		public <WaitForGarde>c__Iterator7()
		{
		}

		[Token(Token = "0x60017BA")]
		[Address(RVA = "0x218C38", Offset = "0x218C38", VA = "0x218C38", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017BD")]
		[Address(RVA = "0x219478", Offset = "0x219478", VA = "0x219478", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60017BE")]
		[Address(RVA = "0x21948C", Offset = "0x21948C", VA = "0x21948C", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000318")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16996C", Offset = "0x16996C")]
	private sealed class <FadeToTutorial>c__Iterator8 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x400122C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal GameSystemScript $this;

		[Token(Token = "0x400122D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x400122E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x400122F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x1700028F")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60017C1")]
			[Address(RVA = "0x217DBC", Offset = "0x217DBC", VA = "0x217DBC", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000290")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017C2")]
			[Address(RVA = "0x217DC4", Offset = "0x217DC4", VA = "0x217DC4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017BF")]
		[Address(RVA = "0x21569C", Offset = "0x21569C", VA = "0x21569C")]
		[DebuggerHidden]
		public <FadeToTutorial>c__Iterator8()
		{
		}

		[Token(Token = "0x60017C0")]
		[Address(RVA = "0x217924", Offset = "0x217924", VA = "0x217924", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017C3")]
		[Address(RVA = "0x217DCC", Offset = "0x217DCC", VA = "0x217DCC", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60017C4")]
		[Address(RVA = "0x217DE0", Offset = "0x217DE0", VA = "0x217DE0", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000319")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1699CC", Offset = "0x1699CC")]
	private sealed class <SimpleFadeToJail>c__Iterator9 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4001230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal Contour[] $locvar2;

		[Token(Token = "0x4001231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal int $locvar3;

		[Token(Token = "0x4001232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal GameSystemScript $this;

		[Token(Token = "0x4001233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal object $current;

		[Token(Token = "0x4001234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal bool $disposing;

		[Token(Token = "0x4001235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal int $PC;

		[Token(Token = "0x17000291")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60017C7")]
			[Address(RVA = "0x218B90", Offset = "0x218B90", VA = "0x218B90", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000292")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017C8")]
			[Address(RVA = "0x218B98", Offset = "0x218B98", VA = "0x218B98", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017C5")]
		[Address(RVA = "0x2157EC", Offset = "0x2157EC", VA = "0x2157EC")]
		[DebuggerHidden]
		public <SimpleFadeToJail>c__Iterator9()
		{
		}

		[Token(Token = "0x60017C6")]
		[Address(RVA = "0x218554", Offset = "0x218554", VA = "0x218554", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017C9")]
		[Address(RVA = "0x218BA0", Offset = "0x218BA0", VA = "0x218BA0", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60017CA")]
		[Address(RVA = "0x218BB4", Offset = "0x218BB4", VA = "0x218BB4", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x200031A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x169A2C", Offset = "0x169A2C")]
	private sealed class <FadeToJail>c__IteratorA : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4001236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal Contour[] $locvar0;

		[Token(Token = "0x4001237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal int $locvar1;

		[Token(Token = "0x4001238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal GameSystemScript $this;

		[Token(Token = "0x4001239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal object $current;

		[Token(Token = "0x400123A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal bool $disposing;

		[Token(Token = "0x400123B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal int $PC;

		[Token(Token = "0x17000293")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60017CD")]
			[Address(RVA = "0x21787C", Offset = "0x21787C", VA = "0x21787C", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000294")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017CE")]
			[Address(RVA = "0x217884", Offset = "0x217884", VA = "0x217884", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017CB")]
		[Address(RVA = "0x2157F4", Offset = "0x2157F4", VA = "0x2157F4")]
		[DebuggerHidden]
		public <FadeToJail>c__IteratorA()
		{
		}

		[Token(Token = "0x60017CC")]
		[Address(RVA = "0x217364", Offset = "0x217364", VA = "0x217364", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017CF")]
		[Address(RVA = "0x21788C", Offset = "0x21788C", VA = "0x21788C", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60017D0")]
		[Address(RVA = "0x2178A0", Offset = "0x2178A0", VA = "0x2178A0", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x200031B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x169A8C", Offset = "0x169A8C")]
	private sealed class <MoveObject>c__IteratorB : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x400123C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal GameObject o;

		[Token(Token = "0x400123D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x400123E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x400123F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x17000295")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60017D3")]
			[Address(RVA = "0x2184AC", Offset = "0x2184AC", VA = "0x2184AC", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000296")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017D4")]
			[Address(RVA = "0x2184B4", Offset = "0x2184B4", VA = "0x2184B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017D1")]
		[Address(RVA = "0x2158A0", Offset = "0x2158A0", VA = "0x2158A0")]
		[DebuggerHidden]
		public <MoveObject>c__IteratorB()
		{
		}

		[Token(Token = "0x60017D2")]
		[Address(RVA = "0x21836C", Offset = "0x21836C", VA = "0x21836C", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017D5")]
		[Address(RVA = "0x2184BC", Offset = "0x2184BC", VA = "0x2184BC", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60017D6")]
		[Address(RVA = "0x2184D0", Offset = "0x2184D0", VA = "0x2184D0", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x40007F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private uint DayID;

	[Token(Token = "0x40007F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private uint NightID;

	[Token(Token = "0x40007F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private uint TutorialID;

	[Token(Token = "0x40007F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private uint StingerID;

	[Token(Token = "0x40007F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private uint AlarmID;

	[Token(Token = "0x40007F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject musicPlayer;

	[Token(Token = "0x40007FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GameSystemScript Instance;

	[Token(Token = "0x40007FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool debugModeGardes;

	[Token(Token = "0x40007FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameMode Mode;

	[Token(Token = "0x40007FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float timeBonusPerObject;

	[Token(Token = "0x40007FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public bool isTutorial;

	[Token(Token = "0x40007FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	[HideInInspector]
	public bool isSubTutorial;

	[Token(Token = "0x4000800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[HideInInspector]
	public int arcadeScore;

	[Token(Token = "0x4000801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public float arcadeTotalTime;

	[Token(Token = "0x4000802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[HideInInspector]
	public bool freezeCrafting;

	[Token(Token = "0x4000803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float tempsDeLaNuit;

	[Token(Token = "0x4000804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[HideInInspector]
	public float tempsDeLaJournee;

	[Token(Token = "0x4000805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int delaiJoursAvantGardes;

	[Token(Token = "0x4000806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool nightTime;

	[Token(Token = "0x4000807")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public float valeurActuelleJour;

	[Token(Token = "0x4000808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[HideInInspector]
	public float valeurActuelleNuit;

	[Token(Token = "0x4000809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float ratioAvancementNuit;

	[Token(Token = "0x400080A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[HideInInspector]
	public float ratioAvancementJour;

	[Token(Token = "0x400080B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	public float facteurMultiplicateurAiguilles;

	[Token(Token = "0x400080C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[HideInInspector]
	public Coroutine isGoingToBed;

	[Token(Token = "0x400080D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[HideInInspector]
	public bool FreezeJourNuit;

	[Token(Token = "0x400080E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[HideInInspector]
	public List<string[]> lesCommandes;

	[Token(Token = "0x400080F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[HideInInspector]
	public List<string[]> ressourcesOffreDemande;

	[Token(Token = "0x4000810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public lesMois mois;

	[Token(Token = "0x4000811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public lesJours jour;

	[Token(Token = "0x4000812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public int laDate;

	[Token(Token = "0x4000813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int leMoisCommenceUn;

	[Token(Token = "0x4000814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[HideInInspector]
	public int secondesJouées;

	[Token(Token = "0x4000815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[HideInInspector]
	public float tempsDépart;

	[Token(Token = "0x4000816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[HideInInspector]
	public int daysPassed;

	[Token(Token = "0x4000817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[HideInInspector]
	public int dayMax;

	[Token(Token = "0x4000818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public StatistiqueData StatistiqueData;

	[Token(Token = "0x4000819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[HideInInspector]
	public List<string> objectsLost;

	[Token(Token = "0x400081A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[HideInInspector]
	public List<int> objectsLostCapacity;

	[Token(Token = "0x400081B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[HideInInspector]
	public List<string> objectsToShow;

	[Token(Token = "0x400081C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	[HideInInspector]
	public List<int> objectsNb;

	[Token(Token = "0x400081D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float PercentageLost;

	[Token(Token = "0x400081E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[HideInInspector]
	public bool fouilleIsActive;

	[Token(Token = "0x400081F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[HideInInspector]
	public List<GameObject> objToDestroy;

	[Token(Token = "0x4000820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private DetectableObject[] _detectableObjects;

	[Token(Token = "0x4000821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[HideInInspector]
	public Vector3 morningSearchHead;

	[Token(Token = "0x4000822")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private NVRHand[] bothHand;

	[Token(Token = "0x4000823")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[HideInInspector]
	public NVRHand leftHand;

	[Token(Token = "0x4000824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	[HideInInspector]
	public NVRHand rightHand;

	[Token(Token = "0x4000825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static GameObject _player;

	[Token(Token = "0x4000826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[HideInInspector]
	public ArcadeBank arcadeBank;

	[Token(Token = "0x4000827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	[HideInInspector]
	public int prisonID;

	[Token(Token = "0x4000828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[HideInInspector]
	public NameGenerator NameGenerator;

	[Token(Token = "0x4000829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public BaseShaderValue StaticShaderValues;

	[Token(Token = "0x400082A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public DayNightShaderValue DynamicShadersValues;

	[Token(Token = "0x400082B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public GameObject[] MainParticule;

	[Token(Token = "0x400082C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Color[] palette;

	[Token(Token = "0x400082D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public Color[] UIColor;

	[Token(Token = "0x400082E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public UnityEvent DayNightTrigger;

	[Token(Token = "0x400082F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	[HideInInspector]
	public UnityEvent OnTutorialBegin;

	[Token(Token = "0x4000830")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[HideInInspector]
	public UnityEvent OnTutorialEnd;

	[Token(Token = "0x4000831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	[HideInInspector]
	public UnityEvent OnFirstDay;

	[Token(Token = "0x4000832")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public float TutorialHeight;

	[Token(Token = "0x4000833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	public GameObject loadingData;

	[Token(Token = "0x4000834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[HideInInspector]
	public GameObject[] starterPack;

	[Token(Token = "0x4000835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	[HideInInspector]
	public bool newGame;

	[Token(Token = "0x4000836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10D")]
	private bool _firstDay;

	[Token(Token = "0x4000837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[HideInInspector]
	public TutorialManager tutorialManager;

	[Token(Token = "0x4000838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	[HideInInspector]
	public bool tutorialActive;

	[Token(Token = "0x4000839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private int NbItemCraftedDuringTheNight;

	[Token(Token = "0x400083A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	public int GeneralStore;

	[Token(Token = "0x400083B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private LayerMask mask;

	[Token(Token = "0x400083C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private IEnumerator CoroutineBackToViz;

	[Token(Token = "0x170000AB")]
	public static StatistiqueData Statistique
	{
		[Token(Token = "0x60006F4")]
		[Address(RVA = "0x204C68", Offset = "0x204C68", VA = "0x204C68")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000AC")]
	public bool ArcadeMode
	{
		[Token(Token = "0x60006F5")]
		[Address(RVA = "0x21114C", Offset = "0x21114C", VA = "0x21114C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000AD")]
	public bool SandboxMode
	{
		[Token(Token = "0x60006F6")]
		[Address(RVA = "0x203F3C", Offset = "0x203F3C", VA = "0x203F3C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000AE")]
	public static GameObject Player
	{
		[Token(Token = "0x60006F7")]
		[Address(RVA = "0x211BA0", Offset = "0x211BA0", VA = "0x211BA0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000AF")]
	public static Camera[] Cameras
	{
		[Token(Token = "0x60006F8")]
		[Address(RVA = "0x211C94", Offset = "0x211C94", VA = "0x211C94")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000B0")]
	public static ColorSuite[] ColorSuites
	{
		[Token(Token = "0x60006F9")]
		[Address(RVA = "0x211D08", Offset = "0x211D08", VA = "0x211D08")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000B1")]
	public static DrawingShader[] DrawingShaders
	{
		[Token(Token = "0x60006FA")]
		[Address(RVA = "0x211D7C", Offset = "0x211D7C", VA = "0x211D7C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000B2")]
	public static Contour[] Contours
	{
		[Token(Token = "0x60006FB")]
		[Address(RVA = "0x211DF0", Offset = "0x211DF0", VA = "0x211DF0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000B3")]
	public int SandboxStarterPack
	{
		[Token(Token = "0x60006FC")]
		[Address(RVA = "0x211E64", Offset = "0x211E64", VA = "0x211E64")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000B4")]
	[HideInInspector]
	public bool FirstDay
	{
		[Token(Token = "0x60006FD")]
		[Address(RVA = "0x20EE14", Offset = "0x20EE14", VA = "0x20EE14")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60006FE")]
		[Address(RVA = "0x2114B0", Offset = "0x2114B0", VA = "0x2114B0")]
		set
		{
		}
	}

	[Token(Token = "0x170000B5")]
	[HideInInspector]
	public bool canCraft
	{
		[Token(Token = "0x60006FF")]
		[Address(RVA = "0x21210C", Offset = "0x21210C", VA = "0x21210C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000B6")]
	[HideInInspector]
	public bool SkipingToDay
	{
		[Token(Token = "0x6000700")]
		[Address(RVA = "0x21214C", Offset = "0x21214C", VA = "0x21214C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60006F3")]
	[Address(RVA = "0x211ADC", Offset = "0x211ADC", VA = "0x211ADC")]
	public GameSystemScript()
	{
	}

	[Token(Token = "0x6000701")]
	[Address(RVA = "0x212170", Offset = "0x212170", VA = "0x212170")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000702")]
	[Address(RVA = "0x212624", Offset = "0x212624", VA = "0x212624")]
	private void Start()
	{
	}

	[Token(Token = "0x6000703")]
	[Address(RVA = "0x2131F8", Offset = "0x2131F8", VA = "0x2131F8")]
	[DebuggerHidden]
	private IEnumerator LateStart()
	{
		return null;
	}

	[Token(Token = "0x6000704")]
	[Address(RVA = "0x213280", Offset = "0x213280", VA = "0x213280")]
	private void Update()
	{
	}

	[Token(Token = "0x6000705")]
	[Address(RVA = "0x21362C", Offset = "0x21362C", VA = "0x21362C")]
	private void skipToTheNight()
	{
	}

	[Token(Token = "0x6000706")]
	[Address(RVA = "0x213840", Offset = "0x213840", VA = "0x213840")]
	private void skipToTheDay()
	{
	}

	[Token(Token = "0x6000707")]
	[Address(RVA = "0x2134AC", Offset = "0x2134AC", VA = "0x2134AC")]
	private void switchToTheDay()
	{
	}

	[Token(Token = "0x6000708")]
	[Address(RVA = "0x214734", Offset = "0x214734", VA = "0x214734")]
	[DebuggerHidden]
	private IEnumerator ChangeFilter()
	{
		return null;
	}

	[Token(Token = "0x6000709")]
	[Address(RVA = "0x213B64", Offset = "0x213B64", VA = "0x213B64")]
	private void dateSwitch()
	{
	}

	[Token(Token = "0x600070A")]
	[Address(RVA = "0x209228", Offset = "0x209228", VA = "0x209228")]
	public void TriggerSandboxMaxDay()
	{
	}

	[Token(Token = "0x600070B")]
	[Address(RVA = "0x2147BC", Offset = "0x2147BC", VA = "0x2147BC")]
	[DebuggerHidden]
	internal IEnumerator ClockSkip(GameObject o)
	{
		return null;
	}

	[Token(Token = "0x600070C")]
	[Address(RVA = "0x21485C", Offset = "0x21485C", VA = "0x21485C")]
	private void StartBackToViz()
	{
	}

	[Token(Token = "0x600070D")]
	[Address(RVA = "0x2148A0", Offset = "0x2148A0", VA = "0x2148A0")]
	[DebuggerHidden]
	private IEnumerator BackToViz()
	{
		return null;
	}

	[Token(Token = "0x600070E")]
	[Address(RVA = "0x214928", Offset = "0x214928", VA = "0x214928")]
	[DebuggerHidden]
	internal IEnumerator whiteFlash()
	{
		return null;
	}

	[Token(Token = "0x600070F")]
	[Address(RVA = "0x213C44", Offset = "0x213C44", VA = "0x213C44")]
	public bool DetectObjectsNotHidden(Vector3 source, bool morningSeach = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6000710")]
	[Address(RVA = "0x214144", Offset = "0x214144", VA = "0x214144")]
	public void TrashObject(bool morningSearch = false)
	{
	}

	[Token(Token = "0x6000711")]
	[Address(RVA = "0x214B80", Offset = "0x214B80", VA = "0x214B80")]
	[DebuggerHidden]
	private IEnumerator MorningSearchFeedback()
	{
		return null;
	}

	[Token(Token = "0x6000712")]
	[Address(RVA = "0x214C00", Offset = "0x214C00", VA = "0x214C00")]
	[DebuggerHidden]
	private IEnumerator alarmFeedback(Color BaseColor, float BaseIntensity)
	{
		return null;
	}

	[Token(Token = "0x6000713")]
	[Address(RVA = "0x214CDC", Offset = "0x214CDC", VA = "0x214CDC")]
	public void ClaimStarterPack(GameObject bobby)
	{
	}

	[Token(Token = "0x6000714")]
	[Address(RVA = "0x214FA8", Offset = "0x214FA8", VA = "0x214FA8")]
	private bool IsDeletedWhenClaimingStarterPack(SpawnableObject so)
	{
		return default(bool);
	}

	[Token(Token = "0x6000715")]
	[Address(RVA = "0x2150C8", Offset = "0x2150C8", VA = "0x2150C8")]
	private bool IsDeletedWhenClaimingStarterPack(BuyingData bd)
	{
		return default(bool);
	}

	[Token(Token = "0x6000716")]
	[Address(RVA = "0x21519C", Offset = "0x21519C", VA = "0x21519C")]
	public void FakeDestroyObjects(bool isMorningSearch = false)
	{
	}

	[Token(Token = "0x6000717")]
	[Address(RVA = "0x215328", Offset = "0x215328", VA = "0x215328")]
	public void DestroyObjects(bool isMorningSearch = false)
	{
	}

	[Token(Token = "0x6000718")]
	[Address(RVA = "0x2105B8", Offset = "0x2105B8", VA = "0x2105B8")]
	public void PostFouille()
	{
	}

	[Token(Token = "0x6000719")]
	[Address(RVA = "0x2152A8", Offset = "0x2152A8", VA = "0x2152A8")]
	[DebuggerHidden]
	private IEnumerator WaitForGarde()
	{
		return null;
	}

	[Token(Token = "0x600071A")]
	[Address(RVA = "0x215440", Offset = "0x215440", VA = "0x215440")]
	public void arcadeTrade(int caValaitQuoi)
	{
	}

	[Token(Token = "0x600071B")]
	[Address(RVA = "0x21170C", Offset = "0x21170C", VA = "0x21170C")]
	public void StartArcade()
	{
	}

	[Token(Token = "0x600071C")]
	[Address(RVA = "0x215580", Offset = "0x215580", VA = "0x215580")]
	public void StartTutorial(string tutorials)
	{
	}

	[Token(Token = "0x600071D")]
	[Address(RVA = "0x21561C", Offset = "0x21561C", VA = "0x21561C")]
	[DebuggerHidden]
	private IEnumerator FadeToTutorial()
	{
		return null;
	}

	[Token(Token = "0x600071E")]
	[Address(RVA = "0x2117E0", Offset = "0x2117E0", VA = "0x2117E0")]
	public void GoToMenu()
	{
	}

	[Token(Token = "0x600071F")]
	[Address(RVA = "0x2156A4", Offset = "0x2156A4", VA = "0x2156A4")]
	public void EndTutorial()
	{
	}

	[Token(Token = "0x6000720")]
	[Address(RVA = "0x21576C", Offset = "0x21576C", VA = "0x21576C")]
	[DebuggerHidden]
	private IEnumerator SimpleFadeToJail()
	{
		return null;
	}

	[Token(Token = "0x6000721")]
	[Address(RVA = "0x2156EC", Offset = "0x2156EC", VA = "0x2156EC")]
	[DebuggerHidden]
	private IEnumerator FadeToJail()
	{
		return null;
	}

	[Token(Token = "0x6000722")]
	[Address(RVA = "0x2157FC", Offset = "0x2157FC", VA = "0x2157FC")]
	public void ManageOOBObject(GameObject o)
	{
	}

	[Token(Token = "0x6000723")]
	[Address(RVA = "0x215820", Offset = "0x215820", VA = "0x215820")]
	[DebuggerHidden]
	public IEnumerator MoveObject(GameObject o)
	{
		return null;
	}

	[Token(Token = "0x6000724")]
	[Address(RVA = "0x2158A8", Offset = "0x2158A8", VA = "0x2158A8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000725")]
	[Address(RVA = "0x215944", Offset = "0x215944", VA = "0x215944")]
	public int SecondesÉcoulées()
	{
		return default(int);
	}

	[Token(Token = "0x6000726")]
	[Address(RVA = "0x214728", Offset = "0x214728", VA = "0x214728")]
	private void ResetItemCraftedCount()
	{
	}

	[Token(Token = "0x6000727")]
	[Address(RVA = "0x21597C", Offset = "0x21597C", VA = "0x21597C")]
	private static string UnifyStringID(string id)
	{
		return null;
	}

	[Token(Token = "0x6000728")]
	[Address(RVA = "0x215A54", Offset = "0x215A54", VA = "0x215A54")]
	private int GetCraftId(string name)
	{
		return default(int);
	}

	[Token(Token = "0x6000729")]
	[Address(RVA = "0x215D90", Offset = "0x215D90", VA = "0x215D90")]
	public void CraftedItem(string name)
	{
	}

	[Token(Token = "0x600072A")]
	[Address(RVA = "0x204CD8", Offset = "0x204CD8", VA = "0x204CD8")]
	public static void Analytics(string eventName, string eventValue)
	{
	}

	[Token(Token = "0x600072B")]
	[Address(RVA = "0x2149B0", Offset = "0x2149B0", VA = "0x2149B0")]
	public static void Analytics(string eventName)
	{
	}

	[Token(Token = "0x600072C")]
	[Address(RVA = "0x215EB8", Offset = "0x215EB8", VA = "0x215EB8")]
	public static void AnalyticsTime()
	{
	}

	[Token(Token = "0x600072D")]
	[Address(RVA = "0x2160E4", Offset = "0x2160E4", VA = "0x2160E4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1695DC", Offset = "0x1695DC")]
	private void <Start>m__0(DrawingShader CellShading)
	{
	}

	[Token(Token = "0x600072E")]
	[Address(RVA = "0x21614C", Offset = "0x21614C", VA = "0x21614C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1695EC", Offset = "0x1695EC")]
	private void <Start>m__1(ColorSuite ColorManager)
	{
	}

	[Token(Token = "0x600072F")]
	[Address(RVA = "0x216194", Offset = "0x216194", VA = "0x216194")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1695FC", Offset = "0x1695FC")]
	private void <Start>m__2(DrawingShader CellShading)
	{
	}

	[Token(Token = "0x6000730")]
	[Address(RVA = "0x2161FC", Offset = "0x2161FC", VA = "0x2161FC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16960C", Offset = "0x16960C")]
	private void <Start>m__3(ColorSuite ColorManager)
	{
	}

	[Token(Token = "0x6000731")]
	[Address(RVA = "0x216244", Offset = "0x216244", VA = "0x216244")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16961C", Offset = "0x16961C")]
	private void <Start>m__4(DrawingShader CellShading)
	{
	}

	[Token(Token = "0x6000732")]
	[Address(RVA = "0x2162AC", Offset = "0x2162AC", VA = "0x2162AC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16962C", Offset = "0x16962C")]
	private void <Start>m__5(ColorSuite ColorManager)
	{
	}
}
[Token(Token = "0x2000120")]
public enum TooltipType
{
	[Token(Token = "0x400083E")]
	Simple,
	[Token(Token = "0x400083F")]
	BuyButtonWrapper,
	[Token(Token = "0x4000840")]
	JobBubbleObjectif,
	[Token(Token = "0x4000841")]
	JobBubbleReward,
	[Token(Token = "0x4000842")]
	HelpButton,
	[Token(Token = "0x4000843")]
	Clock,
	[Token(Token = "0x4000844")]
	RepBar
}
[Token(Token = "0x2000121")]
public class GenericTooltip : MonoBehaviour
{
	[Token(Token = "0x4000845")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int HintID;

	[Token(Token = "0x4000846")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public HintAnim anim;

	[Token(Token = "0x4000847")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public TooltipType type;

	[Token(Token = "0x4000848")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private NVRHand lastHandHinted;

	[Token(Token = "0x4000849")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private string textToDisplay;

	[Token(Token = "0x400084A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private BuyButtonWrapper BBW;

	[Token(Token = "0x400084B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private JobBubbleWrapper JBW;

	[Token(Token = "0x6000733")]
	[Address(RVA = "0x21E05C", Offset = "0x21E05C", VA = "0x21E05C")]
	public GenericTooltip()
	{
	}

	[Token(Token = "0x6000734")]
	[Address(RVA = "0x21E064", Offset = "0x21E064", VA = "0x21E064")]
	private void Start()
	{
	}

	[Token(Token = "0x6000735")]
	[Address(RVA = "0x21E41C", Offset = "0x21E41C", VA = "0x21E41C")]
	public void RefreshHint()
	{
	}

	[Token(Token = "0x6000736")]
	[Address(RVA = "0x21F0A0", Offset = "0x21F0A0", VA = "0x21F0A0")]
	private void OnTriggerStay(Collider col)
	{
	}

	[Token(Token = "0x6000737")]
	[Address(RVA = "0x21F360", Offset = "0x21F360", VA = "0x21F360")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000738")]
	[Address(RVA = "0x21F534", Offset = "0x21F534", VA = "0x21F534")]
	private void OnDisable()
	{
	}
}
[Token(Token = "0x2000122")]
public class JailWallManager : MonoBehaviour
{
	[Token(Token = "0x400084C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private GameObject roomOrigin;

	[Token(Token = "0x400084D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private float minSize;

	[Token(Token = "0x400084E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private float maxSize;

	[Token(Token = "0x400084F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float RoomHeight;

	[Token(Token = "0x4000850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Vector3 roomSizeWithHeight;

	[Token(Token = "0x4000851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static Vector3 origin;

	[Token(Token = "0x4000852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static Vector3 center;

	[Token(Token = "0x4000853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public static Vector3 centerTutoland;

	[Token(Token = "0x4000854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private GameObject _player;

	[Token(Token = "0x170000B7")]
	public static Vector3 groundedCenter
	{
		[Token(Token = "0x600073A")]
		[Address(RVA = "0x22A5CC", Offset = "0x22A5CC", VA = "0x22A5CC")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x6000739")]
	[Address(RVA = "0x22A5B0", Offset = "0x22A5B0", VA = "0x22A5B0")]
	public JailWallManager()
	{
	}

	[Token(Token = "0x600073B")]
	[Address(RVA = "0x22A900", Offset = "0x22A900", VA = "0x22A900")]
	public static bool InBound(Vector3 position)
	{
		return default(bool);
	}

	[Token(Token = "0x600073C")]
	[Address(RVA = "0x20C460", Offset = "0x20C460", VA = "0x20C460")]
	public void Init()
	{
	}

	[Token(Token = "0x600073D")]
	[Address(RVA = "0x22ADD8", Offset = "0x22ADD8", VA = "0x22ADD8")]
	public void SetRoom()
	{
	}
}
[Token(Token = "0x2000123")]
public class AmbiancePlayer : MonoBehaviour
{
	[Token(Token = "0x4000855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string eventName;

	[Token(Token = "0x600073F")]
	[Address(RVA = "0x26DB78", Offset = "0x26DB78", VA = "0x26DB78")]
	public AmbiancePlayer()
	{
	}

	[Token(Token = "0x6000740")]
	[Address(RVA = "0x26DB80", Offset = "0x26DB80", VA = "0x26DB80")]
	private void Start()
	{
	}
}
namespace Klak.Motion
{
	[Token(Token = "0x2000124")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x169B2C", Offset = "0x169B2C")]
	public class BrownianMotion : MonoBehaviour
	{
		[Token(Token = "0x4000856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Transform TargetObj;

		[Token(Token = "0x4000857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private bool _active;

		[Token(Token = "0x4000858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private float _positionFrequency;

		[Token(Token = "0x4000859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _rotationFrequency;

		[Token(Token = "0x400085A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _positionAmplitude;

		[Token(Token = "0x400085B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _rotationAmplitude;

		[Token(Token = "0x400085C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private Vector3 _positionScale;

		[Token(Token = "0x400085D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Vector3 _rotationScale;

		[Token(Token = "0x400085E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x169BD0", Offset = "0x169BD0")]
		private int _positionFractalLevel;

		[Token(Token = "0x400085F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x169C08", Offset = "0x169C08")]
		private int _rotationFractalLevel;

		[Token(Token = "0x4000860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float applyRatio;

		[Token(Token = "0x4000861")]
		private const float _fbmNorm = 1.3333334f;

		[Token(Token = "0x4000862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 _initialPosition;

		[Token(Token = "0x4000863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Quaternion _initialRotation;

		[Token(Token = "0x4000864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float[] _time;

		[Token(Token = "0x4000865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool localMove;

		[Token(Token = "0x170000B8")]
		public bool active
		{
			[Token(Token = "0x6000742")]
			[Address(RVA = "0x236B54", Offset = "0x236B54", VA = "0x236B54")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000743")]
			[Address(RVA = "0x236B5C", Offset = "0x236B5C", VA = "0x236B5C")]
			set
			{
			}
		}

		[Token(Token = "0x170000B9")]
		public float positionFrequency
		{
			[Token(Token = "0x6000744")]
			[Address(RVA = "0x236B64", Offset = "0x236B64", VA = "0x236B64")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000745")]
			[Address(RVA = "0x236B6C", Offset = "0x236B6C", VA = "0x236B6C")]
			set
			{
			}
		}

		[Token(Token = "0x170000BA")]
		public float rotationFrequency
		{
			[Token(Token = "0x6000746")]
			[Address(RVA = "0x236B74", Offset = "0x236B74", VA = "0x236B74")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000747")]
			[Address(RVA = "0x236B7C", Offset = "0x236B7C", VA = "0x236B7C")]
			set
			{
			}
		}

		[Token(Token = "0x170000BB")]
		public float positionAmplitude
		{
			[Token(Token = "0x6000748")]
			[Address(RVA = "0x236B84", Offset = "0x236B84", VA = "0x236B84")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000749")]
			[Address(RVA = "0x236B8C", Offset = "0x236B8C", VA = "0x236B8C")]
			set
			{
			}
		}

		[Token(Token = "0x170000BC")]
		public float rotationAmplitude
		{
			[Token(Token = "0x600074A")]
			[Address(RVA = "0x236B94", Offset = "0x236B94", VA = "0x236B94")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600074B")]
			[Address(RVA = "0x236B9C", Offset = "0x236B9C", VA = "0x236B9C")]
			set
			{
			}
		}

		[Token(Token = "0x170000BD")]
		public Vector3 positionScale
		{
			[Token(Token = "0x600074C")]
			[Address(RVA = "0x236BA4", Offset = "0x236BA4", VA = "0x236BA4")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600074D")]
			[Address(RVA = "0x236BB4", Offset = "0x236BB4", VA = "0x236BB4")]
			set
			{
			}
		}

		[Token(Token = "0x170000BE")]
		public Vector3 rotationScale
		{
			[Token(Token = "0x600074E")]
			[Address(RVA = "0x236BC0", Offset = "0x236BC0", VA = "0x236BC0")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600074F")]
			[Address(RVA = "0x236BD0", Offset = "0x236BD0", VA = "0x236BD0")]
			set
			{
			}
		}

		[Token(Token = "0x170000BF")]
		public int positionFractalLevel
		{
			[Token(Token = "0x6000750")]
			[Address(RVA = "0x236BDC", Offset = "0x236BDC", VA = "0x236BDC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000751")]
			[Address(RVA = "0x236BE4", Offset = "0x236BE4", VA = "0x236BE4")]
			set
			{
			}
		}

		[Token(Token = "0x170000C0")]
		public int rotationFractalLevel
		{
			[Token(Token = "0x6000752")]
			[Address(RVA = "0x236BEC", Offset = "0x236BEC", VA = "0x236BEC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000753")]
			[Address(RVA = "0x236BF4", Offset = "0x236BF4", VA = "0x236BF4")]
			set
			{
			}
		}

		[Token(Token = "0x6000741")]
		[Address(RVA = "0x236A3C", Offset = "0x236A3C", VA = "0x236A3C")]
		public BrownianMotion()
		{
		}

		[Token(Token = "0x6000754")]
		[Address(RVA = "0x236BFC", Offset = "0x236BFC", VA = "0x236BFC")]
		public void Rehash()
		{
		}

		[Token(Token = "0x6000755")]
		[Address(RVA = "0x236C80", Offset = "0x236C80", VA = "0x236C80")]
		private void Start()
		{
		}

		[Token(Token = "0x6000756")]
		[Address(RVA = "0x236CFC", Offset = "0x236CFC", VA = "0x236CFC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000757")]
		[Address(RVA = "0x236D08", Offset = "0x236D08", VA = "0x236D08")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000758")]
		[Address(RVA = "0x236D9C", Offset = "0x236D9C", VA = "0x236D9C")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6000759")]
		[Address(RVA = "0x236E30", Offset = "0x236E30", VA = "0x236E30")]
		private void Update()
		{
		}
	}
}
[Token(Token = "0x2000125")]
public class FaeryBobbyComponent : SpawnableObject
{
	[Token(Token = "0x200031C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x169C60", Offset = "0x169C60")]
	private sealed class <Talkfeedback>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4001240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal string soundEvent;

		[Token(Token = "0x4001241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal FaeryBobbyComponent $this;

		[Token(Token = "0x4001242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal object $current;

		[Token(Token = "0x4001243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal bool $disposing;

		[Token(Token = "0x4001244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal int $PC;

		[Token(Token = "0x17000297")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60017D9")]
			[Address(RVA = "0x20E9FC", Offset = "0x20E9FC", VA = "0x20E9FC", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000298")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017DA")]
			[Address(RVA = "0x20EA04", Offset = "0x20EA04", VA = "0x20EA04", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017D7")]
		[Address(RVA = "0x20E8C0", Offset = "0x20E8C0", VA = "0x20E8C0")]
		[DebuggerHidden]
		public <Talkfeedback>c__Iterator0()
		{
		}

		[Token(Token = "0x60017D8")]
		[Address(RVA = "0x20E8C8", Offset = "0x20E8C8", VA = "0x20E8C8", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017DB")]
		[Address(RVA = "0x20EA0C", Offset = "0x20EA0C", VA = "0x20EA0C", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60017DC")]
		[Address(RVA = "0x20EA20", Offset = "0x20EA20", VA = "0x20EA20", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4000866")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float targetDistance;

	[Token(Token = "0x4000867")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float timeToDestroy;

	[Token(Token = "0x4000868")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask mask;

	[Token(Token = "0x4000869")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public UnityEvent OnHelperDestroy;

	[Token(Token = "0x400086A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float _timeToDestroySave;

	[Token(Token = "0x400086B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Animator _animator;

	[Token(Token = "0x400086C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform _head;

	[Token(Token = "0x400086D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 _finalTarget;

	[Token(Token = "0x400086E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 _currentTarget;

	[Token(Token = "0x400086F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool _goingToTarget;

	[Token(Token = "0x4000870")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3[] _deltaBuffer;

	[Token(Token = "0x4000871")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int _index;

	[Token(Token = "0x4000872")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 _lastPosition;

	[Token(Token = "0x4000873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private uint flyingEvent;

	[Token(Token = "0x170000C1")]
	private Vector3 velocity
	{
		[Token(Token = "0x600075B")]
		[Address(RVA = "0x20D718", Offset = "0x20D718", VA = "0x20D718")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x600075A")]
	[Address(RVA = "0x20D688", Offset = "0x20D688", VA = "0x20D688")]
	public FaeryBobbyComponent()
	{
	}

	[Token(Token = "0x600075C")]
	[Address(RVA = "0x20D898", Offset = "0x20D898", VA = "0x20D898")]
	private void Start()
	{
	}

	[Token(Token = "0x600075D")]
	[Address(RVA = "0x20D9F8", Offset = "0x20D9F8", VA = "0x20D9F8", Slot = "4")]
	public override void Reset()
	{
	}

	[Token(Token = "0x600075E")]
	[Address(RVA = "0x20DA80", Offset = "0x20DA80", VA = "0x20DA80")]
	public void Setup(Vector3 target)
	{
	}

	[Token(Token = "0x600075F")]
	[Address(RVA = "0x20DC7C", Offset = "0x20DC7C", VA = "0x20DC7C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000760")]
	[Address(RVA = "0x20DE00", Offset = "0x20DE00", VA = "0x20DE00")]
	private void Update()
	{
	}

	[Token(Token = "0x6000761")]
	[Address(RVA = "0x20DBE4", Offset = "0x20DBE4", VA = "0x20DBE4")]
	[DebuggerHidden]
	private IEnumerator Talkfeedback(string soundEvent)
	{
		return null;
	}

	[Token(Token = "0x6000762")]
	[Address(RVA = "0x20E6FC", Offset = "0x20E6FC", VA = "0x20E6FC")]
	private void Kill()
	{
	}
}
[Token(Token = "0x2000126")]
public class GiftBehavior : SpawnableObject
{
	[Token(Token = "0x200031D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x169D30", Offset = "0x169D30")]
	private sealed class <ResetPosition>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4001245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal Vector3 <pos>__0;

		[Token(Token = "0x4001246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal Quaternion <rot>__0;

		[Token(Token = "0x4001247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal float <_time>__0;

		[Token(Token = "0x4001248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal HaloScript <halo>__0;

		[Token(Token = "0x4001249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		internal GiftBehavior $this;

		[Token(Token = "0x400124A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal object $current;

		[Token(Token = "0x400124B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		internal bool $disposing;

		[Token(Token = "0x400124C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal int $PC;

		[Token(Token = "0x17000299")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60017DF")]
			[Address(RVA = "0x221804", Offset = "0x221804", VA = "0x221804", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700029A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017E0")]
			[Address(RVA = "0x22180C", Offset = "0x22180C", VA = "0x22180C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017DD")]
		[Address(RVA = "0x220158", Offset = "0x220158", VA = "0x220158")]
		[DebuggerHidden]
		public <ResetPosition>c__Iterator0()
		{
		}

		[Token(Token = "0x60017DE")]
		[Address(RVA = "0x2212BC", Offset = "0x2212BC", VA = "0x2212BC", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017E1")]
		[Address(RVA = "0x221814", Offset = "0x221814", VA = "0x221814", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60017E2")]
		[Address(RVA = "0x221828", Offset = "0x221828", VA = "0x221828", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4000874")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float timeToShake;

	[Token(Token = "0x4000875")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Color[] colors;

	[Token(Token = "0x4000876")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Particle;

	[Token(Token = "0x4000877")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public GameObject Bobine;

	[Token(Token = "0x4000878")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float forceExplosion;

	[Token(Token = "0x4000879")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private GameObject[] sp;

	[Token(Token = "0x400087A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject giftTopJuice;

	[Token(Token = "0x400087B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public GameObject giftBottomJuice;

	[Token(Token = "0x400087C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 BaseSpPos;

	[Token(Token = "0x400087D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private NVRInteractableItem obj;

	[Token(Token = "0x400087E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private TutorialManager tutorialManager;

	[Token(Token = "0x400087F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float time;

	[Token(Token = "0x4000880")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 basePosition;

	[Token(Token = "0x4000881")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public GameObject Halo;

	[Token(Token = "0x4000882")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AnimationCurve curve;

	[Token(Token = "0x4000883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[HideInInspector]
	public string text;

	[Token(Token = "0x4000884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	public Sprite img;

	[Token(Token = "0x4000885")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[HideInInspector]
	public DealerJobScript jobScript;

	[Token(Token = "0x4000886")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[HideInInspector]
	public bool newItem;

	[Token(Token = "0x4000887")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[HideInInspector]
	public BuyingData data;

	[Token(Token = "0x4000888")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[HideInInspector]
	public string unlockName;

	[Token(Token = "0x4000889")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private uint openingSound;

	[Token(Token = "0x6000763")]
	[Address(RVA = "0x21FBB8", Offset = "0x21FBB8", VA = "0x21FBB8")]
	public GiftBehavior()
	{
	}

	[Token(Token = "0x6000764")]
	[Address(RVA = "0x21FBCC", Offset = "0x21FBCC", VA = "0x21FBCC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000765")]
	[Address(RVA = "0x220038", Offset = "0x220038", VA = "0x220038")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000766")]
	[Address(RVA = "0x220084", Offset = "0x220084", VA = "0x220084")]
	private void BackToPosition()
	{
	}

	[Token(Token = "0x6000767")]
	[Address(RVA = "0x2200D8", Offset = "0x2200D8", VA = "0x2200D8")]
	[DebuggerHidden]
	private IEnumerator ResetPosition()
	{
		return null;
	}

	[Token(Token = "0x6000768")]
	[Address(RVA = "0x220160", Offset = "0x220160", VA = "0x220160", Slot = "4")]
	public override void Reset()
	{
	}

	[Token(Token = "0x6000769")]
	[Address(RVA = "0x2201E4", Offset = "0x2201E4", VA = "0x2201E4")]
	private void Update()
	{
	}

	[Token(Token = "0x600076A")]
	[Address(RVA = "0x220F28", Offset = "0x220F28", VA = "0x220F28")]
	private void spawnTutoLoader(string type)
	{
	}
}
[Token(Token = "0x2000127")]
public enum handAnimState
{
	[Token(Token = "0x400088B")]
	Idle,
	[Token(Token = "0x400088C")]
	Fist,
	[Token(Token = "0x400088D")]
	Grab
}
[Token(Token = "0x2000128")]
public class HandAnimationManager : MonoBehaviour
{
	[Token(Token = "0x400088E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Animator anim;

	[Token(Token = "0x400088F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private NVRHand hand;

	[Token(Token = "0x4000890")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public GameObject sp;

	[Token(Token = "0x4000891")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private handAnimState state;

	[Token(Token = "0x600076B")]
	[Address(RVA = "0x223CC8", Offset = "0x223CC8", VA = "0x223CC8")]
	public HandAnimationManager()
	{
	}

	[Token(Token = "0x600076C")]
	[Address(RVA = "0x223CD0", Offset = "0x223CD0", VA = "0x223CD0")]
	private void Start()
	{
	}

	[Token(Token = "0x600076D")]
	[Address(RVA = "0x223D8C", Offset = "0x223D8C", VA = "0x223D8C")]
	private void Update()
	{
	}
}
[Token(Token = "0x2000129")]
public class ItTurns : MonoBehaviour
{
	[Token(Token = "0x600076E")]
	[Address(RVA = "0x22A538", Offset = "0x22A538", VA = "0x22A538")]
	public ItTurns()
	{
	}

	[Token(Token = "0x600076F")]
	[Address(RVA = "0x22A540", Offset = "0x22A540", VA = "0x22A540")]
	private void Start()
	{
	}

	[Token(Token = "0x6000770")]
	[Address(RVA = "0x22A544", Offset = "0x22A544", VA = "0x22A544")]
	private void Update()
	{
	}
}
[Token(Token = "0x200012A")]
public class MeshFromCapacity : MonoBehaviour
{
	[Token(Token = "0x4000892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Mesh[] state;

	[Token(Token = "0x4000893")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int actualState;

	[Token(Token = "0x4000894")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private MeshFilter mesh;

	[Token(Token = "0x4000895")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Ressource res;

	[Token(Token = "0x6000771")]
	[Address(RVA = "0x24BD18", Offset = "0x24BD18", VA = "0x24BD18")]
	public MeshFromCapacity()
	{
	}

	[Token(Token = "0x6000772")]
	[Address(RVA = "0x24BD20", Offset = "0x24BD20", VA = "0x24BD20")]
	private void Start()
	{
	}

	[Token(Token = "0x6000773")]
	[Address(RVA = "0x24BE44", Offset = "0x24BE44", VA = "0x24BE44")]
	private void Update()
	{
	}
}
[Token(Token = "0x200012B")]
public class MoneyParticule : SpawnableObject
{
	[Token(Token = "0x4000896")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float timeBeforeDestroy;

	[Token(Token = "0x4000897")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[HideInInspector]
	public Rigidbody rb;

	[Token(Token = "0x4000898")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float timer;

	[Token(Token = "0x6000774")]
	[Address(RVA = "0x24FCD0", Offset = "0x24FCD0", VA = "0x24FCD0")]
	public MoneyParticule()
	{
	}

	[Token(Token = "0x6000775")]
	[Address(RVA = "0x24FCD8", Offset = "0x24FCD8", VA = "0x24FCD8", Slot = "4")]
	public override void Reset()
	{
	}

	[Token(Token = "0x6000776")]
	[Address(RVA = "0x24FC20", Offset = "0x24FC20", VA = "0x24FC20")]
	public void ApplyForce(Vector3 force)
	{
	}

	[Token(Token = "0x6000777")]
	[Address(RVA = "0x24FDD0", Offset = "0x24FDD0", VA = "0x24FDD0")]
	private void Update()
	{
	}
}
namespace Klak.Math
{
	[Token(Token = "0x200012C")]
	public static class Perlin
	{
		[Token(Token = "0x4000899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int[] perm;

		[Token(Token = "0x6000778")]
		[Address(RVA = "0x235410", Offset = "0x235410", VA = "0x235410")]
		public static float Noise(float x)
		{
			return default(float);
		}

		[Token(Token = "0x6000779")]
		[Address(RVA = "0x23565C", Offset = "0x23565C", VA = "0x23565C")]
		public static float Noise(float x, float y)
		{
			return default(float);
		}

		[Token(Token = "0x600077A")]
		[Address(RVA = "0x235A40", Offset = "0x235A40", VA = "0x235A40")]
		public static float Noise(Vector2 coord)
		{
			return default(float);
		}

		[Token(Token = "0x600077B")]
		[Address(RVA = "0x235AC8", Offset = "0x235AC8", VA = "0x235AC8")]
		public static float Noise(float x, float y, float z)
		{
			return default(float);
		}

		[Token(Token = "0x600077C")]
		[Address(RVA = "0x236424", Offset = "0x236424", VA = "0x236424")]
		public static float Noise(Vector3 coord)
		{
			return default(float);
		}

		[Token(Token = "0x600077D")]
		[Address(RVA = "0x2364BC", Offset = "0x2364BC", VA = "0x2364BC")]
		public static float Fbm(float x, int octave)
		{
			return default(float);
		}

		[Token(Token = "0x600077E")]
		[Address(RVA = "0x236588", Offset = "0x236588", VA = "0x236588")]
		public static float Fbm(Vector2 coord, int octave)
		{
			return default(float);
		}

		[Token(Token = "0x600077F")]
		[Address(RVA = "0x2366C8", Offset = "0x2366C8", VA = "0x2366C8")]
		public static float Fbm(float x, float y, int octave)
		{
			return default(float);
		}

		[Token(Token = "0x6000780")]
		[Address(RVA = "0x236780", Offset = "0x236780", VA = "0x236780")]
		public static float Fbm(Vector3 coord, int octave)
		{
			return default(float);
		}

		[Token(Token = "0x6000781")]
		[Address(RVA = "0x2368D0", Offset = "0x2368D0", VA = "0x2368D0")]
		public static float Fbm(float x, float y, float z, int octave)
		{
			return default(float);
		}

		[Token(Token = "0x6000782")]
		[Address(RVA = "0x2355E4", Offset = "0x2355E4", VA = "0x2355E4")]
		private static float Fade(float t)
		{
			return default(float);
		}

		[Token(Token = "0x6000783")]
		[Address(RVA = "0x23563C", Offset = "0x23563C", VA = "0x23563C")]
		private static float Lerp(float t, float a, float b)
		{
			return default(float);
		}

		[Token(Token = "0x6000784")]
		[Address(RVA = "0x235624", Offset = "0x235624", VA = "0x235624")]
		private static float Grad(int hash, float x)
		{
			return default(float);
		}

		[Token(Token = "0x6000785")]
		[Address(RVA = "0x235A14", Offset = "0x235A14", VA = "0x235A14")]
		private static float Grad(int hash, float x, float y)
		{
			return default(float);
		}

		[Token(Token = "0x6000786")]
		[Address(RVA = "0x2363D0", Offset = "0x2363D0", VA = "0x2363D0")]
		private static float Grad(int hash, float x, float y, float z)
		{
			return default(float);
		}
	}
}
[Token(Token = "0x200012D")]
public class RewardTurn : MonoBehaviour
{
	[Token(Token = "0x400089A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[HideInInspector]
	public TextMeshProUGUI txt;

	[Token(Token = "0x400089B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[HideInInspector]
	public Image img;

	[Token(Token = "0x400089C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private GameObject cam;

	[Token(Token = "0x400089D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float timer;

	[Token(Token = "0x6000788")]
	[Address(RVA = "0x34676C", Offset = "0x34676C", VA = "0x34676C")]
	public RewardTurn()
	{
	}

	[Token(Token = "0x6000789")]
	[Address(RVA = "0x346774", Offset = "0x346774", VA = "0x346774")]
	public void Init(string s, Sprite sp)
	{
	}

	[Token(Token = "0x600078A")]
	[Address(RVA = "0x3469B8", Offset = "0x3469B8", VA = "0x3469B8")]
	private void Update()
	{
	}
}
[Token(Token = "0x200012E")]
public class SaveAnimation : MonoBehaviour
{
	[Token(Token = "0x2000320")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x169DD0", Offset = "0x169DD0")]
	private sealed class <FadeInOut>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x400124D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal float <f>__1;

		[Token(Token = "0x400124E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal TextMeshProUGUI[] $locvar0;

		[Token(Token = "0x400124F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal int $locvar1;

		[Token(Token = "0x4001250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal float <f>__2;

		[Token(Token = "0x4001251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal TextMeshProUGUI[] $locvar2;

		[Token(Token = "0x4001252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal int $locvar3;

		[Token(Token = "0x4001253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal SaveAnimation $this;

		[Token(Token = "0x4001254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal object $current;

		[Token(Token = "0x4001255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal bool $disposing;

		[Token(Token = "0x4001256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		internal int $PC;

		[Token(Token = "0x1700029B")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60017E5")]
			[Address(RVA = "0x291574", Offset = "0x291574", VA = "0x291574", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700029C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017E6")]
			[Address(RVA = "0x29157C", Offset = "0x29157C", VA = "0x29157C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017E3")]
		[Address(RVA = "0x290E88", Offset = "0x290E88", VA = "0x290E88")]
		[DebuggerHidden]
		public <FadeInOut>c__Iterator0()
		{
		}

		[Token(Token = "0x60017E4")]
		[Address(RVA = "0x2910F4", Offset = "0x2910F4", VA = "0x2910F4", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017E7")]
		[Address(RVA = "0x291584", Offset = "0x291584", VA = "0x291584", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60017E8")]
		[Address(RVA = "0x291598", Offset = "0x291598", VA = "0x291598", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x400089E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float[] offsets;

	[Token(Token = "0x400089F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float frequency;

	[Token(Token = "0x40008A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public GameObject Char;

	[Token(Token = "0x40008A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TextMeshProUGUI[] letters;

	[Token(Token = "0x40008A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3[] basesPosition;

	[Token(Token = "0x40008A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int letterCount;

	[Token(Token = "0x40008A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float timer;

	[Token(Token = "0x40008A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Color baseColor;

	[Token(Token = "0x600078B")]
	[Address(RVA = "0x290268", Offset = "0x290268", VA = "0x290268")]
	public SaveAnimation()
	{
	}

	[Token(Token = "0x600078C")]
	[Address(RVA = "0x290270", Offset = "0x290270", VA = "0x290270")]
	public void init()
	{
	}

	[Token(Token = "0x600078D")]
	[Address(RVA = "0x2905EC", Offset = "0x2905EC", VA = "0x2905EC")]
	private void GenerateText()
	{
	}

	[Token(Token = "0x600078E")]
	[Address(RVA = "0x290DE4", Offset = "0x290DE4", VA = "0x290DE4")]
	public void Show()
	{
	}

	[Token(Token = "0x600078F")]
	[Address(RVA = "0x290E08", Offset = "0x290E08", VA = "0x290E08")]
	[DebuggerHidden]
	private IEnumerator FadeInOut()
	{
		return null;
	}

	[Token(Token = "0x6000790")]
	[Address(RVA = "0x290E90", Offset = "0x290E90", VA = "0x290E90")]
	private void Update()
	{
	}

	[Token(Token = "0x6000791")]
	[Address(RVA = "0x290E94", Offset = "0x290E94", VA = "0x290E94")]
	private void baseAnim()
	{
	}
}
[Token(Token = "0x200012F")]
public class SaveAnimationManager : MonoBehaviour
{
	[Token(Token = "0x40008A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SaveAnimationManager Instance;

	[Token(Token = "0x40008A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private SaveAnimation saveAnim;

	[Token(Token = "0x6000792")]
	[Address(RVA = "0x29161C", Offset = "0x29161C", VA = "0x29161C")]
	public SaveAnimationManager()
	{
	}

	[Token(Token = "0x6000793")]
	[Address(RVA = "0x291624", Offset = "0x291624", VA = "0x291624")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000794")]
	[Address(RVA = "0x291688", Offset = "0x291688", VA = "0x291688")]
	private void Start()
	{
	}

	[Token(Token = "0x6000795")]
	[Address(RVA = "0x291880", Offset = "0x291880", VA = "0x291880")]
	private void Reset()
	{
	}

	[Token(Token = "0x6000796")]
	[Address(RVA = "0x2918F0", Offset = "0x2918F0", VA = "0x2918F0")]
	public void ShowFeedback()
	{
	}

	[Token(Token = "0x6000797")]
	[Address(RVA = "0x291794", Offset = "0x291794", VA = "0x291794")]
	private bool IfAnimOk()
	{
		return default(bool);
	}
}
[Token(Token = "0x2000130")]
[ExecuteInEditMode]
public class SimpleNoiseMovement : MonoBehaviour
{
	[Token(Token = "0x40008A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool active;

	[Token(Token = "0x40008A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float scale;

	[Token(Token = "0x40008AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector3 strengh;

	[Token(Token = "0x40008AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 _basePosition;

	[Token(Token = "0x6000798")]
	[Address(RVA = "0x29D504", Offset = "0x29D504", VA = "0x29D504")]
	public SimpleNoiseMovement()
	{
	}

	[Token(Token = "0x6000799")]
	[Address(RVA = "0x29D5B4", Offset = "0x29D5B4", VA = "0x29D5B4")]
	private void Start()
	{
	}

	[Token(Token = "0x600079A")]
	[Address(RVA = "0x29D600", Offset = "0x29D600", VA = "0x29D600")]
	private void Update()
	{
	}
}
[Token(Token = "0x2000131")]
public class LoadSaveFromAnywhere
{
	[Token(Token = "0x2000132")]
	private class LoadSaveMenuHelper : MonoBehaviour
	{
		[Token(Token = "0x600079E")]
		[Address(RVA = "0x23C94C", Offset = "0x23C94C", VA = "0x23C94C")]
		public LoadSaveMenuHelper()
		{
		}
	}

	[Token(Token = "0x2000321")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x169E50", Offset = "0x169E50")]
	private sealed class <LoadSaveCoroutine>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4001257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal int saveId;

		[Token(Token = "0x4001258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal SceneLoader <loader>__0;

		[Token(Token = "0x4001259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool <finishLoading>__0;

		[Token(Token = "0x400125A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal IEnumerator<SceneLoader.SceneInformations> $locvar0;

		[Token(Token = "0x400125B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal LoadingManager <loadingmanager>__0;

		[Token(Token = "0x400125C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal SceneLoader.SceneInformations <currentInfo>__0;

		[Token(Token = "0x400125D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal PreloadingManagerCommon <preload>__0;

		[Token(Token = "0x400125E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal MonoBehaviour helper;

		[Token(Token = "0x400125F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal object $current;

		[Token(Token = "0x4001260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		internal bool $disposing;

		[Token(Token = "0x4001261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal int $PC;

		[Token(Token = "0x1700029D")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60017EB")]
			[Address(RVA = "0x23C8A4", Offset = "0x23C8A4", VA = "0x23C8A4", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700029E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017EC")]
			[Address(RVA = "0x23C8AC", Offset = "0x23C8AC", VA = "0x23C8AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017E9")]
		[Address(RVA = "0x23BD34", Offset = "0x23BD34", VA = "0x23BD34")]
		[DebuggerHidden]
		public <LoadSaveCoroutine>c__Iterator0()
		{
		}

		[Token(Token = "0x60017EA")]
		[Address(RVA = "0x23BD3C", Offset = "0x23BD3C", VA = "0x23BD3C", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017ED")]
		[Address(RVA = "0x23C8B4", Offset = "0x23C8B4", VA = "0x23C8B4", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60017EE")]
		[Address(RVA = "0x23C8C8", Offset = "0x23C8C8", VA = "0x23C8C8", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x600079B")]
	[Address(RVA = "0x23BBA0", Offset = "0x23BBA0", VA = "0x23BBA0")]
	public LoadSaveFromAnywhere()
	{
	}

	[Token(Token = "0x600079C")]
	[Address(RVA = "0x23BBA8", Offset = "0x23BBA8", VA = "0x23BBA8")]
	public static void LoadSave(int saveId)
	{
	}

	[Token(Token = "0x600079D")]
	[Address(RVA = "0x23BC9C", Offset = "0x23BC9C", VA = "0x23BC9C")]
	[DebuggerHidden]
	private static IEnumerator LoadSaveCoroutine(MonoBehaviour helper, int saveId)
	{
		return null;
	}
}
[Token(Token = "0x2000133")]
public class ArcadeButtonScript : MonoBehaviour
{
	[Token(Token = "0x40008AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private NVRHand hand;

	[Token(Token = "0x40008AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Animator anim;

	[Token(Token = "0x40008AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private GameObject hl;

	[Token(Token = "0x40008AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool hovering;

	[Token(Token = "0x40008B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool pressing;

	[Token(Token = "0x600079F")]
	[Address(RVA = "0x26F514", Offset = "0x26F514", VA = "0x26F514")]
	public ArcadeButtonScript()
	{
	}

	[Token(Token = "0x60007A0")]
	[Address(RVA = "0x26F51C", Offset = "0x26F51C", VA = "0x26F51C")]
	private void Start()
	{
	}

	[Token(Token = "0x60007A1")]
	[Address(RVA = "0x26F584", Offset = "0x26F584", VA = "0x26F584")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60007A2")]
	[Address(RVA = "0x26F660", Offset = "0x26F660", VA = "0x26F660")]
	private void OnTriggerStay(Collider col)
	{
	}
}
[Token(Token = "0x2000134")]
public class ArcadeNoise : MonoBehaviour
{
	[Token(Token = "0x60007A3")]
	[Address(RVA = "0x26F8BC", Offset = "0x26F8BC", VA = "0x26F8BC")]
	public ArcadeNoise()
	{
	}

	[Token(Token = "0x60007A4")]
	[Address(RVA = "0x26F8C4", Offset = "0x26F8C4", VA = "0x26F8C4")]
	private void Update()
	{
	}
}
[Token(Token = "0x2000135")]
public class ArcadeSound : MonoBehaviour
{
	[Token(Token = "0x40008B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector2 randomRange;

	[Token(Token = "0x40008B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private uint oneShotArcade;

	[Token(Token = "0x40008B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private uint startArcade;

	[Token(Token = "0x40008B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float timer;

	[Token(Token = "0x60007A5")]
	[Address(RVA = "0x270770", Offset = "0x270770", VA = "0x270770")]
	public ArcadeSound()
	{
	}

	[Token(Token = "0x60007A6")]
	[Address(RVA = "0x270778", Offset = "0x270778", VA = "0x270778")]
	private void Start()
	{
	}

	[Token(Token = "0x60007A7")]
	[Address(RVA = "0x270848", Offset = "0x270848", VA = "0x270848")]
	private void Update()
	{
	}

	[Token(Token = "0x60007A8")]
	[Address(RVA = "0x270934", Offset = "0x270934", VA = "0x270934")]
	public void startSound()
	{
	}
}
[Token(Token = "0x2000136")]
public class BigHammerScript : MonoBehaviour
{
	[Token(Token = "0x2000322")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x169EC0", Offset = "0x169EC0")]
	private sealed class <Shake>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4001262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal int <i>__1;

		[Token(Token = "0x4001263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal BigHammerScript $this;

		[Token(Token = "0x4001264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal object $current;

		[Token(Token = "0x4001265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal bool $disposing;

		[Token(Token = "0x4001266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal int $PC;

		[Token(Token = "0x1700029F")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60017F1")]
			[Address(RVA = "0x2745DC", Offset = "0x2745DC", VA = "0x2745DC", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017F2")]
			[Address(RVA = "0x2745E4", Offset = "0x2745E4", VA = "0x2745E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017EF")]
		[Address(RVA = "0x274344", Offset = "0x274344", VA = "0x274344")]
		[DebuggerHidden]
		public <Shake>c__Iterator0()
		{
		}

		[Token(Token = "0x60017F0")]
		[Address(RVA = "0x27434C", Offset = "0x27434C", VA = "0x27434C", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017F3")]
		[Address(RVA = "0x2745EC", Offset = "0x2745EC", VA = "0x2745EC", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60017F4")]
		[Address(RVA = "0x274600", Offset = "0x274600", VA = "0x274600", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x40008B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject loadingData;

	[Token(Token = "0x40008B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject particle;

	[Token(Token = "0x40008B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public GameObject particleEnd;

	[Token(Token = "0x40008B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public DataToLoad[] BaseLevel;

	[Token(Token = "0x40008B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float MinimumVelocity;

	[Token(Token = "0x40008BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool Load;

	[Token(Token = "0x40008BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 basePos;

	[Token(Token = "0x40008BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 LastHitPos;

	[Token(Token = "0x40008BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Rigidbody rb;

	[Token(Token = "0x40008BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int hit;

	[Token(Token = "0x40008BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int nextPrisonID;

	[Token(Token = "0x40008C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private uint hitSound;

	[Token(Token = "0x40008C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private uint endLevel;

	[Token(Token = "0x60007A9")]
	[Address(RVA = "0x2730A8", Offset = "0x2730A8", VA = "0x2730A8")]
	public BigHammerScript()
	{
	}

	[Token(Token = "0x60007AA")]
	[Address(RVA = "0x2730B0", Offset = "0x2730B0", VA = "0x2730B0")]
	private void Start()
	{
	}

	[Token(Token = "0x60007AB")]
	[Address(RVA = "0x273184", Offset = "0x273184", VA = "0x273184")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007AC")]
	[Address(RVA = "0x273208", Offset = "0x273208", VA = "0x273208")]
	private void Update()
	{
	}

	[Token(Token = "0x60007AD")]
	[Address(RVA = "0x273FE0", Offset = "0x273FE0", VA = "0x273FE0")]
	private void OnCollisionEnter(Collision other)
	{
	}

	[Token(Token = "0x60007AE")]
	[Address(RVA = "0x2742C4", Offset = "0x2742C4", VA = "0x2742C4")]
	[DebuggerHidden]
	private IEnumerator Shake()
	{
		return null;
	}
}
[Token(Token = "0x2000137")]
public enum BobbyState
{
	[Token(Token = "0x40008C3")]
	Idle,
	[Token(Token = "0x40008C4")]
	Fear,
	[Token(Token = "0x40008C5")]
	Happy,
	[Token(Token = "0x40008C6")]
	Talk
}
[Token(Token = "0x2000138")]
public class BobbyAnimationManagement : MenuObject
{
	[Token(Token = "0x40008C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Animator anim;

	[Token(Token = "0x40008C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private BobbyState state;

	[Token(Token = "0x40008C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private LoadWithPion[] prisons;

	[Token(Token = "0x40008CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int saveCount;

	[Token(Token = "0x40008CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float temps;

	[Token(Token = "0x60007AF")]
	[Address(RVA = "0x274FEC", Offset = "0x274FEC", VA = "0x274FEC")]
	public BobbyAnimationManagement()
	{
	}

	[Token(Token = "0x60007B0")]
	[Address(RVA = "0x274FF4", Offset = "0x274FF4", VA = "0x274FF4", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x60007B1")]
	[Address(RVA = "0x2750B8", Offset = "0x2750B8", VA = "0x2750B8", Slot = "5")]
	public override void Update()
	{
	}
}
[Token(Token = "0x2000139")]
public class BobbyFirstLaunch : MonoBehaviour
{
	[Token(Token = "0x40008CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float timeToShake;

	[Token(Token = "0x40008CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ParticleSystem[] particules;

	[Token(Token = "0x40008CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public ParticleSystem particle;

	[Token(Token = "0x40008CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private NVRInteractableItem obj;

	[Token(Token = "0x40008D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Animator anim;

	[Token(Token = "0x40008D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private BobbyState state;

	[Token(Token = "0x40008D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private GameObject sp;

	[Token(Token = "0x40008D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float time;

	[Token(Token = "0x40008D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool loading;

	[Token(Token = "0x40008D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float respawnTime;

	[Token(Token = "0x40008D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Transform origin;

	[Token(Token = "0x60007B2")]
	[Address(RVA = "0x275440", Offset = "0x275440", VA = "0x275440")]
	public BobbyFirstLaunch()
	{
	}

	[Token(Token = "0x60007B3")]
	[Address(RVA = "0x275448", Offset = "0x275448", VA = "0x275448")]
	private void Start()
	{
	}

	[Token(Token = "0x60007B4")]
	[Address(RVA = "0x275558", Offset = "0x275558", VA = "0x275558")]
	private void Update()
	{
	}

	[Token(Token = "0x60007B5")]
	[Address(RVA = "0x276134", Offset = "0x276134", VA = "0x276134")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60007B6")]
	[Address(RVA = "0x275D40", Offset = "0x275D40", VA = "0x275D40")]
	public void ResetPos()
	{
	}

	[Token(Token = "0x60007B7")]
	[Address(RVA = "0x275C40", Offset = "0x275C40", VA = "0x275C40")]
	private void LookForReset()
	{
	}

	[Token(Token = "0x60007B8")]
	[Address(RVA = "0x275730", Offset = "0x275730", VA = "0x275730")]
	private void AnimationManagement()
	{
	}
}
[Token(Token = "0x200013A")]
public class BobbyReturnToMenu : MonoBehaviour
{
	[Token(Token = "0x40008D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float timeToShake;

	[Token(Token = "0x40008D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private NVRInteractableItem obj;

	[Token(Token = "0x40008D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private GameObject sp;

	[Token(Token = "0x40008DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform origin;

	[Token(Token = "0x40008DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float time;

	[Token(Token = "0x40008DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float respawnTime;

	[Token(Token = "0x40008DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[HideInInspector]
	public bool Loading;

	[Token(Token = "0x60007B9")]
	[Address(RVA = "0x276200", Offset = "0x276200", VA = "0x276200")]
	public BobbyReturnToMenu()
	{
	}

	[Token(Token = "0x60007BA")]
	[Address(RVA = "0x276208", Offset = "0x276208", VA = "0x276208")]
	private void Start()
	{
	}

	[Token(Token = "0x60007BB")]
	[Address(RVA = "0x2762FC", Offset = "0x2762FC", VA = "0x2762FC")]
	private void Update()
	{
	}

	[Token(Token = "0x60007BC")]
	[Address(RVA = "0x276DC0", Offset = "0x276DC0", VA = "0x276DC0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60007BD")]
	[Address(RVA = "0x2769F8", Offset = "0x2769F8", VA = "0x2769F8")]
	public void ResetPos()
	{
	}
}
[Token(Token = "0x200013B")]
public class BobbyRTMAnimation : MonoBehaviour
{
	[Token(Token = "0x40008DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private NVRInteractableItem obj;

	[Token(Token = "0x40008DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Animator anim;

	[Token(Token = "0x40008E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private BobbyState state;

	[Token(Token = "0x60007BE")]
	[Address(RVA = "0x276E8C", Offset = "0x276E8C", VA = "0x276E8C")]
	public BobbyRTMAnimation()
	{
	}

	[Token(Token = "0x60007BF")]
	[Address(RVA = "0x276E94", Offset = "0x276E94", VA = "0x276E94")]
	private void Start()
	{
	}

	[Token(Token = "0x60007C0")]
	[Address(RVA = "0x276F20", Offset = "0x276F20", VA = "0x276F20")]
	private void Update()
	{
	}
}
namespace Trebuchet
{
	[Token(Token = "0x200013C")]
	public class BobbyRTMNoPooling : MonoBehaviour
	{
		[Token(Token = "0x40008E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float timeToShake;

		[Token(Token = "0x40008E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private NVRInteractableItem obj;

		[Token(Token = "0x40008E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private GameObject sp;

		[Token(Token = "0x40008E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float time;

		[Token(Token = "0x40008E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float respawnTime;

		[Token(Token = "0x40008E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject poofParticle;

		[Token(Token = "0x40008E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[HideInInspector]
		public bool Loading;

		[Token(Token = "0x60007C1")]
		[Address(RVA = "0x2A65A8", Offset = "0x2A65A8", VA = "0x2A65A8")]
		public BobbyRTMNoPooling()
		{
		}

		[Token(Token = "0x60007C2")]
		[Address(RVA = "0x2A65B0", Offset = "0x2A65B0", VA = "0x2A65B0")]
		private void Start()
		{
		}

		[Token(Token = "0x60007C3")]
		[Address(RVA = "0x2A6678", Offset = "0x2A6678", VA = "0x2A6678")]
		private void Update()
		{
		}

		[Token(Token = "0x60007C4")]
		[Address(RVA = "0x2A6BD8", Offset = "0x2A6BD8", VA = "0x2A6BD8")]
		private void FixedUpdate()
		{
		}
	}
}
[Token(Token = "0x200013D")]
public class EndDragHandler : MonoBehaviour, IEndDragHandler, IEventSystemHandler
{
	[Token(Token = "0x40008E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public UnityEvent OnDrag;

	[Token(Token = "0x60007C5")]
	[Address(RVA = "0x20C144", Offset = "0x20C144", VA = "0x20C144")]
	public EndDragHandler()
	{
	}

	[Token(Token = "0x60007C6")]
	[Address(RVA = "0x20C14C", Offset = "0x20C14C", VA = "0x20C14C", Slot = "4")]
	public void OnEndDrag(PointerEventData eventData)
	{
	}
}
[Token(Token = "0x200013E")]
public class FirstMenuStandingSensitiveAsset : MonoBehaviour
{
	[Token(Token = "0x60007C7")]
	[Address(RVA = "0x21064C", Offset = "0x21064C", VA = "0x21064C")]
	public FirstMenuStandingSensitiveAsset()
	{
	}

	[Token(Token = "0x60007C8")]
	[Address(RVA = "0x210654", Offset = "0x210654", VA = "0x210654")]
	private void Start()
	{
	}
}
[Token(Token = "0x200013F")]
public class JailWaypoint : MonoBehaviour
{
	[Token(Token = "0x60007C9")]
	[Address(RVA = "0x22B578", Offset = "0x22B578", VA = "0x22B578")]
	public JailWaypoint()
	{
	}

	[Token(Token = "0x60007CA")]
	[Address(RVA = "0x22B580", Offset = "0x22B580", VA = "0x22B580")]
	private void Start()
	{
	}
}
[Token(Token = "0x2000140")]
public class LoadingManager : MonoBehaviour
{
	[Token(Token = "0x2000323")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x169F60", Offset = "0x169F60")]
	private sealed class <FadeNLoad>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4001267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal string scene;

		[Token(Token = "0x4001268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal SceneLoader.SceneInformations <loadingScene>__0;

		[Token(Token = "0x4001269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool stayFaded;

		[Token(Token = "0x400126A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal LoadingManager $this;

		[Token(Token = "0x400126B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal object $current;

		[Token(Token = "0x400126C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal bool $disposing;

		[Token(Token = "0x400126D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal int $PC;

		[Token(Token = "0x170002A1")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60017F7")]
			[Address(RVA = "0x23B7EC", Offset = "0x23B7EC", VA = "0x23B7EC", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017F8")]
			[Address(RVA = "0x23B7F4", Offset = "0x23B7F4", VA = "0x23B7F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017F5")]
		[Address(RVA = "0x23B294", Offset = "0x23B294", VA = "0x23B294")]
		[DebuggerHidden]
		public <FadeNLoad>c__Iterator0()
		{
		}

		[Token(Token = "0x60017F6")]
		[Address(RVA = "0x23B424", Offset = "0x23B424", VA = "0x23B424", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017F9")]
		[Address(RVA = "0x23B7FC", Offset = "0x23B7FC", VA = "0x23B7FC", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60017FA")]
		[Address(RVA = "0x23B810", Offset = "0x23B810", VA = "0x23B810", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000324")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x169FC0", Offset = "0x169FC0")]
	private sealed class <PreloadPrisons>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x400126E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal LoadingManager $this;

		[Token(Token = "0x400126F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x4001270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x4001271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x170002A3")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60017FD")]
			[Address(RVA = "0x23BAF8", Offset = "0x23BAF8", VA = "0x23BAF8", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017FE")]
			[Address(RVA = "0x23BB00", Offset = "0x23BB00", VA = "0x23BB00", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017FB")]
		[Address(RVA = "0x23B41C", Offset = "0x23B41C", VA = "0x23B41C")]
		[DebuggerHidden]
		public <PreloadPrisons>c__Iterator1()
		{
		}

		[Token(Token = "0x60017FC")]
		[Address(RVA = "0x23B894", Offset = "0x23B894", VA = "0x23B894", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017FF")]
		[Address(RVA = "0x23BB08", Offset = "0x23BB08", VA = "0x23BB08", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001800")]
		[Address(RVA = "0x23BB1C", Offset = "0x23BB1C", VA = "0x23BB1C", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x40008E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static LoadingManager Instance;

	[Token(Token = "0x40008EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private bool loading;

	[Token(Token = "0x170000C2")]
	public bool IsLoading
	{
		[Token(Token = "0x60007CC")]
		[Address(RVA = "0x23AEFC", Offset = "0x23AEFC", VA = "0x23AEFC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000C3")]
	public string CalibrationScene
	{
		[Token(Token = "0x60007CD")]
		[Address(RVA = "0x23AF04", Offset = "0x23AF04", VA = "0x23AF04")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60007CB")]
	[Address(RVA = "0x23AEF4", Offset = "0x23AEF4", VA = "0x23AEF4")]
	public LoadingManager()
	{
	}

	[Token(Token = "0x60007CE")]
	[Address(RVA = "0x23AF60", Offset = "0x23AF60", VA = "0x23AF60")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007CF")]
	[Address(RVA = "0x23B010", Offset = "0x23B010", VA = "0x23B010")]
	private void Start()
	{
	}

	[Token(Token = "0x60007D0")]
	[Address(RVA = "0x23B048", Offset = "0x23B048", VA = "0x23B048")]
	private string NextSceneFromLoading()
	{
		return null;
	}

	[Token(Token = "0x60007D1")]
	[Address(RVA = "0x23B190", Offset = "0x23B190", VA = "0x23B190")]
	public void LoadMenuFormLoadingScene()
	{
	}

	[Token(Token = "0x60007D2")]
	[Address(RVA = "0x23B1B0", Offset = "0x23B1B0", VA = "0x23B1B0")]
	public void ChangeScene(string scene)
	{
	}

	[Token(Token = "0x60007D3")]
	[Address(RVA = "0x23B1E8", Offset = "0x23B1E8", VA = "0x23B1E8")]
	[DebuggerHidden]
	public IEnumerator FadeNLoad(string scene, bool stayFaded = false)
	{
		return null;
	}

	[Token(Token = "0x60007D4")]
	[Address(RVA = "0x23B29C", Offset = "0x23B29C", VA = "0x23B29C")]
	public void Unfade()
	{
	}

	[Token(Token = "0x60007D5")]
	[Address(RVA = "0x23B39C", Offset = "0x23B39C", VA = "0x23B39C")]
	[DebuggerHidden]
	private IEnumerator PreloadPrisons()
	{
		return null;
	}

	[Token(Token = "0x60007D6")]
	[Address(RVA = "0x23B15C", Offset = "0x23B15C", VA = "0x23B15C")]
	private SceneLoader.SceneInformations PreloadPrison(string name)
	{
		return null;
	}
}
[Token(Token = "0x2000141")]
public enum CompareTo
{
	[Token(Token = "0x40008EC")]
	PrisonUnlock,
	[Token(Token = "0x40008ED")]
	TutorialDone
}
[Token(Token = "0x2000142")]
public class LoadUnlockProgression : MonoBehaviour
{
	[Token(Token = "0x40008EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int ID;

	[Token(Token = "0x40008EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public CompareTo compareIDTo;

	[Token(Token = "0x40008F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool isActive;

	[Token(Token = "0x40008F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	public bool isArcadeBorne;

	[Token(Token = "0x40008F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI scoreText;

	[Token(Token = "0x60007D7")]
	[Address(RVA = "0x23C954", Offset = "0x23C954", VA = "0x23C954")]
	public LoadUnlockProgression()
	{
	}

	[Token(Token = "0x60007D8")]
	[Address(RVA = "0x23C95C", Offset = "0x23C95C", VA = "0x23C95C")]
	public void Init()
	{
	}
}
[Token(Token = "0x2000143")]
public class LoadWithPion : MonoBehaviour
{
	[Token(Token = "0x40008F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public UnityEvent action;

	[Token(Token = "0x40008F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private float timer;

	[Token(Token = "0x40008F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private bool finished;

	[Token(Token = "0x40008F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	private bool active;

	[Token(Token = "0x60007D9")]
	[Address(RVA = "0x23CCFC", Offset = "0x23CCFC", VA = "0x23CCFC")]
	public LoadWithPion()
	{
	}

	[Token(Token = "0x60007DA")]
	[Address(RVA = "0x23CD0C", Offset = "0x23CD0C", VA = "0x23CD0C")]
	private void OnTriggerStay(Collider col)
	{
	}

	[Token(Token = "0x60007DB")]
	[Address(RVA = "0x23CE88", Offset = "0x23CE88", VA = "0x23CE88")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x60007DC")]
	[Address(RVA = "0x23CFC8", Offset = "0x23CFC8", VA = "0x23CFC8")]
	private void OnTriggerExit(Collider col)
	{
	}
}
[Token(Token = "0x2000144")]
public class LogoManager : MonoBehaviour
{
	[Token(Token = "0x40008F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public SpriteRenderer[] sprites;

	[Token(Token = "0x40008F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float Delay;

	[Token(Token = "0x40008F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float animationDuration;

	[Token(Token = "0x40008FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float FadeDelay;

	[Token(Token = "0x40008FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public bool CanLaunchGame;

	[Token(Token = "0x40008FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool freeze;

	[Token(Token = "0x40008FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform target;

	[Token(Token = "0x40008FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool readyToFade;

	[Token(Token = "0x40008FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float timer;

	[Token(Token = "0x4000900")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int actualLogo;

	[Token(Token = "0x60007DD")]
	[Address(RVA = "0x23D108", Offset = "0x23D108", VA = "0x23D108")]
	public LogoManager()
	{
	}

	[Token(Token = "0x60007DE")]
	[Address(RVA = "0x23D110", Offset = "0x23D110", VA = "0x23D110")]
	private void Start()
	{
	}

	[Token(Token = "0x60007DF")]
	[Address(RVA = "0x23D154", Offset = "0x23D154", VA = "0x23D154")]
	private void Update()
	{
	}

	[Token(Token = "0x60007E0")]
	[Address(RVA = "0x23D17C", Offset = "0x23D17C", VA = "0x23D17C")]
	private void followTarget()
	{
	}

	[Token(Token = "0x60007E1")]
	[Address(RVA = "0x23D3EC", Offset = "0x23D3EC", VA = "0x23D3EC")]
	private void RunAnimation()
	{
	}
}
namespace Trebuchet
{
	[Token(Token = "0x2000145")]
	public class MedalManager : MonoBehaviour
	{
		[Token(Token = "0x2000325")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16A040", Offset = "0x16A040")]
		private sealed class <LateStart>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x4001272")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal MedalManager $this;

			[Token(Token = "0x4001273")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal object $current;

			[Token(Token = "0x4001274")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal bool $disposing;

			[Token(Token = "0x4001275")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal int $PC;

			[Token(Token = "0x170002A5")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x6001803")]
				[Address(RVA = "0x2AC5B0", Offset = "0x2AC5B0", VA = "0x2AC5B0", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002A6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001804")]
				[Address(RVA = "0x2AC5B8", Offset = "0x2AC5B8", VA = "0x2AC5B8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001801")]
			[Address(RVA = "0x2AC1D8", Offset = "0x2AC1D8", VA = "0x2AC1D8")]
			[DebuggerHidden]
			public <LateStart>c__Iterator0()
			{
			}

			[Token(Token = "0x6001802")]
			[Address(RVA = "0x2AC4C8", Offset = "0x2AC4C8", VA = "0x2AC4C8", Slot = "5")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001805")]
			[Address(RVA = "0x2AC5C0", Offset = "0x2AC5C0", VA = "0x2AC5C0", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x6001806")]
			[Address(RVA = "0x2AC5D4", Offset = "0x2AC5D4", VA = "0x2AC5D4", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x4000901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public string prisonName;

		[Token(Token = "0x4000902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Material[] medalMats;

		[Token(Token = "0x4000903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float rotY;

		[Token(Token = "0x60007E2")]
		[Address(RVA = "0x2AC12C", Offset = "0x2AC12C", VA = "0x2AC12C")]
		public MedalManager()
		{
		}

		[Token(Token = "0x60007E3")]
		[Address(RVA = "0x2AC134", Offset = "0x2AC134", VA = "0x2AC134")]
		private void Start()
		{
		}

		[Token(Token = "0x60007E4")]
		[Address(RVA = "0x2AC158", Offset = "0x2AC158", VA = "0x2AC158")]
		[DebuggerHidden]
		private IEnumerator LateStart()
		{
			return null;
		}

		[Token(Token = "0x60007E5")]
		[Address(RVA = "0x2AC1E0", Offset = "0x2AC1E0", VA = "0x2AC1E0")]
		private void Update()
		{
		}

		[Token(Token = "0x60007E6")]
		[Address(RVA = "0x2AC31C", Offset = "0x2AC31C", VA = "0x2AC31C")]
		private void CheckHighScore()
		{
		}
	}
}
[Token(Token = "0x2000146")]
public class MenuMusicPlayer : MonoBehaviour
{
	[Token(Token = "0x2000326")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16A0B0", Offset = "0x16A0B0")]
	private sealed class <StartSound>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4001276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal bool loadLogo;

		[Token(Token = "0x4001277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal MenuMusicPlayer $this;

		[Token(Token = "0x4001278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal object $current;

		[Token(Token = "0x4001279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal bool $disposing;

		[Token(Token = "0x400127A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal int $PC;

		[Token(Token = "0x170002A7")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6001809")]
			[Address(RVA = "0x24AEFC", Offset = "0x24AEFC", VA = "0x24AEFC", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600180A")]
			[Address(RVA = "0x24AF04", Offset = "0x24AF04", VA = "0x24AF04", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001807")]
		[Address(RVA = "0x24AAB8", Offset = "0x24AAB8", VA = "0x24AAB8")]
		[DebuggerHidden]
		public <StartSound>c__Iterator0()
		{
		}

		[Token(Token = "0x6001808")]
		[Address(RVA = "0x24ACC0", Offset = "0x24ACC0", VA = "0x24ACC0", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600180B")]
		[Address(RVA = "0x24AF0C", Offset = "0x24AF0C", VA = "0x24AF0C", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x600180C")]
		[Address(RVA = "0x24AF20", Offset = "0x24AF20", VA = "0x24AF20", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4000904")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MenuMusicPlayer Instance;

	[Token(Token = "0x4000905")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private uint musicEvent;

	[Token(Token = "0x60007E7")]
	[Address(RVA = "0x24A7A0", Offset = "0x24A7A0", VA = "0x24A7A0")]
	public MenuMusicPlayer()
	{
	}

	[Token(Token = "0x60007E8")]
	[Address(RVA = "0x24A7A8", Offset = "0x24A7A8", VA = "0x24A7A8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007E9")]
	[Address(RVA = "0x24A934", Offset = "0x24A934", VA = "0x24A934")]
	private void Start()
	{
	}

	[Token(Token = "0x60007EA")]
	[Address(RVA = "0x24AA20", Offset = "0x24AA20", VA = "0x24AA20")]
	[DebuggerHidden]
	private IEnumerator StartSound(bool loadLogo)
	{
		return null;
	}

	[Token(Token = "0x60007EB")]
	[Address(RVA = "0x24AAC0", Offset = "0x24AAC0", VA = "0x24AAC0")]
	private void ActiveSceneChanged(Scene current, Scene next)
	{
	}
}
[Token(Token = "0x2000147")]
public class MenuObject : MonoBehaviour
{
	[Token(Token = "0x4000906")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float respawnDistance;

	[Token(Token = "0x4000907")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject particle;

	[Token(Token = "0x4000908")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[HideInInspector]
	public bool StopReset;

	[Token(Token = "0x4000909")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ParticleSystem[] _particulePool;

	[Token(Token = "0x400090A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float _timer;

	[Token(Token = "0x400090B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform _OriginParent;

	[Token(Token = "0x400090C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 _localOriginPos;

	[Token(Token = "0x400090D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Quaternion _localOriginRot;

	[Token(Token = "0x400090E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool _overriden;

	[Token(Token = "0x400090F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 _overridePos;

	[Token(Token = "0x4000910")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion _overrideRot;

	[Token(Token = "0x4000911")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected NVRInteractableItem _obj;

	[Token(Token = "0x170000C4")]
	private Vector3 targetPosition
	{
		[Token(Token = "0x60007ED")]
		[Address(RVA = "0x24AFAC", Offset = "0x24AFAC", VA = "0x24AFAC")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170000C5")]
	private Quaternion targetRotation
	{
		[Token(Token = "0x60007EE")]
		[Address(RVA = "0x24AFD8", Offset = "0x24AFD8", VA = "0x24AFD8")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x60007EC")]
	[Address(RVA = "0x24AFA4", Offset = "0x24AFA4", VA = "0x24AFA4")]
	public MenuObject()
	{
	}

	[Token(Token = "0x60007EF")]
	[Address(RVA = "0x24B00C", Offset = "0x24B00C", VA = "0x24B00C", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x60007F0")]
	[Address(RVA = "0x24B144", Offset = "0x24B144", VA = "0x24B144", Slot = "5")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x60007F1")]
	[Address(RVA = "0x24B148", Offset = "0x24B148", VA = "0x24B148")]
	private void CheckPos()
	{
	}

	[Token(Token = "0x60007F2")]
	[Address(RVA = "0x24B5C4", Offset = "0x24B5C4", VA = "0x24B5C4")]
	public void Override(Transform targetTransform)
	{
	}

	[Token(Token = "0x60007F3")]
	[Address(RVA = "0x24B684", Offset = "0x24B684", VA = "0x24B684")]
	public void ResetOverride()
	{
	}

	[Token(Token = "0x60007F4")]
	[Address(RVA = "0x24B3C4", Offset = "0x24B3C4", VA = "0x24B3C4")]
	public void ResetPos()
	{
	}

	[Token(Token = "0x60007F5")]
	[Address(RVA = "0x24B6CC", Offset = "0x24B6CC", VA = "0x24B6CC")]
	private void ParticleManagement()
	{
	}
}
[Token(Token = "0x2000148")]
public class PhysicalLever : MonoBehaviour
{
	[Token(Token = "0x2000327")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16A130", Offset = "0x16A130")]
	private sealed class <AdditionalWaitTime>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x400127B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal PhysicalLever $this;

		[Token(Token = "0x400127C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x400127D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x400127E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x170002A9")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x600180F")]
			[Address(RVA = "0x33572C", Offset = "0x33572C", VA = "0x33572C", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002AA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001810")]
			[Address(RVA = "0x335734", Offset = "0x335734", VA = "0x335734", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600180D")]
		[Address(RVA = "0x335624", Offset = "0x335624", VA = "0x335624")]
		[DebuggerHidden]
		public <AdditionalWaitTime>c__Iterator0()
		{
		}

		[Token(Token = "0x600180E")]
		[Address(RVA = "0x33562C", Offset = "0x33562C", VA = "0x33562C", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001811")]
		[Address(RVA = "0x33573C", Offset = "0x33573C", VA = "0x33573C", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001812")]
		[Address(RVA = "0x335750", Offset = "0x335750", VA = "0x335750", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4000912")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public UnityEvent OnActivation;

	[Token(Token = "0x4000913")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int maxActiveObject;

	[Token(Token = "0x4000914")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int delayBetweenActivation;

	[Token(Token = "0x4000915")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool active;

	[Token(Token = "0x4000916")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool Spawning;

	[Token(Token = "0x4000917")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private GameObject Axe;

	[Token(Token = "0x60007F6")]
	[Address(RVA = "0x3350B4", Offset = "0x3350B4", VA = "0x3350B4")]
	public PhysicalLever()
	{
	}

	[Token(Token = "0x60007F7")]
	[Address(RVA = "0x3350CC", Offset = "0x3350CC", VA = "0x3350CC")]
	private void Start()
	{
	}

	[Token(Token = "0x60007F8")]
	[Address(RVA = "0x335170", Offset = "0x335170", VA = "0x335170")]
	private void Update()
	{
	}

	[Token(Token = "0x60007F9")]
	[Address(RVA = "0x3355A4", Offset = "0x3355A4", VA = "0x3355A4")]
	[DebuggerHidden]
	private IEnumerator AdditionalWaitTime()
	{
		return null;
	}
}
[Token(Token = "0x2000149")]
public class PhysicalSaveLoader : MonoBehaviour
{
	[Token(Token = "0x4000918")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject loadSprite;

	[Token(Token = "0x4000919")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[HideInInspector]
	public int saveID;

	[Token(Token = "0x400091A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public TextMeshProUGUI dateTimeData;

	[Token(Token = "0x400091B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI convictNameData;

	[Token(Token = "0x400091C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public TextMeshProUGUI daysPassedData;

	[Token(Token = "0x400091D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI cashData;

	[Token(Token = "0x400091E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public TextMeshProUGUI GameType;

	[Token(Token = "0x400091F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image PrisonImage;

	[Token(Token = "0x4000920")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public TextMeshProUGUI superTierTracker;

	[Token(Token = "0x4000921")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TierTrackerWrapper[] tierTrackers;

	[Token(Token = "0x4000922")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16A1A0", Offset = "0x16A1A0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x16A1A0", Offset = "0x16A1A0")]
	private bool <Sandbox>k__BackingField;

	[Token(Token = "0x4000923")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16A1D4", Offset = "0x16A1D4")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x16A1D4", Offset = "0x16A1D4")]
	private int <PrisonId>k__BackingField;

	[Token(Token = "0x4000924")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Sprite[] prisonSprites;

	[Token(Token = "0x4000925")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public Vector2 tierData;

	[Token(Token = "0x4000926")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool load;

	[Token(Token = "0x170000C6")]
	public bool Sandbox
	{
		[Token(Token = "0x60007FB")]
		[Address(RVA = "0x3357DC", Offset = "0x3357DC", VA = "0x3357DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16A218", Offset = "0x16A218")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60007FC")]
		[Address(RVA = "0x3357E4", Offset = "0x3357E4", VA = "0x3357E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16A228", Offset = "0x16A228")]
		private set
		{
		}
	}

	[Token(Token = "0x170000C7")]
	public int PrisonId
	{
		[Token(Token = "0x60007FD")]
		[Address(RVA = "0x3357EC", Offset = "0x3357EC", VA = "0x3357EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16A238", Offset = "0x16A238")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60007FE")]
		[Address(RVA = "0x3357F4", Offset = "0x3357F4", VA = "0x3357F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16A248", Offset = "0x16A248")]
		private set
		{
		}
	}

	[Token(Token = "0x60007FA")]
	[Address(RVA = "0x3357D4", Offset = "0x3357D4", VA = "0x3357D4")]
	public PhysicalSaveLoader()
	{
	}

	[Token(Token = "0x60007FF")]
	[Address(RVA = "0x3357FC", Offset = "0x3357FC", VA = "0x3357FC")]
	public void SetupPhysicalFile(string dateTime, string convictName, string daysPassed, string cash, int actualTier, int maxTier, bool sandbox, int prisonId, bool overrideText = false)
	{
	}

	[Token(Token = "0x6000800")]
	[Address(RVA = "0x335FC0", Offset = "0x335FC0", VA = "0x335FC0")]
	private void OnTriggerEnter(Collider other)
	{
	}
}
[Token(Token = "0x200014A")]
public class PrewarmDebuger : MonoBehaviour
{
	[Token(Token = "0x6000801")]
	[Address(RVA = "0x34391C", Offset = "0x34391C", VA = "0x34391C")]
	public PrewarmDebuger()
	{
	}

	[Token(Token = "0x6000802")]
	[Address(RVA = "0x343924", Offset = "0x343924", VA = "0x343924")]
	private void Start()
	{
	}
}
[Token(Token = "0x200014B")]
public class SandboxCardboardBox : MonoBehaviour
{
	[Token(Token = "0x4000927")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject particle;

	[Token(Token = "0x4000928")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject LoadingDataPrefab;

	[Token(Token = "0x4000929")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Transform[] positions;

	[Token(Token = "0x400092A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform pool;

	[Token(Token = "0x400092B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Button startButton;

	[Token(Token = "0x400092C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int lastCollider;

	[Token(Token = "0x400092D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Rigidbody StartingRessource;

	[Token(Token = "0x400092E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Rigidbody Prison;

	[Token(Token = "0x400092F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Rigidbody GameDuration;

	[Token(Token = "0x6000803")]
	[Address(RVA = "0x347978", Offset = "0x347978", VA = "0x347978")]
	public SandboxCardboardBox()
	{
	}

	[Token(Token = "0x6000804")]
	[Address(RVA = "0x347980", Offset = "0x347980", VA = "0x347980")]
	private void Start()
	{
	}

	[Token(Token = "0x6000805")]
	[Address(RVA = "0x347A50", Offset = "0x347A50", VA = "0x347A50")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x6000806")]
	[Address(RVA = "0x348BD0", Offset = "0x348BD0", VA = "0x348BD0")]
	public void StartSandBoxGame()
	{
	}

	[Token(Token = "0x6000807")]
	[Address(RVA = "0x347D94", Offset = "0x347D94", VA = "0x347D94")]
	private bool CheckDelay()
	{
		return default(bool);
	}

	[Token(Token = "0x6000808")]
	[Address(RVA = "0x347DC8", Offset = "0x347DC8", VA = "0x347DC8")]
	private bool TriggerRessource(Rigidbody rb)
	{
		return default(bool);
	}

	[Token(Token = "0x6000809")]
	[Address(RVA = "0x348298", Offset = "0x348298", VA = "0x348298")]
	private bool TriggerPrison(Rigidbody rb)
	{
		return default(bool);
	}

	[Token(Token = "0x600080A")]
	[Address(RVA = "0x348660", Offset = "0x348660", VA = "0x348660")]
	private bool TriggerTime(Rigidbody rb)
	{
		return default(bool);
	}

	[Token(Token = "0x600080B")]
	[Address(RVA = "0x34984C", Offset = "0x34984C", VA = "0x34984C")]
	private static void TriggerGeneric(Rigidbody new_choice, Transform position, ref Rigidbody reference)
	{
	}

	[Token(Token = "0x600080C")]
	[Address(RVA = "0x3489CC", Offset = "0x3489CC", VA = "0x3489CC")]
	private void CreateParticule()
	{
	}
}
[Token(Token = "0x200014C")]
public class SaveDestroyer : NVRInteractable
{
	[Token(Token = "0x2000328")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16A278", Offset = "0x16A278")]
	private sealed class <Freeze>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x400127F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal SaveDestroyer $this;

		[Token(Token = "0x4001280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x4001281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x4001282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x170002AB")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6001815")]
			[Address(RVA = "0x292B28", Offset = "0x292B28", VA = "0x292B28", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002AC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001816")]
			[Address(RVA = "0x292B30", Offset = "0x292B30", VA = "0x292B30", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001813")]
		[Address(RVA = "0x29296C", Offset = "0x29296C", VA = "0x29296C")]
		[DebuggerHidden]
		public <Freeze>c__Iterator0()
		{
		}

		[Token(Token = "0x6001814")]
		[Address(RVA = "0x292A30", Offset = "0x292A30", VA = "0x292A30", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001817")]
		[Address(RVA = "0x292B38", Offset = "0x292B38", VA = "0x292B38", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001818")]
		[Address(RVA = "0x292B4C", Offset = "0x292B4C", VA = "0x292B4C", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4000930")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float MovementRange;

	[Token(Token = "0x4000931")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float AngleRange;

	[Token(Token = "0x4000932")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Animator anim;

	[Token(Token = "0x4000933")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float timer;

	[Token(Token = "0x4000934")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private GameObject sprite;

	[Token(Token = "0x4000935")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject saveToDestroy;

	[Token(Token = "0x4000936")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int saveIDtoDestroy;

	[Token(Token = "0x4000937")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private ParticleSystem particule;

	[Token(Token = "0x4000938")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public PhysicalSaveLoader dummyFile;

	[Token(Token = "0x4000939")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private HighlightManager HL;

	[Token(Token = "0x400093A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private bool active;

	[Token(Token = "0x400093B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	private bool loaded;

	[Token(Token = "0x400093C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x66")]
	private bool freeze;

	[Token(Token = "0x400093D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private uint playEvent;

	[Token(Token = "0x400093E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private uint stopEvent;

	[Token(Token = "0x400093F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private uint pressEvent;

	[Token(Token = "0x4000940")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[SerializeField]
	private float timeToDestroy;

	[Token(Token = "0x4000941")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float timeToDestroyAnim;

	[Token(Token = "0x600080D")]
	[Address(RVA = "0x291980", Offset = "0x291980", VA = "0x291980")]
	public SaveDestroyer()
	{
	}

	[Token(Token = "0x600080E")]
	[Address(RVA = "0x291998", Offset = "0x291998", VA = "0x291998", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x600080F")]
	[Address(RVA = "0x291C2C", Offset = "0x291C2C", VA = "0x291C2C")]
	public void buttonFeedback()
	{
	}

	[Token(Token = "0x6000810")]
	[Address(RVA = "0x291CCC", Offset = "0x291CCC", VA = "0x291CCC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000811")]
	[Address(RVA = "0x29220C", Offset = "0x29220C", VA = "0x29220C")]
	public void LaunchDelete()
	{
	}

	[Token(Token = "0x6000812")]
	[Address(RVA = "0x292218", Offset = "0x292218", VA = "0x292218", Slot = "9")]
	public override void UpdateColliders()
	{
	}

	[Token(Token = "0x6000813")]
	[Address(RVA = "0x2922C4", Offset = "0x2922C4", VA = "0x2922C4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000814")]
	[Address(RVA = "0x2926DC", Offset = "0x2926DC", VA = "0x2926DC", Slot = "14")]
	public override void HoveringUpdate(NVRHand hand, float forTime)
	{
	}

	[Token(Token = "0x6000815")]
	[Address(RVA = "0x2927BC", Offset = "0x2927BC", VA = "0x2927BC", Slot = "12")]
	public override void BeginInteraction(NVRHand hand)
	{
	}

	[Token(Token = "0x6000816")]
	[Address(RVA = "0x2928EC", Offset = "0x2928EC", VA = "0x2928EC")]
	[DebuggerHidden]
	private IEnumerator Freeze()
	{
		return null;
	}

	[Token(Token = "0x6000817")]
	[Address(RVA = "0x292974", Offset = "0x292974", VA = "0x292974", Slot = "21")]
	protected override void OnDestroy()
	{
	}
}
[Token(Token = "0x200014D")]
public class SimpleVideoPlay : MonoBehaviour
{
	[Token(Token = "0x4000942")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x16A2D8", Offset = "0x16A2D8")]
	public string VideoPath;

	[Token(Token = "0x6000818")]
	[Address(RVA = "0x29DC6C", Offset = "0x29DC6C", VA = "0x29DC6C")]
	public SimpleVideoPlay()
	{
	}

	[Token(Token = "0x6000819")]
	[Address(RVA = "0x29DCD8", Offset = "0x29DCD8", VA = "0x29DCD8")]
	private void Start()
	{
	}
}
[Token(Token = "0x200014E")]
public class Singleton : MonoBehaviour
{
	[Token(Token = "0x4000943")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Singleton TheOne;

	[Token(Token = "0x600081A")]
	[Address(RVA = "0x29DDD8", Offset = "0x29DDD8", VA = "0x29DDD8")]
	public Singleton()
	{
	}

	[Token(Token = "0x600081B")]
	[Address(RVA = "0x29DDE0", Offset = "0x29DDE0", VA = "0x29DDE0")]
	private void Awake()
	{
	}
}
[Token(Token = "0x200014F")]
public class StandingSensitiveAsset : MonoBehaviour
{
	[Token(Token = "0x4000944")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool disableAfterUse;

	[Token(Token = "0x4000945")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private NVRPlayer player;

	[Token(Token = "0x600081C")]
	[Address(RVA = "0x29ECBC", Offset = "0x29ECBC", VA = "0x29ECBC")]
	public StandingSensitiveAsset()
	{
	}

	[Token(Token = "0x600081D")]
	[Address(RVA = "0x29ECC4", Offset = "0x29ECC4", VA = "0x29ECC4")]
	private void Start()
	{
	}

	[Token(Token = "0x600081E")]
	[Address(RVA = "0x29EE40", Offset = "0x29EE40", VA = "0x29EE40")]
	private void Update()
	{
	}
}
[Token(Token = "0x2000150")]
public enum FurnitureType
{
	[Token(Token = "0x4000947")]
	None,
	[Token(Token = "0x4000948")]
	Basic,
	[Token(Token = "0x4000949")]
	Robinet
}
[Token(Token = "0x2000151")]
public class StaticFurniture : MonoBehaviour
{
	[Token(Token = "0x400094A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 Pos;

	[Token(Token = "0x400094B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FurnitureType type;

	[Token(Token = "0x400094C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool arcade;

	[Token(Token = "0x400094D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool tutorial;

	[Token(Token = "0x400094E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	public bool unactiveOnStart;

	[Token(Token = "0x400094F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] JoinedObject;

	[Token(Token = "0x4000950")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3[] JoinedObjectPosition;

	[Token(Token = "0x4000951")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Quaternion[] JoinedObjectRotation;

	[Token(Token = "0x600081F")]
	[Address(RVA = "0x29F0D8", Offset = "0x29F0D8", VA = "0x29F0D8")]
	public StaticFurniture()
	{
	}

	[Token(Token = "0x6000820")]
	[Address(RVA = "0x29F0E0", Offset = "0x29F0E0", VA = "0x29F0E0")]
	public void Start()
	{
	}

	[Token(Token = "0x6000821")]
	[Address(RVA = "0x29F640", Offset = "0x29F640", VA = "0x29F640")]
	private void rotationAndJoinManagement()
	{
	}
}
[Token(Token = "0x2000152")]
public class TutorialSelectionBox : MonoBehaviour
{
	[Token(Token = "0x4000952")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int maxObj;

	[Token(Token = "0x4000953")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject particle;

	[Token(Token = "0x4000954")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int _count;

	[Token(Token = "0x4000955")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<string> _objectChoosen;

	[Token(Token = "0x6000822")]
	[Address(RVA = "0x2BBBC8", Offset = "0x2BBBC8", VA = "0x2BBBC8")]
	public TutorialSelectionBox()
	{
	}

	[Token(Token = "0x6000823")]
	[Address(RVA = "0x2BBBD0", Offset = "0x2BBBD0", VA = "0x2BBBD0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000824")]
	[Address(RVA = "0x2BBC50", Offset = "0x2BBC50", VA = "0x2BBC50")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x6000825")]
	[Address(RVA = "0x2BC030", Offset = "0x2BC030", VA = "0x2BC030")]
	private bool AlreadyChoosen(string obj)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000153")]
public class TutorialSelectionCarier : MonoBehaviour
{
	[Token(Token = "0x4000956")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static TutorialSelectionCarier Instance;

	[Token(Token = "0x4000957")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string tutorials;

	[Token(Token = "0x4000958")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject dataCourier;

	[Token(Token = "0x6000826")]
	[Address(RVA = "0x2BC374", Offset = "0x2BC374", VA = "0x2BC374")]
	public TutorialSelectionCarier()
	{
	}

	[Token(Token = "0x6000827")]
	[Address(RVA = "0x2BC37C", Offset = "0x2BC37C", VA = "0x2BC37C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000828")]
	[Address(RVA = "0x2BC1D0", Offset = "0x2BC1D0", VA = "0x2BC1D0")]
	public void AddTutorial(string tutorial)
	{
	}

	[Token(Token = "0x6000829")]
	[Address(RVA = "0x2BC458", Offset = "0x2BC458", VA = "0x2BC458")]
	public void Spread(TutorialManager tm)
	{
	}

	[Token(Token = "0x600082A")]
	[Address(RVA = "0x2BC2E8", Offset = "0x2BC2E8", VA = "0x2BC2E8")]
	public void Load()
	{
	}
}
[Token(Token = "0x2000154")]
public class TutorialSelectionItemManager : MonoBehaviour
{
	[Token(Token = "0x4000959")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Transform cadenasHolder;

	[Token(Token = "0x600082B")]
	[Address(RVA = "0x2BC570", Offset = "0x2BC570", VA = "0x2BC570")]
	public TutorialSelectionItemManager()
	{
	}

	[Token(Token = "0x600082C")]
	[Address(RVA = "0x2BC578", Offset = "0x2BC578", VA = "0x2BC578")]
	private void Start()
	{
	}

	[Token(Token = "0x600082D")]
	[Address(RVA = "0x2BC860", Offset = "0x2BC860", VA = "0x2BC860")]
	private GameObject closestCadena(Transform t)
	{
		return null;
	}
}
[Token(Token = "0x2000155")]
public class TutorialSelectionManager : MonoBehaviour
{
	[Token(Token = "0x600082E")]
	[Address(RVA = "0x2BCA14", Offset = "0x2BCA14", VA = "0x2BCA14")]
	public TutorialSelectionManager()
	{
	}

	[Token(Token = "0x600082F")]
	[Address(RVA = "0x2BCA1C", Offset = "0x2BCA1C", VA = "0x2BCA1C")]
	private void Awake()
	{
	}
}
[Token(Token = "0x2000156")]
public class MorningDate : MonoBehaviour
{
	[Token(Token = "0x2000329")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16A31C", Offset = "0x16A31C")]
	private sealed class <DelaySetDate>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4001283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal int <g>__0;

		[Token(Token = "0x4001284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal string <suffix>__0;

		[Token(Token = "0x4001285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal MorningDate $this;

		[Token(Token = "0x4001286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal object $current;

		[Token(Token = "0x4001287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal bool $disposing;

		[Token(Token = "0x4001288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal int $PC;

		[Token(Token = "0x170002AD")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x600181B")]
			[Address(RVA = "0x250A30", Offset = "0x250A30", VA = "0x250A30", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002AE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600181C")]
			[Address(RVA = "0x250A38", Offset = "0x250A38", VA = "0x250A38", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001819")]
		[Address(RVA = "0x250140", Offset = "0x250140", VA = "0x250140")]
		[DebuggerHidden]
		public <DelaySetDate>c__Iterator0()
		{
		}

		[Token(Token = "0x600181A")]
		[Address(RVA = "0x250464", Offset = "0x250464", VA = "0x250464", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600181D")]
		[Address(RVA = "0x250A40", Offset = "0x250A40", VA = "0x250A40", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x600181E")]
		[Address(RVA = "0x250A54", Offset = "0x250A54", VA = "0x250A54", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x400095A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private TextMeshProUGUI theDayText;

	[Token(Token = "0x400095B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private TextMeshProUGUI theDateText;

	[Token(Token = "0x400095C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private TextMeshProUGUI countDays;

	[Token(Token = "0x400095D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator anim;

	[Token(Token = "0x6000830")]
	[Address(RVA = "0x24FEA0", Offset = "0x24FEA0", VA = "0x24FEA0")]
	public MorningDate()
	{
	}

	[Token(Token = "0x6000831")]
	[Address(RVA = "0x24FEA8", Offset = "0x24FEA8", VA = "0x24FEA8")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000832")]
	[Address(RVA = "0x25009C", Offset = "0x25009C", VA = "0x25009C")]
	public void SetDate()
	{
	}

	[Token(Token = "0x6000833")]
	[Address(RVA = "0x2500C0", Offset = "0x2500C0", VA = "0x2500C0")]
	[DebuggerHidden]
	private IEnumerator DelaySetDate()
	{
		return null;
	}

	[Token(Token = "0x6000834")]
	[Address(RVA = "0x250148", Offset = "0x250148", VA = "0x250148")]
	private string GetSuffix(int day)
	{
		return null;
	}

	[Token(Token = "0x6000835")]
	[Address(RVA = "0x250334", Offset = "0x250334", VA = "0x250334")]
	private void LaunchAnim()
	{
	}

	[Token(Token = "0x6000836")]
	[Address(RVA = "0x2503AC", Offset = "0x2503AC", VA = "0x2503AC")]
	public void AnimDone()
	{
	}
}
[Token(Token = "0x2000157")]
public class NettoyerPrechargement : MonoBehaviour
{
	[Token(Token = "0x6000837")]
	[Address(RVA = "0x250F68", Offset = "0x250F68", VA = "0x250F68")]
	public NettoyerPrechargement()
	{
	}

	[Token(Token = "0x6000838")]
	[Address(RVA = "0x250F70", Offset = "0x250F70", VA = "0x250F70")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x16A37C", Offset = "0x16A37C")]
	private void Trouver()
	{
	}

	[Token(Token = "0x6000839")]
	[Address(RVA = "0x251260", Offset = "0x251260", VA = "0x251260")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x16A3B0", Offset = "0x16A3B0")]
	private void Nettoyer()
	{
	}

	[Token(Token = "0x600083A")]
	private void Detruire<Type>() where Type : Component
	{
	}
}
[Token(Token = "0x2000158")]
public class Announcer : NPC
{
	[Token(Token = "0x200032A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16A3F4", Offset = "0x16A3F4")]
	private sealed class <PrepareToAnnounce>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4001289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal Transform jailSpot;

		[Token(Token = "0x400128A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal Announcer $this;

		[Token(Token = "0x400128B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal object $current;

		[Token(Token = "0x400128C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal bool $disposing;

		[Token(Token = "0x400128D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal int $PC;

		[Token(Token = "0x170002AF")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6001821")]
			[Address(RVA = "0x26EB14", Offset = "0x26EB14", VA = "0x26EB14", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001822")]
			[Address(RVA = "0x26EB1C", Offset = "0x26EB1C", VA = "0x26EB1C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600181F")]
		[Address(RVA = "0x26E42C", Offset = "0x26E42C", VA = "0x26E42C")]
		[DebuggerHidden]
		public <PrepareToAnnounce>c__Iterator0()
		{
		}

		[Token(Token = "0x6001820")]
		[Address(RVA = "0x26E908", Offset = "0x26E908", VA = "0x26E908", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001823")]
		[Address(RVA = "0x26EB24", Offset = "0x26EB24", VA = "0x26EB24", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001824")]
		[Address(RVA = "0x26EB38", Offset = "0x26EB38", VA = "0x26EB38", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x400095E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject canvas;

	[Token(Token = "0x400095F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Canvas trueCanvas;

	[Token(Token = "0x4000960")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMeshProUGUI announceTextSolo;

	[Token(Token = "0x4000961")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public TextMeshProUGUI announceTextWithVisuals;

	[Token(Token = "0x4000962")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Queue<string> announcements;

	[Token(Token = "0x4000963")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public GameObject[] visuals;

	[Token(Token = "0x4000964")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected GameObject _currentVisual;

	[Token(Token = "0x4000965")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public Transform visualAnchor;

	[Token(Token = "0x4000966")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected int announcementIndex;

	[Token(Token = "0x4000967")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	protected int announcementsCount;

	[Token(Token = "0x4000968")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float timeBeforeReplacing;

	[Token(Token = "0x4000969")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Transform currentJailSpot;

	[Token(Token = "0x400096A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Button doneButton;

	[Token(Token = "0x400096B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	protected Tween doText;

	[Token(Token = "0x600083B")]
	[Address(RVA = "0x26DC20", Offset = "0x26DC20", VA = "0x26DC20")]
	public Announcer()
	{
	}

	[Token(Token = "0x600083C")]
	[Address(RVA = "0x26DCAC", Offset = "0x26DCAC", VA = "0x26DCAC", Slot = "6")]
	public override void Initialize()
	{
	}

	[Token(Token = "0x600083D")]
	[Address(RVA = "0x26DCB4", Offset = "0x26DCB4", VA = "0x26DCB4", Slot = "7")]
	public override void Setup()
	{
	}

	[Token(Token = "0x600083E")]
	[Address(RVA = "0x26DED4", Offset = "0x26DED4", VA = "0x26DED4", Slot = "5")]
	public override void ShutDown()
	{
	}

	[Token(Token = "0x600083F")]
	[Address(RVA = "0x26DF48", Offset = "0x26DF48", VA = "0x26DF48")]
	public void SetAnnouncements(Queue<string> queue)
	{
	}

	[Token(Token = "0x6000840")]
	[Address(RVA = "0x26DFC4", Offset = "0x26DFC4", VA = "0x26DFC4", Slot = "10")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000841")]
	[Address(RVA = "0x26E370", Offset = "0x26E370", VA = "0x26E370", Slot = "15")]
	public override void JailCellAction(Transform jailSpot)
	{
	}

	[Token(Token = "0x6000842")]
	[Address(RVA = "0x26E394", Offset = "0x26E394", VA = "0x26E394")]
	[DebuggerHidden]
	public IEnumerator PrepareToAnnounce(Transform jailSpot)
	{
		return null;
	}

	[Token(Token = "0x6000843")]
	[Address(RVA = "0x26E434", Offset = "0x26E434", VA = "0x26E434", Slot = "16")]
	public virtual void NextAnnounce()
	{
	}

	[Token(Token = "0x6000844")]
	[Address(RVA = "0x26E438", Offset = "0x26E438", VA = "0x26E438", Slot = "17")]
	protected virtual void DisplayAnnounce()
	{
	}

	[Token(Token = "0x6000845")]
	[Address(RVA = "0x26E7FC", Offset = "0x26E7FC", VA = "0x26E7FC", Slot = "18")]
	protected virtual void ClearVisual()
	{
	}

	[Token(Token = "0x6000846")]
	[Address(RVA = "0x26E8B0", Offset = "0x26E8B0", VA = "0x26E8B0", Slot = "11")]
	public override void GoToEntrance()
	{
	}
}
[Token(Token = "0x2000159")]
public enum AnnouncerType
{
	[Token(Token = "0x400096D")]
	Basic,
	[Token(Token = "0x400096E")]
	GameStart,
	[Token(Token = "0x400096F")]
	PostFouille,
	[Token(Token = "0x4000970")]
	FirstFouille
}
[Serializable]
[Token(Token = "0x200015A")]
public class VisualsStack
{
	[Token(Token = "0x4000971")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public string Name;

	[Token(Token = "0x4000972")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject[] objs;

	[Token(Token = "0x6000847")]
	[Address(RVA = "0x4D6300", Offset = "0x4D6300", VA = "0x4D6300")]
	public VisualsStack()
	{
	}
}
[Token(Token = "0x200015B")]
public class AnnouncerVisualsBank : MonoBehaviour
{
	[Token(Token = "0x4000973")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public VisualsStack[] visuals;

	[Token(Token = "0x6000848")]
	[Address(RVA = "0x26EF7C", Offset = "0x26EF7C", VA = "0x26EF7C")]
	public AnnouncerVisualsBank()
	{
	}
}
[Token(Token = "0x200015C")]
public class BasicAnnouncer : Announcer
{
	[Token(Token = "0x6000849")]
	[Address(RVA = "0x272EE8", Offset = "0x272EE8", VA = "0x272EE8")]
	public BasicAnnouncer()
	{
	}

	[Token(Token = "0x600084A")]
	[Address(RVA = "0x272EEC", Offset = "0x272EEC", VA = "0x272EEC", Slot = "16")]
	public override void NextAnnounce()
	{
	}

	[Token(Token = "0x600084B")]
	[Address(RVA = "0x272FB8", Offset = "0x272FB8", VA = "0x272FB8", Slot = "11")]
	public override void GoToEntrance()
	{
	}
}
[Token(Token = "0x200015D")]
public class FirstFouilleAnnouncer : Announcer
{
	[Token(Token = "0x4000974")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject WrapperTemplate;

	[Token(Token = "0x4000975")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private List<FouilleDisplayWrapper> wrappers;

	[Token(Token = "0x4000976")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Queue<string> firstTutorialAnnouncements;

	[Token(Token = "0x4000977")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public int firstTutorialIndex;

	[Token(Token = "0x4000978")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public int firstTutorialAnnouncementsCount;

	[Token(Token = "0x4000979")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public GameObject WrapperScreen;

	[Token(Token = "0x400097A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject TutorialScreens;

	[Token(Token = "0x400097B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public Transform scrollingPanel;

	[Token(Token = "0x400097C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Scrollbar scrollBar;

	[Token(Token = "0x400097D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public Button startButton;

	[Token(Token = "0x600084C")]
	[Address(RVA = "0x20F014", Offset = "0x20F014", VA = "0x20F014")]
	public FirstFouilleAnnouncer()
	{
	}

	[Token(Token = "0x600084D")]
	[Address(RVA = "0x20F0D4", Offset = "0x20F0D4", VA = "0x20F0D4", Slot = "7")]
	public override void Setup()
	{
	}

	[Token(Token = "0x600084E")]
	[Address(RVA = "0x20F7C0", Offset = "0x20F7C0", VA = "0x20F7C0", Slot = "5")]
	public override void ShutDown()
	{
	}

	[Token(Token = "0x600084F")]
	[Address(RVA = "0x20F840", Offset = "0x20F840", VA = "0x20F840")]
	public void MoveScroolBar(int i)
	{
	}

	[Token(Token = "0x6000850")]
	[Address(RVA = "0x20F9C4", Offset = "0x20F9C4", VA = "0x20F9C4", Slot = "16")]
	public override void NextAnnounce()
	{
	}

	[Token(Token = "0x6000851")]
	[Address(RVA = "0x20FC30", Offset = "0x20FC30", VA = "0x20FC30", Slot = "17")]
	protected override void DisplayAnnounce()
	{
	}

	[Token(Token = "0x6000852")]
	[Address(RVA = "0x20FFE4", Offset = "0x20FFE4", VA = "0x20FFE4")]
	private void DisplayWrappers()
	{
	}

	[Token(Token = "0x6000853")]
	[Address(RVA = "0x210534", Offset = "0x210534", VA = "0x210534", Slot = "11")]
	public override void GoToEntrance()
	{
	}

	[Token(Token = "0x6000854")]
	[Address(RVA = "0x210228", Offset = "0x210228", VA = "0x210228")]
	private void CreateWrappers()
	{
	}

	[Token(Token = "0x6000855")]
	[Address(RVA = "0x20F618", Offset = "0x20F618", VA = "0x20F618")]
	private void ClearWrappers()
	{
	}

	[Token(Token = "0x6000856")]
	[Address(RVA = "0x2105F4", Offset = "0x2105F4", VA = "0x2105F4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16A454", Offset = "0x16A454")]
	private float <MoveScroolBar>m__0()
	{
		return default(float);
	}

	[Token(Token = "0x6000857")]
	[Address(RVA = "0x21061C", Offset = "0x21061C", VA = "0x21061C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16A464", Offset = "0x16A464")]
	private void <MoveScroolBar>m__1(float x)
	{
	}
}
[Token(Token = "0x200015E")]
public class GameStartAnnouncer : Announcer
{
	[Token(Token = "0x400097E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BobbySellingBox sellingBox;

	[Token(Token = "0x400097F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public Button startButton;

	[Token(Token = "0x4000980")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Button quitButton;

	[Token(Token = "0x6000858")]
	[Address(RVA = "0x210EDC", Offset = "0x210EDC", VA = "0x210EDC")]
	public GameStartAnnouncer()
	{
	}

	[Token(Token = "0x6000859")]
	[Address(RVA = "0x210EE4", Offset = "0x210EE4", VA = "0x210EE4", Slot = "7")]
	public override void Setup()
	{
	}

	[Token(Token = "0x600085A")]
	[Address(RVA = "0x21115C", Offset = "0x21115C", VA = "0x21115C", Slot = "16")]
	public override void NextAnnounce()
	{
	}

	[Token(Token = "0x600085B")]
	[Address(RVA = "0x21157C", Offset = "0x21157C", VA = "0x21157C", Slot = "11")]
	public override void GoToEntrance()
	{
	}
}
[Token(Token = "0x200015F")]
public class PostFouilleAnnouncer : Announcer
{
	[Token(Token = "0x4000981")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject WrapperTemplate;

	[Token(Token = "0x4000982")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private List<FouilleDisplayWrapper> wrappers;

	[Token(Token = "0x4000983")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform scrollingPanel;

	[Token(Token = "0x4000984")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public Scrollbar scrollBar;

	[Token(Token = "0x600085C")]
	[Address(RVA = "0x33C024", Offset = "0x33C024", VA = "0x33C024")]
	public PostFouilleAnnouncer()
	{
	}

	[Token(Token = "0x600085D")]
	[Address(RVA = "0x33C0B0", Offset = "0x33C0B0", VA = "0x33C0B0", Slot = "7")]
	public override void Setup()
	{
	}

	[Token(Token = "0x600085E")]
	[Address(RVA = "0x33C2F4", Offset = "0x33C2F4", VA = "0x33C2F4")]
	public void MoveScroolBar(int i)
	{
	}

	[Token(Token = "0x600085F")]
	[Address(RVA = "0x33C478", Offset = "0x33C478", VA = "0x33C478", Slot = "16")]
	public override void NextAnnounce()
	{
	}

	[Token(Token = "0x6000860")]
	[Address(RVA = "0x33C488", Offset = "0x33C488", VA = "0x33C488", Slot = "17")]
	protected override void DisplayAnnounce()
	{
	}

	[Token(Token = "0x6000861")]
	[Address(RVA = "0x33C624", Offset = "0x33C624", VA = "0x33C624", Slot = "11")]
	public override void GoToEntrance()
	{
	}

	[Token(Token = "0x6000862")]
	[Address(RVA = "0x33C48C", Offset = "0x33C48C", VA = "0x33C48C")]
	private void DisplayWrappers()
	{
	}

	[Token(Token = "0x6000863")]
	[Address(RVA = "0x33C6AC", Offset = "0x33C6AC", VA = "0x33C6AC")]
	private void CreateWrappers()
	{
	}

	[Token(Token = "0x6000864")]
	[Address(RVA = "0x33C14C", Offset = "0x33C14C", VA = "0x33C14C")]
	private void ClearWrappers()
	{
	}

	[Token(Token = "0x6000865")]
	[Address(RVA = "0x33C8EC", Offset = "0x33C8EC", VA = "0x33C8EC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16A474", Offset = "0x16A474")]
	private float <MoveScroolBar>m__0()
	{
		return default(float);
	}

	[Token(Token = "0x6000866")]
	[Address(RVA = "0x33C914", Offset = "0x33C914", VA = "0x33C914")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16A484", Offset = "0x16A484")]
	private void <MoveScroolBar>m__1(float x)
	{
	}
}
[Token(Token = "0x2000160")]
public enum Status
{
	[Token(Token = "0x4000986")]
	idle,
	[Token(Token = "0x4000987")]
	walking,
	[Token(Token = "0x4000988")]
	angry,
	[Token(Token = "0x4000989")]
	surprise,
	[Token(Token = "0x400098A")]
	happy
}
[Token(Token = "0x2000161")]
public class CharacterAnimator : MonoBehaviour
{
	[Token(Token = "0x200032B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16A4E4", Offset = "0x16A4E4")]
	private sealed class <AnimationCallback>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x400128E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal float duration;

		[Token(Token = "0x400128F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal Status nextState;

		[Token(Token = "0x4001290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal CharacterAnimator $this;

		[Token(Token = "0x4001291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal object $current;

		[Token(Token = "0x4001292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal bool $disposing;

		[Token(Token = "0x4001293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal int $PC;

		[Token(Token = "0x170002B1")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6001827")]
			[Address(RVA = "0x280970", Offset = "0x280970", VA = "0x280970", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001828")]
			[Address(RVA = "0x280978", Offset = "0x280978", VA = "0x280978", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001825")]
		[Address(RVA = "0x2805C8", Offset = "0x2805C8", VA = "0x2805C8")]
		[DebuggerHidden]
		public <AnimationCallback>c__Iterator0()
		{
		}

		[Token(Token = "0x6001826")]
		[Address(RVA = "0x280860", Offset = "0x280860", VA = "0x280860", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001829")]
		[Address(RVA = "0x280980", Offset = "0x280980", VA = "0x280980", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x600182A")]
		[Address(RVA = "0x280994", Offset = "0x280994", VA = "0x280994", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x200032C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16A544", Offset = "0x16A544")]
	private sealed class <TalkCallback>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4001294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal float duration;

		[Token(Token = "0x4001295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal bool whistle;

		[Token(Token = "0x4001296")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal CharacterAnimator $this;

		[Token(Token = "0x4001297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal object $current;

		[Token(Token = "0x4001298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal bool $disposing;

		[Token(Token = "0x4001299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal int $PC;

		[Token(Token = "0x170002B3")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x600182D")]
			[Address(RVA = "0x280F54", Offset = "0x280F54", VA = "0x280F54", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600182E")]
			[Address(RVA = "0x280F5C", Offset = "0x280F5C", VA = "0x280F5C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600182B")]
		[Address(RVA = "0x2805D0", Offset = "0x2805D0", VA = "0x2805D0")]
		[DebuggerHidden]
		public <TalkCallback>c__Iterator1()
		{
		}

		[Token(Token = "0x600182C")]
		[Address(RVA = "0x280E28", Offset = "0x280E28", VA = "0x280E28", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600182F")]
		[Address(RVA = "0x280F64", Offset = "0x280F64", VA = "0x280F64", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001830")]
		[Address(RVA = "0x280F78", Offset = "0x280F78", VA = "0x280F78", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x200032D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16A5A4", Offset = "0x16A5A4")]
	private sealed class <Blinking>c__Iterator2 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x400129A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal CharacterAnimator $this;

		[Token(Token = "0x400129B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x400129C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x400129D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x170002B5")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6001833")]
			[Address(RVA = "0x280BA0", Offset = "0x280BA0", VA = "0x280BA0", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001834")]
			[Address(RVA = "0x280BA8", Offset = "0x280BA8", VA = "0x280BA8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001831")]
		[Address(RVA = "0x28067C", Offset = "0x28067C", VA = "0x28067C")]
		[DebuggerHidden]
		public <Blinking>c__Iterator2()
		{
		}

		[Token(Token = "0x6001832")]
		[Address(RVA = "0x280A18", Offset = "0x280A18", VA = "0x280A18", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001835")]
		[Address(RVA = "0x280BB0", Offset = "0x280BB0", VA = "0x280BB0", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001836")]
		[Address(RVA = "0x280BC4", Offset = "0x280BC4", VA = "0x280BC4", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x200032E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16A604", Offset = "0x16A604")]
	private sealed class <LookAtCoroutine>c__Iterator3 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x400129E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal Vector3 where;

		[Token(Token = "0x400129F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal float duration;

		[Token(Token = "0x40012A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal CharacterAnimator $this;

		[Token(Token = "0x40012A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal object $current;

		[Token(Token = "0x40012A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal bool $disposing;

		[Token(Token = "0x40012A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal int $PC;

		[Token(Token = "0x170002B7")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6001839")]
			[Address(RVA = "0x280D80", Offset = "0x280D80", VA = "0x280D80", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600183A")]
			[Address(RVA = "0x280D88", Offset = "0x280D88", VA = "0x280D88", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001837")]
		[Address(RVA = "0x280858", Offset = "0x280858", VA = "0x280858")]
		[DebuggerHidden]
		public <LookAtCoroutine>c__Iterator3()
		{
		}

		[Token(Token = "0x6001838")]
		[Address(RVA = "0x280C48", Offset = "0x280C48", VA = "0x280C48", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600183B")]
		[Address(RVA = "0x280D90", Offset = "0x280D90", VA = "0x280D90", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x600183C")]
		[Address(RVA = "0x280DA4", Offset = "0x280DA4", VA = "0x280DA4", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x400098B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected Animator anim;

	[Token(Token = "0x400098C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Status currentAnimState;

	[Token(Token = "0x400098D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float randomIdleChance;

	[Token(Token = "0x400098E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Coroutine blinkingCoroutine;

	[Token(Token = "0x400098F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Coroutine lookOverrideCoroutine;

	[Token(Token = "0x4000990")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Coroutine callbackAnim;

	[Token(Token = "0x4000991")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Coroutine talkCallback;

	[Token(Token = "0x4000992")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private PathfindingAgent pathfinding;

	[Token(Token = "0x4000993")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Transform[] eyes;

	[Token(Token = "0x4000994")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected NPC npc;

	[Token(Token = "0x4000995")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 lookTarget;

	[Token(Token = "0x4000996")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public Transform defaultLookDir;

	[Token(Token = "0x4000997")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 _modifiedDefaultDir;

	[Token(Token = "0x4000998")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform playerHead;

	[Token(Token = "0x4000999")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Transform tempTransformLook;

	[Token(Token = "0x400099A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool lookOverride;

	[Token(Token = "0x6000867")]
	[Address(RVA = "0x273094", Offset = "0x273094", VA = "0x273094")]
	public CharacterAnimator()
	{
	}

	[Token(Token = "0x6000868")]
	[Address(RVA = "0x27F51C", Offset = "0x27F51C", VA = "0x27F51C", Slot = "4")]
	public virtual void Initialize()
	{
	}

	[Token(Token = "0x6000869")]
	[Address(RVA = "0x27F888", Offset = "0x27F888", VA = "0x27F888", Slot = "5")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x600086A")]
	[Address(RVA = "0x27FFA4", Offset = "0x27FFA4", VA = "0x27FFA4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600086B")]
	[Address(RVA = "0x27FDFC", Offset = "0x27FDFC", VA = "0x27FDFC")]
	public void SetAnimState(Status state, bool callback = false, float duration = 3f, bool backToCurrent = false, Status nextState = Status.idle)
	{
	}

	[Token(Token = "0x600086C")]
	[Address(RVA = "0x2803D8", Offset = "0x2803D8", VA = "0x2803D8")]
	public void SetAnimTrigger(string trigger)
	{
	}

	[Token(Token = "0x600086D")]
	[Address(RVA = "0x280408", Offset = "0x280408", VA = "0x280408")]
	public void SetTalkingState(float duration, bool whistle = false)
	{
	}

	[Token(Token = "0x600086E")]
	[Address(RVA = "0x280598", Offset = "0x280598", VA = "0x280598")]
	public void FootStepCue()
	{
	}

	[Token(Token = "0x600086F")]
	[Address(RVA = "0x280320", Offset = "0x280320", VA = "0x280320")]
	[DebuggerHidden]
	private IEnumerator AnimationCallback(float duration, Status nextState)
	{
		return null;
	}

	[Token(Token = "0x6000870")]
	[Address(RVA = "0x2804E0", Offset = "0x2804E0", VA = "0x2804E0")]
	[DebuggerHidden]
	private IEnumerator TalkCallback(float duration, bool whistle = false)
	{
		return null;
	}

	[Token(Token = "0x6000871")]
	[Address(RVA = "0x2801E4", Offset = "0x2801E4", VA = "0x2801E4")]
	private void SetAnimBoolsFalse()
	{
	}

	[Token(Token = "0x6000872")]
	[Address(RVA = "0x2805D8", Offset = "0x2805D8", VA = "0x2805D8")]
	public void randomIdleRoll()
	{
	}

	[Token(Token = "0x6000873")]
	[Address(RVA = "0x27F6B0", Offset = "0x27F6B0", VA = "0x27F6B0")]
	[DebuggerHidden]
	private IEnumerator Blinking()
	{
		return null;
	}

	[Token(Token = "0x6000874")]
	[Address(RVA = "0x27F730", Offset = "0x27F730", VA = "0x27F730")]
	private void SetEyes()
	{
	}

	[Token(Token = "0x6000875")]
	[Address(RVA = "0x27FA94", Offset = "0x27FA94", VA = "0x27FA94")]
	private void SetEyesLook()
	{
	}

	[Token(Token = "0x6000876")]
	[Address(RVA = "0x280684", Offset = "0x280684", VA = "0x280684")]
	public void LookAtOverride(Vector3 where, float duration)
	{
	}

	[Token(Token = "0x6000877")]
	[Address(RVA = "0x2807C4", Offset = "0x2807C4", VA = "0x2807C4")]
	public void LookAtOverride(Transform where, float duration)
	{
	}

	[Token(Token = "0x6000878")]
	[Address(RVA = "0x280850", Offset = "0x280850", VA = "0x280850", Slot = "6")]
	public virtual void TriggeredSpecificAnim()
	{
	}

	[Token(Token = "0x6000879")]
	[Address(RVA = "0x280854", Offset = "0x280854", VA = "0x280854", Slot = "7")]
	public virtual void StatusSpecificAnim()
	{
	}

	[Token(Token = "0x600087A")]
	[Address(RVA = "0x280700", Offset = "0x280700", VA = "0x280700")]
	[DebuggerHidden]
	private IEnumerator LookAtCoroutine(Vector3 where, float duration)
	{
		return null;
	}

	[Token(Token = "0x600087B")]
	[Address(RVA = "0x27FFA8", Offset = "0x27FFA8", VA = "0x27FFA8")]
	private void Eyetrack()
	{
	}
}
[Token(Token = "0x2000162")]
public class CharacterRandomizer : MonoBehaviour
{
	[Token(Token = "0x2000163")]
	public enum CharacterType
	{
		[Token(Token = "0x400099E")]
		Cop,
		[Token(Token = "0x400099F")]
		Dude
	}

	[Token(Token = "0x400099B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[HideInInspector]
	public CharacterAnimator chanim;

	[Token(Token = "0x400099C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public CharacterType characterType;

	[Token(Token = "0x600087C")]
	[Address(RVA = "0x280FFC", Offset = "0x280FFC", VA = "0x280FFC")]
	public CharacterRandomizer()
	{
	}

	[Token(Token = "0x600087D")]
	[Address(RVA = "0x281004", Offset = "0x281004", VA = "0x281004")]
	public void RandomizeAppearance(GardeInfo info)
	{
	}

	[Token(Token = "0x600087E")]
	[Address(RVA = "0x281468", Offset = "0x281468", VA = "0x281468")]
	public void RandomizeAppearance()
	{
	}

	[Token(Token = "0x600087F")]
	[Address(RVA = "0x281C50", Offset = "0x281C50", VA = "0x281C50")]
	private Transform[] GetTheseTransforms(Transform theParent, string nameContains)
	{
		return null;
	}

	[Token(Token = "0x6000880")]
	[Address(RVA = "0x281EC4", Offset = "0x281EC4", VA = "0x281EC4")]
	private Transform GetThisTransform(Transform theParent, string nameContains)
	{
		return null;
	}

	[Token(Token = "0x6000881")]
	[Address(RVA = "0x2810DC", Offset = "0x2810DC", VA = "0x2810DC")]
	private void SetFlashlight(bool hasFlashlight)
	{
	}

	[Token(Token = "0x6000882")]
	[Address(RVA = "0x2815A0", Offset = "0x2815A0", VA = "0x2815A0")]
	private void SetItem(string theItem, bool hasIt)
	{
	}

	[Token(Token = "0x6000883")]
	[Address(RVA = "0x2816C4", Offset = "0x2816C4", VA = "0x2816C4")]
	private void SetDudeHair()
	{
	}

	[Token(Token = "0x6000884")]
	[Address(RVA = "0x28119C", Offset = "0x28119C", VA = "0x28119C")]
	private void SetMustaches()
	{
	}

	[Token(Token = "0x6000885")]
	[Address(RVA = "0x281304", Offset = "0x281304", VA = "0x281304")]
	private void SetSkin(Texture[] sourceSkins)
	{
	}

	[Token(Token = "0x6000886")]
	[Address(RVA = "0x281A84", Offset = "0x281A84", VA = "0x281A84")]
	private void SetDudeEyes(bool hasBigEyes)
	{
	}
}
[Serializable]
[Token(Token = "0x2000164")]
public class NPCInfo
{
	[Token(Token = "0x40009A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public string name;

	[Token(Token = "0x40009A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject model;

	[Token(Token = "0x40009A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float moveSpeed;

	[Token(Token = "0x6000887")]
	[Address(RVA = "0x328754", Offset = "0x328754", VA = "0x328754")]
	public NPCInfo()
	{
	}
}
[Serializable]
[Token(Token = "0x2000165")]
public class GardeInfo : NPCInfo
{
	[Token(Token = "0x40009A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float pauseDurationModifier;

	[Token(Token = "0x40009A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float probWeight;

	[Token(Token = "0x40009A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Gender gender;

	[Token(Token = "0x40009A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool hasFlashlight;

	[Token(Token = "0x6000888")]
	[Address(RVA = "0x21E054", Offset = "0x21E054", VA = "0x21E054")]
	public GardeInfo()
	{
	}
}
[Serializable]
[Token(Token = "0x2000166")]
public class DudeInfo : NPCInfo
{
	[Token(Token = "0x40009A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float wanderDist;

	[Token(Token = "0x40009A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float wanderDelay;

	[Token(Token = "0x6000889")]
	[Address(RVA = "0x20C13C", Offset = "0x20C13C", VA = "0x20C13C")]
	public DudeInfo()
	{
	}
}
[Token(Token = "0x2000167")]
public enum Gender
{
	[Token(Token = "0x40009AA")]
	Male,
	[Token(Token = "0x40009AB")]
	Female
}
[Token(Token = "0x2000168")]
public class CrowdManager : MonoBehaviour
{
	[Token(Token = "0x200032F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16A6D4", Offset = "0x16A6D4")]
	private sealed class <LockTheDudes>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40012A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal int <index>__0;

		[Token(Token = "0x40012A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal DudeCell[] $locvar0;

		[Token(Token = "0x40012A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal int $locvar1;

		[Token(Token = "0x40012A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal DudeCell <cell>__1;

		[Token(Token = "0x40012A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal CrowdManager $this;

		[Token(Token = "0x40012A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal object $current;

		[Token(Token = "0x40012AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal bool $disposing;

		[Token(Token = "0x40012AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal int $PC;

		[Token(Token = "0x170002B9")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x600183F")]
			[Address(RVA = "0x288864", Offset = "0x288864", VA = "0x288864", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002BA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001840")]
			[Address(RVA = "0x28886C", Offset = "0x28886C", VA = "0x28886C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600183D")]
		[Address(RVA = "0x287238", Offset = "0x287238", VA = "0x287238")]
		[DebuggerHidden]
		public <LockTheDudes>c__Iterator0()
		{
		}

		[Token(Token = "0x600183E")]
		[Address(RVA = "0x28864C", Offset = "0x28864C", VA = "0x28864C", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001841")]
		[Address(RVA = "0x288874", Offset = "0x288874", VA = "0x288874", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001842")]
		[Address(RVA = "0x288888", Offset = "0x288888", VA = "0x288888", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000330")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16A734", Offset = "0x16A734")]
	private sealed class <DudeSpawnLoop>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40012AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal float <waitTime>__0;

		[Token(Token = "0x40012AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal CrowdManager $this;

		[Token(Token = "0x40012AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal object $current;

		[Token(Token = "0x40012AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal bool $disposing;

		[Token(Token = "0x40012B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal int $PC;

		[Token(Token = "0x170002BB")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6001845")]
			[Address(RVA = "0x28838C", Offset = "0x28838C", VA = "0x28838C", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002BC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001846")]
			[Address(RVA = "0x288394", Offset = "0x288394", VA = "0x288394", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001843")]
		[Address(RVA = "0x287240", Offset = "0x287240", VA = "0x287240")]
		[DebuggerHidden]
		public <DudeSpawnLoop>c__Iterator1()
		{
		}

		[Token(Token = "0x6001844")]
		[Address(RVA = "0x288148", Offset = "0x288148", VA = "0x288148", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001847")]
		[Address(RVA = "0x28839C", Offset = "0x28839C", VA = "0x28839C", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001848")]
		[Address(RVA = "0x2883B0", Offset = "0x2883B0", VA = "0x2883B0", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000331")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16A794", Offset = "0x16A794")]
	private sealed class <CallManyDudes>c__Iterator2 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40012B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal int <i>__1;

		[Token(Token = "0x40012B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal int number;

		[Token(Token = "0x40012B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal float delayBetweenDudes;

		[Token(Token = "0x40012B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal CrowdManager $this;

		[Token(Token = "0x40012B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal object $current;

		[Token(Token = "0x40012B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal bool $disposing;

		[Token(Token = "0x40012B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal int $PC;

		[Token(Token = "0x170002BD")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x600184B")]
			[Address(RVA = "0x2880A0", Offset = "0x2880A0", VA = "0x2880A0", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002BE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600184C")]
			[Address(RVA = "0x2880A8", Offset = "0x2880A8", VA = "0x2880A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001849")]
		[Address(RVA = "0x287300", Offset = "0x287300", VA = "0x287300")]
		[DebuggerHidden]
		public <CallManyDudes>c__Iterator2()
		{
		}

		[Token(Token = "0x600184A")]
		[Address(RVA = "0x287F98", Offset = "0x287F98", VA = "0x287F98", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600184D")]
		[Address(RVA = "0x2880B0", Offset = "0x2880B0", VA = "0x2880B0", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x600184E")]
		[Address(RVA = "0x2880C4", Offset = "0x2880C4", VA = "0x2880C4", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000332")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16A7F4", Offset = "0x16A7F4")]
	private sealed class <PatrolScheduler>c__Iterator3 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40012B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal float <waitTime>__0;

		[Token(Token = "0x40012B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal CrowdManager $this;

		[Token(Token = "0x40012BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal object $current;

		[Token(Token = "0x40012BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal bool $disposing;

		[Token(Token = "0x40012BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal int $PC;

		[Token(Token = "0x170002BF")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6001851")]
			[Address(RVA = "0x288B64", Offset = "0x288B64", VA = "0x288B64", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001852")]
			[Address(RVA = "0x288B6C", Offset = "0x288B6C", VA = "0x288B6C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600184F")]
		[Address(RVA = "0x287978", Offset = "0x287978", VA = "0x287978")]
		[DebuggerHidden]
		public <PatrolScheduler>c__Iterator3()
		{
		}

		[Token(Token = "0x6001850")]
		[Address(RVA = "0x28890C", Offset = "0x28890C", VA = "0x28890C", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001853")]
		[Address(RVA = "0x288B74", Offset = "0x288B74", VA = "0x288B74", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001854")]
		[Address(RVA = "0x288B88", Offset = "0x288B88", VA = "0x288B88", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000333")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16A854", Offset = "0x16A854")]
	private sealed class <DummyGardeBehaviour>c__Iterator4 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40012BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal Garde npcScript;

		[Token(Token = "0x40012BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal Vector3 destination;

		[Token(Token = "0x40012BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal CrowdManager $this;

		[Token(Token = "0x40012C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal object $current;

		[Token(Token = "0x40012C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal bool $disposing;

		[Token(Token = "0x40012C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal int $PC;

		[Token(Token = "0x170002C1")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6001857")]
			[Address(RVA = "0x2885A4", Offset = "0x2885A4", VA = "0x2885A4", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001858")]
			[Address(RVA = "0x2885AC", Offset = "0x2885AC", VA = "0x2885AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001855")]
		[Address(RVA = "0x287C6C", Offset = "0x287C6C", VA = "0x287C6C")]
		[DebuggerHidden]
		public <DummyGardeBehaviour>c__Iterator4()
		{
		}

		[Token(Token = "0x6001856")]
		[Address(RVA = "0x288434", Offset = "0x288434", VA = "0x288434", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001859")]
		[Address(RVA = "0x2885B4", Offset = "0x2885B4", VA = "0x2885B4", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x600185A")]
		[Address(RVA = "0x2885C8", Offset = "0x2885C8", VA = "0x2885C8", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x40009AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static CrowdManager Instance;

	[Token(Token = "0x40009AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int firstPathID;

	[Token(Token = "0x40009AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float pauseDuration;

	[Token(Token = "0x40009AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float pauseProb;

	[Token(Token = "0x40009B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int maxPatrolsPerNight;

	[Token(Token = "0x40009B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int patrolCount;

	[Token(Token = "0x40009B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float patrolInterval;

	[Token(Token = "0x40009B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float copIntervalRandModifier;

	[Token(Token = "0x40009B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float dudeIntervalRandModifier;

	[Token(Token = "0x40009B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float dudeSpawnInterval;

	[Token(Token = "0x40009B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int maxDudeNumber;

	[Token(Token = "0x40009B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int dudeCount;

	[Token(Token = "0x40009B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public DudeCell[] dudeCells;

	[Token(Token = "0x40009B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool traderPassed;

	[Token(Token = "0x40009BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public UnityEvent OnTraderPassed;

	[Token(Token = "0x40009BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public AnnouncerVisualsBank visualBank;

	[Token(Token = "0x40009BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<Garde> activeGardes;

	[Token(Token = "0x40009BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public List<Dude> activeDudes;

	[Token(Token = "0x40009BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<Announcer> activeAnnouncers;

	[Token(Token = "0x40009BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public Dealer activeDealer;

	[Token(Token = "0x600088A")]
	[Address(RVA = "0x285168", Offset = "0x285168", VA = "0x285168")]
	public CrowdManager()
	{
	}

	[Token(Token = "0x600088B")]
	[Address(RVA = "0x285170", Offset = "0x285170", VA = "0x285170")]
	private void Awake()
	{
	}

	[Token(Token = "0x600088C")]
	[Address(RVA = "0x2851D4", Offset = "0x2851D4", VA = "0x2851D4")]
	private void Start()
	{
	}

	[Token(Token = "0x600088D")]
	[Address(RVA = "0x28565C", Offset = "0x28565C", VA = "0x28565C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600088E")]
	[Address(RVA = "0x2857A0", Offset = "0x2857A0", VA = "0x2857A0")]
	private void OnNPCDespawnedHandler(NPC npc)
	{
	}

	[Token(Token = "0x600088F")]
	[Address(RVA = "0x285B10", Offset = "0x285B10", VA = "0x285B10")]
	private void OnNPCSpawnedHandler(NPC npc)
	{
	}

	[Token(Token = "0x6000890")]
	[Address(RVA = "0x285E94", Offset = "0x285E94", VA = "0x285E94")]
	private List<Garde> GetActiveGardes()
	{
		return null;
	}

	[Token(Token = "0x6000891")]
	[Address(RVA = "0x286048", Offset = "0x286048", VA = "0x286048")]
	private List<Dude> GetActiveDudes()
	{
		return null;
	}

	[Token(Token = "0x6000892")]
	[Address(RVA = "0x2861FC", Offset = "0x2861FC", VA = "0x2861FC")]
	private List<Announcer> GetActiveAnnouncers()
	{
		return null;
	}

	[Token(Token = "0x6000893")]
	[Address(RVA = "0x2863B0", Offset = "0x2863B0", VA = "0x2863B0")]
	private void UpdateGardes()
	{
	}

	[Token(Token = "0x6000894")]
	[Address(RVA = "0x286954", Offset = "0x286954", VA = "0x286954")]
	private void DayDealerBehavior()
	{
	}

	[Token(Token = "0x6000895")]
	[Address(RVA = "0x28715C", Offset = "0x28715C", VA = "0x28715C")]
	private void NightDealerBehavior()
	{
	}

	[Token(Token = "0x6000896")]
	[Address(RVA = "0x287048", Offset = "0x287048", VA = "0x287048")]
	public void CallDealer()
	{
	}

	[Token(Token = "0x6000897")]
	[Address(RVA = "0x286F90", Offset = "0x286F90", VA = "0x286F90")]
	public void CallAnnouncer(AnnouncerType announcerType, Queue<string> announcements, [Optional] GameObject[] visuals)
	{
	}

	[Token(Token = "0x6000898")]
	[Address(RVA = "0x2855DC", Offset = "0x2855DC", VA = "0x2855DC")]
	[DebuggerHidden]
	private IEnumerator LockTheDudes()
	{
		return null;
	}

	[Token(Token = "0x6000899")]
	[Address(RVA = "0x2870DC", Offset = "0x2870DC", VA = "0x2870DC")]
	[DebuggerHidden]
	private IEnumerator DudeSpawnLoop()
	{
		return null;
	}

	[Token(Token = "0x600089A")]
	[Address(RVA = "0x287248", Offset = "0x287248", VA = "0x287248")]
	[DebuggerHidden]
	public IEnumerator CallManyDudes(int number = 3, float delayBetweenDudes = 3f)
	{
		return null;
	}

	[Token(Token = "0x600089B")]
	[Address(RVA = "0x287308", Offset = "0x287308", VA = "0x287308")]
	public void CreateFreeWanderDude()
	{
	}

	[Token(Token = "0x600089C")]
	[Address(RVA = "0x2874C8", Offset = "0x2874C8", VA = "0x2874C8")]
	public void CreateCellDude(DudeCell cell)
	{
	}

	[Token(Token = "0x600089D")]
	[Address(RVA = "0x287860", Offset = "0x287860", VA = "0x287860")]
	private static int GetCurrentPrisonId()
	{
		return default(int);
	}

	[Token(Token = "0x600089E")]
	[Address(RVA = "0x287784", Offset = "0x287784", VA = "0x287784")]
	private static int GetDudeCellArea()
	{
		return default(int);
	}

	[Token(Token = "0x600089F")]
	[Address(RVA = "0x2873EC", Offset = "0x2873EC", VA = "0x2873EC")]
	public static int GetPrisonArea()
	{
		return default(int);
	}

	[Token(Token = "0x60008A0")]
	[Address(RVA = "0x287374", Offset = "0x287374", VA = "0x287374")]
	public Dude CallDude()
	{
		return null;
	}

	[Token(Token = "0x60008A1")]
	[Address(RVA = "0x286640", Offset = "0x286640", VA = "0x286640")]
	[DebuggerHidden]
	private IEnumerator PatrolScheduler()
	{
		return null;
	}

	[Token(Token = "0x60008A2")]
	[Address(RVA = "0x287980", Offset = "0x287980", VA = "0x287980")]
	private void StartPatrol()
	{
	}

	[Token(Token = "0x60008A3")]
	[Address(RVA = "0x287A9C", Offset = "0x287A9C", VA = "0x287A9C")]
	public void CallDummyGarde(Vector3 spawnPosition, Vector3 destination)
	{
	}

	[Token(Token = "0x60008A4")]
	[Address(RVA = "0x287BB0", Offset = "0x287BB0", VA = "0x287BB0")]
	[DebuggerHidden]
	private IEnumerator DummyGardeBehaviour(Garde npcScript, Vector3 destination)
	{
		return null;
	}

	[Token(Token = "0x60008A5")]
	[Address(RVA = "0x2866C0", Offset = "0x2866C0", VA = "0x2866C0")]
	private void EndGardeNight()
	{
	}

	[Token(Token = "0x60008A6")]
	[Address(RVA = "0x287214", Offset = "0x287214", VA = "0x287214")]
	public void Curfew()
	{
	}

	[Token(Token = "0x60008A7")]
	[Address(RVA = "0x287E64", Offset = "0x287E64", VA = "0x287E64")]
	private void AnnouncerCurfew()
	{
	}

	[Token(Token = "0x60008A8")]
	[Address(RVA = "0x287C74", Offset = "0x287C74", VA = "0x287C74")]
	private void DudesCurfew()
	{
	}

	[Token(Token = "0x60008A9")]
	[Address(RVA = "0x287DC4", Offset = "0x287DC4", VA = "0x287DC4")]
	private void DealerCurfew()
	{
	}

	[Token(Token = "0x60008AA")]
	[Address(RVA = "0x2868D4", Offset = "0x2868D4", VA = "0x2868D4")]
	public void TakeBackNPC(NPC npc)
	{
	}
}
[Token(Token = "0x2000169")]
public class Dealer : NPC
{
	[Token(Token = "0x2000334")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16A8F4", Offset = "0x16A8F4")]
	private sealed class <JsuisÉcoeuréDesProblèmesDOrdreDInitialisation>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40012C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal Dealer $this;

		[Token(Token = "0x40012C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x40012C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x40012C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x170002C3")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x600185D")]
			[Address(RVA = "0x2898B0", Offset = "0x2898B0", VA = "0x2898B0", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600185E")]
			[Address(RVA = "0x2898B8", Offset = "0x2898B8", VA = "0x2898B8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600185B")]
		[Address(RVA = "0x2892B8", Offset = "0x2892B8", VA = "0x2892B8")]
		[DebuggerHidden]
		public <JsuisÉcoeuréDesProblèmesDOrdreDInitialisation>c__Iterator0()
		{
		}

		[Token(Token = "0x600185C")]
		[Address(RVA = "0x2896BC", Offset = "0x2896BC", VA = "0x2896BC", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600185F")]
		[Address(RVA = "0x2898C0", Offset = "0x2898C0", VA = "0x2898C0", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001860")]
		[Address(RVA = "0x2898D4", Offset = "0x2898D4", VA = "0x2898D4", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000335")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16A954", Offset = "0x16A954")]
	private sealed class <PrepareToDeal>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40012C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal Transform dealSpot;

		[Token(Token = "0x40012C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal Dealer $this;

		[Token(Token = "0x40012C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal object $current;

		[Token(Token = "0x40012CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal bool $disposing;

		[Token(Token = "0x40012CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal int $PC;

		[Token(Token = "0x170002C5")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6001863")]
			[Address(RVA = "0x289C14", Offset = "0x289C14", VA = "0x289C14", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001864")]
			[Address(RVA = "0x289C1C", Offset = "0x289C1C", VA = "0x289C1C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001861")]
		[Address(RVA = "0x2895D4", Offset = "0x2895D4", VA = "0x2895D4")]
		[DebuggerHidden]
		public <PrepareToDeal>c__Iterator1()
		{
		}

		[Token(Token = "0x6001862")]
		[Address(RVA = "0x289958", Offset = "0x289958", VA = "0x289958", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001865")]
		[Address(RVA = "0x289C24", Offset = "0x289C24", VA = "0x289C24", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001866")]
		[Address(RVA = "0x289C38", Offset = "0x289C38", VA = "0x289C38", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x40009C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public Animator hand;

	[Token(Token = "0x40009C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[HideInInspector]
	public bool isDealing;

	[Token(Token = "0x40009C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float timeBeforeReplacing;

	[Token(Token = "0x40009C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Transform currentDealSpot;

	[Token(Token = "0x60008AB")]
	[Address(RVA = "0x289128", Offset = "0x289128", VA = "0x289128")]
	public Dealer()
	{
	}

	[Token(Token = "0x60008AC")]
	[Address(RVA = "0x289130", Offset = "0x289130", VA = "0x289130", Slot = "6")]
	public override void Initialize()
	{
	}

	[Token(Token = "0x60008AD")]
	[Address(RVA = "0x289208", Offset = "0x289208", VA = "0x289208", Slot = "7")]
	public override void Setup()
	{
	}

	[Token(Token = "0x60008AE")]
	[Address(RVA = "0x289238", Offset = "0x289238", VA = "0x289238")]
	[DebuggerHidden]
	private IEnumerator JsuisÉcoeuréDesProblèmesDOrdreDInitialisation()
	{
		return null;
	}

	[Token(Token = "0x60008AF")]
	[Address(RVA = "0x2892C0", Offset = "0x2892C0", VA = "0x2892C0", Slot = "10")]
	protected override void Update()
	{
	}

	[Token(Token = "0x60008B0")]
	[Address(RVA = "0x289508", Offset = "0x289508", VA = "0x289508", Slot = "15")]
	public override void JailCellAction(Transform pos)
	{
	}

	[Token(Token = "0x60008B1")]
	[Address(RVA = "0x28953C", Offset = "0x28953C", VA = "0x28953C")]
	[DebuggerHidden]
	public IEnumerator PrepareToDeal(Transform dealSpot)
	{
		return null;
	}

	[Token(Token = "0x60008B2")]
	[Address(RVA = "0x2895DC", Offset = "0x2895DC", VA = "0x2895DC", Slot = "11")]
	public override void GoToEntrance()
	{
	}

	[Token(Token = "0x60008B3")]
	[Address(RVA = "0x289604", Offset = "0x289604", VA = "0x289604")]
	public void OpeningDeal()
	{
	}
}
[Token(Token = "0x200016A")]
public class Dude : NPC
{
	[Token(Token = "0x2000336")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16A9C4", Offset = "0x16A9C4")]
	private sealed class <WanderLoop>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40012CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal Vector3 <sourcePos>__0;

		[Token(Token = "0x40012CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal Vector3 <targetPos>__0;

		[Token(Token = "0x40012CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal float delay;

		[Token(Token = "0x40012CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal Dude $this;

		[Token(Token = "0x40012D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal object $current;

		[Token(Token = "0x40012D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		internal bool $disposing;

		[Token(Token = "0x40012D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal int $PC;

		[Token(Token = "0x170002C7")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6001869")]
			[Address(RVA = "0x20C08C", Offset = "0x20C08C", VA = "0x20C08C", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600186A")]
			[Address(RVA = "0x20C094", Offset = "0x20C094", VA = "0x20C094", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001867")]
		[Address(RVA = "0x20BB14", Offset = "0x20BB14", VA = "0x20BB14")]
		[DebuggerHidden]
		public <WanderLoop>c__Iterator0()
		{
		}

		[Token(Token = "0x6001868")]
		[Address(RVA = "0x20BDC0", Offset = "0x20BDC0", VA = "0x20BDC0", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600186B")]
		[Address(RVA = "0x20C09C", Offset = "0x20C09C", VA = "0x20C09C", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x600186C")]
		[Address(RVA = "0x20C0B0", Offset = "0x20C0B0", VA = "0x20C0B0", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x40009C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float wanderDist;

	[Token(Token = "0x40009C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float wanderDelay;

	[Token(Token = "0x40009C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool inCell;

	[Token(Token = "0x40009C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public DudeCell dudeCell;

	[Token(Token = "0x60008B4")]
	[Address(RVA = "0x20B9C8", Offset = "0x20B9C8", VA = "0x20B9C8")]
	public Dude()
	{
	}

	[Token(Token = "0x60008B5")]
	[Address(RVA = "0x20B9D0", Offset = "0x20B9D0", VA = "0x20B9D0", Slot = "5")]
	public override void ShutDown()
	{
	}

	[Token(Token = "0x60008B6")]
	[Address(RVA = "0x20B9DC", Offset = "0x20B9DC", VA = "0x20B9DC", Slot = "7")]
	public override void Setup()
	{
	}

	[Token(Token = "0x60008B7")]
	[Address(RVA = "0x20B9E4", Offset = "0x20B9E4", VA = "0x20B9E4", Slot = "8")]
	public override void ApplyType(DudeInfo info)
	{
	}

	[Token(Token = "0x60008B8")]
	[Address(RVA = "0x20BA48", Offset = "0x20BA48", VA = "0x20BA48")]
	public void Wander()
	{
	}

	[Token(Token = "0x60008B9")]
	[Address(RVA = "0x20BA70", Offset = "0x20BA70", VA = "0x20BA70")]
	[DebuggerHidden]
	public IEnumerator WanderLoop(float delay)
	{
		return null;
	}

	[Token(Token = "0x60008BA")]
	[Address(RVA = "0x20BB1C", Offset = "0x20BB1C", VA = "0x20BB1C")]
	public Vector3 RandNavMeshPos(Vector3 source, float dist)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60008BB")]
	[Address(RVA = "0x20BCB4", Offset = "0x20BCB4", VA = "0x20BCB4")]
	private Vector3 FindPathNode()
	{
		return default(Vector3);
	}
}
[Token(Token = "0x200016B")]
public class Garde : NPC
{
	[Token(Token = "0x200016C")]
	public enum GardeType
	{
		[Token(Token = "0x40009CF")]
		Paul,
		[Token(Token = "0x40009D0")]
		Louis,
		[Token(Token = "0x40009D1")]
		Bertha,
		[Token(Token = "0x40009D2")]
		RandomWoman,
		[Token(Token = "0x40009D3")]
		RandomMan
	}

	[Token(Token = "0x200016D")]
	private class CheckForBobbyCollision : MonoBehaviour
	{
		[Token(Token = "0x40009D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private Garde garde;

		[Token(Token = "0x60008CB")]
		[Address(RVA = "0x21DF58", Offset = "0x21DF58", VA = "0x21DF58")]
		public CheckForBobbyCollision()
		{
		}

		[Token(Token = "0x60008CC")]
		[Address(RVA = "0x21CD60", Offset = "0x21CD60", VA = "0x21CD60")]
		public void SetGarde(Garde garde)
		{
		}

		[Token(Token = "0x60008CD")]
		[Address(RVA = "0x21DF60", Offset = "0x21DF60", VA = "0x21DF60")]
		public void OnCollisionEnter(Collision other)
		{
		}
	}

	[Token(Token = "0x2000337")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16AA54", Offset = "0x16AA54")]
	private sealed class <BadBehaviourIsReprehensible>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40012D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal Garde $this;

		[Token(Token = "0x40012D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x40012D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x40012D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x170002C9")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x600186F")]
			[Address(RVA = "0x21D69C", Offset = "0x21D69C", VA = "0x21D69C", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002CA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001870")]
			[Address(RVA = "0x21D6A4", Offset = "0x21D6A4", VA = "0x21D6A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600186D")]
		[Address(RVA = "0x21CEBC", Offset = "0x21CEBC", VA = "0x21CEBC")]
		[DebuggerHidden]
		public <BadBehaviourIsReprehensible>c__Iterator0()
		{
		}

		[Token(Token = "0x600186E")]
		[Address(RVA = "0x21D554", Offset = "0x21D554", VA = "0x21D554", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001871")]
		[Address(RVA = "0x21D6AC", Offset = "0x21D6AC", VA = "0x21D6AC", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001872")]
		[Address(RVA = "0x21D6C0", Offset = "0x21D6C0", VA = "0x21D6C0", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000338")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16AAB4", Offset = "0x16AAB4")]
	private sealed class <DetectionFade>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40012D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal object $current;

		[Token(Token = "0x40012D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal bool $disposing;

		[Token(Token = "0x40012D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal int $PC;

		[Token(Token = "0x170002CB")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6001875")]
			[Address(RVA = "0x21D994", Offset = "0x21D994", VA = "0x21D994", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002CC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001876")]
			[Address(RVA = "0x21D99C", Offset = "0x21D99C", VA = "0x21D99C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001873")]
		[Address(RVA = "0x21D4AC", Offset = "0x21D4AC", VA = "0x21D4AC")]
		[DebuggerHidden]
		public <DetectionFade>c__Iterator1()
		{
		}

		[Token(Token = "0x6001874")]
		[Address(RVA = "0x21D744", Offset = "0x21D744", VA = "0x21D744", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001877")]
		[Address(RVA = "0x21D9A4", Offset = "0x21D9A4", VA = "0x21D9A4", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001878")]
		[Address(RVA = "0x21D9B8", Offset = "0x21D9B8", VA = "0x21D9B8", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000339")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16AB14", Offset = "0x16AB14")]
	private sealed class <Pause>c__Iterator2 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40012DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal BrownianMotion <flashlight>__0;

		[Token(Token = "0x40012DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal float <baseRotForce>__0;

		[Token(Token = "0x40012DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal float <baseSpeed>__0;

		[Token(Token = "0x40012DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal Transform pauseSpot;

		[Token(Token = "0x40012DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal Garde $this;

		[Token(Token = "0x40012DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal object $current;

		[Token(Token = "0x40012E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal bool $disposing;

		[Token(Token = "0x40012E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal int $PC;

		[Token(Token = "0x170002CD")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x600187B")]
			[Address(RVA = "0x21DEB0", Offset = "0x21DEB0", VA = "0x21DEB0", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002CE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600187C")]
			[Address(RVA = "0x21DEB8", Offset = "0x21DEB8", VA = "0x21DEB8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001879")]
		[Address(RVA = "0x21D54C", Offset = "0x21D54C", VA = "0x21D54C")]
		[DebuggerHidden]
		public <Pause>c__Iterator2()
		{
		}

		[Token(Token = "0x600187A")]
		[Address(RVA = "0x21DA3C", Offset = "0x21DA3C", VA = "0x21DA3C", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600187D")]
		[Address(RVA = "0x21DEC0", Offset = "0x21DEC0", VA = "0x21DEC0", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x600187E")]
		[Address(RVA = "0x21DED4", Offset = "0x21DED4", VA = "0x21DED4", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x40009C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float pauseDurationModifier;

	[Token(Token = "0x40009C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public GardeType gardeType;

	[Token(Token = "0x40009CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string eventStep;

	[Token(Token = "0x40009CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float timer;

	[Token(Token = "0x40009CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private DetectableObject[] _detectableObjectses;

	[Token(Token = "0x40009CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Transform detector;

	[Token(Token = "0x60008BC")]
	[Address(RVA = "0x21C768", Offset = "0x21C768", VA = "0x21C768")]
	public Garde()
	{
	}

	[Token(Token = "0x60008BD")]
	[Address(RVA = "0x21C770", Offset = "0x21C770", VA = "0x21C770", Slot = "6")]
	public override void Initialize()
	{
	}

	[Token(Token = "0x60008BE")]
	[Address(RVA = "0x21C810", Offset = "0x21C810", VA = "0x21C810", Slot = "7")]
	public override void Setup()
	{
	}

	[Token(Token = "0x60008BF")]
	[Address(RVA = "0x21C818", Offset = "0x21C818", VA = "0x21C818", Slot = "9")]
	public override void ApplyType(GardeInfo infoToApply)
	{
	}

	[Token(Token = "0x60008C0")]
	[Address(RVA = "0x21CB90", Offset = "0x21CB90", VA = "0x21CB90")]
	private void SetupStuffForACHIEVEMENT()
	{
	}

	[Token(Token = "0x60008C1")]
	[Address(RVA = "0x21CD68", Offset = "0x21CD68", VA = "0x21CD68")]
	private void PionHit()
	{
	}

	[Token(Token = "0x60008C2")]
	[Address(RVA = "0x21CE3C", Offset = "0x21CE3C", VA = "0x21CE3C")]
	[DebuggerHidden]
	private IEnumerator BadBehaviourIsReprehensible()
	{
		return null;
	}

	[Token(Token = "0x60008C3")]
	[Address(RVA = "0x21CAC4", Offset = "0x21CAC4", VA = "0x21CAC4")]
	private void RandomFootstep(Gender genre)
	{
	}

	[Token(Token = "0x60008C4")]
	[Address(RVA = "0x21CEC4", Offset = "0x21CEC4", VA = "0x21CEC4", Slot = "10")]
	protected override void Update()
	{
	}

	[Token(Token = "0x60008C5")]
	[Address(RVA = "0x21CFEC", Offset = "0x21CFEC", VA = "0x21CFEC", Slot = "14")]
	public override void FootStepAudio()
	{
	}

	[Token(Token = "0x60008C6")]
	[Address(RVA = "0x21D08C", Offset = "0x21D08C", VA = "0x21D08C", Slot = "15")]
	public override void JailCellAction(Transform pos)
	{
	}

	[Token(Token = "0x60008C7")]
	[Address(RVA = "0x21D17C", Offset = "0x21D17C", VA = "0x21D17C")]
	public void PlayerDetection(Transform jailCell)
	{
	}

	[Token(Token = "0x60008C8")]
	[Address(RVA = "0x21D25C", Offset = "0x21D25C", VA = "0x21D25C")]
	private void PlayerDetected()
	{
	}

	[Token(Token = "0x60008C9")]
	[Address(RVA = "0x21D440", Offset = "0x21D440", VA = "0x21D440")]
	[DebuggerHidden]
	private IEnumerator DetectionFade()
	{
		return null;
	}

	[Token(Token = "0x60008CA")]
	[Address(RVA = "0x21D4B4", Offset = "0x21D4B4", VA = "0x21D4B4")]
	[DebuggerHidden]
	public IEnumerator Pause(Transform pauseSpot)
	{
		return null;
	}
}
[Token(Token = "0x200016E")]
public class LouisAnimator : CharacterAnimator
{
	[Token(Token = "0x40009D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float coughTimer;

	[Token(Token = "0x60008CE")]
	[Address(RVA = "0x23D6D4", Offset = "0x23D6D4", VA = "0x23D6D4")]
	public LouisAnimator()
	{
	}

	[Token(Token = "0x60008CF")]
	[Address(RVA = "0x23D6E8", Offset = "0x23D6E8", VA = "0x23D6E8", Slot = "5")]
	protected override void Update()
	{
	}

	[Token(Token = "0x60008D0")]
	[Address(RVA = "0x23D768", Offset = "0x23D768", VA = "0x23D768", Slot = "6")]
	public override void TriggeredSpecificAnim()
	{
	}
}
[Token(Token = "0x200016F")]
public enum TalkStatus
{
	[Token(Token = "0x40009D7")]
	Welcome,
	[Token(Token = "0x40009D8")]
	Mumbling,
	[Token(Token = "0x40009D9")]
	Surprise,
	[Token(Token = "0x40009DA")]
	Buying,
	[Token(Token = "0x40009DB")]
	Coughing,
	[Token(Token = "0x40009DC")]
	Whistling,
	[Token(Token = "0x40009DD")]
	Mad
}
[Token(Token = "0x2000170")]
public class NPC : SpawnableObject
{
	[Token(Token = "0x40009DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string NPCname;

	[Token(Token = "0x40009DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float moveSpeed;

	[Token(Token = "0x40009E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool hasEntered;

	[Token(Token = "0x40009E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[HideInInspector]
	public bool talking;

	[Token(Token = "0x40009E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public string soundEvent;

	[Token(Token = "0x40009E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject model;

	[Token(Token = "0x40009E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public PathfindingAgent pathfinding;

	[Token(Token = "0x40009E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public CharacterAnimator chanim;

	[Token(Token = "0x40009E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public CharacterRandomizer chaRand;

	[Token(Token = "0x40009E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string eventIDModifier;

	[Token(Token = "0x40009E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	protected float currentAudioCueLength;

	[Token(Token = "0x40009E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected float talkTimer;

	[Token(Token = "0x40009EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[HideInInspector]
	public TalkStatus currentStatus;

	[Token(Token = "0x40009EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16ABA4", Offset = "0x16ABA4")]
	private static Dictionary<string, int> <>f__switch$map1;

	[Token(Token = "0x170000C8")]
	public int customAreaMask
	{
		[Token(Token = "0x60008D2")]
		[Address(RVA = "0x32528C", Offset = "0x32528C", VA = "0x32528C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60008D3")]
		[Address(RVA = "0x3252C4", Offset = "0x3252C4", VA = "0x3252C4")]
		set
		{
		}
	}

	[Token(Token = "0x60008D1")]
	[Address(RVA = "0x325284", Offset = "0x325284", VA = "0x325284")]
	public NPC()
	{
	}

	[Token(Token = "0x60008D4")]
	[Address(RVA = "0x325304", Offset = "0x325304", VA = "0x325304")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008D5")]
	[Address(RVA = "0x3253D8", Offset = "0x3253D8", VA = "0x3253D8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60008D6")]
	[Address(RVA = "0x325420", Offset = "0x325420", VA = "0x325420", Slot = "6")]
	public virtual void Initialize()
	{
	}

	[Token(Token = "0x60008D7")]
	[Address(RVA = "0x325424", Offset = "0x325424", VA = "0x325424", Slot = "4")]
	public override void Reset()
	{
	}

	[Token(Token = "0x60008D8")]
	[Address(RVA = "0x325434", Offset = "0x325434", VA = "0x325434")]
	public void killModel()
	{
	}

	[Token(Token = "0x60008D9")]
	[Address(RVA = "0x3256E4", Offset = "0x3256E4", VA = "0x3256E4", Slot = "7")]
	public virtual void Setup()
	{
	}

	[Token(Token = "0x60008DA")]
	[Address(RVA = "0x3257BC", Offset = "0x3257BC", VA = "0x3257BC")]
	public void ApplyType(NPCInfo info)
	{
	}

	[Token(Token = "0x60008DB")]
	[Address(RVA = "0x325B4C", Offset = "0x325B4C", VA = "0x325B4C", Slot = "8")]
	public virtual void ApplyType(DudeInfo info)
	{
	}

	[Token(Token = "0x60008DC")]
	[Address(RVA = "0x325DD8", Offset = "0x325DD8", VA = "0x325DD8", Slot = "9")]
	public virtual void ApplyType(GardeInfo info)
	{
	}

	[Token(Token = "0x60008DD")]
	[Address(RVA = "0x326064", Offset = "0x326064", VA = "0x326064", Slot = "10")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x60008DE")]
	[Address(RVA = "0x326204", Offset = "0x326204", VA = "0x326204")]
	protected void TalkDelay()
	{
	}

	[Token(Token = "0x60008DF")]
	[Address(RVA = "0x32626C", Offset = "0x32626C", VA = "0x32626C")]
	protected void RandomVoice(Gender genre)
	{
	}

	[Token(Token = "0x60008E0")]
	[Address(RVA = "0x326394", Offset = "0x326394", VA = "0x326394", Slot = "11")]
	public virtual void GoToEntrance()
	{
	}

	[Token(Token = "0x60008E1")]
	[Address(RVA = "0x326538", Offset = "0x326538", VA = "0x326538")]
	public void GoToJailCell()
	{
	}

	[Token(Token = "0x60008E2")]
	[Address(RVA = "0x326668", Offset = "0x326668", VA = "0x326668", Slot = "12")]
	public virtual string GetAudioCue(TalkStatus sayingWhat)
	{
		return null;
	}

	[Token(Token = "0x60008E3")]
	[Address(RVA = "0x328008", Offset = "0x328008", VA = "0x328008", Slot = "13")]
	public virtual void PonctualAction(TalkStatus action, float waitTime = 5f)
	{
	}

	[Token(Token = "0x60008E4")]
	[Address(RVA = "0x32814C", Offset = "0x32814C", VA = "0x32814C", Slot = "14")]
	public virtual void FootStepAudio()
	{
	}

	[Token(Token = "0x60008E5")]
	[Address(RVA = "0x328150", Offset = "0x328150", VA = "0x328150", Slot = "15")]
	public virtual void JailCellAction(Transform pos)
	{
	}
}
[Token(Token = "0x2000171")]
public class NPCDatabase : MonoBehaviour
{
	[Token(Token = "0x40009EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static NPCDatabase Instance;

	[Token(Token = "0x40009ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject dealerPrefab;

	[Token(Token = "0x40009EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject gardePrefab;

	[Token(Token = "0x40009EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public GameObject dudePrefab;

	[Token(Token = "0x40009F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject basicAnnouncerPrefab;

	[Token(Token = "0x40009F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public GameObject gameStartAnnouncerPrefab;

	[Token(Token = "0x40009F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject postFouilleAnnouncerPrefab;

	[Token(Token = "0x40009F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public GameObject firstFouilleAnnouncerPrefab;

	[Token(Token = "0x40009F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public NPCInfo[] NPCinfosBank;

	[Token(Token = "0x40009F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public DudeInfo[] DudeInfosBank;

	[Token(Token = "0x40009F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GardeInfo[] GardeInfosBank;

	[Token(Token = "0x40009F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Texture[] CopsMaleTextures;

	[Token(Token = "0x40009F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Texture[] CopsFemaleTextures;

	[Token(Token = "0x40009F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Texture[] DudesTextures;

	[Token(Token = "0x60008E6")]
	[Address(RVA = "0x328154", Offset = "0x328154", VA = "0x328154")]
	public NPCDatabase()
	{
	}

	[Token(Token = "0x60008E7")]
	[Address(RVA = "0x32815C", Offset = "0x32815C", VA = "0x32815C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008E8")]
	[Address(RVA = "0x3282C0", Offset = "0x3282C0", VA = "0x3282C0")]
	public NPCInfo FindInfo(string infoName)
	{
		return null;
	}

	[Token(Token = "0x60008E9")]
	[Address(RVA = "0x3284FC", Offset = "0x3284FC", VA = "0x3284FC")]
	public GardeInfo FindRandomGardeInfo()
	{
		return null;
	}

	[Token(Token = "0x60008EA")]
	[Address(RVA = "0x3286D8", Offset = "0x3286D8", VA = "0x3286D8")]
	public DudeInfo FindRandomDudeInfo()
	{
		return null;
	}

	[Token(Token = "0x60008EB")]
	[Address(RVA = "0x32865C", Offset = "0x32865C", VA = "0x32865C")]
	private float GetGardesTotalWeight()
	{
		return default(float);
	}
}
[Token(Token = "0x2000172")]
public class PathfindingAgent : MonoBehaviour
{
	[Token(Token = "0x200033A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16ABD4", Offset = "0x16ABD4")]
	private sealed class <LookAtPlayer>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40012E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal GameObject <head>__0;

		[Token(Token = "0x40012E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal float time;

		[Token(Token = "0x40012E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal Vector3 <dir>__1;

		[Token(Token = "0x40012E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal Quaternion <rot>__1;

		[Token(Token = "0x40012E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		internal PathfindingAgent $this;

		[Token(Token = "0x40012E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal object $current;

		[Token(Token = "0x40012E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		internal bool $disposing;

		[Token(Token = "0x40012E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal int $PC;

		[Token(Token = "0x170002CF")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6001881")]
			[Address(RVA = "0x331B80", Offset = "0x331B80", VA = "0x331B80", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001882")]
			[Address(RVA = "0x331B88", Offset = "0x331B88", VA = "0x331B88", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600187F")]
		[Address(RVA = "0x331788", Offset = "0x331788", VA = "0x331788")]
		[DebuggerHidden]
		public <LookAtPlayer>c__Iterator0()
		{
		}

		[Token(Token = "0x6001880")]
		[Address(RVA = "0x331830", Offset = "0x331830", VA = "0x331830", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001883")]
		[Address(RVA = "0x331B90", Offset = "0x331B90", VA = "0x331B90", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001884")]
		[Address(RVA = "0x331BA4", Offset = "0x331BA4", VA = "0x331BA4", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x200033B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16AC34", Offset = "0x16AC34")]
	private sealed class <LookToDir>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40012EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal Transform dir;

		[Token(Token = "0x40012EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal PathfindingAgent $this;

		[Token(Token = "0x40012EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal object $current;

		[Token(Token = "0x40012ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal bool $disposing;

		[Token(Token = "0x40012EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal int $PC;

		[Token(Token = "0x170002D1")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6001887")]
			[Address(RVA = "0x331EF0", Offset = "0x331EF0", VA = "0x331EF0", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001888")]
			[Address(RVA = "0x331EF8", Offset = "0x331EF8", VA = "0x331EF8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001885")]
		[Address(RVA = "0x331828", Offset = "0x331828", VA = "0x331828")]
		[DebuggerHidden]
		public <LookToDir>c__Iterator1()
		{
		}

		[Token(Token = "0x6001886")]
		[Address(RVA = "0x331C28", Offset = "0x331C28", VA = "0x331C28", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001889")]
		[Address(RVA = "0x331F00", Offset = "0x331F00", VA = "0x331F00", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x600188A")]
		[Address(RVA = "0x331F14", Offset = "0x331F14", VA = "0x331F14", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x40009FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int currentPathID;

	[Token(Token = "0x40009FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	internal PathNode nextNode;

	[Token(Token = "0x40009FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public PathInfo debugPath;

	[Token(Token = "0x40009FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int destNode;

	[Token(Token = "0x40009FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool isArrived;

	[Token(Token = "0x40009FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool isMoving;

	[Token(Token = "0x4000A00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	internal NavMeshAgent agent;

	[Token(Token = "0x170000C9")]
	internal PathInfo currentPath
	{
		[Token(Token = "0x60008ED")]
		[Address(RVA = "0x330FF0", Offset = "0x330FF0", VA = "0x330FF0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60008EC")]
	[Address(RVA = "0x330FE8", Offset = "0x330FE8", VA = "0x330FE8")]
	public PathfindingAgent()
	{
	}

	[Token(Token = "0x60008EE")]
	[Address(RVA = "0x331094", Offset = "0x331094", VA = "0x331094")]
	private void Start()
	{
	}

	[Token(Token = "0x60008EF")]
	[Address(RVA = "0x3311D8", Offset = "0x3311D8", VA = "0x3311D8")]
	public void StartPath(int pathID)
	{
	}

	[Token(Token = "0x60008F0")]
	[Address(RVA = "0x3264C4", Offset = "0x3264C4", VA = "0x3264C4")]
	public void GoTo(Vector3 pos)
	{
	}

	[Token(Token = "0x60008F1")]
	[Address(RVA = "0x331338", Offset = "0x331338", VA = "0x331338")]
	public void GoToNextNode()
	{
	}

	[Token(Token = "0x60008F2")]
	[Address(RVA = "0x3315EC", Offset = "0x3315EC", VA = "0x3315EC")]
	public void ForceStop()
	{
	}

	[Token(Token = "0x60008F3")]
	[Address(RVA = "0x331668", Offset = "0x331668", VA = "0x331668")]
	public void Resume()
	{
	}

	[Token(Token = "0x60008F4")]
	[Address(RVA = "0x3314DC", Offset = "0x3314DC", VA = "0x3314DC")]
	public void Stop()
	{
	}

	[Token(Token = "0x60008F5")]
	[Address(RVA = "0x3316E4", Offset = "0x3316E4", VA = "0x3316E4")]
	[DebuggerHidden]
	public IEnumerator LookAtPlayer(float time)
	{
		return null;
	}

	[Token(Token = "0x60008F6")]
	[Address(RVA = "0x331790", Offset = "0x331790", VA = "0x331790")]
	[DebuggerHidden]
	public IEnumerator LookToDir(Transform dir)
	{
		return null;
	}
}
[Serializable]
[Token(Token = "0x2000173")]
public class PathNode : MonoBehaviour
{
	[Token(Token = "0x2000174")]
	public enum NodeType
	{
		[Token(Token = "0x4000A05")]
		Entrance,
		[Token(Token = "0x4000A06")]
		Single,
		[Token(Token = "0x4000A07")]
		Switch,
		[Token(Token = "0x4000A08")]
		Pause,
		[Token(Token = "0x4000A09")]
		Cell,
		[Token(Token = "0x4000A0A")]
		Shortcut
	}

	[Token(Token = "0x4000A01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int[] possiblePathsIDs;

	[Token(Token = "0x4000A02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public NodeType currentNodeType;

	[Token(Token = "0x4000A03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Transform secondaryNode;

	[Token(Token = "0x60008F7")]
	[Address(RVA = "0x331FA0", Offset = "0x331FA0", VA = "0x331FA0")]
	public PathNode()
	{
	}

	[Token(Token = "0x60008F8")]
	[Address(RVA = "0x331FA8", Offset = "0x331FA8", VA = "0x331FA8")]
	private void Start()
	{
	}

	[Token(Token = "0x60008F9")]
	[Address(RVA = "0x332030", Offset = "0x332030", VA = "0x332030")]
	private void SwitchAgentPath(PathfindingAgent agent)
	{
	}

	[Token(Token = "0x60008FA")]
	[Address(RVA = "0x3320C8", Offset = "0x3320C8", VA = "0x3320C8")]
	private void OnTriggerEnter(Collider other)
	{
	}
}
[Serializable]
[Token(Token = "0x2000175")]
public class PathInfo
{
	[Token(Token = "0x4000A0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public string name;

	[Token(Token = "0x4000A0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int pathID;

	[Token(Token = "0x4000A0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<Transform> nodesTransforms;

	[Token(Token = "0x4000A0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[HideInInspector]
	public List<PathNode> nodes;

	[Token(Token = "0x60008FB")]
	[Address(RVA = "0x331F98", Offset = "0x331F98", VA = "0x331F98")]
	public PathInfo()
	{
	}
}
[Token(Token = "0x2000176")]
public class PathsManager : MonoBehaviour
{
	[Token(Token = "0x4000A0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PathsManager Instance;

	[Token(Token = "0x4000A10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public PathInfo[] levelPaths;

	[Token(Token = "0x4000A11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Dictionary<PathNode.NodeType, Transform[]> nodeCache;

	[Token(Token = "0x170000CA")]
	public Transform entrance
	{
		[Token(Token = "0x60008FD")]
		[Address(RVA = "0x3264BC", Offset = "0x3264BC", VA = "0x3264BC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000CB")]
	public Transform shortcut
	{
		[Token(Token = "0x60008FE")]
		[Address(RVA = "0x329E50", Offset = "0x329E50", VA = "0x329E50")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000CC")]
	public Transform jailCell
	{
		[Token(Token = "0x60008FF")]
		[Address(RVA = "0x326660", Offset = "0x326660", VA = "0x326660")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60008FC")]
	[Address(RVA = "0x332518", Offset = "0x332518", VA = "0x332518")]
	public PathsManager()
	{
	}

	[Token(Token = "0x6000900")]
	[Address(RVA = "0x332690", Offset = "0x332690", VA = "0x332690")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000901")]
	[Address(RVA = "0x3326FC", Offset = "0x3326FC", VA = "0x3326FC")]
	private void CacheNodes()
	{
	}

	[Token(Token = "0x6000902")]
	[Address(RVA = "0x332520", Offset = "0x332520", VA = "0x332520")]
	private Transform FindNode(PathNode.NodeType nodeType)
	{
		return null;
	}

	[Token(Token = "0x6000903")]
	[Address(RVA = "0x332B6C", Offset = "0x332B6C", VA = "0x332B6C")]
	public Transform[] FindNodes(PathNode.NodeType nodeType)
	{
		return null;
	}
}
[Token(Token = "0x2000177")]
public class PaulAnimator : CharacterAnimator
{
	[Token(Token = "0x4000A12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float coughTimer;

	[Token(Token = "0x6000904")]
	[Address(RVA = "0x332C54", Offset = "0x332C54", VA = "0x332C54")]
	public PaulAnimator()
	{
	}

	[Token(Token = "0x6000905")]
	[Address(RVA = "0x332C68", Offset = "0x332C68", VA = "0x332C68", Slot = "5")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000906")]
	[Address(RVA = "0x332CE8", Offset = "0x332CE8", VA = "0x332CE8", Slot = "6")]
	public override void TriggeredSpecificAnim()
	{
	}
}
[Token(Token = "0x2000178")]
public class PauseManager : MonoBehaviour
{
	[Token(Token = "0x4000A13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16ACA4", Offset = "0x16ACA4")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x16ACA4", Offset = "0x16ACA4")]
	private static PauseManager <Instance>k__BackingField;

	[Token(Token = "0x4000A16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool isPaused;

	[Token(Token = "0x4000A17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float _lastTimeScale;

	[Token(Token = "0x4000A18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int nombrePause;

	[Token(Token = "0x4000A19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private TutorialManager tuto;

	[Token(Token = "0x4000A1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private SaveAnimationManager save;

	[Token(Token = "0x4000A1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform saveParent;

	[Token(Token = "0x4000A1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 savePos;

	[Token(Token = "0x4000A1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Quaternion saveRot;

	[Token(Token = "0x4000A1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private MorningDate morning;

	[Token(Token = "0x4000A1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Transform morningParent;

	[Token(Token = "0x4000A20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 morningPos;

	[Token(Token = "0x4000A21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion morningRot;

	[Token(Token = "0x4000A22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private NVRCanvasInput NVRCanvas;

	[Token(Token = "0x170000CD")]
	public static PauseManager Instance
	{
		[Token(Token = "0x6000908")]
		[Address(RVA = "0x332DC8", Offset = "0x332DC8", VA = "0x332DC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16AD40", Offset = "0x16AD40")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000909")]
		[Address(RVA = "0x332E2C", Offset = "0x332E2C", VA = "0x332E2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16AD50", Offset = "0x16AD50")]
		private set
		{
		}
	}

	[Token(Token = "0x14000001")]
	public event Action OnGamePaused
	{
		[Token(Token = "0x600090A")]
		[Address(RVA = "0x332E90", Offset = "0x332E90", VA = "0x332E90")]
		add
		{
		}
		[Token(Token = "0x600090B")]
		[Address(RVA = "0x332F84", Offset = "0x332F84", VA = "0x332F84")]
		remove
		{
		}
	}

	[Token(Token = "0x14000002")]
	public event Action OnGameUnpaused
	{
		[Token(Token = "0x600090C")]
		[Address(RVA = "0x333078", Offset = "0x333078", VA = "0x333078")]
		add
		{
		}
		[Token(Token = "0x600090D")]
		[Address(RVA = "0x33316C", Offset = "0x33316C", VA = "0x33316C")]
		remove
		{
		}
	}

	[Token(Token = "0x6000907")]
	[Address(RVA = "0x332DC0", Offset = "0x332DC0", VA = "0x332DC0")]
	public PauseManager()
	{
	}

	[Token(Token = "0x600090E")]
	[Address(RVA = "0x333260", Offset = "0x333260", VA = "0x333260")]
	private void Awake()
	{
	}

	[Token(Token = "0x600090F")]
	[Address(RVA = "0x3334D4", Offset = "0x3334D4", VA = "0x3334D4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000910")]
	[Address(RVA = "0x333594", Offset = "0x333594", VA = "0x333594")]
	public void PauseGame()
	{
	}

	[Token(Token = "0x6000911")]
	[Address(RVA = "0x3335E0", Offset = "0x3335E0", VA = "0x3335E0")]
	public void UnpauseGame()
	{
	}

	[Token(Token = "0x6000912")]
	[Address(RVA = "0x32D8E4", Offset = "0x32D8E4", VA = "0x32D8E4")]
	public static void PauseQuest(string nomFade)
	{
	}

	[Token(Token = "0x6000913")]
	[Address(RVA = "0x33361C", Offset = "0x33361C", VA = "0x33361C")]
	public void PauseQuest_(string nomFade)
	{
	}

	[Token(Token = "0x6000914")]
	[Address(RVA = "0x32D868", Offset = "0x32D868", VA = "0x32D868")]
	public static void UnpauseQuest(string nomFade)
	{
	}

	[Token(Token = "0x6000915")]
	[Address(RVA = "0x333BE4", Offset = "0x333BE4", VA = "0x333BE4")]
	public void UnpauseQuest_(string nomFade)
	{
	}
}
[Token(Token = "0x2000179")]
public class PauseOculus : MonoBehaviour
{
	[Token(Token = "0x4000A23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject canvas;

	[Token(Token = "0x4000A24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private NVRPlayer player;

	[Token(Token = "0x4000A25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private bool isPaused;

	[Token(Token = "0x4000A26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	private bool boutonPause;

	[Token(Token = "0x6000916")]
	[Address(RVA = "0x334058", Offset = "0x334058", VA = "0x334058")]
	public PauseOculus()
	{
	}

	[Token(Token = "0x6000917")]
	[Address(RVA = "0x334060", Offset = "0x334060", VA = "0x334060")]
	private void Start()
	{
	}

	[Token(Token = "0x6000918")]
	[Address(RVA = "0x334100", Offset = "0x334100", VA = "0x334100")]
	private void Update()
	{
	}
}
[Token(Token = "0x200017A")]
public class PlateformSpecificAsset : MonoBehaviour
{
	[Token(Token = "0x4000A27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject ViveAsset;

	[Token(Token = "0x4000A28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject OcculusAsset;

	[Token(Token = "0x4000A29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public GameObject MixedRealityAsset;

	[Token(Token = "0x4000A2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject PS4Asset;

	[Token(Token = "0x4000A2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public GameObject CosmosAsset;

	[Token(Token = "0x4000A2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject QuestAsset;

	[Token(Token = "0x4000A2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public GameObject Quest2Asset;

	[Token(Token = "0x4000A2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject PicoNeo3;

	[Token(Token = "0x6000919")]
	[Address(RVA = "0x339694", Offset = "0x339694", VA = "0x339694")]
	public PlateformSpecificAsset()
	{
	}

	[Token(Token = "0x600091A")]
	[Address(RVA = "0x33969C", Offset = "0x33969C", VA = "0x33969C")]
	private void Start()
	{
	}
}
[Token(Token = "0x200017B")]
public enum Clusters
{
	[Token(Token = "0x4000A30")]
	Particle,
	[Token(Token = "0x4000A31")]
	Object,
	[Token(Token = "0x4000A32")]
	Meuble,
	[Token(Token = "0x4000A33")]
	ObjectModels,
	[Token(Token = "0x4000A34")]
	NPCs,
	[Token(Token = "0x4000A35")]
	NPCModels,
	[Token(Token = "0x4000A36")]
	UIElements
}
[Token(Token = "0x200017C")]
public class MainSpawner : MonoBehaviour
{
	[Token(Token = "0x4000A37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private Transform jailSpawnAnchor;

	[Token(Token = "0x4000A38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private Transform tutorialSpawnAnchor;

	[Token(Token = "0x4000A39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Animator jailSpawnAnimator;

	[Token(Token = "0x170000CE")]
	public Transform Anchor
	{
		[Token(Token = "0x600091C")]
		[Address(RVA = "0x244FA8", Offset = "0x244FA8", VA = "0x244FA8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600091B")]
	[Address(RVA = "0x244FA0", Offset = "0x244FA0", VA = "0x244FA0")]
	public MainSpawner()
	{
	}

	[Token(Token = "0x600091D")]
	[Address(RVA = "0x24502C", Offset = "0x24502C", VA = "0x24502C")]
	public void Init()
	{
	}

	[Token(Token = "0x600091E")]
	[Address(RVA = "0x2454B8", Offset = "0x2454B8", VA = "0x2454B8")]
	private void OpenSpawner()
	{
	}

	[Token(Token = "0x600091F")]
	[Address(RVA = "0x245530", Offset = "0x245530", VA = "0x245530")]
	private void CloseSpawner()
	{
	}
}
[Token(Token = "0x200017D")]
public class MainSpawnerManager : MonoBehaviour
{
	[Token(Token = "0x200033C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16AE8C", Offset = "0x16AE8C")]
	private sealed class <SpawnObjectCoroutine>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40012EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal int value;

		[Token(Token = "0x40012F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal GameObject objectToSpawn;

		[Token(Token = "0x40012F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal Clusters cluster;

		[Token(Token = "0x40012F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal MainSpawnerManager $this;

		[Token(Token = "0x40012F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal object $current;

		[Token(Token = "0x40012F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal bool $disposing;

		[Token(Token = "0x40012F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal int $PC;

		[Token(Token = "0x170002D3")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x600188D")]
			[Address(RVA = "0x247C80", Offset = "0x247C80", VA = "0x247C80", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600188E")]
			[Address(RVA = "0x247C88", Offset = "0x247C88", VA = "0x247C88", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600188B")]
		[Address(RVA = "0x2467CC", Offset = "0x2467CC", VA = "0x2467CC")]
		[DebuggerHidden]
		public <SpawnObjectCoroutine>c__Iterator0()
		{
		}

		[Token(Token = "0x600188C")]
		[Address(RVA = "0x247A60", Offset = "0x247A60", VA = "0x247A60", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600188F")]
		[Address(RVA = "0x247C90", Offset = "0x247C90", VA = "0x247C90", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001890")]
		[Address(RVA = "0x247CA4", Offset = "0x247CA4", VA = "0x247CA4", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x200033D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16AEEC", Offset = "0x16AEEC")]
	private sealed class <SpawnObjectsCoroutine>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40012F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal int <i>__1;

		[Token(Token = "0x40012F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal GameObject[] objectsToSpawn;

		[Token(Token = "0x40012F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal Clusters cluster;

		[Token(Token = "0x40012F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal MainSpawnerManager $this;

		[Token(Token = "0x40012FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal object $current;

		[Token(Token = "0x40012FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal bool $disposing;

		[Token(Token = "0x40012FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal int $PC;

		[Token(Token = "0x170002D5")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6001893")]
			[Address(RVA = "0x247F70", Offset = "0x247F70", VA = "0x247F70", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001894")]
			[Address(RVA = "0x247F78", Offset = "0x247F78", VA = "0x247F78", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001891")]
		[Address(RVA = "0x2467D4", Offset = "0x2467D4", VA = "0x2467D4")]
		[DebuggerHidden]
		public <SpawnObjectsCoroutine>c__Iterator1()
		{
		}

		[Token(Token = "0x6001892")]
		[Address(RVA = "0x247D28", Offset = "0x247D28", VA = "0x247D28", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001895")]
		[Address(RVA = "0x247F80", Offset = "0x247F80", VA = "0x247F80", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001896")]
		[Address(RVA = "0x247F94", Offset = "0x247F94", VA = "0x247F94", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x200033E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16AF4C", Offset = "0x16AF4C")]
	private sealed class <SpawnObjectsCoroutine>c__Iterator2 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40012FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal int money;

		[Token(Token = "0x40012FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal int <tempValue>__0;

		[Token(Token = "0x40012FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal int <i>__1;

		[Token(Token = "0x4001300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal BuyingData[] meubleToSpawn;

		[Token(Token = "0x4001301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal int <MaxCapacity>__2;

		[Token(Token = "0x4001302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal int <value>__3;

		[Token(Token = "0x4001303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal int <i>__4;

		[Token(Token = "0x4001304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal BuyingData[] objectsToSpawn;

		[Token(Token = "0x4001305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal int <MaxCapacity>__5;

		[Token(Token = "0x4001306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		internal int <value>__6;

		[Token(Token = "0x4001307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal MainSpawnerManager $this;

		[Token(Token = "0x4001308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		internal object $current;

		[Token(Token = "0x4001309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal bool $disposing;

		[Token(Token = "0x400130A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		internal int $PC;

		[Token(Token = "0x170002D7")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6001899")]
			[Address(RVA = "0x24896C", Offset = "0x24896C", VA = "0x24896C", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600189A")]
			[Address(RVA = "0x248974", Offset = "0x248974", VA = "0x248974", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001897")]
		[Address(RVA = "0x2467DC", Offset = "0x2467DC", VA = "0x2467DC")]
		[DebuggerHidden]
		public <SpawnObjectsCoroutine>c__Iterator2()
		{
		}

		[Token(Token = "0x6001898")]
		[Address(RVA = "0x248018", Offset = "0x248018", VA = "0x248018", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600189B")]
		[Address(RVA = "0x24897C", Offset = "0x24897C", VA = "0x24897C", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x600189C")]
		[Address(RVA = "0x248990", Offset = "0x248990", VA = "0x248990", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x200033F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16AFAC", Offset = "0x16AFAC")]
	private sealed class <SpawnRandomFromArrayCoroutine>c__Iterator3 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x400130B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal int <i>__1;

		[Token(Token = "0x400130C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal int numberToSpawn;

		[Token(Token = "0x400130D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal GameObject[] objectsArray;

		[Token(Token = "0x400130E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal Clusters cluster;

		[Token(Token = "0x400130F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal MainSpawnerManager $this;

		[Token(Token = "0x4001310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal object $current;

		[Token(Token = "0x4001311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal bool $disposing;

		[Token(Token = "0x4001312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal int $PC;

		[Token(Token = "0x170002D9")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x600189F")]
			[Address(RVA = "0x248C88", Offset = "0x248C88", VA = "0x248C88", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002DA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60018A0")]
			[Address(RVA = "0x248C90", Offset = "0x248C90", VA = "0x248C90", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600189D")]
		[Address(RVA = "0x2467E4", Offset = "0x2467E4", VA = "0x2467E4")]
		[DebuggerHidden]
		public <SpawnRandomFromArrayCoroutine>c__Iterator3()
		{
		}

		[Token(Token = "0x600189E")]
		[Address(RVA = "0x248A14", Offset = "0x248A14", VA = "0x248A14", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60018A1")]
		[Address(RVA = "0x248C98", Offset = "0x248C98", VA = "0x248C98", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60018A2")]
		[Address(RVA = "0x248CAC", Offset = "0x248CAC", VA = "0x248CAC", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000340")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16B00C", Offset = "0x16B00C")]
	private sealed class <FakeSpawnObjectCoroutine>c__Iterator4 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4001313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal GameObject objectToSpawn;

		[Token(Token = "0x4001314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal MainSpawnerManager $this;

		[Token(Token = "0x4001315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal object $current;

		[Token(Token = "0x4001316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal bool $disposing;

		[Token(Token = "0x4001317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal int $PC;

		[Token(Token = "0x170002DB")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60018A5")]
			[Address(RVA = "0x2472F4", Offset = "0x2472F4", VA = "0x2472F4", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002DC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60018A6")]
			[Address(RVA = "0x2472FC", Offset = "0x2472FC", VA = "0x2472FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018A3")]
		[Address(RVA = "0x2467EC", Offset = "0x2467EC", VA = "0x2467EC")]
		[DebuggerHidden]
		public <FakeSpawnObjectCoroutine>c__Iterator4()
		{
		}

		[Token(Token = "0x60018A4")]
		[Address(RVA = "0x247110", Offset = "0x247110", VA = "0x247110", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60018A7")]
		[Address(RVA = "0x247304", Offset = "0x247304", VA = "0x247304", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60018A8")]
		[Address(RVA = "0x247318", Offset = "0x247318", VA = "0x247318", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000341")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16B06C", Offset = "0x16B06C")]
	private sealed class <FakeSpawnObjectCoroutine>c__Iterator5 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4001318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal int <i>__1;

		[Token(Token = "0x4001319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal GameObject[] objectToSpawn;

		[Token(Token = "0x400131A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal MainSpawnerManager $this;

		[Token(Token = "0x400131B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal object $current;

		[Token(Token = "0x400131C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal bool $disposing;

		[Token(Token = "0x400131D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal int $PC;

		[Token(Token = "0x170002DD")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60018AB")]
			[Address(RVA = "0x2475DC", Offset = "0x2475DC", VA = "0x2475DC", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002DE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60018AC")]
			[Address(RVA = "0x2475E4", Offset = "0x2475E4", VA = "0x2475E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018A9")]
		[Address(RVA = "0x2467F4", Offset = "0x2467F4", VA = "0x2467F4")]
		[DebuggerHidden]
		public <FakeSpawnObjectCoroutine>c__Iterator5()
		{
		}

		[Token(Token = "0x60018AA")]
		[Address(RVA = "0x24739C", Offset = "0x24739C", VA = "0x24739C", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60018AD")]
		[Address(RVA = "0x2475EC", Offset = "0x2475EC", VA = "0x2475EC", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60018AE")]
		[Address(RVA = "0x247600", Offset = "0x247600", VA = "0x247600", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000342")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16B0CC", Offset = "0x16B0CC")]
	private sealed class <SpawnCountableRessourceCoroutine>c__Iterator6 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x400131E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal int value;

		[Token(Token = "0x400131F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal int <tempValue>__0;

		[Token(Token = "0x4001320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal string name;

		[Token(Token = "0x4001321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal MainSpawnerManager $this;

		[Token(Token = "0x4001322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal object $current;

		[Token(Token = "0x4001323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal bool $disposing;

		[Token(Token = "0x4001324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal int $PC;

		[Token(Token = "0x170002DF")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60018B1")]
			[Address(RVA = "0x2479B8", Offset = "0x2479B8", VA = "0x2479B8", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60018B2")]
			[Address(RVA = "0x2479C0", Offset = "0x2479C0", VA = "0x2479C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018AF")]
		[Address(RVA = "0x2467FC", Offset = "0x2467FC", VA = "0x2467FC")]
		[DebuggerHidden]
		public <SpawnCountableRessourceCoroutine>c__Iterator6()
		{
		}

		[Token(Token = "0x60018B0")]
		[Address(RVA = "0x247684", Offset = "0x247684", VA = "0x247684", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60018B3")]
		[Address(RVA = "0x2479C8", Offset = "0x2479C8", VA = "0x2479C8", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60018B4")]
		[Address(RVA = "0x2479DC", Offset = "0x2479DC", VA = "0x2479DC", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4000A3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MainSpawnerManager Instance;

	[Token(Token = "0x4000A3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public MainSpawner MainSpawner;

	[Token(Token = "0x4000A3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float openingDoorDelay;

	[Token(Token = "0x4000A3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float delayBetweenObjects;

	[Token(Token = "0x14000003")]
	public event Action OnSpawningObject
	{
		[Token(Token = "0x6000921")]
		[Address(RVA = "0x2451DC", Offset = "0x2451DC", VA = "0x2451DC")]
		add
		{
		}
		[Token(Token = "0x6000922")]
		[Address(RVA = "0x2455B0", Offset = "0x2455B0", VA = "0x2455B0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public event Action OnFinishedSpawningObject
	{
		[Token(Token = "0x6000923")]
		[Address(RVA = "0x2452D0", Offset = "0x2452D0", VA = "0x2452D0")]
		add
		{
		}
		[Token(Token = "0x6000924")]
		[Address(RVA = "0x2456A4", Offset = "0x2456A4", VA = "0x2456A4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public event Action OnFinishedMassSpawning
	{
		[Token(Token = "0x6000925")]
		[Address(RVA = "0x2453C4", Offset = "0x2453C4", VA = "0x2453C4")]
		add
		{
		}
		[Token(Token = "0x6000926")]
		[Address(RVA = "0x245798", Offset = "0x245798", VA = "0x245798")]
		remove
		{
		}
	}

	[Token(Token = "0x6000920")]
	[Address(RVA = "0x2455A8", Offset = "0x2455A8", VA = "0x2455A8")]
	public MainSpawnerManager()
	{
	}

	[Token(Token = "0x6000927")]
	[Address(RVA = "0x24588C", Offset = "0x24588C", VA = "0x24588C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000928")]
	[Address(RVA = "0x245A34", Offset = "0x245A34", VA = "0x245A34")]
	public void Spawn(BuyingData objectToSpawn, Clusters cluster)
	{
	}

	[Token(Token = "0x6000929")]
	[Address(RVA = "0x245BD8", Offset = "0x245BD8", VA = "0x245BD8")]
	public void Spawn(GameObject objectToSpawn, Clusters cluster)
	{
	}

	[Token(Token = "0x600092A")]
	[Address(RVA = "0x245C08", Offset = "0x245C08", VA = "0x245C08")]
	public void Spawn(GameObject[] objectsToSpawn, Clusters cluster)
	{
	}

	[Token(Token = "0x600092B")]
	[Address(RVA = "0x245CD8", Offset = "0x245CD8", VA = "0x245CD8")]
	public void Spawn(BuyingData[] meubleToSpawn, BuyingData[] objectsToSpawn, int money)
	{
	}

	[Token(Token = "0x600092C")]
	[Address(RVA = "0x245DC4", Offset = "0x245DC4", VA = "0x245DC4")]
	public void Delete(GameObject objectToDelete, Clusters cluster)
	{
	}

	[Token(Token = "0x600092D")]
	[Address(RVA = "0x245DD0", Offset = "0x245DD0", VA = "0x245DD0")]
	public void Delete(SpawnableObject objectToDelete, Clusters cluster)
	{
	}

	[Token(Token = "0x600092E")]
	[Address(RVA = "0x245E10", Offset = "0x245E10", VA = "0x245E10")]
	public void Delete(GameObject[] objectsToDelete, Clusters cluster)
	{
	}

	[Token(Token = "0x600092F")]
	[Address(RVA = "0x246004", Offset = "0x246004", VA = "0x246004")]
	public void Delete(SpawnableObject[] objectsToDelete, Clusters cluster)
	{
	}

	[Token(Token = "0x6000930")]
	public void Delete<T>(IEnumerable<T> objectsToDelete, Clusters cluster) where T : SpawnableObject
	{
	}

	[Token(Token = "0x6000931")]
	[Address(RVA = "0x2461F8", Offset = "0x2461F8", VA = "0x2461F8")]
	public void FakeSpawn(GameObject objectToSpawn)
	{
	}

	[Token(Token = "0x6000932")]
	[Address(RVA = "0x2462B4", Offset = "0x2462B4", VA = "0x2462B4")]
	public void FakeSpawn(GameObject[] objectToSpawn)
	{
	}

	[Token(Token = "0x6000933")]
	[Address(RVA = "0x246370", Offset = "0x246370", VA = "0x246370")]
	public void SpawnRandomFromArray(int numberToSpawn, GameObject[] objectsArray, Clusters cluster)
	{
	}

	[Token(Token = "0x6000934")]
	[Address(RVA = "0x24645C", Offset = "0x24645C", VA = "0x24645C")]
	public void SpawnMoney(int value)
	{
	}

	[Token(Token = "0x6000935")]
	[Address(RVA = "0x246584", Offset = "0x246584", VA = "0x246584")]
	public void SpawnSkillpoint(int skillpoint)
	{
	}

	[Token(Token = "0x6000936")]
	[Address(RVA = "0x246600", Offset = "0x246600", VA = "0x246600")]
	public void FakeDelete(GameObject objectToDelete)
	{
	}

	[Token(Token = "0x6000937")]
	[Address(RVA = "0x246774", Offset = "0x246774", VA = "0x246774")]
	public void FakeDelete(GameObject[] objectToDelete)
	{
	}

	[Token(Token = "0x6000938")]
	[Address(RVA = "0x245B18", Offset = "0x245B18", VA = "0x245B18")]
	[DebuggerHidden]
	private IEnumerator SpawnObjectCoroutine(GameObject objectToSpawn, Clusters cluster, int value = 0)
	{
		return null;
	}

	[Token(Token = "0x6000939")]
	[Address(RVA = "0x245C2C", Offset = "0x245C2C", VA = "0x245C2C")]
	[DebuggerHidden]
	private IEnumerator SpawnObjectsCoroutine(GameObject[] objectsToSpawn, Clusters cluster)
	{
		return null;
	}

	[Token(Token = "0x600093A")]
	[Address(RVA = "0x245D04", Offset = "0x245D04", VA = "0x245D04")]
	[DebuggerHidden]
	private IEnumerator SpawnObjectsCoroutine(BuyingData[] meubleToSpawn, BuyingData[] objectsToSpawn, int money)
	{
		return null;
	}

	[Token(Token = "0x600093B")]
	[Address(RVA = "0x24639C", Offset = "0x24639C", VA = "0x24639C")]
	[DebuggerHidden]
	private IEnumerator SpawnRandomFromArrayCoroutine(int numberToSpawn, GameObject[] objectsArray, Clusters cluster)
	{
		return null;
	}

	[Token(Token = "0x600093C")]
	[Address(RVA = "0x24621C", Offset = "0x24621C", VA = "0x24621C")]
	[DebuggerHidden]
	private IEnumerator FakeSpawnObjectCoroutine(GameObject objectToSpawn)
	{
		return null;
	}

	[Token(Token = "0x600093D")]
	[Address(RVA = "0x2462D8", Offset = "0x2462D8", VA = "0x2462D8")]
	[DebuggerHidden]
	private IEnumerator FakeSpawnObjectCoroutine(GameObject[] objectToSpawn)
	{
		return null;
	}

	[Token(Token = "0x600093E")]
	[Address(RVA = "0x2464D8", Offset = "0x2464D8", VA = "0x2464D8")]
	[DebuggerHidden]
	private IEnumerator SpawnCountableRessourceCoroutine(int value, string name)
	{
		return null;
	}

	[Token(Token = "0x600093F")]
	[Address(RVA = "0x246804", Offset = "0x246804", VA = "0x246804")]
	private void SpawnMoneyValue(int value)
	{
	}

	[Token(Token = "0x6000940")]
	[Address(RVA = "0x246870", Offset = "0x246870", VA = "0x246870")]
	private void SpawnCountableRessource(int value, string name)
	{
	}

	[Token(Token = "0x6000941")]
	[Address(RVA = "0x246B64", Offset = "0x246B64", VA = "0x246B64")]
	private void SpawnSequence(GameObject objectToSpawn, Clusters cluster, int capacity)
	{
	}

	[Token(Token = "0x6000942")]
	[Address(RVA = "0x246DE4", Offset = "0x246DE4", VA = "0x246DE4")]
	private void SpawnSequence(GameObject objectToSpawn, Clusters cluster)
	{
	}

	[Token(Token = "0x6000943")]
	[Address(RVA = "0x246F88", Offset = "0x246F88", VA = "0x246F88")]
	private void FakeSpawnSequence(GameObject objectToSpawn)
	{
	}

	[Token(Token = "0x6000944")]
	[Address(RVA = "0x246604", Offset = "0x246604", VA = "0x246604")]
	private void FakeDeleteSequence(GameObject objectToDelete)
	{
	}

	[Token(Token = "0x6000945")]
	[Address(RVA = "0x246A10", Offset = "0x246A10", VA = "0x246A10")]
	private void SpawnBaseParticules()
	{
	}
}
[Token(Token = "0x200017E")]
public class NPCSpawnerManager : MonoBehaviour
{
	[Token(Token = "0x4000A41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static NPCSpawnerManager Instance;

	[Token(Token = "0x14000006")]
	public event Action<NPC> OnNPCSpawned
	{
		[Token(Token = "0x6000947")]
		[Address(RVA = "0x328764", Offset = "0x328764", VA = "0x328764")]
		add
		{
		}
		[Token(Token = "0x6000948")]
		[Address(RVA = "0x328858", Offset = "0x328858", VA = "0x328858")]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public event Action<NPC> OnNPCDespawned
	{
		[Token(Token = "0x6000949")]
		[Address(RVA = "0x32894C", Offset = "0x32894C", VA = "0x32894C")]
		add
		{
		}
		[Token(Token = "0x600094A")]
		[Address(RVA = "0x328A40", Offset = "0x328A40", VA = "0x328A40")]
		remove
		{
		}
	}

	[Token(Token = "0x6000946")]
	[Address(RVA = "0x32875C", Offset = "0x32875C", VA = "0x32875C")]
	public NPCSpawnerManager()
	{
	}

	[Token(Token = "0x600094B")]
	[Address(RVA = "0x328B34", Offset = "0x328B34", VA = "0x328B34")]
	private void Awake()
	{
	}

	[Token(Token = "0x600094C")]
	[Address(RVA = "0x325A5C", Offset = "0x325A5C", VA = "0x325A5C")]
	public GameObject SpawnModel(GameObject model)
	{
		return null;
	}

	[Token(Token = "0x600094D")]
	[Address(RVA = "0x329114", Offset = "0x329114", VA = "0x329114")]
	public Dealer SpawnDealer()
	{
		return null;
	}

	[Token(Token = "0x600094E")]
	[Address(RVA = "0x3293A8", Offset = "0x3293A8", VA = "0x3293A8")]
	public Announcer SpawnAnnouncer(AnnouncerType announcerType, Queue<string> announcements, GameObject[] visuals)
	{
		return null;
	}

	[Token(Token = "0x600094F")]
	[Address(RVA = "0x32987C", Offset = "0x32987C", VA = "0x32987C")]
	public Garde SpawnGuard(Vector3 position)
	{
		return null;
	}

	[Token(Token = "0x6000950")]
	[Address(RVA = "0x329B04", Offset = "0x329B04", VA = "0x329B04")]
	public Dude SpawnDude()
	{
		return null;
	}

	[Token(Token = "0x6000951")]
	[Address(RVA = "0x329DA0", Offset = "0x329DA0", VA = "0x329DA0")]
	public void DespawnNPC(NPC npc)
	{
	}

	[Token(Token = "0x6000952")]
	[Address(RVA = "0x3291B8", Offset = "0x3291B8", VA = "0x3291B8")]
	private GameObject NewDealer()
	{
		return null;
	}

	[Token(Token = "0x6000953")]
	[Address(RVA = "0x329494", Offset = "0x329494", VA = "0x329494")]
	private GameObject NewAnnouncer(AnnouncerType announcerType)
	{
		return null;
	}

	[Token(Token = "0x6000954")]
	[Address(RVA = "0x329940", Offset = "0x329940", VA = "0x329940")]
	private GameObject NewGarde(Vector3 position)
	{
		return null;
	}

	[Token(Token = "0x6000955")]
	[Address(RVA = "0x329BA8", Offset = "0x329BA8", VA = "0x329BA8")]
	private GameObject NewDude()
	{
		return null;
	}

	[Token(Token = "0x6000956")]
	[Address(RVA = "0x329E58", Offset = "0x329E58", VA = "0x329E58")]
	public void WarmPool(int dudeNumber, int gardeNumber)
	{
	}

	[Token(Token = "0x6000957")]
	[Address(RVA = "0x32A01C", Offset = "0x32A01C", VA = "0x32A01C")]
	private void WarmAnnouncers()
	{
	}

	[Token(Token = "0x6000958")]
	[Address(RVA = "0x32A160", Offset = "0x32A160", VA = "0x32A160")]
	private void WarmDealer()
	{
	}

	[Token(Token = "0x6000959")]
	[Address(RVA = "0x32A1E4", Offset = "0x32A1E4", VA = "0x32A1E4")]
	private void WarmDudePool(int number)
	{
	}

	[Token(Token = "0x600095A")]
	[Address(RVA = "0x32A27C", Offset = "0x32A27C", VA = "0x32A27C")]
	private void WarmGardePool(int number)
	{
	}

	[Token(Token = "0x600095B")]
	[Address(RVA = "0x32A360", Offset = "0x32A360", VA = "0x32A360")]
	private void WarmModels()
	{
	}
}
[Token(Token = "0x200017F")]
public class Pool : MonoBehaviour
{
	[Token(Token = "0x4000A44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private List<SpawnableObject>[] PooledObjects;

	[Token(Token = "0x4000A45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private List<SpawnableObject>[] ActiveObjects;

	[Token(Token = "0x4000A46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private List<DetectableObject> DetectableObjects;

	[Token(Token = "0x600095C")]
	[Address(RVA = "0x339E68", Offset = "0x339E68", VA = "0x339E68")]
	public Pool()
	{
	}

	[Token(Token = "0x600095D")]
	[Address(RVA = "0x339E70", Offset = "0x339E70", VA = "0x339E70")]
	public void Init()
	{
	}

	[Token(Token = "0x600095E")]
	[Address(RVA = "0x33A000", Offset = "0x33A000", VA = "0x33A000")]
	private void InitClusters(int clustersLength)
	{
	}

	[Token(Token = "0x600095F")]
	[Address(RVA = "0x33A0A0", Offset = "0x33A0A0", VA = "0x33A0A0")]
	private void InitObjectsLists(int clustersLength)
	{
	}

	[Token(Token = "0x6000960")]
	[Address(RVA = "0x339F18", Offset = "0x339F18", VA = "0x339F18")]
	private int GetClustersLength()
	{
		return default(int);
	}

	[Token(Token = "0x6000961")]
	[Address(RVA = "0x329F78", Offset = "0x329F78", VA = "0x329F78")]
	public int GetPoolClusterSize(Clusters cluster)
	{
		return default(int);
	}

	[Token(Token = "0x6000962")]
	[Address(RVA = "0x335500", Offset = "0x335500", VA = "0x335500")]
	public int GetActiveClusterSize(Clusters cluster)
	{
		return default(int);
	}

	[Token(Token = "0x6000963")]
	[Address(RVA = "0x33A27C", Offset = "0x33A27C", VA = "0x33A27C")]
	public SpawnableObject GetPooledObject(string spawnableObjectID, Clusters cluster)
	{
		return null;
	}

	[Token(Token = "0x6000964")]
	[Address(RVA = "0x33A5D0", Offset = "0x33A5D0", VA = "0x33A5D0")]
	public void PoolObject(SpawnableObject spawnableObject, Clusters cluster)
	{
	}

	[Token(Token = "0x6000965")]
	[Address(RVA = "0x33A6A8", Offset = "0x33A6A8", VA = "0x33A6A8")]
	private void AddPooledObject(SpawnableObject pooledObject, Clusters cluster)
	{
	}

	[Token(Token = "0x6000966")]
	[Address(RVA = "0x33A524", Offset = "0x33A524", VA = "0x33A524")]
	private void RemovePooledObject(SpawnableObject pooledObject, Clusters cluster)
	{
	}

	[Token(Token = "0x6000967")]
	[Address(RVA = "0x33A478", Offset = "0x33A478", VA = "0x33A478")]
	public void AddActiveObject(SpawnableObject activeObject, Clusters cluster)
	{
	}

	[Token(Token = "0x6000968")]
	[Address(RVA = "0x33A5FC", Offset = "0x33A5FC", VA = "0x33A5FC")]
	public void RemoveActiveObject(SpawnableObject activeObject, Clusters cluster)
	{
	}

	[Token(Token = "0x6000969")]
	[Address(RVA = "0x33A754", Offset = "0x33A754", VA = "0x33A754")]
	public List<SpawnableObject>[] GetAllActiveObjects()
	{
		return null;
	}

	[Token(Token = "0x600096A")]
	[Address(RVA = "0x33A890", Offset = "0x33A890", VA = "0x33A890")]
	public SpawnableObject[][] GetAllActiveObjectsToArray()
	{
		return null;
	}

	[Token(Token = "0x600096B")]
	[Address(RVA = "0x33A9E8", Offset = "0x33A9E8", VA = "0x33A9E8")]
	public List<SpawnableObject> GetActiveObjectCluster(Clusters cluster)
	{
		return null;
	}

	[Token(Token = "0x600096C")]
	[Address(RVA = "0x33AB9C", Offset = "0x33AB9C", VA = "0x33AB9C")]
	public SpawnableObject[] GetActiveObjectClusterToArray(Clusters cluster)
	{
		return null;
	}

	[Token(Token = "0x600096D")]
	[Address(RVA = "0x33AC40", Offset = "0x33AC40", VA = "0x33AC40")]
	public void AddDetectableObject(DetectableObject detectableObjects)
	{
	}

	[Token(Token = "0x600096E")]
	[Address(RVA = "0x33ACBC", Offset = "0x33ACBC", VA = "0x33ACBC")]
	public void RemoveDetectableObject(DetectableObject detectableObjects)
	{
	}

	[Token(Token = "0x600096F")]
	[Address(RVA = "0x33AD38", Offset = "0x33AD38", VA = "0x33AD38")]
	public DetectableObject[] GetAllDetectableObjects()
	{
		return null;
	}
}
[Token(Token = "0x2000180")]
public class PoolingManager : MonoBehaviour
{
	[Token(Token = "0x4000A47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pool _pool;

	[Token(Token = "0x4000A48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static uint CurrentID;

	[Token(Token = "0x4000A49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static List<uint> AssignedID;

	[Token(Token = "0x170000CF")]
	public static Pool Pool
	{
		[Token(Token = "0x6000971")]
		[Address(RVA = "0x329F14", Offset = "0x329F14", VA = "0x329F14")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000970")]
	[Address(RVA = "0x33ADAC", Offset = "0x33ADAC", VA = "0x33ADAC")]
	public PoolingManager()
	{
	}

	[Token(Token = "0x6000972")]
	[Address(RVA = "0x33ADB4", Offset = "0x33ADB4", VA = "0x33ADB4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000973")]
	[Address(RVA = "0x33AE50", Offset = "0x33AE50", VA = "0x33AE50")]
	public static void ClearActivePool()
	{
	}

	[Token(Token = "0x6000974")]
	[Address(RVA = "0x33B12C", Offset = "0x33B12C", VA = "0x33B12C")]
	public static void StopAllParticles()
	{
	}

	[Token(Token = "0x6000975")]
	[Address(RVA = "0x328C98", Offset = "0x328C98", VA = "0x328C98")]
	public static GameObject Create(GameObject obj, Vector3 position, Quaternion rotation, Clusters cluster, bool Loading = false)
	{
		return null;
	}

	[Token(Token = "0x6000976")]
	[Address(RVA = "0x3254E0", Offset = "0x3254E0", VA = "0x3254E0")]
	public static void Delete(GameObject obj, Clusters cluster)
	{
	}

	[Token(Token = "0x6000977")]
	[Address(RVA = "0x33AF54", Offset = "0x33AF54", VA = "0x33AF54")]
	public static void Delete(SpawnableObject obj, Clusters cluster)
	{
	}

	[Token(Token = "0x6000978")]
	[Address(RVA = "0x33B290", Offset = "0x33B290", VA = "0x33B290")]
	private static uint NewMeubleID()
	{
		return default(uint);
	}

	[Token(Token = "0x6000979")]
	[Address(RVA = "0x33B37C", Offset = "0x33B37C", VA = "0x33B37C")]
	private static bool CheckID()
	{
		return default(bool);
	}

	[Token(Token = "0x600097A")]
	[Address(RVA = "0x33B50C", Offset = "0x33B50C", VA = "0x33B50C")]
	public static void InitID()
	{
	}

	[Token(Token = "0x600097B")]
	[Address(RVA = "0x33B5B0", Offset = "0x33B5B0", VA = "0x33B5B0")]
	public static void AddID(uint id)
	{
	}
}
[Token(Token = "0x2000181")]
public class UISpawnerManager : MonoBehaviour
{
	[Token(Token = "0x4000A4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static UISpawnerManager Instance;

	[Token(Token = "0x600097C")]
	[Address(RVA = "0x4BD250", Offset = "0x4BD250", VA = "0x4BD250")]
	public UISpawnerManager()
	{
	}

	[Token(Token = "0x600097D")]
	[Address(RVA = "0x4BD258", Offset = "0x4BD258", VA = "0x4BD258")]
	public void Initialize()
	{
	}

	[Token(Token = "0x600097E")]
	[Address(RVA = "0x4BD3CC", Offset = "0x4BD3CC", VA = "0x4BD3CC")]
	public GameObject Spawn(GameObject element, Vector3 position, Quaternion rotation)
	{
		return null;
	}

	[Token(Token = "0x600097F")]
	[Address(RVA = "0x4BD41C", Offset = "0x4BD41C", VA = "0x4BD41C")]
	public GameObject Spawn(GameObject element, Vector3 position)
	{
		return null;
	}

	[Token(Token = "0x6000980")]
	[Address(RVA = "0x4BD4E8", Offset = "0x4BD4E8", VA = "0x4BD4E8")]
	public GameObject Spawn(GameObject element)
	{
		return null;
	}

	[Token(Token = "0x6000981")]
	[Address(RVA = "0x4BD5E4", Offset = "0x4BD5E4", VA = "0x4BD5E4")]
	public void Despawn(GameObject element)
	{
	}

	[Token(Token = "0x6000982")]
	[Address(RVA = "0x4BD5F4", Offset = "0x4BD5F4", VA = "0x4BD5F4")]
	public void WarmUI(int buyButtonsCount, int objWrapperCount, int repWrapperCount)
	{
	}
}
[Token(Token = "0x2000182")]
public class PrechargerVideos : MonoBehaviour
{
	[Token(Token = "0x4000A4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PrechargerVideos Instance;

	[Token(Token = "0x4000A4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Material VideoMaterial;

	[NonSerialized]
	[Token(Token = "0x4000A4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Transform Videos;

	[Token(Token = "0x6000983")]
	[Address(RVA = "0x33CBF4", Offset = "0x33CBF4", VA = "0x33CBF4")]
	public PrechargerVideos()
	{
	}

	[Token(Token = "0x6000984")]
	[Address(RVA = "0x33CBFC", Offset = "0x33CBFC", VA = "0x33CBFC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000985")]
	[Address(RVA = "0x33CD18", Offset = "0x33CD18", VA = "0x33CD18")]
	private void VideoRolls()
	{
	}

	[Token(Token = "0x6000986")]
	[Address(RVA = "0x33CDAC", Offset = "0x33CDAC", VA = "0x33CDAC")]
	private void VideoRoll(string name)
	{
	}

	[Token(Token = "0x6000987")]
	[Address(RVA = "0x33CDD8", Offset = "0x33CDD8", VA = "0x33CDD8")]
	private Video VideoAdd(string name)
	{
		return null;
	}
}
namespace Trebuchet
{
	[Token(Token = "0x2000183")]
	public class NVRCalibrator : Calibrator
	{
		[Token(Token = "0x170000D0")]
		protected override Transform ChildToAlign
		{
			[Token(Token = "0x6000989")]
			[Address(RVA = "0x2AD1E8", Offset = "0x2AD1E8", VA = "0x2AD1E8", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000988")]
		[Address(RVA = "0x2AD1E0", Offset = "0x2AD1E0", VA = "0x2AD1E0")]
		public NVRCalibrator()
		{
		}
	}
}
[Token(Token = "0x2000184")]
public class OffreDemandeTest : MonoBehaviour
{
	[Token(Token = "0x4000A4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int Vr;

	[Token(Token = "0x4000A4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float T;

	[Token(Token = "0x4000A50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float X;

	[Token(Token = "0x4000A51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float dT;

	[Token(Token = "0x4000A52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float Prev;

	[Token(Token = "0x4000A53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float Actual;

	[Token(Token = "0x4000A54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public GameObject obj;

	[Token(Token = "0x4000A55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float Xpos;

	[Token(Token = "0x600098A")]
	[Address(RVA = "0x32DCC8", Offset = "0x32DCC8", VA = "0x32DCC8")]
	public OffreDemandeTest()
	{
	}

	[Token(Token = "0x600098B")]
	[Address(RVA = "0x32DCDC", Offset = "0x32DCDC", VA = "0x32DCDC")]
	private void Start()
	{
	}

	[Token(Token = "0x600098C")]
	[Address(RVA = "0x32DD34", Offset = "0x32DD34", VA = "0x32DD34")]
	private void Update()
	{
	}

	[Token(Token = "0x600098D")]
	[Address(RVA = "0x32DDCC", Offset = "0x32DDCC", VA = "0x32DDCC")]
	private void updateValue()
	{
	}
}
[Token(Token = "0x2000185")]
public class ReturnTesting : MonoBehaviour
{
	[Token(Token = "0x4000A56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string pub;

	[Token(Token = "0x4000A57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string pubDO;

	[Token(Token = "0x600098E")]
	[Address(RVA = "0x3465DC", Offset = "0x3465DC", VA = "0x3465DC")]
	public ReturnTesting()
	{
	}

	[Token(Token = "0x600098F")]
	[Address(RVA = "0x3465E4", Offset = "0x3465E4", VA = "0x3465E4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000990")]
	[Address(RVA = "0x346650", Offset = "0x346650", VA = "0x346650")]
	private void Update()
	{
	}

	[Token(Token = "0x6000991")]
	[Address(RVA = "0x346700", Offset = "0x346700", VA = "0x346700")]
	public void DoDoThing()
	{
	}
}
[Token(Token = "0x2000186")]
public class StaticReturn : MonoBehaviour
{
	[Token(Token = "0x4000A58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int count;

	[Token(Token = "0x4000A59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static ReturnTesting aa;

	[Token(Token = "0x6000992")]
	[Address(RVA = "0x2A0810", Offset = "0x2A0810", VA = "0x2A0810")]
	public StaticReturn()
	{
	}

	[Token(Token = "0x6000993")]
	[Address(RVA = "0x2A0818", Offset = "0x2A0818", VA = "0x2A0818")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000994")]
	[Address(RVA = "0x2A0894", Offset = "0x2A0894", VA = "0x2A0894")]
	public static string DoThing(string s)
	{
		return null;
	}
}
[Token(Token = "0x2000187")]
public class GuidanceSpawner : MonoBehaviour
{
	[Token(Token = "0x2000343")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16B1D4", Offset = "0x16B1D4")]
	private sealed class <helperLoop>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4001325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal GuidanceSpawner $this;

		[Token(Token = "0x4001326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x4001327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x4001328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x170002E1")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60018B7")]
			[Address(RVA = "0x223838", Offset = "0x223838", VA = "0x223838", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60018B8")]
			[Address(RVA = "0x223840", Offset = "0x223840", VA = "0x223840", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018B5")]
		[Address(RVA = "0x223704", Offset = "0x223704", VA = "0x223704")]
		[DebuggerHidden]
		public <helperLoop>c__Iterator0()
		{
		}

		[Token(Token = "0x60018B6")]
		[Address(RVA = "0x22370C", Offset = "0x22370C", VA = "0x22370C", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60018B9")]
		[Address(RVA = "0x223848", Offset = "0x223848", VA = "0x223848", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60018BA")]
		[Address(RVA = "0x22385C", Offset = "0x22385C", VA = "0x22385C", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4000A5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GuidanceSpawner Instance;

	[Token(Token = "0x4000A5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float helperDelay;

	[Token(Token = "0x4000A5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject faeryBobby;

	[Token(Token = "0x4000A5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public GameObject arrowFeedback;

	[Token(Token = "0x4000A5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject _targetFaery;

	[Token(Token = "0x4000A5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool _jobdone;

	[Token(Token = "0x4000A60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Coroutine spawn;

	[Token(Token = "0x170000D1")]
	public GameObject targetFaery
	{
		[Token(Token = "0x6000996")]
		[Address(RVA = "0x223294", Offset = "0x223294", VA = "0x223294")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000997")]
		[Address(RVA = "0x20EE1C", Offset = "0x20EE1C", VA = "0x20EE1C")]
		set
		{
		}
	}

	[Token(Token = "0x6000995")]
	[Address(RVA = "0x223280", Offset = "0x223280", VA = "0x223280")]
	public GuidanceSpawner()
	{
	}

	[Token(Token = "0x6000998")]
	[Address(RVA = "0x22329C", Offset = "0x22329C", VA = "0x22329C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000999")]
	[Address(RVA = "0x223300", Offset = "0x223300", VA = "0x223300")]
	public BillboardUI SpawnArrowHelper(Transform pos)
	{
		return null;
	}

	[Token(Token = "0x600099A")]
	[Address(RVA = "0x223424", Offset = "0x223424", VA = "0x223424")]
	public void spawnFaeryHelper(GameObject Target)
	{
	}

	[Token(Token = "0x600099B")]
	[Address(RVA = "0x223650", Offset = "0x223650", VA = "0x223650")]
	public void startFaeryHelper()
	{
	}

	[Token(Token = "0x600099C")]
	[Address(RVA = "0x20EFF8", Offset = "0x20EFF8", VA = "0x20EFF8")]
	public void stopFaeryHelper()
	{
	}

	[Token(Token = "0x600099D")]
	[Address(RVA = "0x223684", Offset = "0x223684", VA = "0x223684")]
	[DebuggerHidden]
	private IEnumerator helperLoop()
	{
		return null;
	}
}
[Token(Token = "0x2000188")]
public class MoneyGraph : MonoBehaviour
{
	[Token(Token = "0x4000A61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private TextMeshProUGUI[] text;

	[Token(Token = "0x4000A62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Ressource res;

	[Token(Token = "0x4000A63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int value;

	[Token(Token = "0x4000A64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject particle;

	[Token(Token = "0x600099E")]
	[Address(RVA = "0x24F730", Offset = "0x24F730", VA = "0x24F730")]
	public MoneyGraph()
	{
	}

	[Token(Token = "0x600099F")]
	[Address(RVA = "0x24F738", Offset = "0x24F738", VA = "0x24F738")]
	private void Start()
	{
	}

	[Token(Token = "0x60009A0")]
	[Address(RVA = "0x24F7BC", Offset = "0x24F7BC", VA = "0x24F7BC")]
	private void Update()
	{
	}

	[Token(Token = "0x60009A1")]
	[Address(RVA = "0x24F968", Offset = "0x24F968", VA = "0x24F968")]
	private void OnCollisionEnter(Collision other)
	{
	}
}
[Token(Token = "0x2000189")]
public enum ObjectType
{
	[Token(Token = "0x4000A66")]
	Object,
	[Token(Token = "0x4000A67")]
	Craftable,
	[Token(Token = "0x4000A68")]
	Meuble,
	[Token(Token = "0x4000A69")]
	Roll,
	[Token(Token = "0x4000A6A")]
	Other
}
[Token(Token = "0x200018A")]
public class Ressource : SpawnableObject
{
	[Token(Token = "0x4000A6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string Type;

	[Token(Token = "0x4000A6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[HideInInspector]
	public int valueCigarette;

	[Token(Token = "0x4000A6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public int boxCapacity;

	[Token(Token = "0x4000A6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public int capacity;

	[Token(Token = "0x4000A6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public bool contreband;

	[Token(Token = "0x4000A70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[HideInInspector]
	public uint seed;

	[Token(Token = "0x4000A71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public bool tutorialResource;

	[Token(Token = "0x4000A72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	[HideInInspector]
	public bool seedOverrided;

	[Token(Token = "0x4000A73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private ObjectType objType;

	[Token(Token = "0x4000A74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private NVRInteractableItem nvri;

	[Token(Token = "0x4000A75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private MainCraftScript mcs;

	[Token(Token = "0x4000A76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Meuble mbl;

	[Token(Token = "0x4000A77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private TutorialManager tutoScript;

	[Token(Token = "0x4000A78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float distance;

	[Token(Token = "0x4000A79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float distanceTutoLand;

	[Token(Token = "0x4000A7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float timer;

	[Token(Token = "0x4000A7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool capacityOverrided;

	[Token(Token = "0x170000D2")]
	private TabReader _tab
	{
		[Token(Token = "0x60009A3")]
		[Address(RVA = "0x344388", Offset = "0x344388", VA = "0x344388")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60009A2")]
	[Address(RVA = "0x344380", Offset = "0x344380", VA = "0x344380")]
	public Ressource()
	{
	}

	[Token(Token = "0x60009A4")]
	[Address(RVA = "0x3443EC", Offset = "0x3443EC", VA = "0x3443EC", Slot = "5")]
	public override void ShutDown()
	{
	}

	[Token(Token = "0x60009A5")]
	[Address(RVA = "0x34442C", Offset = "0x34442C", VA = "0x34442C", Slot = "4")]
	public override void Reset()
	{
	}

	[Token(Token = "0x60009A6")]
	[Address(RVA = "0x3448F4", Offset = "0x3448F4", VA = "0x3448F4")]
	public void OverrideCapacity(int c)
	{
	}

	[Token(Token = "0x60009A7")]
	[Address(RVA = "0x344904", Offset = "0x344904", VA = "0x344904", Slot = "6")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x60009A8")]
	[Address(RVA = "0x344F74", Offset = "0x344F74", VA = "0x344F74", Slot = "7")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x60009A9")]
	[Address(RVA = "0x344DA0", Offset = "0x344DA0", VA = "0x344DA0")]
	private void findObjType()
	{
	}

	[Token(Token = "0x60009AA")]
	[Address(RVA = "0x345154", Offset = "0x345154", VA = "0x345154")]
	public void ChangeCapacity(int i)
	{
	}

	[Token(Token = "0x60009AB")]
	[Address(RVA = "0x345198", Offset = "0x345198", VA = "0x345198")]
	public void ChangeType(string newType)
	{
	}
}
[Token(Token = "0x200018B")]
public class SkillCardNumbers : MonoBehaviour
{
	[Token(Token = "0x4000A7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private TextMeshProUGUI[] text;

	[Token(Token = "0x4000A7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Ressource res;

	[Token(Token = "0x4000A7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int value;

	[Token(Token = "0x4000A7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject particle;

	[Token(Token = "0x60009AC")]
	[Address(RVA = "0x29DF40", Offset = "0x29DF40", VA = "0x29DF40")]
	public SkillCardNumbers()
	{
	}

	[Token(Token = "0x60009AD")]
	[Address(RVA = "0x29DF48", Offset = "0x29DF48", VA = "0x29DF48")]
	private void Start()
	{
	}

	[Token(Token = "0x60009AE")]
	[Address(RVA = "0x29DFCC", Offset = "0x29DFCC", VA = "0x29DFCC")]
	private void Update()
	{
	}

	[Token(Token = "0x60009AF")]
	[Address(RVA = "0x29E08C", Offset = "0x29E08C", VA = "0x29E08C")]
	private void OnCollisionEnter(Collision other)
	{
	}
}
[Serializable]
[Token(Token = "0x200018C")]
public class StarterPack
{
	[Token(Token = "0x4000A80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public string Name;

	[Token(Token = "0x4000A81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject[] objs;

	[Token(Token = "0x60009B0")]
	[Address(RVA = "0x29EF14", Offset = "0x29EF14", VA = "0x29EF14")]
	public StarterPack()
	{
	}
}
[Token(Token = "0x200018D")]
public class TabReader : MonoBehaviour
{
	[Token(Token = "0x4000A82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static TabReader Instance;

	[Token(Token = "0x4000A83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public TextAsset[] OldRawTab;

	[Token(Token = "0x4000A84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public TextAsset[] RawTab;

	[Token(Token = "0x4000A85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[HideInInspector]
	public string[][] ressources;

	[Token(Token = "0x4000A86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public int prisonID;

	[Token(Token = "0x4000A87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public bool oldTabUsed;

	[Token(Token = "0x4000A88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public StarterPack[] StarterPacks;

	[Token(Token = "0x4000A89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public StarterPack[] SandboxStarterPack;

	[Token(Token = "0x60009B1")]
	[Address(RVA = "0x2A392C", Offset = "0x2A392C", VA = "0x2A392C")]
	public TabReader()
	{
	}

	[Token(Token = "0x60009B2")]
	[Address(RVA = "0x2A3934", Offset = "0x2A3934", VA = "0x2A3934")]
	public void LoadTab(int TabID, bool old = false)
	{
	}

	[Token(Token = "0x60009B3")]
	[Address(RVA = "0x2A3A88", Offset = "0x2A3A88", VA = "0x2A3A88")]
	public string[][] FakeLoadRessource(int TabID, bool old = false)
	{
		return null;
	}

	[Token(Token = "0x60009B4")]
	[Address(RVA = "0x2A3D7C", Offset = "0x2A3D7C", VA = "0x2A3D7C")]
	public float GetProperty(string s, int column)
	{
		return default(float);
	}

	[Token(Token = "0x60009B5")]
	[Address(RVA = "0x2A3F74", Offset = "0x2A3F74", VA = "0x2A3F74")]
	public string GetString(string s, int column)
	{
		return null;
	}
}
[Token(Token = "0x200018E")]
public class RuleBookScript : MonoBehaviour
{
	[Token(Token = "0x4000A8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Material[] matPage1;

	[Token(Token = "0x4000A8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Material[] matPage2;

	[Token(Token = "0x4000A8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public MeshRenderer page1;

	[Token(Token = "0x4000A8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshRenderer page2;

	[Token(Token = "0x4000A8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float[] paternValue;

	[Token(Token = "0x4000A8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float precision;

	[Token(Token = "0x4000A90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int _actualPage;

	[Token(Token = "0x4000A91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int _actualPaternGoal;

	[Token(Token = "0x4000A92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float timer;

	[Token(Token = "0x4000A93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool handOver;

	[Token(Token = "0x4000A94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private NVRHand hand;

	[Token(Token = "0x60009B6")]
	[Address(RVA = "0x347060", Offset = "0x347060", VA = "0x347060")]
	public RuleBookScript()
	{
	}

	[Token(Token = "0x60009B7")]
	[Address(RVA = "0x347068", Offset = "0x347068", VA = "0x347068")]
	private void Start()
	{
	}

	[Token(Token = "0x60009B8")]
	[Address(RVA = "0x347208", Offset = "0x347208", VA = "0x347208")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60009B9")]
	[Address(RVA = "0x347318", Offset = "0x347318", VA = "0x347318")]
	private void WaitForChangePage()
	{
	}

	[Token(Token = "0x60009BA")]
	[Address(RVA = "0x3475A4", Offset = "0x3475A4", VA = "0x3475A4")]
	private void ChangePage(int i)
	{
	}

	[Token(Token = "0x60009BB")]
	[Address(RVA = "0x347820", Offset = "0x347820", VA = "0x347820")]
	private void OnTriggerStay(Collider col)
	{
	}
}
[Token(Token = "0x200018F")]
public class BitPacker<First, Second, Output>
{
	[StructLayout(2)]
	[Token(Token = "0x2000190")]
	private struct BitUnion
	{
		[Token(Token = "0x4000A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public First first;

		[Token(Token = "0x4000A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Second second;

		[Token(Token = "0x4000A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Output output;

		[Token(Token = "0x4000A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint value;

		[Token(Token = "0x60009BF")]
		public static uint From(First first)
		{
			return default(uint);
		}

		[Token(Token = "0x60009C0")]
		public static uint From(Second second)
		{
			return default(uint);
		}

		[Token(Token = "0x60009C1")]
		public static uint From(Output output)
		{
			return default(uint);
		}

		[Token(Token = "0x60009C2")]
		public static Output ToO(uint value)
		{
			return (Output)null;
		}

		[Token(Token = "0x60009C3")]
		public static First ToF(uint value)
		{
			return (First)null;
		}

		[Token(Token = "0x60009C4")]
		public static Second ToS(uint value)
		{
			return (Second)null;
		}
	}

	[Token(Token = "0x4000A95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int bitForFirst;

	[Token(Token = "0x4000A96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private uint mask;

	[Token(Token = "0x60009BC")]
	public BitPacker(int bitForFirst)
	{
	}

	[Token(Token = "0x60009BD")]
	public Output Pack(First first, Second second)
	{
		return (Output)null;
	}

	[Token(Token = "0x60009BE")]
	public void Unpack(Output pack, out First first, out Second second)
	{
	}
}
[Serializable]
[Token(Token = "0x2000191")]
public class DataToLoad
{
	[Token(Token = "0x4000A9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public string version;

	[Token(Token = "0x4000A9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool newSave;

	[Token(Token = "0x4000A9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string SaveName;

	[Token(Token = "0x4000A9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public string Date;

	[Token(Token = "0x4000A9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string saveID;

	[Token(Token = "0x4000AA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public string[] Meubles;

	[Token(Token = "0x4000AA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string[] Craft;

	[Token(Token = "0x4000AA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public string[] Containers;

	[Token(Token = "0x4000AA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string GameMode;

	[Token(Token = "0x4000AA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public string PrisonID;

	[Token(Token = "0x4000AA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int daysPassed;

	[Token(Token = "0x4000AA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int dayMax;

	[Token(Token = "0x4000AA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int laDate;

	[Token(Token = "0x4000AA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public lesJours jour;

	[Token(Token = "0x4000AA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public lesMois mois;

	[Token(Token = "0x4000AAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int leMoisCommenceUn;

	[Token(Token = "0x4000AAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int secondesJouées;

	[Token(Token = "0x4000AAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public List<string[]> ressourcesOffreDemande;

	[Token(Token = "0x4000AAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int repLevel;

	[Token(Token = "0x4000AAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int actualTier;

	[Token(Token = "0x4000AAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int[] actualJobsID;

	[Token(Token = "0x4000AB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int[] jobsID;

	[Token(Token = "0x4000AB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool traderPassed;

	[Token(Token = "0x4000AB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	public bool FirstDay;

	[Token(Token = "0x4000AB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public StarterPack StarterPack;

	[Token(Token = "0x4000AB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public StatistiqueData Statistique;

	[Token(Token = "0x4000AB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public DataToLoadEndPrison DataForEndPrison;

	[Token(Token = "0x60009C5")]
	[Address(RVA = "0x288C0C", Offset = "0x288C0C", VA = "0x288C0C")]
	public DataToLoad()
	{
	}
}
[Token(Token = "0x2000192")]
public class DataToLoadEndPrison
{
	[Token(Token = "0x4000AB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public int prevPrisonID;

	[Token(Token = "0x4000AB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int nextPrisonID;

	[Token(Token = "0x4000AB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int[] values;

	[Token(Token = "0x4000AB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int[] treshold;

	[Token(Token = "0x60009C6")]
	[Address(RVA = "0x273FD8", Offset = "0x273FD8", VA = "0x273FD8")]
	public DataToLoadEndPrison()
	{
	}
}
[Token(Token = "0x2000193")]
public class LoadingDataCourier : MonoBehaviour
{
	[Token(Token = "0x2000344")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16B304", Offset = "0x16B304")]
	private sealed class <ReactivePhysic>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4001329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal Rigidbody[] $locvar0;

		[Token(Token = "0x400132A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal int $locvar1;

		[Token(Token = "0x400132B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal LoadingDataCourier $this;

		[Token(Token = "0x400132C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal object $current;

		[Token(Token = "0x400132D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal bool $disposing;

		[Token(Token = "0x400132E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal int $PC;

		[Token(Token = "0x170002E3")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60018BD")]
			[Address(RVA = "0x23AE4C", Offset = "0x23AE4C", VA = "0x23AE4C", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60018BE")]
			[Address(RVA = "0x23AE54", Offset = "0x23AE54", VA = "0x23AE54", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018BB")]
		[Address(RVA = "0x23A204", Offset = "0x23A204", VA = "0x23A204")]
		[DebuggerHidden]
		public <ReactivePhysic>c__Iterator0()
		{
		}

		[Token(Token = "0x60018BC")]
		[Address(RVA = "0x23AC80", Offset = "0x23AC80", VA = "0x23AC80", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60018BF")]
		[Address(RVA = "0x23AE5C", Offset = "0x23AE5C", VA = "0x23AE5C", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60018C0")]
		[Address(RVA = "0x23AE70", Offset = "0x23AE70", VA = "0x23AE70", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4000ABA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public DataToLoad data;

	[Token(Token = "0x4000ABB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool oldLevel;

	[Token(Token = "0x4000ABC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private List<Meuble> spawnedMeubles;

	[Token(Token = "0x4000ABD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Rigidbody[] CraftRigidbody;

	[Token(Token = "0x4000ABE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16B2D4", Offset = "0x16B2D4")]
	private static Func<int, byte> <>f__am$cache0;

	[Token(Token = "0x60009C7")]
	[Address(RVA = "0x237AB0", Offset = "0x237AB0", VA = "0x237AB0")]
	public LoadingDataCourier()
	{
	}

	[Token(Token = "0x60009C8")]
	[Address(RVA = "0x237AB8", Offset = "0x237AB8", VA = "0x237AB8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009C9")]
	[Address(RVA = "0x237B80", Offset = "0x237B80", VA = "0x237B80")]
	public void LoadObjects()
	{
	}

	[Token(Token = "0x60009CA")]
	[Address(RVA = "0x23A184", Offset = "0x23A184", VA = "0x23A184")]
	[DebuggerHidden]
	private IEnumerator ReactivePhysic()
	{
		return null;
	}

	[Token(Token = "0x60009CB")]
	[Address(RVA = "0x23A20C", Offset = "0x23A20C", VA = "0x23A20C")]
	public void LoadGameSystem()
	{
	}

	[Token(Token = "0x60009CC")]
	[Address(RVA = "0x23A460", Offset = "0x23A460", VA = "0x23A460")]
	public void LoadProgression()
	{
	}

	[Token(Token = "0x60009CD")]
	[Address(RVA = "0x23AC14", Offset = "0x23AC14", VA = "0x23AC14")]
	public bool LoadEndPrison(out int[] values, out int[] treshold, out int nextPrisonId)
	{
		return default(bool);
	}

	[Token(Token = "0x60009CE")]
	[Address(RVA = "0x23AC78", Offset = "0x23AC78", VA = "0x23AC78")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16B2F4", Offset = "0x16B2F4")]
	private static byte <LoadProgression>m__0(int i)
	{
		return default(byte);
	}
}
[Token(Token = "0x2000194")]
public abstract class PreloadingManagerCommon : MonoBehaviour
{
	[Token(Token = "0x2000345")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16B384", Offset = "0x16B384")]
	private sealed class <InstantiatePhysicalFiles>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x400132F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal BinaryFormatter <formatter>__0;

		[Token(Token = "0x4001330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal Vector3 <pos>__0;

		[Token(Token = "0x4001331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal string[] $locvar0;

		[Token(Token = "0x4001332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal int $locvar1;

		[Token(Token = "0x4001333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal string <file>__1;

		[Token(Token = "0x4001334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal PreloadingManagerCommon $this;

		[Token(Token = "0x4001335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal object $current;

		[Token(Token = "0x4001336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		internal bool $disposing;

		[Token(Token = "0x4001337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal int $PC;

		[Token(Token = "0x170002E5")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60018C3")]
			[Address(RVA = "0x34335C", Offset = "0x34335C", VA = "0x34335C", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60018C4")]
			[Address(RVA = "0x343364", Offset = "0x343364", VA = "0x343364", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018C1")]
		[Address(RVA = "0x33D84C", Offset = "0x33D84C", VA = "0x33D84C")]
		[DebuggerHidden]
		public <InstantiatePhysicalFiles>c__Iterator0()
		{
		}

		[Token(Token = "0x60018C2")]
		[Address(RVA = "0x342790", Offset = "0x342790", VA = "0x342790", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60018C5")]
		[Address(RVA = "0x34336C", Offset = "0x34336C", VA = "0x34336C", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60018C6")]
		[Address(RVA = "0x343380", Offset = "0x343380", VA = "0x343380", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000346")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16B3E4", Offset = "0x16B3E4")]
	private sealed class <PreLoading>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4001338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal SaveDataV2 loadingData;

		[Token(Token = "0x4001339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal PreloadingManagerCommon $this;

		[Token(Token = "0x400133A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal object $current;

		[Token(Token = "0x400133B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal bool $disposing;

		[Token(Token = "0x400133C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal int $PC;

		[Token(Token = "0x170002E7")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60018C9")]
			[Address(RVA = "0x343874", Offset = "0x343874", VA = "0x343874", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60018CA")]
			[Address(RVA = "0x34387C", Offset = "0x34387C", VA = "0x34387C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018C7")]
		[Address(RVA = "0x33E5F8", Offset = "0x33E5F8", VA = "0x33E5F8")]
		[DebuggerHidden]
		public <PreLoading>c__Iterator1()
		{
		}

		[Token(Token = "0x60018C8")]
		[Address(RVA = "0x343404", Offset = "0x343404", VA = "0x343404", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60018CB")]
		[Address(RVA = "0x343884", Offset = "0x343884", VA = "0x343884", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60018CC")]
		[Address(RVA = "0x343898", Offset = "0x343898", VA = "0x343898", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4000ABF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private DataToLoad dataPackage;

	[Token(Token = "0x4000AC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PreloadingManagerCommon Instance;

	[Token(Token = "0x4000AC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private JobReader _jobReader;

	[Token(Token = "0x4000AC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public GameObject physicalFilePrefab;

	[Token(Token = "0x4000AC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject basicDesk;

	[Token(Token = "0x4000AC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public TextAsset GlobalScoreGoal;

	[Token(Token = "0x4000AC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string[] saveFiles;

	[Token(Token = "0x4000AC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public List<GameObject> physicalFiles;

	[Token(Token = "0x4000AC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool OnlyPreloadGlobalScore;

	[Token(Token = "0x170000D3")]
	public abstract string ConfigDirectoryPath
	{
		[Token(Token = "0x60009D2")]
		get;
	}

	[Token(Token = "0x170000D4")]
	public abstract string SavesDirectoryPath
	{
		[Token(Token = "0x60009D3")]
		get;
	}

	[Token(Token = "0x60009CF")]
	[Address(RVA = "0x33D12C", Offset = "0x33D12C", VA = "0x33D12C")]
	protected PreloadingManagerCommon()
	{
	}

	[Token(Token = "0x60009D0")]
	[Address(RVA = "0x33D2B8", Offset = "0x33D2B8", VA = "0x33D2B8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009D1")]
	[Address(RVA = "0x33D31C", Offset = "0x33D31C", VA = "0x33D31C")]
	public void Start()
	{
	}

	[Token(Token = "0x60009D4")]
	public abstract Stream GetReadStream(string path);

	[Token(Token = "0x60009D5")]
	public abstract Stream GetWriteStream(string path);

	[Token(Token = "0x60009D6")]
	public abstract string[] GetDirectoryFiles(string path);

	[Token(Token = "0x60009D7")]
	public abstract bool Exists(string path);

	[Token(Token = "0x60009D8")]
	public abstract void Delete(string path);

	[Token(Token = "0x60009D9")]
	[Address(RVA = "0x33D460", Offset = "0x33D460", VA = "0x33D460")]
	public GlobalScoreData LoadScoreData()
	{
		return null;
	}

	[Token(Token = "0x60009DA")]
	[Address(RVA = "0x33D3E0", Offset = "0x33D3E0", VA = "0x33D3E0")]
	[DebuggerHidden]
	public IEnumerator InstantiatePhysicalFiles()
	{
		return null;
	}

	[Token(Token = "0x60009DB")]
	[Address(RVA = "0x33D854", Offset = "0x33D854", VA = "0x33D854")]
	public static int GetPrisonId(string prisonIdString)
	{
		return default(int);
	}

	[Token(Token = "0x60009DC")]
	[Address(RVA = "0x33D860", Offset = "0x33D860", VA = "0x33D860")]
	public static bool IsSandboxFromGameMode(string gamemode)
	{
		return default(bool);
	}

	[Token(Token = "0x60009DD")]
	[Address(RVA = "0x33D9B0", Offset = "0x33D9B0", VA = "0x33D9B0")]
	private SaveDataV2 UpgradeSaveData(SaveData sd)
	{
		return null;
	}

	[Token(Token = "0x60009DE")]
	[Address(RVA = "0x33DB9C", Offset = "0x33DB9C", VA = "0x33DB9C")]
	public void FetchSaveFiles()
	{
	}

	[Token(Token = "0x60009DF")]
	[Address(RVA = "0x336490", Offset = "0x336490", VA = "0x336490")]
	public bool LoadFile(int saveID)
	{
		return default(bool);
	}

	[Token(Token = "0x60009E0")]
	[Address(RVA = "0x33E560", Offset = "0x33E560", VA = "0x33E560")]
	[DebuggerHidden]
	public IEnumerator PreLoading(SaveDataV2 loadingData)
	{
		return null;
	}

	[Token(Token = "0x60009E1")]
	[Address(RVA = "0x33E600", Offset = "0x33E600", VA = "0x33E600")]
	public void PreloadGameModeData(GameModeData loadData)
	{
	}

	[Token(Token = "0x60009E2")]
	[Address(RVA = "0x33E7A8", Offset = "0x33E7A8", VA = "0x33E7A8")]
	public void PreloadGameSystemData(GameSystemData loadData)
	{
	}

	[Token(Token = "0x60009E3")]
	[Address(RVA = "0x33EB8C", Offset = "0x33EB8C", VA = "0x33EB8C")]
	public void PreloadProgressionData(ProgressionData loadData)
	{
	}

	[Token(Token = "0x60009E4")]
	[Address(RVA = "0x33EDF4", Offset = "0x33EDF4", VA = "0x33EDF4")]
	public void PreloadObjects(List<ObjectData> objList, List<ContainerData> contList)
	{
	}

	[Token(Token = "0x60009E5")]
	[Address(RVA = "0x3409B8", Offset = "0x3409B8", VA = "0x3409B8")]
	public void PreloadMeubles(List<MeubleData> meubleList)
	{
	}

	[Token(Token = "0x60009E6")]
	[Address(RVA = "0x342254", Offset = "0x342254", VA = "0x342254")]
	public void DeleteSaveFile(int saveID)
	{
	}

	[Token(Token = "0x60009E7")]
	[Address(RVA = "0x342544", Offset = "0x342544", VA = "0x342544")]
	public bool SaveExists(int id)
	{
		return default(bool);
	}

	[Token(Token = "0x60009E8")]
	[Address(RVA = "0x342760", Offset = "0x342760", VA = "0x342760")]
	public int ReturnUnusedSaveID()
	{
		return default(int);
	}
}
[Serializable]
[Token(Token = "0x2000195")]
public class SaveData
{
	[Token(Token = "0x4000AC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public MetaData metaData;

	[Token(Token = "0x4000AC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameModeData gameModeData;

	[Token(Token = "0x4000ACA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameSystemData gameSystemData;

	[Token(Token = "0x4000ACB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public ProgressionData progressionData;

	[Token(Token = "0x4000ACC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<ObjectData> ObjectsToSave;

	[Token(Token = "0x4000ACD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public List<MeubleData> MeublesToSave;

	[Token(Token = "0x4000ACE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<ContainerData> ContainersToSave;

	[Token(Token = "0x60009E9")]
	[Address(RVA = "0x291970", Offset = "0x291970", VA = "0x291970")]
	public SaveData()
	{
	}
}
[Serializable]
[Token(Token = "0x2000196")]
public class SaveDataV2
{
	[Token(Token = "0x4000ACF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public string version;

	[Token(Token = "0x4000AD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public MetaData metaData;

	[Token(Token = "0x4000AD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameModeData gameModeData;

	[Token(Token = "0x4000AD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public GameSystemData gameSystemData;

	[Token(Token = "0x4000AD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ProgressionData progressionData;

	[Token(Token = "0x4000AD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public List<ObjectData> ObjectsToSave;

	[Token(Token = "0x4000AD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<MeubleData> MeublesToSave;

	[Token(Token = "0x4000AD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public List<ContainerData> ContainersToSave;

	[Token(Token = "0x60009EA")]
	[Address(RVA = "0x291978", Offset = "0x291978", VA = "0x291978")]
	public SaveDataV2()
	{
	}
}
[Serializable]
[Token(Token = "0x2000197")]
public class MetaData
{
	[Token(Token = "0x4000AD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public int saveID;

	[Token(Token = "0x4000AD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string name;

	[Token(Token = "0x4000AD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public DateTime saveDateTime;

	[Token(Token = "0x60009EB")]
	[Address(RVA = "0x24BEDC", Offset = "0x24BEDC", VA = "0x24BEDC")]
	public MetaData()
	{
	}
}
[Serializable]
[Token(Token = "0x2000198")]
public class GameModeData
{
	[Token(Token = "0x4000ADA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public string gameMode;

	[Token(Token = "0x4000ADB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string prisonID;

	[Token(Token = "0x60009EC")]
	[Address(RVA = "0x210D88", Offset = "0x210D88", VA = "0x210D88")]
	public GameModeData()
	{
	}
}
[Serializable]
[Token(Token = "0x2000199")]
public class GameSystemData
{
	[Token(Token = "0x4000ADC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public int daysPassed;

	[Token(Token = "0x4000ADD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly BitPacker<int, int, int> daysPassed_stat1_Packer;

	[Token(Token = "0x4000ADE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int laDate;

	[Token(Token = "0x4000ADF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static readonly BitPacker<int, int, int> laDate_stat2_Packer;

	[Token(Token = "0x4000AE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public lesJours jour;

	[Token(Token = "0x4000AE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly BitPacker<lesJours, int, lesJours> jour_stat3_Packer;

	[Token(Token = "0x4000AE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public lesMois mois;

	[Token(Token = "0x4000AE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static readonly BitPacker<lesMois, int, lesMois> mois_dayMax_Packer;

	[Token(Token = "0x4000AE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int leMoisCommenceUn;

	[Token(Token = "0x4000AE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly BitPacker<int, int, int> leMoisCommenceUn_secondesJouées_Packer;

	[Token(Token = "0x4000AE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool traderPassed;

	[Token(Token = "0x4000AE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool FirstLoad;

	[Token(Token = "0x170000D5")]
	public int DaysPassed
	{
		[Token(Token = "0x60009EE")]
		[Address(RVA = "0x2118A0", Offset = "0x2118A0", VA = "0x2118A0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60009ED")]
	[Address(RVA = "0x211898", Offset = "0x211898", VA = "0x211898")]
	public GameSystemData()
	{
	}
}
[Serializable]
[Token(Token = "0x200019A")]
public class ProgressionData
{
	[Token(Token = "0x4000AE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public string[][] ressourcesOffreDemande;

	[Token(Token = "0x4000AE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int repLevel;

	[Token(Token = "0x4000AEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly BitPacker<int, int, int> repLevel_stat4_Packer;

	[Token(Token = "0x4000AEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int actualTier;

	[Token(Token = "0x4000AEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int[] actualJobsID;

	[Token(Token = "0x4000AED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int[] jobsID;

	[Token(Token = "0x60009F0")]
	[Address(RVA = "0x343A18", Offset = "0x343A18", VA = "0x343A18")]
	public ProgressionData()
	{
	}
}
[Serializable]
[Token(Token = "0x200019B")]
public class ObjectData
{
	[Token(Token = "0x4000AEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public string spawnableID;

	[Token(Token = "0x4000AEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string craftType;

	[Token(Token = "0x4000AF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float posX;

	[Token(Token = "0x4000AF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float posY;

	[Token(Token = "0x4000AF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float posZ;

	[Token(Token = "0x4000AF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float rotX;

	[Token(Token = "0x4000AF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float rotY;

	[Token(Token = "0x4000AF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float rotZ;

	[Token(Token = "0x4000AF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string meubleID;

	[Token(Token = "0x4000AF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int capacity;

	[Token(Token = "0x4000AF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int DayCreated;

	[Token(Token = "0x60009F2")]
	[Address(RVA = "0x32C0F8", Offset = "0x32C0F8", VA = "0x32C0F8")]
	public ObjectData()
	{
	}
}
[Serializable]
[Token(Token = "0x200019C")]
public class ContainerData : ObjectData
{
	[Token(Token = "0x4000AF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public string typeToStock;

	[Token(Token = "0x4000AFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string qty;

	[Token(Token = "0x60009F3")]
	[Address(RVA = "0x284E34", Offset = "0x284E34", VA = "0x284E34")]
	public ContainerData()
	{
	}
}
[Serializable]
[Token(Token = "0x200019D")]
public class MeubleData
{
	[Token(Token = "0x4000AFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public string meubleType;

	[Token(Token = "0x4000AFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string stateID;

	[Token(Token = "0x4000AFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string isBox;

	[Token(Token = "0x4000AFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float posRatioX;

	[Token(Token = "0x4000AFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float posRatioY;

	[Token(Token = "0x4000B00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float posRatioZ;

	[Token(Token = "0x4000B01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float rotX;

	[Token(Token = "0x4000B02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float rotY;

	[Token(Token = "0x4000B03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float rotZ;

	[Token(Token = "0x4000B04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public uint seed;

	[Token(Token = "0x4000B05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public JoinedObjectData[] joinedObjects;

	[Token(Token = "0x60009F4")]
	[Address(RVA = "0x24F728", Offset = "0x24F728", VA = "0x24F728")]
	public MeubleData()
	{
	}
}
[Serializable]
[Token(Token = "0x200019E")]
public class JoinedObjectData
{
	[Token(Token = "0x4000B06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float posX;

	[Token(Token = "0x4000B07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float posY;

	[Token(Token = "0x4000B08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float posZ;

	[Token(Token = "0x4000B09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float rotX;

	[Token(Token = "0x4000B0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float rotY;

	[Token(Token = "0x4000B0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float rotZ;

	[Token(Token = "0x60009F5")]
	[Address(RVA = "0x233D98", Offset = "0x233D98", VA = "0x233D98")]
	public JoinedObjectData()
	{
	}
}
[Serializable]
[Token(Token = "0x200019F")]
public class GlobalProgressionData
{
	[Token(Token = "0x4000B0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public int lastPrisonUnlockedID;

	[Token(Token = "0x4000B0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int arcadeHighScore;

	[Token(Token = "0x4000B0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int tutorialsDone;

	[Token(Token = "0x4000B0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool FirstLoad;

	[Token(Token = "0x60009F6")]
	[Address(RVA = "0x2218AC", Offset = "0x2218AC", VA = "0x2218AC")]
	public GlobalProgressionData()
	{
	}
}
[Serializable]
[Token(Token = "0x20001A0")]
public class GlobalProgressionDataV2
{
	[Token(Token = "0x4000B10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public string version;

	[Token(Token = "0x4000B11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int lastPrisonUnlockedID;

	[Token(Token = "0x4000B12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int arcadeHighScore;

	[Token(Token = "0x4000B13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public string tutorialsDone;

	[Token(Token = "0x4000B14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool FirstLoad;

	[Token(Token = "0x4000B15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool hadFirstSearch;

	[Token(Token = "0x60009F7")]
	[Address(RVA = "0x2218B4", Offset = "0x2218B4", VA = "0x2218B4")]
	public GlobalProgressionDataV2()
	{
	}
}
[Serializable]
[Token(Token = "0x20001A1")]
public class SerializableDictionnary<Key, Value> : Dictionary<Key, Value>, ISerializable
{
	[Token(Token = "0x60009F8")]
	public SerializableDictionnary()
	{
	}

	[Token(Token = "0x60009F9")]
	public SerializableDictionnary(SerializationInfo info, StreamingContext context)
	{
	}

	[Token(Token = "0x60009FA")]
	public override void GetObjectData(SerializationInfo info, StreamingContext context)
	{
	}
}
[Serializable]
[Token(Token = "0x20001A2")]
public class GlobalScoreData
{
	[Token(Token = "0x4000B16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public SerializableDictionnary<string, int[]> StatGoal;

	[Token(Token = "0x4000B17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public SerializableDictionnary<string, int[]> BestPlayerGoal;

	[Token(Token = "0x4000B18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int sandboxHighscore;

	[Token(Token = "0x4000B19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GlobalScoreData _Instance;

	[Token(Token = "0x170000D6")]
	public static GlobalScoreData Instance
	{
		[Token(Token = "0x60009FC")]
		[Address(RVA = "0x221D1C", Offset = "0x221D1C", VA = "0x221D1C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60009FB")]
	[Address(RVA = "0x2218BC", Offset = "0x2218BC", VA = "0x2218BC")]
	public GlobalScoreData(TextAsset GoalTab, [Optional] GlobalScoreData OldStats)
	{
	}

	[Token(Token = "0x60009FD")]
	[Address(RVA = "0x221ECC", Offset = "0x221ECC", VA = "0x221ECC")]
	public int[] GetGoalStat(string key)
	{
		return null;
	}

	[Token(Token = "0x60009FE")]
	[Address(RVA = "0x222050", Offset = "0x222050", VA = "0x222050")]
	public int[] SelectBestStats(string key, int[] newStats)
	{
		return null;
	}

	[Token(Token = "0x60009FF")]
	[Address(RVA = "0x2221BC", Offset = "0x2221BC", VA = "0x2221BC")]
	public int HowManyGoalAchieved(string key, int[] stats)
	{
		return default(int);
	}

	[Token(Token = "0x6000A00")]
	[Address(RVA = "0x222114", Offset = "0x222114", VA = "0x222114")]
	public int HowManyGoalAchieved(string key)
	{
		return default(int);
	}
}
[Token(Token = "0x20001A3")]
public abstract class SaveManagerCommon : MonoBehaviour
{
	[Token(Token = "0x4000B1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SaveManagerCommon Instance;

	[Token(Token = "0x4000B1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private MetaData metaDataToSave;

	[Token(Token = "0x4000B1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private GameModeData gameModeDataToSave;

	[Token(Token = "0x4000B1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private GameSystemData gameSystemDataToSave;

	[Token(Token = "0x4000B1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ProgressionData progressionDataToSave;

	[Token(Token = "0x4000B1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private List<ObjectData> objectsToSave;

	[Token(Token = "0x4000B20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<MeubleData> meublesToSave;

	[Token(Token = "0x4000B21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private List<ContainerData> containersToSave;

	[Token(Token = "0x4000B22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public int saveIDToSave;

	[Token(Token = "0x4000B23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[HideInInspector]
	public string SaveName;

	[Token(Token = "0x4000B24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16B464", Offset = "0x16B464")]
	private static Func<byte, int> <>f__am$cache0;

	[Token(Token = "0x170000D7")]
	public abstract string ConfigDirectoryPath
	{
		[Token(Token = "0x6000A05")]
		get;
	}

	[Token(Token = "0x170000D8")]
	public abstract string GlobalConfigPath
	{
		[Token(Token = "0x6000A06")]
		get;
	}

	[Token(Token = "0x6000A02")]
	[Address(RVA = "0x292BD8", Offset = "0x292BD8", VA = "0x292BD8")]
	protected SaveManagerCommon()
	{
	}

	[Token(Token = "0x6000A03")]
	[Address(RVA = "0x292EFC", Offset = "0x292EFC", VA = "0x292EFC")]
	public void Init()
	{
	}

	[Token(Token = "0x6000A04")]
	[Address(RVA = "0x292F60", Offset = "0x292F60", VA = "0x292F60")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x6000A07")]
	public abstract string GetSaveIDPath(int saveIDToSave);

	[Token(Token = "0x6000A08")]
	public abstract Stream GetReadStream(string path);

	[Token(Token = "0x6000A09")]
	public abstract Stream GetWriteStream(string path);

	[Token(Token = "0x6000A0A")]
	public abstract bool Exists(string path);

	[Token(Token = "0x6000A0B")]
	public abstract void Delete(string path);

	[Token(Token = "0x6000A0C")]
	[Address(RVA = "0x293290", Offset = "0x293290", VA = "0x293290")]
	public void UpdatePrisonScore(string prisonName, int[] stats)
	{
	}

	[Token(Token = "0x6000A0D")]
	[Address(RVA = "0x292FF0", Offset = "0x292FF0", VA = "0x292FF0")]
	public void SaveScoreData(GlobalScoreData data)
	{
	}

	[Token(Token = "0x6000A0E")]
	[Address(RVA = "0x2933A0", Offset = "0x2933A0", VA = "0x2933A0")]
	public void SaveGlobalProgression()
	{
	}

	[Token(Token = "0x6000A0F")]
	[Address(RVA = "0x2939E4", Offset = "0x2939E4", VA = "0x2939E4")]
	public void SaveData()
	{
	}

	[Token(Token = "0x6000A10")]
	[Address(RVA = "0x293878", Offset = "0x293878", VA = "0x293878")]
	private int GetPrisonUnlockedID()
	{
		return default(int);
	}

	[Token(Token = "0x6000A11")]
	[Address(RVA = "0x293974", Offset = "0x293974", VA = "0x293974")]
	private int GetArcadeHighScore()
	{
		return default(int);
	}

	[Token(Token = "0x6000A12")]
	[Address(RVA = "0x296B2C", Offset = "0x296B2C", VA = "0x296B2C")]
	private void DebugSave(SaveDataV2 saveData)
	{
	}

	[Token(Token = "0x6000A13")]
	[Address(RVA = "0x295A1C", Offset = "0x295A1C", VA = "0x295A1C")]
	private GameModeData SaveGameModeData()
	{
		return null;
	}

	[Token(Token = "0x6000A14")]
	[Address(RVA = "0x295C2C", Offset = "0x295C2C", VA = "0x295C2C")]
	private GameSystemData SaveGameSystemData()
	{
		return null;
	}

	[Token(Token = "0x6000A15")]
	[Address(RVA = "0x2960F4", Offset = "0x2960F4", VA = "0x2960F4")]
	private ProgressionData SaveProgressionData()
	{
		return null;
	}

	[Token(Token = "0x6000A16")]
	[Address(RVA = "0x293C80", Offset = "0x293C80", VA = "0x293C80")]
	private void SaveObjectsData()
	{
	}

	[Token(Token = "0x6000A17")]
	[Address(RVA = "0x297C34", Offset = "0x297C34", VA = "0x297C34")]
	private void SaveContainerData(SpawnableObject obj)
	{
	}

	[Token(Token = "0x6000A18")]
	[Address(RVA = "0x295614", Offset = "0x295614", VA = "0x295614")]
	private MetaData GenerateMetaData()
	{
		return null;
	}

	[Token(Token = "0x6000A19")]
	[Address(RVA = "0x2969E0", Offset = "0x2969E0", VA = "0x2969E0")]
	private SaveDataV2 WriteFinalData()
	{
		return null;
	}

	[Token(Token = "0x6000A1A")]
	[Address(RVA = "0x298474", Offset = "0x298474", VA = "0x298474")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16B474", Offset = "0x16B474")]
	private static int <SaveProgressionData>m__0(byte i)
	{
		return default(int);
	}
}
[Token(Token = "0x20001A4")]
public class TaMereManager : MonoBehaviour
{
	[Token(Token = "0x6000A1B")]
	[Address(RVA = "0x2A4100", Offset = "0x2A4100", VA = "0x2A4100")]
	public TaMereManager()
	{
	}

	[Token(Token = "0x6000A1C")]
	[Address(RVA = "0x2A4108", Offset = "0x2A4108", VA = "0x2A4108")]
	private void RenameWindows(string from, string to)
	{
	}

	[Token(Token = "0x6000A1D")]
	[Address(RVA = "0x2A42B8", Offset = "0x2A42B8", VA = "0x2A42B8")]
	private void EffacerRépertoire(string répertoire)
	{
	}

	[Token(Token = "0x6000A1E")]
	[Address(RVA = "0x2A443C", Offset = "0x2A443C", VA = "0x2A443C")]
	private void Awake()
	{
	}
}
[Token(Token = "0x20001A5")]
public class ScrollbarHelper : MonoBehaviour
{
	[Token(Token = "0x2000347")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16B494", Offset = "0x16B494")]
	private sealed class <MoveFast>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x400133D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal ScrollRect rect;

		[Token(Token = "0x400133E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x400133F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x4001340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x170002E9")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60018CF")]
			[Address(RVA = "0x299814", Offset = "0x299814", VA = "0x299814", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002EA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60018D0")]
			[Address(RVA = "0x29981C", Offset = "0x29981C", VA = "0x29981C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018CD")]
		[Address(RVA = "0x2985DC", Offset = "0x2985DC", VA = "0x2985DC")]
		[DebuggerHidden]
		public <MoveFast>c__Iterator0()
		{
		}

		[Token(Token = "0x60018CE")]
		[Address(RVA = "0x2996F0", Offset = "0x2996F0", VA = "0x2996F0", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60018D1")]
		[Address(RVA = "0x299824", Offset = "0x299824", VA = "0x299824", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60018D2")]
		[Address(RVA = "0x299838", Offset = "0x299838", VA = "0x299838", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000348")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16B4F4", Offset = "0x16B4F4")]
	private sealed class <SetScrollbar>c__AnonStorey1
	{
		[Token(Token = "0x4001341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal Scrollbar bar;

		[Token(Token = "0x60018D3")]
		[Address(RVA = "0x298B30", Offset = "0x298B30", VA = "0x298B30")]
		public <SetScrollbar>c__AnonStorey1()
		{
		}

		[Token(Token = "0x60018D4")]
		[Address(RVA = "0x2998BC", Offset = "0x2998BC", VA = "0x2998BC")]
		internal float <>m__0()
		{
			return default(float);
		}

		[Token(Token = "0x60018D5")]
		[Address(RVA = "0x2998E4", Offset = "0x2998E4", VA = "0x2998E4")]
		internal void <>m__1(float x)
		{
		}
	}

	[Token(Token = "0x2000349")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16B504", Offset = "0x16B504")]
	private sealed class <ComputeStopperList>c__AnonStorey2
	{
		[Token(Token = "0x4001342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal Vector3[] corners;

		[Token(Token = "0x4001343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal float objectHeight;

		[Token(Token = "0x4001344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal float ViewportBottomTop;

		[Token(Token = "0x4001345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal float heightOfScrollingArea;

		[Token(Token = "0x60018D6")]
		[Address(RVA = "0x2995A4", Offset = "0x2995A4", VA = "0x2995A4")]
		public <ComputeStopperList>c__AnonStorey2()
		{
		}

		[Token(Token = "0x60018D7")]
		[Address(RVA = "0x2995AC", Offset = "0x2995AC", VA = "0x2995AC")]
		internal float <>m__0(RectTransform b)
		{
			return default(float);
		}

		[Token(Token = "0x60018D8")]
		[Address(RVA = "0x299674", Offset = "0x299674", VA = "0x299674")]
		internal float <>m__1(RectTransform b)
		{
			return default(float);
		}

		[Token(Token = "0x60018D9")]
		[Address(RVA = "0x2996D4", Offset = "0x2996D4", VA = "0x2996D4")]
		internal float <>m__2(float s)
		{
			return default(float);
		}
	}

	[Token(Token = "0x4000B25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool ExecOnEnable;

	[Token(Token = "0x4000B26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ScrollbarScriptableAsset _Asset;

	[Token(Token = "0x170000D9")]
	public static ScrollbarScriptableAsset Asset
	{
		[Token(Token = "0x6000A26")]
		[Address(RVA = "0x2989F4", Offset = "0x2989F4", VA = "0x2989F4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000A1F")]
	[Address(RVA = "0x29847C", Offset = "0x29847C", VA = "0x29847C")]
	public ScrollbarHelper()
	{
	}

	[Token(Token = "0x6000A20")]
	[Address(RVA = "0x298484", Offset = "0x298484", VA = "0x298484")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000A21")]
	[Address(RVA = "0x29855C", Offset = "0x29855C", VA = "0x29855C")]
	[DebuggerHidden]
	private static IEnumerator MoveFast(ScrollRect rect)
	{
		return null;
	}

	[Token(Token = "0x6000A22")]
	[Address(RVA = "0x298498", Offset = "0x298498", VA = "0x298498")]
	public static bool ScrollBarUp(Component comp)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A23")]
	[Address(RVA = "0x2986B0", Offset = "0x2986B0", VA = "0x2986B0")]
	public static bool ScrollBarUp(ScrollRect rect)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A24")]
	[Address(RVA = "0x2985E4", Offset = "0x2985E4", VA = "0x2985E4")]
	public static bool ScrollBarUp(Scrollbar bar)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A25")]
	[Address(RVA = "0x298828", Offset = "0x298828", VA = "0x298828")]
	public static void MoveScrollbar(Scrollbar bar, float diff, float duration)
	{
	}

	[Token(Token = "0x6000A27")]
	[Address(RVA = "0x298880", Offset = "0x298880", VA = "0x298880")]
	public static void SetScrollbar(Scrollbar bar, float targetValue, float duration)
	{
	}

	[Token(Token = "0x6000A28")]
	[Address(RVA = "0x298B38", Offset = "0x298B38", VA = "0x298B38")]
	public static List<float> ComputeSimpleStopperList(Scrollbar bar)
	{
		return null;
	}

	[Token(Token = "0x6000A29")]
	[Address(RVA = "0x298D60", Offset = "0x298D60", VA = "0x298D60")]
	public static List<float> ComputeStopperList(RectTransform Viewport, IEnumerable<RectTransform> objectsTransform, IEnumerable<RectTransform> headersTransform)
	{
		return null;
	}
}
[Token(Token = "0x20001A6")]
public class SellBoxScript : ObjectTagReceiver
{
	[Token(Token = "0x200034A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16B524", Offset = "0x16B524")]
	private sealed class <JsuisÉcoeuréDesProblèmesDOrdreDInitialisation>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4001346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal GameObject[] <obj>__0;

		[Token(Token = "0x4001347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal SellBoxScript $this;

		[Token(Token = "0x4001348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal object $current;

		[Token(Token = "0x4001349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal bool $disposing;

		[Token(Token = "0x400134A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal int $PC;

		[Token(Token = "0x170002EB")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60018DC")]
			[Address(RVA = "0x29CFB8", Offset = "0x29CFB8", VA = "0x29CFB8", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002EC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60018DD")]
			[Address(RVA = "0x29CFC0", Offset = "0x29CFC0", VA = "0x29CFC0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018DA")]
		[Address(RVA = "0x29B774", Offset = "0x29B774", VA = "0x29B774")]
		[DebuggerHidden]
		public <JsuisÉcoeuréDesProblèmesDOrdreDInitialisation>c__Iterator0()
		{
		}

		[Token(Token = "0x60018DB")]
		[Address(RVA = "0x29CC90", Offset = "0x29CC90", VA = "0x29CC90", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60018DE")]
		[Address(RVA = "0x29CFC8", Offset = "0x29CFC8", VA = "0x29CFC8", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60018DF")]
		[Address(RVA = "0x29CFDC", Offset = "0x29CFDC", VA = "0x29CFDC", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4000B27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private DealerTradeScript tradeScript;

	[Token(Token = "0x4000B28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private string[] typeObjetsCompletes;

	[Token(Token = "0x4000B29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float forceDeMultiplierDeRejet;

	[Token(Token = "0x4000B2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool BobbySoldToday;

	[Token(Token = "0x4000B2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private BuyingData soldWhat;

	[Token(Token = "0x170000DA")]
	private TabReader reader
	{
		[Token(Token = "0x6000A2B")]
		[Address(RVA = "0x29B66C", Offset = "0x29B66C", VA = "0x29B66C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000A2A")]
	[Address(RVA = "0x29B5E8", Offset = "0x29B5E8", VA = "0x29B5E8")]
	public SellBoxScript()
	{
	}

	[Token(Token = "0x6000A2C")]
	[Address(RVA = "0x29B6D0", Offset = "0x29B6D0", VA = "0x29B6D0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A2D")]
	[Address(RVA = "0x29B6F4", Offset = "0x29B6F4", VA = "0x29B6F4")]
	[DebuggerHidden]
	private IEnumerator JsuisÉcoeuréDesProblèmesDOrdreDInitialisation()
	{
		return null;
	}

	[Token(Token = "0x6000A2E")]
	[Address(RVA = "0x29B77C", Offset = "0x29B77C", VA = "0x29B77C")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000A2F")]
	[Address(RVA = "0x29B788", Offset = "0x29B788", VA = "0x29B788")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x6000A30")]
	[Address(RVA = "0x29C128", Offset = "0x29C128", VA = "0x29C128")]
	private bool HandleBobbySelling(Ressource res, Collider col)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A31")]
	[Address(RVA = "0x29C3DC", Offset = "0x29C3DC", VA = "0x29C3DC")]
	private bool regardeSiJeLacheteTu(string res)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A32")]
	[Address(RVA = "0x29CA1C", Offset = "0x29CA1C", VA = "0x29CA1C")]
	public void tellMasterScriptToStopMe()
	{
	}

	[Token(Token = "0x6000A33")]
	[Address(RVA = "0x29C6F0", Offset = "0x29C6F0", VA = "0x29C6F0")]
	public void particulesSellSpawn(GameObject item, int valeur, bool skipDestroy = false, bool isSkillpoint = false)
	{
	}

	[Token(Token = "0x6000A34")]
	[Address(RVA = "0x29CB6C", Offset = "0x29CB6C", VA = "0x29CB6C", Slot = "4")]
	public override void ReceiveTag(ObjectTag tag)
	{
	}
}
[Token(Token = "0x20001A7")]
public class SpawnableObject : MonoBehaviour
{
	[Token(Token = "0x4000B2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string ID;

	[Token(Token = "0x6000A35")]
	[Address(RVA = "0x29E30C", Offset = "0x29E30C", VA = "0x29E30C")]
	public SpawnableObject()
	{
	}

	[Token(Token = "0x6000A36")]
	[Address(RVA = "0x29E314", Offset = "0x29E314", VA = "0x29E314", Slot = "4")]
	public virtual void Reset()
	{
	}

	[Token(Token = "0x6000A37")]
	[Address(RVA = "0x29E318", Offset = "0x29E318", VA = "0x29E318", Slot = "5")]
	public virtual void ShutDown()
	{
	}
}
namespace Trebuchet
{
	[Token(Token = "0x20001A8")]
	public class DistanceGrab : MonoBehaviour
	{
		[Token(Token = "0x4000B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float grabDistance;

		[Token(Token = "0x4000B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Color lineColor;

		[Token(Token = "0x4000B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private LineRenderer lineRend;

		[Token(Token = "0x4000B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float lineDistance;

		[Token(Token = "0x4000B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private NVRHand hand;

		[Token(Token = "0x4000B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Collider[] objectsHovering;

		[Token(Token = "0x4000B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Collider[] lastObjsHovering;

		[Token(Token = "0x4000B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool isHit;

		[Token(Token = "0x4000B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		private bool reverseFeedback;

		[Token(Token = "0x4000B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private NVRInteractable lastObj;

		[Token(Token = "0x4000B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Ray ray;

		[Token(Token = "0x4000B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Collider[] noCollider;

		[Token(Token = "0x6000A38")]
		[Address(RVA = "0x2A7624", Offset = "0x2A7624", VA = "0x2A7624")]
		public DistanceGrab()
		{
		}

		[Token(Token = "0x6000A39")]
		[Address(RVA = "0x2A7738", Offset = "0x2A7738", VA = "0x2A7738")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A3A")]
		[Address(RVA = "0x2A77DC", Offset = "0x2A77DC", VA = "0x2A77DC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A3B")]
		[Address(RVA = "0x2A7AD4", Offset = "0x2A7AD4", VA = "0x2A7AD4")]
		public bool Contains(NVRInteractable item)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A3C")]
		[Address(RVA = "0x2A7C00", Offset = "0x2A7C00", VA = "0x2A7C00")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000A3D")]
		[Address(RVA = "0x2A8860", Offset = "0x2A8860", VA = "0x2A8860")]
		public void Lacher()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001A9")]
	public class SceneLayout
	{
		[Token(Token = "0x4000B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string sceneName;

		[Token(Token = "0x4000B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Scene scene;

		[Token(Token = "0x4000B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3[] positions;

		[Token(Token = "0x4000B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float[] rotations;

		[Token(Token = "0x170000DB")]
		public int lenght
		{
			[Token(Token = "0x6000A40")]
			[Address(RVA = "0x2B0448", Offset = "0x2B0448", VA = "0x2B0448")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000A3E")]
		[Address(RVA = "0x2B0024", Offset = "0x2B0024", VA = "0x2B0024")]
		public SceneLayout(Vector3 pos, Quaternion rot)
		{
		}

		[Token(Token = "0x6000A3F")]
		[Address(RVA = "0x2B018C", Offset = "0x2B018C", VA = "0x2B018C")]
		public SceneLayout(Transform[] points)
		{
		}
	}
	[Token(Token = "0x20001AA")]
	public enum StandingSystemLevel
	{
		[Token(Token = "0x4000B3E")]
		None,
		[Token(Token = "0x4000B3F")]
		TeleportationOnly,
		[Token(Token = "0x4000B40")]
		Full
	}
	[Token(Token = "0x20001AB")]
	public class StandingManager : MonoBehaviour
	{
		[Token(Token = "0x200034B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16B5C4", Offset = "0x16B5C4")]
		private sealed class <LateStart>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
		{
			[Token(Token = "0x400134B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal StandingManager $this;

			[Token(Token = "0x400134C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal object $current;

			[Token(Token = "0x400134D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal bool $disposing;

			[Token(Token = "0x400134E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal int $PC;

			[Token(Token = "0x170002ED")]
			private object System.Collections.Generic.IEnumerator<object>.Current
			{
				[Token(Token = "0x60018E2")]
				[Address(RVA = "0x2B1CEC", Offset = "0x2B1CEC", VA = "0x2B1CEC", Slot = "8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002EE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60018E3")]
				[Address(RVA = "0x2B1CF4", Offset = "0x2B1CF4", VA = "0x2B1CF4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60018E0")]
			[Address(RVA = "0x2B13E4", Offset = "0x2B13E4", VA = "0x2B13E4")]
			[DebuggerHidden]
			public <LateStart>c__Iterator0()
			{
			}

			[Token(Token = "0x60018E1")]
			[Address(RVA = "0x2B1BA8", Offset = "0x2B1BA8", VA = "0x2B1BA8", Slot = "5")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60018E4")]
			[Address(RVA = "0x2B1CFC", Offset = "0x2B1CFC", VA = "0x2B1CFC", Slot = "7")]
			[DebuggerHidden]
			public void Dispose()
			{
			}

			[Token(Token = "0x60018E5")]
			[Address(RVA = "0x2B1D10", Offset = "0x2B1D10", VA = "0x2B1D10", Slot = "6")]
			[DebuggerHidden]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x4000B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static StandingManager Instance;

		[Token(Token = "0x4000B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public SceneLayout[] layouts;

		[Token(Token = "0x4000B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LayerMask grabLayerMask;

		[Token(Token = "0x4000B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float minGrabDistance;

		[Token(Token = "0x4000B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float minThrowDistance;

		[Token(Token = "0x4000B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float GrabRadius;

		[Token(Token = "0x4000B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool recenterAuto;

		[Token(Token = "0x4000B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private Vector2 _roomSize;

		[Token(Token = "0x4000B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public LineRenderer distanceGrabLine;

		[Token(Token = "0x4000B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private NVRPlayer player;

		[Token(Token = "0x4000B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Calibrator calibrator;

		[Token(Token = "0x4000B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SceneLayout currentLayout;

		[Token(Token = "0x4000B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int currentIndex;

		[Token(Token = "0x4000B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float rotation;

		[Token(Token = "0x4000B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool level_set;

		[Token(Token = "0x4000B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		private bool initialized;

		[Token(Token = "0x4000B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private StandingSystemLevel _level;

		[Token(Token = "0x4000B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16B594", Offset = "0x16B594")]
		private static Func<NVRHand, DistanceGrab> <>f__am$cache0;

		[Token(Token = "0x170000DC")]
		public static bool IsActive
		{
			[Token(Token = "0x6000A42")]
			[Address(RVA = "0x2B0484", Offset = "0x2B0484", VA = "0x2B0484")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000DD")]
		public Vector3 roomSize
		{
			[Token(Token = "0x6000A43")]
			[Address(RVA = "0x2B0568", Offset = "0x2B0568", VA = "0x2B0568")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170000DE")]
		public StandingSystemLevel level
		{
			[Token(Token = "0x6000A44")]
			[Address(RVA = "0x29EE38", Offset = "0x29EE38", VA = "0x29EE38")]
			get
			{
				return default(StandingSystemLevel);
			}
			[Token(Token = "0x6000A45")]
			[Address(RVA = "0x29ECAC", Offset = "0x29ECAC", VA = "0x29ECAC")]
			set
			{
			}
		}

		[Token(Token = "0x6000A41")]
		[Address(RVA = "0x2B0468", Offset = "0x2B0468", VA = "0x2B0468")]
		public StandingManager()
		{
		}

		[Token(Token = "0x6000A46")]
		[Address(RVA = "0x2B05A4", Offset = "0x2B05A4", VA = "0x2B05A4")]
		private void UpdateStandingLevel()
		{
		}

		[Token(Token = "0x6000A47")]
		[Address(RVA = "0x2B0C10", Offset = "0x2B0C10", VA = "0x2B0C10")]
		public static StandingSystemLevel DefaultLevel()
		{
			return default(StandingSystemLevel);
		}

		[Token(Token = "0x6000A48")]
		[Address(RVA = "0x2B07E8", Offset = "0x2B07E8", VA = "0x2B07E8")]
		private void SetTeleportation(bool v)
		{
		}

		[Token(Token = "0x6000A49")]
		[Address(RVA = "0x2B07F0", Offset = "0x2B07F0", VA = "0x2B07F0")]
		private void SetDistanceGrab(bool v)
		{
		}

		[Token(Token = "0x6000A4A")]
		[Address(RVA = "0x2B0CA0", Offset = "0x2B0CA0", VA = "0x2B0CA0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A4B")]
		[Address(RVA = "0x2B0E78", Offset = "0x2B0E78", VA = "0x2B0E78")]
		private void Init()
		{
		}

		[Token(Token = "0x6000A4C")]
		[Address(RVA = "0x2B1114", Offset = "0x2B1114", VA = "0x2B1114")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A4D")]
		[Address(RVA = "0x2B1364", Offset = "0x2B1364", VA = "0x2B1364")]
		[DebuggerHidden]
		private IEnumerator LateStart()
		{
			return null;
		}

		[Token(Token = "0x6000A4E")]
		[Address(RVA = "0x2B13EC", Offset = "0x2B13EC", VA = "0x2B13EC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A4F")]
		[Address(RVA = "0x2B1B74", Offset = "0x2B1B74", VA = "0x2B1B74")]
		public void ApplyLayout()
		{
		}

		[Token(Token = "0x6000A50")]
		[Address(RVA = "0x2B16C4", Offset = "0x2B16C4", VA = "0x2B16C4")]
		public void ApplyLayout(int index, bool wantRotation = true)
		{
		}

		[Token(Token = "0x6000A51")]
		[Address(RVA = "0x2B0EA0", Offset = "0x2B0EA0", VA = "0x2B0EA0")]
		private void loadLayout(Scene scene)
		{
		}

		[Token(Token = "0x6000A52")]
		[Address(RVA = "0x2B1B80", Offset = "0x2B1B80", VA = "0x2B1B80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16B5B4", Offset = "0x16B5B4")]
		private static DistanceGrab <SetDistanceGrab>m__0(NVRHand h)
		{
			return null;
		}
	}
}
[Token(Token = "0x20001AC")]
public class StatistiqueData
{
	[Token(Token = "0x4000B53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public int nbTimeCaught;

	[Token(Token = "0x4000B54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int jobDone;

	[Token(Token = "0x4000B55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int nbItemsSold;

	[Token(Token = "0x4000B56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int ItemsSoldValue;

	[Token(Token = "0x4000B57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int nbItemsGivenToJobs;

	[Token(Token = "0x4000B58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int ItemsGivenToJobsValue;

	[Token(Token = "0x4000B59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int daysFirst;

	[Token(Token = "0x170000DF")]
	public int Stat1
	{
		[Token(Token = "0x6000A54")]
		[Address(RVA = "0x297C14", Offset = "0x297C14", VA = "0x297C14")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000A55")]
		[Address(RVA = "0x2A0944", Offset = "0x2A0944", VA = "0x2A0944")]
		set
		{
		}
	}

	[Token(Token = "0x170000E0")]
	public int Stat2
	{
		[Token(Token = "0x6000A56")]
		[Address(RVA = "0x297C1C", Offset = "0x297C1C", VA = "0x297C1C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000A57")]
		[Address(RVA = "0x2A094C", Offset = "0x2A094C", VA = "0x2A094C")]
		set
		{
		}
	}

	[Token(Token = "0x170000E1")]
	public int Stat3
	{
		[Token(Token = "0x6000A58")]
		[Address(RVA = "0x297C24", Offset = "0x297C24", VA = "0x297C24")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000A59")]
		[Address(RVA = "0x2A0954", Offset = "0x2A0954", VA = "0x2A0954")]
		set
		{
		}
	}

	[Token(Token = "0x170000E2")]
	public int Stat4
	{
		[Token(Token = "0x6000A5A")]
		[Address(RVA = "0x297C2C", Offset = "0x297C2C", VA = "0x297C2C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000A5B")]
		[Address(RVA = "0x2A095C", Offset = "0x2A095C", VA = "0x2A095C")]
		set
		{
		}
	}

	[Token(Token = "0x170000E3")]
	public int nbDayInThisPrison
	{
		[Token(Token = "0x6000A5C")]
		[Address(RVA = "0x2A0964", Offset = "0x2A0964", VA = "0x2A0964")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000A53")]
	[Address(RVA = "0x2A093C", Offset = "0x2A093C", VA = "0x2A093C")]
	public StatistiqueData()
	{
	}

	[Token(Token = "0x6000A5D")]
	[Address(RVA = "0x2A09E0", Offset = "0x2A09E0", VA = "0x2A09E0")]
	public static int[] GetStatThreshold(string id)
	{
		return null;
	}

	[Token(Token = "0x6000A5E")]
	[Address(RVA = "0x2A0A84", Offset = "0x2A0A84", VA = "0x2A0A84")]
	public void Log()
	{
	}
}
[Token(Token = "0x20001AD")]
public class TestTextFitting : MonoBehaviour
{
	[Token(Token = "0x4000B5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private GameTextManager gtm;

	[Token(Token = "0x4000B5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Text _text;

	[Token(Token = "0x6000A5F")]
	[Address(RVA = "0x2A4A84", Offset = "0x2A4A84", VA = "0x2A4A84")]
	public TestTextFitting()
	{
	}

	[Token(Token = "0x6000A60")]
	[Address(RVA = "0x2A4A8C", Offset = "0x2A4A8C", VA = "0x2A4A8C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A61")]
	[Address(RVA = "0x2A4B10", Offset = "0x2A4B10", VA = "0x2A4B10")]
	private void Update()
	{
	}
}
[Token(Token = "0x20001AE")]
public class CharSetDebugger : MonoBehaviour
{
	[Token(Token = "0x200034C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16B634", Offset = "0x16B634")]
	private sealed class <Start>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x400134F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal Dictionary<string, Dictionary<string, string>>.Enumerator $locvar0;

		[Token(Token = "0x4001350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal CharSetDebugger $this;

		[Token(Token = "0x4001351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal object $current;

		[Token(Token = "0x4001352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal bool $disposing;

		[Token(Token = "0x4001353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal int $PC;

		[Token(Token = "0x170002EF")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60018E8")]
			[Address(RVA = "0x2828BC", Offset = "0x2828BC", VA = "0x2828BC", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60018E9")]
			[Address(RVA = "0x2828C4", Offset = "0x2828C4", VA = "0x2828C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018E6")]
		[Address(RVA = "0x282094", Offset = "0x282094", VA = "0x282094")]
		[DebuggerHidden]
		public <Start>c__Iterator0()
		{
		}

		[Token(Token = "0x60018E7")]
		[Address(RVA = "0x28209C", Offset = "0x28209C", VA = "0x28209C", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60018EA")]
		[Address(RVA = "0x2828CC", Offset = "0x2828CC", VA = "0x2828CC", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60018EB")]
		[Address(RVA = "0x2828E0", Offset = "0x2828E0", VA = "0x2828E0", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4000B5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private List<char> _liste;

	[Token(Token = "0x4000B5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string Liste;

	[Token(Token = "0x6000A62")]
	[Address(RVA = "0x281F88", Offset = "0x281F88", VA = "0x281F88")]
	public CharSetDebugger()
	{
	}

	[Token(Token = "0x6000A63")]
	[Address(RVA = "0x282014", Offset = "0x282014", VA = "0x282014")]
	[DebuggerHidden]
	private IEnumerator Start()
	{
		return null;
	}
}
[Serializable]
[Token(Token = "0x20001AF")]
public class LanguageFontGroup
{
	[Token(Token = "0x4000B5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public UnityEngine.Object[] Fonts;

	[Token(Token = "0x4000B5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public TextAsset[] Texts;

	[Token(Token = "0x6000A64")]
	[Address(RVA = "0x2379E4", Offset = "0x2379E4", VA = "0x2379E4")]
	public LanguageFontGroup()
	{
	}
}
[Token(Token = "0x20001B0")]
public class FontGroup : ScriptableObject
{
	[Token(Token = "0x4000B60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public LanguageFontGroup[] FontGroups;

	[Token(Token = "0x6000A65")]
	[Address(RVA = "0x210BD8", Offset = "0x210BD8", VA = "0x210BD8")]
	public FontGroup()
	{
	}
}
[Token(Token = "0x20001B1")]
public class GameFontSizeSwitch : MonoBehaviour
{
	[Token(Token = "0x4000B61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float[] sizes;

	[Token(Token = "0x4000B62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private TextMeshProUGUI text;

	[Token(Token = "0x6000A66")]
	[Address(RVA = "0x210BE8", Offset = "0x210BE8", VA = "0x210BE8")]
	public GameFontSizeSwitch()
	{
	}

	[Token(Token = "0x6000A67")]
	[Address(RVA = "0x210BF0", Offset = "0x210BF0", VA = "0x210BF0")]
	private void Start()
	{
	}
}
[Token(Token = "0x20001B2")]
public class GameObjectSwitch : MonoBehaviour
{
	[Token(Token = "0x4000B63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject[] Objs;

	[Token(Token = "0x6000A68")]
	[Address(RVA = "0x210D98", Offset = "0x210D98", VA = "0x210D98")]
	public GameObjectSwitch()
	{
	}

	[Token(Token = "0x6000A69")]
	[Address(RVA = "0x210DA0", Offset = "0x210DA0", VA = "0x210DA0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A6A")]
	[Address(RVA = "0x210DA4", Offset = "0x210DA4", VA = "0x210DA4")]
	private void set()
	{
	}
}
[Token(Token = "0x20001B3")]
public enum TextType
{
	[Token(Token = "0x4000B65")]
	Announce,
	[Token(Token = "0x4000B66")]
	Hints,
	[Token(Token = "0x4000B67")]
	ObjectName,
	[Token(Token = "0x4000B68")]
	ObjectDescription,
	[Token(Token = "0x4000B69")]
	TabletMenu,
	[Token(Token = "0x4000B6A")]
	JobName,
	[Token(Token = "0x4000B6B")]
	Generique,
	[Token(Token = "0x4000B6C")]
	Tutorial,
	[Token(Token = "0x4000B6D")]
	Menu,
	[Token(Token = "0x4000B6E")]
	Furniture,
	[Token(Token = "0x4000B6F")]
	Bobby,
	[Token(Token = "0x4000B70")]
	HeadDisplay
}
[Serializable]
[Token(Token = "0x20001B4")]
public class TextMetadata
{
	[Token(Token = "0x4000B71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public string Plateform;

	[Token(Token = "0x4000B72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public TextType type;

	[Token(Token = "0x4000B73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int ID;

	[Token(Token = "0x4000B74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public string[] formatObject;

	[Token(Token = "0x6000A6B")]
	[Address(RVA = "0x2A4BEC", Offset = "0x2A4BEC", VA = "0x2A4BEC")]
	public TextMetadata()
	{
	}
}
[Token(Token = "0x20001B5")]
public class GameTextLink : MonoBehaviour
{
	[Token(Token = "0x4000B75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool setOnStart;

	[Token(Token = "0x4000B76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public TextMetadata[] plateformTexts;

	[Token(Token = "0x4000B77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public TextMeshProUGUI[] targetText;

	[Token(Token = "0x6000A6C")]
	[Address(RVA = "0x2197C0", Offset = "0x2197C0", VA = "0x2197C0")]
	public GameTextLink()
	{
	}

	[Token(Token = "0x6000A6D")]
	[Address(RVA = "0x2197D0", Offset = "0x2197D0", VA = "0x2197D0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A6E")]
	[Address(RVA = "0x2198AC", Offset = "0x2198AC", VA = "0x2198AC")]
	public void SetText()
	{
	}

	[Token(Token = "0x6000A6F")]
	[Address(RVA = "0x219E08", Offset = "0x219E08", VA = "0x219E08")]
	private void OnDestroy()
	{
	}
}
[Token(Token = "0x20001B6")]
public enum Languages
{
	[Token(Token = "0x4000B79")]
	English,
	[Token(Token = "0x4000B7A")]
	French,
	[Token(Token = "0x4000B7B")]
	Chinese,
	[Token(Token = "0x4000B7C")]
	Japanese,
	[Token(Token = "0x4000B7D")]
	Korean,
	[Token(Token = "0x4000B7E")]
	TraditionalChinese,
	[Token(Token = "0x4000B7F")]
	Spanish,
	[Token(Token = "0x4000B80")]
	Russian
}
[Serializable]
[Token(Token = "0x20001B7")]
public class LanguageSize
{
	[Token(Token = "0x4000B81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public string language;

	[Token(Token = "0x4000B82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float maxSize;

	[Token(Token = "0x4000B83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int[] charThreshold;

	[Token(Token = "0x4000B84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float[] sizes;

	[Token(Token = "0x6000A70")]
	[Address(RVA = "0x2379EC", Offset = "0x2379EC", VA = "0x2379EC")]
	public LanguageSize()
	{
	}

	[Token(Token = "0x6000A71")]
	[Address(RVA = "0x237A00", Offset = "0x237A00", VA = "0x237A00")]
	public float getSize(int charNb)
	{
		return default(float);
	}
}
[Serializable]
[Token(Token = "0x20001B8")]
public class FallBackFonts
{
	[Token(Token = "0x4000B85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public string language;

	[Token(Token = "0x4000B86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public TMP_FontAsset[] fonts;

	[Token(Token = "0x6000A72")]
	[Address(RVA = "0x20EAA4", Offset = "0x20EAA4", VA = "0x20EAA4")]
	public FallBackFonts()
	{
	}

	[Token(Token = "0x6000A73")]
	[Address(RVA = "0x20EAAC", Offset = "0x20EAAC", VA = "0x20EAAC")]
	public void Apply(TMP_FontAsset[] _fonts)
	{
	}
}
[Token(Token = "0x20001B9")]
public class GameTextManager : MonoBehaviour
{
	[Token(Token = "0x200034D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16B6F4", Offset = "0x16B6F4")]
	private sealed class <DisplayTextCoroutine>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4001354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal string <displayedString>__0;

		[Token(Token = "0x4001355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal int <i>__1;

		[Token(Token = "0x4001356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal string str;

		[Token(Token = "0x4001357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal float <modifier>__2;

		[Token(Token = "0x4001358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal TextMeshProUGUI textComponent;

		[Token(Token = "0x4001359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal float delay;

		[Token(Token = "0x400135A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal object $current;

		[Token(Token = "0x400135B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal bool $disposing;

		[Token(Token = "0x400135C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal int $PC;

		[Token(Token = "0x170002F1")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60018EE")]
			[Address(RVA = "0x21C630", Offset = "0x21C630", VA = "0x21C630", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60018EF")]
			[Address(RVA = "0x21C638", Offset = "0x21C638", VA = "0x21C638", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018EC")]
		[Address(RVA = "0x21C398", Offset = "0x21C398", VA = "0x21C398")]
		[DebuggerHidden]
		public <DisplayTextCoroutine>c__Iterator0()
		{
		}

		[Token(Token = "0x60018ED")]
		[Address(RVA = "0x21C3A0", Offset = "0x21C3A0", VA = "0x21C3A0", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60018F0")]
		[Address(RVA = "0x21C640", Offset = "0x21C640", VA = "0x21C640", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60018F1")]
		[Address(RVA = "0x21C654", Offset = "0x21C654", VA = "0x21C654", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4000B87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public static GameTextManager Instance;

	[Token(Token = "0x4000B88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Languages currentLanguage;

	[Token(Token = "0x4000B89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public LanguageSize currentLanguageSize;

	[Token(Token = "0x4000B8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public TextAsset[] LanguageTabs;

	[Token(Token = "0x4000B8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LanguageSize[] LanguageSizes;

	[Token(Token = "0x4000B8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Dictionary<string, Dictionary<string, string>> loadedTab;

	[Token(Token = "0x4000B8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent LanguageChanged;

	[Token(Token = "0x4000B8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public TMP_FontAsset[] baseFontAssets;

	[Token(Token = "0x4000B8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public FallBackFonts[] FallbackFontAssets;

	[Token(Token = "0x4000B90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool Initialized;

	[Token(Token = "0x6000A74")]
	[Address(RVA = "0x219ED0", Offset = "0x219ED0", VA = "0x219ED0")]
	public GameTextManager()
	{
	}

	[Token(Token = "0x6000A75")]
	[Address(RVA = "0x219ED8", Offset = "0x219ED8", VA = "0x219ED8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A76")]
	[Address(RVA = "0x21A188", Offset = "0x21A188", VA = "0x21A188")]
	public static bool IsSupportedByPlatform(Languages input)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A77")]
	[Address(RVA = "0x21A190", Offset = "0x21A190", VA = "0x21A190")]
	public static bool TryParse(string input, out Languages output)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A78")]
	[Address(RVA = "0x21A9EC", Offset = "0x21A9EC", VA = "0x21A9EC")]
	public void SetLanguage(Languages language)
	{
	}

	[Token(Token = "0x6000A79")]
	[Address(RVA = "0x21AC34", Offset = "0x21AC34", VA = "0x21AC34")]
	public Dictionary<string, Dictionary<string, string>> LoadLanguageTab(Languages language)
	{
		return null;
	}

	[Token(Token = "0x6000A7A")]
	[Address(RVA = "0x21B13C", Offset = "0x21B13C", VA = "0x21B13C")]
	private string FindInTab(string type, int simpleId)
	{
		return null;
	}

	[Token(Token = "0x6000A7B")]
	[Address(RVA = "0x21B178", Offset = "0x21B178", VA = "0x21B178")]
	private string FindInTab(string type, string id)
	{
		return null;
	}

	[Token(Token = "0x6000A7C")]
	[Address(RVA = "0x21B250", Offset = "0x21B250", VA = "0x21B250")]
	public string GetText(string type, int id)
	{
		return null;
	}

	[Token(Token = "0x6000A7D")]
	[Address(RVA = "0x206BC0", Offset = "0x206BC0", VA = "0x206BC0")]
	public string GetText(string type, int id, params object[] values)
	{
		return null;
	}

	[Token(Token = "0x6000A7E")]
	[Address(RVA = "0x20F478", Offset = "0x20F478", VA = "0x20F478")]
	public string GetAnnounce(int id)
	{
		return null;
	}

	[Token(Token = "0x6000A7F")]
	[Address(RVA = "0x20F524", Offset = "0x20F524", VA = "0x20F524")]
	public string GetAnnounce(int id, params object[] values)
	{
		return null;
	}

	[Token(Token = "0x6000A80")]
	[Address(RVA = "0x21B598", Offset = "0x21B598", VA = "0x21B598")]
	public string GetTutorial(int id)
	{
		return null;
	}

	[Token(Token = "0x6000A81")]
	[Address(RVA = "0x21B89C", Offset = "0x21B89C", VA = "0x21B89C")]
	public string GetTutorial(int id, params object[] values)
	{
		return null;
	}

	[Token(Token = "0x6000A82")]
	[Address(RVA = "0x21B994", Offset = "0x21B994", VA = "0x21B994")]
	public string GetHint(int id)
	{
		return null;
	}

	[Token(Token = "0x6000A83")]
	[Address(RVA = "0x21BA40", Offset = "0x21BA40", VA = "0x21BA40")]
	public string GetHint(int id, params object[] values)
	{
		return null;
	}

	[Token(Token = "0x6000A84")]
	[Address(RVA = "0x206B20", Offset = "0x206B20", VA = "0x206B20")]
	public string GetObjectName(int id)
	{
		return null;
	}

	[Token(Token = "0x6000A85")]
	[Address(RVA = "0x21BB34", Offset = "0x21BB34", VA = "0x21BB34")]
	public string GetObjectDescription(int id)
	{
		return null;
	}

	[Token(Token = "0x6000A86")]
	[Address(RVA = "0x21BBD4", Offset = "0x21BBD4", VA = "0x21BBD4")]
	public string GetJobName(int prisonID, int jobID)
	{
		return null;
	}

	[Token(Token = "0x6000A87")]
	[Address(RVA = "0x2059E0", Offset = "0x2059E0", VA = "0x2059E0")]
	public string GetTabletMenuEntry(int id)
	{
		return null;
	}

	[Token(Token = "0x6000A88")]
	[Address(RVA = "0x21BCD8", Offset = "0x21BCD8", VA = "0x21BCD8")]
	public string GetGenerique(int id)
	{
		return null;
	}

	[Token(Token = "0x6000A89")]
	[Address(RVA = "0x21BD78", Offset = "0x21BD78", VA = "0x21BD78")]
	public void GetAllNames(ref string[] firstNames, ref string[] akas, ref string[] lastNames)
	{
	}

	[Token(Token = "0x6000A8A")]
	[Address(RVA = "0x210178", Offset = "0x210178", VA = "0x210178")]
	public Tween DisplayText(string str, TextMeshProUGUI textComponent, float delay = 1.5f)
	{
		return null;
	}

	[Token(Token = "0x6000A8B")]
	[Address(RVA = "0x21C2E0", Offset = "0x21C2E0", VA = "0x21C2E0")]
	[DebuggerHidden]
	public IEnumerator DisplayTextCoroutine(string str, TextMeshProUGUI textComponent, float delay = 0.05f)
	{
		return null;
	}

	[Token(Token = "0x6000A8C")]
	[Address(RVA = "0x21B32C", Offset = "0x21B32C", VA = "0x21B32C")]
	private string EnrichText(string str)
	{
		return null;
	}

	[Token(Token = "0x6000A8D")]
	[Address(RVA = "0x21B648", Offset = "0x21B648", VA = "0x21B648")]
	private string AddQuotes(string str)
	{
		return null;
	}
}
[Token(Token = "0x20001BA")]
public class GameTextSwitch : MonoBehaviour
{
	[Token(Token = "0x4000B91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameTextLink[] textLink;

	[Token(Token = "0x4000B92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int _index;

	[Token(Token = "0x6000A8E")]
	[Address(RVA = "0x21C6D8", Offset = "0x21C6D8", VA = "0x21C6D8")]
	public GameTextSwitch()
	{
	}

	[Token(Token = "0x6000A8F")]
	[Address(RVA = "0x21C6E0", Offset = "0x21C6E0", VA = "0x21C6E0")]
	private void SwitchText()
	{
	}
}
[Token(Token = "0x20001BB")]
public class GameTextSwitchEmpty : MonoBehaviour
{
	[Token(Token = "0x6000A90")]
	[Address(RVA = "0x21C75C", Offset = "0x21C75C", VA = "0x21C75C")]
	public GameTextSwitchEmpty()
	{
	}

	[Token(Token = "0x6000A91")]
	[Address(RVA = "0x21C764", Offset = "0x21C764", VA = "0x21C764")]
	private void SwitchText()
	{
	}
}
[Token(Token = "0x20001BC")]
public class ImageSwitch : MonoBehaviour
{
	[Token(Token = "0x4000B93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Sprite[] sprites;

	[Token(Token = "0x4000B94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Image rend;

	[Token(Token = "0x4000B95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int lastLanguage;

	[Token(Token = "0x6000A92")]
	[Address(RVA = "0x22A3D4", Offset = "0x22A3D4", VA = "0x22A3D4")]
	public ImageSwitch()
	{
	}

	[Token(Token = "0x6000A93")]
	[Address(RVA = "0x22A3DC", Offset = "0x22A3DC", VA = "0x22A3DC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A94")]
	[Address(RVA = "0x22A444", Offset = "0x22A444", VA = "0x22A444")]
	private void OnEnable()
	{
	}
}
[Token(Token = "0x20001BD")]
public class ParticuleSwitch : MonoBehaviour
{
	[Token(Token = "0x4000B96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public ParticleSystemRenderer particle;

	[Token(Token = "0x4000B97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Material[] materials;

	[Token(Token = "0x4000B98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int lastLanguage;

	[Token(Token = "0x6000A95")]
	[Address(RVA = "0x330EA8", Offset = "0x330EA8", VA = "0x330EA8")]
	public ParticuleSwitch()
	{
	}

	[Token(Token = "0x6000A96")]
	[Address(RVA = "0x330EB0", Offset = "0x330EB0", VA = "0x330EB0")]
	private void OnEnable()
	{
	}
}
[Token(Token = "0x20001BE")]
public class TextToTextMesh : MonoBehaviour
{
	[Token(Token = "0x4000B99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public TMP_FontAsset[] assets;

	[Token(Token = "0x4000B9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float fontSize;

	[Token(Token = "0x4000B9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float brightness;

	[Token(Token = "0x4000B9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextAlignmentOptions options;

	[Token(Token = "0x6000A97")]
	[Address(RVA = "0x2A4CF4", Offset = "0x2A4CF4", VA = "0x2A4CF4")]
	public TextToTextMesh()
	{
	}

	[Token(Token = "0x6000A98")]
	[Address(RVA = "0x2A4D08", Offset = "0x2A4D08", VA = "0x2A4D08")]
	public void changeTextInTextMesh()
	{
	}

	[Token(Token = "0x6000A99")]
	[Address(RVA = "0x2A5360", Offset = "0x2A5360", VA = "0x2A5360")]
	public void changeTextMeshInTextMeshGUI()
	{
	}
}
[Token(Token = "0x20001BF")]
public class TextureSwitch : MonoBehaviour
{
	[Token(Token = "0x4000B9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Texture2D[] textures;

	[Token(Token = "0x4000B9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private MeshRenderer rend;

	[Token(Token = "0x4000B9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int lastLanguage;

	[Token(Token = "0x6000A9A")]
	[Address(RVA = "0x2A57C0", Offset = "0x2A57C0", VA = "0x2A57C0")]
	public TextureSwitch()
	{
	}

	[Token(Token = "0x6000A9B")]
	[Address(RVA = "0x2A57C8", Offset = "0x2A57C8", VA = "0x2A57C8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A9C")]
	[Address(RVA = "0x2A5830", Offset = "0x2A5830", VA = "0x2A5830")]
	private void OnEnable()
	{
	}
}
[Token(Token = "0x20001C0")]
public class GameobjectsToDestroy
{
	[Token(Token = "0x4000BA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public GameObject ObjectstoDestroy;

	[Token(Token = "0x4000BA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float timeLeft;

	[Token(Token = "0x6000A9D")]
	[Address(RVA = "0x210D90", Offset = "0x210D90", VA = "0x210D90")]
	public GameobjectsToDestroy()
	{
	}
}
[Token(Token = "0x20001C1")]
public class TheAbsoluteDestroyer : MonoBehaviour
{
	[Token(Token = "0x4000BA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float destroyTime;

	[Token(Token = "0x4000BA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<GameobjectsToDestroy> gameObjectsToDestroyList;

	[Token(Token = "0x6000A9E")]
	[Address(RVA = "0x2A5958", Offset = "0x2A5958", VA = "0x2A5958")]
	public TheAbsoluteDestroyer()
	{
	}

	[Token(Token = "0x6000A9F")]
	[Address(RVA = "0x2A59E4", Offset = "0x2A59E4", VA = "0x2A59E4")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x6000AA0")]
	[Address(RVA = "0x2A5B44", Offset = "0x2A5B44", VA = "0x2A5B44")]
	private void OnTriggerExit(Collider col)
	{
	}

	[Token(Token = "0x6000AA1")]
	[Address(RVA = "0x2A5D24", Offset = "0x2A5D24", VA = "0x2A5D24")]
	private void Update()
	{
	}
}
[Token(Token = "0x20001C2")]
public class Tools
{
	[Token(Token = "0x6000AA2")]
	[Address(RVA = "0x2A6594", Offset = "0x2A6594", VA = "0x2A6594")]
	public Tools()
	{
	}

	[Token(Token = "0x6000AA3")]
	public static List<T> DeepClone<T>(List<T> list)
	{
		return null;
	}
}
[Token(Token = "0x20001C3")]
public class TriggerBoxScript : MonoBehaviour
{
	[Token(Token = "0x4000BA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[HideInInspector]
	public BoxScript bs;

	[Token(Token = "0x4000BA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[HideInInspector]
	public NVRInteractableItem Obj;

	[Token(Token = "0x4000BA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private HighlightRecipe hl;

	[Token(Token = "0x4000BA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Rigidbody rb;

	[Token(Token = "0x4000BA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private BoxCollider boxCollider;

	[Token(Token = "0x6000AA4")]
	[Address(RVA = "0x2B4448", Offset = "0x2B4448", VA = "0x2B4448")]
	public TriggerBoxScript()
	{
	}

	[Token(Token = "0x6000AA5")]
	[Address(RVA = "0x2B4450", Offset = "0x2B4450", VA = "0x2B4450")]
	public void Init()
	{
	}

	[Token(Token = "0x6000AA6")]
	[Address(RVA = "0x2B4648", Offset = "0x2B4648", VA = "0x2B4648")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AA7")]
	[Address(RVA = "0x2B46CC", Offset = "0x2B46CC", VA = "0x2B46CC")]
	private void OnTriggerEnter(Collider col)
	{
	}
}
[Token(Token = "0x20001C4")]
public class TutorialLoader : Ressource
{
	[Token(Token = "0x4000BA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float timeToShake;

	[Token(Token = "0x4000BAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public GameObject Particle;

	[Token(Token = "0x4000BAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string tutorialToLoad;

	[Token(Token = "0x4000BAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Image img;

	[Token(Token = "0x4000BAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GameObject sp;

	[Token(Token = "0x4000BAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 BaseSpPos;

	[Token(Token = "0x4000BAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private NVRInteractableItem obj;

	[Token(Token = "0x4000BB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float time;

	[Token(Token = "0x4000BB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private uint openingSound;

	[Token(Token = "0x6000AA8")]
	[Address(RVA = "0x2B5208", Offset = "0x2B5208", VA = "0x2B5208")]
	public TutorialLoader()
	{
	}

	[Token(Token = "0x6000AA9")]
	[Address(RVA = "0x2B5210", Offset = "0x2B5210", VA = "0x2B5210", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000AAA")]
	[Address(RVA = "0x2B5370", Offset = "0x2B5370", VA = "0x2B5370")]
	public void setLoader(string tutorial)
	{
	}

	[Token(Token = "0x6000AAB")]
	[Address(RVA = "0x2B54F0", Offset = "0x2B54F0", VA = "0x2B54F0")]
	public void refreshHint()
	{
	}

	[Token(Token = "0x6000AAC")]
	[Address(RVA = "0x2B5520", Offset = "0x2B5520", VA = "0x2B5520", Slot = "4")]
	public override void Reset()
	{
	}

	[Token(Token = "0x6000AAD")]
	[Address(RVA = "0x2B5568", Offset = "0x2B5568", VA = "0x2B5568", Slot = "7")]
	protected override void Update()
	{
	}
}
[Token(Token = "0x20001C5")]
public class Video : MonoBehaviour
{
	[Token(Token = "0x200034E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16B794", Offset = "0x16B794")]
	private sealed class <CoroutinePreload>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x400135D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal Video $this;

		[Token(Token = "0x400135E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x400135F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x4001360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x170002F3")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60018F4")]
			[Address(RVA = "0x4D6258", Offset = "0x4D6258", VA = "0x4D6258", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60018F5")]
			[Address(RVA = "0x4D6260", Offset = "0x4D6260", VA = "0x4D6260", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018F2")]
		[Address(RVA = "0x4D5A68", Offset = "0x4D5A68", VA = "0x4D5A68")]
		[DebuggerHidden]
		public <CoroutinePreload>c__Iterator0()
		{
		}

		[Token(Token = "0x60018F3")]
		[Address(RVA = "0x4D60C0", Offset = "0x4D60C0", VA = "0x4D60C0", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60018F6")]
		[Address(RVA = "0x4D6268", Offset = "0x4D6268", VA = "0x4D6268", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60018F7")]
		[Address(RVA = "0x4D627C", Offset = "0x4D627C", VA = "0x4D627C", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x200034F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16B7F4", Offset = "0x16B7F4")]
	private sealed class <CoroutinePlay>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4001361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal Video $this;

		[Token(Token = "0x4001362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x4001363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x4001364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x170002F5")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x60018FA")]
			[Address(RVA = "0x4D6018", Offset = "0x4D6018", VA = "0x4D6018", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60018FB")]
			[Address(RVA = "0x4D6020", Offset = "0x4D6020", VA = "0x4D6020", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018F8")]
		[Address(RVA = "0x4D5B40", Offset = "0x4D5B40", VA = "0x4D5B40")]
		[DebuggerHidden]
		public <CoroutinePlay>c__Iterator1()
		{
		}

		[Token(Token = "0x60018F9")]
		[Address(RVA = "0x4D5E50", Offset = "0x4D5E50", VA = "0x4D5E50", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60018FC")]
		[Address(RVA = "0x4D6028", Offset = "0x4D6028", VA = "0x4D6028", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x60018FD")]
		[Address(RVA = "0x4D603C", Offset = "0x4D603C", VA = "0x4D603C", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4000BB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Vector3 hidden;

	[Token(Token = "0x4000BB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static Vector3 visible;

	[Token(Token = "0x4000BB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool preparing;

	[Token(Token = "0x4000BB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
	public bool prepared;

	[Token(Token = "0x4000BB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private VideoPlayer video;

	[Token(Token = "0x4000BB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static Video preloading;

	[Token(Token = "0x6000AAE")]
	[Address(RVA = "0x4D55B4", Offset = "0x4D55B4", VA = "0x4D55B4")]
	public Video()
	{
	}

	[Token(Token = "0x6000AAF")]
	[Address(RVA = "0x4D55BC", Offset = "0x4D55BC", VA = "0x4D55BC")]
	public void Prepare(string path)
	{
	}

	[Token(Token = "0x6000AB0")]
	[Address(RVA = "0x4D594C", Offset = "0x4D594C", VA = "0x4D594C")]
	private void Video_prepareCompleted(VideoPlayer source)
	{
	}

	[Token(Token = "0x6000AB1")]
	[Address(RVA = "0x4D5904", Offset = "0x4D5904", VA = "0x4D5904")]
	public void Preload()
	{
	}

	[Token(Token = "0x6000AB2")]
	[Address(RVA = "0x4D59E8", Offset = "0x4D59E8", VA = "0x4D59E8")]
	[DebuggerHidden]
	private IEnumerator CoroutinePreload()
	{
		return null;
	}

	[Token(Token = "0x6000AB3")]
	[Address(RVA = "0x4D5A70", Offset = "0x4D5A70", VA = "0x4D5A70")]
	public void Loop()
	{
	}

	[Token(Token = "0x6000AB4")]
	[Address(RVA = "0x4D5A9C", Offset = "0x4D5A9C", VA = "0x4D5A9C")]
	public void Play()
	{
	}

	[Token(Token = "0x6000AB5")]
	[Address(RVA = "0x4D5AC0", Offset = "0x4D5AC0", VA = "0x4D5AC0")]
	[DebuggerHidden]
	private IEnumerator CoroutinePlay()
	{
		return null;
	}

	[Token(Token = "0x6000AB6")]
	[Address(RVA = "0x4D5B48", Offset = "0x4D5B48", VA = "0x4D5B48")]
	public void Pause()
	{
	}

	[Token(Token = "0x6000AB7")]
	[Address(RVA = "0x4D5C34", Offset = "0x4D5C34", VA = "0x4D5C34")]
	public void Unpause()
	{
	}

	[Token(Token = "0x6000AB8")]
	[Address(RVA = "0x4D5D24", Offset = "0x4D5D24", VA = "0x4D5D24")]
	public void PauseQuest()
	{
	}

	[Token(Token = "0x6000AB9")]
	[Address(RVA = "0x4D5D4C", Offset = "0x4D5D4C", VA = "0x4D5D4C")]
	public void UnpauseQuest()
	{
	}
}
[Token(Token = "0x20001C6")]
public enum Arrowfeedback
{
	[Token(Token = "0x4000BB9")]
	None,
	[Token(Token = "0x4000BBA")]
	Clock,
	[Token(Token = "0x4000BBB")]
	Bobby
}
[Token(Token = "0x20001C7")]
public class AnnouncerVisual : SpawnableObject
{
	[Token(Token = "0x4000BBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Arrowfeedback feedback;

	[Token(Token = "0x4000BBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Transform _fbPos;

	[Token(Token = "0x4000BBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private BillboardUI _billboard;

	[Token(Token = "0x6000ABB")]
	[Address(RVA = "0x26EBBC", Offset = "0x26EBBC", VA = "0x26EBBC")]
	public AnnouncerVisual()
	{
	}

	[Token(Token = "0x6000ABC")]
	[Address(RVA = "0x26EBC4", Offset = "0x26EBC4", VA = "0x26EBC4", Slot = "4")]
	public override void Reset()
	{
	}

	[Token(Token = "0x6000ABD")]
	[Address(RVA = "0x26ED14", Offset = "0x26ED14", VA = "0x26ED14")]
	private void Start()
	{
	}

	[Token(Token = "0x6000ABE")]
	[Address(RVA = "0x26EBC8", Offset = "0x26EBC8", VA = "0x26EBC8")]
	private void Initialize()
	{
	}

	[Token(Token = "0x6000ABF")]
	[Address(RVA = "0x26ED18", Offset = "0x26ED18", VA = "0x26ED18", Slot = "5")]
	public override void ShutDown()
	{
	}
}
[Token(Token = "0x20001C8")]
public class BillboardUI : SpawnableObject
{
	[Token(Token = "0x4000BBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Transform target;

	[Token(Token = "0x4000BC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Transform _head;

	[Token(Token = "0x4000BC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Tween tween;

	[Token(Token = "0x4000BC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 baseScale;

	[Token(Token = "0x6000AC0")]
	[Address(RVA = "0x274684", Offset = "0x274684", VA = "0x274684")]
	public BillboardUI()
	{
	}

	[Token(Token = "0x6000AC1")]
	[Address(RVA = "0x27468C", Offset = "0x27468C", VA = "0x27468C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AC2")]
	[Address(RVA = "0x2747E4", Offset = "0x2747E4", VA = "0x2747E4", Slot = "4")]
	public override void Reset()
	{
	}

	[Token(Token = "0x6000AC3")]
	[Address(RVA = "0x26EDD8", Offset = "0x26EDD8", VA = "0x26EDD8")]
	public void Kill()
	{
	}

	[Token(Token = "0x6000AC4")]
	[Address(RVA = "0x2749B4", Offset = "0x2749B4", VA = "0x2749B4")]
	public void Delete()
	{
	}

	[Token(Token = "0x6000AC5")]
	[Address(RVA = "0x2749DC", Offset = "0x2749DC", VA = "0x2749DC")]
	private void Update()
	{
	}
}
[Token(Token = "0x20001C9")]
public class ButtonScript : MonoBehaviour
{
	[Token(Token = "0x20001CA")]
	public enum OnButtonClick
	{
		[Token(Token = "0x4000BD8")]
		dealClosed,
		[Token(Token = "0x4000BD9")]
		dealRessourcesWindow,
		[Token(Token = "0x4000BDA")]
		dealToolsWindow,
		[Token(Token = "0x4000BDB")]
		dealRootWindow,
		[Token(Token = "0x4000BDC")]
		dealFurnitureWindow,
		[Token(Token = "0x4000BDD")]
		dealSpecialWindow,
		[Token(Token = "0x4000BDE")]
		dealJobWindow,
		[Token(Token = "0x4000BDF")]
		AddOne,
		[Token(Token = "0x4000BE0")]
		RemoveOne,
		[Token(Token = "0x4000BE1")]
		balanceTheDeal,
		[Token(Token = "0x4000BE2")]
		completeJob,
		[Token(Token = "0x4000BE3")]
		endLevel,
		[Token(Token = "0x4000BE4")]
		okAnnouncer
	}

	[Token(Token = "0x2000350")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16B864", Offset = "0x16B864")]
	private sealed class <Holding>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4001365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal OnButtonClick c;

		[Token(Token = "0x4001366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal ButtonScript $this;

		[Token(Token = "0x4001367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal object $current;

		[Token(Token = "0x4001368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal bool $disposing;

		[Token(Token = "0x4001369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal int $PC;

		[Token(Token = "0x170002F7")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6001900")]
			[Address(RVA = "0x27B870", Offset = "0x27B870", VA = "0x27B870", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001901")]
			[Address(RVA = "0x27B878", Offset = "0x27B878", VA = "0x27B878", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018FE")]
		[Address(RVA = "0x27B5D8", Offset = "0x27B5D8", VA = "0x27B5D8")]
		[DebuggerHidden]
		public <Holding>c__Iterator0()
		{
		}

		[Token(Token = "0x60018FF")]
		[Address(RVA = "0x27B5E0", Offset = "0x27B5E0", VA = "0x27B5E0", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001902")]
		[Address(RVA = "0x27B880", Offset = "0x27B880", VA = "0x27B880", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001903")]
		[Address(RVA = "0x27B894", Offset = "0x27B894", VA = "0x27B894", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4000BC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public OnButtonClick onButtonClick;

	[Token(Token = "0x4000BC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int intValue;

	[Token(Token = "0x4000BC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	internal SpawnableObject[] objectsToComplete;

	[Token(Token = "0x4000BC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color couleurDeBase;

	[Token(Token = "0x4000BC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color couleurHover;

	[Token(Token = "0x4000BC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color couleurButtonClicked;

	[Token(Token = "0x4000BC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Color pinnedColorOnly;

	[Token(Token = "0x4000BCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Color sellColorTampon;

	[Token(Token = "0x4000BCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool isHovering;

	[Token(Token = "0x4000BCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private ButtonAnimator banim;

	[Token(Token = "0x4000BCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private TraderMaster tablet;

	[Token(Token = "0x4000BCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private BuyButtonWrapper buyButtonScript;

	[Token(Token = "0x4000BCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Image leBoutonColoring;

	[Token(Token = "0x4000BD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Coroutine holdCoroutine;

	[Token(Token = "0x4000BD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool active;

	[Token(Token = "0x4000BD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	private bool hold;

	[Token(Token = "0x4000BD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float delayMeasure;

	[Token(Token = "0x4000BD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float delaiHold;

	[Token(Token = "0x4000BD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private uint AudioOver;

	[Token(Token = "0x4000BD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private uint AudioClick;

	[Token(Token = "0x6000AC6")]
	[Address(RVA = "0x27A5F8", Offset = "0x27A5F8", VA = "0x27A5F8")]
	public ButtonScript()
	{
	}

	[Token(Token = "0x6000AC7")]
	[Address(RVA = "0x27A648", Offset = "0x27A648", VA = "0x27A648")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AC8")]
	[Address(RVA = "0x27A9B0", Offset = "0x27A9B0", VA = "0x27A9B0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AC9")]
	[Address(RVA = "0x27AA34", Offset = "0x27AA34", VA = "0x27AA34")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x6000ACA")]
	[Address(RVA = "0x27AD74", Offset = "0x27AD74", VA = "0x27AD74")]
	private void OnTriggerStay(Collider col)
	{
	}

	[Token(Token = "0x6000ACB")]
	[Address(RVA = "0x27B1D0", Offset = "0x27B1D0", VA = "0x27B1D0")]
	private void OnTriggerExit(Collider col)
	{
	}

	[Token(Token = "0x6000ACC")]
	[Address(RVA = "0x27AEE8", Offset = "0x27AEE8", VA = "0x27AEE8")]
	private void Transition()
	{
	}

	[Token(Token = "0x6000ACD")]
	[Address(RVA = "0x27B3B0", Offset = "0x27B3B0", VA = "0x27B3B0")]
	public void refreshButtonUI()
	{
	}

	[Token(Token = "0x6000ACE")]
	[Address(RVA = "0x27B318", Offset = "0x27B318", VA = "0x27B318")]
	[DebuggerHidden]
	private IEnumerator Holding(OnButtonClick c)
	{
		return null;
	}
}
[Token(Token = "0x20001CB")]
public enum DealerListSignature
{
	[Token(Token = "0x4000BE6")]
	ressources,
	[Token(Token = "0x4000BE7")]
	tools,
	[Token(Token = "0x4000BE8")]
	furniture
}
[Token(Token = "0x20001CC")]
public class BuyButtonWrapper : SpawnableObject
{
	[Token(Token = "0x4000BE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool detailedWrapper;

	[Token(Token = "0x4000BEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[HideInInspector]
	public GameObject dealObject;

	[Token(Token = "0x4000BEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public int amountInStore;

	[Token(Token = "0x4000BEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public int amountWanted;

	[Token(Token = "0x4000BED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public int cigaretteValue;

	[Token(Token = "0x4000BEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[HideInInspector]
	public int percentageValue;

	[Token(Token = "0x4000BEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public int dataRef;

	[Token(Token = "0x4000BF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[HideInInspector]
	public DealerListSignature type;

	[Token(Token = "0x4000BF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Ressource ressourceScript;

	[Token(Token = "0x4000BF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[HideInInspector]
	public Sprite iconToDisplay;

	[Token(Token = "0x4000BF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Image iconImage;

	[Token(Token = "0x4000BF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private TextMeshProUGUI textDisplay;

	[Token(Token = "0x4000BF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private TextMeshProUGUI textDescriptionDisplay;

	[Token(Token = "0x4000BF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private TextMeshProUGUI textNumberStore;

	[Token(Token = "0x4000BF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private TextMeshProUGUI textNumberWanted;

	[Token(Token = "0x4000BF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private TextMeshProUGUI priceAmount;

	[Token(Token = "0x4000BF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private TextMeshProUGUI pricePercentage;

	[Token(Token = "0x4000BFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Image buyArrowImage;

	[Token(Token = "0x4000BFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Image sellArrowImage;

	[Token(Token = "0x4000BFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Animator priceAnim;

	[Token(Token = "0x4000BFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool refValid;

	[Token(Token = "0x4000BFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Image Black;

	[Token(Token = "0x4000BFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Image Soldout;

	[Token(Token = "0x170000E4")]
	private TabReader reader
	{
		[Token(Token = "0x6000AD0")]
		[Address(RVA = "0x27B920", Offset = "0x27B920", VA = "0x27B920")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000ACF")]
	[Address(RVA = "0x27B918", Offset = "0x27B918", VA = "0x27B918")]
	public BuyButtonWrapper()
	{
	}

	[Token(Token = "0x6000AD1")]
	[Address(RVA = "0x27B984", Offset = "0x27B984", VA = "0x27B984")]
	public void SimpleRefreshUI()
	{
	}

	[Token(Token = "0x6000AD2")]
	[Address(RVA = "0x27C0BC", Offset = "0x27C0BC", VA = "0x27C0BC")]
	public void RefreshUI()
	{
	}

	[Token(Token = "0x6000AD3")]
	[Address(RVA = "0x271620", Offset = "0x271620", VA = "0x271620")]
	public void AddOne()
	{
	}

	[Token(Token = "0x6000AD4")]
	[Address(RVA = "0x271960", Offset = "0x271960", VA = "0x271960")]
	public void RemoveOne()
	{
	}

	[Token(Token = "0x6000AD5")]
	[Address(RVA = "0x27BC74", Offset = "0x27BC74", VA = "0x27BC74")]
	public void CheckButtonColors()
	{
	}

	[Token(Token = "0x6000AD6")]
	[Address(RVA = "0x27C95C", Offset = "0x27C95C", VA = "0x27C95C")]
	private void GetReferences()
	{
	}

	[Token(Token = "0x6000AD7")]
	[Address(RVA = "0x27CF8C", Offset = "0x27CF8C", VA = "0x27CF8C")]
	internal void AnimItUp()
	{
	}

	[Token(Token = "0x6000AD8")]
	[Address(RVA = "0x27D460", Offset = "0x27D460", VA = "0x27D460")]
	private void AnimDelay(string trigger)
	{
	}

	[Token(Token = "0x6000AD9")]
	[Address(RVA = "0x27BBF4", Offset = "0x27BBF4", VA = "0x27BBF4")]
	public List<BuyingData> GetList(DealerListSignature t)
	{
		return null;
	}
}
[Token(Token = "0x20001CD")]
public class CameraLookAt : MonoBehaviour
{
	[Token(Token = "0x2000351")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16B954", Offset = "0x16B954")]
	private sealed class <lifeOfText>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x400136A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal Color <c>__0;

		[Token(Token = "0x400136B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal float <f>__1;

		[Token(Token = "0x400136C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal float <percente>__2;

		[Token(Token = "0x400136D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal CameraLookAt $this;

		[Token(Token = "0x400136E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal object $current;

		[Token(Token = "0x400136F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal bool $disposing;

		[Token(Token = "0x4001370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		internal int $PC;

		[Token(Token = "0x170002F9")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6001906")]
			[Address(RVA = "0x27EEB4", Offset = "0x27EEB4", VA = "0x27EEB4", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002FA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001907")]
			[Address(RVA = "0x27EEBC", Offset = "0x27EEBC", VA = "0x27EEBC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001904")]
		[Address(RVA = "0x27EBC4", Offset = "0x27EBC4", VA = "0x27EBC4")]
		[DebuggerHidden]
		public <lifeOfText>c__Iterator0()
		{
		}

		[Token(Token = "0x6001905")]
		[Address(RVA = "0x27EBCC", Offset = "0x27EBCC", VA = "0x27EBCC", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001908")]
		[Address(RVA = "0x27EEC4", Offset = "0x27EEC4", VA = "0x27EEC4", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001909")]
		[Address(RVA = "0x27EED8", Offset = "0x27EED8", VA = "0x27EED8", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4000C00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private GameObject cam;

	[Token(Token = "0x4000C01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private GameObject textObj;

	[Token(Token = "0x4000C02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private TextMeshProUGUI textScr;

	[Token(Token = "0x4000C03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Lifetime;

	[Token(Token = "0x4000C04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public AnimationCurve Speed;

	[Token(Token = "0x4000C05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float MaxHeight;

	[Token(Token = "0x4000C06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public string Event;

	[Token(Token = "0x6000ADA")]
	[Address(RVA = "0x27E674", Offset = "0x27E674", VA = "0x27E674")]
	public CameraLookAt()
	{
	}

	[Token(Token = "0x6000ADB")]
	[Address(RVA = "0x27E68C", Offset = "0x27E68C", VA = "0x27E68C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000ADC")]
	[Address(RVA = "0x27EA0C", Offset = "0x27EA0C", VA = "0x27EA0C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000ADD")]
	[Address(RVA = "0x270740", Offset = "0x270740", VA = "0x270740")]
	public void Numerique(string leMontant)
	{
	}

	[Token(Token = "0x6000ADE")]
	[Address(RVA = "0x27E98C", Offset = "0x27E98C", VA = "0x27E98C")]
	[DebuggerHidden]
	private IEnumerator lifeOfText()
	{
		return null;
	}
}
[Token(Token = "0x20001CE")]
public class FouilleDisplayWrapper : SpawnableObject
{
	[Token(Token = "0x4000C07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Image icon;

	[Token(Token = "0x4000C08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public TextMeshProUGUI qtyText;

	[Token(Token = "0x6000ADF")]
	[Address(RVA = "0x210BE0", Offset = "0x210BE0", VA = "0x210BE0")]
	public FouilleDisplayWrapper()
	{
	}

	[Token(Token = "0x6000AE0")]
	[Address(RVA = "0x210468", Offset = "0x210468", VA = "0x210468")]
	public void Setup(string craftName, string qty)
	{
	}
}
[Token(Token = "0x20001CF")]
public enum HintAnim
{
	[Token(Token = "0x4000C0A")]
	Grab,
	[Token(Token = "0x4000C0B")]
	Thumb,
	[Token(Token = "0x4000C0C")]
	GrabNThumb,
	[Token(Token = "0x4000C0D")]
	Fist,
	[Token(Token = "0x4000C0E")]
	Warning,
	[Token(Token = "0x4000C0F")]
	Nothing
}
[Token(Token = "0x20001D0")]
public class Hint : MonoBehaviour
{
	[Token(Token = "0x4000C10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[HideInInspector]
	public NVRHand hand;

	[Token(Token = "0x4000C11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[HideInInspector]
	public bool active;

	[Token(Token = "0x4000C12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Transform papa;

	[Token(Token = "0x4000C13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform head;

	[Token(Token = "0x4000C14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Animator anim;

	[Token(Token = "0x4000C15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private TextMeshProUGUI txtImg;

	[Token(Token = "0x4000C16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private TextMeshProUGUI txtSolo;

	[Token(Token = "0x4000C17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private TextMeshProUGUI txt;

	[Token(Token = "0x6000AE1")]
	[Address(RVA = "0x226FE0", Offset = "0x226FE0", VA = "0x226FE0")]
	public Hint()
	{
	}

	[Token(Token = "0x6000AE2")]
	[Address(RVA = "0x226FE8", Offset = "0x226FE8", VA = "0x226FE8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AE3")]
	[Address(RVA = "0x2270A0", Offset = "0x2270A0", VA = "0x2270A0")]
	private void Init(Scene scene, LoadSceneMode mode)
	{
	}

	[Token(Token = "0x6000AE4")]
	[Address(RVA = "0x2273A8", Offset = "0x2273A8", VA = "0x2273A8")]
	public void setHint(string text, HintAnim type, bool overrideHint)
	{
	}

	[Token(Token = "0x6000AE5")]
	[Address(RVA = "0x2278C4", Offset = "0x2278C4", VA = "0x2278C4")]
	public void PopIn()
	{
	}

	[Token(Token = "0x6000AE6")]
	[Address(RVA = "0x2272D8", Offset = "0x2272D8", VA = "0x2272D8")]
	public void PopOut()
	{
	}

	[Token(Token = "0x6000AE7")]
	[Address(RVA = "0x2277DC", Offset = "0x2277DC", VA = "0x2277DC")]
	private void ResetTexts()
	{
	}

	[Token(Token = "0x6000AE8")]
	[Address(RVA = "0x227998", Offset = "0x227998", VA = "0x227998")]
	private void Update()
	{
	}
}
[Token(Token = "0x20001D1")]
public class HintGenerator : MonoBehaviour
{
	[Token(Token = "0x2000352")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16B9E4", Offset = "0x16B9E4")]
	private sealed class <MaterialBlink>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4001371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal float <i>__1;

		[Token(Token = "0x4001372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal MeshRenderer[] $locvar0;

		[Token(Token = "0x4001373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal int $locvar1;

		[Token(Token = "0x4001374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal float <i>__2;

		[Token(Token = "0x4001375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal MeshRenderer[] $locvar2;

		[Token(Token = "0x4001376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal int $locvar3;

		[Token(Token = "0x4001377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal HintGenerator $this;

		[Token(Token = "0x4001378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal object $current;

		[Token(Token = "0x4001379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal bool $disposing;

		[Token(Token = "0x400137A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		internal int $PC;

		[Token(Token = "0x170002FB")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x600190C")]
			[Address(RVA = "0x22A1A0", Offset = "0x22A1A0", VA = "0x22A1A0", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002FC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600190D")]
			[Address(RVA = "0x22A1A8", Offset = "0x22A1A8", VA = "0x22A1A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600190A")]
		[Address(RVA = "0x2298A4", Offset = "0x2298A4", VA = "0x2298A4")]
		[DebuggerHidden]
		public <MaterialBlink>c__Iterator0()
		{
		}

		[Token(Token = "0x600190B")]
		[Address(RVA = "0x229D50", Offset = "0x229D50", VA = "0x229D50", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600190E")]
		[Address(RVA = "0x22A1B0", Offset = "0x22A1B0", VA = "0x22A1B0", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x600190F")]
		[Address(RVA = "0x22A1C4", Offset = "0x22A1C4", VA = "0x22A1C4", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4000C18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Color blinkColor;

	[Token(Token = "0x4000C19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float lerpMovement;

	[Token(Token = "0x4000C1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject prefabTexte;

	[Token(Token = "0x4000C1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private GameObject monTexteObj;

	[Token(Token = "0x4000C1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform aimT;

	[Token(Token = "0x4000C1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private GameObject endObj;

	[Token(Token = "0x4000C1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform cameraT;

	[Token(Token = "0x4000C1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Transform[] controllerChildren;

	[Token(Token = "0x4000C20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private TextMeshProUGUI tooltipText;

	[Token(Token = "0x4000C21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private MeshRenderer[] meshs;

	[Token(Token = "0x4000C22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private LineRenderer theLine;

	[Token(Token = "0x4000C23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Coroutine blinking;

	[Token(Token = "0x4000C24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NVRHand maMain;

	[Token(Token = "0x4000C25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	internal bool isHinting;

	[Token(Token = "0x4000C26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	private bool goingAway;

	[Token(Token = "0x4000C27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Color matColorlCache;

	[Token(Token = "0x4000C28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Animator anim;

	[Token(Token = "0x4000C29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private bool newHintComing;

	[Token(Token = "0x4000C2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private string nextStringCache;

	[Token(Token = "0x4000C2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private NVRButtons nextButtonCache;

	[Token(Token = "0x4000C2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private string currentTooltip;

	[Token(Token = "0x4000C2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<string> noShowList;

	[Token(Token = "0x6000AE9")]
	[Address(RVA = "0x227CD4", Offset = "0x227CD4", VA = "0x227CD4")]
	public HintGenerator()
	{
	}

	[Token(Token = "0x6000AEA")]
	[Address(RVA = "0x227CDC", Offset = "0x227CDC", VA = "0x227CDC")]
	private void init(Scene scene, LoadSceneMode mode)
	{
	}

	[Token(Token = "0x6000AEB")]
	[Address(RVA = "0x227FE0", Offset = "0x227FE0", VA = "0x227FE0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AEC")]
	[Address(RVA = "0x22833C", Offset = "0x22833C", VA = "0x22833C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AED")]
	[Address(RVA = "0x228CB4", Offset = "0x228CB4", VA = "0x228CB4")]
	private void lineUpdate()
	{
	}

	[Token(Token = "0x6000AEE")]
	[Address(RVA = "0x229684", Offset = "0x229684", VA = "0x229684")]
	private void Refresh()
	{
	}

	[Token(Token = "0x6000AEF")]
	[Address(RVA = "0x229820", Offset = "0x229820", VA = "0x229820")]
	public static void RefreshComponents(NVRHand hand)
	{
	}

	[Token(Token = "0x6000AF0")]
	[Address(RVA = "0x228DA4", Offset = "0x228DA4", VA = "0x228DA4")]
	private void ShowText(NVRButtons button, string text, bool highlightButton = true)
	{
	}

	[Token(Token = "0x6000AF1")]
	[Address(RVA = "0x229824", Offset = "0x229824", VA = "0x229824")]
	[DebuggerHidden]
	private IEnumerator MaterialBlink()
	{
		return null;
	}

	[Token(Token = "0x6000AF2")]
	[Address(RVA = "0x228AFC", Offset = "0x228AFC", VA = "0x228AFC")]
	private void HideText()
	{
	}

	[Token(Token = "0x6000AF3")]
	[Address(RVA = "0x2298AC", Offset = "0x2298AC", VA = "0x2298AC")]
	private static HintGenerator GetControllerButtonHints(NVRHand hand)
	{
		return null;
	}

	[Token(Token = "0x6000AF4")]
	[Address(RVA = "0x2299BC", Offset = "0x2299BC", VA = "0x2299BC")]
	public static void ShowTextHint(NVRHand hand, NVRButtons button, string text, bool highlightButton = true)
	{
	}

	[Token(Token = "0x6000AF5")]
	[Address(RVA = "0x229AB8", Offset = "0x229AB8", VA = "0x229AB8")]
	public static void HideAllTextHint()
	{
	}

	[Token(Token = "0x6000AF6")]
	[Address(RVA = "0x229BE0", Offset = "0x229BE0", VA = "0x229BE0")]
	public static void HideTextHint(NVRHand hand)
	{
	}
}
[Token(Token = "0x20001D2")]
public class HintManager : MonoBehaviour
{
	[Token(Token = "0x4000C2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static HintManager One;

	[Token(Token = "0x4000C2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Hint LeftHint;

	[Token(Token = "0x4000C30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Hint RightHint;

	[Token(Token = "0x4000C31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private NVRPlayer player;

	[Token(Token = "0x170000E5")]
	public bool LeftHinting
	{
		[Token(Token = "0x6000AF9")]
		[Address(RVA = "0x21F2BC", Offset = "0x21F2BC", VA = "0x21F2BC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000E6")]
	public bool RightHinting
	{
		[Token(Token = "0x6000AFA")]
		[Address(RVA = "0x21F2DC", Offset = "0x21F2DC", VA = "0x21F2DC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000AF8")]
	[Address(RVA = "0x22A248", Offset = "0x22A248", VA = "0x22A248")]
	public HintManager()
	{
	}

	[Token(Token = "0x6000AFB")]
	[Address(RVA = "0x22A250", Offset = "0x22A250", VA = "0x22A250")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AFC")]
	[Address(RVA = "0x22A314", Offset = "0x22A314", VA = "0x22A314")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AFD")]
	[Address(RVA = "0x21F2FC", Offset = "0x21F2FC", VA = "0x21F2FC")]
	public void ShowHint(NVRHand hand, string text, HintAnim type, bool overrideHint)
	{
	}

	[Token(Token = "0x6000AFE")]
	[Address(RVA = "0x21F46C", Offset = "0x21F46C", VA = "0x21F46C")]
	public void HideHint(NVRHand hand)
	{
	}

	[Token(Token = "0x6000AFF")]
	[Address(RVA = "0x2067D8", Offset = "0x2067D8", VA = "0x2067D8")]
	public void HideAllHint()
	{
	}
}
[Token(Token = "0x20001D3")]
public enum JobAnims
{
	[Token(Token = "0x4000C33")]
	BubbleAppear,
	[Token(Token = "0x4000C34")]
	CanBeCompleted,
	[Token(Token = "0x4000C35")]
	CannotBeCompleted,
	[Token(Token = "0x4000C36")]
	BubbleDisappear
}
[Token(Token = "0x20001D4")]
public class JobBubbleWrapper : MonoBehaviour
{
	[Token(Token = "0x4000C37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	internal DealerJobScript jobScript;

	[Token(Token = "0x4000C38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject objectiveWrapperTemplate;

	[Token(Token = "0x4000C39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public GameObject rewardWrapperTemplate;

	[Token(Token = "0x4000C3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public int prisonID;

	[Token(Token = "0x4000C3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public int jobID;

	[Token(Token = "0x4000C3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string jobTitle;

	[Token(Token = "0x4000C3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public string jobDudeName;

	[Token(Token = "0x4000C3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string jobRewardName;

	[Token(Token = "0x4000C3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Transform[] objPos;

	[Token(Token = "0x4000C40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform repPos;

	[Token(Token = "0x4000C41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Transform[] rewardPos;

	[Token(Token = "0x4000C42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Animator anim;

	[Token(Token = "0x4000C43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	internal TextMeshProUGUI jobTitleText;

	[Token(Token = "0x4000C44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	internal TextMeshProUGUI jobDudeText;

	[Token(Token = "0x4000C45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	internal TextMeshProUGUI jobRewartText;

	[Token(Token = "0x4000C46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	internal GameObject completeButton;

	[Token(Token = "0x4000C47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	internal List<JobRewardWrapper> jobRewardList;

	[Token(Token = "0x4000C48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	internal List<JobObjectiveWrapper> jobObjectivesList;

	[Token(Token = "0x4000C49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private GenericTooltip hint;

	[Token(Token = "0x4000C4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GenericTooltip rewardHint;

	[Token(Token = "0x6000B00")]
	[Address(RVA = "0x22B810", Offset = "0x22B810", VA = "0x22B810")]
	public JobBubbleWrapper()
	{
	}

	[Token(Token = "0x6000B01")]
	[Address(RVA = "0x22B8D0", Offset = "0x22B8D0", VA = "0x22B8D0")]
	private void GetReferences()
	{
	}

	[Token(Token = "0x6000B02")]
	[Address(RVA = "0x22BB84", Offset = "0x22BB84", VA = "0x22BB84")]
	public void refreshHint()
	{
	}

	[Token(Token = "0x6000B03")]
	[Address(RVA = "0x22BBC4", Offset = "0x22BBC4", VA = "0x22BBC4")]
	internal void SetJob()
	{
	}

	[Token(Token = "0x6000B04")]
	[Address(RVA = "0x22BE4C", Offset = "0x22BE4C", VA = "0x22BE4C")]
	internal void SetObjectives(SubJob[] objectives)
	{
	}

	[Token(Token = "0x6000B05")]
	[Address(RVA = "0x22C2C0", Offset = "0x22C2C0", VA = "0x22C2C0")]
	internal void SetRewards(SubJob[] rewards, SubJob[] specialRewards)
	{
	}

	[Token(Token = "0x6000B06")]
	[Address(RVA = "0x22CA1C", Offset = "0x22CA1C", VA = "0x22CA1C")]
	public void SpawnParticlesIdleLoop()
	{
	}

	[Token(Token = "0x6000B07")]
	[Address(RVA = "0x22CC4C", Offset = "0x22CC4C", VA = "0x22CC4C")]
	public void RefreshJobWindows()
	{
	}

	[Token(Token = "0x6000B08")]
	[Address(RVA = "0x22CC50", Offset = "0x22CC50", VA = "0x22CC50")]
	public void SetAnimTrigger(JobAnims status)
	{
	}
}
[Token(Token = "0x20001D5")]
public class JobObjectiveWrapper : SpawnableObject
{
	[Token(Token = "0x4000C4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[HideInInspector]
	public JobBubbleWrapper jobBubble;

	[Token(Token = "0x4000C4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[HideInInspector]
	public int jobID;

	[Token(Token = "0x4000C4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public int objectiveID;

	[Token(Token = "0x4000C4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public string objectName;

	[Token(Token = "0x4000C4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public string qtyNeeded;

	[Token(Token = "0x4000C50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[HideInInspector]
	public string qtyOwned;

	[Token(Token = "0x4000C51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public TextMeshProUGUI qtyNeededText;

	[Token(Token = "0x4000C52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[HideInInspector]
	public TextMeshProUGUI qtyOwnedText;

	[Token(Token = "0x4000C53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Image iconImage;

	[Token(Token = "0x4000C54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[HideInInspector]
	public GameObject completeButton;

	[Token(Token = "0x4000C55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public Sprite icon;

	[Token(Token = "0x6000B09")]
	[Address(RVA = "0x2316B8", Offset = "0x2316B8", VA = "0x2316B8")]
	public JobObjectiveWrapper()
	{
	}

	[Token(Token = "0x6000B0A")]
	[Address(RVA = "0x2316C0", Offset = "0x2316C0", VA = "0x2316C0")]
	private void GetReferences()
	{
	}

	[Token(Token = "0x6000B0B")]
	[Address(RVA = "0x231838", Offset = "0x231838", VA = "0x231838")]
	public void SetObjective()
	{
	}

	[Token(Token = "0x6000B0C")]
	[Address(RVA = "0x2318B8", Offset = "0x2318B8", VA = "0x2318B8")]
	public void RefreshUI()
	{
	}
}
[Token(Token = "0x20001D6")]
public class JobRewardWrapper : SpawnableObject
{
	[Token(Token = "0x4000C56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[HideInInspector]
	public string objectName;

	[Token(Token = "0x4000C57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[HideInInspector]
	public int qty;

	[Token(Token = "0x4000C58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public Sprite icon;

	[Token(Token = "0x4000C59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Sprite repIcon;

	[Token(Token = "0x4000C5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Sprite escapeIcon;

	[Token(Token = "0x4000C5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[HideInInspector]
	public Image iconImage;

	[Token(Token = "0x4000C5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] plusImages;

	[Token(Token = "0x6000B0D")]
	[Address(RVA = "0x233A14", Offset = "0x233A14", VA = "0x233A14")]
	public JobRewardWrapper()
	{
	}

	[Token(Token = "0x6000B0E")]
	[Address(RVA = "0x233A1C", Offset = "0x233A1C", VA = "0x233A1C")]
	private void GetReferences()
	{
	}

	[Token(Token = "0x6000B0F")]
	[Address(RVA = "0x233ACC", Offset = "0x233ACC", VA = "0x233ACC")]
	internal void SetReward()
	{
	}

	[Token(Token = "0x6000B10")]
	[Address(RVA = "0x233B04", Offset = "0x233B04", VA = "0x233B04")]
	internal void CalculateRewardPlus()
	{
	}

	[Token(Token = "0x6000B11")]
	[Address(RVA = "0x233C10", Offset = "0x233C10", VA = "0x233C10")]
	internal void CalculateRepPlus()
	{
	}
}
[Token(Token = "0x20001D7")]
public class MorningSearchDisplay : MonoBehaviour
{
	[Token(Token = "0x4000C5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Animator anim;

	[Token(Token = "0x4000C5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public TextMeshProUGUI[] _displayText;

	[Token(Token = "0x6000B12")]
	[Address(RVA = "0x250AD8", Offset = "0x250AD8", VA = "0x250AD8")]
	public MorningSearchDisplay()
	{
	}

	[Token(Token = "0x6000B13")]
	[Address(RVA = "0x250AE0", Offset = "0x250AE0", VA = "0x250AE0")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000B14")]
	[Address(RVA = "0x250C04", Offset = "0x250C04", VA = "0x250C04")]
	public void LaunchAnim()
	{
	}

	[Token(Token = "0x6000B15")]
	[Address(RVA = "0x250C7C", Offset = "0x250C7C", VA = "0x250C7C")]
	public void AnimDone()
	{
	}
}
[Token(Token = "0x20001D8")]
public class NameGenerator : MonoBehaviour
{
	[Token(Token = "0x4000C5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string[] firstNames;

	[Token(Token = "0x4000C60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string[] akaNames;

	[Token(Token = "0x4000C61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public string[] lastNames;

	[Token(Token = "0x4000C62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool initilized;

	[Token(Token = "0x6000B16")]
	[Address(RVA = "0x250D34", Offset = "0x250D34", VA = "0x250D34")]
	public NameGenerator()
	{
	}

	[Token(Token = "0x6000B17")]
	[Address(RVA = "0x250D3C", Offset = "0x250D3C", VA = "0x250D3C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B18")]
	[Address(RVA = "0x250D40", Offset = "0x250D40", VA = "0x250D40")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000B19")]
	[Address(RVA = "0x250DF4", Offset = "0x250DF4", VA = "0x250DF4")]
	public string GetFirstName()
	{
		return null;
	}

	[Token(Token = "0x6000B1A")]
	[Address(RVA = "0x250E70", Offset = "0x250E70", VA = "0x250E70")]
	public string GetAkaName()
	{
		return null;
	}

	[Token(Token = "0x6000B1B")]
	[Address(RVA = "0x250EEC", Offset = "0x250EEC", VA = "0x250EEC")]
	public string GetLastName()
	{
		return null;
	}
}
[Token(Token = "0x20001D9")]
public class ObjectIcon : MonoBehaviour
{
	[Token(Token = "0x4000C63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject objectLinked;

	[Token(Token = "0x4000C64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Image _itemIcon;

	[Token(Token = "0x4000C65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Ressource _ressourceToDisplay;

	[Token(Token = "0x6000B1C")]
	[Address(RVA = "0x32D518", Offset = "0x32D518", VA = "0x32D518")]
	public ObjectIcon()
	{
	}

	[Token(Token = "0x6000B1D")]
	[Address(RVA = "0x32D520", Offset = "0x32D520", VA = "0x32D520")]
	private void Start()
	{
	}
}
[Token(Token = "0x20001DA")]
public class ArrowButtonScript : MonoBehaviour
{
	[Token(Token = "0x2000353")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16BB64", Offset = "0x16BB64")]
	private sealed class <Transition>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x400137B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal float delai;

		[Token(Token = "0x400137C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal ArrowButtonScript $this;

		[Token(Token = "0x400137D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal object $current;

		[Token(Token = "0x400137E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal bool $disposing;

		[Token(Token = "0x400137F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal int $PC;

		[Token(Token = "0x170002FD")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6001912")]
			[Address(RVA = "0x271CA0", Offset = "0x271CA0", VA = "0x271CA0", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002FE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001913")]
			[Address(RVA = "0x271CA8", Offset = "0x271CA8", VA = "0x271CA8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001910")]
		[Address(RVA = "0x271328", Offset = "0x271328", VA = "0x271328")]
		[DebuggerHidden]
		public <Transition>c__Iterator0()
		{
		}

		[Token(Token = "0x6001911")]
		[Address(RVA = "0x271330", Offset = "0x271330", VA = "0x271330", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001914")]
		[Address(RVA = "0x271CB0", Offset = "0x271CB0", VA = "0x271CB0", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001915")]
		[Address(RVA = "0x271CC4", Offset = "0x271CC4", VA = "0x271CC4", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4000C66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string onButtonClick;

	[Token(Token = "0x4000C67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string stringValueOptional;

	[Token(Token = "0x4000C68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Color couleurDeBase;

	[Token(Token = "0x4000C69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Color couleurHover;

	[Token(Token = "0x4000C6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Color couleurButtonClicked;

	[Token(Token = "0x4000C6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float tempsDelaiClics;

	[Token(Token = "0x4000C6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private BuyButtonWrapper buyButtonScript;

	[Token(Token = "0x4000C6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private AudioSource audiosource;

	[Token(Token = "0x4000C6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Image leBouton;

	[Token(Token = "0x6000B1E")]
	[Address(RVA = "0x270E50", Offset = "0x270E50", VA = "0x270E50")]
	public ArrowButtonScript()
	{
	}

	[Token(Token = "0x6000B1F")]
	[Address(RVA = "0x270E58", Offset = "0x270E58", VA = "0x270E58")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B20")]
	[Address(RVA = "0x270EF8", Offset = "0x270EF8", VA = "0x270EF8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B21")]
	[Address(RVA = "0x270EFC", Offset = "0x270EFC", VA = "0x270EFC")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x6000B22")]
	[Address(RVA = "0x270FE4", Offset = "0x270FE4", VA = "0x270FE4")]
	private void OnTriggerStay(Collider col)
	{
	}

	[Token(Token = "0x6000B23")]
	[Address(RVA = "0x271240", Offset = "0x271240", VA = "0x271240")]
	private void OnTriggerExit(Collider col)
	{
	}

	[Token(Token = "0x6000B24")]
	[Address(RVA = "0x27119C", Offset = "0x27119C", VA = "0x27119C")]
	[DebuggerHidden]
	private IEnumerator Transition(float delai)
	{
		return null;
	}
}
[Token(Token = "0x20001DB")]
public class OptionDisactivator : MonoBehaviour
{
	[Token(Token = "0x4000C6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject SecondTablet;

	[Token(Token = "0x4000C70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject LIV;

	[Token(Token = "0x4000C71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public GameObject Analytics;

	[Token(Token = "0x6000B25")]
	[Address(RVA = "0x32FAE0", Offset = "0x32FAE0", VA = "0x32FAE0")]
	public OptionDisactivator()
	{
	}

	[Token(Token = "0x6000B26")]
	[Address(RVA = "0x32FAE8", Offset = "0x32FAE8", VA = "0x32FAE8")]
	public void Start()
	{
	}

	[Token(Token = "0x6000B27")]
	[Address(RVA = "0x32FB60", Offset = "0x32FB60", VA = "0x32FB60")]
	private bool IsLIVOnPlatform()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B28")]
	[Address(RVA = "0x32FBF8", Offset = "0x32FBF8", VA = "0x32FBF8")]
	private bool IsAnalyticsOnPlatform()
	{
		return default(bool);
	}
}
[Token(Token = "0x20001DC")]
public class Option
{
	[Token(Token = "0x20001DD")]
	private delegate bool Parser<T>(string input, out T output);

	[Token(Token = "0x4000C72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public bool DefaultLanguage;

	[Token(Token = "0x4000C73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Languages language;

	[Token(Token = "0x4000C74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float musicVolume;

	[Token(Token = "0x4000C75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float sfxVolume;

	[Token(Token = "0x4000C76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool ObserVR;

	[Token(Token = "0x4000C77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool LIVShowHand;

	[Token(Token = "0x4000C78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float posCalX;

	[Token(Token = "0x4000C79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float posCalY;

	[Token(Token = "0x4000C7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float posCalZ;

	[Token(Token = "0x4000C7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float rotCalW;

	[Token(Token = "0x4000C7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float rotCalX;

	[Token(Token = "0x4000C7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float rotCalY;

	[Token(Token = "0x4000C7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float rotCalZ;

	[Token(Token = "0x4000C7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool DefaultStanding;

	[Token(Token = "0x4000C80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public StandingSystemLevel standing;

	[Token(Token = "0x4000C81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16BBC4", Offset = "0x16BBC4")]
	private static Parser<bool> <>f__mg$cache0;

	[Token(Token = "0x4000C82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16BBD4", Offset = "0x16BBD4")]
	private static Parser<float> <>f__mg$cache1;

	[Token(Token = "0x170000E7")]
	public Vector3 PosCal
	{
		[Token(Token = "0x6000B2A")]
		[Address(RVA = "0x32E068", Offset = "0x32E068", VA = "0x32E068")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170000E8")]
	public Quaternion RotCal
	{
		[Token(Token = "0x6000B2B")]
		[Address(RVA = "0x32E0A4", Offset = "0x32E0A4", VA = "0x32E0A4")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x6000B29")]
	[Address(RVA = "0x32E060", Offset = "0x32E060", VA = "0x32E060")]
	private Option()
	{
	}

	[Token(Token = "0x6000B2C")]
	[Address(RVA = "0x32E0EC", Offset = "0x32E0EC", VA = "0x32E0EC")]
	public static Option FromOldSettings(string[] data)
	{
		return null;
	}

	[Token(Token = "0x6000B2D")]
	[Address(RVA = "0x32E210", Offset = "0x32E210", VA = "0x32E210")]
	public static Option FromSettings(string[] data)
	{
		return null;
	}

	[Token(Token = "0x6000B2E")]
	[Address(RVA = "0x32EB78", Offset = "0x32EB78", VA = "0x32EB78")]
	public static Option FromDefaultSettings()
	{
		return null;
	}

	[Token(Token = "0x6000B2F")]
	[Address(RVA = "0x32ED0C", Offset = "0x32ED0C", VA = "0x32ED0C")]
	public static Option FromAllFiles()
	{
		return null;
	}

	[Token(Token = "0x6000B30")]
	[Address(RVA = "0x32EDF4", Offset = "0x32EDF4", VA = "0x32EDF4")]
	public static Option FromAllFiles(out bool fromOldOrNew)
	{
		return null;
	}

	[Token(Token = "0x6000B31")]
	[Address(RVA = "0x32EEF0", Offset = "0x32EEF0", VA = "0x32EEF0")]
	public void Save()
	{
	}

	[Token(Token = "0x6000B32")]
	[Address(RVA = "0x32F020", Offset = "0x32F020", VA = "0x32F020")]
	public void ApplyAll()
	{
	}

	[Token(Token = "0x6000B33")]
	[Address(RVA = "0x32F580", Offset = "0x32F580", VA = "0x32F580", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x6000B34")]
	[Address(RVA = "0x32EA68", Offset = "0x32EA68", VA = "0x32EA68")]
	private static bool Parse(string[] data, int index, bool defaultValue)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B35")]
	[Address(RVA = "0x32E958", Offset = "0x32E958", VA = "0x32E958")]
	private static float Parse(string[] data, int index, float defaultValue)
	{
		return default(float);
	}

	[Token(Token = "0x6000B36")]
	private static T Parse<T>(string[] data, int index, T defaultValue, Parser<T> parser)
	{
		return (T)null;
	}
}
[Token(Token = "0x20001DE")]
public class OptionManager : MonoBehaviour
{
	[Token(Token = "0x2000354")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16BC14", Offset = "0x16BC14")]
	private sealed class <LateStartApply>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4001380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal OptionManager $this;

		[Token(Token = "0x4001381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x4001382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x4001383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x170002FF")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6001918")]
			[Address(RVA = "0x330BCC", Offset = "0x330BCC", VA = "0x330BCC", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000300")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001919")]
			[Address(RVA = "0x330BD4", Offset = "0x330BD4", VA = "0x330BD4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001916")]
		[Address(RVA = "0x32FDE8", Offset = "0x32FDE8", VA = "0x32FDE8")]
		[DebuggerHidden]
		public <LateStartApply>c__Iterator0()
		{
		}

		[Token(Token = "0x6001917")]
		[Address(RVA = "0x330880", Offset = "0x330880", VA = "0x330880", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600191A")]
		[Address(RVA = "0x330BDC", Offset = "0x330BDC", VA = "0x330BDC", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x600191B")]
		[Address(RVA = "0x330BF0", Offset = "0x330BF0", VA = "0x330BF0", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4000C83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Option option;

	[Token(Token = "0x4000C84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x16BBE4", Offset = "0x16BBE4")]
	public Button calibrationButton;

	[Token(Token = "0x4000C85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Slider musicSlider;

	[Token(Token = "0x4000C86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Slider sfxSlider;

	[Token(Token = "0x4000C87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public UIColorSwitch showHandImage;

	[Token(Token = "0x4000C88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI AccessibilityLabel;

	[Token(Token = "0x4000C89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int LanguageCount;

	[Token(Token = "0x4000C8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16BBF4", Offset = "0x16BBF4")]
	private static Action<string> <>f__mg$cache0;

	[Token(Token = "0x6000B3B")]
	[Address(RVA = "0x32FC00", Offset = "0x32FC00", VA = "0x32FC00")]
	public OptionManager()
	{
	}

	[Token(Token = "0x6000B3C")]
	[Address(RVA = "0x32FC08", Offset = "0x32FC08", VA = "0x32FC08")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B3D")]
	[Address(RVA = "0x32FD68", Offset = "0x32FD68", VA = "0x32FD68")]
	[DebuggerHidden]
	public IEnumerator LateStartApply()
	{
		return null;
	}

	[Token(Token = "0x6000B3E")]
	[Address(RVA = "0x32FDF0", Offset = "0x32FDF0", VA = "0x32FDF0")]
	public void ChangeMusicVolume()
	{
	}

	[Token(Token = "0x6000B3F")]
	[Address(RVA = "0x32F144", Offset = "0x32F144", VA = "0x32F144")]
	public static void ApplyMusicVolume(float volume)
	{
	}

	[Token(Token = "0x6000B40")]
	[Address(RVA = "0x32FE5C", Offset = "0x32FE5C", VA = "0x32FE5C")]
	public void ChangeSFXVolume()
	{
	}

	[Token(Token = "0x6000B41")]
	[Address(RVA = "0x32F1DC", Offset = "0x32F1DC", VA = "0x32F1DC")]
	public static void ApplySFXVolume(float volume)
	{
	}

	[Token(Token = "0x6000B42")]
	[Address(RVA = "0x32FEC8", Offset = "0x32FEC8", VA = "0x32FEC8")]
	public void SfxFeedback()
	{
	}

	[Token(Token = "0x6000B43")]
	[Address(RVA = "0x32FF70", Offset = "0x32FF70", VA = "0x32FF70")]
	public void UnityAnalyticsDataPrivacy()
	{
	}

	[Token(Token = "0x6000B44")]
	[Address(RVA = "0x3300A0", Offset = "0x3300A0", VA = "0x3300A0")]
	private void DataPrivacyOnURLReceived(string url)
	{
	}

	[Token(Token = "0x6000B45")]
	[Address(RVA = "0x3300AC", Offset = "0x3300AC", VA = "0x3300AC")]
	private static void DataPrivacyOnFailure(string reason)
	{
	}

	[Token(Token = "0x6000B46")]
	[Address(RVA = "0x330184", Offset = "0x330184", VA = "0x330184")]
	public void ToggleLIVShowHand()
	{
	}

	[Token(Token = "0x6000B47")]
	[Address(RVA = "0x32F140", Offset = "0x32F140", VA = "0x32F140")]
	public static void ApplyLIVShowHand(bool showHand)
	{
	}

	[Token(Token = "0x6000B48")]
	[Address(RVA = "0x3301F0", Offset = "0x3301F0", VA = "0x3301F0")]
	private static void SetToggle(UIColorSwitch image, bool value)
	{
	}

	[Token(Token = "0x6000B49")]
	[Address(RVA = "0x330304", Offset = "0x330304", VA = "0x330304")]
	private static Color ChangeColor(Color color, bool value)
	{
		return default(Color);
	}

	[Token(Token = "0x6000B4A")]
	[Address(RVA = "0x330368", Offset = "0x330368", VA = "0x330368")]
	public void ChangeLangage(int icr)
	{
	}

	[Token(Token = "0x6000B4B")]
	[Address(RVA = "0x3304F4", Offset = "0x3304F4", VA = "0x3304F4")]
	public void ChangeStanding(int icr)
	{
	}

	[Token(Token = "0x6000B4C")]
	[Address(RVA = "0x32F500", Offset = "0x32F500", VA = "0x32F500")]
	public static void ApplyStanding(StandingSystemLevel standing)
	{
	}

	[Token(Token = "0x6000B4D")]
	[Address(RVA = "0x32F0C0", Offset = "0x32F0C0", VA = "0x32F0C0")]
	public static void ApplyLanguage(Languages language)
	{
	}

	[Token(Token = "0x6000B4E")]
	[Address(RVA = "0x330738", Offset = "0x330738", VA = "0x330738")]
	public void ApplyChange()
	{
	}

	[Token(Token = "0x6000B4F")]
	[Address(RVA = "0x3307DC", Offset = "0x3307DC", VA = "0x3307DC")]
	public void LauchCalibration()
	{
	}

	[Token(Token = "0x6000B50")]
	[Address(RVA = "0x32F274", Offset = "0x32F274", VA = "0x32F274")]
	public static void ApplyCalibration(Vector3 posCal, Quaternion rotCal)
	{
	}
}
[Token(Token = "0x20001DF")]
public class SimpleButton : MonoBehaviour
{
	[Token(Token = "0x4000C8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public UnityEvent onPressed;

	[Token(Token = "0x4000C8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public UnityEvent onReleased;

	[Token(Token = "0x4000C8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public UnityEvent onHover;

	[Token(Token = "0x4000C8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool _active;

	[Token(Token = "0x4000C8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private NVRHand _hand;

	[Token(Token = "0x170000E9")]
	public NVRHand hand
	{
		[Token(Token = "0x6000B52")]
		[Address(RVA = "0x29D2AC", Offset = "0x29D2AC", VA = "0x29D2AC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000B51")]
	[Address(RVA = "0x29D2A4", Offset = "0x29D2A4", VA = "0x29D2A4")]
	public SimpleButton()
	{
	}

	[Token(Token = "0x6000B53")]
	[Address(RVA = "0x29D2B4", Offset = "0x29D2B4", VA = "0x29D2B4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B54")]
	[Address(RVA = "0x29D3B4", Offset = "0x29D3B4", VA = "0x29D3B4")]
	private void OnTriggerStay(Collider col)
	{
	}
}
[Token(Token = "0x20001E0")]
public class SimpleSlider : MonoBehaviour
{
	[Token(Token = "0x4000C90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Slider _slider;

	[Token(Token = "0x4000C91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private RectTransform _fillArea;

	[Token(Token = "0x4000C92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private SimpleButton _button;

	[Token(Token = "0x4000C93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float _range;

	[Token(Token = "0x4000C94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 _origin;

	[Token(Token = "0x4000C95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool _following;

	[Token(Token = "0x6000B55")]
	[Address(RVA = "0x29D79C", Offset = "0x29D79C", VA = "0x29D79C")]
	public SimpleSlider()
	{
	}

	[Token(Token = "0x6000B56")]
	[Address(RVA = "0x29D7A4", Offset = "0x29D7A4", VA = "0x29D7A4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B57")]
	[Address(RVA = "0x29DA7C", Offset = "0x29DA7C", VA = "0x29DA7C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B58")]
	[Address(RVA = "0x29DC54", Offset = "0x29DC54", VA = "0x29DC54")]
	private void Follow()
	{
	}

	[Token(Token = "0x6000B59")]
	[Address(RVA = "0x29DC60", Offset = "0x29DC60", VA = "0x29DC60")]
	private void UnFollow()
	{
	}
}
[Token(Token = "0x20001E1")]
public class UIColorSwitch : MonoBehaviour
{
	[Token(Token = "0x4000C96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Color color;

	[Token(Token = "0x4000C97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Image _img;

	[Token(Token = "0x4000C98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16BC74", Offset = "0x16BC74")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x16BC74", Offset = "0x16BC74")]
	private Color <BaseColor>k__BackingField;

	[Token(Token = "0x4000C99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float _time;

	[Token(Token = "0x4000C9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool _switching;

	[Token(Token = "0x170000EA")]
	public Color BaseColor
	{
		[Token(Token = "0x6000B5B")]
		[Address(RVA = "0x4BBCDC", Offset = "0x4BBCDC", VA = "0x4BBCDC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16BCA8", Offset = "0x16BCA8")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x6000B5C")]
		[Address(RVA = "0x4BBCF0", Offset = "0x4BBCF0", VA = "0x4BBCF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16BCB8", Offset = "0x16BCB8")]
		set
		{
		}
	}

	[Token(Token = "0x6000B5A")]
	[Address(RVA = "0x4BBCD4", Offset = "0x4BBCD4", VA = "0x4BBCD4")]
	public UIColorSwitch()
	{
	}

	[Token(Token = "0x6000B5D")]
	[Address(RVA = "0x4BBD00", Offset = "0x4BBD00", VA = "0x4BBD00")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B5E")]
	[Address(RVA = "0x4BBDA4", Offset = "0x4BBDA4", VA = "0x4BBDA4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000B5F")]
	[Address(RVA = "0x4BBF08", Offset = "0x4BBF08", VA = "0x4BBF08")]
	public void Switch()
	{
	}
}
[Token(Token = "0x20001E2")]
public class PhysicalButton : NVRInteractable
{
	[Token(Token = "0x2000355")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16BCD8", Offset = "0x16BCD8")]
	private sealed class <LateStart>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4001384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal PhysicalButton $this;

		[Token(Token = "0x4001385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x4001386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x4001387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x17000301")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x600191E")]
			[Address(RVA = "0x33500C", Offset = "0x33500C", VA = "0x33500C", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000302")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600191F")]
			[Address(RVA = "0x335014", Offset = "0x335014", VA = "0x335014", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600191C")]
		[Address(RVA = "0x3348D4", Offset = "0x3348D4", VA = "0x3348D4")]
		[DebuggerHidden]
		public <LateStart>c__Iterator0()
		{
		}

		[Token(Token = "0x600191D")]
		[Address(RVA = "0x334F24", Offset = "0x334F24", VA = "0x334F24", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001920")]
		[Address(RVA = "0x33501C", Offset = "0x33501C", VA = "0x33501C", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001921")]
		[Address(RVA = "0x335030", Offset = "0x335030", VA = "0x335030", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4000C9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float MaxDistance;

	[Token(Token = "0x4000C9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float DistanceToPress;

	[Token(Token = "0x4000C9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float recoverSpeed;

	[Token(Token = "0x4000C9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool inversePressDir;

	[Token(Token = "0x4000C9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public UnityEvent OnPress;

	[Token(Token = "0x4000CA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Rigidbody rb;

	[Token(Token = "0x4000CA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Transform movablePart;

	[Token(Token = "0x4000CA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 localOrigin;

	[Token(Token = "0x4000CA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 origin;

	[Token(Token = "0x4000CA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 constainedPosition;

	[Token(Token = "0x4000CA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Quaternion constainedRotation;

	[Token(Token = "0x4000CA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool pressed;

	[Token(Token = "0x4000CA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8D")]
	private bool ButtonInit;

	[Token(Token = "0x4000CA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8E")]
	private bool awaked;

	[Token(Token = "0x4000CA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector3 BaseLocalPosition;

	[Token(Token = "0x4000CAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector3 BaseLocalRotation;

	[Token(Token = "0x4000CAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public UnityEvent OnHovering;

	[Token(Token = "0x4000CAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public UnityEvent OnHighlight;

	[Token(Token = "0x6000B60")]
	[Address(RVA = "0x334364", Offset = "0x334364", VA = "0x334364")]
	public PhysicalButton()
	{
	}

	[Token(Token = "0x6000B61")]
	[Address(RVA = "0x334394", Offset = "0x334394", VA = "0x334394", Slot = "5")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000B62")]
	[Address(RVA = "0x3344C8", Offset = "0x3344C8", VA = "0x3344C8", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000B63")]
	[Address(RVA = "0x334584", Offset = "0x334584", VA = "0x334584", Slot = "23")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000B64")]
	[Address(RVA = "0x3348B8", Offset = "0x3348B8", VA = "0x3348B8", Slot = "22")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000B65")]
	[Address(RVA = "0x334504", Offset = "0x334504", VA = "0x334504")]
	[DebuggerHidden]
	private IEnumerator LateStart()
	{
		return null;
	}

	[Token(Token = "0x6000B66")]
	[Address(RVA = "0x3348DC", Offset = "0x3348DC", VA = "0x3348DC", Slot = "12")]
	public override void BeginInteraction(NVRHand hand)
	{
	}

	[Token(Token = "0x6000B67")]
	[Address(RVA = "0x334AC4", Offset = "0x334AC4", VA = "0x334AC4", Slot = "7")]
	public override void ShowHighlight()
	{
	}

	[Token(Token = "0x6000B68")]
	[Address(RVA = "0x334AEC", Offset = "0x334AEC", VA = "0x334AEC", Slot = "14")]
	public override void HoveringUpdate(NVRHand hand, float forTime)
	{
	}

	[Token(Token = "0x6000B69")]
	[Address(RVA = "0x3345D0", Offset = "0x3345D0", VA = "0x3345D0")]
	private void initPosition()
	{
	}

	[Token(Token = "0x6000B6A")]
	[Address(RVA = "0x334B04", Offset = "0x334B04", VA = "0x334B04")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000B6B")]
	[Address(RVA = "0x334BBC", Offset = "0x334BBC", VA = "0x334BBC")]
	private void CheckPress()
	{
	}

	[Token(Token = "0x6000B6C")]
	[Address(RVA = "0x334C88", Offset = "0x334C88", VA = "0x334C88")]
	private void UpdatePosition()
	{
	}
}
[Token(Token = "0x20001E3")]
public class RepBarWrapper : SpawnableObject
{
	[Token(Token = "0x4000CAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public TextMeshProUGUI repText;

	[Token(Token = "0x4000CAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float slideTime;

	[Token(Token = "0x4000CAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float repValue;

	[Token(Token = "0x4000CB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Slider repBarSlider;

	[Token(Token = "0x4000CB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float lastRepValue;

	[Token(Token = "0x4000CB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Tweener repTween;

	[Token(Token = "0x4000CB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ParticleSystem parts;

	[Token(Token = "0x6000B6D")]
	[Address(RVA = "0x343D00", Offset = "0x343D00", VA = "0x343D00")]
	public RepBarWrapper()
	{
	}

	[Token(Token = "0x6000B6E")]
	[Address(RVA = "0x343D10", Offset = "0x343D10", VA = "0x343D10")]
	public void GetReferences()
	{
	}

	[Token(Token = "0x6000B6F")]
	[Address(RVA = "0x343F8C", Offset = "0x343F8C", VA = "0x343F8C")]
	public void Refresh()
	{
	}

	[Token(Token = "0x6000B70")]
	[Address(RVA = "0x343DCC", Offset = "0x343DCC", VA = "0x343DCC")]
	private float GetRepValue()
	{
		return default(float);
	}

	[Token(Token = "0x6000B71")]
	[Address(RVA = "0x3441E0", Offset = "0x3441E0", VA = "0x3441E0")]
	public void endParticle()
	{
	}
}
[Token(Token = "0x20001E4")]
public class RepRewardWrapper : SpawnableObject
{
	[Token(Token = "0x4000CB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[HideInInspector]
	public string objectName;

	[Token(Token = "0x4000CB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[HideInInspector]
	public string description;

	[Token(Token = "0x4000CB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public Sprite icon;

	[Token(Token = "0x4000CB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public TextMeshProUGUI descriptionText;

	[Token(Token = "0x4000CB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public Image iconImage;

	[Token(Token = "0x6000B72")]
	[Address(RVA = "0x344208", Offset = "0x344208", VA = "0x344208")]
	public RepRewardWrapper()
	{
	}

	[Token(Token = "0x6000B73")]
	[Address(RVA = "0x344210", Offset = "0x344210", VA = "0x344210")]
	private void GetReferences()
	{
	}

	[Token(Token = "0x6000B74")]
	[Address(RVA = "0x344324", Offset = "0x344324", VA = "0x344324")]
	public void SetRepReward()
	{
	}
}
[Token(Token = "0x20001E5")]
public class SandboxHighScore : MonoBehaviour
{
	[Token(Token = "0x4000CB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public TextMeshProUGUI Label;

	[Token(Token = "0x4000CBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public TextMeshProUGUI Score;

	[Token(Token = "0x6000B75")]
	[Address(RVA = "0x290020", Offset = "0x290020", VA = "0x290020")]
	public SandboxHighScore()
	{
	}

	[Token(Token = "0x6000B76")]
	[Address(RVA = "0x290028", Offset = "0x290028", VA = "0x290028")]
	private void Start()
	{
	}
}
[Token(Token = "0x20001E6")]
public class ScrollbarScriptableAsset : ScriptableObject
{
	[Token(Token = "0x4000CBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Sprite BothShade;

	[Token(Token = "0x4000CBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Sprite TopShade;

	[Token(Token = "0x4000CBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Sprite BotShade;

	[Token(Token = "0x6000B77")]
	[Address(RVA = "0x299914", Offset = "0x299914", VA = "0x299914")]
	public ScrollbarScriptableAsset()
	{
	}
}
[Token(Token = "0x20001E7")]
public class ScrollingBar : MonoBehaviour
{
	[Token(Token = "0x4000CBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Transform clampMin;

	[Token(Token = "0x4000CBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Transform clampMax;

	[Token(Token = "0x4000CC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Transform theBar;

	[Token(Token = "0x4000CC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float distanceReal;

	[Token(Token = "0x4000CC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float distanceClamp;

	[Token(Token = "0x4000CC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float ratio;

	[Token(Token = "0x4000CC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 relativePosition;

	[Token(Token = "0x4000CC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 previousPosition;

	[Token(Token = "0x4000CC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Animator anim;

	[Token(Token = "0x4000CC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool boingLeft;

	[Token(Token = "0x4000CC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool boingRight;

	[Token(Token = "0x4000CC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[HideInInspector]
	public ScrollingSnapScript s;

	[Token(Token = "0x6000B78")]
	[Address(RVA = "0x29991C", Offset = "0x29991C", VA = "0x29991C")]
	public ScrollingBar()
	{
	}

	[Token(Token = "0x6000B79")]
	[Address(RVA = "0x299924", Offset = "0x299924", VA = "0x299924")]
	public void Initialize(ScrollingSnapScript sup)
	{
	}

	[Token(Token = "0x6000B7A")]
	[Address(RVA = "0x299B14", Offset = "0x299B14", VA = "0x299B14")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B7B")]
	[Address(RVA = "0x29A4D8", Offset = "0x29A4D8", VA = "0x29A4D8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000B7C")]
	[Address(RVA = "0x299F90", Offset = "0x299F90", VA = "0x299F90")]
	private void GoingLeft()
	{
	}

	[Token(Token = "0x6000B7D")]
	[Address(RVA = "0x29A158", Offset = "0x29A158", VA = "0x29A158")]
	private void GoingRight()
	{
	}

	[Token(Token = "0x6000B7E")]
	[Address(RVA = "0x29A320", Offset = "0x29A320", VA = "0x29A320")]
	private void GoingNowhereSnifSnif()
	{
	}
}
[Token(Token = "0x20001E8")]
public class ScrollingSnapScript : MonoBehaviour
{
	[Token(Token = "0x4000CCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[HideInInspector]
	public RectTransform scrollingTransform;

	[Token(Token = "0x4000CCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private ScrollingBar scrollBar;

	[Token(Token = "0x4000CCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private GameObject[] bttns;

	[Token(Token = "0x4000CCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject theHand;

	[Token(Token = "0x4000CCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private RectTransform buyUICanvasT;

	[Token(Token = "0x4000CCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public RectTransform center;

	[Token(Token = "0x4000CD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float coefficientLerp;

	[Token(Token = "0x4000CD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float[] distances;

	[Token(Token = "0x4000CD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool isDragging;

	[Token(Token = "0x4000CD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int closestBttnNb;

	[Token(Token = "0x4000CD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 previousHandPosition;

	[Token(Token = "0x4000CD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public Transform clampMinButton;

	[Token(Token = "0x4000CD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[HideInInspector]
	public Transform clampMaxButton;

	[Token(Token = "0x4000CD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	public Transform readAnchor;

	[Token(Token = "0x6000B7F")]
	[Address(RVA = "0x29A51C", Offset = "0x29A51C", VA = "0x29A51C")]
	public ScrollingSnapScript()
	{
	}

	[Token(Token = "0x6000B80")]
	[Address(RVA = "0x29A524", Offset = "0x29A524", VA = "0x29A524")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B81")]
	[Address(RVA = "0x29ACC0", Offset = "0x29ACC0", VA = "0x29ACC0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000B82")]
	[Address(RVA = "0x29AB28", Offset = "0x29AB28", VA = "0x29AB28")]
	private void LerpToBttn(GameObject ceBouton)
	{
	}

	[Token(Token = "0x6000B83")]
	[Address(RVA = "0x29AD2C", Offset = "0x29AD2C", VA = "0x29AD2C")]
	public void StartDragMenu()
	{
	}

	[Token(Token = "0x6000B84")]
	[Address(RVA = "0x29AD38", Offset = "0x29AD38", VA = "0x29AD38")]
	public void EndDragMenu()
	{
	}

	[Token(Token = "0x6000B85")]
	[Address(RVA = "0x29AD44", Offset = "0x29AD44", VA = "0x29AD44")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000B86")]
	[Address(RVA = "0x29AE54", Offset = "0x29AE54", VA = "0x29AE54")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000B87")]
	[Address(RVA = "0x29AEF8", Offset = "0x29AEF8", VA = "0x29AEF8")]
	public void RefreshUI()
	{
	}
}
[Token(Token = "0x20001E9")]
public class UIFinalScore : MonoBehaviour
{
	[Token(Token = "0x4000CD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public UIStat stat1;

	[Token(Token = "0x4000CD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public UIStat stat2;

	[Token(Token = "0x4000CDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public UIStat stat3;

	[Token(Token = "0x4000CDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UIStat stat4;

	[Token(Token = "0x4000CDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private TextMeshProUGUI text;

	[Token(Token = "0x6000B88")]
	[Address(RVA = "0x4BC594", Offset = "0x4BC594", VA = "0x4BC594")]
	public UIFinalScore()
	{
	}

	[Token(Token = "0x6000B89")]
	[Address(RVA = "0x4BC59C", Offset = "0x4BC59C", VA = "0x4BC59C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B8A")]
	[Address(RVA = "0x4BC64C", Offset = "0x4BC64C", VA = "0x4BC64C")]
	private void Update()
	{
	}
}
[Token(Token = "0x20001EA")]
public class UIMedal : MonoBehaviour
{
	[Token(Token = "0x4000CDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Sprite[] medals;

	[Token(Token = "0x4000CDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int value;

	[Token(Token = "0x4000CDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Image img;

	[Token(Token = "0x6000B8B")]
	[Address(RVA = "0x4BCEE0", Offset = "0x4BCEE0", VA = "0x4BCEE0")]
	public UIMedal()
	{
	}

	[Token(Token = "0x6000B8C")]
	[Address(RVA = "0x4BCEE8", Offset = "0x4BCEE8", VA = "0x4BCEE8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B8D")]
	[Address(RVA = "0x4BCF50", Offset = "0x4BCF50", VA = "0x4BCF50")]
	public void UpgradeMedal()
	{
	}
}
[Token(Token = "0x20001EB")]
public class UIStat : UIStatBase
{
	[Token(Token = "0x2000356")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16BE08", Offset = "0x16BE08")]
	private sealed class <UpdateStatAnimationUnderTreshold>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4001388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal int <over>__0;

		[Token(Token = "0x4001389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal float <waiterTime>__0;

		[Token(Token = "0x400138A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal WaitForSeconds <waiter>__0;

		[Token(Token = "0x400138B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int <increment>__0;

		[Token(Token = "0x400138C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal int <i>__1;

		[Token(Token = "0x400138D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal UIStat $this;

		[Token(Token = "0x400138E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal object $current;

		[Token(Token = "0x400138F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal bool $disposing;

		[Token(Token = "0x4001390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal int $PC;

		[Token(Token = "0x17000303")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6001924")]
			[Address(RVA = "0x4BE5DC", Offset = "0x4BE5DC", VA = "0x4BE5DC", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000304")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001925")]
			[Address(RVA = "0x4BE5E4", Offset = "0x4BE5E4", VA = "0x4BE5E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001922")]
		[Address(RVA = "0x4BDE34", Offset = "0x4BDE34", VA = "0x4BDE34")]
		[DebuggerHidden]
		public <UpdateStatAnimationUnderTreshold>c__Iterator0()
		{
		}

		[Token(Token = "0x6001923")]
		[Address(RVA = "0x4BE2B4", Offset = "0x4BE2B4", VA = "0x4BE2B4", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001926")]
		[Address(RVA = "0x4BE5EC", Offset = "0x4BE5EC", VA = "0x4BE5EC", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001927")]
		[Address(RVA = "0x4BE600", Offset = "0x4BE600", VA = "0x4BE600", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000357")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16BE68", Offset = "0x16BE68")]
	private sealed class <UpdateStatAnimationOverTreshold>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x4001391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal float <waiterTime>__0;

		[Token(Token = "0x4001392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal WaitForSeconds <waiter>__0;

		[Token(Token = "0x4001393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal int <firstPassLimit>__0;

		[Token(Token = "0x4001394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int <increment>__0;

		[Token(Token = "0x4001395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal int <i>__1;

		[Token(Token = "0x4001396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal int <remaining>__0;

		[Token(Token = "0x4001397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal int <i>__2;

		[Token(Token = "0x4001398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal UIStat $this;

		[Token(Token = "0x4001399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal object $current;

		[Token(Token = "0x400139A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		internal bool $disposing;

		[Token(Token = "0x400139B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal int $PC;

		[Token(Token = "0x17000305")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x600192A")]
			[Address(RVA = "0x4BE20C", Offset = "0x4BE20C", VA = "0x4BE20C", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000306")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600192B")]
			[Address(RVA = "0x4BE214", Offset = "0x4BE214", VA = "0x4BE214", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001928")]
		[Address(RVA = "0x4BDE3C", Offset = "0x4BDE3C", VA = "0x4BDE3C")]
		[DebuggerHidden]
		public <UpdateStatAnimationOverTreshold>c__Iterator1()
		{
		}

		[Token(Token = "0x6001929")]
		[Address(RVA = "0x4BDEAC", Offset = "0x4BDEAC", VA = "0x4BDEAC", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600192C")]
		[Address(RVA = "0x4BE21C", Offset = "0x4BE21C", VA = "0x4BE21C", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x600192D")]
		[Address(RVA = "0x4BE230", Offset = "0x4BE230", VA = "0x4BE230", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4000CE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float ToTresholdTime;

	[Token(Token = "0x4000CE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool WantOverThreshold;

	[Token(Token = "0x4000CE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public UIMedal medal;

	[Token(Token = "0x4000CE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	internal int targetValue;

	[Token(Token = "0x4000CE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int treshold;

	[Token(Token = "0x4000CE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	internal int currentValue;

	[Token(Token = "0x4000CE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private TextMeshProUGUI text;

	[Token(Token = "0x4000CE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private GameObject check;

	[Token(Token = "0x4000CE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RawImage back;

	[Token(Token = "0x6000B8E")]
	[Address(RVA = "0x4BD5F8", Offset = "0x4BD5F8", VA = "0x4BD5F8")]
	public UIStat()
	{
	}

	[Token(Token = "0x6000B8F")]
	[Address(RVA = "0x4BD610", Offset = "0x4BD610", VA = "0x4BD610", Slot = "4")]
	public override bool IsThresholdOK()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B90")]
	[Address(RVA = "0x4BD644", Offset = "0x4BD644", VA = "0x4BD644")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B91")]
	[Address(RVA = "0x4BD7B0", Offset = "0x4BD7B0", VA = "0x4BD7B0", Slot = "6")]
	public override void UpdateState(int value, int treshold)
	{
	}

	[Token(Token = "0x6000B92")]
	[Address(RVA = "0x4BD7E0", Offset = "0x4BD7E0", VA = "0x4BD7E0")]
	private void UpdateText(int value, float duration = 0f)
	{
	}

	[Token(Token = "0x6000B93")]
	[Address(RVA = "0x4BD9D8", Offset = "0x4BD9D8", VA = "0x4BD9D8")]
	private void SetCheck(bool value)
	{
	}

	[Token(Token = "0x6000B94")]
	[Address(RVA = "0x4BDD20", Offset = "0x4BDD20", VA = "0x4BDD20", Slot = "5")]
	public override IEnumerator UpdateStatAnimation()
	{
		return null;
	}

	[Token(Token = "0x6000B95")]
	[Address(RVA = "0x4BDDB4", Offset = "0x4BDDB4", VA = "0x4BDDB4")]
	[DebuggerHidden]
	private IEnumerator UpdateStatAnimationUnderTreshold()
	{
		return null;
	}

	[Token(Token = "0x6000B96")]
	[Address(RVA = "0x4BDD34", Offset = "0x4BDD34", VA = "0x4BDD34")]
	[DebuggerHidden]
	private IEnumerator UpdateStatAnimationOverTreshold()
	{
		return null;
	}
}
[Token(Token = "0x20001EC")]
public abstract class UIStatBase : MonoBehaviour
{
	[Token(Token = "0x6000B98")]
	[Address(RVA = "0x4BD608", Offset = "0x4BD608", VA = "0x4BD608")]
	protected UIStatBase()
	{
	}

	[Token(Token = "0x6000B99")]
	public abstract bool IsThresholdOK();

	[Token(Token = "0x6000B9A")]
	public abstract IEnumerator UpdateStatAnimation();

	[Token(Token = "0x6000B9B")]
	public abstract void UpdateState(int value, int threshold);
}
[Token(Token = "0x20001ED")]
public class UIStatTablet : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20001EE")]
	private class AdditionalStat
	{
		[Token(Token = "0x4000CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool statCompletion;

		[Token(Token = "0x4000CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		public bool score;

		[Token(Token = "0x170000EB")]
		public int lenght
		{
			[Token(Token = "0x6000BA3")]
			[Address(RVA = "0x4BEF90", Offset = "0x4BEF90", VA = "0x4BEF90")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000BA2")]
		[Address(RVA = "0x4BF990", Offset = "0x4BF990", VA = "0x4BF990")]
		public AdditionalStat()
		{
		}
	}

	[Token(Token = "0x2000358")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16BEE8", Offset = "0x16BEE8")]
	private sealed class <ShowTime>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x400139C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal int <okCount>__0;

		[Token(Token = "0x400139D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal UIStatBase[] $locvar0;

		[Token(Token = "0x400139E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal int $locvar1;

		[Token(Token = "0x400139F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal UIStatBase <stat>__1;

		[Token(Token = "0x40013A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal UIStatTablet $this;

		[Token(Token = "0x40013A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal object $current;

		[Token(Token = "0x40013A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal bool $disposing;

		[Token(Token = "0x40013A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal int $PC;

		[Token(Token = "0x17000307")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6001930")]
			[Address(RVA = "0x4BF8E8", Offset = "0x4BF8E8", VA = "0x4BF8E8", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000308")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001931")]
			[Address(RVA = "0x4BF8F0", Offset = "0x4BF8F0", VA = "0x4BF8F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600192E")]
		[Address(RVA = "0x4BF5B0", Offset = "0x4BF5B0", VA = "0x4BF5B0")]
		[DebuggerHidden]
		public <ShowTime>c__Iterator0()
		{
		}

		[Token(Token = "0x600192F")]
		[Address(RVA = "0x4BF640", Offset = "0x4BF640", VA = "0x4BF640", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001932")]
		[Address(RVA = "0x4BF8F8", Offset = "0x4BF8F8", VA = "0x4BF8F8", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001933")]
		[Address(RVA = "0x4BF90C", Offset = "0x4BF90C", VA = "0x4BF90C", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4000CE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int[] values;

	[Token(Token = "0x4000CEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int[] treshold;

	[Token(Token = "0x4000CEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private AdditionalStat additionalStat;

	[Token(Token = "0x4000CEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private UIStatBase[] stats;

	[Token(Token = "0x4000CED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool Sandbox;

	[Token(Token = "0x4000CEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int prevPrison;

	[Token(Token = "0x4000CEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private DataToLoad data;

	[Token(Token = "0x6000B9C")]
	[Address(RVA = "0x4BE684", Offset = "0x4BE684", VA = "0x4BE684")]
	public UIStatTablet()
	{
	}

	[Token(Token = "0x6000B9D")]
	[Address(RVA = "0x4BE68C", Offset = "0x4BE68C", VA = "0x4BE68C")]
	private void InitValue()
	{
	}

	[Token(Token = "0x6000B9E")]
	[Address(RVA = "0x4BE94C", Offset = "0x4BE94C", VA = "0x4BE94C")]
	public void Start()
	{
	}

	[Token(Token = "0x6000B9F")]
	[Address(RVA = "0x4BEFA0", Offset = "0x4BEFA0", VA = "0x4BEFA0")]
	private void PointageFinal()
	{
	}

	[Token(Token = "0x6000BA0")]
	[Address(RVA = "0x4BF530", Offset = "0x4BF530", VA = "0x4BF530")]
	[DebuggerHidden]
	private IEnumerator ShowTime()
	{
		return null;
	}

	[Token(Token = "0x6000BA1")]
	[Address(RVA = "0x4BF5B8", Offset = "0x4BF5B8", VA = "0x4BF5B8")]
	public void Menu()
	{
	}
}
[Token(Token = "0x20001EF")]
public class StaticHint : MonoBehaviour
{
	[Token(Token = "0x4000CF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public NVRInteractableItem linkedObj;

	[Token(Token = "0x4000CF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool activeOnAttach;

	[Token(Token = "0x4000CF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public bool permaDeath;

	[Token(Token = "0x4000CF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector3 lookDirScale;

	[Token(Token = "0x4000CF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform head;

	[Token(Token = "0x4000CF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Transform[] children;

	[Token(Token = "0x4000CF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Animator[] anims;

	[Token(Token = "0x4000CF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool active;

	[Token(Token = "0x4000CFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	private bool dead;

	[Token(Token = "0x6000BA4")]
	[Address(RVA = "0x29FECC", Offset = "0x29FECC", VA = "0x29FECC")]
	public StaticHint()
	{
	}

	[Token(Token = "0x6000BA5")]
	[Address(RVA = "0x29FF74", Offset = "0x29FF74", VA = "0x29FF74")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BA6")]
	[Address(RVA = "0x2A0128", Offset = "0x2A0128", VA = "0x2A0128")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BA7")]
	[Address(RVA = "0x2A0578", Offset = "0x2A0578", VA = "0x2A0578")]
	private void setActive(bool state)
	{
	}
}
[Token(Token = "0x20001F0")]
public class StopIsolement : MonoBehaviour
{
	[Token(Token = "0x2000359")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16BF58", Offset = "0x16BF58")]
	private sealed class <Unactive>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40013A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal StopIsolement $this;

		[Token(Token = "0x40013A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x40013A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x40013A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x17000309")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6001936")]
			[Address(RVA = "0x2A1A54", Offset = "0x2A1A54", VA = "0x2A1A54", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700030A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001937")]
			[Address(RVA = "0x2A1A5C", Offset = "0x2A1A5C", VA = "0x2A1A5C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001934")]
		[Address(RVA = "0x2A1950", Offset = "0x2A1950", VA = "0x2A1950")]
		[DebuggerHidden]
		public <Unactive>c__Iterator0()
		{
		}

		[Token(Token = "0x6001935")]
		[Address(RVA = "0x2A1958", Offset = "0x2A1958", VA = "0x2A1958", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001938")]
		[Address(RVA = "0x2A1A64", Offset = "0x2A1A64", VA = "0x2A1A64", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001939")]
		[Address(RVA = "0x2A1A78", Offset = "0x2A1A78", VA = "0x2A1A78", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4000CFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private bool handOver;

	[Token(Token = "0x4000CFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private NVRHand hand;

	[Token(Token = "0x4000CFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private bool active;

	[Token(Token = "0x6000BA8")]
	[Address(RVA = "0x2A1620", Offset = "0x2A1620", VA = "0x2A1620")]
	public StopIsolement()
	{
	}

	[Token(Token = "0x6000BA9")]
	[Address(RVA = "0x2A1628", Offset = "0x2A1628", VA = "0x2A1628")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BAA")]
	[Address(RVA = "0x2A17F0", Offset = "0x2A17F0", VA = "0x2A17F0")]
	private void OnTriggerStay(Collider col)
	{
	}

	[Token(Token = "0x6000BAB")]
	[Address(RVA = "0x2A1770", Offset = "0x2A1770", VA = "0x2A1770")]
	[DebuggerHidden]
	private IEnumerator Unactive()
	{
		return null;
	}
}
[Token(Token = "0x20001F1")]
public enum CurrentMenu
{
	[Token(Token = "0x4000CFF")]
	None,
	[Token(Token = "0x4000D00")]
	Root,
	[Token(Token = "0x4000D01")]
	Materials,
	[Token(Token = "0x4000D02")]
	Tools,
	[Token(Token = "0x4000D03")]
	Furniture,
	[Token(Token = "0x4000D04")]
	Jobs
}
[Token(Token = "0x20001F2")]
public class DealerMenu
{
	[Token(Token = "0x4000D05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public GameObject obj;

	[Token(Token = "0x4000D06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Animator anim;

	[Token(Token = "0x170000EC")]
	public bool activeSelf
	{
		[Token(Token = "0x6000BAD")]
		[Address(RVA = "0x2070D8", Offset = "0x2070D8", VA = "0x2070D8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000ED")]
	public bool activeInHierarchy
	{
		[Token(Token = "0x6000BAE")]
		[Address(RVA = "0x207100", Offset = "0x207100", VA = "0x207100")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000BAC")]
	[Address(RVA = "0x207050", Offset = "0x207050", VA = "0x207050")]
	public DealerMenu(GameObject o)
	{
	}

	[Token(Token = "0x6000BAF")]
	[Address(RVA = "0x207128", Offset = "0x207128", VA = "0x207128")]
	public void SetActive(bool state)
	{
	}
}
[Token(Token = "0x20001F3")]
public class TabletManager : MonoBehaviour
{
	[Token(Token = "0x4000D07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static TabletManager Instance;

	[Token(Token = "0x4000D08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[HideInInspector]
	public GameObject BlackFilter;

	[Token(Token = "0x4000D09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[HideInInspector]
	public GameObject sellingBox;

	[Token(Token = "0x4000D0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[HideInInspector]
	public Animator boxAnim;

	[Token(Token = "0x4000D0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public Animator bulleAnim;

	[Token(Token = "0x4000D0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public GameObject laBulle;

	[Token(Token = "0x4000D0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public bool doingTheBoxAnim;

	[Token(Token = "0x4000D0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[HideInInspector]
	public DealerJobScript jobScript;

	[Token(Token = "0x4000D0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public DealerTradeScript tradeScript;

	[Token(Token = "0x4000D10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[HideInInspector]
	public UITextureAnimator texture;

	[Token(Token = "0x4000D11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public DealerMenu menuPrincipal;

	[Token(Token = "0x4000D12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[HideInInspector]
	public DealerMenu menuSpecial;

	[Token(Token = "0x4000D13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public DealerMenu menuRessources;

	[Token(Token = "0x4000D14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[HideInInspector]
	public DealerMenu menuGeneral;

	[Token(Token = "0x4000D15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public DealerMenu menuHelp;

	[Token(Token = "0x4000D16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[HideInInspector]
	public DealerMenu menuFurniture;

	[Token(Token = "0x4000D17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	public DealerMenu menuTools;

	[Token(Token = "0x4000D18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[HideInInspector]
	public DealerMenu menuJobs;

	[Token(Token = "0x4000D19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public DealerMenu menuRep;

	[Token(Token = "0x4000D1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public TextMeshProUGUI materialsLabel;

	[Token(Token = "0x4000D1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TextMeshProUGUI toolsLabel;

	[Token(Token = "0x4000D1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public TextMeshProUGUI furnitureLabel;

	[Token(Token = "0x4000D1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TextMeshProUGUI jobsLabel;

	[Token(Token = "0x4000D1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public GenericTooltip mainHelpHint;

	[Token(Token = "0x6000BB0")]
	[Address(RVA = "0x2A1D10", Offset = "0x2A1D10", VA = "0x2A1D10")]
	public TabletManager()
	{
	}

	[Token(Token = "0x6000BB1")]
	[Address(RVA = "0x2A1D18", Offset = "0x2A1D18", VA = "0x2A1D18")]
	public void GetReferences()
	{
	}

	[Token(Token = "0x6000BB2")]
	[Address(RVA = "0x2A23EC", Offset = "0x2A23EC", VA = "0x2A23EC")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000BB3")]
	[Address(RVA = "0x2A23F0", Offset = "0x2A23F0", VA = "0x2A23F0")]
	public void SetTabletButtonsLabels()
	{
	}

	[Token(Token = "0x6000BB4")]
	[Address(RVA = "0x2A259C", Offset = "0x2A259C", VA = "0x2A259C")]
	public CurrentMenu GetCurrentActiveMenu()
	{
		return default(CurrentMenu);
	}

	[Token(Token = "0x6000BB5")]
	[Address(RVA = "0x2A2678", Offset = "0x2A2678", VA = "0x2A2678")]
	public void MenuActive()
	{
	}

	[Token(Token = "0x6000BB6")]
	[Address(RVA = "0x2A27A8", Offset = "0x2A27A8", VA = "0x2A27A8")]
	public void MenuUnactive(bool animCanvas = false, bool skipGeneral = false, bool skipFilter = false)
	{
	}

	[Token(Token = "0x6000BB7")]
	[Address(RVA = "0x2A2C20", Offset = "0x2A2C20", VA = "0x2A2C20")]
	public void DealOpen()
	{
	}

	[Token(Token = "0x6000BB8")]
	[Address(RVA = "0x2A2E7C", Offset = "0x2A2E7C", VA = "0x2A2E7C")]
	public void DealClosed()
	{
	}

	[Token(Token = "0x6000BB9")]
	[Address(RVA = "0x2A30FC", Offset = "0x2A30FC", VA = "0x2A30FC")]
	public void DealRessourcesWindow()
	{
	}

	[Token(Token = "0x6000BBA")]
	[Address(RVA = "0x2A3200", Offset = "0x2A3200", VA = "0x2A3200")]
	public void DealToolsWindow()
	{
	}

	[Token(Token = "0x6000BBB")]
	[Address(RVA = "0x2A3304", Offset = "0x2A3304", VA = "0x2A3304")]
	public void DealFurnitureWindow()
	{
	}

	[Token(Token = "0x6000BBC")]
	[Address(RVA = "0x2A3408", Offset = "0x2A3408", VA = "0x2A3408")]
	public void DealRootWindow(bool firstload = false)
	{
	}

	[Token(Token = "0x6000BBD")]
	[Address(RVA = "0x2A35B8", Offset = "0x2A35B8", VA = "0x2A35B8")]
	public void DealSpecialWindow()
	{
	}

	[Token(Token = "0x6000BBE")]
	[Address(RVA = "0x2A35C0", Offset = "0x2A35C0", VA = "0x2A35C0")]
	public void DealJobWindow(int fromNewTier = 0)
	{
	}
}
[Token(Token = "0x20001F4")]
public class TierTrackerWrapper : SpawnableObject
{
	[Token(Token = "0x4000D1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Image filled;

	[Token(Token = "0x6000BBF")]
	[Address(RVA = "0x2A60A4", Offset = "0x2A60A4", VA = "0x2A60A4")]
	public TierTrackerWrapper()
	{
	}

	[Token(Token = "0x6000BC0")]
	[Address(RVA = "0x2A60AC", Offset = "0x2A60AC", VA = "0x2A60AC", Slot = "4")]
	public override void Reset()
	{
	}

	[Token(Token = "0x6000BC1")]
	[Address(RVA = "0x2A60B0", Offset = "0x2A60B0", VA = "0x2A60B0")]
	public void SetUnfilled()
	{
	}

	[Token(Token = "0x6000BC2")]
	[Address(RVA = "0x2A60F8", Offset = "0x2A60F8", VA = "0x2A60F8")]
	public void SetFilled()
	{
	}
}
[Serializable]
[Token(Token = "0x20001F5")]
public class TutorialTextInfos
{
	[Token(Token = "0x4000D20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public string name;

	[Token(Token = "0x4000D21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int steps;

	[Token(Token = "0x4000D22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int introLines;

	[Token(Token = "0x4000D23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int firstID;

	[Token(Token = "0x4000D24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string[] texts;

	[Token(Token = "0x6000BC3")]
	[Address(RVA = "0x2BCCDC", Offset = "0x2BCCDC", VA = "0x2BCCDC")]
	public TutorialTextInfos()
	{
	}
}
[Token(Token = "0x20001F6")]
public class TutoTextManager : MonoBehaviour
{
	[Token(Token = "0x20001F7")]
	private enum Layouts
	{
		[Token(Token = "0x4000D2D")]
		Steps,
		[Token(Token = "0x4000D2E")]
		Title,
		[Token(Token = "0x4000D2F")]
		MainTitle,
		[Token(Token = "0x4000D30")]
		PSA,
		[Token(Token = "0x4000D31")]
		End
	}

	[Token(Token = "0x4000D25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Transform[] layoutTransforms;

	[Token(Token = "0x4000D26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private object[] enter;

	[Token(Token = "0x4000D27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public TutorialTextInfos[] tutorialStrings;

	[Token(Token = "0x4000D28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TutorialTextInfos currentTutorial;

	[Token(Token = "0x4000D29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int _intProgress;

	[Token(Token = "0x4000D2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string _tempCraftMemory;

	[Token(Token = "0x4000D2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private TutorialManager _tutorialManager;

	[Token(Token = "0x6000BC4")]
	[Address(RVA = "0x2BCCE4", Offset = "0x2BCCE4", VA = "0x2BCCE4")]
	public TutoTextManager()
	{
	}

	[Token(Token = "0x6000BC5")]
	[Address(RVA = "0x2BCDD8", Offset = "0x2BCDD8", VA = "0x2BCDD8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BC6")]
	[Address(RVA = "0x2BCDDC", Offset = "0x2BCDDC", VA = "0x2BCDDC")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000BC7")]
	[Address(RVA = "0x2BD980", Offset = "0x2BD980", VA = "0x2BD980")]
	private void OnStepChangeHandler()
	{
	}

	[Token(Token = "0x6000BC8")]
	[Address(RVA = "0x2BD990", Offset = "0x2BD990", VA = "0x2BD990")]
	private void OnTutorialChangeHandler()
	{
	}

	[Token(Token = "0x6000BC9")]
	[Address(RVA = "0x2BDA00", Offset = "0x2BDA00", VA = "0x2BDA00")]
	private void OnResetTutorialHandler()
	{
	}

	[Token(Token = "0x6000BCA")]
	[Address(RVA = "0x2BD9E0", Offset = "0x2BD9E0", VA = "0x2BD9E0")]
	private void SetBaseTutorial(string craftName)
	{
	}

	[Token(Token = "0x6000BCB")]
	[Address(RVA = "0x2BDB5C", Offset = "0x2BDB5C", VA = "0x2BDB5C")]
	public void SetTutorialInMemory()
	{
	}

	[Token(Token = "0x6000BCC")]
	[Address(RVA = "0x2BDB80", Offset = "0x2BDB80", VA = "0x2BDB80")]
	public void ManualIncrement()
	{
	}

	[Token(Token = "0x6000BCD")]
	[Address(RVA = "0x2BD8F4", Offset = "0x2BD8F4", VA = "0x2BD8F4")]
	public void DeactivateSlates()
	{
	}

	[Token(Token = "0x6000BCE")]
	[Address(RVA = "0x2BDB90", Offset = "0x2BDB90", VA = "0x2BDB90")]
	public void ActivateCurrentTitle()
	{
	}

	[Token(Token = "0x6000BCF")]
	[Address(RVA = "0x2BDE9C", Offset = "0x2BDE9C", VA = "0x2BDE9C")]
	public void ActivateGeneralIntro()
	{
	}

	[Token(Token = "0x6000BD0")]
	[Address(RVA = "0x2BE030", Offset = "0x2BE030", VA = "0x2BE030")]
	public void ActivateCurrentContent()
	{
	}

	[Token(Token = "0x6000BD1")]
	[Address(RVA = "0x2BE184", Offset = "0x2BE184", VA = "0x2BE184")]
	public void ActivateAndIncrementContent()
	{
	}

	[Token(Token = "0x6000BD2")]
	[Address(RVA = "0x2BE2E4", Offset = "0x2BE2E4", VA = "0x2BE2E4")]
	public void ActivateTitleSlate()
	{
	}

	[Token(Token = "0x6000BD3")]
	[Address(RVA = "0x2BE2EC", Offset = "0x2BE2EC", VA = "0x2BE2EC")]
	public void ActivatePSA()
	{
	}

	[Token(Token = "0x6000BD4")]
	[Address(RVA = "0x2BE2F4", Offset = "0x2BE2F4", VA = "0x2BE2F4")]
	public void ActivateEnd()
	{
	}

	[Token(Token = "0x6000BD5")]
	[Address(RVA = "0x2BDA28", Offset = "0x2BDA28", VA = "0x2BDA28")]
	private TutorialTextInfos GetTutorialStrings(string craftName)
	{
		return null;
	}

	[Token(Token = "0x6000BD6")]
	[Address(RVA = "0x2BD0F0", Offset = "0x2BD0F0", VA = "0x2BD0F0")]
	private void SetStandardSlates()
	{
	}

	[Token(Token = "0x6000BD7")]
	[Address(RVA = "0x2BDCB4", Offset = "0x2BDCB4", VA = "0x2BDCB4")]
	private void ActivateSlate(Layouts slate)
	{
	}

	[Token(Token = "0x6000BD8")]
	[Address(RVA = "0x2BD6D4", Offset = "0x2BD6D4", VA = "0x2BD6D4")]
	private void SetSpecificSlates()
	{
	}

	[Token(Token = "0x6000BD9")]
	[Address(RVA = "0x2BCF9C", Offset = "0x2BCF9C", VA = "0x2BCF9C")]
	private void GetSlateTransforms()
	{
	}

	[Token(Token = "0x6000BDA")]
	[Address(RVA = "0x2BE02C", Offset = "0x2BE02C", VA = "0x2BE02C")]
	private void ScaleCanvasToContent(string s)
	{
	}

	[Token(Token = "0x6000BDB")]
	[Address(RVA = "0x2BE2FC", Offset = "0x2BE2FC", VA = "0x2BE2FC")]
	public void VideoPreload(string name)
	{
	}

	[Token(Token = "0x6000BDC")]
	[Address(RVA = "0x2BE328", Offset = "0x2BE328", VA = "0x2BE328")]
	public void VideoLoop(string name)
	{
	}

	[Token(Token = "0x6000BDD")]
	[Address(RVA = "0x2BE354", Offset = "0x2BE354", VA = "0x2BE354")]
	public void VideoPlay(string name)
	{
	}

	[Token(Token = "0x6000BDE")]
	[Address(RVA = "0x2BE380", Offset = "0x2BE380", VA = "0x2BE380")]
	public void VideoUnpause(string name)
	{
	}

	[Token(Token = "0x6000BDF")]
	[Address(RVA = "0x2BE3AC", Offset = "0x2BE3AC", VA = "0x2BE3AC")]
	public void VideoDone()
	{
	}
}
[Token(Token = "0x20001F8")]
public class UIDisplayTradeValue : MonoBehaviour
{
	[Token(Token = "0x4000D32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private TextMeshProUGUI textNumberWanted;

	[Token(Token = "0x4000D33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private TextMeshProUGUI textExplanation;

	[Token(Token = "0x4000D34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Image backgroundImage;

	[Token(Token = "0x4000D35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color devoirDeLargent;

	[Token(Token = "0x4000D36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color gagnerDeLargent;

	[Token(Token = "0x6000BE0")]
	[Address(RVA = "0x4BBF14", Offset = "0x4BBF14", VA = "0x4BBF14")]
	public UIDisplayTradeValue()
	{
	}

	[Token(Token = "0x6000BE1")]
	[Address(RVA = "0x4BBF1C", Offset = "0x4BBF1C", VA = "0x4BBF1C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BE2")]
	[Address(RVA = "0x4BC0B4", Offset = "0x4BC0B4", VA = "0x4BC0B4")]
	private void Update()
	{
	}
}
[Token(Token = "0x20001F9")]
public class UIManager : MonoBehaviour
{
	[Token(Token = "0x4000D37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static UIManager Instance;

	[Token(Token = "0x4000D38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject headDisplayPrefab;

	[Token(Token = "0x4000D39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject morningSearchDisplay;

	[Token(Token = "0x4000D3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public UnityEvent headDisplayEnding;

	[Token(Token = "0x4000D3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent searchDisplayEnding;

	[Token(Token = "0x4000D3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private GameObject _hDInst;

	[Token(Token = "0x4000D3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MorningDate _cocorico;

	[Token(Token = "0x4000D3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private GameObject msdObj;

	[Token(Token = "0x4000D3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MorningSearchDisplay msd;

	[Token(Token = "0x6000BE3")]
	[Address(RVA = "0x4BC708", Offset = "0x4BC708", VA = "0x4BC708")]
	public UIManager()
	{
	}

	[Token(Token = "0x6000BE4")]
	[Address(RVA = "0x4BC710", Offset = "0x4BC710", VA = "0x4BC710")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BE5")]
	[Address(RVA = "0x4BC774", Offset = "0x4BC774", VA = "0x4BC774")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BE6")]
	[Address(RVA = "0x4BC83C", Offset = "0x4BC83C", VA = "0x4BC83C")]
	public void SwitchDate()
	{
	}

	[Token(Token = "0x6000BE7")]
	[Address(RVA = "0x4BCE44", Offset = "0x4BCE44", VA = "0x4BCE44")]
	private void OnDestroy()
	{
	}
}
[Token(Token = "0x20001FA")]
public enum ColorFor
{
	[Token(Token = "0x4000D41")]
	SpecialWindow,
	[Token(Token = "0x4000D42")]
	RootWindow,
	[Token(Token = "0x4000D43")]
	FurnitureWindow,
	[Token(Token = "0x4000D44")]
	RessourcesWindow,
	[Token(Token = "0x4000D45")]
	ToolsWindow,
	[Token(Token = "0x4000D46")]
	JobsWindow
}
[Token(Token = "0x20001FB")]
public class UITextureAnimator : MonoBehaviour
{
	[Token(Token = "0x4000D47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Image texture;

	[Token(Token = "0x4000D48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Color[] colors;

	[Token(Token = "0x6000BE8")]
	[Address(RVA = "0x4BF998", Offset = "0x4BF998", VA = "0x4BF998")]
	public UITextureAnimator()
	{
	}

	[Token(Token = "0x6000BE9")]
	[Address(RVA = "0x4BF9A0", Offset = "0x4BF9A0", VA = "0x4BF9A0")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000BEA")]
	[Address(RVA = "0x4BFAC8", Offset = "0x4BFAC8", VA = "0x4BFAC8")]
	public void SetColor(ColorFor c)
	{
	}
}
[Token(Token = "0x20001FC")]
public class UpdateMaskFromScrollbar : MonoBehaviour
{
	[Token(Token = "0x200035A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16C0E8", Offset = "0x16C0E8")]
	private sealed class <LateStart>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40013A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal UpdateMaskFromScrollbar $this;

		[Token(Token = "0x40013A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal object $current;

		[Token(Token = "0x40013AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal bool $disposing;

		[Token(Token = "0x40013AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int $PC;

		[Token(Token = "0x1700030B")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x600193C")]
			[Address(RVA = "0x4D53B8", Offset = "0x4D53B8", VA = "0x4D53B8", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700030C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600193D")]
			[Address(RVA = "0x4D53C0", Offset = "0x4D53C0", VA = "0x4D53C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600193A")]
		[Address(RVA = "0x4D4FFC", Offset = "0x4D4FFC", VA = "0x4D4FFC")]
		[DebuggerHidden]
		public <LateStart>c__Iterator0()
		{
		}

		[Token(Token = "0x600193B")]
		[Address(RVA = "0x4D530C", Offset = "0x4D530C", VA = "0x4D530C", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600193E")]
		[Address(RVA = "0x4D53C8", Offset = "0x4D53C8", VA = "0x4D53C8", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x600193F")]
		[Address(RVA = "0x4D53DC", Offset = "0x4D53DC", VA = "0x4D53DC", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x4000D49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Scrollbar bar;

	[Token(Token = "0x4000D4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private SoftMask mask;

	[Token(Token = "0x4000D4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int shadeHeight;

	[Token(Token = "0x6000BEB")]
	[Address(RVA = "0x4D4E24", Offset = "0x4D4E24", VA = "0x4D4E24")]
	public UpdateMaskFromScrollbar()
	{
	}

	[Token(Token = "0x6000BEC")]
	[Address(RVA = "0x4D4E34", Offset = "0x4D4E34", VA = "0x4D4E34")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000BED")]
	[Address(RVA = "0x4D4F7C", Offset = "0x4D4F7C", VA = "0x4D4F7C")]
	[DebuggerHidden]
	private IEnumerator LateStart()
	{
		return null;
	}

	[Token(Token = "0x6000BEE")]
	[Address(RVA = "0x4D5004", Offset = "0x4D5004", VA = "0x4D5004")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000BEF")]
	[Address(RVA = "0x4D50E0", Offset = "0x4D50E0", VA = "0x4D50E0")]
	private void valueChange(float value)
	{
	}
}
[Token(Token = "0x20001FD")]
public class Utilities
{
	[Token(Token = "0x6000BF0")]
	[Address(RVA = "0x4D5460", Offset = "0x4D5460", VA = "0x4D5460")]
	public Utilities()
	{
	}

	[Token(Token = "0x6000BF1")]
	[Address(RVA = "0x4D5468", Offset = "0x4D5468", VA = "0x4D5468")]
	public static Transform FindInChildren(Transform theParent, string name)
	{
		return null;
	}
}
[Token(Token = "0x20001FE")]
public class AkCommunicationSettings : IDisposable
{
	[Token(Token = "0x4000D4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000D4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170000EE")]
	public uint uPoolSize
	{
		[Token(Token = "0x6000BF9")]
		[Address(RVA = "0x4A5578", Offset = "0x4A5578", VA = "0x4A5578")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000BF8")]
		[Address(RVA = "0x4A3B20", Offset = "0x4A3B20", VA = "0x4A3B20")]
		set
		{
		}
	}

	[Token(Token = "0x170000EF")]
	public ushort uDiscoveryBroadcastPort
	{
		[Token(Token = "0x6000BFB")]
		[Address(RVA = "0x4A5604", Offset = "0x4A5604", VA = "0x4A5604")]
		get
		{
			return default(ushort);
		}
		[Token(Token = "0x6000BFA")]
		[Address(RVA = "0x4A3BB4", Offset = "0x4A3BB4", VA = "0x4A3BB4")]
		set
		{
		}
	}

	[Token(Token = "0x170000F0")]
	public ushort uCommandPort
	{
		[Token(Token = "0x6000BFD")]
		[Address(RVA = "0x4A5690", Offset = "0x4A5690", VA = "0x4A5690")]
		get
		{
			return default(ushort);
		}
		[Token(Token = "0x6000BFC")]
		[Address(RVA = "0x4A3C48", Offset = "0x4A3C48", VA = "0x4A3C48")]
		set
		{
		}
	}

	[Token(Token = "0x170000F1")]
	public ushort uNotificationPort
	{
		[Token(Token = "0x6000BFF")]
		[Address(RVA = "0x4A571C", Offset = "0x4A571C", VA = "0x4A571C")]
		get
		{
			return default(ushort);
		}
		[Token(Token = "0x6000BFE")]
		[Address(RVA = "0x4A3CDC", Offset = "0x4A3CDC", VA = "0x4A3CDC")]
		set
		{
		}
	}

	[Token(Token = "0x170000F2")]
	public bool bInitSystemLib
	{
		[Token(Token = "0x6000C01")]
		[Address(RVA = "0x4A57A8", Offset = "0x4A57A8", VA = "0x4A57A8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000C00")]
		[Address(RVA = "0x4A3D70", Offset = "0x4A3D70", VA = "0x4A3D70")]
		set
		{
		}
	}

	[Token(Token = "0x170000F3")]
	public string szAppNetworkName
	{
		[Token(Token = "0x6000C03")]
		[Address(RVA = "0x4A5834", Offset = "0x4A5834", VA = "0x4A5834")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C02")]
		[Address(RVA = "0x4A3E04", Offset = "0x4A3E04", VA = "0x4A3E04")]
		set
		{
		}
	}

	[Token(Token = "0x6000BF2")]
	[Address(RVA = "0x4A5344", Offset = "0x4A5344", VA = "0x4A5344")]
	internal AkCommunicationSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000BF3")]
	[Address(RVA = "0x49D2E0", Offset = "0x49D2E0", VA = "0x49D2E0")]
	public AkCommunicationSettings()
	{
	}

	[Token(Token = "0x6000BF4")]
	[Address(RVA = "0x4A536C", Offset = "0x4A536C", VA = "0x4A536C")]
	internal static IntPtr getCPtr(AkCommunicationSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000BF5")]
	[Address(RVA = "0x4A53C4", Offset = "0x4A53C4", VA = "0x4A53C4", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000BF6")]
	[Address(RVA = "0x4A53F0", Offset = "0x4A53F0", VA = "0x4A53F0", Slot = "1")]
	~AkCommunicationSettings()
	{
	}

	[Token(Token = "0x6000BF7")]
	[Address(RVA = "0x4A5450", Offset = "0x4A5450", VA = "0x4A5450", Slot = "6")]
	public virtual void Dispose()
	{
	}
}
[Token(Token = "0x20001FF")]
public enum AkMemPoolAttributes
{
	[Token(Token = "0x4000D4F")]
	AkNoAlloc = 0,
	[Token(Token = "0x4000D50")]
	AkMalloc = 1,
	[Token(Token = "0x4000D51")]
	AkAllocMask = 1,
	[Token(Token = "0x4000D52")]
	AkFixedSizeBlocksMode = 8,
	[Token(Token = "0x4000D53")]
	AkBlockMgmtMask = 8
}
[Token(Token = "0x2000200")]
public class AkPlatformInitSettings : IDisposable
{
	[Token(Token = "0x4000D54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000D55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170000F4")]
	public AkThreadProperties threadLEngine
	{
		[Token(Token = "0x6000C0B")]
		[Address(RVA = "0x2C96C8", Offset = "0x2C96C8", VA = "0x2C96C8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C0A")]
		[Address(RVA = "0x2C9560", Offset = "0x2C9560", VA = "0x2C9560")]
		set
		{
		}
	}

	[Token(Token = "0x170000F5")]
	public AkThreadProperties threadBankManager
	{
		[Token(Token = "0x6000C0D")]
		[Address(RVA = "0x2C99C4", Offset = "0x2C99C4", VA = "0x2C99C4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C0C")]
		[Address(RVA = "0x2C985C", Offset = "0x2C985C", VA = "0x2C985C")]
		set
		{
		}
	}

	[Token(Token = "0x170000F6")]
	public AkThreadProperties threadMonitor
	{
		[Token(Token = "0x6000C0F")]
		[Address(RVA = "0x2C9CC0", Offset = "0x2C9CC0", VA = "0x2C9CC0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C0E")]
		[Address(RVA = "0x2C9B58", Offset = "0x2C9B58", VA = "0x2C9B58")]
		set
		{
		}
	}

	[Token(Token = "0x170000F7")]
	public float fLEngineDefaultPoolRatioThreshold
	{
		[Token(Token = "0x6000C11")]
		[Address(RVA = "0x2C9FA8", Offset = "0x2C9FA8", VA = "0x2C9FA8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000C10")]
		[Address(RVA = "0x2C9E54", Offset = "0x2C9E54", VA = "0x2C9E54")]
		set
		{
		}
	}

	[Token(Token = "0x170000F8")]
	public uint uLEngineDefaultPoolSize
	{
		[Token(Token = "0x6000C13")]
		[Address(RVA = "0x2CA240", Offset = "0x2CA240", VA = "0x2CA240")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000C12")]
		[Address(RVA = "0x2CA0EC", Offset = "0x2CA0EC", VA = "0x2CA0EC")]
		set
		{
		}
	}

	[Token(Token = "0x170000F9")]
	public uint uSampleRate
	{
		[Token(Token = "0x6000C15")]
		[Address(RVA = "0x2CA4D8", Offset = "0x2CA4D8", VA = "0x2CA4D8")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000C14")]
		[Address(RVA = "0x2CA384", Offset = "0x2CA384", VA = "0x2CA384")]
		set
		{
		}
	}

	[Token(Token = "0x170000FA")]
	public ushort uNumRefillsInVoice
	{
		[Token(Token = "0x6000C17")]
		[Address(RVA = "0x2CA770", Offset = "0x2CA770", VA = "0x2CA770")]
		get
		{
			return default(ushort);
		}
		[Token(Token = "0x6000C16")]
		[Address(RVA = "0x2CA61C", Offset = "0x2CA61C", VA = "0x2CA61C")]
		set
		{
		}
	}

	[Token(Token = "0x170000FB")]
	public uint uChannelMask
	{
		[Token(Token = "0x6000C19")]
		[Address(RVA = "0x2CAA08", Offset = "0x2CAA08", VA = "0x2CAA08")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000C18")]
		[Address(RVA = "0x2CA8B4", Offset = "0x2CA8B4", VA = "0x2CA8B4")]
		set
		{
		}
	}

	[Token(Token = "0x170000FC")]
	public bool bRoundFrameSizeToHWSize
	{
		[Token(Token = "0x6000C1B")]
		[Address(RVA = "0x2CACA0", Offset = "0x2CACA0", VA = "0x2CACA0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000C1A")]
		[Address(RVA = "0x2CAB4C", Offset = "0x2CAB4C", VA = "0x2CAB4C")]
		set
		{
		}
	}

	[Token(Token = "0x6000C04")]
	[Address(RVA = "0x2C912C", Offset = "0x2C912C", VA = "0x2C912C")]
	internal AkPlatformInitSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000C05")]
	[Address(RVA = "0x2C9154", Offset = "0x2C9154", VA = "0x2C9154")]
	public AkPlatformInitSettings()
	{
	}

	[Token(Token = "0x6000C06")]
	[Address(RVA = "0x2C929C", Offset = "0x2C929C", VA = "0x2C929C")]
	internal static IntPtr getCPtr(AkPlatformInitSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000C07")]
	[Address(RVA = "0x2C92F4", Offset = "0x2C92F4", VA = "0x2C92F4", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000C08")]
	[Address(RVA = "0x2C9320", Offset = "0x2C9320", VA = "0x2C9320", Slot = "1")]
	~AkPlatformInitSettings()
	{
	}

	[Token(Token = "0x6000C09")]
	[Address(RVA = "0x2C9380", Offset = "0x2C9380", VA = "0x2C9380", Slot = "6")]
	public virtual void Dispose()
	{
	}
}
[Token(Token = "0x2000201")]
internal class AkSoundEnginePINVOKE
{
	[Token(Token = "0x6000C1C")]
	[Address(RVA = "0x301688", Offset = "0x301688", VA = "0x301688")]
	static AkSoundEnginePINVOKE()
	{
	}

	[Token(Token = "0x6000C1D")]
	[Address(RVA = "0x30168C", Offset = "0x30168C", VA = "0x30168C")]
	public AkSoundEnginePINVOKE()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000C1E")]
	[Address(RVA = "0x2DF9E0", Offset = "0x2DF9E0", VA = "0x2DF9E0")]
	public static extern uint CSharp_AK_SOUNDBANK_VERSION_get();

	[PreserveSig]
	[Token(Token = "0x6000C1F")]
	[Address(RVA = "0x301694", Offset = "0x301694", VA = "0x301694")]
	public static extern void CSharp_AkAudioSettings_uNumSamplesPerFrame_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C20")]
	[Address(RVA = "0x30175C", Offset = "0x30175C", VA = "0x30175C")]
	public static extern uint CSharp_AkAudioSettings_uNumSamplesPerFrame_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C21")]
	[Address(RVA = "0x30181C", Offset = "0x30181C", VA = "0x30181C")]
	public static extern void CSharp_AkAudioSettings_uNumSamplesPerSecond_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C22")]
	[Address(RVA = "0x3018E4", Offset = "0x3018E4", VA = "0x3018E4")]
	public static extern uint CSharp_AkAudioSettings_uNumSamplesPerSecond_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C23")]
	[Address(RVA = "0x3019A4", Offset = "0x3019A4", VA = "0x3019A4")]
	public static extern IntPtr CSharp_new_AkAudioSettings();

	[PreserveSig]
	[Token(Token = "0x6000C24")]
	[Address(RVA = "0x301A54", Offset = "0x301A54", VA = "0x301A54")]
	public static extern void CSharp_delete_AkAudioSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C25")]
	[Address(RVA = "0x301B14", Offset = "0x301B14", VA = "0x301B14")]
	public static extern void CSharp_AkExternalSourceInfo_iExternalSrcCookie_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C26")]
	[Address(RVA = "0x301BDC", Offset = "0x301BDC", VA = "0x301BDC")]
	public static extern uint CSharp_AkExternalSourceInfo_iExternalSrcCookie_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C27")]
	[Address(RVA = "0x301C9C", Offset = "0x301C9C", VA = "0x301C9C")]
	public static extern void CSharp_AkExternalSourceInfo_idCodec_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C28")]
	[Address(RVA = "0x301D64", Offset = "0x301D64", VA = "0x301D64")]
	public static extern uint CSharp_AkExternalSourceInfo_idCodec_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C29")]
	[Address(RVA = "0x301E24", Offset = "0x301E24", VA = "0x301E24")]
	public static extern void CSharp_AkExternalSourceInfo_szFile_set(IntPtr jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C2A")]
	[Address(RVA = "0x301F08", Offset = "0x301F08", VA = "0x301F08")]
	public static extern string CSharp_AkExternalSourceInfo_szFile_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C2B")]
	[Address(RVA = "0x301FE0", Offset = "0x301FE0", VA = "0x301FE0")]
	public static extern void CSharp_AkExternalSourceInfo_pInMemory_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C2C")]
	[Address(RVA = "0x3020A8", Offset = "0x3020A8", VA = "0x3020A8")]
	public static extern IntPtr CSharp_AkExternalSourceInfo_pInMemory_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C2D")]
	[Address(RVA = "0x302168", Offset = "0x302168", VA = "0x302168")]
	public static extern void CSharp_AkExternalSourceInfo_uiMemorySize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C2E")]
	[Address(RVA = "0x302230", Offset = "0x302230", VA = "0x302230")]
	public static extern uint CSharp_AkExternalSourceInfo_uiMemorySize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C2F")]
	[Address(RVA = "0x3022F0", Offset = "0x3022F0", VA = "0x3022F0")]
	public static extern void CSharp_AkExternalSourceInfo_idFile_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C30")]
	[Address(RVA = "0x3023B8", Offset = "0x3023B8", VA = "0x3023B8")]
	public static extern uint CSharp_AkExternalSourceInfo_idFile_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C31")]
	[Address(RVA = "0x302478", Offset = "0x302478", VA = "0x302478")]
	public static extern IntPtr CSharp_new_AkExternalSourceInfo__SWIG_0();

	[PreserveSig]
	[Token(Token = "0x6000C32")]
	[Address(RVA = "0x302528", Offset = "0x302528", VA = "0x302528")]
	public static extern IntPtr CSharp_new_AkExternalSourceInfo__SWIG_1(IntPtr jarg1, uint jarg2, uint jarg3, uint jarg4);

	[PreserveSig]
	[Token(Token = "0x6000C33")]
	[Address(RVA = "0x3025FC", Offset = "0x3025FC", VA = "0x3025FC")]
	public static extern IntPtr CSharp_new_AkExternalSourceInfo__SWIG_2(string jarg1, uint jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000C34")]
	[Address(RVA = "0x3026F0", Offset = "0x3026F0", VA = "0x3026F0")]
	public static extern IntPtr CSharp_new_AkExternalSourceInfo__SWIG_3(uint jarg1, uint jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000C35")]
	[Address(RVA = "0x3027C0", Offset = "0x3027C0", VA = "0x3027C0")]
	public static extern void CSharp_delete_AkExternalSourceInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C36")]
	[Address(RVA = "0x302880", Offset = "0x302880", VA = "0x302880")]
	public static extern void CSharp_AkVector_Zero(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C37")]
	[Address(RVA = "0x302940", Offset = "0x302940", VA = "0x302940")]
	public static extern void CSharp_AkVector_X_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C38")]
	[Address(RVA = "0x302A08", Offset = "0x302A08", VA = "0x302A08")]
	public static extern float CSharp_AkVector_X_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C39")]
	[Address(RVA = "0x302AC8", Offset = "0x302AC8", VA = "0x302AC8")]
	public static extern void CSharp_AkVector_Y_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C3A")]
	[Address(RVA = "0x302B90", Offset = "0x302B90", VA = "0x302B90")]
	public static extern float CSharp_AkVector_Y_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C3B")]
	[Address(RVA = "0x302C50", Offset = "0x302C50", VA = "0x302C50")]
	public static extern void CSharp_AkVector_Z_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C3C")]
	[Address(RVA = "0x302D18", Offset = "0x302D18", VA = "0x302D18")]
	public static extern float CSharp_AkVector_Z_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C3D")]
	[Address(RVA = "0x302DD8", Offset = "0x302DD8", VA = "0x302DD8")]
	public static extern IntPtr CSharp_new_AkVector();

	[PreserveSig]
	[Token(Token = "0x6000C3E")]
	[Address(RVA = "0x302E88", Offset = "0x302E88", VA = "0x302E88")]
	public static extern void CSharp_delete_AkVector(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C3F")]
	[Address(RVA = "0x302F48", Offset = "0x302F48", VA = "0x302F48")]
	public static extern IntPtr CSharp_AkTransform_Position(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C40")]
	[Address(RVA = "0x303008", Offset = "0x303008", VA = "0x303008")]
	public static extern IntPtr CSharp_AkTransform_OrientationFront(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C41")]
	[Address(RVA = "0x3030C8", Offset = "0x3030C8", VA = "0x3030C8")]
	public static extern IntPtr CSharp_AkTransform_OrientationTop(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C42")]
	[Address(RVA = "0x303188", Offset = "0x303188", VA = "0x303188")]
	public static extern void CSharp_AkTransform_Set__SWIG_0(IntPtr jarg1, IntPtr jarg2, IntPtr jarg3, IntPtr jarg4);

	[PreserveSig]
	[Token(Token = "0x6000C43")]
	[Address(RVA = "0x30325C", Offset = "0x30325C", VA = "0x30325C")]
	public static extern void CSharp_AkTransform_Set__SWIG_1(IntPtr jarg1, float jarg2, float jarg3, float jarg4, float jarg5, float jarg6, float jarg7, float jarg8, float jarg9, float jarg10);

	[PreserveSig]
	[Token(Token = "0x6000C44")]
	[Address(RVA = "0x303364", Offset = "0x303364", VA = "0x303364")]
	public static extern void CSharp_AkTransform_SetPosition__SWIG_0(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C45")]
	[Address(RVA = "0x30342C", Offset = "0x30342C", VA = "0x30342C")]
	public static extern void CSharp_AkTransform_SetPosition__SWIG_1(IntPtr jarg1, float jarg2, float jarg3, float jarg4);

	[PreserveSig]
	[Token(Token = "0x6000C46")]
	[Address(RVA = "0x303504", Offset = "0x303504", VA = "0x303504")]
	public static extern void CSharp_AkTransform_SetOrientation__SWIG_0(IntPtr jarg1, IntPtr jarg2, IntPtr jarg3);

	[PreserveSig]
	[Token(Token = "0x6000C47")]
	[Address(RVA = "0x3035D4", Offset = "0x3035D4", VA = "0x3035D4")]
	public static extern void CSharp_AkTransform_SetOrientation__SWIG_1(IntPtr jarg1, float jarg2, float jarg3, float jarg4, float jarg5, float jarg6, float jarg7);

	[PreserveSig]
	[Token(Token = "0x6000C48")]
	[Address(RVA = "0x3036C4", Offset = "0x3036C4", VA = "0x3036C4")]
	public static extern IntPtr CSharp_new_AkTransform();

	[PreserveSig]
	[Token(Token = "0x6000C49")]
	[Address(RVA = "0x303774", Offset = "0x303774", VA = "0x303774")]
	public static extern void CSharp_delete_AkTransform(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C4A")]
	[Address(RVA = "0x2C6A24", Offset = "0x2C6A24", VA = "0x2C6A24")]
	public static extern void CSharp_AkObstructionOcclusionValues_occlusion_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C4B")]
	[Address(RVA = "0x2C6B70", Offset = "0x2C6B70", VA = "0x2C6B70")]
	public static extern float CSharp_AkObstructionOcclusionValues_occlusion_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C4C")]
	[Address(RVA = "0x2C6CBC", Offset = "0x2C6CBC", VA = "0x2C6CBC")]
	public static extern void CSharp_AkObstructionOcclusionValues_obstruction_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C4D")]
	[Address(RVA = "0x2C6E08", Offset = "0x2C6E08", VA = "0x2C6E08")]
	public static extern float CSharp_AkObstructionOcclusionValues_obstruction_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C4E")]
	[Address(RVA = "0x2C6624", Offset = "0x2C6624", VA = "0x2C6624")]
	public static extern IntPtr CSharp_new_AkObstructionOcclusionValues();

	[PreserveSig]
	[Token(Token = "0x6000C4F")]
	[Address(RVA = "0x2C68D8", Offset = "0x2C68D8", VA = "0x2C68D8")]
	public static extern void CSharp_delete_AkObstructionOcclusionValues(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C50")]
	[Address(RVA = "0x303834", Offset = "0x303834", VA = "0x303834")]
	public static extern void CSharp_AkChannelEmitter_position_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C51")]
	[Address(RVA = "0x3038FC", Offset = "0x3038FC", VA = "0x3038FC")]
	public static extern IntPtr CSharp_AkChannelEmitter_position_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C52")]
	[Address(RVA = "0x3039BC", Offset = "0x3039BC", VA = "0x3039BC")]
	public static extern void CSharp_AkChannelEmitter_uInputChannels_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C53")]
	[Address(RVA = "0x303A84", Offset = "0x303A84", VA = "0x303A84")]
	public static extern uint CSharp_AkChannelEmitter_uInputChannels_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C54")]
	[Address(RVA = "0x303B44", Offset = "0x303B44", VA = "0x303B44")]
	public static extern IntPtr CSharp_new_AkChannelEmitter();

	[PreserveSig]
	[Token(Token = "0x6000C55")]
	[Address(RVA = "0x303BF4", Offset = "0x303BF4", VA = "0x303BF4")]
	public static extern void CSharp_delete_AkChannelEmitter(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C56")]
	[Address(RVA = "0x303CB4", Offset = "0x303CB4", VA = "0x303CB4")]
	public static extern void CSharp_AkAuxSendValue_listenerID_set(IntPtr jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C57")]
	[Address(RVA = "0x303D84", Offset = "0x303D84", VA = "0x303D84")]
	public static extern ulong CSharp_AkAuxSendValue_listenerID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C58")]
	[Address(RVA = "0x303E44", Offset = "0x303E44", VA = "0x303E44")]
	public static extern void CSharp_AkAuxSendValue_auxBusID_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C59")]
	[Address(RVA = "0x303F0C", Offset = "0x303F0C", VA = "0x303F0C")]
	public static extern uint CSharp_AkAuxSendValue_auxBusID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C5A")]
	[Address(RVA = "0x303FCC", Offset = "0x303FCC", VA = "0x303FCC")]
	public static extern void CSharp_AkAuxSendValue_fControlValue_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C5B")]
	[Address(RVA = "0x304094", Offset = "0x304094", VA = "0x304094")]
	public static extern float CSharp_AkAuxSendValue_fControlValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C5C")]
	[Address(RVA = "0x304154", Offset = "0x304154", VA = "0x304154")]
	public static extern void CSharp_AkAuxSendValue_Set(IntPtr jarg1, ulong jarg2, uint jarg3, float jarg4);

	[PreserveSig]
	[Token(Token = "0x6000C5D")]
	[Address(RVA = "0x304234", Offset = "0x304234", VA = "0x304234")]
	public static extern bool CSharp_AkAuxSendValue_IsSame(IntPtr jarg1, ulong jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000C5E")]
	[Address(RVA = "0x304314", Offset = "0x304314", VA = "0x304314")]
	public static extern int CSharp_AkAuxSendValue_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x6000C5F")]
	[Address(RVA = "0x3043C4", Offset = "0x3043C4", VA = "0x3043C4")]
	public static extern int CSharp_AkAuxSendValue_SetGameObjectAuxSendValues(IntPtr jarg1, ulong jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000C60")]
	[Address(RVA = "0x30449C", Offset = "0x30449C", VA = "0x30449C")]
	public static extern int CSharp_AkAuxSendValue_GetGameObjectAuxSendValues(IntPtr jarg1, ulong jarg2, ref uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000C61")]
	[Address(RVA = "0x304574", Offset = "0x304574", VA = "0x304574")]
	public static extern void CSharp_delete_AkAuxSendValue(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C62")]
	[Address(RVA = "0x2D5024", Offset = "0x2D5024", VA = "0x2D5024")]
	public static extern IntPtr CSharp_new_AkRamp__SWIG_0();

	[PreserveSig]
	[Token(Token = "0x6000C63")]
	[Address(RVA = "0x2D517C", Offset = "0x2D517C", VA = "0x2D517C")]
	public static extern IntPtr CSharp_new_AkRamp__SWIG_1(float jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C64")]
	[Address(RVA = "0x2D5594", Offset = "0x2D5594", VA = "0x2D5594")]
	public static extern void CSharp_AkRamp_fPrev_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C65")]
	[Address(RVA = "0x2D56E0", Offset = "0x2D56E0", VA = "0x2D56E0")]
	public static extern float CSharp_AkRamp_fPrev_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C66")]
	[Address(RVA = "0x2D582C", Offset = "0x2D582C", VA = "0x2D582C")]
	public static extern void CSharp_AkRamp_fNext_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C67")]
	[Address(RVA = "0x2D5978", Offset = "0x2D5978", VA = "0x2D5978")]
	public static extern float CSharp_AkRamp_fNext_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C68")]
	[Address(RVA = "0x2D5448", Offset = "0x2D5448", VA = "0x2D5448")]
	public static extern void CSharp_delete_AkRamp(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C69")]
	[Address(RVA = "0x2DFB08", Offset = "0x2DFB08", VA = "0x2DFB08")]
	public static extern ushort CSharp_AK_INT_get();

	[PreserveSig]
	[Token(Token = "0x6000C6A")]
	[Address(RVA = "0x2DFC30", Offset = "0x2DFC30", VA = "0x2DFC30")]
	public static extern ushort CSharp_AK_FLOAT_get();

	[PreserveSig]
	[Token(Token = "0x6000C6B")]
	[Address(RVA = "0x2DFD58", Offset = "0x2DFD58", VA = "0x2DFD58")]
	public static extern byte CSharp_AK_INTERLEAVED_get();

	[PreserveSig]
	[Token(Token = "0x6000C6C")]
	[Address(RVA = "0x2DFE80", Offset = "0x2DFE80", VA = "0x2DFE80")]
	public static extern byte CSharp_AK_NONINTERLEAVED_get();

	[PreserveSig]
	[Token(Token = "0x6000C6D")]
	[Address(RVA = "0x2DFFA8", Offset = "0x2DFFA8", VA = "0x2DFFA8")]
	public static extern uint CSharp_AK_LE_NATIVE_BITSPERSAMPLE_get();

	[PreserveSig]
	[Token(Token = "0x6000C6E")]
	[Address(RVA = "0x2E00D0", Offset = "0x2E00D0", VA = "0x2E00D0")]
	public static extern uint CSharp_AK_LE_NATIVE_SAMPLETYPE_get();

	[PreserveSig]
	[Token(Token = "0x6000C6F")]
	[Address(RVA = "0x2E01F8", Offset = "0x2E01F8", VA = "0x2E01F8")]
	public static extern uint CSharp_AK_LE_NATIVE_INTERLEAVE_get();

	[PreserveSig]
	[Token(Token = "0x6000C70")]
	[Address(RVA = "0x304634", Offset = "0x304634", VA = "0x304634")]
	public static extern void CSharp_AkAudioFormat_uSampleRate_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C71")]
	[Address(RVA = "0x3046FC", Offset = "0x3046FC", VA = "0x3046FC")]
	public static extern uint CSharp_AkAudioFormat_uSampleRate_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C72")]
	[Address(RVA = "0x3047BC", Offset = "0x3047BC", VA = "0x3047BC")]
	public static extern void CSharp_AkAudioFormat_channelConfig_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C73")]
	[Address(RVA = "0x304884", Offset = "0x304884", VA = "0x304884")]
	public static extern IntPtr CSharp_AkAudioFormat_channelConfig_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C74")]
	[Address(RVA = "0x304944", Offset = "0x304944", VA = "0x304944")]
	public static extern void CSharp_AkAudioFormat_uBitsPerSample_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C75")]
	[Address(RVA = "0x304A0C", Offset = "0x304A0C", VA = "0x304A0C")]
	public static extern uint CSharp_AkAudioFormat_uBitsPerSample_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C76")]
	[Address(RVA = "0x304ACC", Offset = "0x304ACC", VA = "0x304ACC")]
	public static extern void CSharp_AkAudioFormat_uBlockAlign_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C77")]
	[Address(RVA = "0x304B94", Offset = "0x304B94", VA = "0x304B94")]
	public static extern uint CSharp_AkAudioFormat_uBlockAlign_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C78")]
	[Address(RVA = "0x304C54", Offset = "0x304C54", VA = "0x304C54")]
	public static extern void CSharp_AkAudioFormat_uTypeID_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C79")]
	[Address(RVA = "0x304D1C", Offset = "0x304D1C", VA = "0x304D1C")]
	public static extern uint CSharp_AkAudioFormat_uTypeID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C7A")]
	[Address(RVA = "0x304DDC", Offset = "0x304DDC", VA = "0x304DDC")]
	public static extern void CSharp_AkAudioFormat_uInterleaveID_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C7B")]
	[Address(RVA = "0x304EA4", Offset = "0x304EA4", VA = "0x304EA4")]
	public static extern uint CSharp_AkAudioFormat_uInterleaveID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C7C")]
	[Address(RVA = "0x304F64", Offset = "0x304F64", VA = "0x304F64")]
	public static extern uint CSharp_AkAudioFormat_GetNumChannels(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C7D")]
	[Address(RVA = "0x305024", Offset = "0x305024", VA = "0x305024")]
	public static extern uint CSharp_AkAudioFormat_GetBitsPerSample(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C7E")]
	[Address(RVA = "0x3050E4", Offset = "0x3050E4", VA = "0x3050E4")]
	public static extern uint CSharp_AkAudioFormat_GetBlockAlign(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C7F")]
	[Address(RVA = "0x3051A4", Offset = "0x3051A4", VA = "0x3051A4")]
	public static extern uint CSharp_AkAudioFormat_GetTypeID(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C80")]
	[Address(RVA = "0x305264", Offset = "0x305264", VA = "0x305264")]
	public static extern uint CSharp_AkAudioFormat_GetInterleaveID(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C81")]
	[Address(RVA = "0x305324", Offset = "0x305324", VA = "0x305324")]
	public static extern void CSharp_AkAudioFormat_SetAll(IntPtr jarg1, uint jarg2, IntPtr jarg3, uint jarg4, uint jarg5, uint jarg6, uint jarg7);

	[PreserveSig]
	[Token(Token = "0x6000C82")]
	[Address(RVA = "0x305410", Offset = "0x305410", VA = "0x305410")]
	public static extern bool CSharp_AkAudioFormat_IsChannelConfigSupported(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C83")]
	[Address(RVA = "0x3054D8", Offset = "0x3054D8", VA = "0x3054D8")]
	public static extern IntPtr CSharp_new_AkAudioFormat();

	[PreserveSig]
	[Token(Token = "0x6000C84")]
	[Address(RVA = "0x305588", Offset = "0x305588", VA = "0x305588")]
	public static extern void CSharp_delete_AkAudioFormat(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C85")]
	[Address(RVA = "0x305648", Offset = "0x305648", VA = "0x305648")]
	public static extern void CSharp_AkIterator_pItem_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C86")]
	[Address(RVA = "0x305710", Offset = "0x305710", VA = "0x305710")]
	public static extern IntPtr CSharp_AkIterator_pItem_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C87")]
	[Address(RVA = "0x3057D0", Offset = "0x3057D0", VA = "0x3057D0")]
	public static extern IntPtr CSharp_AkIterator_NextIter(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C88")]
	[Address(RVA = "0x305890", Offset = "0x305890", VA = "0x305890")]
	public static extern IntPtr CSharp_AkIterator_PrevIter(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C89")]
	[Address(RVA = "0x305950", Offset = "0x305950", VA = "0x305950")]
	public static extern IntPtr CSharp_AkIterator_GetItem(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C8A")]
	[Address(RVA = "0x305A10", Offset = "0x305A10", VA = "0x305A10")]
	public static extern bool CSharp_AkIterator_IsEqualTo(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C8B")]
	[Address(RVA = "0x305AE0", Offset = "0x305AE0", VA = "0x305AE0")]
	public static extern bool CSharp_AkIterator_IsDifferentFrom(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C8C")]
	[Address(RVA = "0x305BB0", Offset = "0x305BB0", VA = "0x305BB0")]
	public static extern IntPtr CSharp_new_AkIterator();

	[PreserveSig]
	[Token(Token = "0x6000C8D")]
	[Address(RVA = "0x305C60", Offset = "0x305C60", VA = "0x305C60")]
	public static extern void CSharp_delete_AkIterator(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C8E")]
	[Address(RVA = "0x305D20", Offset = "0x305D20", VA = "0x305D20")]
	public static extern int CSharp__ArrayPoolDefault_Get();

	[PreserveSig]
	[Token(Token = "0x6000C8F")]
	[Address(RVA = "0x305DD0", Offset = "0x305DD0", VA = "0x305DD0")]
	public static extern IntPtr CSharp_new__ArrayPoolDefault();

	[PreserveSig]
	[Token(Token = "0x6000C90")]
	[Address(RVA = "0x305E80", Offset = "0x305E80", VA = "0x305E80")]
	public static extern void CSharp_delete__ArrayPoolDefault(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C91")]
	[Address(RVA = "0x305F40", Offset = "0x305F40", VA = "0x305F40")]
	public static extern int CSharp__ArrayPoolLEngineDefault_Get();

	[PreserveSig]
	[Token(Token = "0x6000C92")]
	[Address(RVA = "0x305FF0", Offset = "0x305FF0", VA = "0x305FF0")]
	public static extern IntPtr CSharp_new__ArrayPoolLEngineDefault();

	[PreserveSig]
	[Token(Token = "0x6000C93")]
	[Address(RVA = "0x3060A0", Offset = "0x3060A0", VA = "0x3060A0")]
	public static extern void CSharp_delete__ArrayPoolLEngineDefault(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C94")]
	[Address(RVA = "0x2CE8D0", Offset = "0x2CE8D0", VA = "0x2CE8D0")]
	public static extern IntPtr CSharp_new_AkPlaylistItem__SWIG_0();

	[PreserveSig]
	[Token(Token = "0x6000C95")]
	[Address(RVA = "0x2CEA68", Offset = "0x2CEA68", VA = "0x2CEA68")]
	public static extern IntPtr CSharp_new_AkPlaylistItem__SWIG_1(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C96")]
	[Address(RVA = "0x2CECD4", Offset = "0x2CECD4", VA = "0x2CECD4")]
	public static extern void CSharp_delete_AkPlaylistItem(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C97")]
	[Address(RVA = "0x2CEE9C", Offset = "0x2CEE9C", VA = "0x2CEE9C")]
	public static extern IntPtr CSharp_AkPlaylistItem_Assign(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C98")]
	[Address(RVA = "0x2CF038", Offset = "0x2CF038", VA = "0x2CF038")]
	public static extern bool CSharp_AkPlaylistItem_IsEqualTo(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C99")]
	[Address(RVA = "0x2CF1B8", Offset = "0x2CF1B8", VA = "0x2CF1B8")]
	public static extern int CSharp_AkPlaylistItem_SetExternalSources(IntPtr jarg1, uint jarg2, IntPtr jarg3);

	[PreserveSig]
	[Token(Token = "0x6000C9A")]
	[Address(RVA = "0x2CF314", Offset = "0x2CF314", VA = "0x2CF314")]
	public static extern void CSharp_AkPlaylistItem_audioNodeID_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C9B")]
	[Address(RVA = "0x2CF460", Offset = "0x2CF460", VA = "0x2CF460")]
	public static extern uint CSharp_AkPlaylistItem_audioNodeID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C9C")]
	[Address(RVA = "0x2CF5AC", Offset = "0x2CF5AC", VA = "0x2CF5AC")]
	public static extern void CSharp_AkPlaylistItem_msDelay_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C9D")]
	[Address(RVA = "0x2CF6F8", Offset = "0x2CF6F8", VA = "0x2CF6F8")]
	public static extern int CSharp_AkPlaylistItem_msDelay_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C9E")]
	[Address(RVA = "0x2CF844", Offset = "0x2CF844", VA = "0x2CF844")]
	public static extern void CSharp_AkPlaylistItem_pCustomInfo_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C9F")]
	[Address(RVA = "0x2CF990", Offset = "0x2CF990", VA = "0x2CF990")]
	public static extern IntPtr CSharp_AkPlaylistItem_pCustomInfo_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CA0")]
	[Address(RVA = "0x2CBD98", Offset = "0x2CBD98", VA = "0x2CBD98")]
	public static extern IntPtr CSharp_new_AkPlaylistArray();

	[PreserveSig]
	[Token(Token = "0x6000CA1")]
	[Address(RVA = "0x2CBEA0", Offset = "0x2CBEA0", VA = "0x2CBEA0")]
	public static extern void CSharp_delete_AkPlaylistArray(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CA2")]
	[Address(RVA = "0x2CC014", Offset = "0x2CC014", VA = "0x2CC014")]
	public static extern IntPtr CSharp_AkPlaylistArray_Begin(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CA3")]
	[Address(RVA = "0x2CC188", Offset = "0x2CC188", VA = "0x2CC188")]
	public static extern IntPtr CSharp_AkPlaylistArray_End(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CA4")]
	[Address(RVA = "0x2CC3A4", Offset = "0x2CC3A4", VA = "0x2CC3A4")]
	public static extern IntPtr CSharp_AkPlaylistArray_FindEx(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CA5")]
	[Address(RVA = "0x2CC53C", Offset = "0x2CC53C", VA = "0x2CC53C")]
	public static extern IntPtr CSharp_AkPlaylistArray_Erase__SWIG_0(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CA6")]
	[Address(RVA = "0x2CC690", Offset = "0x2CC690", VA = "0x2CC690")]
	public static extern void CSharp_AkPlaylistArray_Erase__SWIG_1(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CA7")]
	[Address(RVA = "0x2CC828", Offset = "0x2CC828", VA = "0x2CC828")]
	public static extern IntPtr CSharp_AkPlaylistArray_EraseSwap(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CA8")]
	[Address(RVA = "0x2CC97C", Offset = "0x2CC97C", VA = "0x2CC97C")]
	public static extern int CSharp_AkPlaylistArray_Reserve(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CA9")]
	[Address(RVA = "0x2CCAC8", Offset = "0x2CCAC8", VA = "0x2CCAC8")]
	public static extern uint CSharp_AkPlaylistArray_Reserved(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CAA")]
	[Address(RVA = "0x2CCC0C", Offset = "0x2CCC0C", VA = "0x2CCC0C")]
	public static extern void CSharp_AkPlaylistArray_Term(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CAB")]
	[Address(RVA = "0x2CCD50", Offset = "0x2CCD50", VA = "0x2CCD50")]
	public static extern uint CSharp_AkPlaylistArray_Length(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CAC")]
	[Address(RVA = "0x2CCEE8", Offset = "0x2CCEE8", VA = "0x2CCEE8")]
	public static extern IntPtr CSharp_AkPlaylistArray_Data(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CAD")]
	[Address(RVA = "0x2CD054", Offset = "0x2CD054", VA = "0x2CD054")]
	public static extern bool CSharp_AkPlaylistArray_IsEmpty(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CAE")]
	[Address(RVA = "0x2CD244", Offset = "0x2CD244", VA = "0x2CD244")]
	public static extern IntPtr CSharp_AkPlaylistArray_Exists(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CAF")]
	[Address(RVA = "0x2CD3E4", Offset = "0x2CD3E4", VA = "0x2CD3E4")]
	public static extern IntPtr CSharp_AkPlaylistArray_AddLast__SWIG_0(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CB0")]
	[Address(RVA = "0x2CD5CC", Offset = "0x2CD5CC", VA = "0x2CD5CC")]
	public static extern IntPtr CSharp_AkPlaylistArray_AddLast__SWIG_1(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CB1")]
	[Address(RVA = "0x2CD74C", Offset = "0x2CD74C", VA = "0x2CD74C")]
	public static extern IntPtr CSharp_AkPlaylistArray_Last(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CB2")]
	[Address(RVA = "0x2CD890", Offset = "0x2CD890", VA = "0x2CD890")]
	public static extern void CSharp_AkPlaylistArray_RemoveLast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CB3")]
	[Address(RVA = "0x2CDA24", Offset = "0x2CDA24", VA = "0x2CDA24")]
	public static extern int CSharp_AkPlaylistArray_Remove(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CB4")]
	[Address(RVA = "0x2CDBC0", Offset = "0x2CDBC0", VA = "0x2CDBC0")]
	public static extern int CSharp_AkPlaylistArray_RemoveSwap(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CB5")]
	[Address(RVA = "0x2CDD0C", Offset = "0x2CDD0C", VA = "0x2CDD0C")]
	public static extern void CSharp_AkPlaylistArray_RemoveAll(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CB6")]
	[Address(RVA = "0x2CDE8C", Offset = "0x2CDE8C", VA = "0x2CDE8C")]
	public static extern IntPtr CSharp_AkPlaylistArray_ItemAtIndex(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CB7")]
	[Address(RVA = "0x2CE034", Offset = "0x2CE034", VA = "0x2CE034")]
	public static extern IntPtr CSharp_AkPlaylistArray_Insert(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CB8")]
	[Address(RVA = "0x2CE188", Offset = "0x2CE188", VA = "0x2CE188")]
	public static extern bool CSharp_AkPlaylistArray_GrowArray__SWIG_0(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CB9")]
	[Address(RVA = "0x2CE2DC", Offset = "0x2CE2DC", VA = "0x2CE2DC")]
	public static extern bool CSharp_AkPlaylistArray_GrowArray__SWIG_1(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CBA")]
	[Address(RVA = "0x2CE430", Offset = "0x2CE430", VA = "0x2CE430")]
	public static extern bool CSharp_AkPlaylistArray_Resize(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CBB")]
	[Address(RVA = "0x2CE5D4", Offset = "0x2CE5D4", VA = "0x2CE5D4")]
	public static extern void CSharp_AkPlaylistArray_Transfer(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CBC")]
	[Address(RVA = "0x2CE770", Offset = "0x2CE770", VA = "0x2CE770")]
	public static extern int CSharp_AkPlaylistArray_Copy(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CBD")]
	[Address(RVA = "0x2CB660", Offset = "0x2CB660", VA = "0x2CB660")]
	public static extern int CSharp_AkPlaylist_Enqueue__SWIG_0(IntPtr jarg1, uint jarg2, int jarg3, IntPtr jarg4, uint jarg5, IntPtr jarg6);

	[PreserveSig]
	[Token(Token = "0x6000CBE")]
	[Address(RVA = "0x2CB7EC", Offset = "0x2CB7EC", VA = "0x2CB7EC")]
	public static extern int CSharp_AkPlaylist_Enqueue__SWIG_1(IntPtr jarg1, uint jarg2, int jarg3, IntPtr jarg4, uint jarg5);

	[PreserveSig]
	[Token(Token = "0x6000CBF")]
	[Address(RVA = "0x2CB96C", Offset = "0x2CB96C", VA = "0x2CB96C")]
	public static extern int CSharp_AkPlaylist_Enqueue__SWIG_2(IntPtr jarg1, uint jarg2, int jarg3, IntPtr jarg4);

	[PreserveSig]
	[Token(Token = "0x6000CC0")]
	[Address(RVA = "0x2CBADC", Offset = "0x2CBADC", VA = "0x2CBADC")]
	public static extern int CSharp_AkPlaylist_Enqueue__SWIG_3(IntPtr jarg1, uint jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x6000CC1")]
	[Address(RVA = "0x2CBC38", Offset = "0x2CBC38", VA = "0x2CBC38")]
	public static extern int CSharp_AkPlaylist_Enqueue__SWIG_4(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CC2")]
	[Address(RVA = "0x2CB004", Offset = "0x2CB004", VA = "0x2CB004")]
	public static extern IntPtr CSharp_new_AkPlaylist();

	[PreserveSig]
	[Token(Token = "0x6000CC3")]
	[Address(RVA = "0x2CB3BC", Offset = "0x2CB3BC", VA = "0x2CB3BC")]
	public static extern void CSharp_delete_AkPlaylist(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CC4")]
	[Address(RVA = "0x2E044C", Offset = "0x2E044C", VA = "0x2E044C")]
	public static extern uint CSharp_DynamicSequenceOpen__SWIG_0(ulong jarg1, uint jarg2, IntPtr jarg3, IntPtr jarg4, int jarg5);

	[PreserveSig]
	[Token(Token = "0x6000CC5")]
	[Address(RVA = "0x2E06C8", Offset = "0x2E06C8", VA = "0x2E06C8")]
	public static extern uint CSharp_DynamicSequenceOpen__SWIG_1(ulong jarg1, uint jarg2, IntPtr jarg3, IntPtr jarg4);

	[PreserveSig]
	[Token(Token = "0x6000CC6")]
	[Address(RVA = "0x2E08B4", Offset = "0x2E08B4", VA = "0x2E08B4")]
	public static extern uint CSharp_DynamicSequenceOpen__SWIG_2(ulong jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CC7")]
	[Address(RVA = "0x2E0A8C", Offset = "0x2E0A8C", VA = "0x2E0A8C")]
	public static extern uint CSharp_DynamicSequenceOpen__SWIG_3(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CC8")]
	[Address(RVA = "0x2E0BD4", Offset = "0x2E0BD4", VA = "0x2E0BD4")]
	public static extern int CSharp_DynamicSequenceClose(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CC9")]
	[Address(RVA = "0x2E0D2C", Offset = "0x2E0D2C", VA = "0x2E0D2C")]
	public static extern int CSharp_DynamicSequencePlay__SWIG_0(uint jarg1, int jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x6000CCA")]
	[Address(RVA = "0x2E0E84", Offset = "0x2E0E84", VA = "0x2E0E84")]
	public static extern int CSharp_DynamicSequencePlay__SWIG_1(uint jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CCB")]
	[Address(RVA = "0x2E0FCC", Offset = "0x2E0FCC", VA = "0x2E0FCC")]
	public static extern int CSharp_DynamicSequencePlay__SWIG_2(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CCC")]
	[Address(RVA = "0x2E1124", Offset = "0x2E1124", VA = "0x2E1124")]
	public static extern int CSharp_DynamicSequencePause__SWIG_0(uint jarg1, int jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x6000CCD")]
	[Address(RVA = "0x2E127C", Offset = "0x2E127C", VA = "0x2E127C")]
	public static extern int CSharp_DynamicSequencePause__SWIG_1(uint jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CCE")]
	[Address(RVA = "0x2E13C4", Offset = "0x2E13C4", VA = "0x2E13C4")]
	public static extern int CSharp_DynamicSequencePause__SWIG_2(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CCF")]
	[Address(RVA = "0x2E151C", Offset = "0x2E151C", VA = "0x2E151C")]
	public static extern int CSharp_DynamicSequenceResume__SWIG_0(uint jarg1, int jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x6000CD0")]
	[Address(RVA = "0x2E1674", Offset = "0x2E1674", VA = "0x2E1674")]
	public static extern int CSharp_DynamicSequenceResume__SWIG_1(uint jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CD1")]
	[Address(RVA = "0x2E17BC", Offset = "0x2E17BC", VA = "0x2E17BC")]
	public static extern int CSharp_DynamicSequenceResume__SWIG_2(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CD2")]
	[Address(RVA = "0x2E1914", Offset = "0x2E1914", VA = "0x2E1914")]
	public static extern int CSharp_DynamicSequenceStop__SWIG_0(uint jarg1, int jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x6000CD3")]
	[Address(RVA = "0x2E1A6C", Offset = "0x2E1A6C", VA = "0x2E1A6C")]
	public static extern int CSharp_DynamicSequenceStop__SWIG_1(uint jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CD4")]
	[Address(RVA = "0x2E1BB4", Offset = "0x2E1BB4", VA = "0x2E1BB4")]
	public static extern int CSharp_DynamicSequenceStop__SWIG_2(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CD5")]
	[Address(RVA = "0x2E1CF4", Offset = "0x2E1CF4", VA = "0x2E1CF4")]
	public static extern int CSharp_DynamicSequenceBreak(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CD6")]
	[Address(RVA = "0x2E1E4C", Offset = "0x2E1E4C", VA = "0x2E1E4C")]
	public static extern int CSharp_DynamicSequenceGetPauseTimes(uint jarg1, out uint jarg2, out uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000CD7")]
	[Address(RVA = "0x2E2004", Offset = "0x2E2004", VA = "0x2E2004")]
	public static extern IntPtr CSharp_DynamicSequenceLockPlaylist(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CD8")]
	[Address(RVA = "0x2E2144", Offset = "0x2E2144", VA = "0x2E2144")]
	public static extern int CSharp_DynamicSequenceUnlockPlaylist(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CD9")]
	[Address(RVA = "0x2C6F88", Offset = "0x2C6F88", VA = "0x2C6F88")]
	public static extern IntPtr CSharp_new_AkOutputSettings__SWIG_0();

	[PreserveSig]
	[Token(Token = "0x6000CDA")]
	[Address(RVA = "0x2C710C", Offset = "0x2C710C", VA = "0x2C710C")]
	public static extern IntPtr CSharp_new_AkOutputSettings__SWIG_1(string jarg1, uint jarg2, IntPtr jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x6000CDB")]
	[Address(RVA = "0x2C72D4", Offset = "0x2C72D4", VA = "0x2C72D4")]
	public static extern IntPtr CSharp_new_AkOutputSettings__SWIG_2(string jarg1, uint jarg2, IntPtr jarg3);

	[PreserveSig]
	[Token(Token = "0x6000CDC")]
	[Address(RVA = "0x2C7470", Offset = "0x2C7470", VA = "0x2C7470")]
	public static extern IntPtr CSharp_new_AkOutputSettings__SWIG_3(string jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CDD")]
	[Address(RVA = "0x2C75FC", Offset = "0x2C75FC", VA = "0x2C75FC")]
	public static extern IntPtr CSharp_new_AkOutputSettings__SWIG_4(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CDE")]
	[Address(RVA = "0x2C7A30", Offset = "0x2C7A30", VA = "0x2C7A30")]
	public static extern void CSharp_AkOutputSettings_audioDeviceShareset_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CDF")]
	[Address(RVA = "0x2C7B7C", Offset = "0x2C7B7C", VA = "0x2C7B7C")]
	public static extern uint CSharp_AkOutputSettings_audioDeviceShareset_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CE0")]
	[Address(RVA = "0x2C7CC8", Offset = "0x2C7CC8", VA = "0x2C7CC8")]
	public static extern void CSharp_AkOutputSettings_idDevice_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CE1")]
	[Address(RVA = "0x2C7E14", Offset = "0x2C7E14", VA = "0x2C7E14")]
	public static extern uint CSharp_AkOutputSettings_idDevice_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CE2")]
	[Address(RVA = "0x2C7F60", Offset = "0x2C7F60", VA = "0x2C7F60")]
	public static extern void CSharp_AkOutputSettings_ePanningRule_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CE3")]
	[Address(RVA = "0x2C80AC", Offset = "0x2C80AC", VA = "0x2C80AC")]
	public static extern int CSharp_AkOutputSettings_ePanningRule_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CE4")]
	[Address(RVA = "0x2C820C", Offset = "0x2C820C", VA = "0x2C820C")]
	public static extern void CSharp_AkOutputSettings_channelConfig_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CE5")]
	[Address(RVA = "0x2C83A8", Offset = "0x2C83A8", VA = "0x2C83A8")]
	public static extern IntPtr CSharp_AkOutputSettings_channelConfig_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CE6")]
	[Address(RVA = "0x2C78E4", Offset = "0x2C78E4", VA = "0x2C78E4")]
	public static extern void CSharp_delete_AkOutputSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CE7")]
	[Address(RVA = "0x306160", Offset = "0x306160", VA = "0x306160")]
	public static extern void CSharp_AkTaskContext_uIdxThread_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CE8")]
	[Address(RVA = "0x306228", Offset = "0x306228", VA = "0x306228")]
	public static extern uint CSharp_AkTaskContext_uIdxThread_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CE9")]
	[Address(RVA = "0x3062E8", Offset = "0x3062E8", VA = "0x3062E8")]
	public static extern IntPtr CSharp_new_AkTaskContext();

	[PreserveSig]
	[Token(Token = "0x6000CEA")]
	[Address(RVA = "0x306398", Offset = "0x306398", VA = "0x306398")]
	public static extern void CSharp_delete_AkTaskContext(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CEB")]
	[Address(RVA = "0x306458", Offset = "0x306458", VA = "0x306458")]
	public static extern void CSharp_AkInitSettings_pfnAssertHook_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CEC")]
	[Address(RVA = "0x306520", Offset = "0x306520", VA = "0x306520")]
	public static extern IntPtr CSharp_AkInitSettings_pfnAssertHook_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CED")]
	[Address(RVA = "0x3065E0", Offset = "0x3065E0", VA = "0x3065E0")]
	public static extern void CSharp_AkInitSettings_uMaxNumPaths_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CEE")]
	[Address(RVA = "0x3066A8", Offset = "0x3066A8", VA = "0x3066A8")]
	public static extern uint CSharp_AkInitSettings_uMaxNumPaths_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CEF")]
	[Address(RVA = "0x306768", Offset = "0x306768", VA = "0x306768")]
	public static extern void CSharp_AkInitSettings_uDefaultPoolSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CF0")]
	[Address(RVA = "0x306830", Offset = "0x306830", VA = "0x306830")]
	public static extern uint CSharp_AkInitSettings_uDefaultPoolSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CF1")]
	[Address(RVA = "0x3068F0", Offset = "0x3068F0", VA = "0x3068F0")]
	public static extern void CSharp_AkInitSettings_fDefaultPoolRatioThreshold_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CF2")]
	[Address(RVA = "0x3069B8", Offset = "0x3069B8", VA = "0x3069B8")]
	public static extern float CSharp_AkInitSettings_fDefaultPoolRatioThreshold_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CF3")]
	[Address(RVA = "0x306A78", Offset = "0x306A78", VA = "0x306A78")]
	public static extern void CSharp_AkInitSettings_uCommandQueueSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CF4")]
	[Address(RVA = "0x306B40", Offset = "0x306B40", VA = "0x306B40")]
	public static extern uint CSharp_AkInitSettings_uCommandQueueSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CF5")]
	[Address(RVA = "0x306C00", Offset = "0x306C00", VA = "0x306C00")]
	public static extern void CSharp_AkInitSettings_uPrepareEventMemoryPoolID_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CF6")]
	[Address(RVA = "0x306CC8", Offset = "0x306CC8", VA = "0x306CC8")]
	public static extern int CSharp_AkInitSettings_uPrepareEventMemoryPoolID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CF7")]
	[Address(RVA = "0x306D88", Offset = "0x306D88", VA = "0x306D88")]
	public static extern void CSharp_AkInitSettings_bEnableGameSyncPreparation_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CF8")]
	[Address(RVA = "0x306E50", Offset = "0x306E50", VA = "0x306E50")]
	public static extern bool CSharp_AkInitSettings_bEnableGameSyncPreparation_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CF9")]
	[Address(RVA = "0x306F18", Offset = "0x306F18", VA = "0x306F18")]
	public static extern void CSharp_AkInitSettings_uContinuousPlaybackLookAhead_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CFA")]
	[Address(RVA = "0x306FE0", Offset = "0x306FE0", VA = "0x306FE0")]
	public static extern uint CSharp_AkInitSettings_uContinuousPlaybackLookAhead_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CFB")]
	[Address(RVA = "0x3070A0", Offset = "0x3070A0", VA = "0x3070A0")]
	public static extern void CSharp_AkInitSettings_uNumSamplesPerFrame_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CFC")]
	[Address(RVA = "0x307168", Offset = "0x307168", VA = "0x307168")]
	public static extern uint CSharp_AkInitSettings_uNumSamplesPerFrame_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CFD")]
	[Address(RVA = "0x307228", Offset = "0x307228", VA = "0x307228")]
	public static extern void CSharp_AkInitSettings_uMonitorPoolSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CFE")]
	[Address(RVA = "0x3072F0", Offset = "0x3072F0", VA = "0x3072F0")]
	public static extern uint CSharp_AkInitSettings_uMonitorPoolSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CFF")]
	[Address(RVA = "0x3073B0", Offset = "0x3073B0", VA = "0x3073B0")]
	public static extern void CSharp_AkInitSettings_uMonitorQueuePoolSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000D00")]
	[Address(RVA = "0x307478", Offset = "0x307478", VA = "0x307478")]
	public static extern uint CSharp_AkInitSettings_uMonitorQueuePoolSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D01")]
	[Address(RVA = "0x307538", Offset = "0x307538", VA = "0x307538")]
	public static extern void CSharp_AkInitSettings_settingsMainOutput_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000D02")]
	[Address(RVA = "0x307600", Offset = "0x307600", VA = "0x307600")]
	public static extern IntPtr CSharp_AkInitSettings_settingsMainOutput_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D03")]
	[Address(RVA = "0x3076C0", Offset = "0x3076C0", VA = "0x3076C0")]
	public static extern void CSharp_AkInitSettings_uMaxHardwareTimeoutMs_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000D04")]
	[Address(RVA = "0x307788", Offset = "0x307788", VA = "0x307788")]
	public static extern uint CSharp_AkInitSettings_uMaxHardwareTimeoutMs_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D05")]
	[Address(RVA = "0x307848", Offset = "0x307848", VA = "0x307848")]
	public static extern void CSharp_AkInitSettings_bUseSoundBankMgrThread_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6000D06")]
	[Address(RVA = "0x307910", Offset = "0x307910", VA = "0x307910")]
	public static extern bool CSharp_AkInitSettings_bUseSoundBankMgrThread_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D07")]
	[Address(RVA = "0x3079D8", Offset = "0x3079D8", VA = "0x3079D8")]
	public static extern void CSharp_AkInitSettings_bUseLEngineThread_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6000D08")]
	[Address(RVA = "0x307AA0", Offset = "0x307AA0", VA = "0x307AA0")]
	public static extern bool CSharp_AkInitSettings_bUseLEngineThread_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D09")]
	[Address(RVA = "0x307B68", Offset = "0x307B68", VA = "0x307B68")]
	public static extern void CSharp_AkInitSettings_szPluginDLLPath_set(IntPtr jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x6000D0A")]
	[Address(RVA = "0x307C4C", Offset = "0x307C4C", VA = "0x307C4C")]
	public static extern IntPtr CSharp_AkInitSettings_szPluginDLLPath_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D0B")]
	[Address(RVA = "0x307D0C", Offset = "0x307D0C", VA = "0x307D0C")]
	public static extern void CSharp_AkInitSettings_eFloorPlane_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000D0C")]
	[Address(RVA = "0x307DD4", Offset = "0x307DD4", VA = "0x307DD4")]
	public static extern int CSharp_AkInitSettings_eFloorPlane_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D0D")]
	[Address(RVA = "0x307E94", Offset = "0x307E94", VA = "0x307E94")]
	public static extern IntPtr CSharp_new_AkInitSettings();

	[PreserveSig]
	[Token(Token = "0x6000D0E")]
	[Address(RVA = "0x307F44", Offset = "0x307F44", VA = "0x307F44")]
	public static extern void CSharp_delete_AkInitSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D0F")]
	[Address(RVA = "0x308004", Offset = "0x308004", VA = "0x308004")]
	public static extern void CSharp_AkSourceSettings_sourceID_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000D10")]
	[Address(RVA = "0x3080CC", Offset = "0x3080CC", VA = "0x3080CC")]
	public static extern uint CSharp_AkSourceSettings_sourceID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D11")]
	[Address(RVA = "0x30818C", Offset = "0x30818C", VA = "0x30818C")]
	public static extern void CSharp_AkSourceSettings_pMediaMemory_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000D12")]
	[Address(RVA = "0x308254", Offset = "0x308254", VA = "0x308254")]
	public static extern IntPtr CSharp_AkSourceSettings_pMediaMemory_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D13")]
	[Address(RVA = "0x308314", Offset = "0x308314", VA = "0x308314")]
	public static extern void CSharp_AkSourceSettings_uMediaSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000D14")]
	[Address(RVA = "0x3083DC", Offset = "0x3083DC", VA = "0x3083DC")]
	public static extern uint CSharp_AkSourceSettings_uMediaSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D15")]
	[Address(RVA = "0x30849C", Offset = "0x30849C", VA = "0x30849C")]
	public static extern IntPtr CSharp_new_AkSourceSettings();

	[PreserveSig]
	[Token(Token = "0x6000D16")]
	[Address(RVA = "0x30854C", Offset = "0x30854C", VA = "0x30854C")]
	public static extern void CSharp_delete_AkSourceSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D17")]
	[Address(RVA = "0x2E227C", Offset = "0x2E227C", VA = "0x2E227C")]
	public static extern bool CSharp_IsInitialized();

	[PreserveSig]
	[Token(Token = "0x6000D18")]
	[Address(RVA = "0x2E23C8", Offset = "0x2E23C8", VA = "0x2E23C8")]
	public static extern int CSharp_GetAudioSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D19")]
	[Address(RVA = "0x2E2548", Offset = "0x2E2548", VA = "0x2E2548")]
	public static extern IntPtr CSharp_GetSpeakerConfiguration__SWIG_0(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D1A")]
	[Address(RVA = "0x2E26B8", Offset = "0x2E26B8", VA = "0x2E26B8")]
	public static extern IntPtr CSharp_GetSpeakerConfiguration__SWIG_1();

	[PreserveSig]
	[Token(Token = "0x6000D1B")]
	[Address(RVA = "0x2E2800", Offset = "0x2E2800", VA = "0x2E2800")]
	public static extern int CSharp_GetPanningRule__SWIG_0(out int jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x6000D1C")]
	[Address(RVA = "0x2E2960", Offset = "0x2E2960", VA = "0x2E2960")]
	public static extern int CSharp_GetPanningRule__SWIG_1(out int jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D1D")]
	[Address(RVA = "0x2E2AC8", Offset = "0x2E2AC8", VA = "0x2E2AC8")]
	public static extern int CSharp_SetPanningRule__SWIG_0(int jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x6000D1E")]
	[Address(RVA = "0x2E2C18", Offset = "0x2E2C18", VA = "0x2E2C18")]
	public static extern int CSharp_SetPanningRule__SWIG_1(int jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D1F")]
	[Address(RVA = "0x2E2D7C", Offset = "0x2E2D7C", VA = "0x2E2D7C")]
	public static extern int CSharp_GetSpeakerAngles__SWIG_0([In][Out] float[] jarg1, ref uint jarg2, out float jarg3, ulong jarg4);

	[PreserveSig]
	[Token(Token = "0x6000D20")]
	[Address(RVA = "0x2E2F08", Offset = "0x2E2F08", VA = "0x2E2F08")]
	public static extern int CSharp_GetSpeakerAngles__SWIG_1([In][Out] float[] jarg1, ref uint jarg2, out float jarg3);

	[PreserveSig]
	[Token(Token = "0x6000D21")]
	[Address(RVA = "0x2E3094", Offset = "0x2E3094", VA = "0x2E3094")]
	public static extern int CSharp_SetSpeakerAngles__SWIG_0([In] float[] jarg1, uint jarg2, float jarg3, ulong jarg4);

	[PreserveSig]
	[Token(Token = "0x6000D22")]
	[Address(RVA = "0x2E3214", Offset = "0x2E3214", VA = "0x2E3214")]
	public static extern int CSharp_SetSpeakerAngles__SWIG_1([In] float[] jarg1, uint jarg2, float jarg3);

	[PreserveSig]
	[Token(Token = "0x6000D23")]
	[Address(RVA = "0x2E336C", Offset = "0x2E336C", VA = "0x2E336C")]
	public static extern int CSharp_SetVolumeThreshold(float jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D24")]
	[Address(RVA = "0x2E34AC", Offset = "0x2E34AC", VA = "0x2E34AC")]
	public static extern int CSharp_SetMaxNumVoicesLimit(ushort jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D25")]
	[Address(RVA = "0x2E35EC", Offset = "0x2E35EC", VA = "0x2E35EC")]
	public static extern int CSharp_RenderAudio__SWIG_0(bool jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D26")]
	[Address(RVA = "0x2E3724", Offset = "0x2E3724", VA = "0x2E3724")]
	public static extern int CSharp_RenderAudio__SWIG_1();

	[PreserveSig]
	[Token(Token = "0x6000D27")]
	[Address(RVA = "0x2E3854", Offset = "0x2E3854", VA = "0x2E3854")]
	public static extern int CSharp_RegisterPluginDLL(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D28")]
	[Address(RVA = "0x2E39B8", Offset = "0x2E39B8", VA = "0x2E39B8")]
	public static extern uint CSharp_GetIDFromString(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D29")]
	[Address(RVA = "0x2E3C68", Offset = "0x2E3C68", VA = "0x2E3C68")]
	public static extern uint CSharp_PostEvent__SWIG_0(uint jarg1, ulong jarg2, uint jarg3, IntPtr jarg4, IntPtr jarg5, uint jarg6, IntPtr jarg7, uint jarg8);

	[PreserveSig]
	[Token(Token = "0x6000D2A")]
	[Address(RVA = "0x2E3F28", Offset = "0x2E3F28", VA = "0x2E3F28")]
	public static extern uint CSharp_PostEvent__SWIG_1(uint jarg1, ulong jarg2, uint jarg3, IntPtr jarg4, IntPtr jarg5, uint jarg6, IntPtr jarg7);

	[PreserveSig]
	[Token(Token = "0x6000D2B")]
	[Address(RVA = "0x2E41CC", Offset = "0x2E41CC", VA = "0x2E41CC")]
	public static extern uint CSharp_PostEvent__SWIG_2(uint jarg1, ulong jarg2, uint jarg3, IntPtr jarg4, IntPtr jarg5, uint jarg6);

	[PreserveSig]
	[Token(Token = "0x6000D2C")]
	[Address(RVA = "0x2E4460", Offset = "0x2E4460", VA = "0x2E4460")]
	public static extern uint CSharp_PostEvent__SWIG_3(uint jarg1, ulong jarg2, uint jarg3, IntPtr jarg4, IntPtr jarg5);

	[PreserveSig]
	[Token(Token = "0x6000D2D")]
	[Address(RVA = "0x2E4660", Offset = "0x2E4660", VA = "0x2E4660")]
	public static extern uint CSharp_PostEvent__SWIG_4(uint jarg1, ulong jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000D2E")]
	[Address(RVA = "0x2E4738", Offset = "0x2E4738", VA = "0x2E4738")]
	public static extern uint CSharp_PostEvent__SWIG_5(uint jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x6000D2F")]
	[Address(RVA = "0x2E49D4", Offset = "0x2E49D4", VA = "0x2E49D4")]
	public static extern uint CSharp_PostEvent__SWIG_6(string jarg1, ulong jarg2, uint jarg3, IntPtr jarg4, IntPtr jarg5, uint jarg6, IntPtr jarg7, uint jarg8);

	[PreserveSig]
	[Token(Token = "0x6000D30")]
	[Address(RVA = "0x2E4CBC", Offset = "0x2E4CBC", VA = "0x2E4CBC")]
	public static extern uint CSharp_PostEvent__SWIG_7(string jarg1, ulong jarg2, uint jarg3, IntPtr jarg4, IntPtr jarg5, uint jarg6, IntPtr jarg7);

	[PreserveSig]
	[Token(Token = "0x6000D31")]
	[Address(RVA = "0x2E4F78", Offset = "0x2E4F78", VA = "0x2E4F78")]
	public static extern uint CSharp_PostEvent__SWIG_8(string jarg1, ulong jarg2, uint jarg3, IntPtr jarg4, IntPtr jarg5, uint jarg6);

	[PreserveSig]
	[Token(Token = "0x6000D32")]
	[Address(RVA = "0x2E522C", Offset = "0x2E522C", VA = "0x2E522C")]
	public static extern uint CSharp_PostEvent__SWIG_9(string jarg1, ulong jarg2, uint jarg3, IntPtr jarg4, IntPtr jarg5);

	[PreserveSig]
	[Token(Token = "0x6000D33")]
	[Address(RVA = "0x2E5444", Offset = "0x2E5444", VA = "0x2E5444")]
	public static extern uint CSharp_PostEvent__SWIG_10(string jarg1, ulong jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000D34")]
	[Address(RVA = "0x2E5540", Offset = "0x2E5540", VA = "0x2E5540")]
	public static extern uint CSharp_PostEvent__SWIG_11(string jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x6000D35")]
	[Address(RVA = "0x2E571C", Offset = "0x2E571C", VA = "0x2E571C")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_0(uint jarg1, int jarg2, ulong jarg3, int jarg4, int jarg5, uint jarg6);

	[PreserveSig]
	[Token(Token = "0x6000D36")]
	[Address(RVA = "0x2E58E0", Offset = "0x2E58E0", VA = "0x2E58E0")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_1(uint jarg1, int jarg2, ulong jarg3, int jarg4, int jarg5);

	[PreserveSig]
	[Token(Token = "0x6000D37")]
	[Address(RVA = "0x2E5A98", Offset = "0x2E5A98", VA = "0x2E5A98")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_2(uint jarg1, int jarg2, ulong jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x6000D38")]
	[Address(RVA = "0x2E5B70", Offset = "0x2E5B70", VA = "0x2E5B70")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_3(uint jarg1, int jarg2, ulong jarg3);

	[PreserveSig]
	[Token(Token = "0x6000D39")]
	[Address(RVA = "0x2E5CC8", Offset = "0x2E5CC8", VA = "0x2E5CC8")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_4(uint jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000D3A")]
	[Address(RVA = "0x2E5E78", Offset = "0x2E5E78", VA = "0x2E5E78")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_5(string jarg1, int jarg2, ulong jarg3, int jarg4, int jarg5, uint jarg6);

	[PreserveSig]
	[Token(Token = "0x6000D3B")]
	[Address(RVA = "0x2E605C", Offset = "0x2E605C", VA = "0x2E605C")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_6(string jarg1, int jarg2, ulong jarg3, int jarg4, int jarg5);

	[PreserveSig]
	[Token(Token = "0x6000D3C")]
	[Address(RVA = "0x2E6240", Offset = "0x2E6240", VA = "0x2E6240")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_7(string jarg1, int jarg2, ulong jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x6000D3D")]
	[Address(RVA = "0x2E6418", Offset = "0x2E6418", VA = "0x2E6418")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_8(string jarg1, int jarg2, ulong jarg3);

	[PreserveSig]
	[Token(Token = "0x6000D3E")]
	[Address(RVA = "0x2E659C", Offset = "0x2E659C", VA = "0x2E659C")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_9(string jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000D3F")]
	[Address(RVA = "0x2E6778", Offset = "0x2E6778", VA = "0x2E6778")]
	public static extern int CSharp_PostMIDIOnEvent(uint jarg1, ulong jarg2, IntPtr jarg3, ushort jarg4);

	[PreserveSig]
	[Token(Token = "0x6000D40")]
	[Address(RVA = "0x2E6928", Offset = "0x2E6928", VA = "0x2E6928")]
	public static extern int CSharp_StopMIDIOnEvent__SWIG_0(uint jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x6000D41")]
	[Address(RVA = "0x2E6A78", Offset = "0x2E6A78", VA = "0x2E6A78")]
	public static extern int CSharp_StopMIDIOnEvent__SWIG_1(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D42")]
	[Address(RVA = "0x2E6BB0", Offset = "0x2E6BB0", VA = "0x2E6BB0")]
	public static extern int CSharp_StopMIDIOnEvent__SWIG_2();

	[PreserveSig]
	[Token(Token = "0x6000D43")]
	[Address(RVA = "0x2E6CF8", Offset = "0x2E6CF8", VA = "0x2E6CF8")]
	public static extern int CSharp_PinEventInStreamCache__SWIG_0(uint jarg1, sbyte jarg2, sbyte jarg3);

	[PreserveSig]
	[Token(Token = "0x6000D44")]
	[Address(RVA = "0x2E6E60", Offset = "0x2E6E60", VA = "0x2E6E60")]
	public static extern int CSharp_PinEventInStreamCache__SWIG_1(string jarg1, sbyte jarg2, sbyte jarg3);

	[PreserveSig]
	[Token(Token = "0x6000D45")]
	[Address(RVA = "0x2E6FD4", Offset = "0x2E6FD4", VA = "0x2E6FD4")]
	public static extern int CSharp_UnpinEventInStreamCache__SWIG_0(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D46")]
	[Address(RVA = "0x2E7114", Offset = "0x2E7114", VA = "0x2E7114")]
	public static extern int CSharp_UnpinEventInStreamCache__SWIG_1(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D47")]
	[Address(RVA = "0x2E7290", Offset = "0x2E7290", VA = "0x2E7290")]
	public static extern int CSharp_GetBufferStatusForPinnedEvent__SWIG_0(uint jarg1, out float jarg2, out int jarg3);

	[PreserveSig]
	[Token(Token = "0x6000D48")]
	[Address(RVA = "0x2E7414", Offset = "0x2E7414", VA = "0x2E7414")]
	public static extern int CSharp_GetBufferStatusForPinnedEvent__SWIG_1(string jarg1, out float jarg2, out int jarg3);

	[PreserveSig]
	[Token(Token = "0x6000D49")]
	[Address(RVA = "0x2E7608", Offset = "0x2E7608", VA = "0x2E7608")]
	public static extern int CSharp_SeekOnEvent__SWIG_0(uint jarg1, ulong jarg2, int jarg3, bool jarg4, uint jarg5);

	[PreserveSig]
	[Token(Token = "0x6000D4A")]
	[Address(RVA = "0x2E77CC", Offset = "0x2E77CC", VA = "0x2E77CC")]
	public static extern int CSharp_SeekOnEvent__SWIG_1(uint jarg1, ulong jarg2, int jarg3, bool jarg4);

	[PreserveSig]
	[Token(Token = "0x6000D4B")]
	[Address(RVA = "0x2E7984", Offset = "0x2E7984", VA = "0x2E7984")]
	public static extern int CSharp_SeekOnEvent__SWIG_2(uint jarg1, ulong jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x6000D4C")]
	[Address(RVA = "0x2E7B40", Offset = "0x2E7B40", VA = "0x2E7B40")]
	public static extern int CSharp_SeekOnEvent__SWIG_3(string jarg1, ulong jarg2, int jarg3, bool jarg4, uint jarg5);

	[PreserveSig]
	[Token(Token = "0x6000D4D")]
	[Address(RVA = "0x2E7D1C", Offset = "0x2E7D1C", VA = "0x2E7D1C")]
	public static extern int CSharp_SeekOnEvent__SWIG_4(string jarg1, ulong jarg2, int jarg3, bool jarg4);

	[PreserveSig]
	[Token(Token = "0x6000D4E")]
	[Address(RVA = "0x2E7EF4", Offset = "0x2E7EF4", VA = "0x2E7EF4")]
	public static extern int CSharp_SeekOnEvent__SWIG_5(string jarg1, ulong jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x6000D4F")]
	[Address(RVA = "0x2E80E0", Offset = "0x2E80E0", VA = "0x2E80E0")]
	public static extern int CSharp_SeekOnEvent__SWIG_6(uint jarg1, ulong jarg2, float jarg3, bool jarg4, uint jarg5);

	[PreserveSig]
	[Token(Token = "0x6000D50")]
	[Address(RVA = "0x2E82B4", Offset = "0x2E82B4", VA = "0x2E82B4")]
	public static extern int CSharp_SeekOnEvent__SWIG_7(uint jarg1, ulong jarg2, float jarg3, bool jarg4);

	[PreserveSig]
	[Token(Token = "0x6000D51")]
	[Address(RVA = "0x2E8478", Offset = "0x2E8478", VA = "0x2E8478")]
	public static extern int CSharp_SeekOnEvent__SWIG_8(uint jarg1, ulong jarg2, float jarg3);

	[PreserveSig]
	[Token(Token = "0x6000D52")]
	[Address(RVA = "0x2E8640", Offset = "0x2E8640", VA = "0x2E8640")]
	public static extern int CSharp_SeekOnEvent__SWIG_9(string jarg1, ulong jarg2, float jarg3, bool jarg4, uint jarg5);

	[PreserveSig]
	[Token(Token = "0x6000D53")]
	[Address(RVA = "0x2E883C", Offset = "0x2E883C", VA = "0x2E883C")]
	public static extern int CSharp_SeekOnEvent__SWIG_10(string jarg1, ulong jarg2, float jarg3, bool jarg4);

	[PreserveSig]
	[Token(Token = "0x6000D54")]
	[Address(RVA = "0x2E8A2C", Offset = "0x2E8A2C", VA = "0x2E8A2C")]
	public static extern int CSharp_SeekOnEvent__SWIG_11(string jarg1, ulong jarg2, float jarg3);

	[PreserveSig]
	[Token(Token = "0x6000D55")]
	[Address(RVA = "0x30860C", Offset = "0x30860C", VA = "0x30860C")]
	public static extern void CSharp_CancelEventCallbackCookie(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D56")]
	[Address(RVA = "0x2E8C80", Offset = "0x2E8C80", VA = "0x2E8C80")]
	public static extern void CSharp_CancelEventCallbackGameObject(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D57")]
	[Address(RVA = "0x3086CC", Offset = "0x3086CC", VA = "0x3086CC")]
	public static extern void CSharp_CancelEventCallback(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D58")]
	[Address(RVA = "0x2E8E68", Offset = "0x2E8E68", VA = "0x2E8E68")]
	public static extern int CSharp_GetSourcePlayPosition__SWIG_0(uint jarg1, out int jarg2, bool jarg3);

	[PreserveSig]
	[Token(Token = "0x6000D59")]
	[Address(RVA = "0x2E8FD0", Offset = "0x2E8FD0", VA = "0x2E8FD0")]
	public static extern int CSharp_GetSourcePlayPosition__SWIG_1(uint jarg1, out int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000D5A")]
	[Address(RVA = "0x2E9140", Offset = "0x2E9140", VA = "0x2E9140")]
	public static extern int CSharp_GetSourceStreamBuffering(uint jarg1, out int jarg2, out int jarg3);

	[PreserveSig]
	[Token(Token = "0x6000D5B")]
	[Address(RVA = "0x2E92F4", Offset = "0x2E92F4", VA = "0x2E92F4")]
	public static extern void CSharp_StopAll__SWIG_0(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D5C")]
	[Address(RVA = "0x2E9434", Offset = "0x2E9434", VA = "0x2E9434")]
	public static extern void CSharp_StopAll__SWIG_1();

	[PreserveSig]
	[Token(Token = "0x6000D5D")]
	[Address(RVA = "0x2E957C", Offset = "0x2E957C", VA = "0x2E957C")]
	public static extern void CSharp_StopPlayingID__SWIG_0(uint jarg1, int jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x6000D5E")]
	[Address(RVA = "0x2E96D4", Offset = "0x2E96D4", VA = "0x2E96D4")]
	public static extern void CSharp_StopPlayingID__SWIG_1(uint jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000D5F")]
	[Address(RVA = "0x2E981C", Offset = "0x2E981C", VA = "0x2E981C")]
	public static extern void CSharp_StopPlayingID__SWIG_2(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D60")]
	[Address(RVA = "0x2E995C", Offset = "0x2E995C", VA = "0x2E995C")]
	public static extern void CSharp_SetRandomSeed(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D61")]
	[Address(RVA = "0x2E9A9C", Offset = "0x2E9A9C", VA = "0x2E9A9C")]
	public static extern void CSharp_MuteBackgroundMusic(bool jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D62")]
	[Address(RVA = "0x2E9BD4", Offset = "0x2E9BD4", VA = "0x2E9BD4")]
	public static extern bool CSharp_GetBackgroundMusicMute();

	[PreserveSig]
	[Token(Token = "0x6000D63")]
	[Address(RVA = "0x2E9D7C", Offset = "0x2E9D7C", VA = "0x2E9D7C")]
	public static extern int CSharp_SendPluginCustomGameData(uint jarg1, ulong jarg2, int jarg3, uint jarg4, uint jarg5, IntPtr jarg6, uint jarg7);

	[PreserveSig]
	[Token(Token = "0x6000D64")]
	[Address(RVA = "0x2E9EEC", Offset = "0x2E9EEC", VA = "0x2E9EEC")]
	public static extern int CSharp_UnregisterAllGameObj();

	[PreserveSig]
	[Token(Token = "0x6000D65")]
	[Address(RVA = "0x2EA088", Offset = "0x2EA088", VA = "0x2EA088")]
	public static extern int CSharp_SetMultiplePositions__SWIG_0(ulong jarg1, IntPtr jarg2, ushort jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x6000D66")]
	[Address(RVA = "0x2EA248", Offset = "0x2EA248", VA = "0x2EA248")]
	public static extern int CSharp_SetMultiplePositions__SWIG_1(ulong jarg1, IntPtr jarg2, ushort jarg3);

	[PreserveSig]
	[Token(Token = "0x6000D67")]
	[Address(RVA = "0x2EA404", Offset = "0x2EA404", VA = "0x2EA404")]
	public static extern int CSharp_SetMultiplePositions__SWIG_2(ulong jarg1, IntPtr jarg2, ushort jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x6000D68")]
	[Address(RVA = "0x2EA5C4", Offset = "0x2EA5C4", VA = "0x2EA5C4")]
	public static extern int CSharp_SetMultiplePositions__SWIG_3(ulong jarg1, IntPtr jarg2, ushort jarg3);

	[PreserveSig]
	[Token(Token = "0x6000D69")]
	[Address(RVA = "0x2EA770", Offset = "0x2EA770", VA = "0x2EA770")]
	public static extern int CSharp_SetScalingFactor(ulong jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000D6A")]
	[Address(RVA = "0x2EA8B8", Offset = "0x2EA8B8", VA = "0x2EA8B8")]
	public static extern int CSharp_ClearBanks();

	[PreserveSig]
	[Token(Token = "0x6000D6B")]
	[Address(RVA = "0x2EA9F0", Offset = "0x2EA9F0", VA = "0x2EA9F0")]
	public static extern int CSharp_SetBankLoadIOSettings(float jarg1, sbyte jarg2);

	[PreserveSig]
	[Token(Token = "0x6000D6C")]
	[Address(RVA = "0x2EAB50", Offset = "0x2EAB50", VA = "0x2EAB50")]
	public static extern int CSharp_LoadBank__SWIG_0(string jarg1, int jarg2, out uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000D6D")]
	[Address(RVA = "0x2EACDC", Offset = "0x2EACDC", VA = "0x2EACDC")]
	public static extern int CSharp_LoadBank__SWIG_1(uint jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000D6E")]
	[Address(RVA = "0x2EAE3C", Offset = "0x2EAE3C", VA = "0x2EAE3C")]
	public static extern int CSharp_LoadBank__SWIG_2(IntPtr jarg1, uint jarg2, out uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000D6F")]
	[Address(RVA = "0x2EAFBC", Offset = "0x2EAFBC", VA = "0x2EAFBC")]
	public static extern int CSharp_LoadBank__SWIG_3(IntPtr jarg1, uint jarg2, int jarg3, out uint jarg4);

	[PreserveSig]
	[Token(Token = "0x6000D70")]
	[Address(RVA = "0x2EB1A8", Offset = "0x2EB1A8", VA = "0x2EB1A8")]
	public static extern int CSharp_LoadBank__SWIG_4(string jarg1, IntPtr jarg2, IntPtr jarg3, int jarg4, out uint jarg5);

	[PreserveSig]
	[Token(Token = "0x6000D71")]
	[Address(RVA = "0x2EB3BC", Offset = "0x2EB3BC", VA = "0x2EB3BC")]
	public static extern int CSharp_LoadBank__SWIG_5(uint jarg1, IntPtr jarg2, IntPtr jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x6000D72")]
	[Address(RVA = "0x2EB594", Offset = "0x2EB594", VA = "0x2EB594")]
	public static extern int CSharp_LoadBank__SWIG_6(IntPtr jarg1, uint jarg2, IntPtr jarg3, IntPtr jarg4, out uint jarg5);

	[PreserveSig]
	[Token(Token = "0x6000D73")]
	[Address(RVA = "0x2EB790", Offset = "0x2EB790", VA = "0x2EB790")]
	public static extern int CSharp_LoadBank__SWIG_7(IntPtr jarg1, uint jarg2, IntPtr jarg3, IntPtr jarg4, int jarg5, out uint jarg6);

	[PreserveSig]
	[Token(Token = "0x6000D74")]
	[Address(RVA = "0x2EB91C", Offset = "0x2EB91C", VA = "0x2EB91C")]
	public static extern int CSharp_UnloadBank__SWIG_0(string jarg1, IntPtr jarg2, out int jarg3);

	[PreserveSig]
	[Token(Token = "0x6000D75")]
	[Address(RVA = "0x2EBAA8", Offset = "0x2EBAA8", VA = "0x2EBAA8")]
	public static extern int CSharp_UnloadBank__SWIG_1(string jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000D76")]
	[Address(RVA = "0x2EBC2C", Offset = "0x2EBC2C", VA = "0x2EBC2C")]
	public static extern int CSharp_UnloadBank__SWIG_2(uint jarg1, IntPtr jarg2, out int jarg3);

	[PreserveSig]
	[Token(Token = "0x6000D77")]
	[Address(RVA = "0x2EBD94", Offset = "0x2EBD94", VA = "0x2EBD94")]
	public static extern int CSharp_UnloadBank__SWIG_3(uint jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000D78")]
	[Address(RVA = "0x2EBF58", Offset = "0x2EBF58", VA = "0x2EBF58")]
	public static extern int CSharp_UnloadBank__SWIG_4(string jarg1, IntPtr jarg2, IntPtr jarg3, IntPtr jarg4);

	[PreserveSig]
	[Token(Token = "0x6000D79")]
	[Address(RVA = "0x2EC150", Offset = "0x2EC150", VA = "0x2EC150")]
	public static extern int CSharp_UnloadBank__SWIG_5(uint jarg1, IntPtr jarg2, IntPtr jarg3, IntPtr jarg4);

	[PreserveSig]
	[Token(Token = "0x6000D7A")]
	[Address(RVA = "0x30878C", Offset = "0x30878C", VA = "0x30878C")]
	public static extern void CSharp_CancelBankCallbackCookie(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D7B")]
	[Address(RVA = "0x2EC344", Offset = "0x2EC344", VA = "0x2EC344")]
	public static extern int CSharp_PrepareBank__SWIG_0(int jarg1, string jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x6000D7C")]
	[Address(RVA = "0x2EC4C0", Offset = "0x2EC4C0", VA = "0x2EC4C0")]
	public static extern int CSharp_PrepareBank__SWIG_1(int jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x6000D7D")]
	[Address(RVA = "0x2EC644", Offset = "0x2EC644", VA = "0x2EC644")]
	public static extern int CSharp_PrepareBank__SWIG_2(int jarg1, uint jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x6000D7E")]
	[Address(RVA = "0x2EC79C", Offset = "0x2EC79C", VA = "0x2EC79C")]
	public static extern int CSharp_PrepareBank__SWIG_3(int jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000D7F")]
	[Address(RVA = "0x2EC968", Offset = "0x2EC968", VA = "0x2EC968")]
	public static extern int CSharp_PrepareBank__SWIG_4(int jarg1, string jarg2, IntPtr jarg3, IntPtr jarg4, int jarg5);

	[PreserveSig]
	[Token(Token = "0x6000D80")]
	[Address(RVA = "0x2ECB68", Offset = "0x2ECB68", VA = "0x2ECB68")]
	public static extern int CSharp_PrepareBank__SWIG_5(int jarg1, string jarg2, IntPtr jarg3, IntPtr jarg4);

	[PreserveSig]
	[Token(Token = "0x6000D81")]
	[Address(RVA = "0x2ECD68", Offset = "0x2ECD68", VA = "0x2ECD68")]
	public static extern int CSharp_PrepareBank__SWIG_6(int jarg1, uint jarg2, IntPtr jarg3, IntPtr jarg4, int jarg5);

	[PreserveSig]
	[Token(Token = "0x6000D82")]
	[Address(RVA = "0x2ECF40", Offset = "0x2ECF40", VA = "0x2ECF40")]
	public static extern int CSharp_PrepareBank__SWIG_7(int jarg1, uint jarg2, IntPtr jarg3, IntPtr jarg4);

	[PreserveSig]
	[Token(Token = "0x6000D83")]
	[Address(RVA = "0x2ED08C", Offset = "0x2ED08C", VA = "0x2ED08C")]
	public static extern int CSharp_ClearPreparedEvents();

	[PreserveSig]
	[Token(Token = "0x6000D84")]
	[Address(RVA = "0x2ED4B0", Offset = "0x2ED4B0", VA = "0x2ED4B0")]
	public static extern int CSharp_PrepareEvent__SWIG_0(int jarg1, IntPtr jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000D85")]
	[Address(RVA = "0x2ED618", Offset = "0x2ED618", VA = "0x2ED618")]
	public static extern int CSharp_PrepareEvent__SWIG_1(int jarg1, [In] uint[] jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000D86")]
	[Address(RVA = "0x2EDADC", Offset = "0x2EDADC", VA = "0x2EDADC")]
	public static extern int CSharp_PrepareEvent__SWIG_2(int jarg1, IntPtr jarg2, uint jarg3, IntPtr jarg4, IntPtr jarg5);

	[PreserveSig]
	[Token(Token = "0x6000D87")]
	[Address(RVA = "0x2EDCBC", Offset = "0x2EDCBC", VA = "0x2EDCBC")]
	public static extern int CSharp_PrepareEvent__SWIG_3(int jarg1, [In] uint[] jarg2, uint jarg3, IntPtr jarg4, IntPtr jarg5);

	[PreserveSig]
	[Token(Token = "0x6000D88")]
	[Address(RVA = "0x2EDE3C", Offset = "0x2EDE3C", VA = "0x2EDE3C")]
	public static extern int CSharp_SetMedia(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000D89")]
	[Address(RVA = "0x2EDFA0", Offset = "0x2EDFA0", VA = "0x2EDFA0")]
	public static extern int CSharp_UnsetMedia(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000D8A")]
	[Address(RVA = "0x2EE3E4", Offset = "0x2EE3E4", VA = "0x2EE3E4")]
	public static extern int CSharp_PrepareGameSyncs__SWIG_0(int jarg1, int jarg2, string jarg3, IntPtr jarg4, uint jarg5);

	[PreserveSig]
	[Token(Token = "0x6000D8B")]
	[Address(RVA = "0x2EE58C", Offset = "0x2EE58C", VA = "0x2EE58C")]
	public static extern int CSharp_PrepareGameSyncs__SWIG_1(int jarg1, int jarg2, uint jarg3, [In] uint[] jarg4, uint jarg5);

	[PreserveSig]
	[Token(Token = "0x6000D8C")]
	[Address(RVA = "0x2EEA5C", Offset = "0x2EEA5C", VA = "0x2EEA5C")]
	public static extern int CSharp_PrepareGameSyncs__SWIG_2(int jarg1, int jarg2, string jarg3, IntPtr jarg4, uint jarg5, IntPtr jarg6, IntPtr jarg7);

	[PreserveSig]
	[Token(Token = "0x6000D8D")]
	[Address(RVA = "0x2EEC78", Offset = "0x2EEC78", VA = "0x2EEC78")]
	public static extern int CSharp_PrepareGameSyncs__SWIG_3(int jarg1, int jarg2, uint jarg3, [In] uint[] jarg4, uint jarg5, IntPtr jarg6, IntPtr jarg7);

	[PreserveSig]
	[Token(Token = "0x6000D8E")]
	[Address(RVA = "0x2EEE4C", Offset = "0x2EEE4C", VA = "0x2EEE4C")]
	public static extern int CSharp_AddListener(ulong jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x6000D8F")]
	[Address(RVA = "0x2EEFFC", Offset = "0x2EEFFC", VA = "0x2EEFFC")]
	public static extern int CSharp_RemoveListener(ulong jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x6000D90")]
	[Address(RVA = "0x2EF194", Offset = "0x2EF194", VA = "0x2EF194")]
	public static extern int CSharp_AddDefaultListener(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D91")]
	[Address(RVA = "0x2EF324", Offset = "0x2EF324", VA = "0x2EF324")]
	public static extern int CSharp_RemoveDefaultListener(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D92")]
	[Address(RVA = "0x2EF4B4", Offset = "0x2EF4B4", VA = "0x2EF4B4")]
	public static extern int CSharp_ResetListenersToDefault(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D93")]
	[Address(RVA = "0x2EF668", Offset = "0x2EF668", VA = "0x2EF668")]
	public static extern int CSharp_SetListenerSpatialization__SWIG_0(ulong jarg1, bool jarg2, IntPtr jarg3, [In] float[] jarg4);

	[PreserveSig]
	[Token(Token = "0x6000D94")]
	[Address(RVA = "0x2EF830", Offset = "0x2EF830", VA = "0x2EF830")]
	public static extern int CSharp_SetListenerSpatialization__SWIG_1(ulong jarg1, bool jarg2, IntPtr jarg3);

	[PreserveSig]
	[Token(Token = "0x6000D95")]
	[Address(RVA = "0x2EF9E8", Offset = "0x2EF9E8", VA = "0x2EF9E8")]
	public static extern int CSharp_SetRTPCValue__SWIG_0(uint jarg1, float jarg2, ulong jarg3, int jarg4, int jarg5, bool jarg6);

	[PreserveSig]
	[Token(Token = "0x6000D96")]
	[Address(RVA = "0x2EFBAC", Offset = "0x2EFBAC", VA = "0x2EFBAC")]
	public static extern int CSharp_SetRTPCValue__SWIG_1(uint jarg1, float jarg2, ulong jarg3, int jarg4, int jarg5);

	[PreserveSig]
	[Token(Token = "0x6000D97")]
	[Address(RVA = "0x2EFD64", Offset = "0x2EFD64", VA = "0x2EFD64")]
	public static extern int CSharp_SetRTPCValue__SWIG_2(uint jarg1, float jarg2, ulong jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x6000D98")]
	[Address(RVA = "0x2EFF10", Offset = "0x2EFF10", VA = "0x2EFF10")]
	public static extern int CSharp_SetRTPCValue__SWIG_3(uint jarg1, float jarg2, ulong jarg3);

	[PreserveSig]
	[Token(Token = "0x6000D99")]
	[Address(RVA = "0x2F0068", Offset = "0x2F0068", VA = "0x2F0068")]
	public static extern int CSharp_SetRTPCValue__SWIG_4(uint jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000D9A")]
	[Address(RVA = "0x2F0218", Offset = "0x2F0218", VA = "0x2F0218")]
	public static extern int CSharp_SetRTPCValue__SWIG_5(string jarg1, float jarg2, ulong jarg3, int jarg4, int jarg5, bool jarg6);

	[PreserveSig]
	[Token(Token = "0x6000D9B")]
	[Address(RVA = "0x2F03FC", Offset = "0x2F03FC", VA = "0x2F03FC")]
	public static extern int CSharp_SetRTPCValue__SWIG_6(string jarg1, float jarg2, ulong jarg3, int jarg4, int jarg5);

	[PreserveSig]
	[Token(Token = "0x6000D9C")]
	[Address(RVA = "0x2F05E0", Offset = "0x2F05E0", VA = "0x2F05E0")]
	public static extern int CSharp_SetRTPCValue__SWIG_7(string jarg1, float jarg2, ulong jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x6000D9D")]
	[Address(RVA = "0x2F07B8", Offset = "0x2F07B8", VA = "0x2F07B8")]
	public static extern int CSharp_SetRTPCValue__SWIG_8(string jarg1, float jarg2, ulong jarg3);

	[PreserveSig]
	[Token(Token = "0x6000D9E")]
	[Address(RVA = "0x2F093C", Offset = "0x2F093C", VA = "0x2F093C")]
	public static extern int CSharp_SetRTPCValue__SWIG_9(string jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000D9F")]
	[Address(RVA = "0x2F0AD4", Offset = "0x2F0AD4", VA = "0x2F0AD4")]
	public static extern int CSharp_SetRTPCValueByPlayingID__SWIG_0(uint jarg1, float jarg2, uint jarg3, int jarg4, int jarg5, bool jarg6);

	[PreserveSig]
	[Token(Token = "0x6000DA0")]
	[Address(RVA = "0x2F0C5C", Offset = "0x2F0C5C", VA = "0x2F0C5C")]
	public static extern int CSharp_SetRTPCValueByPlayingID__SWIG_1(uint jarg1, float jarg2, uint jarg3, int jarg4, int jarg5);

	[PreserveSig]
	[Token(Token = "0x6000DA1")]
	[Address(RVA = "0x2F0DD8", Offset = "0x2F0DD8", VA = "0x2F0DD8")]
	public static extern int CSharp_SetRTPCValueByPlayingID__SWIG_2(uint jarg1, float jarg2, uint jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x6000DA2")]
	[Address(RVA = "0x2F0F44", Offset = "0x2F0F44", VA = "0x2F0F44")]
	public static extern int CSharp_SetRTPCValueByPlayingID__SWIG_3(uint jarg1, float jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000DA3")]
	[Address(RVA = "0x2F10C0", Offset = "0x2F10C0", VA = "0x2F10C0")]
	public static extern int CSharp_SetRTPCValueByPlayingID__SWIG_4(string jarg1, float jarg2, uint jarg3, int jarg4, int jarg5, bool jarg6);

	[PreserveSig]
	[Token(Token = "0x6000DA4")]
	[Address(RVA = "0x2F126C", Offset = "0x2F126C", VA = "0x2F126C")]
	public static extern int CSharp_SetRTPCValueByPlayingID__SWIG_5(string jarg1, float jarg2, uint jarg3, int jarg4, int jarg5);

	[PreserveSig]
	[Token(Token = "0x6000DA5")]
	[Address(RVA = "0x2F1410", Offset = "0x2F1410", VA = "0x2F1410")]
	public static extern int CSharp_SetRTPCValueByPlayingID__SWIG_6(string jarg1, float jarg2, uint jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x6000DA6")]
	[Address(RVA = "0x2F15A4", Offset = "0x2F15A4", VA = "0x2F15A4")]
	public static extern int CSharp_SetRTPCValueByPlayingID__SWIG_7(string jarg1, float jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000DA7")]
	[Address(RVA = "0x2F177C", Offset = "0x2F177C", VA = "0x2F177C")]
	public static extern int CSharp_ResetRTPCValue__SWIG_0(uint jarg1, ulong jarg2, int jarg3, int jarg4, bool jarg5);

	[PreserveSig]
	[Token(Token = "0x6000DA8")]
	[Address(RVA = "0x2F1940", Offset = "0x2F1940", VA = "0x2F1940")]
	public static extern int CSharp_ResetRTPCValue__SWIG_1(uint jarg1, ulong jarg2, int jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x6000DA9")]
	[Address(RVA = "0x2F1AF8", Offset = "0x2F1AF8", VA = "0x2F1AF8")]
	public static extern int CSharp_ResetRTPCValue__SWIG_2(uint jarg1, ulong jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x6000DAA")]
	[Address(RVA = "0x2F1CA0", Offset = "0x2F1CA0", VA = "0x2F1CA0")]
	public static extern int CSharp_ResetRTPCValue__SWIG_3(uint jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x6000DAB")]
	[Address(RVA = "0x2F1DF0", Offset = "0x2F1DF0", VA = "0x2F1DF0")]
	public static extern int CSharp_ResetRTPCValue__SWIG_4(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000DAC")]
	[Address(RVA = "0x2F1F94", Offset = "0x2F1F94", VA = "0x2F1F94")]
	public static extern int CSharp_ResetRTPCValue__SWIG_5(string jarg1, ulong jarg2, int jarg3, int jarg4, bool jarg5);

	[PreserveSig]
	[Token(Token = "0x6000DAD")]
	[Address(RVA = "0x2F2170", Offset = "0x2F2170", VA = "0x2F2170")]
	public static extern int CSharp_ResetRTPCValue__SWIG_6(string jarg1, ulong jarg2, int jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x6000DAE")]
	[Address(RVA = "0x2F2348", Offset = "0x2F2348", VA = "0x2F2348")]
	public static extern int CSharp_ResetRTPCValue__SWIG_7(string jarg1, ulong jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x6000DAF")]
	[Address(RVA = "0x2F2514", Offset = "0x2F2514", VA = "0x2F2514")]
	public static extern int CSharp_ResetRTPCValue__SWIG_8(string jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x6000DB0")]
	[Address(RVA = "0x2F2688", Offset = "0x2F2688", VA = "0x2F2688")]
	public static extern int CSharp_ResetRTPCValue__SWIG_9(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6000DB1")]
	[Address(RVA = "0x2F2840", Offset = "0x2F2840", VA = "0x2F2840")]
	public static extern int CSharp_SetSwitch__SWIG_0(uint jarg1, uint jarg2, ulong jarg3);

	[PreserveSig]
	[Token(Token = "0x6000DB2")]
	[Address(RVA = "0x2F29E4", Offset = "0x2F29E4", VA = "0x2F29E4")]
	public static extern int CSharp_SetSwitch__SWIG_1(string jarg1, string jarg2, ulong jarg3);

	[PreserveSig]
	[Token(Token = "0x6000DB3")]
	[Address(RVA = "0x2F2BC4", Offset = "0x2F2BC4", VA = "0x2F2BC4")]
	public static extern int CSharp_PostTrigger__SWIG_0(uint jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x6000DB4")]
	[Address(RVA = "0x2F2D64", Offset = "0x2F2D64", VA = "0x2F2D64")]
	public static extern int CSharp_PostTrigger__SWIG_1(string jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x6000DB5")]
	[Address(RVA = "0x2F2EE0", Offset = "0x2F2EE0", VA = "0x2F2EE0")]
	public static extern int CSharp_SetState__SWIG_0(uint jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000DB6")]
	[Address(RVA = "0x2F3030", Offset = "0x2F3030", VA = "0x2F3030")]
	public static extern int CSharp_SetState__SWIG_1(string jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x6000DB7")]
	[Address(RVA = "0x2F3224", Offset = "0x2F3224", VA = "0x2F3224")]
	public static extern int CSharp_SetGameObjectAuxSendValues(ulong jarg1, IntPtr jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000DB8")]
	[Address(RVA = "0x2F33E8", Offset = "0x2F33E8", VA = "0x2F33E8")]
	public static extern int CSharp_SetGameObjectOutputBusVolume(ulong jarg1, ulong jarg2, float jarg3);

	[PreserveSig]
	[Token(Token = "0x6000DB9")]
	[Address(RVA = "0x2F3558", Offset = "0x2F3558", VA = "0x2F3558")]
	public static extern int CSharp_SetActorMixerEffect(uint jarg1, uint jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000DBA")]
	[Address(RVA = "0x2F36C0", Offset = "0x2F36C0", VA = "0x2F36C0")]
	public static extern int CSharp_SetBusEffect__SWIG_0(uint jarg1, uint jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000DBB")]
	[Address(RVA = "0x2F3828", Offset = "0x2F3828", VA = "0x2F3828")]
	public static extern int CSharp_SetBusEffect__SWIG_1(string jarg1, uint jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000DBC")]
	[Address(RVA = "0x2F39A4", Offset = "0x2F39A4", VA = "0x2F39A4")]
	public static extern int CSharp_SetMixer__SWIG_0(uint jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000DBD")]
	[Address(RVA = "0x2F3AF4", Offset = "0x2F3AF4", VA = "0x2F3AF4")]
	public static extern int CSharp_SetMixer__SWIG_1(string jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000DBE")]
	[Address(RVA = "0x2F3C7C", Offset = "0x2F3C7C", VA = "0x2F3C7C")]
	public static extern int CSharp_SetBusConfig__SWIG_0(uint jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000DBF")]
	[Address(RVA = "0x2F3DE0", Offset = "0x2F3DE0", VA = "0x2F3DE0")]
	public static extern int CSharp_SetBusConfig__SWIG_1(string jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000DC0")]
	[Address(RVA = "0x2F3FC8", Offset = "0x2F3FC8", VA = "0x2F3FC8")]
	public static extern int CSharp_SetObjectObstructionAndOcclusion(ulong jarg1, ulong jarg2, float jarg3, float jarg4);

	[PreserveSig]
	[Token(Token = "0x6000DC1")]
	[Address(RVA = "0x2F41E0", Offset = "0x2F41E0", VA = "0x2F41E0")]
	public static extern int CSharp_SetMultipleObstructionAndOcclusion(ulong jarg1, ulong jarg2, IntPtr jarg3, uint jarg4);

	[PreserveSig]
	[Token(Token = "0x6000DC2")]
	[Address(RVA = "0x2F4340", Offset = "0x2F4340", VA = "0x2F4340")]
	public static extern int CSharp_StartOutputCapture(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6000DC3")]
	[Address(RVA = "0x2F449C", Offset = "0x2F449C", VA = "0x2F449C")]
	public static extern int CSharp_StopOutputCapture();

	[PreserveSig]
	[Token(Token = "0x6000DC4")]
	[Address(RVA = "0x2F45CC", Offset = "0x2F45CC", VA = "0x2F45CC")]
	public static extern int CSharp_AddOutputCaptureMarker(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6000DC5")]
	[Address(RVA = "0x2F4730", Offset = "0x2F4730", VA = "0x2F4730")]
	public static extern int CSharp_StartProfilerCapture(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6000DC6")]
	[Address(RVA = "0x2F488C", Offset = "0x2F488C", VA = "0x2F488C")]
	public static extern int CSharp_StopProfilerCapture();

	[PreserveSig]
	[Token(Token = "0x6000DC7")]
	[Address(RVA = "0x2F49CC", Offset = "0x2F49CC", VA = "0x2F49CC")]
	public static extern int CSharp_RemoveOutput(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6000DC8")]
	[Address(RVA = "0x2F4B1C", Offset = "0x2F4B1C", VA = "0x2F4B1C")]
	public static extern ulong CSharp_GetOutputID__SWIG_0(uint jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000DC9")]
	[Address(RVA = "0x2F4C6C", Offset = "0x2F4C6C", VA = "0x2F4C6C")]
	public static extern ulong CSharp_GetOutputID__SWIG_1(string jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000DCA")]
	[Address(RVA = "0x2F4DE8", Offset = "0x2F4DE8", VA = "0x2F4DE8")]
	public static extern int CSharp_SetBusDevice__SWIG_0(uint jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000DCB")]
	[Address(RVA = "0x2F4F38", Offset = "0x2F4F38", VA = "0x2F4F38")]
	public static extern int CSharp_SetBusDevice__SWIG_1(string jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x6000DCC")]
	[Address(RVA = "0x2F50D8", Offset = "0x2F50D8", VA = "0x2F50D8")]
	public static extern int CSharp_SetOutputVolume(ulong jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000DCD")]
	[Address(RVA = "0x2F5228", Offset = "0x2F5228", VA = "0x2F5228")]
	public static extern int CSharp_Suspend__SWIG_0(bool jarg1);

	[PreserveSig]
	[Token(Token = "0x6000DCE")]
	[Address(RVA = "0x2F5360", Offset = "0x2F5360", VA = "0x2F5360")]
	public static extern int CSharp_Suspend__SWIG_1();

	[PreserveSig]
	[Token(Token = "0x6000DCF")]
	[Address(RVA = "0x2F5488", Offset = "0x2F5488", VA = "0x2F5488")]
	public static extern int CSharp_WakeupFromSuspend();

	[PreserveSig]
	[Token(Token = "0x6000DD0")]
	[Address(RVA = "0x2F55B0", Offset = "0x2F55B0", VA = "0x2F55B0")]
	public static extern uint CSharp_GetBufferTick();

	[PreserveSig]
	[Token(Token = "0x6000DD1")]
	[Address(RVA = "0x2DD164", Offset = "0x2DD164", VA = "0x2DD164")]
	public static extern void CSharp_AkSegmentInfo_iCurrentPosition_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000DD2")]
	[Address(RVA = "0x2DD2B0", Offset = "0x2DD2B0", VA = "0x2DD2B0")]
	public static extern int CSharp_AkSegmentInfo_iCurrentPosition_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000DD3")]
	[Address(RVA = "0x2DD3FC", Offset = "0x2DD3FC", VA = "0x2DD3FC")]
	public static extern void CSharp_AkSegmentInfo_iPreEntryDuration_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000DD4")]
	[Address(RVA = "0x2DD548", Offset = "0x2DD548", VA = "0x2DD548")]
	public static extern int CSharp_AkSegmentInfo_iPreEntryDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000DD5")]
	[Address(RVA = "0x2DD694", Offset = "0x2DD694", VA = "0x2DD694")]
	public static extern void CSharp_AkSegmentInfo_iActiveDuration_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000DD6")]
	[Address(RVA = "0x2DD7E0", Offset = "0x2DD7E0", VA = "0x2DD7E0")]
	public static extern int CSharp_AkSegmentInfo_iActiveDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000DD7")]
	[Address(RVA = "0x2DD92C", Offset = "0x2DD92C", VA = "0x2DD92C")]
	public static extern void CSharp_AkSegmentInfo_iPostExitDuration_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000DD8")]
	[Address(RVA = "0x2DDA78", Offset = "0x2DDA78", VA = "0x2DDA78")]
	public static extern int CSharp_AkSegmentInfo_iPostExitDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000DD9")]
	[Address(RVA = "0x2DDBC4", Offset = "0x2DDBC4", VA = "0x2DDBC4")]
	public static extern void CSharp_AkSegmentInfo_iRemainingLookAheadTime_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000DDA")]
	[Address(RVA = "0x2DDD10", Offset = "0x2DDD10", VA = "0x2DDD10")]
	public static extern int CSharp_AkSegmentInfo_iRemainingLookAheadTime_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000DDB")]
	[Address(RVA = "0x2DDE5C", Offset = "0x2DDE5C", VA = "0x2DDE5C")]
	public static extern void CSharp_AkSegmentInfo_fBeatDuration_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000DDC")]
	[Address(RVA = "0x2DDFA8", Offset = "0x2DDFA8", VA = "0x2DDFA8")]
	public static extern float CSharp_AkSegmentInfo_fBeatDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000DDD")]
	[Address(RVA = "0x2DE0F4", Offset = "0x2DE0F4", VA = "0x2DE0F4")]
	public static extern void CSharp_AkSegmentInfo_fBarDuration_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000DDE")]
	[Address(RVA = "0x2DE240", Offset = "0x2DE240", VA = "0x2DE240")]
	public static extern float CSharp_AkSegmentInfo_fBarDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000DDF")]
	[Address(RVA = "0x2DE38C", Offset = "0x2DE38C", VA = "0x2DE38C")]
	public static extern void CSharp_AkSegmentInfo_fGridDuration_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000DE0")]
	[Address(RVA = "0x2DE4D8", Offset = "0x2DE4D8", VA = "0x2DE4D8")]
	public static extern float CSharp_AkSegmentInfo_fGridDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000DE1")]
	[Address(RVA = "0x2DE624", Offset = "0x2DE624", VA = "0x2DE624")]
	public static extern void CSharp_AkSegmentInfo_fGridOffset_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000DE2")]
	[Address(RVA = "0x2DE770", Offset = "0x2DE770", VA = "0x2DE770")]
	public static extern float CSharp_AkSegmentInfo_fGridOffset_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000DE3")]
	[Address(RVA = "0x2DCD64", Offset = "0x2DCD64", VA = "0x2DCD64")]
	public static extern IntPtr CSharp_new_AkSegmentInfo();

	[PreserveSig]
	[Token(Token = "0x6000DE4")]
	[Address(RVA = "0x2DD018", Offset = "0x2DD018", VA = "0x2DD018")]
	public static extern void CSharp_delete_AkSegmentInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000DE5")]
	[Address(RVA = "0x2F56D8", Offset = "0x2F56D8", VA = "0x2F56D8")]
	public static extern byte CSharp_AK_INVALID_MIDI_CHANNEL_get();

	[PreserveSig]
	[Token(Token = "0x6000DE6")]
	[Address(RVA = "0x2F5800", Offset = "0x2F5800", VA = "0x2F5800")]
	public static extern byte CSharp_AK_INVALID_MIDI_NOTE_get();

	[PreserveSig]
	[Token(Token = "0x6000DE7")]
	[Address(RVA = "0x30884C", Offset = "0x30884C", VA = "0x30884C")]
	public static extern void CSharp_AkMIDIEvent_byChan_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6000DE8")]
	[Address(RVA = "0x308914", Offset = "0x308914", VA = "0x308914")]
	public static extern byte CSharp_AkMIDIEvent_byChan_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000DE9")]
	[Address(RVA = "0x3089D4", Offset = "0x3089D4", VA = "0x3089D4")]
	public static extern void CSharp_AkMIDIEvent_tGen_byParam1_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6000DEA")]
	[Address(RVA = "0x308A9C", Offset = "0x308A9C", VA = "0x308A9C")]
	public static extern byte CSharp_AkMIDIEvent_tGen_byParam1_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000DEB")]
	[Address(RVA = "0x308B5C", Offset = "0x308B5C", VA = "0x308B5C")]
	public static extern void CSharp_AkMIDIEvent_tGen_byParam2_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6000DEC")]
	[Address(RVA = "0x308C24", Offset = "0x308C24", VA = "0x308C24")]
	public static extern byte CSharp_AkMIDIEvent_tGen_byParam2_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000DED")]
	[Address(RVA = "0x308CE4", Offset = "0x308CE4", VA = "0x308CE4")]
	public static extern IntPtr CSharp_new_AkMIDIEvent_tGen();

	[PreserveSig]
	[Token(Token = "0x6000DEE")]
	[Address(RVA = "0x308D94", Offset = "0x308D94", VA = "0x308D94")]
	public static extern void CSharp_delete_AkMIDIEvent_tGen(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000DEF")]
	[Address(RVA = "0x308E54", Offset = "0x308E54", VA = "0x308E54")]
	public static extern void CSharp_AkMIDIEvent_tNoteOnOff_byNote_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6000DF0")]
	[Address(RVA = "0x308F1C", Offset = "0x308F1C", VA = "0x308F1C")]
	public static extern byte CSharp_AkMIDIEvent_tNoteOnOff_byNote_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000DF1")]
	[Address(RVA = "0x308FDC", Offset = "0x308FDC", VA = "0x308FDC")]
	public static extern void CSharp_AkMIDIEvent_tNoteOnOff_byVelocity_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6000DF2")]
	[Address(RVA = "0x3090A4", Offset = "0x3090A4", VA = "0x3090A4")]
	public static extern byte CSharp_AkMIDIEvent_tNoteOnOff_byVelocity_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000DF3")]
	[Address(RVA = "0x309164", Offset = "0x309164", VA = "0x309164")]
	public static extern IntPtr CSharp_new_AkMIDIEvent_tNoteOnOff();

	[PreserveSig]
	[Token(Token = "0x6000DF4")]
	[Address(RVA = "0x309214", Offset = "0x309214", VA = "0x309214")]
	public static extern void CSharp_delete_AkMIDIEvent_tNoteOnOff(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000DF5")]
	[Address(RVA = "0x3092D4", Offset = "0x3092D4", VA = "0x3092D4")]
	public static extern void CSharp_AkMIDIEvent_tCc_byCc_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6000DF6")]
	[Address(RVA = "0x30939C", Offset = "0x30939C", VA = "0x30939C")]
	public static extern byte CSharp_AkMIDIEvent_tCc_byCc_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000DF7")]
	[Address(RVA = "0x30945C", Offset = "0x30945C", VA = "0x30945C")]
	public static extern void CSharp_AkMIDIEvent_tCc_byValue_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6000DF8")]
	[Address(RVA = "0x309524", Offset = "0x309524", VA = "0x309524")]
	public static extern byte CSharp_AkMIDIEvent_tCc_byValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000DF9")]
	[Address(RVA = "0x3095E4", Offset = "0x3095E4", VA = "0x3095E4")]
	public static extern IntPtr CSharp_new_AkMIDIEvent_tCc();

	[PreserveSig]
	[Token(Token = "0x6000DFA")]
	[Address(RVA = "0x309694", Offset = "0x309694", VA = "0x309694")]
	public static extern void CSharp_delete_AkMIDIEvent_tCc(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000DFB")]
	[Address(RVA = "0x309754", Offset = "0x309754", VA = "0x309754")]
	public static extern void CSharp_AkMIDIEvent_tPitchBend_byValueLsb_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6000DFC")]
	[Address(RVA = "0x30981C", Offset = "0x30981C", VA = "0x30981C")]
	public static extern byte CSharp_AkMIDIEvent_tPitchBend_byValueLsb_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000DFD")]
	[Address(RVA = "0x3098DC", Offset = "0x3098DC", VA = "0x3098DC")]
	public static extern void CSharp_AkMIDIEvent_tPitchBend_byValueMsb_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6000DFE")]
	[Address(RVA = "0x3099A4", Offset = "0x3099A4", VA = "0x3099A4")]
	public static extern byte CSharp_AkMIDIEvent_tPitchBend_byValueMsb_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000DFF")]
	[Address(RVA = "0x309A64", Offset = "0x309A64", VA = "0x309A64")]
	public static extern IntPtr CSharp_new_AkMIDIEvent_tPitchBend();

	[PreserveSig]
	[Token(Token = "0x6000E00")]
	[Address(RVA = "0x309B14", Offset = "0x309B14", VA = "0x309B14")]
	public static extern void CSharp_delete_AkMIDIEvent_tPitchBend(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E01")]
	[Address(RVA = "0x309BD4", Offset = "0x309BD4", VA = "0x309BD4")]
	public static extern void CSharp_AkMIDIEvent_tNoteAftertouch_byNote_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E02")]
	[Address(RVA = "0x309C9C", Offset = "0x309C9C", VA = "0x309C9C")]
	public static extern byte CSharp_AkMIDIEvent_tNoteAftertouch_byNote_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E03")]
	[Address(RVA = "0x309D5C", Offset = "0x309D5C", VA = "0x309D5C")]
	public static extern void CSharp_AkMIDIEvent_tNoteAftertouch_byValue_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E04")]
	[Address(RVA = "0x309E24", Offset = "0x309E24", VA = "0x309E24")]
	public static extern byte CSharp_AkMIDIEvent_tNoteAftertouch_byValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E05")]
	[Address(RVA = "0x309EE4", Offset = "0x309EE4", VA = "0x309EE4")]
	public static extern IntPtr CSharp_new_AkMIDIEvent_tNoteAftertouch();

	[PreserveSig]
	[Token(Token = "0x6000E06")]
	[Address(RVA = "0x309F94", Offset = "0x309F94", VA = "0x309F94")]
	public static extern void CSharp_delete_AkMIDIEvent_tNoteAftertouch(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E07")]
	[Address(RVA = "0x30A054", Offset = "0x30A054", VA = "0x30A054")]
	public static extern void CSharp_AkMIDIEvent_tChanAftertouch_byValue_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E08")]
	[Address(RVA = "0x30A11C", Offset = "0x30A11C", VA = "0x30A11C")]
	public static extern byte CSharp_AkMIDIEvent_tChanAftertouch_byValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E09")]
	[Address(RVA = "0x30A1DC", Offset = "0x30A1DC", VA = "0x30A1DC")]
	public static extern IntPtr CSharp_new_AkMIDIEvent_tChanAftertouch();

	[PreserveSig]
	[Token(Token = "0x6000E0A")]
	[Address(RVA = "0x30A28C", Offset = "0x30A28C", VA = "0x30A28C")]
	public static extern void CSharp_delete_AkMIDIEvent_tChanAftertouch(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E0B")]
	[Address(RVA = "0x2BE870", Offset = "0x2BE870", VA = "0x2BE870")]
	public static extern void CSharp_AkMIDIEvent_tProgramChange_byProgramNum_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E0C")]
	[Address(RVA = "0x2BE9BC", Offset = "0x2BE9BC", VA = "0x2BE9BC")]
	public static extern byte CSharp_AkMIDIEvent_tProgramChange_byProgramNum_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E0D")]
	[Address(RVA = "0x2BE470", Offset = "0x2BE470", VA = "0x2BE470")]
	public static extern IntPtr CSharp_new_AkMIDIEvent_tProgramChange();

	[PreserveSig]
	[Token(Token = "0x6000E0E")]
	[Address(RVA = "0x2BE724", Offset = "0x2BE724", VA = "0x2BE724")]
	public static extern void CSharp_delete_AkMIDIEvent_tProgramChange(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E0F")]
	[Address(RVA = "0x30A34C", Offset = "0x30A34C", VA = "0x30A34C")]
	public static extern void CSharp_AkMIDIEvent_Gen_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E10")]
	[Address(RVA = "0x30A414", Offset = "0x30A414", VA = "0x30A414")]
	public static extern IntPtr CSharp_AkMIDIEvent_Gen_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E11")]
	[Address(RVA = "0x30A4D4", Offset = "0x30A4D4", VA = "0x30A4D4")]
	public static extern void CSharp_AkMIDIEvent_Cc_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E12")]
	[Address(RVA = "0x30A59C", Offset = "0x30A59C", VA = "0x30A59C")]
	public static extern IntPtr CSharp_AkMIDIEvent_Cc_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E13")]
	[Address(RVA = "0x30A65C", Offset = "0x30A65C", VA = "0x30A65C")]
	public static extern void CSharp_AkMIDIEvent_NoteOnOff_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E14")]
	[Address(RVA = "0x30A724", Offset = "0x30A724", VA = "0x30A724")]
	public static extern IntPtr CSharp_AkMIDIEvent_NoteOnOff_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E15")]
	[Address(RVA = "0x30A7E4", Offset = "0x30A7E4", VA = "0x30A7E4")]
	public static extern void CSharp_AkMIDIEvent_PitchBend_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E16")]
	[Address(RVA = "0x30A8AC", Offset = "0x30A8AC", VA = "0x30A8AC")]
	public static extern IntPtr CSharp_AkMIDIEvent_PitchBend_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E17")]
	[Address(RVA = "0x30A96C", Offset = "0x30A96C", VA = "0x30A96C")]
	public static extern void CSharp_AkMIDIEvent_NoteAftertouch_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E18")]
	[Address(RVA = "0x30AA34", Offset = "0x30AA34", VA = "0x30AA34")]
	public static extern IntPtr CSharp_AkMIDIEvent_NoteAftertouch_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E19")]
	[Address(RVA = "0x30AAF4", Offset = "0x30AAF4", VA = "0x30AAF4")]
	public static extern void CSharp_AkMIDIEvent_ChanAftertouch_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E1A")]
	[Address(RVA = "0x30ABBC", Offset = "0x30ABBC", VA = "0x30ABBC")]
	public static extern IntPtr CSharp_AkMIDIEvent_ChanAftertouch_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E1B")]
	[Address(RVA = "0x30AC7C", Offset = "0x30AC7C", VA = "0x30AC7C")]
	public static extern void CSharp_AkMIDIEvent_ProgramChange_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E1C")]
	[Address(RVA = "0x30AD44", Offset = "0x30AD44", VA = "0x30AD44")]
	public static extern IntPtr CSharp_AkMIDIEvent_ProgramChange_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E1D")]
	[Address(RVA = "0x30AE04", Offset = "0x30AE04", VA = "0x30AE04")]
	public static extern void CSharp_AkMIDIEvent_byType_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E1E")]
	[Address(RVA = "0x30AECC", Offset = "0x30AECC", VA = "0x30AECC")]
	public static extern int CSharp_AkMIDIEvent_byType_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E1F")]
	[Address(RVA = "0x30AF8C", Offset = "0x30AF8C", VA = "0x30AF8C")]
	public static extern void CSharp_AkMIDIEvent_byOnOffNote_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E20")]
	[Address(RVA = "0x30B054", Offset = "0x30B054", VA = "0x30B054")]
	public static extern byte CSharp_AkMIDIEvent_byOnOffNote_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E21")]
	[Address(RVA = "0x30B114", Offset = "0x30B114", VA = "0x30B114")]
	public static extern void CSharp_AkMIDIEvent_byVelocity_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E22")]
	[Address(RVA = "0x30B1DC", Offset = "0x30B1DC", VA = "0x30B1DC")]
	public static extern byte CSharp_AkMIDIEvent_byVelocity_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E23")]
	[Address(RVA = "0x30B29C", Offset = "0x30B29C", VA = "0x30B29C")]
	public static extern void CSharp_AkMIDIEvent_byCc_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E24")]
	[Address(RVA = "0x30B364", Offset = "0x30B364", VA = "0x30B364")]
	public static extern int CSharp_AkMIDIEvent_byCc_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E25")]
	[Address(RVA = "0x30B424", Offset = "0x30B424", VA = "0x30B424")]
	public static extern void CSharp_AkMIDIEvent_byCcValue_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E26")]
	[Address(RVA = "0x30B4EC", Offset = "0x30B4EC", VA = "0x30B4EC")]
	public static extern byte CSharp_AkMIDIEvent_byCcValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E27")]
	[Address(RVA = "0x30B5AC", Offset = "0x30B5AC", VA = "0x30B5AC")]
	public static extern void CSharp_AkMIDIEvent_byValueLsb_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E28")]
	[Address(RVA = "0x30B674", Offset = "0x30B674", VA = "0x30B674")]
	public static extern byte CSharp_AkMIDIEvent_byValueLsb_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E29")]
	[Address(RVA = "0x30B734", Offset = "0x30B734", VA = "0x30B734")]
	public static extern void CSharp_AkMIDIEvent_byValueMsb_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E2A")]
	[Address(RVA = "0x30B7FC", Offset = "0x30B7FC", VA = "0x30B7FC")]
	public static extern byte CSharp_AkMIDIEvent_byValueMsb_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E2B")]
	[Address(RVA = "0x30B8BC", Offset = "0x30B8BC", VA = "0x30B8BC")]
	public static extern void CSharp_AkMIDIEvent_byAftertouchNote_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E2C")]
	[Address(RVA = "0x30B984", Offset = "0x30B984", VA = "0x30B984")]
	public static extern byte CSharp_AkMIDIEvent_byAftertouchNote_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E2D")]
	[Address(RVA = "0x30BA44", Offset = "0x30BA44", VA = "0x30BA44")]
	public static extern void CSharp_AkMIDIEvent_byNoteAftertouchValue_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E2E")]
	[Address(RVA = "0x30BB0C", Offset = "0x30BB0C", VA = "0x30BB0C")]
	public static extern byte CSharp_AkMIDIEvent_byNoteAftertouchValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E2F")]
	[Address(RVA = "0x30BBCC", Offset = "0x30BBCC", VA = "0x30BBCC")]
	public static extern void CSharp_AkMIDIEvent_byChanAftertouchValue_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E30")]
	[Address(RVA = "0x30BC94", Offset = "0x30BC94", VA = "0x30BC94")]
	public static extern byte CSharp_AkMIDIEvent_byChanAftertouchValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E31")]
	[Address(RVA = "0x30BD54", Offset = "0x30BD54", VA = "0x30BD54")]
	public static extern void CSharp_AkMIDIEvent_byProgramNum_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E32")]
	[Address(RVA = "0x30BE1C", Offset = "0x30BE1C", VA = "0x30BE1C")]
	public static extern byte CSharp_AkMIDIEvent_byProgramNum_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E33")]
	[Address(RVA = "0x30BEDC", Offset = "0x30BEDC", VA = "0x30BEDC")]
	public static extern IntPtr CSharp_new_AkMIDIEvent();

	[PreserveSig]
	[Token(Token = "0x6000E34")]
	[Address(RVA = "0x30BF8C", Offset = "0x30BF8C", VA = "0x30BF8C")]
	public static extern void CSharp_delete_AkMIDIEvent(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E35")]
	[Address(RVA = "0x2C087C", Offset = "0x2C087C", VA = "0x2C087C")]
	public static extern void CSharp_AkMIDIPost_uOffset_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E36")]
	[Address(RVA = "0x2C09C8", Offset = "0x2C09C8", VA = "0x2C09C8")]
	public static extern uint CSharp_AkMIDIPost_uOffset_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E37")]
	[Address(RVA = "0x2C0C18", Offset = "0x2C0C18", VA = "0x2C0C18")]
	public static extern int CSharp_AkMIDIPost_PostOnEvent(IntPtr jarg1, uint jarg2, ulong jarg3, uint jarg4);

	[PreserveSig]
	[Token(Token = "0x6000E38")]
	[Address(RVA = "0x2C0DC4", Offset = "0x2C0DC4", VA = "0x2C0DC4")]
	public static extern void CSharp_AkMIDIPost_Clone(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E39")]
	[Address(RVA = "0x2C0F04", Offset = "0x2C0F04", VA = "0x2C0F04")]
	public static extern int CSharp_AkMIDIPost_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x6000E3A")]
	[Address(RVA = "0x2C0404", Offset = "0x2C0404", VA = "0x2C0404")]
	public static extern IntPtr CSharp_new_AkMIDIPost();

	[PreserveSig]
	[Token(Token = "0x6000E3B")]
	[Address(RVA = "0x2C0730", Offset = "0x2C0730", VA = "0x2C0730")]
	public static extern void CSharp_delete_AkMIDIPost(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E3C")]
	[Address(RVA = "0x30C04C", Offset = "0x30C04C", VA = "0x30C04C")]
	public static extern IntPtr CSharp_new_AkMemSettings();

	[PreserveSig]
	[Token(Token = "0x6000E3D")]
	[Address(RVA = "0x30C0FC", Offset = "0x30C0FC", VA = "0x30C0FC")]
	public static extern void CSharp_AkMemSettings_uMaxNumPools_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E3E")]
	[Address(RVA = "0x30C1C4", Offset = "0x30C1C4", VA = "0x30C1C4")]
	public static extern uint CSharp_AkMemSettings_uMaxNumPools_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E3F")]
	[Address(RVA = "0x30C284", Offset = "0x30C284", VA = "0x30C284")]
	public static extern void CSharp_AkMemSettings_uDebugFlags_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E40")]
	[Address(RVA = "0x30C34C", Offset = "0x30C34C", VA = "0x30C34C")]
	public static extern uint CSharp_AkMemSettings_uDebugFlags_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E41")]
	[Address(RVA = "0x30C40C", Offset = "0x30C40C", VA = "0x30C40C")]
	public static extern void CSharp_delete_AkMemSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E42")]
	[Address(RVA = "0x2C31F4", Offset = "0x2C31F4", VA = "0x2C31F4")]
	public static extern void CSharp_AkMusicSettings_fStreamingLookAheadRatio_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E43")]
	[Address(RVA = "0x2C3340", Offset = "0x2C3340", VA = "0x2C3340")]
	public static extern float CSharp_AkMusicSettings_fStreamingLookAheadRatio_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E44")]
	[Address(RVA = "0x2C2DF4", Offset = "0x2C2DF4", VA = "0x2C2DF4")]
	public static extern IntPtr CSharp_new_AkMusicSettings();

	[PreserveSig]
	[Token(Token = "0x6000E45")]
	[Address(RVA = "0x2C30A8", Offset = "0x2C30A8", VA = "0x2C30A8")]
	public static extern void CSharp_delete_AkMusicSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E46")]
	[Address(RVA = "0x2F5990", Offset = "0x2F5990", VA = "0x2F5990")]
	public static extern int CSharp_GetPlayingSegmentInfo__SWIG_0(uint jarg1, IntPtr jarg2, bool jarg3);

	[PreserveSig]
	[Token(Token = "0x6000E47")]
	[Address(RVA = "0x2F5B30", Offset = "0x2F5B30", VA = "0x2F5B30")]
	public static extern int CSharp_GetPlayingSegmentInfo__SWIG_1(uint jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E48")]
	[Address(RVA = "0x2DECE8", Offset = "0x2DECE8", VA = "0x2DECE8")]
	public static extern IntPtr CSharp_AkSerializedCallbackHeader_pPackage_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E49")]
	[Address(RVA = "0x2DEE80", Offset = "0x2DEE80", VA = "0x2DEE80")]
	public static extern IntPtr CSharp_AkSerializedCallbackHeader_pNext_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E4A")]
	[Address(RVA = "0x2DEFC4", Offset = "0x2DEFC4", VA = "0x2DEFC4")]
	public static extern int CSharp_AkSerializedCallbackHeader_eType_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E4B")]
	[Address(RVA = "0x2DF108", Offset = "0x2DF108", VA = "0x2DF108")]
	public static extern IntPtr CSharp_AkSerializedCallbackHeader_GetData(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E4C")]
	[Address(RVA = "0x2DE8F0", Offset = "0x2DE8F0", VA = "0x2DE8F0")]
	public static extern IntPtr CSharp_new_AkSerializedCallbackHeader();

	[PreserveSig]
	[Token(Token = "0x6000E4D")]
	[Address(RVA = "0x2DEBA4", Offset = "0x2DEBA4", VA = "0x2DEBA4")]
	public static extern void CSharp_delete_AkSerializedCallbackHeader(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E4E")]
	[Address(RVA = "0x30C4CC", Offset = "0x30C4CC", VA = "0x30C4CC")]
	public static extern IntPtr CSharp_AkCallbackInfo_pCookie_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E4F")]
	[Address(RVA = "0x30C58C", Offset = "0x30C58C", VA = "0x30C58C")]
	public static extern ulong CSharp_AkCallbackInfo_gameObjID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E50")]
	[Address(RVA = "0x30C64C", Offset = "0x30C64C", VA = "0x30C64C")]
	public static extern IntPtr CSharp_new_AkCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x6000E51")]
	[Address(RVA = "0x30C6FC", Offset = "0x30C6FC", VA = "0x30C6FC")]
	public static extern void CSharp_delete_AkCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E52")]
	[Address(RVA = "0x30C7BC", Offset = "0x30C7BC", VA = "0x30C7BC")]
	public static extern uint CSharp_AkEventCallbackInfo_playingID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E53")]
	[Address(RVA = "0x30C87C", Offset = "0x30C87C", VA = "0x30C87C")]
	public static extern uint CSharp_AkEventCallbackInfo_eventID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E54")]
	[Address(RVA = "0x30C93C", Offset = "0x30C93C", VA = "0x30C93C")]
	public static extern IntPtr CSharp_new_AkEventCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x6000E55")]
	[Address(RVA = "0x30C9EC", Offset = "0x30C9EC", VA = "0x30C9EC")]
	public static extern void CSharp_delete_AkEventCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E56")]
	[Address(RVA = "0x2BF0E4", Offset = "0x2BF0E4", VA = "0x2BF0E4")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byChan_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E57")]
	[Address(RVA = "0x2BF228", Offset = "0x2BF228", VA = "0x2BF228")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byParam1_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E58")]
	[Address(RVA = "0x2BF36C", Offset = "0x2BF36C", VA = "0x2BF36C")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byParam2_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E59")]
	[Address(RVA = "0x2BF4B0", Offset = "0x2BF4B0", VA = "0x2BF4B0")]
	public static extern int CSharp_AkMIDIEventCallbackInfo_byType_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E5A")]
	[Address(RVA = "0x2BF5F4", Offset = "0x2BF5F4", VA = "0x2BF5F4")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byOnOffNote_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E5B")]
	[Address(RVA = "0x2BF738", Offset = "0x2BF738", VA = "0x2BF738")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byVelocity_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E5C")]
	[Address(RVA = "0x2BF87C", Offset = "0x2BF87C", VA = "0x2BF87C")]
	public static extern int CSharp_AkMIDIEventCallbackInfo_byCc_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E5D")]
	[Address(RVA = "0x2BF9C0", Offset = "0x2BF9C0", VA = "0x2BF9C0")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byCcValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E5E")]
	[Address(RVA = "0x2BFB04", Offset = "0x2BFB04", VA = "0x2BFB04")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byValueLsb_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E5F")]
	[Address(RVA = "0x2BFC48", Offset = "0x2BFC48", VA = "0x2BFC48")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byValueMsb_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E60")]
	[Address(RVA = "0x2BFD8C", Offset = "0x2BFD8C", VA = "0x2BFD8C")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byAftertouchNote_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E61")]
	[Address(RVA = "0x2BFED0", Offset = "0x2BFED0", VA = "0x2BFED0")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byNoteAftertouchValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E62")]
	[Address(RVA = "0x2C0014", Offset = "0x2C0014", VA = "0x2C0014")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byChanAftertouchValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E63")]
	[Address(RVA = "0x2C0158", Offset = "0x2C0158", VA = "0x2C0158")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byProgramNum_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E64")]
	[Address(RVA = "0x2BEC68", Offset = "0x2BEC68", VA = "0x2BEC68")]
	public static extern IntPtr CSharp_new_AkMIDIEventCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x6000E65")]
	[Address(RVA = "0x2BEFA0", Offset = "0x2BEFA0", VA = "0x2BEFA0")]
	public static extern void CSharp_delete_AkMIDIEventCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E66")]
	[Address(RVA = "0x30CAAC", Offset = "0x30CAAC", VA = "0x30CAAC")]
	public static extern uint CSharp_AkMarkerCallbackInfo_uIdentifier_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E67")]
	[Address(RVA = "0x30CB6C", Offset = "0x30CB6C", VA = "0x30CB6C")]
	public static extern uint CSharp_AkMarkerCallbackInfo_uPosition_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E68")]
	[Address(RVA = "0x30CC2C", Offset = "0x30CC2C", VA = "0x30CC2C")]
	public static extern IntPtr CSharp_AkMarkerCallbackInfo_strLabel_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E69")]
	[Address(RVA = "0x30CCEC", Offset = "0x30CCEC", VA = "0x30CCEC")]
	public static extern IntPtr CSharp_new_AkMarkerCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x6000E6A")]
	[Address(RVA = "0x30CD9C", Offset = "0x30CD9C", VA = "0x30CD9C")]
	public static extern void CSharp_delete_AkMarkerCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E6B")]
	[Address(RVA = "0x30CE5C", Offset = "0x30CE5C", VA = "0x30CE5C")]
	public static extern float CSharp_AkDurationCallbackInfo_fDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E6C")]
	[Address(RVA = "0x30CF1C", Offset = "0x30CF1C", VA = "0x30CF1C")]
	public static extern float CSharp_AkDurationCallbackInfo_fEstimatedDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E6D")]
	[Address(RVA = "0x30CFDC", Offset = "0x30CFDC", VA = "0x30CFDC")]
	public static extern uint CSharp_AkDurationCallbackInfo_audioNodeID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E6E")]
	[Address(RVA = "0x30D09C", Offset = "0x30D09C", VA = "0x30D09C")]
	public static extern uint CSharp_AkDurationCallbackInfo_mediaID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E6F")]
	[Address(RVA = "0x30D15C", Offset = "0x30D15C", VA = "0x30D15C")]
	public static extern bool CSharp_AkDurationCallbackInfo_bStreaming_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E70")]
	[Address(RVA = "0x30D224", Offset = "0x30D224", VA = "0x30D224")]
	public static extern IntPtr CSharp_new_AkDurationCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x6000E71")]
	[Address(RVA = "0x30D2D4", Offset = "0x30D2D4", VA = "0x30D2D4")]
	public static extern void CSharp_delete_AkDurationCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E72")]
	[Address(RVA = "0x30D394", Offset = "0x30D394", VA = "0x30D394")]
	public static extern uint CSharp_AkDynamicSequenceItemCallbackInfo_playingID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E73")]
	[Address(RVA = "0x30D454", Offset = "0x30D454", VA = "0x30D454")]
	public static extern uint CSharp_AkDynamicSequenceItemCallbackInfo_audioNodeID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E74")]
	[Address(RVA = "0x30D514", Offset = "0x30D514", VA = "0x30D514")]
	public static extern IntPtr CSharp_AkDynamicSequenceItemCallbackInfo_pCustomInfo_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E75")]
	[Address(RVA = "0x30D5D4", Offset = "0x30D5D4", VA = "0x30D5D4")]
	public static extern IntPtr CSharp_new_AkDynamicSequenceItemCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x6000E76")]
	[Address(RVA = "0x30D684", Offset = "0x30D684", VA = "0x30D684")]
	public static extern void CSharp_delete_AkDynamicSequenceItemCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E77")]
	[Address(RVA = "0x2C3A5C", Offset = "0x2C3A5C", VA = "0x2C3A5C")]
	public static extern uint CSharp_AkMusicSyncCallbackInfo_playingID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E78")]
	[Address(RVA = "0x2C3BA0", Offset = "0x2C3BA0", VA = "0x2C3BA0")]
	public static extern int CSharp_AkMusicSyncCallbackInfo_segmentInfo_iCurrentPosition_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E79")]
	[Address(RVA = "0x2C3CE4", Offset = "0x2C3CE4", VA = "0x2C3CE4")]
	public static extern int CSharp_AkMusicSyncCallbackInfo_segmentInfo_iPreEntryDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E7A")]
	[Address(RVA = "0x2C3E28", Offset = "0x2C3E28", VA = "0x2C3E28")]
	public static extern int CSharp_AkMusicSyncCallbackInfo_segmentInfo_iActiveDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E7B")]
	[Address(RVA = "0x2C3F6C", Offset = "0x2C3F6C", VA = "0x2C3F6C")]
	public static extern int CSharp_AkMusicSyncCallbackInfo_segmentInfo_iPostExitDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E7C")]
	[Address(RVA = "0x2C40B0", Offset = "0x2C40B0", VA = "0x2C40B0")]
	public static extern int CSharp_AkMusicSyncCallbackInfo_segmentInfo_iRemainingLookAheadTime_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E7D")]
	[Address(RVA = "0x2C41F4", Offset = "0x2C41F4", VA = "0x2C41F4")]
	public static extern float CSharp_AkMusicSyncCallbackInfo_segmentInfo_fBeatDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E7E")]
	[Address(RVA = "0x2C4338", Offset = "0x2C4338", VA = "0x2C4338")]
	public static extern float CSharp_AkMusicSyncCallbackInfo_segmentInfo_fBarDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E7F")]
	[Address(RVA = "0x2C447C", Offset = "0x2C447C", VA = "0x2C447C")]
	public static extern float CSharp_AkMusicSyncCallbackInfo_segmentInfo_fGridDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E80")]
	[Address(RVA = "0x2C45C0", Offset = "0x2C45C0", VA = "0x2C45C0")]
	public static extern float CSharp_AkMusicSyncCallbackInfo_segmentInfo_fGridOffset_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E81")]
	[Address(RVA = "0x2C4704", Offset = "0x2C4704", VA = "0x2C4704")]
	public static extern int CSharp_AkMusicSyncCallbackInfo_musicSyncType_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E82")]
	[Address(RVA = "0x2C4880", Offset = "0x2C4880", VA = "0x2C4880")]
	public static extern IntPtr CSharp_AkMusicSyncCallbackInfo_userCueName_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E83")]
	[Address(RVA = "0x2C35EC", Offset = "0x2C35EC", VA = "0x2C35EC")]
	public static extern IntPtr CSharp_new_AkMusicSyncCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x6000E84")]
	[Address(RVA = "0x2C3918", Offset = "0x2C3918", VA = "0x2C3918")]
	public static extern void CSharp_delete_AkMusicSyncCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E85")]
	[Address(RVA = "0x2C28A8", Offset = "0x2C28A8", VA = "0x2C28A8")]
	public static extern uint CSharp_AkMusicPlaylistCallbackInfo_playlistID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E86")]
	[Address(RVA = "0x2C29EC", Offset = "0x2C29EC", VA = "0x2C29EC")]
	public static extern uint CSharp_AkMusicPlaylistCallbackInfo_uNumPlaylistItems_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E87")]
	[Address(RVA = "0x2C2B30", Offset = "0x2C2B30", VA = "0x2C2B30")]
	public static extern uint CSharp_AkMusicPlaylistCallbackInfo_uPlaylistSelection_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E88")]
	[Address(RVA = "0x2C2C74", Offset = "0x2C2C74", VA = "0x2C2C74")]
	public static extern uint CSharp_AkMusicPlaylistCallbackInfo_uPlaylistItemDone_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E89")]
	[Address(RVA = "0x2C242C", Offset = "0x2C242C", VA = "0x2C242C")]
	public static extern IntPtr CSharp_new_AkMusicPlaylistCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x6000E8A")]
	[Address(RVA = "0x2C2764", Offset = "0x2C2764", VA = "0x2C2764")]
	public static extern void CSharp_delete_AkMusicPlaylistCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E8B")]
	[Address(RVA = "0x30D744", Offset = "0x30D744", VA = "0x30D744")]
	public static extern uint CSharp_AkBankCallbackInfo_bankID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E8C")]
	[Address(RVA = "0x30D804", Offset = "0x30D804", VA = "0x30D804")]
	public static extern IntPtr CSharp_AkBankCallbackInfo_inMemoryBankPtr_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E8D")]
	[Address(RVA = "0x30D8C4", Offset = "0x30D8C4", VA = "0x30D8C4")]
	public static extern int CSharp_AkBankCallbackInfo_loadResult_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E8E")]
	[Address(RVA = "0x30D984", Offset = "0x30D984", VA = "0x30D984")]
	public static extern int CSharp_AkBankCallbackInfo_memPoolId_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E8F")]
	[Address(RVA = "0x30DA44", Offset = "0x30DA44", VA = "0x30DA44")]
	public static extern IntPtr CSharp_new_AkBankCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x6000E90")]
	[Address(RVA = "0x30DAF4", Offset = "0x30DAF4", VA = "0x30DAF4")]
	public static extern void CSharp_delete_AkBankCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E91")]
	[Address(RVA = "0x2C1B20", Offset = "0x2C1B20", VA = "0x2C1B20")]
	public static extern int CSharp_AkMonitoringCallbackInfo_errorCode_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E92")]
	[Address(RVA = "0x2C1C64", Offset = "0x2C1C64", VA = "0x2C1C64")]
	public static extern int CSharp_AkMonitoringCallbackInfo_errorLevel_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E93")]
	[Address(RVA = "0x2C1DA8", Offset = "0x2C1DA8", VA = "0x2C1DA8")]
	public static extern uint CSharp_AkMonitoringCallbackInfo_playingID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E94")]
	[Address(RVA = "0x2C1EEC", Offset = "0x2C1EEC", VA = "0x2C1EEC")]
	public static extern ulong CSharp_AkMonitoringCallbackInfo_gameObjID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E95")]
	[Address(RVA = "0x2C2068", Offset = "0x2C2068", VA = "0x2C2068")]
	public static extern IntPtr CSharp_AkMonitoringCallbackInfo_message_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E96")]
	[Address(RVA = "0x2C1728", Offset = "0x2C1728", VA = "0x2C1728")]
	public static extern IntPtr CSharp_new_AkMonitoringCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x6000E97")]
	[Address(RVA = "0x2C19DC", Offset = "0x2C19DC", VA = "0x2C19DC")]
	public static extern void CSharp_delete_AkMonitoringCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E98")]
	[Address(RVA = "0x30DBB4", Offset = "0x30DBB4", VA = "0x30DBB4")]
	public static extern bool CSharp_AkAudioInterruptionCallbackInfo_bEnterInterruption_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E99")]
	[Address(RVA = "0x30DC7C", Offset = "0x30DC7C", VA = "0x30DC7C")]
	public static extern IntPtr CSharp_new_AkAudioInterruptionCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x6000E9A")]
	[Address(RVA = "0x30DD2C", Offset = "0x30DD2C", VA = "0x30DD2C")]
	public static extern void CSharp_delete_AkAudioInterruptionCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E9B")]
	[Address(RVA = "0x30DDEC", Offset = "0x30DDEC", VA = "0x30DDEC")]
	public static extern bool CSharp_AkAudioSourceChangeCallbackInfo_bOtherAudioPlaying_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E9C")]
	[Address(RVA = "0x30DEB4", Offset = "0x30DEB4", VA = "0x30DEB4")]
	public static extern IntPtr CSharp_new_AkAudioSourceChangeCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x6000E9D")]
	[Address(RVA = "0x30DF64", Offset = "0x30DF64", VA = "0x30DF64")]
	public static extern void CSharp_delete_AkAudioSourceChangeCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E9E")]
	[Address(RVA = "0x30E024", Offset = "0x30E024", VA = "0x30E024")]
	public static extern int CSharp_AkCallbackSerializer_Init(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E9F")]
	[Address(RVA = "0x30E0EC", Offset = "0x30E0EC", VA = "0x30E0EC")]
	public static extern void CSharp_AkCallbackSerializer_Term();

	[PreserveSig]
	[Token(Token = "0x6000EA0")]
	[Address(RVA = "0x30E19C", Offset = "0x30E19C", VA = "0x30E19C")]
	public static extern IntPtr CSharp_AkCallbackSerializer_Lock();

	[PreserveSig]
	[Token(Token = "0x6000EA1")]
	[Address(RVA = "0x30E24C", Offset = "0x30E24C", VA = "0x30E24C")]
	public static extern void CSharp_AkCallbackSerializer_SetLocalOutput(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EA2")]
	[Address(RVA = "0x30E30C", Offset = "0x30E30C", VA = "0x30E30C")]
	public static extern void CSharp_AkCallbackSerializer_Unlock();

	[PreserveSig]
	[Token(Token = "0x6000EA3")]
	[Address(RVA = "0x30E3BC", Offset = "0x30E3BC", VA = "0x30E3BC")]
	public static extern int CSharp_AkCallbackSerializer_AudioSourceChangeCallbackFunc(bool jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000EA4")]
	[Address(RVA = "0x30E484", Offset = "0x30E484", VA = "0x30E484")]
	public static extern IntPtr CSharp_new_AkCallbackSerializer();

	[PreserveSig]
	[Token(Token = "0x6000EA5")]
	[Address(RVA = "0x30E534", Offset = "0x30E534", VA = "0x30E534")]
	public static extern void CSharp_delete_AkCallbackSerializer(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EA6")]
	[Address(RVA = "0x2F5CE4", Offset = "0x2F5CE4", VA = "0x2F5CE4")]
	public static extern int CSharp_PostCode__SWIG_0(int jarg1, int jarg2, uint jarg3, ulong jarg4, uint jarg5, bool jarg6);

	[PreserveSig]
	[Token(Token = "0x6000EA7")]
	[Address(RVA = "0x2F5EB4", Offset = "0x2F5EB4", VA = "0x2F5EB4")]
	public static extern int CSharp_PostCode__SWIG_1(int jarg1, int jarg2, uint jarg3, ulong jarg4, uint jarg5);

	[PreserveSig]
	[Token(Token = "0x6000EA8")]
	[Address(RVA = "0x2F6078", Offset = "0x2F6078", VA = "0x2F6078")]
	public static extern int CSharp_PostCode__SWIG_2(int jarg1, int jarg2, uint jarg3, ulong jarg4);

	[PreserveSig]
	[Token(Token = "0x6000EA9")]
	[Address(RVA = "0x2F61F0", Offset = "0x2F61F0", VA = "0x2F61F0")]
	public static extern int CSharp_PostCode__SWIG_3(int jarg1, int jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000EAA")]
	[Address(RVA = "0x2F6348", Offset = "0x2F6348", VA = "0x2F6348")]
	public static extern int CSharp_PostCode__SWIG_4(int jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000EAB")]
	[Address(RVA = "0x2F64FC", Offset = "0x2F64FC", VA = "0x2F64FC")]
	public static extern int CSharp_PostString__SWIG_0(string jarg1, int jarg2, uint jarg3, ulong jarg4, uint jarg5, bool jarg6);

	[PreserveSig]
	[Token(Token = "0x6000EAC")]
	[Address(RVA = "0x2F66F0", Offset = "0x2F66F0", VA = "0x2F66F0")]
	public static extern int CSharp_PostString__SWIG_1(string jarg1, int jarg2, uint jarg3, ulong jarg4, uint jarg5);

	[PreserveSig]
	[Token(Token = "0x6000EAD")]
	[Address(RVA = "0x2F68D8", Offset = "0x2F68D8", VA = "0x2F68D8")]
	public static extern int CSharp_PostString__SWIG_2(string jarg1, int jarg2, uint jarg3, ulong jarg4);

	[PreserveSig]
	[Token(Token = "0x6000EAE")]
	[Address(RVA = "0x2F6A70", Offset = "0x2F6A70", VA = "0x2F6A70")]
	public static extern int CSharp_PostString__SWIG_3(string jarg1, int jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000EAF")]
	[Address(RVA = "0x2F6BEC", Offset = "0x2F6BEC", VA = "0x2F6BEC")]
	public static extern int CSharp_PostString__SWIG_4(string jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000EB0")]
	[Address(RVA = "0x2F6D50", Offset = "0x2F6D50", VA = "0x2F6D50")]
	public static extern int CSharp_GetTimeStamp();

	[PreserveSig]
	[Token(Token = "0x6000EB1")]
	[Address(RVA = "0x2F6E80", Offset = "0x2F6E80", VA = "0x2F6E80")]
	public static extern uint CSharp_GetNumNonZeroBits(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EB2")]
	[Address(RVA = "0x2F6FE0", Offset = "0x2F6FE0", VA = "0x2F6FE0")]
	public static extern uint CSharp_ResolveDialogueEvent__SWIG_0(uint jarg1, [In] uint[] jarg2, uint jarg3, uint jarg4);

	[PreserveSig]
	[Token(Token = "0x6000EB3")]
	[Address(RVA = "0x2F7154", Offset = "0x2F7154", VA = "0x2F7154")]
	public static extern uint CSharp_ResolveDialogueEvent__SWIG_1(uint jarg1, [In] uint[] jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000EB4")]
	[Address(RVA = "0x2F72C4", Offset = "0x2F72C4", VA = "0x2F72C4")]
	public static extern int CSharp_GetDialogueEventCustomPropertyValue__SWIG_0(uint jarg1, uint jarg2, out int jarg3);

	[PreserveSig]
	[Token(Token = "0x6000EB5")]
	[Address(RVA = "0x2F743C", Offset = "0x2F743C", VA = "0x2F743C")]
	public static extern int CSharp_GetDialogueEventCustomPropertyValue__SWIG_1(uint jarg1, uint jarg2, out float jarg3);

	[PreserveSig]
	[Token(Token = "0x6000EB6")]
	[Address(RVA = "0x2D0598", Offset = "0x2D0598", VA = "0x2D0598")]
	public static extern void CSharp_AkPositioningInfo_fCenterPct_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000EB7")]
	[Address(RVA = "0x2D06E4", Offset = "0x2D06E4", VA = "0x2D06E4")]
	public static extern float CSharp_AkPositioningInfo_fCenterPct_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EB8")]
	[Address(RVA = "0x2D0830", Offset = "0x2D0830", VA = "0x2D0830")]
	public static extern void CSharp_AkPositioningInfo_pannerType_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000EB9")]
	[Address(RVA = "0x2D097C", Offset = "0x2D097C", VA = "0x2D097C")]
	public static extern int CSharp_AkPositioningInfo_pannerType_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EBA")]
	[Address(RVA = "0x2D0AC8", Offset = "0x2D0AC8", VA = "0x2D0AC8")]
	public static extern void CSharp_AkPositioningInfo_e3dPositioningType_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000EBB")]
	[Address(RVA = "0x2D0C14", Offset = "0x2D0C14", VA = "0x2D0C14")]
	public static extern int CSharp_AkPositioningInfo_e3dPositioningType_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EBC")]
	[Address(RVA = "0x2D0D60", Offset = "0x2D0D60", VA = "0x2D0D60")]
	public static extern void CSharp_AkPositioningInfo_bHoldEmitterPosAndOrient_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6000EBD")]
	[Address(RVA = "0x2D0EAC", Offset = "0x2D0EAC", VA = "0x2D0EAC")]
	public static extern bool CSharp_AkPositioningInfo_bHoldEmitterPosAndOrient_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EBE")]
	[Address(RVA = "0x2D1000", Offset = "0x2D1000", VA = "0x2D1000")]
	public static extern void CSharp_AkPositioningInfo_e3DSpatializationMode_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000EBF")]
	[Address(RVA = "0x2D114C", Offset = "0x2D114C", VA = "0x2D114C")]
	public static extern int CSharp_AkPositioningInfo_e3DSpatializationMode_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EC0")]
	[Address(RVA = "0x2D1298", Offset = "0x2D1298", VA = "0x2D1298")]
	public static extern void CSharp_AkPositioningInfo_bUseAttenuation_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6000EC1")]
	[Address(RVA = "0x2D13E4", Offset = "0x2D13E4", VA = "0x2D13E4")]
	public static extern bool CSharp_AkPositioningInfo_bUseAttenuation_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EC2")]
	[Address(RVA = "0x2D1538", Offset = "0x2D1538", VA = "0x2D1538")]
	public static extern void CSharp_AkPositioningInfo_bUseConeAttenuation_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6000EC3")]
	[Address(RVA = "0x2D1684", Offset = "0x2D1684", VA = "0x2D1684")]
	public static extern bool CSharp_AkPositioningInfo_bUseConeAttenuation_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EC4")]
	[Address(RVA = "0x2D17D8", Offset = "0x2D17D8", VA = "0x2D17D8")]
	public static extern void CSharp_AkPositioningInfo_fInnerAngle_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000EC5")]
	[Address(RVA = "0x2D1924", Offset = "0x2D1924", VA = "0x2D1924")]
	public static extern float CSharp_AkPositioningInfo_fInnerAngle_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EC6")]
	[Address(RVA = "0x2D1A70", Offset = "0x2D1A70", VA = "0x2D1A70")]
	public static extern void CSharp_AkPositioningInfo_fOuterAngle_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000EC7")]
	[Address(RVA = "0x2D1BBC", Offset = "0x2D1BBC", VA = "0x2D1BBC")]
	public static extern float CSharp_AkPositioningInfo_fOuterAngle_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EC8")]
	[Address(RVA = "0x2D1D08", Offset = "0x2D1D08", VA = "0x2D1D08")]
	public static extern void CSharp_AkPositioningInfo_fConeMaxAttenuation_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000EC9")]
	[Address(RVA = "0x2D1E54", Offset = "0x2D1E54", VA = "0x2D1E54")]
	public static extern float CSharp_AkPositioningInfo_fConeMaxAttenuation_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000ECA")]
	[Address(RVA = "0x2D1FA0", Offset = "0x2D1FA0", VA = "0x2D1FA0")]
	public static extern void CSharp_AkPositioningInfo_LPFCone_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000ECB")]
	[Address(RVA = "0x2D20EC", Offset = "0x2D20EC", VA = "0x2D20EC")]
	public static extern float CSharp_AkPositioningInfo_LPFCone_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000ECC")]
	[Address(RVA = "0x2D2238", Offset = "0x2D2238", VA = "0x2D2238")]
	public static extern void CSharp_AkPositioningInfo_HPFCone_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000ECD")]
	[Address(RVA = "0x2D2384", Offset = "0x2D2384", VA = "0x2D2384")]
	public static extern float CSharp_AkPositioningInfo_HPFCone_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000ECE")]
	[Address(RVA = "0x2D24D0", Offset = "0x2D24D0", VA = "0x2D24D0")]
	public static extern void CSharp_AkPositioningInfo_fMaxDistance_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000ECF")]
	[Address(RVA = "0x2D261C", Offset = "0x2D261C", VA = "0x2D261C")]
	public static extern float CSharp_AkPositioningInfo_fMaxDistance_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000ED0")]
	[Address(RVA = "0x2D2768", Offset = "0x2D2768", VA = "0x2D2768")]
	public static extern void CSharp_AkPositioningInfo_fVolDryAtMaxDist_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000ED1")]
	[Address(RVA = "0x2D28B4", Offset = "0x2D28B4", VA = "0x2D28B4")]
	public static extern float CSharp_AkPositioningInfo_fVolDryAtMaxDist_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000ED2")]
	[Address(RVA = "0x2D2A00", Offset = "0x2D2A00", VA = "0x2D2A00")]
	public static extern void CSharp_AkPositioningInfo_fVolAuxGameDefAtMaxDist_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000ED3")]
	[Address(RVA = "0x2D2B4C", Offset = "0x2D2B4C", VA = "0x2D2B4C")]
	public static extern float CSharp_AkPositioningInfo_fVolAuxGameDefAtMaxDist_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000ED4")]
	[Address(RVA = "0x2D2C98", Offset = "0x2D2C98", VA = "0x2D2C98")]
	public static extern void CSharp_AkPositioningInfo_fVolAuxUserDefAtMaxDist_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000ED5")]
	[Address(RVA = "0x2D2DE4", Offset = "0x2D2DE4", VA = "0x2D2DE4")]
	public static extern float CSharp_AkPositioningInfo_fVolAuxUserDefAtMaxDist_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000ED6")]
	[Address(RVA = "0x2D2F30", Offset = "0x2D2F30", VA = "0x2D2F30")]
	public static extern void CSharp_AkPositioningInfo_LPFValueAtMaxDist_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000ED7")]
	[Address(RVA = "0x2D307C", Offset = "0x2D307C", VA = "0x2D307C")]
	public static extern float CSharp_AkPositioningInfo_LPFValueAtMaxDist_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000ED8")]
	[Address(RVA = "0x2D31C8", Offset = "0x2D31C8", VA = "0x2D31C8")]
	public static extern void CSharp_AkPositioningInfo_HPFValueAtMaxDist_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000ED9")]
	[Address(RVA = "0x2D3314", Offset = "0x2D3314", VA = "0x2D3314")]
	public static extern float CSharp_AkPositioningInfo_HPFValueAtMaxDist_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EDA")]
	[Address(RVA = "0x2D0198", Offset = "0x2D0198", VA = "0x2D0198")]
	public static extern IntPtr CSharp_new_AkPositioningInfo();

	[PreserveSig]
	[Token(Token = "0x6000EDB")]
	[Address(RVA = "0x2D044C", Offset = "0x2D044C", VA = "0x2D044C")]
	public static extern void CSharp_delete_AkPositioningInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EDC")]
	[Address(RVA = "0x2C4E88", Offset = "0x2C4E88", VA = "0x2C4E88")]
	public static extern void CSharp_AkObjectInfo_objID_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000EDD")]
	[Address(RVA = "0x2C4FD4", Offset = "0x2C4FD4", VA = "0x2C4FD4")]
	public static extern uint CSharp_AkObjectInfo_objID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EDE")]
	[Address(RVA = "0x2C5120", Offset = "0x2C5120", VA = "0x2C5120")]
	public static extern void CSharp_AkObjectInfo_parentID_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000EDF")]
	[Address(RVA = "0x2C526C", Offset = "0x2C526C", VA = "0x2C526C")]
	public static extern uint CSharp_AkObjectInfo_parentID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EE0")]
	[Address(RVA = "0x2C53B8", Offset = "0x2C53B8", VA = "0x2C53B8")]
	public static extern void CSharp_AkObjectInfo_iDepth_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000EE1")]
	[Address(RVA = "0x2C5504", Offset = "0x2C5504", VA = "0x2C5504")]
	public static extern int CSharp_AkObjectInfo_iDepth_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EE2")]
	[Address(RVA = "0x2C4A88", Offset = "0x2C4A88", VA = "0x2C4A88")]
	public static extern IntPtr CSharp_new_AkObjectInfo();

	[PreserveSig]
	[Token(Token = "0x6000EE3")]
	[Address(RVA = "0x2C4D3C", Offset = "0x2C4D3C", VA = "0x2C4D3C")]
	public static extern void CSharp_delete_AkObjectInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EE4")]
	[Address(RVA = "0x2F7600", Offset = "0x2F7600", VA = "0x2F7600")]
	public static extern int CSharp_GetPosition(ulong jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000EE5")]
	[Address(RVA = "0x2F77B0", Offset = "0x2F77B0", VA = "0x2F77B0")]
	public static extern int CSharp_GetListenerPosition(ulong jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000EE6")]
	[Address(RVA = "0x2F7960", Offset = "0x2F7960", VA = "0x2F7960")]
	public static extern int CSharp_GetRTPCValue__SWIG_0(uint jarg1, ulong jarg2, uint jarg3, out float jarg4, ref int jarg5);

	[PreserveSig]
	[Token(Token = "0x6000EE7")]
	[Address(RVA = "0x2F7B3C", Offset = "0x2F7B3C", VA = "0x2F7B3C")]
	public static extern int CSharp_GetRTPCValue__SWIG_1(string jarg1, ulong jarg2, uint jarg3, out float jarg4, ref int jarg5);

	[PreserveSig]
	[Token(Token = "0x6000EE8")]
	[Address(RVA = "0x2F7D2C", Offset = "0x2F7D2C", VA = "0x2F7D2C")]
	public static extern int CSharp_GetSwitch__SWIG_0(uint jarg1, ulong jarg2, out uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000EE9")]
	[Address(RVA = "0x2F7EF0", Offset = "0x2F7EF0", VA = "0x2F7EF0")]
	public static extern int CSharp_GetSwitch__SWIG_1(string jarg1, ulong jarg2, out uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000EEA")]
	[Address(RVA = "0x2F8088", Offset = "0x2F8088", VA = "0x2F8088")]
	public static extern int CSharp_GetState__SWIG_0(uint jarg1, out uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000EEB")]
	[Address(RVA = "0x2F81E8", Offset = "0x2F81E8", VA = "0x2F81E8")]
	public static extern int CSharp_GetState__SWIG_1(string jarg1, out uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000EEC")]
	[Address(RVA = "0x2F83D8", Offset = "0x2F83D8", VA = "0x2F83D8")]
	public static extern int CSharp_GetGameObjectAuxSendValues(ulong jarg1, IntPtr jarg2, ref uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000EED")]
	[Address(RVA = "0x2F8590", Offset = "0x2F8590", VA = "0x2F8590")]
	public static extern int CSharp_GetGameObjectDryLevelValue(ulong jarg1, ulong jarg2, out float jarg3);

	[PreserveSig]
	[Token(Token = "0x6000EEE")]
	[Address(RVA = "0x2F8764", Offset = "0x2F8764", VA = "0x2F8764")]
	public static extern int CSharp_GetObjectObstructionAndOcclusion(ulong jarg1, ulong jarg2, out float jarg3, out float jarg4);

	[PreserveSig]
	[Token(Token = "0x6000EEF")]
	[Address(RVA = "0x2F8940", Offset = "0x2F8940", VA = "0x2F8940")]
	public static extern int CSharp_QueryAudioObjectIDs__SWIG_0(uint jarg1, ref uint jarg2, IntPtr jarg3);

	[PreserveSig]
	[Token(Token = "0x6000EF0")]
	[Address(RVA = "0x2F8AF0", Offset = "0x2F8AF0", VA = "0x2F8AF0")]
	public static extern int CSharp_QueryAudioObjectIDs__SWIG_1(string jarg1, ref uint jarg2, IntPtr jarg3);

	[PreserveSig]
	[Token(Token = "0x6000EF1")]
	[Address(RVA = "0x2F8CB4", Offset = "0x2F8CB4", VA = "0x2F8CB4")]
	public static extern int CSharp_GetPositioningInfo(uint jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000EF2")]
	[Address(RVA = "0x2F8E44", Offset = "0x2F8E44", VA = "0x2F8E44")]
	public static extern bool CSharp_GetIsGameObjectActive(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EF3")]
	[Address(RVA = "0x2F8FDC", Offset = "0x2F8FDC", VA = "0x2F8FDC")]
	public static extern float CSharp_GetMaxRadius(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EF4")]
	[Address(RVA = "0x2F9124", Offset = "0x2F9124", VA = "0x2F9124")]
	public static extern uint CSharp_GetEventIDFromPlayingID(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EF5")]
	[Address(RVA = "0x2F9264", Offset = "0x2F9264", VA = "0x2F9264")]
	public static extern ulong CSharp_GetGameObjectFromPlayingID(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EF6")]
	[Address(RVA = "0x2F93FC", Offset = "0x2F93FC", VA = "0x2F93FC")]
	public static extern int CSharp_GetPlayingIDsFromGameObject(ulong jarg1, ref uint jarg2, [Out] uint[] jarg3);

	[PreserveSig]
	[Token(Token = "0x6000EF7")]
	[Address(RVA = "0x2F9600", Offset = "0x2F9600", VA = "0x2F9600")]
	public static extern int CSharp_GetCustomPropertyValue__SWIG_0(uint jarg1, uint jarg2, out int jarg3);

	[PreserveSig]
	[Token(Token = "0x6000EF8")]
	[Address(RVA = "0x2F9778", Offset = "0x2F9778", VA = "0x2F9778")]
	public static extern int CSharp_GetCustomPropertyValue__SWIG_1(uint jarg1, uint jarg2, out float jarg3);

	[PreserveSig]
	[Token(Token = "0x6000EF9")]
	[Address(RVA = "0x2F98D8", Offset = "0x2F98D8", VA = "0x2F98D8")]
	public static extern void CSharp_AK_SPEAKER_SETUP_FIX_LEFT_TO_CENTER(ref uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EFA")]
	[Address(RVA = "0x2F9A18", Offset = "0x2F9A18", VA = "0x2F9A18")]
	public static extern void CSharp_AK_SPEAKER_SETUP_FIX_REAR_TO_SIDE(ref uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EFB")]
	[Address(RVA = "0x2F9B58", Offset = "0x2F9B58", VA = "0x2F9B58")]
	public static extern void CSharp_AK_SPEAKER_SETUP_CONVERT_TO_SUPPORTED(ref uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EFC")]
	[Address(RVA = "0x2F9C98", Offset = "0x2F9C98", VA = "0x2F9C98")]
	public static extern byte CSharp_ChannelMaskToNumChannels(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EFD")]
	[Address(RVA = "0x2F9DD8", Offset = "0x2F9DD8", VA = "0x2F9DD8")]
	public static extern uint CSharp_ChannelMaskFromNumChannels(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EFE")]
	[Address(RVA = "0x2F9F20", Offset = "0x2F9F20", VA = "0x2F9F20")]
	public static extern byte CSharp_ChannelBitToIndex(uint jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000EFF")]
	[Address(RVA = "0x2FA068", Offset = "0x2FA068", VA = "0x2FA068")]
	public static extern bool CSharp_HasSurroundChannels(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F00")]
	[Address(RVA = "0x2FA1B0", Offset = "0x2FA1B0", VA = "0x2FA1B0")]
	public static extern bool CSharp_HasStrictlyOnePairOfSurroundChannels(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F01")]
	[Address(RVA = "0x2FA2F8", Offset = "0x2FA2F8", VA = "0x2FA2F8")]
	public static extern bool CSharp_HasSideAndRearChannels(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F02")]
	[Address(RVA = "0x2FA440", Offset = "0x2FA440", VA = "0x2FA440")]
	public static extern bool CSharp_HasHeightChannels(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F03")]
	[Address(RVA = "0x2FA588", Offset = "0x2FA588", VA = "0x2FA588")]
	public static extern uint CSharp_BackToSideChannels(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F04")]
	[Address(RVA = "0x2FA6E0", Offset = "0x2FA6E0", VA = "0x2FA6E0")]
	public static extern uint CSharp_StdChannelIndexToDisplayIndex(int jarg1, uint jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000F05")]
	[Address(RVA = "0x30E5F4", Offset = "0x30E5F4", VA = "0x30E5F4")]
	public static extern void CSharp_AkChannelConfig_uNumChannels_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F06")]
	[Address(RVA = "0x30E6BC", Offset = "0x30E6BC", VA = "0x30E6BC")]
	public static extern uint CSharp_AkChannelConfig_uNumChannels_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F07")]
	[Address(RVA = "0x30E77C", Offset = "0x30E77C", VA = "0x30E77C")]
	public static extern void CSharp_AkChannelConfig_eConfigType_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F08")]
	[Address(RVA = "0x30E844", Offset = "0x30E844", VA = "0x30E844")]
	public static extern uint CSharp_AkChannelConfig_eConfigType_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F09")]
	[Address(RVA = "0x30E904", Offset = "0x30E904", VA = "0x30E904")]
	public static extern void CSharp_AkChannelConfig_uChannelMask_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F0A")]
	[Address(RVA = "0x30E9CC", Offset = "0x30E9CC", VA = "0x30E9CC")]
	public static extern uint CSharp_AkChannelConfig_uChannelMask_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F0B")]
	[Address(RVA = "0x30EA8C", Offset = "0x30EA8C", VA = "0x30EA8C")]
	public static extern IntPtr CSharp_new_AkChannelConfig__SWIG_0();

	[PreserveSig]
	[Token(Token = "0x6000F0C")]
	[Address(RVA = "0x30EB3C", Offset = "0x30EB3C", VA = "0x30EB3C")]
	public static extern IntPtr CSharp_new_AkChannelConfig__SWIG_1(uint jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F0D")]
	[Address(RVA = "0x30EC04", Offset = "0x30EC04", VA = "0x30EC04")]
	public static extern void CSharp_AkChannelConfig_Clear(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F0E")]
	[Address(RVA = "0x30ECC4", Offset = "0x30ECC4", VA = "0x30ECC4")]
	public static extern void CSharp_AkChannelConfig_SetStandard(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F0F")]
	[Address(RVA = "0x30ED8C", Offset = "0x30ED8C", VA = "0x30ED8C")]
	public static extern void CSharp_AkChannelConfig_SetStandardOrAnonymous(IntPtr jarg1, uint jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000F10")]
	[Address(RVA = "0x30EE5C", Offset = "0x30EE5C", VA = "0x30EE5C")]
	public static extern void CSharp_AkChannelConfig_SetAnonymous(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F11")]
	[Address(RVA = "0x30EF24", Offset = "0x30EF24", VA = "0x30EF24")]
	public static extern void CSharp_AkChannelConfig_SetAmbisonic(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F12")]
	[Address(RVA = "0x30EFEC", Offset = "0x30EFEC", VA = "0x30EFEC")]
	public static extern bool CSharp_AkChannelConfig_IsValid(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F13")]
	[Address(RVA = "0x30F0B4", Offset = "0x30F0B4", VA = "0x30F0B4")]
	public static extern uint CSharp_AkChannelConfig_Serialize(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F14")]
	[Address(RVA = "0x30F174", Offset = "0x30F174", VA = "0x30F174")]
	public static extern void CSharp_AkChannelConfig_Deserialize(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F15")]
	[Address(RVA = "0x30F23C", Offset = "0x30F23C", VA = "0x30F23C")]
	public static extern IntPtr CSharp_AkChannelConfig_RemoveLFE(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F16")]
	[Address(RVA = "0x30F2FC", Offset = "0x30F2FC", VA = "0x30F2FC")]
	public static extern IntPtr CSharp_AkChannelConfig_RemoveCenter(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F17")]
	[Address(RVA = "0x30F3BC", Offset = "0x30F3BC", VA = "0x30F3BC")]
	public static extern bool CSharp_AkChannelConfig_IsChannelConfigSupported(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F18")]
	[Address(RVA = "0x30F484", Offset = "0x30F484", VA = "0x30F484")]
	public static extern void CSharp_delete_AkChannelConfig(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F19")]
	[Address(RVA = "0x30F544", Offset = "0x30F544", VA = "0x30F544")]
	public static extern IntPtr CSharp_new_AkImageSourceParams__SWIG_0();

	[PreserveSig]
	[Token(Token = "0x6000F1A")]
	[Address(RVA = "0x30F5F4", Offset = "0x30F5F4", VA = "0x30F5F4")]
	public static extern IntPtr CSharp_new_AkImageSourceParams__SWIG_1(IntPtr jarg1, float jarg2, float jarg3);

	[PreserveSig]
	[Token(Token = "0x6000F1B")]
	[Address(RVA = "0x30F6C4", Offset = "0x30F6C4", VA = "0x30F6C4")]
	public static extern void CSharp_AkImageSourceParams_sourcePosition_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F1C")]
	[Address(RVA = "0x30F78C", Offset = "0x30F78C", VA = "0x30F78C")]
	public static extern IntPtr CSharp_AkImageSourceParams_sourcePosition_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F1D")]
	[Address(RVA = "0x30F84C", Offset = "0x30F84C", VA = "0x30F84C")]
	public static extern void CSharp_AkImageSourceParams_fDistanceScalingFactor_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F1E")]
	[Address(RVA = "0x30F914", Offset = "0x30F914", VA = "0x30F914")]
	public static extern float CSharp_AkImageSourceParams_fDistanceScalingFactor_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F1F")]
	[Address(RVA = "0x30F9D4", Offset = "0x30F9D4", VA = "0x30F9D4")]
	public static extern void CSharp_AkImageSourceParams_fLevel_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F20")]
	[Address(RVA = "0x30FA9C", Offset = "0x30FA9C", VA = "0x30FA9C")]
	public static extern float CSharp_AkImageSourceParams_fLevel_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F21")]
	[Address(RVA = "0x30FB5C", Offset = "0x30FB5C", VA = "0x30FB5C")]
	public static extern void CSharp_AkImageSourceParams_fDiffraction_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F22")]
	[Address(RVA = "0x30FC24", Offset = "0x30FC24", VA = "0x30FC24")]
	public static extern float CSharp_AkImageSourceParams_fDiffraction_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F23")]
	[Address(RVA = "0x30FCE4", Offset = "0x30FCE4", VA = "0x30FCE4")]
	public static extern void CSharp_AkImageSourceParams_bDiffractedEmitterSide_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F24")]
	[Address(RVA = "0x30FDAC", Offset = "0x30FDAC", VA = "0x30FDAC")]
	public static extern bool CSharp_AkImageSourceParams_bDiffractedEmitterSide_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F25")]
	[Address(RVA = "0x30FE74", Offset = "0x30FE74", VA = "0x30FE74")]
	public static extern void CSharp_AkImageSourceParams_bDiffractedListenerSide_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F26")]
	[Address(RVA = "0x30FF3C", Offset = "0x30FF3C", VA = "0x30FF3C")]
	public static extern bool CSharp_AkImageSourceParams_bDiffractedListenerSide_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F27")]
	[Address(RVA = "0x310004", Offset = "0x310004", VA = "0x310004")]
	public static extern void CSharp_delete_AkImageSourceParams(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F28")]
	[Address(RVA = "0x2FA828", Offset = "0x2FA828", VA = "0x2FA828")]
	public static extern float CSharp_kDefaultMaxPathLength_get();

	[PreserveSig]
	[Token(Token = "0x6000F29")]
	[Address(RVA = "0x2FA950", Offset = "0x2FA950", VA = "0x2FA950")]
	public static extern float CSharp_kMaxDiffraction_get();

	[PreserveSig]
	[Token(Token = "0x6000F2A")]
	[Address(RVA = "0x2FAA80", Offset = "0x2FAA80", VA = "0x2FAA80")]
	public static extern void CSharp_g_SpatialAudioPoolId_set(int jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F2B")]
	[Address(RVA = "0x2FABB8", Offset = "0x2FABB8", VA = "0x2FABB8")]
	public static extern int CSharp_g_SpatialAudioPoolId_get();

	[PreserveSig]
	[Token(Token = "0x6000F2C")]
	[Address(RVA = "0x3100C4", Offset = "0x3100C4", VA = "0x3100C4")]
	public static extern int CSharp__ArrayPoolSpatialAudio_Get();

	[PreserveSig]
	[Token(Token = "0x6000F2D")]
	[Address(RVA = "0x310174", Offset = "0x310174", VA = "0x310174")]
	public static extern IntPtr CSharp_new__ArrayPoolSpatialAudio();

	[PreserveSig]
	[Token(Token = "0x6000F2E")]
	[Address(RVA = "0x310224", Offset = "0x310224", VA = "0x310224")]
	public static extern void CSharp_delete__ArrayPoolSpatialAudio(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F2F")]
	[Address(RVA = "0x3102E4", Offset = "0x3102E4", VA = "0x3102E4")]
	public static extern IntPtr CSharp_new_AkSpatialAudioInitSettings();

	[PreserveSig]
	[Token(Token = "0x6000F30")]
	[Address(RVA = "0x310394", Offset = "0x310394", VA = "0x310394")]
	public static extern void CSharp_AkSpatialAudioInitSettings_uPoolID_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F31")]
	[Address(RVA = "0x31045C", Offset = "0x31045C", VA = "0x31045C")]
	public static extern int CSharp_AkSpatialAudioInitSettings_uPoolID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F32")]
	[Address(RVA = "0x31051C", Offset = "0x31051C", VA = "0x31051C")]
	public static extern void CSharp_AkSpatialAudioInitSettings_uPoolSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F33")]
	[Address(RVA = "0x3105E4", Offset = "0x3105E4", VA = "0x3105E4")]
	public static extern uint CSharp_AkSpatialAudioInitSettings_uPoolSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F34")]
	[Address(RVA = "0x3106A4", Offset = "0x3106A4", VA = "0x3106A4")]
	public static extern void CSharp_AkSpatialAudioInitSettings_uMaxSoundPropagationDepth_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F35")]
	[Address(RVA = "0x31076C", Offset = "0x31076C", VA = "0x31076C")]
	public static extern uint CSharp_AkSpatialAudioInitSettings_uMaxSoundPropagationDepth_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F36")]
	[Address(RVA = "0x31082C", Offset = "0x31082C", VA = "0x31082C")]
	public static extern void CSharp_AkSpatialAudioInitSettings_uDiffractionFlags_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F37")]
	[Address(RVA = "0x3108F4", Offset = "0x3108F4", VA = "0x3108F4")]
	public static extern uint CSharp_AkSpatialAudioInitSettings_uDiffractionFlags_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F38")]
	[Address(RVA = "0x3109B4", Offset = "0x3109B4", VA = "0x3109B4")]
	public static extern void CSharp_AkSpatialAudioInitSettings_fDiffractionShadowAttenFactor_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F39")]
	[Address(RVA = "0x310A7C", Offset = "0x310A7C", VA = "0x310A7C")]
	public static extern float CSharp_AkSpatialAudioInitSettings_fDiffractionShadowAttenFactor_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F3A")]
	[Address(RVA = "0x310B3C", Offset = "0x310B3C", VA = "0x310B3C")]
	public static extern void CSharp_AkSpatialAudioInitSettings_fDiffractionShadowDegrees_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F3B")]
	[Address(RVA = "0x310C04", Offset = "0x310C04", VA = "0x310C04")]
	public static extern float CSharp_AkSpatialAudioInitSettings_fDiffractionShadowDegrees_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F3C")]
	[Address(RVA = "0x310CC4", Offset = "0x310CC4", VA = "0x310CC4")]
	public static extern void CSharp_delete_AkSpatialAudioInitSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F3D")]
	[Address(RVA = "0x310D84", Offset = "0x310D84", VA = "0x310D84")]
	public static extern IntPtr CSharp_new_AkImageSourceSettings__SWIG_0();

	[PreserveSig]
	[Token(Token = "0x6000F3E")]
	[Address(RVA = "0x310E34", Offset = "0x310E34", VA = "0x310E34")]
	public static extern IntPtr CSharp_new_AkImageSourceSettings__SWIG_1(IntPtr jarg1, float jarg2, float jarg3);

	[PreserveSig]
	[Token(Token = "0x6000F3F")]
	[Address(RVA = "0x310F04", Offset = "0x310F04", VA = "0x310F04")]
	public static extern void CSharp_delete_AkImageSourceSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F40")]
	[Address(RVA = "0x310FC4", Offset = "0x310FC4", VA = "0x310FC4")]
	public static extern void CSharp_AkImageSourceSettings_SetOneTexture(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F41")]
	[Address(RVA = "0x31108C", Offset = "0x31108C", VA = "0x31108C")]
	public static extern void CSharp_AkImageSourceSettings_SetName(IntPtr jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F42")]
	[Address(RVA = "0x311170", Offset = "0x311170", VA = "0x311170")]
	public static extern void CSharp_AkImageSourceSettings_params__set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F43")]
	[Address(RVA = "0x311238", Offset = "0x311238", VA = "0x311238")]
	public static extern IntPtr CSharp_AkImageSourceSettings_params__get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F44")]
	[Address(RVA = "0x3112F8", Offset = "0x3112F8", VA = "0x3112F8")]
	public static extern IntPtr CSharp_new_AkEmitterSettings();

	[PreserveSig]
	[Token(Token = "0x6000F45")]
	[Address(RVA = "0x3113A8", Offset = "0x3113A8", VA = "0x3113A8")]
	public static extern void CSharp_AkEmitterSettings_reflectAuxBusID_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F46")]
	[Address(RVA = "0x311470", Offset = "0x311470", VA = "0x311470")]
	public static extern uint CSharp_AkEmitterSettings_reflectAuxBusID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F47")]
	[Address(RVA = "0x311530", Offset = "0x311530", VA = "0x311530")]
	public static extern void CSharp_AkEmitterSettings_reflectionMaxPathLength_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F48")]
	[Address(RVA = "0x3115F8", Offset = "0x3115F8", VA = "0x3115F8")]
	public static extern float CSharp_AkEmitterSettings_reflectionMaxPathLength_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F49")]
	[Address(RVA = "0x3116B8", Offset = "0x3116B8", VA = "0x3116B8")]
	public static extern void CSharp_AkEmitterSettings_reflectionsAuxBusGain_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F4A")]
	[Address(RVA = "0x311780", Offset = "0x311780", VA = "0x311780")]
	public static extern float CSharp_AkEmitterSettings_reflectionsAuxBusGain_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F4B")]
	[Address(RVA = "0x311840", Offset = "0x311840", VA = "0x311840")]
	public static extern void CSharp_AkEmitterSettings_reflectionsOrder_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F4C")]
	[Address(RVA = "0x311908", Offset = "0x311908", VA = "0x311908")]
	public static extern uint CSharp_AkEmitterSettings_reflectionsOrder_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F4D")]
	[Address(RVA = "0x3119C8", Offset = "0x3119C8", VA = "0x3119C8")]
	public static extern void CSharp_AkEmitterSettings_reflectorFilterMask_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F4E")]
	[Address(RVA = "0x311A90", Offset = "0x311A90", VA = "0x311A90")]
	public static extern uint CSharp_AkEmitterSettings_reflectorFilterMask_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F4F")]
	[Address(RVA = "0x311B50", Offset = "0x311B50", VA = "0x311B50")]
	public static extern void CSharp_AkEmitterSettings_roomReverbAuxBusGain_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F50")]
	[Address(RVA = "0x311C18", Offset = "0x311C18", VA = "0x311C18")]
	public static extern float CSharp_AkEmitterSettings_roomReverbAuxBusGain_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F51")]
	[Address(RVA = "0x311CD8", Offset = "0x311CD8", VA = "0x311CD8")]
	public static extern void CSharp_AkEmitterSettings_diffractionMaxEdges_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F52")]
	[Address(RVA = "0x311DA0", Offset = "0x311DA0", VA = "0x311DA0")]
	public static extern uint CSharp_AkEmitterSettings_diffractionMaxEdges_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F53")]
	[Address(RVA = "0x311E60", Offset = "0x311E60", VA = "0x311E60")]
	public static extern void CSharp_AkEmitterSettings_diffractionMaxPaths_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F54")]
	[Address(RVA = "0x311F28", Offset = "0x311F28", VA = "0x311F28")]
	public static extern uint CSharp_AkEmitterSettings_diffractionMaxPaths_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F55")]
	[Address(RVA = "0x311FE8", Offset = "0x311FE8", VA = "0x311FE8")]
	public static extern void CSharp_AkEmitterSettings_diffractionMaxPathLength_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F56")]
	[Address(RVA = "0x3120B0", Offset = "0x3120B0", VA = "0x3120B0")]
	public static extern float CSharp_AkEmitterSettings_diffractionMaxPathLength_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F57")]
	[Address(RVA = "0x312170", Offset = "0x312170", VA = "0x312170")]
	public static extern void CSharp_AkEmitterSettings_useImageSources_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F58")]
	[Address(RVA = "0x312238", Offset = "0x312238", VA = "0x312238")]
	public static extern byte CSharp_AkEmitterSettings_useImageSources_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F59")]
	[Address(RVA = "0x3122F8", Offset = "0x3122F8", VA = "0x3122F8")]
	public static extern void CSharp_delete_AkEmitterSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F5A")]
	[Address(RVA = "0x3123B8", Offset = "0x3123B8", VA = "0x3123B8")]
	public static extern IntPtr CSharp_new_AkVertex__SWIG_0();

	[PreserveSig]
	[Token(Token = "0x6000F5B")]
	[Address(RVA = "0x312468", Offset = "0x312468", VA = "0x312468")]
	public static extern IntPtr CSharp_new_AkVertex__SWIG_1(float jarg1, float jarg2, float jarg3);

	[PreserveSig]
	[Token(Token = "0x6000F5C")]
	[Address(RVA = "0x312538", Offset = "0x312538", VA = "0x312538")]
	public static extern void CSharp_AkVertex_X_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F5D")]
	[Address(RVA = "0x312600", Offset = "0x312600", VA = "0x312600")]
	public static extern float CSharp_AkVertex_X_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F5E")]
	[Address(RVA = "0x3126C0", Offset = "0x3126C0", VA = "0x3126C0")]
	public static extern void CSharp_AkVertex_Y_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F5F")]
	[Address(RVA = "0x312788", Offset = "0x312788", VA = "0x312788")]
	public static extern float CSharp_AkVertex_Y_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F60")]
	[Address(RVA = "0x312848", Offset = "0x312848", VA = "0x312848")]
	public static extern void CSharp_AkVertex_Z_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F61")]
	[Address(RVA = "0x312910", Offset = "0x312910", VA = "0x312910")]
	public static extern float CSharp_AkVertex_Z_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F62")]
	[Address(RVA = "0x3129D0", Offset = "0x3129D0", VA = "0x3129D0")]
	public static extern void CSharp_AkVertex_Clear(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F63")]
	[Address(RVA = "0x312A90", Offset = "0x312A90", VA = "0x312A90")]
	public static extern int CSharp_AkVertex_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x6000F64")]
	[Address(RVA = "0x312B40", Offset = "0x312B40", VA = "0x312B40")]
	public static extern void CSharp_AkVertex_Clone(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F65")]
	[Address(RVA = "0x312C08", Offset = "0x312C08", VA = "0x312C08")]
	public static extern void CSharp_delete_AkVertex(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F66")]
	[Address(RVA = "0x312CC8", Offset = "0x312CC8", VA = "0x312CC8")]
	public static extern IntPtr CSharp_new_AkTriangle__SWIG_0();

	[PreserveSig]
	[Token(Token = "0x6000F67")]
	[Address(RVA = "0x312D78", Offset = "0x312D78", VA = "0x312D78")]
	public static extern IntPtr CSharp_new_AkTriangle__SWIG_1(ushort jarg1, ushort jarg2, ushort jarg3, ushort jarg4);

	[PreserveSig]
	[Token(Token = "0x6000F68")]
	[Address(RVA = "0x312E4C", Offset = "0x312E4C", VA = "0x312E4C")]
	public static extern void CSharp_AkTriangle_point0_set(IntPtr jarg1, ushort jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F69")]
	[Address(RVA = "0x312F14", Offset = "0x312F14", VA = "0x312F14")]
	public static extern ushort CSharp_AkTriangle_point0_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F6A")]
	[Address(RVA = "0x312FD4", Offset = "0x312FD4", VA = "0x312FD4")]
	public static extern void CSharp_AkTriangle_point1_set(IntPtr jarg1, ushort jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F6B")]
	[Address(RVA = "0x31309C", Offset = "0x31309C", VA = "0x31309C")]
	public static extern ushort CSharp_AkTriangle_point1_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F6C")]
	[Address(RVA = "0x31315C", Offset = "0x31315C", VA = "0x31315C")]
	public static extern void CSharp_AkTriangle_point2_set(IntPtr jarg1, ushort jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F6D")]
	[Address(RVA = "0x313224", Offset = "0x313224", VA = "0x313224")]
	public static extern ushort CSharp_AkTriangle_point2_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F6E")]
	[Address(RVA = "0x3132E4", Offset = "0x3132E4", VA = "0x3132E4")]
	public static extern void CSharp_AkTriangle_surface_set(IntPtr jarg1, ushort jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F6F")]
	[Address(RVA = "0x3133AC", Offset = "0x3133AC", VA = "0x3133AC")]
	public static extern ushort CSharp_AkTriangle_surface_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F70")]
	[Address(RVA = "0x31346C", Offset = "0x31346C", VA = "0x31346C")]
	public static extern void CSharp_AkTriangle_Clear(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F71")]
	[Address(RVA = "0x31352C", Offset = "0x31352C", VA = "0x31352C")]
	public static extern int CSharp_AkTriangle_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x6000F72")]
	[Address(RVA = "0x3135DC", Offset = "0x3135DC", VA = "0x3135DC")]
	public static extern void CSharp_AkTriangle_Clone(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F73")]
	[Address(RVA = "0x3136A4", Offset = "0x3136A4", VA = "0x3136A4")]
	public static extern void CSharp_delete_AkTriangle(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F74")]
	[Address(RVA = "0x313764", Offset = "0x313764", VA = "0x313764")]
	public static extern IntPtr CSharp_new_AkAcousticSurface();

	[PreserveSig]
	[Token(Token = "0x6000F75")]
	[Address(RVA = "0x313814", Offset = "0x313814", VA = "0x313814")]
	public static extern void CSharp_AkAcousticSurface_textureID_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F76")]
	[Address(RVA = "0x3138DC", Offset = "0x3138DC", VA = "0x3138DC")]
	public static extern uint CSharp_AkAcousticSurface_textureID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F77")]
	[Address(RVA = "0x31399C", Offset = "0x31399C", VA = "0x31399C")]
	public static extern void CSharp_AkAcousticSurface_reflectorChannelMask_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F78")]
	[Address(RVA = "0x313A64", Offset = "0x313A64", VA = "0x313A64")]
	public static extern uint CSharp_AkAcousticSurface_reflectorChannelMask_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F79")]
	[Address(RVA = "0x313B24", Offset = "0x313B24", VA = "0x313B24")]
	public static extern void CSharp_AkAcousticSurface_strName_set(IntPtr jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F7A")]
	[Address(RVA = "0x313C08", Offset = "0x313C08", VA = "0x313C08")]
	public static extern IntPtr CSharp_AkAcousticSurface_strName_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F7B")]
	[Address(RVA = "0x313CC8", Offset = "0x313CC8", VA = "0x313CC8")]
	public static extern void CSharp_AkAcousticSurface_Clear(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F7C")]
	[Address(RVA = "0x313D88", Offset = "0x313D88", VA = "0x313D88")]
	public static extern void CSharp_AkAcousticSurface_DeleteName(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F7D")]
	[Address(RVA = "0x313E48", Offset = "0x313E48", VA = "0x313E48")]
	public static extern int CSharp_AkAcousticSurface_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x6000F7E")]
	[Address(RVA = "0x313EF8", Offset = "0x313EF8", VA = "0x313EF8")]
	public static extern void CSharp_AkAcousticSurface_Clone(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F7F")]
	[Address(RVA = "0x313FC0", Offset = "0x313FC0", VA = "0x313FC0")]
	public static extern void CSharp_delete_AkAcousticSurface(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F80")]
	[Address(RVA = "0x2D5F0C", Offset = "0x2D5F0C", VA = "0x2D5F0C")]
	public static extern void CSharp_AkReflectionPathInfo_imageSource_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F81")]
	[Address(RVA = "0x2D60A8", Offset = "0x2D60A8", VA = "0x2D60A8")]
	public static extern IntPtr CSharp_AkReflectionPathInfo_imageSource_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F82")]
	[Address(RVA = "0x2D61F4", Offset = "0x2D61F4", VA = "0x2D61F4")]
	public static extern void CSharp_AkReflectionPathInfo_numPathPoints_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F83")]
	[Address(RVA = "0x2D6340", Offset = "0x2D6340", VA = "0x2D6340")]
	public static extern uint CSharp_AkReflectionPathInfo_numPathPoints_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F84")]
	[Address(RVA = "0x2D648C", Offset = "0x2D648C", VA = "0x2D648C")]
	public static extern void CSharp_AkReflectionPathInfo_numReflections_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F85")]
	[Address(RVA = "0x2D65D8", Offset = "0x2D65D8", VA = "0x2D65D8")]
	public static extern uint CSharp_AkReflectionPathInfo_numReflections_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F86")]
	[Address(RVA = "0x2D6738", Offset = "0x2D6738", VA = "0x2D6738")]
	public static extern void CSharp_AkReflectionPathInfo_occlusionPoint_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F87")]
	[Address(RVA = "0x2D68D4", Offset = "0x2D68D4", VA = "0x2D68D4")]
	public static extern IntPtr CSharp_AkReflectionPathInfo_occlusionPoint_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F88")]
	[Address(RVA = "0x2D6A20", Offset = "0x2D6A20", VA = "0x2D6A20")]
	public static extern void CSharp_AkReflectionPathInfo_level_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F89")]
	[Address(RVA = "0x2D6B6C", Offset = "0x2D6B6C", VA = "0x2D6B6C")]
	public static extern float CSharp_AkReflectionPathInfo_level_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F8A")]
	[Address(RVA = "0x2D6CB8", Offset = "0x2D6CB8", VA = "0x2D6CB8")]
	public static extern void CSharp_AkReflectionPathInfo_isOccluded_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F8B")]
	[Address(RVA = "0x2D6E04", Offset = "0x2D6E04", VA = "0x2D6E04")]
	public static extern bool CSharp_AkReflectionPathInfo_isOccluded_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F8C")]
	[Address(RVA = "0x2D6F44", Offset = "0x2D6F44", VA = "0x2D6F44")]
	public static extern int CSharp_AkReflectionPathInfo_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x6000F8D")]
	[Address(RVA = "0x2D70D0", Offset = "0x2D70D0", VA = "0x2D70D0")]
	public static extern IntPtr CSharp_AkReflectionPathInfo_GetPathPoint(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F8E")]
	[Address(RVA = "0x2D7254", Offset = "0x2D7254", VA = "0x2D7254")]
	public static extern IntPtr CSharp_AkReflectionPathInfo_GetAcousticSurface(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F8F")]
	[Address(RVA = "0x2D73A8", Offset = "0x2D73A8", VA = "0x2D73A8")]
	public static extern float CSharp_AkReflectionPathInfo_GetDiffraction(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F90")]
	[Address(RVA = "0x2D7544", Offset = "0x2D7544", VA = "0x2D7544")]
	public static extern void CSharp_AkReflectionPathInfo_Clone(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F91")]
	[Address(RVA = "0x2D5AF8", Offset = "0x2D5AF8", VA = "0x2D5AF8")]
	public static extern IntPtr CSharp_new_AkReflectionPathInfo();

	[PreserveSig]
	[Token(Token = "0x6000F92")]
	[Address(RVA = "0x2D5DAC", Offset = "0x2D5DAC", VA = "0x2D5DAC")]
	public static extern void CSharp_delete_AkReflectionPathInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F93")]
	[Address(RVA = "0x314080", Offset = "0x314080", VA = "0x314080")]
	public static extern void CSharp_AkDiffractionPathInfo_virtualPos_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F94")]
	[Address(RVA = "0x314148", Offset = "0x314148", VA = "0x314148")]
	public static extern IntPtr CSharp_AkDiffractionPathInfo_virtualPos_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F95")]
	[Address(RVA = "0x314208", Offset = "0x314208", VA = "0x314208")]
	public static extern void CSharp_AkDiffractionPathInfo_nodeCount_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F96")]
	[Address(RVA = "0x3142D0", Offset = "0x3142D0", VA = "0x3142D0")]
	public static extern uint CSharp_AkDiffractionPathInfo_nodeCount_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F97")]
	[Address(RVA = "0x314390", Offset = "0x314390", VA = "0x314390")]
	public static extern void CSharp_AkDiffractionPathInfo_diffraction_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F98")]
	[Address(RVA = "0x314458", Offset = "0x314458", VA = "0x314458")]
	public static extern float CSharp_AkDiffractionPathInfo_diffraction_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F99")]
	[Address(RVA = "0x314518", Offset = "0x314518", VA = "0x314518")]
	public static extern void CSharp_AkDiffractionPathInfo_totLength_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F9A")]
	[Address(RVA = "0x3145E0", Offset = "0x3145E0", VA = "0x3145E0")]
	public static extern float CSharp_AkDiffractionPathInfo_totLength_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F9B")]
	[Address(RVA = "0x3146A0", Offset = "0x3146A0", VA = "0x3146A0")]
	public static extern void CSharp_AkDiffractionPathInfo_obstructionValue_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F9C")]
	[Address(RVA = "0x314768", Offset = "0x314768", VA = "0x314768")]
	public static extern float CSharp_AkDiffractionPathInfo_obstructionValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F9D")]
	[Address(RVA = "0x314828", Offset = "0x314828", VA = "0x314828")]
	public static extern int CSharp_AkDiffractionPathInfo_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x6000F9E")]
	[Address(RVA = "0x3148D8", Offset = "0x3148D8", VA = "0x3148D8")]
	public static extern IntPtr CSharp_AkDiffractionPathInfo_GetNodes(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F9F")]
	[Address(RVA = "0x3149A0", Offset = "0x3149A0", VA = "0x3149A0")]
	public static extern float CSharp_AkDiffractionPathInfo_GetAngles(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000FA0")]
	[Address(RVA = "0x314A68", Offset = "0x314A68", VA = "0x314A68")]
	public static extern void CSharp_AkDiffractionPathInfo_Clone(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000FA1")]
	[Address(RVA = "0x314B30", Offset = "0x314B30", VA = "0x314B30")]
	public static extern IntPtr CSharp_new_AkDiffractionPathInfo();

	[PreserveSig]
	[Token(Token = "0x6000FA2")]
	[Address(RVA = "0x314BE0", Offset = "0x314BE0", VA = "0x314BE0")]
	public static extern void CSharp_delete_AkDiffractionPathInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FA3")]
	[Address(RVA = "0x2D38A8", Offset = "0x2D38A8", VA = "0x2D38A8")]
	public static extern void CSharp_AkPropagationPathInfo_nodePoint_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000FA4")]
	[Address(RVA = "0x2D3A44", Offset = "0x2D3A44", VA = "0x2D3A44")]
	public static extern IntPtr CSharp_AkPropagationPathInfo_nodePoint_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FA5")]
	[Address(RVA = "0x2D3B90", Offset = "0x2D3B90", VA = "0x2D3B90")]
	public static extern void CSharp_AkPropagationPathInfo_numNodes_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000FA6")]
	[Address(RVA = "0x2D3CDC", Offset = "0x2D3CDC", VA = "0x2D3CDC")]
	public static extern uint CSharp_AkPropagationPathInfo_numNodes_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FA7")]
	[Address(RVA = "0x2D3E28", Offset = "0x2D3E28", VA = "0x2D3E28")]
	public static extern void CSharp_AkPropagationPathInfo_length_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000FA8")]
	[Address(RVA = "0x2D3F74", Offset = "0x2D3F74", VA = "0x2D3F74")]
	public static extern float CSharp_AkPropagationPathInfo_length_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FA9")]
	[Address(RVA = "0x2D40C0", Offset = "0x2D40C0", VA = "0x2D40C0")]
	public static extern void CSharp_AkPropagationPathInfo_gain_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000FAA")]
	[Address(RVA = "0x2D420C", Offset = "0x2D420C", VA = "0x2D420C")]
	public static extern float CSharp_AkPropagationPathInfo_gain_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FAB")]
	[Address(RVA = "0x2D4358", Offset = "0x2D4358", VA = "0x2D4358")]
	public static extern void CSharp_AkPropagationPathInfo_dryDiffraction_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000FAC")]
	[Address(RVA = "0x2D44A4", Offset = "0x2D44A4", VA = "0x2D44A4")]
	public static extern float CSharp_AkPropagationPathInfo_dryDiffraction_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FAD")]
	[Address(RVA = "0x2D45F0", Offset = "0x2D45F0", VA = "0x2D45F0")]
	public static extern void CSharp_AkPropagationPathInfo_wetDiffraction_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000FAE")]
	[Address(RVA = "0x2D473C", Offset = "0x2D473C", VA = "0x2D473C")]
	public static extern float CSharp_AkPropagationPathInfo_wetDiffraction_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FAF")]
	[Address(RVA = "0x2D4874", Offset = "0x2D4874", VA = "0x2D4874")]
	public static extern int CSharp_AkPropagationPathInfo_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x6000FB0")]
	[Address(RVA = "0x2D4A00", Offset = "0x2D4A00", VA = "0x2D4A00")]
	public static extern IntPtr CSharp_AkPropagationPathInfo_GetNodePoint(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000FB1")]
	[Address(RVA = "0x2D4B9C", Offset = "0x2D4B9C", VA = "0x2D4B9C")]
	public static extern void CSharp_AkPropagationPathInfo_Clone(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000FB2")]
	[Address(RVA = "0x2D3494", Offset = "0x2D3494", VA = "0x2D3494")]
	public static extern IntPtr CSharp_new_AkPropagationPathInfo();

	[PreserveSig]
	[Token(Token = "0x6000FB3")]
	[Address(RVA = "0x2D3748", Offset = "0x2D3748", VA = "0x2D3748")]
	public static extern void CSharp_delete_AkPropagationPathInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FB4")]
	[Address(RVA = "0x2D8F20", Offset = "0x2D8F20", VA = "0x2D8F20")]
	public static extern IntPtr CSharp_new_AkRoomParams();

	[PreserveSig]
	[Token(Token = "0x6000FB5")]
	[Address(RVA = "0x2D9334", Offset = "0x2D9334", VA = "0x2D9334")]
	public static extern void CSharp_AkRoomParams_Up_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000FB6")]
	[Address(RVA = "0x2D93FC", Offset = "0x2D93FC", VA = "0x2D93FC")]
	public static extern IntPtr CSharp_AkRoomParams_Up_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FB7")]
	[Address(RVA = "0x2D955C", Offset = "0x2D955C", VA = "0x2D955C")]
	public static extern void CSharp_AkRoomParams_Front_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000FB8")]
	[Address(RVA = "0x2D9624", Offset = "0x2D9624", VA = "0x2D9624")]
	public static extern IntPtr CSharp_AkRoomParams_Front_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FB9")]
	[Address(RVA = "0x2D96E4", Offset = "0x2D96E4", VA = "0x2D96E4")]
	public static extern void CSharp_AkRoomParams_ReverbAuxBus_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000FBA")]
	[Address(RVA = "0x2D9830", Offset = "0x2D9830", VA = "0x2D9830")]
	public static extern uint CSharp_AkRoomParams_ReverbAuxBus_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FBB")]
	[Address(RVA = "0x2D98F0", Offset = "0x2D98F0", VA = "0x2D98F0")]
	public static extern void CSharp_AkRoomParams_ReverbLevel_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000FBC")]
	[Address(RVA = "0x2D9A3C", Offset = "0x2D9A3C", VA = "0x2D9A3C")]
	public static extern float CSharp_AkRoomParams_ReverbLevel_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FBD")]
	[Address(RVA = "0x2D9AFC", Offset = "0x2D9AFC", VA = "0x2D9AFC")]
	public static extern void CSharp_AkRoomParams_WallOcclusion_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000FBE")]
	[Address(RVA = "0x2D9C48", Offset = "0x2D9C48", VA = "0x2D9C48")]
	public static extern float CSharp_AkRoomParams_WallOcclusion_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FBF")]
	[Address(RVA = "0x2D9D08", Offset = "0x2D9D08", VA = "0x2D9D08")]
	public static extern void CSharp_AkRoomParams_RoomGameObj_AuxSendLevelToSelf_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000FC0")]
	[Address(RVA = "0x2D9E54", Offset = "0x2D9E54", VA = "0x2D9E54")]
	public static extern float CSharp_AkRoomParams_RoomGameObj_AuxSendLevelToSelf_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FC1")]
	[Address(RVA = "0x2D9F14", Offset = "0x2D9F14", VA = "0x2D9F14")]
	public static extern void CSharp_AkRoomParams_RoomGameObj_KeepRegistered_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6000FC2")]
	[Address(RVA = "0x2DA060", Offset = "0x2DA060", VA = "0x2DA060")]
	public static extern bool CSharp_AkRoomParams_RoomGameObj_KeepRegistered_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FC3")]
	[Address(RVA = "0x2D91D4", Offset = "0x2D91D4", VA = "0x2D91D4")]
	public static extern void CSharp_delete_AkRoomParams(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FC4")]
	[Address(RVA = "0x2FACE0", Offset = "0x2FACE0", VA = "0x2FACE0")]
	public static extern int CSharp_GetPoolID();

	[PreserveSig]
	[Token(Token = "0x6000FC5")]
	[Address(RVA = "0x2FAE74", Offset = "0x2FAE74", VA = "0x2FAE74")]
	public static extern int CSharp_RegisterEmitter(ulong jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000FC6")]
	[Address(RVA = "0x2FB008", Offset = "0x2FB008", VA = "0x2FB008")]
	public static extern int CSharp_UnregisterEmitter(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FC7")]
	[Address(RVA = "0x2FB1C4", Offset = "0x2FB1C4", VA = "0x2FB1C4")]
	public static extern int CSharp_SetEmitterAuxSendValues(ulong jarg1, IntPtr jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000FC8")]
	[Address(RVA = "0x2FB398", Offset = "0x2FB398", VA = "0x2FB398")]
	public static extern int CSharp_SetImageSource__SWIG_0(uint jarg1, IntPtr jarg2, uint jarg3, ulong jarg4, ulong jarg5);

	[PreserveSig]
	[Token(Token = "0x6000FC9")]
	[Address(RVA = "0x2FB540", Offset = "0x2FB540", VA = "0x2FB540")]
	public static extern int CSharp_SetImageSource__SWIG_1(uint jarg1, IntPtr jarg2, uint jarg3, ulong jarg4);

	[PreserveSig]
	[Token(Token = "0x6000FCA")]
	[Address(RVA = "0x2FB6F4", Offset = "0x2FB6F4", VA = "0x2FB6F4")]
	public static extern int CSharp_RemoveImageSource__SWIG_0(uint jarg1, uint jarg2, ulong jarg3);

	[PreserveSig]
	[Token(Token = "0x6000FCB")]
	[Address(RVA = "0x2FB84C", Offset = "0x2FB84C", VA = "0x2FB84C")]
	public static extern int CSharp_RemoveImageSource__SWIG_1(uint jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000FCC")]
	[Address(RVA = "0x2FB9A4", Offset = "0x2FB9A4", VA = "0x2FB9A4")]
	public static extern int CSharp_RemoveGeometry(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FCD")]
	[Address(RVA = "0x2FBBA0", Offset = "0x2FBBA0", VA = "0x2FBBA0")]
	public static extern int CSharp_QueryReflectionPaths(ulong jarg1, IntPtr jarg2, IntPtr jarg3, IntPtr jarg4, out uint jarg5);

	[PreserveSig]
	[Token(Token = "0x6000FCE")]
	[Address(RVA = "0x2FBC90", Offset = "0x2FBC90", VA = "0x2FBC90")]
	public static extern int CSharp_RemoveRoom(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FCF")]
	[Address(RVA = "0x2FBDE8", Offset = "0x2FBDE8", VA = "0x2FBDE8")]
	public static extern int CSharp_RemovePortal(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FD0")]
	[Address(RVA = "0x2FBF88", Offset = "0x2FBF88", VA = "0x2FBF88")]
	public static extern int CSharp_SetGameObjectInRoom(ulong jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x6000FD1")]
	[Address(RVA = "0x2FC140", Offset = "0x2FC140", VA = "0x2FC140")]
	public static extern int CSharp_SetEmitterObstructionAndOcclusion(ulong jarg1, float jarg2, float jarg3);

	[PreserveSig]
	[Token(Token = "0x6000FD2")]
	[Address(RVA = "0x2FC218", Offset = "0x2FC218", VA = "0x2FC218")]
	public static extern int CSharp_SetPortalObstructionAndOcclusion(ulong jarg1, float jarg2, float jarg3);

	[PreserveSig]
	[Token(Token = "0x6000FD3")]
	[Address(RVA = "0x2C9600", Offset = "0x2C9600", VA = "0x2C9600")]
	public static extern void CSharp_AkPlatformInitSettings_threadLEngine_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000FD4")]
	[Address(RVA = "0x2C979C", Offset = "0x2C979C", VA = "0x2C979C")]
	public static extern IntPtr CSharp_AkPlatformInitSettings_threadLEngine_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FD5")]
	[Address(RVA = "0x2C98FC", Offset = "0x2C98FC", VA = "0x2C98FC")]
	public static extern void CSharp_AkPlatformInitSettings_threadBankManager_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000FD6")]
	[Address(RVA = "0x2C9A98", Offset = "0x2C9A98", VA = "0x2C9A98")]
	public static extern IntPtr CSharp_AkPlatformInitSettings_threadBankManager_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FD7")]
	[Address(RVA = "0x2C9BF8", Offset = "0x2C9BF8", VA = "0x2C9BF8")]
	public static extern void CSharp_AkPlatformInitSettings_threadMonitor_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000FD8")]
	[Address(RVA = "0x2C9D94", Offset = "0x2C9D94", VA = "0x2C9D94")]
	public static extern IntPtr CSharp_AkPlatformInitSettings_threadMonitor_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FD9")]
	[Address(RVA = "0x2C9EE0", Offset = "0x2C9EE0", VA = "0x2C9EE0")]
	public static extern void CSharp_AkPlatformInitSettings_fLEngineDefaultPoolRatioThreshold_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000FDA")]
	[Address(RVA = "0x2CA02C", Offset = "0x2CA02C", VA = "0x2CA02C")]
	public static extern float CSharp_AkPlatformInitSettings_fLEngineDefaultPoolRatioThreshold_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FDB")]
	[Address(RVA = "0x2CA178", Offset = "0x2CA178", VA = "0x2CA178")]
	public static extern void CSharp_AkPlatformInitSettings_uLEngineDefaultPoolSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000FDC")]
	[Address(RVA = "0x2CA2C4", Offset = "0x2CA2C4", VA = "0x2CA2C4")]
	public static extern uint CSharp_AkPlatformInitSettings_uLEngineDefaultPoolSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FDD")]
	[Address(RVA = "0x2CA410", Offset = "0x2CA410", VA = "0x2CA410")]
	public static extern void CSharp_AkPlatformInitSettings_uSampleRate_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000FDE")]
	[Address(RVA = "0x2CA55C", Offset = "0x2CA55C", VA = "0x2CA55C")]
	public static extern uint CSharp_AkPlatformInitSettings_uSampleRate_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FDF")]
	[Address(RVA = "0x2CA6A8", Offset = "0x2CA6A8", VA = "0x2CA6A8")]
	public static extern void CSharp_AkPlatformInitSettings_uNumRefillsInVoice_set(IntPtr jarg1, ushort jarg2);

	[PreserveSig]
	[Token(Token = "0x6000FE0")]
	[Address(RVA = "0x2CA7F4", Offset = "0x2CA7F4", VA = "0x2CA7F4")]
	public static extern ushort CSharp_AkPlatformInitSettings_uNumRefillsInVoice_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FE1")]
	[Address(RVA = "0x2CA940", Offset = "0x2CA940", VA = "0x2CA940")]
	public static extern void CSharp_AkPlatformInitSettings_uChannelMask_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000FE2")]
	[Address(RVA = "0x2CAA8C", Offset = "0x2CAA8C", VA = "0x2CAA8C")]
	public static extern uint CSharp_AkPlatformInitSettings_uChannelMask_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FE3")]
	[Address(RVA = "0x2CABD8", Offset = "0x2CABD8", VA = "0x2CABD8")]
	public static extern void CSharp_AkPlatformInitSettings_bRoundFrameSizeToHWSize_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6000FE4")]
	[Address(RVA = "0x2CAD24", Offset = "0x2CAD24", VA = "0x2CAD24")]
	public static extern bool CSharp_AkPlatformInitSettings_bRoundFrameSizeToHWSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FE5")]
	[Address(RVA = "0x2C91EC", Offset = "0x2C91EC", VA = "0x2C91EC")]
	public static extern IntPtr CSharp_new_AkPlatformInitSettings();

	[PreserveSig]
	[Token(Token = "0x6000FE6")]
	[Address(RVA = "0x2C94A0", Offset = "0x2C94A0", VA = "0x2C94A0")]
	public static extern void CSharp_delete_AkPlatformInitSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FE7")]
	[Address(RVA = "0x2FC3D4", Offset = "0x2FC3D4", VA = "0x2FC3D4")]
	public static extern int CSharp_GetFastPathSettings(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000FE8")]
	[Address(RVA = "0x314CA0", Offset = "0x314CA0", VA = "0x314CA0")]
	public static extern void CSharp_AkStreamMgrSettings_uMemorySize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000FE9")]
	[Address(RVA = "0x314D68", Offset = "0x314D68", VA = "0x314D68")]
	public static extern uint CSharp_AkStreamMgrSettings_uMemorySize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FEA")]
	[Address(RVA = "0x314E28", Offset = "0x314E28", VA = "0x314E28")]
	public static extern IntPtr CSharp_new_AkStreamMgrSettings();

	[PreserveSig]
	[Token(Token = "0x6000FEB")]
	[Address(RVA = "0x314ED8", Offset = "0x314ED8", VA = "0x314ED8")]
	public static extern void CSharp_delete_AkStreamMgrSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FEC")]
	[Address(RVA = "0x314F98", Offset = "0x314F98", VA = "0x314F98")]
	public static extern void CSharp_AkDeviceSettings_pIOMemory_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000FED")]
	[Address(RVA = "0x315060", Offset = "0x315060", VA = "0x315060")]
	public static extern IntPtr CSharp_AkDeviceSettings_pIOMemory_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FEE")]
	[Address(RVA = "0x315120", Offset = "0x315120", VA = "0x315120")]
	public static extern void CSharp_AkDeviceSettings_uIOMemorySize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000FEF")]
	[Address(RVA = "0x3151E8", Offset = "0x3151E8", VA = "0x3151E8")]
	public static extern uint CSharp_AkDeviceSettings_uIOMemorySize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FF0")]
	[Address(RVA = "0x3152A8", Offset = "0x3152A8", VA = "0x3152A8")]
	public static extern void CSharp_AkDeviceSettings_uIOMemoryAlignment_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000FF1")]
	[Address(RVA = "0x315370", Offset = "0x315370", VA = "0x315370")]
	public static extern uint CSharp_AkDeviceSettings_uIOMemoryAlignment_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FF2")]
	[Address(RVA = "0x315430", Offset = "0x315430", VA = "0x315430")]
	public static extern void CSharp_AkDeviceSettings_ePoolAttributes_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000FF3")]
	[Address(RVA = "0x3154F8", Offset = "0x3154F8", VA = "0x3154F8")]
	public static extern int CSharp_AkDeviceSettings_ePoolAttributes_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FF4")]
	[Address(RVA = "0x3155B8", Offset = "0x3155B8", VA = "0x3155B8")]
	public static extern void CSharp_AkDeviceSettings_uGranularity_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000FF5")]
	[Address(RVA = "0x315680", Offset = "0x315680", VA = "0x315680")]
	public static extern uint CSharp_AkDeviceSettings_uGranularity_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FF6")]
	[Address(RVA = "0x315740", Offset = "0x315740", VA = "0x315740")]
	public static extern void CSharp_AkDeviceSettings_uSchedulerTypeFlags_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000FF7")]
	[Address(RVA = "0x315808", Offset = "0x315808", VA = "0x315808")]
	public static extern uint CSharp_AkDeviceSettings_uSchedulerTypeFlags_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FF8")]
	[Address(RVA = "0x3158C8", Offset = "0x3158C8", VA = "0x3158C8")]
	public static extern void CSharp_AkDeviceSettings_threadProperties_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000FF9")]
	[Address(RVA = "0x315990", Offset = "0x315990", VA = "0x315990")]
	public static extern IntPtr CSharp_AkDeviceSettings_threadProperties_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FFA")]
	[Address(RVA = "0x315A50", Offset = "0x315A50", VA = "0x315A50")]
	public static extern void CSharp_AkDeviceSettings_fTargetAutoStmBufferLength_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000FFB")]
	[Address(RVA = "0x315B18", Offset = "0x315B18", VA = "0x315B18")]
	public static extern float CSharp_AkDeviceSettings_fTargetAutoStmBufferLength_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FFC")]
	[Address(RVA = "0x315BD8", Offset = "0x315BD8", VA = "0x315BD8")]
	public static extern void CSharp_AkDeviceSettings_uMaxConcurrentIO_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000FFD")]
	[Address(RVA = "0x315CA0", Offset = "0x315CA0", VA = "0x315CA0")]
	public static extern uint CSharp_AkDeviceSettings_uMaxConcurrentIO_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000FFE")]
	[Address(RVA = "0x315D60", Offset = "0x315D60", VA = "0x315D60")]
	public static extern void CSharp_AkDeviceSettings_bUseStreamCache_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6000FFF")]
	[Address(RVA = "0x315E28", Offset = "0x315E28", VA = "0x315E28")]
	public static extern bool CSharp_AkDeviceSettings_bUseStreamCache_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001000")]
	[Address(RVA = "0x315EF0", Offset = "0x315EF0", VA = "0x315EF0")]
	public static extern void CSharp_AkDeviceSettings_uMaxCachePinnedBytes_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001001")]
	[Address(RVA = "0x315FB8", Offset = "0x315FB8", VA = "0x315FB8")]
	public static extern uint CSharp_AkDeviceSettings_uMaxCachePinnedBytes_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001002")]
	[Address(RVA = "0x316078", Offset = "0x316078", VA = "0x316078")]
	public static extern IntPtr CSharp_new_AkDeviceSettings();

	[PreserveSig]
	[Token(Token = "0x6001003")]
	[Address(RVA = "0x316128", Offset = "0x316128", VA = "0x316128")]
	public static extern void CSharp_delete_AkDeviceSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001004")]
	[Address(RVA = "0x3161E8", Offset = "0x3161E8", VA = "0x3161E8")]
	public static extern void CSharp_AkThreadProperties_nPriority_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6001005")]
	[Address(RVA = "0x3162B0", Offset = "0x3162B0", VA = "0x3162B0")]
	public static extern int CSharp_AkThreadProperties_nPriority_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001006")]
	[Address(RVA = "0x316370", Offset = "0x316370", VA = "0x316370")]
	public static extern void CSharp_AkThreadProperties_uStackSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001007")]
	[Address(RVA = "0x316438", Offset = "0x316438", VA = "0x316438")]
	public static extern uint CSharp_AkThreadProperties_uStackSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001008")]
	[Address(RVA = "0x3164F8", Offset = "0x3164F8", VA = "0x3164F8")]
	public static extern void CSharp_AkThreadProperties_uSchedPolicy_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6001009")]
	[Address(RVA = "0x3165C0", Offset = "0x3165C0", VA = "0x3165C0")]
	public static extern int CSharp_AkThreadProperties_uSchedPolicy_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600100A")]
	[Address(RVA = "0x316680", Offset = "0x316680", VA = "0x316680")]
	public static extern void CSharp_AkThreadProperties_dwAffinityMask_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600100B")]
	[Address(RVA = "0x316748", Offset = "0x316748", VA = "0x316748")]
	public static extern uint CSharp_AkThreadProperties_dwAffinityMask_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600100C")]
	[Address(RVA = "0x316808", Offset = "0x316808", VA = "0x316808")]
	public static extern IntPtr CSharp_new_AkThreadProperties();

	[PreserveSig]
	[Token(Token = "0x600100D")]
	[Address(RVA = "0x3168B8", Offset = "0x3168B8", VA = "0x3168B8")]
	public static extern void CSharp_delete_AkThreadProperties(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600100E")]
	[Address(RVA = "0x2FC51C", Offset = "0x2FC51C", VA = "0x2FC51C")]
	public static extern void CSharp_SetErrorLogger__SWIG_0(AkLogger.ErrorLoggerInteropDelegate jarg1);

	[PreserveSig]
	[Token(Token = "0x600100F")]
	[Address(RVA = "0x2FC660", Offset = "0x2FC660", VA = "0x2FC660")]
	public static extern void CSharp_SetErrorLogger__SWIG_1();

	[PreserveSig]
	[Token(Token = "0x6001010")]
	[Address(RVA = "0x2FC798", Offset = "0x2FC798", VA = "0x2FC798")]
	public static extern void CSharp_SetAudioInputCallbacks(AkAudioInputManager.AudioSamplesInteropDelegate jarg1, AkAudioInputManager.AudioFormatInteropDelegate jarg2);

	[PreserveSig]
	[Token(Token = "0x6001011")]
	[Address(RVA = "0x2C893C", Offset = "0x2C893C", VA = "0x2C893C")]
	public static extern void CSharp_AkPathParams_listenerPos_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001012")]
	[Address(RVA = "0x2C8AD8", Offset = "0x2C8AD8", VA = "0x2C8AD8")]
	public static extern IntPtr CSharp_AkPathParams_listenerPos_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001013")]
	[Address(RVA = "0x2C8C38", Offset = "0x2C8C38", VA = "0x2C8C38")]
	public static extern void CSharp_AkPathParams_emitterPos_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001014")]
	[Address(RVA = "0x2C8DD4", Offset = "0x2C8DD4", VA = "0x2C8DD4")]
	public static extern IntPtr CSharp_AkPathParams_emitterPos_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001015")]
	[Address(RVA = "0x2C8F20", Offset = "0x2C8F20", VA = "0x2C8F20")]
	public static extern void CSharp_AkPathParams_numValidPaths_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001016")]
	[Address(RVA = "0x2C906C", Offset = "0x2C906C", VA = "0x2C906C")]
	public static extern uint CSharp_AkPathParams_numValidPaths_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001017")]
	[Address(RVA = "0x2C8528", Offset = "0x2C8528", VA = "0x2C8528")]
	public static extern IntPtr CSharp_new_AkPathParams();

	[PreserveSig]
	[Token(Token = "0x6001018")]
	[Address(RVA = "0x2C87DC", Offset = "0x2C87DC", VA = "0x2C87DC")]
	public static extern void CSharp_delete_AkPathParams(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001019")]
	[Address(RVA = "0x316978", Offset = "0x316978", VA = "0x316978")]
	public static extern IntPtr CSharp_new_AkUnityPlatformSpecificSettings();

	[PreserveSig]
	[Token(Token = "0x600101A")]
	[Address(RVA = "0x316A28", Offset = "0x316A28", VA = "0x316A28")]
	public static extern void CSharp_delete_AkUnityPlatformSpecificSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600101B")]
	[Address(RVA = "0x316AE8", Offset = "0x316AE8", VA = "0x316AE8")]
	public static extern IntPtr CSharp_new_AkCommunicationSettings();

	[PreserveSig]
	[Token(Token = "0x600101C")]
	[Address(RVA = "0x316B98", Offset = "0x316B98", VA = "0x316B98")]
	public static extern void CSharp_AkCommunicationSettings_uPoolSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600101D")]
	[Address(RVA = "0x316C60", Offset = "0x316C60", VA = "0x316C60")]
	public static extern uint CSharp_AkCommunicationSettings_uPoolSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600101E")]
	[Address(RVA = "0x316D20", Offset = "0x316D20", VA = "0x316D20")]
	public static extern void CSharp_AkCommunicationSettings_uDiscoveryBroadcastPort_set(IntPtr jarg1, ushort jarg2);

	[PreserveSig]
	[Token(Token = "0x600101F")]
	[Address(RVA = "0x316DE8", Offset = "0x316DE8", VA = "0x316DE8")]
	public static extern ushort CSharp_AkCommunicationSettings_uDiscoveryBroadcastPort_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001020")]
	[Address(RVA = "0x316EA8", Offset = "0x316EA8", VA = "0x316EA8")]
	public static extern void CSharp_AkCommunicationSettings_uCommandPort_set(IntPtr jarg1, ushort jarg2);

	[PreserveSig]
	[Token(Token = "0x6001021")]
	[Address(RVA = "0x316F70", Offset = "0x316F70", VA = "0x316F70")]
	public static extern ushort CSharp_AkCommunicationSettings_uCommandPort_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001022")]
	[Address(RVA = "0x317030", Offset = "0x317030", VA = "0x317030")]
	public static extern void CSharp_AkCommunicationSettings_uNotificationPort_set(IntPtr jarg1, ushort jarg2);

	[PreserveSig]
	[Token(Token = "0x6001023")]
	[Address(RVA = "0x3170F8", Offset = "0x3170F8", VA = "0x3170F8")]
	public static extern ushort CSharp_AkCommunicationSettings_uNotificationPort_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001024")]
	[Address(RVA = "0x3171B8", Offset = "0x3171B8", VA = "0x3171B8")]
	public static extern void CSharp_AkCommunicationSettings_bInitSystemLib_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6001025")]
	[Address(RVA = "0x317280", Offset = "0x317280", VA = "0x317280")]
	public static extern bool CSharp_AkCommunicationSettings_bInitSystemLib_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001026")]
	[Address(RVA = "0x317348", Offset = "0x317348", VA = "0x317348")]
	public static extern void CSharp_AkCommunicationSettings_szAppNetworkName_set(IntPtr jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x6001027")]
	[Address(RVA = "0x31742C", Offset = "0x31742C", VA = "0x31742C")]
	public static extern IntPtr CSharp_AkCommunicationSettings_szAppNetworkName_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001028")]
	[Address(RVA = "0x3174EC", Offset = "0x3174EC", VA = "0x3174EC")]
	public static extern void CSharp_delete_AkCommunicationSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001029")]
	[Address(RVA = "0x3175AC", Offset = "0x3175AC", VA = "0x3175AC")]
	public static extern IntPtr CSharp_new_AkInitializationSettings();

	[PreserveSig]
	[Token(Token = "0x600102A")]
	[Address(RVA = "0x31765C", Offset = "0x31765C", VA = "0x31765C")]
	public static extern void CSharp_AkInitializationSettings_memSettings_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x600102B")]
	[Address(RVA = "0x317724", Offset = "0x317724", VA = "0x317724")]
	public static extern IntPtr CSharp_AkInitializationSettings_memSettings_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600102C")]
	[Address(RVA = "0x3177E4", Offset = "0x3177E4", VA = "0x3177E4")]
	public static extern void CSharp_AkInitializationSettings_streamMgrSettings_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x600102D")]
	[Address(RVA = "0x3178AC", Offset = "0x3178AC", VA = "0x3178AC")]
	public static extern IntPtr CSharp_AkInitializationSettings_streamMgrSettings_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600102E")]
	[Address(RVA = "0x31796C", Offset = "0x31796C", VA = "0x31796C")]
	public static extern void CSharp_AkInitializationSettings_deviceSettings_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x600102F")]
	[Address(RVA = "0x317A34", Offset = "0x317A34", VA = "0x317A34")]
	public static extern IntPtr CSharp_AkInitializationSettings_deviceSettings_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001030")]
	[Address(RVA = "0x317AF4", Offset = "0x317AF4", VA = "0x317AF4")]
	public static extern void CSharp_AkInitializationSettings_initSettings_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001031")]
	[Address(RVA = "0x317BBC", Offset = "0x317BBC", VA = "0x317BBC")]
	public static extern IntPtr CSharp_AkInitializationSettings_initSettings_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001032")]
	[Address(RVA = "0x317C7C", Offset = "0x317C7C", VA = "0x317C7C")]
	public static extern void CSharp_AkInitializationSettings_platformSettings_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001033")]
	[Address(RVA = "0x317D44", Offset = "0x317D44", VA = "0x317D44")]
	public static extern IntPtr CSharp_AkInitializationSettings_platformSettings_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001034")]
	[Address(RVA = "0x317E04", Offset = "0x317E04", VA = "0x317E04")]
	public static extern void CSharp_AkInitializationSettings_musicSettings_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001035")]
	[Address(RVA = "0x317ECC", Offset = "0x317ECC", VA = "0x317ECC")]
	public static extern IntPtr CSharp_AkInitializationSettings_musicSettings_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001036")]
	[Address(RVA = "0x317F8C", Offset = "0x317F8C", VA = "0x317F8C")]
	public static extern void CSharp_AkInitializationSettings_preparePoolSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001037")]
	[Address(RVA = "0x318054", Offset = "0x318054", VA = "0x318054")]
	public static extern uint CSharp_AkInitializationSettings_preparePoolSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001038")]
	[Address(RVA = "0x318114", Offset = "0x318114", VA = "0x318114")]
	public static extern void CSharp_AkInitializationSettings_communicationSettings_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001039")]
	[Address(RVA = "0x3181DC", Offset = "0x3181DC", VA = "0x3181DC")]
	public static extern IntPtr CSharp_AkInitializationSettings_communicationSettings_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600103A")]
	[Address(RVA = "0x31829C", Offset = "0x31829C", VA = "0x31829C")]
	public static extern void CSharp_AkInitializationSettings_unityPlatformSpecificSettings_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x600103B")]
	[Address(RVA = "0x318364", Offset = "0x318364", VA = "0x318364")]
	public static extern IntPtr CSharp_AkInitializationSettings_unityPlatformSpecificSettings_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600103C")]
	[Address(RVA = "0x318424", Offset = "0x318424", VA = "0x318424")]
	public static extern void CSharp_delete_AkInitializationSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600103D")]
	[Address(RVA = "0x2FC910", Offset = "0x2FC910", VA = "0x2FC910")]
	public static extern int CSharp_Init(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600103E")]
	[Address(RVA = "0x2FCA64", Offset = "0x2FCA64", VA = "0x2FCA64")]
	public static extern int CSharp_InitSpatialAudio(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600103F")]
	[Address(RVA = "0x2FCBB8", Offset = "0x2FCBB8", VA = "0x2FCBB8")]
	public static extern int CSharp_InitCommunication(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001040")]
	[Address(RVA = "0x2FCCF0", Offset = "0x2FCCF0", VA = "0x2FCCF0")]
	public static extern void CSharp_Term();

	[PreserveSig]
	[Token(Token = "0x6001041")]
	[Address(RVA = "0x2FCE68", Offset = "0x2FCE68", VA = "0x2FCE68")]
	public static extern int CSharp_RegisterGameObjInternal(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6001042")]
	[Address(RVA = "0x2FCFF8", Offset = "0x2FCFF8", VA = "0x2FCFF8")]
	public static extern int CSharp_UnregisterGameObjInternal(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6001043")]
	[Address(RVA = "0x2FD190", Offset = "0x2FD190", VA = "0x2FD190")]
	public static extern int CSharp_RegisterGameObjInternal_WithName(ulong jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x6001044")]
	[Address(RVA = "0x2FD300", Offset = "0x2FD300", VA = "0x2FD300")]
	public static extern int CSharp_SetBasePath(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6001045")]
	[Address(RVA = "0x2FD464", Offset = "0x2FD464", VA = "0x2FD464")]
	public static extern int CSharp_SetCurrentLanguage(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6001046")]
	[Address(RVA = "0x2FD5E0", Offset = "0x2FD5E0", VA = "0x2FD5E0")]
	public static extern int CSharp_LoadFilePackage(string jarg1, out uint jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x6001047")]
	[Address(RVA = "0x2FD764", Offset = "0x2FD764", VA = "0x2FD764")]
	public static extern int CSharp_AddBasePath(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6001048")]
	[Address(RVA = "0x2FD8C8", Offset = "0x2FD8C8", VA = "0x2FD8C8")]
	public static extern int CSharp_SetGameName(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6001049")]
	[Address(RVA = "0x2FDA2C", Offset = "0x2FDA2C", VA = "0x2FDA2C")]
	public static extern int CSharp_SetDecodedBankPath(string jarg1);

	[PreserveSig]
	[Token(Token = "0x600104A")]
	[Address(RVA = "0x2FDBA8", Offset = "0x2FDBA8", VA = "0x2FDBA8")]
	public static extern int CSharp_LoadAndDecodeBank(string jarg1, bool jarg2, out uint jarg3);

	[PreserveSig]
	[Token(Token = "0x600104B")]
	[Address(RVA = "0x2FDD58", Offset = "0x2FDD58", VA = "0x2FDD58")]
	public static extern int CSharp_LoadAndDecodeBankFromMemory(IntPtr jarg1, uint jarg2, bool jarg3, string jarg4, bool jarg5, out uint jarg6);

	[PreserveSig]
	[Token(Token = "0x600104C")]
	[Address(RVA = "0x2FDF20", Offset = "0x2FDF20", VA = "0x2FDF20")]
	public static extern IntPtr CSharp_GetCurrentLanguage();

	[PreserveSig]
	[Token(Token = "0x600104D")]
	[Address(RVA = "0x2FE050", Offset = "0x2FE050", VA = "0x2FE050")]
	public static extern int CSharp_UnloadFilePackage(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x600104E")]
	[Address(RVA = "0x2FE188", Offset = "0x2FE188", VA = "0x2FE188")]
	public static extern int CSharp_UnloadAllFilePackages();

	[PreserveSig]
	[Token(Token = "0x600104F")]
	[Address(RVA = "0x2FE358", Offset = "0x2FE358", VA = "0x2FE358")]
	public static extern int CSharp_SetObjectPosition(ulong jarg1, float jarg2, float jarg3, float jarg4, float jarg5, float jarg6, float jarg7, float jarg8, float jarg9, float jarg10);

	[PreserveSig]
	[Token(Token = "0x6001050")]
	[Address(RVA = "0x2FE514", Offset = "0x2FE514", VA = "0x2FE514")]
	public static extern int CSharp_GetSourceMultiplePlayPositions(uint jarg1, [Out] uint[] jarg2, [Out] uint[] jarg3, [Out] int[] jarg4, ref uint jarg5, bool jarg6);

	[PreserveSig]
	[Token(Token = "0x6001051")]
	[Address(RVA = "0x2FE804", Offset = "0x2FE804", VA = "0x2FE804")]
	public static extern int CSharp_SetListeners(ulong jarg1, ulong[] jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6001052")]
	[Address(RVA = "0x2FE964", Offset = "0x2FE964", VA = "0x2FE964")]
	public static extern int CSharp_SetDefaultListeners(ulong[] jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001053")]
	[Address(RVA = "0x2FEB1C", Offset = "0x2FEB1C", VA = "0x2FEB1C")]
	public static extern int CSharp_AddOutput(IntPtr jarg1, out ulong jarg2, ulong[] jarg3, uint jarg4);

	[PreserveSig]
	[Token(Token = "0x6001054")]
	[Address(RVA = "0x2FEC9C", Offset = "0x2FEC9C", VA = "0x2FEC9C")]
	public static extern void CSharp_GetDefaultStreamSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001055")]
	[Address(RVA = "0x2FEDF0", Offset = "0x2FEDF0", VA = "0x2FEDF0")]
	public static extern void CSharp_GetDefaultDeviceSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001056")]
	[Address(RVA = "0x2FEF78", Offset = "0x2FEF78", VA = "0x2FEF78")]
	public static extern void CSharp_GetDefaultMusicSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001057")]
	[Address(RVA = "0x2FF0CC", Offset = "0x2FF0CC", VA = "0x2FF0CC")]
	public static extern void CSharp_GetDefaultInitSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001058")]
	[Address(RVA = "0x2FF254", Offset = "0x2FF254", VA = "0x2FF254")]
	public static extern void CSharp_GetDefaultPlatformInitSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001059")]
	[Address(RVA = "0x2FF38C", Offset = "0x2FF38C", VA = "0x2FF38C")]
	public static extern uint CSharp_GetMajorMinorVersion();

	[PreserveSig]
	[Token(Token = "0x600105A")]
	[Address(RVA = "0x2FF4B4", Offset = "0x2FF4B4", VA = "0x2FF4B4")]
	public static extern uint CSharp_GetSubminorBuildVersion();

	[PreserveSig]
	[Token(Token = "0x600105B")]
	[Address(RVA = "0x2FF6B0", Offset = "0x2FF6B0", VA = "0x2FF6B0")]
	public static extern int CSharp_QueryIndirectPaths(ulong jarg1, IntPtr jarg2, IntPtr jarg3, uint jarg4);

	[PreserveSig]
	[Token(Token = "0x600105C")]
	[Address(RVA = "0x2FF8D4", Offset = "0x2FF8D4", VA = "0x2FF8D4")]
	public static extern int CSharp_QuerySoundPropagationPaths(ulong jarg1, IntPtr jarg2, IntPtr jarg3, uint jarg4);

	[PreserveSig]
	[Token(Token = "0x600105D")]
	[Address(RVA = "0x2FFAF8", Offset = "0x2FFAF8", VA = "0x2FFAF8")]
	public static extern int CSharp_QueryDiffractionPaths(ulong jarg1, IntPtr jarg2, IntPtr jarg3, uint jarg4);

	[PreserveSig]
	[Token(Token = "0x600105E")]
	[Address(RVA = "0x2FFBD0", Offset = "0x2FFBD0", VA = "0x2FFBD0")]
	public static extern int CSharp_SetRoomPortal(ulong jarg1, IntPtr jarg2, IntPtr jarg3, bool jarg4, ulong jarg5, ulong jarg6);

	[PreserveSig]
	[Token(Token = "0x600105F")]
	[Address(RVA = "0x2FFCC4", Offset = "0x2FFCC4", VA = "0x2FFCC4")]
	public static extern int CSharp_SetRoom(ulong jarg1, IntPtr jarg2, string jarg3);

	[PreserveSig]
	[Token(Token = "0x6001060")]
	[Address(RVA = "0x2FFE84", Offset = "0x2FFE84", VA = "0x2FFE84")]
	public static extern int CSharp_RegisterSpatialAudioListener(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6001061")]
	[Address(RVA = "0x300014", Offset = "0x300014", VA = "0x300014")]
	public static extern int CSharp_UnregisterSpatialAudioListener(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6001062")]
	[Address(RVA = "0x300220", Offset = "0x300220", VA = "0x300220")]
	public static extern int CSharp_SetGeometry(ulong jarg1, IntPtr jarg2, uint jarg3, IntPtr jarg4, uint jarg5, IntPtr jarg6, uint jarg7, bool jarg8, bool jarg9);

	[PreserveSig]
	[Token(Token = "0x6001063")]
	[Address(RVA = "0x2CAE90", Offset = "0x2CAE90", VA = "0x2CAE90")]
	public static extern IntPtr CSharp_AkPlaylist_SWIGUpcast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001064")]
	[Address(RVA = "0x2C02B8", Offset = "0x2C02B8", VA = "0x2C02B8")]
	public static extern IntPtr CSharp_AkMIDIPost_SWIGUpcast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001065")]
	[Address(RVA = "0x3184E4", Offset = "0x3184E4", VA = "0x3184E4")]
	public static extern IntPtr CSharp_AkEventCallbackInfo_SWIGUpcast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001066")]
	[Address(RVA = "0x2BEB1C", Offset = "0x2BEB1C", VA = "0x2BEB1C")]
	public static extern IntPtr CSharp_AkMIDIEventCallbackInfo_SWIGUpcast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001067")]
	[Address(RVA = "0x3185A4", Offset = "0x3185A4", VA = "0x3185A4")]
	public static extern IntPtr CSharp_AkMarkerCallbackInfo_SWIGUpcast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001068")]
	[Address(RVA = "0x318664", Offset = "0x318664", VA = "0x318664")]
	public static extern IntPtr CSharp_AkDurationCallbackInfo_SWIGUpcast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001069")]
	[Address(RVA = "0x318724", Offset = "0x318724", VA = "0x318724")]
	public static extern IntPtr CSharp_AkDynamicSequenceItemCallbackInfo_SWIGUpcast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600106A")]
	[Address(RVA = "0x2C34A0", Offset = "0x2C34A0", VA = "0x2C34A0")]
	public static extern IntPtr CSharp_AkMusicSyncCallbackInfo_SWIGUpcast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600106B")]
	[Address(RVA = "0x2C22E0", Offset = "0x2C22E0", VA = "0x2C22E0")]
	public static extern IntPtr CSharp_AkMusicPlaylistCallbackInfo_SWIGUpcast(IntPtr jarg1);
}
[Token(Token = "0x2000202")]
public class AkThreadProperties : IDisposable
{
	[Token(Token = "0x4000D56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000D57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170000FD")]
	public int nPriority
	{
		[Token(Token = "0x6001073")]
		[Address(RVA = "0x265A48", Offset = "0x265A48", VA = "0x265A48")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001072")]
		[Address(RVA = "0x2659B4", Offset = "0x2659B4", VA = "0x2659B4")]
		set
		{
		}
	}

	[Token(Token = "0x170000FE")]
	public uint uStackSize
	{
		[Token(Token = "0x6001075")]
		[Address(RVA = "0x265B68", Offset = "0x265B68", VA = "0x265B68")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001074")]
		[Address(RVA = "0x265AD4", Offset = "0x265AD4", VA = "0x265AD4")]
		set
		{
		}
	}

	[Token(Token = "0x170000FF")]
	public int uSchedPolicy
	{
		[Token(Token = "0x6001077")]
		[Address(RVA = "0x265C88", Offset = "0x265C88", VA = "0x265C88")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001076")]
		[Address(RVA = "0x265BF4", Offset = "0x265BF4", VA = "0x265BF4")]
		set
		{
		}
	}

	[Token(Token = "0x17000100")]
	public uint dwAffinityMask
	{
		[Token(Token = "0x6001079")]
		[Address(RVA = "0x265DA8", Offset = "0x265DA8", VA = "0x265DA8")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001078")]
		[Address(RVA = "0x265D14", Offset = "0x265D14", VA = "0x265D14")]
		set
		{
		}
	}

	[Token(Token = "0x600106C")]
	[Address(RVA = "0x2656E0", Offset = "0x2656E0", VA = "0x2656E0")]
	internal AkThreadProperties(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x600106D")]
	[Address(RVA = "0x265708", Offset = "0x265708", VA = "0x265708")]
	public AkThreadProperties()
	{
	}

	[Token(Token = "0x600106E")]
	[Address(RVA = "0x2657A8", Offset = "0x2657A8", VA = "0x2657A8")]
	internal static IntPtr getCPtr(AkThreadProperties obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600106F")]
	[Address(RVA = "0x265800", Offset = "0x265800", VA = "0x265800", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001070")]
	[Address(RVA = "0x26582C", Offset = "0x26582C", VA = "0x26582C", Slot = "1")]
	~AkThreadProperties()
	{
	}

	[Token(Token = "0x6001071")]
	[Address(RVA = "0x26588C", Offset = "0x26588C", VA = "0x26588C", Slot = "6")]
	public virtual void Dispose()
	{
	}
}
[Token(Token = "0x2000203")]
public class AkUnityPlatformSpecificSettings : IDisposable
{
	[Token(Token = "0x4000D58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000D59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool swigCMemOwn;

	[Token(Token = "0x600107A")]
	[Address(RVA = "0x2693D8", Offset = "0x2693D8", VA = "0x2693D8")]
	internal AkUnityPlatformSpecificSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x600107B")]
	[Address(RVA = "0x269400", Offset = "0x269400", VA = "0x269400")]
	public AkUnityPlatformSpecificSettings()
	{
	}

	[Token(Token = "0x600107C")]
	[Address(RVA = "0x2694A0", Offset = "0x2694A0", VA = "0x2694A0")]
	internal static IntPtr getCPtr(AkUnityPlatformSpecificSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600107D")]
	[Address(RVA = "0x2694F8", Offset = "0x2694F8", VA = "0x2694F8", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600107E")]
	[Address(RVA = "0x269524", Offset = "0x269524", VA = "0x269524", Slot = "1")]
	~AkUnityPlatformSpecificSettings()
	{
	}

	[Token(Token = "0x600107F")]
	[Address(RVA = "0x269584", Offset = "0x269584", VA = "0x269584", Slot = "6")]
	public virtual void Dispose()
	{
	}
}
[Token(Token = "0x2000204")]
public class _ArrayPoolDefault : IDisposable
{
	[Token(Token = "0x4000D5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000D5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool swigCMemOwn;

	[Token(Token = "0x6001080")]
	[Address(RVA = "0x48EF04", Offset = "0x48EF04", VA = "0x48EF04")]
	internal _ArrayPoolDefault(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001081")]
	[Address(RVA = "0x48EF2C", Offset = "0x48EF2C", VA = "0x48EF2C")]
	public _ArrayPoolDefault()
	{
	}

	[Token(Token = "0x6001082")]
	[Address(RVA = "0x48EFCC", Offset = "0x48EFCC", VA = "0x48EFCC")]
	internal static IntPtr getCPtr(_ArrayPoolDefault obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001083")]
	[Address(RVA = "0x48F024", Offset = "0x48F024", VA = "0x48F024", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001084")]
	[Address(RVA = "0x48F050", Offset = "0x48F050", VA = "0x48F050", Slot = "1")]
	~_ArrayPoolDefault()
	{
	}

	[Token(Token = "0x6001085")]
	[Address(RVA = "0x48F0B0", Offset = "0x48F0B0", VA = "0x48F0B0", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001086")]
	[Address(RVA = "0x48F1D8", Offset = "0x48F1D8", VA = "0x48F1D8")]
	public static int Get()
	{
		return default(int);
	}
}
[Token(Token = "0x2000205")]
public class _ArrayPoolLEngineDefault : IDisposable
{
	[Token(Token = "0x4000D5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000D5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool swigCMemOwn;

	[Token(Token = "0x6001087")]
	[Address(RVA = "0x48F258", Offset = "0x48F258", VA = "0x48F258")]
	internal _ArrayPoolLEngineDefault(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001088")]
	[Address(RVA = "0x48F280", Offset = "0x48F280", VA = "0x48F280")]
	public _ArrayPoolLEngineDefault()
	{
	}

	[Token(Token = "0x6001089")]
	[Address(RVA = "0x48F320", Offset = "0x48F320", VA = "0x48F320")]
	internal static IntPtr getCPtr(_ArrayPoolLEngineDefault obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600108A")]
	[Address(RVA = "0x48F378", Offset = "0x48F378", VA = "0x48F378", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600108B")]
	[Address(RVA = "0x48F3A4", Offset = "0x48F3A4", VA = "0x48F3A4", Slot = "1")]
	~_ArrayPoolLEngineDefault()
	{
	}

	[Token(Token = "0x600108C")]
	[Address(RVA = "0x48F404", Offset = "0x48F404", VA = "0x48F404", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x600108D")]
	[Address(RVA = "0x48F52C", Offset = "0x48F52C", VA = "0x48F52C")]
	public static int Get()
	{
		return default(int);
	}
}
[Token(Token = "0x2000206")]
public class _ArrayPoolSpatialAudio : IDisposable
{
	[Token(Token = "0x4000D5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000D5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool swigCMemOwn;

	[Token(Token = "0x600108E")]
	[Address(RVA = "0x48F5AC", Offset = "0x48F5AC", VA = "0x48F5AC")]
	internal _ArrayPoolSpatialAudio(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x600108F")]
	[Address(RVA = "0x48F5D4", Offset = "0x48F5D4", VA = "0x48F5D4")]
	public _ArrayPoolSpatialAudio()
	{
	}

	[Token(Token = "0x6001090")]
	[Address(RVA = "0x48F674", Offset = "0x48F674", VA = "0x48F674")]
	internal static IntPtr getCPtr(_ArrayPoolSpatialAudio obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001091")]
	[Address(RVA = "0x48F6CC", Offset = "0x48F6CC", VA = "0x48F6CC", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001092")]
	[Address(RVA = "0x48F6F8", Offset = "0x48F6F8", VA = "0x48F6F8", Slot = "1")]
	~_ArrayPoolSpatialAudio()
	{
	}

	[Token(Token = "0x6001093")]
	[Address(RVA = "0x48F758", Offset = "0x48F758", VA = "0x48F758", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001094")]
	[Address(RVA = "0x48F880", Offset = "0x48F880", VA = "0x48F880")]
	public static int Get()
	{
		return default(int);
	}
}
[Token(Token = "0x2000207")]
public enum Ak3DPositionType
{
	[Token(Token = "0x4000D61")]
	AK_3DPositionType_Emitter,
	[Token(Token = "0x4000D62")]
	AK_3DPositionType_EmitterWithAutomation,
	[Token(Token = "0x4000D63")]
	AK_3DPositionType_ListenerWithAutomation
}
[Token(Token = "0x2000208")]
public enum Ak3DSpatializationMode
{
	[Token(Token = "0x4000D65")]
	AK_SpatializationMode_None,
	[Token(Token = "0x4000D66")]
	AK_SpatializationMode_PositionOnly,
	[Token(Token = "0x4000D67")]
	AK_SpatializationMode_PositionAndOrientation
}
[Token(Token = "0x2000209")]
public class AkAcousticSurface : IDisposable
{
	[Token(Token = "0x4000D68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000D69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000101")]
	public uint textureID
	{
		[Token(Token = "0x600109C")]
		[Address(RVA = "0x49235C", Offset = "0x49235C", VA = "0x49235C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600109B")]
		[Address(RVA = "0x4922C8", Offset = "0x4922C8", VA = "0x4922C8")]
		set
		{
		}
	}

	[Token(Token = "0x17000102")]
	public uint reflectorChannelMask
	{
		[Token(Token = "0x600109E")]
		[Address(RVA = "0x49247C", Offset = "0x49247C", VA = "0x49247C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600109D")]
		[Address(RVA = "0x4923E8", Offset = "0x4923E8", VA = "0x4923E8")]
		set
		{
		}
	}

	[Token(Token = "0x17000103")]
	public string strName
	{
		[Token(Token = "0x60010A0")]
		[Address(RVA = "0x49259C", Offset = "0x49259C", VA = "0x49259C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600109F")]
		[Address(RVA = "0x492508", Offset = "0x492508", VA = "0x492508")]
		set
		{
		}
	}

	[Token(Token = "0x6001095")]
	[Address(RVA = "0x491FF4", Offset = "0x491FF4", VA = "0x491FF4")]
	internal AkAcousticSurface(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001096")]
	[Address(RVA = "0x49201C", Offset = "0x49201C", VA = "0x49201C")]
	public AkAcousticSurface()
	{
	}

	[Token(Token = "0x6001097")]
	[Address(RVA = "0x4920BC", Offset = "0x4920BC", VA = "0x4920BC")]
	internal static IntPtr getCPtr(AkAcousticSurface obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001098")]
	[Address(RVA = "0x492114", Offset = "0x492114", VA = "0x492114", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001099")]
	[Address(RVA = "0x492140", Offset = "0x492140", VA = "0x492140", Slot = "1")]
	~AkAcousticSurface()
	{
	}

	[Token(Token = "0x600109A")]
	[Address(RVA = "0x4921A0", Offset = "0x4921A0", VA = "0x4921A0", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x60010A1")]
	[Address(RVA = "0x492668", Offset = "0x492668", VA = "0x492668")]
	public void Clear()
	{
	}

	[Token(Token = "0x60010A2")]
	[Address(RVA = "0x4926F4", Offset = "0x4926F4", VA = "0x4926F4")]
	public void DeleteName()
	{
	}

	[Token(Token = "0x60010A3")]
	[Address(RVA = "0x492780", Offset = "0x492780", VA = "0x492780")]
	public static int GetSizeOf()
	{
		return default(int);
	}

	[Token(Token = "0x60010A4")]
	[Address(RVA = "0x492800", Offset = "0x492800", VA = "0x492800")]
	public void Clone(AkAcousticSurface other)
	{
	}
}
[Token(Token = "0x200020A")]
public enum AkActionOnEventType
{
	[Token(Token = "0x4000D6B")]
	AkActionOnEventType_Stop,
	[Token(Token = "0x4000D6C")]
	AkActionOnEventType_Pause,
	[Token(Token = "0x4000D6D")]
	AkActionOnEventType_Resume,
	[Token(Token = "0x4000D6E")]
	AkActionOnEventType_Break,
	[Token(Token = "0x4000D6F")]
	AkActionOnEventType_ReleaseEnvelope
}
[Token(Token = "0x200020B")]
public enum AkAudioDeviceState
{
	[Token(Token = "0x4000D71")]
	AkDeviceState_Active = 1,
	[Token(Token = "0x4000D72")]
	AkDeviceState_Disabled = 2,
	[Token(Token = "0x4000D73")]
	AkDeviceState_NotPresent = 4,
	[Token(Token = "0x4000D74")]
	AkDeviceState_Unplugged = 8,
	[Token(Token = "0x4000D75")]
	AkDeviceState_All = 15
}
[Token(Token = "0x200020C")]
public class AkAudioFormat : IDisposable
{
	[Token(Token = "0x4000D76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000D77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000104")]
	public uint uSampleRate
	{
		[Token(Token = "0x60010AC")]
		[Address(RVA = "0x4949B4", Offset = "0x4949B4", VA = "0x4949B4")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60010AB")]
		[Address(RVA = "0x494920", Offset = "0x494920", VA = "0x494920")]
		set
		{
		}
	}

	[Token(Token = "0x17000105")]
	public AkChannelConfig channelConfig
	{
		[Token(Token = "0x60010AE")]
		[Address(RVA = "0x494B74", Offset = "0x494B74", VA = "0x494B74")]
		get
		{
			return null;
		}
		[Token(Token = "0x60010AD")]
		[Address(RVA = "0x494A40", Offset = "0x494A40", VA = "0x494A40")]
		set
		{
		}
	}

	[Token(Token = "0x17000106")]
	public uint uBitsPerSample
	{
		[Token(Token = "0x60010B0")]
		[Address(RVA = "0x494D10", Offset = "0x494D10", VA = "0x494D10")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60010AF")]
		[Address(RVA = "0x494C7C", Offset = "0x494C7C", VA = "0x494C7C")]
		set
		{
		}
	}

	[Token(Token = "0x17000107")]
	public uint uBlockAlign
	{
		[Token(Token = "0x60010B2")]
		[Address(RVA = "0x494E30", Offset = "0x494E30", VA = "0x494E30")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60010B1")]
		[Address(RVA = "0x494D9C", Offset = "0x494D9C", VA = "0x494D9C")]
		set
		{
		}
	}

	[Token(Token = "0x17000108")]
	public uint uTypeID
	{
		[Token(Token = "0x60010B4")]
		[Address(RVA = "0x494F50", Offset = "0x494F50", VA = "0x494F50")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60010B3")]
		[Address(RVA = "0x494EBC", Offset = "0x494EBC", VA = "0x494EBC")]
		set
		{
		}
	}

	[Token(Token = "0x17000109")]
	public uint uInterleaveID
	{
		[Token(Token = "0x60010B6")]
		[Address(RVA = "0x495070", Offset = "0x495070", VA = "0x495070")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60010B5")]
		[Address(RVA = "0x494FDC", Offset = "0x494FDC", VA = "0x494FDC")]
		set
		{
		}
	}

	[Token(Token = "0x60010A5")]
	[Address(RVA = "0x49464C", Offset = "0x49464C", VA = "0x49464C")]
	internal AkAudioFormat(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60010A6")]
	[Address(RVA = "0x494674", Offset = "0x494674", VA = "0x494674")]
	public AkAudioFormat()
	{
	}

	[Token(Token = "0x60010A7")]
	[Address(RVA = "0x494714", Offset = "0x494714", VA = "0x494714")]
	internal static IntPtr getCPtr(AkAudioFormat obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60010A8")]
	[Address(RVA = "0x49476C", Offset = "0x49476C", VA = "0x49476C", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60010A9")]
	[Address(RVA = "0x494798", Offset = "0x494798", VA = "0x494798", Slot = "1")]
	~AkAudioFormat()
	{
	}

	[Token(Token = "0x60010AA")]
	[Address(RVA = "0x4947F8", Offset = "0x4947F8", VA = "0x4947F8", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x60010B7")]
	[Address(RVA = "0x4950FC", Offset = "0x4950FC", VA = "0x4950FC")]
	public uint GetNumChannels()
	{
		return default(uint);
	}

	[Token(Token = "0x60010B8")]
	[Address(RVA = "0x495188", Offset = "0x495188", VA = "0x495188")]
	public uint GetBitsPerSample()
	{
		return default(uint);
	}

	[Token(Token = "0x60010B9")]
	[Address(RVA = "0x495214", Offset = "0x495214", VA = "0x495214")]
	public uint GetBlockAlign()
	{
		return default(uint);
	}

	[Token(Token = "0x60010BA")]
	[Address(RVA = "0x4952A0", Offset = "0x4952A0", VA = "0x4952A0")]
	public uint GetTypeID()
	{
		return default(uint);
	}

	[Token(Token = "0x60010BB")]
	[Address(RVA = "0x49532C", Offset = "0x49532C", VA = "0x49532C")]
	public uint GetInterleaveID()
	{
		return default(uint);
	}

	[Token(Token = "0x60010BC")]
	[Address(RVA = "0x4953B8", Offset = "0x4953B8", VA = "0x4953B8")]
	public void SetAll(uint in_uSampleRate, AkChannelConfig in_channelConfig, uint in_uBitsPerSample, uint in_uBlockAlign, uint in_uTypeID, uint in_uInterleaveID)
	{
	}

	[Token(Token = "0x60010BD")]
	[Address(RVA = "0x4954C0", Offset = "0x4954C0", VA = "0x4954C0")]
	public bool IsChannelConfigSupported()
	{
		return default(bool);
	}
}
[Token(Token = "0x200020D")]
public class AkAudioInterruptionCallbackInfo : IDisposable
{
	[Token(Token = "0x4000D78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000D79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700010A")]
	public bool bEnterInterruption
	{
		[Token(Token = "0x60010C4")]
		[Address(RVA = "0x4975B0", Offset = "0x4975B0", VA = "0x4975B0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60010BE")]
	[Address(RVA = "0x4972DC", Offset = "0x4972DC", VA = "0x4972DC")]
	internal AkAudioInterruptionCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60010BF")]
	[Address(RVA = "0x497304", Offset = "0x497304", VA = "0x497304")]
	public AkAudioInterruptionCallbackInfo()
	{
	}

	[Token(Token = "0x60010C0")]
	[Address(RVA = "0x4973A4", Offset = "0x4973A4", VA = "0x4973A4")]
	internal static IntPtr getCPtr(AkAudioInterruptionCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60010C1")]
	[Address(RVA = "0x4973FC", Offset = "0x4973FC", VA = "0x4973FC", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60010C2")]
	[Address(RVA = "0x497428", Offset = "0x497428", VA = "0x497428", Slot = "1")]
	~AkAudioInterruptionCallbackInfo()
	{
	}

	[Token(Token = "0x60010C3")]
	[Address(RVA = "0x497488", Offset = "0x497488", VA = "0x497488", Slot = "6")]
	public virtual void Dispose()
	{
	}
}
[Token(Token = "0x200020E")]
public class AkAudioSettings : IDisposable
{
	[Token(Token = "0x4000D7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000D7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700010B")]
	public uint uNumSamplesPerFrame
	{
		[Token(Token = "0x60010CC")]
		[Address(RVA = "0x498A64", Offset = "0x498A64", VA = "0x498A64")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60010CB")]
		[Address(RVA = "0x4989D0", Offset = "0x4989D0", VA = "0x4989D0")]
		set
		{
		}
	}

	[Token(Token = "0x1700010C")]
	public uint uNumSamplesPerSecond
	{
		[Token(Token = "0x60010CE")]
		[Address(RVA = "0x498B84", Offset = "0x498B84", VA = "0x498B84")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60010CD")]
		[Address(RVA = "0x498AF0", Offset = "0x498AF0", VA = "0x498AF0")]
		set
		{
		}
	}

	[Token(Token = "0x60010C5")]
	[Address(RVA = "0x4986FC", Offset = "0x4986FC", VA = "0x4986FC")]
	internal AkAudioSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60010C6")]
	[Address(RVA = "0x498724", Offset = "0x498724", VA = "0x498724")]
	public AkAudioSettings()
	{
	}

	[Token(Token = "0x60010C7")]
	[Address(RVA = "0x4987C4", Offset = "0x4987C4", VA = "0x4987C4")]
	internal static IntPtr getCPtr(AkAudioSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60010C8")]
	[Address(RVA = "0x49881C", Offset = "0x49881C", VA = "0x49881C", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60010C9")]
	[Address(RVA = "0x498848", Offset = "0x498848", VA = "0x498848", Slot = "1")]
	~AkAudioSettings()
	{
	}

	[Token(Token = "0x60010CA")]
	[Address(RVA = "0x4988A8", Offset = "0x4988A8", VA = "0x4988A8", Slot = "6")]
	public virtual void Dispose()
	{
	}
}
[Token(Token = "0x200020F")]
public class AkAudioSourceChangeCallbackInfo : IDisposable
{
	[Token(Token = "0x4000D7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000D7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700010D")]
	public bool bOtherAudioPlaying
	{
		[Token(Token = "0x60010D5")]
		[Address(RVA = "0x498EE4", Offset = "0x498EE4", VA = "0x498EE4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60010CF")]
	[Address(RVA = "0x498C10", Offset = "0x498C10", VA = "0x498C10")]
	internal AkAudioSourceChangeCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60010D0")]
	[Address(RVA = "0x498C38", Offset = "0x498C38", VA = "0x498C38")]
	public AkAudioSourceChangeCallbackInfo()
	{
	}

	[Token(Token = "0x60010D1")]
	[Address(RVA = "0x498CD8", Offset = "0x498CD8", VA = "0x498CD8")]
	internal static IntPtr getCPtr(AkAudioSourceChangeCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60010D2")]
	[Address(RVA = "0x498D30", Offset = "0x498D30", VA = "0x498D30", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60010D3")]
	[Address(RVA = "0x498D5C", Offset = "0x498D5C", VA = "0x498D5C", Slot = "1")]
	~AkAudioSourceChangeCallbackInfo()
	{
	}

	[Token(Token = "0x60010D4")]
	[Address(RVA = "0x498DBC", Offset = "0x498DBC", VA = "0x498DBC", Slot = "6")]
	public virtual void Dispose()
	{
	}
}
[Token(Token = "0x2000210")]
public class AkAuxSendValue : IDisposable
{
	[Token(Token = "0x4000D7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000D7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700010E")]
	public ulong listenerID
	{
		[Token(Token = "0x60010DC")]
		[Address(RVA = "0x499D34", Offset = "0x499D34", VA = "0x499D34")]
		get
		{
			return default(ulong);
		}
		[Token(Token = "0x60010DB")]
		[Address(RVA = "0x499C8C", Offset = "0x499C8C", VA = "0x499C8C")]
		set
		{
		}
	}

	[Token(Token = "0x1700010F")]
	public uint auxBusID
	{
		[Token(Token = "0x60010DE")]
		[Address(RVA = "0x499E54", Offset = "0x499E54", VA = "0x499E54")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60010DD")]
		[Address(RVA = "0x499DC0", Offset = "0x499DC0", VA = "0x499DC0")]
		set
		{
		}
	}

	[Token(Token = "0x17000110")]
	public float fControlValue
	{
		[Token(Token = "0x60010E0")]
		[Address(RVA = "0x499F74", Offset = "0x499F74", VA = "0x499F74")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60010DF")]
		[Address(RVA = "0x499EE0", Offset = "0x499EE0", VA = "0x499EE0")]
		set
		{
		}
	}

	[Token(Token = "0x60010D6")]
	[Address(RVA = "0x4991B4", Offset = "0x4991B4", VA = "0x4991B4")]
	internal AkAuxSendValue(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60010D7")]
	[Address(RVA = "0x499A80", Offset = "0x499A80", VA = "0x499A80")]
	internal static IntPtr getCPtr(AkAuxSendValue obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60010D8")]
	[Address(RVA = "0x499AD8", Offset = "0x499AD8", VA = "0x499AD8", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60010D9")]
	[Address(RVA = "0x499B04", Offset = "0x499B04", VA = "0x499B04", Slot = "1")]
	~AkAuxSendValue()
	{
	}

	[Token(Token = "0x60010DA")]
	[Address(RVA = "0x499B64", Offset = "0x499B64", VA = "0x499B64", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x60010E1")]
	[Address(RVA = "0x49A000", Offset = "0x49A000", VA = "0x49A000")]
	public void Set(GameObject listener, uint id, float value)
	{
	}

	[Token(Token = "0x60010E2")]
	[Address(RVA = "0x49A11C", Offset = "0x49A11C", VA = "0x49A11C")]
	public bool IsSame(GameObject listener, uint id)
	{
		return default(bool);
	}

	[Token(Token = "0x60010E3")]
	[Address(RVA = "0x49A220", Offset = "0x49A220", VA = "0x49A220")]
	public static int GetSizeOf()
	{
		return default(int);
	}

	[Token(Token = "0x60010E4")]
	[Address(RVA = "0x49A2A0", Offset = "0x49A2A0", VA = "0x49A2A0")]
	public AKRESULT SetGameObjectAuxSendValues(GameObject in_gameObjectID, uint in_uNumSendValues)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60010E5")]
	[Address(RVA = "0x49A3A4", Offset = "0x49A3A4", VA = "0x49A3A4")]
	public AKRESULT GetGameObjectAuxSendValues(GameObject in_gameObjectID, ref uint io_ruNumSendValues)
	{
		return default(AKRESULT);
	}
}
[Token(Token = "0x2000211")]
public class AkBankCallbackInfo : IDisposable
{
	[Token(Token = "0x4000D80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000D81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000111")]
	public uint bankID
	{
		[Token(Token = "0x60010EC")]
		[Address(RVA = "0x49AD1C", Offset = "0x49AD1C", VA = "0x49AD1C")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000112")]
	public IntPtr inMemoryBankPtr
	{
		[Token(Token = "0x60010ED")]
		[Address(RVA = "0x49ADA8", Offset = "0x49ADA8", VA = "0x49ADA8")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x17000113")]
	public AKRESULT loadResult
	{
		[Token(Token = "0x60010EE")]
		[Address(RVA = "0x49AE34", Offset = "0x49AE34", VA = "0x49AE34")]
		get
		{
			return default(AKRESULT);
		}
	}

	[Token(Token = "0x17000114")]
	public int memPoolId
	{
		[Token(Token = "0x60010EF")]
		[Address(RVA = "0x49AEC0", Offset = "0x49AEC0", VA = "0x49AEC0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60010E6")]
	[Address(RVA = "0x49AA48", Offset = "0x49AA48", VA = "0x49AA48")]
	internal AkBankCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60010E7")]
	[Address(RVA = "0x49AA70", Offset = "0x49AA70", VA = "0x49AA70")]
	public AkBankCallbackInfo()
	{
	}

	[Token(Token = "0x60010E8")]
	[Address(RVA = "0x49AB10", Offset = "0x49AB10", VA = "0x49AB10")]
	internal static IntPtr getCPtr(AkBankCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60010E9")]
	[Address(RVA = "0x49AB68", Offset = "0x49AB68", VA = "0x49AB68", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60010EA")]
	[Address(RVA = "0x49AB94", Offset = "0x49AB94", VA = "0x49AB94", Slot = "1")]
	~AkBankCallbackInfo()
	{
	}

	[Token(Token = "0x60010EB")]
	[Address(RVA = "0x49ABF4", Offset = "0x49ABF4", VA = "0x49ABF4", Slot = "6")]
	public virtual void Dispose()
	{
	}
}
[Token(Token = "0x2000212")]
public enum AkBankContent
{
	[Token(Token = "0x4000D83")]
	AkBankContent_StructureOnly,
	[Token(Token = "0x4000D84")]
	AkBankContent_All
}
[Token(Token = "0x2000213")]
public enum AkBusHierarchyFlags
{
	[Token(Token = "0x4000D86")]
	AkBusHierarchy_Primary = 1,
	[Token(Token = "0x4000D87")]
	AkBusHierarchy_Secondary = 2,
	[Token(Token = "0x4000D88")]
	AkBusHierarchy_IsMaster = 0x80
}
[Token(Token = "0x2000214")]
public class AkCallbackInfo : IDisposable
{
	[Token(Token = "0x4000D89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000D8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000115")]
	public IntPtr pCookie
	{
		[Token(Token = "0x60010F6")]
		[Address(RVA = "0x49D654", Offset = "0x49D654", VA = "0x49D654")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x17000116")]
	public ulong gameObjID
	{
		[Token(Token = "0x60010F7")]
		[Address(RVA = "0x49D6E0", Offset = "0x49D6E0", VA = "0x49D6E0")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x60010F0")]
	[Address(RVA = "0x49D380", Offset = "0x49D380", VA = "0x49D380")]
	internal AkCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60010F1")]
	[Address(RVA = "0x49D3A8", Offset = "0x49D3A8", VA = "0x49D3A8")]
	public AkCallbackInfo()
	{
	}

	[Token(Token = "0x60010F2")]
	[Address(RVA = "0x49D448", Offset = "0x49D448", VA = "0x49D448")]
	internal static IntPtr getCPtr(AkCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60010F3")]
	[Address(RVA = "0x49D4A0", Offset = "0x49D4A0", VA = "0x49D4A0", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60010F4")]
	[Address(RVA = "0x49D4CC", Offset = "0x49D4CC", VA = "0x49D4CC", Slot = "1")]
	~AkCallbackInfo()
	{
	}

	[Token(Token = "0x60010F5")]
	[Address(RVA = "0x49D52C", Offset = "0x49D52C", VA = "0x49D52C", Slot = "6")]
	public virtual void Dispose()
	{
	}
}
[Token(Token = "0x2000215")]
public class AkCallbackSerializer : IDisposable
{
	[Token(Token = "0x4000D8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000D8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool swigCMemOwn;

	[Token(Token = "0x60010F8")]
	[Address(RVA = "0x4A1448", Offset = "0x4A1448", VA = "0x4A1448")]
	internal AkCallbackSerializer(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60010F9")]
	[Address(RVA = "0x4A1470", Offset = "0x4A1470", VA = "0x4A1470")]
	public AkCallbackSerializer()
	{
	}

	[Token(Token = "0x60010FA")]
	[Address(RVA = "0x4A1510", Offset = "0x4A1510", VA = "0x4A1510")]
	internal static IntPtr getCPtr(AkCallbackSerializer obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60010FB")]
	[Address(RVA = "0x4A1568", Offset = "0x4A1568", VA = "0x4A1568", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60010FC")]
	[Address(RVA = "0x4A1594", Offset = "0x4A1594", VA = "0x4A1594", Slot = "1")]
	~AkCallbackSerializer()
	{
	}

	[Token(Token = "0x60010FD")]
	[Address(RVA = "0x4A15F4", Offset = "0x4A15F4", VA = "0x4A15F4", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x60010FE")]
	[Address(RVA = "0x49E59C", Offset = "0x49E59C", VA = "0x49E59C")]
	public static AKRESULT Init(IntPtr in_pMemory, uint in_uSize)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60010FF")]
	[Address(RVA = "0x49E770", Offset = "0x49E770", VA = "0x49E770")]
	public static void Term()
	{
	}

	[Token(Token = "0x6001100")]
	[Address(RVA = "0x49FCEC", Offset = "0x49FCEC", VA = "0x49FCEC")]
	public static IntPtr Lock()
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001101")]
	[Address(RVA = "0x49E894", Offset = "0x49E894", VA = "0x49E894")]
	public static void SetLocalOutput(uint in_uErrorLevel)
	{
	}

	[Token(Token = "0x6001102")]
	[Address(RVA = "0x4A0658", Offset = "0x4A0658", VA = "0x4A0658")]
	public static void Unlock()
	{
	}

	[Token(Token = "0x6001103")]
	[Address(RVA = "0x4A171C", Offset = "0x4A171C", VA = "0x4A171C")]
	public static AKRESULT AudioSourceChangeCallbackFunc(bool in_bOtherAudioPlaying, object in_pCookie)
	{
		return default(AKRESULT);
	}
}
[Token(Token = "0x2000216")]
public enum AkCallbackType
{
	[Token(Token = "0x4000D8E")]
	AK_EndOfEvent = 1,
	[Token(Token = "0x4000D8F")]
	AK_EndOfDynamicSequenceItem = 2,
	[Token(Token = "0x4000D90")]
	AK_Marker = 4,
	[Token(Token = "0x4000D91")]
	AK_Duration = 8,
	[Token(Token = "0x4000D92")]
	AK_SpeakerVolumeMatrix = 16,
	[Token(Token = "0x4000D93")]
	AK_Starvation = 32,
	[Token(Token = "0x4000D94")]
	AK_MusicPlaylistSelect = 64,
	[Token(Token = "0x4000D95")]
	AK_MusicPlayStarted = 128,
	[Token(Token = "0x4000D96")]
	AK_MusicSyncBeat = 256,
	[Token(Token = "0x4000D97")]
	AK_MusicSyncBar = 512,
	[Token(Token = "0x4000D98")]
	AK_MusicSyncEntry = 1024,
	[Token(Token = "0x4000D99")]
	AK_MusicSyncExit = 2048,
	[Token(Token = "0x4000D9A")]
	AK_MusicSyncGrid = 4096,
	[Token(Token = "0x4000D9B")]
	AK_MusicSyncUserCue = 8192,
	[Token(Token = "0x4000D9C")]
	AK_MusicSyncPoint = 16384,
	[Token(Token = "0x4000D9D")]
	AK_MusicSyncAll = 32512,
	[Token(Token = "0x4000D9E")]
	AK_MIDIEvent = 65536,
	[Token(Token = "0x4000D9F")]
	AK_CallbackBits = 1048575,
	[Token(Token = "0x4000DA0")]
	AK_EnableGetSourcePlayPosition = 1048576,
	[Token(Token = "0x4000DA1")]
	AK_EnableGetMusicPlayPosition = 2097152,
	[Token(Token = "0x4000DA2")]
	AK_EnableGetSourceStreamBuffering = 4194304,
	[Token(Token = "0x4000DA3")]
	AK_Monitoring = 536870912,
	[Token(Token = "0x4000DA4")]
	AK_AudioSourceChange = 587202560,
	[Token(Token = "0x4000DA5")]
	AK_Bank = 1073741824,
	[Token(Token = "0x4000DA6")]
	AK_AudioInterruption = 570425344
}
[Token(Token = "0x2000217")]
public class AkChannelConfig : IDisposable
{
	[Token(Token = "0x4000DA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000DA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000117")]
	public uint uNumChannels
	{
		[Token(Token = "0x600110C")]
		[Address(RVA = "0x4A1B78", Offset = "0x4A1B78", VA = "0x4A1B78")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600110B")]
		[Address(RVA = "0x4A1AE4", Offset = "0x4A1AE4", VA = "0x4A1AE4")]
		set
		{
		}
	}

	[Token(Token = "0x17000118")]
	public uint eConfigType
	{
		[Token(Token = "0x600110E")]
		[Address(RVA = "0x4A1C98", Offset = "0x4A1C98", VA = "0x4A1C98")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600110D")]
		[Address(RVA = "0x4A1C04", Offset = "0x4A1C04", VA = "0x4A1C04")]
		set
		{
		}
	}

	[Token(Token = "0x17000119")]
	public uint uChannelMask
	{
		[Token(Token = "0x6001110")]
		[Address(RVA = "0x4A1DB8", Offset = "0x4A1DB8", VA = "0x4A1DB8")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600110F")]
		[Address(RVA = "0x4A1D24", Offset = "0x4A1D24", VA = "0x4A1D24")]
		set
		{
		}
	}

	[Token(Token = "0x6001104")]
	[Address(RVA = "0x494C54", Offset = "0x494C54", VA = "0x494C54")]
	internal AkChannelConfig(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001105")]
	[Address(RVA = "0x4A17E0", Offset = "0x4A17E0", VA = "0x4A17E0")]
	public AkChannelConfig()
	{
	}

	[Token(Token = "0x6001106")]
	[Address(RVA = "0x4A1880", Offset = "0x4A1880", VA = "0x4A1880")]
	public AkChannelConfig(uint in_uNumChannels, uint in_uChannelMask)
	{
	}

	[Token(Token = "0x6001107")]
	[Address(RVA = "0x494B1C", Offset = "0x494B1C", VA = "0x494B1C")]
	internal static IntPtr getCPtr(AkChannelConfig obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001108")]
	[Address(RVA = "0x4A1930", Offset = "0x4A1930", VA = "0x4A1930", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001109")]
	[Address(RVA = "0x4A195C", Offset = "0x4A195C", VA = "0x4A195C", Slot = "1")]
	~AkChannelConfig()
	{
	}

	[Token(Token = "0x600110A")]
	[Address(RVA = "0x4A19BC", Offset = "0x4A19BC", VA = "0x4A19BC", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001111")]
	[Address(RVA = "0x4A1E44", Offset = "0x4A1E44", VA = "0x4A1E44")]
	public void Clear()
	{
	}

	[Token(Token = "0x6001112")]
	[Address(RVA = "0x4A1ED0", Offset = "0x4A1ED0", VA = "0x4A1ED0")]
	public void SetStandard(uint in_uChannelMask)
	{
	}

	[Token(Token = "0x6001113")]
	[Address(RVA = "0x4A1F64", Offset = "0x4A1F64", VA = "0x4A1F64")]
	public void SetStandardOrAnonymous(uint in_uNumChannels, uint in_uChannelMask)
	{
	}

	[Token(Token = "0x6001114")]
	[Address(RVA = "0x4A200C", Offset = "0x4A200C", VA = "0x4A200C")]
	public void SetAnonymous(uint in_uNumChannels)
	{
	}

	[Token(Token = "0x6001115")]
	[Address(RVA = "0x4A20A0", Offset = "0x4A20A0", VA = "0x4A20A0")]
	public void SetAmbisonic(uint in_uNumChannels)
	{
	}

	[Token(Token = "0x6001116")]
	[Address(RVA = "0x4A2134", Offset = "0x4A2134", VA = "0x4A2134")]
	public bool IsValid()
	{
		return default(bool);
	}

	[Token(Token = "0x6001117")]
	[Address(RVA = "0x4A21C0", Offset = "0x4A21C0", VA = "0x4A21C0")]
	public uint Serialize()
	{
		return default(uint);
	}

	[Token(Token = "0x6001118")]
	[Address(RVA = "0x4A224C", Offset = "0x4A224C", VA = "0x4A224C")]
	public void Deserialize(uint in_uChannelConfig)
	{
	}

	[Token(Token = "0x6001119")]
	[Address(RVA = "0x4A22E0", Offset = "0x4A22E0", VA = "0x4A22E0")]
	public AkChannelConfig RemoveLFE()
	{
		return null;
	}

	[Token(Token = "0x600111A")]
	[Address(RVA = "0x4A23A0", Offset = "0x4A23A0", VA = "0x4A23A0")]
	public AkChannelConfig RemoveCenter()
	{
		return null;
	}

	[Token(Token = "0x600111B")]
	[Address(RVA = "0x4A2460", Offset = "0x4A2460", VA = "0x4A2460")]
	public bool IsChannelConfigSupported()
	{
		return default(bool);
	}
}
[Token(Token = "0x2000218")]
public enum AkChannelConfigType
{
	[Token(Token = "0x4000DAA")]
	AK_ChannelConfigType_Anonymous,
	[Token(Token = "0x4000DAB")]
	AK_ChannelConfigType_Standard,
	[Token(Token = "0x4000DAC")]
	AK_ChannelConfigType_Ambisonic
}
[Token(Token = "0x2000219")]
public class AkChannelEmitter : IDisposable
{
	[Token(Token = "0x4000DAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000DAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700011A")]
	public AkTransform position
	{
		[Token(Token = "0x6001123")]
		[Address(RVA = "0x4A2868", Offset = "0x4A2868", VA = "0x4A2868")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001122")]
		[Address(RVA = "0x4A27C0", Offset = "0x4A27C0", VA = "0x4A27C0")]
		set
		{
		}
	}

	[Token(Token = "0x1700011B")]
	public uint uInputChannels
	{
		[Token(Token = "0x6001125")]
		[Address(RVA = "0x4A29D8", Offset = "0x4A29D8", VA = "0x4A29D8")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001124")]
		[Address(RVA = "0x4A2944", Offset = "0x4A2944", VA = "0x4A2944")]
		set
		{
		}
	}

	[Token(Token = "0x600111C")]
	[Address(RVA = "0x4A24EC", Offset = "0x4A24EC", VA = "0x4A24EC")]
	internal AkChannelEmitter(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x600111D")]
	[Address(RVA = "0x4A2514", Offset = "0x4A2514", VA = "0x4A2514")]
	public AkChannelEmitter()
	{
	}

	[Token(Token = "0x600111E")]
	[Address(RVA = "0x4A25B4", Offset = "0x4A25B4", VA = "0x4A25B4")]
	internal static IntPtr getCPtr(AkChannelEmitter obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600111F")]
	[Address(RVA = "0x4A260C", Offset = "0x4A260C", VA = "0x4A260C", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001120")]
	[Address(RVA = "0x4A2638", Offset = "0x4A2638", VA = "0x4A2638", Slot = "1")]
	~AkChannelEmitter()
	{
	}

	[Token(Token = "0x6001121")]
	[Address(RVA = "0x4A2698", Offset = "0x4A2698", VA = "0x4A2698", Slot = "6")]
	public virtual void Dispose()
	{
	}
}
[Token(Token = "0x200021A")]
public enum AkChannelOrdering
{
	[Token(Token = "0x4000DB0")]
	ChannelOrdering_Standard,
	[Token(Token = "0x4000DB1")]
	ChannelOrdering_RunTime
}
[Token(Token = "0x200021B")]
public enum AkConnectionType
{
	[Token(Token = "0x4000DB3")]
	ConnectionType_Direct,
	[Token(Token = "0x4000DB4")]
	ConnectionType_GameDefSend,
	[Token(Token = "0x4000DB5")]
	ConnectionType_UserDefSend
}
[Token(Token = "0x200021C")]
public enum AkCurveInterpolation
{
	[Token(Token = "0x4000DB7")]
	AkCurveInterpolation_Log3 = 0,
	[Token(Token = "0x4000DB8")]
	AkCurveInterpolation_Sine = 1,
	[Token(Token = "0x4000DB9")]
	AkCurveInterpolation_Log1 = 2,
	[Token(Token = "0x4000DBA")]
	AkCurveInterpolation_InvSCurve = 3,
	[Token(Token = "0x4000DBB")]
	AkCurveInterpolation_Linear = 4,
	[Token(Token = "0x4000DBC")]
	AkCurveInterpolation_SCurve = 5,
	[Token(Token = "0x4000DBD")]
	AkCurveInterpolation_Exp1 = 6,
	[Token(Token = "0x4000DBE")]
	AkCurveInterpolation_SineRecip = 7,
	[Token(Token = "0x4000DBF")]
	AkCurveInterpolation_Exp3 = 8,
	[Token(Token = "0x4000DC0")]
	AkCurveInterpolation_LastFadeCurve = 8,
	[Token(Token = "0x4000DC1")]
	AkCurveInterpolation_Constant = 9
}
[Token(Token = "0x200021D")]
public class AkDeviceSettings : IDisposable
{
	[Token(Token = "0x4000DC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000DC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700011C")]
	public IntPtr pIOMemory
	{
		[Token(Token = "0x600112D")]
		[Address(RVA = "0x4A5C68", Offset = "0x4A5C68", VA = "0x4A5C68")]
		get
		{
			return default(IntPtr);
		}
		[Token(Token = "0x600112C")]
		[Address(RVA = "0x4A5BD4", Offset = "0x4A5BD4", VA = "0x4A5BD4")]
		set
		{
		}
	}

	[Token(Token = "0x1700011D")]
	public uint uIOMemorySize
	{
		[Token(Token = "0x600112F")]
		[Address(RVA = "0x4A5CF4", Offset = "0x4A5CF4", VA = "0x4A5CF4")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600112E")]
		[Address(RVA = "0x4A31D8", Offset = "0x4A31D8", VA = "0x4A31D8")]
		set
		{
		}
	}

	[Token(Token = "0x1700011E")]
	public uint uIOMemoryAlignment
	{
		[Token(Token = "0x6001131")]
		[Address(RVA = "0x4A5E14", Offset = "0x4A5E14", VA = "0x4A5E14")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001130")]
		[Address(RVA = "0x4A5D80", Offset = "0x4A5D80", VA = "0x4A5D80")]
		set
		{
		}
	}

	[Token(Token = "0x1700011F")]
	public int ePoolAttributes
	{
		[Token(Token = "0x6001133")]
		[Address(RVA = "0x4A5F34", Offset = "0x4A5F34", VA = "0x4A5F34")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001132")]
		[Address(RVA = "0x4A5EA0", Offset = "0x4A5EA0", VA = "0x4A5EA0")]
		set
		{
		}
	}

	[Token(Token = "0x17000120")]
	public uint uGranularity
	{
		[Token(Token = "0x6001135")]
		[Address(RVA = "0x4A6054", Offset = "0x4A6054", VA = "0x4A6054")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001134")]
		[Address(RVA = "0x4A5FC0", Offset = "0x4A5FC0", VA = "0x4A5FC0")]
		set
		{
		}
	}

	[Token(Token = "0x17000121")]
	public uint uSchedulerTypeFlags
	{
		[Token(Token = "0x6001137")]
		[Address(RVA = "0x4A6174", Offset = "0x4A6174", VA = "0x4A6174")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001136")]
		[Address(RVA = "0x4A60E0", Offset = "0x4A60E0", VA = "0x4A60E0")]
		set
		{
		}
	}

	[Token(Token = "0x17000122")]
	public AkThreadProperties threadProperties
	{
		[Token(Token = "0x6001139")]
		[Address(RVA = "0x4A62A8", Offset = "0x4A62A8", VA = "0x4A62A8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001138")]
		[Address(RVA = "0x4A6200", Offset = "0x4A6200", VA = "0x4A6200")]
		set
		{
		}
	}

	[Token(Token = "0x17000123")]
	public float fTargetAutoStmBufferLength
	{
		[Token(Token = "0x600113B")]
		[Address(RVA = "0x4A6384", Offset = "0x4A6384", VA = "0x4A6384")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600113A")]
		[Address(RVA = "0x4A326C", Offset = "0x4A326C", VA = "0x4A326C")]
		set
		{
		}
	}

	[Token(Token = "0x17000124")]
	public uint uMaxConcurrentIO
	{
		[Token(Token = "0x600113D")]
		[Address(RVA = "0x4A64A4", Offset = "0x4A64A4", VA = "0x4A64A4")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600113C")]
		[Address(RVA = "0x4A6410", Offset = "0x4A6410", VA = "0x4A6410")]
		set
		{
		}
	}

	[Token(Token = "0x17000125")]
	public bool bUseStreamCache
	{
		[Token(Token = "0x600113F")]
		[Address(RVA = "0x4A6530", Offset = "0x4A6530", VA = "0x4A6530")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600113E")]
		[Address(RVA = "0x4A3300", Offset = "0x4A3300", VA = "0x4A3300")]
		set
		{
		}
	}

	[Token(Token = "0x17000126")]
	public uint uMaxCachePinnedBytes
	{
		[Token(Token = "0x6001141")]
		[Address(RVA = "0x4A65BC", Offset = "0x4A65BC", VA = "0x4A65BC")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001140")]
		[Address(RVA = "0x4A3394", Offset = "0x4A3394", VA = "0x4A3394")]
		set
		{
		}
	}

	[Token(Token = "0x6001126")]
	[Address(RVA = "0x4A5900", Offset = "0x4A5900", VA = "0x4A5900")]
	internal AkDeviceSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001127")]
	[Address(RVA = "0x4A5928", Offset = "0x4A5928", VA = "0x4A5928")]
	public AkDeviceSettings()
	{
	}

	[Token(Token = "0x6001128")]
	[Address(RVA = "0x4A59C8", Offset = "0x4A59C8", VA = "0x4A59C8")]
	internal static IntPtr getCPtr(AkDeviceSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001129")]
	[Address(RVA = "0x4A5A20", Offset = "0x4A5A20", VA = "0x4A5A20", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600112A")]
	[Address(RVA = "0x4A5A4C", Offset = "0x4A5A4C", VA = "0x4A5A4C", Slot = "1")]
	~AkDeviceSettings()
	{
	}

	[Token(Token = "0x600112B")]
	[Address(RVA = "0x4A5AAC", Offset = "0x4A5AAC", VA = "0x4A5AAC", Slot = "6")]
	public virtual void Dispose()
	{
	}
}
[Token(Token = "0x200021E")]
public enum AkDiffractionFlags
{
	[Token(Token = "0x4000DC5")]
	DiffractionFlags_UseBuiltInParam = 1,
	[Token(Token = "0x4000DC6")]
	DiffractionFlags_UseObstruction = 2,
	[Token(Token = "0x4000DC7")]
	DiffractionFlags_CalcEmitterVirtualPosition = 8,
	[Token(Token = "0x4000DC8")]
	DefaultDiffractionFlags = 11
}
[Token(Token = "0x200021F")]
public class AkDiffractionPathInfo : IDisposable
{
	[Token(Token = "0x4000DC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000DCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool swigCMemOwn;

	[Token(Token = "0x4000DCB")]
	public const uint kMaxNodes = 8u;

	[Token(Token = "0x17000127")]
	public AkTransform virtualPos
	{
		[Token(Token = "0x6001149")]
		[Address(RVA = "0x4A69C4", Offset = "0x4A69C4", VA = "0x4A69C4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001148")]
		[Address(RVA = "0x4A691C", Offset = "0x4A691C", VA = "0x4A691C")]
		set
		{
		}
	}

	[Token(Token = "0x17000128")]
	public uint nodeCount
	{
		[Token(Token = "0x600114B")]
		[Address(RVA = "0x4A6B34", Offset = "0x4A6B34", VA = "0x4A6B34")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600114A")]
		[Address(RVA = "0x4A6AA0", Offset = "0x4A6AA0", VA = "0x4A6AA0")]
		set
		{
		}
	}

	[Token(Token = "0x17000129")]
	public float diffraction
	{
		[Token(Token = "0x600114D")]
		[Address(RVA = "0x4A6C54", Offset = "0x4A6C54", VA = "0x4A6C54")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600114C")]
		[Address(RVA = "0x4A6BC0", Offset = "0x4A6BC0", VA = "0x4A6BC0")]
		set
		{
		}
	}

	[Token(Token = "0x1700012A")]
	public float totLength
	{
		[Token(Token = "0x600114F")]
		[Address(RVA = "0x4A6D74", Offset = "0x4A6D74", VA = "0x4A6D74")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600114E")]
		[Address(RVA = "0x4A6CE0", Offset = "0x4A6CE0", VA = "0x4A6CE0")]
		set
		{
		}
	}

	[Token(Token = "0x1700012B")]
	public float obstructionValue
	{
		[Token(Token = "0x6001151")]
		[Address(RVA = "0x4A6E94", Offset = "0x4A6E94", VA = "0x4A6E94")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001150")]
		[Address(RVA = "0x4A6E00", Offset = "0x4A6E00", VA = "0x4A6E00")]
		set
		{
		}
	}

	[Token(Token = "0x6001142")]
	[Address(RVA = "0x4A6648", Offset = "0x4A6648", VA = "0x4A6648")]
	internal AkDiffractionPathInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001143")]
	[Address(RVA = "0x4A6670", Offset = "0x4A6670", VA = "0x4A6670")]
	public AkDiffractionPathInfo()
	{
	}

	[Token(Token = "0x6001144")]
	[Address(RVA = "0x4A6710", Offset = "0x4A6710", VA = "0x4A6710")]
	internal static IntPtr getCPtr(AkDiffractionPathInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001145")]
	[Address(RVA = "0x4A6768", Offset = "0x4A6768", VA = "0x4A6768", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001146")]
	[Address(RVA = "0x4A6794", Offset = "0x4A6794", VA = "0x4A6794", Slot = "1")]
	~AkDiffractionPathInfo()
	{
	}

	[Token(Token = "0x6001147")]
	[Address(RVA = "0x4A67F4", Offset = "0x4A67F4", VA = "0x4A67F4", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001152")]
	[Address(RVA = "0x4A6F20", Offset = "0x4A6F20", VA = "0x4A6F20")]
	public static int GetSizeOf()
	{
		return default(int);
	}

	[Token(Token = "0x6001153")]
	[Address(RVA = "0x4A6FA0", Offset = "0x4A6FA0", VA = "0x4A6FA0")]
	public AkVector GetNodes(uint idx)
	{
		return null;
	}

	[Token(Token = "0x6001154")]
	[Address(RVA = "0x4A7084", Offset = "0x4A7084", VA = "0x4A7084")]
	public float GetAngles(uint idx)
	{
		return default(float);
	}

	[Token(Token = "0x6001155")]
	[Address(RVA = "0x4A7118", Offset = "0x4A7118", VA = "0x4A7118")]
	public void Clone(AkDiffractionPathInfo other)
	{
	}
}
[Token(Token = "0x2000220")]
public class AkDurationCallbackInfo : AkEventCallbackInfo
{
	[Token(Token = "0x4000DCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private IntPtr swigCPtr;

	[Token(Token = "0x1700012C")]
	public float fDuration
	{
		[Token(Token = "0x600115C")]
		[Address(RVA = "0x4A7988", Offset = "0x4A7988", VA = "0x4A7988")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700012D")]
	public float fEstimatedDuration
	{
		[Token(Token = "0x600115D")]
		[Address(RVA = "0x4A7A14", Offset = "0x4A7A14", VA = "0x4A7A14")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700012E")]
	public uint audioNodeID
	{
		[Token(Token = "0x600115E")]
		[Address(RVA = "0x4A7AA0", Offset = "0x4A7AA0", VA = "0x4A7AA0")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x1700012F")]
	public uint mediaID
	{
		[Token(Token = "0x600115F")]
		[Address(RVA = "0x4A7B2C", Offset = "0x4A7B2C", VA = "0x4A7B2C")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000130")]
	public bool bStreaming
	{
		[Token(Token = "0x6001160")]
		[Address(RVA = "0x4A7BB8", Offset = "0x4A7BB8", VA = "0x4A7BB8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001156")]
	[Address(RVA = "0x4A0BA8", Offset = "0x4A0BA8", VA = "0x4A0BA8")]
	internal AkDurationCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001157")]
	[Address(RVA = "0x4A7434", Offset = "0x4A7434", VA = "0x4A7434")]
	public AkDurationCallbackInfo()
	{
	}

	[Token(Token = "0x6001158")]
	[Address(RVA = "0x4A74C8", Offset = "0x4A74C8", VA = "0x4A74C8")]
	internal static IntPtr getCPtr(AkDurationCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001159")]
	[Address(RVA = "0x4A7520", Offset = "0x4A7520", VA = "0x4A7520", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600115A")]
	[Address(RVA = "0x4A7668", Offset = "0x4A7668", VA = "0x4A7668", Slot = "1")]
	~AkDurationCallbackInfo()
	{
	}

	[Token(Token = "0x600115B")]
	[Address(RVA = "0x4A7728", Offset = "0x4A7728", VA = "0x4A7728", Slot = "6")]
	public override void Dispose()
	{
	}
}
[Token(Token = "0x2000221")]
public class AkDynamicSequenceItemCallbackInfo : AkCallbackInfo
{
	[Token(Token = "0x4000DCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x17000131")]
	public uint playingID
	{
		[Token(Token = "0x6001167")]
		[Address(RVA = "0x4A7F64", Offset = "0x4A7F64", VA = "0x4A7F64")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000132")]
	public uint audioNodeID
	{
		[Token(Token = "0x6001168")]
		[Address(RVA = "0x4A7FF0", Offset = "0x4A7FF0", VA = "0x4A7FF0")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000133")]
	public IntPtr pCustomInfo
	{
		[Token(Token = "0x6001169")]
		[Address(RVA = "0x4A807C", Offset = "0x4A807C", VA = "0x4A807C")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x6001161")]
	[Address(RVA = "0x4A0A58", Offset = "0x4A0A58", VA = "0x4A0A58")]
	internal AkDynamicSequenceItemCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001162")]
	[Address(RVA = "0x4A7C44", Offset = "0x4A7C44", VA = "0x4A7C44")]
	public AkDynamicSequenceItemCallbackInfo()
	{
	}

	[Token(Token = "0x6001163")]
	[Address(RVA = "0x4A7CD8", Offset = "0x4A7CD8", VA = "0x4A7CD8")]
	internal static IntPtr getCPtr(AkDynamicSequenceItemCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001164")]
	[Address(RVA = "0x4A7D30", Offset = "0x4A7D30", VA = "0x4A7D30", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001165")]
	[Address(RVA = "0x4A7DDC", Offset = "0x4A7DDC", VA = "0x4A7DDC", Slot = "1")]
	~AkDynamicSequenceItemCallbackInfo()
	{
	}

	[Token(Token = "0x6001166")]
	[Address(RVA = "0x4A7E34", Offset = "0x4A7E34", VA = "0x4A7E34", Slot = "6")]
	public override void Dispose()
	{
	}
}
[Token(Token = "0x2000222")]
public enum AkDynamicSequenceType
{
	[Token(Token = "0x4000DCF")]
	DynamicSequenceType_SampleAccurate,
	[Token(Token = "0x4000DD0")]
	DynamicSequenceType_NormalTransition
}
[Token(Token = "0x2000223")]
public class AkEmitterSettings : IDisposable
{
	[Token(Token = "0x4000DD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000DD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000134")]
	public uint reflectAuxBusID
	{
		[Token(Token = "0x6001171")]
		[Address(RVA = "0x4A8890", Offset = "0x4A8890", VA = "0x4A8890")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001170")]
		[Address(RVA = "0x4A87FC", Offset = "0x4A87FC", VA = "0x4A87FC")]
		set
		{
		}
	}

	[Token(Token = "0x17000135")]
	public float reflectionMaxPathLength
	{
		[Token(Token = "0x6001173")]
		[Address(RVA = "0x4A89B0", Offset = "0x4A89B0", VA = "0x4A89B0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001172")]
		[Address(RVA = "0x4A891C", Offset = "0x4A891C", VA = "0x4A891C")]
		set
		{
		}
	}

	[Token(Token = "0x17000136")]
	public float reflectionsAuxBusGain
	{
		[Token(Token = "0x6001175")]
		[Address(RVA = "0x4A8AD0", Offset = "0x4A8AD0", VA = "0x4A8AD0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001174")]
		[Address(RVA = "0x4A8A3C", Offset = "0x4A8A3C", VA = "0x4A8A3C")]
		set
		{
		}
	}

	[Token(Token = "0x17000137")]
	public uint reflectionsOrder
	{
		[Token(Token = "0x6001177")]
		[Address(RVA = "0x4A8BF0", Offset = "0x4A8BF0", VA = "0x4A8BF0")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001176")]
		[Address(RVA = "0x4A8B5C", Offset = "0x4A8B5C", VA = "0x4A8B5C")]
		set
		{
		}
	}

	[Token(Token = "0x17000138")]
	public uint reflectorFilterMask
	{
		[Token(Token = "0x6001179")]
		[Address(RVA = "0x4A8D10", Offset = "0x4A8D10", VA = "0x4A8D10")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001178")]
		[Address(RVA = "0x4A8C7C", Offset = "0x4A8C7C", VA = "0x4A8C7C")]
		set
		{
		}
	}

	[Token(Token = "0x17000139")]
	public float roomReverbAuxBusGain
	{
		[Token(Token = "0x600117B")]
		[Address(RVA = "0x4A8E30", Offset = "0x4A8E30", VA = "0x4A8E30")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600117A")]
		[Address(RVA = "0x4A8D9C", Offset = "0x4A8D9C", VA = "0x4A8D9C")]
		set
		{
		}
	}

	[Token(Token = "0x1700013A")]
	public uint diffractionMaxEdges
	{
		[Token(Token = "0x600117D")]
		[Address(RVA = "0x4A8F50", Offset = "0x4A8F50", VA = "0x4A8F50")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600117C")]
		[Address(RVA = "0x4A8EBC", Offset = "0x4A8EBC", VA = "0x4A8EBC")]
		set
		{
		}
	}

	[Token(Token = "0x1700013B")]
	public uint diffractionMaxPaths
	{
		[Token(Token = "0x600117F")]
		[Address(RVA = "0x4A9070", Offset = "0x4A9070", VA = "0x4A9070")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600117E")]
		[Address(RVA = "0x4A8FDC", Offset = "0x4A8FDC", VA = "0x4A8FDC")]
		set
		{
		}
	}

	[Token(Token = "0x1700013C")]
	public float diffractionMaxPathLength
	{
		[Token(Token = "0x6001181")]
		[Address(RVA = "0x4A9190", Offset = "0x4A9190", VA = "0x4A9190")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001180")]
		[Address(RVA = "0x4A90FC", Offset = "0x4A90FC", VA = "0x4A90FC")]
		set
		{
		}
	}

	[Token(Token = "0x1700013D")]
	public byte useImageSources
	{
		[Token(Token = "0x6001183")]
		[Address(RVA = "0x4A92B0", Offset = "0x4A92B0", VA = "0x4A92B0")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x6001182")]
		[Address(RVA = "0x4A921C", Offset = "0x4A921C", VA = "0x4A921C")]
		set
		{
		}
	}

	[Token(Token = "0x600116A")]
	[Address(RVA = "0x4A8528", Offset = "0x4A8528", VA = "0x4A8528")]
	internal AkEmitterSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x600116B")]
	[Address(RVA = "0x4A8550", Offset = "0x4A8550", VA = "0x4A8550")]
	public AkEmitterSettings()
	{
	}

	[Token(Token = "0x600116C")]
	[Address(RVA = "0x4A85F0", Offset = "0x4A85F0", VA = "0x4A85F0")]
	internal static IntPtr getCPtr(AkEmitterSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600116D")]
	[Address(RVA = "0x4A8648", Offset = "0x4A8648", VA = "0x4A8648", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600116E")]
	[Address(RVA = "0x4A8674", Offset = "0x4A8674", VA = "0x4A8674", Slot = "1")]
	~AkEmitterSettings()
	{
	}

	[Token(Token = "0x600116F")]
	[Address(RVA = "0x4A86D4", Offset = "0x4A86D4", VA = "0x4A86D4", Slot = "6")]
	public virtual void Dispose()
	{
	}
}
[Token(Token = "0x2000224")]
public class AkEventCallbackInfo : AkCallbackInfo
{
	[Token(Token = "0x4000DD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x1700013E")]
	public uint playingID
	{
		[Token(Token = "0x600118A")]
		[Address(RVA = "0x496798", Offset = "0x496798", VA = "0x496798")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x1700013F")]
	public uint eventID
	{
		[Token(Token = "0x600118B")]
		[Address(RVA = "0x4A9F50", Offset = "0x4A9F50", VA = "0x4A9F50")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x6001184")]
	[Address(RVA = "0x4A09AC", Offset = "0x4A09AC", VA = "0x4A09AC")]
	internal AkEventCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001185")]
	[Address(RVA = "0x4A9E64", Offset = "0x4A9E64", VA = "0x4A9E64")]
	public AkEventCallbackInfo()
	{
	}

	[Token(Token = "0x6001186")]
	[Address(RVA = "0x4A9EF8", Offset = "0x4A9EF8", VA = "0x4A9EF8")]
	internal static IntPtr getCPtr(AkEventCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001187")]
	[Address(RVA = "0x4A75BC", Offset = "0x4A75BC", VA = "0x4A75BC", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001188")]
	[Address(RVA = "0x4A76D0", Offset = "0x4A76D0", VA = "0x4A76D0", Slot = "1")]
	~AkEventCallbackInfo()
	{
	}

	[Token(Token = "0x6001189")]
	[Address(RVA = "0x4A7858", Offset = "0x4A7858", VA = "0x4A7858", Slot = "6")]
	public override void Dispose()
	{
	}
}
[Token(Token = "0x2000225")]
public class AkExternalSourceInfo : IDisposable
{
	[Token(Token = "0x4000DD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000DD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000140")]
	public uint iExternalSrcCookie
	{
		[Token(Token = "0x6001196")]
		[Address(RVA = "0x4AD898", Offset = "0x4AD898", VA = "0x4AD898")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001195")]
		[Address(RVA = "0x4AD804", Offset = "0x4AD804", VA = "0x4AD804")]
		set
		{
		}
	}

	[Token(Token = "0x17000141")]
	public uint idCodec
	{
		[Token(Token = "0x6001198")]
		[Address(RVA = "0x4AD9B8", Offset = "0x4AD9B8", VA = "0x4AD9B8")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001197")]
		[Address(RVA = "0x4AD924", Offset = "0x4AD924", VA = "0x4AD924")]
		set
		{
		}
	}

	[Token(Token = "0x17000142")]
	public string szFile
	{
		[Token(Token = "0x600119A")]
		[Address(RVA = "0x4ADAD8", Offset = "0x4ADAD8", VA = "0x4ADAD8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001199")]
		[Address(RVA = "0x4ADA44", Offset = "0x4ADA44", VA = "0x4ADA44")]
		set
		{
		}
	}

	[Token(Token = "0x17000143")]
	public IntPtr pInMemory
	{
		[Token(Token = "0x600119C")]
		[Address(RVA = "0x4ADBF8", Offset = "0x4ADBF8", VA = "0x4ADBF8")]
		get
		{
			return default(IntPtr);
		}
		[Token(Token = "0x600119B")]
		[Address(RVA = "0x4ADB64", Offset = "0x4ADB64", VA = "0x4ADB64")]
		set
		{
		}
	}

	[Token(Token = "0x17000144")]
	public uint uiMemorySize
	{
		[Token(Token = "0x600119E")]
		[Address(RVA = "0x4ADD18", Offset = "0x4ADD18", VA = "0x4ADD18")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600119D")]
		[Address(RVA = "0x4ADC84", Offset = "0x4ADC84", VA = "0x4ADC84")]
		set
		{
		}
	}

	[Token(Token = "0x17000145")]
	public uint idFile
	{
		[Token(Token = "0x60011A0")]
		[Address(RVA = "0x4ADE38", Offset = "0x4ADE38", VA = "0x4ADE38")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600119F")]
		[Address(RVA = "0x4ADDA4", Offset = "0x4ADDA4", VA = "0x4ADDA4")]
		set
		{
		}
	}

	[Token(Token = "0x600118C")]
	[Address(RVA = "0x4AD2DC", Offset = "0x4AD2DC", VA = "0x4AD2DC")]
	internal AkExternalSourceInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x600118D")]
	[Address(RVA = "0x4AD304", Offset = "0x4AD304", VA = "0x4AD304")]
	public AkExternalSourceInfo()
	{
	}

	[Token(Token = "0x600118E")]
	[Address(RVA = "0x4AD3A4", Offset = "0x4AD3A4", VA = "0x4AD3A4")]
	public AkExternalSourceInfo(IntPtr in_pInMemory, uint in_uiMemorySize, uint in_iExternalSrcCookie, uint in_idCodec)
	{
	}

	[Token(Token = "0x600118F")]
	[Address(RVA = "0x4AD470", Offset = "0x4AD470", VA = "0x4AD470")]
	public AkExternalSourceInfo(string in_pszFileName, uint in_iExternalSrcCookie, uint in_idCodec)
	{
	}

	[Token(Token = "0x6001190")]
	[Address(RVA = "0x4AD534", Offset = "0x4AD534", VA = "0x4AD534")]
	public AkExternalSourceInfo(uint in_idFile, uint in_iExternalSrcCookie, uint in_idCodec)
	{
	}

	[Token(Token = "0x6001191")]
	[Address(RVA = "0x4AD5F8", Offset = "0x4AD5F8", VA = "0x4AD5F8")]
	internal static IntPtr getCPtr(AkExternalSourceInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001192")]
	[Address(RVA = "0x4AD650", Offset = "0x4AD650", VA = "0x4AD650", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001193")]
	[Address(RVA = "0x4AD67C", Offset = "0x4AD67C", VA = "0x4AD67C", Slot = "1")]
	~AkExternalSourceInfo()
	{
	}

	[Token(Token = "0x6001194")]
	[Address(RVA = "0x4AD6DC", Offset = "0x4AD6DC", VA = "0x4AD6DC", Slot = "6")]
	public virtual void Dispose()
	{
	}
}
[Token(Token = "0x2000226")]
public enum AkFloorPlane
{
	[Token(Token = "0x4000DD7")]
	AkFloorPlane_XZ = 0,
	[Token(Token = "0x4000DD8")]
	AkFloorPlane_XY = 1,
	[Token(Token = "0x4000DD9")]
	AkFloorPlane_YZ = 2,
	[Token(Token = "0x4000DDA")]
	AkFloorPlane_Default = 0
}
[Token(Token = "0x2000227")]
public enum AkGlobalCallbackLocation
{
	[Token(Token = "0x4000DDC")]
	AkGlobalCallbackLocation_Register = 1,
	[Token(Token = "0x4000DDD")]
	AkGlobalCallbackLocation_Begin = 2,
	[Token(Token = "0x4000DDE")]
	AkGlobalCallbackLocation_PreProcessMessageQueueForRender = 4,
	[Token(Token = "0x4000DDF")]
	AkGlobalCallbackLocation_PostMessagesProcessed = 8,
	[Token(Token = "0x4000DE0")]
	AkGlobalCallbackLocation_BeginRender = 16,
	[Token(Token = "0x4000DE1")]
	AkGlobalCallbackLocation_EndRender = 32,
	[Token(Token = "0x4000DE2")]
	AkGlobalCallbackLocation_End = 64,
	[Token(Token = "0x4000DE3")]
	AkGlobalCallbackLocation_Term = 128,
	[Token(Token = "0x4000DE4")]
	AkGlobalCallbackLocation_Monitor = 256,
	[Token(Token = "0x4000DE5")]
	AkGlobalCallbackLocation_MonitorRecap = 512,
	[Token(Token = "0x4000DE6")]
	AkGlobalCallbackLocation_Num = 10
}
[Token(Token = "0x2000228")]
public enum AkGroupType
{
	[Token(Token = "0x4000DE8")]
	AkGroupType_Switch,
	[Token(Token = "0x4000DE9")]
	AkGroupType_State
}
[Token(Token = "0x2000229")]
public class AkImageSourceParams : IDisposable
{
	[Token(Token = "0x4000DEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000DEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000146")]
	public AkVector sourcePosition
	{
		[Token(Token = "0x60011A9")]
		[Address(RVA = "0x4B0528", Offset = "0x4B0528", VA = "0x4B0528")]
		get
		{
			return null;
		}
		[Token(Token = "0x60011A8")]
		[Address(RVA = "0x4B0480", Offset = "0x4B0480", VA = "0x4B0480")]
		set
		{
		}
	}

	[Token(Token = "0x17000147")]
	public float fDistanceScalingFactor
	{
		[Token(Token = "0x60011AB")]
		[Address(RVA = "0x4B0698", Offset = "0x4B0698", VA = "0x4B0698")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60011AA")]
		[Address(RVA = "0x4B0604", Offset = "0x4B0604", VA = "0x4B0604")]
		set
		{
		}
	}

	[Token(Token = "0x17000148")]
	public float fLevel
	{
		[Token(Token = "0x60011AD")]
		[Address(RVA = "0x4B07B8", Offset = "0x4B07B8", VA = "0x4B07B8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60011AC")]
		[Address(RVA = "0x4B0724", Offset = "0x4B0724", VA = "0x4B0724")]
		set
		{
		}
	}

	[Token(Token = "0x17000149")]
	public float fDiffraction
	{
		[Token(Token = "0x60011AF")]
		[Address(RVA = "0x4B08D8", Offset = "0x4B08D8", VA = "0x4B08D8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60011AE")]
		[Address(RVA = "0x4B0844", Offset = "0x4B0844", VA = "0x4B0844")]
		set
		{
		}
	}

	[Token(Token = "0x1700014A")]
	public bool bDiffractedEmitterSide
	{
		[Token(Token = "0x60011B1")]
		[Address(RVA = "0x4B09F8", Offset = "0x4B09F8", VA = "0x4B09F8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60011B0")]
		[Address(RVA = "0x4B0964", Offset = "0x4B0964", VA = "0x4B0964")]
		set
		{
		}
	}

	[Token(Token = "0x1700014B")]
	public bool bDiffractedListenerSide
	{
		[Token(Token = "0x60011B3")]
		[Address(RVA = "0x4B0B18", Offset = "0x4B0B18", VA = "0x4B0B18")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60011B2")]
		[Address(RVA = "0x4B0A84", Offset = "0x4B0A84", VA = "0x4B0A84")]
		set
		{
		}
	}

	[Token(Token = "0x60011A1")]
	[Address(RVA = "0x4B00D4", Offset = "0x4B00D4", VA = "0x4B00D4")]
	internal AkImageSourceParams(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60011A2")]
	[Address(RVA = "0x4B00FC", Offset = "0x4B00FC", VA = "0x4B00FC")]
	public AkImageSourceParams()
	{
	}

	[Token(Token = "0x60011A3")]
	[Address(RVA = "0x4B019C", Offset = "0x4B019C", VA = "0x4B019C")]
	public AkImageSourceParams(AkVector in_sourcePosition, float in_fDistanceScalingFactor, float in_fLevel)
	{
	}

	[Token(Token = "0x60011A4")]
	[Address(RVA = "0x4B0274", Offset = "0x4B0274", VA = "0x4B0274")]
	internal static IntPtr getCPtr(AkImageSourceParams obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60011A5")]
	[Address(RVA = "0x4B02CC", Offset = "0x4B02CC", VA = "0x4B02CC", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60011A6")]
	[Address(RVA = "0x4B02F8", Offset = "0x4B02F8", VA = "0x4B02F8", Slot = "1")]
	~AkImageSourceParams()
	{
	}

	[Token(Token = "0x60011A7")]
	[Address(RVA = "0x4B0358", Offset = "0x4B0358", VA = "0x4B0358", Slot = "6")]
	public virtual void Dispose()
	{
	}
}
[Token(Token = "0x200022A")]
public class AkImageSourceSettings : IDisposable
{
	[Token(Token = "0x4000DEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000DED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700014C")]
	public AkImageSourceParams params_
	{
		[Token(Token = "0x60011BE")]
		[Address(RVA = "0x4B1154", Offset = "0x4B1154", VA = "0x4B1154")]
		get
		{
			return null;
		}
		[Token(Token = "0x60011BD")]
		[Address(RVA = "0x4B1078", Offset = "0x4B1078", VA = "0x4B1078")]
		set
		{
		}
	}

	[Token(Token = "0x60011B4")]
	[Address(RVA = "0x4B0BA4", Offset = "0x4B0BA4", VA = "0x4B0BA4")]
	internal AkImageSourceSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60011B5")]
	[Address(RVA = "0x4B0BCC", Offset = "0x4B0BCC", VA = "0x4B0BCC")]
	public AkImageSourceSettings()
	{
	}

	[Token(Token = "0x60011B6")]
	[Address(RVA = "0x4B0C6C", Offset = "0x4B0C6C", VA = "0x4B0C6C")]
	public AkImageSourceSettings(AkVector in_sourcePosition, float in_fDistanceScalingFactor, float in_fLevel)
	{
	}

	[Token(Token = "0x60011B7")]
	[Address(RVA = "0x4B0D44", Offset = "0x4B0D44", VA = "0x4B0D44")]
	internal static IntPtr getCPtr(AkImageSourceSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60011B8")]
	[Address(RVA = "0x4B0D9C", Offset = "0x4B0D9C", VA = "0x4B0D9C", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60011B9")]
	[Address(RVA = "0x4B0DC8", Offset = "0x4B0DC8", VA = "0x4B0DC8", Slot = "1")]
	~AkImageSourceSettings()
	{
	}

	[Token(Token = "0x60011BA")]
	[Address(RVA = "0x4B0E28", Offset = "0x4B0E28", VA = "0x4B0E28", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x60011BB")]
	[Address(RVA = "0x4B0F50", Offset = "0x4B0F50", VA = "0x4B0F50")]
	public void SetOneTexture(uint in_texture)
	{
	}

	[Token(Token = "0x60011BC")]
	[Address(RVA = "0x4B0FE4", Offset = "0x4B0FE4", VA = "0x4B0FE4")]
	public void SetName(string in_pName)
	{
	}
}
[Token(Token = "0x200022B")]
public class AkInitializationSettings : IDisposable
{
	[Token(Token = "0x4000DEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000DEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700014D")]
	public AkMemSettings memSettings
	{
		[Token(Token = "0x60011C6")]
		[Address(RVA = "0x4A4374", Offset = "0x4A4374", VA = "0x4A4374")]
		get
		{
			return null;
		}
		[Token(Token = "0x60011C5")]
		[Address(RVA = "0x4B1468", Offset = "0x4B1468", VA = "0x4B1468")]
		set
		{
		}
	}

	[Token(Token = "0x1700014E")]
	public AkStreamMgrSettings streamMgrSettings
	{
		[Token(Token = "0x60011C8")]
		[Address(RVA = "0x4A4560", Offset = "0x4A4560", VA = "0x4A4560")]
		get
		{
			return null;
		}
		[Token(Token = "0x60011C7")]
		[Address(RVA = "0x4B15C4", Offset = "0x4B15C4", VA = "0x4B15C4")]
		set
		{
		}
	}

	[Token(Token = "0x1700014F")]
	public AkDeviceSettings deviceSettings
	{
		[Token(Token = "0x60011CA")]
		[Address(RVA = "0x4A4480", Offset = "0x4A4480", VA = "0x4A4480")]
		get
		{
			return null;
		}
		[Token(Token = "0x60011C9")]
		[Address(RVA = "0x4B166C", Offset = "0x4B166C", VA = "0x4B166C")]
		set
		{
		}
	}

	[Token(Token = "0x17000150")]
	public AkInitSettings initSettings
	{
		[Token(Token = "0x60011CC")]
		[Address(RVA = "0x4A466C", Offset = "0x4A466C", VA = "0x4A466C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60011CB")]
		[Address(RVA = "0x4B1748", Offset = "0x4B1748", VA = "0x4B1748")]
		set
		{
		}
	}

	[Token(Token = "0x17000151")]
	public AkPlatformInitSettings platformSettings
	{
		[Token(Token = "0x60011CE")]
		[Address(RVA = "0x4A474C", Offset = "0x4A474C", VA = "0x4A474C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60011CD")]
		[Address(RVA = "0x4B18A4", Offset = "0x4B18A4", VA = "0x4B18A4")]
		set
		{
		}
	}

	[Token(Token = "0x17000152")]
	public AkMusicSettings musicSettings
	{
		[Token(Token = "0x60011D0")]
		[Address(RVA = "0x4A4828", Offset = "0x4A4828", VA = "0x4A4828")]
		get
		{
			return null;
		}
		[Token(Token = "0x60011CF")]
		[Address(RVA = "0x4B194C", Offset = "0x4B194C", VA = "0x4B194C")]
		set
		{
		}
	}

	[Token(Token = "0x17000153")]
	public uint preparePoolSize
	{
		[Token(Token = "0x60011D2")]
		[Address(RVA = "0x4B19F4", Offset = "0x4B19F4", VA = "0x4B19F4")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60011D1")]
		[Address(RVA = "0x4A493C", Offset = "0x4A493C", VA = "0x4A493C")]
		set
		{
		}
	}

	[Token(Token = "0x17000154")]
	public AkCommunicationSettings communicationSettings
	{
		[Token(Token = "0x60011D4")]
		[Address(RVA = "0x4B1B5C", Offset = "0x4B1B5C", VA = "0x4B1B5C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60011D3")]
		[Address(RVA = "0x4B1A80", Offset = "0x4B1A80", VA = "0x4B1A80")]
		set
		{
		}
	}

	[Token(Token = "0x17000155")]
	public AkUnityPlatformSpecificSettings unityPlatformSpecificSettings
	{
		[Token(Token = "0x60011D6")]
		[Address(RVA = "0x4B1CE4", Offset = "0x4B1CE4", VA = "0x4B1CE4")]
		get
		{
			return null;
		}
		[Token(Token = "0x60011D5")]
		[Address(RVA = "0x4B1C3C", Offset = "0x4B1C3C", VA = "0x4B1C3C")]
		set
		{
		}
	}

	[Token(Token = "0x60011BF")]
	[Address(RVA = "0x4B1234", Offset = "0x4B1234", VA = "0x4B1234")]
	internal AkInitializationSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60011C0")]
	[Address(RVA = "0x49CF60", Offset = "0x49CF60", VA = "0x49CF60")]
	public AkInitializationSettings()
	{
	}

	[Token(Token = "0x60011C1")]
	[Address(RVA = "0x4B125C", Offset = "0x4B125C", VA = "0x4B125C")]
	internal static IntPtr getCPtr(AkInitializationSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60011C2")]
	[Address(RVA = "0x4B12B4", Offset = "0x4B12B4", VA = "0x4B12B4", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60011C3")]
	[Address(RVA = "0x4B12E0", Offset = "0x4B12E0", VA = "0x4B12E0", Slot = "1")]
	~AkInitializationSettings()
	{
	}

	[Token(Token = "0x60011C4")]
	[Address(RVA = "0x4B1340", Offset = "0x4B1340", VA = "0x4B1340", Slot = "6")]
	public virtual void Dispose()
	{
	}
}
[Token(Token = "0x200022C")]
public class AkInitSettings : IDisposable
{
	[Token(Token = "0x4000DF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000DF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000156")]
	public int pfnAssertHook
	{
		[Token(Token = "0x60011DE")]
		[Address(RVA = "0x4B276C", Offset = "0x4B276C", VA = "0x4B276C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60011DD")]
		[Address(RVA = "0x4B2768", Offset = "0x4B2768", VA = "0x4B2768")]
		set
		{
		}
	}

	[Token(Token = "0x17000157")]
	public uint uMaxNumPaths
	{
		[Token(Token = "0x60011E0")]
		[Address(RVA = "0x4B2774", Offset = "0x4B2774", VA = "0x4B2774")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60011DF")]
		[Address(RVA = "0x4A4D78", Offset = "0x4A4D78", VA = "0x4A4D78")]
		set
		{
		}
	}

	[Token(Token = "0x17000158")]
	public uint uDefaultPoolSize
	{
		[Token(Token = "0x60011E2")]
		[Address(RVA = "0x4B2800", Offset = "0x4B2800", VA = "0x4B2800")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60011E1")]
		[Address(RVA = "0x4A4E0C", Offset = "0x4A4E0C", VA = "0x4A4E0C")]
		set
		{
		}
	}

	[Token(Token = "0x17000159")]
	public float fDefaultPoolRatioThreshold
	{
		[Token(Token = "0x60011E4")]
		[Address(RVA = "0x4B288C", Offset = "0x4B288C", VA = "0x4B288C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60011E3")]
		[Address(RVA = "0x4A4EA0", Offset = "0x4A4EA0", VA = "0x4A4EA0")]
		set
		{
		}
	}

	[Token(Token = "0x1700015A")]
	public uint uCommandQueueSize
	{
		[Token(Token = "0x60011E6")]
		[Address(RVA = "0x4B2918", Offset = "0x4B2918", VA = "0x4B2918")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60011E5")]
		[Address(RVA = "0x4A4F34", Offset = "0x4A4F34", VA = "0x4A4F34")]
		set
		{
		}
	}

	[Token(Token = "0x1700015B")]
	public int uPrepareEventMemoryPoolID
	{
		[Token(Token = "0x60011E8")]
		[Address(RVA = "0x4B29A4", Offset = "0x4B29A4", VA = "0x4B29A4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60011E7")]
		[Address(RVA = "0x4A350C", Offset = "0x4A350C", VA = "0x4A350C")]
		set
		{
		}
	}

	[Token(Token = "0x1700015C")]
	public bool bEnableGameSyncPreparation
	{
		[Token(Token = "0x60011EA")]
		[Address(RVA = "0x4B2A30", Offset = "0x4B2A30", VA = "0x4B2A30")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60011E9")]
		[Address(RVA = "0x4A35A0", Offset = "0x4A35A0", VA = "0x4A35A0")]
		set
		{
		}
	}

	[Token(Token = "0x1700015D")]
	public uint uContinuousPlaybackLookAhead
	{
		[Token(Token = "0x60011EC")]
		[Address(RVA = "0x4B2ABC", Offset = "0x4B2ABC", VA = "0x4B2ABC")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60011EB")]
		[Address(RVA = "0x4A3634", Offset = "0x4A3634", VA = "0x4A3634")]
		set
		{
		}
	}

	[Token(Token = "0x1700015E")]
	public uint uNumSamplesPerFrame
	{
		[Token(Token = "0x60011EE")]
		[Address(RVA = "0x4B2B48", Offset = "0x4B2B48", VA = "0x4B2B48")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60011ED")]
		[Address(RVA = "0x4A4FC8", Offset = "0x4A4FC8", VA = "0x4A4FC8")]
		set
		{
		}
	}

	[Token(Token = "0x1700015F")]
	public uint uMonitorPoolSize
	{
		[Token(Token = "0x60011F0")]
		[Address(RVA = "0x4B2BD4", Offset = "0x4B2BD4", VA = "0x4B2BD4")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60011EF")]
		[Address(RVA = "0x4A36C8", Offset = "0x4A36C8", VA = "0x4A36C8")]
		set
		{
		}
	}

	[Token(Token = "0x17000160")]
	public uint uMonitorQueuePoolSize
	{
		[Token(Token = "0x60011F2")]
		[Address(RVA = "0x4B2C60", Offset = "0x4B2C60", VA = "0x4B2C60")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60011F1")]
		[Address(RVA = "0x4A375C", Offset = "0x4A375C", VA = "0x4A375C")]
		set
		{
		}
	}

	[Token(Token = "0x17000161")]
	public AkOutputSettings settingsMainOutput
	{
		[Token(Token = "0x60011F4")]
		[Address(RVA = "0x4A505C", Offset = "0x4A505C", VA = "0x4A505C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60011F3")]
		[Address(RVA = "0x4B2CEC", Offset = "0x4B2CEC", VA = "0x4B2CEC")]
		set
		{
		}
	}

	[Token(Token = "0x17000162")]
	public uint uMaxHardwareTimeoutMs
	{
		[Token(Token = "0x60011F6")]
		[Address(RVA = "0x4B2D94", Offset = "0x4B2D94", VA = "0x4B2D94")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60011F5")]
		[Address(RVA = "0x4A37F0", Offset = "0x4A37F0", VA = "0x4A37F0")]
		set
		{
		}
	}

	[Token(Token = "0x17000163")]
	public bool bUseSoundBankMgrThread
	{
		[Token(Token = "0x60011F8")]
		[Address(RVA = "0x4B2EB4", Offset = "0x4B2EB4", VA = "0x4B2EB4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60011F7")]
		[Address(RVA = "0x4B2E20", Offset = "0x4B2E20", VA = "0x4B2E20")]
		set
		{
		}
	}

	[Token(Token = "0x17000164")]
	public bool bUseLEngineThread
	{
		[Token(Token = "0x60011FA")]
		[Address(RVA = "0x4B2FD4", Offset = "0x4B2FD4", VA = "0x4B2FD4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60011F9")]
		[Address(RVA = "0x4B2F40", Offset = "0x4B2F40", VA = "0x4B2F40")]
		set
		{
		}
	}

	[Token(Token = "0x17000165")]
	public string szPluginDLLPath
	{
		[Token(Token = "0x60011FC")]
		[Address(RVA = "0x4B3060", Offset = "0x4B3060", VA = "0x4B3060")]
		get
		{
			return null;
		}
		[Token(Token = "0x60011FB")]
		[Address(RVA = "0x4A5138", Offset = "0x4A5138", VA = "0x4A5138")]
		set
		{
		}
	}

	[Token(Token = "0x17000166")]
	public AkFloorPlane eFloorPlane
	{
		[Token(Token = "0x60011FE")]
		[Address(RVA = "0x4B31C0", Offset = "0x4B31C0", VA = "0x4B31C0")]
		get
		{
			return default(AkFloorPlane);
		}
		[Token(Token = "0x60011FD")]
		[Address(RVA = "0x4B312C", Offset = "0x4B312C", VA = "0x4B312C")]
		set
		{
		}
	}

	[Token(Token = "0x60011D7")]
	[Address(RVA = "0x4B187C", Offset = "0x4B187C", VA = "0x4B187C")]
	internal AkInitSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60011D8")]
	[Address(RVA = "0x4B2514", Offset = "0x4B2514", VA = "0x4B2514")]
	public AkInitSettings()
	{
	}

	[Token(Token = "0x60011D9")]
	[Address(RVA = "0x4B1824", Offset = "0x4B1824", VA = "0x4B1824")]
	internal static IntPtr getCPtr(AkInitSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60011DA")]
	[Address(RVA = "0x4B25B4", Offset = "0x4B25B4", VA = "0x4B25B4", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60011DB")]
	[Address(RVA = "0x4B25E0", Offset = "0x4B25E0", VA = "0x4B25E0", Slot = "1")]
	~AkInitSettings()
	{
	}

	[Token(Token = "0x60011DC")]
	[Address(RVA = "0x4B2640", Offset = "0x4B2640", VA = "0x4B2640", Slot = "6")]
	public virtual void Dispose()
	{
	}
}
[Token(Token = "0x200022D")]
public class AkIterator : IDisposable
{
	[Token(Token = "0x4000DF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000DF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000167")]
	public AkPlaylistItem pItem
	{
		[Token(Token = "0x6001206")]
		[Address(RVA = "0x4B35C8", Offset = "0x4B35C8", VA = "0x4B35C8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001205")]
		[Address(RVA = "0x4B3520", Offset = "0x4B3520", VA = "0x4B3520")]
		set
		{
		}
	}

	[Token(Token = "0x60011FF")]
	[Address(RVA = "0x4B324C", Offset = "0x4B324C", VA = "0x4B324C")]
	internal AkIterator(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001200")]
	[Address(RVA = "0x4B3274", Offset = "0x4B3274", VA = "0x4B3274")]
	public AkIterator()
	{
	}

	[Token(Token = "0x6001201")]
	[Address(RVA = "0x4B3314", Offset = "0x4B3314", VA = "0x4B3314")]
	internal static IntPtr getCPtr(AkIterator obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001202")]
	[Address(RVA = "0x4B336C", Offset = "0x4B336C", VA = "0x4B336C", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001203")]
	[Address(RVA = "0x4B3398", Offset = "0x4B3398", VA = "0x4B3398", Slot = "1")]
	~AkIterator()
	{
	}

	[Token(Token = "0x6001204")]
	[Address(RVA = "0x4B33F8", Offset = "0x4B33F8", VA = "0x4B33F8", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001207")]
	[Address(RVA = "0x4B36A4", Offset = "0x4B36A4", VA = "0x4B36A4")]
	public AkIterator NextIter()
	{
		return null;
	}

	[Token(Token = "0x6001208")]
	[Address(RVA = "0x4B3764", Offset = "0x4B3764", VA = "0x4B3764")]
	public AkIterator PrevIter()
	{
		return null;
	}

	[Token(Token = "0x6001209")]
	[Address(RVA = "0x4B3824", Offset = "0x4B3824", VA = "0x4B3824")]
	public AkPlaylistItem GetItem()
	{
		return null;
	}

	[Token(Token = "0x600120A")]
	[Address(RVA = "0x4B38E0", Offset = "0x4B38E0", VA = "0x4B38E0")]
	public bool IsEqualTo(AkIterator in_rOp)
	{
		return default(bool);
	}

	[Token(Token = "0x600120B")]
	[Address(RVA = "0x4B39BC", Offset = "0x4B39BC", VA = "0x4B39BC")]
	public bool IsDifferentFrom(AkIterator in_rOp)
	{
		return default(bool);
	}
}
[Token(Token = "0x200022E")]
public class AkMarkerCallbackInfo : AkEventCallbackInfo
{
	[Token(Token = "0x4000DF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private IntPtr swigCPtr;

	[Token(Token = "0x17000168")]
	public uint uIdentifier
	{
		[Token(Token = "0x6001212")]
		[Address(RVA = "0x4B49F4", Offset = "0x4B49F4", VA = "0x4B49F4")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000169")]
	public uint uPosition
	{
		[Token(Token = "0x6001213")]
		[Address(RVA = "0x4B4A80", Offset = "0x4B4A80", VA = "0x4B4A80")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x1700016A")]
	public string strLabel
	{
		[Token(Token = "0x6001214")]
		[Address(RVA = "0x4B4B0C", Offset = "0x4B4B0C", VA = "0x4B4B0C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600120C")]
	[Address(RVA = "0x4A0B04", Offset = "0x4A0B04", VA = "0x4A0B04")]
	internal AkMarkerCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x600120D")]
	[Address(RVA = "0x4B46D4", Offset = "0x4B46D4", VA = "0x4B46D4")]
	public AkMarkerCallbackInfo()
	{
	}

	[Token(Token = "0x600120E")]
	[Address(RVA = "0x4B4768", Offset = "0x4B4768", VA = "0x4B4768")]
	internal static IntPtr getCPtr(AkMarkerCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600120F")]
	[Address(RVA = "0x4B47C0", Offset = "0x4B47C0", VA = "0x4B47C0", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001210")]
	[Address(RVA = "0x4B485C", Offset = "0x4B485C", VA = "0x4B485C", Slot = "1")]
	~AkMarkerCallbackInfo()
	{
	}

	[Token(Token = "0x6001211")]
	[Address(RVA = "0x4B48C4", Offset = "0x4B48C4", VA = "0x4B48C4", Slot = "6")]
	public override void Dispose()
	{
	}
}
[Token(Token = "0x200022F")]
public class AkMemSettings : IDisposable
{
	[Token(Token = "0x4000DF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000DF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700016B")]
	public uint uMaxNumPools
	{
		[Token(Token = "0x600121C")]
		[Address(RVA = "0x4B59B8", Offset = "0x4B59B8", VA = "0x4B59B8")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600121B")]
		[Address(RVA = "0x4A4BDC", Offset = "0x4A4BDC", VA = "0x4A4BDC")]
		set
		{
		}
	}

	[Token(Token = "0x1700016C")]
	public uint uDebugFlags
	{
		[Token(Token = "0x600121E")]
		[Address(RVA = "0x4B5AD8", Offset = "0x4B5AD8", VA = "0x4B5AD8")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600121D")]
		[Address(RVA = "0x4B5A44", Offset = "0x4B5A44", VA = "0x4B5A44")]
		set
		{
		}
	}

	[Token(Token = "0x6001215")]
	[Address(RVA = "0x4B159C", Offset = "0x4B159C", VA = "0x4B159C")]
	internal AkMemSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001216")]
	[Address(RVA = "0x4B5764", Offset = "0x4B5764", VA = "0x4B5764")]
	public AkMemSettings()
	{
	}

	[Token(Token = "0x6001217")]
	[Address(RVA = "0x4B1544", Offset = "0x4B1544", VA = "0x4B1544")]
	internal static IntPtr getCPtr(AkMemSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001218")]
	[Address(RVA = "0x4B5804", Offset = "0x4B5804", VA = "0x4B5804", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001219")]
	[Address(RVA = "0x4B5830", Offset = "0x4B5830", VA = "0x4B5830", Slot = "1")]
	~AkMemSettings()
	{
	}

	[Token(Token = "0x600121A")]
	[Address(RVA = "0x4B5890", Offset = "0x4B5890", VA = "0x4B5890", Slot = "6")]
	public virtual void Dispose()
	{
	}
}
[Token(Token = "0x2000230")]
public enum AkMeteringFlags
{
	[Token(Token = "0x4000DF8")]
	AK_NoMetering = 0,
	[Token(Token = "0x4000DF9")]
	AK_EnableBusMeter_Peak = 1,
	[Token(Token = "0x4000DFA")]
	AK_EnableBusMeter_TruePeak = 2,
	[Token(Token = "0x4000DFB")]
	AK_EnableBusMeter_RMS = 4,
	[Token(Token = "0x4000DFC")]
	AK_EnableBusMeter_KPower = 0x10,
	[Token(Token = "0x4000DFD")]
	AK_EnableBusMeter_3DMeter = 0x20
}
[Token(Token = "0x2000231")]
public enum AkMIDICcTypes
{
	[Token(Token = "0x4000DFF")]
	BANK_SELECT_COARSE = 0,
	[Token(Token = "0x4000E00")]
	MOD_WHEEL_COARSE = 1,
	[Token(Token = "0x4000E01")]
	BREATH_CTRL_COARSE = 2,
	[Token(Token = "0x4000E02")]
	CTRL_3_COARSE = 3,
	[Token(Token = "0x4000E03")]
	FOOT_PEDAL_COARSE = 4,
	[Token(Token = "0x4000E04")]
	PORTAMENTO_COARSE = 5,
	[Token(Token = "0x4000E05")]
	DATA_ENTRY_COARSE = 6,
	[Token(Token = "0x4000E06")]
	VOLUME_COARSE = 7,
	[Token(Token = "0x4000E07")]
	BALANCE_COARSE = 8,
	[Token(Token = "0x4000E08")]
	CTRL_9_COARSE = 9,
	[Token(Token = "0x4000E09")]
	PAN_POSITION_COARSE = 10,
	[Token(Token = "0x4000E0A")]
	EXPRESSION_COARSE = 11,
	[Token(Token = "0x4000E0B")]
	EFFECT_CTRL_1_COARSE = 12,
	[Token(Token = "0x4000E0C")]
	EFFECT_CTRL_2_COARSE = 13,
	[Token(Token = "0x4000E0D")]
	CTRL_14_COARSE = 14,
	[Token(Token = "0x4000E0E")]
	CTRL_15_COARSE = 15,
	[Token(Token = "0x4000E0F")]
	GEN_SLIDER_1 = 16,
	[Token(Token = "0x4000E10")]
	GEN_SLIDER_2 = 17,
	[Token(Token = "0x4000E11")]
	GEN_SLIDER_3 = 18,
	[Token(Token = "0x4000E12")]
	GEN_SLIDER_4 = 19,
	[Token(Token = "0x4000E13")]
	CTRL_20_COARSE = 20,
	[Token(Token = "0x4000E14")]
	CTRL_21_COARSE = 21,
	[Token(Token = "0x4000E15")]
	CTRL_22_COARSE = 22,
	[Token(Token = "0x4000E16")]
	CTRL_23_COARSE = 23,
	[Token(Token = "0x4000E17")]
	CTRL_24_COARSE = 24,
	[Token(Token = "0x4000E18")]
	CTRL_25_COARSE = 25,
	[Token(Token = "0x4000E19")]
	CTRL_26_COARSE = 26,
	[Token(Token = "0x4000E1A")]
	CTRL_27_COARSE = 27,
	[Token(Token = "0x4000E1B")]
	CTRL_28_COARSE = 28,
	[Token(Token = "0x4000E1C")]
	CTRL_29_COARSE = 29,
	[Token(Token = "0x4000E1D")]
	CTRL_30_COARSE = 30,
	[Token(Token = "0x4000E1E")]
	CTRL_31_COARSE = 31,
	[Token(Token = "0x4000E1F")]
	BANK_SELECT_FINE = 32,
	[Token(Token = "0x4000E20")]
	MOD_WHEEL_FINE = 33,
	[Token(Token = "0x4000E21")]
	BREATH_CTRL_FINE = 34,
	[Token(Token = "0x4000E22")]
	CTRL_3_FINE = 35,
	[Token(Token = "0x4000E23")]
	FOOT_PEDAL_FINE = 36,
	[Token(Token = "0x4000E24")]
	PORTAMENTO_FINE = 37,
	[Token(Token = "0x4000E25")]
	DATA_ENTRY_FINE = 38,
	[Token(Token = "0x4000E26")]
	VOLUME_FINE = 39,
	[Token(Token = "0x4000E27")]
	BALANCE_FINE = 40,
	[Token(Token = "0x4000E28")]
	CTRL_9_FINE = 41,
	[Token(Token = "0x4000E29")]
	PAN_POSITION_FINE = 42,
	[Token(Token = "0x4000E2A")]
	EXPRESSION_FINE = 43,
	[Token(Token = "0x4000E2B")]
	EFFECT_CTRL_1_FINE = 44,
	[Token(Token = "0x4000E2C")]
	EFFECT_CTRL_2_FINE = 45,
	[Token(Token = "0x4000E2D")]
	CTRL_14_FINE = 46,
	[Token(Token = "0x4000E2E")]
	CTRL_15_FINE = 47,
	[Token(Token = "0x4000E2F")]
	CTRL_20_FINE = 52,
	[Token(Token = "0x4000E30")]
	CTRL_21_FINE = 53,
	[Token(Token = "0x4000E31")]
	CTRL_22_FINE = 54,
	[Token(Token = "0x4000E32")]
	CTRL_23_FINE = 55,
	[Token(Token = "0x4000E33")]
	CTRL_24_FINE = 56,
	[Token(Token = "0x4000E34")]
	CTRL_25_FINE = 57,
	[Token(Token = "0x4000E35")]
	CTRL_26_FINE = 58,
	[Token(Token = "0x4000E36")]
	CTRL_27_FINE = 59,
	[Token(Token = "0x4000E37")]
	CTRL_28_FINE = 60,
	[Token(Token = "0x4000E38")]
	CTRL_29_FINE = 61,
	[Token(Token = "0x4000E39")]
	CTRL_30_FINE = 62,
	[Token(Token = "0x4000E3A")]
	CTRL_31_FINE = 63,
	[Token(Token = "0x4000E3B")]
	HOLD_PEDAL = 64,
	[Token(Token = "0x4000E3C")]
	PORTAMENTO_ON_OFF = 65,
	[Token(Token = "0x4000E3D")]
	SUSTENUTO_PEDAL = 66,
	[Token(Token = "0x4000E3E")]
	SOFT_PEDAL = 67,
	[Token(Token = "0x4000E3F")]
	LEGATO_PEDAL = 68,
	[Token(Token = "0x4000E40")]
	HOLD_PEDAL_2 = 69,
	[Token(Token = "0x4000E41")]
	SOUND_VARIATION = 70,
	[Token(Token = "0x4000E42")]
	SOUND_TIMBRE = 71,
	[Token(Token = "0x4000E43")]
	SOUND_RELEASE_TIME = 72,
	[Token(Token = "0x4000E44")]
	SOUND_ATTACK_TIME = 73,
	[Token(Token = "0x4000E45")]
	SOUND_BRIGHTNESS = 74,
	[Token(Token = "0x4000E46")]
	SOUND_CTRL_6 = 75,
	[Token(Token = "0x4000E47")]
	SOUND_CTRL_7 = 76,
	[Token(Token = "0x4000E48")]
	SOUND_CTRL_8 = 77,
	[Token(Token = "0x4000E49")]
	SOUND_CTRL_9 = 78,
	[Token(Token = "0x4000E4A")]
	SOUND_CTRL_10 = 79,
	[Token(Token = "0x4000E4B")]
	GENERAL_BUTTON_1 = 80,
	[Token(Token = "0x4000E4C")]
	GENERAL_BUTTON_2 = 81,
	[Token(Token = "0x4000E4D")]
	GENERAL_BUTTON_3 = 82,
	[Token(Token = "0x4000E4E")]
	GENERAL_BUTTON_4 = 83,
	[Token(Token = "0x4000E4F")]
	REVERB_LEVEL = 91,
	[Token(Token = "0x4000E50")]
	TREMOLO_LEVEL = 92,
	[Token(Token = "0x4000E51")]
	CHORUS_LEVEL = 93,
	[Token(Token = "0x4000E52")]
	CELESTE_LEVEL = 94,
	[Token(Token = "0x4000E53")]
	PHASER_LEVEL = 95,
	[Token(Token = "0x4000E54")]
	DATA_BUTTON_P1 = 96,
	[Token(Token = "0x4000E55")]
	DATA_BUTTON_M1 = 97,
	[Token(Token = "0x4000E56")]
	NON_REGISTER_COARSE = 98,
	[Token(Token = "0x4000E57")]
	NON_REGISTER_FINE = 99,
	[Token(Token = "0x4000E58")]
	ALL_SOUND_OFF = 120,
	[Token(Token = "0x4000E59")]
	ALL_CONTROLLERS_OFF = 121,
	[Token(Token = "0x4000E5A")]
	LOCAL_KEYBOARD = 122,
	[Token(Token = "0x4000E5B")]
	ALL_NOTES_OFF = 123,
	[Token(Token = "0x4000E5C")]
	OMNI_MODE_OFF = 124,
	[Token(Token = "0x4000E5D")]
	OMNI_MODE_ON = 125,
	[Token(Token = "0x4000E5E")]
	OMNI_MONOPHONIC_ON = 126,
	[Token(Token = "0x4000E5F")]
	OMNI_POLYPHONIC_ON = 127
}
[Token(Token = "0x2000232")]
public class AkMIDIEvent : IDisposable
{
	[Token(Token = "0x2000233")]
	public class tGen : IDisposable
	{
		[Token(Token = "0x4000E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private IntPtr swigCPtr;

		[Token(Token = "0x4000E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		protected bool swigCMemOwn;

		[Token(Token = "0x17000180")]
		public byte byParam1
		{
			[Token(Token = "0x6001252")]
			[Address(RVA = "0x4B8594", Offset = "0x4B8594", VA = "0x4B8594")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x6001251")]
			[Address(RVA = "0x4B8500", Offset = "0x4B8500", VA = "0x4B8500")]
			set
			{
			}
		}

		[Token(Token = "0x17000181")]
		public byte byParam2
		{
			[Token(Token = "0x6001254")]
			[Address(RVA = "0x4B86B4", Offset = "0x4B86B4", VA = "0x4B86B4")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x6001253")]
			[Address(RVA = "0x4B8620", Offset = "0x4B8620", VA = "0x4B8620")]
			set
			{
			}
		}

		[Token(Token = "0x600124B")]
		[Address(RVA = "0x4B616C", Offset = "0x4B616C", VA = "0x4B616C")]
		internal tGen(IntPtr cPtr, bool cMemoryOwn)
		{
		}

		[Token(Token = "0x600124C")]
		[Address(RVA = "0x4B82AC", Offset = "0x4B82AC", VA = "0x4B82AC")]
		public tGen()
		{
		}

		[Token(Token = "0x600124D")]
		[Address(RVA = "0x4B6034", Offset = "0x4B6034", VA = "0x4B6034")]
		internal static IntPtr getCPtr(tGen obj)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x600124E")]
		[Address(RVA = "0x4B834C", Offset = "0x4B834C", VA = "0x4B834C", Slot = "5")]
		internal virtual void setCPtr(IntPtr cPtr)
		{
		}

		[Token(Token = "0x600124F")]
		[Address(RVA = "0x4B8378", Offset = "0x4B8378", VA = "0x4B8378", Slot = "1")]
		~tGen()
		{
		}

		[Token(Token = "0x6001250")]
		[Address(RVA = "0x4B83D8", Offset = "0x4B83D8", VA = "0x4B83D8", Slot = "6")]
		public virtual void Dispose()
		{
		}
	}

	[Token(Token = "0x2000234")]
	public class tNoteOnOff : IDisposable
	{
		[Token(Token = "0x4000E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private IntPtr swigCPtr;

		[Token(Token = "0x4000E65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		protected bool swigCMemOwn;

		[Token(Token = "0x17000182")]
		public byte byNote
		{
			[Token(Token = "0x600125C")]
			[Address(RVA = "0x4B8EBC", Offset = "0x4B8EBC", VA = "0x4B8EBC")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x600125B")]
			[Address(RVA = "0x4B8E28", Offset = "0x4B8E28", VA = "0x4B8E28")]
			set
			{
			}
		}

		[Token(Token = "0x17000183")]
		public byte byVelocity
		{
			[Token(Token = "0x600125E")]
			[Address(RVA = "0x4B8FDC", Offset = "0x4B8FDC", VA = "0x4B8FDC")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x600125D")]
			[Address(RVA = "0x4B8F48", Offset = "0x4B8F48", VA = "0x4B8F48")]
			set
			{
			}
		}

		[Token(Token = "0x6001255")]
		[Address(RVA = "0x4B65E4", Offset = "0x4B65E4", VA = "0x4B65E4")]
		internal tNoteOnOff(IntPtr cPtr, bool cMemoryOwn)
		{
		}

		[Token(Token = "0x6001256")]
		[Address(RVA = "0x4B8BD4", Offset = "0x4B8BD4", VA = "0x4B8BD4")]
		public tNoteOnOff()
		{
		}

		[Token(Token = "0x6001257")]
		[Address(RVA = "0x4B64AC", Offset = "0x4B64AC", VA = "0x4B64AC")]
		internal static IntPtr getCPtr(tNoteOnOff obj)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001258")]
		[Address(RVA = "0x4B8C74", Offset = "0x4B8C74", VA = "0x4B8C74", Slot = "5")]
		internal virtual void setCPtr(IntPtr cPtr)
		{
		}

		[Token(Token = "0x6001259")]
		[Address(RVA = "0x4B8CA0", Offset = "0x4B8CA0", VA = "0x4B8CA0", Slot = "1")]
		~tNoteOnOff()
		{
		}

		[Token(Token = "0x600125A")]
		[Address(RVA = "0x4B8D00", Offset = "0x4B8D00", VA = "0x4B8D00", Slot = "6")]
		public virtual void Dispose()
		{
		}
	}

	[Token(Token = "0x2000235")]
	public class tCc : IDisposable
	{
		[Token(Token = "0x4000E66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private IntPtr swigCPtr;

		[Token(Token = "0x4000E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		protected bool swigCMemOwn;

		[Token(Token = "0x17000184")]
		public byte byCc
		{
			[Token(Token = "0x6001266")]
			[Address(RVA = "0x4B7D8C", Offset = "0x4B7D8C", VA = "0x4B7D8C")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x6001265")]
			[Address(RVA = "0x4B7CF8", Offset = "0x4B7CF8", VA = "0x4B7CF8")]
			set
			{
			}
		}

		[Token(Token = "0x17000185")]
		public byte byValue
		{
			[Token(Token = "0x6001268")]
			[Address(RVA = "0x4B7EAC", Offset = "0x4B7EAC", VA = "0x4B7EAC")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x6001267")]
			[Address(RVA = "0x4B7E18", Offset = "0x4B7E18", VA = "0x4B7E18")]
			set
			{
			}
		}

		[Token(Token = "0x600125F")]
		[Address(RVA = "0x4B63A8", Offset = "0x4B63A8", VA = "0x4B63A8")]
		internal tCc(IntPtr cPtr, bool cMemoryOwn)
		{
		}

		[Token(Token = "0x6001260")]
		[Address(RVA = "0x4B7AA4", Offset = "0x4B7AA4", VA = "0x4B7AA4")]
		public tCc()
		{
		}

		[Token(Token = "0x6001261")]
		[Address(RVA = "0x4B6270", Offset = "0x4B6270", VA = "0x4B6270")]
		internal static IntPtr getCPtr(tCc obj)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001262")]
		[Address(RVA = "0x4B7B44", Offset = "0x4B7B44", VA = "0x4B7B44", Slot = "5")]
		internal virtual void setCPtr(IntPtr cPtr)
		{
		}

		[Token(Token = "0x6001263")]
		[Address(RVA = "0x4B7B70", Offset = "0x4B7B70", VA = "0x4B7B70", Slot = "1")]
		~tCc()
		{
		}

		[Token(Token = "0x6001264")]
		[Address(RVA = "0x4B7BD0", Offset = "0x4B7BD0", VA = "0x4B7BD0", Slot = "6")]
		public virtual void Dispose()
		{
		}
	}

	[Token(Token = "0x2000236")]
	public class tPitchBend : IDisposable
	{
		[Token(Token = "0x4000E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private IntPtr swigCPtr;

		[Token(Token = "0x4000E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		protected bool swigCMemOwn;

		[Token(Token = "0x17000186")]
		public byte byValueLsb
		{
			[Token(Token = "0x6001270")]
			[Address(RVA = "0x4B9350", Offset = "0x4B9350", VA = "0x4B9350")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x600126F")]
			[Address(RVA = "0x4B92BC", Offset = "0x4B92BC", VA = "0x4B92BC")]
			set
			{
			}
		}

		[Token(Token = "0x17000187")]
		public byte byValueMsb
		{
			[Token(Token = "0x6001272")]
			[Address(RVA = "0x4B9470", Offset = "0x4B9470", VA = "0x4B9470")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x6001271")]
			[Address(RVA = "0x4B93DC", Offset = "0x4B93DC", VA = "0x4B93DC")]
			set
			{
			}
		}

		[Token(Token = "0x6001269")]
		[Address(RVA = "0x4B6820", Offset = "0x4B6820", VA = "0x4B6820")]
		internal tPitchBend(IntPtr cPtr, bool cMemoryOwn)
		{
		}

		[Token(Token = "0x600126A")]
		[Address(RVA = "0x4B9068", Offset = "0x4B9068", VA = "0x4B9068")]
		public tPitchBend()
		{
		}

		[Token(Token = "0x600126B")]
		[Address(RVA = "0x4B66E8", Offset = "0x4B66E8", VA = "0x4B66E8")]
		internal static IntPtr getCPtr(tPitchBend obj)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x600126C")]
		[Address(RVA = "0x4B9108", Offset = "0x4B9108", VA = "0x4B9108", Slot = "5")]
		internal virtual void setCPtr(IntPtr cPtr)
		{
		}

		[Token(Token = "0x600126D")]
		[Address(RVA = "0x4B9134", Offset = "0x4B9134", VA = "0x4B9134", Slot = "1")]
		~tPitchBend()
		{
		}

		[Token(Token = "0x600126E")]
		[Address(RVA = "0x4B9194", Offset = "0x4B9194", VA = "0x4B9194", Slot = "6")]
		public virtual void Dispose()
		{
		}
	}

	[Token(Token = "0x2000237")]
	public class tNoteAftertouch : IDisposable
	{
		[Token(Token = "0x4000E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private IntPtr swigCPtr;

		[Token(Token = "0x4000E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		protected bool swigCMemOwn;

		[Token(Token = "0x17000188")]
		public byte byNote
		{
			[Token(Token = "0x600127A")]
			[Address(RVA = "0x4B8A28", Offset = "0x4B8A28", VA = "0x4B8A28")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x6001279")]
			[Address(RVA = "0x4B8994", Offset = "0x4B8994", VA = "0x4B8994")]
			set
			{
			}
		}

		[Token(Token = "0x17000189")]
		public byte byValue
		{
			[Token(Token = "0x600127C")]
			[Address(RVA = "0x4B8B48", Offset = "0x4B8B48", VA = "0x4B8B48")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x600127B")]
			[Address(RVA = "0x4B8AB4", Offset = "0x4B8AB4", VA = "0x4B8AB4")]
			set
			{
			}
		}

		[Token(Token = "0x6001273")]
		[Address(RVA = "0x4B6A5C", Offset = "0x4B6A5C", VA = "0x4B6A5C")]
		internal tNoteAftertouch(IntPtr cPtr, bool cMemoryOwn)
		{
		}

		[Token(Token = "0x6001274")]
		[Address(RVA = "0x4B8740", Offset = "0x4B8740", VA = "0x4B8740")]
		public tNoteAftertouch()
		{
		}

		[Token(Token = "0x6001275")]
		[Address(RVA = "0x4B6924", Offset = "0x4B6924", VA = "0x4B6924")]
		internal static IntPtr getCPtr(tNoteAftertouch obj)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001276")]
		[Address(RVA = "0x4B87E0", Offset = "0x4B87E0", VA = "0x4B87E0", Slot = "5")]
		internal virtual void setCPtr(IntPtr cPtr)
		{
		}

		[Token(Token = "0x6001277")]
		[Address(RVA = "0x4B880C", Offset = "0x4B880C", VA = "0x4B880C", Slot = "1")]
		~tNoteAftertouch()
		{
		}

		[Token(Token = "0x6001278")]
		[Address(RVA = "0x4B886C", Offset = "0x4B886C", VA = "0x4B886C", Slot = "6")]
		public virtual void Dispose()
		{
		}
	}

	[Token(Token = "0x2000238")]
	public class tChanAftertouch : IDisposable
	{
		[Token(Token = "0x4000E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private IntPtr swigCPtr;

		[Token(Token = "0x4000E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		protected bool swigCMemOwn;

		[Token(Token = "0x1700018A")]
		public byte byValue
		{
			[Token(Token = "0x6001284")]
			[Address(RVA = "0x4B8220", Offset = "0x4B8220", VA = "0x4B8220")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x6001283")]
			[Address(RVA = "0x4B818C", Offset = "0x4B818C", VA = "0x4B818C")]
			set
			{
			}
		}

		[Token(Token = "0x600127D")]
		[Address(RVA = "0x4B6C98", Offset = "0x4B6C98", VA = "0x4B6C98")]
		internal tChanAftertouch(IntPtr cPtr, bool cMemoryOwn)
		{
		}

		[Token(Token = "0x600127E")]
		[Address(RVA = "0x4B7F38", Offset = "0x4B7F38", VA = "0x4B7F38")]
		public tChanAftertouch()
		{
		}

		[Token(Token = "0x600127F")]
		[Address(RVA = "0x4B6B60", Offset = "0x4B6B60", VA = "0x4B6B60")]
		internal static IntPtr getCPtr(tChanAftertouch obj)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001280")]
		[Address(RVA = "0x4B7FD8", Offset = "0x4B7FD8", VA = "0x4B7FD8", Slot = "5")]
		internal virtual void setCPtr(IntPtr cPtr)
		{
		}

		[Token(Token = "0x6001281")]
		[Address(RVA = "0x4B8004", Offset = "0x4B8004", VA = "0x4B8004", Slot = "1")]
		~tChanAftertouch()
		{
		}

		[Token(Token = "0x6001282")]
		[Address(RVA = "0x4B8064", Offset = "0x4B8064", VA = "0x4B8064", Slot = "6")]
		public virtual void Dispose()
		{
		}
	}

	[Token(Token = "0x2000239")]
	public class tProgramChange : IDisposable
	{
		[Token(Token = "0x4000E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private IntPtr swigCPtr;

		[Token(Token = "0x4000E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		protected bool swigCMemOwn;

		[Token(Token = "0x1700018B")]
		public byte byProgramNum
		{
			[Token(Token = "0x600128C")]
			[Address(RVA = "0x2BE938", Offset = "0x2BE938", VA = "0x2BE938")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x600128B")]
			[Address(RVA = "0x2BE7E4", Offset = "0x2BE7E4", VA = "0x2BE7E4")]
			set
			{
			}
		}

		[Token(Token = "0x6001285")]
		[Address(RVA = "0x2BE3B0", Offset = "0x2BE3B0", VA = "0x2BE3B0")]
		internal tProgramChange(IntPtr cPtr, bool cMemoryOwn)
		{
		}

		[Token(Token = "0x6001286")]
		[Address(RVA = "0x2BE3D8", Offset = "0x2BE3D8", VA = "0x2BE3D8")]
		public tProgramChange()
		{
		}

		[Token(Token = "0x6001287")]
		[Address(RVA = "0x2BE520", Offset = "0x2BE520", VA = "0x2BE520")]
		internal static IntPtr getCPtr(tProgramChange obj)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001288")]
		[Address(RVA = "0x2BE578", Offset = "0x2BE578", VA = "0x2BE578", Slot = "5")]
		internal virtual void setCPtr(IntPtr cPtr)
		{
		}

		[Token(Token = "0x6001289")]
		[Address(RVA = "0x2BE5A4", Offset = "0x2BE5A4", VA = "0x2BE5A4", Slot = "1")]
		~tProgramChange()
		{
		}

		[Token(Token = "0x600128A")]
		[Address(RVA = "0x2BE604", Offset = "0x2BE604", VA = "0x2BE604", Slot = "6")]
		public virtual void Dispose()
		{
		}
	}

	[Token(Token = "0x4000E60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000E61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700016D")]
	public byte byChan
	{
		[Token(Token = "0x6001226")]
		[Address(RVA = "0x4B5ECC", Offset = "0x4B5ECC", VA = "0x4B5ECC")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x6001225")]
		[Address(RVA = "0x4B5E38", Offset = "0x4B5E38", VA = "0x4B5E38")]
		set
		{
		}
	}

	[Token(Token = "0x1700016E")]
	public tGen Gen
	{
		[Token(Token = "0x6001228")]
		[Address(RVA = "0x4B608C", Offset = "0x4B608C", VA = "0x4B608C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001227")]
		[Address(RVA = "0x4B5F58", Offset = "0x4B5F58", VA = "0x4B5F58")]
		set
		{
		}
	}

	[Token(Token = "0x1700016F")]
	public tCc Cc
	{
		[Token(Token = "0x600122A")]
		[Address(RVA = "0x4B62C8", Offset = "0x4B62C8", VA = "0x4B62C8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001229")]
		[Address(RVA = "0x4B6194", Offset = "0x4B6194", VA = "0x4B6194")]
		set
		{
		}
	}

	[Token(Token = "0x17000170")]
	public tNoteOnOff NoteOnOff
	{
		[Token(Token = "0x600122C")]
		[Address(RVA = "0x4B6504", Offset = "0x4B6504", VA = "0x4B6504")]
		get
		{
			return null;
		}
		[Token(Token = "0x600122B")]
		[Address(RVA = "0x4B63D0", Offset = "0x4B63D0", VA = "0x4B63D0")]
		set
		{
		}
	}

	[Token(Token = "0x17000171")]
	public tPitchBend PitchBend
	{
		[Token(Token = "0x600122E")]
		[Address(RVA = "0x4B6740", Offset = "0x4B6740", VA = "0x4B6740")]
		get
		{
			return null;
		}
		[Token(Token = "0x600122D")]
		[Address(RVA = "0x4B660C", Offset = "0x4B660C", VA = "0x4B660C")]
		set
		{
		}
	}

	[Token(Token = "0x17000172")]
	public tNoteAftertouch NoteAftertouch
	{
		[Token(Token = "0x6001230")]
		[Address(RVA = "0x4B697C", Offset = "0x4B697C", VA = "0x4B697C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600122F")]
		[Address(RVA = "0x4B6848", Offset = "0x4B6848", VA = "0x4B6848")]
		set
		{
		}
	}

	[Token(Token = "0x17000173")]
	public tChanAftertouch ChanAftertouch
	{
		[Token(Token = "0x6001232")]
		[Address(RVA = "0x4B6BB8", Offset = "0x4B6BB8", VA = "0x4B6BB8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001231")]
		[Address(RVA = "0x4B6A84", Offset = "0x4B6A84", VA = "0x4B6A84")]
		set
		{
		}
	}

	[Token(Token = "0x17000174")]
	public tProgramChange ProgramChange
	{
		[Token(Token = "0x6001234")]
		[Address(RVA = "0x4B6D68", Offset = "0x4B6D68", VA = "0x4B6D68")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001233")]
		[Address(RVA = "0x4B6CC0", Offset = "0x4B6CC0", VA = "0x4B6CC0")]
		set
		{
		}
	}

	[Token(Token = "0x17000175")]
	public AkMIDIEventTypes byType
	{
		[Token(Token = "0x6001236")]
		[Address(RVA = "0x4B6ED8", Offset = "0x4B6ED8", VA = "0x4B6ED8")]
		get
		{
			return default(AkMIDIEventTypes);
		}
		[Token(Token = "0x6001235")]
		[Address(RVA = "0x4B6E44", Offset = "0x4B6E44", VA = "0x4B6E44")]
		set
		{
		}
	}

	[Token(Token = "0x17000176")]
	public byte byOnOffNote
	{
		[Token(Token = "0x6001238")]
		[Address(RVA = "0x4B6FF8", Offset = "0x4B6FF8", VA = "0x4B6FF8")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x6001237")]
		[Address(RVA = "0x4B6F64", Offset = "0x4B6F64", VA = "0x4B6F64")]
		set
		{
		}
	}

	[Token(Token = "0x17000177")]
	public byte byVelocity
	{
		[Token(Token = "0x600123A")]
		[Address(RVA = "0x4B7118", Offset = "0x4B7118", VA = "0x4B7118")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x6001239")]
		[Address(RVA = "0x4B7084", Offset = "0x4B7084", VA = "0x4B7084")]
		set
		{
		}
	}

	[Token(Token = "0x17000178")]
	public AkMIDICcTypes byCc
	{
		[Token(Token = "0x600123C")]
		[Address(RVA = "0x4B7238", Offset = "0x4B7238", VA = "0x4B7238")]
		get
		{
			return default(AkMIDICcTypes);
		}
		[Token(Token = "0x600123B")]
		[Address(RVA = "0x4B71A4", Offset = "0x4B71A4", VA = "0x4B71A4")]
		set
		{
		}
	}

	[Token(Token = "0x17000179")]
	public byte byCcValue
	{
		[Token(Token = "0x600123E")]
		[Address(RVA = "0x4B7358", Offset = "0x4B7358", VA = "0x4B7358")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x600123D")]
		[Address(RVA = "0x4B72C4", Offset = "0x4B72C4", VA = "0x4B72C4")]
		set
		{
		}
	}

	[Token(Token = "0x1700017A")]
	public byte byValueLsb
	{
		[Token(Token = "0x6001240")]
		[Address(RVA = "0x4B7478", Offset = "0x4B7478", VA = "0x4B7478")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x600123F")]
		[Address(RVA = "0x4B73E4", Offset = "0x4B73E4", VA = "0x4B73E4")]
		set
		{
		}
	}

	[Token(Token = "0x1700017B")]
	public byte byValueMsb
	{
		[Token(Token = "0x6001242")]
		[Address(RVA = "0x4B7598", Offset = "0x4B7598", VA = "0x4B7598")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x6001241")]
		[Address(RVA = "0x4B7504", Offset = "0x4B7504", VA = "0x4B7504")]
		set
		{
		}
	}

	[Token(Token = "0x1700017C")]
	public byte byAftertouchNote
	{
		[Token(Token = "0x6001244")]
		[Address(RVA = "0x4B76B8", Offset = "0x4B76B8", VA = "0x4B76B8")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x6001243")]
		[Address(RVA = "0x4B7624", Offset = "0x4B7624", VA = "0x4B7624")]
		set
		{
		}
	}

	[Token(Token = "0x1700017D")]
	public byte byNoteAftertouchValue
	{
		[Token(Token = "0x6001246")]
		[Address(RVA = "0x4B77D8", Offset = "0x4B77D8", VA = "0x4B77D8")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x6001245")]
		[Address(RVA = "0x4B7744", Offset = "0x4B7744", VA = "0x4B7744")]
		set
		{
		}
	}

	[Token(Token = "0x1700017E")]
	public byte byChanAftertouchValue
	{
		[Token(Token = "0x6001248")]
		[Address(RVA = "0x4B78F8", Offset = "0x4B78F8", VA = "0x4B78F8")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x6001247")]
		[Address(RVA = "0x4B7864", Offset = "0x4B7864", VA = "0x4B7864")]
		set
		{
		}
	}

	[Token(Token = "0x1700017F")]
	public byte byProgramNum
	{
		[Token(Token = "0x600124A")]
		[Address(RVA = "0x4B7A18", Offset = "0x4B7A18", VA = "0x4B7A18")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x6001249")]
		[Address(RVA = "0x4B7984", Offset = "0x4B7984", VA = "0x4B7984")]
		set
		{
		}
	}

	[Token(Token = "0x600121F")]
	[Address(RVA = "0x4B5B64", Offset = "0x4B5B64", VA = "0x4B5B64")]
	internal AkMIDIEvent(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001220")]
	[Address(RVA = "0x4B5B8C", Offset = "0x4B5B8C", VA = "0x4B5B8C")]
	public AkMIDIEvent()
	{
	}

	[Token(Token = "0x6001221")]
	[Address(RVA = "0x4B5C2C", Offset = "0x4B5C2C", VA = "0x4B5C2C")]
	internal static IntPtr getCPtr(AkMIDIEvent obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001222")]
	[Address(RVA = "0x4B5C84", Offset = "0x4B5C84", VA = "0x4B5C84", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001223")]
	[Address(RVA = "0x4B5CB0", Offset = "0x4B5CB0", VA = "0x4B5CB0", Slot = "1")]
	~AkMIDIEvent()
	{
	}

	[Token(Token = "0x6001224")]
	[Address(RVA = "0x4B5D10", Offset = "0x4B5D10", VA = "0x4B5D10", Slot = "6")]
	public virtual void Dispose()
	{
	}
}
[Token(Token = "0x200023A")]
public class AkMIDIEventCallbackInfo : AkEventCallbackInfo
{
	[Token(Token = "0x4000E70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private IntPtr swigCPtr;

	[Token(Token = "0x1700018C")]
	public byte byChan
	{
		[Token(Token = "0x6001293")]
		[Address(RVA = "0x2BF060", Offset = "0x2BF060", VA = "0x2BF060")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x1700018D")]
	public byte byParam1
	{
		[Token(Token = "0x6001294")]
		[Address(RVA = "0x2BF1A4", Offset = "0x2BF1A4", VA = "0x2BF1A4")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x1700018E")]
	public byte byParam2
	{
		[Token(Token = "0x6001295")]
		[Address(RVA = "0x2BF2E8", Offset = "0x2BF2E8", VA = "0x2BF2E8")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x1700018F")]
	public AkMIDIEventTypes byType
	{
		[Token(Token = "0x6001296")]
		[Address(RVA = "0x2BF42C", Offset = "0x2BF42C", VA = "0x2BF42C")]
		get
		{
			return default(AkMIDIEventTypes);
		}
	}

	[Token(Token = "0x17000190")]
	public byte byOnOffNote
	{
		[Token(Token = "0x6001297")]
		[Address(RVA = "0x2BF570", Offset = "0x2BF570", VA = "0x2BF570")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x17000191")]
	public byte byVelocity
	{
		[Token(Token = "0x6001298")]
		[Address(RVA = "0x2BF6B4", Offset = "0x2BF6B4", VA = "0x2BF6B4")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x17000192")]
	public AkMIDICcTypes byCc
	{
		[Token(Token = "0x6001299")]
		[Address(RVA = "0x2BF7F8", Offset = "0x2BF7F8", VA = "0x2BF7F8")]
		get
		{
			return default(AkMIDICcTypes);
		}
	}

	[Token(Token = "0x17000193")]
	public byte byCcValue
	{
		[Token(Token = "0x600129A")]
		[Address(RVA = "0x2BF93C", Offset = "0x2BF93C", VA = "0x2BF93C")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x17000194")]
	public byte byValueLsb
	{
		[Token(Token = "0x600129B")]
		[Address(RVA = "0x2BFA80", Offset = "0x2BFA80", VA = "0x2BFA80")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x17000195")]
	public byte byValueMsb
	{
		[Token(Token = "0x600129C")]
		[Address(RVA = "0x2BFBC4", Offset = "0x2BFBC4", VA = "0x2BFBC4")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x17000196")]
	public byte byAftertouchNote
	{
		[Token(Token = "0x600129D")]
		[Address(RVA = "0x2BFD08", Offset = "0x2BFD08", VA = "0x2BFD08")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x17000197")]
	public byte byNoteAftertouchValue
	{
		[Token(Token = "0x600129E")]
		[Address(RVA = "0x2BFE4C", Offset = "0x2BFE4C", VA = "0x2BFE4C")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x17000198")]
	public byte byChanAftertouchValue
	{
		[Token(Token = "0x600129F")]
		[Address(RVA = "0x2BFF90", Offset = "0x2BFF90", VA = "0x2BFF90")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x17000199")]
	public byte byProgramNum
	{
		[Token(Token = "0x60012A0")]
		[Address(RVA = "0x2C00D4", Offset = "0x2C00D4", VA = "0x2C00D4")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x600128D")]
	[Address(RVA = "0x2BEA7C", Offset = "0x2BEA7C", VA = "0x2BEA7C")]
	internal AkMIDIEventCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x600128E")]
	[Address(RVA = "0x2BEBDC", Offset = "0x2BEBDC", VA = "0x2BEBDC")]
	public AkMIDIEventCallbackInfo()
	{
	}

	[Token(Token = "0x600128F")]
	[Address(RVA = "0x2BED18", Offset = "0x2BED18", VA = "0x2BED18")]
	internal static IntPtr getCPtr(AkMIDIEventCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001290")]
	[Address(RVA = "0x2BED70", Offset = "0x2BED70", VA = "0x2BED70", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001291")]
	[Address(RVA = "0x2BEE08", Offset = "0x2BEE08", VA = "0x2BEE08", Slot = "1")]
	~AkMIDIEventCallbackInfo()
	{
	}

	[Token(Token = "0x6001292")]
	[Address(RVA = "0x2BEE74", Offset = "0x2BEE74", VA = "0x2BEE74", Slot = "6")]
	public override void Dispose()
	{
	}
}
[Token(Token = "0x200023B")]
public enum AkMIDIEventTypes
{
	[Token(Token = "0x4000E72")]
	NOTE_OFF = 128,
	[Token(Token = "0x4000E73")]
	NOTE_ON = 144,
	[Token(Token = "0x4000E74")]
	NOTE_AFTERTOUCH = 160,
	[Token(Token = "0x4000E75")]
	CONTROLLER = 176,
	[Token(Token = "0x4000E76")]
	PROGRAM_CHANGE = 192,
	[Token(Token = "0x4000E77")]
	CHANNEL_AFTERTOUCH = 208,
	[Token(Token = "0x4000E78")]
	PITCH_BEND = 224,
	[Token(Token = "0x4000E79")]
	SYSEX = 240,
	[Token(Token = "0x4000E7A")]
	ESCAPE = 247,
	[Token(Token = "0x4000E7B")]
	META = 255
}
[Token(Token = "0x200023C")]
public class AkMIDIPost : AkMIDIEvent
{
	[Token(Token = "0x4000E7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x1700019A")]
	public uint uOffset
	{
		[Token(Token = "0x60012A8")]
		[Address(RVA = "0x2C0944", Offset = "0x2C0944", VA = "0x2C0944")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60012A7")]
		[Address(RVA = "0x2C07F0", Offset = "0x2C07F0", VA = "0x2C07F0")]
		set
		{
		}
	}

	[Token(Token = "0x60012A1")]
	[Address(RVA = "0x2C0218", Offset = "0x2C0218", VA = "0x2C0218")]
	internal AkMIDIPost(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60012A2")]
	[Address(RVA = "0x2C0378", Offset = "0x2C0378", VA = "0x2C0378")]
	public AkMIDIPost()
	{
	}

	[Token(Token = "0x60012A3")]
	[Address(RVA = "0x2C04B4", Offset = "0x2C04B4", VA = "0x2C04B4")]
	internal static IntPtr getCPtr(AkMIDIPost obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60012A4")]
	[Address(RVA = "0x2C050C", Offset = "0x2C050C", VA = "0x2C050C", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60012A5")]
	[Address(RVA = "0x2C05A4", Offset = "0x2C05A4", VA = "0x2C05A4", Slot = "1")]
	~AkMIDIPost()
	{
	}

	[Token(Token = "0x60012A6")]
	[Address(RVA = "0x2C0604", Offset = "0x2C0604", VA = "0x2C0604", Slot = "6")]
	public override void Dispose()
	{
	}

	[Token(Token = "0x60012A9")]
	[Address(RVA = "0x2C0A88", Offset = "0x2C0A88", VA = "0x2C0A88")]
	public AKRESULT PostOnEvent(uint in_eventID, GameObject in_gameObjectID, uint in_uNumPosts)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60012AA")]
	[Address(RVA = "0x2C0CF0", Offset = "0x2C0CF0", VA = "0x2C0CF0")]
	public void Clone(AkMIDIPost other)
	{
	}

	[Token(Token = "0x60012AB")]
	[Address(RVA = "0x2C0E8C", Offset = "0x2C0E8C", VA = "0x2C0E8C")]
	public static int GetSizeOf()
	{
		return default(int);
	}
}
[Token(Token = "0x200023D")]
public enum AkMonitorErrorCode
{
	[Token(Token = "0x4000E7E")]
	ErrorCode_NoError,
	[Token(Token = "0x4000E7F")]
	ErrorCode_FileNotFound,
	[Token(Token = "0x4000E80")]
	ErrorCode_CannotOpenFile,
	[Token(Token = "0x4000E81")]
	ErrorCode_CannotStartStreamNoMemory,
	[Token(Token = "0x4000E82")]
	ErrorCode_IODevice,
	[Token(Token = "0x4000E83")]
	ErrorCode_IncompatibleIOSettings,
	[Token(Token = "0x4000E84")]
	ErrorCode_PluginUnsupportedChannelConfiguration,
	[Token(Token = "0x4000E85")]
	ErrorCode_PluginMediaUnavailable,
	[Token(Token = "0x4000E86")]
	ErrorCode_PluginInitialisationFailed,
	[Token(Token = "0x4000E87")]
	ErrorCode_PluginProcessingFailed,
	[Token(Token = "0x4000E88")]
	ErrorCode_PluginExecutionInvalid,
	[Token(Token = "0x4000E89")]
	ErrorCode_PluginAllocationFailed,
	[Token(Token = "0x4000E8A")]
	ErrorCode_VorbisRequireSeekTable,
	[Token(Token = "0x4000E8B")]
	ErrorCode_VorbisDecodeError,
	[Token(Token = "0x4000E8C")]
	ErrorCode_AACDecodeError,
	[Token(Token = "0x4000E8D")]
	ErrorCode_xWMACreateDecoderFailed,
	[Token(Token = "0x4000E8E")]
	ErrorCode_ATRAC9CreateDecoderFailed,
	[Token(Token = "0x4000E8F")]
	ErrorCode_ATRAC9CreateDecoderFailedChShortage,
	[Token(Token = "0x4000E90")]
	ErrorCode_ATRAC9DecodeFailed,
	[Token(Token = "0x4000E91")]
	ErrorCode_ATRAC9ClearContextFailed,
	[Token(Token = "0x4000E92")]
	ErrorCode_ATRAC9LoopSectionTooSmall,
	[Token(Token = "0x4000E93")]
	ErrorCode_InvalidAudioFileHeader,
	[Token(Token = "0x4000E94")]
	ErrorCode_AudioFileHeaderTooLarge,
	[Token(Token = "0x4000E95")]
	ErrorCode_FileTooSmall,
	[Token(Token = "0x4000E96")]
	ErrorCode_TransitionNotAccurateChannel,
	[Token(Token = "0x4000E97")]
	ErrorCode_TransitionNotAccurateStarvation,
	[Token(Token = "0x4000E98")]
	ErrorCode_NothingToPlay,
	[Token(Token = "0x4000E99")]
	ErrorCode_PlayFailed,
	[Token(Token = "0x4000E9A")]
	ErrorCode_StingerCouldNotBeScheduled,
	[Token(Token = "0x4000E9B")]
	ErrorCode_TooLongSegmentLookAhead,
	[Token(Token = "0x4000E9C")]
	ErrorCode_CannotScheduleMusicSwitch,
	[Token(Token = "0x4000E9D")]
	ErrorCode_TooManySimultaneousMusicSegments,
	[Token(Token = "0x4000E9E")]
	ErrorCode_PlaylistStoppedForEditing,
	[Token(Token = "0x4000E9F")]
	ErrorCode_MusicClipsRescheduledAfterTrackEdit,
	[Token(Token = "0x4000EA0")]
	ErrorCode_CannotPlaySource_Create,
	[Token(Token = "0x4000EA1")]
	ErrorCode_CannotPlaySource_VirtualOff,
	[Token(Token = "0x4000EA2")]
	ErrorCode_CannotPlaySource_TimeSkip,
	[Token(Token = "0x4000EA3")]
	ErrorCode_CannotPlaySource_InconsistentState,
	[Token(Token = "0x4000EA4")]
	ErrorCode_MediaNotLoaded,
	[Token(Token = "0x4000EA5")]
	ErrorCode_VoiceStarving,
	[Token(Token = "0x4000EA6")]
	ErrorCode_StreamingSourceStarving,
	[Token(Token = "0x4000EA7")]
	ErrorCode_XMADecoderSourceStarving,
	[Token(Token = "0x4000EA8")]
	ErrorCode_XMADecodingError,
	[Token(Token = "0x4000EA9")]
	ErrorCode_InvalidXMAData,
	[Token(Token = "0x4000EAA")]
	ErrorCode_PluginNotRegistered,
	[Token(Token = "0x4000EAB")]
	ErrorCode_CodecNotRegistered,
	[Token(Token = "0x4000EAC")]
	ErrorCode_PluginVersionMismatch,
	[Token(Token = "0x4000EAD")]
	ErrorCode_EventIDNotFound,
	[Token(Token = "0x4000EAE")]
	ErrorCode_InvalidGroupID,
	[Token(Token = "0x4000EAF")]
	ErrorCode_SelectedChildNotAvailable,
	[Token(Token = "0x4000EB0")]
	ErrorCode_SelectedNodeNotAvailable,
	[Token(Token = "0x4000EB1")]
	ErrorCode_SelectedMediaNotAvailable,
	[Token(Token = "0x4000EB2")]
	ErrorCode_NoValidSwitch,
	[Token(Token = "0x4000EB3")]
	ErrorCode_SelectedNodeNotAvailablePlay,
	[Token(Token = "0x4000EB4")]
	ErrorCode_FeedbackVoiceStarving,
	[Token(Token = "0x4000EB5")]
	ErrorCode_BankLoadFailed,
	[Token(Token = "0x4000EB6")]
	ErrorCode_BankUnloadFailed,
	[Token(Token = "0x4000EB7")]
	ErrorCode_ErrorWhileLoadingBank,
	[Token(Token = "0x4000EB8")]
	ErrorCode_InsufficientSpaceToLoadBank,
	[Token(Token = "0x4000EB9")]
	ErrorCode_LowerEngineCommandListFull,
	[Token(Token = "0x4000EBA")]
	ErrorCode_SeekNoMarker,
	[Token(Token = "0x4000EBB")]
	ErrorCode_CannotSeekContinuous,
	[Token(Token = "0x4000EBC")]
	ErrorCode_SeekAfterEof,
	[Token(Token = "0x4000EBD")]
	ErrorCode_UnknownGameObject,
	[Token(Token = "0x4000EBE")]
	ErrorCode_UnknownEmitter,
	[Token(Token = "0x4000EBF")]
	ErrorCode_UnknownListener,
	[Token(Token = "0x4000EC0")]
	ErrorCode_GameObjectIsNotListener,
	[Token(Token = "0x4000EC1")]
	ErrorCode_GameObjectIsNotEmitter,
	[Token(Token = "0x4000EC2")]
	ErrorCode_UnknownGameObjectEvent,
	[Token(Token = "0x4000EC3")]
	ErrorCode_GameObjectIsNotEmitterEvent,
	[Token(Token = "0x4000EC4")]
	ErrorCode_ExternalSourceNotResolved,
	[Token(Token = "0x4000EC5")]
	ErrorCode_FileFormatMismatch,
	[Token(Token = "0x4000EC6")]
	ErrorCode_CommandQueueFull,
	[Token(Token = "0x4000EC7")]
	ErrorCode_CommandTooLarge,
	[Token(Token = "0x4000EC8")]
	ErrorCode_XMACreateDecoderLimitReached,
	[Token(Token = "0x4000EC9")]
	ErrorCode_XMAStreamBufferTooSmall,
	[Token(Token = "0x4000ECA")]
	ErrorCode_ModulatorScopeError_Inst,
	[Token(Token = "0x4000ECB")]
	ErrorCode_ModulatorScopeError_Obj,
	[Token(Token = "0x4000ECC")]
	ErrorCode_SeekAfterEndOfPlaylist,
	[Token(Token = "0x4000ECD")]
	ErrorCode_OpusRequireSeekTable,
	[Token(Token = "0x4000ECE")]
	ErrorCode_OpusDecodeError,
	[Token(Token = "0x4000ECF")]
	ErrorCode_OpusCreateDecoderFailed,
	[Token(Token = "0x4000ED0")]
	ErrorCode_SourcePluginNotFound,
	[Token(Token = "0x4000ED1")]
	ErrorCode_VirtualVoiceLimit,
	[Token(Token = "0x4000ED2")]
	ErrorCode_AudioDeviceShareSetNotFound,
	[Token(Token = "0x4000ED3")]
	ErrorCode_NotEnoughMemoryToStart,
	[Token(Token = "0x4000ED4")]
	ErrorCode_UnkownOpusError,
	[Token(Token = "0x4000ED5")]
	ErrorCode_AudioDeviceInitFailure,
	[Token(Token = "0x4000ED6")]
	Num_ErrorCodes
}
[Token(Token = "0x200023E")]
public enum AkMonitorErrorLevel
{
	[Token(Token = "0x4000ED8")]
	ErrorLevel_Message = 1,
	[Token(Token = "0x4000ED9")]
	ErrorLevel_Error,
	[Token(Token = "0x4000EDA")]
	ErrorLevel_All
}
[Token(Token = "0x200023F")]
public class AkMonitoringCallbackInfo : IDisposable
{
	[Token(Token = "0x4000EDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000EDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700019B")]
	public AkMonitorErrorCode errorCode
	{
		[Token(Token = "0x60012B2")]
		[Address(RVA = "0x2C1A9C", Offset = "0x2C1A9C", VA = "0x2C1A9C")]
		get
		{
			return default(AkMonitorErrorCode);
		}
	}

	[Token(Token = "0x1700019C")]
	public AkMonitorErrorLevel errorLevel
	{
		[Token(Token = "0x60012B3")]
		[Address(RVA = "0x2C1BE0", Offset = "0x2C1BE0", VA = "0x2C1BE0")]
		get
		{
			return default(AkMonitorErrorLevel);
		}
	}

	[Token(Token = "0x1700019D")]
	public uint playingID
	{
		[Token(Token = "0x60012B4")]
		[Address(RVA = "0x2C1D24", Offset = "0x2C1D24", VA = "0x2C1D24")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x1700019E")]
	public ulong gameObjID
	{
		[Token(Token = "0x60012B5")]
		[Address(RVA = "0x2C1E68", Offset = "0x2C1E68", VA = "0x2C1E68")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x1700019F")]
	public string message
	{
		[Token(Token = "0x60012B6")]
		[Address(RVA = "0x2C1FAC", Offset = "0x2C1FAC", VA = "0x2C1FAC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60012AC")]
	[Address(RVA = "0x2C1668", Offset = "0x2C1668", VA = "0x2C1668")]
	internal AkMonitoringCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60012AD")]
	[Address(RVA = "0x2C1690", Offset = "0x2C1690", VA = "0x2C1690")]
	public AkMonitoringCallbackInfo()
	{
	}

	[Token(Token = "0x60012AE")]
	[Address(RVA = "0x2C17D8", Offset = "0x2C17D8", VA = "0x2C17D8")]
	internal static IntPtr getCPtr(AkMonitoringCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60012AF")]
	[Address(RVA = "0x2C1830", Offset = "0x2C1830", VA = "0x2C1830", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60012B0")]
	[Address(RVA = "0x2C185C", Offset = "0x2C185C", VA = "0x2C185C", Slot = "1")]
	~AkMonitoringCallbackInfo()
	{
	}

	[Token(Token = "0x60012B1")]
	[Address(RVA = "0x2C18BC", Offset = "0x2C18BC", VA = "0x2C18BC", Slot = "6")]
	public virtual void Dispose()
	{
	}
}
[Token(Token = "0x2000240")]
public enum AkMultiPositionType
{
	[Token(Token = "0x4000EDE")]
	MultiPositionType_SingleSource,
	[Token(Token = "0x4000EDF")]
	MultiPositionType_MultiSources,
	[Token(Token = "0x4000EE0")]
	MultiPositionType_MultiDirections
}
[Token(Token = "0x2000241")]
public class AkMusicPlaylistCallbackInfo : AkEventCallbackInfo
{
	[Token(Token = "0x4000EE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private IntPtr swigCPtr;

	[Token(Token = "0x170001A0")]
	public uint playlistID
	{
		[Token(Token = "0x60012BD")]
		[Address(RVA = "0x2C2824", Offset = "0x2C2824", VA = "0x2C2824")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x170001A1")]
	public uint uNumPlaylistItems
	{
		[Token(Token = "0x60012BE")]
		[Address(RVA = "0x2C2968", Offset = "0x2C2968", VA = "0x2C2968")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x170001A2")]
	public uint uPlaylistSelection
	{
		[Token(Token = "0x60012BF")]
		[Address(RVA = "0x2C2AAC", Offset = "0x2C2AAC", VA = "0x2C2AAC")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x170001A3")]
	public uint uPlaylistItemDone
	{
		[Token(Token = "0x60012C0")]
		[Address(RVA = "0x2C2BF0", Offset = "0x2C2BF0", VA = "0x2C2BF0")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x60012B7")]
	[Address(RVA = "0x2C2240", Offset = "0x2C2240", VA = "0x2C2240")]
	internal AkMusicPlaylistCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60012B8")]
	[Address(RVA = "0x2C23A0", Offset = "0x2C23A0", VA = "0x2C23A0")]
	public AkMusicPlaylistCallbackInfo()
	{
	}

	[Token(Token = "0x60012B9")]
	[Address(RVA = "0x2C24DC", Offset = "0x2C24DC", VA = "0x2C24DC")]
	internal static IntPtr getCPtr(AkMusicPlaylistCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60012BA")]
	[Address(RVA = "0x2C2534", Offset = "0x2C2534", VA = "0x2C2534", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60012BB")]
	[Address(RVA = "0x2C25CC", Offset = "0x2C25CC", VA = "0x2C25CC", Slot = "1")]
	~AkMusicPlaylistCallbackInfo()
	{
	}

	[Token(Token = "0x60012BC")]
	[Address(RVA = "0x2C2638", Offset = "0x2C2638", VA = "0x2C2638", Slot = "6")]
	public override void Dispose()
	{
	}
}
[Token(Token = "0x2000242")]
public class AkMusicSettings : IDisposable
{
	[Token(Token = "0x4000EE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000EE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170001A4")]
	public float fStreamingLookAheadRatio
	{
		[Token(Token = "0x60012C8")]
		[Address(RVA = "0x2C32BC", Offset = "0x2C32BC", VA = "0x2C32BC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60012C7")]
		[Address(RVA = "0x2C3168", Offset = "0x2C3168", VA = "0x2C3168")]
		set
		{
		}
	}

	[Token(Token = "0x60012C1")]
	[Address(RVA = "0x2C2D34", Offset = "0x2C2D34", VA = "0x2C2D34")]
	internal AkMusicSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60012C2")]
	[Address(RVA = "0x2C2D5C", Offset = "0x2C2D5C", VA = "0x2C2D5C")]
	public AkMusicSettings()
	{
	}

	[Token(Token = "0x60012C3")]
	[Address(RVA = "0x2C2EA4", Offset = "0x2C2EA4", VA = "0x2C2EA4")]
	internal static IntPtr getCPtr(AkMusicSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60012C4")]
	[Address(RVA = "0x2C2EFC", Offset = "0x2C2EFC", VA = "0x2C2EFC", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60012C5")]
	[Address(RVA = "0x2C2F28", Offset = "0x2C2F28", VA = "0x2C2F28", Slot = "1")]
	~AkMusicSettings()
	{
	}

	[Token(Token = "0x60012C6")]
	[Address(RVA = "0x2C2F88", Offset = "0x2C2F88", VA = "0x2C2F88", Slot = "6")]
	public virtual void Dispose()
	{
	}
}
[Token(Token = "0x2000243")]
public class AkMusicSyncCallbackInfo : AkCallbackInfo
{
	[Token(Token = "0x4000EE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x170001A5")]
	public uint playingID
	{
		[Token(Token = "0x60012CF")]
		[Address(RVA = "0x2C39D8", Offset = "0x2C39D8", VA = "0x2C39D8")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x170001A6")]
	public int segmentInfo_iCurrentPosition
	{
		[Token(Token = "0x60012D0")]
		[Address(RVA = "0x2C3B1C", Offset = "0x2C3B1C", VA = "0x2C3B1C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001A7")]
	public int segmentInfo_iPreEntryDuration
	{
		[Token(Token = "0x60012D1")]
		[Address(RVA = "0x2C3C60", Offset = "0x2C3C60", VA = "0x2C3C60")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001A8")]
	public int segmentInfo_iActiveDuration
	{
		[Token(Token = "0x60012D2")]
		[Address(RVA = "0x2C3DA4", Offset = "0x2C3DA4", VA = "0x2C3DA4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001A9")]
	public int segmentInfo_iPostExitDuration
	{
		[Token(Token = "0x60012D3")]
		[Address(RVA = "0x2C3EE8", Offset = "0x2C3EE8", VA = "0x2C3EE8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001AA")]
	public int segmentInfo_iRemainingLookAheadTime
	{
		[Token(Token = "0x60012D4")]
		[Address(RVA = "0x2C402C", Offset = "0x2C402C", VA = "0x2C402C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001AB")]
	public float segmentInfo_fBeatDuration
	{
		[Token(Token = "0x60012D5")]
		[Address(RVA = "0x2C4170", Offset = "0x2C4170", VA = "0x2C4170")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170001AC")]
	public float segmentInfo_fBarDuration
	{
		[Token(Token = "0x60012D6")]
		[Address(RVA = "0x2C42B4", Offset = "0x2C42B4", VA = "0x2C42B4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170001AD")]
	public float segmentInfo_fGridDuration
	{
		[Token(Token = "0x60012D7")]
		[Address(RVA = "0x2C43F8", Offset = "0x2C43F8", VA = "0x2C43F8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170001AE")]
	public float segmentInfo_fGridOffset
	{
		[Token(Token = "0x60012D8")]
		[Address(RVA = "0x2C453C", Offset = "0x2C453C", VA = "0x2C453C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170001AF")]
	public AkCallbackType musicSyncType
	{
		[Token(Token = "0x60012D9")]
		[Address(RVA = "0x2C4680", Offset = "0x2C4680", VA = "0x2C4680")]
		get
		{
			return default(AkCallbackType);
		}
	}

	[Token(Token = "0x170001B0")]
	public string userCueName
	{
		[Token(Token = "0x60012DA")]
		[Address(RVA = "0x2C47C4", Offset = "0x2C47C4", VA = "0x2C47C4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60012C9")]
	[Address(RVA = "0x2C3400", Offset = "0x2C3400", VA = "0x2C3400")]
	internal AkMusicSyncCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60012CA")]
	[Address(RVA = "0x2C3560", Offset = "0x2C3560", VA = "0x2C3560")]
	public AkMusicSyncCallbackInfo()
	{
	}

	[Token(Token = "0x60012CB")]
	[Address(RVA = "0x2C369C", Offset = "0x2C369C", VA = "0x2C369C")]
	internal static IntPtr getCPtr(AkMusicSyncCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60012CC")]
	[Address(RVA = "0x2C36F4", Offset = "0x2C36F4", VA = "0x2C36F4", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60012CD")]
	[Address(RVA = "0x2C378C", Offset = "0x2C378C", VA = "0x2C378C", Slot = "1")]
	~AkMusicSyncCallbackInfo()
	{
	}

	[Token(Token = "0x60012CE")]
	[Address(RVA = "0x2C37EC", Offset = "0x2C37EC", VA = "0x2C37EC", Slot = "6")]
	public override void Dispose()
	{
	}
}
[Token(Token = "0x2000244")]
public class AkObjectInfo : IDisposable
{
	[Token(Token = "0x4000EE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000EE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170001B1")]
	public uint objID
	{
		[Token(Token = "0x60012E2")]
		[Address(RVA = "0x2C4F50", Offset = "0x2C4F50", VA = "0x2C4F50")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60012E1")]
		[Address(RVA = "0x2C4DFC", Offset = "0x2C4DFC", VA = "0x2C4DFC")]
		set
		{
		}
	}

	[Token(Token = "0x170001B2")]
	public uint parentID
	{
		[Token(Token = "0x60012E4")]
		[Address(RVA = "0x2C51E8", Offset = "0x2C51E8", VA = "0x2C51E8")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60012E3")]
		[Address(RVA = "0x2C5094", Offset = "0x2C5094", VA = "0x2C5094")]
		set
		{
		}
	}

	[Token(Token = "0x170001B3")]
	public int iDepth
	{
		[Token(Token = "0x60012E6")]
		[Address(RVA = "0x2C5480", Offset = "0x2C5480", VA = "0x2C5480")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60012E5")]
		[Address(RVA = "0x2C532C", Offset = "0x2C532C", VA = "0x2C532C")]
		set
		{
		}
	}

	[Token(Token = "0x60012DB")]
	[Address(RVA = "0x2C49C8", Offset = "0x2C49C8", VA = "0x2C49C8")]
	internal AkObjectInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60012DC")]
	[Address(RVA = "0x2C49F0", Offset = "0x2C49F0", VA = "0x2C49F0")]
	public AkObjectInfo()
	{
	}

	[Token(Token = "0x60012DD")]
	[Address(RVA = "0x2C4B38", Offset = "0x2C4B38", VA = "0x2C4B38")]
	internal static IntPtr getCPtr(AkObjectInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60012DE")]
	[Address(RVA = "0x2C4B90", Offset = "0x2C4B90", VA = "0x2C4B90", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60012DF")]
	[Address(RVA = "0x2C4BBC", Offset = "0x2C4BBC", VA = "0x2C4BBC", Slot = "1")]
	~AkObjectInfo()
	{
	}

	[Token(Token = "0x60012E0")]
	[Address(RVA = "0x2C4C1C", Offset = "0x2C4C1C", VA = "0x2C4C1C", Slot = "6")]
	public virtual void Dispose()
	{
	}
}
[Token(Token = "0x2000245")]
public class AkObstructionOcclusionValues : IDisposable
{
	[Token(Token = "0x4000EE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000EE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170001B4")]
	public float occlusion
	{
		[Token(Token = "0x60012EE")]
		[Address(RVA = "0x2C6AEC", Offset = "0x2C6AEC", VA = "0x2C6AEC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60012ED")]
		[Address(RVA = "0x2C6998", Offset = "0x2C6998", VA = "0x2C6998")]
		set
		{
		}
	}

	[Token(Token = "0x170001B5")]
	public float obstruction
	{
		[Token(Token = "0x60012F0")]
		[Address(RVA = "0x2C6D84", Offset = "0x2C6D84", VA = "0x2C6D84")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60012EF")]
		[Address(RVA = "0x2C6C30", Offset = "0x2C6C30", VA = "0x2C6C30")]
		set
		{
		}
	}

	[Token(Token = "0x60012E7")]
	[Address(RVA = "0x2C6564", Offset = "0x2C6564", VA = "0x2C6564")]
	internal AkObstructionOcclusionValues(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60012E8")]
	[Address(RVA = "0x2C658C", Offset = "0x2C658C", VA = "0x2C658C")]
	public AkObstructionOcclusionValues()
	{
	}

	[Token(Token = "0x60012E9")]
	[Address(RVA = "0x2C66D4", Offset = "0x2C66D4", VA = "0x2C66D4")]
	internal static IntPtr getCPtr(AkObstructionOcclusionValues obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60012EA")]
	[Address(RVA = "0x2C672C", Offset = "0x2C672C", VA = "0x2C672C", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60012EB")]
	[Address(RVA = "0x2C6758", Offset = "0x2C6758", VA = "0x2C6758", Slot = "1")]
	~AkObstructionOcclusionValues()
	{
	}

	[Token(Token = "0x60012EC")]
	[Address(RVA = "0x2C67B8", Offset = "0x2C67B8", VA = "0x2C67B8", Slot = "6")]
	public virtual void Dispose()
	{
	}
}
[Token(Token = "0x2000246")]
public class AkOutputSettings : IDisposable
{
	[Token(Token = "0x4000EE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000EEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170001B6")]
	public uint audioDeviceShareset
	{
		[Token(Token = "0x60012FC")]
		[Address(RVA = "0x2C7AF8", Offset = "0x2C7AF8", VA = "0x2C7AF8")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60012FB")]
		[Address(RVA = "0x2C79A4", Offset = "0x2C79A4", VA = "0x2C79A4")]
		set
		{
		}
	}

	[Token(Token = "0x170001B7")]
	public uint idDevice
	{
		[Token(Token = "0x60012FE")]
		[Address(RVA = "0x2C7D90", Offset = "0x2C7D90", VA = "0x2C7D90")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60012FD")]
		[Address(RVA = "0x2C7C3C", Offset = "0x2C7C3C", VA = "0x2C7C3C")]
		set
		{
		}
	}

	[Token(Token = "0x170001B8")]
	public AkPanningRule ePanningRule
	{
		[Token(Token = "0x6001300")]
		[Address(RVA = "0x2C8028", Offset = "0x2C8028", VA = "0x2C8028")]
		get
		{
			return default(AkPanningRule);
		}
		[Token(Token = "0x60012FF")]
		[Address(RVA = "0x2C7ED4", Offset = "0x2C7ED4", VA = "0x2C7ED4")]
		set
		{
		}
	}

	[Token(Token = "0x170001B9")]
	public AkChannelConfig channelConfig
	{
		[Token(Token = "0x6001302")]
		[Address(RVA = "0x2C82D4", Offset = "0x2C82D4", VA = "0x2C82D4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001301")]
		[Address(RVA = "0x2C816C", Offset = "0x2C816C", VA = "0x2C816C")]
		set
		{
		}
	}

	[Token(Token = "0x60012F1")]
	[Address(RVA = "0x2C6EC8", Offset = "0x2C6EC8", VA = "0x2C6EC8")]
	internal AkOutputSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60012F2")]
	[Address(RVA = "0x2C6EF0", Offset = "0x2C6EF0", VA = "0x2C6EF0")]
	public AkOutputSettings()
	{
	}

	[Token(Token = "0x60012F3")]
	[Address(RVA = "0x2C7038", Offset = "0x2C7038", VA = "0x2C7038")]
	public AkOutputSettings(string in_szDeviceShareSet, uint in_idDevice, AkChannelConfig in_channelConfig, AkPanningRule in_ePanning)
	{
	}

	[Token(Token = "0x60012F4")]
	[Address(RVA = "0x2C7208", Offset = "0x2C7208", VA = "0x2C7208")]
	public AkOutputSettings(string in_szDeviceShareSet, uint in_idDevice, AkChannelConfig in_channelConfig)
	{
	}

	[Token(Token = "0x60012F5")]
	[Address(RVA = "0x2C73C8", Offset = "0x2C73C8", VA = "0x2C73C8")]
	public AkOutputSettings(string in_szDeviceShareSet, uint in_idDevice)
	{
	}

	[Token(Token = "0x60012F6")]
	[Address(RVA = "0x2C755C", Offset = "0x2C755C", VA = "0x2C755C")]
	public AkOutputSettings(string in_szDeviceShareSet)
	{
	}

	[Token(Token = "0x60012F7")]
	[Address(RVA = "0x2C76E0", Offset = "0x2C76E0", VA = "0x2C76E0")]
	internal static IntPtr getCPtr(AkOutputSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60012F8")]
	[Address(RVA = "0x2C7738", Offset = "0x2C7738", VA = "0x2C7738", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60012F9")]
	[Address(RVA = "0x2C7764", Offset = "0x2C7764", VA = "0x2C7764", Slot = "1")]
	~AkOutputSettings()
	{
	}

	[Token(Token = "0x60012FA")]
	[Address(RVA = "0x2C77C4", Offset = "0x2C77C4", VA = "0x2C77C4", Slot = "6")]
	public virtual void Dispose()
	{
	}
}
[Token(Token = "0x2000247")]
public enum AkPanningRule
{
	[Token(Token = "0x4000EEC")]
	AkPanningRule_Speakers,
	[Token(Token = "0x4000EED")]
	AkPanningRule_Headphones
}
[Token(Token = "0x2000248")]
public class AkPathParams : IDisposable
{
	[Token(Token = "0x4000EEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000EEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170001BA")]
	public AkVector listenerPos
	{
		[Token(Token = "0x600130A")]
		[Address(RVA = "0x2C8A04", Offset = "0x2C8A04", VA = "0x2C8A04")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001309")]
		[Address(RVA = "0x2C889C", Offset = "0x2C889C", VA = "0x2C889C")]
		set
		{
		}
	}

	[Token(Token = "0x170001BB")]
	public AkVector emitterPos
	{
		[Token(Token = "0x600130C")]
		[Address(RVA = "0x2C8D00", Offset = "0x2C8D00", VA = "0x2C8D00")]
		get
		{
			return null;
		}
		[Token(Token = "0x600130B")]
		[Address(RVA = "0x2C8B98", Offset = "0x2C8B98", VA = "0x2C8B98")]
		set
		{
		}
	}

	[Token(Token = "0x170001BC")]
	public uint numValidPaths
	{
		[Token(Token = "0x600130E")]
		[Address(RVA = "0x2C8FE8", Offset = "0x2C8FE8", VA = "0x2C8FE8")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600130D")]
		[Address(RVA = "0x2C8E94", Offset = "0x2C8E94", VA = "0x2C8E94")]
		set
		{
		}
	}

	[Token(Token = "0x6001303")]
	[Address(RVA = "0x2C8468", Offset = "0x2C8468", VA = "0x2C8468")]
	internal AkPathParams(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001304")]
	[Address(RVA = "0x2C8490", Offset = "0x2C8490", VA = "0x2C8490")]
	public AkPathParams()
	{
	}

	[Token(Token = "0x6001305")]
	[Address(RVA = "0x2C85D8", Offset = "0x2C85D8", VA = "0x2C85D8")]
	internal static IntPtr getCPtr(AkPathParams obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001306")]
	[Address(RVA = "0x2C8630", Offset = "0x2C8630", VA = "0x2C8630", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001307")]
	[Address(RVA = "0x2C865C", Offset = "0x2C865C", VA = "0x2C865C", Slot = "1")]
	~AkPathParams()
	{
	}

	[Token(Token = "0x6001308")]
	[Address(RVA = "0x2C86BC", Offset = "0x2C86BC", VA = "0x2C86BC", Slot = "6")]
	public virtual void Dispose()
	{
	}
}
[Token(Token = "0x2000249")]
public class AkPlaylist : AkPlaylistArray
{
	[Token(Token = "0x4000EF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x600130F")]
	[Address(RVA = "0x2CADEC", Offset = "0x2CADEC", VA = "0x2CADEC")]
	internal AkPlaylist(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001310")]
	[Address(RVA = "0x2CAF78", Offset = "0x2CAF78", VA = "0x2CAF78")]
	public AkPlaylist()
	{
	}

	[Token(Token = "0x6001311")]
	[Address(RVA = "0x2CB0B4", Offset = "0x2CB0B4", VA = "0x2CB0B4")]
	internal static IntPtr getCPtr(AkPlaylist obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001312")]
	[Address(RVA = "0x2CB10C", Offset = "0x2CB10C", VA = "0x2CB10C", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001313")]
	[Address(RVA = "0x2CB1DC", Offset = "0x2CB1DC", VA = "0x2CB1DC", Slot = "1")]
	~AkPlaylist()
	{
	}

	[Token(Token = "0x6001314")]
	[Address(RVA = "0x2CB294", Offset = "0x2CB294", VA = "0x2CB294", Slot = "6")]
	public override void Dispose()
	{
	}

	[Token(Token = "0x6001315")]
	[Address(RVA = "0x2CB59C", Offset = "0x2CB59C", VA = "0x2CB59C")]
	public AKRESULT Enqueue(uint in_audioNodeID, int in_msDelay, IntPtr in_pCustomInfo, uint in_cExternals, AkExternalSourceInfo in_pExternalSources)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001316")]
	[Address(RVA = "0x2CB744", Offset = "0x2CB744", VA = "0x2CB744")]
	public AKRESULT Enqueue(uint in_audioNodeID, int in_msDelay, IntPtr in_pCustomInfo, uint in_cExternals)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001317")]
	[Address(RVA = "0x2CB8C8", Offset = "0x2CB8C8", VA = "0x2CB8C8")]
	public AKRESULT Enqueue(uint in_audioNodeID, int in_msDelay, IntPtr in_pCustomInfo)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001318")]
	[Address(RVA = "0x2CBA40", Offset = "0x2CBA40", VA = "0x2CBA40")]
	public AKRESULT Enqueue(uint in_audioNodeID, int in_msDelay)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001319")]
	[Address(RVA = "0x2CBBAC", Offset = "0x2CBBAC", VA = "0x2CBBAC")]
	public AKRESULT Enqueue(uint in_audioNodeID)
	{
		return default(AKRESULT);
	}
}
[Token(Token = "0x200024A")]
public class AkPlaylistArray : IDisposable
{
	[Token(Token = "0x4000EF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000EF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool swigCMemOwn;

	[Token(Token = "0x600131A")]
	[Address(RVA = "0x2CAF50", Offset = "0x2CAF50", VA = "0x2CAF50")]
	internal AkPlaylistArray(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x600131B")]
	[Address(RVA = "0x2CBD00", Offset = "0x2CBD00", VA = "0x2CBD00")]
	public AkPlaylistArray()
	{
	}

	[Token(Token = "0x600131C")]
	[Address(RVA = "0x2CBE48", Offset = "0x2CBE48", VA = "0x2CBE48")]
	internal static IntPtr getCPtr(AkPlaylistArray obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600131D")]
	[Address(RVA = "0x2CB1B0", Offset = "0x2CB1B0", VA = "0x2CB1B0", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600131E")]
	[Address(RVA = "0x2CB234", Offset = "0x2CB234", VA = "0x2CB234", Slot = "1")]
	~AkPlaylistArray()
	{
	}

	[Token(Token = "0x600131F")]
	[Address(RVA = "0x2CB47C", Offset = "0x2CB47C", VA = "0x2CB47C", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001320")]
	[Address(RVA = "0x2CBF60", Offset = "0x2CBF60", VA = "0x2CBF60")]
	public AkIterator Begin()
	{
		return null;
	}

	[Token(Token = "0x6001321")]
	[Address(RVA = "0x2CC0D4", Offset = "0x2CC0D4", VA = "0x2CC0D4")]
	public AkIterator End()
	{
		return null;
	}

	[Token(Token = "0x6001322")]
	[Address(RVA = "0x2CC248", Offset = "0x2CC248", VA = "0x2CC248")]
	public AkIterator FindEx(AkPlaylistItem in_Item)
	{
		return null;
	}

	[Token(Token = "0x6001323")]
	[Address(RVA = "0x2CC46C", Offset = "0x2CC46C", VA = "0x2CC46C")]
	public AkIterator Erase(AkIterator in_rIter)
	{
		return null;
	}

	[Token(Token = "0x6001324")]
	[Address(RVA = "0x2CC604", Offset = "0x2CC604", VA = "0x2CC604")]
	public void Erase(uint in_uIndex)
	{
	}

	[Token(Token = "0x6001325")]
	[Address(RVA = "0x2CC758", Offset = "0x2CC758", VA = "0x2CC758")]
	public AkIterator EraseSwap(AkIterator in_rIter)
	{
		return null;
	}

	[Token(Token = "0x6001326")]
	[Address(RVA = "0x2CC8F0", Offset = "0x2CC8F0", VA = "0x2CC8F0")]
	public AKRESULT Reserve(uint in_ulReserve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001327")]
	[Address(RVA = "0x2CCA44", Offset = "0x2CCA44", VA = "0x2CCA44")]
	public uint Reserved()
	{
		return default(uint);
	}

	[Token(Token = "0x6001328")]
	[Address(RVA = "0x2CCB88", Offset = "0x2CCB88", VA = "0x2CCB88")]
	public void Term()
	{
	}

	[Token(Token = "0x6001329")]
	[Address(RVA = "0x2CCCCC", Offset = "0x2CCCCC", VA = "0x2CCCCC")]
	public uint Length()
	{
		return default(uint);
	}

	[Token(Token = "0x600132A")]
	[Address(RVA = "0x2CCE10", Offset = "0x2CCE10", VA = "0x2CCE10")]
	public AkPlaylistItem Data()
	{
		return null;
	}

	[Token(Token = "0x600132B")]
	[Address(RVA = "0x2CCFD0", Offset = "0x2CCFD0", VA = "0x2CCFD0")]
	public bool IsEmpty()
	{
		return default(bool);
	}

	[Token(Token = "0x600132C")]
	[Address(RVA = "0x2CD11C", Offset = "0x2CD11C", VA = "0x2CD11C")]
	public AkPlaylistItem Exists(AkPlaylistItem in_Item)
	{
		return null;
	}

	[Token(Token = "0x600132D")]
	[Address(RVA = "0x2CD30C", Offset = "0x2CD30C", VA = "0x2CD30C")]
	public AkPlaylistItem AddLast()
	{
		return null;
	}

	[Token(Token = "0x600132E")]
	[Address(RVA = "0x2CD4A4", Offset = "0x2CD4A4", VA = "0x2CD4A4")]
	public AkPlaylistItem AddLast(AkPlaylistItem in_rItem)
	{
		return null;
	}

	[Token(Token = "0x600132F")]
	[Address(RVA = "0x2CD694", Offset = "0x2CD694", VA = "0x2CD694")]
	public AkPlaylistItem Last()
	{
		return null;
	}

	[Token(Token = "0x6001330")]
	[Address(RVA = "0x2CD80C", Offset = "0x2CD80C", VA = "0x2CD80C")]
	public void RemoveLast()
	{
	}

	[Token(Token = "0x6001331")]
	[Address(RVA = "0x2CD950", Offset = "0x2CD950", VA = "0x2CD950")]
	public AKRESULT Remove(AkPlaylistItem in_rItem)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001332")]
	[Address(RVA = "0x2CDAEC", Offset = "0x2CDAEC", VA = "0x2CDAEC")]
	public AKRESULT RemoveSwap(AkPlaylistItem in_rItem)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001333")]
	[Address(RVA = "0x2CDC88", Offset = "0x2CDC88", VA = "0x2CDC88")]
	public void RemoveAll()
	{
	}

	[Token(Token = "0x6001334")]
	[Address(RVA = "0x2CDDCC", Offset = "0x2CDDCC", VA = "0x2CDDCC")]
	public AkPlaylistItem ItemAtIndex(uint uiIndex)
	{
		return null;
	}

	[Token(Token = "0x6001335")]
	[Address(RVA = "0x2CDF54", Offset = "0x2CDF54", VA = "0x2CDF54")]
	public AkPlaylistItem Insert(uint in_uIndex)
	{
		return null;
	}

	[Token(Token = "0x6001336")]
	[Address(RVA = "0x2CE0FC", Offset = "0x2CE0FC", VA = "0x2CE0FC")]
	public bool GrowArray(uint in_uGrowBy)
	{
		return default(bool);
	}

	[Token(Token = "0x6001337")]
	[Address(RVA = "0x2CE258", Offset = "0x2CE258", VA = "0x2CE258")]
	public bool GrowArray()
	{
		return default(bool);
	}

	[Token(Token = "0x6001338")]
	[Address(RVA = "0x2CE3A4", Offset = "0x2CE3A4", VA = "0x2CE3A4")]
	public bool Resize(uint in_uiSize)
	{
		return default(bool);
	}

	[Token(Token = "0x6001339")]
	[Address(RVA = "0x2CE500", Offset = "0x2CE500", VA = "0x2CE500")]
	public void Transfer(AkPlaylistArray in_rSource)
	{
	}

	[Token(Token = "0x600133A")]
	[Address(RVA = "0x2CE69C", Offset = "0x2CE69C", VA = "0x2CE69C")]
	public AKRESULT Copy(AkPlaylistArray in_rSource)
	{
		return default(AKRESULT);
	}
}
[Token(Token = "0x200024B")]
public class AkPlaylistItem : IDisposable
{
	[Token(Token = "0x4000EF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000EF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170001BD")]
	public uint audioNodeID
	{
		[Token(Token = "0x6001346")]
		[Address(RVA = "0x2CF3DC", Offset = "0x2CF3DC", VA = "0x2CF3DC")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001345")]
		[Address(RVA = "0x2CF288", Offset = "0x2CF288", VA = "0x2CF288")]
		set
		{
		}
	}

	[Token(Token = "0x170001BE")]
	public int msDelay
	{
		[Token(Token = "0x6001348")]
		[Address(RVA = "0x2CF674", Offset = "0x2CF674", VA = "0x2CF674")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001347")]
		[Address(RVA = "0x2CF520", Offset = "0x2CF520", VA = "0x2CF520")]
		set
		{
		}
	}

	[Token(Token = "0x170001BF")]
	public IntPtr pCustomInfo
	{
		[Token(Token = "0x600134A")]
		[Address(RVA = "0x2CF90C", Offset = "0x2CF90C", VA = "0x2CF90C")]
		get
		{
			return default(IntPtr);
		}
		[Token(Token = "0x6001349")]
		[Address(RVA = "0x2CF7B8", Offset = "0x2CF7B8", VA = "0x2CF7B8")]
		set
		{
		}
	}

	[Token(Token = "0x600133B")]
	[Address(RVA = "0x2CCFA8", Offset = "0x2CCFA8", VA = "0x2CCFA8")]
	internal AkPlaylistItem(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x600133C")]
	[Address(RVA = "0x2CE838", Offset = "0x2CE838", VA = "0x2CE838")]
	public AkPlaylistItem()
	{
	}

	[Token(Token = "0x600133D")]
	[Address(RVA = "0x2CE980", Offset = "0x2CE980", VA = "0x2CE980")]
	public AkPlaylistItem(AkPlaylistItem in_rCopy)
	{
	}

	[Token(Token = "0x600133E")]
	[Address(RVA = "0x2CC34C", Offset = "0x2CC34C", VA = "0x2CC34C")]
	internal static IntPtr getCPtr(AkPlaylistItem obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600133F")]
	[Address(RVA = "0x2CEB28", Offset = "0x2CEB28", VA = "0x2CEB28", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001340")]
	[Address(RVA = "0x2CEB54", Offset = "0x2CEB54", VA = "0x2CEB54", Slot = "1")]
	~AkPlaylistItem()
	{
	}

	[Token(Token = "0x6001341")]
	[Address(RVA = "0x2CEBB4", Offset = "0x2CEBB4", VA = "0x2CEBB4", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001342")]
	[Address(RVA = "0x2CED94", Offset = "0x2CED94", VA = "0x2CED94")]
	public AkPlaylistItem Assign(AkPlaylistItem in_rCopy)
	{
		return null;
	}

	[Token(Token = "0x6001343")]
	[Address(RVA = "0x2CEF64", Offset = "0x2CEF64", VA = "0x2CEF64")]
	public bool IsEqualTo(AkPlaylistItem in_rCopy)
	{
		return default(bool);
	}

	[Token(Token = "0x6001344")]
	[Address(RVA = "0x2CF108", Offset = "0x2CF108", VA = "0x2CF108")]
	public AKRESULT SetExternalSources(uint in_nExternalSrc, AkExternalSourceInfo in_pExternalSrc)
	{
		return default(AKRESULT);
	}
}
[Token(Token = "0x200024C")]
public enum AkPluginType
{
	[Token(Token = "0x4000EF6")]
	AkPluginTypeNone = 0,
	[Token(Token = "0x4000EF7")]
	AkPluginTypeCodec = 1,
	[Token(Token = "0x4000EF8")]
	AkPluginTypeSource = 2,
	[Token(Token = "0x4000EF9")]
	AkPluginTypeEffect = 3,
	[Token(Token = "0x4000EFA")]
	AkPluginTypeMixer = 6,
	[Token(Token = "0x4000EFB")]
	AkPluginTypeSink = 7,
	[Token(Token = "0x4000EFC")]
	AkPluginTypeGlobalExtension = 8,
	[Token(Token = "0x4000EFD")]
	AkPluginTypeMask = 15
}
[Token(Token = "0x200024D")]
public class AkPositioningInfo : IDisposable
{
	[Token(Token = "0x4000EFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000EFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170001C0")]
	public float fCenterPct
	{
		[Token(Token = "0x6001352")]
		[Address(RVA = "0x2D0660", Offset = "0x2D0660", VA = "0x2D0660")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001351")]
		[Address(RVA = "0x2D050C", Offset = "0x2D050C", VA = "0x2D050C")]
		set
		{
		}
	}

	[Token(Token = "0x170001C1")]
	public AkSpeakerPanningType pannerType
	{
		[Token(Token = "0x6001354")]
		[Address(RVA = "0x2D08F8", Offset = "0x2D08F8", VA = "0x2D08F8")]
		get
		{
			return default(AkSpeakerPanningType);
		}
		[Token(Token = "0x6001353")]
		[Address(RVA = "0x2D07A4", Offset = "0x2D07A4", VA = "0x2D07A4")]
		set
		{
		}
	}

	[Token(Token = "0x170001C2")]
	public Ak3DPositionType e3dPositioningType
	{
		[Token(Token = "0x6001356")]
		[Address(RVA = "0x2D0B90", Offset = "0x2D0B90", VA = "0x2D0B90")]
		get
		{
			return default(Ak3DPositionType);
		}
		[Token(Token = "0x6001355")]
		[Address(RVA = "0x2D0A3C", Offset = "0x2D0A3C", VA = "0x2D0A3C")]
		set
		{
		}
	}

	[Token(Token = "0x170001C3")]
	public bool bHoldEmitterPosAndOrient
	{
		[Token(Token = "0x6001358")]
		[Address(RVA = "0x2D0E28", Offset = "0x2D0E28", VA = "0x2D0E28")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001357")]
		[Address(RVA = "0x2D0CD4", Offset = "0x2D0CD4", VA = "0x2D0CD4")]
		set
		{
		}
	}

	[Token(Token = "0x170001C4")]
	public Ak3DSpatializationMode e3DSpatializationMode
	{
		[Token(Token = "0x600135A")]
		[Address(RVA = "0x2D10C8", Offset = "0x2D10C8", VA = "0x2D10C8")]
		get
		{
			return default(Ak3DSpatializationMode);
		}
		[Token(Token = "0x6001359")]
		[Address(RVA = "0x2D0F74", Offset = "0x2D0F74", VA = "0x2D0F74")]
		set
		{
		}
	}

	[Token(Token = "0x170001C5")]
	public bool bUseAttenuation
	{
		[Token(Token = "0x600135C")]
		[Address(RVA = "0x2D1360", Offset = "0x2D1360", VA = "0x2D1360")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600135B")]
		[Address(RVA = "0x2D120C", Offset = "0x2D120C", VA = "0x2D120C")]
		set
		{
		}
	}

	[Token(Token = "0x170001C6")]
	public bool bUseConeAttenuation
	{
		[Token(Token = "0x600135E")]
		[Address(RVA = "0x2D1600", Offset = "0x2D1600", VA = "0x2D1600")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600135D")]
		[Address(RVA = "0x2D14AC", Offset = "0x2D14AC", VA = "0x2D14AC")]
		set
		{
		}
	}

	[Token(Token = "0x170001C7")]
	public float fInnerAngle
	{
		[Token(Token = "0x6001360")]
		[Address(RVA = "0x2D18A0", Offset = "0x2D18A0", VA = "0x2D18A0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600135F")]
		[Address(RVA = "0x2D174C", Offset = "0x2D174C", VA = "0x2D174C")]
		set
		{
		}
	}

	[Token(Token = "0x170001C8")]
	public float fOuterAngle
	{
		[Token(Token = "0x6001362")]
		[Address(RVA = "0x2D1B38", Offset = "0x2D1B38", VA = "0x2D1B38")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001361")]
		[Address(RVA = "0x2D19E4", Offset = "0x2D19E4", VA = "0x2D19E4")]
		set
		{
		}
	}

	[Token(Token = "0x170001C9")]
	public float fConeMaxAttenuation
	{
		[Token(Token = "0x6001364")]
		[Address(RVA = "0x2D1DD0", Offset = "0x2D1DD0", VA = "0x2D1DD0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001363")]
		[Address(RVA = "0x2D1C7C", Offset = "0x2D1C7C", VA = "0x2D1C7C")]
		set
		{
		}
	}

	[Token(Token = "0x170001CA")]
	public float LPFCone
	{
		[Token(Token = "0x6001366")]
		[Address(RVA = "0x2D2068", Offset = "0x2D2068", VA = "0x2D2068")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001365")]
		[Address(RVA = "0x2D1F14", Offset = "0x2D1F14", VA = "0x2D1F14")]
		set
		{
		}
	}

	[Token(Token = "0x170001CB")]
	public float HPFCone
	{
		[Token(Token = "0x6001368")]
		[Address(RVA = "0x2D2300", Offset = "0x2D2300", VA = "0x2D2300")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001367")]
		[Address(RVA = "0x2D21AC", Offset = "0x2D21AC", VA = "0x2D21AC")]
		set
		{
		}
	}

	[Token(Token = "0x170001CC")]
	public float fMaxDistance
	{
		[Token(Token = "0x600136A")]
		[Address(RVA = "0x2D2598", Offset = "0x2D2598", VA = "0x2D2598")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001369")]
		[Address(RVA = "0x2D2444", Offset = "0x2D2444", VA = "0x2D2444")]
		set
		{
		}
	}

	[Token(Token = "0x170001CD")]
	public float fVolDryAtMaxDist
	{
		[Token(Token = "0x600136C")]
		[Address(RVA = "0x2D2830", Offset = "0x2D2830", VA = "0x2D2830")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600136B")]
		[Address(RVA = "0x2D26DC", Offset = "0x2D26DC", VA = "0x2D26DC")]
		set
		{
		}
	}

	[Token(Token = "0x170001CE")]
	public float fVolAuxGameDefAtMaxDist
	{
		[Token(Token = "0x600136E")]
		[Address(RVA = "0x2D2AC8", Offset = "0x2D2AC8", VA = "0x2D2AC8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600136D")]
		[Address(RVA = "0x2D2974", Offset = "0x2D2974", VA = "0x2D2974")]
		set
		{
		}
	}

	[Token(Token = "0x170001CF")]
	public float fVolAuxUserDefAtMaxDist
	{
		[Token(Token = "0x6001370")]
		[Address(RVA = "0x2D2D60", Offset = "0x2D2D60", VA = "0x2D2D60")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600136F")]
		[Address(RVA = "0x2D2C0C", Offset = "0x2D2C0C", VA = "0x2D2C0C")]
		set
		{
		}
	}

	[Token(Token = "0x170001D0")]
	public float LPFValueAtMaxDist
	{
		[Token(Token = "0x6001372")]
		[Address(RVA = "0x2D2FF8", Offset = "0x2D2FF8", VA = "0x2D2FF8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001371")]
		[Address(RVA = "0x2D2EA4", Offset = "0x2D2EA4", VA = "0x2D2EA4")]
		set
		{
		}
	}

	[Token(Token = "0x170001D1")]
	public float HPFValueAtMaxDist
	{
		[Token(Token = "0x6001374")]
		[Address(RVA = "0x2D3290", Offset = "0x2D3290", VA = "0x2D3290")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001373")]
		[Address(RVA = "0x2D313C", Offset = "0x2D313C", VA = "0x2D313C")]
		set
		{
		}
	}

	[Token(Token = "0x600134B")]
	[Address(RVA = "0x2D00D8", Offset = "0x2D00D8", VA = "0x2D00D8")]
	internal AkPositioningInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x600134C")]
	[Address(RVA = "0x2D0100", Offset = "0x2D0100", VA = "0x2D0100")]
	public AkPositioningInfo()
	{
	}

	[Token(Token = "0x600134D")]
	[Address(RVA = "0x2D0248", Offset = "0x2D0248", VA = "0x2D0248")]
	internal static IntPtr getCPtr(AkPositioningInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600134E")]
	[Address(RVA = "0x2D02A0", Offset = "0x2D02A0", VA = "0x2D02A0", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600134F")]
	[Address(RVA = "0x2D02CC", Offset = "0x2D02CC", VA = "0x2D02CC", Slot = "1")]
	~AkPositioningInfo()
	{
	}

	[Token(Token = "0x6001350")]
	[Address(RVA = "0x2D032C", Offset = "0x2D032C", VA = "0x2D032C", Slot = "6")]
	public virtual void Dispose()
	{
	}
}
[Token(Token = "0x200024E")]
public enum AkPreparationType
{
	[Token(Token = "0x4000F01")]
	Preparation_Load,
	[Token(Token = "0x4000F02")]
	Preparation_Unload,
	[Token(Token = "0x4000F03")]
	Preparation_LoadAndDecode
}
[Token(Token = "0x200024F")]
public class AkPropagationPathInfo : IDisposable
{
	[Token(Token = "0x4000F04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000F05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool swigCMemOwn;

	[Token(Token = "0x4000F06")]
	public const uint kMaxNodes = 8u;

	[Token(Token = "0x170001D2")]
	public AkVector nodePoint
	{
		[Token(Token = "0x600137C")]
		[Address(RVA = "0x2D3970", Offset = "0x2D3970", VA = "0x2D3970")]
		get
		{
			return null;
		}
		[Token(Token = "0x600137B")]
		[Address(RVA = "0x2D3808", Offset = "0x2D3808", VA = "0x2D3808")]
		set
		{
		}
	}

	[Token(Token = "0x170001D3")]
	public uint numNodes
	{
		[Token(Token = "0x600137E")]
		[Address(RVA = "0x2D3C58", Offset = "0x2D3C58", VA = "0x2D3C58")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600137D")]
		[Address(RVA = "0x2D3B04", Offset = "0x2D3B04", VA = "0x2D3B04")]
		set
		{
		}
	}

	[Token(Token = "0x170001D4")]
	public float length
	{
		[Token(Token = "0x6001380")]
		[Address(RVA = "0x2D3EF0", Offset = "0x2D3EF0", VA = "0x2D3EF0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600137F")]
		[Address(RVA = "0x2D3D9C", Offset = "0x2D3D9C", VA = "0x2D3D9C")]
		set
		{
		}
	}

	[Token(Token = "0x170001D5")]
	public float gain
	{
		[Token(Token = "0x6001382")]
		[Address(RVA = "0x2D4188", Offset = "0x2D4188", VA = "0x2D4188")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001381")]
		[Address(RVA = "0x2D4034", Offset = "0x2D4034", VA = "0x2D4034")]
		set
		{
		}
	}

	[Token(Token = "0x170001D6")]
	public float dryDiffraction
	{
		[Token(Token = "0x6001384")]
		[Address(RVA = "0x2D4420", Offset = "0x2D4420", VA = "0x2D4420")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001383")]
		[Address(RVA = "0x2D42CC", Offset = "0x2D42CC", VA = "0x2D42CC")]
		set
		{
		}
	}

	[Token(Token = "0x170001D7")]
	public float wetDiffraction
	{
		[Token(Token = "0x6001386")]
		[Address(RVA = "0x2D46B8", Offset = "0x2D46B8", VA = "0x2D46B8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001385")]
		[Address(RVA = "0x2D4564", Offset = "0x2D4564", VA = "0x2D4564")]
		set
		{
		}
	}

	[Token(Token = "0x6001375")]
	[Address(RVA = "0x2D33D4", Offset = "0x2D33D4", VA = "0x2D33D4")]
	internal AkPropagationPathInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001376")]
	[Address(RVA = "0x2D33FC", Offset = "0x2D33FC", VA = "0x2D33FC")]
	public AkPropagationPathInfo()
	{
	}

	[Token(Token = "0x6001377")]
	[Address(RVA = "0x2D3544", Offset = "0x2D3544", VA = "0x2D3544")]
	internal static IntPtr getCPtr(AkPropagationPathInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001378")]
	[Address(RVA = "0x2D359C", Offset = "0x2D359C", VA = "0x2D359C", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001379")]
	[Address(RVA = "0x2D35C8", Offset = "0x2D35C8", VA = "0x2D35C8", Slot = "1")]
	~AkPropagationPathInfo()
	{
	}

	[Token(Token = "0x600137A")]
	[Address(RVA = "0x2D3628", Offset = "0x2D3628", VA = "0x2D3628", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001387")]
	[Address(RVA = "0x2D47FC", Offset = "0x2D47FC", VA = "0x2D47FC")]
	public static int GetSizeOf()
	{
		return default(int);
	}

	[Token(Token = "0x6001388")]
	[Address(RVA = "0x2D4924", Offset = "0x2D4924", VA = "0x2D4924")]
	public AkVector GetNodePoint(uint idx)
	{
		return null;
	}

	[Token(Token = "0x6001389")]
	[Address(RVA = "0x2D4AC8", Offset = "0x2D4AC8", VA = "0x2D4AC8")]
	public void Clone(AkPropagationPathInfo other)
	{
	}
}
[Token(Token = "0x2000250")]
public enum AkQueryRTPCValue
{
	[Token(Token = "0x4000F08")]
	RTPCValue_Default,
	[Token(Token = "0x4000F09")]
	RTPCValue_Global,
	[Token(Token = "0x4000F0A")]
	RTPCValue_GameObject,
	[Token(Token = "0x4000F0B")]
	RTPCValue_PlayingID,
	[Token(Token = "0x4000F0C")]
	RTPCValue_Unavailable
}
[Token(Token = "0x2000251")]
public class AkRamp : IDisposable
{
	[Token(Token = "0x4000F0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000F0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170001D8")]
	public float fPrev
	{
		[Token(Token = "0x6001392")]
		[Address(RVA = "0x2D565C", Offset = "0x2D565C", VA = "0x2D565C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001391")]
		[Address(RVA = "0x2D5508", Offset = "0x2D5508", VA = "0x2D5508")]
		set
		{
		}
	}

	[Token(Token = "0x170001D9")]
	public float fNext
	{
		[Token(Token = "0x6001394")]
		[Address(RVA = "0x2D58F4", Offset = "0x2D58F4", VA = "0x2D58F4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001393")]
		[Address(RVA = "0x2D57A0", Offset = "0x2D57A0", VA = "0x2D57A0")]
		set
		{
		}
	}

	[Token(Token = "0x600138A")]
	[Address(RVA = "0x2D4F64", Offset = "0x2D4F64", VA = "0x2D4F64")]
	internal AkRamp(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x600138B")]
	[Address(RVA = "0x2D4F8C", Offset = "0x2D4F8C", VA = "0x2D4F8C")]
	public AkRamp()
	{
	}

	[Token(Token = "0x600138C")]
	[Address(RVA = "0x2D50D4", Offset = "0x2D50D4", VA = "0x2D50D4")]
	public AkRamp(float in_fPrev, float in_fNext)
	{
	}

	[Token(Token = "0x600138D")]
	[Address(RVA = "0x2D5244", Offset = "0x2D5244", VA = "0x2D5244")]
	internal static IntPtr getCPtr(AkRamp obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600138E")]
	[Address(RVA = "0x2D529C", Offset = "0x2D529C", VA = "0x2D529C", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600138F")]
	[Address(RVA = "0x2D52C8", Offset = "0x2D52C8", VA = "0x2D52C8", Slot = "1")]
	~AkRamp()
	{
	}

	[Token(Token = "0x6001390")]
	[Address(RVA = "0x2D5328", Offset = "0x2D5328", VA = "0x2D5328", Slot = "6")]
	public virtual void Dispose()
	{
	}
}
[Token(Token = "0x2000252")]
public class AkReflectionPathInfo : IDisposable
{
	[Token(Token = "0x4000F0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000F10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170001DA")]
	public AkVector imageSource
	{
		[Token(Token = "0x600139C")]
		[Address(RVA = "0x2D5FD4", Offset = "0x2D5FD4", VA = "0x2D5FD4")]
		get
		{
			return null;
		}
		[Token(Token = "0x600139B")]
		[Address(RVA = "0x2D5E6C", Offset = "0x2D5E6C", VA = "0x2D5E6C")]
		set
		{
		}
	}

	[Token(Token = "0x170001DB")]
	public uint numPathPoints
	{
		[Token(Token = "0x600139E")]
		[Address(RVA = "0x2D62BC", Offset = "0x2D62BC", VA = "0x2D62BC")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600139D")]
		[Address(RVA = "0x2D6168", Offset = "0x2D6168", VA = "0x2D6168")]
		set
		{
		}
	}

	[Token(Token = "0x170001DC")]
	public uint numReflections
	{
		[Token(Token = "0x60013A0")]
		[Address(RVA = "0x2D6554", Offset = "0x2D6554", VA = "0x2D6554")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600139F")]
		[Address(RVA = "0x2D6400", Offset = "0x2D6400", VA = "0x2D6400")]
		set
		{
		}
	}

	[Token(Token = "0x170001DD")]
	public AkVector occlusionPoint
	{
		[Token(Token = "0x60013A2")]
		[Address(RVA = "0x2D6800", Offset = "0x2D6800", VA = "0x2D6800")]
		get
		{
			return null;
		}
		[Token(Token = "0x60013A1")]
		[Address(RVA = "0x2D6698", Offset = "0x2D6698", VA = "0x2D6698")]
		set
		{
		}
	}

	[Token(Token = "0x170001DE")]
	public float level
	{
		[Token(Token = "0x60013A4")]
		[Address(RVA = "0x2D6AE8", Offset = "0x2D6AE8", VA = "0x2D6AE8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60013A3")]
		[Address(RVA = "0x2D6994", Offset = "0x2D6994", VA = "0x2D6994")]
		set
		{
		}
	}

	[Token(Token = "0x170001DF")]
	public bool isOccluded
	{
		[Token(Token = "0x60013A6")]
		[Address(RVA = "0x2D6D80", Offset = "0x2D6D80", VA = "0x2D6D80")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60013A5")]
		[Address(RVA = "0x2D6C2C", Offset = "0x2D6C2C", VA = "0x2D6C2C")]
		set
		{
		}
	}

	[Token(Token = "0x6001395")]
	[Address(RVA = "0x2D5A38", Offset = "0x2D5A38", VA = "0x2D5A38")]
	internal AkReflectionPathInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001396")]
	[Address(RVA = "0x2D5A60", Offset = "0x2D5A60", VA = "0x2D5A60")]
	public AkReflectionPathInfo()
	{
	}

	[Token(Token = "0x6001397")]
	[Address(RVA = "0x2D5BA8", Offset = "0x2D5BA8", VA = "0x2D5BA8")]
	internal static IntPtr getCPtr(AkReflectionPathInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001398")]
	[Address(RVA = "0x2D5C00", Offset = "0x2D5C00", VA = "0x2D5C00", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001399")]
	[Address(RVA = "0x2D5C2C", Offset = "0x2D5C2C", VA = "0x2D5C2C", Slot = "1")]
	~AkReflectionPathInfo()
	{
	}

	[Token(Token = "0x600139A")]
	[Address(RVA = "0x2D5C8C", Offset = "0x2D5C8C", VA = "0x2D5C8C", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x60013A7")]
	[Address(RVA = "0x2D6ECC", Offset = "0x2D6ECC", VA = "0x2D6ECC")]
	public static int GetSizeOf()
	{
		return default(int);
	}

	[Token(Token = "0x60013A8")]
	[Address(RVA = "0x2D6FF4", Offset = "0x2D6FF4", VA = "0x2D6FF4")]
	public AkVector GetPathPoint(uint idx)
	{
		return null;
	}

	[Token(Token = "0x60013A9")]
	[Address(RVA = "0x2D7198", Offset = "0x2D7198", VA = "0x2D7198")]
	public AkAcousticSurface GetAcousticSurface(uint idx)
	{
		return null;
	}

	[Token(Token = "0x60013AA")]
	[Address(RVA = "0x2D731C", Offset = "0x2D731C", VA = "0x2D731C")]
	public float GetDiffraction(uint idx)
	{
		return default(float);
	}

	[Token(Token = "0x60013AB")]
	[Address(RVA = "0x2D7470", Offset = "0x2D7470", VA = "0x2D7470")]
	public void Clone(AkReflectionPathInfo other)
	{
	}
}
[Token(Token = "0x2000253")]
public enum AKRESULT
{
	[Token(Token = "0x4000F12")]
	AK_NotImplemented = 0,
	[Token(Token = "0x4000F13")]
	AK_Success = 1,
	[Token(Token = "0x4000F14")]
	AK_Fail = 2,
	[Token(Token = "0x4000F15")]
	AK_PartialSuccess = 3,
	[Token(Token = "0x4000F16")]
	AK_NotCompatible = 4,
	[Token(Token = "0x4000F17")]
	AK_AlreadyConnected = 5,
	[Token(Token = "0x4000F18")]
	AK_NameNotSet = 6,
	[Token(Token = "0x4000F19")]
	AK_InvalidFile = 7,
	[Token(Token = "0x4000F1A")]
	AK_AudioFileHeaderTooLarge = 8,
	[Token(Token = "0x4000F1B")]
	AK_MaxReached = 9,
	[Token(Token = "0x4000F1C")]
	AK_InputsInUsed = 10,
	[Token(Token = "0x4000F1D")]
	AK_OutputsInUsed = 11,
	[Token(Token = "0x4000F1E")]
	AK_InvalidName = 12,
	[Token(Token = "0x4000F1F")]
	AK_NameAlreadyInUse = 13,
	[Token(Token = "0x4000F20")]
	AK_InvalidID = 14,
	[Token(Token = "0x4000F21")]
	AK_IDNotFound = 15,
	[Token(Token = "0x4000F22")]
	AK_InvalidInstanceID = 16,
	[Token(Token = "0x4000F23")]
	AK_NoMoreData = 17,
	[Token(Token = "0x4000F24")]
	AK_NoSourceAvailable = 18,
	[Token(Token = "0x4000F25")]
	AK_StateGroupAlreadyExists = 19,
	[Token(Token = "0x4000F26")]
	AK_InvalidStateGroup = 20,
	[Token(Token = "0x4000F27")]
	AK_ChildAlreadyHasAParent = 21,
	[Token(Token = "0x4000F28")]
	AK_InvalidLanguage = 22,
	[Token(Token = "0x4000F29")]
	AK_CannotAddItseflAsAChild = 23,
	[Token(Token = "0x4000F2A")]
	AK_UserNotInList = 29,
	[Token(Token = "0x4000F2B")]
	AK_NoTransitionPoint = 30,
	[Token(Token = "0x4000F2C")]
	AK_InvalidParameter = 31,
	[Token(Token = "0x4000F2D")]
	AK_ParameterAdjusted = 32,
	[Token(Token = "0x4000F2E")]
	AK_IsA3DSound = 33,
	[Token(Token = "0x4000F2F")]
	AK_NotA3DSound = 34,
	[Token(Token = "0x4000F30")]
	AK_ElementAlreadyInList = 35,
	[Token(Token = "0x4000F31")]
	AK_PathNotFound = 36,
	[Token(Token = "0x4000F32")]
	AK_PathNoVertices = 37,
	[Token(Token = "0x4000F33")]
	AK_PathNotRunning = 38,
	[Token(Token = "0x4000F34")]
	AK_PathNotPaused = 39,
	[Token(Token = "0x4000F35")]
	AK_PathNodeAlreadyInList = 40,
	[Token(Token = "0x4000F36")]
	AK_PathNodeNotInList = 41,
	[Token(Token = "0x4000F37")]
	AK_VoiceNotFound = 42,
	[Token(Token = "0x4000F38")]
	AK_DataNeeded = 43,
	[Token(Token = "0x4000F39")]
	AK_NoDataNeeded = 44,
	[Token(Token = "0x4000F3A")]
	AK_DataReady = 45,
	[Token(Token = "0x4000F3B")]
	AK_NoDataReady = 46,
	[Token(Token = "0x4000F3C")]
	AK_NoMoreSlotAvailable = 47,
	[Token(Token = "0x4000F3D")]
	AK_SlotNotFound = 48,
	[Token(Token = "0x4000F3E")]
	AK_ProcessingOnly = 49,
	[Token(Token = "0x4000F3F")]
	AK_MemoryLeak = 50,
	[Token(Token = "0x4000F40")]
	AK_CorruptedBlockList = 51,
	[Token(Token = "0x4000F41")]
	AK_InsufficientMemory = 52,
	[Token(Token = "0x4000F42")]
	AK_Cancelled = 53,
	[Token(Token = "0x4000F43")]
	AK_UnknownBankID = 54,
	[Token(Token = "0x4000F44")]
	AK_IsProcessing = 55,
	[Token(Token = "0x4000F45")]
	AK_BankReadError = 56,
	[Token(Token = "0x4000F46")]
	AK_InvalidSwitchType = 57,
	[Token(Token = "0x4000F47")]
	AK_VoiceDone = 58,
	[Token(Token = "0x4000F48")]
	AK_UnknownEnvironment = 59,
	[Token(Token = "0x4000F49")]
	AK_EnvironmentInUse = 60,
	[Token(Token = "0x4000F4A")]
	AK_UnknownObject = 61,
	[Token(Token = "0x4000F4B")]
	AK_NoConversionNeeded = 62,
	[Token(Token = "0x4000F4C")]
	AK_FormatNotReady = 63,
	[Token(Token = "0x4000F4D")]
	AK_WrongBankVersion = 64,
	[Token(Token = "0x4000F4E")]
	AK_DataReadyNoProcess = 65,
	[Token(Token = "0x4000F4F")]
	AK_FileNotFound = 66,
	[Token(Token = "0x4000F50")]
	AK_DeviceNotReady = 67,
	[Token(Token = "0x4000F51")]
	AK_CouldNotCreateSecBuffer = 68,
	[Token(Token = "0x4000F52")]
	AK_BankAlreadyLoaded = 69,
	[Token(Token = "0x4000F53")]
	AK_RenderedFX = 71,
	[Token(Token = "0x4000F54")]
	AK_ProcessNeeded = 72,
	[Token(Token = "0x4000F55")]
	AK_ProcessDone = 73,
	[Token(Token = "0x4000F56")]
	AK_MemManagerNotInitialized = 74,
	[Token(Token = "0x4000F57")]
	AK_StreamMgrNotInitialized = 75,
	[Token(Token = "0x4000F58")]
	AK_SSEInstructionsNotSupported = 76,
	[Token(Token = "0x4000F59")]
	AK_Busy = 77,
	[Token(Token = "0x4000F5A")]
	AK_UnsupportedChannelConfig = 78,
	[Token(Token = "0x4000F5B")]
	AK_PluginMediaNotAvailable = 79,
	[Token(Token = "0x4000F5C")]
	AK_MustBeVirtualized = 80,
	[Token(Token = "0x4000F5D")]
	AK_CommandTooLarge = 81,
	[Token(Token = "0x4000F5E")]
	AK_RejectedByFilter = 82,
	[Token(Token = "0x4000F5F")]
	AK_InvalidCustomPlatformName = 83,
	[Token(Token = "0x4000F60")]
	AK_DLLCannotLoad = 84,
	[Token(Token = "0x4000F61")]
	AK_DLLPathNotFound = 85,
	[Token(Token = "0x4000F62")]
	AK_NoJavaVM = 86,
	[Token(Token = "0x4000F63")]
	AK_OpenSLError = 87,
	[Token(Token = "0x4000F64")]
	AK_PluginNotRegistered = 88,
	[Token(Token = "0x4000F65")]
	AK_DataAlignmentError = 89,
	[Token(Token = "0x4000F66")]
	AK_DeviceNotCompatible = 90,
	[Token(Token = "0x4000F67")]
	AK_DuplicateUniqueID = 91
}
[Token(Token = "0x2000254")]
public class AkRoomParams : IDisposable
{
	[Token(Token = "0x4000F68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000F69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170001E0")]
	public AkVector Up
	{
		[Token(Token = "0x60013B3")]
		[Address(RVA = "0x2D7F64", Offset = "0x2D7F64", VA = "0x2D7F64")]
		get
		{
			return null;
		}
		[Token(Token = "0x60013B2")]
		[Address(RVA = "0x2D9294", Offset = "0x2D9294", VA = "0x2D9294")]
		set
		{
		}
	}

	[Token(Token = "0x170001E1")]
	public AkVector Front
	{
		[Token(Token = "0x60013B5")]
		[Address(RVA = "0x2D8038", Offset = "0x2D8038", VA = "0x2D8038")]
		get
		{
			return null;
		}
		[Token(Token = "0x60013B4")]
		[Address(RVA = "0x2D94BC", Offset = "0x2D94BC", VA = "0x2D94BC")]
		set
		{
		}
	}

	[Token(Token = "0x170001E2")]
	public uint ReverbAuxBus
	{
		[Token(Token = "0x60013B7")]
		[Address(RVA = "0x2D97AC", Offset = "0x2D97AC", VA = "0x2D97AC")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60013B6")]
		[Address(RVA = "0x2D810C", Offset = "0x2D810C", VA = "0x2D810C")]
		set
		{
		}
	}

	[Token(Token = "0x170001E3")]
	public float ReverbLevel
	{
		[Token(Token = "0x60013B9")]
		[Address(RVA = "0x2D99B8", Offset = "0x2D99B8", VA = "0x2D99B8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60013B8")]
		[Address(RVA = "0x2D8198", Offset = "0x2D8198", VA = "0x2D8198")]
		set
		{
		}
	}

	[Token(Token = "0x170001E4")]
	public float WallOcclusion
	{
		[Token(Token = "0x60013BB")]
		[Address(RVA = "0x2D9BC4", Offset = "0x2D9BC4", VA = "0x2D9BC4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60013BA")]
		[Address(RVA = "0x2D8224", Offset = "0x2D8224", VA = "0x2D8224")]
		set
		{
		}
	}

	[Token(Token = "0x170001E5")]
	public float RoomGameObj_AuxSendLevelToSelf
	{
		[Token(Token = "0x60013BD")]
		[Address(RVA = "0x2D9DD0", Offset = "0x2D9DD0", VA = "0x2D9DD0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60013BC")]
		[Address(RVA = "0x2D82B0", Offset = "0x2D82B0", VA = "0x2D82B0")]
		set
		{
		}
	}

	[Token(Token = "0x170001E6")]
	public bool RoomGameObj_KeepRegistered
	{
		[Token(Token = "0x60013BF")]
		[Address(RVA = "0x2D9FDC", Offset = "0x2D9FDC", VA = "0x2D9FDC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60013BE")]
		[Address(RVA = "0x2D833C", Offset = "0x2D833C", VA = "0x2D833C")]
		set
		{
		}
	}

	[Token(Token = "0x60013AC")]
	[Address(RVA = "0x2D8EF8", Offset = "0x2D8EF8", VA = "0x2D8EF8")]
	internal AkRoomParams(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60013AD")]
	[Address(RVA = "0x2D7ECC", Offset = "0x2D7ECC", VA = "0x2D7ECC")]
	public AkRoomParams()
	{
	}

	[Token(Token = "0x60013AE")]
	[Address(RVA = "0x2D8FD0", Offset = "0x2D8FD0", VA = "0x2D8FD0")]
	internal static IntPtr getCPtr(AkRoomParams obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60013AF")]
	[Address(RVA = "0x2D9028", Offset = "0x2D9028", VA = "0x2D9028", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60013B0")]
	[Address(RVA = "0x2D9054", Offset = "0x2D9054", VA = "0x2D9054", Slot = "1")]
	~AkRoomParams()
	{
	}

	[Token(Token = "0x60013B1")]
	[Address(RVA = "0x2D90B4", Offset = "0x2D90B4", VA = "0x2D90B4", Slot = "6")]
	public virtual void Dispose()
	{
	}
}
[Token(Token = "0x2000255")]
public class AkSegmentInfo : IDisposable
{
	[Token(Token = "0x4000F6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000F6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170001E7")]
	public int iCurrentPosition
	{
		[Token(Token = "0x60013C7")]
		[Address(RVA = "0x2DD22C", Offset = "0x2DD22C", VA = "0x2DD22C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60013C6")]
		[Address(RVA = "0x2DD0D8", Offset = "0x2DD0D8", VA = "0x2DD0D8")]
		set
		{
		}
	}

	[Token(Token = "0x170001E8")]
	public int iPreEntryDuration
	{
		[Token(Token = "0x60013C9")]
		[Address(RVA = "0x2DD4C4", Offset = "0x2DD4C4", VA = "0x2DD4C4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60013C8")]
		[Address(RVA = "0x2DD370", Offset = "0x2DD370", VA = "0x2DD370")]
		set
		{
		}
	}

	[Token(Token = "0x170001E9")]
	public int iActiveDuration
	{
		[Token(Token = "0x60013CB")]
		[Address(RVA = "0x2DD75C", Offset = "0x2DD75C", VA = "0x2DD75C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60013CA")]
		[Address(RVA = "0x2DD608", Offset = "0x2DD608", VA = "0x2DD608")]
		set
		{
		}
	}

	[Token(Token = "0x170001EA")]
	public int iPostExitDuration
	{
		[Token(Token = "0x60013CD")]
		[Address(RVA = "0x2DD9F4", Offset = "0x2DD9F4", VA = "0x2DD9F4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60013CC")]
		[Address(RVA = "0x2DD8A0", Offset = "0x2DD8A0", VA = "0x2DD8A0")]
		set
		{
		}
	}

	[Token(Token = "0x170001EB")]
	public int iRemainingLookAheadTime
	{
		[Token(Token = "0x60013CF")]
		[Address(RVA = "0x2DDC8C", Offset = "0x2DDC8C", VA = "0x2DDC8C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60013CE")]
		[Address(RVA = "0x2DDB38", Offset = "0x2DDB38", VA = "0x2DDB38")]
		set
		{
		}
	}

	[Token(Token = "0x170001EC")]
	public float fBeatDuration
	{
		[Token(Token = "0x60013D1")]
		[Address(RVA = "0x2DDF24", Offset = "0x2DDF24", VA = "0x2DDF24")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60013D0")]
		[Address(RVA = "0x2DDDD0", Offset = "0x2DDDD0", VA = "0x2DDDD0")]
		set
		{
		}
	}

	[Token(Token = "0x170001ED")]
	public float fBarDuration
	{
		[Token(Token = "0x60013D3")]
		[Address(RVA = "0x2DE1BC", Offset = "0x2DE1BC", VA = "0x2DE1BC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60013D2")]
		[Address(RVA = "0x2DE068", Offset = "0x2DE068", VA = "0x2DE068")]
		set
		{
		}
	}

	[Token(Token = "0x170001EE")]
	public float fGridDuration
	{
		[Token(Token = "0x60013D5")]
		[Address(RVA = "0x2DE454", Offset = "0x2DE454", VA = "0x2DE454")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60013D4")]
		[Address(RVA = "0x2DE300", Offset = "0x2DE300", VA = "0x2DE300")]
		set
		{
		}
	}

	[Token(Token = "0x170001EF")]
	public float fGridOffset
	{
		[Token(Token = "0x60013D7")]
		[Address(RVA = "0x2DE6EC", Offset = "0x2DE6EC", VA = "0x2DE6EC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60013D6")]
		[Address(RVA = "0x2DE598", Offset = "0x2DE598", VA = "0x2DE598")]
		set
		{
		}
	}

	[Token(Token = "0x60013C0")]
	[Address(RVA = "0x2DCCA4", Offset = "0x2DCCA4", VA = "0x2DCCA4")]
	internal AkSegmentInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60013C1")]
	[Address(RVA = "0x2DCCCC", Offset = "0x2DCCCC", VA = "0x2DCCCC")]
	public AkSegmentInfo()
	{
	}

	[Token(Token = "0x60013C2")]
	[Address(RVA = "0x2DCE14", Offset = "0x2DCE14", VA = "0x2DCE14")]
	internal static IntPtr getCPtr(AkSegmentInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60013C3")]
	[Address(RVA = "0x2DCE6C", Offset = "0x2DCE6C", VA = "0x2DCE6C", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60013C4")]
	[Address(RVA = "0x2DCE98", Offset = "0x2DCE98", VA = "0x2DCE98", Slot = "1")]
	~AkSegmentInfo()
	{
	}

	[Token(Token = "0x60013C5")]
	[Address(RVA = "0x2DCEF8", Offset = "0x2DCEF8", VA = "0x2DCEF8", Slot = "6")]
	public virtual void Dispose()
	{
	}
}
[Token(Token = "0x2000256")]
public class AkSerializedCallbackHeader : IDisposable
{
	[Token(Token = "0x4000F6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000F6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170001F0")]
	public IntPtr pPackage
	{
		[Token(Token = "0x60013DE")]
		[Address(RVA = "0x2DEC64", Offset = "0x2DEC64", VA = "0x2DEC64")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x170001F1")]
	public AkSerializedCallbackHeader pNext
	{
		[Token(Token = "0x60013DF")]
		[Address(RVA = "0x2DEDA8", Offset = "0x2DEDA8", VA = "0x2DEDA8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001F2")]
	public AkCallbackType eType
	{
		[Token(Token = "0x60013E0")]
		[Address(RVA = "0x2DEF40", Offset = "0x2DEF40", VA = "0x2DEF40")]
		get
		{
			return default(AkCallbackType);
		}
	}

	[Token(Token = "0x60013D8")]
	[Address(RVA = "0x2DE830", Offset = "0x2DE830", VA = "0x2DE830")]
	internal AkSerializedCallbackHeader(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60013D9")]
	[Address(RVA = "0x2DE858", Offset = "0x2DE858", VA = "0x2DE858")]
	public AkSerializedCallbackHeader()
	{
	}

	[Token(Token = "0x60013DA")]
	[Address(RVA = "0x2DE9A0", Offset = "0x2DE9A0", VA = "0x2DE9A0")]
	internal static IntPtr getCPtr(AkSerializedCallbackHeader obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60013DB")]
	[Address(RVA = "0x2DE9F8", Offset = "0x2DE9F8", VA = "0x2DE9F8", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60013DC")]
	[Address(RVA = "0x2DEA24", Offset = "0x2DEA24", VA = "0x2DEA24", Slot = "1")]
	~AkSerializedCallbackHeader()
	{
	}

	[Token(Token = "0x60013DD")]
	[Address(RVA = "0x2DEA84", Offset = "0x2DEA84", VA = "0x2DEA84", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x60013E1")]
	[Address(RVA = "0x2DF084", Offset = "0x2DF084", VA = "0x2DF084")]
	public IntPtr GetData()
	{
		return default(IntPtr);
	}
}
[Token(Token = "0x2000257")]
public enum AkSourceChannelOrdering
{
	[Token(Token = "0x4000F6F")]
	SourceChannelOrdering_Standard,
	[Token(Token = "0x4000F70")]
	SourceChannelOrdering_Film,
	[Token(Token = "0x4000F71")]
	SourceChannelOrdering_FuMa
}
[Token(Token = "0x2000258")]
public class AkSourceSettings : IDisposable
{
	[Token(Token = "0x4000F72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000F73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170001F3")]
	public uint sourceID
	{
		[Token(Token = "0x60013E9")]
		[Address(RVA = "0x261794", Offset = "0x261794", VA = "0x261794")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60013E8")]
		[Address(RVA = "0x261700", Offset = "0x261700", VA = "0x261700")]
		set
		{
		}
	}

	[Token(Token = "0x170001F4")]
	public IntPtr pMediaMemory
	{
		[Token(Token = "0x60013EB")]
		[Address(RVA = "0x2618B4", Offset = "0x2618B4", VA = "0x2618B4")]
		get
		{
			return default(IntPtr);
		}
		[Token(Token = "0x60013EA")]
		[Address(RVA = "0x261820", Offset = "0x261820", VA = "0x261820")]
		set
		{
		}
	}

	[Token(Token = "0x170001F5")]
	public uint uMediaSize
	{
		[Token(Token = "0x60013ED")]
		[Address(RVA = "0x2619D4", Offset = "0x2619D4", VA = "0x2619D4")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60013EC")]
		[Address(RVA = "0x261940", Offset = "0x261940", VA = "0x261940")]
		set
		{
		}
	}

	[Token(Token = "0x60013E2")]
	[Address(RVA = "0x26142C", Offset = "0x26142C", VA = "0x26142C")]
	internal AkSourceSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60013E3")]
	[Address(RVA = "0x261454", Offset = "0x261454", VA = "0x261454")]
	public AkSourceSettings()
	{
	}

	[Token(Token = "0x60013E4")]
	[Address(RVA = "0x2614F4", Offset = "0x2614F4", VA = "0x2614F4")]
	internal static IntPtr getCPtr(AkSourceSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60013E5")]
	[Address(RVA = "0x26154C", Offset = "0x26154C", VA = "0x26154C", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60013E6")]
	[Address(RVA = "0x261578", Offset = "0x261578", VA = "0x261578", Slot = "1")]
	~AkSourceSettings()
	{
	}

	[Token(Token = "0x60013E7")]
	[Address(RVA = "0x2615D8", Offset = "0x2615D8", VA = "0x2615D8", Slot = "6")]
	public virtual void Dispose()
	{
	}
}
[Token(Token = "0x2000259")]
public class AkSpatialAudioInitSettings : IDisposable
{
	[Token(Token = "0x4000F74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000F75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170001F6")]
	public int uPoolID
	{
		[Token(Token = "0x60013F5")]
		[Address(RVA = "0x262450", Offset = "0x262450", VA = "0x262450")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60013F4")]
		[Address(RVA = "0x2623BC", Offset = "0x2623BC", VA = "0x2623BC")]
		set
		{
		}
	}

	[Token(Token = "0x170001F7")]
	public uint uPoolSize
	{
		[Token(Token = "0x60013F7")]
		[Address(RVA = "0x262570", Offset = "0x262570", VA = "0x262570")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60013F6")]
		[Address(RVA = "0x2624DC", Offset = "0x2624DC", VA = "0x2624DC")]
		set
		{
		}
	}

	[Token(Token = "0x170001F8")]
	public uint uMaxSoundPropagationDepth
	{
		[Token(Token = "0x60013F9")]
		[Address(RVA = "0x262690", Offset = "0x262690", VA = "0x262690")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60013F8")]
		[Address(RVA = "0x2625FC", Offset = "0x2625FC", VA = "0x2625FC")]
		set
		{
		}
	}

	[Token(Token = "0x170001F9")]
	public uint uDiffractionFlags
	{
		[Token(Token = "0x60013FB")]
		[Address(RVA = "0x2627B0", Offset = "0x2627B0", VA = "0x2627B0")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60013FA")]
		[Address(RVA = "0x26271C", Offset = "0x26271C", VA = "0x26271C")]
		set
		{
		}
	}

	[Token(Token = "0x170001FA")]
	public float fDiffractionShadowAttenFactor
	{
		[Token(Token = "0x60013FD")]
		[Address(RVA = "0x2628D0", Offset = "0x2628D0", VA = "0x2628D0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60013FC")]
		[Address(RVA = "0x26283C", Offset = "0x26283C", VA = "0x26283C")]
		set
		{
		}
	}

	[Token(Token = "0x170001FB")]
	public float fDiffractionShadowDegrees
	{
		[Token(Token = "0x60013FF")]
		[Address(RVA = "0x2629F0", Offset = "0x2629F0", VA = "0x2629F0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60013FE")]
		[Address(RVA = "0x26295C", Offset = "0x26295C", VA = "0x26295C")]
		set
		{
		}
	}

	[Token(Token = "0x60013EE")]
	[Address(RVA = "0x2620E8", Offset = "0x2620E8", VA = "0x2620E8")]
	internal AkSpatialAudioInitSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60013EF")]
	[Address(RVA = "0x262110", Offset = "0x262110", VA = "0x262110")]
	public AkSpatialAudioInitSettings()
	{
	}

	[Token(Token = "0x60013F0")]
	[Address(RVA = "0x2621B0", Offset = "0x2621B0", VA = "0x2621B0")]
	internal static IntPtr getCPtr(AkSpatialAudioInitSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60013F1")]
	[Address(RVA = "0x262208", Offset = "0x262208", VA = "0x262208", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60013F2")]
	[Address(RVA = "0x262234", Offset = "0x262234", VA = "0x262234", Slot = "1")]
	~AkSpatialAudioInitSettings()
	{
	}

	[Token(Token = "0x60013F3")]
	[Address(RVA = "0x262294", Offset = "0x262294", VA = "0x262294", Slot = "6")]
	public virtual void Dispose()
	{
	}
}
[Token(Token = "0x200025A")]
public enum AkSpeakerPanningType
{
	[Token(Token = "0x4000F77")]
	AK_DirectSpeakerAssignment,
	[Token(Token = "0x4000F78")]
	AK_BalanceFadeHeight
}
[Token(Token = "0x200025B")]
public class AkStreamMgrSettings : IDisposable
{
	[Token(Token = "0x4000F79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000F7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170001FC")]
	public uint uMemorySize
	{
		[Token(Token = "0x6001407")]
		[Address(RVA = "0x263AB0", Offset = "0x263AB0", VA = "0x263AB0")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001406")]
		[Address(RVA = "0x263A1C", Offset = "0x263A1C", VA = "0x263A1C")]
		set
		{
		}
	}

	[Token(Token = "0x6001400")]
	[Address(RVA = "0x263748", Offset = "0x263748", VA = "0x263748")]
	internal AkStreamMgrSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001401")]
	[Address(RVA = "0x263770", Offset = "0x263770", VA = "0x263770")]
	public AkStreamMgrSettings()
	{
	}

	[Token(Token = "0x6001402")]
	[Address(RVA = "0x263810", Offset = "0x263810", VA = "0x263810")]
	internal static IntPtr getCPtr(AkStreamMgrSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001403")]
	[Address(RVA = "0x263868", Offset = "0x263868", VA = "0x263868", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001404")]
	[Address(RVA = "0x263894", Offset = "0x263894", VA = "0x263894", Slot = "1")]
	~AkStreamMgrSettings()
	{
	}

	[Token(Token = "0x6001405")]
	[Address(RVA = "0x2638F4", Offset = "0x2638F4", VA = "0x2638F4", Slot = "6")]
	public virtual void Dispose()
	{
	}
}
[Token(Token = "0x200025C")]
public class AkTaskContext : IDisposable
{
	[Token(Token = "0x4000F7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000F7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170001FD")]
	public uint uIdxThread
	{
		[Token(Token = "0x600140F")]
		[Address(RVA = "0x26564C", Offset = "0x26564C", VA = "0x26564C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600140E")]
		[Address(RVA = "0x2655B8", Offset = "0x2655B8", VA = "0x2655B8")]
		set
		{
		}
	}

	[Token(Token = "0x6001408")]
	[Address(RVA = "0x2652E4", Offset = "0x2652E4", VA = "0x2652E4")]
	internal AkTaskContext(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001409")]
	[Address(RVA = "0x26530C", Offset = "0x26530C", VA = "0x26530C")]
	public AkTaskContext()
	{
	}

	[Token(Token = "0x600140A")]
	[Address(RVA = "0x2653AC", Offset = "0x2653AC", VA = "0x2653AC")]
	internal static IntPtr getCPtr(AkTaskContext obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600140B")]
	[Address(RVA = "0x265404", Offset = "0x265404", VA = "0x265404", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600140C")]
	[Address(RVA = "0x265430", Offset = "0x265430", VA = "0x265430", Slot = "1")]
	~AkTaskContext()
	{
	}

	[Token(Token = "0x600140D")]
	[Address(RVA = "0x265490", Offset = "0x265490", VA = "0x265490", Slot = "6")]
	public virtual void Dispose()
	{
	}
}
[Token(Token = "0x200025D")]
public class AkTransform : IDisposable
{
	[Token(Token = "0x4000F7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000F7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool swigCMemOwn;

	[Token(Token = "0x6001410")]
	[Address(RVA = "0x265E34", Offset = "0x265E34", VA = "0x265E34")]
	internal AkTransform(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001411")]
	[Address(RVA = "0x265E5C", Offset = "0x265E5C", VA = "0x265E5C")]
	public AkTransform()
	{
	}

	[Token(Token = "0x6001412")]
	[Address(RVA = "0x265EFC", Offset = "0x265EFC", VA = "0x265EFC")]
	internal static IntPtr getCPtr(AkTransform obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001413")]
	[Address(RVA = "0x265F54", Offset = "0x265F54", VA = "0x265F54", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001414")]
	[Address(RVA = "0x265F80", Offset = "0x265F80", VA = "0x265F80", Slot = "1")]
	~AkTransform()
	{
	}

	[Token(Token = "0x6001415")]
	[Address(RVA = "0x265FE0", Offset = "0x265FE0", VA = "0x265FE0", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001416")]
	[Address(RVA = "0x266108", Offset = "0x266108", VA = "0x266108")]
	public AkVector Position()
	{
		return null;
	}

	[Token(Token = "0x6001417")]
	[Address(RVA = "0x2661F0", Offset = "0x2661F0", VA = "0x2661F0")]
	public AkVector OrientationFront()
	{
		return null;
	}

	[Token(Token = "0x6001418")]
	[Address(RVA = "0x2662B0", Offset = "0x2662B0", VA = "0x2662B0")]
	public AkVector OrientationTop()
	{
		return null;
	}

	[Token(Token = "0x6001419")]
	[Address(RVA = "0x266370", Offset = "0x266370", VA = "0x266370")]
	public void Set(AkVector in_position, AkVector in_orientationFront, AkVector in_orientationTop)
	{
	}

	[Token(Token = "0x600141A")]
	[Address(RVA = "0x2664D8", Offset = "0x2664D8", VA = "0x2664D8")]
	public void Set(float in_positionX, float in_positionY, float in_positionZ, float in_orientFrontX, float in_orientFrontY, float in_orientFrontZ, float in_orientTopX, float in_orientTopY, float in_orientTopZ)
	{
	}

	[Token(Token = "0x600141B")]
	[Address(RVA = "0x2665C4", Offset = "0x2665C4", VA = "0x2665C4")]
	public void SetPosition(AkVector in_position)
	{
	}

	[Token(Token = "0x600141C")]
	[Address(RVA = "0x2666A0", Offset = "0x2666A0", VA = "0x2666A0")]
	public void SetPosition(float in_x, float in_y, float in_z)
	{
	}

	[Token(Token = "0x600141D")]
	[Address(RVA = "0x26675C", Offset = "0x26675C", VA = "0x26675C")]
	public void SetOrientation(AkVector in_orientationFront, AkVector in_orientationTop)
	{
	}

	[Token(Token = "0x600141E")]
	[Address(RVA = "0x266858", Offset = "0x266858", VA = "0x266858")]
	public void SetOrientation(float in_orientFrontX, float in_orientFrontY, float in_orientFrontZ, float in_orientTopX, float in_orientTopY, float in_orientTopZ)
	{
	}
}
[Token(Token = "0x200025E")]
public class AkTriangle : IDisposable
{
	[Token(Token = "0x4000F7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000F80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170001FE")]
	public ushort point0
	{
		[Token(Token = "0x6001427")]
		[Address(RVA = "0x266CCC", Offset = "0x266CCC", VA = "0x266CCC")]
		get
		{
			return default(ushort);
		}
		[Token(Token = "0x6001426")]
		[Address(RVA = "0x264D5C", Offset = "0x264D5C", VA = "0x264D5C")]
		set
		{
		}
	}

	[Token(Token = "0x170001FF")]
	public ushort point1
	{
		[Token(Token = "0x6001429")]
		[Address(RVA = "0x266D58", Offset = "0x266D58", VA = "0x266D58")]
		get
		{
			return default(ushort);
		}
		[Token(Token = "0x6001428")]
		[Address(RVA = "0x264DF0", Offset = "0x264DF0", VA = "0x264DF0")]
		set
		{
		}
	}

	[Token(Token = "0x17000200")]
	public ushort point2
	{
		[Token(Token = "0x600142B")]
		[Address(RVA = "0x266DE4", Offset = "0x266DE4", VA = "0x266DE4")]
		get
		{
			return default(ushort);
		}
		[Token(Token = "0x600142A")]
		[Address(RVA = "0x264E84", Offset = "0x264E84", VA = "0x264E84")]
		set
		{
		}
	}

	[Token(Token = "0x17000201")]
	public ushort surface
	{
		[Token(Token = "0x600142D")]
		[Address(RVA = "0x266E70", Offset = "0x266E70", VA = "0x266E70")]
		get
		{
			return default(ushort);
		}
		[Token(Token = "0x600142C")]
		[Address(RVA = "0x264F18", Offset = "0x264F18", VA = "0x264F18")]
		set
		{
		}
	}

	[Token(Token = "0x600141F")]
	[Address(RVA = "0x26692C", Offset = "0x26692C", VA = "0x26692C")]
	internal AkTriangle(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001420")]
	[Address(RVA = "0x266954", Offset = "0x266954", VA = "0x266954")]
	public AkTriangle()
	{
	}

	[Token(Token = "0x6001421")]
	[Address(RVA = "0x2669F4", Offset = "0x2669F4", VA = "0x2669F4")]
	public AkTriangle(ushort in_pt0, ushort in_pt1, ushort in_pt2, ushort in_surfaceInfo)
	{
	}

	[Token(Token = "0x6001422")]
	[Address(RVA = "0x266AC0", Offset = "0x266AC0", VA = "0x266AC0")]
	internal static IntPtr getCPtr(AkTriangle obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001423")]
	[Address(RVA = "0x266B18", Offset = "0x266B18", VA = "0x266B18", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001424")]
	[Address(RVA = "0x266B44", Offset = "0x266B44", VA = "0x266B44", Slot = "1")]
	~AkTriangle()
	{
	}

	[Token(Token = "0x6001425")]
	[Address(RVA = "0x266BA4", Offset = "0x266BA4", VA = "0x266BA4", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x600142E")]
	[Address(RVA = "0x266EFC", Offset = "0x266EFC", VA = "0x266EFC")]
	public void Clear()
	{
	}

	[Token(Token = "0x600142F")]
	[Address(RVA = "0x266F88", Offset = "0x266F88", VA = "0x266F88")]
	public static int GetSizeOf()
	{
		return default(int);
	}

	[Token(Token = "0x6001430")]
	[Address(RVA = "0x267008", Offset = "0x267008", VA = "0x267008")]
	public void Clone(AkTriangle other)
	{
	}
}
[Token(Token = "0x200025F")]
public class AkVector : IDisposable
{
	[Token(Token = "0x4000F81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000F82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000202")]
	public float X
	{
		[Token(Token = "0x6001439")]
		[Address(RVA = "0x269B80", Offset = "0x269B80", VA = "0x269B80")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001438")]
		[Address(RVA = "0x269AEC", Offset = "0x269AEC", VA = "0x269AEC")]
		set
		{
		}
	}

	[Token(Token = "0x17000203")]
	public float Y
	{
		[Token(Token = "0x600143B")]
		[Address(RVA = "0x269CA0", Offset = "0x269CA0", VA = "0x269CA0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600143A")]
		[Address(RVA = "0x269C0C", Offset = "0x269C0C", VA = "0x269C0C")]
		set
		{
		}
	}

	[Token(Token = "0x17000204")]
	public float Z
	{
		[Token(Token = "0x600143D")]
		[Address(RVA = "0x269DC0", Offset = "0x269DC0", VA = "0x269DC0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600143C")]
		[Address(RVA = "0x269D2C", Offset = "0x269D2C", VA = "0x269D2C")]
		set
		{
		}
	}

	[Token(Token = "0x6001431")]
	[Address(RVA = "0x2661C8", Offset = "0x2661C8", VA = "0x2661C8")]
	internal AkVector(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001432")]
	[Address(RVA = "0x26980C", Offset = "0x26980C", VA = "0x26980C")]
	public AkVector()
	{
	}

	[Token(Token = "0x6001433")]
	[Address(RVA = "0x266480", Offset = "0x266480", VA = "0x266480")]
	internal static IntPtr getCPtr(AkVector obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001434")]
	[Address(RVA = "0x2698AC", Offset = "0x2698AC", VA = "0x2698AC", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001435")]
	[Address(RVA = "0x2698D8", Offset = "0x2698D8", VA = "0x2698D8", Slot = "1")]
	~AkVector()
	{
	}

	[Token(Token = "0x6001436")]
	[Address(RVA = "0x269938", Offset = "0x269938", VA = "0x269938", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001437")]
	[Address(RVA = "0x269A60", Offset = "0x269A60", VA = "0x269A60")]
	public void Zero()
	{
	}
}
[Token(Token = "0x2000260")]
public class AkVertex : IDisposable
{
	[Token(Token = "0x4000F83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000F84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000205")]
	public float X
	{
		[Token(Token = "0x6001446")]
		[Address(RVA = "0x26A1E4", Offset = "0x26A1E4", VA = "0x26A1E4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001445")]
		[Address(RVA = "0x264B34", Offset = "0x264B34", VA = "0x264B34")]
		set
		{
		}
	}

	[Token(Token = "0x17000206")]
	public float Y
	{
		[Token(Token = "0x6001448")]
		[Address(RVA = "0x26A270", Offset = "0x26A270", VA = "0x26A270")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001447")]
		[Address(RVA = "0x264BC8", Offset = "0x264BC8", VA = "0x264BC8")]
		set
		{
		}
	}

	[Token(Token = "0x17000207")]
	public float Z
	{
		[Token(Token = "0x600144A")]
		[Address(RVA = "0x26A2FC", Offset = "0x26A2FC", VA = "0x26A2FC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001449")]
		[Address(RVA = "0x264C5C", Offset = "0x264C5C", VA = "0x264C5C")]
		set
		{
		}
	}

	[Token(Token = "0x600143E")]
	[Address(RVA = "0x269E4C", Offset = "0x269E4C", VA = "0x269E4C")]
	internal AkVertex(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x600143F")]
	[Address(RVA = "0x269E74", Offset = "0x269E74", VA = "0x269E74")]
	public AkVertex()
	{
	}

	[Token(Token = "0x6001440")]
	[Address(RVA = "0x269F14", Offset = "0x269F14", VA = "0x269F14")]
	public AkVertex(float in_X, float in_Y, float in_Z)
	{
	}

	[Token(Token = "0x6001441")]
	[Address(RVA = "0x269FD8", Offset = "0x269FD8", VA = "0x269FD8")]
	internal static IntPtr getCPtr(AkVertex obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001442")]
	[Address(RVA = "0x26A030", Offset = "0x26A030", VA = "0x26A030", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001443")]
	[Address(RVA = "0x26A05C", Offset = "0x26A05C", VA = "0x26A05C", Slot = "1")]
	~AkVertex()
	{
	}

	[Token(Token = "0x6001444")]
	[Address(RVA = "0x26A0BC", Offset = "0x26A0BC", VA = "0x26A0BC", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x600144B")]
	[Address(RVA = "0x26A388", Offset = "0x26A388", VA = "0x26A388")]
	public void Clear()
	{
	}

	[Token(Token = "0x600144C")]
	[Address(RVA = "0x26A414", Offset = "0x26A414", VA = "0x26A414")]
	public static int GetSizeOf()
	{
		return default(int);
	}

	[Token(Token = "0x600144D")]
	[Address(RVA = "0x26A494", Offset = "0x26A494", VA = "0x26A494")]
	public void Clone(AkVertex other)
	{
	}
}
[Token(Token = "0x2000261")]
public class AkAndroidSettings : AkWwiseInitializationSettings.PlatformSettings
{
	[Serializable]
	[Token(Token = "0x2000262")]
	public class PlatformAdvancedSettings : AkCommonAdvancedSettings
	{
		[Token(Token = "0x4000F88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16C178", Offset = "0x16C178")]
		public bool m_RoundFrameSizeToHardwareSize;

		[Token(Token = "0x6001452")]
		[Address(RVA = "0x494580", Offset = "0x494580", VA = "0x494580")]
		public PlatformAdvancedSettings()
		{
		}

		[Token(Token = "0x6001453")]
		[Address(RVA = "0x494614", Offset = "0x494614", VA = "0x494614")]
		public void CopyTo(AkPlatformInitSettings settings)
		{
		}
	}

	[Token(Token = "0x4000F85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public AkCommonUserSettings UserSettings;

	[Token(Token = "0x4000F86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public PlatformAdvancedSettings AdvancedSettings;

	[Token(Token = "0x4000F87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public AkCommonCommSettings CommsSettings;

	[Token(Token = "0x600144E")]
	[Address(RVA = "0x4941D0", Offset = "0x4941D0", VA = "0x4941D0")]
	public AkAndroidSettings()
	{
	}

	[Token(Token = "0x600144F")]
	[Address(RVA = "0x494568", Offset = "0x494568", VA = "0x494568", Slot = "10")]
	protected override AkCommonUserSettings GetUserSettings()
	{
		return null;
	}

	[Token(Token = "0x6001450")]
	[Address(RVA = "0x494570", Offset = "0x494570", VA = "0x494570", Slot = "11")]
	protected override AkCommonAdvancedSettings GetAdvancedSettings()
	{
		return null;
	}

	[Token(Token = "0x6001451")]
	[Address(RVA = "0x494578", Offset = "0x494578", VA = "0x494578", Slot = "12")]
	protected override AkCommonCommSettings GetCommsSettings()
	{
		return null;
	}
}
[Token(Token = "0x2000263")]
public class AkAcousticSurfaceArray : AkBaseArray<AkAcousticSurface>
{
	[Token(Token = "0x17000208")]
	protected override int StructureSize
	{
		[Token(Token = "0x6001455")]
		[Address(RVA = "0x492948", Offset = "0x492948", VA = "0x492948", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6001454")]
	[Address(RVA = "0x4928DC", Offset = "0x4928DC", VA = "0x4928DC")]
	public AkAcousticSurfaceArray(int count)
	{
	}

	[Token(Token = "0x6001456")]
	[Address(RVA = "0x4929C8", Offset = "0x4929C8", VA = "0x4929C8", Slot = "7")]
	protected override void ClearAtIntPtr(IntPtr address)
	{
	}

	[Token(Token = "0x6001457")]
	[Address(RVA = "0x492A50", Offset = "0x492A50", VA = "0x492A50", Slot = "8")]
	protected override AkAcousticSurface CreateNewReferenceFromIntPtr(IntPtr address)
	{
		return null;
	}

	[Token(Token = "0x6001458")]
	[Address(RVA = "0x492ACC", Offset = "0x492ACC", VA = "0x492ACC", Slot = "9")]
	protected override void CloneIntoReferenceFromIntPtr(IntPtr address, AkAcousticSurface other)
	{
	}
}
[Token(Token = "0x2000264")]
public static class AkAudioInputManager
{
	[Token(Token = "0x2000265")]
	public delegate void AudioFormatDelegate(uint playingID, AkAudioFormat format);

	[Token(Token = "0x2000266")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x16C2EC", Offset = "0x16C2EC")]
	public delegate void AudioFormatInteropDelegate(uint playingID, IntPtr format);

	[Token(Token = "0x2000267")]
	public delegate bool AudioSamplesDelegate(uint playingID, uint channelIndex, float[] samples);

	[Token(Token = "0x2000268")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x16C300", Offset = "0x16C300")]
	public delegate bool AudioSamplesInteropDelegate(uint playingID, [In][Out] float[] samples, uint channelIndex, uint frames);

	[Token(Token = "0x4000F89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool initialized;

	[Token(Token = "0x4000F8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly Dictionary<uint, AudioSamplesDelegate> audioSamplesDelegates;

	[Token(Token = "0x4000F8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly Dictionary<uint, AudioFormatDelegate> audioFormatDelegates;

	[Token(Token = "0x4000F8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly AkAudioFormat audioFormat;

	[Token(Token = "0x4000F8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly AudioSamplesInteropDelegate audioSamplesDelegate;

	[Token(Token = "0x4000F8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private static readonly AudioFormatInteropDelegate audioFormatDelegate;

	[Token(Token = "0x4000F8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16C1AC", Offset = "0x16C1AC")]
	private static AkCallbackManager.EventCallback <>f__mg$cache0;

	[Token(Token = "0x4000F90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16C1BC", Offset = "0x16C1BC")]
	private static AkCallbackManager.EventCallback <>f__mg$cache1;

	[Token(Token = "0x4000F91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16C1CC", Offset = "0x16C1CC")]
	private static AkCallbackManager.EventCallback <>f__mg$cache2;

	[Token(Token = "0x4000F92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16C1DC", Offset = "0x16C1DC")]
	private static AudioSamplesInteropDelegate <>f__mg$cache3;

	[Token(Token = "0x4000F93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16C1EC", Offset = "0x16C1EC")]
	private static AudioFormatInteropDelegate <>f__mg$cache4;

	[Token(Token = "0x6001459")]
	[Address(RVA = "0x4959F8", Offset = "0x4959F8", VA = "0x4959F8")]
	public static uint PostAudioInputEvent(Event akEvent, GameObject gameObject, AudioSamplesDelegate sampleDelegate, [Optional] AudioFormatDelegate formatDelegate)
	{
		return default(uint);
	}

	[Token(Token = "0x600145A")]
	[Address(RVA = "0x495E20", Offset = "0x495E20", VA = "0x495E20")]
	public static uint PostAudioInputEvent(uint akEventID, GameObject gameObject, AudioSamplesDelegate sampleDelegate, [Optional] AudioFormatDelegate formatDelegate)
	{
		return default(uint);
	}

	[Token(Token = "0x600145B")]
	[Address(RVA = "0x495FFC", Offset = "0x495FFC", VA = "0x495FFC")]
	public static uint PostAudioInputEvent(string akEventName, GameObject gameObject, AudioSamplesDelegate sampleDelegate, [Optional] AudioFormatDelegate formatDelegate)
	{
		return default(uint);
	}

	[Token(Token = "0x600145C")]
	[Address(RVA = "0x49567C", Offset = "0x49567C", VA = "0x49567C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x16C1FC", Offset = "0x16C1FC")]
	private static bool InternalAudioSamplesDelegate(uint playingID, float[] samples, uint channelIndex, uint frames)
	{
		return default(bool);
	}

	[Token(Token = "0x600145D")]
	[Address(RVA = "0x495850", Offset = "0x495850", VA = "0x495850")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x16C274", Offset = "0x16C274")]
	private static void InternalAudioFormatDelegate(uint playingID, IntPtr format)
	{
	}

	[Token(Token = "0x600145E")]
	[Address(RVA = "0x495BAC", Offset = "0x495BAC", VA = "0x495BAC")]
	private static void TryInitialize()
	{
	}

	[Token(Token = "0x600145F")]
	[Address(RVA = "0x495CD4", Offset = "0x495CD4", VA = "0x495CD4")]
	private static void AddPlayingID(uint playingID, AudioSamplesDelegate sampleDelegate, AudioFormatDelegate formatDelegate)
	{
	}

	[Token(Token = "0x6001460")]
	[Address(RVA = "0x496630", Offset = "0x496630", VA = "0x496630")]
	private static void EventCallback(object cookie, AkCallbackType type, AkCallbackInfo callbackInfo)
	{
	}
}
[Token(Token = "0x2000269")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x16C314", Offset = "0x16C314")]
public class AkAuxSendArray : IDisposable
{
	[Token(Token = "0x4000F94")]
	private const int MAX_COUNT = 4;

	[Token(Token = "0x4000F95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private readonly int SIZE_OF_AKAUXSENDVALUE;

	[Token(Token = "0x4000F96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private IntPtr m_Buffer;

	[Token(Token = "0x4000F97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int m_Count;

	[Token(Token = "0x17000209")]
	public AkAuxSendValue Item
	{
		[Token(Token = "0x6001473")]
		[Address(RVA = "0x499050", Offset = "0x499050", VA = "0x499050")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700020A")]
	public bool isFull
	{
		[Token(Token = "0x6001474")]
		[Address(RVA = "0x4991DC", Offset = "0x4991DC", VA = "0x4991DC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001472")]
	[Address(RVA = "0x498F70", Offset = "0x498F70", VA = "0x498F70")]
	public AkAuxSendArray()
	{
	}

	[Token(Token = "0x6001475")]
	[Address(RVA = "0x49924C", Offset = "0x49924C", VA = "0x49924C", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x6001476")]
	[Address(RVA = "0x499300", Offset = "0x499300", VA = "0x499300", Slot = "1")]
	~AkAuxSendArray()
	{
	}

	[Token(Token = "0x6001477")]
	[Address(RVA = "0x49935C", Offset = "0x49935C", VA = "0x49935C")]
	public void Reset()
	{
	}

	[Token(Token = "0x6001478")]
	[Address(RVA = "0x499368", Offset = "0x499368", VA = "0x499368")]
	public bool Add(GameObject in_listenerGameObj, uint in_AuxBusID, float in_fValue)
	{
		return default(bool);
	}

	[Token(Token = "0x6001479")]
	[Address(RVA = "0x4994C8", Offset = "0x4994C8", VA = "0x4994C8")]
	public bool Add(uint in_AuxBusID, float in_fValue)
	{
		return default(bool);
	}

	[Token(Token = "0x600147A")]
	[Address(RVA = "0x4995DC", Offset = "0x4995DC", VA = "0x4995DC")]
	public bool Contains(GameObject in_listenerGameObj, uint in_AuxBusID)
	{
		return default(bool);
	}

	[Token(Token = "0x600147B")]
	[Address(RVA = "0x499760", Offset = "0x499760", VA = "0x499760")]
	public bool Contains(uint in_AuxBusID)
	{
		return default(bool);
	}

	[Token(Token = "0x600147C")]
	[Address(RVA = "0x499888", Offset = "0x499888", VA = "0x499888")]
	public AKRESULT SetValues(GameObject gameObject)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600147D")]
	[Address(RVA = "0x499974", Offset = "0x499974", VA = "0x499974")]
	public AKRESULT GetValues(GameObject gameObject)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600147E")]
	[Address(RVA = "0x499A70", Offset = "0x499A70", VA = "0x499A70")]
	public IntPtr GetBuffer()
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600147F")]
	[Address(RVA = "0x499A78", Offset = "0x499A78", VA = "0x499A78")]
	public int Count()
	{
		return default(int);
	}

	[Token(Token = "0x6001480")]
	[Address(RVA = "0x499168", Offset = "0x499168", VA = "0x499168")]
	private IntPtr GetObjectPtr(int index)
	{
		return default(IntPtr);
	}
}
[Token(Token = "0x200026A")]
public static class AkBankManager
{
	[Token(Token = "0x200026B")]
	private class BankHandle
	{
		[Token(Token = "0x4000F9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		protected readonly string bankName;

		[Token(Token = "0x4000F9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		protected uint m_BankID;

		[Token(Token = "0x4000F9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16C348", Offset = "0x16C348")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x16C348", Offset = "0x16C348")]
		private int <RefCount>k__BackingField;

		[Token(Token = "0x1700020B")]
		public int RefCount
		{
			[Token(Token = "0x6001488")]
			[Address(RVA = "0x49B804", Offset = "0x49B804", VA = "0x49B804")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16C37C", Offset = "0x16C37C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001489")]
			[Address(RVA = "0x49C260", Offset = "0x49C260", VA = "0x49C260")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16C38C", Offset = "0x16C38C")]
			private set
			{
			}
		}

		[Token(Token = "0x6001487")]
		[Address(RVA = "0x49B57C", Offset = "0x49B57C", VA = "0x49B57C")]
		public BankHandle(string name)
		{
		}

		[Token(Token = "0x600148A")]
		[Address(RVA = "0x49C268", Offset = "0x49C268", VA = "0x49C268", Slot = "4")]
		public virtual AKRESULT DoLoadBank()
		{
			return default(AKRESULT);
		}

		[Token(Token = "0x600148B")]
		[Address(RVA = "0x49B59C", Offset = "0x49B59C", VA = "0x49B59C")]
		public void LoadBank()
		{
		}

		[Token(Token = "0x600148C")]
		[Address(RVA = "0x49C30C", Offset = "0x49C30C", VA = "0x49C30C", Slot = "5")]
		public virtual void UnloadBank()
		{
		}

		[Token(Token = "0x600148D")]
		[Address(RVA = "0x49B704", Offset = "0x49B704", VA = "0x49B704")]
		public void IncRef()
		{
		}

		[Token(Token = "0x600148E")]
		[Address(RVA = "0x49B73C", Offset = "0x49B73C", VA = "0x49B73C")]
		public void DecRef()
		{
		}

		[Token(Token = "0x600148F")]
		[Address(RVA = "0x49BB58", Offset = "0x49BB58", VA = "0x49BB58")]
		protected void LogLoadResult(AKRESULT result)
		{
		}
	}

	[Token(Token = "0x200026C")]
	private class AsyncBankHandle : BankHandle
	{
		[Token(Token = "0x4000F9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private readonly AkCallbackManager.BankCallback bankCallback;

		[Token(Token = "0x4000F9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16C39C", Offset = "0x16C39C")]
		private static AkCallbackManager.BankCallback <>f__mg$cache0;

		[Token(Token = "0x6001490")]
		[Address(RVA = "0x49B714", Offset = "0x49B714", VA = "0x49B714")]
		public AsyncBankHandle(string name, AkCallbackManager.BankCallback callback)
		{
		}

		[Token(Token = "0x6001491")]
		[Address(RVA = "0x49B904", Offset = "0x49B904", VA = "0x49B904")]
		private static void GlobalBankCallback(uint in_bankID, IntPtr in_pInMemoryBankPtr, AKRESULT in_eLoadResult, uint in_memPoolId, object in_Cookie)
		{
		}

		[Token(Token = "0x6001492")]
		[Address(RVA = "0x49C124", Offset = "0x49C124", VA = "0x49C124", Slot = "4")]
		public override AKRESULT DoLoadBank()
		{
			return default(AKRESULT);
		}
	}

	[Token(Token = "0x200026D")]
	private class DecodableBankHandle : BankHandle
	{
		[Token(Token = "0x4000FA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private readonly bool decodeBank;

		[Token(Token = "0x4000FA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly string decodedBankPath;

		[Token(Token = "0x4000FA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private readonly bool saveDecodedBank;

		[Token(Token = "0x6001493")]
		[Address(RVA = "0x49B200", Offset = "0x49B200", VA = "0x49B200")]
		public DecodableBankHandle(string name, bool save)
		{
		}

		[Token(Token = "0x6001494")]
		[Address(RVA = "0x49C534", Offset = "0x49C534", VA = "0x49C534", Slot = "4")]
		public override AKRESULT DoLoadBank()
		{
			return default(AKRESULT);
		}

		[Token(Token = "0x6001495")]
		[Address(RVA = "0x49C79C", Offset = "0x49C79C", VA = "0x49C79C", Slot = "5")]
		public override void UnloadBank()
		{
		}
	}

	[Token(Token = "0x4000F98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Dictionary<string, BankHandle> m_BankHandles;

	[Token(Token = "0x4000F99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly List<BankHandle> BanksToUnload;

	[Token(Token = "0x4000F9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly Mutex m_Mutex;

	[Token(Token = "0x6001481")]
	[Address(RVA = "0x49AF4C", Offset = "0x49AF4C", VA = "0x49AF4C")]
	internal static void DoUnloadBanks()
	{
	}

	[Token(Token = "0x6001482")]
	[Address(RVA = "0x49B114", Offset = "0x49B114", VA = "0x49B114")]
	internal static void Reset()
	{
	}

	[Token(Token = "0x6001483")]
	[Address(RVA = "0x490C40", Offset = "0x490C40", VA = "0x490C40")]
	public static void LoadBank(string name, bool decodeBank, bool saveDecodedBank)
	{
	}

	[Token(Token = "0x6001484")]
	[Address(RVA = "0x490F94", Offset = "0x490F94", VA = "0x490F94")]
	public static void LoadBankAsync(string name, [Optional] AkCallbackManager.BankCallback callback)
	{
	}

	[Token(Token = "0x6001485")]
	[Address(RVA = "0x4912A4", Offset = "0x4912A4", VA = "0x4912A4")]
	public static void UnloadBank(string name)
	{
	}
}
[Token(Token = "0x200026E")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x16C3AC", Offset = "0x16C3AC")]
public abstract class AkBaseArray<T> : IDisposable
{
	[Token(Token = "0x4000FA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16C3E0", Offset = "0x16C3E0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x16C3E0", Offset = "0x16C3E0")]
	private int <Capacity>k__BackingField;

	[Token(Token = "0x4000FA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private IntPtr m_Buffer;

	[Token(Token = "0x1700020C")]
	public int Capacity
	{
		[Token(Token = "0x6001499")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16C414", Offset = "0x16C414")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600149A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16C424", Offset = "0x16C424")]
		private set
		{
		}
	}

	[Token(Token = "0x1700020D")]
	protected abstract int StructureSize
	{
		[Token(Token = "0x600149C")]
		get;
	}

	[Token(Token = "0x1700020E")]
	public T Item
	{
		[Token(Token = "0x60014A0")]
		get
		{
			return (T)null;
		}
		[Token(Token = "0x60014A1")]
		set
		{
		}
	}

	[Token(Token = "0x6001496")]
	public AkBaseArray(int capacity)
	{
	}

	[Token(Token = "0x6001497")]
	public void Dispose()
	{
	}

	[Token(Token = "0x6001498")]
	~AkBaseArray()
	{
	}

	[Token(Token = "0x600149B")]
	public virtual int Count()
	{
		return default(int);
	}

	[Token(Token = "0x600149D")]
	protected virtual void ClearAtIntPtr(IntPtr address)
	{
	}

	[Token(Token = "0x600149E")]
	protected abstract T CreateNewReferenceFromIntPtr(IntPtr address);

	[Token(Token = "0x600149F")]
	protected abstract void CloneIntoReferenceFromIntPtr(IntPtr address, T other);

	[Token(Token = "0x60014A2")]
	public IntPtr GetBuffer()
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60014A3")]
	protected IntPtr GetObjectPtr(int index)
	{
		return default(IntPtr);
	}
}
[Token(Token = "0x200026F")]
public class AkBasePathGetter
{
	[Token(Token = "0x4000FA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string DefaultBasePath;

	[Token(Token = "0x60014A4")]
	[Address(RVA = "0x49C850", Offset = "0x49C850", VA = "0x49C850")]
	public AkBasePathGetter()
	{
	}

	[Token(Token = "0x60014A5")]
	[Address(RVA = "0x49C858", Offset = "0x49C858", VA = "0x49C858")]
	public static string GetPlatformName()
	{
		return null;
	}

	[Token(Token = "0x60014A6")]
	[Address(RVA = "0x49C910", Offset = "0x49C910", VA = "0x49C910")]
	public static string GetPlatformBasePath()
	{
		return null;
	}

	[Token(Token = "0x60014A7")]
	[Address(RVA = "0x49C9F4", Offset = "0x49C9F4", VA = "0x49C9F4")]
	public static string GetFullSoundBankPath()
	{
		return null;
	}

	[Token(Token = "0x60014A8")]
	[Address(RVA = "0x49CC28", Offset = "0x49CC28", VA = "0x49CC28")]
	public static void FixSlashes(ref string path, char separatorChar, char badChar, bool addTrailingSlash)
	{
	}

	[Token(Token = "0x60014A9")]
	[Address(RVA = "0x49CB40", Offset = "0x49CB40", VA = "0x49CB40")]
	public static void FixSlashes(ref string path)
	{
	}

	[Token(Token = "0x60014AA")]
	[Address(RVA = "0x49C3B0", Offset = "0x49C3B0", VA = "0x49C3B0")]
	public static string GetSoundbankBasePath()
	{
		return null;
	}
}
[Token(Token = "0x2000270")]
public static class AkCallbackManager
{
	[Token(Token = "0x2000271")]
	public delegate void EventCallback(object in_cookie, AkCallbackType in_type, AkCallbackInfo in_info);

	[Token(Token = "0x2000272")]
	public delegate void MonitoringCallback(AkMonitorErrorCode in_errorCode, AkMonitorErrorLevel in_errorLevel, uint in_playingID, ulong in_gameObjID, string in_msg);

	[Token(Token = "0x2000273")]
	public delegate void BankCallback(uint in_bankID, IntPtr in_InMemoryBankPtr, AKRESULT in_eLoadResult, uint in_memPoolId, object in_Cookie);

	[Token(Token = "0x2000274")]
	public class EventCallbackPackage
	{
		[Token(Token = "0x4000FB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool m_bNotifyEndOfEvent;

		[Token(Token = "0x4000FB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public EventCallback m_Callback;

		[Token(Token = "0x4000FB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public object m_Cookie;

		[Token(Token = "0x4000FBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public uint m_playingID;

		[Token(Token = "0x60014C4")]
		[Address(RVA = "0x4A0FEC", Offset = "0x4A0FEC", VA = "0x4A0FEC")]
		public EventCallbackPackage()
		{
		}

		[Token(Token = "0x60014C5")]
		[Address(RVA = "0x4A0FF4", Offset = "0x4A0FF4", VA = "0x4A0FF4")]
		public static EventCallbackPackage Create(EventCallback in_cb, object in_cookie, ref uint io_Flags)
		{
			return null;
		}

		[Token(Token = "0x60014C6")]
		[Address(RVA = "0x4A1170", Offset = "0x4A1170", VA = "0x4A1170", Slot = "1")]
		~EventCallbackPackage()
		{
		}
	}

	[Token(Token = "0x2000275")]
	public class BankCallbackPackage
	{
		[Token(Token = "0x4000FBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public BankCallback m_Callback;

		[Token(Token = "0x4000FBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public object m_Cookie;

		[Token(Token = "0x60014C7")]
		[Address(RVA = "0x4A0D54", Offset = "0x4A0D54", VA = "0x4A0D54")]
		public BankCallbackPackage(BankCallback in_cb, object in_cookie)
		{
		}
	}

	[Token(Token = "0x2000276")]
	public delegate AKRESULT BGMCallback(bool in_bOtherAudioPlaying, object in_Cookie);

	[Token(Token = "0x2000277")]
	public class BGMCallbackPackage
	{
		[Token(Token = "0x4000FBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public BGMCallback m_Callback;

		[Token(Token = "0x4000FBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public object m_Cookie;

		[Token(Token = "0x60014CC")]
		[Address(RVA = "0x49E9F4", Offset = "0x49E9F4", VA = "0x49E9F4")]
		public BGMCallbackPackage()
		{
		}
	}

	[Token(Token = "0x2000278")]
	public class InitializationSettings
	{
		[Token(Token = "0x4000FBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int DefaultBufferSize;

		[Token(Token = "0x4000FC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static bool DefaultIsLoggingEnabled;

		[Token(Token = "0x4000FC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int BufferSize;

		[Token(Token = "0x4000FC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool IsLoggingEnabled;

		[Token(Token = "0x60014CD")]
		[Address(RVA = "0x49D0D4", Offset = "0x49D0D4", VA = "0x49D0D4")]
		public InitializationSettings()
		{
		}
	}

	[Token(Token = "0x4000FA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16C434", Offset = "0x16C434")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x16C434", Offset = "0x16C434")]
	private static bool <IsLoggingEnabled>k__BackingField;

	[Token(Token = "0x4000FA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly AkEventCallbackInfo AkEventCallbackInfo;

	[Token(Token = "0x4000FA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly AkDynamicSequenceItemCallbackInfo AkDynamicSequenceItemCallbackInfo;

	[Token(Token = "0x4000FA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly AkMIDIEventCallbackInfo AkMIDIEventCallbackInfo;

	[Token(Token = "0x4000FAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly AkMarkerCallbackInfo AkMarkerCallbackInfo;

	[Token(Token = "0x4000FAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private static readonly AkDurationCallbackInfo AkDurationCallbackInfo;

	[Token(Token = "0x4000FAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly AkMusicSyncCallbackInfo AkMusicSyncCallbackInfo;

	[Token(Token = "0x4000FAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private static readonly AkMusicPlaylistCallbackInfo AkMusicPlaylistCallbackInfo;

	[Token(Token = "0x4000FAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly AkAudioSourceChangeCallbackInfo AkAudioSourceChangeCallbackInfo;

	[Token(Token = "0x4000FAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static readonly AkMonitoringCallbackInfo AkMonitoringCallbackInfo;

	[Token(Token = "0x4000FB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static readonly AkBankCallbackInfo AkBankCallbackInfo;

	[Token(Token = "0x4000FB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private static readonly Dictionary<int, EventCallbackPackage> m_mapEventCallbacks;

	[Token(Token = "0x4000FB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static readonly Dictionary<int, BankCallbackPackage> m_mapBankCallbacks;

	[Token(Token = "0x4000FB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private static EventCallbackPackage m_LastAddedEventPackage;

	[Token(Token = "0x4000FB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static IntPtr m_pNotifMem;

	[Token(Token = "0x4000FB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private static MonitoringCallback m_MonitoringCB;

	[Token(Token = "0x4000FB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static BGMCallbackPackage ms_sourceChangeCallbackPkg;

	[Token(Token = "0x1700020F")]
	private static bool IsLoggingEnabled
	{
		[Token(Token = "0x60014AC")]
		[Address(RVA = "0x49D76C", Offset = "0x49D76C", VA = "0x49D76C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16C468", Offset = "0x16C468")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60014AD")]
		[Address(RVA = "0x49D7F8", Offset = "0x49D7F8", VA = "0x49D7F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16C478", Offset = "0x16C478")]
		set
		{
		}
	}

	[Token(Token = "0x60014AE")]
	[Address(RVA = "0x49D888", Offset = "0x49D888", VA = "0x49D888")]
	public static void RemoveEventCallback(uint in_playingID)
	{
	}

	[Token(Token = "0x60014AF")]
	[Address(RVA = "0x49DBF0", Offset = "0x49DBF0", VA = "0x49DBF0")]
	public static void RemoveEventCallbackCookie(object in_cookie)
	{
	}

	[Token(Token = "0x60014B0")]
	[Address(RVA = "0x49DF7C", Offset = "0x49DF7C", VA = "0x49DF7C")]
	public static void RemoveBankCallback(object in_cookie)
	{
	}

	[Token(Token = "0x60014B1")]
	[Address(RVA = "0x49E308", Offset = "0x49E308", VA = "0x49E308")]
	public static void SetLastAddedPlayingID(uint in_playingID)
	{
	}

	[Token(Token = "0x60014B2")]
	[Address(RVA = "0x49E440", Offset = "0x49E440", VA = "0x49E440")]
	public static AKRESULT Init(InitializationSettings settings)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60014B3")]
	[Address(RVA = "0x49E62C", Offset = "0x49E62C", VA = "0x49E62C")]
	public static void Term()
	{
	}

	[Token(Token = "0x60014B4")]
	[Address(RVA = "0x49E7F0", Offset = "0x49E7F0", VA = "0x49E7F0")]
	public static void SetMonitoringCallback(AkMonitorErrorLevel in_Level, MonitoringCallback in_CB)
	{
	}

	[Token(Token = "0x60014B5")]
	[Address(RVA = "0x49E91C", Offset = "0x49E91C", VA = "0x49E91C")]
	public static void SetBGMCallback(BGMCallback in_CB, object in_cookie)
	{
	}

	[Token(Token = "0x60014B6")]
	[Address(RVA = "0x49E9FC", Offset = "0x49E9FC", VA = "0x49E9FC")]
	public static int PostCallbacks()
	{
		return default(int);
	}
}
[Token(Token = "0x2000279")]
public class AkChannelEmitterArray : IDisposable
{
	[Token(Token = "0x4000FC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr m_Buffer;

	[Token(Token = "0x4000FC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private IntPtr m_Current;

	[Token(Token = "0x4000FC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private uint m_MaxCount;

	[Token(Token = "0x4000FC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16C488", Offset = "0x16C488")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x16C488", Offset = "0x16C488")]
	private uint <Count>k__BackingField;

	[Token(Token = "0x17000210")]
	public uint Count
	{
		[Token(Token = "0x60014D0")]
		[Address(RVA = "0x4A2B18", Offset = "0x4A2B18", VA = "0x4A2B18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16C4BC", Offset = "0x16C4BC")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60014D1")]
		[Address(RVA = "0x4A2B10", Offset = "0x4A2B10", VA = "0x4A2B10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16C4CC", Offset = "0x16C4CC")]
		private set
		{
		}
	}

	[Token(Token = "0x60014CF")]
	[Address(RVA = "0x4A2A64", Offset = "0x4A2A64", VA = "0x4A2A64")]
	public AkChannelEmitterArray(uint in_Count)
	{
	}

	[Token(Token = "0x60014D2")]
	[Address(RVA = "0x4A2B20", Offset = "0x4A2B20", VA = "0x4A2B20", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x60014D3")]
	[Address(RVA = "0x4A2BD4", Offset = "0x4A2BD4", VA = "0x4A2BD4", Slot = "1")]
	~AkChannelEmitterArray()
	{
	}

	[Token(Token = "0x60014D4")]
	[Address(RVA = "0x4A2C30", Offset = "0x4A2C30", VA = "0x4A2C30")]
	public void Reset()
	{
	}

	[Token(Token = "0x60014D5")]
	[Address(RVA = "0x4A2C44", Offset = "0x4A2C44", VA = "0x4A2C44")]
	public void Add(Vector3 in_Pos, Vector3 in_Forward, Vector3 in_Top, uint in_ChannelMask)
	{
	}
}
[Token(Token = "0x200027A")]
public class AkBasePlatformSettings : ScriptableObject
{
	[Token(Token = "0x17000211")]
	public virtual AkInitializationSettings AkInitializationSettings
	{
		[Token(Token = "0x60014D7")]
		[Address(RVA = "0x49CEF8", Offset = "0x49CEF8", VA = "0x49CEF8", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000212")]
	public virtual AkSpatialAudioInitSettings AkSpatialAudioInitSettings
	{
		[Token(Token = "0x60014D8")]
		[Address(RVA = "0x49D000", Offset = "0x49D000", VA = "0x49D000", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000213")]
	public virtual AkCallbackManager.InitializationSettings CallbackManagerInitializationSettings
	{
		[Token(Token = "0x60014D9")]
		[Address(RVA = "0x49D06C", Offset = "0x49D06C", VA = "0x49D06C", Slot = "6")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000214")]
	public virtual string InitialLanguage
	{
		[Token(Token = "0x60014DA")]
		[Address(RVA = "0x49D190", Offset = "0x49D190", VA = "0x49D190", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000215")]
	public virtual string SoundbankPath
	{
		[Token(Token = "0x60014DB")]
		[Address(RVA = "0x49D1EC", Offset = "0x49D1EC", VA = "0x49D1EC", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000216")]
	public virtual AkCommunicationSettings AkCommunicationSettings
	{
		[Token(Token = "0x60014DC")]
		[Address(RVA = "0x49D278", Offset = "0x49D278", VA = "0x49D278", Slot = "9")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60014D6")]
	[Address(RVA = "0x49CEF0", Offset = "0x49CEF0", VA = "0x49CEF0")]
	public AkBasePlatformSettings()
	{
	}
}
[Serializable]
[Token(Token = "0x200027B")]
public class AkCommonOutputSettings
{
	[Token(Token = "0x200027C")]
	public enum PanningRule
	{
		[Token(Token = "0x4000FCC")]
		Speakers,
		[Token(Token = "0x4000FCD")]
		Headphones
	}

	[Serializable]
	[Token(Token = "0x200027D")]
	public class ChannelConfiguration
	{
		[Token(Token = "0x200027E")]
		public enum ChannelConfigType
		{
			[Token(Token = "0x4000FD2")]
			Anonymous,
			[Token(Token = "0x4000FD3")]
			Standard,
			[Token(Token = "0x4000FD4")]
			Ambisonic
		}

		[Token(Token = "0x200027F")]
		public enum ChannelMask
		{
			[Token(Token = "0x4000FD6")]
			NONE = 0,
			[Token(Token = "0x4000FD7")]
			FRONT_LEFT = 1,
			[Token(Token = "0x4000FD8")]
			FRONT_RIGHT = 2,
			[Token(Token = "0x4000FD9")]
			FRONT_CENTER = 4,
			[Token(Token = "0x4000FDA")]
			LOW_FREQUENCY = 8,
			[Token(Token = "0x4000FDB")]
			BACK_LEFT = 16,
			[Token(Token = "0x4000FDC")]
			BACK_RIGHT = 32,
			[Token(Token = "0x4000FDD")]
			BACK_CENTER = 256,
			[Token(Token = "0x4000FDE")]
			SIDE_LEFT = 512,
			[Token(Token = "0x4000FDF")]
			SIDE_RIGHT = 1024,
			[Token(Token = "0x4000FE0")]
			TOP = 2048,
			[Token(Token = "0x4000FE1")]
			HEIGHT_FRONT_LEFT = 4096,
			[Token(Token = "0x4000FE2")]
			HEIGHT_FRONT_CENTER = 8192,
			[Token(Token = "0x4000FE3")]
			HEIGHT_FRONT_RIGHT = 16384,
			[Token(Token = "0x4000FE4")]
			HEIGHT_BACK_LEFT = 32768,
			[Token(Token = "0x4000FE5")]
			HEIGHT_BACK_CENTER = 65536,
			[Token(Token = "0x4000FE6")]
			HEIGHT_BACK_RIGHT = 131072,
			[Token(Token = "0x4000FE7")]
			SETUP_MONO = 4,
			[Token(Token = "0x4000FE8")]
			SETUP_0POINT1 = 8,
			[Token(Token = "0x4000FE9")]
			SETUP_1POINT1 = 12,
			[Token(Token = "0x4000FEA")]
			SETUP_STEREO = 3,
			[Token(Token = "0x4000FEB")]
			SETUP_2POINT1 = 11,
			[Token(Token = "0x4000FEC")]
			SETUP_3STEREO = 7,
			[Token(Token = "0x4000FED")]
			SETUP_3POINT1 = 15,
			[Token(Token = "0x4000FEE")]
			SETUP_4 = 1539,
			[Token(Token = "0x4000FEF")]
			SETUP_4POINT1 = 1547,
			[Token(Token = "0x4000FF0")]
			SETUP_5 = 1543,
			[Token(Token = "0x4000FF1")]
			SETUP_5POINT1 = 1551,
			[Token(Token = "0x4000FF2")]
			SETUP_6 = 1587,
			[Token(Token = "0x4000FF3")]
			SETUP_6POINT1 = 1595,
			[Token(Token = "0x4000FF4")]
			SETUP_7 = 1591,
			[Token(Token = "0x4000FF5")]
			SETUP_7POINT1 = 1599,
			[Token(Token = "0x4000FF6")]
			SETUP_SURROUND = 259,
			[Token(Token = "0x4000FF7")]
			SETUP_DPL2 = 1539,
			[Token(Token = "0x4000FF8")]
			SETUP_HEIGHT_4 = 184320,
			[Token(Token = "0x4000FF9")]
			SETUP_HEIGHT_5 = 192512,
			[Token(Token = "0x4000FFA")]
			SETUP_HEIGHT_ALL = 258048,
			[Token(Token = "0x4000FFB")]
			SETUP_AURO_222 = 22019,
			[Token(Token = "0x4000FFC")]
			SETUP_AURO_8 = 185859,
			[Token(Token = "0x4000FFD")]
			SETUP_AURO_9 = 185863,
			[Token(Token = "0x4000FFE")]
			SETUP_AURO_9POINT1 = 185871,
			[Token(Token = "0x4000FFF")]
			SETUP_AURO_10 = 187911,
			[Token(Token = "0x4001000")]
			SETUP_AURO_10POINT1 = 187919,
			[Token(Token = "0x4001001")]
			SETUP_AURO_11 = 196103,
			[Token(Token = "0x4001002")]
			SETUP_AURO_11POINT1 = 196111,
			[Token(Token = "0x4001003")]
			SETUP_AURO_11_740 = 185911,
			[Token(Token = "0x4001004")]
			SETUP_AURO_11POINT1_740 = 185919,
			[Token(Token = "0x4001005")]
			SETUP_AURO_13_751 = 196151,
			[Token(Token = "0x4001006")]
			SETUP_AURO_13POINT1_751 = 196159,
			[Token(Token = "0x4001007")]
			SETUP_DOLBY_5_0_2 = 22023,
			[Token(Token = "0x4001008")]
			SETUP_DOLBY_5_1_2 = 22031,
			[Token(Token = "0x4001009")]
			SETUP_DOLBY_6_0_2 = 22067,
			[Token(Token = "0x400100A")]
			SETUP_DOLBY_6_1_2 = 22075,
			[Token(Token = "0x400100B")]
			SETUP_DOLBY_6_0_4 = 185907,
			[Token(Token = "0x400100C")]
			SETUP_DOLBY_6_1_4 = 185915,
			[Token(Token = "0x400100D")]
			SETUP_DOLBY_7_0_2 = 22071,
			[Token(Token = "0x400100E")]
			SETUP_DOLBY_7_1_2 = 22079,
			[Token(Token = "0x400100F")]
			SETUP_DOLBY_7_0_4 = 185911,
			[Token(Token = "0x4001010")]
			SETUP_DOLBY_7_1_4 = 185919,
			[Token(Token = "0x4001011")]
			SETUP_ALL_SPEAKERS = 261951
		}

		[Token(Token = "0x4000FCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16C5AC", Offset = "0x16C5AC")]
		public ChannelConfigType m_ChannelConfigType;

		[Token(Token = "0x4000FCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16C5E0", Offset = "0x16C5E0")]
		[AttributeAttribute(Name = "AkEnumFlagAttribute", RVA = "0x16C5E0", Offset = "0x16C5E0")]
		public ChannelMask m_ChannelMask;

		[Token(Token = "0x4000FD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16C680", Offset = "0x16C680")]
		public uint m_NumberOfChannels;

		[Token(Token = "0x60014DF")]
		[Address(RVA = "0x494560", Offset = "0x494560", VA = "0x494560")]
		public ChannelConfiguration()
		{
		}

		[Token(Token = "0x60014E0")]
		[Address(RVA = "0x4A409C", Offset = "0x4A409C", VA = "0x4A409C")]
		public void CopyTo(AkChannelConfig config)
		{
		}
	}

	[Token(Token = "0x4000FC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16C4DC", Offset = "0x16C4DC")]
	public string m_AudioDeviceShareset;

	[Token(Token = "0x4000FC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16C510", Offset = "0x16C510")]
	public uint m_DeviceID;

	[Token(Token = "0x4000FC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16C544", Offset = "0x16C544")]
	public PanningRule m_PanningRule;

	[Token(Token = "0x4000FCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16C578", Offset = "0x16C578")]
	public ChannelConfiguration m_ChannelConfig;

	[Token(Token = "0x60014DD")]
	[Address(RVA = "0x49449C", Offset = "0x49449C", VA = "0x49449C")]
	public AkCommonOutputSettings()
	{
	}

	[Token(Token = "0x60014DE")]
	[Address(RVA = "0x4A3F00", Offset = "0x4A3F00", VA = "0x4A3F00")]
	public void CopyTo(AkOutputSettings settings)
	{
	}
}
[Serializable]
[Token(Token = "0x2000280")]
public class AkCommonUserSettings
{
	[Serializable]
	[Token(Token = "0x2000281")]
	public class SpatialAudioSettings
	{
		[Token(Token = "0x2000282")]
		public enum DiffractionFlags
		{
			[Token(Token = "0x4001029")]
			UseBuiltInParam = 1,
			[Token(Token = "0x400102A")]
			UseObstruction = 2,
			[Token(Token = "0x400102B")]
			CalcEmitterVirtualPosition = 8
		}

		[Token(Token = "0x4001025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16CAE4", Offset = "0x16CAE4")]
		public uint m_PoolSize;

		[Token(Token = "0x4001026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16CB18", Offset = "0x16CB18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16CB18", Offset = "0x16CB18")]
		public uint m_MaxSoundPropagationDepth;

		[Token(Token = "0x4001027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16CB68", Offset = "0x16CB68")]
		[AttributeAttribute(Name = "AkEnumFlagAttribute", RVA = "0x16CB68", Offset = "0x16CB68")]
		public DiffractionFlags m_DiffractionFlags;

		[Token(Token = "0x60014E9")]
		[Address(RVA = "0x4A5328", Offset = "0x4A5328", VA = "0x4A5328")]
		public SpatialAudioSettings()
		{
		}
	}

	[Token(Token = "0x4001012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16C6B4", Offset = "0x16C6B4")]
	public string m_BasePath;

	[Token(Token = "0x4001013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16C6E8", Offset = "0x16C6E8")]
	public string m_StartupLanguage;

	[Token(Token = "0x4001014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16C71C", Offset = "0x16C71C")]
	public uint m_PreparePoolSize;

	[Token(Token = "0x4001015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16C750", Offset = "0x16C750")]
	public int m_CallbackManagerBufferSize;

	[Token(Token = "0x4001016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16C784", Offset = "0x16C784")]
	public bool m_EngineLogging;

	[Token(Token = "0x4001017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16C7B8", Offset = "0x16C7B8")]
	public uint m_MaximumNumberOfMemoryPools;

	[Token(Token = "0x4001018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16C7EC", Offset = "0x16C7EC")]
	public uint m_MaximumNumberOfPositioningPaths;

	[Token(Token = "0x4001019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16C820", Offset = "0x16C820")]
	public uint m_DefaultPoolSize;

	[Token(Token = "0x400101A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16C854", Offset = "0x16C854")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16C854", Offset = "0x16C854")]
	public float m_MemoryCutoffThreshold;

	[Token(Token = "0x400101B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16C8A4", Offset = "0x16C8A4")]
	public uint m_CommandQueueSize;

	[Token(Token = "0x400101C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16C8D8", Offset = "0x16C8D8")]
	public uint m_SamplesPerFrame;

	[Token(Token = "0x400101D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16C90C", Offset = "0x16C90C")]
	public AkCommonOutputSettings m_MainOutputSettings;

	[Token(Token = "0x400101E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16C940", Offset = "0x16C940")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16C940", Offset = "0x16C940")]
	public float m_StreamingLookAheadRatio;

	[Token(Token = "0x400101F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16C990", Offset = "0x16C990")]
	public uint m_StreamManagerPoolSize;

	[Token(Token = "0x4001020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16C9C4", Offset = "0x16C9C4")]
	public uint m_SampleRate;

	[Token(Token = "0x4001021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16C9F8", Offset = "0x16C9F8")]
	public uint m_LowerEnginePoolSize;

	[Token(Token = "0x4001022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16CA2C", Offset = "0x16CA2C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16CA2C", Offset = "0x16CA2C")]
	public float m_LowerEngineMemoryCutoffThreshold;

	[Token(Token = "0x4001023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16CA7C", Offset = "0x16CA7C")]
	public ushort m_NumberOfRefillsInVoice;

	[Token(Token = "0x4001024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16CAB0", Offset = "0x16CAB0")]
	public SpatialAudioSettings m_SpatialAudioSettings;

	[Token(Token = "0x60014E1")]
	[Address(RVA = "0x494334", Offset = "0x494334", VA = "0x494334")]
	public AkCommonUserSettings()
	{
	}

	[Token(Token = "0x60014E2")]
	[Address(RVA = "0x4A4454", Offset = "0x4A4454", VA = "0x4A4454")]
	public void CopyTo(AkMemSettings settings)
	{
	}

	[Token(Token = "0x60014E3")]
	[Address(RVA = "0x4A4C70", Offset = "0x4A4C70", VA = "0x4A4C70", Slot = "4")]
	public virtual void CopyTo(AkInitSettings settings)
	{
	}

	[Token(Token = "0x60014E4")]
	[Address(RVA = "0x4A4904", Offset = "0x4A4904", VA = "0x4A4904")]
	public void CopyTo(AkMusicSettings settings)
	{
	}

	[Token(Token = "0x60014E5")]
	[Address(RVA = "0x4A463C", Offset = "0x4A463C", VA = "0x4A463C")]
	public void CopyTo(AkStreamMgrSettings settings)
	{
	}

	[Token(Token = "0x60014E6")]
	[Address(RVA = "0x4A51CC", Offset = "0x4A51CC", VA = "0x4A51CC", Slot = "5")]
	public virtual void CopyTo(AkDeviceSettings settings)
	{
	}

	[Token(Token = "0x60014E7")]
	[Address(RVA = "0x4A51D0", Offset = "0x4A51D0", VA = "0x4A51D0", Slot = "6")]
	public virtual void CopyTo(AkPlatformInitSettings settings)
	{
	}

	[Token(Token = "0x60014E8")]
	[Address(RVA = "0x4A5284", Offset = "0x4A5284", VA = "0x4A5284", Slot = "7")]
	public virtual void CopyTo(AkSpatialAudioInitSettings settings)
	{
	}
}
[Serializable]
[Token(Token = "0x2000283")]
public class AkCommonAdvancedSettings
{
	[Serializable]
	[Token(Token = "0x2000284")]
	public class SpatialAudioSettings
	{
		[Token(Token = "0x4001037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16CE44", Offset = "0x16CE44")]
		public float m_DiffractionShadowAttenuationFactor;

		[Token(Token = "0x4001038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16CE78", Offset = "0x16CE78")]
		public float m_DiffractionShadowDegrees;

		[Token(Token = "0x60014EE")]
		[Address(RVA = "0x4A3900", Offset = "0x4A3900", VA = "0x4A3900")]
		public SpatialAudioSettings()
		{
		}
	}

	[Token(Token = "0x400102C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16CC08", Offset = "0x16CC08")]
	public uint m_IOMemorySize;

	[Token(Token = "0x400102D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16CC3C", Offset = "0x16CC3C")]
	public float m_TargetAutoStreamBufferLengthMs;

	[Token(Token = "0x400102E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16CC70", Offset = "0x16CC70")]
	public bool m_UseStreamCache;

	[Token(Token = "0x400102F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16CCA4", Offset = "0x16CCA4")]
	public uint m_MaximumPinnedBytesInCache;

	[Token(Token = "0x4001030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16CCD8", Offset = "0x16CCD8")]
	public int m_PrepareEventMemoryPoolID;

	[Token(Token = "0x4001031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16CD0C", Offset = "0x16CD0C")]
	public bool m_EnableGameSyncPreparation;

	[Token(Token = "0x4001032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16CD40", Offset = "0x16CD40")]
	public uint m_ContinuousPlaybackLookAhead;

	[Token(Token = "0x4001033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16CD74", Offset = "0x16CD74")]
	public uint m_MonitorPoolSize;

	[Token(Token = "0x4001034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16CDA8", Offset = "0x16CDA8")]
	public uint m_MonitorQueuePoolSize;

	[Token(Token = "0x4001035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16CDDC", Offset = "0x16CDDC")]
	public uint m_MaximumHardwareTimeoutMs;

	[Token(Token = "0x4001036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16CE10", Offset = "0x16CE10")]
	public SpatialAudioSettings m_SpatialAudioSettings;

	[Token(Token = "0x60014EA")]
	[Address(RVA = "0x4945CC", Offset = "0x4945CC", VA = "0x4945CC")]
	public AkCommonAdvancedSettings()
	{
	}

	[Token(Token = "0x60014EB")]
	[Address(RVA = "0x4A3124", Offset = "0x4A3124", VA = "0x4A3124", Slot = "4")]
	public virtual void CopyTo(AkDeviceSettings settings)
	{
	}

	[Token(Token = "0x60014EC")]
	[Address(RVA = "0x4A3428", Offset = "0x4A3428", VA = "0x4A3428", Slot = "5")]
	public virtual void CopyTo(AkInitSettings settings)
	{
	}

	[Token(Token = "0x60014ED")]
	[Address(RVA = "0x4A3884", Offset = "0x4A3884", VA = "0x4A3884", Slot = "6")]
	public virtual void CopyTo(AkSpatialAudioInitSettings settings)
	{
	}
}
[Serializable]
[Token(Token = "0x2000285")]
public class AkCommonCommSettings
{
	[Token(Token = "0x4001039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16CEAC", Offset = "0x16CEAC")]
	public uint m_PoolSize;

	[Token(Token = "0x400103A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ushort DefaultDiscoveryBroadcastPort;

	[Token(Token = "0x400103B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16CEE0", Offset = "0x16CEE0")]
	public ushort m_DiscoveryBroadcastPort;

	[Token(Token = "0x400103C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16CF14", Offset = "0x16CF14")]
	public ushort m_CommandPort;

	[Token(Token = "0x400103D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16CF48", Offset = "0x16CF48")]
	public ushort m_NotificationPort;

	[Token(Token = "0x400103E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16CF7C", Offset = "0x16CF7C")]
	public bool m_InitializeSystemComms;

	[Token(Token = "0x400103F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16CFB0", Offset = "0x16CFB0")]
	public string m_NetworkName;

	[Token(Token = "0x60014EF")]
	[Address(RVA = "0x4A3908", Offset = "0x4A3908", VA = "0x4A3908")]
	public AkCommonCommSettings()
	{
	}

	[Token(Token = "0x60014F0")]
	[Address(RVA = "0x4A39B8", Offset = "0x4A39B8", VA = "0x4A39B8", Slot = "4")]
	public virtual void CopyTo(AkCommunicationSettings settings)
	{
	}
}
[Token(Token = "0x2000286")]
public abstract class AkCommonPlatformSettings : AkBasePlatformSettings
{
	[Token(Token = "0x17000217")]
	public override AkInitializationSettings AkInitializationSettings
	{
		[Token(Token = "0x60014F6")]
		[Address(RVA = "0x4A412C", Offset = "0x4A412C", VA = "0x4A412C", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000218")]
	public override AkSpatialAudioInitSettings AkSpatialAudioInitSettings
	{
		[Token(Token = "0x60014F7")]
		[Address(RVA = "0x4A49D0", Offset = "0x4A49D0", VA = "0x4A49D0", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000219")]
	public override AkCallbackManager.InitializationSettings CallbackManagerInitializationSettings
	{
		[Token(Token = "0x60014F8")]
		[Address(RVA = "0x4A4A64", Offset = "0x4A4A64", VA = "0x4A4A64", Slot = "6")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700021A")]
	public override string InitialLanguage
	{
		[Token(Token = "0x60014F9")]
		[Address(RVA = "0x4A4B24", Offset = "0x4A4B24", VA = "0x4A4B24", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700021B")]
	public override string SoundbankPath
	{
		[Token(Token = "0x60014FA")]
		[Address(RVA = "0x4A4B54", Offset = "0x4A4B54", VA = "0x4A4B54", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700021C")]
	public override AkCommunicationSettings AkCommunicationSettings
	{
		[Token(Token = "0x60014FB")]
		[Address(RVA = "0x4A4B84", Offset = "0x4A4B84", VA = "0x4A4B84", Slot = "9")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60014F2")]
	[Address(RVA = "0x4A4124", Offset = "0x4A4124", VA = "0x4A4124")]
	protected AkCommonPlatformSettings()
	{
	}

	[Token(Token = "0x60014F3")]
	protected abstract AkCommonUserSettings GetUserSettings();

	[Token(Token = "0x60014F4")]
	protected abstract AkCommonAdvancedSettings GetAdvancedSettings();

	[Token(Token = "0x60014F5")]
	protected abstract AkCommonCommSettings GetCommsSettings();
}
[Token(Token = "0x2000287")]
public class AkDiffractionPathInfoArray : AkBaseArray<AkDiffractionPathInfo>
{
	[Token(Token = "0x1700021D")]
	protected override int StructureSize
	{
		[Token(Token = "0x60014FD")]
		[Address(RVA = "0x4A7260", Offset = "0x4A7260", VA = "0x4A7260", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60014FC")]
	[Address(RVA = "0x4A71F4", Offset = "0x4A71F4", VA = "0x4A71F4")]
	public AkDiffractionPathInfoArray(int count)
	{
	}

	[Token(Token = "0x60014FE")]
	[Address(RVA = "0x4A72E0", Offset = "0x4A72E0", VA = "0x4A72E0", Slot = "8")]
	protected override AkDiffractionPathInfo CreateNewReferenceFromIntPtr(IntPtr address)
	{
		return null;
	}

	[Token(Token = "0x60014FF")]
	[Address(RVA = "0x4A735C", Offset = "0x4A735C", VA = "0x4A735C", Slot = "9")]
	protected override void CloneIntoReferenceFromIntPtr(IntPtr address, AkDiffractionPathInfo other)
	{
	}
}
[Token(Token = "0x2000288")]
[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x16CFE4", Offset = "0x16CFE4")]
public class AkEnumFlagAttribute : PropertyAttribute
{
	[Token(Token = "0x4001040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public Type Type;

	[Token(Token = "0x6001500")]
	[Address(RVA = "0x4A933C", Offset = "0x4A933C", VA = "0x4A933C")]
	public AkEnumFlagAttribute(Type type)
	{
	}
}
[Token(Token = "0x2000289")]
public class AkLogger
{
	[Token(Token = "0x200028A")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x16D0A0", Offset = "0x16D0A0")]
	public delegate void ErrorLoggerInteropDelegate(string message);

	[Token(Token = "0x4001041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AkLogger ms_Instance;

	[Token(Token = "0x4001042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private ErrorLoggerInteropDelegate errorLoggerDelegate;

	[Token(Token = "0x4001043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16D018", Offset = "0x16D018")]
	private static ErrorLoggerInteropDelegate <>f__mg$cache0;

	[Token(Token = "0x1700021E")]
	public static AkLogger Instance
	{
		[Token(Token = "0x6001502")]
		[Address(RVA = "0x4B3DF4", Offset = "0x4B3DF4", VA = "0x4B3DF4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001501")]
	[Address(RVA = "0x4B3BD4", Offset = "0x4B3BD4", VA = "0x4B3BD4")]
	private AkLogger()
	{
	}

	[Token(Token = "0x6001503")]
	[Address(RVA = "0x4B3E80", Offset = "0x4B3E80", VA = "0x4B3E80", Slot = "1")]
	~AkLogger()
	{
	}

	[Token(Token = "0x6001504")]
	[Address(RVA = "0x4B3FD4", Offset = "0x4B3FD4", VA = "0x4B3FD4")]
	public void Init()
	{
	}

	[Token(Token = "0x6001505")]
	[Address(RVA = "0x4B3AFC", Offset = "0x4B3AFC", VA = "0x4B3AFC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x16D028", Offset = "0x16D028")]
	public static void WwiseInternalLogError(string message)
	{
	}

	[Token(Token = "0x6001506")]
	[Address(RVA = "0x4B3FD8", Offset = "0x4B3FD8", VA = "0x4B3FD8")]
	public static void Message(string message)
	{
	}

	[Token(Token = "0x6001507")]
	[Address(RVA = "0x4B40B0", Offset = "0x4B40B0", VA = "0x4B40B0")]
	public static void Warning(string message)
	{
	}

	[Token(Token = "0x6001508")]
	[Address(RVA = "0x4B4188", Offset = "0x4B4188", VA = "0x4B4188")]
	public static void Error(string message)
	{
	}
}
[Token(Token = "0x200028B")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x16D0B4", Offset = "0x16D0B4")]
public class AkMIDIPostArray
{
	[Token(Token = "0x4001044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private readonly int m_Count;

	[Token(Token = "0x4001045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private readonly int SIZE_OF;

	[Token(Token = "0x4001046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr m_Buffer;

	[Token(Token = "0x1700021F")]
	public AkMIDIPost Item
	{
		[Token(Token = "0x600150F")]
		[Address(RVA = "0x2C1094", Offset = "0x2C1094", VA = "0x2C1094")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001510")]
		[Address(RVA = "0x2C11F4", Offset = "0x2C11F4", VA = "0x2C11F4")]
		set
		{
		}
	}

	[Token(Token = "0x600150E")]
	[Address(RVA = "0x2C0FB4", Offset = "0x2C0FB4", VA = "0x2C0FB4")]
	public AkMIDIPostArray(int size)
	{
	}

	[Token(Token = "0x6001511")]
	[Address(RVA = "0x2C1360", Offset = "0x2C1360", VA = "0x2C1360", Slot = "1")]
	~AkMIDIPostArray()
	{
	}

	[Token(Token = "0x6001512")]
	[Address(RVA = "0x2C1438", Offset = "0x2C1438", VA = "0x2C1438")]
	public void PostOnEvent(uint in_eventID, GameObject gameObject)
	{
	}

	[Token(Token = "0x6001513")]
	[Address(RVA = "0x2C1518", Offset = "0x2C1518", VA = "0x2C1518")]
	public void PostOnEvent(uint in_eventID, GameObject gameObject, int count)
	{
	}

	[Token(Token = "0x6001514")]
	[Address(RVA = "0x2C1658", Offset = "0x2C1658", VA = "0x2C1658")]
	public IntPtr GetBuffer()
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001515")]
	[Address(RVA = "0x2C1660", Offset = "0x2C1660", VA = "0x2C1660")]
	public int Count()
	{
		return default(int);
	}

	[Token(Token = "0x6001516")]
	[Address(RVA = "0x2C11A8", Offset = "0x2C11A8", VA = "0x2C11A8")]
	private IntPtr GetObjectPtr(int index)
	{
		return default(IntPtr);
	}
}
[Token(Token = "0x200028C")]
public class AkPositionArray : IDisposable
{
	[Token(Token = "0x4001047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr m_Buffer;

	[Token(Token = "0x4001048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private IntPtr m_Current;

	[Token(Token = "0x4001049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private uint m_MaxCount;

	[Token(Token = "0x400104A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16D0E8", Offset = "0x16D0E8")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x16D0E8", Offset = "0x16D0E8")]
	private uint <Count>k__BackingField;

	[Token(Token = "0x17000220")]
	public uint Count
	{
		[Token(Token = "0x6001518")]
		[Address(RVA = "0x2CFB04", Offset = "0x2CFB04", VA = "0x2CFB04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16D11C", Offset = "0x16D11C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001519")]
		[Address(RVA = "0x2CFAFC", Offset = "0x2CFAFC", VA = "0x2CFAFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16D12C", Offset = "0x16D12C")]
		private set
		{
		}
	}

	[Token(Token = "0x6001517")]
	[Address(RVA = "0x2CFA50", Offset = "0x2CFA50", VA = "0x2CFA50")]
	public AkPositionArray(uint in_Count)
	{
	}

	[Token(Token = "0x600151A")]
	[Address(RVA = "0x2CFB0C", Offset = "0x2CFB0C", VA = "0x2CFB0C", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x600151B")]
	[Address(RVA = "0x2CFBC0", Offset = "0x2CFBC0", VA = "0x2CFBC0", Slot = "1")]
	~AkPositionArray()
	{
	}

	[Token(Token = "0x600151C")]
	[Address(RVA = "0x2CFC1C", Offset = "0x2CFC1C", VA = "0x2CFC1C")]
	public void Reset()
	{
	}

	[Token(Token = "0x600151D")]
	[Address(RVA = "0x2CFC30", Offset = "0x2CFC30", VA = "0x2CFC30")]
	public void Add(Vector3 in_Pos, Vector3 in_Forward, Vector3 in_Top)
	{
	}
}
[Token(Token = "0x200028D")]
public class AkPropagationPathInfoArray : AkBaseArray<AkPropagationPathInfo>
{
	[Token(Token = "0x17000221")]
	protected override int StructureSize
	{
		[Token(Token = "0x600151F")]
		[Address(RVA = "0x2D4CD0", Offset = "0x2D4CD0", VA = "0x2D4CD0", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x600151E")]
	[Address(RVA = "0x2D4C64", Offset = "0x2D4C64", VA = "0x2D4C64")]
	public AkPropagationPathInfoArray(int count)
	{
	}

	[Token(Token = "0x6001520")]
	[Address(RVA = "0x2D4D48", Offset = "0x2D4D48", VA = "0x2D4D48", Slot = "8")]
	protected override AkPropagationPathInfo CreateNewReferenceFromIntPtr(IntPtr address)
	{
		return null;
	}

	[Token(Token = "0x6001521")]
	[Address(RVA = "0x2D4DC4", Offset = "0x2D4DC4", VA = "0x2D4DC4", Slot = "9")]
	protected override void CloneIntoReferenceFromIntPtr(IntPtr address, AkPropagationPathInfo other)
	{
	}
}
[Token(Token = "0x200028E")]
public class AkReflectionPathInfoArray : AkBaseArray<AkReflectionPathInfo>
{
	[Token(Token = "0x17000222")]
	protected override int StructureSize
	{
		[Token(Token = "0x6001523")]
		[Address(RVA = "0x2D7678", Offset = "0x2D7678", VA = "0x2D7678", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6001522")]
	[Address(RVA = "0x2D760C", Offset = "0x2D760C", VA = "0x2D760C")]
	public AkReflectionPathInfoArray(int count)
	{
	}

	[Token(Token = "0x6001524")]
	[Address(RVA = "0x2D76F0", Offset = "0x2D76F0", VA = "0x2D76F0", Slot = "8")]
	protected override AkReflectionPathInfo CreateNewReferenceFromIntPtr(IntPtr address)
	{
		return null;
	}

	[Token(Token = "0x6001525")]
	[Address(RVA = "0x2D776C", Offset = "0x2D776C", VA = "0x2D776C", Slot = "9")]
	protected override void CloneIntoReferenceFromIntPtr(IntPtr address, AkReflectionPathInfo other)
	{
	}
}
[Token(Token = "0x2000290")]
public class AkTriangleArray : AkBaseArray<AkTriangle>
{
	[Token(Token = "0x17000223")]
	protected override int StructureSize
	{
		[Token(Token = "0x600152B")]
		[Address(RVA = "0x2670E4", Offset = "0x2670E4", VA = "0x2670E4", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x600152A")]
	[Address(RVA = "0x264CF0", Offset = "0x264CF0", VA = "0x264CF0")]
	public AkTriangleArray(int count)
	{
	}

	[Token(Token = "0x600152C")]
	[Address(RVA = "0x267164", Offset = "0x267164", VA = "0x267164", Slot = "7")]
	protected override void ClearAtIntPtr(IntPtr address)
	{
	}

	[Token(Token = "0x600152D")]
	[Address(RVA = "0x2671EC", Offset = "0x2671EC", VA = "0x2671EC", Slot = "8")]
	protected override AkTriangle CreateNewReferenceFromIntPtr(IntPtr address)
	{
		return null;
	}

	[Token(Token = "0x600152E")]
	[Address(RVA = "0x267268", Offset = "0x267268", VA = "0x267268", Slot = "9")]
	protected override void CloneIntoReferenceFromIntPtr(IntPtr address, AkTriangle other)
	{
	}
}
[Token(Token = "0x2000291")]
public class AkUtilities
{
	[Token(Token = "0x2000292")]
	public class ShortIDGenerator
	{
		[Token(Token = "0x400104B")]
		private const uint s_prime32 = 16777619u;

		[Token(Token = "0x400104C")]
		private const uint s_offsetBasis32 = 2166136261u;

		[Token(Token = "0x400104D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static byte s_hashSize;

		[Token(Token = "0x400104E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static uint s_mask;

		[Token(Token = "0x17000224")]
		public static byte HashSize
		{
			[Token(Token = "0x6001532")]
			[Address(RVA = "0x269780", Offset = "0x269780", VA = "0x269780")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x6001533")]
			[Address(RVA = "0x2696BC", Offset = "0x2696BC", VA = "0x2696BC")]
			set
			{
			}
		}

		[Token(Token = "0x6001530")]
		[Address(RVA = "0x2696B4", Offset = "0x2696B4", VA = "0x2696B4")]
		static ShortIDGenerator()
		{
		}

		[Token(Token = "0x6001531")]
		[Address(RVA = "0x269778", Offset = "0x269778", VA = "0x269778")]
		public ShortIDGenerator()
		{
		}

		[Token(Token = "0x6001534")]
		[Address(RVA = "0x26777C", Offset = "0x26777C", VA = "0x26777C")]
		public static uint Compute(string in_name)
		{
			return default(uint);
		}
	}

	[Token(Token = "0x600152F")]
	[Address(RVA = "0x2696AC", Offset = "0x2696AC", VA = "0x2696AC")]
	public AkUtilities()
	{
	}
}
[Token(Token = "0x2000293")]
public class AkVertexArray : AkBaseArray<AkVertex>
{
	[Token(Token = "0x17000225")]
	protected override int StructureSize
	{
		[Token(Token = "0x6001536")]
		[Address(RVA = "0x26A570", Offset = "0x26A570", VA = "0x26A570", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6001535")]
	[Address(RVA = "0x264AC8", Offset = "0x264AC8", VA = "0x264AC8")]
	public AkVertexArray(int count)
	{
	}

	[Token(Token = "0x6001537")]
	[Address(RVA = "0x26A5F0", Offset = "0x26A5F0", VA = "0x26A5F0", Slot = "7")]
	protected override void ClearAtIntPtr(IntPtr address)
	{
	}

	[Token(Token = "0x6001538")]
	[Address(RVA = "0x26A678", Offset = "0x26A678", VA = "0x26A678", Slot = "8")]
	protected override AkVertex CreateNewReferenceFromIntPtr(IntPtr address)
	{
		return null;
	}

	[Token(Token = "0x6001539")]
	[Address(RVA = "0x26A6F4", Offset = "0x26A6F4", VA = "0x26A6F4", Slot = "9")]
	protected override void CloneIntoReferenceFromIntPtr(IntPtr address, AkVertex other)
	{
	}
}
[Token(Token = "0x2000294")]
public class AkWwiseInitializationSettings : AkCommonPlatformSettings
{
	[Token(Token = "0x2000295")]
	public abstract class PlatformSettings : AkCommonPlatformSettings
	{
		[Token(Token = "0x4001058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		[HideInInspector]
		private List<string> IgnorePropertyNameList;

		[Token(Token = "0x4001059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		[HideInInspector]
		private List<string> GlobalPropertyNameList;

		[Token(Token = "0x400105A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private HashSet<string> _GlobalPropertyHashSet;

		[Token(Token = "0x1700022A")]
		public HashSet<string> GlobalPropertyHashSet
		{
			[Token(Token = "0x6001550")]
			[Address(RVA = "0x26D930", Offset = "0x26D930", VA = "0x26D930")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001551")]
			[Address(RVA = "0x26D9C8", Offset = "0x26D9C8", VA = "0x26D9C8")]
			set
			{
			}
		}

		[Token(Token = "0x600154A")]
		[Address(RVA = "0x26A7D0", Offset = "0x26A7D0", VA = "0x26A7D0")]
		protected PlatformSettings()
		{
		}

		[Token(Token = "0x600154B")]
		[Address(RVA = "0x26D6D0", Offset = "0x26D6D0", VA = "0x26D6D0")]
		public void IgnorePropertyValue(string propertyPath)
		{
		}

		[Token(Token = "0x600154C")]
		[Address(RVA = "0x26D770", Offset = "0x26D770", VA = "0x26D770")]
		public bool IsPropertyIgnored(string propertyPath)
		{
			return default(bool);
		}

		[Token(Token = "0x600154D")]
		[Address(RVA = "0x26D7EC", Offset = "0x26D7EC", VA = "0x26D7EC")]
		public void SetUseGlobalPropertyValue(string propertyPath, bool use)
		{
		}

		[Token(Token = "0x600154E")]
		[Address(RVA = "0x26D384", Offset = "0x26D384", VA = "0x26D384")]
		public void SetGlobalPropertyValues(IEnumerable enumerable)
		{
		}

		[Token(Token = "0x600154F")]
		[Address(RVA = "0x26D8B4", Offset = "0x26D8B4", VA = "0x26D8B4")]
		private bool IsUsingGlobalPropertyValue(string propertyPath)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000296")]
	public class CommonPlatformSettings : PlatformSettings
	{
		[Token(Token = "0x400105B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public AkCommonUserSettings UserSettings;

		[Token(Token = "0x400105C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[HideInInspector]
		public AkCommonAdvancedSettings AdvancedSettings;

		[Token(Token = "0x400105D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public AkCommonCommSettings CommsSettings;

		[Token(Token = "0x6001552")]
		[Address(RVA = "0x26D368", Offset = "0x26D368", VA = "0x26D368")]
		public CommonPlatformSettings()
		{
		}

		[Token(Token = "0x6001553")]
		[Address(RVA = "0x26D36C", Offset = "0x26D36C", VA = "0x26D36C", Slot = "10")]
		protected override AkCommonUserSettings GetUserSettings()
		{
			return null;
		}

		[Token(Token = "0x6001554")]
		[Address(RVA = "0x26D374", Offset = "0x26D374", VA = "0x26D374", Slot = "11")]
		protected override AkCommonAdvancedSettings GetAdvancedSettings()
		{
			return null;
		}

		[Token(Token = "0x6001555")]
		[Address(RVA = "0x26D37C", Offset = "0x26D37C", VA = "0x26D37C", Slot = "12")]
		protected override AkCommonCommSettings GetCommsSettings()
		{
			return null;
		}
	}

	[Token(Token = "0x400104F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[HideInInspector]
	public List<string> PlatformSettingsNameList;

	[Token(Token = "0x4001050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[HideInInspector]
	public List<PlatformSettings> PlatformSettingsList;

	[Token(Token = "0x4001051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[HideInInspector]
	public List<string> InvalidReferencePlatforms;

	[Token(Token = "0x4001052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public AkCommonUserSettings UserSettings;

	[Token(Token = "0x4001053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public AkCommonAdvancedSettings AdvancedSettings;

	[Token(Token = "0x4001054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public AkCommonCommSettings CommsSettings;

	[Token(Token = "0x4001055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly string[] AllGlobalValues;

	[Token(Token = "0x4001056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static AkWwiseInitializationSettings m_Instance;

	[Token(Token = "0x4001057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static AkBasePlatformSettings m_ActivePlatformSettings;

	[Token(Token = "0x17000226")]
	public bool IsValid
	{
		[Token(Token = "0x600153B")]
		[Address(RVA = "0x26A9CC", Offset = "0x26A9CC", VA = "0x26A9CC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000227")]
	public int Count
	{
		[Token(Token = "0x600153C")]
		[Address(RVA = "0x26AA7C", Offset = "0x26AA7C", VA = "0x26AA7C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000228")]
	public static AkWwiseInitializationSettings Instance
	{
		[Token(Token = "0x6001540")]
		[Address(RVA = "0x26AB08", Offset = "0x26AB08", VA = "0x26AB08")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000229")]
	public static AkBasePlatformSettings ActivePlatformSettings
	{
		[Token(Token = "0x6001542")]
		[Address(RVA = "0x26AF4C", Offset = "0x26AF4C", VA = "0x26AF4C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600153A")]
	[Address(RVA = "0x26A8F4", Offset = "0x26A8F4", VA = "0x26A8F4")]
	public AkWwiseInitializationSettings()
	{
	}

	[Token(Token = "0x600153D")]
	[Address(RVA = "0x26AAF0", Offset = "0x26AAF0", VA = "0x26AAF0", Slot = "10")]
	protected override AkCommonUserSettings GetUserSettings()
	{
		return null;
	}

	[Token(Token = "0x600153E")]
	[Address(RVA = "0x26AAF8", Offset = "0x26AAF8", VA = "0x26AAF8", Slot = "11")]
	protected override AkCommonAdvancedSettings GetAdvancedSettings()
	{
		return null;
	}

	[Token(Token = "0x600153F")]
	[Address(RVA = "0x26AB00", Offset = "0x26AB00", VA = "0x26AB00", Slot = "12")]
	protected override AkCommonCommSettings GetCommsSettings()
	{
		return null;
	}

	[Token(Token = "0x6001541")]
	[Address(RVA = "0x26ACC8", Offset = "0x26ACC8", VA = "0x26ACC8")]
	private static AkBasePlatformSettings GetPlatformSettings(string platformName)
	{
		return null;
	}

	[Token(Token = "0x6001543")]
	[Address(RVA = "0x26B0EC", Offset = "0x26B0EC", VA = "0x26B0EC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001544")]
	[Address(RVA = "0x26B2DC", Offset = "0x26B2DC", VA = "0x26B2DC")]
	public static bool InitializeSoundEngine()
	{
		return default(bool);
	}

	[Token(Token = "0x6001545")]
	[Address(RVA = "0x26BC00", Offset = "0x26BC00", VA = "0x26BC00")]
	public static bool ResetSoundEngine(bool isPlaying)
	{
		return default(bool);
	}

	[Token(Token = "0x6001546")]
	[Address(RVA = "0x26BA68", Offset = "0x26BA68", VA = "0x26BA68")]
	private static void LoadInitBank()
	{
	}

	[Token(Token = "0x6001547")]
	[Address(RVA = "0x26BD58", Offset = "0x26BD58", VA = "0x26BD58")]
	public static void TerminateSoundEngine()
	{
	}

	[Token(Token = "0x6001548")]
	[Address(RVA = "0x26BFDC", Offset = "0x26BFDC", VA = "0x26BFDC")]
	private static void SleepForMilliseconds(double milliseconds)
	{
	}
}
namespace AK.Wwise
{
	[Serializable]
	[Token(Token = "0x2000297")]
	public class BaseType
	{
		[Token(Token = "0x400105E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int ID;

		[Token(Token = "0x6001556")]
		[Address(RVA = "0x490B70", Offset = "0x490B70", VA = "0x490B70")]
		public BaseType()
		{
		}

		[Token(Token = "0x6001557")]
		[Address(RVA = "0x491540", Offset = "0x491540", VA = "0x491540")]
		protected uint GetID()
		{
			return default(uint);
		}

		[Token(Token = "0x6001558")]
		[Address(RVA = "0x4914FC", Offset = "0x4914FC", VA = "0x4914FC", Slot = "4")]
		public virtual bool IsValid()
		{
			return default(bool);
		}

		[Token(Token = "0x6001559")]
		[Address(RVA = "0x491548", Offset = "0x491548", VA = "0x491548")]
		public bool Validate()
		{
			return default(bool);
		}

		[Token(Token = "0x600155A")]
		[Address(RVA = "0x491694", Offset = "0x491694", VA = "0x491694")]
		protected void Verify(AKRESULT result)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000298")]
	public class BaseGroupType : BaseType
	{
		[Token(Token = "0x400105F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int groupID;

		[Token(Token = "0x600155B")]
		[Address(RVA = "0x49150C", Offset = "0x49150C", VA = "0x49150C")]
		public BaseGroupType()
		{
		}

		[Token(Token = "0x600155C")]
		[Address(RVA = "0x491514", Offset = "0x491514", VA = "0x491514")]
		protected uint GetGroupID()
		{
			return default(uint);
		}

		[Token(Token = "0x600155D")]
		[Address(RVA = "0x49151C", Offset = "0x49151C", VA = "0x49151C", Slot = "4")]
		public override bool IsValid()
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x2000299")]
	public class CallbackFlags
	{
		[Token(Token = "0x4001060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint value;

		[Token(Token = "0x600155E")]
		[Address(RVA = "0x491698", Offset = "0x491698", VA = "0x491698")]
		public CallbackFlags()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200029A")]
	public class Event : BaseType
	{
		[Token(Token = "0x600155F")]
		[Address(RVA = "0x4916A0", Offset = "0x4916A0", VA = "0x4916A0")]
		public Event()
		{
		}

		[Token(Token = "0x6001560")]
		[Address(RVA = "0x4916A8", Offset = "0x4916A8", VA = "0x4916A8")]
		private void VerifyPlayingID(uint playingId)
		{
		}

		[Token(Token = "0x6001561")]
		[Address(RVA = "0x4916AC", Offset = "0x4916AC", VA = "0x4916AC")]
		public uint Post(GameObject gameObject)
		{
			return default(uint);
		}

		[Token(Token = "0x6001562")]
		[Address(RVA = "0x491760", Offset = "0x491760", VA = "0x491760")]
		public uint Post(GameObject gameObject, CallbackFlags flags, AkCallbackManager.EventCallback callback, [Optional] object cookie)
		{
			return default(uint);
		}

		[Token(Token = "0x6001563")]
		[Address(RVA = "0x49184C", Offset = "0x49184C", VA = "0x49184C")]
		public uint Post(GameObject gameObject, uint flags, AkCallbackManager.EventCallback callback, [Optional] object cookie)
		{
			return default(uint);
		}

		[Token(Token = "0x6001564")]
		[Address(RVA = "0x491928", Offset = "0x491928", VA = "0x491928")]
		public void Stop(GameObject gameObject, int transitionDuration = 0, AkCurveInterpolation curveInterpolation = AkCurveInterpolation.AkCurveInterpolation_Linear)
		{
		}

		[Token(Token = "0x6001565")]
		[Address(RVA = "0x491950", Offset = "0x491950", VA = "0x491950")]
		public void ExecuteAction(GameObject gameObject, AkActionOnEventType actionOnEventType, int transitionDuration, AkCurveInterpolation curveInterpolation)
		{
		}

		[Token(Token = "0x6001566")]
		[Address(RVA = "0x491A20", Offset = "0x491A20", VA = "0x491A20")]
		public void PostMIDI(GameObject gameObject, AkMIDIPostArray array)
		{
		}

		[Token(Token = "0x6001567")]
		[Address(RVA = "0x491A78", Offset = "0x491A78", VA = "0x491A78")]
		public void PostMIDI(GameObject gameObject, AkMIDIPostArray array, int count)
		{
		}

		[Token(Token = "0x6001568")]
		[Address(RVA = "0x491AE4", Offset = "0x491AE4", VA = "0x491AE4")]
		public void StopMIDI(GameObject gameObject)
		{
		}

		[Token(Token = "0x6001569")]
		[Address(RVA = "0x491B94", Offset = "0x491B94", VA = "0x491B94")]
		public void StopMIDI()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200029B")]
	public class RTPC : BaseType
	{
		[Token(Token = "0x600156A")]
		[Address(RVA = "0x491C3C", Offset = "0x491C3C", VA = "0x491C3C")]
		public RTPC()
		{
		}

		[Token(Token = "0x600156B")]
		[Address(RVA = "0x491C44", Offset = "0x491C44", VA = "0x491C44")]
		public void SetValue(GameObject gameObject, float value)
		{
		}

		[Token(Token = "0x600156C")]
		[Address(RVA = "0x491D08", Offset = "0x491D08", VA = "0x491D08")]
		public void SetGlobalValue(float value)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200029C")]
	public class Trigger : BaseType
	{
		[Token(Token = "0x600156D")]
		[Address(RVA = "0x491F3C", Offset = "0x491F3C", VA = "0x491F3C")]
		public Trigger()
		{
		}

		[Token(Token = "0x600156E")]
		[Address(RVA = "0x491F44", Offset = "0x491F44", VA = "0x491F44")]
		public void Post(GameObject gameObject)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200029D")]
	public class State : BaseGroupType
	{
		[Token(Token = "0x600156F")]
		[Address(RVA = "0x491DB8", Offset = "0x491DB8", VA = "0x491DB8")]
		public State()
		{
		}

		[Token(Token = "0x6001570")]
		[Address(RVA = "0x491DC0", Offset = "0x491DC0", VA = "0x491DC0")]
		public void SetValue()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200029E")]
	public class Switch : BaseGroupType
	{
		[Token(Token = "0x6001571")]
		[Address(RVA = "0x491E70", Offset = "0x491E70", VA = "0x491E70")]
		public Switch()
		{
		}

		[Token(Token = "0x6001572")]
		[Address(RVA = "0x491E78", Offset = "0x491E78", VA = "0x491E78")]
		public void SetValue(GameObject gameObject)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200029F")]
	public class AuxBus : BaseType
	{
		[Token(Token = "0x6001573")]
		[Address(RVA = "0x490B78", Offset = "0x490B78", VA = "0x490B78")]
		public AuxBus()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002A0")]
	public class Bank : BaseType
	{
		[Token(Token = "0x4001061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public string name;

		[Token(Token = "0x6001574")]
		[Address(RVA = "0x490B80", Offset = "0x490B80", VA = "0x490B80")]
		public Bank()
		{
		}

		[Token(Token = "0x6001575")]
		[Address(RVA = "0x490B88", Offset = "0x490B88", VA = "0x490B88")]
		public void Load(bool decodeBank = false, bool saveDecodedBank = false)
		{
		}

		[Token(Token = "0x6001576")]
		[Address(RVA = "0x490EEC", Offset = "0x490EEC", VA = "0x490EEC")]
		public void LoadAsync([Optional] AkCallbackManager.BankCallback callback)
		{
		}

		[Token(Token = "0x6001577")]
		[Address(RVA = "0x491204", Offset = "0x491204", VA = "0x491204")]
		public void Unload()
		{
		}

		[Token(Token = "0x6001578")]
		[Address(RVA = "0x4914B4", Offset = "0x4914B4", VA = "0x4914B4", Slot = "4")]
		public override bool IsValid()
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x20002A1")]
	public class AcousticTexture : BaseType
	{
		[Token(Token = "0x6001579")]
		[Address(RVA = "0x490B68", Offset = "0x490B68", VA = "0x490B68")]
		public AcousticTexture()
		{
		}
	}
}
[Token(Token = "0x20002A2")]
public class AkPS4Settings : AkWwiseInitializationSettings.PlatformSettings
{
	[Serializable]
	[Token(Token = "0x20002A3")]
	public class PlatformAdvancedSettings : AkCommonAdvancedSettings
	{
		[Token(Token = "0x4001065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16D25C", Offset = "0x16D25C")]
		public uint ACPBatchBufferSize;

		[Token(Token = "0x4001066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16D290", Offset = "0x16D290")]
		public bool UseHardwareCodecLowLatencyMode;

		[Token(Token = "0x600157E")]
		[Address(RVA = "0x2D4F58", Offset = "0x2D4F58", VA = "0x2D4F58")]
		public PlatformAdvancedSettings()
		{
		}

		[Token(Token = "0x600157F")]
		[Address(RVA = "0x2D4F60", Offset = "0x2D4F60", VA = "0x2D4F60")]
		public void CopyTo(AkPlatformInitSettings settings)
		{
		}
	}

	[Token(Token = "0x4001062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public AkCommonUserSettings UserSettings;

	[Token(Token = "0x4001063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public PlatformAdvancedSettings AdvancedSettings;

	[Token(Token = "0x4001064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public AkCommonCommSettings CommsSettings;

	[Token(Token = "0x600157A")]
	[Address(RVA = "0x2D4E94", Offset = "0x2D4E94", VA = "0x2D4E94")]
	public AkPS4Settings()
	{
	}

	[Token(Token = "0x600157B")]
	[Address(RVA = "0x2D4F40", Offset = "0x2D4F40", VA = "0x2D4F40", Slot = "10")]
	protected override AkCommonUserSettings GetUserSettings()
	{
		return null;
	}

	[Token(Token = "0x600157C")]
	[Address(RVA = "0x2D4F48", Offset = "0x2D4F48", VA = "0x2D4F48", Slot = "11")]
	protected override AkCommonAdvancedSettings GetAdvancedSettings()
	{
		return null;
	}

	[Token(Token = "0x600157D")]
	[Address(RVA = "0x2D4F50", Offset = "0x2D4F50", VA = "0x2D4F50", Slot = "12")]
	protected override AkCommonCommSettings GetCommsSettings()
	{
		return null;
	}
}
[Token(Token = "0x20002A4")]
public class AkWindowsSettings : AkWwiseInitializationSettings.PlatformSettings
{
	[Serializable]
	[Token(Token = "0x20002A5")]
	public class PlatformAdvancedSettings : AkCommonAdvancedSettings
	{
		[Token(Token = "0x20002A6")]
		public enum AudioAPI
		{
			[Token(Token = "0x400106D")]
			None = 0,
			[Token(Token = "0x400106E")]
			Wasapi = 1,
			[Token(Token = "0x400106F")]
			XAudio2 = 2,
			[Token(Token = "0x4001070")]
			DirectSound = 4,
			[Token(Token = "0x4001071")]
			Default = -1
		}

		[Token(Token = "0x400106A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16D2F4", Offset = "0x16D2F4")]
		[AttributeAttribute(Name = "AkEnumFlagAttribute", RVA = "0x16D2F4", Offset = "0x16D2F4")]
		public AudioAPI m_AudioAPI;

		[Token(Token = "0x400106B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16D394", Offset = "0x16D394")]
		public bool m_GlobalFocus;

		[Token(Token = "0x6001584")]
		[Address(RVA = "0x26A8D8", Offset = "0x26A8D8", VA = "0x26A8D8")]
		public PlatformAdvancedSettings()
		{
		}

		[Token(Token = "0x6001585")]
		[Address(RVA = "0x26A8F0", Offset = "0x26A8F0", VA = "0x26A8F0")]
		public void CopyTo(AkPlatformInitSettings settings)
		{
		}
	}

	[Token(Token = "0x4001067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public AkCommonUserSettings UserSettings;

	[Token(Token = "0x4001068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public PlatformAdvancedSettings AdvancedSettings;

	[Token(Token = "0x4001069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public AkCommonCommSettings CommsSettings;

	[Token(Token = "0x6001580")]
	[Address(RVA = "0x26A7CC", Offset = "0x26A7CC", VA = "0x26A7CC")]
	public AkWindowsSettings()
	{
	}

	[Token(Token = "0x6001581")]
	[Address(RVA = "0x26A8C0", Offset = "0x26A8C0", VA = "0x26A8C0", Slot = "10")]
	protected override AkCommonUserSettings GetUserSettings()
	{
		return null;
	}

	[Token(Token = "0x6001582")]
	[Address(RVA = "0x26A8C8", Offset = "0x26A8C8", VA = "0x26A8C8", Slot = "11")]
	protected override AkCommonAdvancedSettings GetAdvancedSettings()
	{
		return null;
	}

	[Token(Token = "0x6001583")]
	[Address(RVA = "0x26A8D0", Offset = "0x26A8D0", VA = "0x26A8D0", Slot = "12")]
	protected override AkCommonCommSettings GetCommsSettings()
	{
		return null;
	}
}
[Token(Token = "0x20002A7")]
public enum MultiPositionTypeLabel
{
	[Token(Token = "0x4001073")]
	Simple_Mode,
	[Token(Token = "0x4001074")]
	Large_Mode,
	[Token(Token = "0x4001075")]
	MultiPosition_Mode
}
[Token(Token = "0x20002A8")]
public class AkMultiPosEvent
{
	[Token(Token = "0x4001076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public bool eventIsPlaying;

	[Token(Token = "0x4001077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public List<AkAmbient> list;

	[Token(Token = "0x6001586")]
	[Address(RVA = "0x2C21A8", Offset = "0x2C21A8", VA = "0x2C21A8")]
	public AkMultiPosEvent()
	{
	}

	[Token(Token = "0x6001587")]
	[Address(RVA = "0x2C2234", Offset = "0x2C2234", VA = "0x2C2234")]
	public void FinishedPlaying(object in_cookie, AkCallbackType in_type, object in_info)
	{
	}
}
[Token(Token = "0x20002A9")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x16D3C8", Offset = "0x16D3C8")]
public class AkAmbient : AkEvent
{
	[Token(Token = "0x4001078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<int, AkMultiPosEvent> multiPosEventTree;

	[Token(Token = "0x4001079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<Vector3> multiPositionArray;

	[Token(Token = "0x400107A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public AkMultiPositionType MultiPositionType;

	[Token(Token = "0x400107B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public MultiPositionTypeLabel multiPositionTypeLabel;

	[Token(Token = "0x400107C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16D3FC", Offset = "0x16D3FC")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x16D3FC", Offset = "0x16D3FC")]
	private AkAmbient <ParentAkAmbience>k__BackingField;

	[Token(Token = "0x1700022B")]
	public AkAmbient ParentAkAmbience
	{
		[Token(Token = "0x6001589")]
		[Address(RVA = "0x492CC0", Offset = "0x492CC0", VA = "0x492CC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16D430", Offset = "0x16D430")]
		get
		{
			return null;
		}
		[Token(Token = "0x600158A")]
		[Address(RVA = "0x492CC8", Offset = "0x492CC8", VA = "0x492CC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16D440", Offset = "0x16D440")]
		set
		{
		}
	}

	[Token(Token = "0x6001588")]
	[Address(RVA = "0x492BA4", Offset = "0x492BA4", VA = "0x492BA4")]
	public AkAmbient()
	{
	}

	[Token(Token = "0x600158B")]
	[Address(RVA = "0x492CD0", Offset = "0x492CD0", VA = "0x492CD0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600158C")]
	[Address(RVA = "0x493738", Offset = "0x493738", VA = "0x493738")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600158D")]
	[Address(RVA = "0x4939B8", Offset = "0x4939B8", VA = "0x4939B8", Slot = "4")]
	public override void HandleEvent(GameObject in_gameObject)
	{
	}

	[Token(Token = "0x600158E")]
	[Address(RVA = "0x494094", Offset = "0x494094", VA = "0x494094")]
	public void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x600158F")]
	[Address(RVA = "0x49346C", Offset = "0x49346C", VA = "0x49346C")]
	public AkPositionArray BuildMultiDirectionArray(AkMultiPosEvent eventPosList)
	{
		return null;
	}

	[Token(Token = "0x6001590")]
	[Address(RVA = "0x493200", Offset = "0x493200", VA = "0x493200")]
	private AkPositionArray BuildAkPositionArray()
	{
		return null;
	}
}
[Token(Token = "0x20002AA")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x16D450", Offset = "0x16D450")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x16D450", Offset = "0x16D450")]
[DisallowMultipleComponent]
public class AkAudioListener : MonoBehaviour
{
	[Token(Token = "0x20002AB")]
	public class BaseListenerList
	{
		[Token(Token = "0x4001083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private readonly List<ulong> listenerIdList;

		[Token(Token = "0x4001084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private readonly List<AkAudioListener> listenerList;

		[Token(Token = "0x1700022D")]
		public List<AkAudioListener> ListenerList
		{
			[Token(Token = "0x600159F")]
			[Address(RVA = "0x4981C8", Offset = "0x4981C8", VA = "0x4981C8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600159E")]
		[Address(RVA = "0x498108", Offset = "0x498108", VA = "0x498108")]
		public BaseListenerList()
		{
		}

		[Token(Token = "0x60015A0")]
		[Address(RVA = "0x4981D0", Offset = "0x4981D0", VA = "0x4981D0", Slot = "4")]
		public virtual bool Add(AkAudioListener listener)
		{
			return default(bool);
		}

		[Token(Token = "0x60015A1")]
		[Address(RVA = "0x498328", Offset = "0x498328", VA = "0x498328", Slot = "5")]
		public virtual bool Remove(AkAudioListener listener)
		{
			return default(bool);
		}

		[Token(Token = "0x60015A2")]
		[Address(RVA = "0x498480", Offset = "0x498480", VA = "0x498480")]
		public ulong[] GetListenerIds()
		{
			return null;
		}
	}

	[Token(Token = "0x20002AC")]
	public class DefaultListenerList : BaseListenerList
	{
		[Token(Token = "0x60015A3")]
		[Address(RVA = "0x498104", Offset = "0x498104", VA = "0x498104")]
		public DefaultListenerList()
		{
		}

		[Token(Token = "0x60015A4")]
		[Address(RVA = "0x4984F4", Offset = "0x4984F4", VA = "0x4984F4", Slot = "4")]
		public override bool Add(AkAudioListener listener)
		{
			return default(bool);
		}

		[Token(Token = "0x60015A5")]
		[Address(RVA = "0x4985F8", Offset = "0x4985F8", VA = "0x4985F8", Slot = "5")]
		public override bool Remove(AkAudioListener listener)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x400107D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly DefaultListenerList defaultListeners;

	[Token(Token = "0x400107E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private ulong akGameObjectID;

	[Token(Token = "0x400107F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<AkGameObj> EmittersToStartListeningTo;

	[Token(Token = "0x4001080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private List<AkGameObj> EmittersToStopListeningTo;

	[Token(Token = "0x4001081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isDefaultListener;

	[Token(Token = "0x4001082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	public int listenerId;

	[Token(Token = "0x1700022C")]
	public static DefaultListenerList DefaultListeners
	{
		[Token(Token = "0x6001593")]
		[Address(RVA = "0x4976F4", Offset = "0x4976F4", VA = "0x4976F4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001592")]
	[Address(RVA = "0x49763C", Offset = "0x49763C", VA = "0x49763C")]
	public AkAudioListener()
	{
	}

	[Token(Token = "0x6001594")]
	[Address(RVA = "0x497780", Offset = "0x497780", VA = "0x497780")]
	public void StartListeningToEmitter(AkGameObj emitter)
	{
	}

	[Token(Token = "0x6001595")]
	[Address(RVA = "0x497828", Offset = "0x497828", VA = "0x497828")]
	public void StopListeningToEmitter(AkGameObj emitter)
	{
	}

	[Token(Token = "0x6001596")]
	[Address(RVA = "0x4978D0", Offset = "0x4978D0", VA = "0x4978D0")]
	public void SetIsDefaultListener(bool isDefault)
	{
	}

	[Token(Token = "0x6001597")]
	[Address(RVA = "0x4979DC", Offset = "0x4979DC", VA = "0x4979DC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001598")]
	[Address(RVA = "0x497BCC", Offset = "0x497BCC", VA = "0x497BCC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001599")]
	[Address(RVA = "0x497C7C", Offset = "0x497C7C", VA = "0x497C7C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600159A")]
	[Address(RVA = "0x497D2C", Offset = "0x497D2C", VA = "0x497D2C")]
	private void Update()
	{
	}

	[Token(Token = "0x600159B")]
	[Address(RVA = "0x497F68", Offset = "0x497F68", VA = "0x497F68")]
	public ulong GetAkGameObjectID()
	{
		return default(ulong);
	}

	[Token(Token = "0x600159C")]
	[Address(RVA = "0x497F70", Offset = "0x497F70", VA = "0x497F70")]
	public void Migrate14()
	{
	}
}
[Token(Token = "0x20002AD")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x16D510", Offset = "0x16D510")]
[ExecuteInEditMode]
public class AkBank : AkUnityEventHandler
{
	[Token(Token = "0x4001085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string bankName;

	[Token(Token = "0x4001086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool decodeBank;

	[Token(Token = "0x4001087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool loadAsynchronous;

	[Token(Token = "0x4001088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	public bool saveDecodedBank;

	[Token(Token = "0x4001089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<int> unloadTriggerList;

	[Token(Token = "0x60015A6")]
	[Address(RVA = "0x49A4A8", Offset = "0x49A4A8", VA = "0x49A4A8")]
	public AkBank()
	{
	}

	[Token(Token = "0x60015A7")]
	[Address(RVA = "0x49A5D4", Offset = "0x49A5D4", VA = "0x49A5D4", Slot = "5")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60015A8")]
	[Address(RVA = "0x49A788", Offset = "0x49A788", VA = "0x49A788", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60015A9")]
	[Address(RVA = "0x49A820", Offset = "0x49A820", VA = "0x49A820", Slot = "4")]
	public override void HandleEvent(GameObject in_gameObject)
	{
	}

	[Token(Token = "0x60015AA")]
	[Address(RVA = "0x49A6BC", Offset = "0x49A6BC", VA = "0x49A6BC")]
	public void UnloadBank(GameObject in_gameObject)
	{
	}

	[Token(Token = "0x60015AB")]
	[Address(RVA = "0x49A960", Offset = "0x49A960", VA = "0x49A960", Slot = "7")]
	protected override void OnDestroy()
	{
	}
}
[Token(Token = "0x20002AE")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x16D558", Offset = "0x16D558")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x16D558", Offset = "0x16D558")]
public class AkEmitterObstructionOcclusion : AkObstructionOcclusion
{
	[Token(Token = "0x400108A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private AkGameObj m_gameObj;

	[Token(Token = "0x60015AC")]
	[Address(RVA = "0x4A8108", Offset = "0x4A8108", VA = "0x4A8108")]
	public AkEmitterObstructionOcclusion()
	{
	}

	[Token(Token = "0x60015AD")]
	[Address(RVA = "0x4A8110", Offset = "0x4A8110", VA = "0x4A8110")]
	private void Awake()
	{
	}

	[Token(Token = "0x60015AE")]
	[Address(RVA = "0x4A8184", Offset = "0x4A8184", VA = "0x4A8184", Slot = "4")]
	protected override void UpdateObstructionOcclusionValuesForListeners()
	{
	}

	[Token(Token = "0x60015AF")]
	[Address(RVA = "0x4A8348", Offset = "0x4A8348", VA = "0x4A8348", Slot = "5")]
	protected override void SetObstructionOcclusion(KeyValuePair<AkAudioListener, ObstructionOcclusionValue> ObsOccPair)
	{
	}
}
[Token(Token = "0x20002AF")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x16D5F8", Offset = "0x16D5F8")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x16D5F8", Offset = "0x16D5F8")]
[ExecuteInEditMode]
public class AkEnvironment : MonoBehaviour
{
	[Token(Token = "0x20002B0")]
	public class AkEnvironment_CompareByPriority : IComparer<AkEnvironment>
	{
		[Token(Token = "0x60015B7")]
		[Address(RVA = "0x4A9498", Offset = "0x4A9498", VA = "0x4A9498")]
		public AkEnvironment_CompareByPriority()
		{
		}

		[Token(Token = "0x60015B8")]
		[Address(RVA = "0x4A94A8", Offset = "0x4A94A8", VA = "0x4A94A8", Slot = "5")]
		public virtual int Compare(AkEnvironment a, AkEnvironment b)
		{
			return default(int);
		}
	}

	[Token(Token = "0x20002B1")]
	public class AkEnvironment_CompareBySelectionAlgorithm : AkEnvironment_CompareByPriority
	{
		[Token(Token = "0x60015B9")]
		[Address(RVA = "0x4A94A0", Offset = "0x4A94A0", VA = "0x4A94A0")]
		public AkEnvironment_CompareBySelectionAlgorithm()
		{
		}

		[Token(Token = "0x60015BA")]
		[Address(RVA = "0x4A9588", Offset = "0x4A9588", VA = "0x4A9588", Slot = "5")]
		public override int Compare(AkEnvironment a, AkEnvironment b)
		{
			return default(int);
		}
	}

	[Token(Token = "0x400108B")]
	public const int MAX_NB_ENVIRONMENTS = 4;

	[Token(Token = "0x400108C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AkEnvironment_CompareByPriority s_compareByPriority;

	[Token(Token = "0x400108D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static AkEnvironment_CompareBySelectionAlgorithm s_compareBySelectionAlgorithm;

	[Token(Token = "0x400108E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool excludeOthers;

	[Token(Token = "0x400108F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
	public bool isDefault;

	[Token(Token = "0x4001090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int m_auxBusID;

	[Token(Token = "0x4001091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Collider m_Collider;

	[Token(Token = "0x4001092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int priority;

	[Token(Token = "0x60015B0")]
	[Address(RVA = "0x4A935C", Offset = "0x4A935C", VA = "0x4A935C")]
	public AkEnvironment()
	{
	}

	[Token(Token = "0x60015B1")]
	[Address(RVA = "0x4A9364", Offset = "0x4A9364", VA = "0x4A9364")]
	public uint GetAuxBusID()
	{
		return default(uint);
	}

	[Token(Token = "0x60015B2")]
	[Address(RVA = "0x4A936C", Offset = "0x4A936C", VA = "0x4A936C")]
	public void SetAuxBusID(int in_auxBusID)
	{
	}

	[Token(Token = "0x60015B3")]
	[Address(RVA = "0x4A9374", Offset = "0x4A9374", VA = "0x4A9374")]
	public float GetAuxSendValueForPosition(Vector3 in_position)
	{
		return default(float);
	}

	[Token(Token = "0x60015B4")]
	[Address(RVA = "0x4A937C", Offset = "0x4A937C", VA = "0x4A937C")]
	public Collider GetCollider()
	{
		return null;
	}

	[Token(Token = "0x60015B5")]
	[Address(RVA = "0x4A9384", Offset = "0x4A9384", VA = "0x4A9384")]
	public void Awake()
	{
	}
}
[Token(Token = "0x20002B2")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x16D6A8", Offset = "0x16D6A8")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x16D6A8", Offset = "0x16D6A8")]
[ExecuteInEditMode]
public class AkEnvironmentPortal : MonoBehaviour
{
	[Token(Token = "0x4001093")]
	public const int MAX_ENVIRONMENTS_PER_PORTAL = 2;

	[Token(Token = "0x4001094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 axis;

	[Token(Token = "0x4001095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AkEnvironment[] environments;

	[Token(Token = "0x60015BB")]
	[Address(RVA = "0x4A961C", Offset = "0x4A961C", VA = "0x4A961C")]
	public AkEnvironmentPortal()
	{
	}

	[Token(Token = "0x60015BC")]
	[Address(RVA = "0x4A96DC", Offset = "0x4A96DC", VA = "0x4A96DC")]
	public float GetAuxSendValueForPosition(Vector3 in_position, int index)
	{
		return default(float);
	}
}
[Token(Token = "0x20002B3")]
public class AkEventCallbackMsg
{
	[Token(Token = "0x4001096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public AkCallbackInfo info;

	[Token(Token = "0x4001097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject sender;

	[Token(Token = "0x4001098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AkCallbackType type;

	[Token(Token = "0x60015BD")]
	[Address(RVA = "0x4A9CA4", Offset = "0x4A9CA4", VA = "0x4A9CA4")]
	public AkEventCallbackMsg()
	{
	}
}
[Token(Token = "0x20002B4")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x16D758", Offset = "0x16D758")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x16D758", Offset = "0x16D758")]
public class AkEvent : AkUnityEventHandler
{
	[Token(Token = "0x4001099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AkActionOnEventType actionOnEventType;

	[Token(Token = "0x400109A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public AkCurveInterpolation curveInterpolation;

	[Token(Token = "0x400109B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool enableActionOnEvent;

	[Token(Token = "0x400109C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int eventID;

	[Token(Token = "0x400109D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AkEventCallbackData m_callbackData;

	[Token(Token = "0x400109E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public uint playingId;

	[Token(Token = "0x400109F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject soundEmitterObject;

	[Token(Token = "0x40010A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float transitionDuration;

	[Token(Token = "0x60015BE")]
	[Address(RVA = "0x492C34", Offset = "0x492C34", VA = "0x492C34")]
	public AkEvent()
	{
	}

	[Token(Token = "0x60015BF")]
	[Address(RVA = "0x4A99E4", Offset = "0x4A99E4", VA = "0x4A99E4")]
	private void Callback(object in_cookie, AkCallbackType in_type, AkCallbackInfo in_info)
	{
	}

	[Token(Token = "0x60015C0")]
	[Address(RVA = "0x493CE4", Offset = "0x493CE4", VA = "0x493CE4", Slot = "4")]
	public override void HandleEvent(GameObject in_gameObject)
	{
	}

	[Token(Token = "0x60015C1")]
	[Address(RVA = "0x4A9CAC", Offset = "0x4A9CAC", VA = "0x4A9CAC")]
	public void Stop(int _transitionDuration)
	{
	}

	[Token(Token = "0x60015C2")]
	[Address(RVA = "0x4A9CB4", Offset = "0x4A9CB4", VA = "0x4A9CB4")]
	public void Stop(int _transitionDuration, AkCurveInterpolation _curveInterpolation)
	{
	}
}
[Token(Token = "0x20002B5")]
public class AkEventCallbackData : ScriptableObject
{
	[Token(Token = "0x40010A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public List<int> callbackFlags;

	[Token(Token = "0x40010A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<string> callbackFunc;

	[Token(Token = "0x40010A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public List<GameObject> callbackGameObj;

	[Token(Token = "0x40010A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int uFlags;

	[Token(Token = "0x60015C3")]
	[Address(RVA = "0x4A9D70", Offset = "0x4A9D70", VA = "0x4A9D70")]
	public AkEventCallbackData()
	{
	}
}
[Token(Token = "0x20002B6")]
public class WwiseEventTracker
{
	[Token(Token = "0x40010A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float currentDuration;

	[Token(Token = "0x40010A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float currentDurationProportion;

	[Token(Token = "0x40010A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool eventIsPlaying;

	[Token(Token = "0x40010A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public bool fadeoutTriggered;

	[Token(Token = "0x40010A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public uint playingID;

	[Token(Token = "0x40010AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float previousEventStartTime;

	[Token(Token = "0x60015C4")]
	[Address(RVA = "0x4D6378", Offset = "0x4D6378", VA = "0x4D6378")]
	public WwiseEventTracker()
	{
	}

	[Token(Token = "0x60015C5")]
	[Address(RVA = "0x4D6394", Offset = "0x4D6394", VA = "0x4D6394")]
	public void CallbackHandler(object in_cookie, AkCallbackType in_type, object in_info)
	{
	}
}
[Serializable]
[Token(Token = "0x20002B7")]
public class AkEventPlayable : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x40010AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private readonly WwiseEventTracker eventTracker;

	[Token(Token = "0x40010AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Event akEvent;

	[Token(Token = "0x40010AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private float blendInDuration;

	[Token(Token = "0x40010AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float blendOutDuration;

	[Token(Token = "0x40010AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float easeInDuration;

	[Token(Token = "0x40010B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float easeOutDuration;

	[Token(Token = "0x40010B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public ExposedReference<GameObject> emitterObjectRef;

	[Token(Token = "0x40010B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float eventDurationMax;

	[Token(Token = "0x40010B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float eventDurationMin;

	[Token(Token = "0x40010B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool overrideTrackEmitterObject;

	[Token(Token = "0x40010B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private TimelineClip owningClip;

	[Token(Token = "0x40010B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool retriggerEvent;

	[Token(Token = "0x1700022E")]
	public TimelineClip OwningClip
	{
		[Token(Token = "0x60015C7")]
		[Address(RVA = "0x4AA068", Offset = "0x4AA068", VA = "0x4AA068")]
		get
		{
			return null;
		}
		[Token(Token = "0x60015C8")]
		[Address(RVA = "0x4AA070", Offset = "0x4AA070", VA = "0x4AA070")]
		set
		{
		}
	}

	[Token(Token = "0x1700022F")]
	public override double duration
	{
		[Token(Token = "0x60015C9")]
		[Address(RVA = "0x4AA078", Offset = "0x4AA078", VA = "0x4AA078", Slot = "7")]
		get
		{
			return default(double);
		}
	}

	[Token(Token = "0x17000230")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x60015CA")]
		[Address(RVA = "0x4AA09C", Offset = "0x4AA09C", VA = "0x4AA09C", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x60015C6")]
	[Address(RVA = "0x4A9FDC", Offset = "0x4A9FDC", VA = "0x4A9FDC")]
	public AkEventPlayable()
	{
	}

	[Token(Token = "0x60015CB")]
	[Address(RVA = "0x4AA0AC", Offset = "0x4AA0AC", VA = "0x4AA0AC")]
	public void setEaseInDuration(float d)
	{
	}

	[Token(Token = "0x60015CC")]
	[Address(RVA = "0x4AA0B4", Offset = "0x4AA0B4", VA = "0x4AA0B4")]
	public void setEaseOutDuration(float d)
	{
	}

	[Token(Token = "0x60015CD")]
	[Address(RVA = "0x4AA0BC", Offset = "0x4AA0BC", VA = "0x4AA0BC")]
	public void setBlendInDuration(float d)
	{
	}

	[Token(Token = "0x60015CE")]
	[Address(RVA = "0x4AA0C4", Offset = "0x4AA0C4", VA = "0x4AA0C4")]
	public void setBlendOutDuration(float d)
	{
	}

	[Token(Token = "0x60015CF")]
	[Address(RVA = "0x4AA0CC", Offset = "0x4AA0CC", VA = "0x4AA0CC", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x60015D0")]
	[Address(RVA = "0x4AA22C", Offset = "0x4AA22C", VA = "0x4AA22C")]
	public void initializeBehaviour(PlayableGraph graph, AkEventPlayableBehavior b, GameObject owner)
	{
	}
}
[Token(Token = "0x20002B8")]
public class AkEventPlayableBehavior : PlayableBehaviour
{
	[Token(Token = "0x20002B9")]
	public enum AkPlayableAction
	{
		[Token(Token = "0x40010C6")]
		None = 0,
		[Token(Token = "0x40010C7")]
		Playback = 1,
		[Token(Token = "0x40010C8")]
		Retrigger = 2,
		[Token(Token = "0x40010C9")]
		Stop = 4,
		[Token(Token = "0x40010CA")]
		DelayedStop = 8,
		[Token(Token = "0x40010CB")]
		Seek = 0x10,
		[Token(Token = "0x40010CC")]
		FadeIn = 0x20,
		[Token(Token = "0x40010CD")]
		FadeOut = 0x40
	}

	[Token(Token = "0x40010B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int scrubPlaybackLengthMs;

	[Token(Token = "0x40010B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public Event akEvent;

	[Token(Token = "0x40010B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float akEventMaxDuration;

	[Token(Token = "0x40010BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float akEventMinDuration;

	[Token(Token = "0x40010BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float blendInDuration;

	[Token(Token = "0x40010BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float blendOutDuration;

	[Token(Token = "0x40010BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float easeInDuration;

	[Token(Token = "0x40010BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float easeOutDuration;

	[Token(Token = "0x40010BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public GameObject eventObject;

	[Token(Token = "0x40010C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool eventShouldRetrigger;

	[Token(Token = "0x40010C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public WwiseEventTracker eventTracker;

	[Token(Token = "0x40010C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float lastEffectiveWeight;

	[Token(Token = "0x40010C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool overrideTrackEmittorObject;

	[Token(Token = "0x40010C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public uint requiredActions;

	[Token(Token = "0x60015D1")]
	[Address(RVA = "0x4AA390", Offset = "0x4AA390", VA = "0x4AA390")]
	public AkEventPlayableBehavior()
	{
	}

	[Token(Token = "0x60015D2")]
	[Address(RVA = "0x4AA3B0", Offset = "0x4AA3B0", VA = "0x4AA3B0", Slot = "7")]
	public override void PrepareFrame(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x60015D3")]
	[Address(RVA = "0x4AA7C4", Offset = "0x4AA7C4", VA = "0x4AA7C4", Slot = "5")]
	public override void OnBehaviourPlay(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x60015D4")]
	[Address(RVA = "0x4AAB00", Offset = "0x4AAB00", VA = "0x4AAB00", Slot = "6")]
	public override void OnBehaviourPause(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x60015D5")]
	[Address(RVA = "0x4AACB0", Offset = "0x4AACB0", VA = "0x4AACB0", Slot = "8")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x60015D6")]
	[Address(RVA = "0x4AAF9C", Offset = "0x4AAF9C", VA = "0x4AAF9C")]
	private bool actionIsRequired(AkPlayableAction actionType)
	{
		return default(bool);
	}

	[Token(Token = "0x60015D7")]
	[Address(RVA = "0x4AA5E8", Offset = "0x4AA5E8", VA = "0x4AA5E8")]
	private bool ShouldPlay(Playable playable)
	{
		return default(bool);
	}

	[Token(Token = "0x60015D8")]
	[Address(RVA = "0x4AB6D0", Offset = "0x4AB6D0", VA = "0x4AB6D0")]
	private bool fadeInRequired(float currentClipTime)
	{
		return default(bool);
	}

	[Token(Token = "0x60015D9")]
	[Address(RVA = "0x4AA74C", Offset = "0x4AA74C", VA = "0x4AA74C")]
	private void checkForFadeIn(float currentClipTime)
	{
	}

	[Token(Token = "0x60015DA")]
	[Address(RVA = "0x4AB70C", Offset = "0x4AB70C", VA = "0x4AB70C")]
	private void checkForFadeInImmediate(float currentClipTime)
	{
	}

	[Token(Token = "0x60015DB")]
	[Address(RVA = "0x4AB73C", Offset = "0x4AB73C", VA = "0x4AB73C")]
	private bool fadeOutRequired(Playable playable)
	{
		return default(bool);
	}

	[Token(Token = "0x60015DC")]
	[Address(RVA = "0x4AB81C", Offset = "0x4AB81C", VA = "0x4AB81C")]
	private void checkForFadeOutImmediate(Playable playable)
	{
	}

	[Token(Token = "0x60015DD")]
	[Address(RVA = "0x4AA784", Offset = "0x4AA784", VA = "0x4AA784")]
	private void checkForFadeOut(Playable playable)
	{
	}

	[Token(Token = "0x60015DE")]
	[Address(RVA = "0x4AB430", Offset = "0x4AB430", VA = "0x4AB430")]
	protected void triggerFadeIn(float currentClipTime)
	{
	}

	[Token(Token = "0x60015DF")]
	[Address(RVA = "0x4AB5B8", Offset = "0x4AB5B8", VA = "0x4AB5B8")]
	protected void triggerFadeOut(float fadeDuration)
	{
	}

	[Token(Token = "0x60015E0")]
	[Address(RVA = "0x4AABA4", Offset = "0x4AABA4", VA = "0x4AABA4")]
	protected void stopEvent(int transition = 0)
	{
	}

	[Token(Token = "0x60015E1")]
	[Address(RVA = "0x4AAFAC", Offset = "0x4AAFAC", VA = "0x4AAFAC")]
	protected void playEvent()
	{
	}

	[Token(Token = "0x60015E2")]
	[Address(RVA = "0x4AB11C", Offset = "0x4AB11C", VA = "0x4AB11C")]
	protected void retriggerEvent(Playable playable)
	{
	}

	[Token(Token = "0x60015E3")]
	[Address(RVA = "0x4AA98C", Offset = "0x4AA98C", VA = "0x4AA98C")]
	protected float getProportionalTime(Playable playable)
	{
		return default(float);
	}

	[Token(Token = "0x60015E4")]
	[Address(RVA = "0x4AB2D8", Offset = "0x4AB2D8", VA = "0x4AB2D8")]
	protected float seekToTime(Playable playable)
	{
		return default(float);
	}
}
[Token(Token = "0x20002BA")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x16D818", Offset = "0x16D818")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x16D818", Offset = "0x16D818")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0x16D818", Offset = "0x16D818")]
public class AkEventTrack : TrackAsset
{
	[Token(Token = "0x60015E6")]
	[Address(RVA = "0x4AB974", Offset = "0x4AB974", VA = "0x4AB974")]
	public AkEventTrack()
	{
	}

	[Token(Token = "0x60015E7")]
	[Address(RVA = "0x4AB9F8", Offset = "0x4AB9F8", VA = "0x4AB9F8", Slot = "15")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x60015E8")]
	[Address(RVA = "0x4ABB20", Offset = "0x4ABB20", VA = "0x4ABB20")]
	public void setFadeTimes()
	{
	}

	[Token(Token = "0x60015E9")]
	[Address(RVA = "0x4ABF08", Offset = "0x4ABF08", VA = "0x4ABF08")]
	public void setOwnerClips()
	{
	}

	[Token(Token = "0x60015EA")]
	[Address(RVA = "0x4AC280", Offset = "0x4AC280", VA = "0x4AC280")]
	public double getBlendInTime(AkEventPlayable playableClip)
	{
		return default(double);
	}

	[Token(Token = "0x60015EB")]
	[Address(RVA = "0x4AC698", Offset = "0x4AC698", VA = "0x4AC698")]
	public double getBlendOutTime(AkEventPlayable playableClip)
	{
		return default(double);
	}

	[Token(Token = "0x60015EC")]
	[Address(RVA = "0x4ACAB0", Offset = "0x4ACAB0", VA = "0x4ACAB0")]
	public double getEaseInTime(AkEventPlayable playableClip)
	{
		return default(double);
	}

	[Token(Token = "0x60015ED")]
	[Address(RVA = "0x4ACEC8", Offset = "0x4ACEC8", VA = "0x4ACEC8")]
	public double getEaseOutTime(AkEventPlayable playableClip)
	{
		return default(double);
	}
}
[Token(Token = "0x20002BB")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x16D8F0", Offset = "0x16D8F0")]
[DisallowMultipleComponent]
[ExecuteInEditMode]
public class AkGameObj : MonoBehaviour
{
	[Token(Token = "0x40010CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private AkGameObjListenerList m_listeners;

	[Token(Token = "0x40010CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool isEnvironmentAware;

	[Token(Token = "0x40010D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	[SerializeField]
	private bool isStaticObject;

	[Token(Token = "0x40010D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Collider m_Collider;

	[Token(Token = "0x40010D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AkGameObjEnvironmentData m_envData;

	[Token(Token = "0x40010D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private AkGameObjPositionData m_posData;

	[Token(Token = "0x40010D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AkGameObjPositionOffsetData m_positionOffsetData;

	[Token(Token = "0x40010D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool isRegistered;

	[Token(Token = "0x40010D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AkGameObjPosOffsetData m_posOffsetData;

	[Token(Token = "0x40010D7")]
	private const int AK_NUM_LISTENERS = 8;

	[Token(Token = "0x40010D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private int listenerMask;

	[Token(Token = "0x17000231")]
	public bool IsUsingDefaultListeners
	{
		[Token(Token = "0x60015EF")]
		[Address(RVA = "0x4A8308", Offset = "0x4A8308", VA = "0x4A8308")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000232")]
	public List<AkAudioListener> ListenerList
	{
		[Token(Token = "0x60015F0")]
		[Address(RVA = "0x4A8328", Offset = "0x4A8328", VA = "0x4A8328")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60015EE")]
	[Address(RVA = "0x4ADEC4", Offset = "0x4ADEC4", VA = "0x4ADEC4")]
	public AkGameObj()
	{
	}

	[Token(Token = "0x60015F1")]
	[Address(RVA = "0x497EF8", Offset = "0x497EF8", VA = "0x497EF8")]
	internal void AddListener(AkAudioListener listener)
	{
	}

	[Token(Token = "0x60015F2")]
	[Address(RVA = "0x497F30", Offset = "0x497F30", VA = "0x497F30")]
	internal void RemoveListener(AkAudioListener listener)
	{
	}

	[Token(Token = "0x60015F3")]
	[Address(RVA = "0x497AEC", Offset = "0x497AEC", VA = "0x497AEC")]
	public AKRESULT Register()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015F4")]
	[Address(RVA = "0x4ADFD8", Offset = "0x4ADFD8", VA = "0x4ADFD8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60015F5")]
	[Address(RVA = "0x4AE874", Offset = "0x4AE874", VA = "0x4AE874")]
	private void CheckStaticStatus()
	{
	}

	[Token(Token = "0x60015F6")]
	[Address(RVA = "0x4AE878", Offset = "0x4AE878", VA = "0x4AE878")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60015F7")]
	[Address(RVA = "0x4AE890", Offset = "0x4AE890", VA = "0x4AE890")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60015F8")]
	[Address(RVA = "0x4AEA58", Offset = "0x4AEA58", VA = "0x4AEA58")]
	private void Update()
	{
	}

	[Token(Token = "0x60015F9")]
	[Address(RVA = "0x4AEDF4", Offset = "0x4AEDF4", VA = "0x4AEDF4", Slot = "4")]
	public virtual Vector3 GetPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60015FA")]
	[Address(RVA = "0x4AEF90", Offset = "0x4AEF90", VA = "0x4AEF90", Slot = "5")]
	public virtual Vector3 GetForward()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60015FB")]
	[Address(RVA = "0x4AEFCC", Offset = "0x4AEFCC", VA = "0x4AEFCC", Slot = "6")]
	public virtual Vector3 GetUpward()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60015FC")]
	[Address(RVA = "0x4AF008", Offset = "0x4AF008", VA = "0x4AF008")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60015FD")]
	[Address(RVA = "0x4AF024", Offset = "0x4AF024", VA = "0x4AF024")]
	private void OnTriggerExit(Collider other)
	{
	}
}
[Token(Token = "0x20002BC")]
public class AkGameObjEnvironmentData
{
	[Token(Token = "0x40010D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private readonly List<AkEnvironment> activeEnvironments;

	[Token(Token = "0x40010DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private readonly List<AkEnvironment> activeEnvironmentsFromPortals;

	[Token(Token = "0x40010DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private readonly List<AkEnvironmentPortal> activePortals;

	[Token(Token = "0x40010DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private readonly AkAuxSendArray auxSendValues;

	[Token(Token = "0x40010DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 lastPosition;

	[Token(Token = "0x40010DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool hasEnvironmentListChanged;

	[Token(Token = "0x40010DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	private bool hasActivePortalListChanged;

	[Token(Token = "0x40010E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
	private bool hasSentZero;

	[Token(Token = "0x60015FE")]
	[Address(RVA = "0x4AE270", Offset = "0x4AE270", VA = "0x4AE270")]
	public AkGameObjEnvironmentData()
	{
	}

	[Token(Token = "0x60015FF")]
	[Address(RVA = "0x4AF344", Offset = "0x4AF344", VA = "0x4AF344")]
	private void AddHighestPriorityEnvironmentsFromPortals(Vector3 position)
	{
	}

	[Token(Token = "0x6001600")]
	[Address(RVA = "0x4AF618", Offset = "0x4AF618", VA = "0x4AF618")]
	private void AddHighestPriorityEnvironments(Vector3 position)
	{
	}

	[Token(Token = "0x6001601")]
	[Address(RVA = "0x4AE53C", Offset = "0x4AE53C", VA = "0x4AE53C")]
	public void UpdateAuxSend(GameObject gameObject, Vector3 position)
	{
	}

	[Token(Token = "0x6001602")]
	[Address(RVA = "0x4AF7F4", Offset = "0x4AF7F4", VA = "0x4AF7F4")]
	private void TryAddEnvironment(AkEnvironment env)
	{
	}

	[Token(Token = "0x6001603")]
	[Address(RVA = "0x4AF9F8", Offset = "0x4AF9F8", VA = "0x4AF9F8")]
	private void RemoveEnvironment(AkEnvironment env)
	{
	}

	[Token(Token = "0x6001604")]
	[Address(RVA = "0x4AE3C0", Offset = "0x4AE3C0", VA = "0x4AE3C0")]
	public void AddAkEnvironment(Collider environmentCollider, Collider gameObjectCollider)
	{
	}

	[Token(Token = "0x6001605")]
	[Address(RVA = "0x4AFAA8", Offset = "0x4AFAA8", VA = "0x4AFAA8")]
	private bool AkEnvironmentBelongsToActivePortals(AkEnvironment env)
	{
		return default(bool);
	}

	[Token(Token = "0x6001606")]
	[Address(RVA = "0x4AF048", Offset = "0x4AF048", VA = "0x4AF048")]
	public void RemoveAkEnvironment(Collider environmentCollider, Collider gameObjectCollider)
	{
	}
}
[Serializable]
[Token(Token = "0x20002BD")]
public class AkGameObjListenerList : AkAudioListener.BaseListenerList
{
	[NonSerialized]
	[Token(Token = "0x40010E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private AkGameObj akGameObj;

	[Token(Token = "0x40010E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	public List<AkAudioListener> initialListenerList;

	[Token(Token = "0x40010E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public bool useDefaultListeners;

	[Token(Token = "0x6001607")]
	[Address(RVA = "0x4ADF48", Offset = "0x4ADF48", VA = "0x4ADF48")]
	public AkGameObjListenerList()
	{
	}

	[Token(Token = "0x6001608")]
	[Address(RVA = "0x4AFC1C", Offset = "0x4AFC1C", VA = "0x4AFC1C")]
	public void SetUseDefaultListeners(bool useDefault)
	{
	}

	[Token(Token = "0x6001609")]
	[Address(RVA = "0x4AE720", Offset = "0x4AE720", VA = "0x4AE720")]
	public void Init(AkGameObj akGameObj)
	{
	}

	[Token(Token = "0x600160A")]
	[Address(RVA = "0x4AFE5C", Offset = "0x4AFE5C", VA = "0x4AFE5C", Slot = "4")]
	public override bool Add(AkAudioListener listener)
	{
		return default(bool);
	}

	[Token(Token = "0x600160B")]
	[Address(RVA = "0x4AFF84", Offset = "0x4AFF84", VA = "0x4AFF84", Slot = "5")]
	public override bool Remove(AkAudioListener listener)
	{
		return default(bool);
	}
}
[Token(Token = "0x20002BE")]
public class AkGameObjPositionData
{
	[Token(Token = "0x40010E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public Vector3 forward;

	[Token(Token = "0x40010E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector3 position;

	[Token(Token = "0x40010E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 up;

	[Token(Token = "0x600160C")]
	[Address(RVA = "0x4AE268", Offset = "0x4AE268", VA = "0x4AE268")]
	public AkGameObjPositionData()
	{
	}
}
[Serializable]
[Token(Token = "0x20002BF")]
public class AkGameObjPositionOffsetData
{
	[Token(Token = "0x40010E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public bool KeepMe;

	[Token(Token = "0x40010E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 positionOffset;

	[Token(Token = "0x600160D")]
	[Address(RVA = "0x4B00AC", Offset = "0x4B00AC", VA = "0x4B00AC")]
	public AkGameObjPositionOffsetData(bool IReallyWantToBeConstructed = false)
	{
	}
}
[Token(Token = "0x20002C0")]
public class AkGameObjPosOffsetData : ScriptableObject
{
	[Token(Token = "0x40010E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 positionOffset;

	[Token(Token = "0x600160E")]
	[Address(RVA = "0x4B00CC", Offset = "0x4B00CC", VA = "0x4B00CC")]
	public AkGameObjPosOffsetData()
	{
	}
}
[Token(Token = "0x20002C1")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x16D9A8", Offset = "0x16D9A8")]
[DisallowMultipleComponent]
[ExecuteInEditMode]
public class AkInitializer : MonoBehaviour
{
	[Token(Token = "0x40010EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AkInitializer ms_Instance;

	[Token(Token = "0x40010EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public AkWwiseInitializationSettings InitializationSettings;

	[Token(Token = "0x600160F")]
	[Address(RVA = "0x4B1DC0", Offset = "0x4B1DC0", VA = "0x4B1DC0")]
	public AkInitializer()
	{
	}

	[Token(Token = "0x6001610")]
	[Address(RVA = "0x4B1DC8", Offset = "0x4B1DC8", VA = "0x4B1DC8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001611")]
	[Address(RVA = "0x4B1F04", Offset = "0x4B1F04", VA = "0x4B1F04")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001612")]
	[Address(RVA = "0x4B2018", Offset = "0x4B2018", VA = "0x4B2018")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001613")]
	[Address(RVA = "0x4B20EC", Offset = "0x4B20EC", VA = "0x4B20EC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001614")]
	[Address(RVA = "0x4B21B4", Offset = "0x4B21B4", VA = "0x4B21B4")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x6001615")]
	[Address(RVA = "0x4B2290", Offset = "0x4B2290", VA = "0x4B2290")]
	private void OnApplicationFocus(bool focus)
	{
	}

	[Token(Token = "0x6001616")]
	[Address(RVA = "0x4B236C", Offset = "0x4B236C", VA = "0x4B236C")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6001617")]
	[Address(RVA = "0x4B2440", Offset = "0x4B2440", VA = "0x4B2440")]
	private void LateUpdate()
	{
	}
}
[Token(Token = "0x20002C2")]
public class AkMemBankLoader : MonoBehaviour
{
	[Token(Token = "0x200035B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16DA20", Offset = "0x16DA20")]
	private sealed class <LoadFile>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object>
	{
		[Token(Token = "0x40013AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal uint <in_uInMemoryBankSize>__0;

		[Token(Token = "0x40013AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal AKRESULT <result>__0;

		[Token(Token = "0x40013AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal AkMemBankLoader $this;

		[Token(Token = "0x40013AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal object $current;

		[Token(Token = "0x40013B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal bool $disposing;

		[Token(Token = "0x40013B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal int $PC;

		[Token(Token = "0x1700030D")]
		private object System.Collections.Generic.IEnumerator<object>.Current
		{
			[Token(Token = "0x6001942")]
			[Address(RVA = "0x4B56BC", Offset = "0x4B56BC", VA = "0x4B56BC", Slot = "8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700030E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001943")]
			[Address(RVA = "0x4B56C4", Offset = "0x4B56C4", VA = "0x4B56C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001940")]
		[Address(RVA = "0x4B4FF0", Offset = "0x4B4FF0", VA = "0x4B4FF0")]
		[DebuggerHidden]
		public <LoadFile>c__Iterator0()
		{
		}

		[Token(Token = "0x6001941")]
		[Address(RVA = "0x4B50C0", Offset = "0x4B50C0", VA = "0x4B50C0", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001944")]
		[Address(RVA = "0x4B56CC", Offset = "0x4B56CC", VA = "0x4B56CC", Slot = "7")]
		[DebuggerHidden]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001945")]
		[Address(RVA = "0x4B56E0", Offset = "0x4B56E0", VA = "0x4B56E0", Slot = "6")]
		[DebuggerHidden]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x40010EC")]
	private const int WaitMs = 50;

	[Token(Token = "0x40010ED")]
	private const long AK_BANK_PLATFORM_DATA_ALIGNMENT = 16L;

	[Token(Token = "0x40010EE")]
	private const long AK_BANK_PLATFORM_DATA_ALIGNMENT_MASK = 15L;

	[Token(Token = "0x40010EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string bankName;

	[Token(Token = "0x40010F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool isLocalizedBank;

	[Token(Token = "0x40010F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private string m_bankPath;

	[Token(Token = "0x40010F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public uint ms_bankID;

	[Token(Token = "0x40010F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private IntPtr ms_pInMemoryBankPtr;

	[Token(Token = "0x40010F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GCHandle ms_pinnedArray;

	[Token(Token = "0x40010F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private WWW ms_www;

	[Token(Token = "0x6001618")]
	[Address(RVA = "0x4B4BD8", Offset = "0x4B4BD8", VA = "0x4B4BD8")]
	public AkMemBankLoader()
	{
	}

	[Token(Token = "0x6001619")]
	[Address(RVA = "0x4B4C80", Offset = "0x4B4C80", VA = "0x4B4C80")]
	private void Start()
	{
	}

	[Token(Token = "0x600161A")]
	[Address(RVA = "0x4B4E18", Offset = "0x4B4E18", VA = "0x4B4E18")]
	public void LoadNonLocalizedBank(string in_bankFilename)
	{
	}

	[Token(Token = "0x600161B")]
	[Address(RVA = "0x4B4C98", Offset = "0x4B4C98", VA = "0x4B4C98")]
	public void LoadLocalizedBank(string in_bankFilename)
	{
	}

	[Token(Token = "0x600161C")]
	[Address(RVA = "0x4B4F70", Offset = "0x4B4F70", VA = "0x4B4F70")]
	[DebuggerHidden]
	private IEnumerator LoadFile()
	{
		return null;
	}

	[Token(Token = "0x600161D")]
	[Address(RVA = "0x4B4F48", Offset = "0x4B4F48", VA = "0x4B4F48")]
	private void DoLoadBank(string in_bankPath)
	{
	}

	[Token(Token = "0x600161E")]
	[Address(RVA = "0x4B4FF8", Offset = "0x4B4FF8", VA = "0x4B4FF8")]
	private void OnDestroy()
	{
	}
}
[Token(Token = "0x20002C3")]
public abstract class AkObstructionOcclusion : MonoBehaviour
{
	[Token(Token = "0x20002C4")]
	protected class ObstructionOcclusionValue
	{
		[Token(Token = "0x40010FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float currentValue;

		[Token(Token = "0x40010FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float targetValue;

		[Token(Token = "0x6001627")]
		[Address(RVA = "0x2C5AAC", Offset = "0x2C5AAC", VA = "0x2C5AAC")]
		public ObstructionOcclusionValue()
		{
		}

		[Token(Token = "0x6001628")]
		[Address(RVA = "0x2C6418", Offset = "0x2C6418", VA = "0x2C6418")]
		public bool Update(float fadeRate)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40010F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private readonly List<AkAudioListener> listenersToRemove;

	[Token(Token = "0x40010F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private readonly Dictionary<AkAudioListener, ObstructionOcclusionValue> ObstructionOcclusionValues;

	[Token(Token = "0x40010F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	protected float fadeRate;

	[Token(Token = "0x40010F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16DA80", Offset = "0x16DA80")]
	public float fadeTime;

	[Token(Token = "0x40010FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16DAB4", Offset = "0x16DAB4")]
	public LayerMask LayerMask;

	[Token(Token = "0x40010FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16DAE8", Offset = "0x16DAE8")]
	public float maxDistance;

	[Token(Token = "0x40010FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16DB1C", Offset = "0x16DB1C")]
	public float refreshInterval;

	[Token(Token = "0x40010FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float refreshTime;

	[Token(Token = "0x600161F")]
	[Address(RVA = "0x2C55C4", Offset = "0x2C55C4", VA = "0x2C55C4")]
	protected AkObstructionOcclusion()
	{
	}

	[Token(Token = "0x6001620")]
	[Address(RVA = "0x2C56B0", Offset = "0x2C56B0", VA = "0x2C56B0")]
	protected void InitIntervalsAndFadeRates()
	{
	}

	[Token(Token = "0x6001621")]
	[Address(RVA = "0x2C56EC", Offset = "0x2C56EC", VA = "0x2C56EC")]
	protected void UpdateObstructionOcclusionValues(List<AkAudioListener> listenerList)
	{
	}

	[Token(Token = "0x6001622")]
	[Address(RVA = "0x2C5AB4", Offset = "0x2C5AB4", VA = "0x2C5AB4")]
	protected void UpdateObstructionOcclusionValues(AkAudioListener listener)
	{
	}

	[Token(Token = "0x6001623")]
	[Address(RVA = "0x2C5E14", Offset = "0x2C5E14", VA = "0x2C5E14")]
	private void CastRays()
	{
	}

	[Token(Token = "0x6001624")]
	protected abstract void UpdateObstructionOcclusionValuesForListeners();

	[Token(Token = "0x6001625")]
	protected abstract void SetObstructionOcclusion(KeyValuePair<AkAudioListener, ObstructionOcclusionValue> ObsOccPair);

	[Token(Token = "0x6001626")]
	[Address(RVA = "0x2C6254", Offset = "0x2C6254", VA = "0x2C6254")]
	private void Update()
	{
	}
}
[Token(Token = "0x20002C5")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x16DB50", Offset = "0x16DB50")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x16DB50", Offset = "0x16DB50")]
[DisallowMultipleComponent]
public class AkRoom : AkUnityEventHandler
{
	[Token(Token = "0x20002C6")]
	public class PriorityList
	{
		[Token(Token = "0x20002C7")]
		private class CompareByPriority : IComparer<AkRoom>
		{
			[Token(Token = "0x600163B")]
			[Address(RVA = "0x2D8E10", Offset = "0x2D8E10", VA = "0x2D8E10")]
			public CompareByPriority()
			{
			}

			[Token(Token = "0x600163C")]
			[Address(RVA = "0x2D8E18", Offset = "0x2D8E18", VA = "0x2D8E18", Slot = "5")]
			public virtual int Compare(AkRoom a, AkRoom b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4001108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly CompareByPriority s_compareByPriority;

		[Token(Token = "0x4001109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public List<AkRoom> rooms;

		[Token(Token = "0x6001633")]
		[Address(RVA = "0x2D8910", Offset = "0x2D8910", VA = "0x2D8910")]
		public PriorityList()
		{
		}

		[Token(Token = "0x6001634")]
		[Address(RVA = "0x2D899C", Offset = "0x2D899C", VA = "0x2D899C")]
		public ulong GetHighestPriorityRoomID()
		{
			return default(ulong);
		}

		[Token(Token = "0x6001635")]
		[Address(RVA = "0x2D8A98", Offset = "0x2D8A98", VA = "0x2D8A98")]
		public AkRoom GetHighestPriorityRoom()
		{
			return null;
		}

		[Token(Token = "0x6001636")]
		[Address(RVA = "0x2D8B48", Offset = "0x2D8B48", VA = "0x2D8B48")]
		public void Add(AkRoom room)
		{
		}

		[Token(Token = "0x6001637")]
		[Address(RVA = "0x2D8CF4", Offset = "0x2D8CF4", VA = "0x2D8CF4")]
		public void Remove(AkRoom room)
		{
		}

		[Token(Token = "0x6001638")]
		[Address(RVA = "0x2D8D70", Offset = "0x2D8D70", VA = "0x2D8D70")]
		public bool Contains(AkRoom room)
		{
			return default(bool);
		}

		[Token(Token = "0x6001639")]
		[Address(RVA = "0x2D8BE4", Offset = "0x2D8BE4", VA = "0x2D8BE4")]
		public int BinarySearch(AkRoom room)
		{
			return default(int);
		}
	}

	[Token(Token = "0x4001100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ulong INVALID_ROOM_ID;

	[Token(Token = "0x4001101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int RoomCount;

	[Token(Token = "0x4001102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16DC00", Offset = "0x16DC00")]
	public int priority;

	[Token(Token = "0x4001103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public AuxBus reverbAuxBus;

	[Token(Token = "0x4001104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16DC34", Offset = "0x16DC34")]
	public float reverbLevel;

	[Token(Token = "0x4001105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16DC4C", Offset = "0x16DC4C")]
	public float wallOcclusion;

	[Token(Token = "0x4001106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Event roomToneEvent;

	[Token(Token = "0x4001107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16DC64", Offset = "0x16DC64")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16DC64", Offset = "0x16DC64")]
	public float roomToneAuxSend;

	[Token(Token = "0x17000233")]
	public static bool IsSpatialAudioEnabled
	{
		[Token(Token = "0x600162A")]
		[Address(RVA = "0x2D78CC", Offset = "0x2D78CC", VA = "0x2D78CC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001629")]
	[Address(RVA = "0x2D783C", Offset = "0x2D783C", VA = "0x2D783C")]
	public AkRoom()
	{
	}

	[Token(Token = "0x600162B")]
	[Address(RVA = "0x2D79F0", Offset = "0x2D79F0", VA = "0x2D79F0")]
	public ulong GetID()
	{
		return default(ulong);
	}

	[Token(Token = "0x600162C")]
	[Address(RVA = "0x2D7A80", Offset = "0x2D7A80", VA = "0x2D7A80")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600162D")]
	[Address(RVA = "0x2D84AC", Offset = "0x2D84AC", VA = "0x2D84AC", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x600162E")]
	[Address(RVA = "0x2D84B4", Offset = "0x2D84B4", VA = "0x2D84B4", Slot = "4")]
	public override void HandleEvent(GameObject in_gameObject)
	{
	}

	[Token(Token = "0x600162F")]
	[Address(RVA = "0x2D84EC", Offset = "0x2D84EC", VA = "0x2D84EC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001630")]
	[Address(RVA = "0x2D8664", Offset = "0x2D8664", VA = "0x2D8664")]
	private void OnTriggerEnter(Collider in_other)
	{
	}

	[Token(Token = "0x6001631")]
	[Address(RVA = "0x2D8784", Offset = "0x2D8784", VA = "0x2D8784")]
	private void OnTriggerExit(Collider in_other)
	{
	}
}
[Token(Token = "0x20002C8")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x16DCB4", Offset = "0x16DCB4")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x16DCB4", Offset = "0x16DCB4")]
[DisallowMultipleComponent]
public class AkRoomPortal : AkUnityEventHandler
{
	[Token(Token = "0x400110A")]
	public const int MAX_ROOMS_PER_PORTAL = 2;

	[Token(Token = "0x400110B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly AkVector extent;

	[Token(Token = "0x400110C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private readonly AkTransform portalTransform;

	[Token(Token = "0x400110D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ulong backRoomID;

	[Token(Token = "0x400110E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<int> closePortalTriggerList;

	[Token(Token = "0x400110F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ulong frontRoomID;

	[Token(Token = "0x4001110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AkRoom[] rooms;

	[Token(Token = "0x600163D")]
	[Address(RVA = "0x2DA128", Offset = "0x2DA128", VA = "0x2DA128")]
	public AkRoomPortal()
	{
	}

	[Token(Token = "0x600163E")]
	[Address(RVA = "0x2DA2BC", Offset = "0x2DA2BC", VA = "0x2DA2BC")]
	public ulong GetID()
	{
		return default(ulong);
	}

	[Token(Token = "0x600163F")]
	[Address(RVA = "0x2DA2D4", Offset = "0x2DA2D4", VA = "0x2DA2D4", Slot = "5")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6001640")]
	[Address(RVA = "0x2DAA60", Offset = "0x2DAA60", VA = "0x2DAA60", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6001641")]
	[Address(RVA = "0x2DAAFC", Offset = "0x2DAAFC", VA = "0x2DAAFC", Slot = "4")]
	public override void HandleEvent(GameObject in_gameObject)
	{
	}

	[Token(Token = "0x6001642")]
	[Address(RVA = "0x2DAA58", Offset = "0x2DAA58", VA = "0x2DAA58")]
	public void ClosePortal(GameObject in_gameObject)
	{
	}

	[Token(Token = "0x6001643")]
	[Address(RVA = "0x2DAB14", Offset = "0x2DAB14", VA = "0x2DAB14", Slot = "7")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x6001644")]
	[Address(RVA = "0x2DAB04", Offset = "0x2DAB04", VA = "0x2DAB04")]
	public void Open()
	{
	}

	[Token(Token = "0x6001645")]
	[Address(RVA = "0x2DAB0C", Offset = "0x2DAB0C", VA = "0x2DAB0C")]
	public void Close()
	{
	}

	[Token(Token = "0x6001646")]
	[Address(RVA = "0x2DAC00", Offset = "0x2DAC00", VA = "0x2DAC00")]
	private void ActivatePortal(bool active)
	{
	}

	[Token(Token = "0x6001647")]
	[Address(RVA = "0x2DAE9C", Offset = "0x2DAE9C", VA = "0x2DAE9C")]
	public void FindOverlappingRooms(AkRoom.PriorityList[] roomList)
	{
	}

	[Token(Token = "0x6001648")]
	[Address(RVA = "0x2DB1E4", Offset = "0x2DB1E4", VA = "0x2DB1E4")]
	private void FillRoomList(Vector3 center, Vector3 halfExtents, AkRoom.PriorityList list)
	{
	}

	[Token(Token = "0x6001649")]
	[Address(RVA = "0x2DB444", Offset = "0x2DB444", VA = "0x2DB444")]
	public void SetFrontRoom(AkRoom room)
	{
	}

	[Token(Token = "0x600164A")]
	[Address(RVA = "0x2DB610", Offset = "0x2DB610", VA = "0x2DB610")]
	public void SetBackRoom(AkRoom room)
	{
	}

	[Token(Token = "0x600164B")]
	[Address(RVA = "0x2DB7DC", Offset = "0x2DB7DC", VA = "0x2DB7DC")]
	public void UpdateOverlappingRooms()
	{
	}
}
[Token(Token = "0x20002C9")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x16DD64", Offset = "0x16DD64")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x16DD64", Offset = "0x16DD64")]
public class AkRoomPortalObstruction : AkObstructionOcclusion
{
	[Token(Token = "0x4001111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private AkRoomPortal m_portal;

	[Token(Token = "0x600164C")]
	[Address(RVA = "0x2DBC9C", Offset = "0x2DBC9C", VA = "0x2DBC9C")]
	public AkRoomPortalObstruction()
	{
	}

	[Token(Token = "0x600164D")]
	[Address(RVA = "0x2DBCA0", Offset = "0x2DBCA0", VA = "0x2DBCA0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600164E")]
	[Address(RVA = "0x2DBD34", Offset = "0x2DBD34", VA = "0x2DBD34", Slot = "4")]
	protected override void UpdateObstructionOcclusionValuesForListeners()
	{
	}

	[Token(Token = "0x600164F")]
	[Address(RVA = "0x2DBDC4", Offset = "0x2DBDC4", VA = "0x2DBDC4", Slot = "5")]
	protected override void SetObstructionOcclusion(KeyValuePair<AkAudioListener, ObstructionOcclusionValue> ObsOccPair)
	{
	}
}
[Serializable]
[Token(Token = "0x20002CA")]
public class AkRTPCPlayable : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x4001112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool overrideTrackObject;

	[Token(Token = "0x4001113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private TimelineClip owningClip;

	[Token(Token = "0x4001114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private RTPC RTPC;

	[Token(Token = "0x4001115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ExposedReference<GameObject> RTPCObject;

	[Token(Token = "0x4001116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool setRTPCGlobally;

	[Token(Token = "0x4001117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public AkRTPCPlayableBehaviour template;

	[Token(Token = "0x17000234")]
	public RTPC Parameter
	{
		[Token(Token = "0x6001651")]
		[Address(RVA = "0x2DBFE4", Offset = "0x2DBFE4", VA = "0x2DBFE4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001652")]
		[Address(RVA = "0x2DBFEC", Offset = "0x2DBFEC", VA = "0x2DBFEC")]
		set
		{
		}
	}

	[Token(Token = "0x17000235")]
	public TimelineClip OwningClip
	{
		[Token(Token = "0x6001653")]
		[Address(RVA = "0x2DBFF4", Offset = "0x2DBFF4", VA = "0x2DBFF4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001654")]
		[Address(RVA = "0x2DBFFC", Offset = "0x2DBFFC", VA = "0x2DBFFC")]
		set
		{
		}
	}

	[Token(Token = "0x17000236")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x6001655")]
		[Address(RVA = "0x2DC004", Offset = "0x2DC004", VA = "0x2DC004", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x6001650")]
	[Address(RVA = "0x2DBF60", Offset = "0x2DBF60", VA = "0x2DBF60")]
	public AkRTPCPlayable()
	{
	}

	[Token(Token = "0x6001656")]
	[Address(RVA = "0x2DC00C", Offset = "0x2DC00C", VA = "0x2DC00C", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject go)
	{
		return default(Playable);
	}

	[Token(Token = "0x6001657")]
	[Address(RVA = "0x2DC140", Offset = "0x2DC140", VA = "0x2DC140")]
	public void InitializeBehavior(PlayableGraph graph, ref AkRTPCPlayableBehaviour b, GameObject owner)
	{
	}
}
[Serializable]
[Token(Token = "0x20002CB")]
public class AkRTPCPlayableBehaviour : PlayableBehaviour
{
	[Token(Token = "0x4001118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private bool m_OverrideTrackObject;

	[Token(Token = "0x4001119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private RTPC m_Parameter;

	[Token(Token = "0x400111A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private GameObject m_RTPCObject;

	[Token(Token = "0x400111B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private bool m_SetRTPCGlobally;

	[Token(Token = "0x400111C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float RTPCValue;

	[Token(Token = "0x17000237")]
	public bool setRTPCGlobally
	{
		[Token(Token = "0x6001659")]
		[Address(RVA = "0x2DC240", Offset = "0x2DC240", VA = "0x2DC240")]
		set
		{
		}
	}

	[Token(Token = "0x17000238")]
	public bool overrideTrackObject
	{
		[Token(Token = "0x600165A")]
		[Address(RVA = "0x2DC238", Offset = "0x2DC238", VA = "0x2DC238")]
		set
		{
		}
	}

	[Token(Token = "0x17000239")]
	public GameObject rtpcObject
	{
		[Token(Token = "0x600165C")]
		[Address(RVA = "0x2DC258", Offset = "0x2DC258", VA = "0x2DC258")]
		get
		{
			return null;
		}
		[Token(Token = "0x600165B")]
		[Address(RVA = "0x2DC248", Offset = "0x2DC248", VA = "0x2DC248")]
		set
		{
		}
	}

	[Token(Token = "0x1700023A")]
	public RTPC parameter
	{
		[Token(Token = "0x600165D")]
		[Address(RVA = "0x2DC250", Offset = "0x2DC250", VA = "0x2DC250")]
		set
		{
		}
	}

	[Token(Token = "0x6001658")]
	[Address(RVA = "0x2DBFDC", Offset = "0x2DBFDC", VA = "0x2DBFDC")]
	public AkRTPCPlayableBehaviour()
	{
	}

	[Token(Token = "0x600165E")]
	[Address(RVA = "0x2DC260", Offset = "0x2DC260", VA = "0x2DC260", Slot = "8")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}
}
[Token(Token = "0x20002CC")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x16DE04", Offset = "0x16DE04")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x16DE04", Offset = "0x16DE04")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0x16DE04", Offset = "0x16DE04")]
public class AkRTPCTrack : TrackAsset
{
	[Token(Token = "0x400111D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public RTPC Parameter;

	[Token(Token = "0x600165F")]
	[Address(RVA = "0x2DC404", Offset = "0x2DC404", VA = "0x2DC404")]
	public AkRTPCTrack()
	{
	}

	[Token(Token = "0x6001660")]
	[Address(RVA = "0x2DC488", Offset = "0x2DC488", VA = "0x2DC488", Slot = "15")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x6001661")]
	[Address(RVA = "0x2DC57C", Offset = "0x2DC57C", VA = "0x2DC57C")]
	public void setPlayableProperties()
	{
	}

	[Token(Token = "0x6001662")]
	[Address(RVA = "0x2DC914", Offset = "0x2DC914", VA = "0x2DC914")]
	public void OnValidate()
	{
	}
}
[Token(Token = "0x20002CD")]
public class AkSoundEngineController
{
	[Token(Token = "0x400111E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AkSoundEngineController ms_Instance;

	[Token(Token = "0x1700023B")]
	public static AkSoundEngineController Instance
	{
		[Token(Token = "0x6001664")]
		[Address(RVA = "0x301090", Offset = "0x301090", VA = "0x301090")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001663")]
	[Address(RVA = "0x301088", Offset = "0x301088", VA = "0x301088")]
	public AkSoundEngineController()
	{
	}

	[Token(Token = "0x6001665")]
	[Address(RVA = "0x301130", Offset = "0x301130", VA = "0x301130", Slot = "1")]
	~AkSoundEngineController()
	{
	}

	[Token(Token = "0x6001666")]
	[Address(RVA = "0x3011AC", Offset = "0x3011AC", VA = "0x3011AC")]
	public static string GetDecodedBankFolder()
	{
		return null;
	}

	[Token(Token = "0x6001667")]
	[Address(RVA = "0x301208", Offset = "0x301208", VA = "0x301208")]
	public static string GetDecodedBankFullPath()
	{
		return null;
	}

	[Token(Token = "0x6001668")]
	[Address(RVA = "0x3012EC", Offset = "0x3012EC", VA = "0x3012EC")]
	public void LateUpdate()
	{
	}

	[Token(Token = "0x6001669")]
	[Address(RVA = "0x3013D4", Offset = "0x3013D4", VA = "0x3013D4")]
	public void Init(AkInitializer akInitializer)
	{
	}

	[Token(Token = "0x600166A")]
	[Address(RVA = "0x3014E4", Offset = "0x3014E4", VA = "0x3014E4")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x600166B")]
	[Address(RVA = "0x3014E8", Offset = "0x3014E8", VA = "0x3014E8")]
	public void Terminate()
	{
	}

	[Token(Token = "0x600166C")]
	[Address(RVA = "0x301568", Offset = "0x301568", VA = "0x301568")]
	public void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x600166D")]
	[Address(RVA = "0x301684", Offset = "0x301684", VA = "0x301684")]
	public void OnApplicationFocus(bool focus)
	{
	}

	[Token(Token = "0x600166E")]
	[Address(RVA = "0x301570", Offset = "0x301570", VA = "0x301570")]
	private static void ActivateAudio(bool activate)
	{
	}
}
[Token(Token = "0x20002CE")]
public abstract class AkSpatialAudioBase : MonoBehaviour
{
	[Token(Token = "0x400111F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private readonly AkRoom.PriorityList roomPriorityList;

	[Token(Token = "0x600166F")]
	[Address(RVA = "0x261A60", Offset = "0x261A60", VA = "0x261A60")]
	protected AkSpatialAudioBase()
	{
	}

	[Token(Token = "0x6001670")]
	[Address(RVA = "0x261ADC", Offset = "0x261ADC", VA = "0x261ADC")]
	protected void SetGameObjectInHighestPriorityRoom()
	{
	}

	[Token(Token = "0x6001671")]
	[Address(RVA = "0x261BAC", Offset = "0x261BAC", VA = "0x261BAC")]
	public void EnteredRoom(AkRoom room)
	{
	}

	[Token(Token = "0x6001672")]
	[Address(RVA = "0x261BE8", Offset = "0x261BE8", VA = "0x261BE8")]
	public void ExitedRoom(AkRoom room)
	{
	}

	[Token(Token = "0x6001673")]
	[Address(RVA = "0x261C24", Offset = "0x261C24", VA = "0x261C24")]
	public void SetGameObjectInRoom()
	{
	}
}
[Token(Token = "0x20002CF")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x16DED8", Offset = "0x16DED8")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x16DED8", Offset = "0x16DED8")]
public class AkSpatialAudioEmitter : AkSpatialAudioBase
{
	[Token(Token = "0x4001120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x16DF78", Offset = "0x16DF78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16DF78", Offset = "0x16DF78")]
	public AuxBus reflectAuxBus;

	[Token(Token = "0x4001121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16DFD8", Offset = "0x16DFD8")]
	public float reflectionMaxPathLength;

	[Token(Token = "0x4001122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16E00C", Offset = "0x16E00C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16E00C", Offset = "0x16E00C")]
	public float reflectionsAuxBusGain;

	[Token(Token = "0x4001123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16E05C", Offset = "0x16E05C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16E05C", Offset = "0x16E05C")]
	public uint reflectionsOrder;

	[Token(Token = "0x4001124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x16E0B0", Offset = "0x16E0B0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16E0B0", Offset = "0x16E0B0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16E0B0", Offset = "0x16E0B0")]
	public float roomReverbAuxBusGain;

	[Token(Token = "0x4001125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x16E128", Offset = "0x16E128")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16E128", Offset = "0x16E128")]
	public uint diffractionMaxEdges;

	[Token(Token = "0x4001126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16E188", Offset = "0x16E188")]
	public uint diffractionMaxPaths;

	[Token(Token = "0x4001127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16E1BC", Offset = "0x16E1BC")]
	public uint diffractionMaxPathLength;

	[Token(Token = "0x6001674")]
	[Address(RVA = "0x261DC0", Offset = "0x261DC0", VA = "0x261DC0")]
	public AkSpatialAudioEmitter()
	{
	}

	[Token(Token = "0x6001675")]
	[Address(RVA = "0x261DE0", Offset = "0x261DE0", VA = "0x261DE0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001676")]
	[Address(RVA = "0x262050", Offset = "0x262050", VA = "0x262050")]
	private void OnDisable()
	{
	}
}
[Token(Token = "0x20002D0")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x16E1F0", Offset = "0x16E1F0")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x16E1F0", Offset = "0x16E1F0")]
[DisallowMultipleComponent]
public class AkSpatialAudioListener : AkSpatialAudioBase
{
	[Token(Token = "0x20002D1")]
	public class SpatialAudioListenerList
	{
		[Token(Token = "0x400112B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private readonly List<AkSpatialAudioListener> listenerList;

		[Token(Token = "0x1700023E")]
		public List<AkSpatialAudioListener> ListenerList
		{
			[Token(Token = "0x600167F")]
			[Address(RVA = "0x263114", Offset = "0x263114", VA = "0x263114")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600167E")]
		[Address(RVA = "0x263088", Offset = "0x263088", VA = "0x263088")]
		public SpatialAudioListenerList()
		{
		}

		[Token(Token = "0x6001680")]
		[Address(RVA = "0x262D4C", Offset = "0x262D4C", VA = "0x262D4C")]
		public bool Add(AkSpatialAudioListener listener)
		{
			return default(bool);
		}

		[Token(Token = "0x6001681")]
		[Address(RVA = "0x262F00", Offset = "0x262F00", VA = "0x262F00")]
		public bool Remove(AkSpatialAudioListener listener)
		{
			return default(bool);
		}

		[Token(Token = "0x6001682")]
		[Address(RVA = "0x26311C", Offset = "0x26311C", VA = "0x26311C")]
		private void Refresh()
		{
		}
	}

	[Token(Token = "0x4001128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AkSpatialAudioListener s_SpatialAudioListener;

	[Token(Token = "0x4001129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly SpatialAudioListenerList spatialAudioListeners;

	[Token(Token = "0x400112A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private AkAudioListener AkAudioListener;

	[Token(Token = "0x1700023C")]
	public static AkAudioListener TheSpatialAudioListener
	{
		[Token(Token = "0x6001678")]
		[Address(RVA = "0x262A80", Offset = "0x262A80", VA = "0x262A80")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700023D")]
	public static SpatialAudioListenerList SpatialAudioListeners
	{
		[Token(Token = "0x6001679")]
		[Address(RVA = "0x262BB0", Offset = "0x262BB0", VA = "0x262BB0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001677")]
	[Address(RVA = "0x262A7C", Offset = "0x262A7C", VA = "0x262A7C")]
	public AkSpatialAudioListener()
	{
	}

	[Token(Token = "0x600167A")]
	[Address(RVA = "0x262C3C", Offset = "0x262C3C", VA = "0x262C3C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600167B")]
	[Address(RVA = "0x262CA4", Offset = "0x262CA4", VA = "0x262CA4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600167C")]
	[Address(RVA = "0x262E58", Offset = "0x262E58", VA = "0x262E58")]
	private void OnDisable()
	{
	}
}
[Token(Token = "0x20002D2")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x16E2A0", Offset = "0x16E2A0")]
public class AkState : AkUnityEventHandler
{
	[Token(Token = "0x400112C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int groupID;

	[Token(Token = "0x400112D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int valueID;

	[Token(Token = "0x6001683")]
	[Address(RVA = "0x26357C", Offset = "0x26357C", VA = "0x26357C")]
	public AkState()
	{
	}

	[Token(Token = "0x6001684")]
	[Address(RVA = "0x2636B4", Offset = "0x2636B4", VA = "0x2636B4", Slot = "4")]
	public override void HandleEvent(GameObject in_gameObject)
	{
	}
}
[Token(Token = "0x20002D3")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x16E2D4", Offset = "0x16E2D4")]
[DisallowMultipleComponent]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x16E2D4", Offset = "0x16E2D4")]
public class AkSurfaceReflector : MonoBehaviour
{
	[Token(Token = "0x400112E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16E384", Offset = "0x16E384")]
	public AcousticTexture AcousticTexture;

	[Token(Token = "0x400112F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x16E3B8", Offset = "0x16E3B8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16E3B8", Offset = "0x16E3B8")]
	public bool EnableDiffraction;

	[Token(Token = "0x4001130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16E418", Offset = "0x16E418")]
	public bool EnableDiffractionOnBoundaryEdges;

	[Token(Token = "0x4001131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private MeshFilter MeshFilter;

	[Token(Token = "0x6001685")]
	[Address(RVA = "0x263B3C", Offset = "0x263B3C", VA = "0x263B3C")]
	public AkSurfaceReflector()
	{
	}

	[Token(Token = "0x6001686")]
	[Address(RVA = "0x263B44", Offset = "0x263B44", VA = "0x263B44")]
	public static ulong GetAkGeometrySetID(MeshFilter meshFilter)
	{
		return default(ulong);
	}

	[Token(Token = "0x6001687")]
	[Address(RVA = "0x263B70", Offset = "0x263B70", VA = "0x263B70")]
	public static void AddGeometrySet(AcousticTexture acousticTexture, MeshFilter meshFilter, bool enableDiffraction, bool enableDiffractionOnBoundaryEdges)
	{
	}

	[Token(Token = "0x6001688")]
	[Address(RVA = "0x264FAC", Offset = "0x264FAC", VA = "0x264FAC")]
	public static void RemoveGeometrySet(MeshFilter meshFilter)
	{
	}

	[Token(Token = "0x6001689")]
	[Address(RVA = "0x2650A8", Offset = "0x2650A8", VA = "0x2650A8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600168A")]
	[Address(RVA = "0x265110", Offset = "0x265110", VA = "0x265110")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600168B")]
	[Address(RVA = "0x265150", Offset = "0x265150", VA = "0x265150")]
	private void OnDisable()
	{
	}
}
[Token(Token = "0x20002D4")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x16E44C", Offset = "0x16E44C")]
public class AkSwitch : AkUnityEventHandler
{
	[Token(Token = "0x4001132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int groupID;

	[Token(Token = "0x4001133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int valueID;

	[Token(Token = "0x600168C")]
	[Address(RVA = "0x265158", Offset = "0x265158", VA = "0x265158")]
	public AkSwitch()
	{
	}

	[Token(Token = "0x600168D")]
	[Address(RVA = "0x2651D8", Offset = "0x2651D8", VA = "0x2651D8", Slot = "4")]
	public override void HandleEvent(GameObject in_gameObject)
	{
	}
}
[Token(Token = "0x20002D5")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x16E480", Offset = "0x16E480")]
[DisallowMultipleComponent]
[ExecuteInEditMode]
public class AkTerminator : MonoBehaviour
{
	[Token(Token = "0x600168E")]
	[Address(RVA = "0x2656D8", Offset = "0x2656D8", VA = "0x2656D8")]
	public AkTerminator()
	{
	}
}
[Token(Token = "0x20002D6")]
public abstract class AkTriggerBase : MonoBehaviour
{
	[Token(Token = "0x20002D7")]
	public delegate void Trigger(GameObject in_gameObject);

	[Token(Token = "0x4001134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Trigger triggerDelegate;

	[Token(Token = "0x600168F")]
	[Address(RVA = "0x267340", Offset = "0x267340", VA = "0x267340")]
	protected AkTriggerBase()
	{
	}

	[Token(Token = "0x6001690")]
	[Address(RVA = "0x267348", Offset = "0x267348", VA = "0x267348")]
	public static Dictionary<uint, string> GetAllDerivedTypes()
	{
		return null;
	}
}
[Token(Token = "0x20002D8")]
public class AkTriggerCollisionEnter : AkTriggerBase
{
	[Token(Token = "0x4001135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject triggerObject;

	[Token(Token = "0x6001695")]
	[Address(RVA = "0x267D24", Offset = "0x267D24", VA = "0x267D24")]
	public AkTriggerCollisionEnter()
	{
	}

	[Token(Token = "0x6001696")]
	[Address(RVA = "0x267D2C", Offset = "0x267D2C", VA = "0x267D2C")]
	private void OnCollisionEnter(Collision in_other)
	{
	}

	[Token(Token = "0x6001697")]
	[Address(RVA = "0x267E7C", Offset = "0x267E7C", VA = "0x267E7C")]
	private void OnTriggerEnter(Collider in_other)
	{
	}
}
[Token(Token = "0x20002D9")]
public class AkTriggerCollisionExit : AkTriggerBase
{
	[Token(Token = "0x4001136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject triggerObject;

	[Token(Token = "0x6001698")]
	[Address(RVA = "0x267FCC", Offset = "0x267FCC", VA = "0x267FCC")]
	public AkTriggerCollisionExit()
	{
	}

	[Token(Token = "0x6001699")]
	[Address(RVA = "0x267FD4", Offset = "0x267FD4", VA = "0x267FD4")]
	private void OnCollisionExit(Collision in_other)
	{
	}
}
[Token(Token = "0x20002DA")]
public class AkTriggerDisable : AkTriggerBase
{
	[Token(Token = "0x600169A")]
	[Address(RVA = "0x268124", Offset = "0x268124", VA = "0x268124")]
	public AkTriggerDisable()
	{
	}

	[Token(Token = "0x600169B")]
	[Address(RVA = "0x26812C", Offset = "0x26812C", VA = "0x26812C")]
	private void OnDisable()
	{
	}
}
[Token(Token = "0x20002DB")]
public class AkTriggerEnable : AkTriggerBase
{
	[Token(Token = "0x600169C")]
	[Address(RVA = "0x268144", Offset = "0x268144", VA = "0x268144")]
	public AkTriggerEnable()
	{
	}

	[Token(Token = "0x600169D")]
	[Address(RVA = "0x26814C", Offset = "0x26814C", VA = "0x26814C")]
	private void OnEnable()
	{
	}
}
[Token(Token = "0x20002DC")]
public class AkTriggerEnter : AkTriggerBase
{
	[Token(Token = "0x4001137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject triggerObject;

	[Token(Token = "0x600169E")]
	[Address(RVA = "0x268164", Offset = "0x268164", VA = "0x268164")]
	public AkTriggerEnter()
	{
	}

	[Token(Token = "0x600169F")]
	[Address(RVA = "0x26816C", Offset = "0x26816C", VA = "0x26816C")]
	private void OnTriggerEnter(Collider in_other)
	{
	}
}
[Token(Token = "0x20002DD")]
public class AkTriggerExit : AkTriggerBase
{
	[Token(Token = "0x4001138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject triggerObject;

	[Token(Token = "0x60016A0")]
	[Address(RVA = "0x2682BC", Offset = "0x2682BC", VA = "0x2682BC")]
	public AkTriggerExit()
	{
	}

	[Token(Token = "0x60016A1")]
	[Address(RVA = "0x2682C4", Offset = "0x2682C4", VA = "0x2682C4")]
	private void OnTriggerExit(Collider in_other)
	{
	}
}
[Token(Token = "0x20002DE")]
public class AkTriggerMouseDown : AkTriggerBase
{
	[Token(Token = "0x60016A2")]
	[Address(RVA = "0x268414", Offset = "0x268414", VA = "0x268414")]
	public AkTriggerMouseDown()
	{
	}

	[Token(Token = "0x60016A3")]
	[Address(RVA = "0x26841C", Offset = "0x26841C", VA = "0x26841C")]
	private void OnMouseDown()
	{
	}
}
[Token(Token = "0x20002DF")]
public class AkTriggerMouseEnter : AkTriggerBase
{
	[Token(Token = "0x60016A4")]
	[Address(RVA = "0x268434", Offset = "0x268434", VA = "0x268434")]
	public AkTriggerMouseEnter()
	{
	}

	[Token(Token = "0x60016A5")]
	[Address(RVA = "0x26843C", Offset = "0x26843C", VA = "0x26843C")]
	private void OnMouseEnter()
	{
	}
}
[Token(Token = "0x20002E0")]
public class AkTriggerMouseExit : AkTriggerBase
{
	[Token(Token = "0x60016A6")]
	[Address(RVA = "0x268454", Offset = "0x268454", VA = "0x268454")]
	public AkTriggerMouseExit()
	{
	}

	[Token(Token = "0x60016A7")]
	[Address(RVA = "0x26845C", Offset = "0x26845C", VA = "0x26845C")]
	private void OnMouseExit()
	{
	}
}
[Token(Token = "0x20002E1")]
public class AkTriggerMouseUp : AkTriggerBase
{
	[Token(Token = "0x60016A8")]
	[Address(RVA = "0x268474", Offset = "0x268474", VA = "0x268474")]
	public AkTriggerMouseUp()
	{
	}

	[Token(Token = "0x60016A9")]
	[Address(RVA = "0x26847C", Offset = "0x26847C", VA = "0x26847C")]
	private void OnMouseUp()
	{
	}
}
[Token(Token = "0x20002E2")]
public abstract class AkUnityEventHandler : MonoBehaviour
{
	[Token(Token = "0x4001139")]
	public const int AWAKE_TRIGGER_ID = 1151176110;

	[Token(Token = "0x400113A")]
	public const int START_TRIGGER_ID = 1281810935;

	[Token(Token = "0x400113B")]
	public const int DESTROY_TRIGGER_ID = -358577003;

	[Token(Token = "0x400113C")]
	public const int MAX_NB_TRIGGERS = 32;

	[Token(Token = "0x400113D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<uint, string> triggerTypes;

	[Token(Token = "0x400113E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private bool didDestroy;

	[Token(Token = "0x400113F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<int> triggerList;

	[Token(Token = "0x4001140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool useOtherObject;

	[Token(Token = "0x60016AA")]
	[Address(RVA = "0x2635FC", Offset = "0x2635FC", VA = "0x2635FC")]
	protected AkUnityEventHandler()
	{
	}

	[Token(Token = "0x60016AB")]
	public abstract void HandleEvent(GameObject in_gameObject);

	[Token(Token = "0x60016AC")]
	[Address(RVA = "0x268494", Offset = "0x268494", VA = "0x268494", Slot = "5")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x60016AD")]
	[Address(RVA = "0x268C28", Offset = "0x268C28", VA = "0x268C28", Slot = "6")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x60016AE")]
	[Address(RVA = "0x268CC4", Offset = "0x268CC4", VA = "0x268CC4", Slot = "7")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x60016AF")]
	[Address(RVA = "0x268CD4", Offset = "0x268CD4", VA = "0x268CD4")]
	public void DoDestroy()
	{
	}

	[Token(Token = "0x60016B0")]
	[Address(RVA = "0x26857C", Offset = "0x26857C", VA = "0x26857C")]
	protected void RegisterTriggers(List<int> in_triggerList, AkTriggerBase.Trigger in_delegate)
	{
	}

	[Token(Token = "0x60016B1")]
	[Address(RVA = "0x268DC4", Offset = "0x268DC4", VA = "0x268DC4")]
	protected void UnregisterTriggers(List<int> in_triggerList, AkTriggerBase.Trigger in_delegate)
	{
	}
}
